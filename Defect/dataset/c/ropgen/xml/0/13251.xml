<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13251.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:6">PROTO4</name><argument_list pos:start="1:7" pos:end="1:18">(<argument pos:start="1:8" pos:end="1:17">_pack_2ch_</argument>)</argument_list></macro>

<macro pos:start="3:1" pos:end="3:18"><name pos:start="3:1" pos:end="3:6">PROTO4</name><argument_list pos:start="3:7" pos:end="3:18">(<argument pos:start="3:8" pos:end="3:17">_pack_6ch_</argument>)</argument_list></macro>

<macro pos:start="5:1" pos:end="5:18"><name pos:start="5:1" pos:end="5:6">PROTO4</name><argument_list pos:start="5:7" pos:end="5:18">(<argument pos:start="5:8" pos:end="5:17">_pack_8ch_</argument>)</argument_list></macro>

<macro pos:start="7:1" pos:end="7:20"><name pos:start="7:1" pos:end="7:6">PROTO4</name><argument_list pos:start="7:7" pos:end="7:20">(<argument pos:start="7:8" pos:end="7:19">_unpack_2ch_</argument>)</argument_list></macro>

<macro pos:start="9:1" pos:end="9:20"><name pos:start="9:1" pos:end="9:6">PROTO4</name><argument_list pos:start="9:7" pos:end="9:20">(<argument pos:start="9:8" pos:end="9:19">_unpack_6ch_</argument>)</argument_list></macro>



<function pos:start="13:1" pos:end="299:1"><type pos:start="13:1" pos:end="13:12"><name pos:start="13:1" pos:end="13:7">av_cold</name> <name pos:start="13:9" pos:end="13:12">void</name></type> <name pos:start="13:14" pos:end="13:40">swri_audio_convert_init_x86</name><parameter_list pos:start="13:41" pos:end="19:46">(<parameter pos:start="13:42" pos:end="13:64"><decl pos:start="13:42" pos:end="13:64"><type pos:start="13:42" pos:end="13:64"><name pos:start="13:42" pos:end="13:60"><name pos:start="13:42" pos:end="13:47">struct</name> <name pos:start="13:49" pos:end="13:60">AudioConvert</name></name> <modifier pos:start="13:62" pos:end="13:62">*</modifier></type><name pos:start="13:63" pos:end="13:64">ac</name></decl></parameter>,

                                 <parameter pos:start="15:34" pos:end="15:60"><decl pos:start="15:34" pos:end="15:60"><type pos:start="15:34" pos:end="15:60"><name pos:start="15:34" pos:end="15:52"><name pos:start="15:34" pos:end="15:37">enum</name> <name pos:start="15:39" pos:end="15:52">AVSampleFormat</name></name></type> <name pos:start="15:54" pos:end="15:60">out_fmt</name></decl></parameter>,

                                 <parameter pos:start="17:34" pos:end="17:59"><decl pos:start="17:34" pos:end="17:59"><type pos:start="17:34" pos:end="17:59"><name pos:start="17:34" pos:end="17:52"><name pos:start="17:34" pos:end="17:37">enum</name> <name pos:start="17:39" pos:end="17:52">AVSampleFormat</name></name></type> <name pos:start="17:54" pos:end="17:59">in_fmt</name></decl></parameter>,

                                 <parameter pos:start="19:34" pos:end="19:45"><decl pos:start="19:34" pos:end="19:45"><type pos:start="19:34" pos:end="19:45"><name pos:start="19:34" pos:end="19:36">int</name></type> <name pos:start="19:38" pos:end="19:45">channels</name></decl></parameter>)</parameter_list><block pos:start="19:47" pos:end="299:1">{<block_content pos:start="21:5" pos:end="297:5">

    <decl_stmt pos:start="21:5" pos:end="21:38"><decl pos:start="21:5" pos:end="21:37"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:16">mm_flags</name> <init pos:start="21:18" pos:end="21:37">= <expr pos:start="21:20" pos:end="21:37"><call pos:start="21:20" pos:end="21:37"><name pos:start="21:20" pos:end="21:35">av_get_cpu_flags</name><argument_list pos:start="21:36" pos:end="21:37">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="46:0"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:6">ac</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:14">simd_f</name></name><operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:20">NULL</name></expr>;</expr_stmt>



<comment type="line" pos:start="29:1" pos:end="29:23">//FIXME add memcpy case</comment>



<cpp:define pos:start="33:1" pos:end="45:5">#<cpp:directive pos:start="33:2" pos:end="33:7">define</cpp:directive> <cpp:macro pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:23">MULTI_CAPS_FUNC</name><parameter_list pos:start="33:24" pos:end="33:34">(<parameter pos:start="33:25" pos:end="33:28"><type pos:start="33:25" pos:end="33:28"><name pos:start="33:25" pos:end="33:28">flag</name></type></parameter>, <parameter pos:start="33:31" pos:end="33:33"><type pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:33">cap</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="35:5" pos:end="45:5">if (EXTERNAL_##flag(mm_flags)) {\

        if(   out_fmt == AV_SAMPLE_FMT_S32  &amp;&amp; in_fmt == AV_SAMPLE_FMT_S16 || out_fmt == AV_SAMPLE_FMT_S32P &amp;&amp; in_fmt == AV_SAMPLE_FMT_S16P)\

            ac-&gt;simd_f =  ff_int16_to_int32_a_ ## cap;\

        if(   out_fmt == AV_SAMPLE_FMT_S16  &amp;&amp; in_fmt == AV_SAMPLE_FMT_S32 || out_fmt == AV_SAMPLE_FMT_S16P &amp;&amp; in_fmt == AV_SAMPLE_FMT_S32P)\

            ac-&gt;simd_f =  ff_int32_to_int16_a_ ## cap;\

    }</cpp:value></cpp:define>



<macro pos:start="49:1" pos:end="49:25"><name pos:start="49:1" pos:end="49:15">MULTI_CAPS_FUNC</name><argument_list pos:start="49:16" pos:end="49:25">(<argument pos:start="49:17" pos:end="49:19">MMX</argument>, <argument pos:start="49:22" pos:end="49:24">mmx</argument>)</argument_list></macro>

<macro pos:start="51:1" pos:end="51:27"><name pos:start="51:1" pos:end="51:15">MULTI_CAPS_FUNC</name><argument_list pos:start="51:16" pos:end="51:27">(<argument pos:start="51:17" pos:end="51:20">SSE2</argument>, <argument pos:start="51:23" pos:end="51:26">sse2</argument>)</argument_list></macro>



    <if_stmt pos:start="55:5" pos:end="65:5"><if pos:start="55:5" pos:end="65:5">if<condition pos:start="55:7" pos:end="55:30">(<expr pos:start="55:8" pos:end="55:29"><call pos:start="55:8" pos:end="55:29"><name pos:start="55:8" pos:end="55:19">EXTERNAL_MMX</name><argument_list pos:start="55:20" pos:end="55:29">(<argument pos:start="55:21" pos:end="55:28"><expr pos:start="55:21" pos:end="55:28"><name pos:start="55:21" pos:end="55:28">mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:32" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:9">

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if<condition pos:start="57:11" pos:end="57:25">(<expr pos:start="57:12" pos:end="57:24"><name pos:start="57:12" pos:end="57:19">channels</name> <operator pos:start="57:21" pos:end="57:22">==</operator> <literal type="number" pos:start="57:24" pos:end="57:24">6</literal></expr>)</condition> <block pos:start="57:27" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:63">

            <if_stmt pos:start="59:13" pos:end="61:63"><if pos:start="59:13" pos:end="61:63">if<condition pos:start="59:15" pos:end="59:144">(   <expr pos:start="59:19" pos:end="59:143"><name pos:start="59:19" pos:end="59:25">out_fmt</name> <operator pos:start="59:27" pos:end="59:28">==</operator> <name pos:start="59:30" pos:end="59:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="59:49" pos:end="59:50">&amp;&amp;</operator> <name pos:start="59:52" pos:end="59:57">in_fmt</name> <operator pos:start="59:59" pos:end="59:60">==</operator> <name pos:start="59:62" pos:end="59:79">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="59:81" pos:end="59:82">||</operator> <name pos:start="59:84" pos:end="59:90">out_fmt</name> <operator pos:start="59:92" pos:end="59:93">==</operator> <name pos:start="59:95" pos:end="59:111">AV_SAMPLE_FMT_S32</name> <operator pos:start="59:113" pos:end="59:114">&amp;&amp;</operator> <name pos:start="59:116" pos:end="59:121">in_fmt</name> <operator pos:start="59:123" pos:end="59:124">==</operator> <name pos:start="59:126" pos:end="59:143">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:63"><block_content pos:start="61:17" pos:end="61:63">

                <expr_stmt pos:start="61:17" pos:end="61:63"><expr pos:start="61:17" pos:end="61:62"><name pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:18">ac</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:26">simd_f</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator>  <name pos:start="61:31" pos:end="61:62">ff_pack_6ch_float_to_float_a_mmx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="83:5"><if pos:start="67:5" pos:end="83:5">if<condition pos:start="67:7" pos:end="67:30">(<expr pos:start="67:8" pos:end="67:29"><call pos:start="67:8" pos:end="67:29"><name pos:start="67:8" pos:end="67:19">EXTERNAL_SSE</name><argument_list pos:start="67:20" pos:end="67:29">(<argument pos:start="67:21" pos:end="67:28"><expr pos:start="67:21" pos:end="67:28"><name pos:start="67:21" pos:end="67:28">mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:32" pos:end="83:5">{<block_content pos:start="69:9" pos:end="81:9">

        <if_stmt pos:start="69:9" pos:end="81:9"><if pos:start="69:9" pos:end="81:9">if<condition pos:start="69:11" pos:end="69:25">(<expr pos:start="69:12" pos:end="69:24"><name pos:start="69:12" pos:end="69:19">channels</name> <operator pos:start="69:21" pos:end="69:22">==</operator> <literal type="number" pos:start="69:24" pos:end="69:24">6</literal></expr>)</condition> <block pos:start="69:27" pos:end="81:9">{<block_content pos:start="71:13" pos:end="79:65">

            <if_stmt pos:start="71:13" pos:end="73:63"><if pos:start="71:13" pos:end="73:63">if<condition pos:start="71:15" pos:end="71:144">(   <expr pos:start="71:19" pos:end="71:143"><name pos:start="71:19" pos:end="71:25">out_fmt</name> <operator pos:start="71:27" pos:end="71:28">==</operator> <name pos:start="71:30" pos:end="71:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="71:49" pos:end="71:50">&amp;&amp;</operator> <name pos:start="71:52" pos:end="71:57">in_fmt</name> <operator pos:start="71:59" pos:end="71:60">==</operator> <name pos:start="71:62" pos:end="71:79">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="71:81" pos:end="71:82">||</operator> <name pos:start="71:84" pos:end="71:90">out_fmt</name> <operator pos:start="71:92" pos:end="71:93">==</operator> <name pos:start="71:95" pos:end="71:111">AV_SAMPLE_FMT_S32</name> <operator pos:start="71:113" pos:end="71:114">&amp;&amp;</operator> <name pos:start="71:116" pos:end="71:121">in_fmt</name> <operator pos:start="71:123" pos:end="71:124">==</operator> <name pos:start="71:126" pos:end="71:143">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:63"><block_content pos:start="73:17" pos:end="73:63">

                <expr_stmt pos:start="73:17" pos:end="73:63"><expr pos:start="73:17" pos:end="73:62"><name pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:18">ac</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:26">simd_f</name></name> <operator pos:start="73:28" pos:end="73:28">=</operator>  <name pos:start="73:31" pos:end="73:62">ff_pack_6ch_float_to_float_a_sse</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="77:13" pos:end="79:65"><if pos:start="77:13" pos:end="79:65">if<condition pos:start="77:15" pos:end="77:144">(   <expr pos:start="77:19" pos:end="77:143"><name pos:start="77:19" pos:end="77:25">out_fmt</name> <operator pos:start="77:27" pos:end="77:28">==</operator> <name pos:start="77:30" pos:end="77:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="77:50" pos:end="77:51">&amp;&amp;</operator> <name pos:start="77:53" pos:end="77:58">in_fmt</name> <operator pos:start="77:60" pos:end="77:61">==</operator> <name pos:start="77:63" pos:end="77:79">AV_SAMPLE_FMT_FLT</name> <operator pos:start="77:81" pos:end="77:82">||</operator> <name pos:start="77:84" pos:end="77:90">out_fmt</name> <operator pos:start="77:92" pos:end="77:93">==</operator> <name pos:start="77:95" pos:end="77:112">AV_SAMPLE_FMT_S32P</name> <operator pos:start="77:114" pos:end="77:115">&amp;&amp;</operator> <name pos:start="77:117" pos:end="77:122">in_fmt</name> <operator pos:start="77:124" pos:end="77:125">==</operator> <name pos:start="77:127" pos:end="77:143">AV_SAMPLE_FMT_S32</name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:65"><block_content pos:start="79:17" pos:end="79:65">

                <expr_stmt pos:start="79:17" pos:end="79:65"><expr pos:start="79:17" pos:end="79:64"><name pos:start="79:17" pos:end="79:26"><name pos:start="79:17" pos:end="79:18">ac</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:26">simd_f</name></name> <operator pos:start="79:28" pos:end="79:28">=</operator>  <name pos:start="79:31" pos:end="79:64">ff_unpack_6ch_float_to_float_a_sse</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="85:5" pos:end="215:5"><if pos:start="85:5" pos:end="215:5">if<condition pos:start="85:7" pos:end="85:31">(<expr pos:start="85:8" pos:end="85:30"><call pos:start="85:8" pos:end="85:30"><name pos:start="85:8" pos:end="85:20">EXTERNAL_SSE2</name><argument_list pos:start="85:21" pos:end="85:30">(<argument pos:start="85:22" pos:end="85:29"><expr pos:start="85:22" pos:end="85:29"><name pos:start="85:22" pos:end="85:29">mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:33" pos:end="215:5">{<block_content pos:start="87:9" pos:end="213:9">

        <if_stmt pos:start="87:9" pos:end="89:51"><if pos:start="87:9" pos:end="89:51">if<condition pos:start="87:11" pos:end="87:140">(   <expr pos:start="87:15" pos:end="87:139"><name pos:start="87:15" pos:end="87:21">out_fmt</name> <operator pos:start="87:23" pos:end="87:24">==</operator> <name pos:start="87:26" pos:end="87:42">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="87:45" pos:end="87:46">&amp;&amp;</operator> <name pos:start="87:48" pos:end="87:53">in_fmt</name> <operator pos:start="87:55" pos:end="87:56">==</operator> <name pos:start="87:58" pos:end="87:74">AV_SAMPLE_FMT_S32</name> <operator pos:start="87:76" pos:end="87:77">||</operator> <name pos:start="87:79" pos:end="87:85">out_fmt</name> <operator pos:start="87:87" pos:end="87:88">==</operator> <name pos:start="87:90" pos:end="87:107">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="87:109" pos:end="87:110">&amp;&amp;</operator> <name pos:start="87:112" pos:end="87:117">in_fmt</name> <operator pos:start="87:119" pos:end="87:120">==</operator> <name pos:start="87:122" pos:end="87:139">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:51"><block_content pos:start="89:13" pos:end="89:51">

            <expr_stmt pos:start="89:13" pos:end="89:51"><expr pos:start="89:13" pos:end="89:50"><name pos:start="89:13" pos:end="89:22"><name pos:start="89:13" pos:end="89:14">ac</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:22">simd_f</name></name> <operator pos:start="89:24" pos:end="89:24">=</operator>  <name pos:start="89:27" pos:end="89:50">ff_int32_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="91:9" pos:end="93:51"><if pos:start="91:9" pos:end="93:51">if<condition pos:start="91:11" pos:end="91:140">(   <expr pos:start="91:15" pos:end="91:139"><name pos:start="91:15" pos:end="91:21">out_fmt</name> <operator pos:start="91:23" pos:end="91:24">==</operator> <name pos:start="91:26" pos:end="91:42">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="91:45" pos:end="91:46">&amp;&amp;</operator> <name pos:start="91:48" pos:end="91:53">in_fmt</name> <operator pos:start="91:55" pos:end="91:56">==</operator> <name pos:start="91:58" pos:end="91:74">AV_SAMPLE_FMT_S16</name> <operator pos:start="91:76" pos:end="91:77">||</operator> <name pos:start="91:79" pos:end="91:85">out_fmt</name> <operator pos:start="91:87" pos:end="91:88">==</operator> <name pos:start="91:90" pos:end="91:107">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="91:109" pos:end="91:110">&amp;&amp;</operator> <name pos:start="91:112" pos:end="91:117">in_fmt</name> <operator pos:start="91:119" pos:end="91:120">==</operator> <name pos:start="91:122" pos:end="91:139">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:51"><block_content pos:start="93:13" pos:end="93:51">

            <expr_stmt pos:start="93:13" pos:end="93:51"><expr pos:start="93:13" pos:end="93:50"><name pos:start="93:13" pos:end="93:22"><name pos:start="93:13" pos:end="93:14">ac</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:22">simd_f</name></name> <operator pos:start="93:24" pos:end="93:24">=</operator>  <name pos:start="93:27" pos:end="93:50">ff_int16_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="95:9" pos:end="97:51"><if pos:start="95:9" pos:end="97:51">if<condition pos:start="95:11" pos:end="95:140">(   <expr pos:start="95:15" pos:end="95:139"><name pos:start="95:15" pos:end="95:21">out_fmt</name> <operator pos:start="95:23" pos:end="95:24">==</operator> <name pos:start="95:26" pos:end="95:42">AV_SAMPLE_FMT_S32</name>  <operator pos:start="95:45" pos:end="95:46">&amp;&amp;</operator> <name pos:start="95:48" pos:end="95:53">in_fmt</name> <operator pos:start="95:55" pos:end="95:56">==</operator> <name pos:start="95:58" pos:end="95:74">AV_SAMPLE_FMT_FLT</name> <operator pos:start="95:76" pos:end="95:77">||</operator> <name pos:start="95:79" pos:end="95:85">out_fmt</name> <operator pos:start="95:87" pos:end="95:88">==</operator> <name pos:start="95:90" pos:end="95:107">AV_SAMPLE_FMT_S32P</name> <operator pos:start="95:109" pos:end="95:110">&amp;&amp;</operator> <name pos:start="95:112" pos:end="95:117">in_fmt</name> <operator pos:start="95:119" pos:end="95:120">==</operator> <name pos:start="95:122" pos:end="95:139">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:51"><block_content pos:start="97:13" pos:end="97:51">

            <expr_stmt pos:start="97:13" pos:end="97:51"><expr pos:start="97:13" pos:end="97:50"><name pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:14">ac</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:22">simd_f</name></name> <operator pos:start="97:24" pos:end="97:24">=</operator>  <name pos:start="97:27" pos:end="97:50">ff_float_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="99:9" pos:end="101:51"><if pos:start="99:9" pos:end="101:51">if<condition pos:start="99:11" pos:end="99:140">(   <expr pos:start="99:15" pos:end="99:139"><name pos:start="99:15" pos:end="99:21">out_fmt</name> <operator pos:start="99:23" pos:end="99:24">==</operator> <name pos:start="99:26" pos:end="99:42">AV_SAMPLE_FMT_S16</name>  <operator pos:start="99:45" pos:end="99:46">&amp;&amp;</operator> <name pos:start="99:48" pos:end="99:53">in_fmt</name> <operator pos:start="99:55" pos:end="99:56">==</operator> <name pos:start="99:58" pos:end="99:74">AV_SAMPLE_FMT_FLT</name> <operator pos:start="99:76" pos:end="99:77">||</operator> <name pos:start="99:79" pos:end="99:85">out_fmt</name> <operator pos:start="99:87" pos:end="99:88">==</operator> <name pos:start="99:90" pos:end="99:107">AV_SAMPLE_FMT_S16P</name> <operator pos:start="99:109" pos:end="99:110">&amp;&amp;</operator> <name pos:start="99:112" pos:end="99:117">in_fmt</name> <operator pos:start="99:119" pos:end="99:120">==</operator> <name pos:start="99:122" pos:end="99:139">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:51"><block_content pos:start="101:13" pos:end="101:51">

            <expr_stmt pos:start="101:13" pos:end="101:51"><expr pos:start="101:13" pos:end="101:50"><name pos:start="101:13" pos:end="101:22"><name pos:start="101:13" pos:end="101:14">ac</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:22">simd_f</name></name> <operator pos:start="101:24" pos:end="101:24">=</operator>  <name pos:start="101:27" pos:end="101:50">ff_float_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="175:9"><if pos:start="105:9" pos:end="175:9">if<condition pos:start="105:11" pos:end="105:25">(<expr pos:start="105:12" pos:end="105:24"><name pos:start="105:12" pos:end="105:19">channels</name> <operator pos:start="105:21" pos:end="105:22">==</operator> <literal type="number" pos:start="105:24" pos:end="105:24">2</literal></expr>)</condition> <block pos:start="105:27" pos:end="175:9">{<block_content pos:start="107:13" pos:end="173:66">

            <if_stmt pos:start="107:13" pos:end="109:64"><if pos:start="107:13" pos:end="109:64">if<condition pos:start="107:15" pos:end="107:144">(   <expr pos:start="107:19" pos:end="107:143"><name pos:start="107:19" pos:end="107:25">out_fmt</name> <operator pos:start="107:27" pos:end="107:28">==</operator> <name pos:start="107:30" pos:end="107:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="107:49" pos:end="107:50">&amp;&amp;</operator> <name pos:start="107:52" pos:end="107:57">in_fmt</name> <operator pos:start="107:59" pos:end="107:60">==</operator> <name pos:start="107:62" pos:end="107:79">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="107:81" pos:end="107:82">||</operator> <name pos:start="107:84" pos:end="107:90">out_fmt</name> <operator pos:start="107:92" pos:end="107:93">==</operator> <name pos:start="107:95" pos:end="107:111">AV_SAMPLE_FMT_S32</name> <operator pos:start="107:113" pos:end="107:114">&amp;&amp;</operator> <name pos:start="107:116" pos:end="107:121">in_fmt</name> <operator pos:start="107:123" pos:end="107:124">==</operator> <name pos:start="107:126" pos:end="107:143">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:64"><block_content pos:start="109:17" pos:end="109:64">

                <expr_stmt pos:start="109:17" pos:end="109:64"><expr pos:start="109:17" pos:end="109:63"><name pos:start="109:17" pos:end="109:26"><name pos:start="109:17" pos:end="109:18">ac</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:26">simd_f</name></name> <operator pos:start="109:28" pos:end="109:28">=</operator>  <name pos:start="109:31" pos:end="109:63">ff_pack_2ch_int32_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="111:13" pos:end="113:64"><if pos:start="111:13" pos:end="113:64">if<condition pos:start="111:15" pos:end="111:80">(   <expr pos:start="111:19" pos:end="111:79"><name pos:start="111:19" pos:end="111:25">out_fmt</name> <operator pos:start="111:27" pos:end="111:28">==</operator> <name pos:start="111:30" pos:end="111:46">AV_SAMPLE_FMT_S16</name>  <operator pos:start="111:49" pos:end="111:50">&amp;&amp;</operator> <name pos:start="111:52" pos:end="111:57">in_fmt</name> <operator pos:start="111:59" pos:end="111:60">==</operator> <name pos:start="111:62" pos:end="111:79">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:64"><block_content pos:start="113:17" pos:end="113:64">

                <expr_stmt pos:start="113:17" pos:end="113:64"><expr pos:start="113:17" pos:end="113:63"><name pos:start="113:17" pos:end="113:26"><name pos:start="113:17" pos:end="113:18">ac</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:26">simd_f</name></name> <operator pos:start="113:28" pos:end="113:28">=</operator>  <name pos:start="113:31" pos:end="113:63">ff_pack_2ch_int16_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="115:13" pos:end="117:64"><if pos:start="115:13" pos:end="117:64">if<condition pos:start="115:15" pos:end="115:80">(   <expr pos:start="115:19" pos:end="115:79"><name pos:start="115:19" pos:end="115:25">out_fmt</name> <operator pos:start="115:27" pos:end="115:28">==</operator> <name pos:start="115:30" pos:end="115:46">AV_SAMPLE_FMT_S32</name>  <operator pos:start="115:49" pos:end="115:50">&amp;&amp;</operator> <name pos:start="115:52" pos:end="115:57">in_fmt</name> <operator pos:start="115:59" pos:end="115:60">==</operator> <name pos:start="115:62" pos:end="115:79">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:64"><block_content pos:start="117:17" pos:end="117:64">

                <expr_stmt pos:start="117:17" pos:end="117:64"><expr pos:start="117:17" pos:end="117:63"><name pos:start="117:17" pos:end="117:26"><name pos:start="117:17" pos:end="117:18">ac</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:26">simd_f</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator>  <name pos:start="117:31" pos:end="117:63">ff_pack_2ch_int16_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="119:13" pos:end="121:64"><if pos:start="119:13" pos:end="121:64">if<condition pos:start="119:15" pos:end="119:80">(   <expr pos:start="119:19" pos:end="119:79"><name pos:start="119:19" pos:end="119:25">out_fmt</name> <operator pos:start="119:27" pos:end="119:28">==</operator> <name pos:start="119:30" pos:end="119:46">AV_SAMPLE_FMT_S16</name>  <operator pos:start="119:49" pos:end="119:50">&amp;&amp;</operator> <name pos:start="119:52" pos:end="119:57">in_fmt</name> <operator pos:start="119:59" pos:end="119:60">==</operator> <name pos:start="119:62" pos:end="119:79">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:64"><block_content pos:start="121:17" pos:end="121:64">

                <expr_stmt pos:start="121:17" pos:end="121:64"><expr pos:start="121:17" pos:end="121:63"><name pos:start="121:17" pos:end="121:26"><name pos:start="121:17" pos:end="121:18">ac</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:26">simd_f</name></name> <operator pos:start="121:28" pos:end="121:28">=</operator>  <name pos:start="121:31" pos:end="121:63">ff_pack_2ch_int32_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="125:13" pos:end="127:66"><if pos:start="125:13" pos:end="127:66">if<condition pos:start="125:15" pos:end="125:144">(   <expr pos:start="125:19" pos:end="125:143"><name pos:start="125:19" pos:end="125:25">out_fmt</name> <operator pos:start="125:27" pos:end="125:28">==</operator> <name pos:start="125:30" pos:end="125:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="125:50" pos:end="125:51">&amp;&amp;</operator> <name pos:start="125:53" pos:end="125:58">in_fmt</name> <operator pos:start="125:60" pos:end="125:61">==</operator> <name pos:start="125:63" pos:end="125:79">AV_SAMPLE_FMT_FLT</name> <operator pos:start="125:81" pos:end="125:82">||</operator> <name pos:start="125:84" pos:end="125:90">out_fmt</name> <operator pos:start="125:92" pos:end="125:93">==</operator> <name pos:start="125:95" pos:end="125:112">AV_SAMPLE_FMT_S32P</name> <operator pos:start="125:114" pos:end="125:115">&amp;&amp;</operator> <name pos:start="125:117" pos:end="125:122">in_fmt</name> <operator pos:start="125:124" pos:end="125:125">==</operator> <name pos:start="125:127" pos:end="125:143">AV_SAMPLE_FMT_S32</name></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:66"><block_content pos:start="127:17" pos:end="127:66">

                <expr_stmt pos:start="127:17" pos:end="127:66"><expr pos:start="127:17" pos:end="127:65"><name pos:start="127:17" pos:end="127:26"><name pos:start="127:17" pos:end="127:18">ac</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:26">simd_f</name></name> <operator pos:start="127:28" pos:end="127:28">=</operator>  <name pos:start="127:31" pos:end="127:65">ff_unpack_2ch_int32_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="129:13" pos:end="131:66"><if pos:start="129:13" pos:end="131:66">if<condition pos:start="129:15" pos:end="129:80">(   <expr pos:start="129:19" pos:end="129:79"><name pos:start="129:19" pos:end="129:25">out_fmt</name> <operator pos:start="129:27" pos:end="129:28">==</operator> <name pos:start="129:30" pos:end="129:47">AV_SAMPLE_FMT_S16P</name>  <operator pos:start="129:50" pos:end="129:51">&amp;&amp;</operator> <name pos:start="129:53" pos:end="129:58">in_fmt</name> <operator pos:start="129:60" pos:end="129:61">==</operator> <name pos:start="129:63" pos:end="129:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:66"><block_content pos:start="131:17" pos:end="131:66">

                <expr_stmt pos:start="131:17" pos:end="131:66"><expr pos:start="131:17" pos:end="131:65"><name pos:start="131:17" pos:end="131:26"><name pos:start="131:17" pos:end="131:18">ac</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:26">simd_f</name></name> <operator pos:start="131:28" pos:end="131:28">=</operator>  <name pos:start="131:31" pos:end="131:65">ff_unpack_2ch_int16_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="133:13" pos:end="135:66"><if pos:start="133:13" pos:end="135:66">if<condition pos:start="133:15" pos:end="133:80">(   <expr pos:start="133:19" pos:end="133:79"><name pos:start="133:19" pos:end="133:25">out_fmt</name> <operator pos:start="133:27" pos:end="133:28">==</operator> <name pos:start="133:30" pos:end="133:47">AV_SAMPLE_FMT_S32P</name>  <operator pos:start="133:50" pos:end="133:51">&amp;&amp;</operator> <name pos:start="133:53" pos:end="133:58">in_fmt</name> <operator pos:start="133:60" pos:end="133:61">==</operator> <name pos:start="133:63" pos:end="133:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:66"><block_content pos:start="135:17" pos:end="135:66">

                <expr_stmt pos:start="135:17" pos:end="135:66"><expr pos:start="135:17" pos:end="135:65"><name pos:start="135:17" pos:end="135:26"><name pos:start="135:17" pos:end="135:18">ac</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:26">simd_f</name></name> <operator pos:start="135:28" pos:end="135:28">=</operator>  <name pos:start="135:31" pos:end="135:65">ff_unpack_2ch_int16_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="137:13" pos:end="139:66"><if pos:start="137:13" pos:end="139:66">if<condition pos:start="137:15" pos:end="137:80">(   <expr pos:start="137:19" pos:end="137:79"><name pos:start="137:19" pos:end="137:25">out_fmt</name> <operator pos:start="137:27" pos:end="137:28">==</operator> <name pos:start="137:30" pos:end="137:47">AV_SAMPLE_FMT_S16P</name>  <operator pos:start="137:50" pos:end="137:51">&amp;&amp;</operator> <name pos:start="137:53" pos:end="137:58">in_fmt</name> <operator pos:start="137:60" pos:end="137:61">==</operator> <name pos:start="137:63" pos:end="137:79">AV_SAMPLE_FMT_S32</name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:66"><block_content pos:start="139:17" pos:end="139:66">

                <expr_stmt pos:start="139:17" pos:end="139:66"><expr pos:start="139:17" pos:end="139:65"><name pos:start="139:17" pos:end="139:26"><name pos:start="139:17" pos:end="139:18">ac</name><operator pos:start="139:19" pos:end="139:20">-&gt;</operator><name pos:start="139:21" pos:end="139:26">simd_f</name></name> <operator pos:start="139:28" pos:end="139:28">=</operator>  <name pos:start="139:31" pos:end="139:65">ff_unpack_2ch_int32_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="143:13" pos:end="145:64"><if pos:start="143:13" pos:end="145:64">if<condition pos:start="143:15" pos:end="143:80">(   <expr pos:start="143:19" pos:end="143:79"><name pos:start="143:19" pos:end="143:25">out_fmt</name> <operator pos:start="143:27" pos:end="143:28">==</operator> <name pos:start="143:30" pos:end="143:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="143:49" pos:end="143:50">&amp;&amp;</operator> <name pos:start="143:52" pos:end="143:57">in_fmt</name> <operator pos:start="143:59" pos:end="143:60">==</operator> <name pos:start="143:62" pos:end="143:79">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:64"><block_content pos:start="145:17" pos:end="145:64">

                <expr_stmt pos:start="145:17" pos:end="145:64"><expr pos:start="145:17" pos:end="145:63"><name pos:start="145:17" pos:end="145:26"><name pos:start="145:17" pos:end="145:18">ac</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:26">simd_f</name></name> <operator pos:start="145:28" pos:end="145:28">=</operator>  <name pos:start="145:31" pos:end="145:63">ff_pack_2ch_int32_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="147:13" pos:end="149:64"><if pos:start="147:13" pos:end="149:64">if<condition pos:start="147:15" pos:end="147:80">(   <expr pos:start="147:19" pos:end="147:79"><name pos:start="147:19" pos:end="147:25">out_fmt</name> <operator pos:start="147:27" pos:end="147:28">==</operator> <name pos:start="147:30" pos:end="147:46">AV_SAMPLE_FMT_S32</name>  <operator pos:start="147:49" pos:end="147:50">&amp;&amp;</operator> <name pos:start="147:52" pos:end="147:57">in_fmt</name> <operator pos:start="147:59" pos:end="147:60">==</operator> <name pos:start="147:62" pos:end="147:79">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:64"><block_content pos:start="149:17" pos:end="149:64">

                <expr_stmt pos:start="149:17" pos:end="149:64"><expr pos:start="149:17" pos:end="149:63"><name pos:start="149:17" pos:end="149:26"><name pos:start="149:17" pos:end="149:18">ac</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:26">simd_f</name></name> <operator pos:start="149:28" pos:end="149:28">=</operator>  <name pos:start="149:31" pos:end="149:63">ff_pack_2ch_float_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="151:13" pos:end="153:64"><if pos:start="151:13" pos:end="153:64">if<condition pos:start="151:15" pos:end="151:80">(   <expr pos:start="151:19" pos:end="151:79"><name pos:start="151:19" pos:end="151:25">out_fmt</name> <operator pos:start="151:27" pos:end="151:28">==</operator> <name pos:start="151:30" pos:end="151:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="151:49" pos:end="151:50">&amp;&amp;</operator> <name pos:start="151:52" pos:end="151:57">in_fmt</name> <operator pos:start="151:59" pos:end="151:60">==</operator> <name pos:start="151:62" pos:end="151:79">AV_SAMPLE_FMT_S16P</name></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:64"><block_content pos:start="153:17" pos:end="153:64">

                <expr_stmt pos:start="153:17" pos:end="153:64"><expr pos:start="153:17" pos:end="153:63"><name pos:start="153:17" pos:end="153:26"><name pos:start="153:17" pos:end="153:18">ac</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:26">simd_f</name></name> <operator pos:start="153:28" pos:end="153:28">=</operator>  <name pos:start="153:31" pos:end="153:63">ff_pack_2ch_int16_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="155:13" pos:end="157:64"><if pos:start="155:13" pos:end="157:64">if<condition pos:start="155:15" pos:end="155:80">(   <expr pos:start="155:19" pos:end="155:79"><name pos:start="155:19" pos:end="155:25">out_fmt</name> <operator pos:start="155:27" pos:end="155:28">==</operator> <name pos:start="155:30" pos:end="155:46">AV_SAMPLE_FMT_S16</name>  <operator pos:start="155:49" pos:end="155:50">&amp;&amp;</operator> <name pos:start="155:52" pos:end="155:57">in_fmt</name> <operator pos:start="155:59" pos:end="155:60">==</operator> <name pos:start="155:62" pos:end="155:79">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="157:17" pos:end="157:64"><block_content pos:start="157:17" pos:end="157:64">

                <expr_stmt pos:start="157:17" pos:end="157:64"><expr pos:start="157:17" pos:end="157:63"><name pos:start="157:17" pos:end="157:26"><name pos:start="157:17" pos:end="157:18">ac</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:26">simd_f</name></name> <operator pos:start="157:28" pos:end="157:28">=</operator>  <name pos:start="157:31" pos:end="157:63">ff_pack_2ch_float_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="159:13" pos:end="161:66"><if pos:start="159:13" pos:end="161:66">if<condition pos:start="159:15" pos:end="159:80">(   <expr pos:start="159:19" pos:end="159:79"><name pos:start="159:19" pos:end="159:25">out_fmt</name> <operator pos:start="159:27" pos:end="159:28">==</operator> <name pos:start="159:30" pos:end="159:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="159:50" pos:end="159:51">&amp;&amp;</operator> <name pos:start="159:53" pos:end="159:58">in_fmt</name> <operator pos:start="159:60" pos:end="159:61">==</operator> <name pos:start="159:63" pos:end="159:79">AV_SAMPLE_FMT_S32</name></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:66"><block_content pos:start="161:17" pos:end="161:66">

                <expr_stmt pos:start="161:17" pos:end="161:66"><expr pos:start="161:17" pos:end="161:65"><name pos:start="161:17" pos:end="161:26"><name pos:start="161:17" pos:end="161:18">ac</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:26">simd_f</name></name> <operator pos:start="161:28" pos:end="161:28">=</operator>  <name pos:start="161:31" pos:end="161:65">ff_unpack_2ch_int32_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="163:13" pos:end="165:66"><if pos:start="163:13" pos:end="165:66">if<condition pos:start="163:15" pos:end="163:80">(   <expr pos:start="163:19" pos:end="163:79"><name pos:start="163:19" pos:end="163:25">out_fmt</name> <operator pos:start="163:27" pos:end="163:28">==</operator> <name pos:start="163:30" pos:end="163:47">AV_SAMPLE_FMT_S32P</name>  <operator pos:start="163:50" pos:end="163:51">&amp;&amp;</operator> <name pos:start="163:53" pos:end="163:58">in_fmt</name> <operator pos:start="163:60" pos:end="163:61">==</operator> <name pos:start="163:63" pos:end="163:79">AV_SAMPLE_FMT_FLT</name></expr>)</condition><block type="pseudo" pos:start="165:17" pos:end="165:66"><block_content pos:start="165:17" pos:end="165:66">

                <expr_stmt pos:start="165:17" pos:end="165:66"><expr pos:start="165:17" pos:end="165:65"><name pos:start="165:17" pos:end="165:26"><name pos:start="165:17" pos:end="165:18">ac</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:26">simd_f</name></name> <operator pos:start="165:28" pos:end="165:28">=</operator>  <name pos:start="165:31" pos:end="165:65">ff_unpack_2ch_float_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="167:13" pos:end="169:66"><if pos:start="167:13" pos:end="169:66">if<condition pos:start="167:15" pos:end="167:80">(   <expr pos:start="167:19" pos:end="167:79"><name pos:start="167:19" pos:end="167:25">out_fmt</name> <operator pos:start="167:27" pos:end="167:28">==</operator> <name pos:start="167:30" pos:end="167:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="167:50" pos:end="167:51">&amp;&amp;</operator> <name pos:start="167:53" pos:end="167:58">in_fmt</name> <operator pos:start="167:60" pos:end="167:61">==</operator> <name pos:start="167:63" pos:end="167:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:66"><block_content pos:start="169:17" pos:end="169:66">

                <expr_stmt pos:start="169:17" pos:end="169:66"><expr pos:start="169:17" pos:end="169:65"><name pos:start="169:17" pos:end="169:26"><name pos:start="169:17" pos:end="169:18">ac</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:26">simd_f</name></name> <operator pos:start="169:28" pos:end="169:28">=</operator>  <name pos:start="169:31" pos:end="169:65">ff_unpack_2ch_int16_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="171:13" pos:end="173:66"><if pos:start="171:13" pos:end="173:66">if<condition pos:start="171:15" pos:end="171:80">(   <expr pos:start="171:19" pos:end="171:79"><name pos:start="171:19" pos:end="171:25">out_fmt</name> <operator pos:start="171:27" pos:end="171:28">==</operator> <name pos:start="171:30" pos:end="171:47">AV_SAMPLE_FMT_S16P</name>  <operator pos:start="171:50" pos:end="171:51">&amp;&amp;</operator> <name pos:start="171:53" pos:end="171:58">in_fmt</name> <operator pos:start="171:60" pos:end="171:61">==</operator> <name pos:start="171:63" pos:end="171:79">AV_SAMPLE_FMT_FLT</name></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:66"><block_content pos:start="173:17" pos:end="173:66">

                <expr_stmt pos:start="173:17" pos:end="173:66"><expr pos:start="173:17" pos:end="173:65"><name pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:18">ac</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:26">simd_f</name></name> <operator pos:start="173:28" pos:end="173:28">=</operator>  <name pos:start="173:31" pos:end="173:65">ff_unpack_2ch_float_to_int16_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="177:9" pos:end="197:9"><if pos:start="177:9" pos:end="197:9">if<condition pos:start="177:11" pos:end="177:25">(<expr pos:start="177:12" pos:end="177:24"><name pos:start="177:12" pos:end="177:19">channels</name> <operator pos:start="177:21" pos:end="177:22">==</operator> <literal type="number" pos:start="177:24" pos:end="177:24">6</literal></expr>)</condition> <block pos:start="177:27" pos:end="197:9">{<block_content pos:start="179:13" pos:end="195:66">

            <if_stmt pos:start="179:13" pos:end="181:64"><if pos:start="179:13" pos:end="181:64">if<condition pos:start="179:15" pos:end="179:80">(   <expr pos:start="179:19" pos:end="179:79"><name pos:start="179:19" pos:end="179:25">out_fmt</name> <operator pos:start="179:27" pos:end="179:28">==</operator> <name pos:start="179:30" pos:end="179:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="179:49" pos:end="179:50">&amp;&amp;</operator> <name pos:start="179:52" pos:end="179:57">in_fmt</name> <operator pos:start="179:59" pos:end="179:60">==</operator> <name pos:start="179:62" pos:end="179:79">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:64"><block_content pos:start="181:17" pos:end="181:64">

                <expr_stmt pos:start="181:17" pos:end="181:64"><expr pos:start="181:17" pos:end="181:63"><name pos:start="181:17" pos:end="181:26"><name pos:start="181:17" pos:end="181:18">ac</name><operator pos:start="181:19" pos:end="181:20">-&gt;</operator><name pos:start="181:21" pos:end="181:26">simd_f</name></name> <operator pos:start="181:28" pos:end="181:28">=</operator>  <name pos:start="181:31" pos:end="181:63">ff_pack_6ch_int32_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="183:13" pos:end="185:64"><if pos:start="183:13" pos:end="185:64">if<condition pos:start="183:15" pos:end="183:80">(   <expr pos:start="183:19" pos:end="183:79"><name pos:start="183:19" pos:end="183:25">out_fmt</name> <operator pos:start="183:27" pos:end="183:28">==</operator> <name pos:start="183:30" pos:end="183:46">AV_SAMPLE_FMT_S32</name>  <operator pos:start="183:49" pos:end="183:50">&amp;&amp;</operator> <name pos:start="183:52" pos:end="183:57">in_fmt</name> <operator pos:start="183:59" pos:end="183:60">==</operator> <name pos:start="183:62" pos:end="183:79">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="185:17" pos:end="185:64"><block_content pos:start="185:17" pos:end="185:64">

                <expr_stmt pos:start="185:17" pos:end="185:64"><expr pos:start="185:17" pos:end="185:63"><name pos:start="185:17" pos:end="185:26"><name pos:start="185:17" pos:end="185:18">ac</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:26">simd_f</name></name> <operator pos:start="185:28" pos:end="185:28">=</operator>  <name pos:start="185:31" pos:end="185:63">ff_pack_6ch_float_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="189:13" pos:end="191:66"><if pos:start="189:13" pos:end="191:66">if<condition pos:start="189:15" pos:end="189:80">(   <expr pos:start="189:19" pos:end="189:79"><name pos:start="189:19" pos:end="189:25">out_fmt</name> <operator pos:start="189:27" pos:end="189:28">==</operator> <name pos:start="189:30" pos:end="189:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="189:50" pos:end="189:51">&amp;&amp;</operator> <name pos:start="189:53" pos:end="189:58">in_fmt</name> <operator pos:start="189:60" pos:end="189:61">==</operator> <name pos:start="189:63" pos:end="189:79">AV_SAMPLE_FMT_S32</name></expr>)</condition><block type="pseudo" pos:start="191:17" pos:end="191:66"><block_content pos:start="191:17" pos:end="191:66">

                <expr_stmt pos:start="191:17" pos:end="191:66"><expr pos:start="191:17" pos:end="191:65"><name pos:start="191:17" pos:end="191:26"><name pos:start="191:17" pos:end="191:18">ac</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:26">simd_f</name></name> <operator pos:start="191:28" pos:end="191:28">=</operator>  <name pos:start="191:31" pos:end="191:65">ff_unpack_6ch_int32_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="193:13" pos:end="195:66"><if pos:start="193:13" pos:end="195:66">if<condition pos:start="193:15" pos:end="193:80">(   <expr pos:start="193:19" pos:end="193:79"><name pos:start="193:19" pos:end="193:25">out_fmt</name> <operator pos:start="193:27" pos:end="193:28">==</operator> <name pos:start="193:30" pos:end="193:47">AV_SAMPLE_FMT_S32P</name>  <operator pos:start="193:50" pos:end="193:51">&amp;&amp;</operator> <name pos:start="193:53" pos:end="193:58">in_fmt</name> <operator pos:start="193:60" pos:end="193:61">==</operator> <name pos:start="193:63" pos:end="193:79">AV_SAMPLE_FMT_FLT</name></expr>)</condition><block type="pseudo" pos:start="195:17" pos:end="195:66"><block_content pos:start="195:17" pos:end="195:66">

                <expr_stmt pos:start="195:17" pos:end="195:66"><expr pos:start="195:17" pos:end="195:65"><name pos:start="195:17" pos:end="195:26"><name pos:start="195:17" pos:end="195:18">ac</name><operator pos:start="195:19" pos:end="195:20">-&gt;</operator><name pos:start="195:21" pos:end="195:26">simd_f</name></name> <operator pos:start="195:28" pos:end="195:28">=</operator>  <name pos:start="195:31" pos:end="195:65">ff_unpack_6ch_float_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="199:9" pos:end="213:9"><if pos:start="199:9" pos:end="213:9">if<condition pos:start="199:11" pos:end="199:25">(<expr pos:start="199:12" pos:end="199:24"><name pos:start="199:12" pos:end="199:19">channels</name> <operator pos:start="199:21" pos:end="199:22">==</operator> <literal type="number" pos:start="199:24" pos:end="199:24">8</literal></expr>)</condition> <block pos:start="199:27" pos:end="213:9">{<block_content pos:start="201:13" pos:end="211:64">

            <if_stmt pos:start="201:13" pos:end="203:64"><if pos:start="201:13" pos:end="203:64">if<condition pos:start="201:15" pos:end="201:144">(   <expr pos:start="201:19" pos:end="201:143"><name pos:start="201:19" pos:end="201:25">out_fmt</name> <operator pos:start="201:27" pos:end="201:28">==</operator> <name pos:start="201:30" pos:end="201:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="201:49" pos:end="201:50">&amp;&amp;</operator> <name pos:start="201:52" pos:end="201:57">in_fmt</name> <operator pos:start="201:59" pos:end="201:60">==</operator> <name pos:start="201:62" pos:end="201:79">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="201:81" pos:end="201:82">||</operator> <name pos:start="201:84" pos:end="201:90">out_fmt</name> <operator pos:start="201:92" pos:end="201:93">==</operator> <name pos:start="201:95" pos:end="201:111">AV_SAMPLE_FMT_S32</name> <operator pos:start="201:113" pos:end="201:114">&amp;&amp;</operator> <name pos:start="201:116" pos:end="201:121">in_fmt</name> <operator pos:start="201:123" pos:end="201:124">==</operator> <name pos:start="201:126" pos:end="201:143">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="203:17" pos:end="203:64"><block_content pos:start="203:17" pos:end="203:64">

                <expr_stmt pos:start="203:17" pos:end="203:64"><expr pos:start="203:17" pos:end="203:63"><name pos:start="203:17" pos:end="203:26"><name pos:start="203:17" pos:end="203:18">ac</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:26">simd_f</name></name> <operator pos:start="203:28" pos:end="203:28">=</operator>  <name pos:start="203:31" pos:end="203:63">ff_pack_8ch_float_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="205:13" pos:end="207:64"><if pos:start="205:13" pos:end="207:64">if<condition pos:start="205:15" pos:end="205:80">(   <expr pos:start="205:19" pos:end="205:79"><name pos:start="205:19" pos:end="205:25">out_fmt</name> <operator pos:start="205:27" pos:end="205:28">==</operator> <name pos:start="205:30" pos:end="205:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="205:49" pos:end="205:50">&amp;&amp;</operator> <name pos:start="205:52" pos:end="205:57">in_fmt</name> <operator pos:start="205:59" pos:end="205:60">==</operator> <name pos:start="205:62" pos:end="205:79">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="207:17" pos:end="207:64"><block_content pos:start="207:17" pos:end="207:64">

                <expr_stmt pos:start="207:17" pos:end="207:64"><expr pos:start="207:17" pos:end="207:63"><name pos:start="207:17" pos:end="207:26"><name pos:start="207:17" pos:end="207:18">ac</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:26">simd_f</name></name> <operator pos:start="207:28" pos:end="207:28">=</operator>  <name pos:start="207:31" pos:end="207:63">ff_pack_8ch_int32_to_float_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="209:13" pos:end="211:64"><if pos:start="209:13" pos:end="211:64">if<condition pos:start="209:15" pos:end="209:80">(   <expr pos:start="209:19" pos:end="209:79"><name pos:start="209:19" pos:end="209:25">out_fmt</name> <operator pos:start="209:27" pos:end="209:28">==</operator> <name pos:start="209:30" pos:end="209:46">AV_SAMPLE_FMT_S32</name>  <operator pos:start="209:49" pos:end="209:50">&amp;&amp;</operator> <name pos:start="209:52" pos:end="209:57">in_fmt</name> <operator pos:start="209:59" pos:end="209:60">==</operator> <name pos:start="209:62" pos:end="209:79">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="211:17" pos:end="211:64"><block_content pos:start="211:17" pos:end="211:64">

                <expr_stmt pos:start="211:17" pos:end="211:64"><expr pos:start="211:17" pos:end="211:63"><name pos:start="211:17" pos:end="211:26"><name pos:start="211:17" pos:end="211:18">ac</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:26">simd_f</name></name> <operator pos:start="211:28" pos:end="211:28">=</operator>  <name pos:start="211:31" pos:end="211:63">ff_pack_8ch_float_to_int32_a_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="217:5" pos:end="235:5"><if pos:start="217:5" pos:end="235:5">if<condition pos:start="217:7" pos:end="217:32">(<expr pos:start="217:8" pos:end="217:31"><call pos:start="217:8" pos:end="217:31"><name pos:start="217:8" pos:end="217:21">EXTERNAL_SSSE3</name><argument_list pos:start="217:22" pos:end="217:31">(<argument pos:start="217:23" pos:end="217:30"><expr pos:start="217:23" pos:end="217:30"><name pos:start="217:23" pos:end="217:30">mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="217:34" pos:end="235:5">{<block_content pos:start="219:9" pos:end="233:9">

        <if_stmt pos:start="219:9" pos:end="233:9"><if pos:start="219:9" pos:end="233:9">if<condition pos:start="219:11" pos:end="219:25">(<expr pos:start="219:12" pos:end="219:24"><name pos:start="219:12" pos:end="219:19">channels</name> <operator pos:start="219:21" pos:end="219:22">==</operator> <literal type="number" pos:start="219:24" pos:end="219:24">2</literal></expr>)</condition> <block pos:start="219:27" pos:end="233:9">{<block_content pos:start="221:13" pos:end="231:67">

            <if_stmt pos:start="221:13" pos:end="223:67"><if pos:start="221:13" pos:end="223:67">if<condition pos:start="221:15" pos:end="221:80">(   <expr pos:start="221:19" pos:end="221:79"><name pos:start="221:19" pos:end="221:25">out_fmt</name> <operator pos:start="221:27" pos:end="221:28">==</operator> <name pos:start="221:30" pos:end="221:47">AV_SAMPLE_FMT_S16P</name>  <operator pos:start="221:50" pos:end="221:51">&amp;&amp;</operator> <name pos:start="221:53" pos:end="221:58">in_fmt</name> <operator pos:start="221:60" pos:end="221:61">==</operator> <name pos:start="221:63" pos:end="221:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:67"><block_content pos:start="223:17" pos:end="223:67">

                <expr_stmt pos:start="223:17" pos:end="223:67"><expr pos:start="223:17" pos:end="223:66"><name pos:start="223:17" pos:end="223:26"><name pos:start="223:17" pos:end="223:18">ac</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:26">simd_f</name></name> <operator pos:start="223:28" pos:end="223:28">=</operator>  <name pos:start="223:31" pos:end="223:66">ff_unpack_2ch_int16_to_int16_a_ssse3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="225:13" pos:end="227:67"><if pos:start="225:13" pos:end="227:67">if<condition pos:start="225:15" pos:end="225:80">(   <expr pos:start="225:19" pos:end="225:79"><name pos:start="225:19" pos:end="225:25">out_fmt</name> <operator pos:start="225:27" pos:end="225:28">==</operator> <name pos:start="225:30" pos:end="225:47">AV_SAMPLE_FMT_S32P</name>  <operator pos:start="225:50" pos:end="225:51">&amp;&amp;</operator> <name pos:start="225:53" pos:end="225:58">in_fmt</name> <operator pos:start="225:60" pos:end="225:61">==</operator> <name pos:start="225:63" pos:end="225:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="227:17" pos:end="227:67"><block_content pos:start="227:17" pos:end="227:67">

                <expr_stmt pos:start="227:17" pos:end="227:67"><expr pos:start="227:17" pos:end="227:66"><name pos:start="227:17" pos:end="227:26"><name pos:start="227:17" pos:end="227:18">ac</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:26">simd_f</name></name> <operator pos:start="227:28" pos:end="227:28">=</operator>  <name pos:start="227:31" pos:end="227:66">ff_unpack_2ch_int16_to_int32_a_ssse3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="229:13" pos:end="231:67"><if pos:start="229:13" pos:end="231:67">if<condition pos:start="229:15" pos:end="229:80">(   <expr pos:start="229:19" pos:end="229:79"><name pos:start="229:19" pos:end="229:25">out_fmt</name> <operator pos:start="229:27" pos:end="229:28">==</operator> <name pos:start="229:30" pos:end="229:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="229:50" pos:end="229:51">&amp;&amp;</operator> <name pos:start="229:53" pos:end="229:58">in_fmt</name> <operator pos:start="229:60" pos:end="229:61">==</operator> <name pos:start="229:63" pos:end="229:79">AV_SAMPLE_FMT_S16</name></expr>)</condition><block type="pseudo" pos:start="231:17" pos:end="231:67"><block_content pos:start="231:17" pos:end="231:67">

                <expr_stmt pos:start="231:17" pos:end="231:67"><expr pos:start="231:17" pos:end="231:66"><name pos:start="231:17" pos:end="231:26"><name pos:start="231:17" pos:end="231:18">ac</name><operator pos:start="231:19" pos:end="231:20">-&gt;</operator><name pos:start="231:21" pos:end="231:26">simd_f</name></name> <operator pos:start="231:28" pos:end="231:28">=</operator>  <name pos:start="231:31" pos:end="231:66">ff_unpack_2ch_int16_to_float_a_ssse3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="237:5" pos:end="289:5"><if pos:start="237:5" pos:end="289:5">if<condition pos:start="237:7" pos:end="237:30">(<expr pos:start="237:8" pos:end="237:29"><call pos:start="237:8" pos:end="237:29"><name pos:start="237:8" pos:end="237:19">EXTERNAL_AVX</name><argument_list pos:start="237:20" pos:end="237:29">(<argument pos:start="237:21" pos:end="237:28"><expr pos:start="237:21" pos:end="237:28"><name pos:start="237:21" pos:end="237:28">mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="237:32" pos:end="289:5">{<block_content pos:start="239:9" pos:end="287:9">

        <if_stmt pos:start="239:9" pos:end="241:50"><if pos:start="239:9" pos:end="241:50">if<condition pos:start="239:11" pos:end="239:140">(   <expr pos:start="239:15" pos:end="239:139"><name pos:start="239:15" pos:end="239:21">out_fmt</name> <operator pos:start="239:23" pos:end="239:24">==</operator> <name pos:start="239:26" pos:end="239:42">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="239:45" pos:end="239:46">&amp;&amp;</operator> <name pos:start="239:48" pos:end="239:53">in_fmt</name> <operator pos:start="239:55" pos:end="239:56">==</operator> <name pos:start="239:58" pos:end="239:74">AV_SAMPLE_FMT_S32</name> <operator pos:start="239:76" pos:end="239:77">||</operator> <name pos:start="239:79" pos:end="239:85">out_fmt</name> <operator pos:start="239:87" pos:end="239:88">==</operator> <name pos:start="239:90" pos:end="239:107">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="239:109" pos:end="239:110">&amp;&amp;</operator> <name pos:start="239:112" pos:end="239:117">in_fmt</name> <operator pos:start="239:119" pos:end="239:120">==</operator> <name pos:start="239:122" pos:end="239:139">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:50"><block_content pos:start="241:13" pos:end="241:50">

            <expr_stmt pos:start="241:13" pos:end="241:50"><expr pos:start="241:13" pos:end="241:49"><name pos:start="241:13" pos:end="241:22"><name pos:start="241:13" pos:end="241:14">ac</name><operator pos:start="241:15" pos:end="241:16">-&gt;</operator><name pos:start="241:17" pos:end="241:22">simd_f</name></name> <operator pos:start="241:24" pos:end="241:24">=</operator>  <name pos:start="241:27" pos:end="241:49">ff_int32_to_float_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="243:9" pos:end="271:9"><if pos:start="243:9" pos:end="271:9">if<condition pos:start="243:11" pos:end="243:25">(<expr pos:start="243:12" pos:end="243:24"><name pos:start="243:12" pos:end="243:19">channels</name> <operator pos:start="243:21" pos:end="243:22">==</operator> <literal type="number" pos:start="243:24" pos:end="243:24">6</literal></expr>)</condition> <block pos:start="243:27" pos:end="271:9">{<block_content pos:start="245:13" pos:end="269:65">

            <if_stmt pos:start="245:13" pos:end="247:63"><if pos:start="245:13" pos:end="247:63">if<condition pos:start="245:15" pos:end="245:144">(   <expr pos:start="245:19" pos:end="245:143"><name pos:start="245:19" pos:end="245:25">out_fmt</name> <operator pos:start="245:27" pos:end="245:28">==</operator> <name pos:start="245:30" pos:end="245:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="245:49" pos:end="245:50">&amp;&amp;</operator> <name pos:start="245:52" pos:end="245:57">in_fmt</name> <operator pos:start="245:59" pos:end="245:60">==</operator> <name pos:start="245:62" pos:end="245:79">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="245:81" pos:end="245:82">||</operator> <name pos:start="245:84" pos:end="245:90">out_fmt</name> <operator pos:start="245:92" pos:end="245:93">==</operator> <name pos:start="245:95" pos:end="245:111">AV_SAMPLE_FMT_S32</name> <operator pos:start="245:113" pos:end="245:114">&amp;&amp;</operator> <name pos:start="245:116" pos:end="245:121">in_fmt</name> <operator pos:start="245:123" pos:end="245:124">==</operator> <name pos:start="245:126" pos:end="245:143">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="247:17" pos:end="247:63"><block_content pos:start="247:17" pos:end="247:63">

                <expr_stmt pos:start="247:17" pos:end="247:63"><expr pos:start="247:17" pos:end="247:62"><name pos:start="247:17" pos:end="247:26"><name pos:start="247:17" pos:end="247:18">ac</name><operator pos:start="247:19" pos:end="247:20">-&gt;</operator><name pos:start="247:21" pos:end="247:26">simd_f</name></name> <operator pos:start="247:28" pos:end="247:28">=</operator>  <name pos:start="247:31" pos:end="247:62">ff_pack_6ch_float_to_float_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="249:13" pos:end="251:63"><if pos:start="249:13" pos:end="251:63">if<condition pos:start="249:15" pos:end="249:80">(   <expr pos:start="249:19" pos:end="249:79"><name pos:start="249:19" pos:end="249:25">out_fmt</name> <operator pos:start="249:27" pos:end="249:28">==</operator> <name pos:start="249:30" pos:end="249:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="249:49" pos:end="249:50">&amp;&amp;</operator> <name pos:start="249:52" pos:end="249:57">in_fmt</name> <operator pos:start="249:59" pos:end="249:60">==</operator> <name pos:start="249:62" pos:end="249:79">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="251:17" pos:end="251:63"><block_content pos:start="251:17" pos:end="251:63">

                <expr_stmt pos:start="251:17" pos:end="251:63"><expr pos:start="251:17" pos:end="251:62"><name pos:start="251:17" pos:end="251:26"><name pos:start="251:17" pos:end="251:18">ac</name><operator pos:start="251:19" pos:end="251:20">-&gt;</operator><name pos:start="251:21" pos:end="251:26">simd_f</name></name> <operator pos:start="251:28" pos:end="251:28">=</operator>  <name pos:start="251:31" pos:end="251:62">ff_pack_6ch_int32_to_float_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="253:13" pos:end="255:63"><if pos:start="253:13" pos:end="255:63">if<condition pos:start="253:15" pos:end="253:80">(   <expr pos:start="253:19" pos:end="253:79"><name pos:start="253:19" pos:end="253:25">out_fmt</name> <operator pos:start="253:27" pos:end="253:28">==</operator> <name pos:start="253:30" pos:end="253:46">AV_SAMPLE_FMT_S32</name>  <operator pos:start="253:49" pos:end="253:50">&amp;&amp;</operator> <name pos:start="253:52" pos:end="253:57">in_fmt</name> <operator pos:start="253:59" pos:end="253:60">==</operator> <name pos:start="253:62" pos:end="253:79">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="255:17" pos:end="255:63"><block_content pos:start="255:17" pos:end="255:63">

                <expr_stmt pos:start="255:17" pos:end="255:63"><expr pos:start="255:17" pos:end="255:62"><name pos:start="255:17" pos:end="255:26"><name pos:start="255:17" pos:end="255:18">ac</name><operator pos:start="255:19" pos:end="255:20">-&gt;</operator><name pos:start="255:21" pos:end="255:26">simd_f</name></name> <operator pos:start="255:28" pos:end="255:28">=</operator>  <name pos:start="255:31" pos:end="255:62">ff_pack_6ch_float_to_int32_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="259:13" pos:end="261:65"><if pos:start="259:13" pos:end="261:65">if<condition pos:start="259:15" pos:end="259:144">(   <expr pos:start="259:19" pos:end="259:143"><name pos:start="259:19" pos:end="259:25">out_fmt</name> <operator pos:start="259:27" pos:end="259:28">==</operator> <name pos:start="259:30" pos:end="259:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="259:50" pos:end="259:51">&amp;&amp;</operator> <name pos:start="259:53" pos:end="259:58">in_fmt</name> <operator pos:start="259:60" pos:end="259:61">==</operator> <name pos:start="259:63" pos:end="259:79">AV_SAMPLE_FMT_FLT</name> <operator pos:start="259:81" pos:end="259:82">||</operator> <name pos:start="259:84" pos:end="259:90">out_fmt</name> <operator pos:start="259:92" pos:end="259:93">==</operator> <name pos:start="259:95" pos:end="259:112">AV_SAMPLE_FMT_S32P</name> <operator pos:start="259:114" pos:end="259:115">&amp;&amp;</operator> <name pos:start="259:117" pos:end="259:122">in_fmt</name> <operator pos:start="259:124" pos:end="259:125">==</operator> <name pos:start="259:127" pos:end="259:143">AV_SAMPLE_FMT_S32</name></expr>)</condition><block type="pseudo" pos:start="261:17" pos:end="261:65"><block_content pos:start="261:17" pos:end="261:65">

                <expr_stmt pos:start="261:17" pos:end="261:65"><expr pos:start="261:17" pos:end="261:64"><name pos:start="261:17" pos:end="261:26"><name pos:start="261:17" pos:end="261:18">ac</name><operator pos:start="261:19" pos:end="261:20">-&gt;</operator><name pos:start="261:21" pos:end="261:26">simd_f</name></name> <operator pos:start="261:28" pos:end="261:28">=</operator>  <name pos:start="261:31" pos:end="261:64">ff_unpack_6ch_float_to_float_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="263:13" pos:end="265:65"><if pos:start="263:13" pos:end="265:65">if<condition pos:start="263:15" pos:end="263:80">(   <expr pos:start="263:19" pos:end="263:79"><name pos:start="263:19" pos:end="263:25">out_fmt</name> <operator pos:start="263:27" pos:end="263:28">==</operator> <name pos:start="263:30" pos:end="263:47">AV_SAMPLE_FMT_FLTP</name>  <operator pos:start="263:50" pos:end="263:51">&amp;&amp;</operator> <name pos:start="263:53" pos:end="263:58">in_fmt</name> <operator pos:start="263:60" pos:end="263:61">==</operator> <name pos:start="263:63" pos:end="263:79">AV_SAMPLE_FMT_S32</name></expr>)</condition><block type="pseudo" pos:start="265:17" pos:end="265:65"><block_content pos:start="265:17" pos:end="265:65">

                <expr_stmt pos:start="265:17" pos:end="265:65"><expr pos:start="265:17" pos:end="265:64"><name pos:start="265:17" pos:end="265:26"><name pos:start="265:17" pos:end="265:18">ac</name><operator pos:start="265:19" pos:end="265:20">-&gt;</operator><name pos:start="265:21" pos:end="265:26">simd_f</name></name> <operator pos:start="265:28" pos:end="265:28">=</operator>  <name pos:start="265:31" pos:end="265:64">ff_unpack_6ch_int32_to_float_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="267:13" pos:end="269:65"><if pos:start="267:13" pos:end="269:65">if<condition pos:start="267:15" pos:end="267:80">(   <expr pos:start="267:19" pos:end="267:79"><name pos:start="267:19" pos:end="267:25">out_fmt</name> <operator pos:start="267:27" pos:end="267:28">==</operator> <name pos:start="267:30" pos:end="267:47">AV_SAMPLE_FMT_S32P</name>  <operator pos:start="267:50" pos:end="267:51">&amp;&amp;</operator> <name pos:start="267:53" pos:end="267:58">in_fmt</name> <operator pos:start="267:60" pos:end="267:61">==</operator> <name pos:start="267:63" pos:end="267:79">AV_SAMPLE_FMT_FLT</name></expr>)</condition><block type="pseudo" pos:start="269:17" pos:end="269:65"><block_content pos:start="269:17" pos:end="269:65">

                <expr_stmt pos:start="269:17" pos:end="269:65"><expr pos:start="269:17" pos:end="269:64"><name pos:start="269:17" pos:end="269:26"><name pos:start="269:17" pos:end="269:18">ac</name><operator pos:start="269:19" pos:end="269:20">-&gt;</operator><name pos:start="269:21" pos:end="269:26">simd_f</name></name> <operator pos:start="269:28" pos:end="269:28">=</operator>  <name pos:start="269:31" pos:end="269:64">ff_unpack_6ch_float_to_int32_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="273:9" pos:end="287:9"><if pos:start="273:9" pos:end="287:9">if<condition pos:start="273:11" pos:end="273:25">(<expr pos:start="273:12" pos:end="273:24"><name pos:start="273:12" pos:end="273:19">channels</name> <operator pos:start="273:21" pos:end="273:22">==</operator> <literal type="number" pos:start="273:24" pos:end="273:24">8</literal></expr>)</condition> <block pos:start="273:27" pos:end="287:9">{<block_content pos:start="275:13" pos:end="285:63">

            <if_stmt pos:start="275:13" pos:end="277:63"><if pos:start="275:13" pos:end="277:63">if<condition pos:start="275:15" pos:end="275:144">(   <expr pos:start="275:19" pos:end="275:143"><name pos:start="275:19" pos:end="275:25">out_fmt</name> <operator pos:start="275:27" pos:end="275:28">==</operator> <name pos:start="275:30" pos:end="275:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="275:49" pos:end="275:50">&amp;&amp;</operator> <name pos:start="275:52" pos:end="275:57">in_fmt</name> <operator pos:start="275:59" pos:end="275:60">==</operator> <name pos:start="275:62" pos:end="275:79">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="275:81" pos:end="275:82">||</operator> <name pos:start="275:84" pos:end="275:90">out_fmt</name> <operator pos:start="275:92" pos:end="275:93">==</operator> <name pos:start="275:95" pos:end="275:111">AV_SAMPLE_FMT_S32</name> <operator pos:start="275:113" pos:end="275:114">&amp;&amp;</operator> <name pos:start="275:116" pos:end="275:121">in_fmt</name> <operator pos:start="275:123" pos:end="275:124">==</operator> <name pos:start="275:126" pos:end="275:143">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:63"><block_content pos:start="277:17" pos:end="277:63">

                <expr_stmt pos:start="277:17" pos:end="277:63"><expr pos:start="277:17" pos:end="277:62"><name pos:start="277:17" pos:end="277:26"><name pos:start="277:17" pos:end="277:18">ac</name><operator pos:start="277:19" pos:end="277:20">-&gt;</operator><name pos:start="277:21" pos:end="277:26">simd_f</name></name> <operator pos:start="277:28" pos:end="277:28">=</operator>  <name pos:start="277:31" pos:end="277:62">ff_pack_8ch_float_to_float_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="279:13" pos:end="281:63"><if pos:start="279:13" pos:end="281:63">if<condition pos:start="279:15" pos:end="279:80">(   <expr pos:start="279:19" pos:end="279:79"><name pos:start="279:19" pos:end="279:25">out_fmt</name> <operator pos:start="279:27" pos:end="279:28">==</operator> <name pos:start="279:30" pos:end="279:46">AV_SAMPLE_FMT_FLT</name>  <operator pos:start="279:49" pos:end="279:50">&amp;&amp;</operator> <name pos:start="279:52" pos:end="279:57">in_fmt</name> <operator pos:start="279:59" pos:end="279:60">==</operator> <name pos:start="279:62" pos:end="279:79">AV_SAMPLE_FMT_S32P</name></expr>)</condition><block type="pseudo" pos:start="281:17" pos:end="281:63"><block_content pos:start="281:17" pos:end="281:63">

                <expr_stmt pos:start="281:17" pos:end="281:63"><expr pos:start="281:17" pos:end="281:62"><name pos:start="281:17" pos:end="281:26"><name pos:start="281:17" pos:end="281:18">ac</name><operator pos:start="281:19" pos:end="281:20">-&gt;</operator><name pos:start="281:21" pos:end="281:26">simd_f</name></name> <operator pos:start="281:28" pos:end="281:28">=</operator>  <name pos:start="281:31" pos:end="281:62">ff_pack_8ch_int32_to_float_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="283:13" pos:end="285:63"><if pos:start="283:13" pos:end="285:63">if<condition pos:start="283:15" pos:end="283:80">(   <expr pos:start="283:19" pos:end="283:79"><name pos:start="283:19" pos:end="283:25">out_fmt</name> <operator pos:start="283:27" pos:end="283:28">==</operator> <name pos:start="283:30" pos:end="283:46">AV_SAMPLE_FMT_S32</name>  <operator pos:start="283:49" pos:end="283:50">&amp;&amp;</operator> <name pos:start="283:52" pos:end="283:57">in_fmt</name> <operator pos:start="283:59" pos:end="283:60">==</operator> <name pos:start="283:62" pos:end="283:79">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="285:17" pos:end="285:63"><block_content pos:start="285:17" pos:end="285:63">

                <expr_stmt pos:start="285:17" pos:end="285:63"><expr pos:start="285:17" pos:end="285:62"><name pos:start="285:17" pos:end="285:26"><name pos:start="285:17" pos:end="285:18">ac</name><operator pos:start="285:19" pos:end="285:20">-&gt;</operator><name pos:start="285:21" pos:end="285:26">simd_f</name></name> <operator pos:start="285:28" pos:end="285:28">=</operator>  <name pos:start="285:31" pos:end="285:62">ff_pack_8ch_float_to_int32_a_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="291:5" pos:end="297:5"><if pos:start="291:5" pos:end="297:5">if<condition pos:start="291:7" pos:end="291:31">(<expr pos:start="291:8" pos:end="291:30"><call pos:start="291:8" pos:end="291:30"><name pos:start="291:8" pos:end="291:20">EXTERNAL_AVX2</name><argument_list pos:start="291:21" pos:end="291:30">(<argument pos:start="291:22" pos:end="291:29"><expr pos:start="291:22" pos:end="291:29"><name pos:start="291:22" pos:end="291:29">mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="291:33" pos:end="297:5">{<block_content pos:start="293:9" pos:end="295:51">

        <if_stmt pos:start="293:9" pos:end="295:51"><if pos:start="293:9" pos:end="295:51">if<condition pos:start="293:11" pos:end="293:140">(   <expr pos:start="293:15" pos:end="293:139"><name pos:start="293:15" pos:end="293:21">out_fmt</name> <operator pos:start="293:23" pos:end="293:24">==</operator> <name pos:start="293:26" pos:end="293:42">AV_SAMPLE_FMT_S32</name>  <operator pos:start="293:45" pos:end="293:46">&amp;&amp;</operator> <name pos:start="293:48" pos:end="293:53">in_fmt</name> <operator pos:start="293:55" pos:end="293:56">==</operator> <name pos:start="293:58" pos:end="293:74">AV_SAMPLE_FMT_FLT</name> <operator pos:start="293:76" pos:end="293:77">||</operator> <name pos:start="293:79" pos:end="293:85">out_fmt</name> <operator pos:start="293:87" pos:end="293:88">==</operator> <name pos:start="293:90" pos:end="293:107">AV_SAMPLE_FMT_S32P</name> <operator pos:start="293:109" pos:end="293:110">&amp;&amp;</operator> <name pos:start="293:112" pos:end="293:117">in_fmt</name> <operator pos:start="293:119" pos:end="293:120">==</operator> <name pos:start="293:122" pos:end="293:139">AV_SAMPLE_FMT_FLTP</name></expr>)</condition><block type="pseudo" pos:start="295:13" pos:end="295:51"><block_content pos:start="295:13" pos:end="295:51">

            <expr_stmt pos:start="295:13" pos:end="295:51"><expr pos:start="295:13" pos:end="295:50"><name pos:start="295:13" pos:end="295:22"><name pos:start="295:13" pos:end="295:14">ac</name><operator pos:start="295:15" pos:end="295:16">-&gt;</operator><name pos:start="295:17" pos:end="295:22">simd_f</name></name> <operator pos:start="295:24" pos:end="295:24">=</operator>  <name pos:start="295:27" pos:end="295:50">ff_float_to_int32_a_avx2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
