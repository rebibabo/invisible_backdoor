<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20231.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">virtio_blk_submit_multireq</name><parameter_list pos:start="1:32" pos:end="1:71">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:44">BlockBackend</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">blk</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:70"><decl pos:start="1:52" pos:end="1:70"><type pos:start="1:52" pos:end="1:70"><name pos:start="1:52" pos:end="1:65">MultiReqBuffer</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">mrb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:22">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>, <decl pos:start="5:16" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:20">start</name> <init pos:start="5:22" pos:end="5:24">= <expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr></init></decl>, <decl pos:start="5:27" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:34">num_reqs</name> <init pos:start="5:36" pos:end="5:38">= <expr pos:start="5:38" pos:end="5:38"><literal type="number" pos:start="5:38" pos:end="5:38">0</literal></expr></init></decl>, <decl pos:start="5:41" pos:end="5:48"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:41" pos:end="5:44">niov</name> <init pos:start="5:46" pos:end="5:48">= <expr pos:start="5:48" pos:end="5:48"><literal type="number" pos:start="5:48" pos:end="5:48">0</literal></expr></init></decl>, <decl pos:start="5:51" pos:end="5:64"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:51" pos:end="5:60">nb_sectors</name> <init pos:start="5:62" pos:end="5:64">= <expr pos:start="5:64" pos:end="5:64"><literal type="number" pos:start="5:64" pos:end="5:64">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:20">max_xfer_len</name> <init pos:start="7:22" pos:end="7:24">= <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:22">sector_num</name> <init pos:start="9:24" pos:end="9:26">= <expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:11">mrb</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:21">num_reqs</name></name> <operator pos:start="13:23" pos:end="13:24">==</operator> <literal type="number" pos:start="13:26" pos:end="13:26">1</literal></expr>)</condition> <block pos:start="13:29" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:15">

        <expr_stmt pos:start="15:9" pos:end="15:44"><expr pos:start="15:9" pos:end="15:43"><call pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:23">submit_requests</name><argument_list pos:start="15:24" pos:end="15:43">(<argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:27">blk</name></expr></argument>, <argument pos:start="15:30" pos:end="15:32"><expr pos:start="15:30" pos:end="15:32"><name pos:start="15:30" pos:end="15:32">mrb</name></expr></argument>, <argument pos:start="15:35" pos:end="15:35"><expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">0</literal></expr></argument>, <argument pos:start="15:38" pos:end="15:38"><expr pos:start="15:38" pos:end="15:38"><literal type="number" pos:start="15:38" pos:end="15:38">1</literal></expr></argument>, <argument pos:start="15:41" pos:end="15:42"><expr pos:start="15:41" pos:end="15:42"><operator pos:start="15:41" pos:end="15:41">-</operator><literal type="number" pos:start="15:42" pos:end="15:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:11">mrb</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:21">num_reqs</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:71"><expr pos:start="25:5" pos:end="25:70"><name pos:start="25:5" pos:end="25:16">max_xfer_len</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <call pos:start="25:20" pos:end="25:70"><name pos:start="25:20" pos:end="25:46">blk_get_max_transfer_length</name><argument_list pos:start="25:47" pos:end="25:70">(<argument pos:start="25:48" pos:end="25:69"><expr pos:start="25:48" pos:end="25:69"><name pos:start="25:48" pos:end="25:59"><name pos:start="25:48" pos:end="25:50">mrb</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:56">reqs</name><index pos:start="25:57" pos:end="25:59">[<expr pos:start="25:58" pos:end="25:58"><literal type="number" pos:start="25:58" pos:end="25:58">0</literal></expr>]</index></name><operator pos:start="25:60" pos:end="25:61">-&gt;</operator><name pos:start="25:62" pos:end="25:69"><name pos:start="25:62" pos:end="25:64">dev</name><operator pos:start="25:65" pos:end="25:66">-&gt;</operator><name pos:start="25:67" pos:end="25:69">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:72"><expr pos:start="27:5" pos:end="27:71"><name pos:start="27:5" pos:end="27:16">max_xfer_len</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:71"><name pos:start="27:20" pos:end="27:31">MIN_NON_ZERO</name><argument_list pos:start="27:32" pos:end="27:71">(<argument pos:start="27:33" pos:end="27:44"><expr pos:start="27:33" pos:end="27:44"><name pos:start="27:33" pos:end="27:44">max_xfer_len</name></expr></argument>, <argument pos:start="27:47" pos:end="27:70"><expr pos:start="27:47" pos:end="27:70"><name pos:start="27:47" pos:end="27:70">BDRV_REQUEST_MAX_SECTORS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="33:29"><expr pos:start="31:5" pos:end="33:28"><call pos:start="31:5" pos:end="33:28"><name pos:start="31:5" pos:end="31:9">qsort</name><argument_list pos:start="31:10" pos:end="33:28">(<argument pos:start="31:11" pos:end="31:19"><expr pos:start="31:11" pos:end="31:19"><name pos:start="31:11" pos:end="31:19"><name pos:start="31:11" pos:end="31:13">mrb</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:19">reqs</name></name></expr></argument>, <argument pos:start="31:22" pos:end="31:34"><expr pos:start="31:22" pos:end="31:34"><name pos:start="31:22" pos:end="31:34"><name pos:start="31:22" pos:end="31:24">mrb</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:34">num_reqs</name></name></expr></argument>, <argument pos:start="31:37" pos:end="31:54"><expr pos:start="31:37" pos:end="31:54"><sizeof pos:start="31:37" pos:end="31:54">sizeof<argument_list pos:start="31:43" pos:end="31:54">(<argument pos:start="31:44" pos:end="31:53"><expr pos:start="31:44" pos:end="31:53"><operator pos:start="31:44" pos:end="31:44">*</operator><name pos:start="31:45" pos:end="31:53"><name pos:start="31:45" pos:end="31:47">mrb</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:53">reqs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

          <argument pos:start="33:11" pos:end="33:27"><expr pos:start="33:11" pos:end="33:27"><operator pos:start="33:11" pos:end="33:11">&amp;</operator><name pos:start="33:12" pos:end="33:27">multireq_compare</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="37:5" pos:end="91:5">for <control pos:start="37:9" pos:end="37:39">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:34"><expr pos:start="37:17" pos:end="37:33"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:23">mrb</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:33">num_reqs</name></name></expr>;</condition> <incr pos:start="37:36" pos:end="37:38"><expr pos:start="37:36" pos:end="37:38"><name pos:start="37:36" pos:end="37:36">i</name><operator pos:start="37:37" pos:end="37:38">++</operator></expr></incr>)</control> <block pos:start="37:41" pos:end="91:5">{<block_content pos:start="39:9" pos:end="89:19">

        <decl_stmt pos:start="39:9" pos:end="39:43"><decl pos:start="39:9" pos:end="39:42"><type pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:22">VirtIOBlockReq</name> <modifier pos:start="39:24" pos:end="39:24">*</modifier></type><name pos:start="39:25" pos:end="39:27">req</name> <init pos:start="39:29" pos:end="39:42">= <expr pos:start="39:31" pos:end="39:42"><name pos:start="39:31" pos:end="39:42"><name pos:start="39:31" pos:end="39:33">mrb</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:39">reqs</name><index pos:start="39:40" pos:end="39:42">[<expr pos:start="39:41" pos:end="39:41"><name pos:start="39:41" pos:end="39:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="41:9" pos:end="69:9"><if pos:start="41:9" pos:end="69:9">if <condition pos:start="41:12" pos:end="41:25">(<expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:20">num_reqs</name> <operator pos:start="41:22" pos:end="41:22">&gt;</operator> <literal type="number" pos:start="41:24" pos:end="41:24">0</literal></expr>)</condition> <block pos:start="41:27" pos:end="69:9">{<block_content pos:start="55:13" pos:end="67:13">

            <comment type="block" pos:start="43:13" pos:end="53:15">/*

             * NOTE: We cannot merge the requests in below situations:

             * 1. requests are not sequential

             * 2. merge would exceed maximum number of IOVs

             * 3. merge would exceed maximum transfer length of backend device

             */</comment>

            <if_stmt pos:start="55:13" pos:end="67:13"><if pos:start="55:13" pos:end="67:13">if <condition pos:start="55:16" pos:end="61:78">(<expr pos:start="55:17" pos:end="61:77"><name pos:start="55:17" pos:end="55:26">sector_num</name> <operator pos:start="55:28" pos:end="55:28">+</operator> <name pos:start="55:30" pos:end="55:39">nb_sectors</name> <operator pos:start="55:41" pos:end="55:42">!=</operator> <name pos:start="55:44" pos:end="55:58"><name pos:start="55:44" pos:end="55:46">req</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:58">sector_num</name></name> <operator pos:start="55:60" pos:end="55:61">||</operator>

                <name pos:start="57:17" pos:end="57:20">niov</name> <operator pos:start="57:22" pos:end="57:22">&gt;</operator> <call pos:start="57:24" pos:end="57:43"><name pos:start="57:24" pos:end="57:38">blk_get_max_iov</name><argument_list pos:start="57:39" pos:end="57:43">(<argument pos:start="57:40" pos:end="57:42"><expr pos:start="57:40" pos:end="57:42"><name pos:start="57:40" pos:end="57:42">blk</name></expr></argument>)</argument_list></call> <operator pos:start="57:45" pos:end="57:45">-</operator> <name pos:start="57:47" pos:end="57:60"><name pos:start="57:47" pos:end="57:49">req</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:55">qiov</name><operator pos:start="57:56" pos:end="57:56">.</operator><name pos:start="57:57" pos:end="57:60">niov</name></name> <operator pos:start="57:62" pos:end="57:63">||</operator>

                <name pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:19">req</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:25">qiov</name><operator pos:start="59:26" pos:end="59:26">.</operator><name pos:start="59:27" pos:end="59:30">size</name></name> <operator pos:start="59:32" pos:end="59:32">/</operator> <name pos:start="59:34" pos:end="59:49">BDRV_SECTOR_SIZE</name> <operator pos:start="59:51" pos:end="59:51">&gt;</operator> <name pos:start="59:53" pos:end="59:64">max_xfer_len</name> <operator pos:start="59:66" pos:end="59:67">||</operator>

                <name pos:start="61:17" pos:end="61:26">nb_sectors</name> <operator pos:start="61:28" pos:end="61:28">&gt;</operator> <name pos:start="61:30" pos:end="61:41">max_xfer_len</name> <operator pos:start="61:43" pos:end="61:43">-</operator> <name pos:start="61:45" pos:end="61:58"><name pos:start="61:45" pos:end="61:47">req</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:53">qiov</name><operator pos:start="61:54" pos:end="61:54">.</operator><name pos:start="61:55" pos:end="61:58">size</name></name> <operator pos:start="61:60" pos:end="61:60">/</operator> <name pos:start="61:62" pos:end="61:77">BDRV_SECTOR_SIZE</name></expr>)</condition> <block pos:start="61:80" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:29">

                <expr_stmt pos:start="63:17" pos:end="63:65"><expr pos:start="63:17" pos:end="63:64"><call pos:start="63:17" pos:end="63:64"><name pos:start="63:17" pos:end="63:31">submit_requests</name><argument_list pos:start="63:32" pos:end="63:64">(<argument pos:start="63:33" pos:end="63:35"><expr pos:start="63:33" pos:end="63:35"><name pos:start="63:33" pos:end="63:35">blk</name></expr></argument>, <argument pos:start="63:38" pos:end="63:40"><expr pos:start="63:38" pos:end="63:40"><name pos:start="63:38" pos:end="63:40">mrb</name></expr></argument>, <argument pos:start="63:43" pos:end="63:47"><expr pos:start="63:43" pos:end="63:47"><name pos:start="63:43" pos:end="63:47">start</name></expr></argument>, <argument pos:start="63:50" pos:end="63:57"><expr pos:start="63:50" pos:end="63:57"><name pos:start="63:50" pos:end="63:57">num_reqs</name></expr></argument>, <argument pos:start="63:60" pos:end="63:63"><expr pos:start="63:60" pos:end="63:63"><name pos:start="63:60" pos:end="63:63">niov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:29"><expr pos:start="65:17" pos:end="65:28"><name pos:start="65:17" pos:end="65:24">num_reqs</name> <operator pos:start="65:26" pos:end="65:26">=</operator> <literal type="number" pos:start="65:28" pos:end="65:28">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="73:26">(<expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:20">num_reqs</name> <operator pos:start="73:22" pos:end="73:23">==</operator> <literal type="number" pos:start="73:25" pos:end="73:25">0</literal></expr>)</condition> <block pos:start="73:28" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:22">

            <expr_stmt pos:start="75:13" pos:end="75:41"><expr pos:start="75:13" pos:end="75:40"><name pos:start="75:13" pos:end="75:22">sector_num</name> <operator pos:start="75:24" pos:end="75:24">=</operator> <name pos:start="75:26" pos:end="75:40"><name pos:start="75:26" pos:end="75:28">req</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:40">sector_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:34"><expr pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:22">nb_sectors</name> <operator pos:start="77:24" pos:end="77:24">=</operator> <name pos:start="77:26" pos:end="77:29">niov</name> <operator pos:start="77:31" pos:end="77:31">=</operator> <literal type="number" pos:start="77:33" pos:end="77:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:22"><expr pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:17">start</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <name pos:start="79:21" pos:end="79:21">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:56"><expr pos:start="85:9" pos:end="85:55"><name pos:start="85:9" pos:end="85:18">nb_sectors</name> <operator pos:start="85:20" pos:end="85:21">+=</operator> <name pos:start="85:23" pos:end="85:36"><name pos:start="85:23" pos:end="85:25">req</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:31">qiov</name><operator pos:start="85:32" pos:end="85:32">.</operator><name pos:start="85:33" pos:end="85:36">size</name></name> <operator pos:start="85:38" pos:end="85:38">/</operator> <name pos:start="85:40" pos:end="85:55">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:31"><expr pos:start="87:9" pos:end="87:30"><name pos:start="87:9" pos:end="87:12">niov</name> <operator pos:start="87:14" pos:end="87:15">+=</operator> <name pos:start="87:17" pos:end="87:30"><name pos:start="87:17" pos:end="87:19">req</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:25">qiov</name><operator pos:start="87:26" pos:end="87:26">.</operator><name pos:start="87:27" pos:end="87:30">niov</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:19"><expr pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:16">num_reqs</name><operator pos:start="89:17" pos:end="89:18">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="95:5" pos:end="95:53"><expr pos:start="95:5" pos:end="95:52"><call pos:start="95:5" pos:end="95:52"><name pos:start="95:5" pos:end="95:19">submit_requests</name><argument_list pos:start="95:20" pos:end="95:52">(<argument pos:start="95:21" pos:end="95:23"><expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">blk</name></expr></argument>, <argument pos:start="95:26" pos:end="95:28"><expr pos:start="95:26" pos:end="95:28"><name pos:start="95:26" pos:end="95:28">mrb</name></expr></argument>, <argument pos:start="95:31" pos:end="95:35"><expr pos:start="95:31" pos:end="95:35"><name pos:start="95:31" pos:end="95:35">start</name></expr></argument>, <argument pos:start="95:38" pos:end="95:45"><expr pos:start="95:38" pos:end="95:45"><name pos:start="95:38" pos:end="95:45">num_reqs</name></expr></argument>, <argument pos:start="95:48" pos:end="95:51"><expr pos:start="95:48" pos:end="95:51"><name pos:start="95:48" pos:end="95:51">niov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:22"><expr pos:start="97:5" pos:end="97:21"><name pos:start="97:5" pos:end="97:17"><name pos:start="97:5" pos:end="97:7">mrb</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:17">num_reqs</name></name> <operator pos:start="97:19" pos:end="97:19">=</operator> <literal type="number" pos:start="97:21" pos:end="97:21">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
