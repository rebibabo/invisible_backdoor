<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13763.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">bt_device_done</name><parameter_list pos:start="1:20" pos:end="1:44">(<parameter pos:start="1:21" pos:end="1:43"><decl pos:start="1:21" pos:end="1:43"><type pos:start="1:21" pos:end="1:43"><name pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:26">struct</name> <name pos:start="1:28" pos:end="1:38">bt_device_s</name></name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:19">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:22">bt_device_s</name></name> <modifier pos:start="5:24" pos:end="5:24">*</modifier><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">p</name> <init pos:start="5:28" pos:end="5:45">= <expr pos:start="5:30" pos:end="5:45"><operator pos:start="5:30" pos:end="5:30">&amp;</operator><name pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:33">dev</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:38">net</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:45">slave</name></name></expr></init></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="11:24">while <condition pos:start="9:11" pos:end="9:27">(<expr pos:start="9:12" pos:end="9:26"><operator pos:start="9:12" pos:end="9:12">*</operator><name pos:start="9:13" pos:end="9:13">p</name> <operator pos:start="9:15" pos:end="9:16">&amp;&amp;</operator> <operator pos:start="9:18" pos:end="9:18">*</operator><name pos:start="9:19" pos:end="9:19">p</name> <operator pos:start="9:21" pos:end="9:22">!=</operator> <name pos:start="9:24" pos:end="9:26">dev</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:24"><block_content pos:start="11:9" pos:end="11:24">

        <expr_stmt pos:start="11:9" pos:end="11:24"><expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:9">p</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <operator pos:start="11:13" pos:end="11:13">&amp;</operator><name pos:start="11:14" pos:end="11:23"><operator pos:start="11:14" pos:end="11:14">(</operator><operator pos:start="11:15" pos:end="11:15">*</operator><name pos:start="11:16" pos:end="11:16">p</name><operator pos:start="11:17" pos:end="11:17">)</operator><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:23">next</name></name></expr>;</expr_stmt></block_content></block></while>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><operator pos:start="13:9" pos:end="13:9">*</operator><name pos:start="13:10" pos:end="13:10">p</name> <operator pos:start="13:12" pos:end="13:13">!=</operator> <name pos:start="13:15" pos:end="13:17">dev</name></expr>)</condition> <block pos:start="13:20" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:17">

        <expr_stmt pos:start="15:9" pos:end="17:51"><expr pos:start="15:9" pos:end="17:50"><call pos:start="15:9" pos:end="17:50"><name pos:start="15:9" pos:end="15:15">fprintf</name><argument_list pos:start="15:16" pos:end="17:50">(<argument pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22">stderr</name></expr></argument>, <argument pos:start="15:25" pos:end="15:52"><expr pos:start="15:25" pos:end="15:52"><literal type="string" pos:start="15:25" pos:end="15:52">"%s: bad bt device \"%s\"\n"</literal></expr></argument>, <argument pos:start="15:55" pos:end="15:66"><expr pos:start="15:55" pos:end="15:66"><name pos:start="15:55" pos:end="15:66">__FUNCTION__</name></expr></argument>,

                        <argument pos:start="17:25" pos:end="17:49"><expr pos:start="17:25" pos:end="17:49"><ternary pos:start="17:25" pos:end="17:49"><condition pos:start="17:25" pos:end="17:39"><expr pos:start="17:25" pos:end="17:37"><name pos:start="17:25" pos:end="17:37"><name pos:start="17:25" pos:end="17:27">dev</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:37">lmp_name</name></name></expr> ?</condition><then/><else pos:start="17:40" pos:end="17:49">: <expr pos:start="17:42" pos:end="17:49"><literal type="string" pos:start="17:42" pos:end="17:49">"(null)"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:17"><expr pos:start="19:9" pos:end="19:16"><call pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:12">exit</name><argument_list pos:start="19:13" pos:end="19:16">(<argument pos:start="19:14" pos:end="19:15"><expr pos:start="19:14" pos:end="19:15"><operator pos:start="19:14" pos:end="19:14">-</operator><literal type="number" pos:start="19:15" pos:end="19:15">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><operator pos:start="25:5" pos:end="25:5">*</operator><name pos:start="25:6" pos:end="25:6">p</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <name pos:start="25:10" pos:end="25:18"><name pos:start="25:10" pos:end="25:12">dev</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:18">next</name></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
