<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1759.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">AlphaCPU</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:24">cpu_alpha_init</name><parameter_list pos:start="1:25" pos:end="1:47">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:37"><specifier pos:start="1:26" pos:end="1:30">const</specifier> <name pos:start="1:32" pos:end="1:35">char</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:46">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:15">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AlphaCPU</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">ObjectClass</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:26">cpu_class</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:13">cpu_class</name> <operator pos:start="11:15" pos:end="11:15">=</operator> <call pos:start="11:17" pos:end="11:50"><name pos:start="11:17" pos:end="11:39">alpha_cpu_class_by_name</name><argument_list pos:start="11:40" pos:end="11:50">(<argument pos:start="11:41" pos:end="11:49"><expr pos:start="11:41" pos:end="11:49"><name pos:start="11:41" pos:end="11:49">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:17">cpu_class</name> <operator pos:start="13:19" pos:end="13:20">==</operator> <name pos:start="13:22" pos:end="13:25">NULL</name></expr>)</condition> <block pos:start="13:28" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:55">

        <comment type="block" pos:start="15:9" pos:end="15:74">/* Default to ev67; no reason not to emulate insns by default.  */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:55"><expr pos:start="17:9" pos:end="17:54"><name pos:start="17:9" pos:end="17:17">cpu_class</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:54"><name pos:start="17:21" pos:end="17:40">object_class_by_name</name><argument_list pos:start="17:41" pos:end="17:54">(<argument pos:start="17:42" pos:end="17:53"><expr pos:start="17:42" pos:end="17:53"><call pos:start="17:42" pos:end="17:53"><name pos:start="17:42" pos:end="17:45">TYPE</name><argument_list pos:start="17:46" pos:end="17:53">(<argument pos:start="17:47" pos:end="17:52"><expr pos:start="17:47" pos:end="17:52"><literal type="string" pos:start="17:47" pos:end="17:52">"ev67"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:66"><expr pos:start="21:5" pos:end="21:65"><name pos:start="21:5" pos:end="21:7">cpu</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:65"><name pos:start="21:11" pos:end="21:19">ALPHA_CPU</name><argument_list pos:start="21:20" pos:end="21:65">(<argument pos:start="21:21" pos:end="21:64"><expr pos:start="21:21" pos:end="21:64"><call pos:start="21:21" pos:end="21:64"><name pos:start="21:21" pos:end="21:30">object_new</name><argument_list pos:start="21:31" pos:end="21:64">(<argument pos:start="21:32" pos:end="21:63"><expr pos:start="21:32" pos:end="21:63"><call pos:start="21:32" pos:end="21:63"><name pos:start="21:32" pos:end="21:52">object_class_get_name</name><argument_list pos:start="21:53" pos:end="21:63">(<argument pos:start="21:54" pos:end="21:62"><expr pos:start="21:54" pos:end="21:62"><name pos:start="21:54" pos:end="21:62">cpu_class</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:66"><expr pos:start="25:5" pos:end="25:65"><call pos:start="25:5" pos:end="25:65"><name pos:start="25:5" pos:end="25:28">object_property_set_bool</name><argument_list pos:start="25:29" pos:end="25:65">(<argument pos:start="25:30" pos:end="25:40"><expr pos:start="25:30" pos:end="25:40"><call pos:start="25:30" pos:end="25:40"><name pos:start="25:30" pos:end="25:35">OBJECT</name><argument_list pos:start="25:36" pos:end="25:40">(<argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:39">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:43" pos:end="25:46"><expr pos:start="25:43" pos:end="25:46"><name pos:start="25:43" pos:end="25:46">true</name></expr></argument>, <argument pos:start="25:49" pos:end="25:58"><expr pos:start="25:49" pos:end="25:58"><literal type="string" pos:start="25:49" pos:end="25:58">"realized"</literal></expr></argument>, <argument pos:start="25:61" pos:end="25:64"><expr pos:start="25:61" pos:end="25:64"><name pos:start="25:61" pos:end="25:64">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="29:5" pos:end="29:15">return <expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">cpu</name></expr>;</return>

</block_content>}</block></function>
</unit>
