<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23427.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">dxtory_decode_v2_565</name><parameter_list pos:start="1:32" pos:end="3:77">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:62">AVFrame</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">pic</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">src</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">src_size</name></decl></parameter>, <parameter pos:start="3:67" pos:end="3:76"><decl pos:start="3:67" pos:end="3:76"><type pos:start="3:67" pos:end="3:76"><name pos:start="3:67" pos:end="3:69">int</name></type> <name pos:start="3:71" pos:end="3:76">is_565</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">GetByteContext</name></type> <name pos:start="7:20" pos:end="7:21">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type>  <name pos:start="9:20" pos:end="9:22">gb2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">nslices</name></decl>, <decl pos:start="11:18" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:22">slice</name></decl>, <decl pos:start="11:25" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:36">slice_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">off</name></decl>, <decl pos:start="13:19" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:19" pos:end="13:28">slice_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:16">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><call pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:20">bytestream2_init</name><argument_list pos:start="21:21" pos:end="21:40">(<argument pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:24">gb</name></expr></argument>, <argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">src</name></expr></argument>, <argument pos:start="21:32" pos:end="21:39"><expr pos:start="21:32" pos:end="21:39"><name pos:start="21:32" pos:end="21:39">src_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:11">nslices</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:39"><name pos:start="23:15" pos:end="23:34">bytestream2_get_le16</name><argument_list pos:start="23:35" pos:end="23:39">(<argument pos:start="23:36" pos:end="23:38"><expr pos:start="23:36" pos:end="23:38"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:7">off</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:38"><name pos:start="25:11" pos:end="25:17">FFALIGN</name><argument_list pos:start="25:18" pos:end="25:38">(<argument pos:start="25:19" pos:end="25:33"><expr pos:start="25:19" pos:end="25:33"><name pos:start="25:19" pos:end="25:25">nslices</name> <operator pos:start="25:27" pos:end="25:27">*</operator> <literal type="number" pos:start="25:29" pos:end="25:31">4</literal> <operator pos:start="25:31" pos:end="25:31">+</operator> <literal type="number" pos:start="25:33" pos:end="25:33">2</literal></expr></argument>, <argument pos:start="25:36" pos:end="25:37"><expr pos:start="25:36" pos:end="25:37"><literal type="number" pos:start="25:36" pos:end="25:37">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:16">src_size</name> <operator pos:start="27:18" pos:end="27:18">&lt;</operator> <name pos:start="27:20" pos:end="27:22">off</name></expr>)</condition> <block pos:start="27:25" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:35">

        <expr_stmt pos:start="29:9" pos:end="29:55"><expr pos:start="29:9" pos:end="29:54"><call pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:54">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:53"><expr pos:start="29:37" pos:end="29:53"><literal type="string" pos:start="29:37" pos:end="29:53">"no slice data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:35">return <expr pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:44">(<expr pos:start="37:9" pos:end="37:43"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:16">nslices</name> <operator pos:start="37:18" pos:end="37:19">||</operator> <name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:25">avctx</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:33">height</name></name> <operator pos:start="37:35" pos:end="37:35">%</operator> <name pos:start="37:37" pos:end="37:43">nslices</name></expr>)</condition> <block pos:start="37:46" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:36">

        <expr_stmt pos:start="39:9" pos:end="41:59"><expr pos:start="39:9" pos:end="41:58"><call pos:start="39:9" pos:end="41:58"><name pos:start="39:9" pos:end="39:29">avpriv_request_sample</name><argument_list pos:start="39:30" pos:end="41:58">(<argument pos:start="39:31" pos:end="39:35"><expr pos:start="39:31" pos:end="39:35"><name pos:start="39:31" pos:end="39:35">avctx</name></expr></argument>, <argument pos:start="39:38" pos:end="39:58"><expr pos:start="39:38" pos:end="39:58"><literal type="string" pos:start="39:38" pos:end="39:58">"%d slices for %dx%d"</literal></expr></argument>, <argument pos:start="39:61" pos:end="39:67"><expr pos:start="39:61" pos:end="39:67"><name pos:start="39:61" pos:end="39:67">nslices</name></expr></argument>,

                              <argument pos:start="41:31" pos:end="41:42"><expr pos:start="41:31" pos:end="41:42"><name pos:start="41:31" pos:end="41:42"><name pos:start="41:31" pos:end="41:35">avctx</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:42">width</name></name></expr></argument>, <argument pos:start="41:45" pos:end="41:57"><expr pos:start="41:45" pos:end="41:57"><name pos:start="41:45" pos:end="41:57"><name pos:start="41:45" pos:end="41:49">avctx</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:57">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:36">return <expr pos:start="43:16" pos:end="43:35"><name pos:start="43:16" pos:end="43:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:43"><expr pos:start="49:5" pos:end="49:42"><name pos:start="49:5" pos:end="49:16">slice_height</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:32"><name pos:start="49:20" pos:end="49:24">avctx</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:32">height</name></name> <operator pos:start="49:34" pos:end="49:34">/</operator> <name pos:start="49:36" pos:end="49:42">nslices</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:38"><expr pos:start="51:5" pos:end="51:37"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:9">avctx</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:18">pix_fmt</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:37">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:19"><if pos:start="53:5" pos:end="55:19">if <condition pos:start="53:8" pos:end="53:49">(<expr pos:start="53:9" pos:end="53:48"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:12">ret</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:43"><name pos:start="53:16" pos:end="53:28">ff_get_buffer</name><argument_list pos:start="53:29" pos:end="53:43">(<argument pos:start="53:30" pos:end="53:34"><expr pos:start="53:30" pos:end="53:34"><name pos:start="53:30" pos:end="53:34">avctx</name></expr></argument>, <argument pos:start="53:37" pos:end="53:39"><expr pos:start="53:37" pos:end="53:39"><name pos:start="53:37" pos:end="53:39">pic</name></expr></argument>, <argument pos:start="53:42" pos:end="53:42"><expr pos:start="53:42" pos:end="53:42"><literal type="number" pos:start="53:42" pos:end="53:42">0</literal></expr></argument>)</argument_list></call><operator pos:start="53:44" pos:end="53:44">)</operator> <operator pos:start="53:46" pos:end="53:46">&lt;</operator> <literal type="number" pos:start="53:48" pos:end="53:48">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:19"><block_content pos:start="55:9" pos:end="55:19">

        <return pos:start="55:9" pos:end="55:19">return <expr pos:start="55:16" pos:end="55:18"><name pos:start="55:16" pos:end="55:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:7">dst</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <name pos:start="59:11" pos:end="59:22"><name pos:start="59:11" pos:end="59:13">pic</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:19">data</name><index pos:start="59:20" pos:end="59:22">[<expr pos:start="59:21" pos:end="59:21"><literal type="number" pos:start="59:21" pos:end="59:21">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="61:5" pos:end="87:5">for <control pos:start="61:9" pos:end="61:45">(<init pos:start="61:10" pos:end="61:19"><expr pos:start="61:10" pos:end="61:18"><name pos:start="61:10" pos:end="61:14">slice</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:36"><expr pos:start="61:21" pos:end="61:35"><name pos:start="61:21" pos:end="61:25">slice</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <name pos:start="61:29" pos:end="61:35">nslices</name></expr>;</condition> <incr pos:start="61:38" pos:end="61:44"><expr pos:start="61:38" pos:end="61:44"><name pos:start="61:38" pos:end="61:42">slice</name><operator pos:start="61:43" pos:end="61:44">++</operator></expr></incr>)</control> <block pos:start="61:47" pos:end="87:5">{<block_content pos:start="63:9" pos:end="85:26">

        <expr_stmt pos:start="63:9" pos:end="63:47"><expr pos:start="63:9" pos:end="63:46"><name pos:start="63:9" pos:end="63:18">slice_size</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:46"><name pos:start="63:22" pos:end="63:41">bytestream2_get_le32</name><argument_list pos:start="63:42" pos:end="63:46">(<argument pos:start="63:43" pos:end="63:45"><expr pos:start="63:43" pos:end="63:45"><operator pos:start="63:43" pos:end="63:43">&amp;</operator><name pos:start="63:44" pos:end="63:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:70"><expr pos:start="67:9" pos:end="67:69"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:69"><name pos:start="67:15" pos:end="67:30">check_slice_size</name><argument_list pos:start="67:31" pos:end="67:69">(<argument pos:start="67:32" pos:end="67:36"><expr pos:start="67:32" pos:end="67:36"><name pos:start="67:32" pos:end="67:36">avctx</name></expr></argument>, <argument pos:start="67:39" pos:end="67:41"><expr pos:start="67:39" pos:end="67:41"><name pos:start="67:39" pos:end="67:41">src</name></expr></argument>, <argument pos:start="67:44" pos:end="67:51"><expr pos:start="67:44" pos:end="67:51"><name pos:start="67:44" pos:end="67:51">src_size</name></expr></argument>, <argument pos:start="67:54" pos:end="67:63"><expr pos:start="67:54" pos:end="67:63"><name pos:start="67:54" pos:end="67:63">slice_size</name></expr></argument>, <argument pos:start="67:66" pos:end="67:68"><expr pos:start="67:66" pos:end="67:68"><name pos:start="67:66" pos:end="67:68">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:23"><if pos:start="69:9" pos:end="71:23">if <condition pos:start="69:12" pos:end="69:20">(<expr pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">&lt;</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:23"><block_content pos:start="71:13" pos:end="71:23">

            <return pos:start="71:13" pos:end="71:23">return <expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:67"><expr pos:start="75:9" pos:end="75:66"><call pos:start="75:9" pos:end="75:66"><name pos:start="75:9" pos:end="75:21">init_get_bits</name><argument_list pos:start="75:22" pos:end="75:66">(<argument pos:start="75:23" pos:end="75:26"><expr pos:start="75:23" pos:end="75:26"><operator pos:start="75:23" pos:end="75:23">&amp;</operator><name pos:start="75:24" pos:end="75:26">gb2</name></expr></argument>, <argument pos:start="75:29" pos:end="75:42"><expr pos:start="75:29" pos:end="75:42"><name pos:start="75:29" pos:end="75:31">src</name> <operator pos:start="75:33" pos:end="75:33">+</operator> <name pos:start="75:35" pos:end="75:37">off</name> <operator pos:start="75:39" pos:end="75:39">+</operator> <literal type="number" pos:start="75:41" pos:end="75:42">16</literal></expr></argument>, <argument pos:start="75:45" pos:end="75:65"><expr pos:start="75:45" pos:end="75:65"><operator pos:start="75:45" pos:end="75:45">(</operator><name pos:start="75:46" pos:end="75:55">slice_size</name> <operator pos:start="75:57" pos:end="75:57">-</operator> <literal type="number" pos:start="75:59" pos:end="75:60">16</literal><operator pos:start="75:61" pos:end="75:61">)</operator> <operator pos:start="75:63" pos:end="75:63">*</operator> <literal type="number" pos:start="75:65" pos:end="75:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="79:55"><expr pos:start="77:9" pos:end="79:54"><call pos:start="77:9" pos:end="79:54"><name pos:start="77:9" pos:end="77:28">dx2_decode_slice_565</name><argument_list pos:start="77:29" pos:end="79:54">(<argument pos:start="77:30" pos:end="77:33"><expr pos:start="77:30" pos:end="77:33"><operator pos:start="77:30" pos:end="77:30">&amp;</operator><name pos:start="77:31" pos:end="77:33">gb2</name></expr></argument>, <argument pos:start="77:36" pos:end="77:47"><expr pos:start="77:36" pos:end="77:47"><name pos:start="77:36" pos:end="77:47"><name pos:start="77:36" pos:end="77:40">avctx</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:47">width</name></name></expr></argument>, <argument pos:start="77:50" pos:end="77:61"><expr pos:start="77:50" pos:end="77:61"><name pos:start="77:50" pos:end="77:61">slice_height</name></expr></argument>, <argument pos:start="77:64" pos:end="77:66"><expr pos:start="77:64" pos:end="77:66"><name pos:start="77:64" pos:end="77:66">dst</name></expr></argument>,

                             <argument pos:start="79:30" pos:end="79:45"><expr pos:start="79:30" pos:end="79:45"><name pos:start="79:30" pos:end="79:45"><name pos:start="79:30" pos:end="79:32">pic</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:42">linesize</name><index pos:start="79:43" pos:end="79:45">[<expr pos:start="79:44" pos:end="79:44"><literal type="number" pos:start="79:44" pos:end="79:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="79:48" pos:end="79:53"><expr pos:start="79:48" pos:end="79:53"><name pos:start="79:48" pos:end="79:53">is_565</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:47"><expr pos:start="83:9" pos:end="83:46"><name pos:start="83:9" pos:end="83:11">dst</name> <operator pos:start="83:13" pos:end="83:14">+=</operator> <name pos:start="83:16" pos:end="83:31"><name pos:start="83:16" pos:end="83:18">pic</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:28">linesize</name><index pos:start="83:29" pos:end="83:31">[<expr pos:start="83:30" pos:end="83:30"><literal type="number" pos:start="83:30" pos:end="83:30">0</literal></expr>]</index></name> <operator pos:start="83:33" pos:end="83:33">*</operator> <name pos:start="83:35" pos:end="83:46">slice_height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:26"><expr pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:11">off</name> <operator pos:start="85:13" pos:end="85:14">+=</operator> <name pos:start="85:16" pos:end="85:25">slice_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
