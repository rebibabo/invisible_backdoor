<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20894.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">es1370_initfn</name> <parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:37"><name pos:start="1:27" pos:end="1:35">PCIDevice</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">ES1370State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:54">= <expr pos:start="5:22" pos:end="5:54"><call pos:start="5:22" pos:end="5:54"><name pos:start="5:22" pos:end="5:30">DO_UPCAST</name> <argument_list pos:start="5:32" pos:end="5:54">(<argument pos:start="5:33" pos:end="5:43"><expr pos:start="5:33" pos:end="5:43"><name pos:start="5:33" pos:end="5:43">ES1370State</name></expr></argument>, <argument pos:start="5:46" pos:end="5:48"><expr pos:start="5:46" pos:end="5:48"><name pos:start="5:46" pos:end="5:48">dev</name></expr></argument>, <argument pos:start="5:51" pos:end="5:53"><expr pos:start="5:51" pos:end="5:53"><name pos:start="5:51" pos:end="5:53">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">c</name> <init pos:start="7:16" pos:end="7:30">= <expr pos:start="7:18" pos:end="7:30"><name pos:start="7:18" pos:end="7:30"><name pos:start="7:18" pos:end="7:18">s</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:23">dev</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:30">config</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:56"><expr pos:start="11:5" pos:end="11:55"><call pos:start="11:5" pos:end="11:55"><name pos:start="11:5" pos:end="11:28">pci_config_set_vendor_id</name> <argument_list pos:start="11:30" pos:end="11:55">(<argument pos:start="11:31" pos:end="11:31"><expr pos:start="11:31" pos:end="11:31"><name pos:start="11:31" pos:end="11:31">c</name></expr></argument>, <argument pos:start="11:34" pos:end="11:54"><expr pos:start="11:34" pos:end="11:54"><name pos:start="11:34" pos:end="11:54">PCI_VENDOR_ID_ENSONIQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:63"><expr pos:start="13:5" pos:end="13:62"><call pos:start="13:5" pos:end="13:62"><name pos:start="13:5" pos:end="13:28">pci_config_set_device_id</name> <argument_list pos:start="13:30" pos:end="13:62">(<argument pos:start="13:31" pos:end="13:31"><expr pos:start="13:31" pos:end="13:31"><name pos:start="13:31" pos:end="13:31">c</name></expr></argument>, <argument pos:start="13:34" pos:end="13:61"><expr pos:start="13:34" pos:end="13:61"><name pos:start="13:34" pos:end="13:61">PCI_DEVICE_ID_ENSONIQ_ES1370</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:52"><expr pos:start="15:5" pos:end="15:51"><name pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:5">c</name><index pos:start="15:6" pos:end="15:21">[<expr pos:start="15:7" pos:end="15:20"><name pos:start="15:7" pos:end="15:16">PCI_STATUS</name> <operator pos:start="15:18" pos:end="15:18">+</operator> <literal type="number" pos:start="15:20" pos:end="15:20">1</literal></expr>]</index></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <name pos:start="15:25" pos:end="15:46">PCI_STATUS_DEVSEL_SLOW</name> <operator pos:start="15:48" pos:end="15:49">&gt;&gt;</operator> <literal type="number" pos:start="15:51" pos:end="15:51">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="22:0"><expr pos:start="17:5" pos:end="17:56"><call pos:start="17:5" pos:end="17:56"><name pos:start="17:5" pos:end="17:24">pci_config_set_class</name> <argument_list pos:start="17:26" pos:end="17:56">(<argument pos:start="17:27" pos:end="17:27"><expr pos:start="17:27" pos:end="17:27"><name pos:start="17:27" pos:end="17:27">c</name></expr></argument>, <argument pos:start="17:30" pos:end="17:55"><expr pos:start="17:30" pos:end="17:55"><name pos:start="17:30" pos:end="17:55">PCI_CLASS_MULTIMEDIA_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="21:1" pos:end="21:5">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:5"><literal type="number" pos:start="21:5" pos:end="21:5">1</literal></expr></cpp:if>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:5">c</name><index pos:start="23:6" pos:end="23:30">[<expr pos:start="23:7" pos:end="23:29"><name pos:start="23:7" pos:end="23:29">PCI_SUBSYSTEM_VENDOR_ID</name></expr>]</index></name> <operator pos:start="23:32" pos:end="23:32">=</operator> <literal type="number" pos:start="23:34" pos:end="23:37">0x42</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:5">c</name><index pos:start="25:6" pos:end="25:34">[<expr pos:start="25:7" pos:end="25:33"><name pos:start="25:7" pos:end="25:29">PCI_SUBSYSTEM_VENDOR_ID</name> <operator pos:start="25:31" pos:end="25:31">+</operator> <literal type="number" pos:start="25:33" pos:end="25:33">1</literal></expr>]</index></name> <operator pos:start="25:36" pos:end="25:36">=</operator> <literal type="number" pos:start="25:38" pos:end="25:41">0x49</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:5">c</name><index pos:start="27:6" pos:end="27:23">[<expr pos:start="27:7" pos:end="27:22"><name pos:start="27:7" pos:end="27:22">PCI_SUBSYSTEM_ID</name></expr>]</index></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <literal type="number" pos:start="27:27" pos:end="27:30">0x4c</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:5">c</name><index pos:start="29:6" pos:end="29:27">[<expr pos:start="29:7" pos:end="29:26"><name pos:start="29:7" pos:end="29:22">PCI_SUBSYSTEM_ID</name> <operator pos:start="29:24" pos:end="29:24">+</operator> <literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>]</index></name> <operator pos:start="29:29" pos:end="29:29">=</operator> <literal type="number" pos:start="29:31" pos:end="29:34">0x4c</literal></expr>;</expr_stmt>

<cpp:else pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:5">c</name><index pos:start="33:6" pos:end="33:30">[<expr pos:start="33:7" pos:end="33:29"><name pos:start="33:7" pos:end="33:29">PCI_SUBSYSTEM_VENDOR_ID</name></expr>]</index></name> <operator pos:start="33:32" pos:end="33:32">=</operator> <literal type="number" pos:start="33:34" pos:end="33:37">0x74</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:5">c</name><index pos:start="35:6" pos:end="35:34">[<expr pos:start="35:7" pos:end="35:33"><name pos:start="35:7" pos:end="35:29">PCI_SUBSYSTEM_VENDOR_ID</name> <operator pos:start="35:31" pos:end="35:31">+</operator> <literal type="number" pos:start="35:33" pos:end="35:33">1</literal></expr>]</index></name> <operator pos:start="35:36" pos:end="35:36">=</operator> <literal type="number" pos:start="35:38" pos:end="35:41">0x12</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:5">c</name><index pos:start="37:6" pos:end="37:23">[<expr pos:start="37:7" pos:end="37:22"><name pos:start="37:7" pos:end="37:22">PCI_SUBSYSTEM_ID</name></expr>]</index></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <literal type="number" pos:start="37:27" pos:end="37:30">0x71</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:5">c</name><index pos:start="39:6" pos:end="39:27">[<expr pos:start="39:7" pos:end="39:26"><name pos:start="39:7" pos:end="39:22">PCI_SUBSYSTEM_ID</name> <operator pos:start="39:24" pos:end="39:24">+</operator> <literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr>]</index></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <literal type="number" pos:start="39:31" pos:end="39:34">0x13</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:5">c</name><index pos:start="41:6" pos:end="41:26">[<expr pos:start="41:7" pos:end="41:25"><name pos:start="41:7" pos:end="41:25">PCI_CAPABILITY_LIST</name></expr>]</index></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <literal type="number" pos:start="41:30" pos:end="41:33">0xdc</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:5">c</name><index pos:start="43:6" pos:end="43:25">[<expr pos:start="43:7" pos:end="43:24"><name pos:start="43:7" pos:end="43:24">PCI_INTERRUPT_LINE</name></expr>]</index></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <literal type="number" pos:start="43:29" pos:end="43:30">10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="48:0"><expr pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:5">c</name><index pos:start="45:6" pos:end="45:11">[<expr pos:start="45:7" pos:end="45:10"><literal type="number" pos:start="45:7" pos:end="45:10">0xdc</literal></expr>]</index></name> <operator pos:start="45:13" pos:end="45:13">=</operator> <literal type="number" pos:start="45:15" pos:end="45:18">0x00</literal></expr>;</expr_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="51:5" pos:end="51:39">/* TODO: RST# value should be 0. */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:5">c</name><index pos:start="53:6" pos:end="53:24">[<expr pos:start="53:7" pos:end="53:23"><name pos:start="53:7" pos:end="53:23">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <literal type="number" pos:start="53:28" pos:end="53:28">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:5">c</name><index pos:start="55:6" pos:end="55:18">[<expr pos:start="55:7" pos:end="55:17"><name pos:start="55:7" pos:end="55:17">PCI_MIN_GNT</name></expr>]</index></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:25">0x0c</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:26"><expr pos:start="57:5" pos:end="57:25"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:5">c</name><index pos:start="57:6" pos:end="57:18">[<expr pos:start="57:7" pos:end="57:17"><name pos:start="57:7" pos:end="57:17">PCI_MAX_LAT</name></expr>]</index></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:25">0x80</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:78"><expr pos:start="61:5" pos:end="61:77"><call pos:start="61:5" pos:end="61:77"><name pos:start="61:5" pos:end="61:20">pci_register_bar</name> <argument_list pos:start="61:22" pos:end="61:77">(<argument pos:start="61:23" pos:end="61:29"><expr pos:start="61:23" pos:end="61:29"><operator pos:start="61:23" pos:end="61:23">&amp;</operator><name pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:24">s</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:29">dev</name></name></expr></argument>, <argument pos:start="61:32" pos:end="61:32"><expr pos:start="61:32" pos:end="61:32"><literal type="number" pos:start="61:32" pos:end="61:32">0</literal></expr></argument>, <argument pos:start="61:35" pos:end="61:37"><expr pos:start="61:35" pos:end="61:37"><literal type="number" pos:start="61:35" pos:end="61:37">256</literal></expr></argument>, <argument pos:start="61:40" pos:end="61:64"><expr pos:start="61:40" pos:end="61:64"><name pos:start="61:40" pos:end="61:64">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="61:67" pos:end="61:76"><expr pos:start="61:67" pos:end="61:76"><name pos:start="61:67" pos:end="61:76">es1370_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:45"><expr pos:start="63:5" pos:end="63:44"><call pos:start="63:5" pos:end="63:44"><name pos:start="63:5" pos:end="63:23">qemu_register_reset</name> <argument_list pos:start="63:25" pos:end="63:44">(<argument pos:start="63:26" pos:end="63:40"><expr pos:start="63:26" pos:end="63:40"><name pos:start="63:26" pos:end="63:40">es1370_on_reset</name></expr></argument>, <argument pos:start="63:43" pos:end="63:43"><expr pos:start="63:43" pos:end="63:43"><name pos:start="63:43" pos:end="63:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:43"><expr pos:start="67:5" pos:end="67:42"><call pos:start="67:5" pos:end="67:42"><name pos:start="67:5" pos:end="67:21">AUD_register_card</name> <argument_list pos:start="67:23" pos:end="67:42">(<argument pos:start="67:24" pos:end="67:31"><expr pos:start="67:24" pos:end="67:31"><literal type="string" pos:start="67:24" pos:end="67:31">"es1370"</literal></expr></argument>, <argument pos:start="67:34" pos:end="67:41"><expr pos:start="67:34" pos:end="67:41"><operator pos:start="67:34" pos:end="67:34">&amp;</operator><name pos:start="67:35" pos:end="67:41"><name pos:start="67:35" pos:end="67:35">s</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:41">card</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:21"><expr pos:start="69:5" pos:end="69:20"><call pos:start="69:5" pos:end="69:20"><name pos:start="69:5" pos:end="69:16">es1370_reset</name> <argument_list pos:start="69:18" pos:end="69:20">(<argument pos:start="69:19" pos:end="69:19"><expr pos:start="69:19" pos:end="69:19"><name pos:start="69:19" pos:end="69:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
