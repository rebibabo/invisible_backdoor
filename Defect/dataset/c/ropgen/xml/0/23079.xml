<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23079.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">s390_init_cpus</name><parameter_list pos:start="1:27" pos:end="1:49">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:39">MachineState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:48">machine</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MachineClass</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">mc</name> <init pos:start="5:22" pos:end="5:49">= <expr pos:start="5:24" pos:end="5:49"><call pos:start="5:24" pos:end="5:49"><name pos:start="5:24" pos:end="5:40">MACHINE_GET_CLASS</name><argument_list pos:start="5:41" pos:end="5:49">(<argument pos:start="5:42" pos:end="5:48"><expr pos:start="5:42" pos:end="5:48"><name pos:start="5:42" pos:end="5:48">machine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:38">(<expr pos:start="11:9" pos:end="11:37"><call pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:19">tcg_enabled</name><argument_list pos:start="11:20" pos:end="11:21">()</argument_list></call> <operator pos:start="11:23" pos:end="11:24">&amp;&amp;</operator> <name pos:start="11:26" pos:end="11:33">max_cpus</name> <operator pos:start="11:35" pos:end="11:35">&gt;</operator> <literal type="number" pos:start="11:37" pos:end="11:37">1</literal></expr>)</condition> <block pos:start="11:40" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:16">

        <expr_stmt pos:start="13:9" pos:end="15:64"><expr pos:start="13:9" pos:end="15:63"><call pos:start="13:9" pos:end="15:63"><name pos:start="13:9" pos:end="13:20">error_report</name><argument_list pos:start="13:21" pos:end="15:63">(<argument pos:start="13:22" pos:end="15:52"><expr pos:start="13:22" pos:end="15:52"><literal type="string" pos:start="13:22" pos:end="13:74">"Number of SMP CPUs requested (%d) exceeds max CPUs "</literal>

                     <literal type="string" pos:start="15:22" pos:end="15:52">"supported by TCG (1) on s390x"</literal></expr></argument>, <argument pos:start="15:55" pos:end="15:62"><expr pos:start="15:55" pos:end="15:62"><name pos:start="15:55" pos:end="15:62">max_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:16"><expr pos:start="17:9" pos:end="17:15"><call pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:12">exit</name><argument_list pos:start="17:13" pos:end="17:15">(<argument pos:start="17:14" pos:end="17:14"><expr pos:start="17:14" pos:end="17:14"><literal type="number" pos:start="17:14" pos:end="17:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:34">/* initialize possible_cpus */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><call pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:6">mc</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:29">possible_cpu_arch_ids</name></name><argument_list pos:start="25:30" pos:end="25:38">(<argument pos:start="25:31" pos:end="25:37"><expr pos:start="25:31" pos:end="25:37"><name pos:start="25:31" pos:end="25:37">machine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="33:5">for <control pos:start="29:9" pos:end="29:34">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:29"><expr pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:28">smp_cpus</name></expr>;</condition> <incr pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:31">i</name><operator pos:start="29:32" pos:end="29:33">++</operator></expr></incr>)</control> <block pos:start="29:36" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:58">

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><call pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:21">s390x_new_cpu</name><argument_list pos:start="31:22" pos:end="31:57">(<argument pos:start="31:23" pos:end="31:39"><expr pos:start="31:23" pos:end="31:39"><name pos:start="31:23" pos:end="31:39"><name pos:start="31:23" pos:end="31:29">machine</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:39">cpu_type</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:42"><expr pos:start="31:42" pos:end="31:42"><name pos:start="31:42" pos:end="31:42">i</name></expr></argument>, <argument pos:start="31:45" pos:end="31:56"><expr pos:start="31:45" pos:end="31:56"><operator pos:start="31:45" pos:end="31:45">&amp;</operator><name pos:start="31:46" pos:end="31:56">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
