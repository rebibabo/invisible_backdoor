<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13874.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:13">AVInputFormat</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:37">av_probe_input_format2</name><parameter_list pos:start="1:38" pos:end="1:85">(<parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><name pos:start="1:39" pos:end="1:49">AVProbeData</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">pd</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:68">is_opened</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:84"><decl pos:start="1:71" pos:end="1:84"><type pos:start="1:71" pos:end="1:84"><name pos:start="1:71" pos:end="1:73">int</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:84">score_max</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:15">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:15">AVProbeData</name></type> <name pos:start="5:17" pos:end="5:19">lpd</name> <init pos:start="5:21" pos:end="5:25">= <expr pos:start="5:23" pos:end="5:25"><operator pos:start="5:23" pos:end="5:23">*</operator><name pos:start="5:24" pos:end="5:25">pd</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AVInputFormat</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:23">fmt1</name> <init pos:start="7:25" pos:end="7:30">= <expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">NULL</name></expr></init></decl>, <decl pos:start="7:33" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:19"><modifier pos:start="7:33" pos:end="7:33">*</modifier></type><name pos:start="7:34" pos:end="7:36">fmt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">score</name></decl>, <decl pos:start="9:16" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:18">id3</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="27:5"><if pos:start="13:5" pos:end="27:5">if <condition pos:start="13:8" pos:end="13:74">(<expr pos:start="13:9" pos:end="13:73"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:11">lpd</name><operator pos:start="13:12" pos:end="13:12">.</operator><name pos:start="13:13" pos:end="13:20">buf_size</name></name> <operator pos:start="13:22" pos:end="13:22">&gt;</operator> <literal type="number" pos:start="13:24" pos:end="13:25">10</literal> <operator pos:start="13:27" pos:end="13:28">&amp;&amp;</operator> <call pos:start="13:30" pos:end="13:73"><name pos:start="13:30" pos:end="13:43">ff_id3v2_match</name><argument_list pos:start="13:44" pos:end="13:73">(<argument pos:start="13:45" pos:end="13:51"><expr pos:start="13:45" pos:end="13:51"><name pos:start="13:45" pos:end="13:51"><name pos:start="13:45" pos:end="13:47">lpd</name><operator pos:start="13:48" pos:end="13:48">.</operator><name pos:start="13:49" pos:end="13:51">buf</name></name></expr></argument>, <argument pos:start="13:54" pos:end="13:72"><expr pos:start="13:54" pos:end="13:72"><name pos:start="13:54" pos:end="13:72">ID3v2_DEFAULT_MAGIC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:76" pos:end="27:5">{<block_content pos:start="15:9" pos:end="25:16">

        <decl_stmt pos:start="15:9" pos:end="15:47"><decl pos:start="15:9" pos:end="15:46"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:18">id3len</name> <init pos:start="15:20" pos:end="15:46">= <expr pos:start="15:22" pos:end="15:46"><call pos:start="15:22" pos:end="15:46"><name pos:start="15:22" pos:end="15:37">ff_id3v2_tag_len</name><argument_list pos:start="15:38" pos:end="15:46">(<argument pos:start="15:39" pos:end="15:45"><expr pos:start="15:39" pos:end="15:45"><name pos:start="15:39" pos:end="15:45"><name pos:start="15:39" pos:end="15:41">lpd</name><operator pos:start="15:42" pos:end="15:42">.</operator><name pos:start="15:43" pos:end="15:45">buf</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:39">(<expr pos:start="17:13" pos:end="17:38"><name pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:15">lpd</name><operator pos:start="17:16" pos:end="17:16">.</operator><name pos:start="17:17" pos:end="17:24">buf_size</name></name> <operator pos:start="17:26" pos:end="17:26">&gt;</operator> <name pos:start="17:28" pos:end="17:33">id3len</name> <operator pos:start="17:35" pos:end="17:35">+</operator> <literal type="number" pos:start="17:37" pos:end="17:38">16</literal></expr>)</condition> <block pos:start="17:41" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:35">

            <expr_stmt pos:start="19:13" pos:end="19:30"><expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:15">lpd</name><operator pos:start="19:16" pos:end="19:16">.</operator><name pos:start="19:17" pos:end="19:19">buf</name></name> <operator pos:start="19:21" pos:end="19:22">+=</operator> <name pos:start="19:24" pos:end="19:29">id3len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:35"><expr pos:start="21:13" pos:end="21:34"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:15">lpd</name><operator pos:start="21:16" pos:end="21:16">.</operator><name pos:start="21:17" pos:end="21:24">buf_size</name></name> <operator pos:start="21:26" pos:end="21:27">-=</operator> <name pos:start="21:29" pos:end="21:34">id3len</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:16"><expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">id3</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <literal type="number" pos:start="25:15" pos:end="25:15">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:15"><expr pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:7">fmt</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <name pos:start="31:11" pos:end="31:14">NULL</name></expr>;</expr_stmt>

    <while pos:start="33:5" pos:end="65:5">while <condition pos:start="33:11" pos:end="33:42">(<expr pos:start="33:12" pos:end="33:41"><operator pos:start="33:12" pos:end="33:12">(</operator><name pos:start="33:13" pos:end="33:16">fmt1</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:40"><name pos:start="33:20" pos:end="33:34">av_iformat_next</name><argument_list pos:start="33:35" pos:end="33:40">(<argument pos:start="33:36" pos:end="33:39"><expr pos:start="33:36" pos:end="33:39"><name pos:start="33:36" pos:end="33:39">fmt1</name></expr></argument>)</argument_list></call><operator pos:start="33:41" pos:end="33:41">)</operator></expr>)</condition> <block pos:start="33:44" pos:end="65:5">{<block_content pos:start="35:9" pos:end="63:23">

        <if_stmt pos:start="35:9" pos:end="37:21"><if pos:start="35:9" pos:end="37:21">if <condition pos:start="35:12" pos:end="35:56">(<expr pos:start="35:13" pos:end="35:55"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:22">is_opened</name> <operator pos:start="35:24" pos:end="35:25">==</operator> <operator pos:start="35:27" pos:end="35:27">!</operator><operator pos:start="35:28" pos:end="35:28">(</operator><name pos:start="35:29" pos:end="35:39"><name pos:start="35:29" pos:end="35:32">fmt1</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:39">flags</name></name> <operator pos:start="35:41" pos:end="35:41">&amp;</operator> <name pos:start="35:43" pos:end="35:54">AVFMT_NOFILE</name><operator pos:start="35:55" pos:end="35:55">)</operator></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:21"><block_content pos:start="37:13" pos:end="37:21">

            <continue pos:start="37:13" pos:end="37:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:13">score</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="number" pos:start="39:17" pos:end="39:17">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="53:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:29">(<expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:16">fmt1</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:28">read_probe</name></name></expr>)</condition> <block pos:start="41:31" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:43">

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:17">score</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <call pos:start="43:21" pos:end="43:42"><name pos:start="43:21" pos:end="43:36"><name pos:start="43:21" pos:end="43:24">fmt1</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:36">read_probe</name></name><argument_list pos:start="43:37" pos:end="43:42">(<argument pos:start="43:38" pos:end="43:41"><expr pos:start="43:38" pos:end="43:41"><operator pos:start="43:38" pos:end="43:38">&amp;</operator><name pos:start="43:39" pos:end="43:41">lpd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="45:11" pos:end="53:9">else if <condition pos:start="45:19" pos:end="45:36">(<expr pos:start="45:20" pos:end="45:35"><name pos:start="45:20" pos:end="45:35"><name pos:start="45:20" pos:end="45:23">fmt1</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:35">extensions</name></name></expr>)</condition> <block pos:start="45:38" pos:end="53:9">{<block_content pos:start="47:13" pos:end="51:13">

            <if_stmt pos:start="47:13" pos:end="51:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:61">(<expr pos:start="47:17" pos:end="47:60"><call pos:start="47:17" pos:end="47:60"><name pos:start="47:17" pos:end="47:28">av_match_ext</name><argument_list pos:start="47:29" pos:end="47:60">(<argument pos:start="47:30" pos:end="47:41"><expr pos:start="47:30" pos:end="47:41"><name pos:start="47:30" pos:end="47:41"><name pos:start="47:30" pos:end="47:32">lpd</name><operator pos:start="47:33" pos:end="47:33">.</operator><name pos:start="47:34" pos:end="47:41">filename</name></name></expr></argument>, <argument pos:start="47:44" pos:end="47:59"><expr pos:start="47:44" pos:end="47:59"><name pos:start="47:44" pos:end="47:59"><name pos:start="47:44" pos:end="47:47">fmt1</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:59">extensions</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:63" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:27">

                <expr_stmt pos:start="49:17" pos:end="49:27"><expr pos:start="49:17" pos:end="49:26"><name pos:start="49:17" pos:end="49:21">score</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="number" pos:start="49:25" pos:end="49:26">50</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="63:23"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:31">(<expr pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:17">score</name> <operator pos:start="55:19" pos:end="55:19">&gt;</operator> <operator pos:start="55:21" pos:end="55:21">*</operator><name pos:start="55:22" pos:end="55:30">score_max</name></expr>)</condition> <block pos:start="55:33" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:23">

            <expr_stmt pos:start="57:13" pos:end="57:31"><expr pos:start="57:13" pos:end="57:30"><operator pos:start="57:13" pos:end="57:13">*</operator><name pos:start="57:14" pos:end="57:22">score_max</name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:30">score</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:23"><expr pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:15">fmt</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:22">fmt1</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="61:10" pos:end="63:23">else if <condition pos:start="61:18" pos:end="61:38">(<expr pos:start="61:19" pos:end="61:37"><name pos:start="61:19" pos:end="61:23">score</name> <operator pos:start="61:25" pos:end="61:26">==</operator> <operator pos:start="61:28" pos:end="61:28">*</operator><name pos:start="61:29" pos:end="61:37">score_max</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:23"><block_content pos:start="63:13" pos:end="63:23">

            <expr_stmt pos:start="63:13" pos:end="63:23"><expr pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:15">fmt</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:22">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="69:5" pos:end="69:82">/* a hack for files with huge id3v2 tags -- try to guess by file extension. */</comment>

    <if_stmt pos:start="71:5" pos:end="83:5"><if pos:start="71:5" pos:end="83:5">if <condition pos:start="71:8" pos:end="71:56">(<expr pos:start="71:9" pos:end="71:55"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:12">fmt</name> <operator pos:start="71:14" pos:end="71:15">&amp;&amp;</operator> <name pos:start="71:17" pos:end="71:19">id3</name> <operator pos:start="71:21" pos:end="71:22">&amp;&amp;</operator> <operator pos:start="71:24" pos:end="71:24">*</operator><name pos:start="71:25" pos:end="71:33">score_max</name> <operator pos:start="71:35" pos:end="71:35">&lt;</operator> <name pos:start="71:37" pos:end="71:53">AVPROBE_SCORE_MAX</name><operator pos:start="71:54" pos:end="71:54">/</operator><literal type="number" pos:start="71:55" pos:end="71:55">4</literal></expr>)</condition> <block pos:start="71:58" pos:end="83:5">{<block_content pos:start="73:9" pos:end="81:13">

        <while pos:start="73:9" pos:end="81:13">while <condition pos:start="73:15" pos:end="73:44">(<expr pos:start="73:16" pos:end="73:43"><operator pos:start="73:16" pos:end="73:16">(</operator><name pos:start="73:17" pos:end="73:19">fmt</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:42"><name pos:start="73:23" pos:end="73:37">av_iformat_next</name><argument_list pos:start="73:38" pos:end="73:42">(<argument pos:start="73:39" pos:end="73:41"><expr pos:start="73:39" pos:end="73:41"><name pos:start="73:39" pos:end="73:41">fmt</name></expr></argument>)</argument_list></call><operator pos:start="73:43" pos:end="73:43">)</operator></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="81:13"><block_content pos:start="75:13" pos:end="81:13">

            <if_stmt pos:start="75:13" pos:end="81:13"><if pos:start="75:13" pos:end="81:13">if <condition pos:start="75:16" pos:end="75:79">(<expr pos:start="75:17" pos:end="75:78"><name pos:start="75:17" pos:end="75:31"><name pos:start="75:17" pos:end="75:19">fmt</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:31">extensions</name></name> <operator pos:start="75:33" pos:end="75:34">&amp;&amp;</operator> <call pos:start="75:36" pos:end="75:78"><name pos:start="75:36" pos:end="75:47">av_match_ext</name><argument_list pos:start="75:48" pos:end="75:78">(<argument pos:start="75:49" pos:end="75:60"><expr pos:start="75:49" pos:end="75:60"><name pos:start="75:49" pos:end="75:60"><name pos:start="75:49" pos:end="75:51">lpd</name><operator pos:start="75:52" pos:end="75:52">.</operator><name pos:start="75:53" pos:end="75:60">filename</name></name></expr></argument>, <argument pos:start="75:63" pos:end="75:77"><expr pos:start="75:63" pos:end="75:77"><name pos:start="75:63" pos:end="75:77"><name pos:start="75:63" pos:end="75:65">fmt</name><operator pos:start="75:66" pos:end="75:67">-&gt;</operator><name pos:start="75:68" pos:end="75:77">extensions</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:81" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:22">

                <expr_stmt pos:start="77:17" pos:end="77:49"><expr pos:start="77:17" pos:end="77:48"><operator pos:start="77:17" pos:end="77:17">*</operator><name pos:start="77:18" pos:end="77:26">score_max</name> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:46">AVPROBE_SCORE_MAX</name><operator pos:start="77:47" pos:end="77:47">/</operator><literal type="number" pos:start="77:48" pos:end="77:48">4</literal></expr>;</expr_stmt>

                <break pos:start="79:17" pos:end="79:22">break;</break>

            </block_content>}</block></if></if_stmt></block_content></block></while>

    </block_content>}</block></if></if_stmt>



    <return pos:start="87:5" pos:end="87:15">return <expr pos:start="87:12" pos:end="87:14"><name pos:start="87:12" pos:end="87:14">fmt</name></expr>;</return>

</block_content>}</block></function>
</unit>
