<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5015.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">vga_update_display</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:37"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VGACommonState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">full_update</name></decl>, <decl pos:start="7:22" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:33">graphic_mode</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:39"><expr pos:start="11:5" pos:end="11:38"><call pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:36">qemu_flush_coalesced_mmio_buffer</name><argument_list pos:start="11:37" pos:end="11:38">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="73:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:42">(<expr pos:start="15:9" pos:end="15:41"><call pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:29">ds_get_bits_per_pixel</name><argument_list pos:start="15:30" pos:end="15:36">(<argument pos:start="15:31" pos:end="15:35"><expr pos:start="15:31" pos:end="15:35"><name pos:start="15:31" pos:end="15:35"><name pos:start="15:31" pos:end="15:31">s</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:35">ds</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:38" pos:end="15:39">==</operator> <literal type="number" pos:start="15:41" pos:end="15:41">0</literal></expr>)</condition> <block pos:start="15:44" pos:end="19:5">{<block_content>

        <comment type="block" pos:start="17:9" pos:end="17:27">/* nothing to do */</comment>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="73:5">else <block pos:start="19:12" pos:end="73:5">{<block_content pos:start="21:9" pos:end="71:9">

        <expr_stmt pos:start="21:9" pos:end="21:24"><expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:19">full_update</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="37:9"><if pos:start="23:9" pos:end="33:9">if <condition pos:start="23:12" pos:end="29:52">(<expr pos:start="23:13" pos:end="29:51"><operator pos:start="23:13" pos:end="23:13">!</operator><operator pos:start="23:14" pos:end="23:14">(</operator><name pos:start="23:15" pos:end="23:25"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:25">ar_index</name></name> <operator pos:start="23:27" pos:end="23:27">&amp;</operator> <literal type="number" pos:start="23:29" pos:end="23:32">0x20</literal><operator pos:start="23:33" pos:end="23:33">)</operator> <operator pos:start="23:35" pos:end="23:36">&amp;&amp;</operator>

            <comment type="block" pos:start="25:13" pos:end="25:68">/* extra CGA compatibility hacks (not in standard VGA */</comment>

            <operator pos:start="27:13" pos:end="27:13">(</operator><operator pos:start="27:14" pos:end="27:14">!</operator><operator pos:start="27:15" pos:end="27:15">(</operator><name pos:start="27:16" pos:end="27:28">vga_cga_hacks</name> <operator pos:start="27:30" pos:end="27:30">&amp;</operator> <name pos:start="27:32" pos:end="27:60">VGA_CGA_HACK_PALETTE_BLANKING</name><operator pos:start="27:61" pos:end="27:61">)</operator> <operator pos:start="27:63" pos:end="27:64">||</operator>

             <operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:25"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:25">ar_index</name></name> <operator pos:start="29:27" pos:end="29:28">!=</operator> <literal type="number" pos:start="29:30" pos:end="29:30">0</literal> <operator pos:start="29:32" pos:end="29:33">&amp;&amp;</operator> <name pos:start="29:35" pos:end="29:49"><name pos:start="29:35" pos:end="29:35">s</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:49">ar_flip_flop</name></name><operator pos:start="29:50" pos:end="29:50">)</operator><operator pos:start="29:51" pos:end="29:51">)</operator></expr>)</condition> <block pos:start="29:54" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:39">

            <expr_stmt pos:start="31:13" pos:end="31:39"><expr pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:24">graphic_mode</name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:38">GMODE_BLANK</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="37:9">else <block pos:start="33:16" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:72">

            <expr_stmt pos:start="35:13" pos:end="35:72"><expr pos:start="35:13" pos:end="35:71"><name pos:start="35:13" pos:end="35:24">graphic_mode</name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:46"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:32">gr</name><index pos:start="35:33" pos:end="35:46">[<expr pos:start="35:34" pos:end="35:45"><name pos:start="35:34" pos:end="35:45">VGA_GFX_MISC</name></expr>]</index></name> <operator pos:start="35:48" pos:end="35:48">&amp;</operator> <name pos:start="35:50" pos:end="35:71">VGA_GR06_GRAPHICS_MODE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:44">(<expr pos:start="39:13" pos:end="39:43"><name pos:start="39:13" pos:end="39:24">graphic_mode</name> <operator pos:start="39:26" pos:end="39:27">!=</operator> <name pos:start="39:29" pos:end="39:43"><name pos:start="39:29" pos:end="39:29">s</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:43">graphic_mode</name></name></expr>)</condition> <block pos:start="39:46" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:28">

            <expr_stmt pos:start="41:13" pos:end="41:43"><expr pos:start="41:13" pos:end="41:42"><name pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:27">graphic_mode</name></name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:42">graphic_mode</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:63"><expr pos:start="43:13" pos:end="43:62"><name pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:32">cursor_blink_time</name></name> <operator pos:start="43:34" pos:end="43:34">=</operator> <call pos:start="43:36" pos:end="43:62"><name pos:start="43:36" pos:end="43:52">qemu_get_clock_ms</name><argument_list pos:start="43:53" pos:end="43:62">(<argument pos:start="43:54" pos:end="43:61"><expr pos:start="43:54" pos:end="43:61"><name pos:start="43:54" pos:end="43:61">vm_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:28"><expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:23">full_update</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <literal type="number" pos:start="45:27" pos:end="45:27">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="49:9" pos:end="71:9">switch<condition pos:start="49:15" pos:end="49:28">(<expr pos:start="49:16" pos:end="49:27"><name pos:start="49:16" pos:end="49:27">graphic_mode</name></expr>)</condition> <block pos:start="49:30" pos:end="71:9">{<block_content pos:start="51:9" pos:end="69:18">

        <case pos:start="51:9" pos:end="51:24">case <expr pos:start="51:14" pos:end="51:23"><name pos:start="51:14" pos:end="51:23">GMODE_TEXT</name></expr>:</case>

            <expr_stmt pos:start="53:13" pos:end="53:42"><expr pos:start="53:13" pos:end="53:41"><call pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:25">vga_draw_text</name><argument_list pos:start="53:26" pos:end="53:41">(<argument pos:start="53:27" pos:end="53:27"><expr pos:start="53:27" pos:end="53:27"><name pos:start="53:27" pos:end="53:27">s</name></expr></argument>, <argument pos:start="53:30" pos:end="53:40"><expr pos:start="53:30" pos:end="53:40"><name pos:start="53:30" pos:end="53:40">full_update</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <case pos:start="57:9" pos:end="57:25">case <expr pos:start="57:14" pos:end="57:24"><name pos:start="57:14" pos:end="57:24">GMODE_GRAPH</name></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="59:45"><expr pos:start="59:13" pos:end="59:44"><call pos:start="59:13" pos:end="59:44"><name pos:start="59:13" pos:end="59:28">vga_draw_graphic</name><argument_list pos:start="59:29" pos:end="59:44">(<argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><name pos:start="59:30" pos:end="59:30">s</name></expr></argument>, <argument pos:start="59:33" pos:end="59:43"><expr pos:start="59:33" pos:end="59:43"><name pos:start="59:33" pos:end="59:43">full_update</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        <case pos:start="63:9" pos:end="63:25">case <expr pos:start="63:14" pos:end="63:24"><name pos:start="63:14" pos:end="63:24">GMODE_BLANK</name></expr>:</case>

        <default pos:start="65:9" pos:end="65:16">default:</default>

            <expr_stmt pos:start="67:13" pos:end="67:43"><expr pos:start="67:13" pos:end="67:42"><call pos:start="67:13" pos:end="67:42"><name pos:start="67:13" pos:end="67:26">vga_draw_blank</name><argument_list pos:start="67:27" pos:end="67:42">(<argument pos:start="67:28" pos:end="67:28"><expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">s</name></expr></argument>, <argument pos:start="67:31" pos:end="67:41"><expr pos:start="67:31" pos:end="67:41"><name pos:start="67:31" pos:end="67:41">full_update</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
