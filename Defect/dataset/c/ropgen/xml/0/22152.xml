<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22152.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">QObject</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:27">parse_array</name><parameter_list pos:start="1:28" pos:end="1:81">(<parameter pos:start="1:29" pos:end="1:51"><decl pos:start="1:29" pos:end="1:51"><type pos:start="1:29" pos:end="1:51"><name pos:start="1:29" pos:end="1:45">JSONParserContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">ctxt</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:67"><decl pos:start="1:54" pos:end="1:67"><type pos:start="1:54" pos:end="1:67"><name pos:start="1:54" pos:end="1:58">QList</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:67">tokens</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:80"><decl pos:start="1:70" pos:end="1:80"><type pos:start="1:70" pos:end="1:80"><name pos:start="1:70" pos:end="1:76">va_list</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:80">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:16">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">QList</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:15">list</name> <init pos:start="5:17" pos:end="5:22">= <expr pos:start="5:19" pos:end="5:22"><name pos:start="5:19" pos:end="5:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">QObject</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">token</name></decl>, <decl pos:start="7:21" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">peek</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">QList</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:18">working</name> <init pos:start="9:20" pos:end="9:40">= <expr pos:start="9:22" pos:end="9:40"><call pos:start="9:22" pos:end="9:40"><name pos:start="9:22" pos:end="9:31">qlist_copy</name><argument_list pos:start="9:32" pos:end="9:40">(<argument pos:start="9:33" pos:end="9:39"><expr pos:start="9:33" pos:end="9:39"><operator pos:start="9:33" pos:end="9:33">*</operator><name pos:start="9:34" pos:end="9:39">tokens</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:9">token</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:30"><name pos:start="13:13" pos:end="13:21">qlist_pop</name><argument_list pos:start="13:22" pos:end="13:30">(<argument pos:start="13:23" pos:end="13:29"><expr pos:start="13:23" pos:end="13:29"><name pos:start="13:23" pos:end="13:29">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:22">(<expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:13">token</name> <operator pos:start="15:15" pos:end="15:16">==</operator> <name pos:start="15:18" pos:end="15:21">NULL</name></expr>)</condition> <block pos:start="15:24" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <goto pos:start="17:9" pos:end="17:17">goto <name pos:start="17:14" pos:end="17:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:39">(<expr pos:start="23:9" pos:end="23:38"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:38"><name pos:start="23:10" pos:end="23:26">token_is_operator</name><argument_list pos:start="23:27" pos:end="23:38">(<argument pos:start="23:28" pos:end="23:32"><expr pos:start="23:28" pos:end="23:32"><name pos:start="23:28" pos:end="23:32">token</name></expr></argument>, <argument pos:start="23:35" pos:end="23:37"><expr pos:start="23:35" pos:end="23:37"><literal type="char" pos:start="23:35" pos:end="23:37">'['</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:41" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <goto pos:start="25:9" pos:end="25:17">goto <name pos:start="25:14" pos:end="25:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><call pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:18">qobject_decref</name><argument_list pos:start="29:19" pos:end="29:25">(<argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:24">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:9">token</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:16">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:8">list</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:22"><name pos:start="35:12" pos:end="35:20">qlist_new</name><argument_list pos:start="35:21" pos:end="35:22">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:8">peek</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:30"><name pos:start="39:12" pos:end="39:21">qlist_peek</name><argument_list pos:start="39:22" pos:end="39:30">(<argument pos:start="39:23" pos:end="39:29"><expr pos:start="39:23" pos:end="39:29"><name pos:start="39:23" pos:end="39:29">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:12">peek</name> <operator pos:start="41:14" pos:end="41:15">==</operator> <name pos:start="41:17" pos:end="41:20">NULL</name></expr>)</condition> <block pos:start="41:23" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:17">

        <expr_stmt pos:start="43:9" pos:end="43:49"><expr pos:start="43:9" pos:end="43:48"><call pos:start="43:9" pos:end="43:48"><name pos:start="43:9" pos:end="43:19">parse_error</name><argument_list pos:start="43:20" pos:end="43:48">(<argument pos:start="43:21" pos:end="43:24"><expr pos:start="43:21" pos:end="43:24"><name pos:start="43:21" pos:end="43:24">ctxt</name></expr></argument>, <argument pos:start="43:27" pos:end="43:30"><expr pos:start="43:27" pos:end="43:30"><name pos:start="43:27" pos:end="43:30">NULL</name></expr></argument>, <argument pos:start="43:33" pos:end="43:47"><expr pos:start="43:33" pos:end="43:47"><literal type="string" pos:start="43:33" pos:end="43:47">"premature EOI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:17">goto <name pos:start="45:14" pos:end="45:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="145:5"><if pos:start="51:5" pos:end="137:5">if <condition pos:start="51:8" pos:end="51:38">(<expr pos:start="51:9" pos:end="51:37"><operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:37"><name pos:start="51:10" pos:end="51:26">token_is_operator</name><argument_list pos:start="51:27" pos:end="51:37">(<argument pos:start="51:28" pos:end="51:31"><expr pos:start="51:28" pos:end="51:31"><name pos:start="51:28" pos:end="51:31">peek</name></expr></argument>, <argument pos:start="51:34" pos:end="51:36"><expr pos:start="51:34" pos:end="51:36"><literal type="char" pos:start="51:34" pos:end="51:36">']'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:40" pos:end="137:5">{<block_content pos:start="53:9" pos:end="135:21">

        <decl_stmt pos:start="53:9" pos:end="53:21"><decl pos:start="53:9" pos:end="53:20"><type pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:15">QObject</name> <modifier pos:start="53:17" pos:end="53:17">*</modifier></type><name pos:start="53:18" pos:end="53:20">obj</name></decl>;</decl_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:11">obj</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:45"><name pos:start="57:15" pos:end="57:25">parse_value</name><argument_list pos:start="57:26" pos:end="57:45">(<argument pos:start="57:27" pos:end="57:30"><expr pos:start="57:27" pos:end="57:30"><name pos:start="57:27" pos:end="57:30">ctxt</name></expr></argument>, <argument pos:start="57:33" pos:end="57:40"><expr pos:start="57:33" pos:end="57:40"><operator pos:start="57:33" pos:end="57:33">&amp;</operator><name pos:start="57:34" pos:end="57:40">working</name></expr></argument>, <argument pos:start="57:43" pos:end="57:44"><expr pos:start="57:43" pos:end="57:44"><name pos:start="57:43" pos:end="57:44">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:24">(<expr pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:15">obj</name> <operator pos:start="59:17" pos:end="59:18">==</operator> <name pos:start="59:20" pos:end="59:23">NULL</name></expr>)</condition> <block pos:start="59:26" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:21">

            <expr_stmt pos:start="61:13" pos:end="61:56"><expr pos:start="61:13" pos:end="61:55"><call pos:start="61:13" pos:end="61:55"><name pos:start="61:13" pos:end="61:23">parse_error</name><argument_list pos:start="61:24" pos:end="61:55">(<argument pos:start="61:25" pos:end="61:28"><expr pos:start="61:25" pos:end="61:28"><name pos:start="61:25" pos:end="61:28">ctxt</name></expr></argument>, <argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><name pos:start="61:31" pos:end="61:35">token</name></expr></argument>, <argument pos:start="61:38" pos:end="61:54"><expr pos:start="61:38" pos:end="61:54"><literal type="string" pos:start="61:38" pos:end="61:54">"expecting value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="63:13" pos:end="63:21">goto <name pos:start="63:18" pos:end="63:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:36"><expr pos:start="69:9" pos:end="69:35"><call pos:start="69:9" pos:end="69:35"><name pos:start="69:9" pos:end="69:24">qlist_append_obj</name><argument_list pos:start="69:25" pos:end="69:35">(<argument pos:start="69:26" pos:end="69:29"><expr pos:start="69:26" pos:end="69:29"><name pos:start="69:26" pos:end="69:29">list</name></expr></argument>, <argument pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:34">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:13">token</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <call pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:25">qlist_pop</name><argument_list pos:start="73:26" pos:end="73:34">(<argument pos:start="73:27" pos:end="73:33"><expr pos:start="73:27" pos:end="73:33"><name pos:start="73:27" pos:end="73:33">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:26">(<expr pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:17">token</name> <operator pos:start="75:19" pos:end="75:20">==</operator> <name pos:start="75:22" pos:end="75:25">NULL</name></expr>)</condition> <block pos:start="75:28" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:21">

            <expr_stmt pos:start="77:13" pos:end="77:53"><expr pos:start="77:13" pos:end="77:52"><call pos:start="77:13" pos:end="77:52"><name pos:start="77:13" pos:end="77:23">parse_error</name><argument_list pos:start="77:24" pos:end="77:52">(<argument pos:start="77:25" pos:end="77:28"><expr pos:start="77:25" pos:end="77:28"><name pos:start="77:25" pos:end="77:28">ctxt</name></expr></argument>, <argument pos:start="77:31" pos:end="77:34"><expr pos:start="77:31" pos:end="77:34"><name pos:start="77:31" pos:end="77:34">NULL</name></expr></argument>, <argument pos:start="77:37" pos:end="77:51"><expr pos:start="77:37" pos:end="77:51"><literal type="string" pos:start="77:37" pos:end="77:51">"premature EOI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="79:13" pos:end="79:21">goto <name pos:start="79:18" pos:end="79:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <while pos:start="85:9" pos:end="129:9">while <condition pos:start="85:15" pos:end="85:46">(<expr pos:start="85:16" pos:end="85:45"><operator pos:start="85:16" pos:end="85:16">!</operator><call pos:start="85:17" pos:end="85:45"><name pos:start="85:17" pos:end="85:33">token_is_operator</name><argument_list pos:start="85:34" pos:end="85:45">(<argument pos:start="85:35" pos:end="85:39"><expr pos:start="85:35" pos:end="85:39"><name pos:start="85:35" pos:end="85:39">token</name></expr></argument>, <argument pos:start="85:42" pos:end="85:44"><expr pos:start="85:42" pos:end="85:44"><literal type="char" pos:start="85:42" pos:end="85:44">']'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:48" pos:end="129:9">{<block_content pos:start="87:13" pos:end="127:13">

            <if_stmt pos:start="87:13" pos:end="93:13"><if pos:start="87:13" pos:end="93:13">if <condition pos:start="87:16" pos:end="87:47">(<expr pos:start="87:17" pos:end="87:46"><operator pos:start="87:17" pos:end="87:17">!</operator><call pos:start="87:18" pos:end="87:46"><name pos:start="87:18" pos:end="87:34">token_is_operator</name><argument_list pos:start="87:35" pos:end="87:46">(<argument pos:start="87:36" pos:end="87:40"><expr pos:start="87:36" pos:end="87:40"><name pos:start="87:36" pos:end="87:40">token</name></expr></argument>, <argument pos:start="87:43" pos:end="87:45"><expr pos:start="87:43" pos:end="87:45"><literal type="char" pos:start="87:43" pos:end="87:45">','</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:49" pos:end="93:13">{<block_content pos:start="89:17" pos:end="91:25">

                <expr_stmt pos:start="89:17" pos:end="89:71"><expr pos:start="89:17" pos:end="89:70"><call pos:start="89:17" pos:end="89:70"><name pos:start="89:17" pos:end="89:27">parse_error</name><argument_list pos:start="89:28" pos:end="89:70">(<argument pos:start="89:29" pos:end="89:32"><expr pos:start="89:29" pos:end="89:32"><name pos:start="89:29" pos:end="89:32">ctxt</name></expr></argument>, <argument pos:start="89:35" pos:end="89:39"><expr pos:start="89:35" pos:end="89:39"><name pos:start="89:35" pos:end="89:39">token</name></expr></argument>, <argument pos:start="89:42" pos:end="89:69"><expr pos:start="89:42" pos:end="89:69"><literal type="string" pos:start="89:42" pos:end="89:69">"expected separator in list"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="91:17" pos:end="91:25">goto <name pos:start="91:22" pos:end="91:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:34"><expr pos:start="97:13" pos:end="97:33"><call pos:start="97:13" pos:end="97:33"><name pos:start="97:13" pos:end="97:26">qobject_decref</name><argument_list pos:start="97:27" pos:end="97:33">(<argument pos:start="97:28" pos:end="97:32"><expr pos:start="97:28" pos:end="97:32"><name pos:start="97:28" pos:end="97:32">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:25"><expr pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:17">token</name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:24">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="103:13" pos:end="103:50"><expr pos:start="103:13" pos:end="103:49"><name pos:start="103:13" pos:end="103:15">obj</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <call pos:start="103:19" pos:end="103:49"><name pos:start="103:19" pos:end="103:29">parse_value</name><argument_list pos:start="103:30" pos:end="103:49">(<argument pos:start="103:31" pos:end="103:34"><expr pos:start="103:31" pos:end="103:34"><name pos:start="103:31" pos:end="103:34">ctxt</name></expr></argument>, <argument pos:start="103:37" pos:end="103:44"><expr pos:start="103:37" pos:end="103:44"><operator pos:start="103:37" pos:end="103:37">&amp;</operator><name pos:start="103:38" pos:end="103:44">working</name></expr></argument>, <argument pos:start="103:47" pos:end="103:48"><expr pos:start="103:47" pos:end="103:48"><name pos:start="103:47" pos:end="103:48">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="111:13"><if pos:start="105:13" pos:end="111:13">if <condition pos:start="105:16" pos:end="105:28">(<expr pos:start="105:17" pos:end="105:27"><name pos:start="105:17" pos:end="105:19">obj</name> <operator pos:start="105:21" pos:end="105:22">==</operator> <name pos:start="105:24" pos:end="105:27">NULL</name></expr>)</condition> <block pos:start="105:30" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:25">

                <expr_stmt pos:start="107:17" pos:end="107:60"><expr pos:start="107:17" pos:end="107:59"><call pos:start="107:17" pos:end="107:59"><name pos:start="107:17" pos:end="107:27">parse_error</name><argument_list pos:start="107:28" pos:end="107:59">(<argument pos:start="107:29" pos:end="107:32"><expr pos:start="107:29" pos:end="107:32"><name pos:start="107:29" pos:end="107:32">ctxt</name></expr></argument>, <argument pos:start="107:35" pos:end="107:39"><expr pos:start="107:35" pos:end="107:39"><name pos:start="107:35" pos:end="107:39">token</name></expr></argument>, <argument pos:start="107:42" pos:end="107:58"><expr pos:start="107:42" pos:end="107:58"><literal type="string" pos:start="107:42" pos:end="107:58">"expecting value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="109:17" pos:end="109:25">goto <name pos:start="109:22" pos:end="109:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:40"><expr pos:start="115:13" pos:end="115:39"><call pos:start="115:13" pos:end="115:39"><name pos:start="115:13" pos:end="115:28">qlist_append_obj</name><argument_list pos:start="115:29" pos:end="115:39">(<argument pos:start="115:30" pos:end="115:33"><expr pos:start="115:30" pos:end="115:33"><name pos:start="115:30" pos:end="115:33">list</name></expr></argument>, <argument pos:start="115:36" pos:end="115:38"><expr pos:start="115:36" pos:end="115:38"><name pos:start="115:36" pos:end="115:38">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="119:13" pos:end="119:39"><expr pos:start="119:13" pos:end="119:38"><name pos:start="119:13" pos:end="119:17">token</name> <operator pos:start="119:19" pos:end="119:19">=</operator> <call pos:start="119:21" pos:end="119:38"><name pos:start="119:21" pos:end="119:29">qlist_pop</name><argument_list pos:start="119:30" pos:end="119:38">(<argument pos:start="119:31" pos:end="119:37"><expr pos:start="119:31" pos:end="119:37"><name pos:start="119:31" pos:end="119:37">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="127:13"><if pos:start="121:13" pos:end="127:13">if <condition pos:start="121:16" pos:end="121:30">(<expr pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:21">token</name> <operator pos:start="121:23" pos:end="121:24">==</operator> <name pos:start="121:26" pos:end="121:29">NULL</name></expr>)</condition> <block pos:start="121:32" pos:end="127:13">{<block_content pos:start="123:17" pos:end="125:25">

                <expr_stmt pos:start="123:17" pos:end="123:57"><expr pos:start="123:17" pos:end="123:56"><call pos:start="123:17" pos:end="123:56"><name pos:start="123:17" pos:end="123:27">parse_error</name><argument_list pos:start="123:28" pos:end="123:56">(<argument pos:start="123:29" pos:end="123:32"><expr pos:start="123:29" pos:end="123:32"><name pos:start="123:29" pos:end="123:32">ctxt</name></expr></argument>, <argument pos:start="123:35" pos:end="123:38"><expr pos:start="123:35" pos:end="123:38"><name pos:start="123:35" pos:end="123:38">NULL</name></expr></argument>, <argument pos:start="123:41" pos:end="123:55"><expr pos:start="123:41" pos:end="123:55"><literal type="string" pos:start="123:41" pos:end="123:55">"premature EOI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="125:17" pos:end="125:25">goto <name pos:start="125:22" pos:end="125:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>



        <expr_stmt pos:start="133:9" pos:end="133:30"><expr pos:start="133:9" pos:end="133:29"><call pos:start="133:9" pos:end="133:29"><name pos:start="133:9" pos:end="133:22">qobject_decref</name><argument_list pos:start="133:23" pos:end="133:29">(<argument pos:start="133:24" pos:end="133:28"><expr pos:start="133:24" pos:end="133:28"><name pos:start="133:24" pos:end="133:28">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:21"><expr pos:start="135:9" pos:end="135:20"><name pos:start="135:9" pos:end="135:13">token</name> <operator pos:start="135:15" pos:end="135:15">=</operator> <name pos:start="135:17" pos:end="135:20">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="137:7" pos:end="145:5">else <block pos:start="137:12" pos:end="145:5">{<block_content pos:start="139:9" pos:end="143:21">

        <expr_stmt pos:start="139:9" pos:end="139:35"><expr pos:start="139:9" pos:end="139:34"><name pos:start="139:9" pos:end="139:13">token</name> <operator pos:start="139:15" pos:end="139:15">=</operator> <call pos:start="139:17" pos:end="139:34"><name pos:start="139:17" pos:end="139:25">qlist_pop</name><argument_list pos:start="139:26" pos:end="139:34">(<argument pos:start="139:27" pos:end="139:33"><expr pos:start="139:27" pos:end="139:33"><name pos:start="139:27" pos:end="139:33">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:30"><expr pos:start="141:9" pos:end="141:29"><call pos:start="141:9" pos:end="141:29"><name pos:start="141:9" pos:end="141:22">qobject_decref</name><argument_list pos:start="141:23" pos:end="141:29">(<argument pos:start="141:24" pos:end="141:28"><expr pos:start="141:24" pos:end="141:28"><name pos:start="141:24" pos:end="141:28">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:21"><expr pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:13">token</name> <operator pos:start="143:15" pos:end="143:15">=</operator> <name pos:start="143:17" pos:end="143:20">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:21"><expr pos:start="149:5" pos:end="149:20"><call pos:start="149:5" pos:end="149:20"><name pos:start="149:5" pos:end="149:11">QDECREF</name><argument_list pos:start="149:12" pos:end="149:20">(<argument pos:start="149:13" pos:end="149:19"><expr pos:start="149:13" pos:end="149:19"><operator pos:start="149:13" pos:end="149:13">*</operator><name pos:start="149:14" pos:end="149:19">tokens</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:22"><expr pos:start="151:5" pos:end="151:21"><operator pos:start="151:5" pos:end="151:5">*</operator><name pos:start="151:6" pos:end="151:11">tokens</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <name pos:start="151:15" pos:end="151:21">working</name></expr>;</expr_stmt>



    <return pos:start="155:5" pos:end="155:25">return <expr pos:start="155:12" pos:end="155:24"><call pos:start="155:12" pos:end="155:24"><name pos:start="155:12" pos:end="155:18">QOBJECT</name><argument_list pos:start="155:19" pos:end="155:24">(<argument pos:start="155:20" pos:end="155:23"><expr pos:start="155:20" pos:end="155:23"><name pos:start="155:20" pos:end="155:23">list</name></expr></argument>)</argument_list></call></expr>;</return>



<label pos:start="159:1" pos:end="159:4"><name pos:start="159:1" pos:end="159:3">out</name>:</label>

    <expr_stmt pos:start="161:5" pos:end="161:26"><expr pos:start="161:5" pos:end="161:25"><call pos:start="161:5" pos:end="161:25"><name pos:start="161:5" pos:end="161:18">qobject_decref</name><argument_list pos:start="161:19" pos:end="161:25">(<argument pos:start="161:20" pos:end="161:24"><expr pos:start="161:20" pos:end="161:24"><name pos:start="161:20" pos:end="161:24">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:21"><expr pos:start="163:5" pos:end="163:20"><call pos:start="163:5" pos:end="163:20"><name pos:start="163:5" pos:end="163:11">QDECREF</name><argument_list pos:start="163:12" pos:end="163:20">(<argument pos:start="163:13" pos:end="163:19"><expr pos:start="163:13" pos:end="163:19"><name pos:start="163:13" pos:end="163:19">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:18"><expr pos:start="165:5" pos:end="165:17"><call pos:start="165:5" pos:end="165:17"><name pos:start="165:5" pos:end="165:11">QDECREF</name><argument_list pos:start="165:12" pos:end="165:17">(<argument pos:start="165:13" pos:end="165:16"><expr pos:start="165:13" pos:end="165:16"><name pos:start="165:13" pos:end="165:16">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="167:5" pos:end="167:16">return <expr pos:start="167:12" pos:end="167:15"><name pos:start="167:12" pos:end="167:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
