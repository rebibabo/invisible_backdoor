<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8959.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:30">tap_receive_iov</name><parameter_list pos:start="1:31" pos:end="3:42">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:68"><decl pos:start="1:46" pos:end="1:68"><type pos:start="1:46" pos:end="1:68"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:57">struct</name> <name pos:start="1:59" pos:end="1:63">iovec</name></name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">iov</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:41"><decl pos:start="3:32" pos:end="3:41"><type pos:start="3:32" pos:end="3:41"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:41">iovcnt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="23:1">{<block_content pos:start="7:5" pos:end="21:15">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">TAPState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:24">= <expr pos:start="7:19" pos:end="7:24"><name pos:start="7:19" pos:end="7:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ssize_t</name></type> <name pos:start="9:13" pos:end="9:15">len</name></decl>;</decl_stmt>



    <do pos:start="13:5" pos:end="17:63">do <block pos:start="13:8" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:41">

        <expr_stmt pos:start="15:9" pos:end="15:41"><expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:11">len</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:40"><name pos:start="15:15" pos:end="15:20">writev</name><argument_list pos:start="15:21" pos:end="15:40">(<argument pos:start="15:22" pos:end="15:26"><expr pos:start="15:22" pos:end="15:26"><name pos:start="15:22" pos:end="15:26"><name pos:start="15:22" pos:end="15:22">s</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:26">fd</name></name></expr></argument>, <argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:31">iov</name></expr></argument>, <argument pos:start="15:34" pos:end="15:39"><expr pos:start="15:34" pos:end="15:39"><name pos:start="15:34" pos:end="15:39">iovcnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="17:13" pos:end="17:62">(<expr pos:start="17:14" pos:end="17:61"><name pos:start="17:14" pos:end="17:16">len</name> <operator pos:start="17:18" pos:end="17:19">==</operator> <operator pos:start="17:21" pos:end="17:21">-</operator><literal type="number" pos:start="17:22" pos:end="17:22">1</literal> <operator pos:start="17:24" pos:end="17:25">&amp;&amp;</operator> <operator pos:start="17:27" pos:end="17:27">(</operator><name pos:start="17:28" pos:end="17:32">errno</name> <operator pos:start="17:34" pos:end="17:35">==</operator> <name pos:start="17:37" pos:end="17:41">EINTR</name> <operator pos:start="17:43" pos:end="17:44">||</operator> <name pos:start="17:46" pos:end="17:50">errno</name> <operator pos:start="17:52" pos:end="17:53">==</operator> <name pos:start="17:55" pos:end="17:60">EAGAIN</name><operator pos:start="17:61" pos:end="17:61">)</operator></expr>)</condition>;</do>



    <return pos:start="21:5" pos:end="21:15">return <expr pos:start="21:12" pos:end="21:14"><name pos:start="21:12" pos:end="21:14">len</name></expr>;</return>

</block_content>}</block></function>
</unit>
