<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12020.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">helper_sysret</name><parameter_list pos:start="1:19" pos:end="1:47">(<parameter pos:start="1:20" pos:end="1:35"><decl pos:start="1:20" pos:end="1:35"><type pos:start="1:20" pos:end="1:35"><name pos:start="1:20" pos:end="1:30">CPUX86State</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">env</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:46"><decl pos:start="1:38" pos:end="1:46"><type pos:start="1:38" pos:end="1:46"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:46">dflag</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">cpl</name></decl>, <decl pos:start="5:14" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:21">selector</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:36">(<expr pos:start="9:9" pos:end="9:35"><operator pos:start="9:9" pos:end="9:9">!</operator><operator pos:start="9:10" pos:end="9:10">(</operator><name pos:start="9:11" pos:end="9:19"><name pos:start="9:11" pos:end="9:13">env</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:19">efer</name></name> <operator pos:start="9:21" pos:end="9:21">&amp;</operator> <name pos:start="9:23" pos:end="9:34">MSR_EFER_SCE</name><operator pos:start="9:35" pos:end="9:35">)</operator></expr>)</condition> <block pos:start="9:38" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:50">

        <expr_stmt pos:start="11:9" pos:end="11:50"><expr pos:start="11:9" pos:end="11:49"><call pos:start="11:9" pos:end="11:49"><name pos:start="11:9" pos:end="11:27">raise_exception_err</name><argument_list pos:start="11:28" pos:end="11:49">(<argument pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:31">env</name></expr></argument>, <argument pos:start="11:34" pos:end="11:45"><expr pos:start="11:34" pos:end="11:45"><name pos:start="11:34" pos:end="11:45">EXCP06_ILLOP</name></expr></argument>, <argument pos:start="11:48" pos:end="11:48"><expr pos:start="11:48" pos:end="11:48"><literal type="number" pos:start="11:48" pos:end="11:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:7">cpl</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <name pos:start="15:11" pos:end="15:21"><name pos:start="15:11" pos:end="15:13">env</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:21">hflags</name></name> <operator pos:start="15:23" pos:end="15:23">&amp;</operator> <name pos:start="15:25" pos:end="15:35">HF_CPL_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:48">(<expr pos:start="17:9" pos:end="17:47"><operator pos:start="17:9" pos:end="17:9">!</operator><operator pos:start="17:10" pos:end="17:10">(</operator><name pos:start="17:11" pos:end="17:20"><name pos:start="17:11" pos:end="17:13">env</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:17">cr</name><index pos:start="17:18" pos:end="17:20">[<expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>]</index></name> <operator pos:start="17:22" pos:end="17:22">&amp;</operator> <name pos:start="17:24" pos:end="17:34">CR0_PE_MASK</name><operator pos:start="17:35" pos:end="17:35">)</operator> <operator pos:start="17:37" pos:end="17:38">||</operator> <name pos:start="17:40" pos:end="17:42">cpl</name> <operator pos:start="17:44" pos:end="17:45">!=</operator> <literal type="number" pos:start="17:47" pos:end="17:47">0</literal></expr>)</condition> <block pos:start="17:50" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:48">

        <expr_stmt pos:start="19:9" pos:end="19:48"><expr pos:start="19:9" pos:end="19:47"><call pos:start="19:9" pos:end="19:47"><name pos:start="19:9" pos:end="19:27">raise_exception_err</name><argument_list pos:start="19:28" pos:end="19:47">(<argument pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:31">env</name></expr></argument>, <argument pos:start="19:34" pos:end="19:43"><expr pos:start="19:34" pos:end="19:43"><name pos:start="19:34" pos:end="19:43">EXCP0D_GPF</name></expr></argument>, <argument pos:start="19:46" pos:end="19:46"><expr pos:start="19:46" pos:end="19:46"><literal type="number" pos:start="19:46" pos:end="19:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:12">selector</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <operator pos:start="23:16" pos:end="23:16">(</operator><name pos:start="23:17" pos:end="23:25"><name pos:start="23:17" pos:end="23:19">env</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:25">star</name></name> <operator pos:start="23:27" pos:end="23:28">&gt;&gt;</operator> <literal type="number" pos:start="23:30" pos:end="23:31">48</literal><operator pos:start="23:32" pos:end="23:32">)</operator> <operator pos:start="23:34" pos:end="23:34">&amp;</operator> <literal type="number" pos:start="23:36" pos:end="23:41">0xffff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="105:5"><if pos:start="25:5" pos:end="77:5">if <condition pos:start="25:8" pos:end="25:34">(<expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:19">hflags</name></name> <operator pos:start="25:21" pos:end="25:21">&amp;</operator> <name pos:start="25:23" pos:end="25:33">HF_LMA_MASK</name></expr>)</condition> <block pos:start="25:36" pos:end="77:5">{<block_content pos:start="27:9" pos:end="75:32">

        <expr_stmt pos:start="27:9" pos:end="31:33"><expr pos:start="27:9" pos:end="31:32"><call pos:start="27:9" pos:end="31:32"><name pos:start="27:9" pos:end="27:23">cpu_load_eflags</name><argument_list pos:start="27:24" pos:end="31:32">(<argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">env</name></expr></argument>, <argument pos:start="27:30" pos:end="27:54"><expr pos:start="27:30" pos:end="27:54"><operator pos:start="27:30" pos:end="27:30">(</operator><name pos:start="27:31" pos:end="27:38">uint32_t</name><operator pos:start="27:39" pos:end="27:39">)</operator><operator pos:start="27:40" pos:end="27:40">(</operator><name pos:start="27:41" pos:end="27:53"><name pos:start="27:41" pos:end="27:43">env</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:49">regs</name><index pos:start="27:50" pos:end="27:53">[<expr pos:start="27:51" pos:end="27:52"><literal type="number" pos:start="27:51" pos:end="27:52">11</literal></expr>]</index></name><operator pos:start="27:54" pos:end="27:54">)</operator></expr></argument>, <argument pos:start="27:57" pos:end="31:31"><expr pos:start="27:57" pos:end="31:31"><name pos:start="27:57" pos:end="27:63">TF_MASK</name> <operator pos:start="27:65" pos:end="27:65">|</operator> <name pos:start="27:67" pos:end="27:73">AC_MASK</name>

                        <operator pos:start="29:25" pos:end="29:25">|</operator> <name pos:start="29:27" pos:end="29:33">ID_MASK</name> <operator pos:start="29:35" pos:end="29:35">|</operator> <name pos:start="29:37" pos:end="29:43">IF_MASK</name> <operator pos:start="29:45" pos:end="29:45">|</operator> <name pos:start="29:47" pos:end="29:55">IOPL_MASK</name> <operator pos:start="29:57" pos:end="29:57">|</operator> <name pos:start="29:59" pos:end="29:65">VM_MASK</name> <operator pos:start="29:67" pos:end="29:67">|</operator> <name pos:start="29:69" pos:end="29:75">RF_MASK</name> <operator pos:start="29:77" pos:end="29:77">|</operator>

                        <name pos:start="31:25" pos:end="31:31">NT_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="63:9"><if pos:start="33:9" pos:end="49:9">if <condition pos:start="33:12" pos:end="33:23">(<expr pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:17">dflag</name> <operator pos:start="33:19" pos:end="33:20">==</operator> <literal type="number" pos:start="33:22" pos:end="33:22">2</literal></expr>)</condition> <block pos:start="33:25" pos:end="49:9">{<block_content pos:start="35:13" pos:end="47:40">

            <expr_stmt pos:start="35:13" pos:end="45:48"><expr pos:start="35:13" pos:end="45:47"><call pos:start="35:13" pos:end="45:47"><name pos:start="35:13" pos:end="35:34">cpu_x86_load_seg_cache</name><argument_list pos:start="35:35" pos:end="45:47">(<argument pos:start="35:36" pos:end="35:38"><expr pos:start="35:36" pos:end="35:38"><name pos:start="35:36" pos:end="35:38">env</name></expr></argument>, <argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><name pos:start="35:41" pos:end="35:44">R_CS</name></expr></argument>, <argument pos:start="35:47" pos:end="35:65"><expr pos:start="35:47" pos:end="35:65"><operator pos:start="35:47" pos:end="35:47">(</operator><name pos:start="35:48" pos:end="35:55">selector</name> <operator pos:start="35:57" pos:end="35:57">+</operator> <literal type="number" pos:start="35:59" pos:end="35:60">16</literal><operator pos:start="35:61" pos:end="35:61">)</operator> <operator pos:start="35:63" pos:end="35:63">|</operator> <literal type="number" pos:start="35:65" pos:end="35:65">3</literal></expr></argument>,

                                   <argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><literal type="number" pos:start="37:36" pos:end="37:36">0</literal></expr></argument>, <argument pos:start="37:39" pos:end="37:48"><expr pos:start="37:39" pos:end="37:48"><literal type="number" pos:start="37:39" pos:end="37:48">0xffffffff</literal></expr></argument>,

                                   <argument pos:start="39:36" pos:end="45:46"><expr pos:start="39:36" pos:end="45:46"><name pos:start="39:36" pos:end="39:46">DESC_G_MASK</name> <operator pos:start="39:48" pos:end="39:48">|</operator> <name pos:start="39:50" pos:end="39:60">DESC_P_MASK</name> <operator pos:start="39:62" pos:end="39:62">|</operator>

                                   <name pos:start="41:36" pos:end="41:46">DESC_S_MASK</name> <operator pos:start="41:48" pos:end="41:48">|</operator> <operator pos:start="41:50" pos:end="41:50">(</operator><literal type="number" pos:start="41:51" pos:end="41:51">3</literal> <operator pos:start="41:53" pos:end="41:54">&lt;&lt;</operator> <name pos:start="41:56" pos:end="41:69">DESC_DPL_SHIFT</name><operator pos:start="41:70" pos:end="41:70">)</operator> <operator pos:start="41:72" pos:end="41:72">|</operator>

                                   <name pos:start="43:36" pos:end="43:47">DESC_CS_MASK</name> <operator pos:start="43:49" pos:end="43:49">|</operator> <name pos:start="43:51" pos:end="43:61">DESC_R_MASK</name> <operator pos:start="43:63" pos:end="43:63">|</operator> <name pos:start="43:65" pos:end="43:75">DESC_A_MASK</name> <operator pos:start="43:77" pos:end="43:77">|</operator>

                                   <name pos:start="45:36" pos:end="45:46">DESC_L_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:40"><expr pos:start="47:13" pos:end="47:39"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:15">env</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:20">eip</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:39"><name pos:start="47:24" pos:end="47:26">env</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:32">regs</name><index pos:start="47:33" pos:end="47:39">[<expr pos:start="47:34" pos:end="47:38"><name pos:start="47:34" pos:end="47:38">R_ECX</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="63:9">else <block pos:start="49:16" pos:end="63:9">{<block_content pos:start="51:13" pos:end="61:50">

            <expr_stmt pos:start="51:13" pos:end="59:77"><expr pos:start="51:13" pos:end="59:76"><call pos:start="51:13" pos:end="59:76"><name pos:start="51:13" pos:end="51:34">cpu_x86_load_seg_cache</name><argument_list pos:start="51:35" pos:end="59:76">(<argument pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><name pos:start="51:36" pos:end="51:38">env</name></expr></argument>, <argument pos:start="51:41" pos:end="51:44"><expr pos:start="51:41" pos:end="51:44"><name pos:start="51:41" pos:end="51:44">R_CS</name></expr></argument>, <argument pos:start="51:47" pos:end="51:58"><expr pos:start="51:47" pos:end="51:58"><name pos:start="51:47" pos:end="51:54">selector</name> <operator pos:start="51:56" pos:end="51:56">|</operator> <literal type="number" pos:start="51:58" pos:end="51:58">3</literal></expr></argument>,

                                   <argument pos:start="53:36" pos:end="53:36"><expr pos:start="53:36" pos:end="53:36"><literal type="number" pos:start="53:36" pos:end="53:36">0</literal></expr></argument>, <argument pos:start="53:39" pos:end="53:48"><expr pos:start="53:39" pos:end="53:48"><literal type="number" pos:start="53:39" pos:end="53:48">0xffffffff</literal></expr></argument>,

                                   <argument pos:start="55:36" pos:end="59:75"><expr pos:start="55:36" pos:end="59:75"><name pos:start="55:36" pos:end="55:46">DESC_G_MASK</name> <operator pos:start="55:48" pos:end="55:48">|</operator> <name pos:start="55:50" pos:end="55:60">DESC_B_MASK</name> <operator pos:start="55:62" pos:end="55:62">|</operator> <name pos:start="55:64" pos:end="55:74">DESC_P_MASK</name> <operator pos:start="55:76" pos:end="55:76">|</operator>

                                   <name pos:start="57:36" pos:end="57:46">DESC_S_MASK</name> <operator pos:start="57:48" pos:end="57:48">|</operator> <operator pos:start="57:50" pos:end="57:50">(</operator><literal type="number" pos:start="57:51" pos:end="57:51">3</literal> <operator pos:start="57:53" pos:end="57:54">&lt;&lt;</operator> <name pos:start="57:56" pos:end="57:69">DESC_DPL_SHIFT</name><operator pos:start="57:70" pos:end="57:70">)</operator> <operator pos:start="57:72" pos:end="57:72">|</operator>

                                   <name pos:start="59:36" pos:end="59:47">DESC_CS_MASK</name> <operator pos:start="59:49" pos:end="59:49">|</operator> <name pos:start="59:51" pos:end="59:61">DESC_R_MASK</name> <operator pos:start="59:63" pos:end="59:63">|</operator> <name pos:start="59:65" pos:end="59:75">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:50"><expr pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:15">env</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:20">eip</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <operator pos:start="61:24" pos:end="61:24">(</operator><name pos:start="61:25" pos:end="61:32">uint32_t</name><operator pos:start="61:33" pos:end="61:33">)</operator><name pos:start="61:34" pos:end="61:49"><name pos:start="61:34" pos:end="61:36">env</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:42">regs</name><index pos:start="61:43" pos:end="61:49">[<expr pos:start="61:44" pos:end="61:48"><name pos:start="61:44" pos:end="61:48">R_ECX</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="73:58"><expr pos:start="65:9" pos:end="73:57"><call pos:start="65:9" pos:end="73:57"><name pos:start="65:9" pos:end="65:30">cpu_x86_load_seg_cache</name><argument_list pos:start="65:31" pos:end="73:57">(<argument pos:start="65:32" pos:end="65:34"><expr pos:start="65:32" pos:end="65:34"><name pos:start="65:32" pos:end="65:34">env</name></expr></argument>, <argument pos:start="65:37" pos:end="65:40"><expr pos:start="65:37" pos:end="65:40"><name pos:start="65:37" pos:end="65:40">R_SS</name></expr></argument>, <argument pos:start="65:43" pos:end="65:54"><expr pos:start="65:43" pos:end="65:54"><name pos:start="65:43" pos:end="65:50">selector</name> <operator pos:start="65:52" pos:end="65:52">+</operator> <literal type="number" pos:start="65:54" pos:end="65:54">8</literal></expr></argument>,

                               <argument pos:start="67:32" pos:end="67:32"><expr pos:start="67:32" pos:end="67:32"><literal type="number" pos:start="67:32" pos:end="67:32">0</literal></expr></argument>, <argument pos:start="67:35" pos:end="67:44"><expr pos:start="67:35" pos:end="67:44"><literal type="number" pos:start="67:35" pos:end="67:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="69:32" pos:end="73:56"><expr pos:start="69:32" pos:end="73:56"><name pos:start="69:32" pos:end="69:42">DESC_G_MASK</name> <operator pos:start="69:44" pos:end="69:44">|</operator> <name pos:start="69:46" pos:end="69:56">DESC_B_MASK</name> <operator pos:start="69:58" pos:end="69:58">|</operator> <name pos:start="69:60" pos:end="69:70">DESC_P_MASK</name> <operator pos:start="69:72" pos:end="69:72">|</operator>

                               <name pos:start="71:32" pos:end="71:42">DESC_S_MASK</name> <operator pos:start="71:44" pos:end="71:44">|</operator> <operator pos:start="71:46" pos:end="71:46">(</operator><literal type="number" pos:start="71:47" pos:end="71:47">3</literal> <operator pos:start="71:49" pos:end="71:50">&lt;&lt;</operator> <name pos:start="71:52" pos:end="71:65">DESC_DPL_SHIFT</name><operator pos:start="71:66" pos:end="71:66">)</operator> <operator pos:start="71:68" pos:end="71:68">|</operator>

                               <name pos:start="73:32" pos:end="73:42">DESC_W_MASK</name> <operator pos:start="73:44" pos:end="73:44">|</operator> <name pos:start="73:46" pos:end="73:56">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><call pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:23">cpu_x86_set_cpl</name><argument_list pos:start="75:24" pos:end="75:31">(<argument pos:start="75:25" pos:end="75:27"><expr pos:start="75:25" pos:end="75:27"><name pos:start="75:25" pos:end="75:27">env</name></expr></argument>, <argument pos:start="75:30" pos:end="75:30"><expr pos:start="75:30" pos:end="75:30"><literal type="number" pos:start="75:30" pos:end="75:30">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="105:5">else <block pos:start="77:12" pos:end="105:5">{<block_content pos:start="79:9" pos:end="103:32">

        <expr_stmt pos:start="79:9" pos:end="79:31"><expr pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:11">env</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:19">eflags</name></name> <operator pos:start="79:21" pos:end="79:22">|=</operator> <name pos:start="79:24" pos:end="79:30">IF_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="89:73"><expr pos:start="81:9" pos:end="89:72"><call pos:start="81:9" pos:end="89:72"><name pos:start="81:9" pos:end="81:30">cpu_x86_load_seg_cache</name><argument_list pos:start="81:31" pos:end="89:72">(<argument pos:start="81:32" pos:end="81:34"><expr pos:start="81:32" pos:end="81:34"><name pos:start="81:32" pos:end="81:34">env</name></expr></argument>, <argument pos:start="81:37" pos:end="81:40"><expr pos:start="81:37" pos:end="81:40"><name pos:start="81:37" pos:end="81:40">R_CS</name></expr></argument>, <argument pos:start="81:43" pos:end="81:54"><expr pos:start="81:43" pos:end="81:54"><name pos:start="81:43" pos:end="81:50">selector</name> <operator pos:start="81:52" pos:end="81:52">|</operator> <literal type="number" pos:start="81:54" pos:end="81:54">3</literal></expr></argument>,

                               <argument pos:start="83:32" pos:end="83:32"><expr pos:start="83:32" pos:end="83:32"><literal type="number" pos:start="83:32" pos:end="83:32">0</literal></expr></argument>, <argument pos:start="83:35" pos:end="83:44"><expr pos:start="83:35" pos:end="83:44"><literal type="number" pos:start="83:35" pos:end="83:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="85:32" pos:end="89:71"><expr pos:start="85:32" pos:end="89:71"><name pos:start="85:32" pos:end="85:42">DESC_G_MASK</name> <operator pos:start="85:44" pos:end="85:44">|</operator> <name pos:start="85:46" pos:end="85:56">DESC_B_MASK</name> <operator pos:start="85:58" pos:end="85:58">|</operator> <name pos:start="85:60" pos:end="85:70">DESC_P_MASK</name> <operator pos:start="85:72" pos:end="85:72">|</operator>

                               <name pos:start="87:32" pos:end="87:42">DESC_S_MASK</name> <operator pos:start="87:44" pos:end="87:44">|</operator> <operator pos:start="87:46" pos:end="87:46">(</operator><literal type="number" pos:start="87:47" pos:end="87:47">3</literal> <operator pos:start="87:49" pos:end="87:50">&lt;&lt;</operator> <name pos:start="87:52" pos:end="87:65">DESC_DPL_SHIFT</name><operator pos:start="87:66" pos:end="87:66">)</operator> <operator pos:start="87:68" pos:end="87:68">|</operator>

                               <name pos:start="89:32" pos:end="89:43">DESC_CS_MASK</name> <operator pos:start="89:45" pos:end="89:45">|</operator> <name pos:start="89:47" pos:end="89:57">DESC_R_MASK</name> <operator pos:start="89:59" pos:end="89:59">|</operator> <name pos:start="89:61" pos:end="89:71">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:46"><expr pos:start="91:9" pos:end="91:45"><name pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:11">env</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:16">eip</name></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <operator pos:start="91:20" pos:end="91:20">(</operator><name pos:start="91:21" pos:end="91:28">uint32_t</name><operator pos:start="91:29" pos:end="91:29">)</operator><name pos:start="91:30" pos:end="91:45"><name pos:start="91:30" pos:end="91:32">env</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:38">regs</name><index pos:start="91:39" pos:end="91:45">[<expr pos:start="91:40" pos:end="91:44"><name pos:start="91:40" pos:end="91:44">R_ECX</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="101:58"><expr pos:start="93:9" pos:end="101:57"><call pos:start="93:9" pos:end="101:57"><name pos:start="93:9" pos:end="93:30">cpu_x86_load_seg_cache</name><argument_list pos:start="93:31" pos:end="101:57">(<argument pos:start="93:32" pos:end="93:34"><expr pos:start="93:32" pos:end="93:34"><name pos:start="93:32" pos:end="93:34">env</name></expr></argument>, <argument pos:start="93:37" pos:end="93:40"><expr pos:start="93:37" pos:end="93:40"><name pos:start="93:37" pos:end="93:40">R_SS</name></expr></argument>, <argument pos:start="93:43" pos:end="93:54"><expr pos:start="93:43" pos:end="93:54"><name pos:start="93:43" pos:end="93:50">selector</name> <operator pos:start="93:52" pos:end="93:52">+</operator> <literal type="number" pos:start="93:54" pos:end="93:54">8</literal></expr></argument>,

                               <argument pos:start="95:32" pos:end="95:32"><expr pos:start="95:32" pos:end="95:32"><literal type="number" pos:start="95:32" pos:end="95:32">0</literal></expr></argument>, <argument pos:start="95:35" pos:end="95:44"><expr pos:start="95:35" pos:end="95:44"><literal type="number" pos:start="95:35" pos:end="95:44">0xffffffff</literal></expr></argument>,

                               <argument pos:start="97:32" pos:end="101:56"><expr pos:start="97:32" pos:end="101:56"><name pos:start="97:32" pos:end="97:42">DESC_G_MASK</name> <operator pos:start="97:44" pos:end="97:44">|</operator> <name pos:start="97:46" pos:end="97:56">DESC_B_MASK</name> <operator pos:start="97:58" pos:end="97:58">|</operator> <name pos:start="97:60" pos:end="97:70">DESC_P_MASK</name> <operator pos:start="97:72" pos:end="97:72">|</operator>

                               <name pos:start="99:32" pos:end="99:42">DESC_S_MASK</name> <operator pos:start="99:44" pos:end="99:44">|</operator> <operator pos:start="99:46" pos:end="99:46">(</operator><literal type="number" pos:start="99:47" pos:end="99:47">3</literal> <operator pos:start="99:49" pos:end="99:50">&lt;&lt;</operator> <name pos:start="99:52" pos:end="99:65">DESC_DPL_SHIFT</name><operator pos:start="99:66" pos:end="99:66">)</operator> <operator pos:start="99:68" pos:end="99:68">|</operator>

                               <name pos:start="101:32" pos:end="101:42">DESC_W_MASK</name> <operator pos:start="101:44" pos:end="101:44">|</operator> <name pos:start="101:46" pos:end="101:56">DESC_A_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:32"><expr pos:start="103:9" pos:end="103:31"><call pos:start="103:9" pos:end="103:31"><name pos:start="103:9" pos:end="103:23">cpu_x86_set_cpl</name><argument_list pos:start="103:24" pos:end="103:31">(<argument pos:start="103:25" pos:end="103:27"><expr pos:start="103:25" pos:end="103:27"><name pos:start="103:25" pos:end="103:27">env</name></expr></argument>, <argument pos:start="103:30" pos:end="103:30"><expr pos:start="103:30" pos:end="103:30"><literal type="number" pos:start="103:30" pos:end="103:30">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
