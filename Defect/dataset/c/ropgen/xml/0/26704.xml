<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26704.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">add_doubles_metadata</name><parameter_list pos:start="1:32" pos:end="5:47">(<parameter pos:start="1:33" pos:end="1:41"><decl pos:start="1:33" pos:end="1:41"><type pos:start="1:33" pos:end="1:41"><name pos:start="1:33" pos:end="1:35">int</name></type> <name pos:start="1:37" pos:end="1:41">count</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:48"><decl pos:start="3:33" pos:end="3:48"><type pos:start="3:33" pos:end="3:48"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:42">char</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">name</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><specifier pos:start="3:51" pos:end="3:55">const</specifier> <name pos:start="3:57" pos:end="3:60">char</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:65">sep</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:46"><decl pos:start="5:33" pos:end="5:46"><type pos:start="5:33" pos:end="5:46"><name pos:start="5:33" pos:end="5:43">TiffContext</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="47:1">{<block_content pos:start="9:5" pos:end="45:13">

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:12">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">double</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:14">dp</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:69">(<expr pos:start="17:9" pos:end="17:68"><call pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:34">bytestream2_get_bytes_left</name><argument_list pos:start="17:35" pos:end="17:42">(<argument pos:start="17:36" pos:end="17:41"><expr pos:start="17:36" pos:end="17:41"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:41"><name pos:start="17:37" pos:end="17:37">s</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:44" pos:end="17:44">&lt;</operator> <name pos:start="17:46" pos:end="17:50">count</name> <operator pos:start="17:52" pos:end="17:52">*</operator> <sizeof pos:start="17:54" pos:end="17:68">sizeof<argument_list pos:start="17:60" pos:end="17:68">(<argument pos:start="17:61" pos:end="17:67"><expr pos:start="17:61" pos:end="17:67"><name pos:start="17:61" pos:end="17:67">int64_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:43"><expr pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:6">dp</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:42"><name pos:start="23:10" pos:end="23:18">av_malloc</name><argument_list pos:start="23:19" pos:end="23:42">(<argument pos:start="23:20" pos:end="23:41"><expr pos:start="23:20" pos:end="23:41"><name pos:start="23:20" pos:end="23:24">count</name> <operator pos:start="23:26" pos:end="23:26">*</operator> <sizeof pos:start="23:28" pos:end="23:41">sizeof<argument_list pos:start="23:34" pos:end="23:41">(<argument pos:start="23:35" pos:end="23:40"><expr pos:start="23:35" pos:end="23:40"><name pos:start="23:35" pos:end="23:40">double</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:11">dp</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="31:5" pos:end="33:43">for <control pos:start="31:9" pos:end="31:31">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:26"><expr pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:25">count</name></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">i</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:9" pos:end="33:43"><block_content pos:start="33:9" pos:end="33:43">

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:10">dp</name><index pos:start="33:11" pos:end="33:13">[<expr pos:start="33:12" pos:end="33:12"><name pos:start="33:12" pos:end="33:12">i</name></expr>]</index></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:42"><name pos:start="33:17" pos:end="33:27">tget_double</name><argument_list pos:start="33:28" pos:end="33:42">(<argument pos:start="33:29" pos:end="33:34"><expr pos:start="33:29" pos:end="33:34"><operator pos:start="33:29" pos:end="33:29">&amp;</operator><name pos:start="33:30" pos:end="33:34"><name pos:start="33:30" pos:end="33:30">s</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:34">gb</name></name></expr></argument>, <argument pos:start="33:37" pos:end="33:41"><expr pos:start="33:37" pos:end="33:41"><name pos:start="33:37" pos:end="33:41"><name pos:start="33:37" pos:end="33:37">s</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:41">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:6">ap</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:36"><name pos:start="35:10" pos:end="35:20">doubles2str</name><argument_list pos:start="35:21" pos:end="35:36">(<argument pos:start="35:22" pos:end="35:23"><expr pos:start="35:22" pos:end="35:23"><name pos:start="35:22" pos:end="35:23">dp</name></expr></argument>, <argument pos:start="35:26" pos:end="35:30"><expr pos:start="35:26" pos:end="35:30"><name pos:start="35:26" pos:end="35:30">count</name></expr></argument>, <argument pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:35">sep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:18"><expr pos:start="37:5" pos:end="37:17"><call pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:12">av_freep</name><argument_list pos:start="37:13" pos:end="37:17">(<argument pos:start="37:14" pos:end="37:16"><expr pos:start="37:14" pos:end="37:16"><operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:16">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:31"><if pos:start="39:5" pos:end="41:31">if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:11">ap</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:31"><block_content pos:start="41:9" pos:end="41:31">

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:73"><expr pos:start="43:5" pos:end="43:72"><call pos:start="43:5" pos:end="43:72"><name pos:start="43:5" pos:end="43:15">av_dict_set</name><argument_list pos:start="43:16" pos:end="43:72">(<argument pos:start="43:17" pos:end="43:36"><expr pos:start="43:17" pos:end="43:36"><operator pos:start="43:17" pos:end="43:17">&amp;</operator><name pos:start="43:18" pos:end="43:36"><name pos:start="43:18" pos:end="43:18">s</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:27">picture</name><operator pos:start="43:28" pos:end="43:28">.</operator><name pos:start="43:29" pos:end="43:36">metadata</name></name></expr></argument>, <argument pos:start="43:39" pos:end="43:42"><expr pos:start="43:39" pos:end="43:42"><name pos:start="43:39" pos:end="43:42">name</name></expr></argument>, <argument pos:start="43:45" pos:end="43:46"><expr pos:start="43:45" pos:end="43:46"><name pos:start="43:45" pos:end="43:46">ap</name></expr></argument>, <argument pos:start="43:49" pos:end="43:71"><expr pos:start="43:49" pos:end="43:71"><name pos:start="43:49" pos:end="43:71">AV_DICT_DONT_STRDUP_VAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
