<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24996.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">pxa2xx_cm_write</name><parameter_list pos:start="1:28" pos:end="3:58">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:48">hwaddr</name></type> <name pos:start="1:50" pos:end="1:53">addr</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:36">uint64_t</name></type> <name pos:start="3:38" pos:end="3:42">value</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:57"><decl pos:start="3:45" pos:end="3:57"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:52">unsigned</name></type> <name pos:start="3:54" pos:end="3:57">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:5">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">PXA2xxState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:43">= <expr pos:start="7:22" pos:end="7:43"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:33">PXA2xxState</name> <operator pos:start="7:35" pos:end="7:35">*</operator><operator pos:start="7:36" pos:end="7:36">)</operator> <name pos:start="7:38" pos:end="7:43">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="43:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">addr</name></expr>)</condition> <block pos:start="11:19" pos:end="43:5">{<block_content pos:start="13:5" pos:end="41:14">

    <case pos:start="13:5" pos:end="13:14">case <expr pos:start="13:10" pos:end="13:13"><name pos:start="13:10" pos:end="13:13">CCCR</name></expr>:</case>

    <case pos:start="15:5" pos:end="15:14">case <expr pos:start="15:10" pos:end="15:13"><name pos:start="15:10" pos:end="15:13">CKEN</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:38"><expr pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">cm_regs</name><index pos:start="17:19" pos:end="17:29">[<expr pos:start="17:20" pos:end="17:28"><name pos:start="17:20" pos:end="17:23">addr</name> <operator pos:start="17:25" pos:end="17:26">&gt;&gt;</operator> <literal type="number" pos:start="17:28" pos:end="17:28">2</literal></expr>]</index></name> <operator pos:start="17:31" pos:end="17:31">=</operator> <name pos:start="17:33" pos:end="17:37">value</name></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>



    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><name pos:start="23:10" pos:end="23:13">OSCC</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:18">cm_regs</name><index pos:start="25:19" pos:end="25:29">[<expr pos:start="25:20" pos:end="25:28"><name pos:start="25:20" pos:end="25:23">addr</name> <operator pos:start="25:25" pos:end="25:26">&gt;&gt;</operator> <literal type="number" pos:start="25:28" pos:end="25:28">2</literal></expr>]</index></name> <operator pos:start="25:31" pos:end="25:32">&amp;=</operator> <operator pos:start="25:34" pos:end="25:34">~</operator><literal type="number" pos:start="25:35" pos:end="25:38">0x6c</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:46"><expr pos:start="27:9" pos:end="27:45"><name pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:18">cm_regs</name><index pos:start="27:19" pos:end="27:29">[<expr pos:start="27:20" pos:end="27:28"><name pos:start="27:20" pos:end="27:23">addr</name> <operator pos:start="27:25" pos:end="27:26">&gt;&gt;</operator> <literal type="number" pos:start="27:28" pos:end="27:28">2</literal></expr>]</index></name> <operator pos:start="27:31" pos:end="27:32">|=</operator> <name pos:start="27:34" pos:end="27:38">value</name> <operator pos:start="27:40" pos:end="27:40">&amp;</operator> <literal type="number" pos:start="27:42" pos:end="27:45">0x6e</literal></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:44"><if pos:start="29:9" pos:end="31:44">if <condition pos:start="29:12" pos:end="29:29">(<expr pos:start="29:13" pos:end="29:28"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:18">value</name> <operator pos:start="29:20" pos:end="29:21">&gt;&gt;</operator> <literal type="number" pos:start="29:23" pos:end="29:23">1</literal><operator pos:start="29:24" pos:end="29:24">)</operator> <operator pos:start="29:26" pos:end="29:26">&amp;</operator> <literal type="number" pos:start="29:28" pos:end="29:28">1</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:44"><block_content pos:start="31:13" pos:end="31:44">			<comment type="block" pos:start="29:49" pos:end="29:57">/* OON */</comment>

            <expr_stmt pos:start="31:13" pos:end="31:44"><expr pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:22">cm_regs</name><index pos:start="31:23" pos:end="31:33">[<expr pos:start="31:24" pos:end="31:32"><name pos:start="31:24" pos:end="31:27">addr</name> <operator pos:start="31:29" pos:end="31:30">&gt;&gt;</operator> <literal type="number" pos:start="31:32" pos:end="31:32">2</literal></expr>]</index></name> <operator pos:start="31:35" pos:end="31:36">|=</operator> <literal type="number" pos:start="31:38" pos:end="31:38">1</literal> <operator pos:start="31:40" pos:end="31:41">&lt;&lt;</operator> <literal type="number" pos:start="31:43" pos:end="31:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>	<comment type="block" pos:start="31:49" pos:end="31:78">/* Oscillator is now stable */</comment>

        <break pos:start="33:9" pos:end="33:14">break;</break>



    <default pos:start="37:5" pos:end="37:12">default:</default>

        <expr_stmt pos:start="39:9" pos:end="39:69"><expr pos:start="39:9" pos:end="39:68"><call pos:start="39:9" pos:end="39:68"><name pos:start="39:9" pos:end="39:14">printf</name><argument_list pos:start="39:15" pos:end="39:68">(<argument pos:start="39:16" pos:end="39:47"><expr pos:start="39:16" pos:end="39:47"><literal type="string" pos:start="39:16" pos:end="39:34">"%s: Bad register "</literal> <name pos:start="39:36" pos:end="39:42">REG_FMT</name> <literal type="string" pos:start="39:44" pos:end="39:47">"\n"</literal></expr></argument>, <argument pos:start="39:50" pos:end="39:61"><expr pos:start="39:50" pos:end="39:61"><name pos:start="39:50" pos:end="39:61">__FUNCTION__</name></expr></argument>, <argument pos:start="39:64" pos:end="39:67"><expr pos:start="39:64" pos:end="39:67"><name pos:start="39:64" pos:end="39:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
