<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4703.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">QIOChannel</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:48">nbd_negotiate_handle_starttls</name><parameter_list pos:start="1:49" pos:end="5:62">(<parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:58">NBDClient</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:66">client</name></decl></parameter>,

                                                 <parameter pos:start="3:50" pos:end="3:64"><decl pos:start="3:50" pos:end="3:64"><type pos:start="3:50" pos:end="3:64"><name pos:start="3:50" pos:end="3:57">uint32_t</name></type> <name pos:start="3:59" pos:end="3:64">length</name></decl></parameter>,

                                                 <parameter pos:start="5:50" pos:end="5:61"><decl pos:start="5:50" pos:end="5:61"><type pos:start="5:50" pos:end="5:61"><name pos:start="5:50" pos:end="5:54">Error</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier><modifier pos:start="5:57" pos:end="5:57">*</modifier></type><name pos:start="5:58" pos:end="5:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="105:1">{<block_content pos:start="9:5" pos:end="103:29">

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">QIOChannel</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">ioc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">QIOChannelTLS</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:23">tioc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:30">NBDTLSHandshakeData</name></name></type> <name pos:start="13:32" pos:end="13:35">data</name> <init pos:start="13:37" pos:end="13:43">= <expr pos:start="13:39" pos:end="13:43"><block pos:start="13:39" pos:end="13:43">{ <expr pos:start="13:41" pos:end="13:41"><literal type="number" pos:start="13:41" pos:end="13:41">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><call pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:39">trace_nbd_negotiate_handle_starttls</name><argument_list pos:start="17:40" pos:end="17:41">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:7">ioc</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <name pos:start="19:11" pos:end="19:21"><name pos:start="19:11" pos:end="19:16">client</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:21">ioc</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="37:5"><if pos:start="21:5" pos:end="37:5">if <condition pos:start="21:8" pos:end="21:15">(<expr pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:14">length</name></expr>)</condition> <block pos:start="21:17" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:20">

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:44">(<expr pos:start="23:13" pos:end="23:43"><call pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:20">nbd_drop</name><argument_list pos:start="23:21" pos:end="23:39">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:24">ioc</name></expr></argument>, <argument pos:start="23:27" pos:end="23:32"><expr pos:start="23:27" pos:end="23:32"><name pos:start="23:27" pos:end="23:32">length</name></expr></argument>, <argument pos:start="23:35" pos:end="23:38"><expr pos:start="23:35" pos:end="23:38"><name pos:start="23:35" pos:end="23:38">errp</name></expr></argument>)</argument_list></call> <operator pos:start="23:41" pos:end="23:41">&lt;</operator> <literal type="number" pos:start="23:43" pos:end="23:43">0</literal></expr>)</condition> <block pos:start="23:46" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:24">

            <return pos:start="25:13" pos:end="25:24">return <expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="33:74"><expr pos:start="29:9" pos:end="33:73"><call pos:start="29:9" pos:end="33:73"><name pos:start="29:9" pos:end="29:34">nbd_negotiate_send_rep_err</name><argument_list pos:start="29:35" pos:end="33:73">(<argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">ioc</name></expr></argument>, <argument pos:start="29:41" pos:end="29:59"><expr pos:start="29:41" pos:end="29:59"><name pos:start="29:41" pos:end="29:59">NBD_REP_ERR_INVALID</name></expr></argument>, <argument pos:start="29:62" pos:end="29:77"><expr pos:start="29:62" pos:end="29:77"><name pos:start="29:62" pos:end="29:77">NBD_OPT_STARTTLS</name></expr></argument>,

                                   <argument pos:start="31:36" pos:end="31:39"><expr pos:start="31:36" pos:end="31:39"><name pos:start="31:36" pos:end="31:39">errp</name></expr></argument>,

                                   <argument pos:start="33:36" pos:end="33:72"><expr pos:start="33:36" pos:end="33:72"><literal type="string" pos:start="33:36" pos:end="33:72">"OPT_STARTTLS should not have length"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:20">return <expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="43:59">(<expr pos:start="41:9" pos:end="43:58"><call pos:start="41:9" pos:end="43:54"><name pos:start="41:9" pos:end="41:30">nbd_negotiate_send_rep</name><argument_list pos:start="41:31" pos:end="43:54">(<argument pos:start="41:32" pos:end="41:42"><expr pos:start="41:32" pos:end="41:42"><name pos:start="41:32" pos:end="41:42"><name pos:start="41:32" pos:end="41:37">client</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:42">ioc</name></name></expr></argument>, <argument pos:start="41:45" pos:end="41:55"><expr pos:start="41:45" pos:end="41:55"><name pos:start="41:45" pos:end="41:55">NBD_REP_ACK</name></expr></argument>,

                               <argument pos:start="43:32" pos:end="43:47"><expr pos:start="43:32" pos:end="43:47"><name pos:start="43:32" pos:end="43:47">NBD_OPT_STARTTLS</name></expr></argument>, <argument pos:start="43:50" pos:end="43:53"><expr pos:start="43:50" pos:end="43:53"><name pos:start="43:50" pos:end="43:53">errp</name></expr></argument>)</argument_list></call> <operator pos:start="43:56" pos:end="43:56">&lt;</operator> <literal type="number" pos:start="43:58" pos:end="43:58">0</literal></expr>)</condition> <block pos:start="43:61" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:20">

        <return pos:start="45:9" pos:end="45:20">return <expr pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="57:44"><expr pos:start="51:5" pos:end="57:43"><name pos:start="51:5" pos:end="51:8">tioc</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <call pos:start="51:12" pos:end="57:43"><name pos:start="51:12" pos:end="51:37">qio_channel_tls_new_server</name><argument_list pos:start="51:38" pos:end="57:43">(<argument pos:start="51:39" pos:end="51:41"><expr pos:start="51:39" pos:end="51:41"><name pos:start="51:39" pos:end="51:41">ioc</name></expr></argument>,

                                      <argument pos:start="53:39" pos:end="53:54"><expr pos:start="53:39" pos:end="53:54"><name pos:start="53:39" pos:end="53:54"><name pos:start="53:39" pos:end="53:44">client</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:54">tlscreds</name></name></expr></argument>,

                                      <argument pos:start="55:39" pos:end="55:56"><expr pos:start="55:39" pos:end="55:56"><name pos:start="55:39" pos:end="55:56"><name pos:start="55:39" pos:end="55:44">client</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:56">tlsaclname</name></name></expr></argument>,

                                      <argument pos:start="57:39" pos:end="57:42"><expr pos:start="57:39" pos:end="57:42"><name pos:start="57:39" pos:end="57:42">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:14">(<expr pos:start="59:9" pos:end="59:13"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:13">tioc</name></expr>)</condition> <block pos:start="59:16" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:20">

        <return pos:start="61:9" pos:end="61:20">return <expr pos:start="61:16" pos:end="61:19"><name pos:start="61:16" pos:end="61:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:62"><expr pos:start="67:5" pos:end="67:61"><call pos:start="67:5" pos:end="67:61"><name pos:start="67:5" pos:end="67:24">qio_channel_set_name</name><argument_list pos:start="67:25" pos:end="67:61">(<argument pos:start="67:26" pos:end="67:42"><expr pos:start="67:26" pos:end="67:42"><call pos:start="67:26" pos:end="67:42"><name pos:start="67:26" pos:end="67:36">QIO_CHANNEL</name><argument_list pos:start="67:37" pos:end="67:42">(<argument pos:start="67:38" pos:end="67:41"><expr pos:start="67:38" pos:end="67:41"><name pos:start="67:38" pos:end="67:41">tioc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="67:45" pos:end="67:60"><expr pos:start="67:45" pos:end="67:60"><literal type="string" pos:start="67:45" pos:end="67:60">"nbd-server-tls"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:52"><expr pos:start="69:5" pos:end="69:51"><call pos:start="69:5" pos:end="69:51"><name pos:start="69:5" pos:end="69:49">trace_nbd_negotiate_handle_starttls_handshake</name><argument_list pos:start="69:50" pos:end="69:51">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:65"><expr pos:start="71:5" pos:end="71:64"><name pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:8">data</name><operator pos:start="71:9" pos:end="71:9">.</operator><name pos:start="71:10" pos:end="71:13">loop</name></name> <operator pos:start="71:15" pos:end="71:15">=</operator> <call pos:start="71:17" pos:end="71:64"><name pos:start="71:17" pos:end="71:31">g_main_loop_new</name><argument_list pos:start="71:32" pos:end="71:64">(<argument pos:start="71:33" pos:end="71:56"><expr pos:start="71:33" pos:end="71:56"><call pos:start="71:33" pos:end="71:56"><name pos:start="71:33" pos:end="71:54">g_main_context_default</name><argument_list pos:start="71:55" pos:end="71:56">()</argument_list></call></expr></argument>, <argument pos:start="71:59" pos:end="71:63"><expr pos:start="71:59" pos:end="71:63"><name pos:start="71:59" pos:end="71:63">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="79:36"><expr pos:start="73:5" pos:end="79:35"><call pos:start="73:5" pos:end="79:35"><name pos:start="73:5" pos:end="73:29">qio_channel_tls_handshake</name><argument_list pos:start="73:30" pos:end="79:35">(<argument pos:start="73:31" pos:end="73:34"><expr pos:start="73:31" pos:end="73:34"><name pos:start="73:31" pos:end="73:34">tioc</name></expr></argument>,

                              <argument pos:start="75:31" pos:end="75:47"><expr pos:start="75:31" pos:end="75:47"><name pos:start="75:31" pos:end="75:47">nbd_tls_handshake</name></expr></argument>,

                              <argument pos:start="77:31" pos:end="77:35"><expr pos:start="77:31" pos:end="77:35"><operator pos:start="77:31" pos:end="77:31">&amp;</operator><name pos:start="77:32" pos:end="77:35">data</name></expr></argument>,

                              <argument pos:start="79:31" pos:end="79:34"><expr pos:start="79:31" pos:end="79:34"><name pos:start="79:31" pos:end="79:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:23">(<expr pos:start="83:9" pos:end="83:22"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:22"><name pos:start="83:10" pos:end="83:13">data</name><operator pos:start="83:14" pos:end="83:14">.</operator><name pos:start="83:15" pos:end="83:22">complete</name></name></expr>)</condition> <block pos:start="83:25" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:35">

        <expr_stmt pos:start="85:9" pos:end="85:35"><expr pos:start="85:9" pos:end="85:34"><call pos:start="85:9" pos:end="85:34"><name pos:start="85:9" pos:end="85:23">g_main_loop_run</name><argument_list pos:start="85:24" pos:end="85:34">(<argument pos:start="85:25" pos:end="85:33"><expr pos:start="85:25" pos:end="85:33"><name pos:start="85:25" pos:end="85:33"><name pos:start="85:25" pos:end="85:28">data</name><operator pos:start="85:29" pos:end="85:29">.</operator><name pos:start="85:30" pos:end="85:33">loop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:33"><expr pos:start="89:5" pos:end="89:32"><call pos:start="89:5" pos:end="89:32"><name pos:start="89:5" pos:end="89:21">g_main_loop_unref</name><argument_list pos:start="89:22" pos:end="89:32">(<argument pos:start="89:23" pos:end="89:31"><expr pos:start="89:23" pos:end="89:31"><name pos:start="89:23" pos:end="89:31"><name pos:start="89:23" pos:end="89:26">data</name><operator pos:start="89:27" pos:end="89:27">.</operator><name pos:start="89:28" pos:end="89:31">loop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="99:5"><if pos:start="91:5" pos:end="99:5">if <condition pos:start="91:8" pos:end="91:19">(<expr pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:12">data</name><operator pos:start="91:13" pos:end="91:13">.</operator><name pos:start="91:14" pos:end="91:18">error</name></name></expr>)</condition> <block pos:start="91:21" pos:end="99:5">{<block_content pos:start="93:9" pos:end="97:20">

        <expr_stmt pos:start="93:9" pos:end="93:35"><expr pos:start="93:9" pos:end="93:34"><call pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:20">object_unref</name><argument_list pos:start="93:21" pos:end="93:34">(<argument pos:start="93:22" pos:end="93:33"><expr pos:start="93:22" pos:end="93:33"><call pos:start="93:22" pos:end="93:33"><name pos:start="93:22" pos:end="93:27">OBJECT</name><argument_list pos:start="93:28" pos:end="93:33">(<argument pos:start="93:29" pos:end="93:32"><expr pos:start="93:29" pos:end="93:32"><name pos:start="93:29" pos:end="93:32">tioc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:42"><expr pos:start="95:9" pos:end="95:41"><call pos:start="95:9" pos:end="95:41"><name pos:start="95:9" pos:end="95:23">error_propagate</name><argument_list pos:start="95:24" pos:end="95:41">(<argument pos:start="95:25" pos:end="95:28"><expr pos:start="95:25" pos:end="95:28"><name pos:start="95:25" pos:end="95:28">errp</name></expr></argument>, <argument pos:start="95:31" pos:end="95:40"><expr pos:start="95:31" pos:end="95:40"><name pos:start="95:31" pos:end="95:40"><name pos:start="95:31" pos:end="95:34">data</name><operator pos:start="95:35" pos:end="95:35">.</operator><name pos:start="95:36" pos:end="95:40">error</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:20">return <expr pos:start="97:16" pos:end="97:19"><name pos:start="97:16" pos:end="97:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="103:5" pos:end="103:29">return <expr pos:start="103:12" pos:end="103:28"><call pos:start="103:12" pos:end="103:28"><name pos:start="103:12" pos:end="103:22">QIO_CHANNEL</name><argument_list pos:start="103:23" pos:end="103:28">(<argument pos:start="103:24" pos:end="103:27"><expr pos:start="103:24" pos:end="103:27"><name pos:start="103:24" pos:end="103:27">tioc</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
