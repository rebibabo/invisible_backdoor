<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/219.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">cpu_watchpoint_insert</name><parameter_list pos:start="1:26" pos:end="3:64">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:34">CPUState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">env</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><name pos:start="1:42" pos:end="1:53">target_ulong</name></type> <name pos:start="1:55" pos:end="1:58">addr</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:76"><decl pos:start="1:61" pos:end="1:76"><type pos:start="1:61" pos:end="1:76"><name pos:start="1:61" pos:end="1:72">target_ulong</name></type> <name pos:start="1:74" pos:end="1:76">len</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:35"><decl pos:start="3:27" pos:end="3:35"><type pos:start="3:27" pos:end="3:35"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:35">flags</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:63"><decl pos:start="3:38" pos:end="3:63"><type pos:start="3:38" pos:end="3:63"><name pos:start="3:38" pos:end="3:50">CPUWatchpoint</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier><modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:63">watchpoint</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:25">len_mask</name> <init pos:start="7:27" pos:end="7:38">= <expr pos:start="7:29" pos:end="7:38"><operator pos:start="7:29" pos:end="7:29">~</operator><operator pos:start="7:30" pos:end="7:30">(</operator><name pos:start="7:31" pos:end="7:33">len</name> <operator pos:start="7:35" pos:end="7:35">-</operator> <literal type="number" pos:start="7:37" pos:end="7:37">1</literal><operator pos:start="7:38" pos:end="7:38">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">CPUWatchpoint</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">wp</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:77">/* sanity checks: allow power-of-2 lengths, deny unaligned watchpoints */</comment>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:77">(<expr pos:start="15:9" pos:end="15:76"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:12">len</name> <operator pos:start="15:14" pos:end="15:15">!=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">1</literal> <operator pos:start="15:19" pos:end="15:20">&amp;&amp;</operator> <name pos:start="15:22" pos:end="15:24">len</name> <operator pos:start="15:26" pos:end="15:27">!=</operator> <literal type="number" pos:start="15:29" pos:end="15:29">2</literal> <operator pos:start="15:31" pos:end="15:32">&amp;&amp;</operator> <name pos:start="15:34" pos:end="15:36">len</name> <operator pos:start="15:38" pos:end="15:39">!=</operator> <literal type="number" pos:start="15:41" pos:end="15:41">4</literal> <operator pos:start="15:43" pos:end="15:44">&amp;&amp;</operator> <name pos:start="15:46" pos:end="15:48">len</name> <operator pos:start="15:50" pos:end="15:51">!=</operator> <literal type="number" pos:start="15:53" pos:end="15:53">8</literal><operator pos:start="15:54" pos:end="15:54">)</operator> <operator pos:start="15:56" pos:end="15:57">||</operator> <operator pos:start="15:59" pos:end="15:59">(</operator><name pos:start="15:60" pos:end="15:63">addr</name> <operator pos:start="15:65" pos:end="15:65">&amp;</operator> <operator pos:start="15:67" pos:end="15:67">~</operator><name pos:start="15:68" pos:end="15:75">len_mask</name><operator pos:start="15:76" pos:end="15:76">)</operator></expr>)</condition> <block pos:start="15:79" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:23">

        <expr_stmt pos:start="17:9" pos:end="19:70"><expr pos:start="17:9" pos:end="19:69"><call pos:start="17:9" pos:end="19:69"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="19:69">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="19:57"><expr pos:start="17:25" pos:end="19:57"><literal type="string" pos:start="17:25" pos:end="17:67">"qemu: tried to set invalid watchpoint at "</literal>

                <name pos:start="19:17" pos:end="19:29">TARGET_FMT_lx</name> <literal type="string" pos:start="19:31" pos:end="19:38">", len="</literal> <name pos:start="19:40" pos:end="19:52">TARGET_FMT_lu</name> <literal type="string" pos:start="19:54" pos:end="19:57">"\n"</literal></expr></argument>, <argument pos:start="19:60" pos:end="19:63"><expr pos:start="19:60" pos:end="19:63"><name pos:start="19:60" pos:end="19:63">addr</name></expr></argument>, <argument pos:start="19:66" pos:end="19:68"><expr pos:start="19:66" pos:end="19:68"><name pos:start="19:66" pos:end="19:68">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:23">return <expr pos:start="21:16" pos:end="21:22"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:6">wp</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:33"><name pos:start="25:10" pos:end="25:20">qemu_malloc</name><argument_list pos:start="25:21" pos:end="25:33">(<argument pos:start="25:22" pos:end="25:32"><expr pos:start="25:22" pos:end="25:32"><sizeof pos:start="25:22" pos:end="25:32">sizeof<argument_list pos:start="25:28" pos:end="25:32">(<argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><operator pos:start="25:29" pos:end="25:29">*</operator><name pos:start="25:30" pos:end="25:31">wp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:6">wp</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:13">vaddr</name></name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:20">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:6">wp</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:16">len_mask</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:27">len_mask</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:6">wp</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:13">flags</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:21">flags</name></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:52">/* keep all GDB-injected watchpoints in front */</comment>

    <if_stmt pos:start="39:5" pos:end="45:56"><if pos:start="39:5" pos:end="41:56">if <condition pos:start="39:8" pos:end="39:23">(<expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:13">flags</name> <operator pos:start="39:15" pos:end="39:15">&amp;</operator> <name pos:start="39:17" pos:end="39:22">BP_GDB</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:56"><block_content pos:start="41:9" pos:end="41:56">

        <expr_stmt pos:start="41:9" pos:end="41:56"><expr pos:start="41:9" pos:end="41:55"><call pos:start="41:9" pos:end="41:55"><name pos:start="41:9" pos:end="41:25">TAILQ_INSERT_HEAD</name><argument_list pos:start="41:26" pos:end="41:55">(<argument pos:start="41:27" pos:end="41:43"><expr pos:start="41:27" pos:end="41:43"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:43"><name pos:start="41:28" pos:end="41:30">env</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:43">watchpoints</name></name></expr></argument>, <argument pos:start="41:46" pos:end="41:47"><expr pos:start="41:46" pos:end="41:47"><name pos:start="41:46" pos:end="41:47">wp</name></expr></argument>, <argument pos:start="41:50" pos:end="41:54"><expr pos:start="41:50" pos:end="41:54"><name pos:start="41:50" pos:end="41:54">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="43:5" pos:end="45:56">else<block type="pseudo" pos:start="45:9" pos:end="45:56"><block_content pos:start="45:9" pos:end="45:56">

        <expr_stmt pos:start="45:9" pos:end="45:56"><expr pos:start="45:9" pos:end="45:55"><call pos:start="45:9" pos:end="45:55"><name pos:start="45:9" pos:end="45:25">TAILQ_INSERT_TAIL</name><argument_list pos:start="45:26" pos:end="45:55">(<argument pos:start="45:27" pos:end="45:43"><expr pos:start="45:27" pos:end="45:43"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:43"><name pos:start="45:28" pos:end="45:30">env</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:43">watchpoints</name></name></expr></argument>, <argument pos:start="45:46" pos:end="45:47"><expr pos:start="45:46" pos:end="45:47"><name pos:start="45:46" pos:end="45:47">wp</name></expr></argument>, <argument pos:start="45:50" pos:end="45:54"><expr pos:start="45:50" pos:end="45:54"><name pos:start="45:50" pos:end="45:54">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><call pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:18">tlb_flush_page</name><argument_list pos:start="49:19" pos:end="49:29">(<argument pos:start="49:20" pos:end="49:22"><expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">env</name></expr></argument>, <argument pos:start="49:25" pos:end="49:28"><expr pos:start="49:25" pos:end="49:28"><name pos:start="49:25" pos:end="49:28">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="55:25"><if pos:start="53:5" pos:end="55:25">if <condition pos:start="53:8" pos:end="53:19">(<expr pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:18">watchpoint</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:25"><block_content pos:start="55:9" pos:end="55:25">

        <expr_stmt pos:start="55:9" pos:end="55:25"><expr pos:start="55:9" pos:end="55:24"><operator pos:start="55:9" pos:end="55:9">*</operator><name pos:start="55:10" pos:end="55:19">watchpoint</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:24">wp</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
