<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20912.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">virtio_vga_realize</name><parameter_list pos:start="1:31" pos:end="1:70">(<parameter pos:start="1:32" pos:end="1:55"><decl pos:start="1:32" pos:end="1:55"><type pos:start="1:32" pos:end="1:55"><name pos:start="1:32" pos:end="1:45">VirtIOPCIProxy</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:55">vpci_dev</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:62">Error</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:5">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VirtIOVGA</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">vvga</name> <init pos:start="5:21" pos:end="5:42">= <expr pos:start="5:23" pos:end="5:42"><call pos:start="5:23" pos:end="5:42"><name pos:start="5:23" pos:end="5:32">VIRTIO_VGA</name><argument_list pos:start="5:33" pos:end="5:42">(<argument pos:start="5:34" pos:end="5:41"><expr pos:start="5:34" pos:end="5:41"><name pos:start="5:34" pos:end="5:41">vpci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">VirtIOGPU</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">g</name> <init pos:start="7:18" pos:end="7:30">= <expr pos:start="7:20" pos:end="7:30"><operator pos:start="7:20" pos:end="7:20">&amp;</operator><name pos:start="7:21" pos:end="7:30"><name pos:start="7:21" pos:end="7:24">vvga</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:30">vdev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">VGACommonState</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">vga</name> <init pos:start="9:25" pos:end="9:36">= <expr pos:start="9:27" pos:end="9:36"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:31">vvga</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:36">vga</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">err</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:30">/* init vga compat bits */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:7">vga</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:21">vram_size_mb</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <literal type="number" pos:start="21:25" pos:end="21:25">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:50"><expr pos:start="23:5" pos:end="23:49"><call pos:start="23:5" pos:end="23:49"><name pos:start="23:5" pos:end="23:19">vga_common_init</name><argument_list pos:start="23:20" pos:end="23:49">(<argument pos:start="23:21" pos:end="23:23"><expr pos:start="23:21" pos:end="23:23"><name pos:start="23:21" pos:end="23:23">vga</name></expr></argument>, <argument pos:start="23:26" pos:end="23:41"><expr pos:start="23:26" pos:end="23:41"><call pos:start="23:26" pos:end="23:41"><name pos:start="23:26" pos:end="23:31">OBJECT</name><argument_list pos:start="23:32" pos:end="23:41">(<argument pos:start="23:33" pos:end="23:40"><expr pos:start="23:33" pos:end="23:40"><name pos:start="23:33" pos:end="23:40">vpci_dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:44" pos:end="23:48"><expr pos:start="23:44" pos:end="23:48"><name pos:start="23:44" pos:end="23:48">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:61"><expr pos:start="25:5" pos:end="27:60"><call pos:start="25:5" pos:end="27:60"><name pos:start="25:5" pos:end="25:12">vga_init</name><argument_list pos:start="25:13" pos:end="27:60">(<argument pos:start="25:14" pos:end="25:16"><expr pos:start="25:14" pos:end="25:16"><name pos:start="25:14" pos:end="25:16">vga</name></expr></argument>, <argument pos:start="25:19" pos:end="25:34"><expr pos:start="25:19" pos:end="25:34"><call pos:start="25:19" pos:end="25:34"><name pos:start="25:19" pos:end="25:24">OBJECT</name><argument_list pos:start="25:25" pos:end="25:34">(<argument pos:start="25:26" pos:end="25:33"><expr pos:start="25:26" pos:end="25:33"><name pos:start="25:26" pos:end="25:33">vpci_dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:37" pos:end="25:73"><expr pos:start="25:37" pos:end="25:73"><call pos:start="25:37" pos:end="25:73"><name pos:start="25:37" pos:end="25:53">pci_address_space</name><argument_list pos:start="25:54" pos:end="25:73">(<argument pos:start="25:55" pos:end="25:72"><expr pos:start="25:55" pos:end="25:72"><operator pos:start="25:55" pos:end="25:55">&amp;</operator><name pos:start="25:56" pos:end="25:72"><name pos:start="25:56" pos:end="25:63">vpci_dev</name><operator pos:start="25:64" pos:end="25:65">-&gt;</operator><name pos:start="25:66" pos:end="25:72">pci_dev</name></name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="27:14" pos:end="27:53"><expr pos:start="27:14" pos:end="27:53"><call pos:start="27:14" pos:end="27:53"><name pos:start="27:14" pos:end="27:33">pci_address_space_io</name><argument_list pos:start="27:34" pos:end="27:53">(<argument pos:start="27:35" pos:end="27:52"><expr pos:start="27:35" pos:end="27:52"><operator pos:start="27:35" pos:end="27:35">&amp;</operator><name pos:start="27:36" pos:end="27:52"><name pos:start="27:36" pos:end="27:43">vpci_dev</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:52">pci_dev</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:56" pos:end="27:59"><expr pos:start="27:56" pos:end="27:59"><name pos:start="27:56" pos:end="27:59">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:64"><expr pos:start="29:5" pos:end="31:63"><call pos:start="29:5" pos:end="31:63"><name pos:start="29:5" pos:end="29:20">pci_register_bar</name><argument_list pos:start="29:21" pos:end="31:63">(<argument pos:start="29:22" pos:end="29:39"><expr pos:start="29:22" pos:end="29:39"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:39"><name pos:start="29:23" pos:end="29:30">vpci_dev</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:39">pci_dev</name></name></expr></argument>, <argument pos:start="29:42" pos:end="29:42"><expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">0</literal></expr></argument>,

                     <argument pos:start="31:22" pos:end="31:50"><expr pos:start="31:22" pos:end="31:50"><name pos:start="31:22" pos:end="31:50">PCI_BASE_ADDRESS_MEM_PREFETCH</name></expr></argument>, <argument pos:start="31:53" pos:end="31:62"><expr pos:start="31:53" pos:end="31:62"><operator pos:start="31:53" pos:end="31:53">&amp;</operator><name pos:start="31:54" pos:end="31:62"><name pos:start="31:54" pos:end="31:56">vga</name><operator pos:start="31:57" pos:end="31:58">-&gt;</operator><name pos:start="31:59" pos:end="31:62">vram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="47:7">/*

     * Configure virtio bar and regions

     *

     * We use bar #2 for the mmio regions, to be compatible with stdvga.

     * virtio regions are moved to the end of bar #2, to make room for

     * the stdvga mmio registers at the start of bar #2.

     */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:12">vpci_dev</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:28">modern_mem_bar</name></name> <operator pos:start="49:30" pos:end="49:30">=</operator> <literal type="number" pos:start="49:32" pos:end="49:32">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:12">vpci_dev</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:22">msix_bar</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:55"><expr pos:start="53:5" pos:end="53:54"><name pos:start="53:5" pos:end="53:10">offset</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:54"><name pos:start="53:14" pos:end="53:31">memory_region_size</name><argument_list pos:start="53:32" pos:end="53:54">(<argument pos:start="53:33" pos:end="53:53"><expr pos:start="53:33" pos:end="53:53"><operator pos:start="53:33" pos:end="53:33">&amp;</operator><name pos:start="53:34" pos:end="53:53"><name pos:start="53:34" pos:end="53:41">vpci_dev</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:53">modern_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:36"><expr pos:start="55:5" pos:end="55:35"><name pos:start="55:5" pos:end="55:10">offset</name> <operator pos:start="55:12" pos:end="55:13">-=</operator> <name pos:start="55:15" pos:end="55:35"><name pos:start="55:15" pos:end="55:22">vpci_dev</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:30">notify</name><operator pos:start="55:31" pos:end="55:31">.</operator><name pos:start="55:32" pos:end="55:35">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:12">vpci_dev</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:20">notify</name><operator pos:start="57:21" pos:end="57:21">.</operator><name pos:start="57:22" pos:end="57:27">offset</name></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <name pos:start="57:31" pos:end="57:36">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:10">offset</name> <operator pos:start="59:12" pos:end="59:13">-=</operator> <name pos:start="59:15" pos:end="59:35"><name pos:start="59:15" pos:end="59:22">vpci_dev</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:30">device</name><operator pos:start="59:31" pos:end="59:31">.</operator><name pos:start="59:32" pos:end="59:35">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:37"><expr pos:start="61:5" pos:end="61:36"><name pos:start="61:5" pos:end="61:27"><name pos:start="61:5" pos:end="61:12">vpci_dev</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:20">device</name><operator pos:start="61:21" pos:end="61:21">.</operator><name pos:start="61:22" pos:end="61:27">offset</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <name pos:start="61:31" pos:end="61:36">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:33"><expr pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:10">offset</name> <operator pos:start="63:12" pos:end="63:13">-=</operator> <name pos:start="63:15" pos:end="63:32"><name pos:start="63:15" pos:end="63:22">vpci_dev</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:27">isr</name><operator pos:start="63:28" pos:end="63:28">.</operator><name pos:start="63:29" pos:end="63:32">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:12">vpci_dev</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:17">isr</name><operator pos:start="65:18" pos:end="65:18">.</operator><name pos:start="65:19" pos:end="65:24">offset</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <name pos:start="65:28" pos:end="65:33">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:36"><expr pos:start="67:5" pos:end="67:35"><name pos:start="67:5" pos:end="67:10">offset</name> <operator pos:start="67:12" pos:end="67:13">-=</operator> <name pos:start="67:15" pos:end="67:35"><name pos:start="67:15" pos:end="67:22">vpci_dev</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:30">common</name><operator pos:start="67:31" pos:end="67:31">.</operator><name pos:start="67:32" pos:end="67:35">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:37"><expr pos:start="69:5" pos:end="69:36"><name pos:start="69:5" pos:end="69:27"><name pos:start="69:5" pos:end="69:12">vpci_dev</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:20">common</name><operator pos:start="69:21" pos:end="69:21">.</operator><name pos:start="69:22" pos:end="69:27">offset</name></name> <operator pos:start="69:29" pos:end="69:29">=</operator> <name pos:start="69:31" pos:end="69:36">offset</name></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:26">/* init virtio bits */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:56"><expr pos:start="75:5" pos:end="75:55"><call pos:start="75:5" pos:end="75:55"><name pos:start="75:5" pos:end="75:23">qdev_set_parent_bus</name><argument_list pos:start="75:24" pos:end="75:55">(<argument pos:start="75:25" pos:end="75:33"><expr pos:start="75:25" pos:end="75:33"><call pos:start="75:25" pos:end="75:33"><name pos:start="75:25" pos:end="75:30">DEVICE</name><argument_list pos:start="75:31" pos:end="75:33">(<argument pos:start="75:32" pos:end="75:32"><expr pos:start="75:32" pos:end="75:32"><name pos:start="75:32" pos:end="75:32">g</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:36" pos:end="75:54"><expr pos:start="75:36" pos:end="75:54"><call pos:start="75:36" pos:end="75:54"><name pos:start="75:36" pos:end="75:38">BUS</name><argument_list pos:start="75:39" pos:end="75:54">(<argument pos:start="75:40" pos:end="75:53"><expr pos:start="75:40" pos:end="75:53"><operator pos:start="75:40" pos:end="75:40">&amp;</operator><name pos:start="75:41" pos:end="75:53"><name pos:start="75:41" pos:end="75:48">vpci_dev</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:53">bus</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="77:5" pos:end="77:26">/* force virtio-1.0 */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:55"><expr pos:start="79:5" pos:end="79:54"><name pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:12">vpci_dev</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:19">flags</name></name> <operator pos:start="79:21" pos:end="79:22">&amp;=</operator> <operator pos:start="79:24" pos:end="79:24">~</operator><name pos:start="79:25" pos:end="79:54">VIRTIO_PCI_FLAG_DISABLE_MODERN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:54"><expr pos:start="81:5" pos:end="81:53"><name pos:start="81:5" pos:end="81:19"><name pos:start="81:5" pos:end="81:12">vpci_dev</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:19">flags</name></name> <operator pos:start="81:21" pos:end="81:22">|=</operator> <name pos:start="81:24" pos:end="81:53">VIRTIO_PCI_FLAG_DISABLE_LEGACY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:64"><expr pos:start="83:5" pos:end="83:63"><call pos:start="83:5" pos:end="83:63"><name pos:start="83:5" pos:end="83:28">object_property_set_bool</name><argument_list pos:start="83:29" pos:end="83:63">(<argument pos:start="83:30" pos:end="83:38"><expr pos:start="83:30" pos:end="83:38"><call pos:start="83:30" pos:end="83:38"><name pos:start="83:30" pos:end="83:35">OBJECT</name><argument_list pos:start="83:36" pos:end="83:38">(<argument pos:start="83:37" pos:end="83:37"><expr pos:start="83:37" pos:end="83:37"><name pos:start="83:37" pos:end="83:37">g</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:41" pos:end="83:44"><expr pos:start="83:41" pos:end="83:44"><name pos:start="83:41" pos:end="83:44">true</name></expr></argument>, <argument pos:start="83:47" pos:end="83:56"><expr pos:start="83:47" pos:end="83:56"><literal type="string" pos:start="83:47" pos:end="83:56">"realized"</literal></expr></argument>, <argument pos:start="83:59" pos:end="83:62"><expr pos:start="83:59" pos:end="83:62"><operator pos:start="83:59" pos:end="83:59">&amp;</operator><name pos:start="83:60" pos:end="83:62">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:12">(<expr pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">err</name></expr>)</condition> <block pos:start="85:14" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:15">

        <expr_stmt pos:start="87:9" pos:end="87:35"><expr pos:start="87:9" pos:end="87:34"><call pos:start="87:9" pos:end="87:34"><name pos:start="87:9" pos:end="87:23">error_propagate</name><argument_list pos:start="87:24" pos:end="87:34">(<argument pos:start="87:25" pos:end="87:28"><expr pos:start="87:25" pos:end="87:28"><name pos:start="87:25" pos:end="87:28">errp</name></expr></argument>, <argument pos:start="87:31" pos:end="87:33"><expr pos:start="87:31" pos:end="87:33"><name pos:start="87:31" pos:end="87:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="95:5" pos:end="95:33">/* add stdvga mmio regions */</comment>

    <expr_stmt pos:start="97:5" pos:end="99:54"><expr pos:start="97:5" pos:end="99:53"><call pos:start="97:5" pos:end="99:53"><name pos:start="97:5" pos:end="97:32">pci_std_vga_mmio_region_init</name><argument_list pos:start="97:33" pos:end="99:53">(<argument pos:start="97:34" pos:end="97:36"><expr pos:start="97:34" pos:end="97:36"><name pos:start="97:34" pos:end="97:36">vga</name></expr></argument>, <argument pos:start="97:39" pos:end="97:59"><expr pos:start="97:39" pos:end="97:59"><operator pos:start="97:39" pos:end="97:39">&amp;</operator><name pos:start="97:40" pos:end="97:59"><name pos:start="97:40" pos:end="97:47">vpci_dev</name><operator pos:start="97:48" pos:end="97:49">-&gt;</operator><name pos:start="97:50" pos:end="97:59">modern_bar</name></name></expr></argument>,

                                 <argument pos:start="99:34" pos:end="99:46"><expr pos:start="99:34" pos:end="99:46"><name pos:start="99:34" pos:end="99:46"><name pos:start="99:34" pos:end="99:37">vvga</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:46">vga_mrs</name></name></expr></argument>, <argument pos:start="99:49" pos:end="99:52"><expr pos:start="99:49" pos:end="99:52"><name pos:start="99:49" pos:end="99:52">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:33"><expr pos:start="103:5" pos:end="103:32"><name pos:start="103:5" pos:end="103:12"><name pos:start="103:5" pos:end="103:7">vga</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:12">con</name></name> <operator pos:start="103:14" pos:end="103:14">=</operator> <name pos:start="103:16" pos:end="103:28"><name pos:start="103:16" pos:end="103:16">g</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:25">scanout</name><index pos:start="103:26" pos:end="103:28">[<expr pos:start="103:27" pos:end="103:27"><literal type="number" pos:start="103:27" pos:end="103:27">0</literal></expr>]</index></name><operator pos:start="103:29" pos:end="103:29">.</operator><name pos:start="103:30" pos:end="103:32">con</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:63"><expr pos:start="105:5" pos:end="105:62"><call pos:start="105:5" pos:end="105:62"><name pos:start="105:5" pos:end="105:29">graphic_console_set_hwops</name><argument_list pos:start="105:30" pos:end="105:62">(<argument pos:start="105:31" pos:end="105:38"><expr pos:start="105:31" pos:end="105:38"><name pos:start="105:31" pos:end="105:38"><name pos:start="105:31" pos:end="105:33">vga</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:38">con</name></name></expr></argument>, <argument pos:start="105:41" pos:end="105:55"><expr pos:start="105:41" pos:end="105:55"><operator pos:start="105:41" pos:end="105:41">&amp;</operator><name pos:start="105:42" pos:end="105:55">virtio_vga_ops</name></expr></argument>, <argument pos:start="105:58" pos:end="105:61"><expr pos:start="105:58" pos:end="105:61"><name pos:start="105:58" pos:end="105:61">vvga</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="109:5" pos:end="117:5">for <control pos:start="109:9" pos:end="109:45">(<init pos:start="109:10" pos:end="109:15"><expr pos:start="109:10" pos:end="109:14"><name pos:start="109:10" pos:end="109:10">i</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <literal type="number" pos:start="109:14" pos:end="109:14">0</literal></expr>;</init> <condition pos:start="109:17" pos:end="109:40"><expr pos:start="109:17" pos:end="109:39"><name pos:start="109:17" pos:end="109:17">i</name> <operator pos:start="109:19" pos:end="109:19">&lt;</operator> <name pos:start="109:21" pos:end="109:39"><name pos:start="109:21" pos:end="109:21">g</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:27">conf</name><operator pos:start="109:28" pos:end="109:28">.</operator><name pos:start="109:29" pos:end="109:39">max_outputs</name></name></expr>;</condition> <incr pos:start="109:42" pos:end="109:44"><expr pos:start="109:42" pos:end="109:44"><name pos:start="109:42" pos:end="109:42">i</name><operator pos:start="109:43" pos:end="109:44">++</operator></expr></incr>)</control> <block pos:start="109:47" pos:end="117:5">{<block_content pos:start="111:9" pos:end="115:49">

        <expr_stmt pos:start="111:9" pos:end="115:49"><expr pos:start="111:9" pos:end="115:48"><call pos:start="111:9" pos:end="115:48"><name pos:start="111:9" pos:end="111:32">object_property_set_link</name><argument_list pos:start="111:33" pos:end="115:48">(<argument pos:start="111:34" pos:end="111:58"><expr pos:start="111:34" pos:end="111:58"><call pos:start="111:34" pos:end="111:58"><name pos:start="111:34" pos:end="111:39">OBJECT</name><argument_list pos:start="111:40" pos:end="111:58">(<argument pos:start="111:41" pos:end="111:57"><expr pos:start="111:41" pos:end="111:57"><name pos:start="111:41" pos:end="111:53"><name pos:start="111:41" pos:end="111:41">g</name><operator pos:start="111:42" pos:end="111:43">-&gt;</operator><name pos:start="111:44" pos:end="111:50">scanout</name><index pos:start="111:51" pos:end="111:53">[<expr pos:start="111:52" pos:end="111:52"><name pos:start="111:52" pos:end="111:52">i</name></expr>]</index></name><operator pos:start="111:54" pos:end="111:54">.</operator><name pos:start="111:55" pos:end="111:57">con</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="113:34" pos:end="113:49"><expr pos:start="113:34" pos:end="113:49"><call pos:start="113:34" pos:end="113:49"><name pos:start="113:34" pos:end="113:39">OBJECT</name><argument_list pos:start="113:40" pos:end="113:49">(<argument pos:start="113:41" pos:end="113:48"><expr pos:start="113:41" pos:end="113:48"><name pos:start="113:41" pos:end="113:48">vpci_dev</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="115:34" pos:end="115:41"><expr pos:start="115:34" pos:end="115:41"><literal type="string" pos:start="115:34" pos:end="115:41">"device"</literal></expr></argument>, <argument pos:start="115:44" pos:end="115:47"><expr pos:start="115:44" pos:end="115:47"><name pos:start="115:44" pos:end="115:47">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
