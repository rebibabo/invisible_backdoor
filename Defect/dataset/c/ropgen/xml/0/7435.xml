<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7435.c" pos:tabs="8"><function pos:start="1:1" pos:end="725:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">sws_init_context</name><parameter_list pos:start="1:21" pos:end="1:79">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:31">SwsContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">c</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:45">SwsFilter</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:56">srcFilter</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:78"><decl pos:start="1:59" pos:end="1:78"><type pos:start="1:59" pos:end="1:78"><name pos:start="1:59" pos:end="1:67">SwsFilter</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:78">dstFilter</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="725:1">{<block_content pos:start="5:5" pos:end="723:14">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">usesVFilter</name></decl>, <decl pos:start="7:22" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:32">usesHFilter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">unscaled</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">SwsFilter</name></type> <name pos:start="11:15" pos:end="11:25">dummyFilter</name><init pos:start="11:26" pos:end="11:51">= <expr pos:start="11:28" pos:end="11:51"><block pos:start="11:28" pos:end="11:51">{<expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">NULL</name></expr>, <expr pos:start="11:35" pos:end="11:38"><name pos:start="11:35" pos:end="11:38">NULL</name></expr>, <expr pos:start="11:41" pos:end="11:44"><name pos:start="11:41" pos:end="11:44">NULL</name></expr>, <expr pos:start="11:47" pos:end="11:50"><name pos:start="11:47" pos:end="11:50">NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">srcW</name><init pos:start="13:13" pos:end="13:21">= <expr pos:start="13:15" pos:end="13:21"><name pos:start="13:15" pos:end="13:21"><name pos:start="13:15" pos:end="13:15">c</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:21">srcW</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">srcH</name><init pos:start="15:13" pos:end="15:21">= <expr pos:start="15:15" pos:end="15:21"><name pos:start="15:15" pos:end="15:21"><name pos:start="15:15" pos:end="15:15">c</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:21">srcH</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">dstW</name><init pos:start="17:13" pos:end="17:21">= <expr pos:start="17:15" pos:end="17:21"><name pos:start="17:15" pos:end="17:21"><name pos:start="17:15" pos:end="17:15">c</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:21">dstW</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">dstH</name><init pos:start="19:13" pos:end="19:21">= <expr pos:start="19:15" pos:end="19:21"><name pos:start="19:15" pos:end="19:21"><name pos:start="19:15" pos:end="19:15">c</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:21">dstH</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:60"><decl pos:start="21:5" pos:end="21:59"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:18">dst_stride</name> <init pos:start="21:20" pos:end="21:59">= <expr pos:start="21:22" pos:end="21:59"><call pos:start="21:22" pos:end="21:59"><name pos:start="21:22" pos:end="21:28">FFALIGN</name><argument_list pos:start="21:29" pos:end="21:59">(<argument pos:start="21:30" pos:end="21:54"><expr pos:start="21:30" pos:end="21:54"><name pos:start="21:30" pos:end="21:33">dstW</name> <operator pos:start="21:35" pos:end="21:35">*</operator> <sizeof pos:start="21:37" pos:end="21:51">sizeof<argument_list pos:start="21:43" pos:end="21:51">(<argument pos:start="21:44" pos:end="21:50"><expr pos:start="21:44" pos:end="21:50"><name pos:start="21:44" pos:end="21:50">int16_t</name></expr></argument>)</argument_list></sizeof><operator pos:start="21:52" pos:end="21:52">+</operator><literal type="number" pos:start="21:53" pos:end="21:54">66</literal></expr></argument>, <argument pos:start="21:57" pos:end="21:58"><expr pos:start="21:57" pos:end="21:58"><literal type="number" pos:start="21:57" pos:end="21:58">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">flags</name></decl>, <decl pos:start="23:16" pos:end="23:24"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:16" pos:end="23:24">cpu_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:45"><decl pos:start="25:5" pos:end="25:44"><type pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:8">enum</name> <name pos:start="25:10" pos:end="25:20">PixelFormat</name></name></type> <name pos:start="25:22" pos:end="25:30">srcFormat</name><init pos:start="25:31" pos:end="25:44">= <expr pos:start="25:33" pos:end="25:44"><name pos:start="25:33" pos:end="25:44"><name pos:start="25:33" pos:end="25:33">c</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:44">srcFormat</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:45"><decl pos:start="27:5" pos:end="27:44"><type pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:8">enum</name> <name pos:start="27:10" pos:end="27:20">PixelFormat</name></name></type> <name pos:start="27:22" pos:end="27:30">dstFormat</name><init pos:start="27:31" pos:end="27:44">= <expr pos:start="27:33" pos:end="27:44"><name pos:start="27:33" pos:end="27:44"><name pos:start="27:33" pos:end="27:33">c</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:44">dstFormat</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:13">cpu_flags</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:32">av_get_cpu_flags</name><argument_list pos:start="31:33" pos:end="31:34">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:9">flags</name>     <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:17">c</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:24">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:13"><expr pos:start="35:5" pos:end="35:12"><call pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:10">emms_c</name><argument_list pos:start="35:11" pos:end="35:12">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="37:39"><if pos:start="37:5" pos:end="37:39">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:18">rgb15to16</name></expr>)</condition><block type="pseudo" pos:start="37:21" pos:end="37:39"><block_content pos:start="37:21" pos:end="37:39"> <expr_stmt pos:start="37:21" pos:end="37:39"><expr pos:start="37:21" pos:end="37:38"><call pos:start="37:21" pos:end="37:38"><name pos:start="37:21" pos:end="37:36">sws_rgb2rgb_init</name><argument_list pos:start="37:37" pos:end="37:38">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:46"><expr pos:start="41:5" pos:end="41:45"><name pos:start="41:5" pos:end="41:12">unscaled</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <operator pos:start="41:16" pos:end="41:16">(</operator><name pos:start="41:17" pos:end="41:20">srcW</name> <operator pos:start="41:22" pos:end="41:23">==</operator> <name pos:start="41:25" pos:end="41:28">dstW</name> <operator pos:start="41:30" pos:end="41:31">&amp;&amp;</operator> <name pos:start="41:33" pos:end="41:36">srcH</name> <operator pos:start="41:38" pos:end="41:39">==</operator> <name pos:start="41:41" pos:end="41:44">dstH</name><operator pos:start="41:45" pos:end="41:45">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:28"><expr pos:start="45:5" pos:end="45:27"><call pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:15">handle_jpeg</name><argument_list pos:start="45:16" pos:end="45:27">(<argument pos:start="45:17" pos:end="45:26"><expr pos:start="45:17" pos:end="45:26"><operator pos:start="45:17" pos:end="45:17">&amp;</operator><name pos:start="45:18" pos:end="45:26">srcFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:28"><expr pos:start="47:5" pos:end="47:27"><call pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:15">handle_jpeg</name><argument_list pos:start="47:16" pos:end="47:27">(<argument pos:start="47:17" pos:end="47:26"><expr pos:start="47:17" pos:end="47:26"><operator pos:start="47:17" pos:end="47:17">&amp;</operator><name pos:start="47:18" pos:end="47:26">dstFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if<condition pos:start="51:7" pos:end="51:58">(<expr pos:start="51:8" pos:end="51:57"><name pos:start="51:8" pos:end="51:16">srcFormat</name><operator pos:start="51:17" pos:end="51:18">!=</operator><name pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:19">c</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:30">srcFormat</name></name> <operator pos:start="51:32" pos:end="51:33">||</operator> <name pos:start="51:35" pos:end="51:43">dstFormat</name><operator pos:start="51:44" pos:end="51:45">!=</operator><name pos:start="51:46" pos:end="51:57"><name pos:start="51:46" pos:end="51:46">c</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:57">dstFormat</name></name></expr>)</condition><block pos:start="51:59" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:32">

        <expr_stmt pos:start="53:9" pos:end="53:107"><expr pos:start="53:9" pos:end="53:106"><call pos:start="53:9" pos:end="53:106"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:106">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">c</name></expr></argument>, <argument pos:start="53:19" pos:end="53:32"><expr pos:start="53:19" pos:end="53:32"><name pos:start="53:19" pos:end="53:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="53:35" pos:end="53:105"><expr pos:start="53:35" pos:end="53:105"><literal type="string" pos:start="53:35" pos:end="53:105">"deprecated pixel format used, make sure you did set range correctly\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">c</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:20">srcFormat</name></name><operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:31">srcFormat</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:9">c</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:20">dstFormat</name></name><operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:31">dstFormat</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:41">(<expr pos:start="63:9" pos:end="63:40"><operator pos:start="63:9" pos:end="63:9">!</operator><call pos:start="63:10" pos:end="63:40"><name pos:start="63:10" pos:end="63:29">sws_isSupportedInput</name><argument_list pos:start="63:30" pos:end="63:40">(<argument pos:start="63:31" pos:end="63:39"><expr pos:start="63:31" pos:end="63:39"><name pos:start="63:31" pos:end="63:39">srcFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:43" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:31">

        <expr_stmt pos:start="65:9" pos:end="65:111"><expr pos:start="65:9" pos:end="65:110"><call pos:start="65:9" pos:end="65:110"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:110">(<argument pos:start="65:16" pos:end="65:16"><expr pos:start="65:16" pos:end="65:16"><name pos:start="65:16" pos:end="65:16">c</name></expr></argument>, <argument pos:start="65:19" pos:end="65:30"><expr pos:start="65:19" pos:end="65:30"><name pos:start="65:19" pos:end="65:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:33" pos:end="65:77"><expr pos:start="65:33" pos:end="65:77"><literal type="string" pos:start="65:33" pos:end="65:77">"%s is not supported as input pixel format\n"</literal></expr></argument>, <argument pos:start="65:80" pos:end="65:109"><expr pos:start="65:80" pos:end="65:109"><call pos:start="65:80" pos:end="65:109"><name pos:start="65:80" pos:end="65:98">av_get_pix_fmt_name</name><argument_list pos:start="65:99" pos:end="65:109">(<argument pos:start="65:100" pos:end="65:108"><expr pos:start="65:100" pos:end="65:108"><name pos:start="65:100" pos:end="65:108">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:31">return <expr pos:start="67:16" pos:end="67:30"><call pos:start="67:16" pos:end="67:30"><name pos:start="67:16" pos:end="67:22">AVERROR</name><argument_list pos:start="67:23" pos:end="67:30">(<argument pos:start="67:24" pos:end="67:29"><expr pos:start="67:24" pos:end="67:29"><name pos:start="67:24" pos:end="67:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:42">(<expr pos:start="71:9" pos:end="71:41"><operator pos:start="71:9" pos:end="71:9">!</operator><call pos:start="71:10" pos:end="71:41"><name pos:start="71:10" pos:end="71:30">sws_isSupportedOutput</name><argument_list pos:start="71:31" pos:end="71:41">(<argument pos:start="71:32" pos:end="71:40"><expr pos:start="71:32" pos:end="71:40"><name pos:start="71:32" pos:end="71:40">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:44" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:31">

        <expr_stmt pos:start="73:9" pos:end="73:112"><expr pos:start="73:9" pos:end="73:111"><call pos:start="73:9" pos:end="73:111"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:111">(<argument pos:start="73:16" pos:end="73:16"><expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">c</name></expr></argument>, <argument pos:start="73:19" pos:end="73:30"><expr pos:start="73:19" pos:end="73:30"><name pos:start="73:19" pos:end="73:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:33" pos:end="73:78"><expr pos:start="73:33" pos:end="73:78"><literal type="string" pos:start="73:33" pos:end="73:78">"%s is not supported as output pixel format\n"</literal></expr></argument>, <argument pos:start="73:81" pos:end="73:110"><expr pos:start="73:81" pos:end="73:110"><call pos:start="73:81" pos:end="73:110"><name pos:start="73:81" pos:end="73:99">av_get_pix_fmt_name</name><argument_list pos:start="73:100" pos:end="73:110">(<argument pos:start="73:101" pos:end="73:109"><expr pos:start="73:101" pos:end="73:109"><name pos:start="73:101" pos:end="73:109">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:31">return <expr pos:start="75:16" pos:end="75:30"><call pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:22">AVERROR</name><argument_list pos:start="75:23" pos:end="75:30">(<argument pos:start="75:24" pos:end="75:29"><expr pos:start="75:24" pos:end="75:29"><name pos:start="75:24" pos:end="75:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="101:31"><expr pos:start="81:5" pos:end="101:30"><name pos:start="81:5" pos:end="81:5">i</name><operator pos:start="81:6" pos:end="81:6">=</operator> <name pos:start="81:8" pos:end="81:12">flags</name> <operator pos:start="81:14" pos:end="81:14">&amp;</operator> <operator pos:start="81:16" pos:end="81:16">(</operator> <name pos:start="81:18" pos:end="81:26">SWS_POINT</name>

                <operator pos:start="83:17" pos:end="83:17">|</operator><name pos:start="83:18" pos:end="83:25">SWS_AREA</name>

                <operator pos:start="85:17" pos:end="85:17">|</operator><name pos:start="85:18" pos:end="85:29">SWS_BILINEAR</name>

                <operator pos:start="87:17" pos:end="87:17">|</operator><name pos:start="87:18" pos:end="87:34">SWS_FAST_BILINEAR</name>

                <operator pos:start="89:17" pos:end="89:17">|</operator><name pos:start="89:18" pos:end="89:28">SWS_BICUBIC</name>

                <operator pos:start="91:17" pos:end="91:17">|</operator><name pos:start="91:18" pos:end="91:22">SWS_X</name>

                <operator pos:start="93:17" pos:end="93:17">|</operator><name pos:start="93:18" pos:end="93:26">SWS_GAUSS</name>

                <operator pos:start="95:17" pos:end="95:17">|</operator><name pos:start="95:18" pos:end="95:28">SWS_LANCZOS</name>

                <operator pos:start="97:17" pos:end="97:17">|</operator><name pos:start="97:18" pos:end="97:25">SWS_SINC</name>

                <operator pos:start="99:17" pos:end="99:17">|</operator><name pos:start="99:18" pos:end="99:27">SWS_SPLINE</name>

                <operator pos:start="101:17" pos:end="101:17">|</operator><name pos:start="101:18" pos:end="101:29">SWS_BICUBLIN</name><operator pos:start="101:30" pos:end="101:30">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if<condition pos:start="103:7" pos:end="103:25">(<expr pos:start="103:8" pos:end="103:24"><operator pos:start="103:8" pos:end="103:8">!</operator><name pos:start="103:9" pos:end="103:9">i</name> <operator pos:start="103:11" pos:end="103:12">||</operator> <operator pos:start="103:14" pos:end="103:14">(</operator><name pos:start="103:15" pos:end="103:15">i</name> <operator pos:start="103:17" pos:end="103:17">&amp;</operator> <operator pos:start="103:19" pos:end="103:19">(</operator><name pos:start="103:20" pos:end="103:20">i</name><operator pos:start="103:21" pos:end="103:21">-</operator><literal type="number" pos:start="103:22" pos:end="103:22">1</literal><operator pos:start="103:23" pos:end="103:23">)</operator><operator pos:start="103:24" pos:end="103:24">)</operator></expr>)</condition> <block pos:start="103:27" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:31">

        <expr_stmt pos:start="105:9" pos:end="105:81"><expr pos:start="105:9" pos:end="105:80"><call pos:start="105:9" pos:end="105:80"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:80">(<argument pos:start="105:16" pos:end="105:16"><expr pos:start="105:16" pos:end="105:16"><name pos:start="105:16" pos:end="105:16">c</name></expr></argument>, <argument pos:start="105:19" pos:end="105:30"><expr pos:start="105:19" pos:end="105:30"><name pos:start="105:19" pos:end="105:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:33" pos:end="105:79"><expr pos:start="105:33" pos:end="105:79"><literal type="string" pos:start="105:33" pos:end="105:79">"Exactly one scaler algorithm must be chosen\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:31">return <expr pos:start="107:16" pos:end="107:30"><call pos:start="107:16" pos:end="107:30"><name pos:start="107:16" pos:end="107:22">AVERROR</name><argument_list pos:start="107:23" pos:end="107:30">(<argument pos:start="107:24" pos:end="107:29"><expr pos:start="107:24" pos:end="107:29"><name pos:start="107:24" pos:end="107:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="111:5" pos:end="111:22">/* sanity check */</comment>

    <if_stmt pos:start="113:5" pos:end="121:5"><if pos:start="113:5" pos:end="121:5">if <condition pos:start="113:8" pos:end="113:45">(<expr pos:start="113:9" pos:end="113:44"><name pos:start="113:9" pos:end="113:12">srcW</name><operator pos:start="113:13" pos:end="113:13">&lt;</operator><literal type="number" pos:start="113:14" pos:end="113:14">4</literal> <operator pos:start="113:16" pos:end="113:17">||</operator> <name pos:start="113:19" pos:end="113:22">srcH</name><operator pos:start="113:23" pos:end="113:23">&lt;</operator><literal type="number" pos:start="113:24" pos:end="113:24">1</literal> <operator pos:start="113:26" pos:end="113:27">||</operator> <name pos:start="113:29" pos:end="113:32">dstW</name><operator pos:start="113:33" pos:end="113:33">&lt;</operator><literal type="number" pos:start="113:34" pos:end="113:34">8</literal> <operator pos:start="113:36" pos:end="113:37">||</operator> <name pos:start="113:39" pos:end="113:42">dstH</name><operator pos:start="113:43" pos:end="113:43">&lt;</operator><literal type="number" pos:start="113:44" pos:end="113:44">1</literal></expr>)</condition> <block pos:start="113:47" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:31"> <comment type="line" pos:start="113:49" pos:end="113:148">//FIXME check if these are enough and try to lowwer them after fixing the relevant parts of the code</comment>

        <expr_stmt pos:start="115:9" pos:end="117:39"><expr pos:start="115:9" pos:end="117:38"><call pos:start="115:9" pos:end="117:38"><name pos:start="115:9" pos:end="115:14">av_log</name><argument_list pos:start="115:15" pos:end="117:38">(<argument pos:start="115:16" pos:end="115:16"><expr pos:start="115:16" pos:end="115:16"><name pos:start="115:16" pos:end="115:16">c</name></expr></argument>, <argument pos:start="115:19" pos:end="115:30"><expr pos:start="115:19" pos:end="115:30"><name pos:start="115:19" pos:end="115:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:33" pos:end="115:79"><expr pos:start="115:33" pos:end="115:79"><literal type="string" pos:start="115:33" pos:end="115:79">"%dx%d -&gt; %dx%d is invalid scaling dimension\n"</literal></expr></argument>,

               <argument pos:start="117:16" pos:end="117:19"><expr pos:start="117:16" pos:end="117:19"><name pos:start="117:16" pos:end="117:19">srcW</name></expr></argument>, <argument pos:start="117:22" pos:end="117:25"><expr pos:start="117:22" pos:end="117:25"><name pos:start="117:22" pos:end="117:25">srcH</name></expr></argument>, <argument pos:start="117:28" pos:end="117:31"><expr pos:start="117:28" pos:end="117:31"><name pos:start="117:28" pos:end="117:31">dstW</name></expr></argument>, <argument pos:start="117:34" pos:end="117:37"><expr pos:start="117:34" pos:end="117:37"><name pos:start="117:34" pos:end="117:37">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="119:9" pos:end="119:31">return <expr pos:start="119:16" pos:end="119:30"><call pos:start="119:16" pos:end="119:30"><name pos:start="119:16" pos:end="119:22">AVERROR</name><argument_list pos:start="119:23" pos:end="119:30">(<argument pos:start="119:24" pos:end="119:29"><expr pos:start="119:24" pos:end="119:29"><name pos:start="119:24" pos:end="119:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="125:44"><if pos:start="125:5" pos:end="125:44">if <condition pos:start="125:8" pos:end="125:19">(<expr pos:start="125:9" pos:end="125:18"><operator pos:start="125:9" pos:end="125:9">!</operator><name pos:start="125:10" pos:end="125:18">dstFilter</name></expr>)</condition><block type="pseudo" pos:start="125:21" pos:end="125:44"><block_content pos:start="125:21" pos:end="125:44"> <expr_stmt pos:start="125:21" pos:end="125:44"><expr pos:start="125:21" pos:end="125:43"><name pos:start="125:21" pos:end="125:29">dstFilter</name><operator pos:start="125:30" pos:end="125:30">=</operator> <operator pos:start="125:32" pos:end="125:32">&amp;</operator><name pos:start="125:33" pos:end="125:43">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="127:5" pos:end="127:44"><if pos:start="127:5" pos:end="127:44">if <condition pos:start="127:8" pos:end="127:19">(<expr pos:start="127:9" pos:end="127:18"><operator pos:start="127:9" pos:end="127:9">!</operator><name pos:start="127:10" pos:end="127:18">srcFilter</name></expr>)</condition><block type="pseudo" pos:start="127:21" pos:end="127:44"><block_content pos:start="127:21" pos:end="127:44"> <expr_stmt pos:start="127:21" pos:end="127:44"><expr pos:start="127:21" pos:end="127:43"><name pos:start="127:21" pos:end="127:29">srcFilter</name><operator pos:start="127:30" pos:end="127:30">=</operator> <operator pos:start="127:32" pos:end="127:32">&amp;</operator><name pos:start="127:33" pos:end="127:43">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:46"><expr pos:start="131:5" pos:end="131:45"><name pos:start="131:5" pos:end="131:14"><name pos:start="131:5" pos:end="131:5">c</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:14">lumXInc</name></name><operator pos:start="131:15" pos:end="131:15">=</operator> <operator pos:start="131:17" pos:end="131:17">(</operator><operator pos:start="131:18" pos:end="131:18">(</operator><name pos:start="131:19" pos:end="131:22">srcW</name><operator pos:start="131:23" pos:end="131:24">&lt;&lt;</operator><literal type="number" pos:start="131:25" pos:end="131:26">16</literal><operator pos:start="131:27" pos:end="131:27">)</operator> <operator pos:start="131:29" pos:end="131:29">+</operator> <operator pos:start="131:31" pos:end="131:31">(</operator><name pos:start="131:32" pos:end="131:35">dstW</name><operator pos:start="131:36" pos:end="131:37">&gt;&gt;</operator><literal type="number" pos:start="131:38" pos:end="131:38">1</literal><operator pos:start="131:39" pos:end="131:39">)</operator><operator pos:start="131:40" pos:end="131:40">)</operator><operator pos:start="131:41" pos:end="131:41">/</operator><name pos:start="131:42" pos:end="131:45">dstW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:46"><expr pos:start="133:5" pos:end="133:45"><name pos:start="133:5" pos:end="133:14"><name pos:start="133:5" pos:end="133:5">c</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:14">lumYInc</name></name><operator pos:start="133:15" pos:end="133:15">=</operator> <operator pos:start="133:17" pos:end="133:17">(</operator><operator pos:start="133:18" pos:end="133:18">(</operator><name pos:start="133:19" pos:end="133:22">srcH</name><operator pos:start="133:23" pos:end="133:24">&lt;&lt;</operator><literal type="number" pos:start="133:25" pos:end="133:26">16</literal><operator pos:start="133:27" pos:end="133:27">)</operator> <operator pos:start="133:29" pos:end="133:29">+</operator> <operator pos:start="133:31" pos:end="133:31">(</operator><name pos:start="133:32" pos:end="133:35">dstH</name><operator pos:start="133:36" pos:end="133:37">&gt;&gt;</operator><literal type="number" pos:start="133:38" pos:end="133:38">1</literal><operator pos:start="133:39" pos:end="133:39">)</operator><operator pos:start="133:40" pos:end="133:40">)</operator><operator pos:start="133:41" pos:end="133:41">/</operator><name pos:start="133:42" pos:end="133:45">dstH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:80"><expr pos:start="135:5" pos:end="135:79"><name pos:start="135:5" pos:end="135:19"><name pos:start="135:5" pos:end="135:5">c</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:19">dstFormatBpp</name></name> <operator pos:start="135:21" pos:end="135:21">=</operator> <call pos:start="135:23" pos:end="135:79"><name pos:start="135:23" pos:end="135:43">av_get_bits_per_pixel</name><argument_list pos:start="135:44" pos:end="135:79">(<argument pos:start="135:45" pos:end="135:78"><expr pos:start="135:45" pos:end="135:78"><operator pos:start="135:45" pos:end="135:45">&amp;</operator><name pos:start="135:46" pos:end="135:78"><name pos:start="135:46" pos:end="135:67">av_pix_fmt_descriptors</name><index pos:start="135:68" pos:end="135:78">[<expr pos:start="135:69" pos:end="135:77"><name pos:start="135:69" pos:end="135:77">dstFormat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:80"><expr pos:start="137:5" pos:end="137:79"><name pos:start="137:5" pos:end="137:19"><name pos:start="137:5" pos:end="137:5">c</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:19">srcFormatBpp</name></name> <operator pos:start="137:21" pos:end="137:21">=</operator> <call pos:start="137:23" pos:end="137:79"><name pos:start="137:23" pos:end="137:43">av_get_bits_per_pixel</name><argument_list pos:start="137:44" pos:end="137:79">(<argument pos:start="137:45" pos:end="137:78"><expr pos:start="137:45" pos:end="137:78"><operator pos:start="137:45" pos:end="137:45">&amp;</operator><name pos:start="137:46" pos:end="137:78"><name pos:start="137:46" pos:end="137:67">av_pix_fmt_descriptors</name><index pos:start="137:68" pos:end="137:78">[<expr pos:start="137:69" pos:end="137:77"><name pos:start="137:69" pos:end="137:77">srcFormat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:42"><expr pos:start="139:5" pos:end="139:41"><name pos:start="139:5" pos:end="139:15"><name pos:start="139:5" pos:end="139:5">c</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:15">vRounder</name></name><operator pos:start="139:16" pos:end="139:16">=</operator> <literal type="number" pos:start="139:18" pos:end="139:18">4</literal><operator pos:start="139:19" pos:end="139:19">*</operator> <literal type="number" pos:start="139:21" pos:end="139:41">0x0001000100010001ULL</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="149:65"><expr pos:start="143:5" pos:end="149:64"><name pos:start="143:5" pos:end="143:15">usesVFilter</name> <operator pos:start="143:17" pos:end="143:17">=</operator> <operator pos:start="143:19" pos:end="143:19">(</operator><name pos:start="143:20" pos:end="143:34"><name pos:start="143:20" pos:end="143:28">srcFilter</name><operator pos:start="143:29" pos:end="143:30">-&gt;</operator><name pos:start="143:31" pos:end="143:34">lumV</name></name> <operator pos:start="143:36" pos:end="143:37">&amp;&amp;</operator> <name pos:start="143:39" pos:end="143:61"><name pos:start="143:39" pos:end="143:47">srcFilter</name><operator pos:start="143:48" pos:end="143:49">-&gt;</operator><name pos:start="143:50" pos:end="143:53">lumV</name><operator pos:start="143:54" pos:end="143:55">-&gt;</operator><name pos:start="143:56" pos:end="143:61">length</name></name><operator pos:start="143:62" pos:end="143:62">&gt;</operator><literal type="number" pos:start="143:63" pos:end="143:63">1</literal><operator pos:start="143:64" pos:end="143:64">)</operator> <operator pos:start="143:66" pos:end="143:67">||</operator>

                  <operator pos:start="145:19" pos:end="145:19">(</operator><name pos:start="145:20" pos:end="145:34"><name pos:start="145:20" pos:end="145:28">srcFilter</name><operator pos:start="145:29" pos:end="145:30">-&gt;</operator><name pos:start="145:31" pos:end="145:34">chrV</name></name> <operator pos:start="145:36" pos:end="145:37">&amp;&amp;</operator> <name pos:start="145:39" pos:end="145:61"><name pos:start="145:39" pos:end="145:47">srcFilter</name><operator pos:start="145:48" pos:end="145:49">-&gt;</operator><name pos:start="145:50" pos:end="145:53">chrV</name><operator pos:start="145:54" pos:end="145:55">-&gt;</operator><name pos:start="145:56" pos:end="145:61">length</name></name><operator pos:start="145:62" pos:end="145:62">&gt;</operator><literal type="number" pos:start="145:63" pos:end="145:63">1</literal><operator pos:start="145:64" pos:end="145:64">)</operator> <operator pos:start="145:66" pos:end="145:67">||</operator>

                  <operator pos:start="147:19" pos:end="147:19">(</operator><name pos:start="147:20" pos:end="147:34"><name pos:start="147:20" pos:end="147:28">dstFilter</name><operator pos:start="147:29" pos:end="147:30">-&gt;</operator><name pos:start="147:31" pos:end="147:34">lumV</name></name> <operator pos:start="147:36" pos:end="147:37">&amp;&amp;</operator> <name pos:start="147:39" pos:end="147:61"><name pos:start="147:39" pos:end="147:47">dstFilter</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:53">lumV</name><operator pos:start="147:54" pos:end="147:55">-&gt;</operator><name pos:start="147:56" pos:end="147:61">length</name></name><operator pos:start="147:62" pos:end="147:62">&gt;</operator><literal type="number" pos:start="147:63" pos:end="147:63">1</literal><operator pos:start="147:64" pos:end="147:64">)</operator> <operator pos:start="147:66" pos:end="147:67">||</operator>

                  <operator pos:start="149:19" pos:end="149:19">(</operator><name pos:start="149:20" pos:end="149:34"><name pos:start="149:20" pos:end="149:28">dstFilter</name><operator pos:start="149:29" pos:end="149:30">-&gt;</operator><name pos:start="149:31" pos:end="149:34">chrV</name></name> <operator pos:start="149:36" pos:end="149:37">&amp;&amp;</operator> <name pos:start="149:39" pos:end="149:61"><name pos:start="149:39" pos:end="149:47">dstFilter</name><operator pos:start="149:48" pos:end="149:49">-&gt;</operator><name pos:start="149:50" pos:end="149:53">chrV</name><operator pos:start="149:54" pos:end="149:55">-&gt;</operator><name pos:start="149:56" pos:end="149:61">length</name></name><operator pos:start="149:62" pos:end="149:62">&gt;</operator><literal type="number" pos:start="149:63" pos:end="149:63">1</literal><operator pos:start="149:64" pos:end="149:64">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="157:65"><expr pos:start="151:5" pos:end="157:64"><name pos:start="151:5" pos:end="151:15">usesHFilter</name> <operator pos:start="151:17" pos:end="151:17">=</operator> <operator pos:start="151:19" pos:end="151:19">(</operator><name pos:start="151:20" pos:end="151:34"><name pos:start="151:20" pos:end="151:28">srcFilter</name><operator pos:start="151:29" pos:end="151:30">-&gt;</operator><name pos:start="151:31" pos:end="151:34">lumH</name></name> <operator pos:start="151:36" pos:end="151:37">&amp;&amp;</operator> <name pos:start="151:39" pos:end="151:61"><name pos:start="151:39" pos:end="151:47">srcFilter</name><operator pos:start="151:48" pos:end="151:49">-&gt;</operator><name pos:start="151:50" pos:end="151:53">lumH</name><operator pos:start="151:54" pos:end="151:55">-&gt;</operator><name pos:start="151:56" pos:end="151:61">length</name></name><operator pos:start="151:62" pos:end="151:62">&gt;</operator><literal type="number" pos:start="151:63" pos:end="151:63">1</literal><operator pos:start="151:64" pos:end="151:64">)</operator> <operator pos:start="151:66" pos:end="151:67">||</operator>

                  <operator pos:start="153:19" pos:end="153:19">(</operator><name pos:start="153:20" pos:end="153:34"><name pos:start="153:20" pos:end="153:28">srcFilter</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:34">chrH</name></name> <operator pos:start="153:36" pos:end="153:37">&amp;&amp;</operator> <name pos:start="153:39" pos:end="153:61"><name pos:start="153:39" pos:end="153:47">srcFilter</name><operator pos:start="153:48" pos:end="153:49">-&gt;</operator><name pos:start="153:50" pos:end="153:53">chrH</name><operator pos:start="153:54" pos:end="153:55">-&gt;</operator><name pos:start="153:56" pos:end="153:61">length</name></name><operator pos:start="153:62" pos:end="153:62">&gt;</operator><literal type="number" pos:start="153:63" pos:end="153:63">1</literal><operator pos:start="153:64" pos:end="153:64">)</operator> <operator pos:start="153:66" pos:end="153:67">||</operator>

                  <operator pos:start="155:19" pos:end="155:19">(</operator><name pos:start="155:20" pos:end="155:34"><name pos:start="155:20" pos:end="155:28">dstFilter</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:34">lumH</name></name> <operator pos:start="155:36" pos:end="155:37">&amp;&amp;</operator> <name pos:start="155:39" pos:end="155:61"><name pos:start="155:39" pos:end="155:47">dstFilter</name><operator pos:start="155:48" pos:end="155:49">-&gt;</operator><name pos:start="155:50" pos:end="155:53">lumH</name><operator pos:start="155:54" pos:end="155:55">-&gt;</operator><name pos:start="155:56" pos:end="155:61">length</name></name><operator pos:start="155:62" pos:end="155:62">&gt;</operator><literal type="number" pos:start="155:63" pos:end="155:63">1</literal><operator pos:start="155:64" pos:end="155:64">)</operator> <operator pos:start="155:66" pos:end="155:67">||</operator>

                  <operator pos:start="157:19" pos:end="157:19">(</operator><name pos:start="157:20" pos:end="157:34"><name pos:start="157:20" pos:end="157:28">dstFilter</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:34">chrH</name></name> <operator pos:start="157:36" pos:end="157:37">&amp;&amp;</operator> <name pos:start="157:39" pos:end="157:61"><name pos:start="157:39" pos:end="157:47">dstFilter</name><operator pos:start="157:48" pos:end="157:49">-&gt;</operator><name pos:start="157:50" pos:end="157:53">chrH</name><operator pos:start="157:54" pos:end="157:55">-&gt;</operator><name pos:start="157:56" pos:end="157:61">length</name></name><operator pos:start="157:62" pos:end="157:62">&gt;</operator><literal type="number" pos:start="157:63" pos:end="157:63">1</literal><operator pos:start="157:64" pos:end="157:64">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:79"><expr pos:start="161:5" pos:end="161:78"><call pos:start="161:5" pos:end="161:78"><name pos:start="161:5" pos:end="161:23">getSubSampleFactors</name><argument_list pos:start="161:24" pos:end="161:78">(<argument pos:start="161:25" pos:end="161:44"><expr pos:start="161:25" pos:end="161:44"><operator pos:start="161:25" pos:end="161:25">&amp;</operator><name pos:start="161:26" pos:end="161:44"><name pos:start="161:26" pos:end="161:26">c</name><operator pos:start="161:27" pos:end="161:28">-&gt;</operator><name pos:start="161:29" pos:end="161:44">chrSrcHSubSample</name></name></expr></argument>, <argument pos:start="161:47" pos:end="161:66"><expr pos:start="161:47" pos:end="161:66"><operator pos:start="161:47" pos:end="161:47">&amp;</operator><name pos:start="161:48" pos:end="161:66"><name pos:start="161:48" pos:end="161:48">c</name><operator pos:start="161:49" pos:end="161:50">-&gt;</operator><name pos:start="161:51" pos:end="161:66">chrSrcVSubSample</name></name></expr></argument>, <argument pos:start="161:69" pos:end="161:77"><expr pos:start="161:69" pos:end="161:77"><name pos:start="161:69" pos:end="161:77">srcFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:79"><expr pos:start="163:5" pos:end="163:78"><call pos:start="163:5" pos:end="163:78"><name pos:start="163:5" pos:end="163:23">getSubSampleFactors</name><argument_list pos:start="163:24" pos:end="163:78">(<argument pos:start="163:25" pos:end="163:44"><expr pos:start="163:25" pos:end="163:44"><operator pos:start="163:25" pos:end="163:25">&amp;</operator><name pos:start="163:26" pos:end="163:44"><name pos:start="163:26" pos:end="163:26">c</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:44">chrDstHSubSample</name></name></expr></argument>, <argument pos:start="163:47" pos:end="163:66"><expr pos:start="163:47" pos:end="163:66"><operator pos:start="163:47" pos:end="163:47">&amp;</operator><name pos:start="163:48" pos:end="163:66"><name pos:start="163:48" pos:end="163:48">c</name><operator pos:start="163:49" pos:end="163:50">-&gt;</operator><name pos:start="163:51" pos:end="163:66">chrDstVSubSample</name></name></expr></argument>, <argument pos:start="163:69" pos:end="163:77"><expr pos:start="163:69" pos:end="163:77"><name pos:start="163:69" pos:end="163:77">dstFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="167:5" pos:end="167:84">// reuse chroma for 2 pixels RGB/BGR unless user wants full chroma interpolation</comment>

    <if_stmt pos:start="169:5" pos:end="183:5"><if pos:start="169:5" pos:end="183:5">if <condition pos:start="169:8" pos:end="169:59">(<expr pos:start="169:9" pos:end="169:58"><call pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:16">isAnyRGB</name><argument_list pos:start="169:17" pos:end="169:27">(<argument pos:start="169:18" pos:end="169:26"><expr pos:start="169:18" pos:end="169:26"><name pos:start="169:18" pos:end="169:26">dstFormat</name></expr></argument>)</argument_list></call> <operator pos:start="169:29" pos:end="169:30">&amp;&amp;</operator> <operator pos:start="169:32" pos:end="169:32">!</operator><operator pos:start="169:33" pos:end="169:33">(</operator><name pos:start="169:34" pos:end="169:38">flags</name><operator pos:start="169:39" pos:end="169:39">&amp;</operator><name pos:start="169:40" pos:end="169:57">SWS_FULL_CHR_H_INT</name><operator pos:start="169:58" pos:end="169:58">)</operator></expr>)</condition> <block pos:start="169:61" pos:end="183:5">{<block_content pos:start="171:9" pos:end="181:36">

        <if_stmt pos:start="171:9" pos:end="181:36"><if pos:start="171:9" pos:end="179:9">if <condition pos:start="171:12" pos:end="171:19">(<expr pos:start="171:13" pos:end="171:18"><name pos:start="171:13" pos:end="171:16">dstW</name><operator pos:start="171:17" pos:end="171:17">&amp;</operator><literal type="number" pos:start="171:18" pos:end="171:18">1</literal></expr>)</condition> <block pos:start="171:21" pos:end="179:9">{<block_content pos:start="173:13" pos:end="177:29">

            <expr_stmt pos:start="173:13" pos:end="173:95"><expr pos:start="173:13" pos:end="173:94"><call pos:start="173:13" pos:end="173:94"><name pos:start="173:13" pos:end="173:18">av_log</name><argument_list pos:start="173:19" pos:end="173:94">(<argument pos:start="173:20" pos:end="173:20"><expr pos:start="173:20" pos:end="173:20"><name pos:start="173:20" pos:end="173:20">c</name></expr></argument>, <argument pos:start="173:23" pos:end="173:34"><expr pos:start="173:23" pos:end="173:34"><name pos:start="173:23" pos:end="173:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="173:37" pos:end="173:93"><expr pos:start="173:37" pos:end="173:93"><literal type="string" pos:start="173:37" pos:end="173:93">"Forcing full internal H chroma due to odd output size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:40"><expr pos:start="175:13" pos:end="175:39"><name pos:start="175:13" pos:end="175:17">flags</name> <operator pos:start="175:19" pos:end="175:20">|=</operator> <name pos:start="175:22" pos:end="175:39">SWS_FULL_CHR_H_INT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:29"><expr pos:start="177:13" pos:end="177:28"><name pos:start="177:13" pos:end="177:20"><name pos:start="177:13" pos:end="177:13">c</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:20">flags</name></name> <operator pos:start="177:22" pos:end="177:22">=</operator> <name pos:start="177:24" pos:end="177:28">flags</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="179:11" pos:end="181:36">else<block type="pseudo" pos:start="181:13" pos:end="181:36"><block_content pos:start="181:13" pos:end="181:36">

            <expr_stmt pos:start="181:13" pos:end="181:36"><expr pos:start="181:13" pos:end="181:35"><name pos:start="181:13" pos:end="181:31"><name pos:start="181:13" pos:end="181:13">c</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:31">chrDstHSubSample</name></name> <operator pos:start="181:33" pos:end="181:33">=</operator> <literal type="number" pos:start="181:35" pos:end="181:35">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="187:5" pos:end="187:50">// drop some chroma lines if the user wants it</comment>

    <expr_stmt pos:start="189:5" pos:end="189:75"><expr pos:start="189:5" pos:end="189:74"><name pos:start="189:5" pos:end="189:15"><name pos:start="189:5" pos:end="189:5">c</name><operator pos:start="189:6" pos:end="189:7">-&gt;</operator><name pos:start="189:8" pos:end="189:15">vChrDrop</name></name><operator pos:start="189:16" pos:end="189:16">=</operator> <operator pos:start="189:18" pos:end="189:18">(</operator><name pos:start="189:19" pos:end="189:23">flags</name><operator pos:start="189:24" pos:end="189:24">&amp;</operator><name pos:start="189:25" pos:end="189:47">SWS_SRC_V_CHR_DROP_MASK</name><operator pos:start="189:48" pos:end="189:48">)</operator><operator pos:start="189:49" pos:end="189:50">&gt;&gt;</operator><name pos:start="189:51" pos:end="189:74">SWS_SRC_V_CHR_DROP_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:38"><expr pos:start="191:5" pos:end="191:37"><name pos:start="191:5" pos:end="191:23"><name pos:start="191:5" pos:end="191:5">c</name><operator pos:start="191:6" pos:end="191:7">-&gt;</operator><name pos:start="191:8" pos:end="191:23">chrSrcVSubSample</name></name><operator pos:start="191:24" pos:end="191:25">+=</operator> <name pos:start="191:27" pos:end="191:37"><name pos:start="191:27" pos:end="191:27">c</name><operator pos:start="191:28" pos:end="191:29">-&gt;</operator><name pos:start="191:30" pos:end="191:37">vChrDrop</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="195:5" pos:end="195:82">// drop every other pixel for chroma calculation unless user wants full chroma</comment>

    <if_stmt pos:start="197:5" pos:end="207:30"><if pos:start="197:5" pos:end="207:30">if <condition pos:start="197:8" pos:end="205:81">(<expr pos:start="197:9" pos:end="205:80"><call pos:start="197:9" pos:end="197:27"><name pos:start="197:9" pos:end="197:16">isAnyRGB</name><argument_list pos:start="197:17" pos:end="197:27">(<argument pos:start="197:18" pos:end="197:26"><expr pos:start="197:18" pos:end="197:26"><name pos:start="197:18" pos:end="197:26">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="197:29" pos:end="197:30">&amp;&amp;</operator> <operator pos:start="197:32" pos:end="197:32">!</operator><operator pos:start="197:33" pos:end="197:33">(</operator><name pos:start="197:34" pos:end="197:38">flags</name><operator pos:start="197:39" pos:end="197:39">&amp;</operator><name pos:start="197:40" pos:end="197:57">SWS_FULL_CHR_H_INP</name><operator pos:start="197:58" pos:end="197:58">)</operator>

      <operator pos:start="199:7" pos:end="199:8">&amp;&amp;</operator> <name pos:start="199:10" pos:end="199:18">srcFormat</name><operator pos:start="199:19" pos:end="199:20">!=</operator><name pos:start="199:21" pos:end="199:32">PIX_FMT_RGB8</name>      <operator pos:start="199:39" pos:end="199:40">&amp;&amp;</operator> <name pos:start="199:42" pos:end="199:50">srcFormat</name><operator pos:start="199:51" pos:end="199:52">!=</operator><name pos:start="199:53" pos:end="199:64">PIX_FMT_BGR8</name>

      <operator pos:start="201:7" pos:end="201:8">&amp;&amp;</operator> <name pos:start="201:10" pos:end="201:18">srcFormat</name><operator pos:start="201:19" pos:end="201:20">!=</operator><name pos:start="201:21" pos:end="201:32">PIX_FMT_RGB4</name>      <operator pos:start="201:39" pos:end="201:40">&amp;&amp;</operator> <name pos:start="201:42" pos:end="201:50">srcFormat</name><operator pos:start="201:51" pos:end="201:52">!=</operator><name pos:start="201:53" pos:end="201:64">PIX_FMT_BGR4</name>

      <operator pos:start="203:7" pos:end="203:8">&amp;&amp;</operator> <name pos:start="203:10" pos:end="203:18">srcFormat</name><operator pos:start="203:19" pos:end="203:20">!=</operator><name pos:start="203:21" pos:end="203:37">PIX_FMT_RGB4_BYTE</name> <operator pos:start="203:39" pos:end="203:40">&amp;&amp;</operator> <name pos:start="203:42" pos:end="203:50">srcFormat</name><operator pos:start="203:51" pos:end="203:52">!=</operator><name pos:start="203:53" pos:end="203:69">PIX_FMT_BGR4_BYTE</name>

      <operator pos:start="205:7" pos:end="205:8">&amp;&amp;</operator> <operator pos:start="205:10" pos:end="205:10">(</operator><operator pos:start="205:11" pos:end="205:11">(</operator><name pos:start="205:12" pos:end="205:15">dstW</name><operator pos:start="205:16" pos:end="205:17">&gt;&gt;</operator><name pos:start="205:18" pos:end="205:36"><name pos:start="205:18" pos:end="205:18">c</name><operator pos:start="205:19" pos:end="205:20">-&gt;</operator><name pos:start="205:21" pos:end="205:36">chrDstHSubSample</name></name><operator pos:start="205:37" pos:end="205:37">)</operator> <operator pos:start="205:39" pos:end="205:40">&lt;=</operator> <operator pos:start="205:42" pos:end="205:42">(</operator><name pos:start="205:43" pos:end="205:46">srcW</name><operator pos:start="205:47" pos:end="205:48">&gt;&gt;</operator><literal type="number" pos:start="205:49" pos:end="205:49">1</literal><operator pos:start="205:50" pos:end="205:50">)</operator> <operator pos:start="205:52" pos:end="205:53">||</operator> <operator pos:start="205:55" pos:end="205:55">(</operator><name pos:start="205:56" pos:end="205:60">flags</name><operator pos:start="205:61" pos:end="205:61">&amp;</operator><name pos:start="205:62" pos:end="205:78">SWS_FAST_BILINEAR</name><operator pos:start="205:79" pos:end="205:79">)</operator><operator pos:start="205:80" pos:end="205:80">)</operator></expr>)</condition><block type="pseudo" pos:start="207:9" pos:end="207:30"><block_content pos:start="207:9" pos:end="207:30">

        <expr_stmt pos:start="207:9" pos:end="207:30"><expr pos:start="207:9" pos:end="207:29"><name pos:start="207:9" pos:end="207:27"><name pos:start="207:9" pos:end="207:9">c</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:27">chrSrcHSubSample</name></name><operator pos:start="207:28" pos:end="207:28">=</operator><literal type="number" pos:start="207:29" pos:end="207:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="211:5" pos:end="211:66">// Note the -((-x)&gt;&gt;y) is so that we always round toward +inf.</comment>

    <expr_stmt pos:start="213:5" pos:end="213:50"><expr pos:start="213:5" pos:end="213:49"><name pos:start="213:5" pos:end="213:14"><name pos:start="213:5" pos:end="213:5">c</name><operator pos:start="213:6" pos:end="213:7">-&gt;</operator><name pos:start="213:8" pos:end="213:14">chrSrcW</name></name><operator pos:start="213:15" pos:end="213:15">=</operator> <operator pos:start="213:17" pos:end="213:17">-</operator><operator pos:start="213:18" pos:end="213:18">(</operator><operator pos:start="213:19" pos:end="213:19">(</operator><operator pos:start="213:20" pos:end="213:20">-</operator><name pos:start="213:21" pos:end="213:24">srcW</name><operator pos:start="213:25" pos:end="213:25">)</operator> <operator pos:start="213:27" pos:end="213:28">&gt;&gt;</operator> <name pos:start="213:30" pos:end="213:48"><name pos:start="213:30" pos:end="213:30">c</name><operator pos:start="213:31" pos:end="213:32">-&gt;</operator><name pos:start="213:33" pos:end="213:48">chrSrcHSubSample</name></name><operator pos:start="213:49" pos:end="213:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:50"><expr pos:start="215:5" pos:end="215:49"><name pos:start="215:5" pos:end="215:14"><name pos:start="215:5" pos:end="215:5">c</name><operator pos:start="215:6" pos:end="215:7">-&gt;</operator><name pos:start="215:8" pos:end="215:14">chrSrcH</name></name><operator pos:start="215:15" pos:end="215:15">=</operator> <operator pos:start="215:17" pos:end="215:17">-</operator><operator pos:start="215:18" pos:end="215:18">(</operator><operator pos:start="215:19" pos:end="215:19">(</operator><operator pos:start="215:20" pos:end="215:20">-</operator><name pos:start="215:21" pos:end="215:24">srcH</name><operator pos:start="215:25" pos:end="215:25">)</operator> <operator pos:start="215:27" pos:end="215:28">&gt;&gt;</operator> <name pos:start="215:30" pos:end="215:48"><name pos:start="215:30" pos:end="215:30">c</name><operator pos:start="215:31" pos:end="215:32">-&gt;</operator><name pos:start="215:33" pos:end="215:48">chrSrcVSubSample</name></name><operator pos:start="215:49" pos:end="215:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:50"><expr pos:start="217:5" pos:end="217:49"><name pos:start="217:5" pos:end="217:14"><name pos:start="217:5" pos:end="217:5">c</name><operator pos:start="217:6" pos:end="217:7">-&gt;</operator><name pos:start="217:8" pos:end="217:14">chrDstW</name></name><operator pos:start="217:15" pos:end="217:15">=</operator> <operator pos:start="217:17" pos:end="217:17">-</operator><operator pos:start="217:18" pos:end="217:18">(</operator><operator pos:start="217:19" pos:end="217:19">(</operator><operator pos:start="217:20" pos:end="217:20">-</operator><name pos:start="217:21" pos:end="217:24">dstW</name><operator pos:start="217:25" pos:end="217:25">)</operator> <operator pos:start="217:27" pos:end="217:28">&gt;&gt;</operator> <name pos:start="217:30" pos:end="217:48"><name pos:start="217:30" pos:end="217:30">c</name><operator pos:start="217:31" pos:end="217:32">-&gt;</operator><name pos:start="217:33" pos:end="217:48">chrDstHSubSample</name></name><operator pos:start="217:49" pos:end="217:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:50"><expr pos:start="219:5" pos:end="219:49"><name pos:start="219:5" pos:end="219:14"><name pos:start="219:5" pos:end="219:5">c</name><operator pos:start="219:6" pos:end="219:7">-&gt;</operator><name pos:start="219:8" pos:end="219:14">chrDstH</name></name><operator pos:start="219:15" pos:end="219:15">=</operator> <operator pos:start="219:17" pos:end="219:17">-</operator><operator pos:start="219:18" pos:end="219:18">(</operator><operator pos:start="219:19" pos:end="219:19">(</operator><operator pos:start="219:20" pos:end="219:20">-</operator><name pos:start="219:21" pos:end="219:24">dstH</name><operator pos:start="219:25" pos:end="219:25">)</operator> <operator pos:start="219:27" pos:end="219:28">&gt;&gt;</operator> <name pos:start="219:30" pos:end="219:48"><name pos:start="219:30" pos:end="219:30">c</name><operator pos:start="219:31" pos:end="219:32">-&gt;</operator><name pos:start="219:33" pos:end="219:48">chrDstVSubSample</name></name><operator pos:start="219:49" pos:end="219:49">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="223:5" pos:end="223:32">/* unscaled special cases */</comment>

    <if_stmt pos:start="225:5" pos:end="243:5"><if pos:start="225:5" pos:end="243:5">if <condition pos:start="225:8" pos:end="225:104">(<expr pos:start="225:9" pos:end="225:103"><name pos:start="225:9" pos:end="225:16">unscaled</name> <operator pos:start="225:18" pos:end="225:19">&amp;&amp;</operator> <operator pos:start="225:21" pos:end="225:21">!</operator><name pos:start="225:22" pos:end="225:32">usesHFilter</name> <operator pos:start="225:34" pos:end="225:35">&amp;&amp;</operator> <operator pos:start="225:37" pos:end="225:37">!</operator><name pos:start="225:38" pos:end="225:48">usesVFilter</name> <operator pos:start="225:50" pos:end="225:51">&amp;&amp;</operator> <operator pos:start="225:53" pos:end="225:53">(</operator><name pos:start="225:54" pos:end="225:64"><name pos:start="225:54" pos:end="225:54">c</name><operator pos:start="225:55" pos:end="225:56">-&gt;</operator><name pos:start="225:57" pos:end="225:64">srcRange</name></name> <operator pos:start="225:66" pos:end="225:67">==</operator> <name pos:start="225:69" pos:end="225:79"><name pos:start="225:69" pos:end="225:69">c</name><operator pos:start="225:70" pos:end="225:71">-&gt;</operator><name pos:start="225:72" pos:end="225:79">dstRange</name></name> <operator pos:start="225:81" pos:end="225:82">||</operator> <call pos:start="225:84" pos:end="225:102"><name pos:start="225:84" pos:end="225:91">isAnyRGB</name><argument_list pos:start="225:92" pos:end="225:102">(<argument pos:start="225:93" pos:end="225:101"><expr pos:start="225:93" pos:end="225:101"><name pos:start="225:93" pos:end="225:101">dstFormat</name></expr></argument>)</argument_list></call><operator pos:start="225:103" pos:end="225:103">)</operator></expr>)</condition> <block pos:start="225:106" pos:end="243:5">{<block_content pos:start="227:9" pos:end="241:9">

        <expr_stmt pos:start="227:9" pos:end="227:35"><expr pos:start="227:9" pos:end="227:34"><call pos:start="227:9" pos:end="227:34"><name pos:start="227:9" pos:end="227:31">ff_get_unscaled_swscale</name><argument_list pos:start="227:32" pos:end="227:34">(<argument pos:start="227:33" pos:end="227:33"><expr pos:start="227:33" pos:end="227:33"><name pos:start="227:33" pos:end="227:33">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="231:9" pos:end="241:9"><if pos:start="231:9" pos:end="241:9">if <condition pos:start="231:12" pos:end="231:23">(<expr pos:start="231:13" pos:end="231:22"><name pos:start="231:13" pos:end="231:22"><name pos:start="231:13" pos:end="231:13">c</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:22">swScale</name></name></expr>)</condition> <block pos:start="231:25" pos:end="241:9">{<block_content pos:start="233:13" pos:end="239:21">

            <if_stmt pos:start="233:13" pos:end="237:87"><if pos:start="233:13" pos:end="237:87">if <condition pos:start="233:16" pos:end="233:37">(<expr pos:start="233:17" pos:end="233:36"><name pos:start="233:17" pos:end="233:21">flags</name><operator pos:start="233:22" pos:end="233:22">&amp;</operator><name pos:start="233:23" pos:end="233:36">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="235:17" pos:end="237:87"><block_content pos:start="235:17" pos:end="237:87">

                <expr_stmt pos:start="235:17" pos:end="237:87"><expr pos:start="235:17" pos:end="237:86"><call pos:start="235:17" pos:end="237:86"><name pos:start="235:17" pos:end="235:22">av_log</name><argument_list pos:start="235:23" pos:end="237:86">(<argument pos:start="235:24" pos:end="235:24"><expr pos:start="235:24" pos:end="235:24"><name pos:start="235:24" pos:end="235:24">c</name></expr></argument>, <argument pos:start="235:27" pos:end="235:37"><expr pos:start="235:27" pos:end="235:37"><name pos:start="235:27" pos:end="235:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="235:40" pos:end="235:84"><expr pos:start="235:40" pos:end="235:84"><literal type="string" pos:start="235:40" pos:end="235:84">"using unscaled %s -&gt; %s special converter\n"</literal></expr></argument>,

                       <argument pos:start="237:24" pos:end="237:53"><expr pos:start="237:24" pos:end="237:53"><call pos:start="237:24" pos:end="237:53"><name pos:start="237:24" pos:end="237:42">av_get_pix_fmt_name</name><argument_list pos:start="237:43" pos:end="237:53">(<argument pos:start="237:44" pos:end="237:52"><expr pos:start="237:44" pos:end="237:52"><name pos:start="237:44" pos:end="237:52">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="237:56" pos:end="237:85"><expr pos:start="237:56" pos:end="237:85"><call pos:start="237:56" pos:end="237:85"><name pos:start="237:56" pos:end="237:74">av_get_pix_fmt_name</name><argument_list pos:start="237:75" pos:end="237:85">(<argument pos:start="237:76" pos:end="237:84"><expr pos:start="237:76" pos:end="237:84"><name pos:start="237:76" pos:end="237:84">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="239:13" pos:end="239:21">return <expr pos:start="239:20" pos:end="239:20"><literal type="number" pos:start="239:20" pos:end="239:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="247:5" pos:end="247:75"><expr pos:start="247:5" pos:end="247:74"><name pos:start="247:5" pos:end="247:13"><name pos:start="247:5" pos:end="247:5">c</name><operator pos:start="247:6" pos:end="247:7">-&gt;</operator><name pos:start="247:8" pos:end="247:13">srcBpc</name></name> <operator pos:start="247:15" pos:end="247:15">=</operator> <literal type="number" pos:start="247:17" pos:end="247:19">1</literal> <operator pos:start="247:19" pos:end="247:19">+</operator> <name pos:start="247:21" pos:end="247:53"><name pos:start="247:21" pos:end="247:42">av_pix_fmt_descriptors</name><index pos:start="247:43" pos:end="247:53">[<expr pos:start="247:44" pos:end="247:52"><name pos:start="247:44" pos:end="247:52">srcFormat</name></expr>]</index></name><operator pos:start="247:54" pos:end="247:54">.</operator><name pos:start="247:55" pos:end="247:61"><name pos:start="247:55" pos:end="247:58">comp</name><index pos:start="247:59" pos:end="247:61">[<expr pos:start="247:60" pos:end="247:60"><literal type="number" pos:start="247:60" pos:end="247:60">0</literal></expr>]</index></name><operator pos:start="247:62" pos:end="247:62">.</operator><name pos:start="247:63" pos:end="247:74">depth_minus1</name></expr>;</expr_stmt>

    <if_stmt pos:start="249:5" pos:end="251:22"><if pos:start="249:5" pos:end="251:22">if <condition pos:start="249:8" pos:end="249:22">(<expr pos:start="249:9" pos:end="249:21"><name pos:start="249:9" pos:end="249:17"><name pos:start="249:9" pos:end="249:9">c</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:17">srcBpc</name></name> <operator pos:start="249:19" pos:end="249:19">&lt;</operator> <literal type="number" pos:start="249:21" pos:end="249:21">8</literal></expr>)</condition><block type="pseudo" pos:start="251:9" pos:end="251:22"><block_content pos:start="251:9" pos:end="251:22">

        <expr_stmt pos:start="251:9" pos:end="251:22"><expr pos:start="251:9" pos:end="251:21"><name pos:start="251:9" pos:end="251:17"><name pos:start="251:9" pos:end="251:9">c</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:17">srcBpc</name></name> <operator pos:start="251:19" pos:end="251:19">=</operator> <literal type="number" pos:start="251:21" pos:end="251:21">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:75"><expr pos:start="253:5" pos:end="253:74"><name pos:start="253:5" pos:end="253:13"><name pos:start="253:5" pos:end="253:5">c</name><operator pos:start="253:6" pos:end="253:7">-&gt;</operator><name pos:start="253:8" pos:end="253:13">dstBpc</name></name> <operator pos:start="253:15" pos:end="253:15">=</operator> <literal type="number" pos:start="253:17" pos:end="253:19">1</literal> <operator pos:start="253:19" pos:end="253:19">+</operator> <name pos:start="253:21" pos:end="253:53"><name pos:start="253:21" pos:end="253:42">av_pix_fmt_descriptors</name><index pos:start="253:43" pos:end="253:53">[<expr pos:start="253:44" pos:end="253:52"><name pos:start="253:44" pos:end="253:52">dstFormat</name></expr>]</index></name><operator pos:start="253:54" pos:end="253:54">.</operator><name pos:start="253:55" pos:end="253:61"><name pos:start="253:55" pos:end="253:58">comp</name><index pos:start="253:59" pos:end="253:61">[<expr pos:start="253:60" pos:end="253:60"><literal type="number" pos:start="253:60" pos:end="253:60">0</literal></expr>]</index></name><operator pos:start="253:62" pos:end="253:62">.</operator><name pos:start="253:63" pos:end="253:74">depth_minus1</name></expr>;</expr_stmt>

    <if_stmt pos:start="255:5" pos:end="257:22"><if pos:start="255:5" pos:end="257:22">if <condition pos:start="255:8" pos:end="255:22">(<expr pos:start="255:9" pos:end="255:21"><name pos:start="255:9" pos:end="255:17"><name pos:start="255:9" pos:end="255:9">c</name><operator pos:start="255:10" pos:end="255:11">-&gt;</operator><name pos:start="255:12" pos:end="255:17">dstBpc</name></name> <operator pos:start="255:19" pos:end="255:19">&lt;</operator> <literal type="number" pos:start="255:21" pos:end="255:21">8</literal></expr>)</condition><block type="pseudo" pos:start="257:9" pos:end="257:22"><block_content pos:start="257:9" pos:end="257:22">

        <expr_stmt pos:start="257:9" pos:end="257:22"><expr pos:start="257:9" pos:end="257:21"><name pos:start="257:9" pos:end="257:17"><name pos:start="257:9" pos:end="257:9">c</name><operator pos:start="257:10" pos:end="257:11">-&gt;</operator><name pos:start="257:12" pos:end="257:17">dstBpc</name></name> <operator pos:start="257:19" pos:end="257:19">=</operator> <literal type="number" pos:start="257:21" pos:end="257:21">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="259:5" pos:end="261:23"><if pos:start="259:5" pos:end="261:23">if <condition pos:start="259:8" pos:end="259:57">(<expr pos:start="259:9" pos:end="259:56"><call pos:start="259:9" pos:end="259:27"><name pos:start="259:9" pos:end="259:16">isAnyRGB</name><argument_list pos:start="259:17" pos:end="259:27">(<argument pos:start="259:18" pos:end="259:26"><expr pos:start="259:18" pos:end="259:26"><name pos:start="259:18" pos:end="259:26">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="259:29" pos:end="259:30">||</operator> <name pos:start="259:32" pos:end="259:40">srcFormat</name> <operator pos:start="259:42" pos:end="259:43">==</operator> <name pos:start="259:45" pos:end="259:56">PIX_FMT_PAL8</name></expr>)</condition><block type="pseudo" pos:start="261:9" pos:end="261:23"><block_content pos:start="261:9" pos:end="261:23">

        <expr_stmt pos:start="261:9" pos:end="261:23"><expr pos:start="261:9" pos:end="261:22"><name pos:start="261:9" pos:end="261:17"><name pos:start="261:9" pos:end="261:9">c</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:17">srcBpc</name></name> <operator pos:start="261:19" pos:end="261:19">=</operator> <literal type="number" pos:start="261:21" pos:end="261:22">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="263:5" pos:end="265:25"><if pos:start="263:5" pos:end="265:25">if <condition pos:start="263:8" pos:end="263:24">(<expr pos:start="263:9" pos:end="263:23"><name pos:start="263:9" pos:end="263:17"><name pos:start="263:9" pos:end="263:9">c</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:17">dstBpc</name></name> <operator pos:start="263:19" pos:end="263:20">==</operator> <literal type="number" pos:start="263:22" pos:end="263:23">16</literal></expr>)</condition><block type="pseudo" pos:start="265:9" pos:end="265:25"><block_content pos:start="265:9" pos:end="265:25">

        <expr_stmt pos:start="265:9" pos:end="265:25"><expr pos:start="265:9" pos:end="265:24"><name pos:start="265:9" pos:end="265:18">dst_stride</name> <operator pos:start="265:20" pos:end="265:22">&lt;&lt;=</operator> <literal type="number" pos:start="265:24" pos:end="265:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:79"><expr pos:start="267:5" pos:end="267:78"><call pos:start="267:5" pos:end="267:78"><name pos:start="267:5" pos:end="267:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="267:21" pos:end="267:78">(<argument pos:start="267:22" pos:end="267:22"><expr pos:start="267:22" pos:end="267:22"><name pos:start="267:22" pos:end="267:22">c</name></expr></argument>, <argument pos:start="267:25" pos:end="267:43"><expr pos:start="267:25" pos:end="267:43"><name pos:start="267:25" pos:end="267:43"><name pos:start="267:25" pos:end="267:25">c</name><operator pos:start="267:26" pos:end="267:27">-&gt;</operator><name pos:start="267:28" pos:end="267:43">formatConvBuffer</name></name></expr></argument>, <argument pos:start="267:46" pos:end="267:71"><expr pos:start="267:46" pos:end="267:71"><call pos:start="267:46" pos:end="267:67"><name pos:start="267:46" pos:end="267:52">FFALIGN</name><argument_list pos:start="267:53" pos:end="267:67">(<argument pos:start="267:54" pos:end="267:62"><expr pos:start="267:54" pos:end="267:62"><name pos:start="267:54" pos:end="267:57">srcW</name><operator pos:start="267:58" pos:end="267:58">*</operator><literal type="number" pos:start="267:59" pos:end="267:60">2</literal><operator pos:start="267:60" pos:end="267:60">+</operator><literal type="number" pos:start="267:61" pos:end="267:62">78</literal></expr></argument>, <argument pos:start="267:65" pos:end="267:66"><expr pos:start="267:65" pos:end="267:66"><literal type="number" pos:start="267:65" pos:end="267:66">16</literal></expr></argument>)</argument_list></call> <operator pos:start="267:69" pos:end="267:69">*</operator> <literal type="number" pos:start="267:71" pos:end="267:71">2</literal></expr></argument>, <argument pos:start="267:74" pos:end="267:77"><expr pos:start="267:74" pos:end="267:77"><name pos:start="267:74" pos:end="267:77">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="269:5" pos:end="287:27"><if pos:start="269:5" pos:end="283:5">if <condition pos:start="269:8" pos:end="269:87">(<expr pos:start="269:9" pos:end="269:86"><name pos:start="269:9" pos:end="269:17">HAVE_MMX2</name> <operator pos:start="269:19" pos:end="269:20">&amp;&amp;</operator> <name pos:start="269:22" pos:end="269:30">cpu_flags</name> <operator pos:start="269:32" pos:end="269:32">&amp;</operator> <name pos:start="269:34" pos:end="269:49">AV_CPU_FLAG_MMX2</name> <operator pos:start="269:51" pos:end="269:52">&amp;&amp;</operator> <name pos:start="269:54" pos:end="269:62"><name pos:start="269:54" pos:end="269:54">c</name><operator pos:start="269:55" pos:end="269:56">-&gt;</operator><name pos:start="269:57" pos:end="269:62">srcBpc</name></name> <operator pos:start="269:64" pos:end="269:65">==</operator> <literal type="number" pos:start="269:67" pos:end="269:67">8</literal> <operator pos:start="269:69" pos:end="269:70">&amp;&amp;</operator> <name pos:start="269:72" pos:end="269:80"><name pos:start="269:72" pos:end="269:72">c</name><operator pos:start="269:73" pos:end="269:74">-&gt;</operator><name pos:start="269:75" pos:end="269:80">dstBpc</name></name> <operator pos:start="269:82" pos:end="269:83">&lt;=</operator> <literal type="number" pos:start="269:85" pos:end="269:86">10</literal></expr>)</condition> <block pos:start="269:89" pos:end="283:5">{<block_content pos:start="271:9" pos:end="281:119">

        <expr_stmt pos:start="271:9" pos:end="271:80"><expr pos:start="271:9" pos:end="271:79"><name pos:start="271:9" pos:end="271:24"><name pos:start="271:9" pos:end="271:9">c</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:24">canMMX2BeUsed</name></name><operator pos:start="271:25" pos:end="271:25">=</operator> <ternary pos:start="271:27" pos:end="271:79"><condition pos:start="271:27" pos:end="271:73"><expr pos:start="271:27" pos:end="271:71"><operator pos:start="271:27" pos:end="271:27">(</operator><name pos:start="271:28" pos:end="271:31">dstW</name> <operator pos:start="271:33" pos:end="271:34">&gt;=</operator><name pos:start="271:35" pos:end="271:38">srcW</name> <operator pos:start="271:40" pos:end="271:41">&amp;&amp;</operator> <operator pos:start="271:43" pos:end="271:43">(</operator><name pos:start="271:44" pos:end="271:47">dstW</name><operator pos:start="271:48" pos:end="271:48">&amp;</operator><literal type="number" pos:start="271:49" pos:end="271:50">31</literal><operator pos:start="271:51" pos:end="271:51">)</operator><operator pos:start="271:52" pos:end="271:53">==</operator><literal type="number" pos:start="271:54" pos:end="271:54">0</literal> <operator pos:start="271:56" pos:end="271:57">&amp;&amp;</operator> <operator pos:start="271:59" pos:end="271:59">(</operator><name pos:start="271:60" pos:end="271:63">srcW</name><operator pos:start="271:64" pos:end="271:64">&amp;</operator><literal type="number" pos:start="271:65" pos:end="271:66">15</literal><operator pos:start="271:67" pos:end="271:67">)</operator><operator pos:start="271:68" pos:end="271:69">==</operator><literal type="number" pos:start="271:70" pos:end="271:70">0</literal><operator pos:start="271:71" pos:end="271:71">)</operator></expr> ?</condition><then pos:start="271:75" pos:end="271:75"> <expr pos:start="271:75" pos:end="271:75"><literal type="number" pos:start="271:75" pos:end="271:75">1</literal></expr> </then><else pos:start="271:77" pos:end="271:79">: <expr pos:start="271:79" pos:end="271:79"><literal type="number" pos:start="271:79" pos:end="271:79">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="273:9" pos:end="279:9"><if pos:start="273:9" pos:end="279:9">if <condition pos:start="273:12" pos:end="273:90">(<expr pos:start="273:13" pos:end="273:89"><operator pos:start="273:13" pos:end="273:13">!</operator><name pos:start="273:14" pos:end="273:29"><name pos:start="273:14" pos:end="273:14">c</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:29">canMMX2BeUsed</name></name> <operator pos:start="273:31" pos:end="273:32">&amp;&amp;</operator> <name pos:start="273:34" pos:end="273:37">dstW</name> <operator pos:start="273:39" pos:end="273:40">&gt;=</operator><name pos:start="273:41" pos:end="273:44">srcW</name> <operator pos:start="273:46" pos:end="273:47">&amp;&amp;</operator> <operator pos:start="273:49" pos:end="273:49">(</operator><name pos:start="273:50" pos:end="273:53">srcW</name><operator pos:start="273:54" pos:end="273:54">&amp;</operator><literal type="number" pos:start="273:55" pos:end="273:56">15</literal><operator pos:start="273:57" pos:end="273:57">)</operator><operator pos:start="273:58" pos:end="273:59">==</operator><literal type="number" pos:start="273:60" pos:end="273:60">0</literal> <operator pos:start="273:62" pos:end="273:63">&amp;&amp;</operator> <operator pos:start="273:65" pos:end="273:65">(</operator><name pos:start="273:66" pos:end="273:70">flags</name><operator pos:start="273:71" pos:end="273:71">&amp;</operator><name pos:start="273:72" pos:end="273:88">SWS_FAST_BILINEAR</name><operator pos:start="273:89" pos:end="273:89">)</operator></expr>)</condition> <block pos:start="273:92" pos:end="279:9">{<block_content pos:start="275:13" pos:end="277:99">

            <if_stmt pos:start="275:13" pos:end="277:99"><if pos:start="275:13" pos:end="277:99">if <condition pos:start="275:16" pos:end="275:37">(<expr pos:start="275:17" pos:end="275:36"><name pos:start="275:17" pos:end="275:21">flags</name><operator pos:start="275:22" pos:end="275:22">&amp;</operator><name pos:start="275:23" pos:end="275:36">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:99"><block_content pos:start="277:17" pos:end="277:99">

                <expr_stmt pos:start="277:17" pos:end="277:99"><expr pos:start="277:17" pos:end="277:98"><call pos:start="277:17" pos:end="277:98"><name pos:start="277:17" pos:end="277:22">av_log</name><argument_list pos:start="277:23" pos:end="277:98">(<argument pos:start="277:24" pos:end="277:24"><expr pos:start="277:24" pos:end="277:24"><name pos:start="277:24" pos:end="277:24">c</name></expr></argument>, <argument pos:start="277:27" pos:end="277:37"><expr pos:start="277:27" pos:end="277:37"><name pos:start="277:27" pos:end="277:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="277:40" pos:end="277:97"><expr pos:start="277:40" pos:end="277:97"><literal type="string" pos:start="277:40" pos:end="277:97">"output width is not a multiple of 32 -&gt; no MMX2 scaler\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="281:9" pos:end="281:119"><if pos:start="281:9" pos:end="281:119">if <condition pos:start="281:12" pos:end="281:99">(<expr pos:start="281:13" pos:end="281:98"><name pos:start="281:13" pos:end="281:23">usesHFilter</name> <operator pos:start="281:25" pos:end="281:26">||</operator> <call pos:start="281:28" pos:end="281:47"><name pos:start="281:28" pos:end="281:33">isNBPS</name><argument_list pos:start="281:34" pos:end="281:47">(<argument pos:start="281:35" pos:end="281:46"><expr pos:start="281:35" pos:end="281:46"><name pos:start="281:35" pos:end="281:46"><name pos:start="281:35" pos:end="281:35">c</name><operator pos:start="281:36" pos:end="281:37">-&gt;</operator><name pos:start="281:38" pos:end="281:46">srcFormat</name></name></expr></argument>)</argument_list></call> <operator pos:start="281:49" pos:end="281:50">||</operator> <call pos:start="281:52" pos:end="281:72"><name pos:start="281:52" pos:end="281:58">is16BPS</name><argument_list pos:start="281:59" pos:end="281:72">(<argument pos:start="281:60" pos:end="281:71"><expr pos:start="281:60" pos:end="281:71"><name pos:start="281:60" pos:end="281:71"><name pos:start="281:60" pos:end="281:60">c</name><operator pos:start="281:61" pos:end="281:62">-&gt;</operator><name pos:start="281:63" pos:end="281:71">srcFormat</name></name></expr></argument>)</argument_list></call> <operator pos:start="281:74" pos:end="281:75">||</operator> <call pos:start="281:77" pos:end="281:98"><name pos:start="281:77" pos:end="281:84">isAnyRGB</name><argument_list pos:start="281:85" pos:end="281:98">(<argument pos:start="281:86" pos:end="281:97"><expr pos:start="281:86" pos:end="281:97"><name pos:start="281:86" pos:end="281:97"><name pos:start="281:86" pos:end="281:86">c</name><operator pos:start="281:87" pos:end="281:88">-&gt;</operator><name pos:start="281:89" pos:end="281:97">srcFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="281:101" pos:end="281:119"><block_content pos:start="281:101" pos:end="281:119"> <expr_stmt pos:start="281:101" pos:end="281:119"><expr pos:start="281:101" pos:end="281:118"><name pos:start="281:101" pos:end="281:116"><name pos:start="281:101" pos:end="281:101">c</name><operator pos:start="281:102" pos:end="281:103">-&gt;</operator><name pos:start="281:104" pos:end="281:116">canMMX2BeUsed</name></name><operator pos:start="281:117" pos:end="281:117">=</operator><literal type="number" pos:start="281:118" pos:end="281:118">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if>

    <else pos:start="285:5" pos:end="287:27">else<block type="pseudo" pos:start="287:9" pos:end="287:27"><block_content pos:start="287:9" pos:end="287:27">

        <expr_stmt pos:start="287:9" pos:end="287:27"><expr pos:start="287:9" pos:end="287:26"><name pos:start="287:9" pos:end="287:24"><name pos:start="287:9" pos:end="287:9">c</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:24">canMMX2BeUsed</name></name><operator pos:start="287:25" pos:end="287:25">=</operator><literal type="number" pos:start="287:26" pos:end="287:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:64"><expr pos:start="291:5" pos:end="291:63"><name pos:start="291:5" pos:end="291:14"><name pos:start="291:5" pos:end="291:5">c</name><operator pos:start="291:6" pos:end="291:7">-&gt;</operator><name pos:start="291:8" pos:end="291:14">chrXInc</name></name><operator pos:start="291:15" pos:end="291:15">=</operator> <operator pos:start="291:17" pos:end="291:17">(</operator><operator pos:start="291:18" pos:end="291:18">(</operator><name pos:start="291:19" pos:end="291:28"><name pos:start="291:19" pos:end="291:19">c</name><operator pos:start="291:20" pos:end="291:21">-&gt;</operator><name pos:start="291:22" pos:end="291:28">chrSrcW</name></name><operator pos:start="291:29" pos:end="291:30">&lt;&lt;</operator><literal type="number" pos:start="291:31" pos:end="291:32">16</literal><operator pos:start="291:33" pos:end="291:33">)</operator> <operator pos:start="291:35" pos:end="291:35">+</operator> <operator pos:start="291:37" pos:end="291:37">(</operator><name pos:start="291:38" pos:end="291:47"><name pos:start="291:38" pos:end="291:38">c</name><operator pos:start="291:39" pos:end="291:40">-&gt;</operator><name pos:start="291:41" pos:end="291:47">chrDstW</name></name><operator pos:start="291:48" pos:end="291:49">&gt;&gt;</operator><literal type="number" pos:start="291:50" pos:end="291:50">1</literal><operator pos:start="291:51" pos:end="291:51">)</operator><operator pos:start="291:52" pos:end="291:52">)</operator><operator pos:start="291:53" pos:end="291:53">/</operator><name pos:start="291:54" pos:end="291:63"><name pos:start="291:54" pos:end="291:54">c</name><operator pos:start="291:55" pos:end="291:56">-&gt;</operator><name pos:start="291:57" pos:end="291:63">chrDstW</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:64"><expr pos:start="293:5" pos:end="293:63"><name pos:start="293:5" pos:end="293:14"><name pos:start="293:5" pos:end="293:5">c</name><operator pos:start="293:6" pos:end="293:7">-&gt;</operator><name pos:start="293:8" pos:end="293:14">chrYInc</name></name><operator pos:start="293:15" pos:end="293:15">=</operator> <operator pos:start="293:17" pos:end="293:17">(</operator><operator pos:start="293:18" pos:end="293:18">(</operator><name pos:start="293:19" pos:end="293:28"><name pos:start="293:19" pos:end="293:19">c</name><operator pos:start="293:20" pos:end="293:21">-&gt;</operator><name pos:start="293:22" pos:end="293:28">chrSrcH</name></name><operator pos:start="293:29" pos:end="293:30">&lt;&lt;</operator><literal type="number" pos:start="293:31" pos:end="293:32">16</literal><operator pos:start="293:33" pos:end="293:33">)</operator> <operator pos:start="293:35" pos:end="293:35">+</operator> <operator pos:start="293:37" pos:end="293:37">(</operator><name pos:start="293:38" pos:end="293:47"><name pos:start="293:38" pos:end="293:38">c</name><operator pos:start="293:39" pos:end="293:40">-&gt;</operator><name pos:start="293:41" pos:end="293:47">chrDstH</name></name><operator pos:start="293:48" pos:end="293:49">&gt;&gt;</operator><literal type="number" pos:start="293:50" pos:end="293:50">1</literal><operator pos:start="293:51" pos:end="293:51">)</operator><operator pos:start="293:52" pos:end="293:52">)</operator><operator pos:start="293:53" pos:end="293:53">/</operator><name pos:start="293:54" pos:end="293:63"><name pos:start="293:54" pos:end="293:54">c</name><operator pos:start="293:55" pos:end="293:56">-&gt;</operator><name pos:start="293:57" pos:end="293:63">chrDstH</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="297:5" pos:end="297:96">// match pixel 0 of the src to pixel 0 of dst and match pixel n-2 of src to pixel n-2 of dst</comment>

    <comment type="line" pos:start="299:5" pos:end="299:71">// but only for the FAST_BILINEAR mode otherwise do correct scaling</comment>

    <comment type="line" pos:start="301:5" pos:end="301:51">// n-2 is the last chrominance sample available</comment>

    <comment type="line" pos:start="303:5" pos:end="303:93">// this is not perfect, but no one should notice the difference, the more correct variant</comment>

    <comment type="line" pos:start="305:5" pos:end="305:87">// would be like the vertical one, but that would require some special code for the</comment>

    <comment type="line" pos:start="307:5" pos:end="307:27">// first and last pixel</comment>

    <if_stmt pos:start="309:5" pos:end="329:5"><if pos:start="309:5" pos:end="329:5">if <condition pos:start="309:8" pos:end="309:32">(<expr pos:start="309:9" pos:end="309:31"><name pos:start="309:9" pos:end="309:13">flags</name><operator pos:start="309:14" pos:end="309:14">&amp;</operator><name pos:start="309:15" pos:end="309:31">SWS_FAST_BILINEAR</name></expr>)</condition> <block pos:start="309:34" pos:end="329:5">{<block_content pos:start="311:9" pos:end="327:9">

        <if_stmt pos:start="311:9" pos:end="327:9"><if pos:start="311:9" pos:end="317:9">if <condition pos:start="311:12" pos:end="311:29">(<expr pos:start="311:13" pos:end="311:28"><name pos:start="311:13" pos:end="311:28"><name pos:start="311:13" pos:end="311:13">c</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:28">canMMX2BeUsed</name></name></expr>)</condition> <block pos:start="311:31" pos:end="317:9">{<block_content pos:start="313:13" pos:end="315:28">

            <expr_stmt pos:start="313:13" pos:end="313:28"><expr pos:start="313:13" pos:end="313:27"><name pos:start="313:13" pos:end="313:22"><name pos:start="313:13" pos:end="313:13">c</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:22">lumXInc</name></name><operator pos:start="313:23" pos:end="313:24">+=</operator> <literal type="number" pos:start="313:26" pos:end="313:27">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:28"><expr pos:start="315:13" pos:end="315:27"><name pos:start="315:13" pos:end="315:22"><name pos:start="315:13" pos:end="315:13">c</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:22">chrXInc</name></name><operator pos:start="315:23" pos:end="315:24">+=</operator> <literal type="number" pos:start="315:26" pos:end="315:27">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if>

        <comment type="line" pos:start="319:9" pos:end="319:61">//we don't use the x86 asm scaler if MMX is available</comment>

        <if type="elseif" pos:start="321:9" pos:end="327:9">else if <condition pos:start="321:17" pos:end="321:76">(<expr pos:start="321:18" pos:end="321:75"><name pos:start="321:18" pos:end="321:25">HAVE_MMX</name> <operator pos:start="321:27" pos:end="321:28">&amp;&amp;</operator> <name pos:start="321:30" pos:end="321:38">cpu_flags</name> <operator pos:start="321:40" pos:end="321:40">&amp;</operator> <name pos:start="321:42" pos:end="321:56">AV_CPU_FLAG_MMX</name> <operator pos:start="321:58" pos:end="321:59">&amp;&amp;</operator> <name pos:start="321:61" pos:end="321:69"><name pos:start="321:61" pos:end="321:61">c</name><operator pos:start="321:62" pos:end="321:63">-&gt;</operator><name pos:start="321:64" pos:end="321:69">dstBpc</name></name> <operator pos:start="321:71" pos:end="321:72">&lt;=</operator> <literal type="number" pos:start="321:74" pos:end="321:75">10</literal></expr>)</condition> <block pos:start="321:78" pos:end="327:9">{<block_content pos:start="323:13" pos:end="325:66">

            <expr_stmt pos:start="323:13" pos:end="323:54"><expr pos:start="323:13" pos:end="323:53"><name pos:start="323:13" pos:end="323:22"><name pos:start="323:13" pos:end="323:13">c</name><operator pos:start="323:14" pos:end="323:15">-&gt;</operator><name pos:start="323:16" pos:end="323:22">lumXInc</name></name> <operator pos:start="323:24" pos:end="323:24">=</operator> <operator pos:start="323:26" pos:end="323:26">(</operator><operator pos:start="323:27" pos:end="323:27">(</operator><name pos:start="323:28" pos:end="323:31">srcW</name><operator pos:start="323:32" pos:end="323:32">-</operator><literal type="number" pos:start="323:33" pos:end="323:33">2</literal><operator pos:start="323:34" pos:end="323:34">)</operator><operator pos:start="323:35" pos:end="323:36">&lt;&lt;</operator><literal type="number" pos:start="323:37" pos:end="323:38">16</literal><operator pos:start="323:39" pos:end="323:39">)</operator><operator pos:start="323:40" pos:end="323:40">/</operator><operator pos:start="323:41" pos:end="323:41">(</operator><name pos:start="323:42" pos:end="323:45">dstW</name><operator pos:start="323:46" pos:end="323:46">-</operator><literal type="number" pos:start="323:47" pos:end="323:47">2</literal><operator pos:start="323:48" pos:end="323:48">)</operator> <operator pos:start="323:50" pos:end="323:50">-</operator> <literal type="number" pos:start="323:52" pos:end="323:53">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:66"><expr pos:start="325:13" pos:end="325:65"><name pos:start="325:13" pos:end="325:22"><name pos:start="325:13" pos:end="325:13">c</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:22">chrXInc</name></name> <operator pos:start="325:24" pos:end="325:24">=</operator> <operator pos:start="325:26" pos:end="325:26">(</operator><operator pos:start="325:27" pos:end="325:27">(</operator><name pos:start="325:28" pos:end="325:37"><name pos:start="325:28" pos:end="325:28">c</name><operator pos:start="325:29" pos:end="325:30">-&gt;</operator><name pos:start="325:31" pos:end="325:37">chrSrcW</name></name><operator pos:start="325:38" pos:end="325:38">-</operator><literal type="number" pos:start="325:39" pos:end="325:39">2</literal><operator pos:start="325:40" pos:end="325:40">)</operator><operator pos:start="325:41" pos:end="325:42">&lt;&lt;</operator><literal type="number" pos:start="325:43" pos:end="325:44">16</literal><operator pos:start="325:45" pos:end="325:45">)</operator><operator pos:start="325:46" pos:end="325:46">/</operator><operator pos:start="325:47" pos:end="325:47">(</operator><name pos:start="325:48" pos:end="325:57"><name pos:start="325:48" pos:end="325:48">c</name><operator pos:start="325:49" pos:end="325:50">-&gt;</operator><name pos:start="325:51" pos:end="325:57">chrDstW</name></name><operator pos:start="325:58" pos:end="325:58">-</operator><literal type="number" pos:start="325:59" pos:end="325:59">2</literal><operator pos:start="325:60" pos:end="325:60">)</operator> <operator pos:start="325:62" pos:end="325:62">-</operator> <literal type="number" pos:start="325:64" pos:end="325:65">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="333:5" pos:end="333:60">/* precalculate horizontal scaler filter coefficients */</comment>

    <block pos:start="335:5" pos:end="451:5">{<block_content pos:start="341:9" pos:end="449:9">

<cpp:if pos:start="337:1" pos:end="337:13">#<cpp:directive pos:start="337:2" pos:end="337:3">if</cpp:directive> <expr pos:start="337:5" pos:end="337:13"><name pos:start="337:5" pos:end="337:13">HAVE_MMX2</name></expr></cpp:if>

<comment type="line" pos:start="339:1" pos:end="339:22">// can't downscale !!!</comment>

        <if_stmt pos:start="341:9" pos:end="449:9"><if pos:start="341:9" pos:end="413:9">if <condition pos:start="341:12" pos:end="341:60">(<expr pos:start="341:13" pos:end="341:59"><name pos:start="341:13" pos:end="341:28"><name pos:start="341:13" pos:end="341:13">c</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:28">canMMX2BeUsed</name></name> <operator pos:start="341:30" pos:end="341:31">&amp;&amp;</operator> <operator pos:start="341:33" pos:end="341:33">(</operator><name pos:start="341:34" pos:end="341:38">flags</name> <operator pos:start="341:40" pos:end="341:40">&amp;</operator> <name pos:start="341:42" pos:end="341:58">SWS_FAST_BILINEAR</name><operator pos:start="341:59" pos:end="341:59">)</operator></expr>)</condition> <block pos:start="341:62" pos:end="413:9">{<block_content pos:start="343:13" pos:end="412:0">

            <expr_stmt pos:start="343:13" pos:end="343:100"><expr pos:start="343:13" pos:end="343:99"><name pos:start="343:13" pos:end="343:36"><name pos:start="343:13" pos:end="343:13">c</name><operator pos:start="343:14" pos:end="343:15">-&gt;</operator><name pos:start="343:16" pos:end="343:36">lumMmx2FilterCodeSize</name></name> <operator pos:start="343:38" pos:end="343:38">=</operator> <call pos:start="343:40" pos:end="343:99"><name pos:start="343:40" pos:end="343:54">initMMX2HScaler</name><argument_list pos:start="343:55" pos:end="343:99">(      <argument pos:start="343:62" pos:end="343:65"><expr pos:start="343:62" pos:end="343:65"><name pos:start="343:62" pos:end="343:65">dstW</name></expr></argument>, <argument pos:start="343:68" pos:end="343:77"><expr pos:start="343:68" pos:end="343:77"><name pos:start="343:68" pos:end="343:77"><name pos:start="343:68" pos:end="343:68">c</name><operator pos:start="343:69" pos:end="343:70">-&gt;</operator><name pos:start="343:71" pos:end="343:77">lumXInc</name></name></expr></argument>, <argument pos:start="343:80" pos:end="343:83"><expr pos:start="343:80" pos:end="343:83"><name pos:start="343:80" pos:end="343:83">NULL</name></expr></argument>, <argument pos:start="343:86" pos:end="343:89"><expr pos:start="343:86" pos:end="343:89"><name pos:start="343:86" pos:end="343:89">NULL</name></expr></argument>, <argument pos:start="343:92" pos:end="343:95"><expr pos:start="343:92" pos:end="343:95"><name pos:start="343:92" pos:end="343:95">NULL</name></expr></argument>, <argument pos:start="343:98" pos:end="343:98"><expr pos:start="343:98" pos:end="343:98"><literal type="number" pos:start="343:98" pos:end="343:98">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="350:0"><expr pos:start="345:13" pos:end="345:99"><name pos:start="345:13" pos:end="345:36"><name pos:start="345:13" pos:end="345:13">c</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:36">chrMmx2FilterCodeSize</name></name> <operator pos:start="345:38" pos:end="345:38">=</operator> <call pos:start="345:40" pos:end="345:99"><name pos:start="345:40" pos:end="345:54">initMMX2HScaler</name><argument_list pos:start="345:55" pos:end="345:99">(<argument pos:start="345:56" pos:end="345:65"><expr pos:start="345:56" pos:end="345:65"><name pos:start="345:56" pos:end="345:65"><name pos:start="345:56" pos:end="345:56">c</name><operator pos:start="345:57" pos:end="345:58">-&gt;</operator><name pos:start="345:59" pos:end="345:65">chrDstW</name></name></expr></argument>, <argument pos:start="345:68" pos:end="345:77"><expr pos:start="345:68" pos:end="345:77"><name pos:start="345:68" pos:end="345:77"><name pos:start="345:68" pos:end="345:68">c</name><operator pos:start="345:69" pos:end="345:70">-&gt;</operator><name pos:start="345:71" pos:end="345:77">chrXInc</name></name></expr></argument>, <argument pos:start="345:80" pos:end="345:83"><expr pos:start="345:80" pos:end="345:83"><name pos:start="345:80" pos:end="345:83">NULL</name></expr></argument>, <argument pos:start="345:86" pos:end="345:89"><expr pos:start="345:86" pos:end="345:89"><name pos:start="345:86" pos:end="345:89">NULL</name></expr></argument>, <argument pos:start="345:92" pos:end="345:95"><expr pos:start="345:92" pos:end="345:95"><name pos:start="345:92" pos:end="345:95">NULL</name></expr></argument>, <argument pos:start="345:98" pos:end="345:98"><expr pos:start="345:98" pos:end="345:98"><literal type="number" pos:start="345:98" pos:end="345:98">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="349:1" pos:end="349:20">#<cpp:directive pos:start="349:2" pos:end="349:6">ifdef</cpp:directive> <name pos:start="349:8" pos:end="349:20">MAP_ANONYMOUS</name></cpp:ifdef>

            <expr_stmt pos:start="351:13" pos:end="351:132"><expr pos:start="351:13" pos:end="351:131"><name pos:start="351:13" pos:end="351:32"><name pos:start="351:13" pos:end="351:13">c</name><operator pos:start="351:14" pos:end="351:15">-&gt;</operator><name pos:start="351:16" pos:end="351:32">lumMmx2FilterCode</name></name> <operator pos:start="351:34" pos:end="351:34">=</operator> <call pos:start="351:36" pos:end="351:131"><name pos:start="351:36" pos:end="351:39">mmap</name><argument_list pos:start="351:40" pos:end="351:131">(<argument pos:start="351:41" pos:end="351:44"><expr pos:start="351:41" pos:end="351:44"><name pos:start="351:41" pos:end="351:44">NULL</name></expr></argument>, <argument pos:start="351:47" pos:end="351:70"><expr pos:start="351:47" pos:end="351:70"><name pos:start="351:47" pos:end="351:70"><name pos:start="351:47" pos:end="351:47">c</name><operator pos:start="351:48" pos:end="351:49">-&gt;</operator><name pos:start="351:50" pos:end="351:70">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="351:73" pos:end="351:94"><expr pos:start="351:73" pos:end="351:94"><name pos:start="351:73" pos:end="351:81">PROT_READ</name> <operator pos:start="351:83" pos:end="351:83">|</operator> <name pos:start="351:85" pos:end="351:94">PROT_WRITE</name></expr></argument>, <argument pos:start="351:97" pos:end="351:123"><expr pos:start="351:97" pos:end="351:123"><name pos:start="351:97" pos:end="351:107">MAP_PRIVATE</name> <operator pos:start="351:109" pos:end="351:109">|</operator> <name pos:start="351:111" pos:end="351:123">MAP_ANONYMOUS</name></expr></argument>, <argument pos:start="351:126" pos:end="351:127"><expr pos:start="351:126" pos:end="351:127"><operator pos:start="351:126" pos:end="351:126">-</operator><literal type="number" pos:start="351:127" pos:end="351:127">1</literal></expr></argument>, <argument pos:start="351:130" pos:end="351:130"><expr pos:start="351:130" pos:end="351:130"><literal type="number" pos:start="351:130" pos:end="351:130">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="356:0"><expr pos:start="353:13" pos:end="353:131"><name pos:start="353:13" pos:end="353:32"><name pos:start="353:13" pos:end="353:13">c</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:32">chrMmx2FilterCode</name></name> <operator pos:start="353:34" pos:end="353:34">=</operator> <call pos:start="353:36" pos:end="353:131"><name pos:start="353:36" pos:end="353:39">mmap</name><argument_list pos:start="353:40" pos:end="353:131">(<argument pos:start="353:41" pos:end="353:44"><expr pos:start="353:41" pos:end="353:44"><name pos:start="353:41" pos:end="353:44">NULL</name></expr></argument>, <argument pos:start="353:47" pos:end="353:70"><expr pos:start="353:47" pos:end="353:70"><name pos:start="353:47" pos:end="353:70"><name pos:start="353:47" pos:end="353:47">c</name><operator pos:start="353:48" pos:end="353:49">-&gt;</operator><name pos:start="353:50" pos:end="353:70">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="353:73" pos:end="353:94"><expr pos:start="353:73" pos:end="353:94"><name pos:start="353:73" pos:end="353:81">PROT_READ</name> <operator pos:start="353:83" pos:end="353:83">|</operator> <name pos:start="353:85" pos:end="353:94">PROT_WRITE</name></expr></argument>, <argument pos:start="353:97" pos:end="353:123"><expr pos:start="353:97" pos:end="353:123"><name pos:start="353:97" pos:end="353:107">MAP_PRIVATE</name> <operator pos:start="353:109" pos:end="353:109">|</operator> <name pos:start="353:111" pos:end="353:123">MAP_ANONYMOUS</name></expr></argument>, <argument pos:start="353:126" pos:end="353:127"><expr pos:start="353:126" pos:end="353:127"><operator pos:start="353:126" pos:end="353:126">-</operator><literal type="number" pos:start="353:127" pos:end="353:127">1</literal></expr></argument>, <argument pos:start="353:130" pos:end="353:130"><expr pos:start="353:130" pos:end="353:130"><literal type="number" pos:start="353:130" pos:end="353:130">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="355:1" pos:end="355:23">#<cpp:directive pos:start="355:2" pos:end="355:5">elif</cpp:directive> <expr pos:start="355:7" pos:end="355:23"><name pos:start="355:7" pos:end="355:23">HAVE_VIRTUALALLOC</name></expr></cpp:elif>

            <expr_stmt pos:start="357:13" pos:end="357:116"><expr pos:start="357:13" pos:end="357:115"><name pos:start="357:13" pos:end="357:32"><name pos:start="357:13" pos:end="357:13">c</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:32">lumMmx2FilterCode</name></name> <operator pos:start="357:34" pos:end="357:34">=</operator> <call pos:start="357:36" pos:end="357:115"><name pos:start="357:36" pos:end="357:47">VirtualAlloc</name><argument_list pos:start="357:48" pos:end="357:115">(<argument pos:start="357:49" pos:end="357:52"><expr pos:start="357:49" pos:end="357:52"><name pos:start="357:49" pos:end="357:52">NULL</name></expr></argument>, <argument pos:start="357:55" pos:end="357:78"><expr pos:start="357:55" pos:end="357:78"><name pos:start="357:55" pos:end="357:78"><name pos:start="357:55" pos:end="357:55">c</name><operator pos:start="357:56" pos:end="357:57">-&gt;</operator><name pos:start="357:58" pos:end="357:78">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="357:81" pos:end="357:90"><expr pos:start="357:81" pos:end="357:90"><name pos:start="357:81" pos:end="357:90">MEM_COMMIT</name></expr></argument>, <argument pos:start="357:93" pos:end="357:114"><expr pos:start="357:93" pos:end="357:114"><name pos:start="357:93" pos:end="357:114">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="362:0"><expr pos:start="359:13" pos:end="359:115"><name pos:start="359:13" pos:end="359:32"><name pos:start="359:13" pos:end="359:13">c</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:32">chrMmx2FilterCode</name></name> <operator pos:start="359:34" pos:end="359:34">=</operator> <call pos:start="359:36" pos:end="359:115"><name pos:start="359:36" pos:end="359:47">VirtualAlloc</name><argument_list pos:start="359:48" pos:end="359:115">(<argument pos:start="359:49" pos:end="359:52"><expr pos:start="359:49" pos:end="359:52"><name pos:start="359:49" pos:end="359:52">NULL</name></expr></argument>, <argument pos:start="359:55" pos:end="359:78"><expr pos:start="359:55" pos:end="359:78"><name pos:start="359:55" pos:end="359:78"><name pos:start="359:55" pos:end="359:55">c</name><operator pos:start="359:56" pos:end="359:57">-&gt;</operator><name pos:start="359:58" pos:end="359:78">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="359:81" pos:end="359:90"><expr pos:start="359:81" pos:end="359:90"><name pos:start="359:81" pos:end="359:90">MEM_COMMIT</name></expr></argument>, <argument pos:start="359:93" pos:end="359:114"><expr pos:start="359:93" pos:end="359:114"><name pos:start="359:93" pos:end="359:114">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="361:1" pos:end="361:5">#<cpp:directive pos:start="361:2" pos:end="361:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="363:13" pos:end="363:71"><expr pos:start="363:13" pos:end="363:70"><name pos:start="363:13" pos:end="363:32"><name pos:start="363:13" pos:end="363:13">c</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:32">lumMmx2FilterCode</name></name> <operator pos:start="363:34" pos:end="363:34">=</operator> <call pos:start="363:36" pos:end="363:70"><name pos:start="363:36" pos:end="363:44">av_malloc</name><argument_list pos:start="363:45" pos:end="363:70">(<argument pos:start="363:46" pos:end="363:69"><expr pos:start="363:46" pos:end="363:69"><name pos:start="363:46" pos:end="363:69"><name pos:start="363:46" pos:end="363:46">c</name><operator pos:start="363:47" pos:end="363:48">-&gt;</operator><name pos:start="363:49" pos:end="363:69">lumMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="372:0"><expr pos:start="365:13" pos:end="365:70"><name pos:start="365:13" pos:end="365:32"><name pos:start="365:13" pos:end="365:13">c</name><operator pos:start="365:14" pos:end="365:15">-&gt;</operator><name pos:start="365:16" pos:end="365:32">chrMmx2FilterCode</name></name> <operator pos:start="365:34" pos:end="365:34">=</operator> <call pos:start="365:36" pos:end="365:70"><name pos:start="365:36" pos:end="365:44">av_malloc</name><argument_list pos:start="365:45" pos:end="365:70">(<argument pos:start="365:46" pos:end="365:69"><expr pos:start="365:46" pos:end="365:69"><name pos:start="365:46" pos:end="365:69"><name pos:start="365:46" pos:end="365:46">c</name><operator pos:start="365:47" pos:end="365:48">-&gt;</operator><name pos:start="365:49" pos:end="365:69">chrMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="367:1" pos:end="367:6">#<cpp:directive pos:start="367:2" pos:end="367:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="371:1" pos:end="371:20">#<cpp:directive pos:start="371:2" pos:end="371:6">ifdef</cpp:directive> <name pos:start="371:8" pos:end="371:20">MAP_ANONYMOUS</name></cpp:ifdef>

            <if_stmt pos:start="373:13" pos:end="387:13"><if pos:start="373:13" pos:end="387:13">if <condition pos:start="373:16" pos:end="376:0">(<expr pos:start="373:17" pos:end="373:88"><name pos:start="373:17" pos:end="373:36"><name pos:start="373:17" pos:end="373:17">c</name><operator pos:start="373:18" pos:end="373:19">-&gt;</operator><name pos:start="373:20" pos:end="373:36">lumMmx2FilterCode</name></name> <operator pos:start="373:38" pos:end="373:39">==</operator> <name pos:start="373:41" pos:end="373:50">MAP_FAILED</name> <operator pos:start="373:52" pos:end="373:53">||</operator> <name pos:start="373:55" pos:end="373:74"><name pos:start="373:55" pos:end="373:55">c</name><operator pos:start="373:56" pos:end="373:57">-&gt;</operator><name pos:start="373:58" pos:end="373:74">chrMmx2FilterCode</name></name> <operator pos:start="373:76" pos:end="373:77">==</operator> <name pos:start="373:79" pos:end="373:88">MAP_FAILED</name></expr>)</condition><block type="pseudo" pos:start="377:13" pos:end="387:13"><block_content pos:start="377:13" pos:end="387:13">

<cpp:else pos:start="375:1" pos:end="375:5">#<cpp:directive pos:start="375:2" pos:end="375:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="377:13" pos:end="387:13"><if pos:start="377:13" pos:end="387:13">if <condition pos:start="377:16" pos:end="380:0">(<expr pos:start="377:17" pos:end="377:62"><operator pos:start="377:17" pos:end="377:17">!</operator><name pos:start="377:18" pos:end="377:37"><name pos:start="377:18" pos:end="377:18">c</name><operator pos:start="377:19" pos:end="377:20">-&gt;</operator><name pos:start="377:21" pos:end="377:37">lumMmx2FilterCode</name></name> <operator pos:start="377:39" pos:end="377:40">||</operator> <operator pos:start="377:42" pos:end="377:42">!</operator><name pos:start="377:43" pos:end="377:62"><name pos:start="377:43" pos:end="377:43">c</name><operator pos:start="377:44" pos:end="377:45">-&gt;</operator><name pos:start="377:46" pos:end="377:62">chrMmx2FilterCode</name></name></expr>)</condition>

<cpp:endif pos:start="379:1" pos:end="379:6">#<cpp:directive pos:start="379:2" pos:end="379:6">endif</cpp:directive></cpp:endif>

            <block pos:start="381:13" pos:end="387:13">{<block_content pos:start="383:17" pos:end="385:39">

                <expr_stmt pos:start="383:17" pos:end="383:79"><expr pos:start="383:17" pos:end="383:78"><call pos:start="383:17" pos:end="383:78"><name pos:start="383:17" pos:end="383:22">av_log</name><argument_list pos:start="383:23" pos:end="383:78">(<argument pos:start="383:24" pos:end="383:24"><expr pos:start="383:24" pos:end="383:24"><name pos:start="383:24" pos:end="383:24">c</name></expr></argument>, <argument pos:start="383:27" pos:end="383:38"><expr pos:start="383:27" pos:end="383:38"><name pos:start="383:27" pos:end="383:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="383:41" pos:end="383:77"><expr pos:start="383:41" pos:end="383:77"><literal type="string" pos:start="383:41" pos:end="383:77">"Failed to allocate MMX2FilterCode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="385:17" pos:end="385:39">return <expr pos:start="385:24" pos:end="385:38"><call pos:start="385:24" pos:end="385:38"><name pos:start="385:24" pos:end="385:30">AVERROR</name><argument_list pos:start="385:31" pos:end="385:38">(<argument pos:start="385:32" pos:end="385:37"><expr pos:start="385:32" pos:end="385:37"><name pos:start="385:32" pos:end="385:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="389:13" pos:end="389:93"><expr pos:start="389:13" pos:end="389:92"><call pos:start="389:13" pos:end="389:92"><name pos:start="389:13" pos:end="389:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="389:30" pos:end="389:92">(<argument pos:start="389:31" pos:end="389:31"><expr pos:start="389:31" pos:end="389:31"><name pos:start="389:31" pos:end="389:31">c</name></expr></argument>, <argument pos:start="389:34" pos:end="389:46"><expr pos:start="389:34" pos:end="389:46"><name pos:start="389:34" pos:end="389:46"><name pos:start="389:34" pos:end="389:34">c</name><operator pos:start="389:35" pos:end="389:36">-&gt;</operator><name pos:start="389:37" pos:end="389:46">hLumFilter</name></name></expr></argument>   , <argument pos:start="389:52" pos:end="389:85"><expr pos:start="389:52" pos:end="389:85"><operator pos:start="389:52" pos:end="389:52">(</operator><name pos:start="389:53" pos:end="389:56">dstW</name>        <operator pos:start="389:65" pos:end="389:65">/</operator><literal type="number" pos:start="389:66" pos:end="389:67">8</literal><operator pos:start="389:67" pos:end="389:67">+</operator><literal type="number" pos:start="389:68" pos:end="389:68">8</literal><operator pos:start="389:69" pos:end="389:69">)</operator><operator pos:start="389:70" pos:end="389:70">*</operator><sizeof pos:start="389:71" pos:end="389:85">sizeof<argument_list pos:start="389:77" pos:end="389:85">(<argument pos:start="389:78" pos:end="389:84"><expr pos:start="389:78" pos:end="389:84"><name pos:start="389:78" pos:end="389:84">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="389:88" pos:end="389:91"><expr pos:start="389:88" pos:end="389:91"><name pos:start="389:88" pos:end="389:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:93"><expr pos:start="391:13" pos:end="391:92"><call pos:start="391:13" pos:end="391:92"><name pos:start="391:13" pos:end="391:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="391:30" pos:end="391:92">(<argument pos:start="391:31" pos:end="391:31"><expr pos:start="391:31" pos:end="391:31"><name pos:start="391:31" pos:end="391:31">c</name></expr></argument>, <argument pos:start="391:34" pos:end="391:46"><expr pos:start="391:34" pos:end="391:46"><name pos:start="391:34" pos:end="391:46"><name pos:start="391:34" pos:end="391:34">c</name><operator pos:start="391:35" pos:end="391:36">-&gt;</operator><name pos:start="391:37" pos:end="391:46">hChrFilter</name></name></expr></argument>   , <argument pos:start="391:52" pos:end="391:85"><expr pos:start="391:52" pos:end="391:85"><operator pos:start="391:52" pos:end="391:52">(</operator><name pos:start="391:53" pos:end="391:62"><name pos:start="391:53" pos:end="391:53">c</name><operator pos:start="391:54" pos:end="391:55">-&gt;</operator><name pos:start="391:56" pos:end="391:62">chrDstW</name></name>  <operator pos:start="391:65" pos:end="391:65">/</operator><literal type="number" pos:start="391:66" pos:end="391:67">4</literal><operator pos:start="391:67" pos:end="391:67">+</operator><literal type="number" pos:start="391:68" pos:end="391:68">8</literal><operator pos:start="391:69" pos:end="391:69">)</operator><operator pos:start="391:70" pos:end="391:70">*</operator><sizeof pos:start="391:71" pos:end="391:85">sizeof<argument_list pos:start="391:77" pos:end="391:85">(<argument pos:start="391:78" pos:end="391:84"><expr pos:start="391:78" pos:end="391:84"><name pos:start="391:78" pos:end="391:84">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="391:88" pos:end="391:91"><expr pos:start="391:88" pos:end="391:91"><name pos:start="391:88" pos:end="391:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:93"><expr pos:start="393:13" pos:end="393:92"><call pos:start="393:13" pos:end="393:92"><name pos:start="393:13" pos:end="393:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="393:30" pos:end="393:92">(<argument pos:start="393:31" pos:end="393:31"><expr pos:start="393:31" pos:end="393:31"><name pos:start="393:31" pos:end="393:31">c</name></expr></argument>, <argument pos:start="393:34" pos:end="393:49"><expr pos:start="393:34" pos:end="393:49"><name pos:start="393:34" pos:end="393:49"><name pos:start="393:34" pos:end="393:34">c</name><operator pos:start="393:35" pos:end="393:36">-&gt;</operator><name pos:start="393:37" pos:end="393:49">hLumFilterPos</name></name></expr></argument>, <argument pos:start="393:52" pos:end="393:85"><expr pos:start="393:52" pos:end="393:85"><operator pos:start="393:52" pos:end="393:52">(</operator><name pos:start="393:53" pos:end="393:56">dstW</name>      <operator pos:start="393:63" pos:end="393:63">/</operator><literal type="number" pos:start="393:64" pos:end="393:64">2</literal><operator pos:start="393:65" pos:end="393:65">/</operator><literal type="number" pos:start="393:66" pos:end="393:67">8</literal><operator pos:start="393:67" pos:end="393:67">+</operator><literal type="number" pos:start="393:68" pos:end="393:68">8</literal><operator pos:start="393:69" pos:end="393:69">)</operator><operator pos:start="393:70" pos:end="393:70">*</operator><sizeof pos:start="393:71" pos:end="393:85">sizeof<argument_list pos:start="393:77" pos:end="393:85">(<argument pos:start="393:78" pos:end="393:84"><expr pos:start="393:78" pos:end="393:84"><name pos:start="393:78" pos:end="393:84">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="393:88" pos:end="393:91"><expr pos:start="393:88" pos:end="393:91"><name pos:start="393:88" pos:end="393:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="395:13" pos:end="395:93"><expr pos:start="395:13" pos:end="395:92"><call pos:start="395:13" pos:end="395:92"><name pos:start="395:13" pos:end="395:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="395:30" pos:end="395:92">(<argument pos:start="395:31" pos:end="395:31"><expr pos:start="395:31" pos:end="395:31"><name pos:start="395:31" pos:end="395:31">c</name></expr></argument>, <argument pos:start="395:34" pos:end="395:49"><expr pos:start="395:34" pos:end="395:49"><name pos:start="395:34" pos:end="395:49"><name pos:start="395:34" pos:end="395:34">c</name><operator pos:start="395:35" pos:end="395:36">-&gt;</operator><name pos:start="395:37" pos:end="395:49">hChrFilterPos</name></name></expr></argument>, <argument pos:start="395:52" pos:end="395:85"><expr pos:start="395:52" pos:end="395:85"><operator pos:start="395:52" pos:end="395:52">(</operator><name pos:start="395:53" pos:end="395:62"><name pos:start="395:53" pos:end="395:53">c</name><operator pos:start="395:54" pos:end="395:55">-&gt;</operator><name pos:start="395:56" pos:end="395:62">chrDstW</name></name><operator pos:start="395:63" pos:end="395:63">/</operator><literal type="number" pos:start="395:64" pos:end="395:64">2</literal><operator pos:start="395:65" pos:end="395:65">/</operator><literal type="number" pos:start="395:66" pos:end="395:67">4</literal><operator pos:start="395:67" pos:end="395:67">+</operator><literal type="number" pos:start="395:68" pos:end="395:68">8</literal><operator pos:start="395:69" pos:end="395:69">)</operator><operator pos:start="395:70" pos:end="395:70">*</operator><sizeof pos:start="395:71" pos:end="395:85">sizeof<argument_list pos:start="395:77" pos:end="395:85">(<argument pos:start="395:78" pos:end="395:84"><expr pos:start="395:78" pos:end="395:84"><name pos:start="395:78" pos:end="395:84">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="395:88" pos:end="395:91"><expr pos:start="395:88" pos:end="395:91"><name pos:start="395:88" pos:end="395:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="399:13" pos:end="399:121"><expr pos:start="399:13" pos:end="399:120"><call pos:start="399:13" pos:end="399:120"><name pos:start="399:13" pos:end="399:27">initMMX2HScaler</name><argument_list pos:start="399:28" pos:end="399:120">(      <argument pos:start="399:35" pos:end="399:38"><expr pos:start="399:35" pos:end="399:38"><name pos:start="399:35" pos:end="399:38">dstW</name></expr></argument>, <argument pos:start="399:41" pos:end="399:50"><expr pos:start="399:41" pos:end="399:50"><name pos:start="399:41" pos:end="399:50"><name pos:start="399:41" pos:end="399:41">c</name><operator pos:start="399:42" pos:end="399:43">-&gt;</operator><name pos:start="399:44" pos:end="399:50">lumXInc</name></name></expr></argument>, <argument pos:start="399:53" pos:end="399:72"><expr pos:start="399:53" pos:end="399:72"><name pos:start="399:53" pos:end="399:72"><name pos:start="399:53" pos:end="399:53">c</name><operator pos:start="399:54" pos:end="399:55">-&gt;</operator><name pos:start="399:56" pos:end="399:72">lumMmx2FilterCode</name></name></expr></argument>, <argument pos:start="399:75" pos:end="399:87"><expr pos:start="399:75" pos:end="399:87"><name pos:start="399:75" pos:end="399:87"><name pos:start="399:75" pos:end="399:75">c</name><operator pos:start="399:76" pos:end="399:77">-&gt;</operator><name pos:start="399:78" pos:end="399:87">hLumFilter</name></name></expr></argument>, <argument pos:start="399:90" pos:end="399:116"><expr pos:start="399:90" pos:end="399:116"><operator pos:start="399:90" pos:end="399:90">(</operator><name pos:start="399:91" pos:end="399:98">uint32_t</name><operator pos:start="399:99" pos:end="399:99">*</operator><operator pos:start="399:100" pos:end="399:100">)</operator><name pos:start="399:101" pos:end="399:116"><name pos:start="399:101" pos:end="399:101">c</name><operator pos:start="399:102" pos:end="399:103">-&gt;</operator><name pos:start="399:104" pos:end="399:116">hLumFilterPos</name></name></expr></argument>, <argument pos:start="399:119" pos:end="399:119"><expr pos:start="399:119" pos:end="399:119"><literal type="number" pos:start="399:119" pos:end="399:119">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="406:0"><expr pos:start="401:13" pos:end="401:120"><call pos:start="401:13" pos:end="401:120"><name pos:start="401:13" pos:end="401:27">initMMX2HScaler</name><argument_list pos:start="401:28" pos:end="401:120">(<argument pos:start="401:29" pos:end="401:38"><expr pos:start="401:29" pos:end="401:38"><name pos:start="401:29" pos:end="401:38"><name pos:start="401:29" pos:end="401:29">c</name><operator pos:start="401:30" pos:end="401:31">-&gt;</operator><name pos:start="401:32" pos:end="401:38">chrDstW</name></name></expr></argument>, <argument pos:start="401:41" pos:end="401:50"><expr pos:start="401:41" pos:end="401:50"><name pos:start="401:41" pos:end="401:50"><name pos:start="401:41" pos:end="401:41">c</name><operator pos:start="401:42" pos:end="401:43">-&gt;</operator><name pos:start="401:44" pos:end="401:50">chrXInc</name></name></expr></argument>, <argument pos:start="401:53" pos:end="401:72"><expr pos:start="401:53" pos:end="401:72"><name pos:start="401:53" pos:end="401:72"><name pos:start="401:53" pos:end="401:53">c</name><operator pos:start="401:54" pos:end="401:55">-&gt;</operator><name pos:start="401:56" pos:end="401:72">chrMmx2FilterCode</name></name></expr></argument>, <argument pos:start="401:75" pos:end="401:87"><expr pos:start="401:75" pos:end="401:87"><name pos:start="401:75" pos:end="401:87"><name pos:start="401:75" pos:end="401:75">c</name><operator pos:start="401:76" pos:end="401:77">-&gt;</operator><name pos:start="401:78" pos:end="401:87">hChrFilter</name></name></expr></argument>, <argument pos:start="401:90" pos:end="401:116"><expr pos:start="401:90" pos:end="401:116"><operator pos:start="401:90" pos:end="401:90">(</operator><name pos:start="401:91" pos:end="401:98">uint32_t</name><operator pos:start="401:99" pos:end="401:99">*</operator><operator pos:start="401:100" pos:end="401:100">)</operator><name pos:start="401:101" pos:end="401:116"><name pos:start="401:101" pos:end="401:101">c</name><operator pos:start="401:102" pos:end="401:103">-&gt;</operator><name pos:start="401:104" pos:end="401:116">hChrFilterPos</name></name></expr></argument>, <argument pos:start="401:119" pos:end="401:119"><expr pos:start="401:119" pos:end="401:119"><literal type="number" pos:start="401:119" pos:end="401:119">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="405:1" pos:end="405:20">#<cpp:directive pos:start="405:2" pos:end="405:6">ifdef</cpp:directive> <name pos:start="405:8" pos:end="405:20">MAP_ANONYMOUS</name></cpp:ifdef>

            <expr_stmt pos:start="407:13" pos:end="407:92"><expr pos:start="407:13" pos:end="407:91"><call pos:start="407:13" pos:end="407:91"><name pos:start="407:13" pos:end="407:20">mprotect</name><argument_list pos:start="407:21" pos:end="407:91">(<argument pos:start="407:22" pos:end="407:41"><expr pos:start="407:22" pos:end="407:41"><name pos:start="407:22" pos:end="407:41"><name pos:start="407:22" pos:end="407:22">c</name><operator pos:start="407:23" pos:end="407:24">-&gt;</operator><name pos:start="407:25" pos:end="407:41">lumMmx2FilterCode</name></name></expr></argument>, <argument pos:start="407:44" pos:end="407:67"><expr pos:start="407:44" pos:end="407:67"><name pos:start="407:44" pos:end="407:67"><name pos:start="407:44" pos:end="407:44">c</name><operator pos:start="407:45" pos:end="407:46">-&gt;</operator><name pos:start="407:47" pos:end="407:67">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="407:70" pos:end="407:90"><expr pos:start="407:70" pos:end="407:90"><name pos:start="407:70" pos:end="407:78">PROT_EXEC</name> <operator pos:start="407:80" pos:end="407:80">|</operator> <name pos:start="407:82" pos:end="407:90">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="409:13" pos:end="412:0"><expr pos:start="409:13" pos:end="409:91"><call pos:start="409:13" pos:end="409:91"><name pos:start="409:13" pos:end="409:20">mprotect</name><argument_list pos:start="409:21" pos:end="409:91">(<argument pos:start="409:22" pos:end="409:41"><expr pos:start="409:22" pos:end="409:41"><name pos:start="409:22" pos:end="409:41"><name pos:start="409:22" pos:end="409:22">c</name><operator pos:start="409:23" pos:end="409:24">-&gt;</operator><name pos:start="409:25" pos:end="409:41">chrMmx2FilterCode</name></name></expr></argument>, <argument pos:start="409:44" pos:end="409:67"><expr pos:start="409:44" pos:end="409:67"><name pos:start="409:44" pos:end="409:67"><name pos:start="409:44" pos:end="409:44">c</name><operator pos:start="409:45" pos:end="409:46">-&gt;</operator><name pos:start="409:47" pos:end="409:67">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="409:70" pos:end="409:90"><expr pos:start="409:70" pos:end="409:90"><name pos:start="409:70" pos:end="409:78">PROT_EXEC</name> <operator pos:start="409:80" pos:end="409:80">|</operator> <name pos:start="409:82" pos:end="409:90">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="411:1" pos:end="411:6">#<cpp:directive pos:start="411:2" pos:end="411:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="413:11" pos:end="449:9">else

<cpp:endif pos:start="415:1" pos:end="415:6">#<cpp:directive pos:start="415:2" pos:end="415:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="415:8" pos:end="415:22">/* HAVE_MMX2 */</comment>

        <block pos:start="417:9" pos:end="449:9">{<block_content pos:start="419:13" pos:end="447:26">

            <decl_stmt pos:start="419:13" pos:end="425:18"><decl pos:start="419:13" pos:end="425:17"><type pos:start="419:13" pos:end="419:21"><specifier pos:start="419:13" pos:end="419:17">const</specifier> <name pos:start="419:19" pos:end="419:21">int</name></type> <name pos:start="419:23" pos:end="419:33">filterAlign</name><init pos:start="419:34" pos:end="425:17">=

                <expr pos:start="421:17" pos:end="425:17"><ternary pos:start="421:17" pos:end="425:17"><condition pos:start="421:17" pos:end="421:63"><expr pos:start="421:17" pos:end="421:61"><operator pos:start="421:17" pos:end="421:17">(</operator><name pos:start="421:18" pos:end="421:25">HAVE_MMX</name>     <operator pos:start="421:31" pos:end="421:32">&amp;&amp;</operator> <name pos:start="421:34" pos:end="421:42">cpu_flags</name> <operator pos:start="421:44" pos:end="421:44">&amp;</operator> <name pos:start="421:46" pos:end="421:60">AV_CPU_FLAG_MMX</name><operator pos:start="421:61" pos:end="421:61">)</operator></expr> ?</condition><then pos:start="421:65" pos:end="421:65"> <expr pos:start="421:65" pos:end="421:65"><literal type="number" pos:start="421:65" pos:end="421:65">4</literal></expr> </then><else pos:start="421:67" pos:end="425:17">:

                <expr pos:start="423:17" pos:end="425:17"><ternary pos:start="423:17" pos:end="425:17"><condition pos:start="423:17" pos:end="423:67"><expr pos:start="423:17" pos:end="423:65"><operator pos:start="423:17" pos:end="423:17">(</operator><name pos:start="423:18" pos:end="423:29">HAVE_ALTIVEC</name> <operator pos:start="423:31" pos:end="423:32">&amp;&amp;</operator> <name pos:start="423:34" pos:end="423:42">cpu_flags</name> <operator pos:start="423:44" pos:end="423:44">&amp;</operator> <name pos:start="423:46" pos:end="423:64">AV_CPU_FLAG_ALTIVEC</name><operator pos:start="423:65" pos:end="423:65">)</operator></expr> ?</condition><then pos:start="423:69" pos:end="423:69"> <expr pos:start="423:69" pos:end="423:69"><literal type="number" pos:start="423:69" pos:end="423:69">8</literal></expr> </then><else pos:start="423:71" pos:end="425:17">:

                <expr pos:start="425:17" pos:end="425:17"><literal type="number" pos:start="425:17" pos:end="425:17">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="429:13" pos:end="437:26"><if pos:start="429:13" pos:end="437:26">if <condition pos:start="429:16" pos:end="435:75">(<expr pos:start="429:17" pos:end="435:74"><call pos:start="429:17" pos:end="435:70"><name pos:start="429:17" pos:end="429:26">initFilter</name><argument_list pos:start="429:27" pos:end="435:70">(<argument pos:start="429:28" pos:end="429:41"><expr pos:start="429:28" pos:end="429:41"><operator pos:start="429:28" pos:end="429:28">&amp;</operator><name pos:start="429:29" pos:end="429:41"><name pos:start="429:29" pos:end="429:29">c</name><operator pos:start="429:30" pos:end="429:31">-&gt;</operator><name pos:start="429:32" pos:end="429:41">hLumFilter</name></name></expr></argument>, <argument pos:start="429:44" pos:end="429:60"><expr pos:start="429:44" pos:end="429:60"><operator pos:start="429:44" pos:end="429:44">&amp;</operator><name pos:start="429:45" pos:end="429:60"><name pos:start="429:45" pos:end="429:45">c</name><operator pos:start="429:46" pos:end="429:47">-&gt;</operator><name pos:start="429:48" pos:end="429:60">hLumFilterPos</name></name></expr></argument>, <argument pos:start="429:63" pos:end="429:80"><expr pos:start="429:63" pos:end="429:80"><operator pos:start="429:63" pos:end="429:63">&amp;</operator><name pos:start="429:64" pos:end="429:80"><name pos:start="429:64" pos:end="429:64">c</name><operator pos:start="429:65" pos:end="429:66">-&gt;</operator><name pos:start="429:67" pos:end="429:80">hLumFilterSize</name></name></expr></argument>, <argument pos:start="429:83" pos:end="429:92"><expr pos:start="429:83" pos:end="429:92"><name pos:start="429:83" pos:end="429:92"><name pos:start="429:83" pos:end="429:83">c</name><operator pos:start="429:84" pos:end="429:85">-&gt;</operator><name pos:start="429:86" pos:end="429:92">lumXInc</name></name></expr></argument>,

                           <argument pos:start="431:28" pos:end="431:31"><expr pos:start="431:28" pos:end="431:31"><name pos:start="431:28" pos:end="431:31">srcW</name></expr></argument>      ,       <argument pos:start="431:46" pos:end="431:49"><expr pos:start="431:46" pos:end="431:49"><name pos:start="431:46" pos:end="431:49">dstW</name></expr></argument>, <argument pos:start="431:52" pos:end="431:62"><expr pos:start="431:52" pos:end="431:62"><name pos:start="431:52" pos:end="431:62">filterAlign</name></expr></argument>, <argument pos:start="431:65" pos:end="431:69"><expr pos:start="431:65" pos:end="431:69"><literal type="number" pos:start="431:65" pos:end="431:65">1</literal><operator pos:start="431:66" pos:end="431:67">&lt;&lt;</operator><literal type="number" pos:start="431:68" pos:end="431:69">14</literal></expr></argument>,

                           <argument pos:start="433:28" pos:end="433:78"><expr pos:start="433:28" pos:end="433:78"><ternary pos:start="433:28" pos:end="433:78"><condition pos:start="433:28" pos:end="433:49"><expr pos:start="433:28" pos:end="433:47"><operator pos:start="433:28" pos:end="433:28">(</operator><name pos:start="433:29" pos:end="433:33">flags</name><operator pos:start="433:34" pos:end="433:34">&amp;</operator><name pos:start="433:35" pos:end="433:46">SWS_BICUBLIN</name><operator pos:start="433:47" pos:end="433:47">)</operator></expr> ?</condition><then pos:start="433:51" pos:end="433:69"> <expr pos:start="433:51" pos:end="433:69"><operator pos:start="433:51" pos:end="433:51">(</operator><name pos:start="433:52" pos:end="433:56">flags</name><operator pos:start="433:57" pos:end="433:57">|</operator><name pos:start="433:58" pos:end="433:68">SWS_BICUBIC</name><operator pos:start="433:69" pos:end="433:69">)</operator></expr>  </then><else pos:start="433:72" pos:end="433:78">: <expr pos:start="433:74" pos:end="433:78"><name pos:start="433:74" pos:end="433:78">flags</name></expr></else></ternary></expr></argument>, <argument pos:start="433:81" pos:end="433:89"><expr pos:start="433:81" pos:end="433:89"><name pos:start="433:81" pos:end="433:89">cpu_flags</name></expr></argument>,

                           <argument pos:start="435:28" pos:end="435:42"><expr pos:start="435:28" pos:end="435:42"><name pos:start="435:28" pos:end="435:42"><name pos:start="435:28" pos:end="435:36">srcFilter</name><operator pos:start="435:37" pos:end="435:38">-&gt;</operator><name pos:start="435:39" pos:end="435:42">lumH</name></name></expr></argument>, <argument pos:start="435:45" pos:end="435:59"><expr pos:start="435:45" pos:end="435:59"><name pos:start="435:45" pos:end="435:59"><name pos:start="435:45" pos:end="435:53">dstFilter</name><operator pos:start="435:54" pos:end="435:55">-&gt;</operator><name pos:start="435:56" pos:end="435:59">lumH</name></name></expr></argument>, <argument pos:start="435:62" pos:end="435:69"><expr pos:start="435:62" pos:end="435:69"><name pos:start="435:62" pos:end="435:69"><name pos:start="435:62" pos:end="435:62">c</name><operator pos:start="435:63" pos:end="435:64">-&gt;</operator><name pos:start="435:65" pos:end="435:69">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="435:72" pos:end="435:72">&lt;</operator> <literal type="number" pos:start="435:74" pos:end="435:74">0</literal></expr>)</condition><block type="pseudo" pos:start="437:17" pos:end="437:26"><block_content pos:start="437:17" pos:end="437:26">

                <goto pos:start="437:17" pos:end="437:26">goto <name pos:start="437:22" pos:end="437:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="439:13" pos:end="447:26"><if pos:start="439:13" pos:end="447:26">if <condition pos:start="439:16" pos:end="445:75">(<expr pos:start="439:17" pos:end="445:74"><call pos:start="439:17" pos:end="445:70"><name pos:start="439:17" pos:end="439:26">initFilter</name><argument_list pos:start="439:27" pos:end="445:70">(<argument pos:start="439:28" pos:end="439:41"><expr pos:start="439:28" pos:end="439:41"><operator pos:start="439:28" pos:end="439:28">&amp;</operator><name pos:start="439:29" pos:end="439:41"><name pos:start="439:29" pos:end="439:29">c</name><operator pos:start="439:30" pos:end="439:31">-&gt;</operator><name pos:start="439:32" pos:end="439:41">hChrFilter</name></name></expr></argument>, <argument pos:start="439:44" pos:end="439:60"><expr pos:start="439:44" pos:end="439:60"><operator pos:start="439:44" pos:end="439:44">&amp;</operator><name pos:start="439:45" pos:end="439:60"><name pos:start="439:45" pos:end="439:45">c</name><operator pos:start="439:46" pos:end="439:47">-&gt;</operator><name pos:start="439:48" pos:end="439:60">hChrFilterPos</name></name></expr></argument>, <argument pos:start="439:63" pos:end="439:80"><expr pos:start="439:63" pos:end="439:80"><operator pos:start="439:63" pos:end="439:63">&amp;</operator><name pos:start="439:64" pos:end="439:80"><name pos:start="439:64" pos:end="439:64">c</name><operator pos:start="439:65" pos:end="439:66">-&gt;</operator><name pos:start="439:67" pos:end="439:80">hChrFilterSize</name></name></expr></argument>, <argument pos:start="439:83" pos:end="439:92"><expr pos:start="439:83" pos:end="439:92"><name pos:start="439:83" pos:end="439:92"><name pos:start="439:83" pos:end="439:83">c</name><operator pos:start="439:84" pos:end="439:85">-&gt;</operator><name pos:start="439:86" pos:end="439:92">chrXInc</name></name></expr></argument>,

                           <argument pos:start="441:28" pos:end="441:37"><expr pos:start="441:28" pos:end="441:37"><name pos:start="441:28" pos:end="441:37"><name pos:start="441:28" pos:end="441:28">c</name><operator pos:start="441:29" pos:end="441:30">-&gt;</operator><name pos:start="441:31" pos:end="441:37">chrSrcW</name></name></expr></argument>, <argument pos:start="441:40" pos:end="441:49"><expr pos:start="441:40" pos:end="441:49"><name pos:start="441:40" pos:end="441:49"><name pos:start="441:40" pos:end="441:40">c</name><operator pos:start="441:41" pos:end="441:42">-&gt;</operator><name pos:start="441:43" pos:end="441:49">chrDstW</name></name></expr></argument>, <argument pos:start="441:52" pos:end="441:62"><expr pos:start="441:52" pos:end="441:62"><name pos:start="441:52" pos:end="441:62">filterAlign</name></expr></argument>, <argument pos:start="441:65" pos:end="441:69"><expr pos:start="441:65" pos:end="441:69"><literal type="number" pos:start="441:65" pos:end="441:65">1</literal><operator pos:start="441:66" pos:end="441:67">&lt;&lt;</operator><literal type="number" pos:start="441:68" pos:end="441:69">14</literal></expr></argument>,

                           <argument pos:start="443:28" pos:end="443:78"><expr pos:start="443:28" pos:end="443:78"><ternary pos:start="443:28" pos:end="443:78"><condition pos:start="443:28" pos:end="443:49"><expr pos:start="443:28" pos:end="443:47"><operator pos:start="443:28" pos:end="443:28">(</operator><name pos:start="443:29" pos:end="443:33">flags</name><operator pos:start="443:34" pos:end="443:34">&amp;</operator><name pos:start="443:35" pos:end="443:46">SWS_BICUBLIN</name><operator pos:start="443:47" pos:end="443:47">)</operator></expr> ?</condition><then pos:start="443:51" pos:end="443:70"> <expr pos:start="443:51" pos:end="443:70"><operator pos:start="443:51" pos:end="443:51">(</operator><name pos:start="443:52" pos:end="443:56">flags</name><operator pos:start="443:57" pos:end="443:57">|</operator><name pos:start="443:58" pos:end="443:69">SWS_BILINEAR</name><operator pos:start="443:70" pos:end="443:70">)</operator></expr> </then><else pos:start="443:72" pos:end="443:78">: <expr pos:start="443:74" pos:end="443:78"><name pos:start="443:74" pos:end="443:78">flags</name></expr></else></ternary></expr></argument>, <argument pos:start="443:81" pos:end="443:89"><expr pos:start="443:81" pos:end="443:89"><name pos:start="443:81" pos:end="443:89">cpu_flags</name></expr></argument>,

                           <argument pos:start="445:28" pos:end="445:42"><expr pos:start="445:28" pos:end="445:42"><name pos:start="445:28" pos:end="445:42"><name pos:start="445:28" pos:end="445:36">srcFilter</name><operator pos:start="445:37" pos:end="445:38">-&gt;</operator><name pos:start="445:39" pos:end="445:42">chrH</name></name></expr></argument>, <argument pos:start="445:45" pos:end="445:59"><expr pos:start="445:45" pos:end="445:59"><name pos:start="445:45" pos:end="445:59"><name pos:start="445:45" pos:end="445:53">dstFilter</name><operator pos:start="445:54" pos:end="445:55">-&gt;</operator><name pos:start="445:56" pos:end="445:59">chrH</name></name></expr></argument>, <argument pos:start="445:62" pos:end="445:69"><expr pos:start="445:62" pos:end="445:69"><name pos:start="445:62" pos:end="445:69"><name pos:start="445:62" pos:end="445:62">c</name><operator pos:start="445:63" pos:end="445:64">-&gt;</operator><name pos:start="445:65" pos:end="445:69">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="445:72" pos:end="445:72">&lt;</operator> <literal type="number" pos:start="445:74" pos:end="445:74">0</literal></expr>)</condition><block type="pseudo" pos:start="447:17" pos:end="447:26"><block_content pos:start="447:17" pos:end="447:26">

                <goto pos:start="447:17" pos:end="447:26">goto <name pos:start="447:22" pos:end="447:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block> <comment type="line" pos:start="451:7" pos:end="451:36">// initialize horizontal stuff</comment>



    <comment type="block" pos:start="455:5" pos:end="455:58">/* precalculate vertical scaler filter coefficients */</comment>

    <block pos:start="457:5" pos:end="527:5">{<block_content pos:start="459:9" pos:end="526:0">

        <decl_stmt pos:start="459:9" pos:end="465:14"><decl pos:start="459:9" pos:end="465:13"><type pos:start="459:9" pos:end="459:17"><specifier pos:start="459:9" pos:end="459:13">const</specifier> <name pos:start="459:15" pos:end="459:17">int</name></type> <name pos:start="459:19" pos:end="459:29">filterAlign</name><init pos:start="459:30" pos:end="465:13">=

            <expr pos:start="461:13" pos:end="465:13"><ternary pos:start="461:13" pos:end="465:13"><condition pos:start="461:13" pos:end="461:59"><expr pos:start="461:13" pos:end="461:57"><operator pos:start="461:13" pos:end="461:13">(</operator><name pos:start="461:14" pos:end="461:21">HAVE_MMX</name>     <operator pos:start="461:27" pos:end="461:28">&amp;&amp;</operator> <name pos:start="461:30" pos:end="461:38">cpu_flags</name> <operator pos:start="461:40" pos:end="461:40">&amp;</operator> <name pos:start="461:42" pos:end="461:56">AV_CPU_FLAG_MMX</name><operator pos:start="461:57" pos:end="461:57">)</operator></expr> ?</condition><then pos:start="461:61" pos:end="461:61"> <expr pos:start="461:61" pos:end="461:61"><literal type="number" pos:start="461:61" pos:end="461:61">2</literal></expr> </then><else pos:start="461:63" pos:end="465:13">:

            <expr pos:start="463:13" pos:end="465:13"><ternary pos:start="463:13" pos:end="465:13"><condition pos:start="463:13" pos:end="463:63"><expr pos:start="463:13" pos:end="463:61"><operator pos:start="463:13" pos:end="463:13">(</operator><name pos:start="463:14" pos:end="463:25">HAVE_ALTIVEC</name> <operator pos:start="463:27" pos:end="463:28">&amp;&amp;</operator> <name pos:start="463:30" pos:end="463:38">cpu_flags</name> <operator pos:start="463:40" pos:end="463:40">&amp;</operator> <name pos:start="463:42" pos:end="463:60">AV_CPU_FLAG_ALTIVEC</name><operator pos:start="463:61" pos:end="463:61">)</operator></expr> ?</condition><then pos:start="463:65" pos:end="463:65"> <expr pos:start="463:65" pos:end="463:65"><literal type="number" pos:start="463:65" pos:end="463:65">8</literal></expr> </then><else pos:start="463:67" pos:end="465:13">:

            <expr pos:start="465:13" pos:end="465:13"><literal type="number" pos:start="465:13" pos:end="465:13">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="469:9" pos:end="477:22"><if pos:start="469:9" pos:end="477:22">if <condition pos:start="469:12" pos:end="475:71">(<expr pos:start="469:13" pos:end="475:70"><call pos:start="469:13" pos:end="475:66"><name pos:start="469:13" pos:end="469:22">initFilter</name><argument_list pos:start="469:23" pos:end="475:66">(<argument pos:start="469:24" pos:end="469:37"><expr pos:start="469:24" pos:end="469:37"><operator pos:start="469:24" pos:end="469:24">&amp;</operator><name pos:start="469:25" pos:end="469:37"><name pos:start="469:25" pos:end="469:25">c</name><operator pos:start="469:26" pos:end="469:27">-&gt;</operator><name pos:start="469:28" pos:end="469:37">vLumFilter</name></name></expr></argument>, <argument pos:start="469:40" pos:end="469:56"><expr pos:start="469:40" pos:end="469:56"><operator pos:start="469:40" pos:end="469:40">&amp;</operator><name pos:start="469:41" pos:end="469:56"><name pos:start="469:41" pos:end="469:41">c</name><operator pos:start="469:42" pos:end="469:43">-&gt;</operator><name pos:start="469:44" pos:end="469:56">vLumFilterPos</name></name></expr></argument>, <argument pos:start="469:59" pos:end="469:76"><expr pos:start="469:59" pos:end="469:76"><operator pos:start="469:59" pos:end="469:59">&amp;</operator><name pos:start="469:60" pos:end="469:76"><name pos:start="469:60" pos:end="469:60">c</name><operator pos:start="469:61" pos:end="469:62">-&gt;</operator><name pos:start="469:63" pos:end="469:76">vLumFilterSize</name></name></expr></argument>, <argument pos:start="469:79" pos:end="469:88"><expr pos:start="469:79" pos:end="469:88"><name pos:start="469:79" pos:end="469:88"><name pos:start="469:79" pos:end="469:79">c</name><operator pos:start="469:80" pos:end="469:81">-&gt;</operator><name pos:start="469:82" pos:end="469:88">lumYInc</name></name></expr></argument>,

                       <argument pos:start="471:24" pos:end="471:27"><expr pos:start="471:24" pos:end="471:27"><name pos:start="471:24" pos:end="471:27">srcH</name></expr></argument>      ,        <argument pos:start="471:43" pos:end="471:46"><expr pos:start="471:43" pos:end="471:46"><name pos:start="471:43" pos:end="471:46">dstH</name></expr></argument>, <argument pos:start="471:49" pos:end="471:59"><expr pos:start="471:49" pos:end="471:59"><name pos:start="471:49" pos:end="471:59">filterAlign</name></expr></argument>, <argument pos:start="471:62" pos:end="471:68"><expr pos:start="471:62" pos:end="471:68"><operator pos:start="471:62" pos:end="471:62">(</operator><literal type="number" pos:start="471:63" pos:end="471:63">1</literal><operator pos:start="471:64" pos:end="471:65">&lt;&lt;</operator><literal type="number" pos:start="471:66" pos:end="471:67">12</literal><operator pos:start="471:68" pos:end="471:68">)</operator></expr></argument>,

                       <argument pos:start="473:24" pos:end="473:74"><expr pos:start="473:24" pos:end="473:74"><ternary pos:start="473:24" pos:end="473:74"><condition pos:start="473:24" pos:end="473:45"><expr pos:start="473:24" pos:end="473:43"><operator pos:start="473:24" pos:end="473:24">(</operator><name pos:start="473:25" pos:end="473:29">flags</name><operator pos:start="473:30" pos:end="473:30">&amp;</operator><name pos:start="473:31" pos:end="473:42">SWS_BICUBLIN</name><operator pos:start="473:43" pos:end="473:43">)</operator></expr> ?</condition><then pos:start="473:47" pos:end="473:65"> <expr pos:start="473:47" pos:end="473:65"><operator pos:start="473:47" pos:end="473:47">(</operator><name pos:start="473:48" pos:end="473:52">flags</name><operator pos:start="473:53" pos:end="473:53">|</operator><name pos:start="473:54" pos:end="473:64">SWS_BICUBIC</name><operator pos:start="473:65" pos:end="473:65">)</operator></expr>  </then><else pos:start="473:68" pos:end="473:74">: <expr pos:start="473:70" pos:end="473:74"><name pos:start="473:70" pos:end="473:74">flags</name></expr></else></ternary></expr></argument>, <argument pos:start="473:77" pos:end="473:85"><expr pos:start="473:77" pos:end="473:85"><name pos:start="473:77" pos:end="473:85">cpu_flags</name></expr></argument>,

                       <argument pos:start="475:24" pos:end="475:38"><expr pos:start="475:24" pos:end="475:38"><name pos:start="475:24" pos:end="475:38"><name pos:start="475:24" pos:end="475:32">srcFilter</name><operator pos:start="475:33" pos:end="475:34">-&gt;</operator><name pos:start="475:35" pos:end="475:38">lumV</name></name></expr></argument>, <argument pos:start="475:41" pos:end="475:55"><expr pos:start="475:41" pos:end="475:55"><name pos:start="475:41" pos:end="475:55"><name pos:start="475:41" pos:end="475:49">dstFilter</name><operator pos:start="475:50" pos:end="475:51">-&gt;</operator><name pos:start="475:52" pos:end="475:55">lumV</name></name></expr></argument>, <argument pos:start="475:58" pos:end="475:65"><expr pos:start="475:58" pos:end="475:65"><name pos:start="475:58" pos:end="475:65"><name pos:start="475:58" pos:end="475:58">c</name><operator pos:start="475:59" pos:end="475:60">-&gt;</operator><name pos:start="475:61" pos:end="475:65">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="475:68" pos:end="475:68">&lt;</operator> <literal type="number" pos:start="475:70" pos:end="475:70">0</literal></expr>)</condition><block type="pseudo" pos:start="477:13" pos:end="477:22"><block_content pos:start="477:13" pos:end="477:22">

            <goto pos:start="477:13" pos:end="477:22">goto <name pos:start="477:18" pos:end="477:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="479:9" pos:end="492:0"><if pos:start="479:9" pos:end="492:0">if <condition pos:start="479:12" pos:end="485:71">(<expr pos:start="479:13" pos:end="485:70"><call pos:start="479:13" pos:end="485:66"><name pos:start="479:13" pos:end="479:22">initFilter</name><argument_list pos:start="479:23" pos:end="485:66">(<argument pos:start="479:24" pos:end="479:37"><expr pos:start="479:24" pos:end="479:37"><operator pos:start="479:24" pos:end="479:24">&amp;</operator><name pos:start="479:25" pos:end="479:37"><name pos:start="479:25" pos:end="479:25">c</name><operator pos:start="479:26" pos:end="479:27">-&gt;</operator><name pos:start="479:28" pos:end="479:37">vChrFilter</name></name></expr></argument>, <argument pos:start="479:40" pos:end="479:56"><expr pos:start="479:40" pos:end="479:56"><operator pos:start="479:40" pos:end="479:40">&amp;</operator><name pos:start="479:41" pos:end="479:56"><name pos:start="479:41" pos:end="479:41">c</name><operator pos:start="479:42" pos:end="479:43">-&gt;</operator><name pos:start="479:44" pos:end="479:56">vChrFilterPos</name></name></expr></argument>, <argument pos:start="479:59" pos:end="479:76"><expr pos:start="479:59" pos:end="479:76"><operator pos:start="479:59" pos:end="479:59">&amp;</operator><name pos:start="479:60" pos:end="479:76"><name pos:start="479:60" pos:end="479:60">c</name><operator pos:start="479:61" pos:end="479:62">-&gt;</operator><name pos:start="479:63" pos:end="479:76">vChrFilterSize</name></name></expr></argument>, <argument pos:start="479:79" pos:end="479:88"><expr pos:start="479:79" pos:end="479:88"><name pos:start="479:79" pos:end="479:88"><name pos:start="479:79" pos:end="479:79">c</name><operator pos:start="479:80" pos:end="479:81">-&gt;</operator><name pos:start="479:82" pos:end="479:88">chrYInc</name></name></expr></argument>,

                       <argument pos:start="481:24" pos:end="481:33"><expr pos:start="481:24" pos:end="481:33"><name pos:start="481:24" pos:end="481:33"><name pos:start="481:24" pos:end="481:24">c</name><operator pos:start="481:25" pos:end="481:26">-&gt;</operator><name pos:start="481:27" pos:end="481:33">chrSrcH</name></name></expr></argument>, <argument pos:start="481:36" pos:end="481:45"><expr pos:start="481:36" pos:end="481:45"><name pos:start="481:36" pos:end="481:45"><name pos:start="481:36" pos:end="481:36">c</name><operator pos:start="481:37" pos:end="481:38">-&gt;</operator><name pos:start="481:39" pos:end="481:45">chrDstH</name></name></expr></argument>, <argument pos:start="481:48" pos:end="481:58"><expr pos:start="481:48" pos:end="481:58"><name pos:start="481:48" pos:end="481:58">filterAlign</name></expr></argument>, <argument pos:start="481:61" pos:end="481:67"><expr pos:start="481:61" pos:end="481:67"><operator pos:start="481:61" pos:end="481:61">(</operator><literal type="number" pos:start="481:62" pos:end="481:62">1</literal><operator pos:start="481:63" pos:end="481:64">&lt;&lt;</operator><literal type="number" pos:start="481:65" pos:end="481:66">12</literal><operator pos:start="481:67" pos:end="481:67">)</operator></expr></argument>,

                       <argument pos:start="483:24" pos:end="483:74"><expr pos:start="483:24" pos:end="483:74"><ternary pos:start="483:24" pos:end="483:74"><condition pos:start="483:24" pos:end="483:45"><expr pos:start="483:24" pos:end="483:43"><operator pos:start="483:24" pos:end="483:24">(</operator><name pos:start="483:25" pos:end="483:29">flags</name><operator pos:start="483:30" pos:end="483:30">&amp;</operator><name pos:start="483:31" pos:end="483:42">SWS_BICUBLIN</name><operator pos:start="483:43" pos:end="483:43">)</operator></expr> ?</condition><then pos:start="483:47" pos:end="483:66"> <expr pos:start="483:47" pos:end="483:66"><operator pos:start="483:47" pos:end="483:47">(</operator><name pos:start="483:48" pos:end="483:52">flags</name><operator pos:start="483:53" pos:end="483:53">|</operator><name pos:start="483:54" pos:end="483:65">SWS_BILINEAR</name><operator pos:start="483:66" pos:end="483:66">)</operator></expr> </then><else pos:start="483:68" pos:end="483:74">: <expr pos:start="483:70" pos:end="483:74"><name pos:start="483:70" pos:end="483:74">flags</name></expr></else></ternary></expr></argument>, <argument pos:start="483:77" pos:end="483:85"><expr pos:start="483:77" pos:end="483:85"><name pos:start="483:77" pos:end="483:85">cpu_flags</name></expr></argument>,

                       <argument pos:start="485:24" pos:end="485:38"><expr pos:start="485:24" pos:end="485:38"><name pos:start="485:24" pos:end="485:38"><name pos:start="485:24" pos:end="485:32">srcFilter</name><operator pos:start="485:33" pos:end="485:34">-&gt;</operator><name pos:start="485:35" pos:end="485:38">chrV</name></name></expr></argument>, <argument pos:start="485:41" pos:end="485:55"><expr pos:start="485:41" pos:end="485:55"><name pos:start="485:41" pos:end="485:55"><name pos:start="485:41" pos:end="485:49">dstFilter</name><operator pos:start="485:50" pos:end="485:51">-&gt;</operator><name pos:start="485:52" pos:end="485:55">chrV</name></name></expr></argument>, <argument pos:start="485:58" pos:end="485:65"><expr pos:start="485:58" pos:end="485:65"><name pos:start="485:58" pos:end="485:65"><name pos:start="485:58" pos:end="485:58">c</name><operator pos:start="485:59" pos:end="485:60">-&gt;</operator><name pos:start="485:61" pos:end="485:65">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="485:68" pos:end="485:68">&lt;</operator> <literal type="number" pos:start="485:70" pos:end="485:70">0</literal></expr>)</condition><block type="pseudo" pos:start="487:13" pos:end="492:0"><block_content pos:start="487:13" pos:end="492:0">

            <goto pos:start="487:13" pos:end="492:0">goto <name pos:start="487:18" pos:end="487:21">fail</name>;</goto></block_content></block></if></if_stmt>



<cpp:if pos:start="491:1" pos:end="491:16">#<cpp:directive pos:start="491:2" pos:end="491:3">if</cpp:directive> <expr pos:start="491:5" pos:end="491:16"><name pos:start="491:5" pos:end="491:16">HAVE_ALTIVEC</name></expr></cpp:if>

        <expr_stmt pos:start="493:9" pos:end="493:107"><expr pos:start="493:9" pos:end="493:106"><call pos:start="493:9" pos:end="493:106"><name pos:start="493:9" pos:end="493:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="493:25" pos:end="493:106">(<argument pos:start="493:26" pos:end="493:26"><expr pos:start="493:26" pos:end="493:26"><name pos:start="493:26" pos:end="493:26">c</name></expr></argument>, <argument pos:start="493:29" pos:end="493:43"><expr pos:start="493:29" pos:end="493:43"><name pos:start="493:29" pos:end="493:43"><name pos:start="493:29" pos:end="493:29">c</name><operator pos:start="493:30" pos:end="493:31">-&gt;</operator><name pos:start="493:32" pos:end="493:43">vYCoeffsBank</name></name></expr></argument>, <argument pos:start="493:46" pos:end="493:99"><expr pos:start="493:46" pos:end="493:99">sizeof <operator pos:start="493:53" pos:end="493:53">(</operator><name pos:start="493:54" pos:end="493:59">vector</name> <name pos:start="493:61" pos:end="493:66">signed</name> <name pos:start="493:68" pos:end="493:72">short</name><operator pos:start="493:73" pos:end="493:73">)</operator><operator pos:start="493:74" pos:end="493:74">*</operator><name pos:start="493:75" pos:end="493:91"><name pos:start="493:75" pos:end="493:75">c</name><operator pos:start="493:76" pos:end="493:77">-&gt;</operator><name pos:start="493:78" pos:end="493:91">vLumFilterSize</name></name><operator pos:start="493:92" pos:end="493:92">*</operator><name pos:start="493:93" pos:end="493:99"><name pos:start="493:93" pos:end="493:93">c</name><operator pos:start="493:94" pos:end="493:95">-&gt;</operator><name pos:start="493:96" pos:end="493:99">dstH</name></name></expr></argument>, <argument pos:start="493:102" pos:end="493:105"><expr pos:start="493:102" pos:end="493:105"><name pos:start="493:102" pos:end="493:105">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="495:9" pos:end="495:110"><expr pos:start="495:9" pos:end="495:109"><call pos:start="495:9" pos:end="495:109"><name pos:start="495:9" pos:end="495:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="495:25" pos:end="495:109">(<argument pos:start="495:26" pos:end="495:26"><expr pos:start="495:26" pos:end="495:26"><name pos:start="495:26" pos:end="495:26">c</name></expr></argument>, <argument pos:start="495:29" pos:end="495:43"><expr pos:start="495:29" pos:end="495:43"><name pos:start="495:29" pos:end="495:43"><name pos:start="495:29" pos:end="495:29">c</name><operator pos:start="495:30" pos:end="495:31">-&gt;</operator><name pos:start="495:32" pos:end="495:43">vCCoeffsBank</name></name></expr></argument>, <argument pos:start="495:46" pos:end="495:102"><expr pos:start="495:46" pos:end="495:102">sizeof <operator pos:start="495:53" pos:end="495:53">(</operator><name pos:start="495:54" pos:end="495:59">vector</name> <name pos:start="495:61" pos:end="495:66">signed</name> <name pos:start="495:68" pos:end="495:72">short</name><operator pos:start="495:73" pos:end="495:73">)</operator><operator pos:start="495:74" pos:end="495:74">*</operator><name pos:start="495:75" pos:end="495:91"><name pos:start="495:75" pos:end="495:75">c</name><operator pos:start="495:76" pos:end="495:77">-&gt;</operator><name pos:start="495:78" pos:end="495:91">vChrFilterSize</name></name><operator pos:start="495:92" pos:end="495:92">*</operator><name pos:start="495:93" pos:end="495:102"><name pos:start="495:93" pos:end="495:93">c</name><operator pos:start="495:94" pos:end="495:95">-&gt;</operator><name pos:start="495:96" pos:end="495:102">chrDstH</name></name></expr></argument>, <argument pos:start="495:105" pos:end="495:108"><expr pos:start="495:105" pos:end="495:108"><name pos:start="495:105" pos:end="495:108">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="499:9" pos:end="509:9">for <control pos:start="499:13" pos:end="499:49">(<init pos:start="499:14" pos:end="499:17"><expr pos:start="499:14" pos:end="499:16"><name pos:start="499:14" pos:end="499:14">i</name><operator pos:start="499:15" pos:end="499:15">=</operator><literal type="number" pos:start="499:16" pos:end="499:16">0</literal></expr>;</init><condition pos:start="499:18" pos:end="499:45"><expr pos:start="499:18" pos:end="499:44"><name pos:start="499:18" pos:end="499:18">i</name><operator pos:start="499:19" pos:end="499:19">&lt;</operator><name pos:start="499:20" pos:end="499:36"><name pos:start="499:20" pos:end="499:20">c</name><operator pos:start="499:21" pos:end="499:22">-&gt;</operator><name pos:start="499:23" pos:end="499:36">vLumFilterSize</name></name><operator pos:start="499:37" pos:end="499:37">*</operator><name pos:start="499:38" pos:end="499:44"><name pos:start="499:38" pos:end="499:38">c</name><operator pos:start="499:39" pos:end="499:40">-&gt;</operator><name pos:start="499:41" pos:end="499:44">dstH</name></name></expr>;</condition><incr pos:start="499:46" pos:end="499:48"><expr pos:start="499:46" pos:end="499:48"><name pos:start="499:46" pos:end="499:46">i</name><operator pos:start="499:47" pos:end="499:48">++</operator></expr></incr>)</control> <block pos:start="499:51" pos:end="509:9">{<block_content pos:start="501:13" pos:end="507:40">

            <decl_stmt pos:start="501:13" pos:end="501:18"><decl pos:start="501:13" pos:end="501:17"><type pos:start="501:13" pos:end="501:15"><name pos:start="501:13" pos:end="501:15">int</name></type> <name pos:start="501:17" pos:end="501:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="503:13" pos:end="503:52"><decl pos:start="503:13" pos:end="503:51"><type pos:start="503:13" pos:end="503:19"><name pos:start="503:13" pos:end="503:17">short</name> <modifier pos:start="503:19" pos:end="503:19">*</modifier></type><name pos:start="503:20" pos:end="503:20">p</name> <init pos:start="503:22" pos:end="503:51">= <expr pos:start="503:24" pos:end="503:51"><operator pos:start="503:24" pos:end="503:24">(</operator><name pos:start="503:25" pos:end="503:29">short</name> <operator pos:start="503:31" pos:end="503:31">*</operator><operator pos:start="503:32" pos:end="503:32">)</operator><operator pos:start="503:33" pos:end="503:33">&amp;</operator><name pos:start="503:34" pos:end="503:51"><name pos:start="503:34" pos:end="503:34">c</name><operator pos:start="503:35" pos:end="503:36">-&gt;</operator><name pos:start="503:37" pos:end="503:48">vYCoeffsBank</name><index pos:start="503:49" pos:end="503:51">[<expr pos:start="503:50" pos:end="503:50"><name pos:start="503:50" pos:end="503:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="505:13" pos:end="507:40">for <control pos:start="505:17" pos:end="505:29">(<init pos:start="505:18" pos:end="505:21"><expr pos:start="505:18" pos:end="505:20"><name pos:start="505:18" pos:end="505:18">j</name><operator pos:start="505:19" pos:end="505:19">=</operator><literal type="number" pos:start="505:20" pos:end="505:20">0</literal></expr>;</init><condition pos:start="505:22" pos:end="505:25"><expr pos:start="505:22" pos:end="505:24"><name pos:start="505:22" pos:end="505:22">j</name><operator pos:start="505:23" pos:end="505:23">&lt;</operator><literal type="number" pos:start="505:24" pos:end="505:24">8</literal></expr>;</condition><incr pos:start="505:26" pos:end="505:28"><expr pos:start="505:26" pos:end="505:28"><name pos:start="505:26" pos:end="505:26">j</name><operator pos:start="505:27" pos:end="505:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="507:17" pos:end="507:40"><block_content pos:start="507:17" pos:end="507:40">

                <expr_stmt pos:start="507:17" pos:end="507:40"><expr pos:start="507:17" pos:end="507:39"><name pos:start="507:17" pos:end="507:20"><name pos:start="507:17" pos:end="507:17">p</name><index pos:start="507:18" pos:end="507:20">[<expr pos:start="507:19" pos:end="507:19"><name pos:start="507:19" pos:end="507:19">j</name></expr>]</index></name> <operator pos:start="507:22" pos:end="507:22">=</operator> <name pos:start="507:24" pos:end="507:39"><name pos:start="507:24" pos:end="507:24">c</name><operator pos:start="507:25" pos:end="507:26">-&gt;</operator><name pos:start="507:27" pos:end="507:36">vLumFilter</name><index pos:start="507:37" pos:end="507:39">[<expr pos:start="507:38" pos:end="507:38"><name pos:start="507:38" pos:end="507:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>



        <for pos:start="513:9" pos:end="526:0">for <control pos:start="513:13" pos:end="513:52">(<init pos:start="513:14" pos:end="513:17"><expr pos:start="513:14" pos:end="513:16"><name pos:start="513:14" pos:end="513:14">i</name><operator pos:start="513:15" pos:end="513:15">=</operator><literal type="number" pos:start="513:16" pos:end="513:16">0</literal></expr>;</init><condition pos:start="513:18" pos:end="513:48"><expr pos:start="513:18" pos:end="513:47"><name pos:start="513:18" pos:end="513:18">i</name><operator pos:start="513:19" pos:end="513:19">&lt;</operator><name pos:start="513:20" pos:end="513:36"><name pos:start="513:20" pos:end="513:20">c</name><operator pos:start="513:21" pos:end="513:22">-&gt;</operator><name pos:start="513:23" pos:end="513:36">vChrFilterSize</name></name><operator pos:start="513:37" pos:end="513:37">*</operator><name pos:start="513:38" pos:end="513:47"><name pos:start="513:38" pos:end="513:38">c</name><operator pos:start="513:39" pos:end="513:40">-&gt;</operator><name pos:start="513:41" pos:end="513:47">chrDstH</name></name></expr>;</condition><incr pos:start="513:49" pos:end="513:51"><expr pos:start="513:49" pos:end="513:51"><name pos:start="513:49" pos:end="513:49">i</name><operator pos:start="513:50" pos:end="513:51">++</operator></expr></incr>)</control> <block pos:start="513:54" pos:end="526:0">{<block_content pos:start="515:13" pos:end="521:40">

            <decl_stmt pos:start="515:13" pos:end="515:18"><decl pos:start="515:13" pos:end="515:17"><type pos:start="515:13" pos:end="515:15"><name pos:start="515:13" pos:end="515:15">int</name></type> <name pos:start="515:17" pos:end="515:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="517:13" pos:end="517:52"><decl pos:start="517:13" pos:end="517:51"><type pos:start="517:13" pos:end="517:19"><name pos:start="517:13" pos:end="517:17">short</name> <modifier pos:start="517:19" pos:end="517:19">*</modifier></type><name pos:start="517:20" pos:end="517:20">p</name> <init pos:start="517:22" pos:end="517:51">= <expr pos:start="517:24" pos:end="517:51"><operator pos:start="517:24" pos:end="517:24">(</operator><name pos:start="517:25" pos:end="517:29">short</name> <operator pos:start="517:31" pos:end="517:31">*</operator><operator pos:start="517:32" pos:end="517:32">)</operator><operator pos:start="517:33" pos:end="517:33">&amp;</operator><name pos:start="517:34" pos:end="517:51"><name pos:start="517:34" pos:end="517:34">c</name><operator pos:start="517:35" pos:end="517:36">-&gt;</operator><name pos:start="517:37" pos:end="517:48">vCCoeffsBank</name><index pos:start="517:49" pos:end="517:51">[<expr pos:start="517:50" pos:end="517:50"><name pos:start="517:50" pos:end="517:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="519:13" pos:end="521:40">for <control pos:start="519:17" pos:end="519:29">(<init pos:start="519:18" pos:end="519:21"><expr pos:start="519:18" pos:end="519:20"><name pos:start="519:18" pos:end="519:18">j</name><operator pos:start="519:19" pos:end="519:19">=</operator><literal type="number" pos:start="519:20" pos:end="519:20">0</literal></expr>;</init><condition pos:start="519:22" pos:end="519:25"><expr pos:start="519:22" pos:end="519:24"><name pos:start="519:22" pos:end="519:22">j</name><operator pos:start="519:23" pos:end="519:23">&lt;</operator><literal type="number" pos:start="519:24" pos:end="519:24">8</literal></expr>;</condition><incr pos:start="519:26" pos:end="519:28"><expr pos:start="519:26" pos:end="519:28"><name pos:start="519:26" pos:end="519:26">j</name><operator pos:start="519:27" pos:end="519:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="521:17" pos:end="521:40"><block_content pos:start="521:17" pos:end="521:40">

                <expr_stmt pos:start="521:17" pos:end="521:40"><expr pos:start="521:17" pos:end="521:39"><name pos:start="521:17" pos:end="521:20"><name pos:start="521:17" pos:end="521:17">p</name><index pos:start="521:18" pos:end="521:20">[<expr pos:start="521:19" pos:end="521:19"><name pos:start="521:19" pos:end="521:19">j</name></expr>]</index></name> <operator pos:start="521:22" pos:end="521:22">=</operator> <name pos:start="521:24" pos:end="521:39"><name pos:start="521:24" pos:end="521:24">c</name><operator pos:start="521:25" pos:end="521:26">-&gt;</operator><name pos:start="521:27" pos:end="521:36">vChrFilter</name><index pos:start="521:37" pos:end="521:39">[<expr pos:start="521:38" pos:end="521:38"><name pos:start="521:38" pos:end="521:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

<cpp:endif pos:start="525:1" pos:end="525:6">#<cpp:directive pos:start="525:2" pos:end="525:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block>



    <comment type="line" pos:start="531:5" pos:end="531:89">// calculate buffer sizes so that they won't run out while handling these damn slices</comment>

    <expr_stmt pos:start="533:5" pos:end="533:38"><expr pos:start="533:5" pos:end="533:37"><name pos:start="533:5" pos:end="533:18"><name pos:start="533:5" pos:end="533:5">c</name><operator pos:start="533:6" pos:end="533:7">-&gt;</operator><name pos:start="533:8" pos:end="533:18">vLumBufSize</name></name><operator pos:start="533:19" pos:end="533:19">=</operator> <name pos:start="533:21" pos:end="533:37"><name pos:start="533:21" pos:end="533:21">c</name><operator pos:start="533:22" pos:end="533:23">-&gt;</operator><name pos:start="533:24" pos:end="533:37">vLumFilterSize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="535:5" pos:end="535:38"><expr pos:start="535:5" pos:end="535:37"><name pos:start="535:5" pos:end="535:18"><name pos:start="535:5" pos:end="535:5">c</name><operator pos:start="535:6" pos:end="535:7">-&gt;</operator><name pos:start="535:8" pos:end="535:18">vChrBufSize</name></name><operator pos:start="535:19" pos:end="535:19">=</operator> <name pos:start="535:21" pos:end="535:37"><name pos:start="535:21" pos:end="535:21">c</name><operator pos:start="535:22" pos:end="535:23">-&gt;</operator><name pos:start="535:24" pos:end="535:37">vChrFilterSize</name></name></expr>;</expr_stmt>

    <for pos:start="537:5" pos:end="559:5">for <control pos:start="537:9" pos:end="537:26">(<init pos:start="537:10" pos:end="537:13"><expr pos:start="537:10" pos:end="537:12"><name pos:start="537:10" pos:end="537:10">i</name><operator pos:start="537:11" pos:end="537:11">=</operator><literal type="number" pos:start="537:12" pos:end="537:12">0</literal></expr>;</init> <condition pos:start="537:15" pos:end="537:21"><expr pos:start="537:15" pos:end="537:20"><name pos:start="537:15" pos:end="537:15">i</name><operator pos:start="537:16" pos:end="537:16">&lt;</operator><name pos:start="537:17" pos:end="537:20">dstH</name></expr>;</condition> <incr pos:start="537:23" pos:end="537:25"><expr pos:start="537:23" pos:end="537:25"><name pos:start="537:23" pos:end="537:23">i</name><operator pos:start="537:24" pos:end="537:25">++</operator></expr></incr>)</control> <block pos:start="537:28" pos:end="559:5">{<block_content pos:start="539:9" pos:end="557:86">

        <decl_stmt pos:start="539:9" pos:end="539:47"><decl pos:start="539:9" pos:end="539:46"><type pos:start="539:9" pos:end="539:11"><name pos:start="539:9" pos:end="539:11">int</name></type> <name pos:start="539:13" pos:end="539:16">chrI</name><init pos:start="539:17" pos:end="539:46">= <expr pos:start="539:19" pos:end="539:46"><operator pos:start="539:19" pos:end="539:19">(</operator><name pos:start="539:20" pos:end="539:26">int64_t</name><operator pos:start="539:27" pos:end="539:27">)</operator><name pos:start="539:28" pos:end="539:28">i</name><operator pos:start="539:29" pos:end="539:29">*</operator><name pos:start="539:30" pos:end="539:39"><name pos:start="539:30" pos:end="539:30">c</name><operator pos:start="539:31" pos:end="539:32">-&gt;</operator><name pos:start="539:33" pos:end="539:39">chrDstH</name></name> <operator pos:start="539:41" pos:end="539:41">/</operator> <name pos:start="539:43" pos:end="539:46">dstH</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="541:9" pos:end="543:100"><decl pos:start="541:9" pos:end="543:99"><type pos:start="541:9" pos:end="541:11"><name pos:start="541:9" pos:end="541:11">int</name></type> <name pos:start="541:13" pos:end="541:21">nextSlice</name><init pos:start="541:22" pos:end="543:99">= <expr pos:start="541:24" pos:end="543:99"><call pos:start="541:24" pos:end="543:99"><name pos:start="541:24" pos:end="541:28">FFMAX</name><argument_list pos:start="541:29" pos:end="543:99">(<argument pos:start="541:30" pos:end="541:75"><expr pos:start="541:30" pos:end="541:75"><name pos:start="541:30" pos:end="541:51"><name pos:start="541:30" pos:end="541:30">c</name><operator pos:start="541:31" pos:end="541:32">-&gt;</operator><name pos:start="541:33" pos:end="541:45">vLumFilterPos</name><index pos:start="541:46" pos:end="541:51">[<expr pos:start="541:47" pos:end="541:47"><name pos:start="541:47" pos:end="541:47">i</name></expr>   ]</index></name> <operator pos:start="541:53" pos:end="541:53">+</operator> <name pos:start="541:55" pos:end="541:71"><name pos:start="541:55" pos:end="541:55">c</name><operator pos:start="541:56" pos:end="541:57">-&gt;</operator><name pos:start="541:58" pos:end="541:71">vLumFilterSize</name></name> <operator pos:start="541:73" pos:end="541:73">-</operator> <literal type="number" pos:start="541:75" pos:end="541:75">1</literal></expr></argument>,

                           <argument pos:start="543:28" pos:end="543:98"><expr pos:start="543:28" pos:end="543:98"><operator pos:start="543:28" pos:end="543:28">(</operator><operator pos:start="543:29" pos:end="543:29">(</operator><name pos:start="543:30" pos:end="543:51"><name pos:start="543:30" pos:end="543:30">c</name><operator pos:start="543:31" pos:end="543:32">-&gt;</operator><name pos:start="543:33" pos:end="543:45">vChrFilterPos</name><index pos:start="543:46" pos:end="543:51">[<expr pos:start="543:47" pos:end="543:50"><name pos:start="543:47" pos:end="543:50">chrI</name></expr>]</index></name> <operator pos:start="543:53" pos:end="543:53">+</operator> <name pos:start="543:55" pos:end="543:71"><name pos:start="543:55" pos:end="543:55">c</name><operator pos:start="543:56" pos:end="543:57">-&gt;</operator><name pos:start="543:58" pos:end="543:71">vChrFilterSize</name></name> <operator pos:start="543:73" pos:end="543:73">-</operator> <literal type="number" pos:start="543:75" pos:end="543:75">1</literal><operator pos:start="543:76" pos:end="543:76">)</operator><operator pos:start="543:77" pos:end="543:78">&lt;&lt;</operator><name pos:start="543:79" pos:end="543:97"><name pos:start="543:79" pos:end="543:79">c</name><operator pos:start="543:80" pos:end="543:81">-&gt;</operator><name pos:start="543:82" pos:end="543:97">chrSrcVSubSample</name></name><operator pos:start="543:98" pos:end="543:98">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="547:9" pos:end="547:41"><expr pos:start="547:9" pos:end="547:40"><name pos:start="547:9" pos:end="547:17">nextSlice</name><operator pos:start="547:18" pos:end="547:20">&gt;&gt;=</operator> <name pos:start="547:22" pos:end="547:40"><name pos:start="547:22" pos:end="547:22">c</name><operator pos:start="547:23" pos:end="547:24">-&gt;</operator><name pos:start="547:25" pos:end="547:40">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="549:9" pos:end="549:41"><expr pos:start="549:9" pos:end="549:40"><name pos:start="549:9" pos:end="549:17">nextSlice</name><operator pos:start="549:18" pos:end="549:20">&lt;&lt;=</operator> <name pos:start="549:22" pos:end="549:40"><name pos:start="549:22" pos:end="549:22">c</name><operator pos:start="549:23" pos:end="549:24">-&gt;</operator><name pos:start="549:25" pos:end="549:40">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="551:9" pos:end="553:60"><if pos:start="551:9" pos:end="553:60">if <condition pos:start="551:12" pos:end="551:64">(<expr pos:start="551:13" pos:end="551:63"><name pos:start="551:13" pos:end="551:34"><name pos:start="551:13" pos:end="551:13">c</name><operator pos:start="551:14" pos:end="551:15">-&gt;</operator><name pos:start="551:16" pos:end="551:28">vLumFilterPos</name><index pos:start="551:29" pos:end="551:34">[<expr pos:start="551:30" pos:end="551:30"><name pos:start="551:30" pos:end="551:30">i</name></expr>   ]</index></name> <operator pos:start="551:36" pos:end="551:36">+</operator> <name pos:start="551:38" pos:end="551:51"><name pos:start="551:38" pos:end="551:38">c</name><operator pos:start="551:39" pos:end="551:40">-&gt;</operator><name pos:start="551:41" pos:end="551:51">vLumBufSize</name></name> <operator pos:start="551:53" pos:end="551:53">&lt;</operator> <name pos:start="551:55" pos:end="551:63">nextSlice</name></expr>)</condition><block type="pseudo" pos:start="553:13" pos:end="553:60"><block_content pos:start="553:13" pos:end="553:60">

            <expr_stmt pos:start="553:13" pos:end="553:60"><expr pos:start="553:13" pos:end="553:59"><name pos:start="553:13" pos:end="553:26"><name pos:start="553:13" pos:end="553:13">c</name><operator pos:start="553:14" pos:end="553:15">-&gt;</operator><name pos:start="553:16" pos:end="553:26">vLumBufSize</name></name><operator pos:start="553:27" pos:end="553:27">=</operator> <name pos:start="553:29" pos:end="553:37">nextSlice</name> <operator pos:start="553:39" pos:end="553:39">-</operator> <name pos:start="553:41" pos:end="553:59"><name pos:start="553:41" pos:end="553:41">c</name><operator pos:start="553:42" pos:end="553:43">-&gt;</operator><name pos:start="553:44" pos:end="553:56">vLumFilterPos</name><index pos:start="553:57" pos:end="553:59">[<expr pos:start="553:58" pos:end="553:58"><name pos:start="553:58" pos:end="553:58">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="555:9" pos:end="557:86"><if pos:start="555:9" pos:end="557:86">if <condition pos:start="555:12" pos:end="555:87">(<expr pos:start="555:13" pos:end="555:86"><name pos:start="555:13" pos:end="555:34"><name pos:start="555:13" pos:end="555:13">c</name><operator pos:start="555:14" pos:end="555:15">-&gt;</operator><name pos:start="555:16" pos:end="555:28">vChrFilterPos</name><index pos:start="555:29" pos:end="555:34">[<expr pos:start="555:30" pos:end="555:33"><name pos:start="555:30" pos:end="555:33">chrI</name></expr>]</index></name> <operator pos:start="555:36" pos:end="555:36">+</operator> <name pos:start="555:38" pos:end="555:51"><name pos:start="555:38" pos:end="555:38">c</name><operator pos:start="555:39" pos:end="555:40">-&gt;</operator><name pos:start="555:41" pos:end="555:51">vChrBufSize</name></name> <operator pos:start="555:53" pos:end="555:53">&lt;</operator> <operator pos:start="555:55" pos:end="555:55">(</operator><name pos:start="555:56" pos:end="555:64">nextSlice</name><operator pos:start="555:65" pos:end="555:66">&gt;&gt;</operator><name pos:start="555:67" pos:end="555:85"><name pos:start="555:67" pos:end="555:67">c</name><operator pos:start="555:68" pos:end="555:69">-&gt;</operator><name pos:start="555:70" pos:end="555:85">chrSrcVSubSample</name></name><operator pos:start="555:86" pos:end="555:86">)</operator></expr>)</condition><block type="pseudo" pos:start="557:13" pos:end="557:86"><block_content pos:start="557:13" pos:end="557:86">

            <expr_stmt pos:start="557:13" pos:end="557:86"><expr pos:start="557:13" pos:end="557:85"><name pos:start="557:13" pos:end="557:26"><name pos:start="557:13" pos:end="557:13">c</name><operator pos:start="557:14" pos:end="557:15">-&gt;</operator><name pos:start="557:16" pos:end="557:26">vChrBufSize</name></name><operator pos:start="557:27" pos:end="557:27">=</operator> <operator pos:start="557:29" pos:end="557:29">(</operator><name pos:start="557:30" pos:end="557:38">nextSlice</name><operator pos:start="557:39" pos:end="557:40">&gt;&gt;</operator><name pos:start="557:41" pos:end="557:59"><name pos:start="557:41" pos:end="557:41">c</name><operator pos:start="557:42" pos:end="557:43">-&gt;</operator><name pos:start="557:44" pos:end="557:59">chrSrcVSubSample</name></name><operator pos:start="557:60" pos:end="557:60">)</operator> <operator pos:start="557:62" pos:end="557:62">-</operator> <name pos:start="557:64" pos:end="557:85"><name pos:start="557:64" pos:end="557:64">c</name><operator pos:start="557:65" pos:end="557:66">-&gt;</operator><name pos:start="557:67" pos:end="557:79">vChrFilterPos</name><index pos:start="557:80" pos:end="557:85">[<expr pos:start="557:81" pos:end="557:84"><name pos:start="557:81" pos:end="557:84">chrI</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="563:5" pos:end="563:85">// allocate pixbufs (we use dynamic allocation because otherwise we would need to</comment>

    <comment type="line" pos:start="565:5" pos:end="565:63">// allocate several megabytes to handle all possible cases)</comment>

    <expr_stmt pos:start="567:5" pos:end="567:79"><expr pos:start="567:5" pos:end="567:78"><call pos:start="567:5" pos:end="567:78"><name pos:start="567:5" pos:end="567:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="567:21" pos:end="567:78">(<argument pos:start="567:22" pos:end="567:22"><expr pos:start="567:22" pos:end="567:22"><name pos:start="567:22" pos:end="567:22">c</name></expr></argument>, <argument pos:start="567:25" pos:end="567:36"><expr pos:start="567:25" pos:end="567:36"><name pos:start="567:25" pos:end="567:36"><name pos:start="567:25" pos:end="567:25">c</name><operator pos:start="567:26" pos:end="567:27">-&gt;</operator><name pos:start="567:28" pos:end="567:36">lumPixBuf</name></name></expr></argument>, <argument pos:start="567:39" pos:end="567:71"><expr pos:start="567:39" pos:end="567:71"><name pos:start="567:39" pos:end="567:52"><name pos:start="567:39" pos:end="567:39">c</name><operator pos:start="567:40" pos:end="567:41">-&gt;</operator><name pos:start="567:42" pos:end="567:52">vLumBufSize</name></name><operator pos:start="567:53" pos:end="567:53">*</operator><literal type="number" pos:start="567:54" pos:end="567:54">2</literal><operator pos:start="567:55" pos:end="567:55">*</operator><sizeof pos:start="567:56" pos:end="567:71">sizeof<argument_list pos:start="567:62" pos:end="567:71">(<argument pos:start="567:63" pos:end="567:70"><expr pos:start="567:63" pos:end="567:70"><name pos:start="567:63" pos:end="567:69">int16_t</name><operator pos:start="567:70" pos:end="567:70">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="567:74" pos:end="567:77"><expr pos:start="567:74" pos:end="567:77"><name pos:start="567:74" pos:end="567:77">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="569:5" pos:end="569:80"><expr pos:start="569:5" pos:end="569:79"><call pos:start="569:5" pos:end="569:79"><name pos:start="569:5" pos:end="569:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="569:21" pos:end="569:79">(<argument pos:start="569:22" pos:end="569:22"><expr pos:start="569:22" pos:end="569:22"><name pos:start="569:22" pos:end="569:22">c</name></expr></argument>, <argument pos:start="569:25" pos:end="569:37"><expr pos:start="569:25" pos:end="569:37"><name pos:start="569:25" pos:end="569:37"><name pos:start="569:25" pos:end="569:25">c</name><operator pos:start="569:26" pos:end="569:27">-&gt;</operator><name pos:start="569:28" pos:end="569:37">chrUPixBuf</name></name></expr></argument>, <argument pos:start="569:40" pos:end="569:72"><expr pos:start="569:40" pos:end="569:72"><name pos:start="569:40" pos:end="569:53"><name pos:start="569:40" pos:end="569:40">c</name><operator pos:start="569:41" pos:end="569:42">-&gt;</operator><name pos:start="569:43" pos:end="569:53">vChrBufSize</name></name><operator pos:start="569:54" pos:end="569:54">*</operator><literal type="number" pos:start="569:55" pos:end="569:55">2</literal><operator pos:start="569:56" pos:end="569:56">*</operator><sizeof pos:start="569:57" pos:end="569:72">sizeof<argument_list pos:start="569:63" pos:end="569:72">(<argument pos:start="569:64" pos:end="569:71"><expr pos:start="569:64" pos:end="569:71"><name pos:start="569:64" pos:end="569:70">int16_t</name><operator pos:start="569:71" pos:end="569:71">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="569:75" pos:end="569:78"><expr pos:start="569:75" pos:end="569:78"><name pos:start="569:75" pos:end="569:78">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="571:5" pos:end="571:80"><expr pos:start="571:5" pos:end="571:79"><call pos:start="571:5" pos:end="571:79"><name pos:start="571:5" pos:end="571:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="571:21" pos:end="571:79">(<argument pos:start="571:22" pos:end="571:22"><expr pos:start="571:22" pos:end="571:22"><name pos:start="571:22" pos:end="571:22">c</name></expr></argument>, <argument pos:start="571:25" pos:end="571:37"><expr pos:start="571:25" pos:end="571:37"><name pos:start="571:25" pos:end="571:37"><name pos:start="571:25" pos:end="571:25">c</name><operator pos:start="571:26" pos:end="571:27">-&gt;</operator><name pos:start="571:28" pos:end="571:37">chrVPixBuf</name></name></expr></argument>, <argument pos:start="571:40" pos:end="571:72"><expr pos:start="571:40" pos:end="571:72"><name pos:start="571:40" pos:end="571:53"><name pos:start="571:40" pos:end="571:40">c</name><operator pos:start="571:41" pos:end="571:42">-&gt;</operator><name pos:start="571:43" pos:end="571:53">vChrBufSize</name></name><operator pos:start="571:54" pos:end="571:54">*</operator><literal type="number" pos:start="571:55" pos:end="571:55">2</literal><operator pos:start="571:56" pos:end="571:56">*</operator><sizeof pos:start="571:57" pos:end="571:72">sizeof<argument_list pos:start="571:63" pos:end="571:72">(<argument pos:start="571:64" pos:end="571:71"><expr pos:start="571:64" pos:end="571:71"><name pos:start="571:64" pos:end="571:70">int16_t</name><operator pos:start="571:71" pos:end="571:71">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="571:75" pos:end="571:78"><expr pos:start="571:75" pos:end="571:78"><name pos:start="571:75" pos:end="571:78">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="573:5" pos:end="575:84"><if pos:start="573:5" pos:end="575:84">if <condition pos:start="573:8" pos:end="573:79">(<expr pos:start="573:9" pos:end="573:78"><name pos:start="573:9" pos:end="573:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="573:30" pos:end="573:31">&amp;&amp;</operator> <call pos:start="573:33" pos:end="573:53"><name pos:start="573:33" pos:end="573:39">isALPHA</name><argument_list pos:start="573:40" pos:end="573:53">(<argument pos:start="573:41" pos:end="573:52"><expr pos:start="573:41" pos:end="573:52"><name pos:start="573:41" pos:end="573:52"><name pos:start="573:41" pos:end="573:41">c</name><operator pos:start="573:42" pos:end="573:43">-&gt;</operator><name pos:start="573:44" pos:end="573:52">srcFormat</name></name></expr></argument>)</argument_list></call> <operator pos:start="573:55" pos:end="573:56">&amp;&amp;</operator> <call pos:start="573:58" pos:end="573:78"><name pos:start="573:58" pos:end="573:64">isALPHA</name><argument_list pos:start="573:65" pos:end="573:78">(<argument pos:start="573:66" pos:end="573:77"><expr pos:start="573:66" pos:end="573:77"><name pos:start="573:66" pos:end="573:77"><name pos:start="573:66" pos:end="573:66">c</name><operator pos:start="573:67" pos:end="573:68">-&gt;</operator><name pos:start="573:69" pos:end="573:77">dstFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="575:9" pos:end="575:84"><block_content pos:start="575:9" pos:end="575:84">

        <expr_stmt pos:start="575:9" pos:end="575:84"><expr pos:start="575:9" pos:end="575:83"><call pos:start="575:9" pos:end="575:83"><name pos:start="575:9" pos:end="575:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="575:26" pos:end="575:83">(<argument pos:start="575:27" pos:end="575:27"><expr pos:start="575:27" pos:end="575:27"><name pos:start="575:27" pos:end="575:27">c</name></expr></argument>, <argument pos:start="575:30" pos:end="575:41"><expr pos:start="575:30" pos:end="575:41"><name pos:start="575:30" pos:end="575:41"><name pos:start="575:30" pos:end="575:30">c</name><operator pos:start="575:31" pos:end="575:32">-&gt;</operator><name pos:start="575:33" pos:end="575:41">alpPixBuf</name></name></expr></argument>, <argument pos:start="575:44" pos:end="575:76"><expr pos:start="575:44" pos:end="575:76"><name pos:start="575:44" pos:end="575:57"><name pos:start="575:44" pos:end="575:44">c</name><operator pos:start="575:45" pos:end="575:46">-&gt;</operator><name pos:start="575:47" pos:end="575:57">vLumBufSize</name></name><operator pos:start="575:58" pos:end="575:58">*</operator><literal type="number" pos:start="575:59" pos:end="575:59">2</literal><operator pos:start="575:60" pos:end="575:60">*</operator><sizeof pos:start="575:61" pos:end="575:76">sizeof<argument_list pos:start="575:67" pos:end="575:76">(<argument pos:start="575:68" pos:end="575:75"><expr pos:start="575:68" pos:end="575:75"><name pos:start="575:68" pos:end="575:74">int16_t</name><operator pos:start="575:75" pos:end="575:75">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="575:79" pos:end="575:82"><expr pos:start="575:79" pos:end="575:82"><name pos:start="575:79" pos:end="575:82">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="line" pos:start="577:5" pos:end="577:128">//Note we need at least one pixel more at the end because of the MMX code (just in case someone wanna replace the 4000/8000)</comment>

    <comment type="block" pos:start="579:5" pos:end="579:39">/* align at 16 bytes for AltiVec */</comment>

    <for pos:start="581:5" pos:end="587:5">for <control pos:start="581:9" pos:end="581:36">(<init pos:start="581:10" pos:end="581:13"><expr pos:start="581:10" pos:end="581:12"><name pos:start="581:10" pos:end="581:10">i</name><operator pos:start="581:11" pos:end="581:11">=</operator><literal type="number" pos:start="581:12" pos:end="581:12">0</literal></expr>;</init> <condition pos:start="581:15" pos:end="581:31"><expr pos:start="581:15" pos:end="581:30"><name pos:start="581:15" pos:end="581:15">i</name><operator pos:start="581:16" pos:end="581:16">&lt;</operator><name pos:start="581:17" pos:end="581:30"><name pos:start="581:17" pos:end="581:17">c</name><operator pos:start="581:18" pos:end="581:19">-&gt;</operator><name pos:start="581:20" pos:end="581:30">vLumBufSize</name></name></expr>;</condition> <incr pos:start="581:33" pos:end="581:35"><expr pos:start="581:33" pos:end="581:35"><name pos:start="581:33" pos:end="581:33">i</name><operator pos:start="581:34" pos:end="581:35">++</operator></expr></incr>)</control> <block pos:start="581:38" pos:end="587:5">{<block_content pos:start="583:9" pos:end="585:57">

        <expr_stmt pos:start="583:9" pos:end="583:82"><expr pos:start="583:9" pos:end="583:81"><call pos:start="583:9" pos:end="583:81"><name pos:start="583:9" pos:end="583:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="583:26" pos:end="583:81">(<argument pos:start="583:27" pos:end="583:27"><expr pos:start="583:27" pos:end="583:27"><name pos:start="583:27" pos:end="583:27">c</name></expr></argument>, <argument pos:start="583:30" pos:end="583:59"><expr pos:start="583:30" pos:end="583:59"><name pos:start="583:30" pos:end="583:59"><name pos:start="583:30" pos:end="583:30">c</name><operator pos:start="583:31" pos:end="583:32">-&gt;</operator><name pos:start="583:33" pos:end="583:41">lumPixBuf</name><index pos:start="583:42" pos:end="583:59">[<expr pos:start="583:43" pos:end="583:58"><name pos:start="583:43" pos:end="583:43">i</name><operator pos:start="583:44" pos:end="583:44">+</operator><name pos:start="583:45" pos:end="583:58"><name pos:start="583:45" pos:end="583:45">c</name><operator pos:start="583:46" pos:end="583:47">-&gt;</operator><name pos:start="583:48" pos:end="583:58">vLumBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="583:62" pos:end="583:74"><expr pos:start="583:62" pos:end="583:74"><name pos:start="583:62" pos:end="583:71">dst_stride</name><operator pos:start="583:72" pos:end="583:72">+</operator><literal type="number" pos:start="583:73" pos:end="583:74">16</literal></expr></argument>, <argument pos:start="583:77" pos:end="583:80"><expr pos:start="583:77" pos:end="583:80"><name pos:start="583:77" pos:end="583:80">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="585:9" pos:end="585:57"><expr pos:start="585:9" pos:end="585:56"><name pos:start="585:9" pos:end="585:23"><name pos:start="585:9" pos:end="585:9">c</name><operator pos:start="585:10" pos:end="585:11">-&gt;</operator><name pos:start="585:12" pos:end="585:20">lumPixBuf</name><index pos:start="585:21" pos:end="585:23">[<expr pos:start="585:22" pos:end="585:22"><name pos:start="585:22" pos:end="585:22">i</name></expr>]</index></name> <operator pos:start="585:25" pos:end="585:25">=</operator> <name pos:start="585:27" pos:end="585:56"><name pos:start="585:27" pos:end="585:27">c</name><operator pos:start="585:28" pos:end="585:29">-&gt;</operator><name pos:start="585:30" pos:end="585:38">lumPixBuf</name><index pos:start="585:39" pos:end="585:56">[<expr pos:start="585:40" pos:end="585:55"><name pos:start="585:40" pos:end="585:40">i</name><operator pos:start="585:41" pos:end="585:41">+</operator><name pos:start="585:42" pos:end="585:55"><name pos:start="585:42" pos:end="585:42">c</name><operator pos:start="585:43" pos:end="585:44">-&gt;</operator><name pos:start="585:45" pos:end="585:55">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="line" pos:start="589:5" pos:end="589:74">// 64 / c-&gt;scalingBpp is the same as 16 / sizeof(scaling_intermediate)</comment>

    <expr_stmt pos:start="591:5" pos:end="591:58"><expr pos:start="591:5" pos:end="591:57"><name pos:start="591:5" pos:end="591:13"><name pos:start="591:5" pos:end="591:5">c</name><operator pos:start="591:6" pos:end="591:7">-&gt;</operator><name pos:start="591:8" pos:end="591:13">uv_off</name></name>   <operator pos:start="591:17" pos:end="591:17">=</operator> <operator pos:start="591:19" pos:end="591:19">(</operator><name pos:start="591:20" pos:end="591:29">dst_stride</name><operator pos:start="591:30" pos:end="591:31">&gt;&gt;</operator><literal type="number" pos:start="591:32" pos:end="591:32">1</literal><operator pos:start="591:33" pos:end="591:33">)</operator> <operator pos:start="591:35" pos:end="591:35">+</operator> <literal type="number" pos:start="591:37" pos:end="591:38">64</literal> <operator pos:start="591:40" pos:end="591:40">/</operator> <operator pos:start="591:42" pos:end="591:42">(</operator><name pos:start="591:43" pos:end="591:51"><name pos:start="591:43" pos:end="591:43">c</name><operator pos:start="591:44" pos:end="591:45">-&gt;</operator><name pos:start="591:46" pos:end="591:51">dstBpc</name></name> <operator pos:start="591:53" pos:end="591:53">&amp;</operator><operator pos:start="591:54" pos:end="591:54">~</operator> <literal type="number" pos:start="591:56" pos:end="591:56">7</literal><operator pos:start="591:57" pos:end="591:57">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="593:5" pos:end="593:34"><expr pos:start="593:5" pos:end="593:33"><name pos:start="593:5" pos:end="593:15"><name pos:start="593:5" pos:end="593:5">c</name><operator pos:start="593:6" pos:end="593:7">-&gt;</operator><name pos:start="593:8" pos:end="593:15">uv_offx2</name></name> <operator pos:start="593:17" pos:end="593:17">=</operator> <name pos:start="593:19" pos:end="593:28">dst_stride</name> <operator pos:start="593:30" pos:end="593:30">+</operator> <literal type="number" pos:start="593:32" pos:end="593:33">16</literal></expr>;</expr_stmt>

    <for pos:start="595:5" pos:end="603:5">for <control pos:start="595:9" pos:end="595:36">(<init pos:start="595:10" pos:end="595:13"><expr pos:start="595:10" pos:end="595:12"><name pos:start="595:10" pos:end="595:10">i</name><operator pos:start="595:11" pos:end="595:11">=</operator><literal type="number" pos:start="595:12" pos:end="595:12">0</literal></expr>;</init> <condition pos:start="595:15" pos:end="595:31"><expr pos:start="595:15" pos:end="595:30"><name pos:start="595:15" pos:end="595:15">i</name><operator pos:start="595:16" pos:end="595:16">&lt;</operator><name pos:start="595:17" pos:end="595:30"><name pos:start="595:17" pos:end="595:17">c</name><operator pos:start="595:18" pos:end="595:19">-&gt;</operator><name pos:start="595:20" pos:end="595:30">vChrBufSize</name></name></expr>;</condition> <incr pos:start="595:33" pos:end="595:35"><expr pos:start="595:33" pos:end="595:35"><name pos:start="595:33" pos:end="595:33">i</name><operator pos:start="595:34" pos:end="595:35">++</operator></expr></incr>)</control> <block pos:start="595:38" pos:end="603:5">{<block_content pos:start="597:9" pos:end="601:102">

        <expr_stmt pos:start="597:9" pos:end="597:84"><expr pos:start="597:9" pos:end="597:83"><call pos:start="597:9" pos:end="597:83"><name pos:start="597:9" pos:end="597:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="597:25" pos:end="597:83">(<argument pos:start="597:26" pos:end="597:26"><expr pos:start="597:26" pos:end="597:26"><name pos:start="597:26" pos:end="597:26">c</name></expr></argument>, <argument pos:start="597:29" pos:end="597:59"><expr pos:start="597:29" pos:end="597:59"><name pos:start="597:29" pos:end="597:59"><name pos:start="597:29" pos:end="597:29">c</name><operator pos:start="597:30" pos:end="597:31">-&gt;</operator><name pos:start="597:32" pos:end="597:41">chrUPixBuf</name><index pos:start="597:42" pos:end="597:59">[<expr pos:start="597:43" pos:end="597:58"><name pos:start="597:43" pos:end="597:43">i</name><operator pos:start="597:44" pos:end="597:44">+</operator><name pos:start="597:45" pos:end="597:58"><name pos:start="597:45" pos:end="597:45">c</name><operator pos:start="597:46" pos:end="597:47">-&gt;</operator><name pos:start="597:48" pos:end="597:58">vChrBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="597:62" pos:end="597:76"><expr pos:start="597:62" pos:end="597:76"><name pos:start="597:62" pos:end="597:71">dst_stride</name><operator pos:start="597:72" pos:end="597:72">*</operator><literal type="number" pos:start="597:73" pos:end="597:74">2</literal><operator pos:start="597:74" pos:end="597:74">+</operator><literal type="number" pos:start="597:75" pos:end="597:76">32</literal></expr></argument>, <argument pos:start="597:79" pos:end="597:82"><expr pos:start="597:79" pos:end="597:82"><name pos:start="597:79" pos:end="597:82">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="599:9" pos:end="599:59"><expr pos:start="599:9" pos:end="599:58"><name pos:start="599:9" pos:end="599:24"><name pos:start="599:9" pos:end="599:9">c</name><operator pos:start="599:10" pos:end="599:11">-&gt;</operator><name pos:start="599:12" pos:end="599:21">chrUPixBuf</name><index pos:start="599:22" pos:end="599:24">[<expr pos:start="599:23" pos:end="599:23"><name pos:start="599:23" pos:end="599:23">i</name></expr>]</index></name> <operator pos:start="599:26" pos:end="599:26">=</operator> <name pos:start="599:28" pos:end="599:58"><name pos:start="599:28" pos:end="599:28">c</name><operator pos:start="599:29" pos:end="599:30">-&gt;</operator><name pos:start="599:31" pos:end="599:40">chrUPixBuf</name><index pos:start="599:41" pos:end="599:58">[<expr pos:start="599:42" pos:end="599:57"><name pos:start="599:42" pos:end="599:42">i</name><operator pos:start="599:43" pos:end="599:43">+</operator><name pos:start="599:44" pos:end="599:57"><name pos:start="599:44" pos:end="599:44">c</name><operator pos:start="599:45" pos:end="599:46">-&gt;</operator><name pos:start="599:47" pos:end="599:57">vChrBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="601:9" pos:end="601:102"><expr pos:start="601:9" pos:end="601:101"><name pos:start="601:9" pos:end="601:24"><name pos:start="601:9" pos:end="601:9">c</name><operator pos:start="601:10" pos:end="601:11">-&gt;</operator><name pos:start="601:12" pos:end="601:21">chrVPixBuf</name><index pos:start="601:22" pos:end="601:24">[<expr pos:start="601:23" pos:end="601:23"><name pos:start="601:23" pos:end="601:23">i</name></expr>]</index></name> <operator pos:start="601:26" pos:end="601:26">=</operator> <name pos:start="601:28" pos:end="601:58"><name pos:start="601:28" pos:end="601:28">c</name><operator pos:start="601:29" pos:end="601:30">-&gt;</operator><name pos:start="601:31" pos:end="601:40">chrVPixBuf</name><index pos:start="601:41" pos:end="601:58">[<expr pos:start="601:42" pos:end="601:57"><name pos:start="601:42" pos:end="601:42">i</name><operator pos:start="601:43" pos:end="601:43">+</operator><name pos:start="601:44" pos:end="601:57"><name pos:start="601:44" pos:end="601:44">c</name><operator pos:start="601:45" pos:end="601:46">-&gt;</operator><name pos:start="601:47" pos:end="601:57">vChrBufSize</name></name></expr>]</index></name> <operator pos:start="601:60" pos:end="601:60">=</operator> <name pos:start="601:62" pos:end="601:77"><name pos:start="601:62" pos:end="601:62">c</name><operator pos:start="601:63" pos:end="601:64">-&gt;</operator><name pos:start="601:65" pos:end="601:74">chrUPixBuf</name><index pos:start="601:75" pos:end="601:77">[<expr pos:start="601:76" pos:end="601:76"><name pos:start="601:76" pos:end="601:76">i</name></expr>]</index></name> <operator pos:start="601:79" pos:end="601:79">+</operator> <operator pos:start="601:81" pos:end="601:81">(</operator><name pos:start="601:82" pos:end="601:91">dst_stride</name> <operator pos:start="601:93" pos:end="601:94">&gt;&gt;</operator> <literal type="number" pos:start="601:96" pos:end="601:96">1</literal><operator pos:start="601:97" pos:end="601:97">)</operator> <operator pos:start="601:99" pos:end="601:99">+</operator> <literal type="number" pos:start="601:101" pos:end="601:101">8</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="605:5" pos:end="613:9"><if pos:start="605:5" pos:end="613:9">if <condition pos:start="605:8" pos:end="605:45">(<expr pos:start="605:9" pos:end="605:44"><name pos:start="605:9" pos:end="605:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="605:30" pos:end="605:31">&amp;&amp;</operator> <name pos:start="605:33" pos:end="605:44"><name pos:start="605:33" pos:end="605:33">c</name><operator pos:start="605:34" pos:end="605:35">-&gt;</operator><name pos:start="605:36" pos:end="605:44">alpPixBuf</name></name></expr>)</condition><block type="pseudo" pos:start="607:9" pos:end="613:9"><block_content pos:start="607:9" pos:end="613:9">

        <for pos:start="607:9" pos:end="613:9">for <control pos:start="607:13" pos:end="607:40">(<init pos:start="607:14" pos:end="607:17"><expr pos:start="607:14" pos:end="607:16"><name pos:start="607:14" pos:end="607:14">i</name><operator pos:start="607:15" pos:end="607:15">=</operator><literal type="number" pos:start="607:16" pos:end="607:16">0</literal></expr>;</init> <condition pos:start="607:19" pos:end="607:35"><expr pos:start="607:19" pos:end="607:34"><name pos:start="607:19" pos:end="607:19">i</name><operator pos:start="607:20" pos:end="607:20">&lt;</operator><name pos:start="607:21" pos:end="607:34"><name pos:start="607:21" pos:end="607:21">c</name><operator pos:start="607:22" pos:end="607:23">-&gt;</operator><name pos:start="607:24" pos:end="607:34">vLumBufSize</name></name></expr>;</condition> <incr pos:start="607:37" pos:end="607:39"><expr pos:start="607:37" pos:end="607:39"><name pos:start="607:37" pos:end="607:37">i</name><operator pos:start="607:38" pos:end="607:39">++</operator></expr></incr>)</control> <block pos:start="607:42" pos:end="613:9">{<block_content pos:start="609:13" pos:end="611:61">

            <expr_stmt pos:start="609:13" pos:end="609:86"><expr pos:start="609:13" pos:end="609:85"><call pos:start="609:13" pos:end="609:85"><name pos:start="609:13" pos:end="609:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="609:30" pos:end="609:85">(<argument pos:start="609:31" pos:end="609:31"><expr pos:start="609:31" pos:end="609:31"><name pos:start="609:31" pos:end="609:31">c</name></expr></argument>, <argument pos:start="609:34" pos:end="609:63"><expr pos:start="609:34" pos:end="609:63"><name pos:start="609:34" pos:end="609:63"><name pos:start="609:34" pos:end="609:34">c</name><operator pos:start="609:35" pos:end="609:36">-&gt;</operator><name pos:start="609:37" pos:end="609:45">alpPixBuf</name><index pos:start="609:46" pos:end="609:63">[<expr pos:start="609:47" pos:end="609:62"><name pos:start="609:47" pos:end="609:47">i</name><operator pos:start="609:48" pos:end="609:48">+</operator><name pos:start="609:49" pos:end="609:62"><name pos:start="609:49" pos:end="609:49">c</name><operator pos:start="609:50" pos:end="609:51">-&gt;</operator><name pos:start="609:52" pos:end="609:62">vLumBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="609:66" pos:end="609:78"><expr pos:start="609:66" pos:end="609:78"><name pos:start="609:66" pos:end="609:75">dst_stride</name><operator pos:start="609:76" pos:end="609:76">+</operator><literal type="number" pos:start="609:77" pos:end="609:78">16</literal></expr></argument>, <argument pos:start="609:81" pos:end="609:84"><expr pos:start="609:81" pos:end="609:84"><name pos:start="609:81" pos:end="609:84">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="611:13" pos:end="611:61"><expr pos:start="611:13" pos:end="611:60"><name pos:start="611:13" pos:end="611:27"><name pos:start="611:13" pos:end="611:13">c</name><operator pos:start="611:14" pos:end="611:15">-&gt;</operator><name pos:start="611:16" pos:end="611:24">alpPixBuf</name><index pos:start="611:25" pos:end="611:27">[<expr pos:start="611:26" pos:end="611:26"><name pos:start="611:26" pos:end="611:26">i</name></expr>]</index></name> <operator pos:start="611:29" pos:end="611:29">=</operator> <name pos:start="611:31" pos:end="611:60"><name pos:start="611:31" pos:end="611:31">c</name><operator pos:start="611:32" pos:end="611:33">-&gt;</operator><name pos:start="611:34" pos:end="611:42">alpPixBuf</name><index pos:start="611:43" pos:end="611:60">[<expr pos:start="611:44" pos:end="611:59"><name pos:start="611:44" pos:end="611:44">i</name><operator pos:start="611:45" pos:end="611:45">+</operator><name pos:start="611:46" pos:end="611:59"><name pos:start="611:46" pos:end="611:46">c</name><operator pos:start="611:47" pos:end="611:48">-&gt;</operator><name pos:start="611:49" pos:end="611:59">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="line" pos:start="617:5" pos:end="617:79">//try to avoid drawing green stuff between the right end and the stride end</comment>

    <for pos:start="619:5" pos:end="633:58">for <control pos:start="619:9" pos:end="619:36">(<init pos:start="619:10" pos:end="619:13"><expr pos:start="619:10" pos:end="619:12"><name pos:start="619:10" pos:end="619:10">i</name><operator pos:start="619:11" pos:end="619:11">=</operator><literal type="number" pos:start="619:12" pos:end="619:12">0</literal></expr>;</init> <condition pos:start="619:15" pos:end="619:31"><expr pos:start="619:15" pos:end="619:30"><name pos:start="619:15" pos:end="619:15">i</name><operator pos:start="619:16" pos:end="619:16">&lt;</operator><name pos:start="619:17" pos:end="619:30"><name pos:start="619:17" pos:end="619:17">c</name><operator pos:start="619:18" pos:end="619:19">-&gt;</operator><name pos:start="619:20" pos:end="619:30">vChrBufSize</name></name></expr>;</condition> <incr pos:start="619:33" pos:end="619:35"><expr pos:start="619:33" pos:end="619:35"><name pos:start="619:33" pos:end="619:33">i</name><operator pos:start="619:34" pos:end="619:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="621:9" pos:end="633:58"><block_content pos:start="621:9" pos:end="633:58">

        <if_stmt pos:start="621:9" pos:end="633:58"><if pos:start="621:9" pos:end="629:9">if<condition pos:start="621:11" pos:end="621:75">(<expr pos:start="621:12" pos:end="621:74"><name pos:start="621:12" pos:end="621:47"><name pos:start="621:12" pos:end="621:33">av_pix_fmt_descriptors</name><index pos:start="621:34" pos:end="621:47">[<expr pos:start="621:35" pos:end="621:46"><name pos:start="621:35" pos:end="621:46"><name pos:start="621:35" pos:end="621:35">c</name><operator pos:start="621:36" pos:end="621:37">-&gt;</operator><name pos:start="621:38" pos:end="621:46">dstFormat</name></name></expr>]</index></name><operator pos:start="621:48" pos:end="621:48">.</operator><name pos:start="621:49" pos:end="621:55"><name pos:start="621:49" pos:end="621:52">comp</name><index pos:start="621:53" pos:end="621:55">[<expr pos:start="621:54" pos:end="621:54"><literal type="number" pos:start="621:54" pos:end="621:54">0</literal></expr>]</index></name><operator pos:start="621:56" pos:end="621:56">.</operator><name pos:start="621:57" pos:end="621:68">depth_minus1</name> <operator pos:start="621:70" pos:end="621:71">==</operator> <literal type="number" pos:start="621:73" pos:end="621:74">15</literal></expr>)</condition><block pos:start="621:76" pos:end="629:9">{<block_content pos:start="623:13" pos:end="627:58">

            <expr_stmt pos:start="623:13" pos:end="623:39"><expr pos:start="623:13" pos:end="623:38"><call pos:start="623:13" pos:end="623:38"><name pos:start="623:13" pos:end="623:22">av_assert0</name><argument_list pos:start="623:23" pos:end="623:38">(<argument pos:start="623:24" pos:end="623:37"><expr pos:start="623:24" pos:end="623:37"><name pos:start="623:24" pos:end="623:32"><name pos:start="623:24" pos:end="623:24">c</name><operator pos:start="623:25" pos:end="623:26">-&gt;</operator><name pos:start="623:27" pos:end="623:32">dstBpc</name></name> <operator pos:start="623:34" pos:end="623:34">&gt;</operator> <literal type="number" pos:start="623:36" pos:end="623:37">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="625:13" pos:end="627:58">for<control pos:start="625:16" pos:end="625:43">(<init pos:start="625:17" pos:end="625:20"><expr pos:start="625:17" pos:end="625:19"><name pos:start="625:17" pos:end="625:17">j</name><operator pos:start="625:18" pos:end="625:18">=</operator><literal type="number" pos:start="625:19" pos:end="625:19">0</literal></expr>;</init> <condition pos:start="625:22" pos:end="625:38"><expr pos:start="625:22" pos:end="625:37"><name pos:start="625:22" pos:end="625:22">j</name><operator pos:start="625:23" pos:end="625:23">&lt;</operator><name pos:start="625:24" pos:end="625:33">dst_stride</name><operator pos:start="625:34" pos:end="625:34">/</operator><literal type="number" pos:start="625:35" pos:end="625:36">2</literal><operator pos:start="625:36" pos:end="625:36">+</operator><literal type="number" pos:start="625:37" pos:end="625:37">1</literal></expr>;</condition> <incr pos:start="625:40" pos:end="625:42"><expr pos:start="625:40" pos:end="625:42"><name pos:start="625:40" pos:end="625:40">j</name><operator pos:start="625:41" pos:end="625:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="627:17" pos:end="627:58"><block_content pos:start="627:17" pos:end="627:58">

                <expr_stmt pos:start="627:17" pos:end="627:58"><expr pos:start="627:17" pos:end="627:57"><operator pos:start="627:17" pos:end="627:17">(</operator><operator pos:start="627:18" pos:end="627:18">(</operator><name pos:start="627:19" pos:end="627:25">int32_t</name><operator pos:start="627:26" pos:end="627:26">*</operator><operator pos:start="627:27" pos:end="627:27">)</operator><operator pos:start="627:28" pos:end="627:28">(</operator><name pos:start="627:29" pos:end="627:44"><name pos:start="627:29" pos:end="627:29">c</name><operator pos:start="627:30" pos:end="627:31">-&gt;</operator><name pos:start="627:32" pos:end="627:41">chrUPixBuf</name><index pos:start="627:42" pos:end="627:44">[<expr pos:start="627:43" pos:end="627:43"><name pos:start="627:43" pos:end="627:43">i</name></expr>]</index></name><operator pos:start="627:45" pos:end="627:45">)</operator><operator pos:start="627:46" pos:end="627:46">)</operator><index pos:start="627:47" pos:end="627:49">[<expr pos:start="627:48" pos:end="627:48"><name pos:start="627:48" pos:end="627:48">j</name></expr>]</index> <operator pos:start="627:51" pos:end="627:51">=</operator> <literal type="number" pos:start="627:53" pos:end="627:53">1</literal><operator pos:start="627:54" pos:end="627:55">&lt;&lt;</operator><literal type="number" pos:start="627:56" pos:end="627:57">18</literal></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <else pos:start="629:11" pos:end="633:58">else<block type="pseudo" pos:start="631:13" pos:end="633:58"><block_content pos:start="631:13" pos:end="633:58">

            <for pos:start="631:13" pos:end="633:58">for<control pos:start="631:16" pos:end="631:41">(<init pos:start="631:17" pos:end="631:20"><expr pos:start="631:17" pos:end="631:19"><name pos:start="631:17" pos:end="631:17">j</name><operator pos:start="631:18" pos:end="631:18">=</operator><literal type="number" pos:start="631:19" pos:end="631:19">0</literal></expr>;</init> <condition pos:start="631:22" pos:end="631:36"><expr pos:start="631:22" pos:end="631:35"><name pos:start="631:22" pos:end="631:22">j</name><operator pos:start="631:23" pos:end="631:23">&lt;</operator><name pos:start="631:24" pos:end="631:33">dst_stride</name><operator pos:start="631:34" pos:end="631:34">+</operator><literal type="number" pos:start="631:35" pos:end="631:35">1</literal></expr>;</condition> <incr pos:start="631:38" pos:end="631:40"><expr pos:start="631:38" pos:end="631:40"><name pos:start="631:38" pos:end="631:38">j</name><operator pos:start="631:39" pos:end="631:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="633:17" pos:end="633:58"><block_content pos:start="633:17" pos:end="633:58">

                <expr_stmt pos:start="633:17" pos:end="633:58"><expr pos:start="633:17" pos:end="633:57"><operator pos:start="633:17" pos:end="633:17">(</operator><operator pos:start="633:18" pos:end="633:18">(</operator><name pos:start="633:19" pos:end="633:25">int16_t</name><operator pos:start="633:26" pos:end="633:26">*</operator><operator pos:start="633:27" pos:end="633:27">)</operator><operator pos:start="633:28" pos:end="633:28">(</operator><name pos:start="633:29" pos:end="633:44"><name pos:start="633:29" pos:end="633:29">c</name><operator pos:start="633:30" pos:end="633:31">-&gt;</operator><name pos:start="633:32" pos:end="633:41">chrUPixBuf</name><index pos:start="633:42" pos:end="633:44">[<expr pos:start="633:43" pos:end="633:43"><name pos:start="633:43" pos:end="633:43">i</name></expr>]</index></name><operator pos:start="633:45" pos:end="633:45">)</operator><operator pos:start="633:46" pos:end="633:46">)</operator><index pos:start="633:47" pos:end="633:49">[<expr pos:start="633:48" pos:end="633:48"><name pos:start="633:48" pos:end="633:48">j</name></expr>]</index> <operator pos:start="633:51" pos:end="633:51">=</operator> <literal type="number" pos:start="633:53" pos:end="633:53">1</literal><operator pos:start="633:54" pos:end="633:55">&lt;&lt;</operator><literal type="number" pos:start="633:56" pos:end="633:57">14</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></for>



    <expr_stmt pos:start="637:5" pos:end="637:31"><expr pos:start="637:5" pos:end="637:30"><call pos:start="637:5" pos:end="637:30"><name pos:start="637:5" pos:end="637:10">assert</name><argument_list pos:start="637:11" pos:end="637:30">(<argument pos:start="637:12" pos:end="637:29"><expr pos:start="637:12" pos:end="637:29"><name pos:start="637:12" pos:end="637:21"><name pos:start="637:12" pos:end="637:12">c</name><operator pos:start="637:13" pos:end="637:14">-&gt;</operator><name pos:start="637:15" pos:end="637:21">chrDstH</name></name> <operator pos:start="637:23" pos:end="637:24">&lt;=</operator> <name pos:start="637:26" pos:end="637:29">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="641:5" pos:end="713:5"><if pos:start="641:5" pos:end="713:5">if <condition pos:start="641:8" pos:end="641:29">(<expr pos:start="641:9" pos:end="641:28"><name pos:start="641:9" pos:end="641:13">flags</name><operator pos:start="641:14" pos:end="641:14">&amp;</operator><name pos:start="641:15" pos:end="641:28">SWS_PRINT_INFO</name></expr>)</condition> <block pos:start="641:31" pos:end="713:5">{<block_content pos:start="643:9" pos:end="711:87">

        <if_stmt pos:start="643:9" pos:end="665:89"><if pos:start="643:9" pos:end="643:91">if      <condition pos:start="643:17" pos:end="643:41">(<expr pos:start="643:18" pos:end="643:40"><name pos:start="643:18" pos:end="643:22">flags</name><operator pos:start="643:23" pos:end="643:23">&amp;</operator><name pos:start="643:24" pos:end="643:40">SWS_FAST_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="643:43" pos:end="643:91"><block_content pos:start="643:43" pos:end="643:91"> <expr_stmt pos:start="643:43" pos:end="643:91"><expr pos:start="643:43" pos:end="643:90"><call pos:start="643:43" pos:end="643:90"><name pos:start="643:43" pos:end="643:48">av_log</name><argument_list pos:start="643:49" pos:end="643:90">(<argument pos:start="643:50" pos:end="643:50"><expr pos:start="643:50" pos:end="643:50"><name pos:start="643:50" pos:end="643:50">c</name></expr></argument>, <argument pos:start="643:53" pos:end="643:63"><expr pos:start="643:53" pos:end="643:63"><name pos:start="643:53" pos:end="643:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="643:66" pos:end="643:89"><expr pos:start="643:66" pos:end="643:89"><literal type="string" pos:start="643:66" pos:end="643:89">"FAST_BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="645:9" pos:end="645:86">else if <condition pos:start="645:17" pos:end="645:36">(<expr pos:start="645:18" pos:end="645:35"><name pos:start="645:18" pos:end="645:22">flags</name><operator pos:start="645:23" pos:end="645:23">&amp;</operator><name pos:start="645:24" pos:end="645:35">SWS_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="645:43" pos:end="645:86"><block_content pos:start="645:43" pos:end="645:86">      <expr_stmt pos:start="645:43" pos:end="645:86"><expr pos:start="645:43" pos:end="645:85"><call pos:start="645:43" pos:end="645:85"><name pos:start="645:43" pos:end="645:48">av_log</name><argument_list pos:start="645:49" pos:end="645:85">(<argument pos:start="645:50" pos:end="645:50"><expr pos:start="645:50" pos:end="645:50"><name pos:start="645:50" pos:end="645:50">c</name></expr></argument>, <argument pos:start="645:53" pos:end="645:63"><expr pos:start="645:53" pos:end="645:63"><name pos:start="645:53" pos:end="645:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="645:66" pos:end="645:84"><expr pos:start="645:66" pos:end="645:84"><literal type="string" pos:start="645:66" pos:end="645:84">"BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="647:9" pos:end="647:85">else if <condition pos:start="647:17" pos:end="647:35">(<expr pos:start="647:18" pos:end="647:34"><name pos:start="647:18" pos:end="647:22">flags</name><operator pos:start="647:23" pos:end="647:23">&amp;</operator><name pos:start="647:24" pos:end="647:34">SWS_BICUBIC</name></expr>)</condition><block type="pseudo" pos:start="647:43" pos:end="647:85"><block_content pos:start="647:43" pos:end="647:85">       <expr_stmt pos:start="647:43" pos:end="647:85"><expr pos:start="647:43" pos:end="647:84"><call pos:start="647:43" pos:end="647:84"><name pos:start="647:43" pos:end="647:48">av_log</name><argument_list pos:start="647:49" pos:end="647:84">(<argument pos:start="647:50" pos:end="647:50"><expr pos:start="647:50" pos:end="647:50"><name pos:start="647:50" pos:end="647:50">c</name></expr></argument>, <argument pos:start="647:53" pos:end="647:63"><expr pos:start="647:53" pos:end="647:63"><name pos:start="647:53" pos:end="647:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="647:66" pos:end="647:83"><expr pos:start="647:66" pos:end="647:83"><literal type="string" pos:start="647:66" pos:end="647:83">"BICUBIC scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="649:9" pos:end="649:90">else if <condition pos:start="649:17" pos:end="649:29">(<expr pos:start="649:18" pos:end="649:28"><name pos:start="649:18" pos:end="649:22">flags</name><operator pos:start="649:23" pos:end="649:23">&amp;</operator><name pos:start="649:24" pos:end="649:28">SWS_X</name></expr>)</condition><block type="pseudo" pos:start="649:43" pos:end="649:90"><block_content pos:start="649:43" pos:end="649:90">             <expr_stmt pos:start="649:43" pos:end="649:90"><expr pos:start="649:43" pos:end="649:89"><call pos:start="649:43" pos:end="649:89"><name pos:start="649:43" pos:end="649:48">av_log</name><argument_list pos:start="649:49" pos:end="649:89">(<argument pos:start="649:50" pos:end="649:50"><expr pos:start="649:50" pos:end="649:50"><name pos:start="649:50" pos:end="649:50">c</name></expr></argument>, <argument pos:start="649:53" pos:end="649:63"><expr pos:start="649:53" pos:end="649:63"><name pos:start="649:53" pos:end="649:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="649:66" pos:end="649:88"><expr pos:start="649:66" pos:end="649:88"><literal type="string" pos:start="649:66" pos:end="649:88">"Experimental scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="651:9" pos:end="651:102">else if <condition pos:start="651:17" pos:end="651:33">(<expr pos:start="651:18" pos:end="651:32"><name pos:start="651:18" pos:end="651:22">flags</name><operator pos:start="651:23" pos:end="651:23">&amp;</operator><name pos:start="651:24" pos:end="651:32">SWS_POINT</name></expr>)</condition><block type="pseudo" pos:start="651:43" pos:end="651:102"><block_content pos:start="651:43" pos:end="651:102">         <expr_stmt pos:start="651:43" pos:end="651:102"><expr pos:start="651:43" pos:end="651:101"><call pos:start="651:43" pos:end="651:101"><name pos:start="651:43" pos:end="651:48">av_log</name><argument_list pos:start="651:49" pos:end="651:101">(<argument pos:start="651:50" pos:end="651:50"><expr pos:start="651:50" pos:end="651:50"><name pos:start="651:50" pos:end="651:50">c</name></expr></argument>, <argument pos:start="651:53" pos:end="651:63"><expr pos:start="651:53" pos:end="651:63"><name pos:start="651:53" pos:end="651:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="651:66" pos:end="651:100"><expr pos:start="651:66" pos:end="651:100"><literal type="string" pos:start="651:66" pos:end="651:100">"Nearest Neighbor / POINT scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="653:9" pos:end="653:92">else if <condition pos:start="653:17" pos:end="653:32">(<expr pos:start="653:18" pos:end="653:31"><name pos:start="653:18" pos:end="653:22">flags</name><operator pos:start="653:23" pos:end="653:23">&amp;</operator><name pos:start="653:24" pos:end="653:31">SWS_AREA</name></expr>)</condition><block type="pseudo" pos:start="653:43" pos:end="653:92"><block_content pos:start="653:43" pos:end="653:92">          <expr_stmt pos:start="653:43" pos:end="653:92"><expr pos:start="653:43" pos:end="653:91"><call pos:start="653:43" pos:end="653:91"><name pos:start="653:43" pos:end="653:48">av_log</name><argument_list pos:start="653:49" pos:end="653:91">(<argument pos:start="653:50" pos:end="653:50"><expr pos:start="653:50" pos:end="653:50"><name pos:start="653:50" pos:end="653:50">c</name></expr></argument>, <argument pos:start="653:53" pos:end="653:63"><expr pos:start="653:53" pos:end="653:63"><name pos:start="653:53" pos:end="653:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="653:66" pos:end="653:90"><expr pos:start="653:66" pos:end="653:90"><literal type="string" pos:start="653:66" pos:end="653:90">"Area Averaging scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="655:9" pos:end="655:108">else if <condition pos:start="655:17" pos:end="655:36">(<expr pos:start="655:18" pos:end="655:35"><name pos:start="655:18" pos:end="655:22">flags</name><operator pos:start="655:23" pos:end="655:23">&amp;</operator><name pos:start="655:24" pos:end="655:35">SWS_BICUBLIN</name></expr>)</condition><block type="pseudo" pos:start="655:43" pos:end="655:108"><block_content pos:start="655:43" pos:end="655:108">      <expr_stmt pos:start="655:43" pos:end="655:108"><expr pos:start="655:43" pos:end="655:107"><call pos:start="655:43" pos:end="655:107"><name pos:start="655:43" pos:end="655:48">av_log</name><argument_list pos:start="655:49" pos:end="655:107">(<argument pos:start="655:50" pos:end="655:50"><expr pos:start="655:50" pos:end="655:50"><name pos:start="655:50" pos:end="655:50">c</name></expr></argument>, <argument pos:start="655:53" pos:end="655:63"><expr pos:start="655:53" pos:end="655:63"><name pos:start="655:53" pos:end="655:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="655:66" pos:end="655:106"><expr pos:start="655:66" pos:end="655:106"><literal type="string" pos:start="655:66" pos:end="655:106">"luma BICUBIC / chroma BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="657:9" pos:end="657:86">else if <condition pos:start="657:17" pos:end="657:33">(<expr pos:start="657:18" pos:end="657:32"><name pos:start="657:18" pos:end="657:22">flags</name><operator pos:start="657:23" pos:end="657:23">&amp;</operator><name pos:start="657:24" pos:end="657:32">SWS_GAUSS</name></expr>)</condition><block type="pseudo" pos:start="657:43" pos:end="657:86"><block_content pos:start="657:43" pos:end="657:86">         <expr_stmt pos:start="657:43" pos:end="657:86"><expr pos:start="657:43" pos:end="657:85"><call pos:start="657:43" pos:end="657:85"><name pos:start="657:43" pos:end="657:48">av_log</name><argument_list pos:start="657:49" pos:end="657:85">(<argument pos:start="657:50" pos:end="657:50"><expr pos:start="657:50" pos:end="657:50"><name pos:start="657:50" pos:end="657:50">c</name></expr></argument>, <argument pos:start="657:53" pos:end="657:63"><expr pos:start="657:53" pos:end="657:63"><name pos:start="657:53" pos:end="657:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="657:66" pos:end="657:84"><expr pos:start="657:66" pos:end="657:84"><literal type="string" pos:start="657:66" pos:end="657:84">"Gaussian scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="659:9" pos:end="659:82">else if <condition pos:start="659:17" pos:end="659:32">(<expr pos:start="659:18" pos:end="659:31"><name pos:start="659:18" pos:end="659:22">flags</name><operator pos:start="659:23" pos:end="659:23">&amp;</operator><name pos:start="659:24" pos:end="659:31">SWS_SINC</name></expr>)</condition><block type="pseudo" pos:start="659:43" pos:end="659:82"><block_content pos:start="659:43" pos:end="659:82">          <expr_stmt pos:start="659:43" pos:end="659:82"><expr pos:start="659:43" pos:end="659:81"><call pos:start="659:43" pos:end="659:81"><name pos:start="659:43" pos:end="659:48">av_log</name><argument_list pos:start="659:49" pos:end="659:81">(<argument pos:start="659:50" pos:end="659:50"><expr pos:start="659:50" pos:end="659:50"><name pos:start="659:50" pos:end="659:50">c</name></expr></argument>, <argument pos:start="659:53" pos:end="659:63"><expr pos:start="659:53" pos:end="659:63"><name pos:start="659:53" pos:end="659:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="659:66" pos:end="659:80"><expr pos:start="659:66" pos:end="659:80"><literal type="string" pos:start="659:66" pos:end="659:80">"Sinc scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="661:9" pos:end="661:85">else if <condition pos:start="661:17" pos:end="661:35">(<expr pos:start="661:18" pos:end="661:34"><name pos:start="661:18" pos:end="661:22">flags</name><operator pos:start="661:23" pos:end="661:23">&amp;</operator><name pos:start="661:24" pos:end="661:34">SWS_LANCZOS</name></expr>)</condition><block type="pseudo" pos:start="661:43" pos:end="661:85"><block_content pos:start="661:43" pos:end="661:85">       <expr_stmt pos:start="661:43" pos:end="661:85"><expr pos:start="661:43" pos:end="661:84"><call pos:start="661:43" pos:end="661:84"><name pos:start="661:43" pos:end="661:48">av_log</name><argument_list pos:start="661:49" pos:end="661:84">(<argument pos:start="661:50" pos:end="661:50"><expr pos:start="661:50" pos:end="661:50"><name pos:start="661:50" pos:end="661:50">c</name></expr></argument>, <argument pos:start="661:53" pos:end="661:63"><expr pos:start="661:53" pos:end="661:63"><name pos:start="661:53" pos:end="661:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="661:66" pos:end="661:83"><expr pos:start="661:66" pos:end="661:83"><literal type="string" pos:start="661:66" pos:end="661:83">"Lanczos scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="663:9" pos:end="663:92">else if <condition pos:start="663:17" pos:end="663:34">(<expr pos:start="663:18" pos:end="663:33"><name pos:start="663:18" pos:end="663:22">flags</name><operator pos:start="663:23" pos:end="663:23">&amp;</operator><name pos:start="663:24" pos:end="663:33">SWS_SPLINE</name></expr>)</condition><block type="pseudo" pos:start="663:43" pos:end="663:92"><block_content pos:start="663:43" pos:end="663:92">        <expr_stmt pos:start="663:43" pos:end="663:92"><expr pos:start="663:43" pos:end="663:91"><call pos:start="663:43" pos:end="663:91"><name pos:start="663:43" pos:end="663:48">av_log</name><argument_list pos:start="663:49" pos:end="663:91">(<argument pos:start="663:50" pos:end="663:50"><expr pos:start="663:50" pos:end="663:50"><name pos:start="663:50" pos:end="663:50">c</name></expr></argument>, <argument pos:start="663:53" pos:end="663:63"><expr pos:start="663:53" pos:end="663:63"><name pos:start="663:53" pos:end="663:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="663:66" pos:end="663:90"><expr pos:start="663:66" pos:end="663:90"><literal type="string" pos:start="663:66" pos:end="663:90">"Bicubic spline scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="665:9" pos:end="665:89">else<block type="pseudo" pos:start="665:43" pos:end="665:89"><block_content pos:start="665:43" pos:end="665:89">                              <expr_stmt pos:start="665:43" pos:end="665:89"><expr pos:start="665:43" pos:end="665:88"><call pos:start="665:43" pos:end="665:88"><name pos:start="665:43" pos:end="665:48">av_log</name><argument_list pos:start="665:49" pos:end="665:88">(<argument pos:start="665:50" pos:end="665:50"><expr pos:start="665:50" pos:end="665:50"><name pos:start="665:50" pos:end="665:50">c</name></expr></argument>, <argument pos:start="665:53" pos:end="665:63"><expr pos:start="665:53" pos:end="665:63"><name pos:start="665:53" pos:end="665:63">AV_LOG_INFO</name></expr></argument>, <argument pos:start="665:66" pos:end="665:87"><expr pos:start="665:66" pos:end="665:87"><literal type="string" pos:start="665:66" pos:end="665:87">"ehh flags invalid?! "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="669:9" pos:end="687:47"><expr pos:start="669:9" pos:end="687:46"><call pos:start="669:9" pos:end="687:46"><name pos:start="669:9" pos:end="669:14">av_log</name><argument_list pos:start="669:15" pos:end="687:46">(<argument pos:start="669:16" pos:end="669:16"><expr pos:start="669:16" pos:end="669:16"><name pos:start="669:16" pos:end="669:16">c</name></expr></argument>, <argument pos:start="669:19" pos:end="669:29"><expr pos:start="669:19" pos:end="669:29"><name pos:start="669:19" pos:end="669:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="669:32" pos:end="669:49"><expr pos:start="669:32" pos:end="669:49"><literal type="string" pos:start="669:32" pos:end="669:49">"from %s to %s%s "</literal></expr></argument>,

               <argument pos:start="671:16" pos:end="671:45"><expr pos:start="671:16" pos:end="671:45"><call pos:start="671:16" pos:end="671:45"><name pos:start="671:16" pos:end="671:34">av_get_pix_fmt_name</name><argument_list pos:start="671:35" pos:end="671:45">(<argument pos:start="671:36" pos:end="671:44"><expr pos:start="671:36" pos:end="671:44"><name pos:start="671:36" pos:end="671:44">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>,

<cpp:ifdef pos:start="673:1" pos:end="673:18">#<cpp:directive pos:start="673:2" pos:end="673:6">ifdef</cpp:directive> <name pos:start="673:8" pos:end="673:18">DITHER1XBPP</name></cpp:ifdef>

               <argument pos:start="675:16" pos:end="679:96"><expr pos:start="675:16" pos:end="679:96"><ternary pos:start="675:16" pos:end="679:96"><condition pos:start="675:16" pos:end="679:79"><expr pos:start="675:16" pos:end="679:77"><name pos:start="675:16" pos:end="675:24">dstFormat</name> <operator pos:start="675:26" pos:end="675:27">==</operator> <name pos:start="675:29" pos:end="675:42">PIX_FMT_BGR555</name> <operator pos:start="675:44" pos:end="675:45">||</operator> <name pos:start="675:47" pos:end="675:55">dstFormat</name> <operator pos:start="675:57" pos:end="675:58">==</operator> <name pos:start="675:60" pos:end="675:73">PIX_FMT_BGR565</name> <operator pos:start="675:75" pos:end="675:76">||</operator>

               <name pos:start="677:16" pos:end="677:24">dstFormat</name> <operator pos:start="677:26" pos:end="677:27">==</operator> <name pos:start="677:29" pos:end="677:44">PIX_FMT_RGB444BE</name> <operator pos:start="677:46" pos:end="677:47">||</operator> <name pos:start="677:49" pos:end="677:57">dstFormat</name> <operator pos:start="677:59" pos:end="677:60">==</operator> <name pos:start="677:62" pos:end="677:77">PIX_FMT_RGB444LE</name> <operator pos:start="677:79" pos:end="677:80">||</operator>

               <name pos:start="679:16" pos:end="679:24">dstFormat</name> <operator pos:start="679:26" pos:end="679:27">==</operator> <name pos:start="679:29" pos:end="679:44">PIX_FMT_BGR444BE</name> <operator pos:start="679:46" pos:end="679:47">||</operator> <name pos:start="679:49" pos:end="679:57">dstFormat</name> <operator pos:start="679:59" pos:end="679:60">==</operator> <name pos:start="679:62" pos:end="679:77">PIX_FMT_BGR444LE</name></expr> ?</condition><then pos:start="679:81" pos:end="679:91"> <expr pos:start="679:81" pos:end="679:91"><literal type="string" pos:start="679:81" pos:end="679:91">"dithered "</literal></expr> </then><else pos:start="679:93" pos:end="679:96">: <expr pos:start="679:95" pos:end="679:96"><literal type="string" pos:start="679:95" pos:end="679:96">""</literal></expr></else></ternary></expr></argument>,

<cpp:else pos:start="681:1" pos:end="681:5">#<cpp:directive pos:start="681:2" pos:end="681:5">else</cpp:directive></cpp:else>

               <argument pos:start="683:16" pos:end="683:17"><expr pos:start="683:16" pos:end="683:17"><literal type="string" pos:start="683:16" pos:end="683:17">""</literal></expr></argument>,

<cpp:endif pos:start="685:1" pos:end="685:6">#<cpp:directive pos:start="685:2" pos:end="685:6">endif</cpp:directive></cpp:endif>

               <argument pos:start="687:16" pos:end="687:45"><expr pos:start="687:16" pos:end="687:45"><call pos:start="687:16" pos:end="687:45"><name pos:start="687:16" pos:end="687:34">av_get_pix_fmt_name</name><argument_list pos:start="687:35" pos:end="687:45">(<argument pos:start="687:36" pos:end="687:44"><expr pos:start="687:36" pos:end="687:44"><name pos:start="687:36" pos:end="687:44">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="691:9" pos:end="699:83"><if pos:start="691:9" pos:end="691:106">if      <condition pos:start="691:17" pos:end="691:63">(<expr pos:start="691:18" pos:end="691:62"><name pos:start="691:18" pos:end="691:26">HAVE_MMX2</name>     <operator pos:start="691:32" pos:end="691:33">&amp;&amp;</operator> <name pos:start="691:35" pos:end="691:43">cpu_flags</name> <operator pos:start="691:45" pos:end="691:45">&amp;</operator> <name pos:start="691:47" pos:end="691:62">AV_CPU_FLAG_MMX2</name></expr>)</condition><block type="pseudo" pos:start="691:68" pos:end="691:106"><block_content pos:start="691:68" pos:end="691:106">    <expr_stmt pos:start="691:68" pos:end="691:106"><expr pos:start="691:68" pos:end="691:105"><call pos:start="691:68" pos:end="691:105"><name pos:start="691:68" pos:end="691:73">av_log</name><argument_list pos:start="691:74" pos:end="691:105">(<argument pos:start="691:75" pos:end="691:75"><expr pos:start="691:75" pos:end="691:75"><name pos:start="691:75" pos:end="691:75">c</name></expr></argument>, <argument pos:start="691:78" pos:end="691:88"><expr pos:start="691:78" pos:end="691:88"><name pos:start="691:78" pos:end="691:88">AV_LOG_INFO</name></expr></argument>, <argument pos:start="691:91" pos:end="691:104"><expr pos:start="691:91" pos:end="691:104"><literal type="string" pos:start="691:91" pos:end="691:104">"using MMX2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="693:9" pos:end="693:107">else if <condition pos:start="693:17" pos:end="693:64">(<expr pos:start="693:18" pos:end="693:63"><name pos:start="693:18" pos:end="693:30">HAVE_AMD3DNOW</name> <operator pos:start="693:32" pos:end="693:33">&amp;&amp;</operator> <name pos:start="693:35" pos:end="693:43">cpu_flags</name> <operator pos:start="693:45" pos:end="693:45">&amp;</operator> <name pos:start="693:47" pos:end="693:63">AV_CPU_FLAG_3DNOW</name></expr>)</condition><block type="pseudo" pos:start="693:68" pos:end="693:107"><block_content pos:start="693:68" pos:end="693:107">   <expr_stmt pos:start="693:68" pos:end="693:107"><expr pos:start="693:68" pos:end="693:106"><call pos:start="693:68" pos:end="693:106"><name pos:start="693:68" pos:end="693:73">av_log</name><argument_list pos:start="693:74" pos:end="693:106">(<argument pos:start="693:75" pos:end="693:75"><expr pos:start="693:75" pos:end="693:75"><name pos:start="693:75" pos:end="693:75">c</name></expr></argument>, <argument pos:start="693:78" pos:end="693:88"><expr pos:start="693:78" pos:end="693:88"><name pos:start="693:78" pos:end="693:88">AV_LOG_INFO</name></expr></argument>, <argument pos:start="693:91" pos:end="693:105"><expr pos:start="693:91" pos:end="693:105"><literal type="string" pos:start="693:91" pos:end="693:105">"using 3DNOW\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="695:9" pos:end="695:105">else if <condition pos:start="695:17" pos:end="695:62">(<expr pos:start="695:18" pos:end="695:61"><name pos:start="695:18" pos:end="695:25">HAVE_MMX</name>      <operator pos:start="695:32" pos:end="695:33">&amp;&amp;</operator> <name pos:start="695:35" pos:end="695:43">cpu_flags</name> <operator pos:start="695:45" pos:end="695:45">&amp;</operator> <name pos:start="695:47" pos:end="695:61">AV_CPU_FLAG_MMX</name></expr>)</condition><block type="pseudo" pos:start="695:68" pos:end="695:105"><block_content pos:start="695:68" pos:end="695:105">     <expr_stmt pos:start="695:68" pos:end="695:105"><expr pos:start="695:68" pos:end="695:104"><call pos:start="695:68" pos:end="695:104"><name pos:start="695:68" pos:end="695:73">av_log</name><argument_list pos:start="695:74" pos:end="695:104">(<argument pos:start="695:75" pos:end="695:75"><expr pos:start="695:75" pos:end="695:75"><name pos:start="695:75" pos:end="695:75">c</name></expr></argument>, <argument pos:start="695:78" pos:end="695:88"><expr pos:start="695:78" pos:end="695:88"><name pos:start="695:78" pos:end="695:88">AV_LOG_INFO</name></expr></argument>, <argument pos:start="695:91" pos:end="695:103"><expr pos:start="695:91" pos:end="695:103"><literal type="string" pos:start="695:91" pos:end="695:103">"using MMX\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="697:9" pos:end="697:109">else if <condition pos:start="697:17" pos:end="697:66">(<expr pos:start="697:18" pos:end="697:65"><name pos:start="697:18" pos:end="697:29">HAVE_ALTIVEC</name>  <operator pos:start="697:32" pos:end="697:33">&amp;&amp;</operator> <name pos:start="697:35" pos:end="697:43">cpu_flags</name> <operator pos:start="697:45" pos:end="697:45">&amp;</operator> <name pos:start="697:47" pos:end="697:65">AV_CPU_FLAG_ALTIVEC</name></expr>)</condition><block type="pseudo" pos:start="697:68" pos:end="697:109"><block_content pos:start="697:68" pos:end="697:109"> <expr_stmt pos:start="697:68" pos:end="697:109"><expr pos:start="697:68" pos:end="697:108"><call pos:start="697:68" pos:end="697:108"><name pos:start="697:68" pos:end="697:73">av_log</name><argument_list pos:start="697:74" pos:end="697:108">(<argument pos:start="697:75" pos:end="697:75"><expr pos:start="697:75" pos:end="697:75"><name pos:start="697:75" pos:end="697:75">c</name></expr></argument>, <argument pos:start="697:78" pos:end="697:88"><expr pos:start="697:78" pos:end="697:88"><name pos:start="697:78" pos:end="697:88">AV_LOG_INFO</name></expr></argument>, <argument pos:start="697:91" pos:end="697:107"><expr pos:start="697:91" pos:end="697:107"><literal type="string" pos:start="697:91" pos:end="697:107">"using AltiVec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="699:9" pos:end="699:83">else<block type="pseudo" pos:start="699:48" pos:end="699:83"><block_content pos:start="699:48" pos:end="699:83">                                   <expr_stmt pos:start="699:48" pos:end="699:83"><expr pos:start="699:48" pos:end="699:82"><call pos:start="699:48" pos:end="699:82"><name pos:start="699:48" pos:end="699:53">av_log</name><argument_list pos:start="699:54" pos:end="699:82">(<argument pos:start="699:55" pos:end="699:55"><expr pos:start="699:55" pos:end="699:55"><name pos:start="699:55" pos:end="699:55">c</name></expr></argument>, <argument pos:start="699:58" pos:end="699:68"><expr pos:start="699:58" pos:end="699:68"><name pos:start="699:58" pos:end="699:68">AV_LOG_INFO</name></expr></argument>, <argument pos:start="699:71" pos:end="699:81"><expr pos:start="699:71" pos:end="699:81"><literal type="string" pos:start="699:71" pos:end="699:81">"using C\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="703:9" pos:end="703:78"><expr pos:start="703:9" pos:end="703:77"><call pos:start="703:9" pos:end="703:77"><name pos:start="703:9" pos:end="703:14">av_log</name><argument_list pos:start="703:15" pos:end="703:77">(<argument pos:start="703:16" pos:end="703:16"><expr pos:start="703:16" pos:end="703:16"><name pos:start="703:16" pos:end="703:16">c</name></expr></argument>, <argument pos:start="703:19" pos:end="703:32"><expr pos:start="703:19" pos:end="703:32"><name pos:start="703:19" pos:end="703:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="703:35" pos:end="703:52"><expr pos:start="703:35" pos:end="703:52"><literal type="string" pos:start="703:35" pos:end="703:52">"%dx%d -&gt; %dx%d\n"</literal></expr></argument>, <argument pos:start="703:55" pos:end="703:58"><expr pos:start="703:55" pos:end="703:58"><name pos:start="703:55" pos:end="703:58">srcW</name></expr></argument>, <argument pos:start="703:61" pos:end="703:64"><expr pos:start="703:61" pos:end="703:64"><name pos:start="703:61" pos:end="703:64">srcH</name></expr></argument>, <argument pos:start="703:67" pos:end="703:70"><expr pos:start="703:67" pos:end="703:70"><name pos:start="703:67" pos:end="703:70">dstW</name></expr></argument>, <argument pos:start="703:73" pos:end="703:76"><expr pos:start="703:73" pos:end="703:76"><name pos:start="703:73" pos:end="703:76">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="705:9" pos:end="707:75"><expr pos:start="705:9" pos:end="707:74"><call pos:start="705:9" pos:end="707:74"><name pos:start="705:9" pos:end="705:14">av_log</name><argument_list pos:start="705:15" pos:end="707:74">(<argument pos:start="705:16" pos:end="705:16"><expr pos:start="705:16" pos:end="705:16"><name pos:start="705:16" pos:end="705:16">c</name></expr></argument>, <argument pos:start="705:19" pos:end="705:30"><expr pos:start="705:19" pos:end="705:30"><name pos:start="705:19" pos:end="705:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="705:33" pos:end="705:87"><expr pos:start="705:33" pos:end="705:87"><literal type="string" pos:start="705:33" pos:end="705:87">"lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="707:16" pos:end="707:22"><expr pos:start="707:16" pos:end="707:22"><name pos:start="707:16" pos:end="707:22"><name pos:start="707:16" pos:end="707:16">c</name><operator pos:start="707:17" pos:end="707:18">-&gt;</operator><name pos:start="707:19" pos:end="707:22">srcW</name></name></expr></argument>, <argument pos:start="707:25" pos:end="707:31"><expr pos:start="707:25" pos:end="707:31"><name pos:start="707:25" pos:end="707:31"><name pos:start="707:25" pos:end="707:25">c</name><operator pos:start="707:26" pos:end="707:27">-&gt;</operator><name pos:start="707:28" pos:end="707:31">srcH</name></name></expr></argument>, <argument pos:start="707:34" pos:end="707:40"><expr pos:start="707:34" pos:end="707:40"><name pos:start="707:34" pos:end="707:40"><name pos:start="707:34" pos:end="707:34">c</name><operator pos:start="707:35" pos:end="707:36">-&gt;</operator><name pos:start="707:37" pos:end="707:40">dstW</name></name></expr></argument>, <argument pos:start="707:43" pos:end="707:49"><expr pos:start="707:43" pos:end="707:49"><name pos:start="707:43" pos:end="707:49"><name pos:start="707:43" pos:end="707:43">c</name><operator pos:start="707:44" pos:end="707:45">-&gt;</operator><name pos:start="707:46" pos:end="707:49">dstH</name></name></expr></argument>, <argument pos:start="707:52" pos:end="707:61"><expr pos:start="707:52" pos:end="707:61"><name pos:start="707:52" pos:end="707:61"><name pos:start="707:52" pos:end="707:52">c</name><operator pos:start="707:53" pos:end="707:54">-&gt;</operator><name pos:start="707:55" pos:end="707:61">lumXInc</name></name></expr></argument>, <argument pos:start="707:64" pos:end="707:73"><expr pos:start="707:64" pos:end="707:73"><name pos:start="707:64" pos:end="707:73"><name pos:start="707:64" pos:end="707:64">c</name><operator pos:start="707:65" pos:end="707:66">-&gt;</operator><name pos:start="707:67" pos:end="707:73">lumYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="709:9" pos:end="711:87"><expr pos:start="709:9" pos:end="711:86"><call pos:start="709:9" pos:end="711:86"><name pos:start="709:9" pos:end="709:14">av_log</name><argument_list pos:start="709:15" pos:end="711:86">(<argument pos:start="709:16" pos:end="709:16"><expr pos:start="709:16" pos:end="709:16"><name pos:start="709:16" pos:end="709:16">c</name></expr></argument>, <argument pos:start="709:19" pos:end="709:30"><expr pos:start="709:19" pos:end="709:30"><name pos:start="709:19" pos:end="709:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="709:33" pos:end="709:87"><expr pos:start="709:33" pos:end="709:87"><literal type="string" pos:start="709:33" pos:end="709:87">"chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="711:16" pos:end="711:25"><expr pos:start="711:16" pos:end="711:25"><name pos:start="711:16" pos:end="711:25"><name pos:start="711:16" pos:end="711:16">c</name><operator pos:start="711:17" pos:end="711:18">-&gt;</operator><name pos:start="711:19" pos:end="711:25">chrSrcW</name></name></expr></argument>, <argument pos:start="711:28" pos:end="711:37"><expr pos:start="711:28" pos:end="711:37"><name pos:start="711:28" pos:end="711:37"><name pos:start="711:28" pos:end="711:28">c</name><operator pos:start="711:29" pos:end="711:30">-&gt;</operator><name pos:start="711:31" pos:end="711:37">chrSrcH</name></name></expr></argument>, <argument pos:start="711:40" pos:end="711:49"><expr pos:start="711:40" pos:end="711:49"><name pos:start="711:40" pos:end="711:49"><name pos:start="711:40" pos:end="711:40">c</name><operator pos:start="711:41" pos:end="711:42">-&gt;</operator><name pos:start="711:43" pos:end="711:49">chrDstW</name></name></expr></argument>, <argument pos:start="711:52" pos:end="711:61"><expr pos:start="711:52" pos:end="711:61"><name pos:start="711:52" pos:end="711:61"><name pos:start="711:52" pos:end="711:52">c</name><operator pos:start="711:53" pos:end="711:54">-&gt;</operator><name pos:start="711:55" pos:end="711:61">chrDstH</name></name></expr></argument>, <argument pos:start="711:64" pos:end="711:73"><expr pos:start="711:64" pos:end="711:73"><name pos:start="711:64" pos:end="711:73"><name pos:start="711:64" pos:end="711:64">c</name><operator pos:start="711:65" pos:end="711:66">-&gt;</operator><name pos:start="711:67" pos:end="711:73">chrXInc</name></name></expr></argument>, <argument pos:start="711:76" pos:end="711:85"><expr pos:start="711:76" pos:end="711:85"><name pos:start="711:76" pos:end="711:85"><name pos:start="711:76" pos:end="711:76">c</name><operator pos:start="711:77" pos:end="711:78">-&gt;</operator><name pos:start="711:79" pos:end="711:85">chrYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="717:5" pos:end="717:33"><expr pos:start="717:5" pos:end="717:32"><name pos:start="717:5" pos:end="717:14"><name pos:start="717:5" pos:end="717:5">c</name><operator pos:start="717:6" pos:end="717:7">-&gt;</operator><name pos:start="717:8" pos:end="717:14">swScale</name></name><operator pos:start="717:15" pos:end="717:15">=</operator> <call pos:start="717:17" pos:end="717:32"><name pos:start="717:17" pos:end="717:29">ff_getSwsFunc</name><argument_list pos:start="717:30" pos:end="717:32">(<argument pos:start="717:31" pos:end="717:31"><expr pos:start="717:31" pos:end="717:31"><name pos:start="717:31" pos:end="717:31">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="719:5" pos:end="719:13">return <expr pos:start="719:12" pos:end="719:12"><literal type="number" pos:start="719:12" pos:end="719:12">0</literal></expr>;</return>

<label pos:start="721:1" pos:end="721:5"><name pos:start="721:1" pos:end="721:4">fail</name>:</label> <comment type="line" pos:start="721:7" pos:end="721:55">//FIXME replace things by appropriate error codes</comment>

    <return pos:start="723:5" pos:end="723:14">return <expr pos:start="723:12" pos:end="723:13"><operator pos:start="723:12" pos:end="723:12">-</operator><literal type="number" pos:start="723:13" pos:end="723:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
