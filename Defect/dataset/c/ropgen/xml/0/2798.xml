<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2798.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:73"><name pos:start="1:1" pos:end="1:13">tcp_dooptions</name><argument_list pos:start="1:14" pos:end="1:73">(<argument pos:start="1:15" pos:end="1:30">struct tcpcb *tp</argument>, <argument pos:start="1:33" pos:end="1:42">u_char *cp</argument>, <argument pos:start="1:45" pos:end="1:51">int cnt</argument>, <argument pos:start="1:54" pos:end="1:72">struct tcpiphdr *ti</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:9" pos:end="69:9">

	<decl_stmt pos:start="5:9" pos:end="5:21"><decl pos:start="5:9" pos:end="5:20"><type pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:16">uint16_t</name></type> <name pos:start="5:18" pos:end="5:20">mss</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:24"><decl pos:start="7:9" pos:end="7:15"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:15">opt</name></decl>, <decl pos:start="7:18" pos:end="7:23"><type ref="prev" pos:start="7:9" pos:end="7:11"/><name pos:start="7:18" pos:end="7:23">optlen</name></decl>;</decl_stmt>



	<expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:18">DEBUG_CALL</name><argument_list pos:start="11:19" pos:end="11:35">(<argument pos:start="11:20" pos:end="11:34"><expr pos:start="11:20" pos:end="11:34"><literal type="string" pos:start="11:20" pos:end="11:34">"tcp_dooptions"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="13:9" pos:end="13:65"><expr pos:start="13:9" pos:end="13:64"><call pos:start="13:9" pos:end="13:64"><name pos:start="13:9" pos:end="13:18">DEBUG_ARGS</name><argument_list pos:start="13:19" pos:end="13:64">(<argument pos:start="13:20" pos:end="13:63"><expr pos:start="13:20" pos:end="13:63"><operator pos:start="13:20" pos:end="13:20">(</operator><name pos:start="13:21" pos:end="13:23">dfd</name><operator pos:start="13:24" pos:end="13:24">,</operator><literal type="string" pos:start="13:25" pos:end="13:46">" tp = %lx  cnt=%i \n"</literal><operator pos:start="13:47" pos:end="13:47">,</operator> <operator pos:start="13:49" pos:end="13:49">(</operator><name pos:start="13:50" pos:end="13:53">long</name> <operator pos:start="13:55" pos:end="13:55">)</operator><name pos:start="13:56" pos:end="13:57">tp</name><operator pos:start="13:58" pos:end="13:58">,</operator> <name pos:start="13:60" pos:end="13:62">cnt</name><operator pos:start="13:63" pos:end="13:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<for pos:start="17:9" pos:end="69:9">for <control pos:start="17:13" pos:end="17:52">(<init pos:start="17:14" pos:end="17:14">;</init> <condition pos:start="17:16" pos:end="17:23"><expr pos:start="17:16" pos:end="17:22"><name pos:start="17:16" pos:end="17:18">cnt</name> <operator pos:start="17:20" pos:end="17:20">&gt;</operator> <literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr>;</condition> <incr pos:start="17:25" pos:end="17:51"><expr pos:start="17:25" pos:end="17:37"><name pos:start="17:25" pos:end="17:27">cnt</name> <operator pos:start="17:29" pos:end="17:30">-=</operator> <name pos:start="17:32" pos:end="17:37">optlen</name></expr><operator pos:start="17:38" pos:end="17:38">,</operator> <expr pos:start="17:40" pos:end="17:51"><name pos:start="17:40" pos:end="17:41">cp</name> <operator pos:start="17:43" pos:end="17:44">+=</operator> <name pos:start="17:46" pos:end="17:51">optlen</name></expr></incr>)</control> <block pos:start="17:54" pos:end="69:9">{<block_content pos:start="19:17" pos:end="67:17">

		<expr_stmt pos:start="19:17" pos:end="19:28"><expr pos:start="19:17" pos:end="19:27"><name pos:start="19:17" pos:end="19:19">opt</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:27"><name pos:start="19:23" pos:end="19:24">cp</name><index pos:start="19:25" pos:end="19:27">[<expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

		<if_stmt pos:start="21:17" pos:end="23:30"><if pos:start="21:17" pos:end="23:30">if <condition pos:start="21:20" pos:end="21:38">(<expr pos:start="21:21" pos:end="21:37"><name pos:start="21:21" pos:end="21:23">opt</name> <operator pos:start="21:25" pos:end="21:26">==</operator> <name pos:start="21:28" pos:end="21:37">TCPOPT_EOL</name></expr>)</condition><block type="pseudo" pos:start="23:25" pos:end="23:30"><block_content pos:start="23:25" pos:end="23:30">

			<break pos:start="23:25" pos:end="23:30">break;</break></block_content></block></if></if_stmt>

		<if_stmt pos:start="25:17" pos:end="37:17"><if pos:start="25:17" pos:end="27:35">if <condition pos:start="25:20" pos:end="25:38">(<expr pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:23">opt</name> <operator pos:start="25:25" pos:end="25:26">==</operator> <name pos:start="25:28" pos:end="25:37">TCPOPT_NOP</name></expr>)</condition><block type="pseudo" pos:start="27:25" pos:end="27:35"><block_content pos:start="27:25" pos:end="27:35">

			<expr_stmt pos:start="27:25" pos:end="27:35"><expr pos:start="27:25" pos:end="27:34"><name pos:start="27:25" pos:end="27:30">optlen</name> <operator pos:start="27:32" pos:end="27:32">=</operator> <literal type="number" pos:start="27:34" pos:end="27:34">1</literal></expr>;</expr_stmt></block_content></block></if>

		<else pos:start="29:17" pos:end="37:17">else <block pos:start="29:22" pos:end="37:17">{<block_content pos:start="31:25" pos:end="35:38">

			<expr_stmt pos:start="31:25" pos:end="31:39"><expr pos:start="31:25" pos:end="31:38"><name pos:start="31:25" pos:end="31:30">optlen</name> <operator pos:start="31:32" pos:end="31:32">=</operator> <name pos:start="31:34" pos:end="31:38"><name pos:start="31:34" pos:end="31:35">cp</name><index pos:start="31:36" pos:end="31:38">[<expr pos:start="31:37" pos:end="31:37"><literal type="number" pos:start="31:37" pos:end="31:37">1</literal></expr>]</index></name></expr>;</expr_stmt>

			<if_stmt pos:start="33:25" pos:end="35:38"><if pos:start="33:25" pos:end="35:38">if <condition pos:start="33:28" pos:end="33:40">(<expr pos:start="33:29" pos:end="33:39"><name pos:start="33:29" pos:end="33:34">optlen</name> <operator pos:start="33:36" pos:end="33:37">&lt;=</operator> <literal type="number" pos:start="33:39" pos:end="33:39">0</literal></expr>)</condition><block type="pseudo" pos:start="35:33" pos:end="35:38"><block_content pos:start="35:33" pos:end="35:38">

				<break pos:start="35:33" pos:end="35:38">break;</break></block_content></block></if></if_stmt>

		</block_content>}</block></else></if_stmt>

		<switch pos:start="39:17" pos:end="67:17">switch <condition pos:start="39:24" pos:end="39:28">(<expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">opt</name></expr>)</condition> <block pos:start="39:30" pos:end="67:17">{<block_content pos:start="43:17" pos:end="65:30">



		<default pos:start="43:17" pos:end="43:24">default:</default>

			<continue pos:start="45:25" pos:end="45:33">continue;</continue>



		<case pos:start="49:17" pos:end="49:35">case <expr pos:start="49:22" pos:end="49:34"><name pos:start="49:22" pos:end="49:34">TCPOPT_MAXSEG</name></expr>:</case>

			<if_stmt pos:start="51:25" pos:end="53:41"><if pos:start="51:25" pos:end="53:41">if <condition pos:start="51:28" pos:end="51:53">(<expr pos:start="51:29" pos:end="51:52"><name pos:start="51:29" pos:end="51:34">optlen</name> <operator pos:start="51:36" pos:end="51:37">!=</operator> <name pos:start="51:39" pos:end="51:52">TCPOLEN_MAXSEG</name></expr>)</condition><block type="pseudo" pos:start="53:33" pos:end="53:41"><block_content pos:start="53:33" pos:end="53:41">

				<continue pos:start="53:33" pos:end="53:41">continue;</continue></block_content></block></if></if_stmt>

			<if_stmt pos:start="55:25" pos:end="57:41"><if pos:start="55:25" pos:end="57:41">if <condition pos:start="55:28" pos:end="55:53">(<expr pos:start="55:29" pos:end="55:52"><operator pos:start="55:29" pos:end="55:29">!</operator><operator pos:start="55:30" pos:end="55:30">(</operator><name pos:start="55:31" pos:end="55:42"><name pos:start="55:31" pos:end="55:32">ti</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:42">ti_flags</name></name> <operator pos:start="55:44" pos:end="55:44">&amp;</operator> <name pos:start="55:46" pos:end="55:51">TH_SYN</name><operator pos:start="55:52" pos:end="55:52">)</operator></expr>)</condition><block type="pseudo" pos:start="57:33" pos:end="57:41"><block_content pos:start="57:33" pos:end="57:41">

				<continue pos:start="57:33" pos:end="57:41">continue;</continue></block_content></block></if></if_stmt>

			<expr_stmt pos:start="59:25" pos:end="59:76"><expr pos:start="59:25" pos:end="59:75"><call pos:start="59:25" pos:end="59:75"><name pos:start="59:25" pos:end="59:30">memcpy</name><argument_list pos:start="59:31" pos:end="59:75">(<argument pos:start="59:32" pos:end="59:44"><expr pos:start="59:32" pos:end="59:44"><operator pos:start="59:32" pos:end="59:32">(</operator><name pos:start="59:33" pos:end="59:36">char</name> <operator pos:start="59:38" pos:end="59:38">*</operator><operator pos:start="59:39" pos:end="59:39">)</operator> <operator pos:start="59:41" pos:end="59:41">&amp;</operator><name pos:start="59:42" pos:end="59:44">mss</name></expr></argument>, <argument pos:start="59:47" pos:end="59:61"><expr pos:start="59:47" pos:end="59:61"><operator pos:start="59:47" pos:end="59:47">(</operator><name pos:start="59:48" pos:end="59:51">char</name> <operator pos:start="59:53" pos:end="59:53">*</operator><operator pos:start="59:54" pos:end="59:54">)</operator> <name pos:start="59:56" pos:end="59:57">cp</name> <operator pos:start="59:59" pos:end="59:59">+</operator> <literal type="number" pos:start="59:61" pos:end="59:61">2</literal></expr></argument>, <argument pos:start="59:64" pos:end="59:74"><expr pos:start="59:64" pos:end="59:74"><sizeof pos:start="59:64" pos:end="59:74">sizeof<argument_list pos:start="59:70" pos:end="59:74">(<argument pos:start="59:71" pos:end="59:73"><expr pos:start="59:71" pos:end="59:73"><name pos:start="59:71" pos:end="59:73">mss</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="61:25" pos:end="61:35"><expr pos:start="61:25" pos:end="61:34"><call pos:start="61:25" pos:end="61:34"><name pos:start="61:25" pos:end="61:29">NTOHS</name><argument_list pos:start="61:30" pos:end="61:34">(<argument pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><name pos:start="61:31" pos:end="61:33">mss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="63:25" pos:end="63:48"><expr pos:start="63:25" pos:end="63:47"><operator pos:start="63:25" pos:end="63:25">(</operator><name pos:start="63:26" pos:end="63:29">void</name><operator pos:start="63:30" pos:end="63:30">)</operator> <call pos:start="63:32" pos:end="63:47"><name pos:start="63:32" pos:end="63:38">tcp_mss</name><argument_list pos:start="63:39" pos:end="63:47">(<argument pos:start="63:40" pos:end="63:41"><expr pos:start="63:40" pos:end="63:41"><name pos:start="63:40" pos:end="63:41">tp</name></expr></argument>, <argument pos:start="63:44" pos:end="63:46"><expr pos:start="63:44" pos:end="63:46"><name pos:start="63:44" pos:end="63:46">mss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="63:57" pos:end="63:75">/* sets t_maxseg */</comment>

			<break pos:start="65:25" pos:end="65:30">break;</break>

		</block_content>}</block></switch>

	</block_content>}</block></for>

</block_content>}</block>
</unit>
