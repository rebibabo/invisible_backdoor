<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24607.c" pos:tabs="8"><function pos:start="1:1" pos:end="267:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_video_out</name><parameter_list pos:start="1:25" pos:end="9:56">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:42"><decl pos:start="3:26" pos:end="3:42"><type pos:start="3:26" pos:end="3:42"><name pos:start="3:26" pos:end="3:37">OutputStream</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:42">ost</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:41"><decl pos:start="5:26" pos:end="5:41"><type pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:36">InputStream</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:41">ist</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:44"><decl pos:start="7:26" pos:end="7:44"><type pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:32">AVFrame</name> <modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:44">in_picture</name></decl></parameter>,

                         <parameter pos:start="9:26" pos:end="9:40"><decl pos:start="9:26" pos:end="9:40"><type pos:start="9:26" pos:end="9:40"><name pos:start="9:26" pos:end="9:28">int</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:40">frame_size</name></decl></parameter>, <parameter pos:start="9:43" pos:end="9:55"><decl pos:start="9:43" pos:end="9:55"><type pos:start="9:43" pos:end="9:55"><name pos:start="9:43" pos:end="9:47">float</name></type> <name pos:start="9:49" pos:end="9:55">quality</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="267:1">{<block_content pos:start="13:5" pos:end="265:5">

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">nb_frames</name></decl>, <decl pos:start="13:20" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:20">i</name></decl>, <decl pos:start="13:23" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:25">ret</name></decl>, <decl pos:start="13:28" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:28" pos:end="13:44">format_video_sync</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:26">final_picture</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">AVCodecContext</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">double</name></type> <name pos:start="19:12" pos:end="19:20">sync_ipts</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:7">enc</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <name pos:start="23:11" pos:end="23:24"><name pos:start="23:11" pos:end="23:13">ost</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:17">st</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:24">codec</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:60"><expr pos:start="27:5" pos:end="27:59"><name pos:start="27:5" pos:end="27:13">sync_ipts</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:34"><name pos:start="27:17" pos:end="27:29">get_sync_ipts</name><argument_list pos:start="27:30" pos:end="27:34">(<argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:33">ost</name></expr></argument>)</argument_list></call> <operator pos:start="27:36" pos:end="27:36">/</operator> <call pos:start="27:38" pos:end="27:59"><name pos:start="27:38" pos:end="27:43">av_q2d</name><argument_list pos:start="27:44" pos:end="27:59">(<argument pos:start="27:45" pos:end="27:58"><expr pos:start="27:45" pos:end="27:58"><name pos:start="27:45" pos:end="27:58"><name pos:start="27:45" pos:end="27:47">enc</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:58">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:46">/* by default, we output a single frame */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:13">nb_frames</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:20"><expr pos:start="37:5" pos:end="37:19"><operator pos:start="37:5" pos:end="37:5">*</operator><name pos:start="37:6" pos:end="37:15">frame_size</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:21">format_video_sync</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:41">video_sync_method</name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:77"><if pos:start="43:5" pos:end="47:77">if <condition pos:start="43:8" pos:end="43:30">(<expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:25">format_video_sync</name> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <literal type="number" pos:start="43:29" pos:end="43:29">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="47:77"><block_content pos:start="45:9" pos:end="47:77">

        <expr_stmt pos:start="45:9" pos:end="47:77"><expr pos:start="45:9" pos:end="47:76"><name pos:start="45:9" pos:end="45:25">format_video_sync</name> <operator pos:start="45:27" pos:end="45:27">=</operator> <ternary pos:start="45:29" pos:end="47:76"><condition pos:start="45:29" pos:end="45:70"><expr pos:start="45:29" pos:end="45:68"><operator pos:start="45:29" pos:end="45:29">(</operator><name pos:start="45:30" pos:end="45:46"><name pos:start="45:30" pos:end="45:30">s</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:39">oformat</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:46">flags</name></name> <operator pos:start="45:48" pos:end="45:48">&amp;</operator> <name pos:start="45:50" pos:end="45:67">AVFMT_NOTIMESTAMPS</name><operator pos:start="45:68" pos:end="45:68">)</operator></expr> ?</condition><then pos:start="45:72" pos:end="45:72"> <expr pos:start="45:72" pos:end="45:72"><literal type="number" pos:start="45:72" pos:end="45:72">0</literal></expr> </then><else pos:start="45:74" pos:end="47:76">:

                            <expr pos:start="47:29" pos:end="47:76"><ternary pos:start="47:29" pos:end="47:76"><condition pos:start="47:29" pos:end="47:70"><expr pos:start="47:29" pos:end="47:68"><operator pos:start="47:29" pos:end="47:29">(</operator><name pos:start="47:30" pos:end="47:46"><name pos:start="47:30" pos:end="47:30">s</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:39">oformat</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:46">flags</name></name> <operator pos:start="47:48" pos:end="47:48">&amp;</operator> <name pos:start="47:50" pos:end="47:67">AVFMT_VARIABLE_FPS</name><operator pos:start="47:68" pos:end="47:68">)</operator></expr> ?</condition><then pos:start="47:72" pos:end="47:72"> <expr pos:start="47:72" pos:end="47:72"><literal type="number" pos:start="47:72" pos:end="47:72">2</literal></expr> </then><else pos:start="47:74" pos:end="47:76">: <expr pos:start="47:76" pos:end="47:76"><literal type="number" pos:start="47:76" pos:end="47:76">1</literal></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="93:42"><if pos:start="51:5" pos:end="91:5">if <condition pos:start="51:8" pos:end="51:26">(<expr pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:25">format_video_sync</name></expr>)</condition> <block pos:start="51:28" pos:end="91:5">{<block_content pos:start="53:9" pos:end="89:9">

        <decl_stmt pos:start="53:9" pos:end="53:51"><decl pos:start="53:9" pos:end="53:50"><type pos:start="53:9" pos:end="53:14"><name pos:start="53:9" pos:end="53:14">double</name></type> <name pos:start="53:16" pos:end="53:21">vdelta</name> <init pos:start="53:23" pos:end="53:50">= <expr pos:start="53:25" pos:end="53:50"><name pos:start="53:25" pos:end="53:33">sync_ipts</name> <operator pos:start="53:35" pos:end="53:35">-</operator> <name pos:start="53:37" pos:end="53:50"><name pos:start="53:37" pos:end="53:39">ost</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:50">sync_opts</name></name></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:start="55:9" pos:end="55:74">//FIXME set to 0.5 after we fix some dts/pts bugs like in avidec.c</comment>

        <if_stmt pos:start="57:9" pos:end="73:39"><if pos:start="57:9" pos:end="59:26">if <condition pos:start="57:12" pos:end="57:26">(<expr pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:18">vdelta</name> <operator pos:start="57:20" pos:end="57:20">&lt;</operator> <operator pos:start="57:22" pos:end="57:22">-</operator><literal type="number" pos:start="57:23" pos:end="57:25">1.1</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:26"><block_content pos:start="59:13" pos:end="59:26">

            <expr_stmt pos:start="59:13" pos:end="59:26"><expr pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:21">nb_frames</name> <operator pos:start="59:23" pos:end="59:23">=</operator> <literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="61:9" pos:end="71:9">else if <condition pos:start="61:17" pos:end="61:40">(<expr pos:start="61:18" pos:end="61:39"><name pos:start="61:18" pos:end="61:34">format_video_sync</name> <operator pos:start="61:36" pos:end="61:37">==</operator> <literal type="number" pos:start="61:39" pos:end="61:39">2</literal></expr>)</condition> <block pos:start="61:42" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:50">

            <if_stmt pos:start="63:13" pos:end="69:50"><if pos:start="63:13" pos:end="67:13">if<condition pos:start="63:15" pos:end="63:28">(<expr pos:start="63:16" pos:end="63:27"><name pos:start="63:16" pos:end="63:21">vdelta</name><operator pos:start="63:22" pos:end="63:23">&lt;=</operator><operator pos:start="63:24" pos:end="63:24">-</operator><literal type="number" pos:start="63:25" pos:end="63:27">0.6</literal></expr>)</condition><block pos:start="63:29" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:28">

                <expr_stmt pos:start="65:17" pos:end="65:28"><expr pos:start="65:17" pos:end="65:27"><name pos:start="65:17" pos:end="65:25">nb_frames</name><operator pos:start="65:26" pos:end="65:26">=</operator><literal type="number" pos:start="65:27" pos:end="65:27">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if><if type="elseif" pos:start="67:14" pos:end="69:50">else if<condition pos:start="67:21" pos:end="67:32">(<expr pos:start="67:22" pos:end="67:31"><name pos:start="67:22" pos:end="67:27">vdelta</name><operator pos:start="67:28" pos:end="67:28">&gt;</operator><literal type="number" pos:start="67:29" pos:end="67:31">0.6</literal></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:50"><block_content pos:start="69:17" pos:end="69:50">

                <expr_stmt pos:start="69:17" pos:end="69:50"><expr pos:start="69:17" pos:end="69:49"><name pos:start="69:17" pos:end="69:30"><name pos:start="69:17" pos:end="69:19">ost</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:30">sync_opts</name></name><operator pos:start="69:31" pos:end="69:31">=</operator> <call pos:start="69:33" pos:end="69:49"><name pos:start="69:33" pos:end="69:38">lrintf</name><argument_list pos:start="69:39" pos:end="69:49">(<argument pos:start="69:40" pos:end="69:48"><expr pos:start="69:40" pos:end="69:48"><name pos:start="69:40" pos:end="69:48">sync_ipts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="71:10" pos:end="73:39">else if <condition pos:start="71:18" pos:end="71:31">(<expr pos:start="71:19" pos:end="71:30"><name pos:start="71:19" pos:end="71:24">vdelta</name> <operator pos:start="71:26" pos:end="71:26">&gt;</operator> <literal type="number" pos:start="71:28" pos:end="71:30">1.1</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:39"><block_content pos:start="73:13" pos:end="73:39">

            <expr_stmt pos:start="73:13" pos:end="73:39"><expr pos:start="73:13" pos:end="73:38"><name pos:start="73:13" pos:end="73:21">nb_frames</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <call pos:start="73:25" pos:end="73:38"><name pos:start="73:25" pos:end="73:30">lrintf</name><argument_list pos:start="73:31" pos:end="73:38">(<argument pos:start="73:32" pos:end="73:37"><expr pos:start="73:32" pos:end="73:37"><name pos:start="73:32" pos:end="73:37">vdelta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="line" pos:start="75:1" pos:end="75:146">//fprintf(stderr, "vdelta:%f, ost-&gt;sync_opts:%"PRId64", ost-&gt;sync_ipts:%f nb_frames:%d\n", vdelta, ost-&gt;sync_opts, get_sync_ipts(ost), nb_frames);</comment>

        <if_stmt pos:start="77:9" pos:end="89:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:27">(<expr pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:21">nb_frames</name> <operator pos:start="77:23" pos:end="77:24">==</operator> <literal type="number" pos:start="77:26" pos:end="77:26">0</literal></expr>)</condition><block pos:start="77:28" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:56">

            <expr_stmt pos:start="79:13" pos:end="79:29"><expr pos:start="79:13" pos:end="79:28"><operator pos:start="79:13" pos:end="79:14">++</operator><name pos:start="79:15" pos:end="79:28">nb_frames_drop</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:56"><expr pos:start="81:13" pos:end="81:55"><call pos:start="81:13" pos:end="81:55"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="81:55">(<argument pos:start="81:20" pos:end="81:23"><expr pos:start="81:20" pos:end="81:23"><name pos:start="81:20" pos:end="81:23">NULL</name></expr></argument>, <argument pos:start="81:26" pos:end="81:39"><expr pos:start="81:26" pos:end="81:39"><name pos:start="81:26" pos:end="81:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="81:42" pos:end="81:54"><expr pos:start="81:42" pos:end="81:54"><literal type="string" pos:start="81:42" pos:end="81:54">"*** drop!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="83:10" pos:end="89:9">else if <condition pos:start="83:18" pos:end="83:32">(<expr pos:start="83:19" pos:end="83:31"><name pos:start="83:19" pos:end="83:27">nb_frames</name> <operator pos:start="83:29" pos:end="83:29">&gt;</operator> <literal type="number" pos:start="83:31" pos:end="83:31">1</literal></expr>)</condition> <block pos:start="83:34" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:71">

            <expr_stmt pos:start="85:13" pos:end="85:43"><expr pos:start="85:13" pos:end="85:42"><name pos:start="85:13" pos:end="85:25">nb_frames_dup</name> <operator pos:start="85:27" pos:end="85:28">+=</operator> <name pos:start="85:30" pos:end="85:38">nb_frames</name> <operator pos:start="85:40" pos:end="85:40">-</operator> <literal type="number" pos:start="85:42" pos:end="85:42">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:71"><expr pos:start="87:13" pos:end="87:70"><call pos:start="87:13" pos:end="87:70"><name pos:start="87:13" pos:end="87:18">av_log</name><argument_list pos:start="87:19" pos:end="87:70">(<argument pos:start="87:20" pos:end="87:23"><expr pos:start="87:20" pos:end="87:23"><name pos:start="87:20" pos:end="87:23">NULL</name></expr></argument>, <argument pos:start="87:26" pos:end="87:39"><expr pos:start="87:26" pos:end="87:39"><name pos:start="87:26" pos:end="87:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="87:42" pos:end="87:56"><expr pos:start="87:42" pos:end="87:56"><literal type="string" pos:start="87:42" pos:end="87:56">"*** %d dup!\n"</literal></expr></argument>, <argument pos:start="87:59" pos:end="87:69"><expr pos:start="87:59" pos:end="87:69"><name pos:start="87:59" pos:end="87:67">nb_frames</name><operator pos:start="87:68" pos:end="87:68">-</operator><literal type="number" pos:start="87:69" pos:end="87:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="91:6" pos:end="93:42">else<block type="pseudo" pos:start="93:9" pos:end="93:42"><block_content pos:start="93:9" pos:end="93:42">

        <expr_stmt pos:start="93:9" pos:end="93:42"><expr pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:11">ost</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:22">sync_opts</name></name><operator pos:start="93:23" pos:end="93:23">=</operator> <call pos:start="93:25" pos:end="93:41"><name pos:start="93:25" pos:end="93:30">lrintf</name><argument_list pos:start="93:31" pos:end="93:41">(<argument pos:start="93:32" pos:end="93:40"><expr pos:start="93:32" pos:end="93:40"><name pos:start="93:32" pos:end="93:40">sync_ipts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:70"><expr pos:start="97:5" pos:end="97:69"><name pos:start="97:5" pos:end="97:13">nb_frames</name> <operator pos:start="97:15" pos:end="97:15">=</operator> <call pos:start="97:17" pos:end="97:69"><name pos:start="97:17" pos:end="97:21">FFMIN</name><argument_list pos:start="97:22" pos:end="97:69">(<argument pos:start="97:23" pos:end="97:31"><expr pos:start="97:23" pos:end="97:31"><name pos:start="97:23" pos:end="97:31">nb_frames</name></expr></argument>, <argument pos:start="97:34" pos:end="97:68"><expr pos:start="97:34" pos:end="97:68"><name pos:start="97:34" pos:end="97:48"><name pos:start="97:34" pos:end="97:36">ost</name><operator pos:start="97:37" pos:end="97:38">-&gt;</operator><name pos:start="97:39" pos:end="97:48">max_frames</name></name> <operator pos:start="97:50" pos:end="97:50">-</operator> <name pos:start="97:52" pos:end="97:68"><name pos:start="97:52" pos:end="97:54">ost</name><operator pos:start="97:55" pos:end="97:56">-&gt;</operator><name pos:start="97:57" pos:end="97:68">frame_number</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="101:15"><if pos:start="99:5" pos:end="101:15">if <condition pos:start="99:8" pos:end="99:23">(<expr pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:17">nb_frames</name> <operator pos:start="99:19" pos:end="99:20">&lt;=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:15"><block_content pos:start="101:9" pos:end="101:15">

        <return pos:start="101:9" pos:end="101:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:60"><expr pos:start="105:5" pos:end="105:59"><call pos:start="105:5" pos:end="105:59"><name pos:start="105:5" pos:end="105:21">do_video_resample</name><argument_list pos:start="105:22" pos:end="105:59">(<argument pos:start="105:23" pos:end="105:25"><expr pos:start="105:23" pos:end="105:25"><name pos:start="105:23" pos:end="105:25">ost</name></expr></argument>, <argument pos:start="105:28" pos:end="105:30"><expr pos:start="105:28" pos:end="105:30"><name pos:start="105:28" pos:end="105:30">ist</name></expr></argument>, <argument pos:start="105:33" pos:end="105:42"><expr pos:start="105:33" pos:end="105:42"><name pos:start="105:33" pos:end="105:42">in_picture</name></expr></argument>, <argument pos:start="105:45" pos:end="105:58"><expr pos:start="105:45" pos:end="105:58"><operator pos:start="105:45" pos:end="105:45">&amp;</operator><name pos:start="105:46" pos:end="105:58">final_picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:36">/* duplicates frame if needed */</comment>

    <for pos:start="111:5" pos:end="265:5">for<control pos:start="111:8" pos:end="111:28">(<init pos:start="111:9" pos:end="111:12"><expr pos:start="111:9" pos:end="111:11"><name pos:start="111:9" pos:end="111:9">i</name><operator pos:start="111:10" pos:end="111:10">=</operator><literal type="number" pos:start="111:11" pos:end="111:11">0</literal></expr>;</init><condition pos:start="111:13" pos:end="111:24"><expr pos:start="111:13" pos:end="111:23"><name pos:start="111:13" pos:end="111:13">i</name><operator pos:start="111:14" pos:end="111:14">&lt;</operator><name pos:start="111:15" pos:end="111:23">nb_frames</name></expr>;</condition><incr pos:start="111:25" pos:end="111:27"><expr pos:start="111:25" pos:end="111:27"><name pos:start="111:25" pos:end="111:25">i</name><operator pos:start="111:26" pos:end="111:27">++</operator></expr></incr>)</control> <block pos:start="111:30" pos:end="265:5">{<block_content pos:start="113:9" pos:end="263:28">

        <decl_stmt pos:start="113:9" pos:end="113:21"><decl pos:start="113:9" pos:end="113:20"><type pos:start="113:9" pos:end="113:16"><name pos:start="113:9" pos:end="113:16">AVPacket</name></type> <name pos:start="113:18" pos:end="113:20">pkt</name></decl>;</decl_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:29"><expr pos:start="115:9" pos:end="115:28"><call pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:22">av_init_packet</name><argument_list pos:start="115:23" pos:end="115:28">(<argument pos:start="115:24" pos:end="115:27"><expr pos:start="115:24" pos:end="115:27"><operator pos:start="115:24" pos:end="115:24">&amp;</operator><name pos:start="115:25" pos:end="115:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:37"><expr pos:start="117:9" pos:end="117:36"><name pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:11">pkt</name><operator pos:start="117:12" pos:end="117:12">.</operator><name pos:start="117:13" pos:end="117:24">stream_index</name></name><operator pos:start="117:25" pos:end="117:25">=</operator> <name pos:start="117:27" pos:end="117:36"><name pos:start="117:27" pos:end="117:29">ost</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:36">index</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="259:9"><if pos:start="121:9" pos:end="145:9">if <condition pos:start="121:12" pos:end="121:49">(<expr pos:start="121:13" pos:end="121:48"><name pos:start="121:13" pos:end="121:29"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:22">oformat</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:29">flags</name></name> <operator pos:start="121:31" pos:end="121:31">&amp;</operator> <name pos:start="121:33" pos:end="121:48">AVFMT_RAWPICTURE</name></expr>)</condition> <block pos:start="121:51" pos:end="145:9">{<block_content pos:start="129:13" pos:end="143:73">

            <comment type="block" pos:start="123:13" pos:end="127:25">/* raw pictures are written as AVPicture structure to

               avoid any copies. We support temporarily the older

               method. */</comment>

            <expr_stmt pos:start="129:13" pos:end="129:78"><expr pos:start="129:13" pos:end="129:77"><name pos:start="129:13" pos:end="129:46"><name pos:start="129:13" pos:end="129:15">enc</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:28">coded_frame</name><operator pos:start="129:29" pos:end="129:30">-&gt;</operator><name pos:start="129:31" pos:end="129:46">interlaced_frame</name></name> <operator pos:start="129:48" pos:end="129:48">=</operator> <name pos:start="129:50" pos:end="129:77"><name pos:start="129:50" pos:end="129:59">in_picture</name><operator pos:start="129:60" pos:end="129:61">-&gt;</operator><name pos:start="129:62" pos:end="129:77">interlaced_frame</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:77"><expr pos:start="131:13" pos:end="131:76"><name pos:start="131:13" pos:end="131:45"><name pos:start="131:13" pos:end="131:15">enc</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:28">coded_frame</name><operator pos:start="131:29" pos:end="131:30">-&gt;</operator><name pos:start="131:31" pos:end="131:45">top_field_first</name></name>  <operator pos:start="131:48" pos:end="131:48">=</operator> <name pos:start="131:50" pos:end="131:76"><name pos:start="131:50" pos:end="131:59">in_picture</name><operator pos:start="131:60" pos:end="131:61">-&gt;</operator><name pos:start="131:62" pos:end="131:76">top_field_first</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:47"><expr pos:start="133:13" pos:end="133:46"><name pos:start="133:13" pos:end="133:20"><name pos:start="133:13" pos:end="133:15">pkt</name><operator pos:start="133:16" pos:end="133:16">.</operator><name pos:start="133:17" pos:end="133:20">data</name></name><operator pos:start="133:21" pos:end="133:21">=</operator> <operator pos:start="133:23" pos:end="133:23">(</operator><name pos:start="133:24" pos:end="133:30">uint8_t</name> <operator pos:start="133:32" pos:end="133:32">*</operator><operator pos:start="133:33" pos:end="133:33">)</operator><name pos:start="133:34" pos:end="133:46">final_picture</name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:41"><expr pos:start="135:13" pos:end="135:40"><name pos:start="135:13" pos:end="135:20"><name pos:start="135:13" pos:end="135:15">pkt</name><operator pos:start="135:16" pos:end="135:16">.</operator><name pos:start="135:17" pos:end="135:20">size</name></name><operator pos:start="135:21" pos:end="135:21">=</operator>  <sizeof pos:start="135:24" pos:end="135:40">sizeof<argument_list pos:start="135:30" pos:end="135:40">(<argument pos:start="135:31" pos:end="135:39"><expr pos:start="135:31" pos:end="135:39"><name pos:start="135:31" pos:end="135:39">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:86"><expr pos:start="137:13" pos:end="137:85"><name pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:15">pkt</name><operator pos:start="137:16" pos:end="137:16">.</operator><name pos:start="137:17" pos:end="137:19">pts</name></name><operator pos:start="137:20" pos:end="137:20">=</operator> <call pos:start="137:22" pos:end="137:85"><name pos:start="137:22" pos:end="137:33">av_rescale_q</name><argument_list pos:start="137:34" pos:end="137:85">(<argument pos:start="137:35" pos:end="137:48"><expr pos:start="137:35" pos:end="137:48"><name pos:start="137:35" pos:end="137:48"><name pos:start="137:35" pos:end="137:37">ost</name><operator pos:start="137:38" pos:end="137:39">-&gt;</operator><name pos:start="137:40" pos:end="137:48">sync_opts</name></name></expr></argument>, <argument pos:start="137:51" pos:end="137:64"><expr pos:start="137:51" pos:end="137:64"><name pos:start="137:51" pos:end="137:64"><name pos:start="137:51" pos:end="137:53">enc</name><operator pos:start="137:54" pos:end="137:55">-&gt;</operator><name pos:start="137:56" pos:end="137:64">time_base</name></name></expr></argument>, <argument pos:start="137:67" pos:end="137:84"><expr pos:start="137:67" pos:end="137:84"><name pos:start="137:67" pos:end="137:84"><name pos:start="137:67" pos:end="137:69">ost</name><operator pos:start="137:70" pos:end="137:71">-&gt;</operator><name pos:start="137:72" pos:end="137:73">st</name><operator pos:start="137:74" pos:end="137:75">-&gt;</operator><name pos:start="137:76" pos:end="137:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:41"><expr pos:start="139:13" pos:end="139:40"><name pos:start="139:13" pos:end="139:21"><name pos:start="139:13" pos:end="139:15">pkt</name><operator pos:start="139:16" pos:end="139:16">.</operator><name pos:start="139:17" pos:end="139:21">flags</name></name> <operator pos:start="139:23" pos:end="139:24">|=</operator> <name pos:start="139:26" pos:end="139:40">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:73"><expr pos:start="143:13" pos:end="143:72"><call pos:start="143:13" pos:end="143:72"><name pos:start="143:13" pos:end="143:23">write_frame</name><argument_list pos:start="143:24" pos:end="143:72">(<argument pos:start="143:25" pos:end="143:25"><expr pos:start="143:25" pos:end="143:25"><name pos:start="143:25" pos:end="143:25">s</name></expr></argument>, <argument pos:start="143:28" pos:end="143:31"><expr pos:start="143:28" pos:end="143:31"><operator pos:start="143:28" pos:end="143:28">&amp;</operator><name pos:start="143:29" pos:end="143:31">pkt</name></expr></argument>, <argument pos:start="143:34" pos:end="143:47"><expr pos:start="143:34" pos:end="143:47"><name pos:start="143:34" pos:end="143:47"><name pos:start="143:34" pos:end="143:36">ost</name><operator pos:start="143:37" pos:end="143:38">-&gt;</operator><name pos:start="143:39" pos:end="143:40">st</name><operator pos:start="143:41" pos:end="143:42">-&gt;</operator><name pos:start="143:43" pos:end="143:47">codec</name></name></expr></argument>, <argument pos:start="143:50" pos:end="143:71"><expr pos:start="143:50" pos:end="143:71"><name pos:start="143:50" pos:end="143:71"><name pos:start="143:50" pos:end="143:52">ost</name><operator pos:start="143:53" pos:end="143:54">-&gt;</operator><name pos:start="143:55" pos:end="143:71">bitstream_filters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="145:11" pos:end="259:9">else <block pos:start="145:16" pos:end="259:9">{<block_content pos:start="147:13" pos:end="257:13">

            <decl_stmt pos:start="147:13" pos:end="147:32"><decl pos:start="147:13" pos:end="147:31"><type pos:start="147:13" pos:end="147:19"><name pos:start="147:13" pos:end="147:19">AVFrame</name></type> <name pos:start="147:21" pos:end="147:31">big_picture</name></decl>;</decl_stmt>



            <expr_stmt pos:start="151:13" pos:end="151:40"><expr pos:start="151:13" pos:end="151:39"><name pos:start="151:13" pos:end="151:23">big_picture</name><operator pos:start="151:24" pos:end="151:24">=</operator> <operator pos:start="151:26" pos:end="151:26">*</operator><name pos:start="151:27" pos:end="151:39">final_picture</name></expr>;</expr_stmt>

            <comment type="block" pos:start="153:13" pos:end="155:26">/* better than nothing: use input picture interlaced

               settings */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:72"><expr pos:start="157:13" pos:end="157:71"><name pos:start="157:13" pos:end="157:40"><name pos:start="157:13" pos:end="157:23">big_picture</name><operator pos:start="157:24" pos:end="157:24">.</operator><name pos:start="157:25" pos:end="157:40">interlaced_frame</name></name> <operator pos:start="157:42" pos:end="157:42">=</operator> <name pos:start="157:44" pos:end="157:71"><name pos:start="157:44" pos:end="157:53">in_picture</name><operator pos:start="157:54" pos:end="157:55">-&gt;</operator><name pos:start="157:56" pos:end="157:71">interlaced_frame</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="169:13"><if pos:start="159:13" pos:end="169:13">if <condition pos:start="159:16" pos:end="159:93">(<expr pos:start="159:17" pos:end="159:92"><name pos:start="159:17" pos:end="159:37"><name pos:start="159:17" pos:end="159:19">ost</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:23">st</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:30">codec</name><operator pos:start="159:31" pos:end="159:32">-&gt;</operator><name pos:start="159:33" pos:end="159:37">flags</name></name> <operator pos:start="159:39" pos:end="159:39">&amp;</operator> <operator pos:start="159:41" pos:end="159:41">(</operator><name pos:start="159:42" pos:end="159:66">CODEC_FLAG_INTERLACED_DCT</name><operator pos:start="159:67" pos:end="159:67">|</operator><name pos:start="159:68" pos:end="159:91">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="159:92" pos:end="159:92">)</operator></expr>)</condition> <block pos:start="159:95" pos:end="169:13">{<block_content pos:start="161:17" pos:end="167:73">

                <if_stmt pos:start="161:17" pos:end="167:73"><if pos:start="161:17" pos:end="163:78">if <condition pos:start="161:20" pos:end="161:47">(<expr pos:start="161:21" pos:end="161:46"><name pos:start="161:21" pos:end="161:40"><name pos:start="161:21" pos:end="161:23">ost</name><operator pos:start="161:24" pos:end="161:25">-&gt;</operator><name pos:start="161:26" pos:end="161:40">top_field_first</name></name> <operator pos:start="161:42" pos:end="161:43">==</operator> <operator pos:start="161:45" pos:end="161:45">-</operator><literal type="number" pos:start="161:46" pos:end="161:46">1</literal></expr>)</condition><block type="pseudo" pos:start="163:21" pos:end="163:78"><block_content pos:start="163:21" pos:end="163:78">

                    <expr_stmt pos:start="163:21" pos:end="163:78"><expr pos:start="163:21" pos:end="163:77"><name pos:start="163:21" pos:end="163:47"><name pos:start="163:21" pos:end="163:31">big_picture</name><operator pos:start="163:32" pos:end="163:32">.</operator><name pos:start="163:33" pos:end="163:47">top_field_first</name></name> <operator pos:start="163:49" pos:end="163:49">=</operator> <name pos:start="163:51" pos:end="163:77"><name pos:start="163:51" pos:end="163:60">in_picture</name><operator pos:start="163:61" pos:end="163:62">-&gt;</operator><name pos:start="163:63" pos:end="163:77">top_field_first</name></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="165:17" pos:end="167:73">else<block type="pseudo" pos:start="167:21" pos:end="167:73"><block_content pos:start="167:21" pos:end="167:73">

                    <expr_stmt pos:start="167:21" pos:end="167:73"><expr pos:start="167:21" pos:end="167:72"><name pos:start="167:21" pos:end="167:47"><name pos:start="167:21" pos:end="167:31">big_picture</name><operator pos:start="167:32" pos:end="167:32">.</operator><name pos:start="167:33" pos:end="167:47">top_field_first</name></name> <operator pos:start="167:49" pos:end="167:49">=</operator> <operator pos:start="167:51" pos:end="167:51">!</operator><operator pos:start="167:52" pos:end="167:52">!</operator><name pos:start="167:53" pos:end="167:72"><name pos:start="167:53" pos:end="167:55">ost</name><operator pos:start="167:56" pos:end="167:57">-&gt;</operator><name pos:start="167:58" pos:end="167:72">top_field_first</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="173:13" pos:end="175:40">/* handles same_quant here. This is not correct because it may

               not be a global option */</comment>

            <expr_stmt pos:start="177:13" pos:end="177:42"><expr pos:start="177:13" pos:end="177:41"><name pos:start="177:13" pos:end="177:31"><name pos:start="177:13" pos:end="177:23">big_picture</name><operator pos:start="177:24" pos:end="177:24">.</operator><name pos:start="177:25" pos:end="177:31">quality</name></name> <operator pos:start="177:33" pos:end="177:33">=</operator> <name pos:start="177:35" pos:end="177:41">quality</name></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="181:42"><if pos:start="179:13" pos:end="181:42">if <condition pos:start="179:16" pos:end="179:35">(<expr pos:start="179:17" pos:end="179:34"><operator pos:start="179:17" pos:end="179:17">!</operator><name pos:start="179:18" pos:end="179:34"><name pos:start="179:18" pos:end="179:20">enc</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:34">me_threshold</name></name></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:42"><block_content pos:start="181:17" pos:end="181:42">

                <expr_stmt pos:start="181:17" pos:end="181:42"><expr pos:start="181:17" pos:end="181:41"><name pos:start="181:17" pos:end="181:37"><name pos:start="181:17" pos:end="181:27">big_picture</name><operator pos:start="181:28" pos:end="181:28">.</operator><name pos:start="181:29" pos:end="181:37">pict_type</name></name> <operator pos:start="181:39" pos:end="181:39">=</operator> <literal type="number" pos:start="181:41" pos:end="181:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="line" pos:start="183:1" pos:end="183:47">//            big_picture.pts = AV_NOPTS_VALUE;</comment>

            <expr_stmt pos:start="185:13" pos:end="185:44"><expr pos:start="185:13" pos:end="185:43"><name pos:start="185:13" pos:end="185:27"><name pos:start="185:13" pos:end="185:23">big_picture</name><operator pos:start="185:24" pos:end="185:24">.</operator><name pos:start="185:25" pos:end="185:27">pts</name></name><operator pos:start="185:28" pos:end="185:28">=</operator> <name pos:start="185:30" pos:end="185:43"><name pos:start="185:30" pos:end="185:32">ost</name><operator pos:start="185:33" pos:end="185:34">-&gt;</operator><name pos:start="185:35" pos:end="185:43">sync_opts</name></name></expr>;</expr_stmt>

<comment type="line" pos:start="187:1" pos:end="187:120">//            big_picture.pts= av_rescale(ost-&gt;sync_opts, AV_TIME_BASE*(int64_t)enc-&gt;time_base.num, enc-&gt;time_base.den);</comment>

<comment type="line" pos:start="189:1" pos:end="189:71">//av_log(NULL, AV_LOG_DEBUG, "%"PRId64" -&gt; encoder\n", ost-&gt;sync_opts);</comment>

            <if_stmt pos:start="191:13" pos:end="199:13"><if pos:start="191:13" pos:end="199:13">if <condition pos:start="191:16" pos:end="193:76">(<expr pos:start="191:17" pos:end="193:75"><name pos:start="191:17" pos:end="191:36"><name pos:start="191:17" pos:end="191:19">ost</name><operator pos:start="191:20" pos:end="191:21">-&gt;</operator><name pos:start="191:22" pos:end="191:36">forced_kf_index</name></name> <operator pos:start="191:38" pos:end="191:38">&lt;</operator> <name pos:start="191:40" pos:end="191:59"><name pos:start="191:40" pos:end="191:42">ost</name><operator pos:start="191:43" pos:end="191:44">-&gt;</operator><name pos:start="191:45" pos:end="191:59">forced_kf_count</name></name> <operator pos:start="191:61" pos:end="191:62">&amp;&amp;</operator>

                <name pos:start="193:17" pos:end="193:31"><name pos:start="193:17" pos:end="193:27">big_picture</name><operator pos:start="193:28" pos:end="193:28">.</operator><name pos:start="193:29" pos:end="193:31">pts</name></name> <operator pos:start="193:33" pos:end="193:34">&gt;=</operator> <name pos:start="193:36" pos:end="193:75"><name pos:start="193:36" pos:end="193:38">ost</name><operator pos:start="193:39" pos:end="193:40">-&gt;</operator><name pos:start="193:41" pos:end="193:53">forced_kf_pts</name><index pos:start="193:54" pos:end="193:75">[<expr pos:start="193:55" pos:end="193:74"><name pos:start="193:55" pos:end="193:74"><name pos:start="193:55" pos:end="193:57">ost</name><operator pos:start="193:58" pos:end="193:59">-&gt;</operator><name pos:start="193:60" pos:end="193:74">forced_kf_index</name></name></expr>]</index></name></expr>)</condition> <block pos:start="193:78" pos:end="199:13">{<block_content pos:start="195:17" pos:end="197:39">

                <expr_stmt pos:start="195:17" pos:end="195:58"><expr pos:start="195:17" pos:end="195:57"><name pos:start="195:17" pos:end="195:37"><name pos:start="195:17" pos:end="195:27">big_picture</name><operator pos:start="195:28" pos:end="195:28">.</operator><name pos:start="195:29" pos:end="195:37">pict_type</name></name> <operator pos:start="195:39" pos:end="195:39">=</operator> <name pos:start="195:41" pos:end="195:57">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:39"><expr pos:start="197:17" pos:end="197:38"><name pos:start="197:17" pos:end="197:36"><name pos:start="197:17" pos:end="197:19">ost</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:36">forced_kf_index</name></name><operator pos:start="197:37" pos:end="197:38">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="201:13" pos:end="205:53"><expr pos:start="201:13" pos:end="205:52"><name pos:start="201:13" pos:end="201:15">ret</name> <operator pos:start="201:17" pos:end="201:17">=</operator> <call pos:start="201:19" pos:end="205:52"><name pos:start="201:19" pos:end="201:38">avcodec_encode_video</name><argument_list pos:start="201:39" pos:end="205:52">(<argument pos:start="201:40" pos:end="201:42"><expr pos:start="201:40" pos:end="201:42"><name pos:start="201:40" pos:end="201:42">enc</name></expr></argument>,

                                       <argument pos:start="203:40" pos:end="203:49"><expr pos:start="203:40" pos:end="203:49"><name pos:start="203:40" pos:end="203:49">bit_buffer</name></expr></argument>, <argument pos:start="203:52" pos:end="203:66"><expr pos:start="203:52" pos:end="203:66"><name pos:start="203:52" pos:end="203:66">bit_buffer_size</name></expr></argument>,

                                       <argument pos:start="205:40" pos:end="205:51"><expr pos:start="205:40" pos:end="205:51"><operator pos:start="205:40" pos:end="205:40">&amp;</operator><name pos:start="205:41" pos:end="205:51">big_picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="207:13" pos:end="213:13"><if pos:start="207:13" pos:end="213:13">if <condition pos:start="207:16" pos:end="207:24">(<expr pos:start="207:17" pos:end="207:23"><name pos:start="207:17" pos:end="207:19">ret</name> <operator pos:start="207:21" pos:end="207:21">&lt;</operator> <literal type="number" pos:start="207:23" pos:end="207:23">0</literal></expr>)</condition> <block pos:start="207:26" pos:end="213:13">{<block_content pos:start="209:17" pos:end="211:32">

                <expr_stmt pos:start="209:17" pos:end="209:70"><expr pos:start="209:17" pos:end="209:69"><call pos:start="209:17" pos:end="209:69"><name pos:start="209:17" pos:end="209:22">av_log</name><argument_list pos:start="209:23" pos:end="209:69">(<argument pos:start="209:24" pos:end="209:27"><expr pos:start="209:24" pos:end="209:27"><name pos:start="209:24" pos:end="209:27">NULL</name></expr></argument>, <argument pos:start="209:30" pos:end="209:41"><expr pos:start="209:30" pos:end="209:41"><name pos:start="209:30" pos:end="209:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="209:44" pos:end="209:68"><expr pos:start="209:44" pos:end="209:68"><literal type="string" pos:start="209:44" pos:end="209:68">"Video encoding failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:32"><expr pos:start="211:17" pos:end="211:31"><call pos:start="211:17" pos:end="211:31"><name pos:start="211:17" pos:end="211:28">exit_program</name><argument_list pos:start="211:29" pos:end="211:31">(<argument pos:start="211:30" pos:end="211:30"><expr pos:start="211:30" pos:end="211:30"><literal type="number" pos:start="211:30" pos:end="211:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="217:13" pos:end="257:13"><if pos:start="217:13" pos:end="257:13">if<condition pos:start="217:15" pos:end="217:21">(<expr pos:start="217:16" pos:end="217:20"><name pos:start="217:16" pos:end="217:18">ret</name><operator pos:start="217:19" pos:end="217:19">&gt;</operator><literal type="number" pos:start="217:20" pos:end="217:20">0</literal></expr>)</condition><block pos:start="217:22" pos:end="257:13">{<block_content pos:start="219:17" pos:end="255:17">

                <expr_stmt pos:start="219:17" pos:end="219:37"><expr pos:start="219:17" pos:end="219:36"><name pos:start="219:17" pos:end="219:24"><name pos:start="219:17" pos:end="219:19">pkt</name><operator pos:start="219:20" pos:end="219:20">.</operator><name pos:start="219:21" pos:end="219:24">data</name></name><operator pos:start="219:25" pos:end="219:25">=</operator> <name pos:start="219:27" pos:end="219:36">bit_buffer</name></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:30"><expr pos:start="221:17" pos:end="221:29"><name pos:start="221:17" pos:end="221:24"><name pos:start="221:17" pos:end="221:19">pkt</name><operator pos:start="221:20" pos:end="221:20">.</operator><name pos:start="221:21" pos:end="221:24">size</name></name><operator pos:start="221:25" pos:end="221:25">=</operator> <name pos:start="221:27" pos:end="221:29">ret</name></expr>;</expr_stmt>

                <if_stmt pos:start="223:17" pos:end="225:101"><if pos:start="223:17" pos:end="225:101">if<condition pos:start="223:19" pos:end="223:59">(<expr pos:start="223:20" pos:end="223:58"><name pos:start="223:20" pos:end="223:40"><name pos:start="223:20" pos:end="223:22">enc</name><operator pos:start="223:23" pos:end="223:24">-&gt;</operator><name pos:start="223:25" pos:end="223:35">coded_frame</name><operator pos:start="223:36" pos:end="223:37">-&gt;</operator><name pos:start="223:38" pos:end="223:40">pts</name></name> <operator pos:start="223:42" pos:end="223:43">!=</operator> <name pos:start="223:45" pos:end="223:58">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="225:21" pos:end="225:101"><block_content pos:start="225:21" pos:end="225:101">

                    <expr_stmt pos:start="225:21" pos:end="225:101"><expr pos:start="225:21" pos:end="225:100"><name pos:start="225:21" pos:end="225:27"><name pos:start="225:21" pos:end="225:23">pkt</name><operator pos:start="225:24" pos:end="225:24">.</operator><name pos:start="225:25" pos:end="225:27">pts</name></name><operator pos:start="225:28" pos:end="225:28">=</operator> <call pos:start="225:30" pos:end="225:100"><name pos:start="225:30" pos:end="225:41">av_rescale_q</name><argument_list pos:start="225:42" pos:end="225:100">(<argument pos:start="225:43" pos:end="225:63"><expr pos:start="225:43" pos:end="225:63"><name pos:start="225:43" pos:end="225:63"><name pos:start="225:43" pos:end="225:45">enc</name><operator pos:start="225:46" pos:end="225:47">-&gt;</operator><name pos:start="225:48" pos:end="225:58">coded_frame</name><operator pos:start="225:59" pos:end="225:60">-&gt;</operator><name pos:start="225:61" pos:end="225:63">pts</name></name></expr></argument>, <argument pos:start="225:66" pos:end="225:79"><expr pos:start="225:66" pos:end="225:79"><name pos:start="225:66" pos:end="225:79"><name pos:start="225:66" pos:end="225:68">enc</name><operator pos:start="225:69" pos:end="225:70">-&gt;</operator><name pos:start="225:71" pos:end="225:79">time_base</name></name></expr></argument>, <argument pos:start="225:82" pos:end="225:99"><expr pos:start="225:82" pos:end="225:99"><name pos:start="225:82" pos:end="225:99"><name pos:start="225:82" pos:end="225:84">ost</name><operator pos:start="225:85" pos:end="225:86">-&gt;</operator><name pos:start="225:87" pos:end="225:88">st</name><operator pos:start="225:89" pos:end="225:90">-&gt;</operator><name pos:start="225:91" pos:end="225:99">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="block" pos:start="227:1" pos:end="231:121">/*av_log(NULL, AV_LOG_DEBUG, "encoder -&gt; %"PRId64"/%"PRId64"\n",

   pkt.pts != AV_NOPTS_VALUE ? av_rescale(pkt.pts, enc-&gt;time_base.den, AV_TIME_BASE*(int64_t)enc-&gt;time_base.num) : -1,

   pkt.dts != AV_NOPTS_VALUE ? av_rescale(pkt.dts, enc-&gt;time_base.den, AV_TIME_BASE*(int64_t)enc-&gt;time_base.num) : -1);*/</comment>



                <if_stmt pos:start="235:17" pos:end="237:49"><if pos:start="235:17" pos:end="237:49">if<condition pos:start="235:19" pos:end="235:47">(<expr pos:start="235:20" pos:end="235:46"><name pos:start="235:20" pos:end="235:46"><name pos:start="235:20" pos:end="235:22">enc</name><operator pos:start="235:23" pos:end="235:24">-&gt;</operator><name pos:start="235:25" pos:end="235:35">coded_frame</name><operator pos:start="235:36" pos:end="235:37">-&gt;</operator><name pos:start="235:38" pos:end="235:46">key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="237:21" pos:end="237:49"><block_content pos:start="237:21" pos:end="237:49">

                    <expr_stmt pos:start="237:21" pos:end="237:49"><expr pos:start="237:21" pos:end="237:48"><name pos:start="237:21" pos:end="237:29"><name pos:start="237:21" pos:end="237:23">pkt</name><operator pos:start="237:24" pos:end="237:24">.</operator><name pos:start="237:25" pos:end="237:29">flags</name></name> <operator pos:start="237:31" pos:end="237:32">|=</operator> <name pos:start="237:34" pos:end="237:48">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:77"><expr pos:start="239:17" pos:end="239:76"><call pos:start="239:17" pos:end="239:76"><name pos:start="239:17" pos:end="239:27">write_frame</name><argument_list pos:start="239:28" pos:end="239:76">(<argument pos:start="239:29" pos:end="239:29"><expr pos:start="239:29" pos:end="239:29"><name pos:start="239:29" pos:end="239:29">s</name></expr></argument>, <argument pos:start="239:32" pos:end="239:35"><expr pos:start="239:32" pos:end="239:35"><operator pos:start="239:32" pos:end="239:32">&amp;</operator><name pos:start="239:33" pos:end="239:35">pkt</name></expr></argument>, <argument pos:start="239:38" pos:end="239:51"><expr pos:start="239:38" pos:end="239:51"><name pos:start="239:38" pos:end="239:51"><name pos:start="239:38" pos:end="239:40">ost</name><operator pos:start="239:41" pos:end="239:42">-&gt;</operator><name pos:start="239:43" pos:end="239:44">st</name><operator pos:start="239:45" pos:end="239:46">-&gt;</operator><name pos:start="239:47" pos:end="239:51">codec</name></name></expr></argument>, <argument pos:start="239:54" pos:end="239:75"><expr pos:start="239:54" pos:end="239:75"><name pos:start="239:54" pos:end="239:75"><name pos:start="239:54" pos:end="239:56">ost</name><operator pos:start="239:57" pos:end="239:58">-&gt;</operator><name pos:start="239:59" pos:end="239:75">bitstream_filters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="241:17" pos:end="241:34"><expr pos:start="241:17" pos:end="241:33"><operator pos:start="241:17" pos:end="241:17">*</operator><name pos:start="241:18" pos:end="241:27">frame_size</name> <operator pos:start="241:29" pos:end="241:29">=</operator> <name pos:start="241:31" pos:end="241:33">ret</name></expr>;</expr_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:34"><expr pos:start="243:17" pos:end="243:33"><name pos:start="243:17" pos:end="243:26">video_size</name> <operator pos:start="243:28" pos:end="243:29">+=</operator> <name pos:start="243:31" pos:end="243:33">ret</name></expr>;</expr_stmt>

                <comment type="line" pos:start="245:17" pos:end="245:67">//fprintf(stderr,"\nFrame: %3d size: %5d type: %d",</comment>

                <comment type="line" pos:start="247:17" pos:end="247:68">//        enc-&gt;frame_number-1, ret, enc-&gt;pict_type);</comment>

                <comment type="block" pos:start="249:17" pos:end="249:45">/* if two pass, output log */</comment>

                <if_stmt pos:start="251:17" pos:end="255:17"><if pos:start="251:17" pos:end="255:17">if <condition pos:start="251:20" pos:end="251:51">(<expr pos:start="251:21" pos:end="251:50"><name pos:start="251:21" pos:end="251:32"><name pos:start="251:21" pos:end="251:23">ost</name><operator pos:start="251:24" pos:end="251:25">-&gt;</operator><name pos:start="251:26" pos:end="251:32">logfile</name></name> <operator pos:start="251:34" pos:end="251:35">&amp;&amp;</operator> <name pos:start="251:37" pos:end="251:50"><name pos:start="251:37" pos:end="251:39">enc</name><operator pos:start="251:40" pos:end="251:41">-&gt;</operator><name pos:start="251:42" pos:end="251:50">stats_out</name></name></expr>)</condition> <block pos:start="251:53" pos:end="255:17">{<block_content pos:start="253:21" pos:end="253:64">

                    <expr_stmt pos:start="253:21" pos:end="253:64"><expr pos:start="253:21" pos:end="253:63"><call pos:start="253:21" pos:end="253:63"><name pos:start="253:21" pos:end="253:27">fprintf</name><argument_list pos:start="253:28" pos:end="253:63">(<argument pos:start="253:29" pos:end="253:40"><expr pos:start="253:29" pos:end="253:40"><name pos:start="253:29" pos:end="253:40"><name pos:start="253:29" pos:end="253:31">ost</name><operator pos:start="253:32" pos:end="253:33">-&gt;</operator><name pos:start="253:34" pos:end="253:40">logfile</name></name></expr></argument>, <argument pos:start="253:43" pos:end="253:46"><expr pos:start="253:43" pos:end="253:46"><literal type="string" pos:start="253:43" pos:end="253:46">"%s"</literal></expr></argument>, <argument pos:start="253:49" pos:end="253:62"><expr pos:start="253:49" pos:end="253:62"><name pos:start="253:49" pos:end="253:62"><name pos:start="253:49" pos:end="253:51">enc</name><operator pos:start="253:52" pos:end="253:53">-&gt;</operator><name pos:start="253:54" pos:end="253:62">stats_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:25"><expr pos:start="261:9" pos:end="261:24"><name pos:start="261:9" pos:end="261:22"><name pos:start="261:9" pos:end="261:11">ost</name><operator pos:start="261:12" pos:end="261:13">-&gt;</operator><name pos:start="261:14" pos:end="261:22">sync_opts</name></name><operator pos:start="261:23" pos:end="261:24">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:28"><expr pos:start="263:9" pos:end="263:27"><name pos:start="263:9" pos:end="263:25"><name pos:start="263:9" pos:end="263:11">ost</name><operator pos:start="263:12" pos:end="263:13">-&gt;</operator><name pos:start="263:14" pos:end="263:25">frame_number</name></name><operator pos:start="263:26" pos:end="263:27">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
