<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24253.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">hds_flush</name><parameter_list pos:start="1:21" pos:end="3:36">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:39"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:57"><decl pos:start="1:42" pos:end="1:57"><type pos:start="1:42" pos:end="1:57"><name pos:start="1:42" pos:end="1:53">OutputStream</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">os</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">final</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:35"><decl pos:start="3:22" pos:end="3:35"><type pos:start="3:22" pos:end="3:35"><name pos:start="3:22" pos:end="3:28">int64_t</name></type> <name pos:start="3:30" pos:end="3:35">end_ts</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">HDSContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">c</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:30"><name pos:start="11:10" pos:end="11:24">target_filename</name><index pos:start="11:25" pos:end="11:30">[<expr pos:start="11:26" pos:end="11:29"><literal type="number" pos:start="11:26" pos:end="11:29">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">index</name> <init pos:start="13:15" pos:end="13:48">= <expr pos:start="13:17" pos:end="13:48"><name pos:start="13:17" pos:end="13:44"><name pos:start="13:17" pos:end="13:17">s</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:26">streams</name><index pos:start="13:27" pos:end="13:44">[<expr pos:start="13:28" pos:end="13:43"><name pos:start="13:28" pos:end="13:43"><name pos:start="13:28" pos:end="13:29">os</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:43">first_stream</name></name></expr>]</index></name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:48">id</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:29">(<expr pos:start="17:9" pos:end="17:28"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:28"><name pos:start="17:10" pos:end="17:11">os</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:28">packets_written</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><call pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:14">avio_flush</name><argument_list pos:start="23:15" pos:end="23:27">(<argument pos:start="23:16" pos:end="23:26"><expr pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:17">os</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:22">ctx</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:26">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:6">os</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:23">packets_written</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:19"><expr pos:start="27:5" pos:end="27:18"><call pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:14">close_file</name><argument_list pos:start="27:15" pos:end="27:18">(<argument pos:start="27:16" pos:end="27:17"><expr pos:start="27:16" pos:end="27:17"><name pos:start="27:16" pos:end="27:17">os</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="33:79"><expr pos:start="31:5" pos:end="33:78"><call pos:start="31:5" pos:end="33:78"><name pos:start="31:5" pos:end="31:12">snprintf</name><argument_list pos:start="31:13" pos:end="33:78">(<argument pos:start="31:14" pos:end="31:28"><expr pos:start="31:14" pos:end="31:28"><name pos:start="31:14" pos:end="31:28">target_filename</name></expr></argument>, <argument pos:start="31:31" pos:end="31:53"><expr pos:start="31:31" pos:end="31:53"><sizeof pos:start="31:31" pos:end="31:53">sizeof<argument_list pos:start="31:37" pos:end="31:53">(<argument pos:start="31:38" pos:end="31:52"><expr pos:start="31:38" pos:end="31:52"><name pos:start="31:38" pos:end="31:52">target_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

             <argument pos:start="33:14" pos:end="33:37"><expr pos:start="33:14" pos:end="33:37"><literal type="string" pos:start="33:14" pos:end="33:37">"%s/stream%dSeg1-Frag%d"</literal></expr></argument>, <argument pos:start="33:40" pos:end="33:50"><expr pos:start="33:40" pos:end="33:50"><name pos:start="33:40" pos:end="33:50"><name pos:start="33:40" pos:end="33:40">s</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:50">filename</name></name></expr></argument>, <argument pos:start="33:53" pos:end="33:57"><expr pos:start="33:53" pos:end="33:57"><name pos:start="33:53" pos:end="33:57">index</name></expr></argument>, <argument pos:start="33:60" pos:end="33:77"><expr pos:start="33:60" pos:end="33:77"><name pos:start="33:60" pos:end="33:77"><name pos:start="33:60" pos:end="33:61">os</name><operator pos:start="33:62" pos:end="33:63">-&gt;</operator><name pos:start="33:64" pos:end="33:77">fragment_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:56"><expr pos:start="35:5" pos:end="35:55"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:55"><name pos:start="35:11" pos:end="35:19">ff_rename</name><argument_list pos:start="35:20" pos:end="35:55">(<argument pos:start="35:21" pos:end="35:37"><expr pos:start="35:21" pos:end="35:37"><name pos:start="35:21" pos:end="35:37"><name pos:start="35:21" pos:end="35:22">os</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:37">temp_filename</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:54"><expr pos:start="35:40" pos:end="35:54"><name pos:start="35:40" pos:end="35:54">target_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:19"><if pos:start="37:5" pos:end="39:19">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:19"><block_content pos:start="39:9" pos:end="39:19">

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:85"><expr pos:start="41:5" pos:end="41:84"><call pos:start="41:5" pos:end="41:84"><name pos:start="41:5" pos:end="41:16">add_fragment</name><argument_list pos:start="41:17" pos:end="41:84">(<argument pos:start="41:18" pos:end="41:19"><expr pos:start="41:18" pos:end="41:19"><name pos:start="41:18" pos:end="41:19">os</name></expr></argument>, <argument pos:start="41:22" pos:end="41:36"><expr pos:start="41:22" pos:end="41:36"><name pos:start="41:22" pos:end="41:36">target_filename</name></expr></argument>, <argument pos:start="41:39" pos:end="41:55"><expr pos:start="41:39" pos:end="41:55"><name pos:start="41:39" pos:end="41:55"><name pos:start="41:39" pos:end="41:40">os</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:55">frag_start_ts</name></name></expr></argument>, <argument pos:start="41:58" pos:end="41:83"><expr pos:start="41:58" pos:end="41:83"><name pos:start="41:58" pos:end="41:63">end_ts</name> <operator pos:start="41:65" pos:end="41:65">-</operator> <name pos:start="41:67" pos:end="41:83"><name pos:start="41:67" pos:end="41:68">os</name><operator pos:start="41:69" pos:end="41:70">-&gt;</operator><name pos:start="41:71" pos:end="41:83">frag_start_ts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:15">(<expr pos:start="45:9" pos:end="45:14"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:14">final</name></expr>)</condition> <block pos:start="45:17" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:23">

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:38"><name pos:start="47:15" pos:end="47:23">init_file</name><argument_list pos:start="47:24" pos:end="47:38">(<argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><name pos:start="47:25" pos:end="47:25">s</name></expr></argument>, <argument pos:start="47:28" pos:end="47:29"><expr pos:start="47:28" pos:end="47:29"><name pos:start="47:28" pos:end="47:29">os</name></expr></argument>, <argument pos:start="47:32" pos:end="47:37"><expr pos:start="47:32" pos:end="47:37"><name pos:start="47:32" pos:end="47:37">end_ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:23"><if pos:start="49:9" pos:end="51:23">if <condition pos:start="49:12" pos:end="49:20">(<expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">&lt;</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:23"><block_content pos:start="51:13" pos:end="51:23">

            <return pos:start="51:13" pos:end="51:23">return <expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="83:5"><if pos:start="57:5" pos:end="83:5">if <condition pos:start="57:8" pos:end="57:55">(<expr pos:start="57:9" pos:end="57:54"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:9">c</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:22">window_size</name></name> <operator pos:start="57:24" pos:end="57:25">||</operator> <operator pos:start="57:27" pos:end="57:27">(</operator><name pos:start="57:28" pos:end="57:32">final</name> <operator pos:start="57:34" pos:end="57:35">&amp;&amp;</operator> <name pos:start="57:37" pos:end="57:53"><name pos:start="57:37" pos:end="57:37">c</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:53">remove_at_exit</name></name><operator pos:start="57:54" pos:end="57:54">)</operator></expr>)</condition> <block pos:start="57:57" pos:end="83:5">{<block_content pos:start="59:9" pos:end="81:9">

        <decl_stmt pos:start="59:9" pos:end="59:78"><decl pos:start="59:9" pos:end="59:77"><type pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">int</name></type> <name pos:start="59:13" pos:end="59:18">remove</name> <init pos:start="59:20" pos:end="59:77">= <expr pos:start="59:22" pos:end="59:77"><name pos:start="59:22" pos:end="59:37"><name pos:start="59:22" pos:end="59:23">os</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:37">nb_fragments</name></name> <operator pos:start="59:39" pos:end="59:39">-</operator> <name pos:start="59:41" pos:end="59:54"><name pos:start="59:41" pos:end="59:41">c</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:54">window_size</name></name> <operator pos:start="59:56" pos:end="59:56">-</operator> <name pos:start="59:58" pos:end="59:77"><name pos:start="59:58" pos:end="59:58">c</name><operator pos:start="59:59" pos:end="59:60">-&gt;</operator><name pos:start="59:61" pos:end="59:77">extra_window_size</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="61:9" pos:end="63:38"><if pos:start="61:9" pos:end="63:38">if <condition pos:start="61:12" pos:end="61:39">(<expr pos:start="61:13" pos:end="61:38"><name pos:start="61:13" pos:end="61:17">final</name> <operator pos:start="61:19" pos:end="61:20">&amp;&amp;</operator> <name pos:start="61:22" pos:end="61:38"><name pos:start="61:22" pos:end="61:22">c</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:38">remove_at_exit</name></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:38"><block_content pos:start="63:13" pos:end="63:38">

            <expr_stmt pos:start="63:13" pos:end="63:38"><expr pos:start="63:13" pos:end="63:37"><name pos:start="63:13" pos:end="63:18">remove</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:37"><name pos:start="63:22" pos:end="63:23">os</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:37">nb_fragments</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="81:9"><if pos:start="65:9" pos:end="81:9">if <condition pos:start="65:12" pos:end="65:23">(<expr pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:18">remove</name> <operator pos:start="65:20" pos:end="65:20">&gt;</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>)</condition> <block pos:start="65:25" pos:end="81:9">{<block_content pos:start="67:13" pos:end="79:63">

            <for pos:start="67:13" pos:end="73:13">for <control pos:start="67:17" pos:end="67:40">(<init pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:22"><name pos:start="67:18" pos:end="67:18">i</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:35"><expr pos:start="67:25" pos:end="67:34"><name pos:start="67:25" pos:end="67:25">i</name> <operator pos:start="67:27" pos:end="67:27">&lt;</operator> <name pos:start="67:29" pos:end="67:34">remove</name></expr>;</condition> <incr pos:start="67:37" pos:end="67:39"><expr pos:start="67:37" pos:end="67:39"><name pos:start="67:37" pos:end="67:37">i</name><operator pos:start="67:38" pos:end="67:39">++</operator></expr></incr>)</control> <block pos:start="67:42" pos:end="73:13">{<block_content pos:start="69:17" pos:end="71:42">

                <expr_stmt pos:start="69:17" pos:end="69:47"><expr pos:start="69:17" pos:end="69:46"><call pos:start="69:17" pos:end="69:46"><name pos:start="69:17" pos:end="69:22">unlink</name><argument_list pos:start="69:23" pos:end="69:46">(<argument pos:start="69:24" pos:end="69:45"><expr pos:start="69:24" pos:end="69:45"><name pos:start="69:24" pos:end="69:39"><name pos:start="69:24" pos:end="69:25">os</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:36">fragments</name><index pos:start="69:37" pos:end="69:39">[<expr pos:start="69:38" pos:end="69:38"><name pos:start="69:38" pos:end="69:38">i</name></expr>]</index></name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:45">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:42"><expr pos:start="71:17" pos:end="71:41"><call pos:start="71:17" pos:end="71:41"><name pos:start="71:17" pos:end="71:23">av_free</name><argument_list pos:start="71:24" pos:end="71:41">(<argument pos:start="71:25" pos:end="71:40"><expr pos:start="71:25" pos:end="71:40"><name pos:start="71:25" pos:end="71:40"><name pos:start="71:25" pos:end="71:26">os</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:37">fragments</name><index pos:start="71:38" pos:end="71:40">[<expr pos:start="71:39" pos:end="71:39"><name pos:start="71:39" pos:end="71:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="75:13" pos:end="75:39"><expr pos:start="75:13" pos:end="75:38"><name pos:start="75:13" pos:end="75:28"><name pos:start="75:13" pos:end="75:14">os</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:28">nb_fragments</name></name> <operator pos:start="75:30" pos:end="75:31">-=</operator> <name pos:start="75:33" pos:end="75:38">remove</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="79:63"><expr pos:start="77:13" pos:end="79:62"><call pos:start="77:13" pos:end="79:62"><name pos:start="77:13" pos:end="77:19">memmove</name><argument_list pos:start="77:20" pos:end="79:62">(<argument pos:start="77:21" pos:end="77:33"><expr pos:start="77:21" pos:end="77:33"><name pos:start="77:21" pos:end="77:33"><name pos:start="77:21" pos:end="77:22">os</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:33">fragments</name></name></expr></argument>, <argument pos:start="77:36" pos:end="77:57"><expr pos:start="77:36" pos:end="77:57"><name pos:start="77:36" pos:end="77:48"><name pos:start="77:36" pos:end="77:37">os</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:48">fragments</name></name> <operator pos:start="77:50" pos:end="77:50">+</operator> <name pos:start="77:52" pos:end="77:57">remove</name></expr></argument>,

                    <argument pos:start="79:21" pos:end="79:61"><expr pos:start="79:21" pos:end="79:61"><name pos:start="79:21" pos:end="79:36"><name pos:start="79:21" pos:end="79:22">os</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:36">nb_fragments</name></name> <operator pos:start="79:38" pos:end="79:38">*</operator> <sizeof pos:start="79:40" pos:end="79:61">sizeof<argument_list pos:start="79:46" pos:end="79:61">(<argument pos:start="79:47" pos:end="79:60"><expr pos:start="79:47" pos:end="79:60"><operator pos:start="79:47" pos:end="79:47">*</operator><name pos:start="79:48" pos:end="79:60"><name pos:start="79:48" pos:end="79:49">os</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:60">fragments</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="89:39"><if pos:start="87:5" pos:end="89:39">if <condition pos:start="87:8" pos:end="87:17">(<expr pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:14">&gt;=</operator> <literal type="number" pos:start="87:16" pos:end="87:16">0</literal></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:39"><block_content pos:start="89:9" pos:end="89:39">

        <expr_stmt pos:start="89:9" pos:end="89:39"><expr pos:start="89:9" pos:end="89:38"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:38"><name pos:start="89:15" pos:end="89:24">write_abst</name><argument_list pos:start="89:25" pos:end="89:38">(<argument pos:start="89:26" pos:end="89:26"><expr pos:start="89:26" pos:end="89:26"><name pos:start="89:26" pos:end="89:26">s</name></expr></argument>, <argument pos:start="89:29" pos:end="89:30"><expr pos:start="89:29" pos:end="89:30"><name pos:start="89:29" pos:end="89:30">os</name></expr></argument>, <argument pos:start="89:33" pos:end="89:37"><expr pos:start="89:33" pos:end="89:37"><name pos:start="89:33" pos:end="89:37">final</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="91:5" pos:end="91:15">return <expr pos:start="91:12" pos:end="91:14"><name pos:start="91:12" pos:end="91:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
