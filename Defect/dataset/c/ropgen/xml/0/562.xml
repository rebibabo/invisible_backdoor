<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/562.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:45">nbd_process_legacy_socket_options</name><parameter_list pos:start="1:46" pos:end="5:59">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:51">QDict</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:67">output_options</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:67"><decl pos:start="3:47" pos:end="3:67"><type pos:start="3:47" pos:end="3:67"><name pos:start="3:47" pos:end="3:54">QemuOpts</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:67">legacy_opts</name></decl></parameter>,

                                              <parameter pos:start="5:47" pos:end="5:58"><decl pos:start="5:47" pos:end="5:58"><type pos:start="5:47" pos:end="5:58"><name pos:start="5:47" pos:end="5:51">Error</name> <modifier pos:start="5:53" pos:end="5:53">*</modifier><modifier pos:start="5:54" pos:end="5:54">*</modifier></type><name pos:start="5:55" pos:end="5:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="83:1">{<block_content pos:start="9:5" pos:end="81:16">

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:56"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">path</name> <init pos:start="9:22" pos:end="9:56">= <expr pos:start="9:24" pos:end="9:56"><call pos:start="9:24" pos:end="9:56"><name pos:start="9:24" pos:end="9:35">qemu_opt_get</name><argument_list pos:start="9:36" pos:end="9:56">(<argument pos:start="9:37" pos:end="9:47"><expr pos:start="9:37" pos:end="9:47"><name pos:start="9:37" pos:end="9:47">legacy_opts</name></expr></argument>, <argument pos:start="9:50" pos:end="9:55"><expr pos:start="9:50" pos:end="9:55"><literal type="string" pos:start="9:50" pos:end="9:55">"path"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:57"><decl pos:start="11:5" pos:end="11:56"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">host</name> <init pos:start="11:22" pos:end="11:56">= <expr pos:start="11:24" pos:end="11:56"><call pos:start="11:24" pos:end="11:56"><name pos:start="11:24" pos:end="11:35">qemu_opt_get</name><argument_list pos:start="11:36" pos:end="11:56">(<argument pos:start="11:37" pos:end="11:47"><expr pos:start="11:37" pos:end="11:47"><name pos:start="11:37" pos:end="11:47">legacy_opts</name></expr></argument>, <argument pos:start="11:50" pos:end="11:55"><expr pos:start="11:50" pos:end="11:55"><literal type="string" pos:start="11:50" pos:end="11:55">"host"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:56"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:20">port</name> <init pos:start="13:22" pos:end="13:56">= <expr pos:start="13:24" pos:end="13:56"><call pos:start="13:24" pos:end="13:56"><name pos:start="13:24" pos:end="13:35">qemu_opt_get</name><argument_list pos:start="13:36" pos:end="13:56">(<argument pos:start="13:37" pos:end="13:47"><expr pos:start="13:37" pos:end="13:47"><name pos:start="13:37" pos:end="13:47">legacy_opts</name></expr></argument>, <argument pos:start="13:50" pos:end="13:55"><expr pos:start="13:50" pos:end="13:55"><literal type="string" pos:start="13:50" pos:end="13:55">"port"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:22"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:20">QDictEntry</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:23">e</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:32">(<expr pos:start="19:9" pos:end="19:31"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:13">path</name> <operator pos:start="19:15" pos:end="19:16">&amp;&amp;</operator> <operator pos:start="19:18" pos:end="19:18">!</operator><name pos:start="19:19" pos:end="19:22">host</name> <operator pos:start="19:24" pos:end="19:25">&amp;&amp;</operator> <operator pos:start="19:27" pos:end="19:27">!</operator><name pos:start="19:28" pos:end="19:31">port</name></expr>)</condition> <block pos:start="19:34" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:20">

        <return pos:start="21:9" pos:end="21:20">return <expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">true</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="27:5" pos:end="41:5">for <control pos:start="27:9" pos:end="27:79">(<init pos:start="27:10" pos:end="27:41"><expr pos:start="27:10" pos:end="27:40"><name pos:start="27:10" pos:end="27:10">e</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:40"><name pos:start="27:14" pos:end="27:24">qdict_first</name><argument_list pos:start="27:25" pos:end="27:40">(<argument pos:start="27:26" pos:end="27:39"><expr pos:start="27:26" pos:end="27:39"><name pos:start="27:26" pos:end="27:39">output_options</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="27:43" pos:end="27:44"><expr pos:start="27:43" pos:end="27:43"><name pos:start="27:43" pos:end="27:43">e</name></expr>;</condition> <incr pos:start="27:46" pos:end="27:78"><expr pos:start="27:46" pos:end="27:78"><name pos:start="27:46" pos:end="27:46">e</name> <operator pos:start="27:48" pos:end="27:48">=</operator> <call pos:start="27:50" pos:end="27:78"><name pos:start="27:50" pos:end="27:59">qdict_next</name><argument_list pos:start="27:60" pos:end="27:78">(<argument pos:start="27:61" pos:end="27:74"><expr pos:start="27:61" pos:end="27:74"><name pos:start="27:61" pos:end="27:74">output_options</name></expr></argument>, <argument pos:start="27:77" pos:end="27:77"><expr pos:start="27:77" pos:end="27:77"><name pos:start="27:77" pos:end="27:77">e</name></expr></argument>)</argument_list></call></expr></incr>)</control>

    <block pos:start="29:5" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:9">

        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="39:9">if <condition pos:start="31:12" pos:end="31:46">(<expr pos:start="31:13" pos:end="31:45"><call pos:start="31:13" pos:end="31:45"><name pos:start="31:13" pos:end="31:20">strstart</name><argument_list pos:start="31:21" pos:end="31:45">(<argument pos:start="31:22" pos:end="31:27"><expr pos:start="31:22" pos:end="31:27"><name pos:start="31:22" pos:end="31:27"><name pos:start="31:22" pos:end="31:22">e</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:27">key</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:38"><expr pos:start="31:30" pos:end="31:38"><literal type="string" pos:start="31:30" pos:end="31:38">"server."</literal></expr></argument>, <argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><name pos:start="31:41" pos:end="31:44">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:48" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:25">

            <expr_stmt pos:start="33:13" pos:end="35:36"><expr pos:start="33:13" pos:end="35:35"><call pos:start="33:13" pos:end="35:35"><name pos:start="33:13" pos:end="33:22">error_setg</name><argument_list pos:start="33:23" pos:end="35:35">(<argument pos:start="33:24" pos:end="33:27"><expr pos:start="33:24" pos:end="33:27"><name pos:start="33:24" pos:end="33:27">errp</name></expr></argument>, <argument pos:start="33:30" pos:end="35:34"><expr pos:start="33:30" pos:end="35:34"><literal type="string" pos:start="33:30" pos:end="33:77">"Cannot use 'server' and path/host/port at the "</literal>

                       <literal type="string" pos:start="35:24" pos:end="35:34">"same time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:25">return <expr pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="45:5" pos:end="77:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:21">(<expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:12">path</name> <operator pos:start="45:14" pos:end="45:15">&amp;&amp;</operator> <name pos:start="45:17" pos:end="45:20">host</name></expr>)</condition> <block pos:start="45:23" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:21">

        <expr_stmt pos:start="47:9" pos:end="47:75"><expr pos:start="47:9" pos:end="47:74"><call pos:start="47:9" pos:end="47:74"><name pos:start="47:9" pos:end="47:18">error_setg</name><argument_list pos:start="47:19" pos:end="47:74">(<argument pos:start="47:20" pos:end="47:23"><expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">errp</name></expr></argument>, <argument pos:start="47:26" pos:end="47:73"><expr pos:start="47:26" pos:end="47:73"><literal type="string" pos:start="47:26" pos:end="47:73">"path and host may not be used at the same time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:21">return <expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">false</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="67:5">else if <condition pos:start="51:15" pos:end="51:20">(<expr pos:start="51:16" pos:end="51:19"><name pos:start="51:16" pos:end="51:19">path</name></expr>)</condition> <block pos:start="51:22" pos:end="67:5">{<block_content pos:start="53:9" pos:end="65:78">

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:17">(<expr pos:start="53:13" pos:end="53:16"><name pos:start="53:13" pos:end="53:16">port</name></expr>)</condition> <block pos:start="53:19" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:25">

            <expr_stmt pos:start="55:13" pos:end="55:66"><expr pos:start="55:13" pos:end="55:65"><call pos:start="55:13" pos:end="55:65"><name pos:start="55:13" pos:end="55:22">error_setg</name><argument_list pos:start="55:23" pos:end="55:65">(<argument pos:start="55:24" pos:end="55:27"><expr pos:start="55:24" pos:end="55:27"><name pos:start="55:24" pos:end="55:27">errp</name></expr></argument>, <argument pos:start="55:30" pos:end="55:64"><expr pos:start="55:30" pos:end="55:64"><literal type="string" pos:start="55:30" pos:end="55:64">"port may not be used without host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:25">return <expr pos:start="57:20" pos:end="57:24"><name pos:start="57:20" pos:end="57:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:75"><expr pos:start="63:9" pos:end="63:74"><call pos:start="63:9" pos:end="63:74"><name pos:start="63:9" pos:end="63:17">qdict_put</name><argument_list pos:start="63:18" pos:end="63:74">(<argument pos:start="63:19" pos:end="63:32"><expr pos:start="63:19" pos:end="63:32"><name pos:start="63:19" pos:end="63:32">output_options</name></expr></argument>, <argument pos:start="63:35" pos:end="63:47"><expr pos:start="63:35" pos:end="63:47"><literal type="string" pos:start="63:35" pos:end="63:47">"server.type"</literal></expr></argument>, <argument pos:start="63:50" pos:end="63:73"><expr pos:start="63:50" pos:end="63:73"><call pos:start="63:50" pos:end="63:73"><name pos:start="63:50" pos:end="63:65">qstring_from_str</name><argument_list pos:start="63:66" pos:end="63:73">(<argument pos:start="63:67" pos:end="63:72"><expr pos:start="63:67" pos:end="63:72"><literal type="string" pos:start="63:67" pos:end="63:72">"unix"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:78"><expr pos:start="65:9" pos:end="65:77"><call pos:start="65:9" pos:end="65:77"><name pos:start="65:9" pos:end="65:17">qdict_put</name><argument_list pos:start="65:18" pos:end="65:77">(<argument pos:start="65:19" pos:end="65:32"><expr pos:start="65:19" pos:end="65:32"><name pos:start="65:19" pos:end="65:32">output_options</name></expr></argument>, <argument pos:start="65:35" pos:end="65:52"><expr pos:start="65:35" pos:end="65:52"><literal type="string" pos:start="65:35" pos:end="65:52">"server.data.path"</literal></expr></argument>, <argument pos:start="65:55" pos:end="65:76"><expr pos:start="65:55" pos:end="65:76"><call pos:start="65:55" pos:end="65:76"><name pos:start="65:55" pos:end="65:70">qstring_from_str</name><argument_list pos:start="65:71" pos:end="65:76">(<argument pos:start="65:72" pos:end="65:75"><expr pos:start="65:72" pos:end="65:75"><name pos:start="65:72" pos:end="65:75">path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="77:5">else if <condition pos:start="67:15" pos:end="67:20">(<expr pos:start="67:16" pos:end="67:19"><name pos:start="67:16" pos:end="67:19">host</name></expr>)</condition> <block pos:start="67:22" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:73">

        <expr_stmt pos:start="69:9" pos:end="69:75"><expr pos:start="69:9" pos:end="69:74"><call pos:start="69:9" pos:end="69:74"><name pos:start="69:9" pos:end="69:17">qdict_put</name><argument_list pos:start="69:18" pos:end="69:74">(<argument pos:start="69:19" pos:end="69:32"><expr pos:start="69:19" pos:end="69:32"><name pos:start="69:19" pos:end="69:32">output_options</name></expr></argument>, <argument pos:start="69:35" pos:end="69:47"><expr pos:start="69:35" pos:end="69:47"><literal type="string" pos:start="69:35" pos:end="69:47">"server.type"</literal></expr></argument>, <argument pos:start="69:50" pos:end="69:73"><expr pos:start="69:50" pos:end="69:73"><call pos:start="69:50" pos:end="69:73"><name pos:start="69:50" pos:end="69:65">qstring_from_str</name><argument_list pos:start="69:66" pos:end="69:73">(<argument pos:start="69:67" pos:end="69:72"><expr pos:start="69:67" pos:end="69:72"><literal type="string" pos:start="69:67" pos:end="69:72">"inet"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:78"><expr pos:start="71:9" pos:end="71:77"><call pos:start="71:9" pos:end="71:77"><name pos:start="71:9" pos:end="71:17">qdict_put</name><argument_list pos:start="71:18" pos:end="71:77">(<argument pos:start="71:19" pos:end="71:32"><expr pos:start="71:19" pos:end="71:32"><name pos:start="71:19" pos:end="71:32">output_options</name></expr></argument>, <argument pos:start="71:35" pos:end="71:52"><expr pos:start="71:35" pos:end="71:52"><literal type="string" pos:start="71:35" pos:end="71:52">"server.data.host"</literal></expr></argument>, <argument pos:start="71:55" pos:end="71:76"><expr pos:start="71:55" pos:end="71:76"><call pos:start="71:55" pos:end="71:76"><name pos:start="71:55" pos:end="71:70">qstring_from_str</name><argument_list pos:start="71:71" pos:end="71:76">(<argument pos:start="71:72" pos:end="71:75"><expr pos:start="71:72" pos:end="71:75"><name pos:start="71:72" pos:end="71:75">host</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="75:73"><expr pos:start="73:9" pos:end="75:72"><call pos:start="73:9" pos:end="75:72"><name pos:start="73:9" pos:end="73:17">qdict_put</name><argument_list pos:start="73:18" pos:end="75:72">(<argument pos:start="73:19" pos:end="73:32"><expr pos:start="73:19" pos:end="73:32"><name pos:start="73:19" pos:end="73:32">output_options</name></expr></argument>, <argument pos:start="73:35" pos:end="73:52"><expr pos:start="73:35" pos:end="73:52"><literal type="string" pos:start="73:35" pos:end="73:52">"server.data.port"</literal></expr></argument>,

                  <argument pos:start="75:19" pos:end="75:71"><expr pos:start="75:19" pos:end="75:71"><call pos:start="75:19" pos:end="75:71"><name pos:start="75:19" pos:end="75:34">qstring_from_str</name><argument_list pos:start="75:35" pos:end="75:71">(<argument pos:start="75:36" pos:end="75:70"><expr pos:start="75:36" pos:end="75:70"><ternary pos:start="75:36" pos:end="75:70"><condition pos:start="75:36" pos:end="75:41"><expr pos:start="75:36" pos:end="75:39"><name pos:start="75:36" pos:end="75:39">port</name></expr> ?</condition><then/><else pos:start="75:42" pos:end="75:70">: <expr pos:start="75:44" pos:end="75:70"><call pos:start="75:44" pos:end="75:70"><name pos:start="75:44" pos:end="75:52">stringify</name><argument_list pos:start="75:53" pos:end="75:70">(<argument pos:start="75:54" pos:end="75:69"><expr pos:start="75:54" pos:end="75:69"><name pos:start="75:54" pos:end="75:69">NBD_DEFAULT_PORT</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="81:5" pos:end="81:16">return <expr pos:start="81:12" pos:end="81:15"><name pos:start="81:12" pos:end="81:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
