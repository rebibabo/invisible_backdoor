<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20256.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">pte64_check</name><parameter_list pos:start="1:23" pos:end="3:66">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:32">mmu_ctx_t</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">ctx</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:51">target_ulong</name></type> <name pos:start="1:53" pos:end="1:56">pte0</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:40"><decl pos:start="3:24" pos:end="3:40"><type pos:start="3:24" pos:end="3:40"><name pos:start="3:24" pos:end="3:35">target_ulong</name></type> <name pos:start="3:37" pos:end="3:40">pte1</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:47"><decl pos:start="3:43" pos:end="3:47"><type pos:start="3:43" pos:end="3:47"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:47">h</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:55"><decl pos:start="3:50" pos:end="3:55"><type pos:start="3:50" pos:end="3:55"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:55">rw</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:65"><decl pos:start="3:58" pos:end="3:65"><type pos:start="3:58" pos:end="3:65"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:65">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:15">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:21">ptem</name></decl>, <decl pos:start="7:24" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:24" pos:end="7:28">mmask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">access</name></decl>, <decl pos:start="9:17" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">ret</name></decl>, <decl pos:start="9:22" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:25">pteh</name></decl>, <decl pos:start="9:28" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:31">ptev</name></decl>, <decl pos:start="9:34" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:34" pos:end="9:35">pp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:13"><expr pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">-</operator><literal type="number" pos:start="13:12" pos:end="13:12">1</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="15:5" pos:end="15:40">/* Check validity and table match */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:8">ptev</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:31"><name pos:start="17:12" pos:end="17:25">pte64_is_valid</name><argument_list pos:start="17:26" pos:end="17:31">(<argument pos:start="17:27" pos:end="17:30"><expr pos:start="17:27" pos:end="17:30"><name pos:start="17:27" pos:end="17:30">pte0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:8">pteh</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <operator pos:start="19:12" pos:end="19:12">(</operator><name pos:start="19:13" pos:end="19:16">pte0</name> <operator pos:start="19:18" pos:end="19:19">&gt;&gt;</operator> <literal type="number" pos:start="19:21" pos:end="19:21">1</literal><operator pos:start="19:22" pos:end="19:22">)</operator> <operator pos:start="19:24" pos:end="19:24">&amp;</operator> <literal type="number" pos:start="19:26" pos:end="19:26">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="79:5"><if pos:start="21:5" pos:end="79:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:12">ptev</name> <operator pos:start="21:14" pos:end="21:15">&amp;&amp;</operator> <name pos:start="21:17" pos:end="21:17">h</name> <operator pos:start="21:19" pos:end="21:20">==</operator> <name pos:start="21:22" pos:end="21:25">pteh</name></expr>)</condition> <block pos:start="21:28" pos:end="79:5">{<block_content pos:start="25:9" pos:end="77:9">

        <comment type="block" pos:start="23:9" pos:end="23:30">/* Check vsid &amp; api */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:12">ptem</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:19">pte0</name> <operator pos:start="25:21" pos:end="25:21">&amp;</operator> <name pos:start="25:23" pos:end="25:37">PTE64_PTEM_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:13">mmask</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:32">PTE64_CHECK_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:63"><expr pos:start="29:9" pos:end="29:62"><name pos:start="29:9" pos:end="29:10">pp</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <operator pos:start="29:14" pos:end="29:14">(</operator><name pos:start="29:15" pos:end="29:18">pte1</name> <operator pos:start="29:20" pos:end="29:20">&amp;</operator> <literal type="number" pos:start="29:22" pos:end="29:31">0x00000003</literal><operator pos:start="29:32" pos:end="29:32">)</operator> <operator pos:start="29:34" pos:end="29:34">|</operator> <operator pos:start="29:36" pos:end="29:36">(</operator><operator pos:start="29:37" pos:end="29:37">(</operator><name pos:start="29:38" pos:end="29:41">pte1</name> <operator pos:start="29:43" pos:end="29:44">&gt;&gt;</operator> <literal type="number" pos:start="29:46" pos:end="29:47">61</literal><operator pos:start="29:48" pos:end="29:48">)</operator> <operator pos:start="29:50" pos:end="29:50">&amp;</operator> <literal type="number" pos:start="29:52" pos:end="29:61">0x00000004</literal><operator pos:start="29:62" pos:end="29:62">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ctx</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:15">nx</name></name>  <operator pos:start="31:18" pos:end="31:18">=</operator> <operator pos:start="31:20" pos:end="31:20">(</operator><name pos:start="31:21" pos:end="31:24">pte1</name> <operator pos:start="31:26" pos:end="31:27">&gt;&gt;</operator> <literal type="number" pos:start="31:29" pos:end="31:29">2</literal><operator pos:start="31:30" pos:end="31:30">)</operator> <operator pos:start="31:32" pos:end="31:32">&amp;</operator> <literal type="number" pos:start="31:34" pos:end="31:34">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="31:37" pos:end="31:56">/* No execute bit */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">ctx</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:15">nx</name></name> <operator pos:start="33:17" pos:end="33:18">|=</operator> <operator pos:start="33:20" pos:end="33:20">(</operator><name pos:start="33:21" pos:end="33:24">pte1</name> <operator pos:start="33:26" pos:end="33:27">&gt;&gt;</operator> <literal type="number" pos:start="33:29" pos:end="33:29">3</literal><operator pos:start="33:30" pos:end="33:30">)</operator> <operator pos:start="33:32" pos:end="33:32">&amp;</operator> <literal type="number" pos:start="33:34" pos:end="33:34">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="33:37" pos:end="33:56">/* Guarded bit    */</comment>

        <if_stmt pos:start="35:9" pos:end="77:9"><if pos:start="35:9" pos:end="77:9">if <condition pos:start="35:12" pos:end="35:30">(<expr pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:16">ptem</name> <operator pos:start="35:18" pos:end="35:19">==</operator> <name pos:start="35:21" pos:end="35:29"><name pos:start="35:21" pos:end="35:23">ctx</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:29">ptem</name></name></expr>)</condition> <block pos:start="35:32" pos:end="77:9">{<block_content pos:start="37:13" pos:end="75:13">

            <if_stmt pos:start="37:13" pos:end="49:13"><if pos:start="37:13" pos:end="49:13">if <condition pos:start="37:16" pos:end="37:44">(<expr pos:start="37:17" pos:end="37:43"><name pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:19">ctx</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:26">raddr</name></name> <operator pos:start="37:28" pos:end="37:29">!=</operator> <operator pos:start="37:31" pos:end="37:31">(</operator><name pos:start="37:32" pos:end="37:37">hwaddr</name><operator pos:start="37:38" pos:end="37:38">)</operator><operator pos:start="37:39" pos:end="37:39">-</operator><literal type="number" pos:start="37:40" pos:end="37:43">1ULL</literal></expr>)</condition> <block pos:start="37:46" pos:end="49:13">{<block_content pos:start="41:17" pos:end="47:17">

                <comment type="block" pos:start="39:17" pos:end="39:66">/* all matches should have equal RPN, WIMG &amp; PP */</comment>

                <if_stmt pos:start="41:17" pos:end="47:17"><if pos:start="41:17" pos:end="47:17">if <condition pos:start="41:20" pos:end="41:59">(<expr pos:start="41:21" pos:end="41:58"><operator pos:start="41:21" pos:end="41:21">(</operator><name pos:start="41:22" pos:end="41:31"><name pos:start="41:22" pos:end="41:24">ctx</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:31">raddr</name></name> <operator pos:start="41:33" pos:end="41:33">&amp;</operator> <name pos:start="41:35" pos:end="41:39">mmask</name><operator pos:start="41:40" pos:end="41:40">)</operator> <operator pos:start="41:42" pos:end="41:43">!=</operator> <operator pos:start="41:45" pos:end="41:45">(</operator><name pos:start="41:46" pos:end="41:49">pte1</name> <operator pos:start="41:51" pos:end="41:51">&amp;</operator> <name pos:start="41:53" pos:end="41:57">mmask</name><operator pos:start="41:58" pos:end="41:58">)</operator></expr>)</condition> <block pos:start="41:61" pos:end="47:17">{<block_content pos:start="43:21" pos:end="45:30">

                    <expr_stmt pos:start="43:21" pos:end="43:50"><expr pos:start="43:21" pos:end="43:49"><call pos:start="43:21" pos:end="43:49"><name pos:start="43:21" pos:end="43:28">qemu_log</name><argument_list pos:start="43:29" pos:end="43:49">(<argument pos:start="43:30" pos:end="43:48"><expr pos:start="43:30" pos:end="43:48"><literal type="string" pos:start="43:30" pos:end="43:48">"Bad RPN/WIMG/PP\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="45:21" pos:end="45:30">return <expr pos:start="45:28" pos:end="45:29"><operator pos:start="45:28" pos:end="45:28">-</operator><literal type="number" pos:start="45:29" pos:end="45:29">3</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="51:13" pos:end="51:39">/* Compute access rights */</comment>

            <expr_stmt pos:start="53:13" pos:end="53:53"><expr pos:start="53:13" pos:end="53:52"><name pos:start="53:13" pos:end="53:18">access</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:52"><name pos:start="53:22" pos:end="53:29">pp_check</name><argument_list pos:start="53:30" pos:end="53:52">(<argument pos:start="53:31" pos:end="53:38"><expr pos:start="53:31" pos:end="53:38"><name pos:start="53:31" pos:end="53:38"><name pos:start="53:31" pos:end="53:33">ctx</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:38">key</name></name></expr></argument>, <argument pos:start="53:41" pos:end="53:42"><expr pos:start="53:41" pos:end="53:42"><name pos:start="53:41" pos:end="53:42">pp</name></expr></argument>, <argument pos:start="53:45" pos:end="53:51"><expr pos:start="53:45" pos:end="53:51"><name pos:start="53:45" pos:end="53:51"><name pos:start="53:45" pos:end="53:47">ctx</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:51">nx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="55:13" pos:end="55:52">/* Keep the matching PTE informations */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:30"><expr pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:15">ctx</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:22">raddr</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:29">pte1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:31"><expr pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:15">ctx</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:21">prot</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <name pos:start="59:25" pos:end="59:30">access</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:50"><expr pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:49"><name pos:start="61:19" pos:end="61:28">check_prot</name><argument_list pos:start="61:29" pos:end="61:49">(<argument pos:start="61:30" pos:end="61:38"><expr pos:start="61:30" pos:end="61:38"><name pos:start="61:30" pos:end="61:38"><name pos:start="61:30" pos:end="61:32">ctx</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:38">prot</name></name></expr></argument>, <argument pos:start="61:41" pos:end="61:42"><expr pos:start="61:41" pos:end="61:42"><name pos:start="61:41" pos:end="61:42">rw</name></expr></argument>, <argument pos:start="61:45" pos:end="61:48"><expr pos:start="61:45" pos:end="61:48"><name pos:start="61:45" pos:end="61:48">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="75:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:25">(<expr pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:19">ret</name> <operator pos:start="63:21" pos:end="63:22">==</operator> <literal type="number" pos:start="63:24" pos:end="63:24">0</literal></expr>)</condition> <block pos:start="63:27" pos:end="69:13">{<block_content pos:start="67:17" pos:end="67:50">

                <comment type="block" pos:start="65:17" pos:end="65:36">/* Access granted */</comment>

                <expr_stmt pos:start="67:17" pos:end="67:50"><expr pos:start="67:17" pos:end="67:49"><call pos:start="67:17" pos:end="67:49"><name pos:start="67:17" pos:end="67:23">LOG_MMU</name><argument_list pos:start="67:24" pos:end="67:49">(<argument pos:start="67:25" pos:end="67:48"><expr pos:start="67:25" pos:end="67:48"><literal type="string" pos:start="67:25" pos:end="67:48">"PTE access granted !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="69:15" pos:end="75:13">else <block pos:start="69:20" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:49">

                <comment type="block" pos:start="71:17" pos:end="71:44">/* Access right violation */</comment>

                <expr_stmt pos:start="73:17" pos:end="73:49"><expr pos:start="73:17" pos:end="73:48"><call pos:start="73:17" pos:end="73:48"><name pos:start="73:17" pos:end="73:23">LOG_MMU</name><argument_list pos:start="73:24" pos:end="73:48">(<argument pos:start="73:25" pos:end="73:47"><expr pos:start="73:25" pos:end="73:47"><literal type="string" pos:start="73:25" pos:end="73:47">"PTE access rejected\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="83:5" pos:end="83:15">return <expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
