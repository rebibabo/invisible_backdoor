<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16271.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">setfsugid</name><parameter_list pos:start="1:21" pos:end="1:38">(<parameter pos:start="1:22" pos:end="1:28"><decl pos:start="1:22" pos:end="1:28"><type pos:start="1:22" pos:end="1:28"><name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:28">uid</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:37"><decl pos:start="1:31" pos:end="1:37"><type pos:start="1:31" pos:end="1:37"><name pos:start="1:31" pos:end="1:33">int</name></type> <name pos:start="1:35" pos:end="1:37">gid</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="13:5" pos:end="33:13">

    <comment type="block" pos:start="5:5" pos:end="11:7">/*

     * We still need DAC_OVERRIDE because  we don't change

     * supplementary group ids, and hence may be subjected DAC rules

     */</comment>

    <decl_stmt pos:start="13:5" pos:end="17:6"><decl pos:start="13:5" pos:end="17:5"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">cap_value_t</name></type> <name pos:start="13:17" pos:end="13:26"><name pos:start="13:17" pos:end="13:24">cap_list</name><index pos:start="13:25" pos:end="13:26">[]</index></name> <init pos:start="13:28" pos:end="17:5">= <expr pos:start="13:30" pos:end="17:5"><block pos:start="13:30" pos:end="17:5">{

        <expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:24">CAP_DAC_OVERRIDE</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><call pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">setfsgid</name><argument_list pos:start="21:13" pos:end="21:17">(<argument pos:start="21:14" pos:end="21:16"><expr pos:start="21:14" pos:end="21:16"><name pos:start="21:14" pos:end="21:16">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><call pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:12">setfsuid</name><argument_list pos:start="23:13" pos:end="23:17">(<argument pos:start="23:14" pos:end="23:16"><expr pos:start="23:14" pos:end="23:16"><name pos:start="23:14" pos:end="23:16">uid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:29">(<expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:11">uid</name> <operator pos:start="27:13" pos:end="27:14">!=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal> <operator pos:start="27:18" pos:end="27:19">||</operator> <name pos:start="27:21" pos:end="27:23">gid</name> <operator pos:start="27:25" pos:end="27:26">!=</operator> <literal type="number" pos:start="27:28" pos:end="27:28">0</literal></expr>)</condition> <block pos:start="27:31" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:61">

        <return pos:start="29:9" pos:end="29:61">return <expr pos:start="29:16" pos:end="29:60"><call pos:start="29:16" pos:end="29:60"><name pos:start="29:16" pos:end="29:25">do_cap_set</name><argument_list pos:start="29:26" pos:end="29:60">(<argument pos:start="29:27" pos:end="29:34"><expr pos:start="29:27" pos:end="29:34"><name pos:start="29:27" pos:end="29:34">cap_list</name></expr></argument>, <argument pos:start="29:37" pos:end="29:56"><expr pos:start="29:37" pos:end="29:56"><call pos:start="29:37" pos:end="29:56"><name pos:start="29:37" pos:end="29:46">ARRAY_SIZE</name><argument_list pos:start="29:47" pos:end="29:56">(<argument pos:start="29:48" pos:end="29:55"><expr pos:start="29:48" pos:end="29:55"><name pos:start="29:48" pos:end="29:55">cap_list</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:59" pos:end="29:59"><expr pos:start="29:59" pos:end="29:59"><literal type="number" pos:start="29:59" pos:end="29:59">0</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
