<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18903.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">test_dynamic_globalprop</name><parameter_list pos:start="1:36" pos:end="1:41">(<parameter pos:start="1:37" pos:end="1:40"><decl pos:start="1:37" pos:end="1:40"><type pos:start="1:37" pos:end="1:40"><name pos:start="1:37" pos:end="1:40">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:34">

    <expr_stmt pos:start="5:5" pos:end="5:79"><expr pos:start="5:5" pos:end="5:78"><call pos:start="5:5" pos:end="5:78"><name pos:start="5:5" pos:end="5:26">g_test_trap_subprocess</name><argument_list pos:start="5:27" pos:end="5:78">(<argument pos:start="5:28" pos:end="5:71"><expr pos:start="5:28" pos:end="5:71"><literal type="string" pos:start="5:28" pos:end="5:71">"/qdev/properties/dynamic/global/subprocess"</literal></expr></argument>, <argument pos:start="5:74" pos:end="5:74"><expr pos:start="5:74" pos:end="5:74"><literal type="number" pos:start="5:74" pos:end="5:74">0</literal></expr></argument>, <argument pos:start="5:77" pos:end="5:77"><expr pos:start="5:77" pos:end="5:77"><literal type="number" pos:start="5:77" pos:end="5:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><call pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:29">g_test_trap_assert_passed</name><argument_list pos:start="7:30" pos:end="7:31">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:51"><expr pos:start="9:5" pos:end="9:50"><call pos:start="9:5" pos:end="9:50"><name pos:start="9:5" pos:end="9:39">g_test_trap_assert_stderr_unmatched</name><argument_list pos:start="9:40" pos:end="9:50">(<argument pos:start="9:41" pos:end="9:49"><expr pos:start="9:41" pos:end="9:49"><literal type="string" pos:start="9:41" pos:end="9:49">"*prop1*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><call pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:39">g_test_trap_assert_stderr_unmatched</name><argument_list pos:start="11:40" pos:end="11:50">(<argument pos:start="11:41" pos:end="11:49"><expr pos:start="11:41" pos:end="11:49"><literal type="string" pos:start="11:41" pos:end="11:49">"*prop2*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:99"><expr pos:start="13:5" pos:end="13:98"><call pos:start="13:5" pos:end="13:98"><name pos:start="13:5" pos:end="13:29">g_test_trap_assert_stderr</name><argument_list pos:start="13:30" pos:end="13:98">(<argument pos:start="13:31" pos:end="13:97"><expr pos:start="13:31" pos:end="13:97"><literal type="string" pos:start="13:31" pos:end="13:97">"*Warning: \"-global dynamic-prop-type-bad.prop3=103\" not used\n*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><call pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:39">g_test_trap_assert_stderr_unmatched</name><argument_list pos:start="15:40" pos:end="15:50">(<argument pos:start="15:41" pos:end="15:49"><expr pos:start="15:41" pos:end="15:49"><literal type="string" pos:start="15:41" pos:end="15:49">"*prop4*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:92"><expr pos:start="17:5" pos:end="17:91"><call pos:start="17:5" pos:end="17:91"><name pos:start="17:5" pos:end="17:29">g_test_trap_assert_stderr</name><argument_list pos:start="17:30" pos:end="17:91">(<argument pos:start="17:31" pos:end="17:90"><expr pos:start="17:31" pos:end="17:90"><literal type="string" pos:start="17:31" pos:end="17:90">"*Warning: \"-global nohotplug-type.prop5=105\" not used\n*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:92"><expr pos:start="19:5" pos:end="19:91"><call pos:start="19:5" pos:end="19:91"><name pos:start="19:5" pos:end="19:29">g_test_trap_assert_stderr</name><argument_list pos:start="19:30" pos:end="19:91">(<argument pos:start="19:31" pos:end="19:90"><expr pos:start="19:31" pos:end="19:90"><literal type="string" pos:start="19:31" pos:end="19:90">"*Warning: \"-global nondevice-type.prop6=106\" not used\n*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><call pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:29">g_test_trap_assert_stdout</name><argument_list pos:start="21:30" pos:end="21:33">(<argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><literal type="string" pos:start="21:31" pos:end="21:32">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
