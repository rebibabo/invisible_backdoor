<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16963.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">virtio_gpu_handle_ctrl</name><parameter_list pos:start="1:35" pos:end="1:69">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:47">VirtIODevice</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">vdev</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:64">VirtQueue</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">vq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="68:0">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VirtIOGPU</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">g</name> <init pos:start="5:18" pos:end="5:35">= <expr pos:start="5:20" pos:end="5:35"><call pos:start="5:20" pos:end="5:35"><name pos:start="5:20" pos:end="5:29">VIRTIO_GPU</name><argument_list pos:start="5:30" pos:end="5:35">(<argument pos:start="5:31" pos:end="5:34"><expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:36"><name pos:start="7:5" pos:end="7:34"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:34">virtio_gpu_ctrl_command</name></name> <modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:39">cmd</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="20:0"><if pos:start="11:5" pos:end="20:0">if <condition pos:start="11:8" pos:end="11:32">(<expr pos:start="11:9" pos:end="11:31"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:31"><name pos:start="11:10" pos:end="11:27">virtio_queue_ready</name><argument_list pos:start="11:28" pos:end="11:31">(<argument pos:start="11:29" pos:end="11:30"><expr pos:start="11:29" pos:end="11:30"><name pos:start="11:29" pos:end="11:30">vq</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:34" pos:end="20:0">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="19:1" pos:end="19:19">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:19">CONFIG_VIRGL</name></cpp:ifdef>

    <if_stmt pos:start="21:5" pos:end="30:0"><if pos:start="21:5" pos:end="30:0">if <condition pos:start="21:8" pos:end="21:53">(<expr pos:start="21:9" pos:end="21:52"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:27"><name pos:start="21:10" pos:end="21:10">g</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:27">renderer_inited</name></name> <operator pos:start="21:29" pos:end="21:30">&amp;&amp;</operator> <name pos:start="21:32" pos:end="21:52"><name pos:start="21:32" pos:end="21:32">g</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:52">use_virgl_renderer</name></name></expr>)</condition> <block pos:start="21:55" pos:end="30:0">{<block_content pos:start="23:9" pos:end="25:34">

        <expr_stmt pos:start="23:9" pos:end="23:33"><expr pos:start="23:9" pos:end="23:32"><call pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:29">virtio_gpu_virgl_init</name><argument_list pos:start="23:30" pos:end="23:32">(<argument pos:start="23:31" pos:end="23:31"><expr pos:start="23:31" pos:end="23:31"><name pos:start="23:31" pos:end="23:31">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:9">g</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:26">renderer_inited</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <name pos:start="25:30" pos:end="25:33">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="33:5" pos:end="33:51"><expr pos:start="33:5" pos:end="33:50"><name pos:start="33:5" pos:end="33:7">cmd</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:50"><name pos:start="33:11" pos:end="33:15">g_new</name><argument_list pos:start="33:16" pos:end="33:50">(<argument pos:start="33:17" pos:end="33:46"><expr pos:start="33:17" pos:end="33:46">struct <name pos:start="33:24" pos:end="33:46">virtio_gpu_ctrl_command</name></expr></argument>, <argument pos:start="33:49" pos:end="33:49"><expr pos:start="33:49" pos:end="33:49"><literal type="number" pos:start="33:49" pos:end="33:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="35:5" pos:end="49:5">while <condition pos:start="35:11" pos:end="35:41">(<expr pos:start="35:12" pos:end="35:40"><call pos:start="35:12" pos:end="35:40"><name pos:start="35:12" pos:end="35:24">virtqueue_pop</name><argument_list pos:start="35:25" pos:end="35:40">(<argument pos:start="35:26" pos:end="35:27"><expr pos:start="35:26" pos:end="35:27"><name pos:start="35:26" pos:end="35:27">vq</name></expr></argument>, <argument pos:start="35:30" pos:end="35:39"><expr pos:start="35:30" pos:end="35:39"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:39"><name pos:start="35:31" pos:end="35:33">cmd</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:39">elem</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:43" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:55">

        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">cmd</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:15">vq</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:20">vq</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:11">cmd</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:18">error</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">cmd</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:21">finished</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:29">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:11">cmd</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:20">waiting</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:28">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:48"><expr pos:start="45:9" pos:end="45:47"><call pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:26">QTAILQ_INSERT_TAIL</name><argument_list pos:start="45:27" pos:end="45:47">(<argument pos:start="45:28" pos:end="45:35"><expr pos:start="45:28" pos:end="45:35"><operator pos:start="45:28" pos:end="45:28">&amp;</operator><name pos:start="45:29" pos:end="45:35"><name pos:start="45:29" pos:end="45:29">g</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:35">cmdq</name></name></expr></argument>, <argument pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><name pos:start="45:38" pos:end="45:40">cmd</name></expr></argument>, <argument pos:start="45:43" pos:end="45:46"><expr pos:start="45:43" pos:end="45:46"><name pos:start="45:43" pos:end="45:46">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:55"><expr pos:start="47:9" pos:end="47:54"><name pos:start="47:9" pos:end="47:11">cmd</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:54"><name pos:start="47:15" pos:end="47:19">g_new</name><argument_list pos:start="47:20" pos:end="47:54">(<argument pos:start="47:21" pos:end="47:50"><expr pos:start="47:21" pos:end="47:50">struct <name pos:start="47:28" pos:end="47:50">virtio_gpu_ctrl_command</name></expr></argument>, <argument pos:start="47:53" pos:end="47:53"><expr pos:start="47:53" pos:end="47:53"><literal type="number" pos:start="47:53" pos:end="47:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="51:5" pos:end="51:16"><expr pos:start="51:5" pos:end="51:15"><call pos:start="51:5" pos:end="51:15"><name pos:start="51:5" pos:end="51:10">g_free</name><argument_list pos:start="51:11" pos:end="51:15">(<argument pos:start="51:12" pos:end="51:14"><expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="60:0"><expr pos:start="55:5" pos:end="55:30"><call pos:start="55:5" pos:end="55:30"><name pos:start="55:5" pos:end="55:27">virtio_gpu_process_cmdq</name><argument_list pos:start="55:28" pos:end="55:30">(<argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="59:1" pos:end="59:19">#<cpp:directive pos:start="59:2" pos:end="59:6">ifdef</cpp:directive> <name pos:start="59:8" pos:end="59:19">CONFIG_VIRGL</name></cpp:ifdef>

    <if_stmt pos:start="61:5" pos:end="68:0"><if pos:start="61:5" pos:end="68:0">if <condition pos:start="61:8" pos:end="61:30">(<expr pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:9">g</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:29">use_virgl_renderer</name></name></expr>)</condition> <block pos:start="61:32" pos:end="68:0">{<block_content pos:start="63:9" pos:end="63:39">

        <expr_stmt pos:start="63:9" pos:end="63:39"><expr pos:start="63:9" pos:end="63:38"><call pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:35">virtio_gpu_virgl_fence_poll</name><argument_list pos:start="63:36" pos:end="63:38">(<argument pos:start="63:37" pos:end="63:37"><expr pos:start="63:37" pos:end="63:37"><name pos:start="63:37" pos:end="63:37">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
