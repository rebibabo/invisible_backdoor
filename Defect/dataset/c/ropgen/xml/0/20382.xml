<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20382.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">g726_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:45">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">data_size</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:44"><decl pos:start="5:30" pos:end="5:44"><type pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:37">AVPacket</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:44">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="41:1">{<block_content pos:start="9:5" pos:end="39:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">G726Context</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:18">c</name> <init pos:start="13:20" pos:end="13:37">= <expr pos:start="13:22" pos:end="13:37"><name pos:start="13:22" pos:end="13:37"><name pos:start="13:22" pos:end="13:26">avctx</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">int16_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">samples</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:17">GetBitContext</name></type> <name pos:start="17:19" pos:end="17:20">gb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:17">init_get_bits</name><argument_list pos:start="21:18" pos:end="21:41">(<argument pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><operator pos:start="21:19" pos:end="21:19">&amp;</operator><name pos:start="21:20" pos:end="21:21">gb</name></expr></argument>, <argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">buf</name></expr></argument>, <argument pos:start="21:29" pos:end="21:40"><expr pos:start="21:29" pos:end="21:40"><name pos:start="21:29" pos:end="21:36">buf_size</name> <operator pos:start="21:38" pos:end="21:38">*</operator> <literal type="number" pos:start="21:40" pos:end="21:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="25:5" pos:end="27:65">while <condition pos:start="25:11" pos:end="25:60">(<expr pos:start="25:12" pos:end="25:59"><call pos:start="25:12" pos:end="25:30"><name pos:start="25:12" pos:end="25:25">get_bits_count</name><argument_list pos:start="25:26" pos:end="25:30">(<argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:29">gb</name></expr></argument>)</argument_list></call> <operator pos:start="25:32" pos:end="25:32">+</operator> <name pos:start="25:34" pos:end="25:45"><name pos:start="25:34" pos:end="25:34">c</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:45">code_size</name></name> <operator pos:start="25:47" pos:end="25:48">&lt;=</operator> <name pos:start="25:50" pos:end="25:57">buf_size</name><operator pos:start="25:58" pos:end="25:58">*</operator><literal type="number" pos:start="25:59" pos:end="25:59">8</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:65"><block_content pos:start="27:9" pos:end="27:65">

        <expr_stmt pos:start="27:9" pos:end="27:65"><expr pos:start="27:9" pos:end="27:64"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:16">samples</name><operator pos:start="27:17" pos:end="27:18">++</operator> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:64"><name pos:start="27:22" pos:end="27:32">g726_decode</name><argument_list pos:start="27:33" pos:end="27:64">(<argument pos:start="27:34" pos:end="27:34"><expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">c</name></expr></argument>, <argument pos:start="27:37" pos:end="27:63"><expr pos:start="27:37" pos:end="27:63"><call pos:start="27:37" pos:end="27:63"><name pos:start="27:37" pos:end="27:44">get_bits</name><argument_list pos:start="27:45" pos:end="27:63">(<argument pos:start="27:46" pos:end="27:48"><expr pos:start="27:46" pos:end="27:48"><operator pos:start="27:46" pos:end="27:46">&amp;</operator><name pos:start="27:47" pos:end="27:48">gb</name></expr></argument>, <argument pos:start="27:51" pos:end="27:62"><expr pos:start="27:51" pos:end="27:62"><name pos:start="27:51" pos:end="27:62"><name pos:start="27:51" pos:end="27:51">c</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:62">code_size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <if_stmt pos:start="31:5" pos:end="33:80"><if pos:start="31:5" pos:end="33:80">if<condition pos:start="31:7" pos:end="31:41">(<expr pos:start="31:8" pos:end="31:40"><name pos:start="31:8" pos:end="31:15">buf_size</name><operator pos:start="31:16" pos:end="31:16">*</operator><literal type="number" pos:start="31:17" pos:end="31:17">8</literal> <operator pos:start="31:19" pos:end="31:20">!=</operator> <call pos:start="31:22" pos:end="31:40"><name pos:start="31:22" pos:end="31:35">get_bits_count</name><argument_list pos:start="31:36" pos:end="31:40">(<argument pos:start="31:37" pos:end="31:39"><expr pos:start="31:37" pos:end="31:39"><operator pos:start="31:37" pos:end="31:37">&amp;</operator><name pos:start="31:38" pos:end="31:39">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:80"><block_content pos:start="33:9" pos:end="33:80">

        <expr_stmt pos:start="33:9" pos:end="33:80"><expr pos:start="33:9" pos:end="33:79"><call pos:start="33:9" pos:end="33:79"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:79">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:78"><expr pos:start="33:37" pos:end="33:78"><literal type="string" pos:start="33:37" pos:end="33:78">"Frame invalidly split, missing parser?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:52"><expr pos:start="37:5" pos:end="37:51"><operator pos:start="37:5" pos:end="37:5">*</operator><name pos:start="37:6" pos:end="37:14">data_size</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <operator pos:start="37:18" pos:end="37:18">(</operator><name pos:start="37:19" pos:end="37:25">uint8_t</name><operator pos:start="37:26" pos:end="37:26">*</operator><operator pos:start="37:27" pos:end="37:27">)</operator><name pos:start="37:28" pos:end="37:34">samples</name> <operator pos:start="37:36" pos:end="37:36">-</operator> <operator pos:start="37:38" pos:end="37:38">(</operator><name pos:start="37:39" pos:end="37:45">uint8_t</name><operator pos:start="37:46" pos:end="37:46">*</operator><operator pos:start="37:47" pos:end="37:47">)</operator><name pos:start="37:48" pos:end="37:51">data</name></expr>;</expr_stmt>

    <return pos:start="39:5" pos:end="39:20">return <expr pos:start="39:12" pos:end="39:19"><name pos:start="39:12" pos:end="39:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
