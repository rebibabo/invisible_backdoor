<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21873.c" pos:tabs="8"><function pos:start="1:1" pos:end="319:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">msmpeg4_decode_picture_header</name><parameter_list pos:start="1:34" pos:end="1:53">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:48">MpegEncContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type> <name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="319:1">{<block_content pos:start="5:5" pos:end="317:13">

    <decl_stmt pos:start="5:5" pos:end="28:0"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">code</name></decl>;</decl_stmt>



<cpp:if pos:start="9:1" pos:end="9:5">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:5"><literal type="number" pos:start="9:5" pos:end="9:5">0</literal></expr></cpp:if>

{

int i;

for(i=0; i&lt;s-&gt;gb.size*8; i++)

    printf("%d", get_bits1(&amp;s-&gt;gb));

<comment type="line" pos:start="19:1" pos:end="19:24">//    get_bits1(&amp;s-&gt;gb);</comment>

printf("END\n");

return -1;

}

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="31:5" pos:end="49:5"><if pos:start="31:5" pos:end="49:5">if<condition pos:start="31:7" pos:end="31:29">(<expr pos:start="31:8" pos:end="31:28"><name pos:start="31:8" pos:end="31:25"><name pos:start="31:8" pos:end="31:8">s</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:25">msmpeg4_version</name></name><operator pos:start="31:26" pos:end="31:27">==</operator><literal type="number" pos:start="31:28" pos:end="31:28">1</literal></expr>)</condition><block pos:start="31:30" pos:end="49:5">{<block_content pos:start="33:9" pos:end="47:33">

        <decl_stmt pos:start="33:9" pos:end="33:28"><decl pos:start="33:9" pos:end="33:22"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:22">start_code</name></decl>, <decl pos:start="33:25" pos:end="33:27"><type ref="prev" pos:start="33:9" pos:end="33:11"/><name pos:start="33:25" pos:end="33:27">num</name></decl>;</decl_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:71"><expr pos:start="35:9" pos:end="35:70"><name pos:start="35:9" pos:end="35:18">start_code</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <operator pos:start="35:22" pos:end="35:22">(</operator><call pos:start="35:23" pos:end="35:42"><name pos:start="35:23" pos:end="35:30">get_bits</name><argument_list pos:start="35:31" pos:end="35:42">(<argument pos:start="35:32" pos:end="35:37"><expr pos:start="35:32" pos:end="35:37"><operator pos:start="35:32" pos:end="35:32">&amp;</operator><name pos:start="35:33" pos:end="35:37"><name pos:start="35:33" pos:end="35:33">s</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:37">gb</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:41"><expr pos:start="35:40" pos:end="35:41"><literal type="number" pos:start="35:40" pos:end="35:41">16</literal></expr></argument>)</argument_list></call><operator pos:start="35:43" pos:end="35:44">&lt;&lt;</operator><literal type="number" pos:start="35:45" pos:end="35:46">16</literal><operator pos:start="35:47" pos:end="35:47">)</operator> <operator pos:start="35:49" pos:end="35:49">|</operator> <call pos:start="35:51" pos:end="35:70"><name pos:start="35:51" pos:end="35:58">get_bits</name><argument_list pos:start="35:59" pos:end="35:70">(<argument pos:start="35:60" pos:end="35:65"><expr pos:start="35:60" pos:end="35:65"><operator pos:start="35:60" pos:end="35:60">&amp;</operator><name pos:start="35:61" pos:end="35:65"><name pos:start="35:61" pos:end="35:61">s</name><operator pos:start="35:62" pos:end="35:63">-&gt;</operator><name pos:start="35:64" pos:end="35:65">gb</name></name></expr></argument>, <argument pos:start="35:68" pos:end="35:69"><expr pos:start="35:68" pos:end="35:69"><literal type="number" pos:start="35:68" pos:end="35:69">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if<condition pos:start="37:11" pos:end="37:34">(<expr pos:start="37:12" pos:end="37:33"><name pos:start="37:12" pos:end="37:21">start_code</name><operator pos:start="37:22" pos:end="37:23">!=</operator><literal type="number" pos:start="37:24" pos:end="37:33">0x00000100</literal></expr>)</condition><block pos:start="37:35" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:22">

            <expr_stmt pos:start="39:13" pos:end="39:51"><expr pos:start="39:13" pos:end="39:50"><call pos:start="39:13" pos:end="39:50"><name pos:start="39:13" pos:end="39:19">fprintf</name><argument_list pos:start="39:20" pos:end="39:50">(<argument pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:26">stderr</name></expr></argument>, <argument pos:start="39:29" pos:end="39:49"><expr pos:start="39:29" pos:end="39:49"><literal type="string" pos:start="39:29" pos:end="39:49">"invalid startcode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:22">return <expr pos:start="41:20" pos:end="41:21"><operator pos:start="41:20" pos:end="41:20">-</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:11">num</name><operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:32"><name pos:start="47:14" pos:end="47:21">get_bits</name><argument_list pos:start="47:22" pos:end="47:32">(<argument pos:start="47:23" pos:end="47:28"><expr pos:start="47:23" pos:end="47:28"><operator pos:start="47:23" pos:end="47:23">&amp;</operator><name pos:start="47:24" pos:end="47:28"><name pos:start="47:24" pos:end="47:24">s</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:28">gb</name></name></expr></argument>, <argument pos:start="47:31" pos:end="47:31"><expr pos:start="47:31" pos:end="47:31"><literal type="number" pos:start="47:31" pos:end="47:31">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="47:35" pos:end="47:52">// frame number */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:43"><expr pos:start="53:5" pos:end="53:42"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:16">pict_type</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:38"><name pos:start="53:20" pos:end="53:27">get_bits</name><argument_list pos:start="53:28" pos:end="53:38">(<argument pos:start="53:29" pos:end="53:34"><expr pos:start="53:29" pos:end="53:34"><operator pos:start="53:29" pos:end="53:29">&amp;</operator><name pos:start="53:30" pos:end="53:34"><name pos:start="53:30" pos:end="53:30">s</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:34">gb</name></name></expr></argument>, <argument pos:start="53:37" pos:end="53:37"><expr pos:start="53:37" pos:end="53:37"><literal type="number" pos:start="53:37" pos:end="53:37">2</literal></expr></argument>)</argument_list></call> <operator pos:start="53:40" pos:end="53:40">+</operator> <literal type="number" pos:start="53:42" pos:end="53:42">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="78:0"><if pos:start="55:5" pos:end="78:0">if <condition pos:start="55:8" pos:end="57:31">(<expr pos:start="55:9" pos:end="57:30"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:20">pict_type</name></name> <operator pos:start="55:22" pos:end="55:23">!=</operator> <name pos:start="55:25" pos:end="55:30">I_TYPE</name> <operator pos:start="55:32" pos:end="55:33">&amp;&amp;</operator>

        <name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:20">pict_type</name></name> <operator pos:start="57:22" pos:end="57:23">!=</operator> <name pos:start="57:25" pos:end="57:30">P_TYPE</name></expr>)</condition><block pos:start="57:32" pos:end="78:0">{<block_content pos:start="59:9" pos:end="61:18">

        <expr_stmt pos:start="59:9" pos:end="59:50"><expr pos:start="59:9" pos:end="59:49"><call pos:start="59:9" pos:end="59:49"><name pos:start="59:9" pos:end="59:15">fprintf</name><argument_list pos:start="59:16" pos:end="59:49">(<argument pos:start="59:17" pos:end="59:22"><expr pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:22">stderr</name></expr></argument>, <argument pos:start="59:25" pos:end="59:48"><expr pos:start="59:25" pos:end="59:48"><literal type="string" pos:start="59:25" pos:end="59:48">"invalid picture type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:18">return <expr pos:start="61:16" pos:end="61:17"><operator pos:start="61:16" pos:end="61:16">-</operator><literal type="number" pos:start="61:17" pos:end="61:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="65:1" pos:end="65:5">#<cpp:directive pos:start="65:2" pos:end="65:3">if</cpp:directive> <expr pos:start="65:5" pos:end="65:5"><literal type="number" pos:start="65:5" pos:end="65:5">0</literal></expr></cpp:if>

{

    static int had_i=0;

    if(s-&gt;pict_type == I_TYPE) had_i=1;

    if(!had_i) return -1;

}

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="79:5" pos:end="79:36"><expr pos:start="79:5" pos:end="79:35"><name pos:start="79:5" pos:end="79:13"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:13">qscale</name></name> <operator pos:start="79:15" pos:end="79:15">=</operator> <call pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:24">get_bits</name><argument_list pos:start="79:25" pos:end="79:35">(<argument pos:start="79:26" pos:end="79:31"><expr pos:start="79:26" pos:end="79:31"><operator pos:start="79:26" pos:end="79:26">&amp;</operator><name pos:start="79:27" pos:end="79:31"><name pos:start="79:27" pos:end="79:27">s</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:31">gb</name></name></expr></argument>, <argument pos:start="79:34" pos:end="79:34"><expr pos:start="79:34" pos:end="79:34"><literal type="number" pos:start="79:34" pos:end="79:34">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="299:5"><if pos:start="83:5" pos:end="195:5">if <condition pos:start="83:8" pos:end="83:31">(<expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:20">pict_type</name></name> <operator pos:start="83:22" pos:end="83:23">==</operator> <name pos:start="83:25" pos:end="83:30">I_TYPE</name></expr>)</condition> <block pos:start="83:33" pos:end="195:5">{<block_content pos:start="85:9" pos:end="179:27">

        <expr_stmt pos:start="85:9" pos:end="85:35"><expr pos:start="85:9" pos:end="85:34"><name pos:start="85:9" pos:end="85:12">code</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <call pos:start="85:16" pos:end="85:34"><name pos:start="85:16" pos:end="85:23">get_bits</name><argument_list pos:start="85:24" pos:end="85:34">(<argument pos:start="85:25" pos:end="85:30"><expr pos:start="85:25" pos:end="85:30"><operator pos:start="85:25" pos:end="85:25">&amp;</operator><name pos:start="85:26" pos:end="85:30"><name pos:start="85:26" pos:end="85:26">s</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:30">gb</name></name></expr></argument>, <argument pos:start="85:33" pos:end="85:33"><expr pos:start="85:33" pos:end="85:33"><literal type="number" pos:start="85:33" pos:end="85:33">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

        <if_stmt pos:start="87:9" pos:end="117:9"><if pos:start="87:9" pos:end="101:9">if<condition pos:start="87:11" pos:end="87:33">(<expr pos:start="87:12" pos:end="87:32"><name pos:start="87:12" pos:end="87:29"><name pos:start="87:12" pos:end="87:12">s</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:29">msmpeg4_version</name></name><operator pos:start="87:30" pos:end="87:31">==</operator><literal type="number" pos:start="87:32" pos:end="87:32">1</literal></expr>)</condition><block pos:start="87:34" pos:end="101:9">{<block_content pos:start="89:13" pos:end="99:35">

            <if_stmt pos:start="89:13" pos:end="95:13"><if pos:start="89:13" pos:end="95:13">if<condition pos:start="89:15" pos:end="89:44">(<expr pos:start="89:16" pos:end="89:43"><name pos:start="89:16" pos:end="89:19">code</name><operator pos:start="89:20" pos:end="89:21">==</operator><literal type="number" pos:start="89:22" pos:end="89:22">0</literal> <operator pos:start="89:24" pos:end="89:25">||</operator> <name pos:start="89:27" pos:end="89:30">code</name><operator pos:start="89:31" pos:end="89:31">&gt;</operator><name pos:start="89:32" pos:end="89:43"><name pos:start="89:32" pos:end="89:32">s</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:43">mb_height</name></name></expr>)</condition><block pos:start="89:45" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:26">

                <expr_stmt pos:start="91:17" pos:end="91:67"><expr pos:start="91:17" pos:end="91:66"><call pos:start="91:17" pos:end="91:66"><name pos:start="91:17" pos:end="91:23">fprintf</name><argument_list pos:start="91:24" pos:end="91:66">(<argument pos:start="91:25" pos:end="91:30"><expr pos:start="91:25" pos:end="91:30"><name pos:start="91:25" pos:end="91:30">stderr</name></expr></argument>, <argument pos:start="91:33" pos:end="91:59"><expr pos:start="91:33" pos:end="91:59"><literal type="string" pos:start="91:33" pos:end="91:59">"invalid slice height %d\n"</literal></expr></argument>, <argument pos:start="91:62" pos:end="91:65"><expr pos:start="91:62" pos:end="91:65"><name pos:start="91:62" pos:end="91:65">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="93:17" pos:end="93:26">return <expr pos:start="93:24" pos:end="93:25"><operator pos:start="93:24" pos:end="93:24">-</operator><literal type="number" pos:start="93:25" pos:end="93:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="99:13" pos:end="99:35"><expr pos:start="99:13" pos:end="99:34"><name pos:start="99:13" pos:end="99:27"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:27">slice_height</name></name> <operator pos:start="99:29" pos:end="99:29">=</operator> <name pos:start="99:31" pos:end="99:34">code</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="101:10" pos:end="117:9">else<block pos:start="101:14" pos:end="117:9">{<block_content pos:start="105:13" pos:end="115:59">

            <comment type="block" pos:start="103:13" pos:end="103:56">/* 0x17: one slice, 0x18: two slices, ... */</comment>

            <if_stmt pos:start="105:13" pos:end="111:13"><if pos:start="105:13" pos:end="111:13">if <condition pos:start="105:16" pos:end="105:28">(<expr pos:start="105:17" pos:end="105:27"><name pos:start="105:17" pos:end="105:20">code</name> <operator pos:start="105:22" pos:end="105:22">&lt;</operator> <literal type="number" pos:start="105:24" pos:end="105:27">0x17</literal></expr>)</condition><block pos:start="105:29" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:26">

                <expr_stmt pos:start="107:17" pos:end="107:68"><expr pos:start="107:17" pos:end="107:67"><call pos:start="107:17" pos:end="107:67"><name pos:start="107:17" pos:end="107:23">fprintf</name><argument_list pos:start="107:24" pos:end="107:67">(<argument pos:start="107:25" pos:end="107:30"><expr pos:start="107:25" pos:end="107:30"><name pos:start="107:25" pos:end="107:30">stderr</name></expr></argument>, <argument pos:start="107:33" pos:end="107:60"><expr pos:start="107:33" pos:end="107:60"><literal type="string" pos:start="107:33" pos:end="107:60">"error, slice code was %X\n"</literal></expr></argument>, <argument pos:start="107:63" pos:end="107:66"><expr pos:start="107:63" pos:end="107:66"><name pos:start="107:63" pos:end="107:66">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="109:17" pos:end="109:26">return <expr pos:start="109:24" pos:end="109:25"><operator pos:start="109:24" pos:end="109:24">-</operator><literal type="number" pos:start="109:25" pos:end="109:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:59"><expr pos:start="115:13" pos:end="115:58"><name pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:27">slice_height</name></name> <operator pos:start="115:29" pos:end="115:29">=</operator> <name pos:start="115:31" pos:end="115:42"><name pos:start="115:31" pos:end="115:31">s</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:42">mb_height</name></name> <operator pos:start="115:44" pos:end="115:44">/</operator> <operator pos:start="115:46" pos:end="115:46">(</operator><name pos:start="115:47" pos:end="115:50">code</name> <operator pos:start="115:52" pos:end="115:52">-</operator> <literal type="number" pos:start="115:54" pos:end="115:57">0x16</literal><operator pos:start="115:58" pos:end="115:58">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <switch pos:start="121:9" pos:end="177:9">switch<condition pos:start="121:15" pos:end="121:34">(<expr pos:start="121:16" pos:end="121:33"><name pos:start="121:16" pos:end="121:33"><name pos:start="121:16" pos:end="121:16">s</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:33">msmpeg4_version</name></name></expr>)</condition><block pos:start="121:35" pos:end="177:9">{<block_content pos:start="123:9" pos:end="175:18">

        <case pos:start="123:9" pos:end="123:15">case <expr pos:start="123:14" pos:end="123:14"><literal type="number" pos:start="123:14" pos:end="123:14">1</literal></expr>:</case>

        <case pos:start="125:9" pos:end="125:15">case <expr pos:start="125:14" pos:end="125:14"><literal type="number" pos:start="125:14" pos:end="125:14">2</literal></expr>:</case>

            <expr_stmt pos:start="127:13" pos:end="127:41"><expr pos:start="127:13" pos:end="127:40"><name pos:start="127:13" pos:end="127:36"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:36">rl_chroma_table_index</name></name> <operator pos:start="127:38" pos:end="127:38">=</operator> <literal type="number" pos:start="127:40" pos:end="127:40">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:34"><expr pos:start="129:13" pos:end="129:33"><name pos:start="129:13" pos:end="129:29"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:29">rl_table_index</name></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <literal type="number" pos:start="129:33" pos:end="129:33">2</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="133:13" pos:end="133:34"><expr pos:start="133:13" pos:end="133:33"><name pos:start="133:13" pos:end="133:29"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:29">dc_table_index</name></name> <operator pos:start="133:31" pos:end="133:31">=</operator> <literal type="number" pos:start="133:33" pos:end="133:33">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="133:36" pos:end="133:45">//not used</comment>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:15">case <expr pos:start="137:14" pos:end="137:14"><literal type="number" pos:start="137:14" pos:end="137:14">3</literal></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:57"><expr pos:start="139:13" pos:end="139:56"><name pos:start="139:13" pos:end="139:36"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:36">rl_chroma_table_index</name></name> <operator pos:start="139:38" pos:end="139:38">=</operator> <call pos:start="139:40" pos:end="139:56"><name pos:start="139:40" pos:end="139:48">decode012</name><argument_list pos:start="139:49" pos:end="139:56">(<argument pos:start="139:50" pos:end="139:55"><expr pos:start="139:50" pos:end="139:55"><operator pos:start="139:50" pos:end="139:50">&amp;</operator><name pos:start="139:51" pos:end="139:55"><name pos:start="139:51" pos:end="139:51">s</name><operator pos:start="139:52" pos:end="139:53">-&gt;</operator><name pos:start="139:54" pos:end="139:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:50"><expr pos:start="141:13" pos:end="141:49"><name pos:start="141:13" pos:end="141:29"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:29">rl_table_index</name></name> <operator pos:start="141:31" pos:end="141:31">=</operator> <call pos:start="141:33" pos:end="141:49"><name pos:start="141:33" pos:end="141:41">decode012</name><argument_list pos:start="141:42" pos:end="141:49">(<argument pos:start="141:43" pos:end="141:48"><expr pos:start="141:43" pos:end="141:48"><operator pos:start="141:43" pos:end="141:43">&amp;</operator><name pos:start="141:44" pos:end="141:48"><name pos:start="141:44" pos:end="141:44">s</name><operator pos:start="141:45" pos:end="141:46">-&gt;</operator><name pos:start="141:47" pos:end="141:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="145:13" pos:end="145:50"><expr pos:start="145:13" pos:end="145:49"><name pos:start="145:13" pos:end="145:29"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:29">dc_table_index</name></name> <operator pos:start="145:31" pos:end="145:31">=</operator> <call pos:start="145:33" pos:end="145:49"><name pos:start="145:33" pos:end="145:41">get_bits1</name><argument_list pos:start="145:42" pos:end="145:49">(<argument pos:start="145:43" pos:end="145:48"><expr pos:start="145:43" pos:end="145:48"><operator pos:start="145:43" pos:end="145:43">&amp;</operator><name pos:start="145:44" pos:end="145:48"><name pos:start="145:44" pos:end="145:44">s</name><operator pos:start="145:45" pos:end="145:46">-&gt;</operator><name pos:start="145:47" pos:end="145:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <case pos:start="149:9" pos:end="149:15">case <expr pos:start="149:14" pos:end="149:14"><literal type="number" pos:start="149:14" pos:end="149:14">4</literal></expr>:</case>

            <expr_stmt pos:start="151:13" pos:end="151:57"><expr pos:start="151:13" pos:end="151:56"><call pos:start="151:13" pos:end="151:56"><name pos:start="151:13" pos:end="151:37">msmpeg4_decode_ext_header</name><argument_list pos:start="151:38" pos:end="151:56">(<argument pos:start="151:39" pos:end="151:39"><expr pos:start="151:39" pos:end="151:39"><name pos:start="151:39" pos:end="151:39">s</name></expr></argument>, <argument pos:start="151:42" pos:end="151:55"><expr pos:start="151:42" pos:end="151:55"><operator pos:start="151:42" pos:end="151:42">(</operator><literal type="number" pos:start="151:43" pos:end="151:44">2</literal><operator pos:start="151:44" pos:end="151:44">+</operator><literal type="number" pos:start="151:45" pos:end="151:46">5</literal><operator pos:start="151:46" pos:end="151:46">+</operator><literal type="number" pos:start="151:47" pos:end="151:48">5</literal><operator pos:start="151:48" pos:end="151:48">+</operator><literal type="number" pos:start="151:49" pos:end="151:51">17</literal><operator pos:start="151:51" pos:end="151:51">+</operator><literal type="number" pos:start="151:52" pos:end="151:52">7</literal><operator pos:start="151:53" pos:end="151:53">)</operator><operator pos:start="151:54" pos:end="151:54">/</operator><literal type="number" pos:start="151:55" pos:end="151:55">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="155:13" pos:end="157:65"><if pos:start="155:13" pos:end="155:81">if<condition pos:start="155:15" pos:end="155:42">(<expr pos:start="155:16" pos:end="155:41"><name pos:start="155:16" pos:end="155:26"><name pos:start="155:16" pos:end="155:16">s</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:26">bit_rate</name></name> <operator pos:start="155:28" pos:end="155:28">&gt;</operator> <name pos:start="155:30" pos:end="155:41">MBAC_BITRATE</name></expr>)</condition><block type="pseudo" pos:start="155:44" pos:end="155:81"><block_content pos:start="155:44" pos:end="155:81"> <expr_stmt pos:start="155:44" pos:end="155:81"><expr pos:start="155:44" pos:end="155:80"><name pos:start="155:44" pos:end="155:61"><name pos:start="155:44" pos:end="155:44">s</name><operator pos:start="155:45" pos:end="155:46">-&gt;</operator><name pos:start="155:47" pos:end="155:61">per_mb_rl_table</name></name><operator pos:start="155:62" pos:end="155:62">=</operator> <call pos:start="155:64" pos:end="155:80"><name pos:start="155:64" pos:end="155:72">get_bits1</name><argument_list pos:start="155:73" pos:end="155:80">(<argument pos:start="155:74" pos:end="155:79"><expr pos:start="155:74" pos:end="155:79"><operator pos:start="155:74" pos:end="155:74">&amp;</operator><name pos:start="155:75" pos:end="155:79"><name pos:start="155:75" pos:end="155:75">s</name><operator pos:start="155:76" pos:end="155:77">-&gt;</operator><name pos:start="155:78" pos:end="155:79">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="157:13" pos:end="157:65">else<block type="pseudo" pos:start="157:44" pos:end="157:65"><block_content pos:start="157:44" pos:end="157:65">                           <expr_stmt pos:start="157:44" pos:end="157:65"><expr pos:start="157:44" pos:end="157:64"><name pos:start="157:44" pos:end="157:61"><name pos:start="157:44" pos:end="157:44">s</name><operator pos:start="157:45" pos:end="157:46">-&gt;</operator><name pos:start="157:47" pos:end="157:61">per_mb_rl_table</name></name><operator pos:start="157:62" pos:end="157:62">=</operator> <literal type="number" pos:start="157:64" pos:end="157:64">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            

            <if_stmt pos:start="161:13" pos:end="167:13"><if pos:start="161:13" pos:end="167:13">if<condition pos:start="161:15" pos:end="161:35">(<expr pos:start="161:16" pos:end="161:34"><operator pos:start="161:16" pos:end="161:16">!</operator><name pos:start="161:17" pos:end="161:34"><name pos:start="161:17" pos:end="161:17">s</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:34">per_mb_rl_table</name></name></expr>)</condition><block pos:start="161:36" pos:end="167:13">{<block_content pos:start="163:17" pos:end="165:54">

                <expr_stmt pos:start="163:17" pos:end="163:61"><expr pos:start="163:17" pos:end="163:60"><name pos:start="163:17" pos:end="163:40"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:40">rl_chroma_table_index</name></name> <operator pos:start="163:42" pos:end="163:42">=</operator> <call pos:start="163:44" pos:end="163:60"><name pos:start="163:44" pos:end="163:52">decode012</name><argument_list pos:start="163:53" pos:end="163:60">(<argument pos:start="163:54" pos:end="163:59"><expr pos:start="163:54" pos:end="163:59"><operator pos:start="163:54" pos:end="163:54">&amp;</operator><name pos:start="163:55" pos:end="163:59"><name pos:start="163:55" pos:end="163:55">s</name><operator pos:start="163:56" pos:end="163:57">-&gt;</operator><name pos:start="163:58" pos:end="163:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:54"><expr pos:start="165:17" pos:end="165:53"><name pos:start="165:17" pos:end="165:33"><name pos:start="165:17" pos:end="165:17">s</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:33">rl_table_index</name></name> <operator pos:start="165:35" pos:end="165:35">=</operator> <call pos:start="165:37" pos:end="165:53"><name pos:start="165:37" pos:end="165:45">decode012</name><argument_list pos:start="165:46" pos:end="165:53">(<argument pos:start="165:47" pos:end="165:52"><expr pos:start="165:47" pos:end="165:52"><operator pos:start="165:47" pos:end="165:47">&amp;</operator><name pos:start="165:48" pos:end="165:52"><name pos:start="165:48" pos:end="165:48">s</name><operator pos:start="165:49" pos:end="165:50">-&gt;</operator><name pos:start="165:51" pos:end="165:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="171:13" pos:end="171:50"><expr pos:start="171:13" pos:end="171:49"><name pos:start="171:13" pos:end="171:29"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:29">dc_table_index</name></name> <operator pos:start="171:31" pos:end="171:31">=</operator> <call pos:start="171:33" pos:end="171:49"><name pos:start="171:33" pos:end="171:41">get_bits1</name><argument_list pos:start="171:42" pos:end="171:49">(<argument pos:start="171:43" pos:end="171:48"><expr pos:start="171:43" pos:end="171:48"><operator pos:start="171:43" pos:end="171:43">&amp;</operator><name pos:start="171:44" pos:end="171:48"><name pos:start="171:44" pos:end="171:44">s</name><operator pos:start="171:45" pos:end="171:46">-&gt;</operator><name pos:start="171:47" pos:end="171:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:35"><expr pos:start="173:13" pos:end="173:34"><name pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:31">inter_intra_pred</name></name><operator pos:start="173:32" pos:end="173:32">=</operator> <literal type="number" pos:start="173:34" pos:end="173:34">0</literal></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="179:9" pos:end="179:27"><expr pos:start="179:9" pos:end="179:26"><name pos:start="179:9" pos:end="179:22"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:22">no_rounding</name></name> <operator pos:start="179:24" pos:end="179:24">=</operator> <literal type="number" pos:start="179:26" pos:end="179:26">1</literal></expr>;</expr_stmt>

<comment type="block" pos:start="181:1" pos:end="193:35">/*	printf("qscale:%d rlc:%d rl:%d dc:%d mbrl:%d slice:%d   \n", 

		s-&gt;qscale,

		s-&gt;rl_chroma_table_index,

		s-&gt;rl_table_index, 

		s-&gt;dc_table_index,

                s-&gt;per_mb_rl_table,

                s-&gt;slice_height);*/</comment>

    </block_content>}</block></if> <else pos:start="195:7" pos:end="299:5">else <block pos:start="195:12" pos:end="299:5">{<block_content pos:start="197:9" pos:end="297:9">

        <switch pos:start="197:9" pos:end="271:9">switch<condition pos:start="197:15" pos:end="197:34">(<expr pos:start="197:16" pos:end="197:33"><name pos:start="197:16" pos:end="197:33"><name pos:start="197:16" pos:end="197:16">s</name><operator pos:start="197:17" pos:end="197:18">-&gt;</operator><name pos:start="197:19" pos:end="197:33">msmpeg4_version</name></name></expr>)</condition><block pos:start="197:35" pos:end="271:9">{<block_content pos:start="199:9" pos:end="269:18">

        <case pos:start="199:9" pos:end="199:15">case <expr pos:start="199:14" pos:end="199:14"><literal type="number" pos:start="199:14" pos:end="199:14">1</literal></expr>:</case>

        <case pos:start="201:9" pos:end="201:15">case <expr pos:start="201:14" pos:end="201:14"><literal type="number" pos:start="201:14" pos:end="201:14">2</literal></expr>:</case>

            <if_stmt pos:start="203:13" pos:end="209:56"><if pos:start="203:13" pos:end="205:40">if<condition pos:start="203:15" pos:end="203:37">(<expr pos:start="203:16" pos:end="203:36"><name pos:start="203:16" pos:end="203:33"><name pos:start="203:16" pos:end="203:16">s</name><operator pos:start="203:17" pos:end="203:18">-&gt;</operator><name pos:start="203:19" pos:end="203:33">msmpeg4_version</name></name><operator pos:start="203:34" pos:end="203:35">==</operator><literal type="number" pos:start="203:36" pos:end="203:36">1</literal></expr>)</condition><block type="pseudo" pos:start="205:17" pos:end="205:40"><block_content pos:start="205:17" pos:end="205:40">

                <expr_stmt pos:start="205:17" pos:end="205:40"><expr pos:start="205:17" pos:end="205:39"><name pos:start="205:17" pos:end="205:35"><name pos:start="205:17" pos:end="205:17">s</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:35">use_skip_mb_code</name></name> <operator pos:start="205:37" pos:end="205:37">=</operator> <literal type="number" pos:start="205:39" pos:end="205:39">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="207:13" pos:end="209:56">else<block type="pseudo" pos:start="209:17" pos:end="209:56"><block_content pos:start="209:17" pos:end="209:56">

                <expr_stmt pos:start="209:17" pos:end="209:56"><expr pos:start="209:17" pos:end="209:55"><name pos:start="209:17" pos:end="209:35"><name pos:start="209:17" pos:end="209:17">s</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:35">use_skip_mb_code</name></name> <operator pos:start="209:37" pos:end="209:37">=</operator> <call pos:start="209:39" pos:end="209:55"><name pos:start="209:39" pos:end="209:47">get_bits1</name><argument_list pos:start="209:48" pos:end="209:55">(<argument pos:start="209:49" pos:end="209:54"><expr pos:start="209:49" pos:end="209:54"><operator pos:start="209:49" pos:end="209:49">&amp;</operator><name pos:start="209:50" pos:end="209:54"><name pos:start="209:50" pos:end="209:50">s</name><operator pos:start="209:51" pos:end="209:52">-&gt;</operator><name pos:start="209:53" pos:end="209:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:34"><expr pos:start="211:13" pos:end="211:33"><name pos:start="211:13" pos:end="211:29"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:29">rl_table_index</name></name> <operator pos:start="211:31" pos:end="211:31">=</operator> <literal type="number" pos:start="211:33" pos:end="211:33">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:57"><expr pos:start="213:13" pos:end="213:56"><name pos:start="213:13" pos:end="213:36"><name pos:start="213:13" pos:end="213:13">s</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:36">rl_chroma_table_index</name></name> <operator pos:start="213:38" pos:end="213:38">=</operator> <name pos:start="213:40" pos:end="213:56"><name pos:start="213:40" pos:end="213:40">s</name><operator pos:start="213:41" pos:end="213:42">-&gt;</operator><name pos:start="213:43" pos:end="213:56">rl_table_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:34"><expr pos:start="215:13" pos:end="215:33"><name pos:start="215:13" pos:end="215:29"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:29">dc_table_index</name></name> <operator pos:start="215:31" pos:end="215:31">=</operator> <literal type="number" pos:start="215:33" pos:end="215:33">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="215:36" pos:end="215:45">//not used</comment>

            <expr_stmt pos:start="217:13" pos:end="217:34"><expr pos:start="217:13" pos:end="217:33"><name pos:start="217:13" pos:end="217:29"><name pos:start="217:13" pos:end="217:13">s</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:29">mv_table_index</name></name> <operator pos:start="217:31" pos:end="217:31">=</operator> <literal type="number" pos:start="217:33" pos:end="217:33">0</literal></expr>;</expr_stmt>

            <break pos:start="219:13" pos:end="219:18">break;</break>

        <case pos:start="221:9" pos:end="221:15">case <expr pos:start="221:14" pos:end="221:14"><literal type="number" pos:start="221:14" pos:end="221:14">3</literal></expr>:</case>

            <expr_stmt pos:start="223:13" pos:end="223:52"><expr pos:start="223:13" pos:end="223:51"><name pos:start="223:13" pos:end="223:31"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:31">use_skip_mb_code</name></name> <operator pos:start="223:33" pos:end="223:33">=</operator> <call pos:start="223:35" pos:end="223:51"><name pos:start="223:35" pos:end="223:43">get_bits1</name><argument_list pos:start="223:44" pos:end="223:51">(<argument pos:start="223:45" pos:end="223:50"><expr pos:start="223:45" pos:end="223:50"><operator pos:start="223:45" pos:end="223:45">&amp;</operator><name pos:start="223:46" pos:end="223:50"><name pos:start="223:46" pos:end="223:46">s</name><operator pos:start="223:47" pos:end="223:48">-&gt;</operator><name pos:start="223:49" pos:end="223:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:50"><expr pos:start="225:13" pos:end="225:49"><name pos:start="225:13" pos:end="225:29"><name pos:start="225:13" pos:end="225:13">s</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:29">rl_table_index</name></name> <operator pos:start="225:31" pos:end="225:31">=</operator> <call pos:start="225:33" pos:end="225:49"><name pos:start="225:33" pos:end="225:41">decode012</name><argument_list pos:start="225:42" pos:end="225:49">(<argument pos:start="225:43" pos:end="225:48"><expr pos:start="225:43" pos:end="225:48"><operator pos:start="225:43" pos:end="225:43">&amp;</operator><name pos:start="225:44" pos:end="225:48"><name pos:start="225:44" pos:end="225:44">s</name><operator pos:start="225:45" pos:end="225:46">-&gt;</operator><name pos:start="225:47" pos:end="225:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:57"><expr pos:start="227:13" pos:end="227:56"><name pos:start="227:13" pos:end="227:36"><name pos:start="227:13" pos:end="227:13">s</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:36">rl_chroma_table_index</name></name> <operator pos:start="227:38" pos:end="227:38">=</operator> <name pos:start="227:40" pos:end="227:56"><name pos:start="227:40" pos:end="227:40">s</name><operator pos:start="227:41" pos:end="227:42">-&gt;</operator><name pos:start="227:43" pos:end="227:56">rl_table_index</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="231:13" pos:end="231:50"><expr pos:start="231:13" pos:end="231:49"><name pos:start="231:13" pos:end="231:29"><name pos:start="231:13" pos:end="231:13">s</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:29">dc_table_index</name></name> <operator pos:start="231:31" pos:end="231:31">=</operator> <call pos:start="231:33" pos:end="231:49"><name pos:start="231:33" pos:end="231:41">get_bits1</name><argument_list pos:start="231:42" pos:end="231:49">(<argument pos:start="231:43" pos:end="231:48"><expr pos:start="231:43" pos:end="231:48"><operator pos:start="231:43" pos:end="231:43">&amp;</operator><name pos:start="231:44" pos:end="231:48"><name pos:start="231:44" pos:end="231:44">s</name><operator pos:start="231:45" pos:end="231:46">-&gt;</operator><name pos:start="231:47" pos:end="231:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="235:13" pos:end="235:50"><expr pos:start="235:13" pos:end="235:49"><name pos:start="235:13" pos:end="235:29"><name pos:start="235:13" pos:end="235:13">s</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:29">mv_table_index</name></name> <operator pos:start="235:31" pos:end="235:31">=</operator> <call pos:start="235:33" pos:end="235:49"><name pos:start="235:33" pos:end="235:41">get_bits1</name><argument_list pos:start="235:42" pos:end="235:49">(<argument pos:start="235:43" pos:end="235:48"><expr pos:start="235:43" pos:end="235:48"><operator pos:start="235:43" pos:end="235:43">&amp;</operator><name pos:start="235:44" pos:end="235:48"><name pos:start="235:44" pos:end="235:44">s</name><operator pos:start="235:45" pos:end="235:46">-&gt;</operator><name pos:start="235:47" pos:end="235:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="237:13" pos:end="237:18">break;</break>

        <case pos:start="239:9" pos:end="239:15">case <expr pos:start="239:14" pos:end="239:14"><literal type="number" pos:start="239:14" pos:end="239:14">4</literal></expr>:</case>

            <expr_stmt pos:start="241:13" pos:end="241:52"><expr pos:start="241:13" pos:end="241:51"><name pos:start="241:13" pos:end="241:31"><name pos:start="241:13" pos:end="241:13">s</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:31">use_skip_mb_code</name></name> <operator pos:start="241:33" pos:end="241:33">=</operator> <call pos:start="241:35" pos:end="241:51"><name pos:start="241:35" pos:end="241:43">get_bits1</name><argument_list pos:start="241:44" pos:end="241:51">(<argument pos:start="241:45" pos:end="241:50"><expr pos:start="241:45" pos:end="241:50"><operator pos:start="241:45" pos:end="241:45">&amp;</operator><name pos:start="241:46" pos:end="241:50"><name pos:start="241:46" pos:end="241:46">s</name><operator pos:start="241:47" pos:end="241:48">-&gt;</operator><name pos:start="241:49" pos:end="241:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="245:13" pos:end="247:65"><if pos:start="245:13" pos:end="245:81">if<condition pos:start="245:15" pos:end="245:42">(<expr pos:start="245:16" pos:end="245:41"><name pos:start="245:16" pos:end="245:26"><name pos:start="245:16" pos:end="245:16">s</name><operator pos:start="245:17" pos:end="245:18">-&gt;</operator><name pos:start="245:19" pos:end="245:26">bit_rate</name></name> <operator pos:start="245:28" pos:end="245:28">&gt;</operator> <name pos:start="245:30" pos:end="245:41">MBAC_BITRATE</name></expr>)</condition><block type="pseudo" pos:start="245:44" pos:end="245:81"><block_content pos:start="245:44" pos:end="245:81"> <expr_stmt pos:start="245:44" pos:end="245:81"><expr pos:start="245:44" pos:end="245:80"><name pos:start="245:44" pos:end="245:61"><name pos:start="245:44" pos:end="245:44">s</name><operator pos:start="245:45" pos:end="245:46">-&gt;</operator><name pos:start="245:47" pos:end="245:61">per_mb_rl_table</name></name><operator pos:start="245:62" pos:end="245:62">=</operator> <call pos:start="245:64" pos:end="245:80"><name pos:start="245:64" pos:end="245:72">get_bits1</name><argument_list pos:start="245:73" pos:end="245:80">(<argument pos:start="245:74" pos:end="245:79"><expr pos:start="245:74" pos:end="245:79"><operator pos:start="245:74" pos:end="245:74">&amp;</operator><name pos:start="245:75" pos:end="245:79"><name pos:start="245:75" pos:end="245:75">s</name><operator pos:start="245:76" pos:end="245:77">-&gt;</operator><name pos:start="245:78" pos:end="245:79">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="247:13" pos:end="247:65">else<block type="pseudo" pos:start="247:44" pos:end="247:65"><block_content pos:start="247:44" pos:end="247:65">                           <expr_stmt pos:start="247:44" pos:end="247:65"><expr pos:start="247:44" pos:end="247:64"><name pos:start="247:44" pos:end="247:61"><name pos:start="247:44" pos:end="247:44">s</name><operator pos:start="247:45" pos:end="247:46">-&gt;</operator><name pos:start="247:47" pos:end="247:61">per_mb_rl_table</name></name><operator pos:start="247:62" pos:end="247:62">=</operator> <literal type="number" pos:start="247:64" pos:end="247:64">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="251:13" pos:end="257:13"><if pos:start="251:13" pos:end="257:13">if<condition pos:start="251:15" pos:end="251:35">(<expr pos:start="251:16" pos:end="251:34"><operator pos:start="251:16" pos:end="251:16">!</operator><name pos:start="251:17" pos:end="251:34"><name pos:start="251:17" pos:end="251:17">s</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:34">per_mb_rl_table</name></name></expr>)</condition><block pos:start="251:36" pos:end="257:13">{<block_content pos:start="253:17" pos:end="255:61">

                <expr_stmt pos:start="253:17" pos:end="253:54"><expr pos:start="253:17" pos:end="253:53"><name pos:start="253:17" pos:end="253:33"><name pos:start="253:17" pos:end="253:17">s</name><operator pos:start="253:18" pos:end="253:19">-&gt;</operator><name pos:start="253:20" pos:end="253:33">rl_table_index</name></name> <operator pos:start="253:35" pos:end="253:35">=</operator> <call pos:start="253:37" pos:end="253:53"><name pos:start="253:37" pos:end="253:45">decode012</name><argument_list pos:start="253:46" pos:end="253:53">(<argument pos:start="253:47" pos:end="253:52"><expr pos:start="253:47" pos:end="253:52"><operator pos:start="253:47" pos:end="253:47">&amp;</operator><name pos:start="253:48" pos:end="253:52"><name pos:start="253:48" pos:end="253:48">s</name><operator pos:start="253:49" pos:end="253:50">-&gt;</operator><name pos:start="253:51" pos:end="253:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:61"><expr pos:start="255:17" pos:end="255:60"><name pos:start="255:17" pos:end="255:40"><name pos:start="255:17" pos:end="255:17">s</name><operator pos:start="255:18" pos:end="255:19">-&gt;</operator><name pos:start="255:20" pos:end="255:40">rl_chroma_table_index</name></name> <operator pos:start="255:42" pos:end="255:42">=</operator> <name pos:start="255:44" pos:end="255:60"><name pos:start="255:44" pos:end="255:44">s</name><operator pos:start="255:45" pos:end="255:46">-&gt;</operator><name pos:start="255:47" pos:end="255:60">rl_table_index</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="261:13" pos:end="261:50"><expr pos:start="261:13" pos:end="261:49"><name pos:start="261:13" pos:end="261:29"><name pos:start="261:13" pos:end="261:13">s</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:29">dc_table_index</name></name> <operator pos:start="261:31" pos:end="261:31">=</operator> <call pos:start="261:33" pos:end="261:49"><name pos:start="261:33" pos:end="261:41">get_bits1</name><argument_list pos:start="261:42" pos:end="261:49">(<argument pos:start="261:43" pos:end="261:48"><expr pos:start="261:43" pos:end="261:48"><operator pos:start="261:43" pos:end="261:43">&amp;</operator><name pos:start="261:44" pos:end="261:48"><name pos:start="261:44" pos:end="261:44">s</name><operator pos:start="261:45" pos:end="261:46">-&gt;</operator><name pos:start="261:47" pos:end="261:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="265:13" pos:end="265:50"><expr pos:start="265:13" pos:end="265:49"><name pos:start="265:13" pos:end="265:29"><name pos:start="265:13" pos:end="265:13">s</name><operator pos:start="265:14" pos:end="265:15">-&gt;</operator><name pos:start="265:16" pos:end="265:29">mv_table_index</name></name> <operator pos:start="265:31" pos:end="265:31">=</operator> <call pos:start="265:33" pos:end="265:49"><name pos:start="265:33" pos:end="265:41">get_bits1</name><argument_list pos:start="265:42" pos:end="265:49">(<argument pos:start="265:43" pos:end="265:48"><expr pos:start="265:43" pos:end="265:48"><operator pos:start="265:43" pos:end="265:43">&amp;</operator><name pos:start="265:44" pos:end="265:48"><name pos:start="265:44" pos:end="265:44">s</name><operator pos:start="265:45" pos:end="265:46">-&gt;</operator><name pos:start="265:47" pos:end="265:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:91"><expr pos:start="267:13" pos:end="267:90"><name pos:start="267:13" pos:end="267:31"><name pos:start="267:13" pos:end="267:13">s</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:31">inter_intra_pred</name></name><operator pos:start="267:32" pos:end="267:32">=</operator> <operator pos:start="267:34" pos:end="267:34">(</operator><name pos:start="267:35" pos:end="267:42"><name pos:start="267:35" pos:end="267:35">s</name><operator pos:start="267:36" pos:end="267:37">-&gt;</operator><name pos:start="267:38" pos:end="267:42">width</name></name><operator pos:start="267:43" pos:end="267:43">*</operator><name pos:start="267:44" pos:end="267:52"><name pos:start="267:44" pos:end="267:44">s</name><operator pos:start="267:45" pos:end="267:46">-&gt;</operator><name pos:start="267:47" pos:end="267:52">height</name></name> <operator pos:start="267:54" pos:end="267:54">&lt;</operator> <literal type="number" pos:start="267:56" pos:end="267:58">320</literal><operator pos:start="267:59" pos:end="267:59">*</operator><literal type="number" pos:start="267:60" pos:end="267:62">240</literal> <operator pos:start="267:64" pos:end="267:65">&amp;&amp;</operator> <name pos:start="267:67" pos:end="267:77"><name pos:start="267:67" pos:end="267:67">s</name><operator pos:start="267:68" pos:end="267:69">-&gt;</operator><name pos:start="267:70" pos:end="267:77">bit_rate</name></name><operator pos:start="267:78" pos:end="267:79">&lt;=</operator><name pos:start="267:80" pos:end="267:89">II_BITRATE</name><operator pos:start="267:90" pos:end="267:90">)</operator></expr>;</expr_stmt>

            <break pos:start="269:13" pos:end="269:18">break;</break>

        </block_content>}</block></switch>

<comment type="block" pos:start="273:1" pos:end="287:29">/*	printf("skip:%d rl:%d rlc:%d dc:%d mv:%d mbrl:%d qp:%d   \n", 

		s-&gt;use_skip_mb_code, 

		s-&gt;rl_table_index, 

		s-&gt;rl_chroma_table_index, 

		s-&gt;dc_table_index,

		s-&gt;mv_table_index,

                s-&gt;per_mb_rl_table,

                s-&gt;qscale);*/</comment>

	<if_stmt pos:start="289:9" pos:end="297:9"><if pos:start="289:9" pos:end="293:9">if<condition pos:start="289:11" pos:end="289:32">(<expr pos:start="289:12" pos:end="289:31"><name pos:start="289:12" pos:end="289:31"><name pos:start="289:12" pos:end="289:12">s</name><operator pos:start="289:13" pos:end="289:14">-&gt;</operator><name pos:start="289:15" pos:end="289:31">flipflop_rounding</name></name></expr>)</condition><block pos:start="289:33" pos:end="293:9">{<block_content pos:start="291:13" pos:end="291:32">

	    <expr_stmt pos:start="291:13" pos:end="291:32"><expr pos:start="291:13" pos:end="291:31"><name pos:start="291:13" pos:end="291:26"><name pos:start="291:13" pos:end="291:13">s</name><operator pos:start="291:14" pos:end="291:15">-&gt;</operator><name pos:start="291:16" pos:end="291:26">no_rounding</name></name> <operator pos:start="291:28" pos:end="291:29">^=</operator> <literal type="number" pos:start="291:31" pos:end="291:31">1</literal></expr>;</expr_stmt>

	</block_content>}</block></if><else pos:start="293:10" pos:end="297:9">else<block pos:start="293:14" pos:end="297:9">{<block_content pos:start="295:13" pos:end="295:31">

	    <expr_stmt pos:start="295:13" pos:end="295:31"><expr pos:start="295:13" pos:end="295:30"><name pos:start="295:13" pos:end="295:26"><name pos:start="295:13" pos:end="295:13">s</name><operator pos:start="295:14" pos:end="295:15">-&gt;</operator><name pos:start="295:16" pos:end="295:26">no_rounding</name></name> <operator pos:start="295:28" pos:end="295:28">=</operator> <literal type="number" pos:start="295:30" pos:end="295:30">0</literal></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

<comment type="line" pos:start="301:1" pos:end="301:98">//printf("%d %d %d %d %d\n", s-&gt;pict_type, s-&gt;bit_rate, s-&gt;inter_intra_pred, s-&gt;width, s-&gt;height);</comment>



    <expr_stmt pos:start="305:5" pos:end="305:28"><expr pos:start="305:5" pos:end="305:27"><name pos:start="305:5" pos:end="305:24"><name pos:start="305:5" pos:end="305:5">s</name><operator pos:start="305:6" pos:end="305:7">-&gt;</operator><name pos:start="305:8" pos:end="305:24">esc3_level_length</name></name><operator pos:start="305:25" pos:end="305:25">=</operator> <literal type="number" pos:start="305:27" pos:end="305:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="312:0"><expr pos:start="307:5" pos:end="307:25"><name pos:start="307:5" pos:end="307:22"><name pos:start="307:5" pos:end="307:5">s</name><operator pos:start="307:6" pos:end="307:7">-&gt;</operator><name pos:start="307:8" pos:end="307:22">esc3_run_length</name></name><operator pos:start="307:23" pos:end="307:23">=</operator> <literal type="number" pos:start="307:25" pos:end="307:25">0</literal></expr>;</expr_stmt>



<cpp:ifdef pos:start="311:1" pos:end="311:12">#<cpp:directive pos:start="311:2" pos:end="311:6">ifdef</cpp:directive> <name pos:start="311:8" pos:end="311:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="313:5" pos:end="316:0"><expr pos:start="313:5" pos:end="313:45"><call pos:start="313:5" pos:end="313:45"><name pos:start="313:5" pos:end="313:10">printf</name><argument_list pos:start="313:11" pos:end="313:45">(<argument pos:start="313:12" pos:end="313:29"><expr pos:start="313:12" pos:end="313:29"><literal type="string" pos:start="313:12" pos:end="313:29">"*****frame %d:\n"</literal></expr></argument>, <argument pos:start="313:32" pos:end="313:44"><expr pos:start="313:32" pos:end="313:44"><name pos:start="313:32" pos:end="313:42">frame_count</name><operator pos:start="313:43" pos:end="313:44">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="315:1" pos:end="315:6">#<cpp:directive pos:start="315:2" pos:end="315:6">endif</cpp:directive></cpp:endif>

    <return pos:start="317:5" pos:end="317:13">return <expr pos:start="317:12" pos:end="317:12"><literal type="number" pos:start="317:12" pos:end="317:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
