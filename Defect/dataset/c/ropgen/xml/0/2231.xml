<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2231.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">close_connection</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">HTTPContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:21">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:15">HTTPContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier><modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">cp</name></decl>, <decl pos:start="5:23" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:18"><modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:25">c1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:21">nb_streams</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFormatContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">URLContext</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:37">/* remove connection from list */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:6">cp</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <operator pos:start="19:10" pos:end="19:10">&amp;</operator><name pos:start="19:11" pos:end="19:24">first_http_ctx</name></expr>;</expr_stmt>

    <while pos:start="21:5" pos:end="35:5">while <condition pos:start="21:11" pos:end="21:25">(<expr pos:start="21:12" pos:end="21:24"><operator pos:start="21:12" pos:end="21:12">(</operator><operator pos:start="21:13" pos:end="21:13">*</operator><name pos:start="21:14" pos:end="21:15">cp</name><operator pos:start="21:16" pos:end="21:16">)</operator> <operator pos:start="21:18" pos:end="21:19">!=</operator> <name pos:start="21:21" pos:end="21:24">NULL</name></expr>)</condition> <block pos:start="21:27" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:9">

        <expr_stmt pos:start="23:9" pos:end="23:17"><expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:10">c1</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <operator pos:start="23:14" pos:end="23:14">*</operator><name pos:start="23:15" pos:end="23:16">cp</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="33:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:14">c1</name> <operator pos:start="25:16" pos:end="25:17">==</operator> <name pos:start="25:19" pos:end="25:19">c</name></expr>)</condition> <block pos:start="25:22" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:26">

            <expr_stmt pos:start="27:13" pos:end="27:26"><expr pos:start="27:13" pos:end="27:25"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:15">cp</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:25"><name pos:start="27:19" pos:end="27:19">c</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:25">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="33:9">else <block pos:start="29:16" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:27">

            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:14">cp</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:26"><name pos:start="31:19" pos:end="31:20">c1</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:26">next</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="39:5" pos:end="39:55">/* remove references, if any (XXX: do it faster) */</comment>

    <for pos:start="41:5" pos:end="47:5">for<control pos:start="41:8" pos:end="41:55">(<init pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:10">c1</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:27">first_http_ctx</name></expr>;</init> <condition pos:start="41:30" pos:end="41:40"><expr pos:start="41:30" pos:end="41:39"><name pos:start="41:30" pos:end="41:31">c1</name> <operator pos:start="41:33" pos:end="41:34">!=</operator> <name pos:start="41:36" pos:end="41:39">NULL</name></expr>;</condition> <incr pos:start="41:42" pos:end="41:54"><expr pos:start="41:42" pos:end="41:54"><name pos:start="41:42" pos:end="41:43">c1</name> <operator pos:start="41:45" pos:end="41:45">=</operator> <name pos:start="41:47" pos:end="41:54"><name pos:start="41:47" pos:end="41:48">c1</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:54">next</name></name></expr></incr>)</control> <block pos:start="41:57" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:30">

        <if_stmt pos:start="43:9" pos:end="45:30"><if pos:start="43:9" pos:end="45:30">if <condition pos:start="43:12" pos:end="43:28">(<expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:14">c1</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:22">rtsp_c</name></name> <operator pos:start="43:24" pos:end="43:25">==</operator> <name pos:start="43:27" pos:end="43:27">c</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:30"><block_content pos:start="45:13" pos:end="45:30">

            <expr_stmt pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:14">c1</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:22">rtsp_c</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:29">NULL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="51:5" pos:end="51:48">/* remove connection associated resources */</comment>

    <if_stmt pos:start="53:5" pos:end="55:21"><if pos:start="53:5" pos:end="55:21">if <condition pos:start="53:8" pos:end="53:19">(<expr pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:13"><name pos:start="53:9" pos:end="53:9">c</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:13">fd</name></name> <operator pos:start="53:15" pos:end="53:16">&gt;=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:21"><block_content pos:start="55:9" pos:end="55:21">

        <expr_stmt pos:start="55:9" pos:end="55:21"><expr pos:start="55:9" pos:end="55:20"><call pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:13">close</name><argument_list pos:start="55:14" pos:end="55:20">(<argument pos:start="55:15" pos:end="55:19"><expr pos:start="55:15" pos:end="55:19"><name pos:start="55:15" pos:end="55:19"><name pos:start="55:15" pos:end="55:15">c</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="75:5"><if pos:start="57:5" pos:end="75:5">if <condition pos:start="57:8" pos:end="57:18">(<expr pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:9">c</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:17">fmt_in</name></name></expr>)</condition> <block pos:start="57:20" pos:end="75:5">{<block_content pos:start="61:9" pos:end="73:39">

        <comment type="block" pos:start="59:9" pos:end="59:37">/* close each frame parser */</comment>

        <for pos:start="61:9" pos:end="71:9">for<control pos:start="61:12" pos:end="61:44">(<init pos:start="61:13" pos:end="61:16"><expr pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:13">i</name><operator pos:start="61:14" pos:end="61:14">=</operator><literal type="number" pos:start="61:15" pos:end="61:15">0</literal></expr>;</init><condition pos:start="61:17" pos:end="61:40"><expr pos:start="61:17" pos:end="61:39"><name pos:start="61:17" pos:end="61:17">i</name><operator pos:start="61:18" pos:end="61:18">&lt;</operator><name pos:start="61:19" pos:end="61:39"><name pos:start="61:19" pos:end="61:19">c</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:27">fmt_in</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:39">nb_streams</name></name></expr>;</condition><incr pos:start="61:41" pos:end="61:43"><expr pos:start="61:41" pos:end="61:43"><name pos:start="61:41" pos:end="61:41">i</name><operator pos:start="61:42" pos:end="61:43">++</operator></expr></incr>)</control> <block pos:start="61:46" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:13">

            <expr_stmt pos:start="63:13" pos:end="63:39"><expr pos:start="63:13" pos:end="63:38"><name pos:start="63:13" pos:end="63:14">st</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:38"><name pos:start="63:18" pos:end="63:18">c</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:26">fmt_in</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:35">streams</name><index pos:start="63:36" pos:end="63:38">[<expr pos:start="63:37" pos:end="63:37"><name pos:start="63:37" pos:end="63:37">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="69:13"><if pos:start="65:13" pos:end="69:13">if <condition pos:start="65:16" pos:end="65:33">(<expr pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:18">st</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:25">codec</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:32">codec</name></name></expr>)</condition> <block pos:start="65:35" pos:end="69:13">{<block_content pos:start="67:17" pos:end="67:41">

                <expr_stmt pos:start="67:17" pos:end="67:41"><expr pos:start="67:17" pos:end="67:40"><call pos:start="67:17" pos:end="67:40"><name pos:start="67:17" pos:end="67:29">avcodec_close</name><argument_list pos:start="67:30" pos:end="67:40">(<argument pos:start="67:31" pos:end="67:39"><expr pos:start="67:31" pos:end="67:39"><name pos:start="67:31" pos:end="67:39"><name pos:start="67:31" pos:end="67:32">st</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:39">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="73:9" pos:end="73:39"><expr pos:start="73:9" pos:end="73:38"><call pos:start="73:9" pos:end="73:38"><name pos:start="73:9" pos:end="73:27">av_close_input_file</name><argument_list pos:start="73:28" pos:end="73:38">(<argument pos:start="73:29" pos:end="73:37"><expr pos:start="73:29" pos:end="73:37"><name pos:start="73:29" pos:end="73:37"><name pos:start="73:29" pos:end="73:29">c</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:37">fmt_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:40">/* free RTP output streams if any */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:19"><expr pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:14">nb_streams</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="85:43"><if pos:start="83:5" pos:end="85:43">if <condition pos:start="83:8" pos:end="83:18">(<expr pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:9">c</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:17">stream</name></name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:43"><block_content pos:start="85:9" pos:end="85:43"> 

        <expr_stmt pos:start="85:9" pos:end="85:43"><expr pos:start="85:9" pos:end="85:42"><name pos:start="85:9" pos:end="85:18">nb_streams</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <name pos:start="85:22" pos:end="85:42"><name pos:start="85:22" pos:end="85:22">c</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:30">stream</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:42">nb_streams</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

    <for pos:start="89:5" pos:end="109:5">for<control pos:start="89:8" pos:end="89:29">(<init pos:start="89:9" pos:end="89:12"><expr pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:9">i</name><operator pos:start="89:10" pos:end="89:10">=</operator><literal type="number" pos:start="89:11" pos:end="89:11">0</literal></expr>;</init><condition pos:start="89:13" pos:end="89:25"><expr pos:start="89:13" pos:end="89:24"><name pos:start="89:13" pos:end="89:13">i</name><operator pos:start="89:14" pos:end="89:14">&lt;</operator><name pos:start="89:15" pos:end="89:24">nb_streams</name></expr>;</condition><incr pos:start="89:26" pos:end="89:28"><expr pos:start="89:26" pos:end="89:28"><name pos:start="89:26" pos:end="89:26">i</name><operator pos:start="89:27" pos:end="89:28">++</operator></expr></incr>)</control> <block pos:start="89:31" pos:end="109:5">{<block_content pos:start="91:9" pos:end="107:9">

        <expr_stmt pos:start="91:9" pos:end="91:28"><expr pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:11">ctx</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:27"><name pos:start="91:15" pos:end="91:15">c</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:24">rtp_ctx</name><index pos:start="91:25" pos:end="91:27">[<expr pos:start="91:26" pos:end="91:26"><name pos:start="91:26" pos:end="91:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:16">(<expr pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:15">ctx</name></expr>)</condition> <block pos:start="93:18" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:25">

            <expr_stmt pos:start="95:13" pos:end="95:34"><expr pos:start="95:13" pos:end="95:33"><call pos:start="95:13" pos:end="95:33"><name pos:start="95:13" pos:end="95:28">av_write_trailer</name><argument_list pos:start="95:29" pos:end="95:33">(<argument pos:start="95:30" pos:end="95:32"><expr pos:start="95:30" pos:end="95:32"><name pos:start="95:30" pos:end="95:32">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:25"><expr pos:start="97:13" pos:end="97:24"><call pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:19">av_free</name><argument_list pos:start="97:20" pos:end="97:24">(<argument pos:start="97:21" pos:end="97:23"><expr pos:start="97:21" pos:end="97:23"><name pos:start="97:21" pos:end="97:23">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:9">h</name> <operator pos:start="101:11" pos:end="101:11">=</operator> <name pos:start="101:13" pos:end="101:29"><name pos:start="101:13" pos:end="101:13">c</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:26">rtp_handles</name><index pos:start="101:27" pos:end="101:29">[<expr pos:start="101:28" pos:end="101:28"><name pos:start="101:28" pos:end="101:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="107:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:14">(<expr pos:start="103:13" pos:end="103:13"><name pos:start="103:13" pos:end="103:13">h</name></expr>)</condition> <block pos:start="103:16" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:25">

            <expr_stmt pos:start="105:13" pos:end="105:25"><expr pos:start="105:13" pos:end="105:24"><call pos:start="105:13" pos:end="105:24"><name pos:start="105:13" pos:end="105:21">url_close</name><argument_list pos:start="105:22" pos:end="105:24">(<argument pos:start="105:23" pos:end="105:23"><expr pos:start="105:23" pos:end="105:23"><name pos:start="105:23" pos:end="105:23">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    

    <expr_stmt pos:start="113:5" pos:end="113:22"><expr pos:start="113:5" pos:end="113:21"><name pos:start="113:5" pos:end="113:7">ctx</name> <operator pos:start="113:9" pos:end="113:9">=</operator> <operator pos:start="113:11" pos:end="113:11">&amp;</operator><name pos:start="113:12" pos:end="113:21"><name pos:start="113:12" pos:end="113:12">c</name><operator pos:start="113:13" pos:end="113:14">-&gt;</operator><name pos:start="113:15" pos:end="113:21">fmt_ctx</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="117:5" pos:end="133:5"><if pos:start="117:5" pos:end="133:5">if <condition pos:start="117:8" pos:end="117:29">(<expr pos:start="117:9" pos:end="117:28"><operator pos:start="117:9" pos:end="117:9">!</operator><name pos:start="117:10" pos:end="117:28"><name pos:start="117:10" pos:end="117:10">c</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:28">last_packet_sent</name></name></expr>)</condition> <block pos:start="117:31" pos:end="133:5">{<block_content pos:start="119:9" pos:end="131:9">

        <if_stmt pos:start="119:9" pos:end="131:9"><if pos:start="119:9" pos:end="131:9">if <condition pos:start="119:12" pos:end="119:25">(<expr pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:15">ctx</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:24">oformat</name></name></expr>)</condition> <block pos:start="119:27" pos:end="131:9">{<block_content pos:start="123:13" pos:end="129:13">

            <comment type="block" pos:start="121:13" pos:end="121:32">/* prepare header */</comment>

            <if_stmt pos:start="123:13" pos:end="129:13"><if pos:start="123:13" pos:end="129:13">if <condition pos:start="123:16" pos:end="123:48">(<expr pos:start="123:17" pos:end="123:47"><call pos:start="123:17" pos:end="123:42"><name pos:start="123:17" pos:end="123:32">url_open_dyn_buf</name><argument_list pos:start="123:33" pos:end="123:42">(<argument pos:start="123:34" pos:end="123:41"><expr pos:start="123:34" pos:end="123:41"><operator pos:start="123:34" pos:end="123:34">&amp;</operator><name pos:start="123:35" pos:end="123:41"><name pos:start="123:35" pos:end="123:37">ctx</name><operator pos:start="123:38" pos:end="123:39">-&gt;</operator><name pos:start="123:40" pos:end="123:41">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:44" pos:end="123:45">&gt;=</operator> <literal type="number" pos:start="123:47" pos:end="123:47">0</literal></expr>)</condition> <block pos:start="123:50" pos:end="129:13">{<block_content pos:start="125:17" pos:end="127:59">

                <expr_stmt pos:start="125:17" pos:end="125:38"><expr pos:start="125:17" pos:end="125:37"><call pos:start="125:17" pos:end="125:37"><name pos:start="125:17" pos:end="125:32">av_write_trailer</name><argument_list pos:start="125:33" pos:end="125:37">(<argument pos:start="125:34" pos:end="125:36"><expr pos:start="125:34" pos:end="125:36"><name pos:start="125:34" pos:end="125:36">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:59"><expr pos:start="127:17" pos:end="127:58"><call pos:start="127:17" pos:end="127:58"><name pos:start="127:17" pos:end="127:33">url_close_dyn_buf</name><argument_list pos:start="127:34" pos:end="127:58">(<argument pos:start="127:35" pos:end="127:42"><expr pos:start="127:35" pos:end="127:42"><operator pos:start="127:35" pos:end="127:35">&amp;</operator><name pos:start="127:36" pos:end="127:42"><name pos:start="127:36" pos:end="127:38">ctx</name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:42">pb</name></name></expr></argument>, <argument pos:start="127:45" pos:end="127:57"><expr pos:start="127:45" pos:end="127:57"><operator pos:start="127:45" pos:end="127:45">&amp;</operator><name pos:start="127:46" pos:end="127:57"><name pos:start="127:46" pos:end="127:46">c</name><operator pos:start="127:47" pos:end="127:48">-&gt;</operator><name pos:start="127:49" pos:end="127:57">pb_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="137:5" pos:end="139:34">for<control pos:start="137:8" pos:end="137:36">(<init pos:start="137:9" pos:end="137:12"><expr pos:start="137:9" pos:end="137:11"><name pos:start="137:9" pos:end="137:9">i</name><operator pos:start="137:10" pos:end="137:10">=</operator><literal type="number" pos:start="137:11" pos:end="137:11">0</literal></expr>;</init> <condition pos:start="137:14" pos:end="137:31"><expr pos:start="137:14" pos:end="137:30"><name pos:start="137:14" pos:end="137:14">i</name><operator pos:start="137:15" pos:end="137:15">&lt;</operator><name pos:start="137:16" pos:end="137:30"><name pos:start="137:16" pos:end="137:18">ctx</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:30">nb_streams</name></name></expr>;</condition> <incr pos:start="137:33" pos:end="137:35"><expr pos:start="137:33" pos:end="137:35"><name pos:start="137:33" pos:end="137:33">i</name><operator pos:start="137:34" pos:end="137:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="139:9" pos:end="139:34"><block_content pos:start="139:9" pos:end="139:34"> 

        <expr_stmt pos:start="139:9" pos:end="139:34"><expr pos:start="139:9" pos:end="139:32"><call pos:start="139:9" pos:end="139:32"><name pos:start="139:9" pos:end="139:15">av_free</name><argument_list pos:start="139:16" pos:end="139:32">(<argument pos:start="139:17" pos:end="139:31"><expr pos:start="139:17" pos:end="139:31"><name pos:start="139:17" pos:end="139:31"><name pos:start="139:17" pos:end="139:19">ctx</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:28">streams</name><index pos:start="139:29" pos:end="139:31">[<expr pos:start="139:30" pos:end="139:30"><name pos:start="139:30" pos:end="139:30">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr> ;</expr_stmt></block_content></block></for> 



    <if_stmt pos:start="143:5" pos:end="145:50"><if pos:start="143:5" pos:end="145:50">if <condition pos:start="143:8" pos:end="143:18">(<expr pos:start="143:9" pos:end="143:17"><name pos:start="143:9" pos:end="143:17"><name pos:start="143:9" pos:end="143:9">c</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:17">stream</name></name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:50"><block_content pos:start="145:9" pos:end="145:50">

        <expr_stmt pos:start="145:9" pos:end="145:50"><expr pos:start="145:9" pos:end="145:49"><name pos:start="145:9" pos:end="145:25">current_bandwidth</name> <operator pos:start="145:27" pos:end="145:28">-=</operator> <name pos:start="145:30" pos:end="145:49"><name pos:start="145:30" pos:end="145:30">c</name><operator pos:start="145:31" pos:end="145:32">-&gt;</operator><name pos:start="145:33" pos:end="145:38">stream</name><operator pos:start="145:39" pos:end="145:40">-&gt;</operator><name pos:start="145:41" pos:end="145:49">bandwidth</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:28"><expr pos:start="147:5" pos:end="147:27"><call pos:start="147:5" pos:end="147:27"><name pos:start="147:5" pos:end="147:12">av_freep</name><argument_list pos:start="147:13" pos:end="147:27">(<argument pos:start="147:14" pos:end="147:26"><expr pos:start="147:14" pos:end="147:26"><operator pos:start="147:14" pos:end="147:14">&amp;</operator><name pos:start="147:15" pos:end="147:26"><name pos:start="147:15" pos:end="147:15">c</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:26">pb_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:32"><expr pos:start="149:5" pos:end="149:31"><call pos:start="149:5" pos:end="149:31"><name pos:start="149:5" pos:end="149:12">av_freep</name><argument_list pos:start="149:13" pos:end="149:31">(<argument pos:start="149:14" pos:end="149:30"><expr pos:start="149:14" pos:end="149:30"><operator pos:start="149:14" pos:end="149:14">&amp;</operator><name pos:start="149:15" pos:end="149:30"><name pos:start="149:15" pos:end="149:15">c</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:30">packet_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:23"><expr pos:start="151:5" pos:end="151:22"><call pos:start="151:5" pos:end="151:22"><name pos:start="151:5" pos:end="151:11">av_free</name><argument_list pos:start="151:12" pos:end="151:22">(<argument pos:start="151:13" pos:end="151:21"><expr pos:start="151:13" pos:end="151:21"><name pos:start="151:13" pos:end="151:21"><name pos:start="151:13" pos:end="151:13">c</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:21">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:15"><expr pos:start="153:5" pos:end="153:14"><call pos:start="153:5" pos:end="153:14"><name pos:start="153:5" pos:end="153:11">av_free</name><argument_list pos:start="153:12" pos:end="153:14">(<argument pos:start="153:13" pos:end="153:13"><expr pos:start="153:13" pos:end="153:13"><name pos:start="153:13" pos:end="153:13">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:21"><expr pos:start="155:5" pos:end="155:20"><name pos:start="155:5" pos:end="155:18">nb_connections</name><operator pos:start="155:19" pos:end="155:20">--</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
