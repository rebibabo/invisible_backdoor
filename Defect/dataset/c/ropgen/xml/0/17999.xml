<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17999.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:38">dv_encode_ac</name><parameter_list pos:start="1:39" pos:end="3:51">(<parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:51">EncBlockInfo</name><modifier pos:start="1:52" pos:end="1:52">*</modifier></type> <name pos:start="1:54" pos:end="1:55">bi</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:79"><decl pos:start="1:58" pos:end="1:79"><type pos:start="1:58" pos:end="1:79"><name pos:start="1:58" pos:end="1:70">PutBitContext</name><modifier pos:start="1:71" pos:end="1:71">*</modifier></type> <name pos:start="1:73" pos:end="1:79">pb_pool</name></decl></parameter>, 

                                       <parameter pos:start="3:40" pos:end="3:50"><decl pos:start="3:40" pos:end="3:50"><type pos:start="3:40" pos:end="3:50"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:50">pb_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:8">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">bits_left</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:17">PutBitContext</name><modifier pos:start="11:18" pos:end="11:18">*</modifier></type> <name pos:start="11:20" pos:end="11:21">pb</name> <init pos:start="11:23" pos:end="11:31">= <expr pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:31">pb_pool</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">size</name> <init pos:start="13:14" pos:end="13:36">= <expr pos:start="13:16" pos:end="13:36"><name pos:start="13:16" pos:end="13:36"><name pos:start="13:16" pos:end="13:17">bi</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:36">partial_bit_count</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:42"><decl pos:start="15:5" pos:end="15:41"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:16">vlc</name> <init pos:start="15:18" pos:end="15:41">= <expr pos:start="15:20" pos:end="15:41"><name pos:start="15:20" pos:end="15:41"><name pos:start="15:20" pos:end="15:21">bi</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:41">partial_bit_buffer</name></name></expr></init></decl>;</decl_stmt>

    

    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:6">bi</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:25">partial_bit_count</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:50"><name pos:start="19:29" pos:end="19:30">bi</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:50">partial_bit_buffer</name></name> <operator pos:start="19:52" pos:end="19:52">=</operator> <literal type="number" pos:start="19:54" pos:end="19:54">0</literal></expr>;</expr_stmt>

<label pos:start="21:1" pos:end="21:9"><name pos:start="21:1" pos:end="21:8">vlc_loop</name>:</label>

       <comment type="block" pos:start="23:8" pos:end="23:40">/* Find suitable storage space */</comment>

       <for pos:start="25:8" pos:end="49:8">for <control pos:start="25:12" pos:end="25:59">(<init pos:start="25:13" pos:end="25:13">;</init> <condition pos:start="25:15" pos:end="25:53"><expr pos:start="25:15" pos:end="25:52"><name pos:start="25:15" pos:end="25:18">size</name> <operator pos:start="25:20" pos:end="25:20">&gt;</operator> <operator pos:start="25:22" pos:end="25:22">(</operator><name pos:start="25:23" pos:end="25:31">bits_left</name> <operator pos:start="25:33" pos:end="25:33">=</operator> <call pos:start="25:35" pos:end="25:51"><name pos:start="25:35" pos:end="25:47">put_bits_left</name><argument_list pos:start="25:48" pos:end="25:51">(<argument pos:start="25:49" pos:end="25:50"><expr pos:start="25:49" pos:end="25:50"><name pos:start="25:49" pos:end="25:50">pb</name></expr></argument>)</argument_list></call><operator pos:start="25:52" pos:end="25:52">)</operator></expr>;</condition> <incr pos:start="25:55" pos:end="25:58"><expr pos:start="25:55" pos:end="25:58"><name pos:start="25:55" pos:end="25:56">pb</name><operator pos:start="25:57" pos:end="25:58">++</operator></expr></incr>)</control> <block pos:start="25:61" pos:end="49:8">{<block_content pos:start="27:11" pos:end="47:20">

          <if_stmt pos:start="27:11" pos:end="35:11"><if pos:start="27:11" pos:end="35:11">if <condition pos:start="27:14" pos:end="27:24">(<expr pos:start="27:15" pos:end="27:23"><name pos:start="27:15" pos:end="27:23">bits_left</name></expr>)</condition> <block pos:start="27:26" pos:end="35:11">{<block_content pos:start="29:15" pos:end="33:40">

              <expr_stmt pos:start="29:15" pos:end="29:32"><expr pos:start="29:15" pos:end="29:31"><name pos:start="29:15" pos:end="29:18">size</name> <operator pos:start="29:20" pos:end="29:21">-=</operator> <name pos:start="29:23" pos:end="29:31">bits_left</name></expr>;</expr_stmt>

	      <expr_stmt pos:start="31:15" pos:end="31:51"><expr pos:start="31:15" pos:end="31:50"><call pos:start="31:15" pos:end="31:50"><name pos:start="31:15" pos:end="31:22">put_bits</name><argument_list pos:start="31:23" pos:end="31:50">(<argument pos:start="31:24" pos:end="31:25"><expr pos:start="31:24" pos:end="31:25"><name pos:start="31:24" pos:end="31:25">pb</name></expr></argument>, <argument pos:start="31:28" pos:end="31:36"><expr pos:start="31:28" pos:end="31:36"><name pos:start="31:28" pos:end="31:36">bits_left</name></expr></argument>, <argument pos:start="31:39" pos:end="31:49"><expr pos:start="31:39" pos:end="31:49"><name pos:start="31:39" pos:end="31:41">vlc</name> <operator pos:start="31:43" pos:end="31:44">&gt;&gt;</operator> <name pos:start="31:46" pos:end="31:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	      <expr_stmt pos:start="33:15" pos:end="33:40"><expr pos:start="33:15" pos:end="33:39"><name pos:start="33:15" pos:end="33:17">vlc</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:23">vlc</name> <operator pos:start="33:25" pos:end="33:25">&amp;</operator> <operator pos:start="33:27" pos:end="33:27">(</operator><operator pos:start="33:28" pos:end="33:28">(</operator><literal type="number" pos:start="33:29" pos:end="33:29">1</literal><operator pos:start="33:30" pos:end="33:31">&lt;&lt;</operator><name pos:start="33:32" pos:end="33:35">size</name><operator pos:start="33:36" pos:end="33:36">)</operator><operator pos:start="33:37" pos:end="33:37">-</operator><literal type="number" pos:start="33:38" pos:end="33:38">1</literal><operator pos:start="33:39" pos:end="33:39">)</operator></expr>;</expr_stmt>

	  </block_content>}</block></if></if_stmt>

	  <if_stmt pos:start="37:11" pos:end="45:11"><if pos:start="37:11" pos:end="45:11">if <condition pos:start="37:14" pos:end="37:27">(<expr pos:start="37:15" pos:end="37:26"><name pos:start="37:15" pos:end="37:21">pb_size</name> <operator pos:start="37:23" pos:end="37:24">==</operator> <literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>)</condition> <block pos:start="37:29" pos:end="45:11">{<block_content pos:start="39:15" pos:end="43:21">

	      <expr_stmt pos:start="39:15" pos:end="39:43"><expr pos:start="39:15" pos:end="39:42"><name pos:start="39:15" pos:end="39:35"><name pos:start="39:15" pos:end="39:16">bi</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:35">partial_bit_count</name></name> <operator pos:start="39:37" pos:end="39:37">=</operator> <name pos:start="39:39" pos:end="39:42">size</name></expr>;</expr_stmt>

	      <expr_stmt pos:start="41:15" pos:end="41:43"><expr pos:start="41:15" pos:end="41:42"><name pos:start="41:15" pos:end="41:36"><name pos:start="41:15" pos:end="41:16">bi</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:36">partial_bit_buffer</name></name> <operator pos:start="41:38" pos:end="41:38">=</operator> <name pos:start="41:40" pos:end="41:42">vlc</name></expr>;</expr_stmt>

	      <return pos:start="43:15" pos:end="43:21">return;</return>

	  </block_content>}</block></if></if_stmt>

	  <expr_stmt pos:start="47:11" pos:end="47:20"><expr pos:start="47:11" pos:end="47:19"><operator pos:start="47:11" pos:end="47:12">--</operator><name pos:start="47:13" pos:end="47:19">pb_size</name></expr>;</expr_stmt>

       </block_content>}</block></for>

       

       <comment type="block" pos:start="53:8" pos:end="53:22">/* Store VLC */</comment>

       <expr_stmt pos:start="55:8" pos:end="55:31"><expr pos:start="55:8" pos:end="55:30"><call pos:start="55:8" pos:end="55:30"><name pos:start="55:8" pos:end="55:15">put_bits</name><argument_list pos:start="55:16" pos:end="55:30">(<argument pos:start="55:17" pos:end="55:18"><expr pos:start="55:17" pos:end="55:18"><name pos:start="55:17" pos:end="55:18">pb</name></expr></argument>, <argument pos:start="55:21" pos:end="55:24"><expr pos:start="55:21" pos:end="55:24"><name pos:start="55:21" pos:end="55:24">size</name></expr></argument>, <argument pos:start="55:27" pos:end="55:29"><expr pos:start="55:27" pos:end="55:29"><name pos:start="55:27" pos:end="55:29">vlc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       

       <comment type="block" pos:start="59:8" pos:end="59:35">/* Construct the next VLC */</comment>

       <expr_stmt pos:start="61:8" pos:end="61:15"><expr pos:start="61:8" pos:end="61:14"><name pos:start="61:8" pos:end="61:10">run</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</expr_stmt>

       <for pos:start="63:8" pos:end="75:8">for <control pos:start="63:12" pos:end="63:51">(<init pos:start="63:13" pos:end="63:13">;</init> <condition pos:start="63:15" pos:end="63:30"><expr pos:start="63:15" pos:end="63:29"><name pos:start="63:15" pos:end="63:24"><name pos:start="63:15" pos:end="63:16">bi</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:24">cur_ac</name></name> <operator pos:start="63:26" pos:end="63:26">&lt;</operator> <literal type="number" pos:start="63:28" pos:end="63:29">64</literal></expr>;</condition> <incr pos:start="63:32" pos:end="63:50"><expr pos:start="63:32" pos:end="63:43"><name pos:start="63:32" pos:end="63:41"><name pos:start="63:32" pos:end="63:33">bi</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:41">cur_ac</name></name><operator pos:start="63:42" pos:end="63:43">++</operator></expr><operator pos:start="63:44" pos:end="63:44">,</operator> <expr pos:start="63:46" pos:end="63:50"><name pos:start="63:46" pos:end="63:48">run</name><operator pos:start="63:49" pos:end="63:50">++</operator></expr></incr>)</control> <block pos:start="63:53" pos:end="75:8">{<block_content pos:start="65:12" pos:end="73:12">

           <if_stmt pos:start="65:12" pos:end="73:12"><if pos:start="65:12" pos:end="73:12">if <condition pos:start="65:15" pos:end="65:34">(<expr pos:start="65:16" pos:end="65:33"><name pos:start="65:16" pos:end="65:33"><name pos:start="65:16" pos:end="65:17">bi</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:21">mb</name><index pos:start="65:22" pos:end="65:33">[<expr pos:start="65:23" pos:end="65:32"><name pos:start="65:23" pos:end="65:32"><name pos:start="65:23" pos:end="65:24">bi</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:32">cur_ac</name></name></expr>]</index></name></expr>)</condition> <block pos:start="65:36" pos:end="73:12">{<block_content pos:start="67:16" pos:end="71:29">

	       <expr_stmt pos:start="67:16" pos:end="67:63"><expr pos:start="67:16" pos:end="67:62"><name pos:start="67:16" pos:end="67:19">size</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <call pos:start="67:23" pos:end="67:62"><name pos:start="67:23" pos:end="67:31">dv_rl2vlc</name><argument_list pos:start="67:32" pos:end="67:62">(<argument pos:start="67:33" pos:end="67:35"><expr pos:start="67:33" pos:end="67:35"><name pos:start="67:33" pos:end="67:35">run</name></expr></argument>, <argument pos:start="67:38" pos:end="67:55"><expr pos:start="67:38" pos:end="67:55"><name pos:start="67:38" pos:end="67:55"><name pos:start="67:38" pos:end="67:39">bi</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:43">mb</name><index pos:start="67:44" pos:end="67:55">[<expr pos:start="67:45" pos:end="67:54"><name pos:start="67:45" pos:end="67:54"><name pos:start="67:45" pos:end="67:46">bi</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:54">cur_ac</name></name></expr>]</index></name></expr></argument>, <argument pos:start="67:58" pos:end="67:61"><expr pos:start="67:58" pos:end="67:61"><operator pos:start="67:58" pos:end="67:58">&amp;</operator><name pos:start="67:59" pos:end="67:61">vlc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	       <expr_stmt pos:start="69:16" pos:end="69:28"><expr pos:start="69:16" pos:end="69:27"><name pos:start="69:16" pos:end="69:25"><name pos:start="69:16" pos:end="69:17">bi</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:25">cur_ac</name></name><operator pos:start="69:26" pos:end="69:27">++</operator></expr>;</expr_stmt>

	       <goto pos:start="71:16" pos:end="71:29">goto <name pos:start="71:21" pos:end="71:28">vlc_loop</name>;</goto>

	   </block_content>}</block></if></if_stmt>

       </block_content>}</block></for>

   

       <if_stmt pos:start="79:8" pos:end="87:8"><if pos:start="79:8" pos:end="87:8">if <condition pos:start="79:11" pos:end="79:28">(<expr pos:start="79:12" pos:end="79:27"><name pos:start="79:12" pos:end="79:21"><name pos:start="79:12" pos:end="79:13">bi</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:21">cur_ac</name></name> <operator pos:start="79:23" pos:end="79:24">==</operator> <literal type="number" pos:start="79:26" pos:end="79:27">64</literal></expr>)</condition> <block pos:start="79:30" pos:end="87:8">{<block_content pos:start="81:12" pos:end="85:25">

           <expr_stmt pos:start="81:12" pos:end="81:20"><expr pos:start="81:12" pos:end="81:19"><name pos:start="81:12" pos:end="81:15">size</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <literal type="number" pos:start="81:19" pos:end="81:19">4</literal></expr>;</expr_stmt> <expr_stmt pos:start="81:22" pos:end="81:29"><expr pos:start="81:22" pos:end="81:28"><name pos:start="81:22" pos:end="81:24">vlc</name> <operator pos:start="81:26" pos:end="81:26">=</operator> <literal type="number" pos:start="81:28" pos:end="81:28">6</literal></expr>;</expr_stmt> <comment type="block" pos:start="81:31" pos:end="81:54">/* End Of Block stamp */</comment>

	   <expr_stmt pos:start="83:12" pos:end="83:24"><expr pos:start="83:12" pos:end="83:23"><name pos:start="83:12" pos:end="83:21"><name pos:start="83:12" pos:end="83:13">bi</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:21">cur_ac</name></name><operator pos:start="83:22" pos:end="83:23">++</operator></expr>;</expr_stmt>

	   <goto pos:start="85:12" pos:end="85:25">goto <name pos:start="85:17" pos:end="85:24">vlc_loop</name>;</goto>

       </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
