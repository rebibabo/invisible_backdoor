<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7493.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">kvm_supported_msrs</name><parameter_list pos:start="1:31" pos:end="1:45">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:41"><name pos:start="1:32" pos:end="1:39">CPUState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:11">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:33">kvm_supported_msrs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:20">/* first time */</comment>

    <if_stmt pos:start="13:5" pos:end="85:5"><if pos:start="13:5" pos:end="85:5">if <condition pos:start="13:8" pos:end="13:32">(<expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:26">kvm_supported_msrs</name> <operator pos:start="13:28" pos:end="13:29">==</operator> <literal type="number" pos:start="13:31" pos:end="13:31">0</literal></expr>)</condition> <block pos:start="13:34" pos:end="85:5">{<block_content pos:start="15:9" pos:end="83:27">

        <decl_stmt pos:start="15:9" pos:end="15:52"><decl pos:start="15:9" pos:end="15:36"><type pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:14">struct</name> <name pos:start="15:16" pos:end="15:27">kvm_msr_list</name></name></type> <name pos:start="15:29" pos:end="15:36">msr_list</name></decl>, <decl pos:start="15:39" pos:end="15:51"><type ref="prev" pos:start="15:9" pos:end="15:27"><modifier pos:start="15:39" pos:end="15:39">*</modifier></type><name pos:start="15:40" pos:end="15:51">kvm_msr_list</name></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:32"><expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:26">kvm_supported_msrs</name> <operator pos:start="19:28" pos:end="19:28">=</operator> <operator pos:start="19:30" pos:end="19:30">-</operator><literal type="number" pos:start="19:31" pos:end="19:31">1</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="23:9" pos:end="25:26">/* Obtain MSR list from KVM.  These are the MSRs that we must

         * save/restore */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:27"><expr pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:16">msr_list</name><operator pos:start="27:17" pos:end="27:17">.</operator><name pos:start="27:18" pos:end="27:22">nmsrs</name></name> <operator pos:start="27:24" pos:end="27:24">=</operator> <literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:75"><expr pos:start="29:9" pos:end="29:74"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:74"><name pos:start="29:15" pos:end="29:23">kvm_ioctl</name><argument_list pos:start="29:24" pos:end="29:74">(<argument pos:start="29:25" pos:end="29:38"><expr pos:start="29:25" pos:end="29:38"><name pos:start="29:25" pos:end="29:38"><name pos:start="29:25" pos:end="29:27">env</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:38">kvm_state</name></name></expr></argument>, <argument pos:start="29:41" pos:end="29:62"><expr pos:start="29:41" pos:end="29:62"><name pos:start="29:41" pos:end="29:62">KVM_GET_MSR_INDEX_LIST</name></expr></argument>, <argument pos:start="29:65" pos:end="29:73"><expr pos:start="29:65" pos:end="29:73"><operator pos:start="29:65" pos:end="29:65">&amp;</operator><name pos:start="29:66" pos:end="29:73">msr_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:37">(<expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal> <operator pos:start="31:21" pos:end="31:22">&amp;&amp;</operator> <name pos:start="31:24" pos:end="31:26">ret</name> <operator pos:start="31:28" pos:end="31:29">!=</operator> <operator pos:start="31:31" pos:end="31:31">-</operator><name pos:start="31:32" pos:end="31:36">E2BIG</name></expr>)</condition> <block pos:start="31:39" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:19">

            <return pos:start="33:13" pos:end="33:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="37:9" pos:end="39:60">/* Old kernel modules had a bug and could write beyond the provided

           memory. Allocate at least a safe amount of 1K. */</comment>

        <expr_stmt pos:start="41:9" pos:end="45:76"><expr pos:start="41:9" pos:end="45:75"><name pos:start="41:9" pos:end="41:20">kvm_msr_list</name> <operator pos:start="41:22" pos:end="41:22">=</operator> <call pos:start="41:24" pos:end="45:75"><name pos:start="41:24" pos:end="41:35">qemu_mallocz</name><argument_list pos:start="41:36" pos:end="45:75">(<argument pos:start="41:37" pos:end="45:74"><expr pos:start="41:37" pos:end="45:74"><call pos:start="41:37" pos:end="45:74"><name pos:start="41:37" pos:end="41:39">MAX</name><argument_list pos:start="41:40" pos:end="45:74">(<argument pos:start="41:41" pos:end="41:44"><expr pos:start="41:41" pos:end="41:44"><literal type="number" pos:start="41:41" pos:end="41:44">1024</literal></expr></argument>, <argument pos:start="41:47" pos:end="45:73"><expr pos:start="41:47" pos:end="45:73"><sizeof pos:start="41:47" pos:end="41:62">sizeof<argument_list pos:start="41:53" pos:end="41:62">(<argument pos:start="41:54" pos:end="41:61"><expr pos:start="41:54" pos:end="41:61"><name pos:start="41:54" pos:end="41:61">msr_list</name></expr></argument>)</argument_list></sizeof> <operator pos:start="41:64" pos:end="41:64">+</operator>

                                              <name pos:start="43:47" pos:end="43:60"><name pos:start="43:47" pos:end="43:54">msr_list</name><operator pos:start="43:55" pos:end="43:55">.</operator><name pos:start="43:56" pos:end="43:60">nmsrs</name></name> <operator pos:start="43:62" pos:end="43:62">*</operator>

                                              <sizeof pos:start="45:47" pos:end="45:73">sizeof<argument_list pos:start="45:53" pos:end="45:73">(<argument pos:start="45:54" pos:end="45:72"><expr pos:start="45:54" pos:end="45:72"><name pos:start="45:54" pos:end="45:72"><name pos:start="45:54" pos:end="45:61">msr_list</name><operator pos:start="45:62" pos:end="45:62">.</operator><name pos:start="45:63" pos:end="45:69">indices</name><index pos:start="45:70" pos:end="45:72">[<expr pos:start="45:71" pos:end="45:71"><literal type="number" pos:start="45:71" pos:end="45:71">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:45"><expr pos:start="49:9" pos:end="49:44"><name pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:20">kvm_msr_list</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:27">nmsrs</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <name pos:start="49:31" pos:end="49:44"><name pos:start="49:31" pos:end="49:38">msr_list</name><operator pos:start="49:39" pos:end="49:39">.</operator><name pos:start="49:40" pos:end="49:44">nmsrs</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:78"><expr pos:start="51:9" pos:end="51:77"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:77"><name pos:start="51:15" pos:end="51:23">kvm_ioctl</name><argument_list pos:start="51:24" pos:end="51:77">(<argument pos:start="51:25" pos:end="51:38"><expr pos:start="51:25" pos:end="51:38"><name pos:start="51:25" pos:end="51:38"><name pos:start="51:25" pos:end="51:27">env</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:38">kvm_state</name></name></expr></argument>, <argument pos:start="51:41" pos:end="51:62"><expr pos:start="51:41" pos:end="51:62"><name pos:start="51:41" pos:end="51:62">KVM_GET_MSR_INDEX_LIST</name></expr></argument>, <argument pos:start="51:65" pos:end="51:76"><expr pos:start="51:65" pos:end="51:76"><name pos:start="51:65" pos:end="51:76">kvm_msr_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="79:9"><if pos:start="53:9" pos:end="79:9">if <condition pos:start="53:12" pos:end="53:21">(<expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:18">&gt;=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>)</condition> <block pos:start="53:23" pos:end="79:9">{<block_content pos:start="55:13" pos:end="77:13">

            <decl_stmt pos:start="55:13" pos:end="55:18"><decl pos:start="55:13" pos:end="55:17"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:17">i</name></decl>;</decl_stmt>



            <for pos:start="59:13" pos:end="77:13">for <control pos:start="59:17" pos:end="59:53">(<init pos:start="59:18" pos:end="59:23"><expr pos:start="59:18" pos:end="59:22"><name pos:start="59:18" pos:end="59:18">i</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</init> <condition pos:start="59:25" pos:end="59:48"><expr pos:start="59:25" pos:end="59:47"><name pos:start="59:25" pos:end="59:25">i</name> <operator pos:start="59:27" pos:end="59:27">&lt;</operator> <name pos:start="59:29" pos:end="59:47"><name pos:start="59:29" pos:end="59:40">kvm_msr_list</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:47">nmsrs</name></name></expr>;</condition> <incr pos:start="59:50" pos:end="59:52"><expr pos:start="59:50" pos:end="59:52"><name pos:start="59:50" pos:end="59:50">i</name><operator pos:start="59:51" pos:end="59:52">++</operator></expr></incr>)</control> <block pos:start="59:55" pos:end="77:13">{<block_content pos:start="61:17" pos:end="75:17">

                <if_stmt pos:start="61:17" pos:end="67:17"><if pos:start="61:17" pos:end="67:17">if <condition pos:start="61:20" pos:end="61:57">(<expr pos:start="61:21" pos:end="61:56"><name pos:start="61:21" pos:end="61:44"><name pos:start="61:21" pos:end="61:32">kvm_msr_list</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:41">indices</name><index pos:start="61:42" pos:end="61:44">[<expr pos:start="61:43" pos:end="61:43"><name pos:start="61:43" pos:end="61:43">i</name></expr>]</index></name> <operator pos:start="61:46" pos:end="61:47">==</operator> <name pos:start="61:49" pos:end="61:56">MSR_STAR</name></expr>)</condition> <block pos:start="61:59" pos:end="67:17">{<block_content pos:start="63:21" pos:end="65:29">

                    <expr_stmt pos:start="63:21" pos:end="63:37"><expr pos:start="63:21" pos:end="63:36"><name pos:start="63:21" pos:end="63:32">has_msr_star</name> <operator pos:start="63:34" pos:end="63:34">=</operator> <literal type="number" pos:start="63:36" pos:end="63:36">1</literal></expr>;</expr_stmt>

                    <continue pos:start="65:21" pos:end="65:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="69:17" pos:end="75:17"><if pos:start="69:17" pos:end="75:17">if <condition pos:start="69:20" pos:end="69:64">(<expr pos:start="69:21" pos:end="69:63"><name pos:start="69:21" pos:end="69:44"><name pos:start="69:21" pos:end="69:32">kvm_msr_list</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:41">indices</name><index pos:start="69:42" pos:end="69:44">[<expr pos:start="69:43" pos:end="69:43"><name pos:start="69:43" pos:end="69:43">i</name></expr>]</index></name> <operator pos:start="69:46" pos:end="69:47">==</operator> <name pos:start="69:49" pos:end="69:63">MSR_VM_HSAVE_PA</name></expr>)</condition> <block pos:start="69:66" pos:end="75:17">{<block_content pos:start="71:21" pos:end="73:29">

                    <expr_stmt pos:start="71:21" pos:end="71:41"><expr pos:start="71:21" pos:end="71:40"><name pos:start="71:21" pos:end="71:36">has_msr_hsave_pa</name> <operator pos:start="71:38" pos:end="71:38">=</operator> <literal type="number" pos:start="71:40" pos:end="71:40">1</literal></expr>;</expr_stmt>

                    <continue pos:start="73:21" pos:end="73:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:27"><expr pos:start="83:9" pos:end="83:26"><call pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:12">free</name><argument_list pos:start="83:13" pos:end="83:26">(<argument pos:start="83:14" pos:end="83:25"><expr pos:start="83:14" pos:end="83:25"><name pos:start="83:14" pos:end="83:25">kvm_msr_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="89:5" pos:end="89:11">return;</return>

</block_content>}</block></function>
</unit>
