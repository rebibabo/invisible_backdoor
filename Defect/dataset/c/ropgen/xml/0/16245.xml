<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16245.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">hmp_sendkey</name><parameter_list pos:start="1:17" pos:end="1:50">(<parameter pos:start="1:18" pos:end="1:29"><decl pos:start="1:18" pos:end="1:29"><type pos:start="1:18" pos:end="1:29"><name pos:start="1:18" pos:end="1:24">Monitor</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:29">mon</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:42">QDict</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">qdict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:13">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">keys</name> <init pos:start="5:22" pos:end="5:51">= <expr pos:start="5:24" pos:end="5:51"><call pos:start="5:24" pos:end="5:51"><name pos:start="5:24" pos:end="5:36">qdict_get_str</name><argument_list pos:start="5:37" pos:end="5:51">(<argument pos:start="5:38" pos:end="5:42"><expr pos:start="5:38" pos:end="5:42"><name pos:start="5:38" pos:end="5:42">qdict</name></expr></argument>, <argument pos:start="5:45" pos:end="5:50"><expr pos:start="5:45" pos:end="5:50"><literal type="string" pos:start="5:45" pos:end="5:50">"keys"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">KeyValueList</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:25">keylist</name></decl>, <decl pos:start="7:28" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:32">head</name> <init pos:start="7:34" pos:end="7:39">= <expr pos:start="7:36" pos:end="7:39"><name pos:start="7:36" pos:end="7:39">NULL</name></expr></init></decl>, <decl pos:start="7:42" pos:end="7:52"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:42" pos:end="7:42">*</modifier></type><name pos:start="7:43" pos:end="7:45">tmp</name> <init pos:start="7:47" pos:end="7:52">= <expr pos:start="7:49" pos:end="7:52"><name pos:start="7:49" pos:end="7:52">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:56"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">has_hold_time</name> <init pos:start="9:23" pos:end="9:56">= <expr pos:start="9:25" pos:end="9:56"><call pos:start="9:25" pos:end="9:56"><name pos:start="9:25" pos:end="9:36">qdict_haskey</name><argument_list pos:start="9:37" pos:end="9:56">(<argument pos:start="9:38" pos:end="9:42"><expr pos:start="9:38" pos:end="9:42"><name pos:start="9:38" pos:end="9:42">qdict</name></expr></argument>, <argument pos:start="9:45" pos:end="9:55"><expr pos:start="9:45" pos:end="9:55"><literal type="string" pos:start="9:45" pos:end="9:55">"hold-time"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:62"><decl pos:start="11:5" pos:end="11:61"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">hold_time</name> <init pos:start="11:19" pos:end="11:61">= <expr pos:start="11:21" pos:end="11:61"><call pos:start="11:21" pos:end="11:61"><name pos:start="11:21" pos:end="11:37">qdict_get_try_int</name><argument_list pos:start="11:38" pos:end="11:61">(<argument pos:start="11:39" pos:end="11:43"><expr pos:start="11:39" pos:end="11:43"><name pos:start="11:39" pos:end="11:43">qdict</name></expr></argument>, <argument pos:start="11:46" pos:end="11:56"><expr pos:start="11:46" pos:end="11:56"><literal type="string" pos:start="11:46" pos:end="11:56">"hold-time"</literal></expr></argument>, <argument pos:start="11:59" pos:end="11:60"><expr pos:start="11:59" pos:end="11:60"><operator pos:start="11:59" pos:end="11:59">-</operator><literal type="number" pos:start="11:60" pos:end="11:60">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">err</name> <init pos:start="13:16" pos:end="13:21">= <expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:19">separator</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">keyname_len</name></decl>;</decl_stmt>



    <while pos:start="21:5" pos:end="107:5">while <condition pos:start="21:11" pos:end="21:13">(<expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">1</literal></expr>)</condition> <block pos:start="21:15" pos:end="107:5">{<block_content pos:start="23:9" pos:end="105:29">

        <expr_stmt pos:start="23:9" pos:end="23:38"><expr pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:17">separator</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:37"><name pos:start="23:21" pos:end="23:26">strchr</name><argument_list pos:start="23:27" pos:end="23:37">(<argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">keys</name></expr></argument>, <argument pos:start="23:34" pos:end="23:36"><expr pos:start="23:34" pos:end="23:36"><literal type="char" pos:start="23:34" pos:end="23:36">'-'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:66"><expr pos:start="25:9" pos:end="25:65"><name pos:start="25:9" pos:end="25:19">keyname_len</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <ternary pos:start="25:23" pos:end="25:65"><condition pos:start="25:23" pos:end="25:33"><expr pos:start="25:23" pos:end="25:31"><name pos:start="25:23" pos:end="25:31">separator</name></expr> ?</condition><then pos:start="25:35" pos:end="25:50"> <expr pos:start="25:35" pos:end="25:50"><name pos:start="25:35" pos:end="25:43">separator</name> <operator pos:start="25:45" pos:end="25:45">-</operator> <name pos:start="25:47" pos:end="25:50">keys</name></expr> </then><else pos:start="25:52" pos:end="25:65">: <expr pos:start="25:54" pos:end="25:65"><call pos:start="25:54" pos:end="25:65"><name pos:start="25:54" pos:end="25:59">strlen</name><argument_list pos:start="25:60" pos:end="25:65">(<argument pos:start="25:61" pos:end="25:64"><expr pos:start="25:61" pos:end="25:64"><name pos:start="25:61" pos:end="25:64">keys</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>



        <comment type="block" pos:start="29:9" pos:end="29:73">/* Be compatible with old interface, convert user inputted "&lt;" */</comment>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:47">(<expr pos:start="31:13" pos:end="31:46"><name pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:16">keys</name><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>]</index></name> <operator pos:start="31:21" pos:end="31:22">==</operator> <literal type="char" pos:start="31:24" pos:end="31:26">'&lt;'</literal> <operator pos:start="31:28" pos:end="31:29">&amp;&amp;</operator> <name pos:start="31:31" pos:end="31:41">keyname_len</name> <operator pos:start="31:43" pos:end="31:44">==</operator> <literal type="number" pos:start="31:46" pos:end="31:46">1</literal></expr>)</condition> <block pos:start="31:49" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:28">

            <expr_stmt pos:start="33:13" pos:end="33:26"><expr pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:16">keys</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <literal type="string" pos:start="33:20" pos:end="33:25">"less"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:28"><expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:23">keyname_len</name> <operator pos:start="35:25" pos:end="35:25">=</operator> <literal type="number" pos:start="35:27" pos:end="35:27">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:46"><expr pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:15">keylist</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:45"><name pos:start="41:19" pos:end="41:27">g_malloc0</name><argument_list pos:start="41:28" pos:end="41:45">(<argument pos:start="41:29" pos:end="41:44"><expr pos:start="41:29" pos:end="41:44"><sizeof pos:start="41:29" pos:end="41:44">sizeof<argument_list pos:start="41:35" pos:end="41:44">(<argument pos:start="41:36" pos:end="41:43"><expr pos:start="41:36" pos:end="41:43"><operator pos:start="41:36" pos:end="41:36">*</operator><name pos:start="41:37" pos:end="41:43">keylist</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:60"><expr pos:start="43:9" pos:end="43:59"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:15">keylist</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:22">value</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <call pos:start="43:26" pos:end="43:59"><name pos:start="43:26" pos:end="43:34">g_malloc0</name><argument_list pos:start="43:35" pos:end="43:59">(<argument pos:start="43:36" pos:end="43:58"><expr pos:start="43:36" pos:end="43:58"><sizeof pos:start="43:36" pos:end="43:58">sizeof<argument_list pos:start="43:42" pos:end="43:58">(<argument pos:start="43:43" pos:end="43:57"><expr pos:start="43:43" pos:end="43:57"><operator pos:start="43:43" pos:end="43:43">*</operator><name pos:start="43:44" pos:end="43:57"><name pos:start="43:44" pos:end="43:50">keylist</name><operator pos:start="43:51" pos:end="43:52">-&gt;</operator><name pos:start="43:53" pos:end="43:57">value</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:18">(<expr pos:start="47:13" pos:end="47:17"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:17">head</name></expr>)</condition> <block pos:start="47:20" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:27">

            <expr_stmt pos:start="49:13" pos:end="49:27"><expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:16">head</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:26">keylist</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:16">(<expr pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">tmp</name></expr>)</condition> <block pos:start="53:18" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:32">

            <expr_stmt pos:start="55:13" pos:end="55:32"><expr pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:15">tmp</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:21">next</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <name pos:start="55:25" pos:end="55:31">keylist</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:11">tmp</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:21">keylist</name></expr>;</expr_stmt>



        <if_stmt pos:start="63:9" pos:end="95:9"><if pos:start="63:9" pos:end="81:9">if <condition pos:start="63:12" pos:end="63:39">(<expr pos:start="63:13" pos:end="63:38"><call pos:start="63:13" pos:end="63:38"><name pos:start="63:13" pos:end="63:20">strstart</name><argument_list pos:start="63:21" pos:end="63:38">(<argument pos:start="63:22" pos:end="63:25"><expr pos:start="63:22" pos:end="63:25"><name pos:start="63:22" pos:end="63:25">keys</name></expr></argument>, <argument pos:start="63:28" pos:end="63:31"><expr pos:start="63:28" pos:end="63:31"><literal type="string" pos:start="63:28" pos:end="63:31">"0x"</literal></expr></argument>, <argument pos:start="63:34" pos:end="63:37"><expr pos:start="63:34" pos:end="63:37"><name pos:start="63:34" pos:end="63:37">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:41" pos:end="81:9">{<block_content pos:start="65:13" pos:end="79:45">

            <decl_stmt pos:start="65:13" pos:end="65:23"><decl pos:start="65:13" pos:end="65:22"><type pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:16">char</name> <modifier pos:start="65:18" pos:end="65:18">*</modifier></type><name pos:start="65:19" pos:end="65:22">endp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="67:13" pos:end="67:48"><decl pos:start="67:13" pos:end="67:47"><type pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:15">int</name></type> <name pos:start="67:17" pos:end="67:21">value</name> <init pos:start="67:23" pos:end="67:47">= <expr pos:start="67:25" pos:end="67:47"><call pos:start="67:25" pos:end="67:47"><name pos:start="67:25" pos:end="67:31">strtoul</name><argument_list pos:start="67:32" pos:end="67:47">(<argument pos:start="67:33" pos:end="67:36"><expr pos:start="67:33" pos:end="67:36"><name pos:start="67:33" pos:end="67:36">keys</name></expr></argument>, <argument pos:start="67:39" pos:end="67:43"><expr pos:start="67:39" pos:end="67:43"><operator pos:start="67:39" pos:end="67:39">&amp;</operator><name pos:start="67:40" pos:end="67:43">endp</name></expr></argument>, <argument pos:start="67:46" pos:end="67:46"><expr pos:start="67:46" pos:end="67:46"><literal type="number" pos:start="67:46" pos:end="67:46">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:47"><expr pos:start="69:13" pos:end="69:46"><call pos:start="69:13" pos:end="69:46"><name pos:start="69:13" pos:end="69:18">assert</name><argument_list pos:start="69:19" pos:end="69:46">(<argument pos:start="69:20" pos:end="69:45"><expr pos:start="69:20" pos:end="69:45"><name pos:start="69:20" pos:end="69:23">endp</name> <operator pos:start="69:25" pos:end="69:26">&lt;=</operator> <name pos:start="69:28" pos:end="69:31">keys</name> <operator pos:start="69:33" pos:end="69:33">+</operator> <name pos:start="69:35" pos:end="69:45">keyname_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="75:13"><if pos:start="71:13" pos:end="75:13">if <condition pos:start="71:16" pos:end="71:43">(<expr pos:start="71:17" pos:end="71:42"><name pos:start="71:17" pos:end="71:20">endp</name> <operator pos:start="71:22" pos:end="71:23">!=</operator> <name pos:start="71:25" pos:end="71:28">keys</name> <operator pos:start="71:30" pos:end="71:30">+</operator> <name pos:start="71:32" pos:end="71:42">keyname_len</name></expr>)</condition> <block pos:start="71:45" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:29">

                <goto pos:start="73:17" pos:end="73:29">goto <name pos:start="73:22" pos:end="73:28">err_out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:57"><expr pos:start="77:13" pos:end="77:56"><name pos:start="77:13" pos:end="77:32"><name pos:start="77:13" pos:end="77:19">keylist</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:26">value</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:32">type</name></name> <operator pos:start="77:34" pos:end="77:34">=</operator> <name pos:start="77:36" pos:end="77:56">KEY_VALUE_KIND_NUMBER</name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:45"><expr pos:start="79:13" pos:end="79:44"><name pos:start="79:13" pos:end="79:36"><name pos:start="79:13" pos:end="79:19">keylist</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:26">value</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:29">u</name><operator pos:start="79:30" pos:end="79:30">.</operator><name pos:start="79:31" pos:end="79:36">number</name></name> <operator pos:start="79:38" pos:end="79:38">=</operator> <name pos:start="79:40" pos:end="79:44">value</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="95:9">else <block pos:start="81:16" pos:end="95:9">{<block_content pos:start="83:13" pos:end="93:42">

            <decl_stmt pos:start="83:13" pos:end="83:56"><decl pos:start="83:13" pos:end="83:55"><type pos:start="83:13" pos:end="83:15"><name pos:start="83:13" pos:end="83:15">int</name></type> <name pos:start="83:17" pos:end="83:19">idx</name> <init pos:start="83:21" pos:end="83:55">= <expr pos:start="83:23" pos:end="83:55"><call pos:start="83:23" pos:end="83:55"><name pos:start="83:23" pos:end="83:36">index_from_key</name><argument_list pos:start="83:37" pos:end="83:55">(<argument pos:start="83:38" pos:end="83:41"><expr pos:start="83:38" pos:end="83:41"><name pos:start="83:38" pos:end="83:41">keys</name></expr></argument>, <argument pos:start="83:44" pos:end="83:54"><expr pos:start="83:44" pos:end="83:54"><name pos:start="83:44" pos:end="83:54">keyname_len</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="85:13" pos:end="89:13"><if pos:start="85:13" pos:end="89:13">if <condition pos:start="85:16" pos:end="85:39">(<expr pos:start="85:17" pos:end="85:38"><name pos:start="85:17" pos:end="85:19">idx</name> <operator pos:start="85:21" pos:end="85:22">==</operator> <name pos:start="85:24" pos:end="85:38">Q_KEY_CODE__MAX</name></expr>)</condition> <block pos:start="85:41" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:29">

                <goto pos:start="87:17" pos:end="87:29">goto <name pos:start="87:22" pos:end="87:28">err_out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:56"><expr pos:start="91:13" pos:end="91:55"><name pos:start="91:13" pos:end="91:32"><name pos:start="91:13" pos:end="91:19">keylist</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:26">value</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:32">type</name></name> <operator pos:start="91:34" pos:end="91:34">=</operator> <name pos:start="91:36" pos:end="91:55">KEY_VALUE_KIND_QCODE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:42"><expr pos:start="93:13" pos:end="93:41"><name pos:start="93:13" pos:end="93:35"><name pos:start="93:13" pos:end="93:19">keylist</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:26">value</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:29">u</name><operator pos:start="93:30" pos:end="93:30">.</operator><name pos:start="93:31" pos:end="93:35">qcode</name></name> <operator pos:start="93:37" pos:end="93:37">=</operator> <name pos:start="93:39" pos:end="93:41">idx</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="99:9" pos:end="103:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:23">(<expr pos:start="99:13" pos:end="99:22"><operator pos:start="99:13" pos:end="99:13">!</operator><name pos:start="99:14" pos:end="99:22">separator</name></expr>)</condition> <block pos:start="99:25" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:18">

            <break pos:start="101:13" pos:end="101:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:29"><expr pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:12">keys</name> <operator pos:start="105:14" pos:end="105:14">=</operator> <name pos:start="105:16" pos:end="105:24">separator</name> <operator pos:start="105:26" pos:end="105:26">+</operator> <literal type="number" pos:start="105:28" pos:end="105:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="111:5" pos:end="111:55"><expr pos:start="111:5" pos:end="111:54"><call pos:start="111:5" pos:end="111:54"><name pos:start="111:5" pos:end="111:16">qmp_send_key</name><argument_list pos:start="111:17" pos:end="111:54">(<argument pos:start="111:18" pos:end="111:21"><expr pos:start="111:18" pos:end="111:21"><name pos:start="111:18" pos:end="111:21">head</name></expr></argument>, <argument pos:start="111:24" pos:end="111:36"><expr pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:36">has_hold_time</name></expr></argument>, <argument pos:start="111:39" pos:end="111:47"><expr pos:start="111:39" pos:end="111:47"><name pos:start="111:39" pos:end="111:47">hold_time</name></expr></argument>, <argument pos:start="111:50" pos:end="111:53"><expr pos:start="111:50" pos:end="111:53"><operator pos:start="111:50" pos:end="111:50">&amp;</operator><name pos:start="111:51" pos:end="111:53">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:32"><expr pos:start="113:5" pos:end="113:31"><call pos:start="113:5" pos:end="113:31"><name pos:start="113:5" pos:end="113:20">hmp_handle_error</name><argument_list pos:start="113:21" pos:end="113:31">(<argument pos:start="113:22" pos:end="113:24"><expr pos:start="113:22" pos:end="113:24"><name pos:start="113:22" pos:end="113:24">mon</name></expr></argument>, <argument pos:start="113:27" pos:end="113:30"><expr pos:start="113:27" pos:end="113:30"><operator pos:start="113:27" pos:end="113:27">&amp;</operator><name pos:start="113:28" pos:end="113:30">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="117:1" pos:end="117:4"><name pos:start="117:1" pos:end="117:3">out</name>:</label>

    <expr_stmt pos:start="119:5" pos:end="119:33"><expr pos:start="119:5" pos:end="119:32"><call pos:start="119:5" pos:end="119:32"><name pos:start="119:5" pos:end="119:26">qapi_free_KeyValueList</name><argument_list pos:start="119:27" pos:end="119:32">(<argument pos:start="119:28" pos:end="119:31"><expr pos:start="119:28" pos:end="119:31"><name pos:start="119:28" pos:end="119:31">head</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="121:5" pos:end="121:11">return;</return>



<label pos:start="125:1" pos:end="125:8"><name pos:start="125:1" pos:end="125:7">err_out</name>:</label>

    <expr_stmt pos:start="127:5" pos:end="127:72"><expr pos:start="127:5" pos:end="127:71"><call pos:start="127:5" pos:end="127:71"><name pos:start="127:5" pos:end="127:18">monitor_printf</name><argument_list pos:start="127:19" pos:end="127:71">(<argument pos:start="127:20" pos:end="127:22"><expr pos:start="127:20" pos:end="127:22"><name pos:start="127:20" pos:end="127:22">mon</name></expr></argument>, <argument pos:start="127:25" pos:end="127:51"><expr pos:start="127:25" pos:end="127:51"><literal type="string" pos:start="127:25" pos:end="127:51">"invalid parameter: %.*s\n"</literal></expr></argument>, <argument pos:start="127:54" pos:end="127:64"><expr pos:start="127:54" pos:end="127:64"><name pos:start="127:54" pos:end="127:64">keyname_len</name></expr></argument>, <argument pos:start="127:67" pos:end="127:70"><expr pos:start="127:67" pos:end="127:70"><name pos:start="127:67" pos:end="127:70">keys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <goto pos:start="129:5" pos:end="129:13">goto <name pos:start="129:10" pos:end="129:12">out</name>;</goto>

</block_content>}</block></function>
</unit>
