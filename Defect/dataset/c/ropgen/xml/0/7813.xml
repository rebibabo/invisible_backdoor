<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7813.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">fw_cfg_bootsplash</name><parameter_list pos:start="1:30" pos:end="1:44">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:40">FWCfgState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:24">boot_splash_time</name> <init pos:start="5:26" pos:end="5:29">= <expr pos:start="5:28" pos:end="5:29"><operator pos:start="5:28" pos:end="5:28">-</operator><literal type="number" pos:start="5:29" pos:end="5:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:36">boot_splash_filename</name> <init pos:start="7:38" pos:end="7:43">= <expr pos:start="7:40" pos:end="7:43"><name pos:start="7:40" pos:end="7:43">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:11">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:18">filename</name></decl>, <decl pos:start="11:21" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:30">file_data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">gsize</name></type> <name pos:start="13:11" pos:end="13:19">file_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">file_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:20">temp</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:32">/* get user configuration */</comment>

    <decl_stmt pos:start="23:5" pos:end="23:54"><decl pos:start="23:5" pos:end="23:53"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16">QemuOptsList</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:23">plist</name> <init pos:start="23:25" pos:end="23:53">= <expr pos:start="23:27" pos:end="23:53"><call pos:start="23:27" pos:end="23:53"><name pos:start="23:27" pos:end="23:40">qemu_find_opts</name><argument_list pos:start="23:41" pos:end="23:53">(<argument pos:start="23:42" pos:end="23:52"><expr pos:start="23:42" pos:end="23:52"><literal type="string" pos:start="23:42" pos:end="23:52">"boot-opts"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:48"><decl pos:start="25:5" pos:end="25:47"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:12">QemuOpts</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:18">opts</name> <init pos:start="25:20" pos:end="25:47">= <expr pos:start="25:22" pos:end="25:47"><call pos:start="25:22" pos:end="25:47"><name pos:start="25:22" pos:end="25:33">QTAILQ_FIRST</name><argument_list pos:start="25:34" pos:end="25:47">(<argument pos:start="25:35" pos:end="25:46"><expr pos:start="25:35" pos:end="25:46"><operator pos:start="25:35" pos:end="25:35">&amp;</operator><name pos:start="25:36" pos:end="25:46"><name pos:start="25:36" pos:end="25:40">plist</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:46">head</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="27:5" pos:end="47:5"><if pos:start="27:5" pos:end="47:5">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:12">opts</name> <operator pos:start="27:14" pos:end="27:15">!=</operator> <name pos:start="27:17" pos:end="27:20">NULL</name></expr>)</condition> <block pos:start="27:23" pos:end="47:5">{<block_content pos:start="29:9" pos:end="45:9">

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:12">temp</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:43"><name pos:start="29:16" pos:end="29:27">qemu_opt_get</name><argument_list pos:start="29:28" pos:end="29:43">(<argument pos:start="29:29" pos:end="29:32"><expr pos:start="29:29" pos:end="29:32"><name pos:start="29:29" pos:end="29:32">opts</name></expr></argument>, <argument pos:start="29:35" pos:end="29:42"><expr pos:start="29:35" pos:end="29:42"><literal type="string" pos:start="29:35" pos:end="29:42">"splash"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:25">(<expr pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:16">temp</name> <operator pos:start="31:18" pos:end="31:19">!=</operator> <name pos:start="31:21" pos:end="31:24">NULL</name></expr>)</condition> <block pos:start="31:27" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:40">

            <expr_stmt pos:start="33:13" pos:end="33:40"><expr pos:start="33:13" pos:end="33:39"><name pos:start="33:13" pos:end="33:32">boot_splash_filename</name> <operator pos:start="33:34" pos:end="33:34">=</operator> <name pos:start="33:36" pos:end="33:39">temp</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:12">temp</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:48"><name pos:start="37:16" pos:end="37:27">qemu_opt_get</name><argument_list pos:start="37:28" pos:end="37:48">(<argument pos:start="37:29" pos:end="37:32"><expr pos:start="37:29" pos:end="37:32"><name pos:start="37:29" pos:end="37:32">opts</name></expr></argument>, <argument pos:start="37:35" pos:end="37:47"><expr pos:start="37:35" pos:end="37:47"><literal type="string" pos:start="37:35" pos:end="37:47">"splash-time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:25">(<expr pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:16">temp</name> <operator pos:start="39:18" pos:end="39:19">!=</operator> <name pos:start="39:21" pos:end="39:24">NULL</name></expr>)</condition> <block pos:start="39:27" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:58">

            <expr_stmt pos:start="41:13" pos:end="41:29"><expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:13">p</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:21">char</name> <operator pos:start="41:23" pos:end="41:23">*</operator><operator pos:start="41:24" pos:end="41:24">)</operator><name pos:start="41:25" pos:end="41:28">temp</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:58"><expr pos:start="43:13" pos:end="43:57"><name pos:start="43:13" pos:end="43:28">boot_splash_time</name> <operator pos:start="43:30" pos:end="43:30">=</operator> <call pos:start="43:32" pos:end="43:57"><name pos:start="43:32" pos:end="43:37">strtol</name><argument_list pos:start="43:38" pos:end="43:57">(<argument pos:start="43:39" pos:end="43:39"><expr pos:start="43:39" pos:end="43:39"><name pos:start="43:39" pos:end="43:39">p</name></expr></argument>, <argument pos:start="43:42" pos:end="43:52"><expr pos:start="43:42" pos:end="43:52"><operator pos:start="43:42" pos:end="43:42">(</operator><name pos:start="43:43" pos:end="43:46">char</name> <operator pos:start="43:48" pos:end="43:48">*</operator><operator pos:start="43:49" pos:end="43:49">*</operator><operator pos:start="43:50" pos:end="43:50">)</operator><operator pos:start="43:51" pos:end="43:51">&amp;</operator><name pos:start="43:52" pos:end="43:52">p</name></expr></argument>, <argument pos:start="43:55" pos:end="43:56"><expr pos:start="43:55" pos:end="43:56"><literal type="number" pos:start="43:55" pos:end="43:56">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:49">/* insert splash time if user configurated */</comment>

    <if_stmt pos:start="53:5" pos:end="73:5"><if pos:start="53:5" pos:end="73:5">if <condition pos:start="53:8" pos:end="53:30">(<expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:24">boot_splash_time</name> <operator pos:start="53:26" pos:end="53:27">&gt;=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">0</literal></expr>)</condition> <block pos:start="53:32" pos:end="73:5">{<block_content pos:start="57:9" pos:end="71:74">

        <comment type="block" pos:start="55:9" pos:end="55:32">/* validate the input */</comment>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:38">(<expr pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:28">boot_splash_time</name> <operator pos:start="57:30" pos:end="57:30">&gt;</operator> <literal type="number" pos:start="57:32" pos:end="57:37">0xffff</literal></expr>)</condition> <block pos:start="57:40" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:38">

            <expr_stmt pos:start="59:13" pos:end="59:78"><expr pos:start="59:13" pos:end="59:77"><call pos:start="59:13" pos:end="59:77"><name pos:start="59:13" pos:end="59:24">error_report</name><argument_list pos:start="59:25" pos:end="59:77">(<argument pos:start="59:26" pos:end="59:76"><expr pos:start="59:26" pos:end="59:76"><literal type="string" pos:start="59:26" pos:end="59:76">"splash time is big than 65535, force it to 65535."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:38"><expr pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:28">boot_splash_time</name> <operator pos:start="61:30" pos:end="61:30">=</operator> <literal type="number" pos:start="61:32" pos:end="61:37">0xffff</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="65:9" pos:end="65:38">/* use little endian format */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:69"><expr pos:start="67:9" pos:end="67:68"><name pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:28">qemu_extra_params_fw</name><index pos:start="67:29" pos:end="67:31">[<expr pos:start="67:30" pos:end="67:30"><literal type="number" pos:start="67:30" pos:end="67:30">0</literal></expr>]</index></name> <operator pos:start="67:33" pos:end="67:33">=</operator> <operator pos:start="67:35" pos:end="67:35">(</operator><name pos:start="67:36" pos:end="67:42">uint8_t</name><operator pos:start="67:43" pos:end="67:43">)</operator><operator pos:start="67:44" pos:end="67:44">(</operator><name pos:start="67:45" pos:end="67:60">boot_splash_time</name> <operator pos:start="67:62" pos:end="67:62">&amp;</operator> <literal type="number" pos:start="67:64" pos:end="67:67">0xff</literal><operator pos:start="67:68" pos:end="67:68">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:76"><expr pos:start="69:9" pos:end="69:75"><name pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:28">qemu_extra_params_fw</name><index pos:start="69:29" pos:end="69:31">[<expr pos:start="69:30" pos:end="69:30"><literal type="number" pos:start="69:30" pos:end="69:30">1</literal></expr>]</index></name> <operator pos:start="69:33" pos:end="69:33">=</operator> <operator pos:start="69:35" pos:end="69:35">(</operator><name pos:start="69:36" pos:end="69:42">uint8_t</name><operator pos:start="69:43" pos:end="69:43">)</operator><operator pos:start="69:44" pos:end="69:44">(</operator><operator pos:start="69:45" pos:end="69:45">(</operator><name pos:start="69:46" pos:end="69:61">boot_splash_time</name> <operator pos:start="69:63" pos:end="69:64">&gt;&gt;</operator> <literal type="number" pos:start="69:66" pos:end="69:66">8</literal><operator pos:start="69:67" pos:end="69:67">)</operator> <operator pos:start="69:69" pos:end="69:69">&amp;</operator> <literal type="number" pos:start="69:71" pos:end="69:74">0xff</literal><operator pos:start="69:75" pos:end="69:75">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:74"><expr pos:start="71:9" pos:end="71:73"><call pos:start="71:9" pos:end="71:73"><name pos:start="71:9" pos:end="71:23">fw_cfg_add_file</name><argument_list pos:start="71:24" pos:end="71:73">(<argument pos:start="71:25" pos:end="71:25"><expr pos:start="71:25" pos:end="71:25"><name pos:start="71:25" pos:end="71:25">s</name></expr></argument>, <argument pos:start="71:28" pos:end="71:47"><expr pos:start="71:28" pos:end="71:47"><literal type="string" pos:start="71:28" pos:end="71:47">"etc/boot-menu-wait"</literal></expr></argument>, <argument pos:start="71:50" pos:end="71:69"><expr pos:start="71:50" pos:end="71:69"><name pos:start="71:50" pos:end="71:69">qemu_extra_params_fw</name></expr></argument>, <argument pos:start="71:72" pos:end="71:72"><expr pos:start="71:72" pos:end="71:72"><literal type="number" pos:start="71:72" pos:end="71:72">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:49">/* insert splash file if user configurated */</comment>

    <if_stmt pos:start="79:5" pos:end="135:5"><if pos:start="79:5" pos:end="135:5">if <condition pos:start="79:8" pos:end="79:37">(<expr pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:28">boot_splash_filename</name> <operator pos:start="79:30" pos:end="79:31">!=</operator> <name pos:start="79:33" pos:end="79:36">NULL</name></expr>)</condition> <block pos:start="79:39" pos:end="135:5">{<block_content pos:start="81:9" pos:end="133:25">

        <expr_stmt pos:start="81:9" pos:end="81:77"><expr pos:start="81:9" pos:end="81:76"><name pos:start="81:9" pos:end="81:16">filename</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <call pos:start="81:20" pos:end="81:76"><name pos:start="81:20" pos:end="81:33">qemu_find_file</name><argument_list pos:start="81:34" pos:end="81:76">(<argument pos:start="81:35" pos:end="81:53"><expr pos:start="81:35" pos:end="81:53"><name pos:start="81:35" pos:end="81:53">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="81:56" pos:end="81:75"><expr pos:start="81:56" pos:end="81:75"><name pos:start="81:56" pos:end="81:75">boot_splash_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:29">(<expr pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:20">filename</name> <operator pos:start="83:22" pos:end="83:23">==</operator> <name pos:start="83:25" pos:end="83:28">NULL</name></expr>)</condition> <block pos:start="83:31" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:19">

            <expr_stmt pos:start="85:13" pos:end="85:76"><expr pos:start="85:13" pos:end="85:75"><call pos:start="85:13" pos:end="85:75"><name pos:start="85:13" pos:end="85:24">error_report</name><argument_list pos:start="85:25" pos:end="85:75">(<argument pos:start="85:26" pos:end="85:52"><expr pos:start="85:26" pos:end="85:52"><literal type="string" pos:start="85:26" pos:end="85:52">"failed to find file '%s'."</literal></expr></argument>, <argument pos:start="85:55" pos:end="85:74"><expr pos:start="85:55" pos:end="85:74"><name pos:start="85:55" pos:end="85:74">boot_splash_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="87:13" pos:end="87:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="93:9" pos:end="93:31">/* loading file data */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:70"><expr pos:start="95:9" pos:end="95:69"><name pos:start="95:9" pos:end="95:17">file_data</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <call pos:start="95:21" pos:end="95:69"><name pos:start="95:21" pos:end="95:35">read_splashfile</name><argument_list pos:start="95:36" pos:end="95:69">(<argument pos:start="95:37" pos:end="95:44"><expr pos:start="95:37" pos:end="95:44"><name pos:start="95:37" pos:end="95:44">filename</name></expr></argument>, <argument pos:start="95:47" pos:end="95:56"><expr pos:start="95:47" pos:end="95:56"><operator pos:start="95:47" pos:end="95:47">&amp;</operator><name pos:start="95:48" pos:end="95:56">file_size</name></expr></argument>, <argument pos:start="95:59" pos:end="95:68"><expr pos:start="95:59" pos:end="95:68"><operator pos:start="95:59" pos:end="95:59">&amp;</operator><name pos:start="95:60" pos:end="95:68">file_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="103:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:30">(<expr pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:21">file_data</name> <operator pos:start="97:23" pos:end="97:24">==</operator> <name pos:start="97:26" pos:end="97:29">NULL</name></expr>)</condition> <block pos:start="97:32" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:19">

            <expr_stmt pos:start="99:13" pos:end="99:29"><expr pos:start="99:13" pos:end="99:28"><call pos:start="99:13" pos:end="99:28"><name pos:start="99:13" pos:end="99:18">g_free</name><argument_list pos:start="99:19" pos:end="99:28">(<argument pos:start="99:20" pos:end="99:27"><expr pos:start="99:20" pos:end="99:27"><name pos:start="99:20" pos:end="99:27">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="101:13" pos:end="101:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:41">(<expr pos:start="105:13" pos:end="105:40"><name pos:start="105:13" pos:end="105:32">boot_splash_filedata</name> <operator pos:start="105:34" pos:end="105:35">!=</operator> <name pos:start="105:37" pos:end="105:40">NULL</name></expr>)</condition> <block pos:start="105:43" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:41">

            <expr_stmt pos:start="107:13" pos:end="107:41"><expr pos:start="107:13" pos:end="107:40"><call pos:start="107:13" pos:end="107:40"><name pos:start="107:13" pos:end="107:18">g_free</name><argument_list pos:start="107:19" pos:end="107:40">(<argument pos:start="107:20" pos:end="107:39"><expr pos:start="107:20" pos:end="107:39"><name pos:start="107:20" pos:end="107:39">boot_splash_filedata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:52"><expr pos:start="111:9" pos:end="111:51"><name pos:start="111:9" pos:end="111:28">boot_splash_filedata</name> <operator pos:start="111:30" pos:end="111:30">=</operator> <operator pos:start="111:32" pos:end="111:32">(</operator><name pos:start="111:33" pos:end="111:39">uint8_t</name> <operator pos:start="111:41" pos:end="111:41">*</operator><operator pos:start="111:42" pos:end="111:42">)</operator><name pos:start="111:43" pos:end="111:51">file_data</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:46"><expr pos:start="113:9" pos:end="113:45"><name pos:start="113:9" pos:end="113:33">boot_splash_filedata_size</name> <operator pos:start="113:35" pos:end="113:35">=</operator> <name pos:start="113:37" pos:end="113:45">file_size</name></expr>;</expr_stmt>



        <comment type="block" pos:start="117:9" pos:end="117:25">/* insert data */</comment>

        <if_stmt pos:start="119:9" pos:end="131:9"><if pos:start="119:9" pos:end="125:9">if <condition pos:start="119:12" pos:end="119:34">(<expr pos:start="119:13" pos:end="119:33"><name pos:start="119:13" pos:end="119:21">file_type</name> <operator pos:start="119:23" pos:end="119:24">==</operator> <name pos:start="119:26" pos:end="119:33">JPG_FILE</name></expr>)</condition> <block pos:start="119:36" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:69">

            <expr_stmt pos:start="121:13" pos:end="123:69"><expr pos:start="121:13" pos:end="123:68"><call pos:start="121:13" pos:end="123:68"><name pos:start="121:13" pos:end="121:27">fw_cfg_add_file</name><argument_list pos:start="121:28" pos:end="123:68">(<argument pos:start="121:29" pos:end="121:29"><expr pos:start="121:29" pos:end="121:29"><name pos:start="121:29" pos:end="121:29">s</name></expr></argument>, <argument pos:start="121:32" pos:end="121:47"><expr pos:start="121:32" pos:end="121:47"><literal type="string" pos:start="121:32" pos:end="121:47">"bootsplash.jpg"</literal></expr></argument>,

                    <argument pos:start="123:21" pos:end="123:40"><expr pos:start="123:21" pos:end="123:40"><name pos:start="123:21" pos:end="123:40">boot_splash_filedata</name></expr></argument>, <argument pos:start="123:43" pos:end="123:67"><expr pos:start="123:43" pos:end="123:67"><name pos:start="123:43" pos:end="123:67">boot_splash_filedata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="125:11" pos:end="131:9">else <block pos:start="125:16" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:69">

            <expr_stmt pos:start="127:13" pos:end="129:69"><expr pos:start="127:13" pos:end="129:68"><call pos:start="127:13" pos:end="129:68"><name pos:start="127:13" pos:end="127:27">fw_cfg_add_file</name><argument_list pos:start="127:28" pos:end="129:68">(<argument pos:start="127:29" pos:end="127:29"><expr pos:start="127:29" pos:end="127:29"><name pos:start="127:29" pos:end="127:29">s</name></expr></argument>, <argument pos:start="127:32" pos:end="127:47"><expr pos:start="127:32" pos:end="127:47"><literal type="string" pos:start="127:32" pos:end="127:47">"bootsplash.bmp"</literal></expr></argument>,

                    <argument pos:start="129:21" pos:end="129:40"><expr pos:start="129:21" pos:end="129:40"><name pos:start="129:21" pos:end="129:40">boot_splash_filedata</name></expr></argument>, <argument pos:start="129:43" pos:end="129:67"><expr pos:start="129:43" pos:end="129:67"><name pos:start="129:43" pos:end="129:67">boot_splash_filedata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:25"><expr pos:start="133:9" pos:end="133:24"><call pos:start="133:9" pos:end="133:24"><name pos:start="133:9" pos:end="133:14">g_free</name><argument_list pos:start="133:15" pos:end="133:24">(<argument pos:start="133:16" pos:end="133:23"><expr pos:start="133:16" pos:end="133:23"><name pos:start="133:16" pos:end="133:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
