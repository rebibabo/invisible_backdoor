<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4547.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">scsi_do_read</name><parameter_list pos:start="1:25" pos:end="1:49">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:36">SCSIDiskReq</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">r</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:48"><decl pos:start="1:42" pos:end="1:48"><type pos:start="1:42" pos:end="1:48"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:48">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:28">

    <decl_stmt pos:start="5:5" pos:end="5:66"><decl pos:start="5:5" pos:end="5:65"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SCSIDiskState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:65">= <expr pos:start="5:24" pos:end="5:65"><call pos:start="5:24" pos:end="5:65"><name pos:start="5:24" pos:end="5:32">DO_UPCAST</name><argument_list pos:start="5:33" pos:end="5:65">(<argument pos:start="5:34" pos:end="5:46"><expr pos:start="5:34" pos:end="5:46"><name pos:start="5:34" pos:end="5:46">SCSIDiskState</name></expr></argument>, <argument pos:start="5:49" pos:end="5:52"><expr pos:start="5:49" pos:end="5:52"><name pos:start="5:49" pos:end="5:52">qdev</name></expr></argument>, <argument pos:start="5:55" pos:end="5:64"><expr pos:start="5:55" pos:end="5:64"><name pos:start="5:55" pos:end="5:64"><name pos:start="5:55" pos:end="5:55">r</name><operator pos:start="5:56" pos:end="5:57">-&gt;</operator><name pos:start="5:58" pos:end="5:60">req</name><operator pos:start="5:61" pos:end="5:61">.</operator><name pos:start="5:62" pos:end="5:64">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:71"><decl pos:start="7:5" pos:end="7:70"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SCSIDiskClass</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">sdc</name> <init pos:start="7:24" pos:end="7:70">= <expr pos:start="7:26" pos:end="7:70"><operator pos:start="7:26" pos:end="7:26">(</operator><name pos:start="7:27" pos:end="7:39">SCSIDiskClass</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator> <call pos:start="7:44" pos:end="7:70"><name pos:start="7:44" pos:end="7:59">object_get_class</name><argument_list pos:start="7:60" pos:end="7:70">(<argument pos:start="7:61" pos:end="7:69"><expr pos:start="7:61" pos:end="7:69"><call pos:start="7:61" pos:end="7:69"><name pos:start="7:61" pos:end="7:66">OBJECT</name><argument_list pos:start="7:67" pos:end="7:69">(<argument pos:start="7:68" pos:end="7:68"><expr pos:start="7:68" pos:end="7:68"><name pos:start="7:68" pos:end="7:68">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:34"><expr pos:start="11:5" pos:end="11:33"><call pos:start="11:5" pos:end="11:33"><name pos:start="11:5" pos:end="11:10">assert</name> <argument_list pos:start="11:12" pos:end="11:33">(<argument pos:start="11:13" pos:end="11:32"><expr pos:start="11:13" pos:end="11:32"><name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:13">r</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:18">req</name><operator pos:start="11:19" pos:end="11:19">.</operator><name pos:start="11:20" pos:end="11:24">aiocb</name></name> <operator pos:start="11:26" pos:end="11:27">==</operator> <name pos:start="11:29" pos:end="11:32">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:9">r</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">req</name><operator pos:start="15:15" pos:end="15:15">.</operator><name pos:start="15:16" pos:end="15:26">io_canceled</name></name></expr>)</condition> <block pos:start="15:29" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:18">

        <expr_stmt pos:start="17:9" pos:end="17:42"><expr pos:start="17:9" pos:end="17:41"><call pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:32">scsi_req_cancel_complete</name><argument_list pos:start="17:33" pos:end="17:41">(<argument pos:start="17:34" pos:end="17:40"><expr pos:start="17:34" pos:end="17:40"><operator pos:start="17:34" pos:end="17:34">&amp;</operator><name pos:start="17:35" pos:end="17:40"><name pos:start="17:35" pos:end="17:35">r</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:40">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="19:9" pos:end="19:18">goto <name pos:start="19:14" pos:end="19:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">&lt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition> <block pos:start="25:18" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:9">

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:49">(<expr pos:start="27:13" pos:end="27:48"><call pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:32">scsi_handle_rw_error</name><argument_list pos:start="27:33" pos:end="27:48">(<argument pos:start="27:34" pos:end="27:34"><expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">r</name></expr></argument>, <argument pos:start="27:37" pos:end="27:40"><expr pos:start="27:37" pos:end="27:40"><operator pos:start="27:37" pos:end="27:37">-</operator><name pos:start="27:38" pos:end="27:40">ret</name></expr></argument>, <argument pos:start="27:43" pos:end="27:47"><expr pos:start="27:43" pos:end="27:47"><name pos:start="27:43" pos:end="27:47">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:51" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:22">

            <goto pos:start="29:13" pos:end="29:22">goto <name pos:start="29:18" pos:end="29:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:69">/* The request is used as the AIO opaque value, so add a ref.  */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><call pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:16">scsi_req_ref</name><argument_list pos:start="39:17" pos:end="39:25">(<argument pos:start="39:18" pos:end="39:24"><expr pos:start="39:18" pos:end="39:24"><operator pos:start="39:18" pos:end="39:18">&amp;</operator><name pos:start="39:19" pos:end="39:24"><name pos:start="39:19" pos:end="39:19">r</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:24">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="69:5"><if pos:start="43:5" pos:end="57:5">if <condition pos:start="43:8" pos:end="43:18">(<expr pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:9">r</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:14">req</name><operator pos:start="43:15" pos:end="43:15">.</operator><name pos:start="43:16" pos:end="43:17">sg</name></name></expr>)</condition> <block pos:start="43:20" pos:end="57:5">{<block_content pos:start="45:9" pos:end="55:61">

        <expr_stmt pos:start="45:9" pos:end="45:79"><expr pos:start="45:9" pos:end="45:78"><call pos:start="45:9" pos:end="45:78"><name pos:start="45:9" pos:end="45:22">dma_acct_start</name><argument_list pos:start="45:23" pos:end="45:78">(<argument pos:start="45:24" pos:end="45:39"><expr pos:start="45:24" pos:end="45:39"><name pos:start="45:24" pos:end="45:39"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:30">qdev</name><operator pos:start="45:31" pos:end="45:31">.</operator><name pos:start="45:32" pos:end="45:35">conf</name><operator pos:start="45:36" pos:end="45:36">.</operator><name pos:start="45:37" pos:end="45:39">blk</name></name></expr></argument>, <argument pos:start="45:42" pos:end="45:49"><expr pos:start="45:42" pos:end="45:49"><operator pos:start="45:42" pos:end="45:42">&amp;</operator><name pos:start="45:43" pos:end="45:49"><name pos:start="45:43" pos:end="45:43">r</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:49">acct</name></name></expr></argument>, <argument pos:start="45:52" pos:end="45:60"><expr pos:start="45:52" pos:end="45:60"><name pos:start="45:52" pos:end="45:60"><name pos:start="45:52" pos:end="45:52">r</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:57">req</name><operator pos:start="45:58" pos:end="45:58">.</operator><name pos:start="45:59" pos:end="45:60">sg</name></name></expr></argument>, <argument pos:start="45:63" pos:end="45:77"><expr pos:start="45:63" pos:end="45:77"><name pos:start="45:63" pos:end="45:77">BLOCK_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:40"><expr pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:9">r</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:14">req</name><operator pos:start="47:15" pos:end="47:15">.</operator><name pos:start="47:16" pos:end="47:20">resid</name></name> <operator pos:start="47:22" pos:end="47:23">-=</operator> <name pos:start="47:25" pos:end="47:39"><name pos:start="47:25" pos:end="47:25">r</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:30">req</name><operator pos:start="47:31" pos:end="47:31">.</operator><name pos:start="47:32" pos:end="47:33">sg</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:39">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="55:61"><expr pos:start="49:9" pos:end="55:60"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:9">r</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:14">req</name><operator pos:start="49:15" pos:end="49:15">.</operator><name pos:start="49:16" pos:end="49:20">aiocb</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <call pos:start="49:24" pos:end="55:60"><name pos:start="49:24" pos:end="49:33">dma_blk_io</name><argument_list pos:start="49:34" pos:end="55:60">(<argument pos:start="49:35" pos:end="49:71"><expr pos:start="49:35" pos:end="49:71"><call pos:start="49:35" pos:end="49:71"><name pos:start="49:35" pos:end="49:53">blk_get_aio_context</name><argument_list pos:start="49:54" pos:end="49:71">(<argument pos:start="49:55" pos:end="49:70"><expr pos:start="49:55" pos:end="49:70"><name pos:start="49:55" pos:end="49:70"><name pos:start="49:55" pos:end="49:55">s</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:61">qdev</name><operator pos:start="49:62" pos:end="49:62">.</operator><name pos:start="49:63" pos:end="49:66">conf</name><operator pos:start="49:67" pos:end="49:67">.</operator><name pos:start="49:68" pos:end="49:70">blk</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="51:35" pos:end="51:43"><expr pos:start="51:35" pos:end="51:43"><name pos:start="51:35" pos:end="51:43"><name pos:start="51:35" pos:end="51:35">r</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:40">req</name><operator pos:start="51:41" pos:end="51:41">.</operator><name pos:start="51:42" pos:end="51:43">sg</name></name></expr></argument>, <argument pos:start="51:46" pos:end="51:74"><expr pos:start="51:46" pos:end="51:74"><name pos:start="51:46" pos:end="51:54"><name pos:start="51:46" pos:end="51:46">r</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:54">sector</name></name> <operator pos:start="51:56" pos:end="51:57">&lt;&lt;</operator> <name pos:start="51:59" pos:end="51:74">BDRV_SECTOR_BITS</name></expr></argument>,

                                  <argument pos:start="53:35" pos:end="53:48"><expr pos:start="53:35" pos:end="53:48"><name pos:start="53:35" pos:end="53:48"><name pos:start="53:35" pos:end="53:37">sdc</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:48">dma_readv</name></name></expr></argument>, <argument pos:start="53:51" pos:end="53:51"><expr pos:start="53:51" pos:end="53:51"><name pos:start="53:51" pos:end="53:51">r</name></expr></argument>, <argument pos:start="53:54" pos:end="53:70"><expr pos:start="53:54" pos:end="53:70"><name pos:start="53:54" pos:end="53:70">scsi_dma_complete</name></expr></argument>, <argument pos:start="53:73" pos:end="53:73"><expr pos:start="53:73" pos:end="53:73"><name pos:start="53:73" pos:end="53:73">r</name></expr></argument>,

                                  <argument pos:start="55:35" pos:end="55:59"><expr pos:start="55:35" pos:end="55:59"><name pos:start="55:35" pos:end="55:59">DMA_DIRECTION_FROM_DEVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="69:5">else <block pos:start="57:12" pos:end="69:5">{<block_content pos:start="59:9" pos:end="67:64">

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><call pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:23">scsi_init_iovec</name><argument_list pos:start="59:24" pos:end="59:45">(<argument pos:start="59:25" pos:end="59:25"><expr pos:start="59:25" pos:end="59:25"><name pos:start="59:25" pos:end="59:25">r</name></expr></argument>, <argument pos:start="59:28" pos:end="59:44"><expr pos:start="59:28" pos:end="59:44"><name pos:start="59:28" pos:end="59:44">SCSI_DMA_BUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="63:56"><expr pos:start="61:9" pos:end="63:55"><call pos:start="61:9" pos:end="63:55"><name pos:start="61:9" pos:end="61:24">block_acct_start</name><argument_list pos:start="61:25" pos:end="63:55">(<argument pos:start="61:26" pos:end="61:56"><expr pos:start="61:26" pos:end="61:56"><call pos:start="61:26" pos:end="61:56"><name pos:start="61:26" pos:end="61:38">blk_get_stats</name><argument_list pos:start="61:39" pos:end="61:56">(<argument pos:start="61:40" pos:end="61:55"><expr pos:start="61:40" pos:end="61:55"><name pos:start="61:40" pos:end="61:55"><name pos:start="61:40" pos:end="61:40">s</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:46">qdev</name><operator pos:start="61:47" pos:end="61:47">.</operator><name pos:start="61:48" pos:end="61:51">conf</name><operator pos:start="61:52" pos:end="61:52">.</operator><name pos:start="61:53" pos:end="61:55">blk</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:59" pos:end="61:66"><expr pos:start="61:59" pos:end="61:66"><operator pos:start="61:59" pos:end="61:59">&amp;</operator><name pos:start="61:60" pos:end="61:66"><name pos:start="61:60" pos:end="61:60">r</name><operator pos:start="61:61" pos:end="61:62">-&gt;</operator><name pos:start="61:63" pos:end="61:66">acct</name></name></expr></argument>,

                         <argument pos:start="63:26" pos:end="63:37"><expr pos:start="63:26" pos:end="63:37"><name pos:start="63:26" pos:end="63:37"><name pos:start="63:26" pos:end="63:26">r</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:32">qiov</name><operator pos:start="63:33" pos:end="63:33">.</operator><name pos:start="63:34" pos:end="63:37">size</name></name></expr></argument>, <argument pos:start="63:40" pos:end="63:54"><expr pos:start="63:40" pos:end="63:54"><name pos:start="63:40" pos:end="63:54">BLOCK_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="67:64"><expr pos:start="65:9" pos:end="67:63"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:9">r</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:14">req</name><operator pos:start="65:15" pos:end="65:15">.</operator><name pos:start="65:16" pos:end="65:20">aiocb</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <call pos:start="65:24" pos:end="67:63"><name pos:start="65:24" pos:end="65:37"><name pos:start="65:24" pos:end="65:26">sdc</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:37">dma_readv</name></name><argument_list pos:start="65:38" pos:end="67:63">(<argument pos:start="65:39" pos:end="65:47"><expr pos:start="65:39" pos:end="65:47"><name pos:start="65:39" pos:end="65:47"><name pos:start="65:39" pos:end="65:39">r</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:47">sector</name></name></expr></argument>, <argument pos:start="65:50" pos:end="65:57"><expr pos:start="65:50" pos:end="65:57"><operator pos:start="65:50" pos:end="65:50">&amp;</operator><name pos:start="65:51" pos:end="65:57"><name pos:start="65:51" pos:end="65:51">r</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:57">qiov</name></name></expr></argument>,

                                      <argument pos:start="67:39" pos:end="67:56"><expr pos:start="67:39" pos:end="67:56"><name pos:start="67:39" pos:end="67:56">scsi_read_complete</name></expr></argument>, <argument pos:start="67:59" pos:end="67:59"><expr pos:start="67:59" pos:end="67:59"><name pos:start="67:59" pos:end="67:59">r</name></expr></argument>, <argument pos:start="67:62" pos:end="67:62"><expr pos:start="67:62" pos:end="67:62"><name pos:start="67:62" pos:end="67:62">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="73:1" pos:end="73:5"><name pos:start="73:1" pos:end="73:4">done</name>:</label>

    <expr_stmt pos:start="75:5" pos:end="75:28"><expr pos:start="75:5" pos:end="75:27"><call pos:start="75:5" pos:end="75:27"><name pos:start="75:5" pos:end="75:18">scsi_req_unref</name><argument_list pos:start="75:19" pos:end="75:27">(<argument pos:start="75:20" pos:end="75:26"><expr pos:start="75:20" pos:end="75:26"><operator pos:start="75:20" pos:end="75:20">&amp;</operator><name pos:start="75:21" pos:end="75:26"><name pos:start="75:21" pos:end="75:21">r</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:26">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
