<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2050.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">omap_pin_cfg_write</name><parameter_list pos:start="1:31" pos:end="3:61">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:68"><decl pos:start="1:46" pos:end="1:68"><type pos:start="1:46" pos:end="1:68"><name pos:start="1:46" pos:end="1:63">target_phys_addr_t</name></type> <name pos:start="1:65" pos:end="1:68">addr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:45"><decl pos:start="3:32" pos:end="3:45"><type pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:39">uint64_t</name></type> <name pos:start="3:41" pos:end="3:45">value</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:60"><decl pos:start="3:48" pos:end="3:60"><type pos:start="3:48" pos:end="3:60"><name pos:start="3:48" pos:end="3:55">unsigned</name></type> <name pos:start="3:57" pos:end="3:60">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="153:1">{<block_content pos:start="7:5" pos:end="151:5">

    <decl_stmt pos:start="7:5" pos:end="7:68"><decl pos:start="7:5" pos:end="7:67"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">omap_mpu_state_s</name></name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:30">s</name> <init pos:start="7:32" pos:end="7:67">= <expr pos:start="7:34" pos:end="7:67"><operator pos:start="7:34" pos:end="7:34">(</operator>struct <name pos:start="7:42" pos:end="7:57">omap_mpu_state_s</name> <operator pos:start="7:59" pos:end="7:59">*</operator><operator pos:start="7:60" pos:end="7:60">)</operator> <name pos:start="7:62" pos:end="7:67">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">diff</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">size</name> <operator pos:start="13:14" pos:end="13:15">!=</operator> <literal type="number" pos:start="13:17" pos:end="13:17">4</literal></expr>)</condition> <block pos:start="13:20" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:58">

        <return pos:start="15:9" pos:end="15:58">return <expr pos:start="15:16" pos:end="15:57"><call pos:start="15:16" pos:end="15:57"><name pos:start="15:16" pos:end="15:36">omap_badwidth_write32</name><argument_list pos:start="15:37" pos:end="15:57">(<argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:43">opaque</name></expr></argument>, <argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">addr</name></expr></argument>, <argument pos:start="15:52" pos:end="15:56"><expr pos:start="15:52" pos:end="15:56"><name pos:start="15:52" pos:end="15:56">value</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="21:5" pos:end="151:5">switch <condition pos:start="21:12" pos:end="21:17">(<expr pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:16">addr</name></expr>)</condition> <block pos:start="21:19" pos:end="151:5">{<block_content pos:start="23:5" pos:end="149:27">

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="23:17" pos:end="23:37">/* FUNC_MUX_CTRL_0 */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:12">diff</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:42"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:31">func_mux_ctrl</name><index pos:start="25:32" pos:end="25:42">[<expr pos:start="25:33" pos:end="25:41"><name pos:start="25:33" pos:end="25:36">addr</name> <operator pos:start="25:38" pos:end="25:39">&gt;&gt;</operator> <literal type="number" pos:start="25:41" pos:end="25:41">2</literal></expr>]</index></name> <operator pos:start="25:44" pos:end="25:44">^</operator> <name pos:start="25:46" pos:end="25:50">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:44"><expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:24">func_mux_ctrl</name><index pos:start="27:25" pos:end="27:35">[<expr pos:start="27:26" pos:end="27:34"><name pos:start="27:26" pos:end="27:29">addr</name> <operator pos:start="27:31" pos:end="27:32">&gt;&gt;</operator> <literal type="number" pos:start="27:34" pos:end="27:34">2</literal></expr>]</index></name> <operator pos:start="27:37" pos:end="27:37">=</operator> <name pos:start="27:39" pos:end="27:43">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:49"><expr pos:start="29:9" pos:end="29:48"><call pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:32">omap_pin_funcmux0_update</name><argument_list pos:start="29:33" pos:end="29:48">(<argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">s</name></expr></argument>, <argument pos:start="29:37" pos:end="29:40"><expr pos:start="29:37" pos:end="29:40"><name pos:start="29:37" pos:end="29:40">diff</name></expr></argument>, <argument pos:start="29:43" pos:end="29:47"><expr pos:start="29:43" pos:end="29:47"><name pos:start="29:43" pos:end="29:47">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>



    <case pos:start="35:5" pos:end="35:14">case <expr pos:start="35:10" pos:end="35:13"><literal type="number" pos:start="35:10" pos:end="35:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="35:17" pos:end="35:37">/* FUNC_MUX_CTRL_1 */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:12">diff</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:42"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:31">func_mux_ctrl</name><index pos:start="37:32" pos:end="37:42">[<expr pos:start="37:33" pos:end="37:41"><name pos:start="37:33" pos:end="37:36">addr</name> <operator pos:start="37:38" pos:end="37:39">&gt;&gt;</operator> <literal type="number" pos:start="37:41" pos:end="37:41">2</literal></expr>]</index></name> <operator pos:start="37:44" pos:end="37:44">^</operator> <name pos:start="37:46" pos:end="37:50">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:24">func_mux_ctrl</name><index pos:start="39:25" pos:end="39:35">[<expr pos:start="39:26" pos:end="39:34"><name pos:start="39:26" pos:end="39:29">addr</name> <operator pos:start="39:31" pos:end="39:32">&gt;&gt;</operator> <literal type="number" pos:start="39:34" pos:end="39:34">2</literal></expr>]</index></name> <operator pos:start="39:37" pos:end="39:37">=</operator> <name pos:start="39:39" pos:end="39:43">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:32">omap_pin_funcmux1_update</name><argument_list pos:start="41:33" pos:end="41:48">(<argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><name pos:start="41:34" pos:end="41:34">s</name></expr></argument>, <argument pos:start="41:37" pos:end="41:40"><expr pos:start="41:37" pos:end="41:40"><name pos:start="41:37" pos:end="41:40">diff</name></expr></argument>, <argument pos:start="41:43" pos:end="41:47"><expr pos:start="41:43" pos:end="41:47"><name pos:start="41:43" pos:end="41:47">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:15">return;</return>



    <case pos:start="47:5" pos:end="47:14">case <expr pos:start="47:10" pos:end="47:13"><literal type="number" pos:start="47:10" pos:end="47:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="47:17" pos:end="47:37">/* FUNC_MUX_CTRL_2 */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:44"><expr pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:24">func_mux_ctrl</name><index pos:start="49:25" pos:end="49:35">[<expr pos:start="49:26" pos:end="49:34"><name pos:start="49:26" pos:end="49:29">addr</name> <operator pos:start="49:31" pos:end="49:32">&gt;&gt;</operator> <literal type="number" pos:start="49:34" pos:end="49:34">2</literal></expr>]</index></name> <operator pos:start="49:37" pos:end="49:37">=</operator> <name pos:start="49:39" pos:end="49:43">value</name></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:15">return;</return>



    <case pos:start="55:5" pos:end="55:14">case <expr pos:start="55:10" pos:end="55:13"><literal type="number" pos:start="55:10" pos:end="55:13">0x0c</literal></expr>:</case>	<comment type="block" pos:start="55:17" pos:end="55:38">/* COMP_MODE_CTRL_0 */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:37"><expr pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:25">comp_mode_ctrl</name><index pos:start="57:26" pos:end="57:28">[<expr pos:start="57:27" pos:end="57:27"><literal type="number" pos:start="57:27" pos:end="57:27">0</literal></expr>]</index></name> <operator pos:start="57:30" pos:end="57:30">=</operator> <name pos:start="57:32" pos:end="57:36">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:21">compat1509</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <operator pos:start="59:25" pos:end="59:25">(</operator><name pos:start="59:26" pos:end="59:30">value</name> <operator pos:start="59:32" pos:end="59:33">!=</operator> <literal type="number" pos:start="59:35" pos:end="59:44">0x0000eaef</literal><operator pos:start="59:45" pos:end="59:45">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:61"><expr pos:start="61:9" pos:end="61:60"><call pos:start="61:9" pos:end="61:60"><name pos:start="61:9" pos:end="61:32">omap_pin_funcmux0_update</name><argument_list pos:start="61:33" pos:end="61:60">(<argument pos:start="61:34" pos:end="61:34"><expr pos:start="61:34" pos:end="61:34"><name pos:start="61:34" pos:end="61:34">s</name></expr></argument>, <argument pos:start="61:37" pos:end="61:38"><expr pos:start="61:37" pos:end="61:38"><operator pos:start="61:37" pos:end="61:37">~</operator><literal type="number" pos:start="61:38" pos:end="61:38">0</literal></expr></argument>, <argument pos:start="61:41" pos:end="61:59"><expr pos:start="61:41" pos:end="61:59"><name pos:start="61:41" pos:end="61:59"><name pos:start="61:41" pos:end="61:41">s</name><operator pos:start="61:42" pos:end="61:43">-&gt;</operator><name pos:start="61:44" pos:end="61:56">func_mux_ctrl</name><index pos:start="61:57" pos:end="61:59">[<expr pos:start="61:58" pos:end="61:58"><literal type="number" pos:start="61:58" pos:end="61:58">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:61"><expr pos:start="63:9" pos:end="63:60"><call pos:start="63:9" pos:end="63:60"><name pos:start="63:9" pos:end="63:32">omap_pin_funcmux1_update</name><argument_list pos:start="63:33" pos:end="63:60">(<argument pos:start="63:34" pos:end="63:34"><expr pos:start="63:34" pos:end="63:34"><name pos:start="63:34" pos:end="63:34">s</name></expr></argument>, <argument pos:start="63:37" pos:end="63:38"><expr pos:start="63:37" pos:end="63:38"><operator pos:start="63:37" pos:end="63:37">~</operator><literal type="number" pos:start="63:38" pos:end="63:38">0</literal></expr></argument>, <argument pos:start="63:41" pos:end="63:59"><expr pos:start="63:41" pos:end="63:59"><name pos:start="63:41" pos:end="63:59"><name pos:start="63:41" pos:end="63:41">s</name><operator pos:start="63:42" pos:end="63:43">-&gt;</operator><name pos:start="63:44" pos:end="63:56">func_mux_ctrl</name><index pos:start="63:57" pos:end="63:59">[<expr pos:start="63:58" pos:end="63:58"><literal type="number" pos:start="63:58" pos:end="63:58">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:15">return;</return>



    <case pos:start="69:5" pos:end="69:14">case <expr pos:start="69:10" pos:end="69:13"><literal type="number" pos:start="69:10" pos:end="69:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="69:17" pos:end="69:37">/* FUNC_MUX_CTRL_3 */</comment>

    <case pos:start="71:5" pos:end="71:14">case <expr pos:start="71:10" pos:end="71:13"><literal type="number" pos:start="71:10" pos:end="71:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="71:17" pos:end="71:37">/* FUNC_MUX_CTRL_4 */</comment>

    <case pos:start="73:5" pos:end="73:14">case <expr pos:start="73:10" pos:end="73:13"><literal type="number" pos:start="73:10" pos:end="73:13">0x18</literal></expr>:</case>	<comment type="block" pos:start="73:17" pos:end="73:37">/* FUNC_MUX_CTRL_5 */</comment>

    <case pos:start="75:5" pos:end="75:14">case <expr pos:start="75:10" pos:end="75:13"><literal type="number" pos:start="75:10" pos:end="75:13">0x1c</literal></expr>:</case>	<comment type="block" pos:start="75:17" pos:end="75:37">/* FUNC_MUX_CTRL_6 */</comment>

    <case pos:start="77:5" pos:end="77:14">case <expr pos:start="77:10" pos:end="77:13"><literal type="number" pos:start="77:10" pos:end="77:13">0x20</literal></expr>:</case>	<comment type="block" pos:start="77:17" pos:end="77:37">/* FUNC_MUX_CTRL_7 */</comment>

    <case pos:start="79:5" pos:end="79:14">case <expr pos:start="79:10" pos:end="79:13"><literal type="number" pos:start="79:10" pos:end="79:13">0x24</literal></expr>:</case>	<comment type="block" pos:start="79:17" pos:end="79:37">/* FUNC_MUX_CTRL_8 */</comment>

    <case pos:start="81:5" pos:end="81:14">case <expr pos:start="81:10" pos:end="81:13"><literal type="number" pos:start="81:10" pos:end="81:13">0x28</literal></expr>:</case>	<comment type="block" pos:start="81:17" pos:end="81:37">/* FUNC_MUX_CTRL_9 */</comment>

    <case pos:start="83:5" pos:end="83:14">case <expr pos:start="83:10" pos:end="83:13"><literal type="number" pos:start="83:10" pos:end="83:13">0x2c</literal></expr>:</case>	<comment type="block" pos:start="83:17" pos:end="83:37">/* FUNC_MUX_CTRL_A */</comment>

    <case pos:start="85:5" pos:end="85:14">case <expr pos:start="85:10" pos:end="85:13"><literal type="number" pos:start="85:10" pos:end="85:13">0x30</literal></expr>:</case>	<comment type="block" pos:start="85:17" pos:end="85:37">/* FUNC_MUX_CTRL_B */</comment>

    <case pos:start="87:5" pos:end="87:14">case <expr pos:start="87:10" pos:end="87:13"><literal type="number" pos:start="87:10" pos:end="87:13">0x34</literal></expr>:</case>	<comment type="block" pos:start="87:17" pos:end="87:37">/* FUNC_MUX_CTRL_C */</comment>

    <case pos:start="89:5" pos:end="89:14">case <expr pos:start="89:10" pos:end="89:13"><literal type="number" pos:start="89:10" pos:end="89:13">0x38</literal></expr>:</case>	<comment type="block" pos:start="89:17" pos:end="89:37">/* FUNC_MUX_CTRL_D */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:50"><expr pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:41"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:24">func_mux_ctrl</name><index pos:start="91:25" pos:end="91:41">[<expr pos:start="91:26" pos:end="91:40"><operator pos:start="91:26" pos:end="91:26">(</operator><name pos:start="91:27" pos:end="91:30">addr</name> <operator pos:start="91:32" pos:end="91:33">&gt;&gt;</operator> <literal type="number" pos:start="91:35" pos:end="91:35">2</literal><operator pos:start="91:36" pos:end="91:36">)</operator> <operator pos:start="91:38" pos:end="91:38">-</operator> <literal type="number" pos:start="91:40" pos:end="91:40">1</literal></expr>]</index></name> <operator pos:start="91:43" pos:end="91:43">=</operator> <name pos:start="91:45" pos:end="91:49">value</name></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:15">return;</return>



    <case pos:start="97:5" pos:end="97:14">case <expr pos:start="97:10" pos:end="97:13"><literal type="number" pos:start="97:10" pos:end="97:13">0x40</literal></expr>:</case>	<comment type="block" pos:start="97:17" pos:end="97:37">/* PULL_DWN_CTRL_0 */</comment>

    <case pos:start="99:5" pos:end="99:14">case <expr pos:start="99:10" pos:end="99:13"><literal type="number" pos:start="99:10" pos:end="99:13">0x44</literal></expr>:</case>	<comment type="block" pos:start="99:17" pos:end="99:37">/* PULL_DWN_CTRL_1 */</comment>

    <case pos:start="101:5" pos:end="101:14">case <expr pos:start="101:10" pos:end="101:13"><literal type="number" pos:start="101:10" pos:end="101:13">0x48</literal></expr>:</case>	<comment type="block" pos:start="101:17" pos:end="101:37">/* PULL_DWN_CTRL_2 */</comment>

    <case pos:start="103:5" pos:end="103:14">case <expr pos:start="103:10" pos:end="103:13"><literal type="number" pos:start="103:10" pos:end="103:13">0x4c</literal></expr>:</case>	<comment type="block" pos:start="103:17" pos:end="103:37">/* PULL_DWN_CTRL_3 */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:52"><expr pos:start="105:9" pos:end="105:51"><name pos:start="105:9" pos:end="105:43"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:24">pull_dwn_ctrl</name><index pos:start="105:25" pos:end="105:43">[<expr pos:start="105:26" pos:end="105:42"><operator pos:start="105:26" pos:end="105:26">(</operator><name pos:start="105:27" pos:end="105:30">addr</name> <operator pos:start="105:32" pos:end="105:32">&amp;</operator> <literal type="number" pos:start="105:34" pos:end="105:36">0xf</literal><operator pos:start="105:37" pos:end="105:37">)</operator> <operator pos:start="105:39" pos:end="105:40">&gt;&gt;</operator> <literal type="number" pos:start="105:42" pos:end="105:42">2</literal></expr>]</index></name> <operator pos:start="105:45" pos:end="105:45">=</operator> <name pos:start="105:47" pos:end="105:51">value</name></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:15">return;</return>



    <case pos:start="111:5" pos:end="111:14">case <expr pos:start="111:10" pos:end="111:13"><literal type="number" pos:start="111:10" pos:end="111:13">0x50</literal></expr>:</case>	<comment type="block" pos:start="111:17" pos:end="111:37">/* GATE_INH_CTRL_0 */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:36"><expr pos:start="113:9" pos:end="113:35"><name pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:24">gate_inh_ctrl</name><index pos:start="113:25" pos:end="113:27">[<expr pos:start="113:26" pos:end="113:26"><literal type="number" pos:start="113:26" pos:end="113:26">0</literal></expr>]</index></name> <operator pos:start="113:29" pos:end="113:29">=</operator> <name pos:start="113:31" pos:end="113:35">value</name></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:15">return;</return>



    <case pos:start="119:5" pos:end="119:14">case <expr pos:start="119:10" pos:end="119:13"><literal type="number" pos:start="119:10" pos:end="119:13">0x60</literal></expr>:</case>	<comment type="block" pos:start="119:17" pos:end="119:36">/* VOLTAGE_CTRL_0 */</comment>

        <expr_stmt pos:start="121:9" pos:end="121:35"><expr pos:start="121:9" pos:end="121:34"><name pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:23">voltage_ctrl</name><index pos:start="121:24" pos:end="121:26">[<expr pos:start="121:25" pos:end="121:25"><literal type="number" pos:start="121:25" pos:end="121:25">0</literal></expr>]</index></name> <operator pos:start="121:28" pos:end="121:28">=</operator> <name pos:start="121:30" pos:end="121:34">value</name></expr>;</expr_stmt>

        <return pos:start="123:9" pos:end="123:15">return;</return>



    <case pos:start="127:5" pos:end="127:14">case <expr pos:start="127:10" pos:end="127:13"><literal type="number" pos:start="127:10" pos:end="127:13">0x70</literal></expr>:</case>	<comment type="block" pos:start="127:17" pos:end="127:37">/* TEST_DBG_CTRL_0 */</comment>

        <expr_stmt pos:start="129:9" pos:end="129:36"><expr pos:start="129:9" pos:end="129:35"><name pos:start="129:9" pos:end="129:27"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:24">test_dbg_ctrl</name><index pos:start="129:25" pos:end="129:27">[<expr pos:start="129:26" pos:end="129:26"><literal type="number" pos:start="129:26" pos:end="129:26">0</literal></expr>]</index></name> <operator pos:start="129:29" pos:end="129:29">=</operator> <name pos:start="129:31" pos:end="129:35">value</name></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:15">return;</return>



    <case pos:start="135:5" pos:end="135:14">case <expr pos:start="135:10" pos:end="135:13"><literal type="number" pos:start="135:10" pos:end="135:13">0x80</literal></expr>:</case>	<comment type="block" pos:start="135:17" pos:end="135:37">/* MOD_CONF_CTRL_0 */</comment>

        <expr_stmt pos:start="137:9" pos:end="137:43"><expr pos:start="137:9" pos:end="137:42"><name pos:start="137:9" pos:end="137:12">diff</name> <operator pos:start="137:14" pos:end="137:14">=</operator> <name pos:start="137:16" pos:end="137:34"><name pos:start="137:16" pos:end="137:16">s</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:31">mod_conf_ctrl</name><index pos:start="137:32" pos:end="137:34">[<expr pos:start="137:33" pos:end="137:33"><literal type="number" pos:start="137:33" pos:end="137:33">0</literal></expr>]</index></name> <operator pos:start="137:36" pos:end="137:36">^</operator> <name pos:start="137:38" pos:end="137:42">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:36"><expr pos:start="139:9" pos:end="139:35"><name pos:start="139:9" pos:end="139:27"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:24">mod_conf_ctrl</name><index pos:start="139:25" pos:end="139:27">[<expr pos:start="139:26" pos:end="139:26"><literal type="number" pos:start="139:26" pos:end="139:26">0</literal></expr>]</index></name> <operator pos:start="139:29" pos:end="139:29">=</operator> <name pos:start="139:31" pos:end="139:35">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:49"><expr pos:start="141:9" pos:end="141:48"><call pos:start="141:9" pos:end="141:48"><name pos:start="141:9" pos:end="141:32">omap_pin_modconf1_update</name><argument_list pos:start="141:33" pos:end="141:48">(<argument pos:start="141:34" pos:end="141:34"><expr pos:start="141:34" pos:end="141:34"><name pos:start="141:34" pos:end="141:34">s</name></expr></argument>, <argument pos:start="141:37" pos:end="141:40"><expr pos:start="141:37" pos:end="141:40"><name pos:start="141:37" pos:end="141:40">diff</name></expr></argument>, <argument pos:start="141:43" pos:end="141:47"><expr pos:start="141:43" pos:end="141:47"><name pos:start="141:43" pos:end="141:47">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="143:9" pos:end="143:15">return;</return>



    <default pos:start="147:5" pos:end="147:12">default:</default>

        <expr_stmt pos:start="149:9" pos:end="149:27"><expr pos:start="149:9" pos:end="149:26"><call pos:start="149:9" pos:end="149:26"><name pos:start="149:9" pos:end="149:20">OMAP_BAD_REG</name><argument_list pos:start="149:21" pos:end="149:26">(<argument pos:start="149:22" pos:end="149:25"><expr pos:start="149:22" pos:end="149:25"><name pos:start="149:22" pos:end="149:25">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
