<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8384.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">invalidate_tlb</name> <parameter_list pos:start="1:28" pos:end="1:51">(<parameter pos:start="1:29" pos:end="1:35"><decl pos:start="1:29" pos:end="1:35"><type pos:start="1:29" pos:end="1:35"><name pos:start="1:29" pos:end="1:31">int</name></type> <name pos:start="1:33" pos:end="1:35">idx</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:50">use_extra</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">tlb_t</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">tlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:21">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:16">ASID</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:8">ASID</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <name pos:start="13:12" pos:end="13:27"><name pos:start="13:12" pos:end="13:14">env</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:27">CP0_EntryHi</name></name> <operator pos:start="13:29" pos:end="13:29">&amp;</operator> <literal type="number" pos:start="13:31" pos:end="13:34">0xFF</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:7">tlb</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <operator pos:start="17:11" pos:end="17:11">&amp;</operator><name pos:start="17:12" pos:end="17:24"><name pos:start="17:12" pos:end="17:14">env</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:19">tlb</name><index pos:start="17:20" pos:end="17:24">[<expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:23">idx</name></expr>]</index></name></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="21:37">/* The qemu TLB is flushed then the ASID changes, so no need to

       flush these entries again.  */</comment>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:41">(<expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:11">tlb</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:14">G</name></name> <operator pos:start="23:16" pos:end="23:17">==</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal> <operator pos:start="23:21" pos:end="23:22">&amp;&amp;</operator> <name pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:26">tlb</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:32">ASID</name></name> <operator pos:start="23:34" pos:end="23:35">!=</operator> <name pos:start="23:37" pos:end="23:40">ASID</name></expr>)</condition> <block pos:start="23:43" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="45:5">if <condition pos:start="31:8" pos:end="31:52">(<expr pos:start="31:9" pos:end="31:51"><name pos:start="31:9" pos:end="31:17">use_extra</name> <operator pos:start="31:19" pos:end="31:20">&amp;&amp;</operator> <name pos:start="31:22" pos:end="31:36"><name pos:start="31:22" pos:end="31:24">env</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:36">tlb_in_use</name></name> <operator pos:start="31:38" pos:end="31:38">&lt;</operator> <name pos:start="31:40" pos:end="31:51">MIPS_TLB_MAX</name></expr>)</condition> <block pos:start="31:54" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:15">

        <comment type="block" pos:start="33:9" pos:end="37:36">/* For tlbwr, we can shadow the discarded entry into

	   a new (fake) TLB entry, as long as the guest can not

	   tell that it's there.  */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:11">env</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:16">tlb</name><index pos:start="39:17" pos:end="39:33">[<expr pos:start="39:18" pos:end="39:32"><name pos:start="39:18" pos:end="39:32"><name pos:start="39:18" pos:end="39:20">env</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:32">tlb_in_use</name></name></expr>]</index></name> <operator pos:start="39:35" pos:end="39:35">=</operator> <operator pos:start="39:37" pos:end="39:37">*</operator><name pos:start="39:38" pos:end="39:40">tlb</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:11">env</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:23">tlb_in_use</name></name><operator pos:start="41:24" pos:end="41:25">++</operator></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="63:5"><if pos:start="49:5" pos:end="63:5">if <condition pos:start="49:8" pos:end="49:16">(<expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">tlb</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:15">V0</name></name></expr>)</condition> <block pos:start="49:18" pos:end="63:5">{<block_content pos:start="51:9" pos:end="61:9">

        <expr_stmt pos:start="51:9" pos:end="51:67"><expr pos:start="51:9" pos:end="51:66"><call pos:start="51:9" pos:end="51:66"><name pos:start="51:9" pos:end="51:32">tb_invalidate_page_range</name><argument_list pos:start="51:33" pos:end="51:66">(<argument pos:start="51:34" pos:end="51:44"><expr pos:start="51:34" pos:end="51:44"><name pos:start="51:34" pos:end="51:44"><name pos:start="51:34" pos:end="51:36">tlb</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:41">PFN</name><index pos:start="51:42" pos:end="51:44">[<expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:47" pos:end="51:65"><expr pos:start="51:47" pos:end="51:65"><name pos:start="51:47" pos:end="51:54"><name pos:start="51:47" pos:end="51:49">tlb</name><operator pos:start="51:50" pos:end="51:51">-&gt;</operator><name pos:start="51:52" pos:end="51:54">end</name></name> <operator pos:start="51:56" pos:end="51:56">-</operator> <name pos:start="51:58" pos:end="51:65"><name pos:start="51:58" pos:end="51:60">tlb</name><operator pos:start="51:61" pos:end="51:62">-&gt;</operator><name pos:start="51:63" pos:end="51:65">VPN</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:24"><expr pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:12">addr</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:18">tlb</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:23">VPN</name></name></expr>;</expr_stmt>

        <while pos:start="55:9" pos:end="61:9">while <condition pos:start="55:15" pos:end="55:31">(<expr pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:19">addr</name> <operator pos:start="55:21" pos:end="55:21">&lt;</operator> <name pos:start="55:23" pos:end="55:30"><name pos:start="55:23" pos:end="55:25">tlb</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:30">end</name></name></expr>)</condition> <block pos:start="55:33" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:37">

            <expr_stmt pos:start="57:13" pos:end="57:39"><expr pos:start="57:13" pos:end="57:38"><call pos:start="57:13" pos:end="57:38"><name pos:start="57:13" pos:end="57:26">tlb_flush_page</name> <argument_list pos:start="57:28" pos:end="57:38">(<argument pos:start="57:29" pos:end="57:31"><expr pos:start="57:29" pos:end="57:31"><name pos:start="57:29" pos:end="57:31">env</name></expr></argument>, <argument pos:start="57:34" pos:end="57:37"><expr pos:start="57:34" pos:end="57:37"><name pos:start="57:34" pos:end="57:37">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:37"><expr pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:16">addr</name> <operator pos:start="59:18" pos:end="59:19">+=</operator> <name pos:start="59:21" pos:end="59:36">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="79:5"><if pos:start="65:5" pos:end="79:5">if <condition pos:start="65:8" pos:end="65:16">(<expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:11">tlb</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:15">V1</name></name></expr>)</condition> <block pos:start="65:18" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:9">

        <expr_stmt pos:start="67:9" pos:end="67:68"><expr pos:start="67:9" pos:end="67:67"><call pos:start="67:9" pos:end="67:67"><name pos:start="67:9" pos:end="67:32">tb_invalidate_page_range</name><argument_list pos:start="67:33" pos:end="67:67">(<argument pos:start="67:34" pos:end="67:44"><expr pos:start="67:34" pos:end="67:44"><name pos:start="67:34" pos:end="67:44"><name pos:start="67:34" pos:end="67:36">tlb</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:41">PFN</name><index pos:start="67:42" pos:end="67:44">[<expr pos:start="67:43" pos:end="67:43"><literal type="number" pos:start="67:43" pos:end="67:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:47" pos:end="67:66"><expr pos:start="67:47" pos:end="67:66"><name pos:start="67:47" pos:end="67:55"><name pos:start="67:47" pos:end="67:49">tlb</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:55">end2</name></name> <operator pos:start="67:57" pos:end="67:57">-</operator> <name pos:start="67:59" pos:end="67:66"><name pos:start="67:59" pos:end="67:61">tlb</name><operator pos:start="67:62" pos:end="67:63">-&gt;</operator><name pos:start="67:64" pos:end="67:66">end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:12">addr</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <name pos:start="69:16" pos:end="69:23"><name pos:start="69:16" pos:end="69:18">tlb</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:23">end</name></name></expr>;</expr_stmt>

        <while pos:start="71:9" pos:end="77:9">while <condition pos:start="71:15" pos:end="71:32">(<expr pos:start="71:16" pos:end="71:31"><name pos:start="71:16" pos:end="71:19">addr</name> <operator pos:start="71:21" pos:end="71:21">&lt;</operator> <name pos:start="71:23" pos:end="71:31"><name pos:start="71:23" pos:end="71:25">tlb</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:31">end2</name></name></expr>)</condition> <block pos:start="71:34" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:37">

            <expr_stmt pos:start="73:13" pos:end="73:39"><expr pos:start="73:13" pos:end="73:38"><call pos:start="73:13" pos:end="73:38"><name pos:start="73:13" pos:end="73:26">tlb_flush_page</name> <argument_list pos:start="73:28" pos:end="73:38">(<argument pos:start="73:29" pos:end="73:31"><expr pos:start="73:29" pos:end="73:31"><name pos:start="73:29" pos:end="73:31">env</name></expr></argument>, <argument pos:start="73:34" pos:end="73:37"><expr pos:start="73:34" pos:end="73:37"><name pos:start="73:34" pos:end="73:37">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:37"><expr pos:start="75:13" pos:end="75:36"><name pos:start="75:13" pos:end="75:16">addr</name> <operator pos:start="75:18" pos:end="75:19">+=</operator> <name pos:start="75:21" pos:end="75:36">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
