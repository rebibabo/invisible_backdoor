<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2799.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">test_qemu_strtoull_hex</name><parameter_list pos:start="1:35" pos:end="1:40">(<parameter pos:start="1:36" pos:end="1:39"><decl pos:start="1:36" pos:end="1:39"><type pos:start="1:36" pos:end="1:39"><name pos:start="1:36" pos:end="1:39">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:42">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">str</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><literal type="string" pos:start="5:23" pos:end="5:28">"0123"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:10">f</name> <init pos:start="7:12" pos:end="7:16">= <expr pos:start="7:14" pos:end="7:16"><literal type="char" pos:start="7:14" pos:end="7:16">'X'</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:22">endptr</name> <init pos:start="9:24" pos:end="9:27">= <expr pos:start="9:26" pos:end="9:27"><operator pos:start="9:26" pos:end="9:26">&amp;</operator><name pos:start="9:27" pos:end="9:27">f</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:16">res</name> <init pos:start="11:18" pos:end="11:22">= <expr pos:start="11:20" pos:end="11:22"><literal type="number" pos:start="11:20" pos:end="11:22">999</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">err</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:7">err</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:47"><name pos:start="17:11" pos:end="17:23">qemu_strtoull</name><argument_list pos:start="17:24" pos:end="17:47">(<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">str</name></expr></argument>, <argument pos:start="17:30" pos:end="17:36"><expr pos:start="17:30" pos:end="17:36"><operator pos:start="17:30" pos:end="17:30">&amp;</operator><name pos:start="17:31" pos:end="17:36">endptr</name></expr></argument>, <argument pos:start="17:39" pos:end="17:40"><expr pos:start="17:39" pos:end="17:40"><literal type="number" pos:start="17:39" pos:end="17:40">16</literal></expr></argument>, <argument pos:start="17:43" pos:end="17:46"><expr pos:start="17:43" pos:end="17:46"><operator pos:start="17:43" pos:end="17:43">&amp;</operator><name pos:start="17:44" pos:end="17:46">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><call pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:19">g_assert_cmpint</name><argument_list pos:start="21:20" pos:end="21:31">(<argument pos:start="21:21" pos:end="21:23"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:23">err</name></expr></argument>, <argument pos:start="21:26" pos:end="21:27"><expr pos:start="21:26" pos:end="21:27"><operator pos:start="21:26" pos:end="21:27">==</operator></expr></argument>, <argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:19">g_assert_cmpint</name><argument_list pos:start="23:20" pos:end="23:35">(<argument pos:start="23:21" pos:end="23:23"><expr pos:start="23:21" pos:end="23:23"><name pos:start="23:21" pos:end="23:23">res</name></expr></argument>, <argument pos:start="23:26" pos:end="23:27"><expr pos:start="23:26" pos:end="23:27"><operator pos:start="23:26" pos:end="23:27">==</operator></expr></argument>, <argument pos:start="23:30" pos:end="23:34"><expr pos:start="23:30" pos:end="23:34"><literal type="number" pos:start="23:30" pos:end="23:34">0x123</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><call pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:12">g_assert</name><argument_list pos:start="25:13" pos:end="25:41">(<argument pos:start="25:14" pos:end="25:40"><expr pos:start="25:14" pos:end="25:40"><name pos:start="25:14" pos:end="25:19">endptr</name> <operator pos:start="25:21" pos:end="25:22">==</operator> <name pos:start="25:24" pos:end="25:26">str</name> <operator pos:start="25:28" pos:end="25:28">+</operator> <call pos:start="25:30" pos:end="25:40"><name pos:start="25:30" pos:end="25:35">strlen</name><argument_list pos:start="25:36" pos:end="25:40">(<argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:39">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:7">str</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <literal type="string" pos:start="29:11" pos:end="29:17">"0x123"</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:16"><expr pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:10">endptr</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <operator pos:start="31:14" pos:end="31:14">&amp;</operator><name pos:start="31:15" pos:end="31:15">f</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:14"><expr pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:7">res</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <literal type="number" pos:start="33:11" pos:end="33:13">999</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:7">err</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:46"><name pos:start="35:11" pos:end="35:23">qemu_strtoull</name><argument_list pos:start="35:24" pos:end="35:46">(<argument pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:27">str</name></expr></argument>, <argument pos:start="35:30" pos:end="35:36"><expr pos:start="35:30" pos:end="35:36"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:36">endptr</name></expr></argument>, <argument pos:start="35:39" pos:end="35:39"><expr pos:start="35:39" pos:end="35:39"><literal type="number" pos:start="35:39" pos:end="35:39">0</literal></expr></argument>, <argument pos:start="35:42" pos:end="35:45"><expr pos:start="35:42" pos:end="35:45"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:45">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><call pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:19">g_assert_cmpint</name><argument_list pos:start="39:20" pos:end="39:31">(<argument pos:start="39:21" pos:end="39:23"><expr pos:start="39:21" pos:end="39:23"><name pos:start="39:21" pos:end="39:23">err</name></expr></argument>, <argument pos:start="39:26" pos:end="39:27"><expr pos:start="39:26" pos:end="39:27"><operator pos:start="39:26" pos:end="39:27">==</operator></expr></argument>, <argument pos:start="39:30" pos:end="39:30"><expr pos:start="39:30" pos:end="39:30"><literal type="number" pos:start="39:30" pos:end="39:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><call pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:19">g_assert_cmpint</name><argument_list pos:start="41:20" pos:end="41:35">(<argument pos:start="41:21" pos:end="41:23"><expr pos:start="41:21" pos:end="41:23"><name pos:start="41:21" pos:end="41:23">res</name></expr></argument>, <argument pos:start="41:26" pos:end="41:27"><expr pos:start="41:26" pos:end="41:27"><operator pos:start="41:26" pos:end="41:27">==</operator></expr></argument>, <argument pos:start="41:30" pos:end="41:34"><expr pos:start="41:30" pos:end="41:34"><literal type="number" pos:start="41:30" pos:end="41:34">0x123</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><call pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:12">g_assert</name><argument_list pos:start="43:13" pos:end="43:41">(<argument pos:start="43:14" pos:end="43:40"><expr pos:start="43:14" pos:end="43:40"><name pos:start="43:14" pos:end="43:19">endptr</name> <operator pos:start="43:21" pos:end="43:22">==</operator> <name pos:start="43:24" pos:end="43:26">str</name> <operator pos:start="43:28" pos:end="43:28">+</operator> <call pos:start="43:30" pos:end="43:40"><name pos:start="43:30" pos:end="43:35">strlen</name><argument_list pos:start="43:36" pos:end="43:40">(<argument pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:39">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
