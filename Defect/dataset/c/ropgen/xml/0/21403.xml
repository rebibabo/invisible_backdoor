<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21403.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">prepare_sdp_description</name><parameter_list pos:start="1:35" pos:end="3:56">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:43">FFStream</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">stream</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:70"><decl pos:start="1:54" pos:end="1:70"><type pos:start="1:54" pos:end="1:70"><name pos:start="1:54" pos:end="1:60">uint8_t</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier><modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:70">pbuffer</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:55"><decl pos:start="3:36" pos:end="3:55"><type pos:start="3:36" pos:end="3:55"><name pos:start="3:36" pos:end="3:49"><name pos:start="3:36" pos:end="3:41">struct</name> <name pos:start="3:43" pos:end="3:49">in_addr</name></name></type> <name pos:start="3:51" pos:end="3:55">my_ip</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:28">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">avc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">avs</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:68"><decl pos:start="11:5" pos:end="11:67"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVOutputFormat</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:30">rtp_format</name> <init pos:start="11:32" pos:end="11:67">= <expr pos:start="11:34" pos:end="11:67"><call pos:start="11:34" pos:end="11:67"><name pos:start="11:34" pos:end="11:48">av_guess_format</name><argument_list pos:start="11:49" pos:end="11:67">(<argument pos:start="11:50" pos:end="11:54"><expr pos:start="11:50" pos:end="11:54"><literal type="string" pos:start="11:50" pos:end="11:54">"rtp"</literal></expr></argument>, <argument pos:start="11:57" pos:end="11:60"><expr pos:start="11:57" pos:end="11:60"><name pos:start="11:57" pos:end="11:60">NULL</name></expr></argument>, <argument pos:start="11:63" pos:end="11:66"><expr pos:start="11:63" pos:end="11:66"><name pos:start="11:63" pos:end="11:66">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:79"><decl pos:start="13:5" pos:end="13:78"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21">AVDictionaryEntry</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:28">entry</name> <init pos:start="13:30" pos:end="13:78">= <expr pos:start="13:32" pos:end="13:78"><call pos:start="13:32" pos:end="13:78"><name pos:start="13:32" pos:end="13:42">av_dict_get</name><argument_list pos:start="13:43" pos:end="13:78">(<argument pos:start="13:44" pos:end="13:59"><expr pos:start="13:44" pos:end="13:59"><name pos:start="13:44" pos:end="13:59"><name pos:start="13:44" pos:end="13:49">stream</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:59">metadata</name></name></expr></argument>, <argument pos:start="13:62" pos:end="13:68"><expr pos:start="13:62" pos:end="13:68"><literal type="string" pos:start="13:62" pos:end="13:68">"title"</literal></expr></argument>, <argument pos:start="13:71" pos:end="13:74"><expr pos:start="13:71" pos:end="13:74"><name pos:start="13:71" pos:end="13:74">NULL</name></expr></argument>, <argument pos:start="13:77" pos:end="13:77"><expr pos:start="13:77" pos:end="13:77"><literal type="number" pos:start="13:77" pos:end="13:77">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:7">avc</name> <operator pos:start="19:9" pos:end="19:9">=</operator>  <call pos:start="19:12" pos:end="19:35"><name pos:start="19:12" pos:end="19:33">avformat_alloc_context</name><argument_list pos:start="19:34" pos:end="19:35">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:11">avc</name> <operator pos:start="21:13" pos:end="21:14">==</operator> <name pos:start="21:16" pos:end="21:19">NULL</name> <operator pos:start="21:21" pos:end="21:22">||</operator> <operator pos:start="21:24" pos:end="21:24">!</operator><name pos:start="21:25" pos:end="21:34">rtp_format</name></expr>)</condition> <block pos:start="21:37" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:7">avc</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:16">oformat</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:29">rtp_format</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:54"><expr pos:start="29:5" pos:end="31:53"><call pos:start="29:5" pos:end="31:53"><name pos:start="29:5" pos:end="29:15">av_dict_set</name><argument_list pos:start="29:16" pos:end="31:53">(<argument pos:start="29:17" pos:end="29:30"><expr pos:start="29:17" pos:end="29:30"><operator pos:start="29:17" pos:end="29:17">&amp;</operator><name pos:start="29:18" pos:end="29:30"><name pos:start="29:18" pos:end="29:20">avc</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:30">metadata</name></name></expr></argument>, <argument pos:start="29:33" pos:end="29:39"><expr pos:start="29:33" pos:end="29:39"><literal type="string" pos:start="29:33" pos:end="29:39">"title"</literal></expr></argument>,

                <argument pos:start="31:17" pos:end="31:49"><expr pos:start="31:17" pos:end="31:49"><ternary pos:start="31:17" pos:end="31:49"><condition pos:start="31:17" pos:end="31:23"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:21">entry</name></expr> ?</condition><then pos:start="31:25" pos:end="31:36"> <expr pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:29">entry</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:36">value</name></name></expr> </then><else pos:start="31:38" pos:end="31:49">: <expr pos:start="31:40" pos:end="31:49"><literal type="string" pos:start="31:40" pos:end="31:49">"No Title"</literal></expr></else></ternary></expr></argument>, <argument pos:start="31:52" pos:end="31:52"><expr pos:start="31:52" pos:end="31:52"><literal type="number" pos:start="31:52" pos:end="31:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:7">avc</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:19">nb_streams</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:40"><name pos:start="33:23" pos:end="33:28">stream</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:40">nb_streams</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:29">(<expr pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:14">stream</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:28">is_multicast</name></name></expr>)</condition> <block pos:start="35:31" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:64">

        <expr_stmt pos:start="37:9" pos:end="41:64"><expr pos:start="37:9" pos:end="41:63"><call pos:start="37:9" pos:end="41:63"><name pos:start="37:9" pos:end="37:16">snprintf</name><argument_list pos:start="37:17" pos:end="41:63">(<argument pos:start="37:18" pos:end="37:30"><expr pos:start="37:18" pos:end="37:30"><name pos:start="37:18" pos:end="37:30"><name pos:start="37:18" pos:end="37:20">avc</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:30">filename</name></name></expr></argument>, <argument pos:start="37:33" pos:end="37:36"><expr pos:start="37:33" pos:end="37:36"><literal type="number" pos:start="37:33" pos:end="37:36">1024</literal></expr></argument>, <argument pos:start="37:39" pos:end="37:70"><expr pos:start="37:39" pos:end="37:70"><literal type="string" pos:start="37:39" pos:end="37:70">"rtp://%s:%d?multicast=1?ttl=%d"</literal></expr></argument>,

                 <argument pos:start="39:18" pos:end="39:48"><expr pos:start="39:18" pos:end="39:48"><call pos:start="39:18" pos:end="39:48"><name pos:start="39:18" pos:end="39:26">inet_ntoa</name><argument_list pos:start="39:27" pos:end="39:48">(<argument pos:start="39:28" pos:end="39:47"><expr pos:start="39:28" pos:end="39:47"><name pos:start="39:28" pos:end="39:47"><name pos:start="39:28" pos:end="39:33">stream</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:47">multicast_ip</name></name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="41:18" pos:end="41:39"><expr pos:start="41:18" pos:end="41:39"><name pos:start="41:18" pos:end="41:39"><name pos:start="41:18" pos:end="41:23">stream</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:39">multicast_port</name></name></expr></argument>, <argument pos:start="41:42" pos:end="41:62"><expr pos:start="41:42" pos:end="41:62"><name pos:start="41:42" pos:end="41:62"><name pos:start="41:42" pos:end="41:47">stream</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:62">multicast_ttl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="47:5">else <block pos:start="43:12" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:55">

        <expr_stmt pos:start="45:9" pos:end="45:55"><expr pos:start="45:9" pos:end="45:54"><call pos:start="45:9" pos:end="45:54"><name pos:start="45:9" pos:end="45:16">snprintf</name><argument_list pos:start="45:17" pos:end="45:54">(<argument pos:start="45:18" pos:end="45:30"><expr pos:start="45:18" pos:end="45:30"><name pos:start="45:18" pos:end="45:30"><name pos:start="45:18" pos:end="45:20">avc</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:30">filename</name></name></expr></argument>, <argument pos:start="45:33" pos:end="45:36"><expr pos:start="45:33" pos:end="45:36"><literal type="number" pos:start="45:33" pos:end="45:36">1024</literal></expr></argument>, <argument pos:start="45:39" pos:end="45:53"><expr pos:start="45:39" pos:end="45:53"><literal type="string" pos:start="45:39" pos:end="45:53">"rtp://0.0.0.0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="51:5" pos:end="55:22"><if pos:start="51:5" pos:end="55:22">if <condition pos:start="51:8" pos:end="53:77">(<expr pos:start="51:9" pos:end="53:76"><name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:11">avc</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:23">nb_streams</name></name> <operator pos:start="51:25" pos:end="51:26">&gt;=</operator> <name pos:start="51:28" pos:end="51:34">INT_MAX</name><operator pos:start="51:35" pos:end="51:35">/</operator><sizeof pos:start="51:36" pos:end="51:56">sizeof<argument_list pos:start="51:42" pos:end="51:56">(<argument pos:start="51:43" pos:end="51:55"><expr pos:start="51:43" pos:end="51:55"><operator pos:start="51:43" pos:end="51:43">*</operator><name pos:start="51:44" pos:end="51:55"><name pos:start="51:44" pos:end="51:46">avc</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:55">streams</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="51:58" pos:end="51:59">||</operator>

        <operator pos:start="53:9" pos:end="53:9">!</operator><operator pos:start="53:10" pos:end="53:10">(</operator><name pos:start="53:11" pos:end="53:22"><name pos:start="53:11" pos:end="53:13">avc</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:22">streams</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <call pos:start="53:26" pos:end="53:75"><name pos:start="53:26" pos:end="53:34">av_malloc</name><argument_list pos:start="53:35" pos:end="53:75">(<argument pos:start="53:36" pos:end="53:74"><expr pos:start="53:36" pos:end="53:74"><name pos:start="53:36" pos:end="53:50"><name pos:start="53:36" pos:end="53:38">avc</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:50">nb_streams</name></name> <operator pos:start="53:52" pos:end="53:52">*</operator> <sizeof pos:start="53:54" pos:end="53:74">sizeof<argument_list pos:start="53:60" pos:end="53:74">(<argument pos:start="53:61" pos:end="53:73"><expr pos:start="53:61" pos:end="53:73"><operator pos:start="53:61" pos:end="53:61">*</operator><name pos:start="53:62" pos:end="53:73"><name pos:start="53:62" pos:end="53:64">avc</name><operator pos:start="53:65" pos:end="53:66">-&gt;</operator><name pos:start="53:67" pos:end="53:73">streams</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="53:76" pos:end="53:76">)</operator></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:22"><block_content pos:start="55:9" pos:end="55:22">

        <goto pos:start="55:9" pos:end="55:22">goto <name pos:start="55:14" pos:end="55:21">sdp_done</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="61:22"><if pos:start="57:5" pos:end="61:22">if <condition pos:start="57:8" pos:end="59:59">(<expr pos:start="57:9" pos:end="59:58"><name pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:11">avc</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:23">nb_streams</name></name> <operator pos:start="57:25" pos:end="57:26">&gt;=</operator> <name pos:start="57:28" pos:end="57:34">INT_MAX</name><operator pos:start="57:35" pos:end="57:35">/</operator><sizeof pos:start="57:36" pos:end="57:47">sizeof<argument_list pos:start="57:42" pos:end="57:47">(<argument pos:start="57:43" pos:end="57:46"><expr pos:start="57:43" pos:end="57:46"><operator pos:start="57:43" pos:end="57:43">*</operator><name pos:start="57:44" pos:end="57:46">avs</name></expr></argument>)</argument_list></sizeof> <operator pos:start="57:49" pos:end="57:50">||</operator>

        <operator pos:start="59:9" pos:end="59:9">!</operator><operator pos:start="59:10" pos:end="59:10">(</operator><name pos:start="59:11" pos:end="59:13">avs</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <call pos:start="59:17" pos:end="59:57"><name pos:start="59:17" pos:end="59:25">av_malloc</name><argument_list pos:start="59:26" pos:end="59:57">(<argument pos:start="59:27" pos:end="59:56"><expr pos:start="59:27" pos:end="59:56"><name pos:start="59:27" pos:end="59:41"><name pos:start="59:27" pos:end="59:29">avc</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:41">nb_streams</name></name> <operator pos:start="59:43" pos:end="59:43">*</operator> <sizeof pos:start="59:45" pos:end="59:56">sizeof<argument_list pos:start="59:51" pos:end="59:56">(<argument pos:start="59:52" pos:end="59:55"><expr pos:start="59:52" pos:end="59:55"><operator pos:start="59:52" pos:end="59:52">*</operator><name pos:start="59:53" pos:end="59:55">avs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="59:58" pos:end="59:58">)</operator></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:22"><block_content pos:start="61:9" pos:end="61:22">

        <goto pos:start="61:9" pos:end="61:22">goto <name pos:start="61:14" pos:end="61:21">sdp_done</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="65:5" pos:end="71:5">for<control pos:start="65:8" pos:end="65:43">(<init pos:start="65:9" pos:end="65:14"><expr pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:9">i</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <literal type="number" pos:start="65:13" pos:end="65:13">0</literal></expr>;</init> <condition pos:start="65:16" pos:end="65:38"><expr pos:start="65:16" pos:end="65:37"><name pos:start="65:16" pos:end="65:16">i</name> <operator pos:start="65:18" pos:end="65:18">&lt;</operator> <name pos:start="65:20" pos:end="65:37"><name pos:start="65:20" pos:end="65:25">stream</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:37">nb_streams</name></name></expr>;</condition> <incr pos:start="65:40" pos:end="65:42"><expr pos:start="65:40" pos:end="65:42"><name pos:start="65:40" pos:end="65:40">i</name><operator pos:start="65:41" pos:end="65:42">++</operator></expr></incr>)</control> <block pos:start="65:45" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:59">

        <expr_stmt pos:start="67:9" pos:end="67:34"><expr pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:11">avc</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:20">streams</name><index pos:start="67:21" pos:end="67:23">[<expr pos:start="67:22" pos:end="67:22"><name pos:start="67:22" pos:end="67:22">i</name></expr>]</index></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <operator pos:start="67:27" pos:end="67:27">&amp;</operator><name pos:start="67:28" pos:end="67:33"><name pos:start="67:28" pos:end="67:30">avs</name><index pos:start="67:31" pos:end="67:33">[<expr pos:start="67:32" pos:end="67:32"><name pos:start="67:32" pos:end="67:32">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:59"><expr pos:start="69:9" pos:end="69:58"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:11">avc</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:20">streams</name><index pos:start="69:21" pos:end="69:23">[<expr pos:start="69:22" pos:end="69:22"><name pos:start="69:22" pos:end="69:22">i</name></expr>]</index></name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:30">codec</name> <operator pos:start="69:32" pos:end="69:32">=</operator> <name pos:start="69:34" pos:end="69:51"><name pos:start="69:34" pos:end="69:39">stream</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:48">streams</name><index pos:start="69:49" pos:end="69:51">[<expr pos:start="69:50" pos:end="69:50"><name pos:start="69:50" pos:end="69:50">i</name></expr>]</index></name><operator pos:start="69:52" pos:end="69:53">-&gt;</operator><name pos:start="69:54" pos:end="69:58">codec</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="73:5" pos:end="73:32"><expr pos:start="73:5" pos:end="73:31"><operator pos:start="73:5" pos:end="73:5">*</operator><name pos:start="73:6" pos:end="73:12">pbuffer</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <call pos:start="73:16" pos:end="73:31"><name pos:start="73:16" pos:end="73:25">av_mallocz</name><argument_list pos:start="73:26" pos:end="73:31">(<argument pos:start="73:27" pos:end="73:30"><expr pos:start="73:27" pos:end="73:30"><literal type="number" pos:start="73:27" pos:end="73:30">2048</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:43"><expr pos:start="75:5" pos:end="75:42"><call pos:start="75:5" pos:end="75:42"><name pos:start="75:5" pos:end="75:17">av_sdp_create</name><argument_list pos:start="75:18" pos:end="75:42">(<argument pos:start="75:19" pos:end="75:22"><expr pos:start="75:19" pos:end="75:22"><operator pos:start="75:19" pos:end="75:19">&amp;</operator><name pos:start="75:20" pos:end="75:22">avc</name></expr></argument>, <argument pos:start="75:25" pos:end="75:25"><expr pos:start="75:25" pos:end="75:25"><literal type="number" pos:start="75:25" pos:end="75:25">1</literal></expr></argument>, <argument pos:start="75:28" pos:end="75:35"><expr pos:start="75:28" pos:end="75:35"><operator pos:start="75:28" pos:end="75:28">*</operator><name pos:start="75:29" pos:end="75:35">pbuffer</name></expr></argument>, <argument pos:start="75:38" pos:end="75:41"><expr pos:start="75:38" pos:end="75:41"><literal type="number" pos:start="75:38" pos:end="75:41">2048</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



 <label pos:start="79:2" pos:end="79:10"><name pos:start="79:2" pos:end="79:9">sdp_done</name>:</label>

    <expr_stmt pos:start="81:5" pos:end="81:26"><expr pos:start="81:5" pos:end="81:25"><call pos:start="81:5" pos:end="81:25"><name pos:start="81:5" pos:end="81:11">av_free</name><argument_list pos:start="81:12" pos:end="81:25">(<argument pos:start="81:13" pos:end="81:24"><expr pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:15">avc</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:24">streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:33"><expr pos:start="83:5" pos:end="83:32"><call pos:start="83:5" pos:end="83:32"><name pos:start="83:5" pos:end="83:16">av_dict_free</name><argument_list pos:start="83:17" pos:end="83:32">(<argument pos:start="83:18" pos:end="83:31"><expr pos:start="83:18" pos:end="83:31"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:31"><name pos:start="83:19" pos:end="83:21">avc</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:31">metadata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:17"><expr pos:start="85:5" pos:end="85:16"><call pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:11">av_free</name><argument_list pos:start="85:12" pos:end="85:16">(<argument pos:start="85:13" pos:end="85:15"><expr pos:start="85:13" pos:end="85:15"><name pos:start="85:13" pos:end="85:15">avc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:17"><expr pos:start="87:5" pos:end="87:16"><call pos:start="87:5" pos:end="87:16"><name pos:start="87:5" pos:end="87:11">av_free</name><argument_list pos:start="87:12" pos:end="87:16">(<argument pos:start="87:13" pos:end="87:15"><expr pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">avs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:28">return <expr pos:start="91:12" pos:end="91:27"><call pos:start="91:12" pos:end="91:27"><name pos:start="91:12" pos:end="91:17">strlen</name><argument_list pos:start="91:18" pos:end="91:27">(<argument pos:start="91:19" pos:end="91:26"><expr pos:start="91:19" pos:end="91:26"><operator pos:start="91:19" pos:end="91:19">*</operator><name pos:start="91:20" pos:end="91:26">pbuffer</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
