<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21597.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:30">decode_init</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:15">ASV1Context</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier><specifier pos:start="5:18" pos:end="5:22">const</specifier></type> <name pos:start="5:24" pos:end="5:24">a</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:71"><decl pos:start="7:5" pos:end="7:70"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">scale</name>      <init pos:start="7:26" pos:end="7:70">= <expr pos:start="7:28" pos:end="7:70"><ternary pos:start="7:28" pos:end="7:70"><condition pos:start="7:28" pos:end="7:64"><expr pos:start="7:28" pos:end="7:62"><name pos:start="7:28" pos:end="7:42"><name pos:start="7:28" pos:end="7:32">avctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:42">codec_id</name></name> <operator pos:start="7:44" pos:end="7:45">==</operator> <name pos:start="7:47" pos:end="7:62">AV_CODEC_ID_ASV1</name></expr> ?</condition><then pos:start="7:66" pos:end="7:66"> <expr pos:start="7:66" pos:end="7:66"><literal type="number" pos:start="7:66" pos:end="7:66">1</literal></expr> </then><else pos:start="7:68" pos:end="7:70">: <expr pos:start="7:70" pos:end="7:70"><literal type="number" pos:start="7:70" pos:end="7:70">2</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:34">(<expr pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:29">extradata_size</name></name> <operator pos:start="13:31" pos:end="13:31">&lt;</operator> <literal type="number" pos:start="13:33" pos:end="13:33">1</literal></expr>)</condition> <block pos:start="13:36" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:35">

        <expr_stmt pos:start="15:9" pos:end="15:63"><expr pos:start="15:9" pos:end="15:62"><call pos:start="15:9" pos:end="15:62"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:62">(<argument pos:start="15:16" pos:end="15:20"><expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">avctx</name></expr></argument>, <argument pos:start="15:23" pos:end="15:34"><expr pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:37" pos:end="15:61"><expr pos:start="15:37" pos:end="15:61"><literal type="string" pos:start="15:37" pos:end="15:61">"No extradata provided\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><call pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:22">ff_asv_common_init</name><argument_list pos:start="23:23" pos:end="23:29">(<argument pos:start="23:24" pos:end="23:28"><expr pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:28">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><call pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:20">ff_blockdsp_init</name><argument_list pos:start="25:21" pos:end="25:37">(<argument pos:start="25:22" pos:end="25:29"><expr pos:start="25:22" pos:end="25:29"><operator pos:start="25:22" pos:end="25:22">&amp;</operator><name pos:start="25:23" pos:end="25:29"><name pos:start="25:23" pos:end="25:23">a</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:29">bdsp</name></name></expr></argument>, <argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><name pos:start="25:32" pos:end="25:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><call pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:19">ff_idctdsp_init</name><argument_list pos:start="27:20" pos:end="27:36">(<argument pos:start="27:21" pos:end="27:28"><expr pos:start="27:21" pos:end="27:28"><operator pos:start="27:21" pos:end="27:21">&amp;</operator><name pos:start="27:22" pos:end="27:28"><name pos:start="27:22" pos:end="27:22">a</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:28">idsp</name></name></expr></argument>, <argument pos:start="27:31" pos:end="27:35"><expr pos:start="27:31" pos:end="27:35"><name pos:start="27:31" pos:end="27:35">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:17"><expr pos:start="29:5" pos:end="29:16"><call pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:13">init_vlcs</name><argument_list pos:start="29:14" pos:end="29:16">(<argument pos:start="29:15" pos:end="29:15"><expr pos:start="29:15" pos:end="29:15"><name pos:start="29:15" pos:end="29:15">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:79"><expr pos:start="31:5" pos:end="31:78"><call pos:start="31:5" pos:end="31:78"><name pos:start="31:5" pos:end="31:21">ff_init_scantable</name><argument_list pos:start="31:22" pos:end="31:78">(<argument pos:start="31:23" pos:end="31:46"><expr pos:start="31:23" pos:end="31:46"><name pos:start="31:23" pos:end="31:46"><name pos:start="31:23" pos:end="31:23">a</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">idsp</name><operator pos:start="31:30" pos:end="31:30">.</operator><name pos:start="31:31" pos:end="31:46">idct_permutation</name></name></expr></argument>, <argument pos:start="31:49" pos:end="31:61"><expr pos:start="31:49" pos:end="31:61"><operator pos:start="31:49" pos:end="31:49">&amp;</operator><name pos:start="31:50" pos:end="31:61"><name pos:start="31:50" pos:end="31:50">a</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:61">scantable</name></name></expr></argument>, <argument pos:start="31:64" pos:end="31:77"><expr pos:start="31:64" pos:end="31:77"><name pos:start="31:64" pos:end="31:77">ff_asv_scantab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:40"><expr pos:start="33:5" pos:end="33:39"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:9">avctx</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:18">pix_fmt</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:39">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:5">a</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:17">inv_qscale</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:39"><name pos:start="37:21" pos:end="37:25">avctx</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:36">extradata</name><index pos:start="37:37" pos:end="37:39">[<expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="51:5"><if pos:start="39:5" pos:end="51:5">if <condition pos:start="39:8" pos:end="39:27">(<expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:9">a</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:21">inv_qscale</name></name> <operator pos:start="39:23" pos:end="39:24">==</operator> <literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr>)</condition> <block pos:start="39:29" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:31">

        <expr_stmt pos:start="41:9" pos:end="41:58"><expr pos:start="41:9" pos:end="41:57"><call pos:start="41:9" pos:end="41:57"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:57">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:20">avctx</name></expr></argument>, <argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:37" pos:end="41:56"><expr pos:start="41:37" pos:end="41:56"><literal type="string" pos:start="41:37" pos:end="41:56">"illegal qscale 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:31"><if pos:start="43:9" pos:end="45:30">if <condition pos:start="43:12" pos:end="43:48">(<expr pos:start="43:13" pos:end="43:47"><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:17">avctx</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:27">codec_id</name></name> <operator pos:start="43:29" pos:end="43:30">==</operator> <name pos:start="43:32" pos:end="43:47">AV_CODEC_ID_ASV1</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:30"><block_content pos:start="45:13" pos:end="45:30">

            <expr_stmt pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:13">a</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:25">inv_qscale</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <literal type="number" pos:start="45:29" pos:end="45:29">6</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="47:9" pos:end="49:31">else<block type="pseudo" pos:start="49:13" pos:end="49:31"><block_content pos:start="49:13" pos:end="49:31">

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:13">a</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:25">inv_qscale</name></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <literal type="number" pos:start="49:29" pos:end="49:30">10</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="55:5" pos:end="65:5">for <control pos:start="55:9" pos:end="55:28">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:23"><expr pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <literal type="number" pos:start="55:21" pos:end="55:22">64</literal></expr>;</condition> <incr pos:start="55:25" pos:end="55:27"><expr pos:start="55:25" pos:end="55:27"><name pos:start="55:25" pos:end="55:25">i</name><operator pos:start="55:26" pos:end="55:27">++</operator></expr></incr>)</control> <block pos:start="55:30" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:43">

        <decl_stmt pos:start="57:9" pos:end="57:38"><decl pos:start="57:9" pos:end="57:37"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:17">index</name> <init pos:start="57:19" pos:end="57:37">= <expr pos:start="57:21" pos:end="57:37"><name pos:start="57:21" pos:end="57:37"><name pos:start="57:21" pos:end="57:34">ff_asv_scantab</name><index pos:start="57:35" pos:end="57:37">[<expr pos:start="57:36" pos:end="57:36"><name pos:start="57:36" pos:end="57:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="61:9" pos:end="63:43"><expr pos:start="61:9" pos:end="63:42"><name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:9">a</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:23">intra_matrix</name><index pos:start="61:24" pos:end="61:26">[<expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">i</name></expr>]</index></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <literal type="number" pos:start="61:30" pos:end="61:31">64</literal> <operator pos:start="61:33" pos:end="61:33">*</operator> <name pos:start="61:35" pos:end="61:39">scale</name> <operator pos:start="61:41" pos:end="61:41">*</operator> <name pos:start="61:43" pos:end="61:78"><name pos:start="61:43" pos:end="61:71">ff_mpeg1_default_intra_matrix</name><index pos:start="61:72" pos:end="61:78">[<expr pos:start="61:73" pos:end="61:77"><name pos:start="61:73" pos:end="61:77">index</name></expr>]</index></name> <operator pos:start="61:80" pos:end="61:80">/</operator>

                             <name pos:start="63:30" pos:end="63:42"><name pos:start="63:30" pos:end="63:30">a</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:42">inv_qscale</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
