<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25641.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">avi_read_seek</name><parameter_list pos:start="1:25" pos:end="1:92">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:61">stream_index</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:80"><decl pos:start="1:64" pos:end="1:80"><type pos:start="1:64" pos:end="1:80"><name pos:start="1:64" pos:end="1:70">int64_t</name></type> <name pos:start="1:72" pos:end="1:80">timestamp</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:91"><decl pos:start="1:83" pos:end="1:91"><type pos:start="1:83" pos:end="1:91"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:91">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AVIContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">avi</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:16">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">AVIStream</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:18">ast</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:26"><name pos:start="17:10" pos:end="17:12">avi</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:26">index_loaded</name></name></expr>)</condition> <block pos:start="17:29" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:30">

        <comment type="block" pos:start="19:9" pos:end="19:46">/* we only load the index on demand */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><call pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:22">avi_load_index</name><argument_list pos:start="21:23" pos:end="21:25">(<argument pos:start="21:24" pos:end="21:24"><expr pos:start="21:24" pos:end="21:24"><name pos:start="21:24" pos:end="21:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:11">avi</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:25">index_loaded</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <literal type="number" pos:start="23:29" pos:end="23:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><call pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:10">assert</name><argument_list pos:start="27:11" pos:end="27:28">(<argument pos:start="27:12" pos:end="27:27"><expr pos:start="27:12" pos:end="27:27"><name pos:start="27:12" pos:end="27:23">stream_index</name><operator pos:start="27:24" pos:end="27:25">&gt;=</operator> <literal type="number" pos:start="27:27" pos:end="27:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:6">st</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <name pos:start="31:10" pos:end="31:33"><name pos:start="31:10" pos:end="31:10">s</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:19">streams</name><index pos:start="31:20" pos:end="31:33">[<expr pos:start="31:21" pos:end="31:32"><name pos:start="31:21" pos:end="31:32">stream_index</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:7">ast</name><operator pos:start="33:8" pos:end="33:8">=</operator> <name pos:start="33:10" pos:end="33:22"><name pos:start="33:10" pos:end="33:11">st</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:22">priv_data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:88"><expr pos:start="35:5" pos:end="35:87"><name pos:start="35:5" pos:end="35:9">index</name><operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:87"><name pos:start="35:12" pos:end="35:36">av_index_search_timestamp</name><argument_list pos:start="35:37" pos:end="35:87">(<argument pos:start="35:38" pos:end="35:39"><expr pos:start="35:38" pos:end="35:39"><name pos:start="35:38" pos:end="35:39">st</name></expr></argument>, <argument pos:start="35:42" pos:end="35:79"><expr pos:start="35:42" pos:end="35:79"><name pos:start="35:42" pos:end="35:50">timestamp</name> <operator pos:start="35:52" pos:end="35:52">*</operator> <call pos:start="35:54" pos:end="35:79"><name pos:start="35:54" pos:end="35:58">FFMAX</name><argument_list pos:start="35:59" pos:end="35:79">(<argument pos:start="35:60" pos:end="35:75"><expr pos:start="35:60" pos:end="35:75"><name pos:start="35:60" pos:end="35:75"><name pos:start="35:60" pos:end="35:62">ast</name><operator pos:start="35:63" pos:end="35:64">-&gt;</operator><name pos:start="35:65" pos:end="35:75">sample_size</name></name></expr></argument>, <argument pos:start="35:78" pos:end="35:78"><expr pos:start="35:78" pos:end="35:78"><literal type="number" pos:start="35:78" pos:end="35:78">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:82" pos:end="35:86"><expr pos:start="35:82" pos:end="35:86"><name pos:start="35:82" pos:end="35:86">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if<condition pos:start="37:7" pos:end="37:15">(<expr pos:start="37:8" pos:end="37:14"><name pos:start="37:8" pos:end="37:12">index</name><operator pos:start="37:13" pos:end="37:13">&lt;</operator><literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:27">/* find the position */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:7">pos</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <name pos:start="45:11" pos:end="45:34"><name pos:start="45:11" pos:end="45:12">st</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:27">index_entries</name><index pos:start="45:28" pos:end="45:34">[<expr pos:start="45:29" pos:end="45:33"><name pos:start="45:29" pos:end="45:33">index</name></expr>]</index></name><operator pos:start="45:35" pos:end="45:35">.</operator><name pos:start="45:36" pos:end="45:38">pos</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:80"><expr pos:start="47:5" pos:end="47:79"><name pos:start="47:5" pos:end="47:13">timestamp</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <name pos:start="47:17" pos:end="47:40"><name pos:start="47:17" pos:end="47:18">st</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:33">index_entries</name><index pos:start="47:34" pos:end="47:40">[<expr pos:start="47:35" pos:end="47:39"><name pos:start="47:35" pos:end="47:39">index</name></expr>]</index></name><operator pos:start="47:41" pos:end="47:41">.</operator><name pos:start="47:42" pos:end="47:50">timestamp</name> <operator pos:start="47:52" pos:end="47:52">/</operator> <call pos:start="47:54" pos:end="47:79"><name pos:start="47:54" pos:end="47:58">FFMAX</name><argument_list pos:start="47:59" pos:end="47:79">(<argument pos:start="47:60" pos:end="47:75"><expr pos:start="47:60" pos:end="47:75"><name pos:start="47:60" pos:end="47:75"><name pos:start="47:60" pos:end="47:62">ast</name><operator pos:start="47:63" pos:end="47:64">-&gt;</operator><name pos:start="47:65" pos:end="47:75">sample_size</name></name></expr></argument>, <argument pos:start="47:78" pos:end="47:78"><expr pos:start="47:78" pos:end="47:78"><literal type="number" pos:start="47:78" pos:end="47:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="53:66"><expr pos:start="51:5" pos:end="53:65"><call pos:start="51:5" pos:end="53:65"><name pos:start="51:5" pos:end="51:11">av_dlog</name><argument_list pos:start="51:12" pos:end="53:65">(<argument pos:start="51:13" pos:end="51:13"><expr pos:start="51:13" pos:end="51:13"><name pos:start="51:13" pos:end="51:13">s</name></expr></argument>, <argument pos:start="51:16" pos:end="51:44"><expr pos:start="51:16" pos:end="51:44"><literal type="string" pos:start="51:16" pos:end="51:21">"XX %"</literal><name pos:start="51:22" pos:end="51:27">PRId64</name><literal type="string" pos:start="51:28" pos:end="51:34">" %d %"</literal><name pos:start="51:35" pos:end="51:40">PRId64</name><literal type="string" pos:start="51:41" pos:end="51:44">"\n"</literal></expr></argument>,

            <argument pos:start="53:13" pos:end="53:21"><expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:21">timestamp</name></expr></argument>, <argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:28">index</name></expr></argument>, <argument pos:start="53:31" pos:end="53:64"><expr pos:start="53:31" pos:end="53:64"><name pos:start="53:31" pos:end="53:54"><name pos:start="53:31" pos:end="53:32">st</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:47">index_entries</name><index pos:start="53:48" pos:end="53:54">[<expr pos:start="53:49" pos:end="53:53"><name pos:start="53:49" pos:end="53:53">index</name></expr>]</index></name><operator pos:start="53:55" pos:end="53:55">.</operator><name pos:start="53:56" pos:end="53:64">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="83:5"><if pos:start="57:5" pos:end="83:5">if <condition pos:start="57:8" pos:end="57:43">(<expr pos:start="57:9" pos:end="57:42"><name pos:start="57:9" pos:end="57:25">CONFIG_DV_DEMUXER</name> <operator pos:start="57:27" pos:end="57:28">&amp;&amp;</operator> <name pos:start="57:30" pos:end="57:42"><name pos:start="57:30" pos:end="57:32">avi</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:42">dv_demux</name></name></expr>)</condition> <block pos:start="57:45" pos:end="83:5">{<block_content pos:start="65:9" pos:end="81:17">

        <comment type="block" pos:start="59:9" pos:end="59:75">/* One and only one real stream for DV in AVI, and it has video  */</comment>

        <comment type="block" pos:start="61:9" pos:end="61:75">/* offsets. Calling with other stream indexes should have failed */</comment>

        <comment type="block" pos:start="63:9" pos:end="63:75">/* the av_index_search_timestamp call above.                     */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:34"><expr pos:start="65:9" pos:end="65:33"><call pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:14">assert</name><argument_list pos:start="65:15" pos:end="65:33">(<argument pos:start="65:16" pos:end="65:32"><expr pos:start="65:16" pos:end="65:32"><name pos:start="65:16" pos:end="65:27">stream_index</name> <operator pos:start="65:29" pos:end="65:30">==</operator> <literal type="number" pos:start="65:32" pos:end="65:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="69:9" pos:end="69:70">/* Feed the DV video stream version of the timestamp to the */</comment>

        <comment type="block" pos:start="71:9" pos:end="71:70">/* DV demux so it can synthesize correct timestamps.        */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:53"><expr pos:start="73:9" pos:end="73:52"><call pos:start="73:9" pos:end="73:52"><name pos:start="73:9" pos:end="73:26">ff_dv_offset_reset</name><argument_list pos:start="73:27" pos:end="73:52">(<argument pos:start="73:28" pos:end="73:40"><expr pos:start="73:28" pos:end="73:40"><name pos:start="73:28" pos:end="73:40"><name pos:start="73:28" pos:end="73:30">avi</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:40">dv_demux</name></name></expr></argument>, <argument pos:start="73:43" pos:end="73:51"><expr pos:start="73:43" pos:end="73:51"><name pos:start="73:43" pos:end="73:51">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:40"><expr pos:start="77:9" pos:end="77:39"><call pos:start="77:9" pos:end="77:39"><name pos:start="77:9" pos:end="77:17">avio_seek</name><argument_list pos:start="77:18" pos:end="77:39">(<argument pos:start="77:19" pos:end="77:23"><expr pos:start="77:19" pos:end="77:23"><name pos:start="77:19" pos:end="77:23"><name pos:start="77:19" pos:end="77:19">s</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:23">pb</name></name></expr></argument>, <argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">pos</name></expr></argument>, <argument pos:start="77:31" pos:end="77:38"><expr pos:start="77:31" pos:end="77:38"><name pos:start="77:31" pos:end="77:38">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:11">avi</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:25">stream_index</name></name><operator pos:start="79:26" pos:end="79:26">=</operator> <operator pos:start="79:28" pos:end="79:28">-</operator><literal type="number" pos:start="79:29" pos:end="79:29">1</literal></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:17">return <expr pos:start="81:16" pos:end="81:16"><literal type="number" pos:start="81:16" pos:end="81:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="87:5" pos:end="157:5">for<control pos:start="87:8" pos:end="87:38">(<init pos:start="87:9" pos:end="87:14"><expr pos:start="87:9" pos:end="87:13"><name pos:start="87:9" pos:end="87:9">i</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <literal type="number" pos:start="87:13" pos:end="87:13">0</literal></expr>;</init> <condition pos:start="87:16" pos:end="87:33"><expr pos:start="87:16" pos:end="87:32"><name pos:start="87:16" pos:end="87:16">i</name> <operator pos:start="87:18" pos:end="87:18">&lt;</operator> <name pos:start="87:20" pos:end="87:32"><name pos:start="87:20" pos:end="87:20">s</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:32">nb_streams</name></name></expr>;</condition> <incr pos:start="87:35" pos:end="87:37"><expr pos:start="87:35" pos:end="87:37"><name pos:start="87:35" pos:end="87:35">i</name><operator pos:start="87:36" pos:end="87:37">++</operator></expr></incr>)</control> <block pos:start="87:40" pos:end="157:5">{<block_content pos:start="89:9" pos:end="155:65">

        <decl_stmt pos:start="89:9" pos:end="89:38"><decl pos:start="89:9" pos:end="89:37"><type pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:16">AVStream</name> <modifier pos:start="89:18" pos:end="89:18">*</modifier></type><name pos:start="89:19" pos:end="89:21">st2</name> <init pos:start="89:23" pos:end="89:37">= <expr pos:start="89:25" pos:end="89:37"><name pos:start="89:25" pos:end="89:37"><name pos:start="89:25" pos:end="89:25">s</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:34">streams</name><index pos:start="89:35" pos:end="89:37">[<expr pos:start="89:36" pos:end="89:36"><name pos:start="89:36" pos:end="89:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="91:9" pos:end="91:41"><decl pos:start="91:9" pos:end="91:40"><type pos:start="91:9" pos:end="91:19"><name pos:start="91:9" pos:end="91:17">AVIStream</name> <modifier pos:start="91:19" pos:end="91:19">*</modifier></type><name pos:start="91:20" pos:end="91:23">ast2</name> <init pos:start="91:25" pos:end="91:40">= <expr pos:start="91:27" pos:end="91:40"><name pos:start="91:27" pos:end="91:40"><name pos:start="91:27" pos:end="91:29">st2</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:40">priv_data</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="95:9" pos:end="97:27"><expr pos:start="95:9" pos:end="97:26"><name pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:12">ast2</name><operator pos:start="95:13" pos:end="95:14">-&gt;</operator><name pos:start="95:15" pos:end="95:25">packet_size</name></name><operator pos:start="95:26" pos:end="95:26">=</operator>

        <name pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:12">ast2</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:23">remaining</name></name><operator pos:start="97:24" pos:end="97:24">=</operator> <literal type="number" pos:start="97:26" pos:end="97:26">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:26">(<expr pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:16">ast2</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:25">sub_ctx</name></name></expr>)</condition> <block pos:start="101:28" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:21">

            <expr_stmt pos:start="103:13" pos:end="103:46"><expr pos:start="103:13" pos:end="103:45"><call pos:start="103:13" pos:end="103:45"><name pos:start="103:13" pos:end="103:25">seek_subtitle</name><argument_list pos:start="103:26" pos:end="103:45">(<argument pos:start="103:27" pos:end="103:28"><expr pos:start="103:27" pos:end="103:28"><name pos:start="103:27" pos:end="103:28">st</name></expr></argument>, <argument pos:start="103:31" pos:end="103:33"><expr pos:start="103:31" pos:end="103:33"><name pos:start="103:31" pos:end="103:33">st2</name></expr></argument>, <argument pos:start="103:36" pos:end="103:44"><expr pos:start="103:36" pos:end="103:44"><name pos:start="103:36" pos:end="103:44">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="105:13" pos:end="105:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="111:9" pos:end="113:21"><if pos:start="111:9" pos:end="113:21">if <condition pos:start="111:12" pos:end="111:39">(<expr pos:start="111:13" pos:end="111:38"><name pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:15">st2</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:33">nb_index_entries</name></name> <operator pos:start="111:35" pos:end="111:36">&lt;=</operator> <literal type="number" pos:start="111:38" pos:end="111:38">0</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:21"><block_content pos:start="113:13" pos:end="113:21">

            <continue pos:start="113:13" pos:end="113:21">continue;</continue></block_content></block></if></if_stmt>



<comment type="line" pos:start="117:1" pos:end="117:42">//        assert(st2-&gt;codec-&gt;block_align);</comment>

        <expr_stmt pos:start="119:9" pos:end="119:98"><expr pos:start="119:9" pos:end="119:97"><call pos:start="119:9" pos:end="119:97"><name pos:start="119:9" pos:end="119:14">assert</name><argument_list pos:start="119:15" pos:end="119:97">(<argument pos:start="119:16" pos:end="119:96"><expr pos:start="119:16" pos:end="119:96"><operator pos:start="119:16" pos:end="119:16">(</operator><name pos:start="119:17" pos:end="119:23">int64_t</name><operator pos:start="119:24" pos:end="119:24">)</operator><name pos:start="119:25" pos:end="119:42"><name pos:start="119:25" pos:end="119:27">st2</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:38">time_base</name><operator pos:start="119:39" pos:end="119:39">.</operator><name pos:start="119:40" pos:end="119:42">num</name></name><operator pos:start="119:43" pos:end="119:43">*</operator><name pos:start="119:44" pos:end="119:53"><name pos:start="119:44" pos:end="119:47">ast2</name><operator pos:start="119:48" pos:end="119:49">-&gt;</operator><name pos:start="119:50" pos:end="119:53">rate</name></name> <operator pos:start="119:55" pos:end="119:56">==</operator> <operator pos:start="119:58" pos:end="119:58">(</operator><name pos:start="119:59" pos:end="119:65">int64_t</name><operator pos:start="119:66" pos:end="119:66">)</operator><name pos:start="119:67" pos:end="119:84"><name pos:start="119:67" pos:end="119:69">st2</name><operator pos:start="119:70" pos:end="119:71">-&gt;</operator><name pos:start="119:72" pos:end="119:80">time_base</name><operator pos:start="119:81" pos:end="119:81">.</operator><name pos:start="119:82" pos:end="119:84">den</name></name><operator pos:start="119:85" pos:end="119:85">*</operator><name pos:start="119:86" pos:end="119:96"><name pos:start="119:86" pos:end="119:89">ast2</name><operator pos:start="119:90" pos:end="119:91">-&gt;</operator><name pos:start="119:92" pos:end="119:96">scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="127:46"><expr pos:start="121:9" pos:end="127:45"><name pos:start="121:9" pos:end="121:13">index</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <call pos:start="121:17" pos:end="127:45"><name pos:start="121:17" pos:end="121:41">av_index_search_timestamp</name><argument_list pos:start="121:42" pos:end="127:45">(

                <argument pos:start="123:17" pos:end="123:19"><expr pos:start="123:17" pos:end="123:19"><name pos:start="123:17" pos:end="123:19">st2</name></expr></argument>,

                <argument pos:start="125:17" pos:end="125:100"><expr pos:start="125:17" pos:end="125:100"><call pos:start="125:17" pos:end="125:70"><name pos:start="125:17" pos:end="125:28">av_rescale_q</name><argument_list pos:start="125:29" pos:end="125:70">(<argument pos:start="125:30" pos:end="125:38"><expr pos:start="125:30" pos:end="125:38"><name pos:start="125:30" pos:end="125:38">timestamp</name></expr></argument>, <argument pos:start="125:41" pos:end="125:53"><expr pos:start="125:41" pos:end="125:53"><name pos:start="125:41" pos:end="125:53"><name pos:start="125:41" pos:end="125:42">st</name><operator pos:start="125:43" pos:end="125:44">-&gt;</operator><name pos:start="125:45" pos:end="125:53">time_base</name></name></expr></argument>, <argument pos:start="125:56" pos:end="125:69"><expr pos:start="125:56" pos:end="125:69"><name pos:start="125:56" pos:end="125:69"><name pos:start="125:56" pos:end="125:58">st2</name><operator pos:start="125:59" pos:end="125:60">-&gt;</operator><name pos:start="125:61" pos:end="125:69">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="125:72" pos:end="125:72">*</operator> <call pos:start="125:74" pos:end="125:100"><name pos:start="125:74" pos:end="125:78">FFMAX</name><argument_list pos:start="125:79" pos:end="125:100">(<argument pos:start="125:80" pos:end="125:96"><expr pos:start="125:80" pos:end="125:96"><name pos:start="125:80" pos:end="125:96"><name pos:start="125:80" pos:end="125:83">ast2</name><operator pos:start="125:84" pos:end="125:85">-&gt;</operator><name pos:start="125:86" pos:end="125:96">sample_size</name></name></expr></argument>, <argument pos:start="125:99" pos:end="125:99"><expr pos:start="125:99" pos:end="125:99"><literal type="number" pos:start="125:99" pos:end="125:99">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="127:17" pos:end="127:44"><expr pos:start="127:17" pos:end="127:44"><name pos:start="127:17" pos:end="127:21">flags</name> <operator pos:start="127:23" pos:end="127:23">|</operator> <name pos:start="127:25" pos:end="127:44">AVSEEK_FLAG_BACKWARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="131:20"><if pos:start="129:9" pos:end="131:20">if<condition pos:start="129:11" pos:end="129:19">(<expr pos:start="129:12" pos:end="129:18"><name pos:start="129:12" pos:end="129:16">index</name><operator pos:start="129:17" pos:end="129:17">&lt;</operator><literal type="number" pos:start="129:18" pos:end="129:18">0</literal></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:20"><block_content pos:start="131:13" pos:end="131:20">

            <expr_stmt pos:start="131:13" pos:end="131:20"><expr pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:17">index</name><operator pos:start="131:18" pos:end="131:18">=</operator><literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="135:9" pos:end="145:9"><if pos:start="135:9" pos:end="145:9">if<condition pos:start="135:11" pos:end="135:33">(<expr pos:start="135:12" pos:end="135:32"><operator pos:start="135:12" pos:end="135:12">!</operator><name pos:start="135:13" pos:end="135:32"><name pos:start="135:13" pos:end="135:15">avi</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:32">non_interleaved</name></name></expr>)</condition><block pos:start="135:34" pos:end="145:9">{<block_content pos:start="137:13" pos:end="143:24">

            <while pos:start="137:13" pos:end="139:24">while<condition pos:start="137:18" pos:end="137:65">(<expr pos:start="137:19" pos:end="137:64"><name pos:start="137:19" pos:end="137:23">index</name><operator pos:start="137:24" pos:end="137:24">&gt;</operator><literal type="number" pos:start="137:25" pos:end="137:25">0</literal> <operator pos:start="137:27" pos:end="137:28">&amp;&amp;</operator> <name pos:start="137:30" pos:end="137:54"><name pos:start="137:30" pos:end="137:32">st2</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:47">index_entries</name><index pos:start="137:48" pos:end="137:54">[<expr pos:start="137:49" pos:end="137:53"><name pos:start="137:49" pos:end="137:53">index</name></expr>]</index></name><operator pos:start="137:55" pos:end="137:55">.</operator><name pos:start="137:56" pos:end="137:58">pos</name> <operator pos:start="137:60" pos:end="137:60">&gt;</operator> <name pos:start="137:62" pos:end="137:64">pos</name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:24"><block_content pos:start="139:17" pos:end="139:24">

                <expr_stmt pos:start="139:17" pos:end="139:24"><expr pos:start="139:17" pos:end="139:23"><name pos:start="139:17" pos:end="139:21">index</name><operator pos:start="139:22" pos:end="139:23">--</operator></expr>;</expr_stmt></block_content></block></while>

            <while pos:start="141:13" pos:end="143:24">while<condition pos:start="141:18" pos:end="141:89">(<expr pos:start="141:19" pos:end="141:88"><name pos:start="141:19" pos:end="141:23">index</name><operator pos:start="141:24" pos:end="141:24">+</operator><literal type="number" pos:start="141:25" pos:end="141:25">1</literal> <operator pos:start="141:27" pos:end="141:27">&lt;</operator> <name pos:start="141:29" pos:end="141:49"><name pos:start="141:29" pos:end="141:31">st2</name><operator pos:start="141:32" pos:end="141:33">-&gt;</operator><name pos:start="141:34" pos:end="141:49">nb_index_entries</name></name> <operator pos:start="141:51" pos:end="141:52">&amp;&amp;</operator> <name pos:start="141:54" pos:end="141:78"><name pos:start="141:54" pos:end="141:56">st2</name><operator pos:start="141:57" pos:end="141:58">-&gt;</operator><name pos:start="141:59" pos:end="141:71">index_entries</name><index pos:start="141:72" pos:end="141:78">[<expr pos:start="141:73" pos:end="141:77"><name pos:start="141:73" pos:end="141:77">index</name></expr>]</index></name><operator pos:start="141:79" pos:end="141:79">.</operator><name pos:start="141:80" pos:end="141:82">pos</name> <operator pos:start="141:84" pos:end="141:84">&lt;</operator> <name pos:start="141:86" pos:end="141:88">pos</name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:24"><block_content pos:start="143:17" pos:end="143:24">

                <expr_stmt pos:start="143:17" pos:end="143:24"><expr pos:start="143:17" pos:end="143:23"><name pos:start="143:17" pos:end="143:21">index</name><operator pos:start="143:22" pos:end="143:23">++</operator></expr>;</expr_stmt></block_content></block></while>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="149:9" pos:end="151:71"><expr pos:start="149:9" pos:end="151:70"><call pos:start="149:9" pos:end="151:70"><name pos:start="149:9" pos:end="149:15">av_dlog</name><argument_list pos:start="149:16" pos:end="151:70">(<argument pos:start="149:17" pos:end="149:17"><expr pos:start="149:17" pos:end="149:17"><name pos:start="149:17" pos:end="149:17">s</name></expr></argument>, <argument pos:start="149:20" pos:end="149:45"><expr pos:start="149:20" pos:end="149:45"><literal type="string" pos:start="149:20" pos:end="149:22">"%"</literal><name pos:start="149:23" pos:end="149:28">PRId64</name><literal type="string" pos:start="149:29" pos:end="149:35">" %d %"</literal><name pos:start="149:36" pos:end="149:41">PRId64</name><literal type="string" pos:start="149:42" pos:end="149:45">"\n"</literal></expr></argument>,

                <argument pos:start="151:17" pos:end="151:25"><expr pos:start="151:17" pos:end="151:25"><name pos:start="151:17" pos:end="151:25">timestamp</name></expr></argument>, <argument pos:start="151:28" pos:end="151:32"><expr pos:start="151:28" pos:end="151:32"><name pos:start="151:28" pos:end="151:32">index</name></expr></argument>, <argument pos:start="151:35" pos:end="151:69"><expr pos:start="151:35" pos:end="151:69"><name pos:start="151:35" pos:end="151:59"><name pos:start="151:35" pos:end="151:37">st2</name><operator pos:start="151:38" pos:end="151:39">-&gt;</operator><name pos:start="151:40" pos:end="151:52">index_entries</name><index pos:start="151:53" pos:end="151:59">[<expr pos:start="151:54" pos:end="151:58"><name pos:start="151:54" pos:end="151:58">index</name></expr>]</index></name><operator pos:start="151:60" pos:end="151:60">.</operator><name pos:start="151:61" pos:end="151:69">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="153:9" pos:end="153:46">/* extract the current frame number */</comment>

        <expr_stmt pos:start="155:9" pos:end="155:65"><expr pos:start="155:9" pos:end="155:64"><name pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:12">ast2</name><operator pos:start="155:13" pos:end="155:14">-&gt;</operator><name pos:start="155:15" pos:end="155:26">frame_offset</name></name> <operator pos:start="155:28" pos:end="155:28">=</operator> <name pos:start="155:30" pos:end="155:54"><name pos:start="155:30" pos:end="155:32">st2</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:47">index_entries</name><index pos:start="155:48" pos:end="155:54">[<expr pos:start="155:49" pos:end="155:53"><name pos:start="155:49" pos:end="155:53">index</name></expr>]</index></name><operator pos:start="155:55" pos:end="155:55">.</operator><name pos:start="155:56" pos:end="155:64">timestamp</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="161:5" pos:end="161:21">/* do the seek */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:36"><expr pos:start="163:5" pos:end="163:35"><call pos:start="163:5" pos:end="163:35"><name pos:start="163:5" pos:end="163:13">avio_seek</name><argument_list pos:start="163:14" pos:end="163:35">(<argument pos:start="163:15" pos:end="163:19"><expr pos:start="163:15" pos:end="163:19"><name pos:start="163:15" pos:end="163:19"><name pos:start="163:15" pos:end="163:15">s</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:19">pb</name></name></expr></argument>, <argument pos:start="163:22" pos:end="163:24"><expr pos:start="163:22" pos:end="163:24"><name pos:start="163:22" pos:end="163:24">pos</name></expr></argument>, <argument pos:start="163:27" pos:end="163:34"><expr pos:start="163:27" pos:end="163:34"><name pos:start="163:27" pos:end="163:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:26"><expr pos:start="165:5" pos:end="165:25"><name pos:start="165:5" pos:end="165:21"><name pos:start="165:5" pos:end="165:7">avi</name><operator pos:start="165:8" pos:end="165:9">-&gt;</operator><name pos:start="165:10" pos:end="165:21">stream_index</name></name><operator pos:start="165:22" pos:end="165:22">=</operator> <operator pos:start="165:24" pos:end="165:24">-</operator><literal type="number" pos:start="165:25" pos:end="165:25">1</literal></expr>;</expr_stmt>

    <return pos:start="167:5" pos:end="167:13">return <expr pos:start="167:12" pos:end="167:12"><literal type="number" pos:start="167:12" pos:end="167:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
