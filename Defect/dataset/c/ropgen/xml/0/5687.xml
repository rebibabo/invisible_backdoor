<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5687.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">qemu_gluster_open</name><parameter_list pos:start="1:29" pos:end="3:58">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:45">BlockDriverState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">bs</name></decl></parameter>,  <parameter pos:start="1:53" pos:end="1:66"><decl pos:start="1:53" pos:end="1:66"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:57">QDict</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:66">options</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:43">bdrv_flags</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:57"><decl pos:start="3:46" pos:end="3:57"><type pos:start="3:46" pos:end="3:57"><name pos:start="3:46" pos:end="3:50">Error</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier><modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:57">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="111:1">{<block_content pos:start="7:5" pos:end="109:15">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BDRVGlusterState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:36">= <expr pos:start="7:27" pos:end="7:36"><name pos:start="7:27" pos:end="7:36"><name pos:start="7:27" pos:end="7:28">bs</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:36">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">open_flags</name> <init pos:start="9:20" pos:end="9:29">= <expr pos:start="9:22" pos:end="9:29"><name pos:start="9:22" pos:end="9:29">O_BINARY</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">GlusterConf</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:22">gconf</name> <init pos:start="13:24" pos:end="13:55">= <expr pos:start="13:26" pos:end="13:55"><call pos:start="13:26" pos:end="13:55"><name pos:start="13:26" pos:end="13:34">g_malloc0</name><argument_list pos:start="13:35" pos:end="13:55">(<argument pos:start="13:36" pos:end="13:54"><expr pos:start="13:36" pos:end="13:54"><sizeof pos:start="13:36" pos:end="13:54">sizeof<argument_list pos:start="13:42" pos:end="13:54">(<argument pos:start="13:43" pos:end="13:53"><expr pos:start="13:43" pos:end="13:53"><name pos:start="13:43" pos:end="13:53">GlusterConf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">QemuOpts</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">Error</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:20">local_err</name> <init pos:start="17:22" pos:end="17:27">= <expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:16"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:14">char</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:24">filename</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:66"><expr pos:start="23:5" pos:end="23:65"><name pos:start="23:5" pos:end="23:8">opts</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:65"><name pos:start="23:12" pos:end="23:27">qemu_opts_create</name><argument_list pos:start="23:28" pos:end="23:65">(<argument pos:start="23:29" pos:end="23:41"><expr pos:start="23:29" pos:end="23:41"><operator pos:start="23:29" pos:end="23:29">&amp;</operator><name pos:start="23:30" pos:end="23:41">runtime_opts</name></expr></argument>, <argument pos:start="23:44" pos:end="23:47"><expr pos:start="23:44" pos:end="23:47"><name pos:start="23:44" pos:end="23:47">NULL</name></expr></argument>, <argument pos:start="23:50" pos:end="23:50"><expr pos:start="23:50" pos:end="23:50"><literal type="number" pos:start="23:50" pos:end="23:50">0</literal></expr></argument>, <argument pos:start="23:53" pos:end="23:64"><expr pos:start="23:53" pos:end="23:64"><operator pos:start="23:53" pos:end="23:53">&amp;</operator><name pos:start="23:54" pos:end="23:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><call pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:26">qemu_opts_absorb_qdict</name><argument_list pos:start="25:27" pos:end="25:53">(<argument pos:start="25:28" pos:end="25:31"><expr pos:start="25:28" pos:end="25:31"><name pos:start="25:28" pos:end="25:31">opts</name></expr></argument>, <argument pos:start="25:34" pos:end="25:40"><expr pos:start="25:34" pos:end="25:40"><name pos:start="25:34" pos:end="25:40">options</name></expr></argument>, <argument pos:start="25:43" pos:end="25:52"><expr pos:start="25:43" pos:end="25:52"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:17">local_err</name></expr>)</condition> <block pos:start="27:20" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:17">

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><call pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:23">error_propagate</name><argument_list pos:start="29:24" pos:end="29:40">(<argument pos:start="29:25" pos:end="29:28"><expr pos:start="29:25" pos:end="29:28"><name pos:start="29:25" pos:end="29:28">errp</name></expr></argument>, <argument pos:start="29:31" pos:end="29:39"><expr pos:start="29:31" pos:end="29:39"><name pos:start="29:31" pos:end="29:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <operator pos:start="31:15" pos:end="31:15">-</operator><name pos:start="31:16" pos:end="31:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:46"><expr pos:start="39:5" pos:end="39:45"><name pos:start="39:5" pos:end="39:12">filename</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:45"><name pos:start="39:16" pos:end="39:27">qemu_opt_get</name><argument_list pos:start="39:28" pos:end="39:45">(<argument pos:start="39:29" pos:end="39:32"><expr pos:start="39:29" pos:end="39:32"><name pos:start="39:29" pos:end="39:32">opts</name></expr></argument>, <argument pos:start="39:35" pos:end="39:44"><expr pos:start="39:35" pos:end="39:44"><literal type="string" pos:start="39:35" pos:end="39:44">"filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:55"><expr pos:start="43:5" pos:end="43:54"><name pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:11">glfs</name></name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:54"><name pos:start="43:15" pos:end="43:31">qemu_gluster_init</name><argument_list pos:start="43:32" pos:end="43:54">(<argument pos:start="43:33" pos:end="43:37"><expr pos:start="43:33" pos:end="43:37"><name pos:start="43:33" pos:end="43:37">gconf</name></expr></argument>, <argument pos:start="43:40" pos:end="43:47"><expr pos:start="43:40" pos:end="43:47"><name pos:start="43:40" pos:end="43:47">filename</name></expr></argument>, <argument pos:start="43:50" pos:end="43:53"><expr pos:start="43:50" pos:end="43:53"><name pos:start="43:50" pos:end="43:53">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:17">(<expr pos:start="45:9" pos:end="45:16"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:16"><name pos:start="45:10" pos:end="45:10">s</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:16">glfs</name></name></expr>)</condition> <block pos:start="45:19" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:17">

        <expr_stmt pos:start="47:9" pos:end="47:21"><expr pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <operator pos:start="47:15" pos:end="47:15">-</operator><name pos:start="47:16" pos:end="47:20">errno</name></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:17">goto <name pos:start="49:14" pos:end="49:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:33">(<expr pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:18">bdrv_flags</name> <operator pos:start="55:20" pos:end="55:20">&amp;</operator> <name pos:start="55:22" pos:end="55:32">BDRV_O_RDWR</name></expr>)</condition> <block pos:start="55:35" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:29">

        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:18">open_flags</name> <operator pos:start="57:20" pos:end="57:21">|=</operator> <name pos:start="57:23" pos:end="57:28">O_RDWR</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="63:5">else <block pos:start="59:12" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:31">

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:18">open_flags</name> <operator pos:start="61:20" pos:end="61:21">|=</operator> <name pos:start="61:23" pos:end="61:30">O_RDONLY</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:38">(<expr pos:start="67:9" pos:end="67:37"><operator pos:start="67:9" pos:end="67:9">(</operator><name pos:start="67:10" pos:end="67:19">bdrv_flags</name> <operator pos:start="67:21" pos:end="67:21">&amp;</operator> <name pos:start="67:23" pos:end="67:36">BDRV_O_NOCACHE</name><operator pos:start="67:37" pos:end="67:37">)</operator></expr>)</condition> <block pos:start="67:40" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:31">

        <expr_stmt pos:start="69:9" pos:end="69:31"><expr pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:18">open_flags</name> <operator pos:start="69:20" pos:end="69:21">|=</operator> <name pos:start="69:23" pos:end="69:30">O_DIRECT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:57"><expr pos:start="75:5" pos:end="75:56"><name pos:start="75:5" pos:end="75:9"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:9">fd</name></name> <operator pos:start="75:11" pos:end="75:11">=</operator> <call pos:start="75:13" pos:end="75:56"><name pos:start="75:13" pos:end="75:21">glfs_open</name><argument_list pos:start="75:22" pos:end="75:56">(<argument pos:start="75:23" pos:end="75:29"><expr pos:start="75:23" pos:end="75:29"><name pos:start="75:23" pos:end="75:29"><name pos:start="75:23" pos:end="75:23">s</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:29">glfs</name></name></expr></argument>, <argument pos:start="75:32" pos:end="75:43"><expr pos:start="75:32" pos:end="75:43"><name pos:start="75:32" pos:end="75:43"><name pos:start="75:32" pos:end="75:36">gconf</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:43">image</name></name></expr></argument>, <argument pos:start="75:46" pos:end="75:55"><expr pos:start="75:46" pos:end="75:55"><name pos:start="75:46" pos:end="75:55">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:15">(<expr pos:start="77:9" pos:end="77:14"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:14"><name pos:start="77:10" pos:end="77:10">s</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:14">fd</name></name></expr>)</condition> <block pos:start="77:17" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:21">

        <expr_stmt pos:start="79:9" pos:end="79:21"><expr pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <operator pos:start="79:15" pos:end="79:15">-</operator><name pos:start="79:16" pos:end="79:20">errno</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="85:1" pos:end="85:4"><name pos:start="85:1" pos:end="85:3">out</name>:</label>

    <expr_stmt pos:start="87:5" pos:end="87:24"><expr pos:start="87:5" pos:end="87:23"><call pos:start="87:5" pos:end="87:23"><name pos:start="87:5" pos:end="87:17">qemu_opts_del</name><argument_list pos:start="87:18" pos:end="87:23">(<argument pos:start="87:19" pos:end="87:22"><expr pos:start="87:19" pos:end="87:22"><name pos:start="87:19" pos:end="87:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:35"><expr pos:start="89:5" pos:end="89:34"><call pos:start="89:5" pos:end="89:34"><name pos:start="89:5" pos:end="89:27">qemu_gluster_gconf_free</name><argument_list pos:start="89:28" pos:end="89:34">(<argument pos:start="89:29" pos:end="89:33"><expr pos:start="89:29" pos:end="89:33"><name pos:start="89:29" pos:end="89:33">gconf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:13">(<expr pos:start="91:9" pos:end="91:12"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:12">ret</name></expr>)</condition> <block pos:start="91:15" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:19">

        <return pos:start="93:9" pos:end="93:19">return <expr pos:start="93:16" pos:end="93:18"><name pos:start="93:16" pos:end="93:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="101:5"><if pos:start="97:5" pos:end="101:5">if <condition pos:start="97:8" pos:end="97:14">(<expr pos:start="97:9" pos:end="97:13"><name pos:start="97:9" pos:end="97:13"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:13">fd</name></name></expr>)</condition> <block pos:start="97:16" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:26">

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><call pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:18">glfs_close</name><argument_list pos:start="99:19" pos:end="99:25">(<argument pos:start="99:20" pos:end="99:24"><expr pos:start="99:20" pos:end="99:24"><name pos:start="99:20" pos:end="99:24"><name pos:start="99:20" pos:end="99:20">s</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:24">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="103:5" pos:end="107:5"><if pos:start="103:5" pos:end="107:5">if <condition pos:start="103:8" pos:end="103:16">(<expr pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:15">glfs</name></name></expr>)</condition> <block pos:start="103:18" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:27">

        <expr_stmt pos:start="105:9" pos:end="105:27"><expr pos:start="105:9" pos:end="105:26"><call pos:start="105:9" pos:end="105:26"><name pos:start="105:9" pos:end="105:17">glfs_fini</name><argument_list pos:start="105:18" pos:end="105:26">(<argument pos:start="105:19" pos:end="105:25"><expr pos:start="105:19" pos:end="105:25"><name pos:start="105:19" pos:end="105:25"><name pos:start="105:19" pos:end="105:19">s</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:25">glfs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="109:5" pos:end="109:15">return <expr pos:start="109:12" pos:end="109:14"><name pos:start="109:12" pos:end="109:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
