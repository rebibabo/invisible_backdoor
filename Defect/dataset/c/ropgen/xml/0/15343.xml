<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15343.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">save_user_regs</name><parameter_list pos:start="1:26" pos:end="3:37">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:37">CPUPPCState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">env</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:73"><decl pos:start="1:45" pos:end="1:73"><type pos:start="1:45" pos:end="1:73"><name pos:start="1:45" pos:end="1:66"><name pos:start="1:45" pos:end="1:50">struct</name> <name pos:start="1:52" pos:end="1:66">target_mcontext</name></name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">frame</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:36"><decl pos:start="3:27" pos:end="3:36"><type pos:start="3:27" pos:end="3:36"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:36">sigret</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="189:1">{<block_content pos:start="7:5" pos:end="187:13">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:20">msr</name> <init pos:start="7:22" pos:end="7:31">= <expr pos:start="7:24" pos:end="7:31"><name pos:start="7:24" pos:end="7:31"><name pos:start="7:24" pos:end="7:26">env</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:31">msr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:20">ccr</name> <init pos:start="11:22" pos:end="11:24">= <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="19:57">/* In general, the kernel attempts to be intelligent about what it

       needs to save for Altivec/FP/SPE registers.  We don't care that

       much, so we just go ahead and save everything.  */</comment>



    <comment type="block" pos:start="23:5" pos:end="23:34">/* Save general registers.  */</comment>

    <for pos:start="25:5" pos:end="33:5">for <control pos:start="25:9" pos:end="25:46">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:41"><expr pos:start="25:17" pos:end="25:40"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <call pos:start="25:21" pos:end="25:40"><name pos:start="25:21" pos:end="25:30">ARRAY_SIZE</name><argument_list pos:start="25:31" pos:end="25:40">(<argument pos:start="25:32" pos:end="25:39"><expr pos:start="25:32" pos:end="25:39"><name pos:start="25:32" pos:end="25:39"><name pos:start="25:32" pos:end="25:34">env</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:39">gpr</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:43">i</name><operator pos:start="25:44" pos:end="25:45">++</operator></expr></incr>)</control> <block pos:start="25:48" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:9">

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:57">(<expr pos:start="27:13" pos:end="27:56"><call pos:start="27:13" pos:end="27:56"><name pos:start="27:13" pos:end="27:22">__put_user</name><argument_list pos:start="27:23" pos:end="27:56">(<argument pos:start="27:24" pos:end="27:34"><expr pos:start="27:24" pos:end="27:34"><name pos:start="27:24" pos:end="27:34"><name pos:start="27:24" pos:end="27:26">env</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:31">gpr</name><index pos:start="27:32" pos:end="27:34">[<expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="27:37" pos:end="27:55"><expr pos:start="27:37" pos:end="27:55"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:55"><name pos:start="27:38" pos:end="27:42">frame</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:52">mc_gregs</name><index pos:start="27:53" pos:end="27:55">[<expr pos:start="27:54" pos:end="27:54"><name pos:start="27:54" pos:end="27:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:59" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:21">

            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="35:5" pos:end="43:17"><if pos:start="35:5" pos:end="43:17">if <condition pos:start="35:8" pos:end="41:65">(<expr pos:start="35:9" pos:end="41:64"><call pos:start="35:9" pos:end="35:61"><name pos:start="35:9" pos:end="35:18">__put_user</name><argument_list pos:start="35:19" pos:end="35:61">(<argument pos:start="35:20" pos:end="35:27"><expr pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:22">env</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:27">nip</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:60"><expr pos:start="35:30" pos:end="35:60"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:60"><name pos:start="35:31" pos:end="35:35">frame</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:45">mc_gregs</name><index pos:start="35:46" pos:end="35:60">[<expr pos:start="35:47" pos:end="35:59"><name pos:start="35:47" pos:end="35:59">TARGET_PT_NIP</name></expr>]</index></name></expr></argument>)</argument_list></call>

        <operator pos:start="37:9" pos:end="37:10">||</operator> <call pos:start="37:12" pos:end="37:64"><name pos:start="37:12" pos:end="37:21">__put_user</name><argument_list pos:start="37:22" pos:end="37:64">(<argument pos:start="37:23" pos:end="37:30"><expr pos:start="37:23" pos:end="37:30"><name pos:start="37:23" pos:end="37:30"><name pos:start="37:23" pos:end="37:25">env</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:30">ctr</name></name></expr></argument>, <argument pos:start="37:33" pos:end="37:63"><expr pos:start="37:33" pos:end="37:63"><operator pos:start="37:33" pos:end="37:33">&amp;</operator><name pos:start="37:34" pos:end="37:63"><name pos:start="37:34" pos:end="37:38">frame</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:48">mc_gregs</name><index pos:start="37:49" pos:end="37:63">[<expr pos:start="37:50" pos:end="37:62"><name pos:start="37:50" pos:end="37:62">TARGET_PT_CTR</name></expr>]</index></name></expr></argument>)</argument_list></call>

        <operator pos:start="39:9" pos:end="39:10">||</operator> <call pos:start="39:12" pos:end="39:63"><name pos:start="39:12" pos:end="39:21">__put_user</name><argument_list pos:start="39:22" pos:end="39:63">(<argument pos:start="39:23" pos:end="39:29"><expr pos:start="39:23" pos:end="39:29"><name pos:start="39:23" pos:end="39:29"><name pos:start="39:23" pos:end="39:25">env</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:29">lr</name></name></expr></argument>, <argument pos:start="39:32" pos:end="39:62"><expr pos:start="39:32" pos:end="39:62"><operator pos:start="39:32" pos:end="39:32">&amp;</operator><name pos:start="39:33" pos:end="39:62"><name pos:start="39:33" pos:end="39:37">frame</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:47">mc_gregs</name><index pos:start="39:48" pos:end="39:62">[<expr pos:start="39:49" pos:end="39:61"><name pos:start="39:49" pos:end="39:61">TARGET_PT_LNK</name></expr>]</index></name></expr></argument>)</argument_list></call>

        <operator pos:start="41:9" pos:end="41:10">||</operator> <call pos:start="41:12" pos:end="41:64"><name pos:start="41:12" pos:end="41:21">__put_user</name><argument_list pos:start="41:22" pos:end="41:64">(<argument pos:start="41:23" pos:end="41:30"><expr pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:25">env</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:30">xer</name></name></expr></argument>, <argument pos:start="41:33" pos:end="41:63"><expr pos:start="41:33" pos:end="41:63"><operator pos:start="41:33" pos:end="41:33">&amp;</operator><name pos:start="41:34" pos:end="41:63"><name pos:start="41:34" pos:end="41:38">frame</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:48">mc_gregs</name><index pos:start="41:49" pos:end="41:63">[<expr pos:start="41:50" pos:end="41:62"><name pos:start="41:50" pos:end="41:62">TARGET_PT_XER</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:17"><block_content pos:start="43:9" pos:end="43:17">

        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="47:5" pos:end="51:5">for <control pos:start="47:9" pos:end="47:46">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:41"><expr pos:start="47:17" pos:end="47:40"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <call pos:start="47:21" pos:end="47:40"><name pos:start="47:21" pos:end="47:30">ARRAY_SIZE</name><argument_list pos:start="47:31" pos:end="47:40">(<argument pos:start="47:32" pos:end="47:39"><expr pos:start="47:32" pos:end="47:39"><name pos:start="47:32" pos:end="47:39"><name pos:start="47:32" pos:end="47:34">env</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:39">crf</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="47:43" pos:end="47:45"><expr pos:start="47:43" pos:end="47:45"><name pos:start="47:43" pos:end="47:43">i</name><operator pos:start="47:44" pos:end="47:45">++</operator></expr></incr>)</control> <block pos:start="47:48" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:51">

        <expr_stmt pos:start="49:9" pos:end="49:51"><expr pos:start="49:9" pos:end="49:50"><name pos:start="49:9" pos:end="49:11">ccr</name> <operator pos:start="49:13" pos:end="49:14">|=</operator> <name pos:start="49:16" pos:end="49:26"><name pos:start="49:16" pos:end="49:18">env</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:23">crf</name><index pos:start="49:24" pos:end="49:26">[<expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">i</name></expr>]</index></name> <operator pos:start="49:28" pos:end="49:29">&lt;&lt;</operator> <operator pos:start="49:31" pos:end="49:31">(</operator><literal type="number" pos:start="49:32" pos:end="49:35">32</literal> <operator pos:start="49:35" pos:end="49:35">-</operator> <operator pos:start="49:37" pos:end="49:37">(</operator><operator pos:start="49:38" pos:end="49:38">(</operator><name pos:start="49:39" pos:end="49:39">i</name> <operator pos:start="49:41" pos:end="49:41">+</operator> <literal type="number" pos:start="49:43" pos:end="49:43">1</literal><operator pos:start="49:44" pos:end="49:44">)</operator> <operator pos:start="49:46" pos:end="49:46">*</operator> <literal type="number" pos:start="49:48" pos:end="49:48">4</literal><operator pos:start="49:49" pos:end="49:49">)</operator><operator pos:start="49:50" pos:end="49:50">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="53:5" pos:end="55:17"><if pos:start="53:5" pos:end="55:17">if <condition pos:start="53:8" pos:end="53:57">(<expr pos:start="53:9" pos:end="53:56"><call pos:start="53:9" pos:end="53:56"><name pos:start="53:9" pos:end="53:18">__put_user</name><argument_list pos:start="53:19" pos:end="53:56">(<argument pos:start="53:20" pos:end="53:22"><expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">ccr</name></expr></argument>, <argument pos:start="53:25" pos:end="53:55"><expr pos:start="53:25" pos:end="53:55"><operator pos:start="53:25" pos:end="53:25">&amp;</operator><name pos:start="53:26" pos:end="53:55"><name pos:start="53:26" pos:end="53:30">frame</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:40">mc_gregs</name><index pos:start="53:41" pos:end="53:55">[<expr pos:start="53:42" pos:end="53:54"><name pos:start="53:42" pos:end="53:54">TARGET_PT_CCR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:17"><block_content pos:start="55:9" pos:end="55:17">

        <return pos:start="55:9" pos:end="55:17">return <expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:47">/* Save Altivec registers if necessary.  */</comment>

    <if_stmt pos:start="61:5" pos:end="93:5"><if pos:start="61:5" pos:end="93:5">if <condition pos:start="61:8" pos:end="61:39">(<expr pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:11">env</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:24">insns_flags</name></name> <operator pos:start="61:26" pos:end="61:26">&amp;</operator> <name pos:start="61:28" pos:end="61:38">PPC_ALTIVEC</name></expr>)</condition> <block pos:start="61:41" pos:end="93:5">{<block_content pos:start="63:9" pos:end="91:21">

        <for pos:start="63:9" pos:end="79:9">for <control pos:start="63:13" pos:end="63:50">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">i</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:45"><expr pos:start="63:21" pos:end="63:44"><name pos:start="63:21" pos:end="63:21">i</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <call pos:start="63:25" pos:end="63:44"><name pos:start="63:25" pos:end="63:34">ARRAY_SIZE</name><argument_list pos:start="63:35" pos:end="63:44">(<argument pos:start="63:36" pos:end="63:43"><expr pos:start="63:36" pos:end="63:43"><name pos:start="63:36" pos:end="63:43"><name pos:start="63:36" pos:end="63:38">env</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:43">avr</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="63:47" pos:end="63:49"><expr pos:start="63:47" pos:end="63:49"><name pos:start="63:47" pos:end="63:47">i</name><operator pos:start="63:48" pos:end="63:49">++</operator></expr></incr>)</control> <block pos:start="63:52" pos:end="79:9">{<block_content pos:start="65:13" pos:end="77:13">

            <decl_stmt pos:start="65:13" pos:end="65:42"><decl pos:start="65:13" pos:end="65:41"><type pos:start="65:13" pos:end="65:23"><name pos:start="65:13" pos:end="65:21">ppc_avr_t</name> <modifier pos:start="65:23" pos:end="65:23">*</modifier></type><name pos:start="65:24" pos:end="65:26">avr</name> <init pos:start="65:28" pos:end="65:41">= <expr pos:start="65:30" pos:end="65:41"><operator pos:start="65:30" pos:end="65:30">&amp;</operator><name pos:start="65:31" pos:end="65:41"><name pos:start="65:31" pos:end="65:33">env</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:38">avr</name><index pos:start="65:39" pos:end="65:41">[<expr pos:start="65:40" pos:end="65:40"><name pos:start="65:40" pos:end="65:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="67:13" pos:end="67:58"><decl pos:start="67:13" pos:end="67:57"><type pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:21">ppc_avr_t</name> <modifier pos:start="67:23" pos:end="67:23">*</modifier></type><name pos:start="67:24" pos:end="67:27">vreg</name> <init pos:start="67:29" pos:end="67:57">= <expr pos:start="67:31" pos:end="67:57"><operator pos:start="67:31" pos:end="67:31">&amp;</operator><name pos:start="67:32" pos:end="67:57"><name pos:start="67:32" pos:end="67:36">frame</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:46">mc_vregs</name><operator pos:start="67:47" pos:end="67:47">.</operator><name pos:start="67:48" pos:end="67:54">altivec</name><index pos:start="67:55" pos:end="67:57">[<expr pos:start="67:56" pos:end="67:56"><name pos:start="67:56" pos:end="67:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="71:13" pos:end="77:13"><if pos:start="71:13" pos:end="77:13">if <condition pos:start="71:16" pos:end="73:55">(<expr pos:start="71:17" pos:end="73:54"><call pos:start="71:17" pos:end="71:54"><name pos:start="71:17" pos:end="71:26">__put_user</name><argument_list pos:start="71:27" pos:end="71:54">(<argument pos:start="71:28" pos:end="71:38"><expr pos:start="71:28" pos:end="71:38"><name pos:start="71:28" pos:end="71:38"><name pos:start="71:28" pos:end="71:30">avr</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:35">u64</name><index pos:start="71:36" pos:end="71:38">[<expr pos:start="71:37" pos:end="71:37"><literal type="number" pos:start="71:37" pos:end="71:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="71:41" pos:end="71:53"><expr pos:start="71:41" pos:end="71:53"><operator pos:start="71:41" pos:end="71:41">&amp;</operator><name pos:start="71:42" pos:end="71:53"><name pos:start="71:42" pos:end="71:45">vreg</name><operator pos:start="71:46" pos:end="71:47">-&gt;</operator><name pos:start="71:48" pos:end="71:50">u64</name><index pos:start="71:51" pos:end="71:53">[<expr pos:start="71:52" pos:end="71:52"><literal type="number" pos:start="71:52" pos:end="71:52">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="71:56" pos:end="71:57">||</operator>

                <call pos:start="73:17" pos:end="73:54"><name pos:start="73:17" pos:end="73:26">__put_user</name><argument_list pos:start="73:27" pos:end="73:54">(<argument pos:start="73:28" pos:end="73:38"><expr pos:start="73:28" pos:end="73:38"><name pos:start="73:28" pos:end="73:38"><name pos:start="73:28" pos:end="73:30">avr</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:35">u64</name><index pos:start="73:36" pos:end="73:38">[<expr pos:start="73:37" pos:end="73:37"><literal type="number" pos:start="73:37" pos:end="73:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:41" pos:end="73:53"><expr pos:start="73:41" pos:end="73:53"><operator pos:start="73:41" pos:end="73:41">&amp;</operator><name pos:start="73:42" pos:end="73:53"><name pos:start="73:42" pos:end="73:45">vreg</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:50">u64</name><index pos:start="73:51" pos:end="73:53">[<expr pos:start="73:52" pos:end="73:52"><literal type="number" pos:start="73:52" pos:end="73:52">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:57" pos:end="77:13">{<block_content pos:start="75:17" pos:end="75:25">

                <return pos:start="75:17" pos:end="75:25">return <expr pos:start="75:24" pos:end="75:24"><literal type="number" pos:start="75:24" pos:end="75:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="81:9" pos:end="83:51">/* Set MSR_VR in the saved MSR value to indicate that

           frame-&gt;mc_vregs contains valid data.  */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:22"><expr pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:11">msr</name> <operator pos:start="85:13" pos:end="85:14">|=</operator> <name pos:start="85:16" pos:end="85:21">MSR_VR</name></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="91:21"><if pos:start="87:9" pos:end="91:21">if <condition pos:start="87:12" pos:end="89:60">(<expr pos:start="87:13" pos:end="89:59"><call pos:start="87:13" pos:end="89:59"><name pos:start="87:13" pos:end="87:22">__put_user</name><argument_list pos:start="87:23" pos:end="89:59">(<argument pos:start="87:24" pos:end="87:53"><expr pos:start="87:24" pos:end="87:53"><operator pos:start="87:24" pos:end="87:24">(</operator><name pos:start="87:25" pos:end="87:32">uint32_t</name><operator pos:start="87:33" pos:end="87:33">)</operator><name pos:start="87:34" pos:end="87:53"><name pos:start="87:34" pos:end="87:36">env</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:41">spr</name><index pos:start="87:42" pos:end="87:53">[<expr pos:start="87:43" pos:end="87:52"><name pos:start="87:43" pos:end="87:52">SPR_VRSAVE</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="89:24" pos:end="89:58"><expr pos:start="89:24" pos:end="89:58"><operator pos:start="89:24" pos:end="89:24">&amp;</operator><name pos:start="89:25" pos:end="89:51"><name pos:start="89:25" pos:end="89:29">frame</name><operator pos:start="89:30" pos:end="89:31">-&gt;</operator><name pos:start="89:32" pos:end="89:39">mc_vregs</name><operator pos:start="89:40" pos:end="89:40">.</operator><name pos:start="89:41" pos:end="89:47">altivec</name><index pos:start="89:48" pos:end="89:51">[<expr pos:start="89:49" pos:end="89:50"><literal type="number" pos:start="89:49" pos:end="89:50">32</literal></expr>]</index></name><operator pos:start="89:52" pos:end="89:52">.</operator><name pos:start="89:53" pos:end="89:58"><name pos:start="89:53" pos:end="89:55">u32</name><index pos:start="89:56" pos:end="89:58">[<expr pos:start="89:57" pos:end="89:57"><literal type="number" pos:start="89:57" pos:end="89:57">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:21"><block_content pos:start="91:13" pos:end="91:21">

            <return pos:start="91:13" pos:end="91:21">return <expr pos:start="91:20" pos:end="91:20"><literal type="number" pos:start="91:20" pos:end="91:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:41">/* Save floating point registers.  */</comment>

    <if_stmt pos:start="99:5" pos:end="115:5"><if pos:start="99:5" pos:end="115:5">if <condition pos:start="99:8" pos:end="99:37">(<expr pos:start="99:9" pos:end="99:36"><name pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:11">env</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:24">insns_flags</name></name> <operator pos:start="99:26" pos:end="99:26">&amp;</operator> <name pos:start="99:28" pos:end="99:36">PPC_FLOAT</name></expr>)</condition> <block pos:start="99:39" pos:end="115:5">{<block_content pos:start="101:9" pos:end="113:21">

        <for pos:start="101:9" pos:end="109:9">for <control pos:start="101:13" pos:end="101:50">(<init pos:start="101:14" pos:end="101:19"><expr pos:start="101:14" pos:end="101:18"><name pos:start="101:14" pos:end="101:14">i</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="number" pos:start="101:18" pos:end="101:18">0</literal></expr>;</init> <condition pos:start="101:21" pos:end="101:45"><expr pos:start="101:21" pos:end="101:44"><name pos:start="101:21" pos:end="101:21">i</name> <operator pos:start="101:23" pos:end="101:23">&lt;</operator> <call pos:start="101:25" pos:end="101:44"><name pos:start="101:25" pos:end="101:34">ARRAY_SIZE</name><argument_list pos:start="101:35" pos:end="101:44">(<argument pos:start="101:36" pos:end="101:43"><expr pos:start="101:36" pos:end="101:43"><name pos:start="101:36" pos:end="101:43"><name pos:start="101:36" pos:end="101:38">env</name><operator pos:start="101:39" pos:end="101:40">-&gt;</operator><name pos:start="101:41" pos:end="101:43">fpr</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="101:47" pos:end="101:49"><expr pos:start="101:47" pos:end="101:49"><name pos:start="101:47" pos:end="101:47">i</name><operator pos:start="101:48" pos:end="101:49">++</operator></expr></incr>)</control> <block pos:start="101:52" pos:end="109:9">{<block_content pos:start="103:13" pos:end="107:13">

            <if_stmt pos:start="103:13" pos:end="107:13"><if pos:start="103:13" pos:end="107:13">if <condition pos:start="103:16" pos:end="103:61">(<expr pos:start="103:17" pos:end="103:60"><call pos:start="103:17" pos:end="103:60"><name pos:start="103:17" pos:end="103:26">__put_user</name><argument_list pos:start="103:27" pos:end="103:60">(<argument pos:start="103:28" pos:end="103:38"><expr pos:start="103:28" pos:end="103:38"><name pos:start="103:28" pos:end="103:38"><name pos:start="103:28" pos:end="103:30">env</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:35">fpr</name><index pos:start="103:36" pos:end="103:38">[<expr pos:start="103:37" pos:end="103:37"><name pos:start="103:37" pos:end="103:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="103:41" pos:end="103:59"><expr pos:start="103:41" pos:end="103:59"><operator pos:start="103:41" pos:end="103:41">&amp;</operator><name pos:start="103:42" pos:end="103:59"><name pos:start="103:42" pos:end="103:46">frame</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:56">mc_fregs</name><index pos:start="103:57" pos:end="103:59">[<expr pos:start="103:58" pos:end="103:58"><name pos:start="103:58" pos:end="103:58">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:63" pos:end="107:13">{<block_content pos:start="105:17" pos:end="105:25">

                <return pos:start="105:17" pos:end="105:25">return <expr pos:start="105:24" pos:end="105:24"><literal type="number" pos:start="105:24" pos:end="105:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="111:9" pos:end="113:21"><if pos:start="111:9" pos:end="113:21">if <condition pos:start="111:12" pos:end="111:68">(<expr pos:start="111:13" pos:end="111:67"><call pos:start="111:13" pos:end="111:67"><name pos:start="111:13" pos:end="111:22">__put_user</name><argument_list pos:start="111:23" pos:end="111:67">(<argument pos:start="111:24" pos:end="111:44"><expr pos:start="111:24" pos:end="111:44"><operator pos:start="111:24" pos:end="111:24">(</operator><name pos:start="111:25" pos:end="111:32">uint64_t</name><operator pos:start="111:33" pos:end="111:33">)</operator> <name pos:start="111:35" pos:end="111:44"><name pos:start="111:35" pos:end="111:37">env</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:44">fpscr</name></name></expr></argument>, <argument pos:start="111:47" pos:end="111:66"><expr pos:start="111:47" pos:end="111:66"><operator pos:start="111:47" pos:end="111:47">&amp;</operator><name pos:start="111:48" pos:end="111:66"><name pos:start="111:48" pos:end="111:52">frame</name><operator pos:start="111:53" pos:end="111:54">-&gt;</operator><name pos:start="111:55" pos:end="111:62">mc_fregs</name><index pos:start="111:63" pos:end="111:66">[<expr pos:start="111:64" pos:end="111:65"><literal type="number" pos:start="111:64" pos:end="111:65">32</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:21"><block_content pos:start="113:13" pos:end="113:21">

            <return pos:start="113:13" pos:end="113:21">return <expr pos:start="113:20" pos:end="113:20"><literal type="number" pos:start="113:20" pos:end="113:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="119:5" pos:end="119:68">/* Save SPE registers.  The kernel only saves the high half.  */</comment>

    <if_stmt pos:start="121:5" pos:end="159:5"><if pos:start="121:5" pos:end="159:5">if <condition pos:start="121:8" pos:end="121:35">(<expr pos:start="121:9" pos:end="121:34"><name pos:start="121:9" pos:end="121:24"><name pos:start="121:9" pos:end="121:11">env</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:24">insns_flags</name></name> <operator pos:start="121:26" pos:end="121:26">&amp;</operator> <name pos:start="121:28" pos:end="121:34">PPC_SPE</name></expr>)</condition> <block pos:start="121:37" pos:end="159:5">{<block_content pos:start="125:9" pos:end="157:21">

<cpp:if pos:start="123:1" pos:end="123:25">#<cpp:directive pos:start="123:2" pos:end="123:3">if</cpp:directive> <expr pos:start="123:5" pos:end="123:25"><call pos:start="123:5" pos:end="123:25"><name pos:start="123:5" pos:end="123:11">defined</name><argument_list pos:start="123:12" pos:end="123:25">(<argument pos:start="123:13" pos:end="123:24"><expr pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <for pos:start="125:9" pos:end="136:0">for <control pos:start="125:13" pos:end="125:50">(<init pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:18"><name pos:start="125:14" pos:end="125:14">i</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>;</init> <condition pos:start="125:21" pos:end="125:45"><expr pos:start="125:21" pos:end="125:44"><name pos:start="125:21" pos:end="125:21">i</name> <operator pos:start="125:23" pos:end="125:23">&lt;</operator> <call pos:start="125:25" pos:end="125:44"><name pos:start="125:25" pos:end="125:34">ARRAY_SIZE</name><argument_list pos:start="125:35" pos:end="125:44">(<argument pos:start="125:36" pos:end="125:43"><expr pos:start="125:36" pos:end="125:43"><name pos:start="125:36" pos:end="125:43"><name pos:start="125:36" pos:end="125:38">env</name><operator pos:start="125:39" pos:end="125:40">-&gt;</operator><name pos:start="125:41" pos:end="125:43">gpr</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="125:47" pos:end="125:49"><expr pos:start="125:47" pos:end="125:49"><name pos:start="125:47" pos:end="125:47">i</name><operator pos:start="125:48" pos:end="125:49">++</operator></expr></incr>)</control> <block pos:start="125:52" pos:end="136:0">{<block_content pos:start="127:13" pos:end="131:13">

            <if_stmt pos:start="127:13" pos:end="131:13"><if pos:start="127:13" pos:end="131:13">if <condition pos:start="127:16" pos:end="127:71">(<expr pos:start="127:17" pos:end="127:70"><call pos:start="127:17" pos:end="127:70"><name pos:start="127:17" pos:end="127:26">__put_user</name><argument_list pos:start="127:27" pos:end="127:70">(<argument pos:start="127:28" pos:end="127:44"><expr pos:start="127:28" pos:end="127:44"><name pos:start="127:28" pos:end="127:38"><name pos:start="127:28" pos:end="127:30">env</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:35">gpr</name><index pos:start="127:36" pos:end="127:38">[<expr pos:start="127:37" pos:end="127:37"><name pos:start="127:37" pos:end="127:37">i</name></expr>]</index></name> <operator pos:start="127:40" pos:end="127:41">&gt;&gt;</operator> <literal type="number" pos:start="127:43" pos:end="127:44">32</literal></expr></argument>, <argument pos:start="127:47" pos:end="127:69"><expr pos:start="127:47" pos:end="127:69"><operator pos:start="127:47" pos:end="127:47">&amp;</operator><name pos:start="127:48" pos:end="127:69"><name pos:start="127:48" pos:end="127:52">frame</name><operator pos:start="127:53" pos:end="127:54">-&gt;</operator><name pos:start="127:55" pos:end="127:62">mc_vregs</name><operator pos:start="127:63" pos:end="127:63">.</operator><name pos:start="127:64" pos:end="127:66">spe</name><index pos:start="127:67" pos:end="127:69">[<expr pos:start="127:68" pos:end="127:68"><name pos:start="127:68" pos:end="127:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:73" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:25">

                <return pos:start="129:17" pos:end="129:25">return <expr pos:start="129:24" pos:end="129:24"><literal type="number" pos:start="129:24" pos:end="129:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

<cpp:else pos:start="135:1" pos:end="135:5">#<cpp:directive pos:start="135:2" pos:end="135:5">else</cpp:directive></cpp:else>

        <for pos:start="137:9" pos:end="148:0">for <control pos:start="137:13" pos:end="137:51">(<init pos:start="137:14" pos:end="137:19"><expr pos:start="137:14" pos:end="137:18"><name pos:start="137:14" pos:end="137:14">i</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <literal type="number" pos:start="137:18" pos:end="137:18">0</literal></expr>;</init> <condition pos:start="137:21" pos:end="137:46"><expr pos:start="137:21" pos:end="137:45"><name pos:start="137:21" pos:end="137:21">i</name> <operator pos:start="137:23" pos:end="137:23">&lt;</operator> <call pos:start="137:25" pos:end="137:45"><name pos:start="137:25" pos:end="137:34">ARRAY_SIZE</name><argument_list pos:start="137:35" pos:end="137:45">(<argument pos:start="137:36" pos:end="137:44"><expr pos:start="137:36" pos:end="137:44"><name pos:start="137:36" pos:end="137:44"><name pos:start="137:36" pos:end="137:38">env</name><operator pos:start="137:39" pos:end="137:40">-&gt;</operator><name pos:start="137:41" pos:end="137:44">gprh</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="137:48" pos:end="137:50"><expr pos:start="137:48" pos:end="137:50"><name pos:start="137:48" pos:end="137:48">i</name><operator pos:start="137:49" pos:end="137:50">++</operator></expr></incr>)</control> <block pos:start="137:53" pos:end="148:0">{<block_content pos:start="139:13" pos:end="143:13">

            <if_stmt pos:start="139:13" pos:end="143:13"><if pos:start="139:13" pos:end="143:13">if <condition pos:start="139:16" pos:end="139:66">(<expr pos:start="139:17" pos:end="139:65"><call pos:start="139:17" pos:end="139:65"><name pos:start="139:17" pos:end="139:26">__put_user</name><argument_list pos:start="139:27" pos:end="139:65">(<argument pos:start="139:28" pos:end="139:39"><expr pos:start="139:28" pos:end="139:39"><name pos:start="139:28" pos:end="139:39"><name pos:start="139:28" pos:end="139:30">env</name><operator pos:start="139:31" pos:end="139:32">-&gt;</operator><name pos:start="139:33" pos:end="139:36">gprh</name><index pos:start="139:37" pos:end="139:39">[<expr pos:start="139:38" pos:end="139:38"><name pos:start="139:38" pos:end="139:38">i</name></expr>]</index></name></expr></argument>, <argument pos:start="139:42" pos:end="139:64"><expr pos:start="139:42" pos:end="139:64"><operator pos:start="139:42" pos:end="139:42">&amp;</operator><name pos:start="139:43" pos:end="139:64"><name pos:start="139:43" pos:end="139:47">frame</name><operator pos:start="139:48" pos:end="139:49">-&gt;</operator><name pos:start="139:50" pos:end="139:57">mc_vregs</name><operator pos:start="139:58" pos:end="139:58">.</operator><name pos:start="139:59" pos:end="139:61">spe</name><index pos:start="139:62" pos:end="139:64">[<expr pos:start="139:63" pos:end="139:63"><name pos:start="139:63" pos:end="139:63">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:68" pos:end="143:13">{<block_content pos:start="141:17" pos:end="141:25">

                <return pos:start="141:17" pos:end="141:25">return <expr pos:start="141:24" pos:end="141:24"><literal type="number" pos:start="141:24" pos:end="141:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="149:9" pos:end="151:51">/* Set MSR_SPE in the saved MSR value to indicate that

           frame-&gt;mc_vregs contains valid data.  */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:23"><expr pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:11">msr</name> <operator pos:start="153:13" pos:end="153:14">|=</operator> <name pos:start="153:16" pos:end="153:22">MSR_SPE</name></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="157:21"><if pos:start="155:9" pos:end="157:21">if <condition pos:start="155:12" pos:end="155:64">(<expr pos:start="155:13" pos:end="155:63"><call pos:start="155:13" pos:end="155:63"><name pos:start="155:13" pos:end="155:22">__put_user</name><argument_list pos:start="155:23" pos:end="155:63">(<argument pos:start="155:24" pos:end="155:36"><expr pos:start="155:24" pos:end="155:36"><name pos:start="155:24" pos:end="155:36"><name pos:start="155:24" pos:end="155:26">env</name><operator pos:start="155:27" pos:end="155:28">-&gt;</operator><name pos:start="155:29" pos:end="155:36">spe_fscr</name></name></expr></argument>, <argument pos:start="155:39" pos:end="155:62"><expr pos:start="155:39" pos:end="155:62"><operator pos:start="155:39" pos:end="155:39">&amp;</operator><name pos:start="155:40" pos:end="155:62"><name pos:start="155:40" pos:end="155:44">frame</name><operator pos:start="155:45" pos:end="155:46">-&gt;</operator><name pos:start="155:47" pos:end="155:54">mc_vregs</name><operator pos:start="155:55" pos:end="155:55">.</operator><name pos:start="155:56" pos:end="155:58">spe</name><index pos:start="155:59" pos:end="155:62">[<expr pos:start="155:60" pos:end="155:61"><literal type="number" pos:start="155:60" pos:end="155:61">32</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:21"><block_content pos:start="157:13" pos:end="157:21">

            <return pos:start="157:13" pos:end="157:21">return <expr pos:start="157:20" pos:end="157:20"><literal type="number" pos:start="157:20" pos:end="157:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="163:5" pos:end="163:21">/* Store MSR.  */</comment>

    <if_stmt pos:start="165:5" pos:end="167:17"><if pos:start="165:5" pos:end="167:17">if <condition pos:start="165:8" pos:end="165:57">(<expr pos:start="165:9" pos:end="165:56"><call pos:start="165:9" pos:end="165:56"><name pos:start="165:9" pos:end="165:18">__put_user</name><argument_list pos:start="165:19" pos:end="165:56">(<argument pos:start="165:20" pos:end="165:22"><expr pos:start="165:20" pos:end="165:22"><name pos:start="165:20" pos:end="165:22">msr</name></expr></argument>, <argument pos:start="165:25" pos:end="165:55"><expr pos:start="165:25" pos:end="165:55"><operator pos:start="165:25" pos:end="165:25">&amp;</operator><name pos:start="165:26" pos:end="165:55"><name pos:start="165:26" pos:end="165:30">frame</name><operator pos:start="165:31" pos:end="165:32">-&gt;</operator><name pos:start="165:33" pos:end="165:40">mc_gregs</name><index pos:start="165:41" pos:end="165:55">[<expr pos:start="165:42" pos:end="165:54"><name pos:start="165:42" pos:end="165:54">TARGET_PT_MSR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="167:17"><block_content pos:start="167:9" pos:end="167:17">

        <return pos:start="167:9" pos:end="167:17">return <expr pos:start="167:16" pos:end="167:16"><literal type="number" pos:start="167:16" pos:end="167:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="171:5" pos:end="171:61">/* Set up the sigreturn trampoline: li r0,sigret; sc.  */</comment>

    <if_stmt pos:start="173:5" pos:end="183:5"><if pos:start="173:5" pos:end="183:5">if <condition pos:start="173:8" pos:end="173:15">(<expr pos:start="173:9" pos:end="173:14"><name pos:start="173:9" pos:end="173:14">sigret</name></expr>)</condition> <block pos:start="173:17" pos:end="183:5">{<block_content pos:start="175:9" pos:end="181:9">

        <if_stmt pos:start="175:9" pos:end="181:9"><if pos:start="175:9" pos:end="181:9">if <condition pos:start="175:12" pos:end="177:55">(<expr pos:start="175:13" pos:end="177:54"><call pos:start="175:13" pos:end="175:63"><name pos:start="175:13" pos:end="175:22">__put_user</name><argument_list pos:start="175:23" pos:end="175:63">(<argument pos:start="175:24" pos:end="175:44"><expr pos:start="175:24" pos:end="175:44"><literal type="number" pos:start="175:24" pos:end="175:35">0x38000000UL</literal> <operator pos:start="175:37" pos:end="175:37">|</operator> <name pos:start="175:39" pos:end="175:44">sigret</name></expr></argument>, <argument pos:start="175:47" pos:end="175:62"><expr pos:start="175:47" pos:end="175:62"><operator pos:start="175:47" pos:end="175:47">&amp;</operator><name pos:start="175:48" pos:end="175:62"><name pos:start="175:48" pos:end="175:52">frame</name><operator pos:start="175:53" pos:end="175:54">-&gt;</operator><name pos:start="175:55" pos:end="175:59">tramp</name><index pos:start="175:60" pos:end="175:62">[<expr pos:start="175:61" pos:end="175:61"><literal type="number" pos:start="175:61" pos:end="175:61">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="175:65" pos:end="175:66">||</operator>

            <call pos:start="177:13" pos:end="177:54"><name pos:start="177:13" pos:end="177:22">__put_user</name><argument_list pos:start="177:23" pos:end="177:54">(<argument pos:start="177:24" pos:end="177:35"><expr pos:start="177:24" pos:end="177:35"><literal type="number" pos:start="177:24" pos:end="177:35">0x44000002UL</literal></expr></argument>, <argument pos:start="177:38" pos:end="177:53"><expr pos:start="177:38" pos:end="177:53"><operator pos:start="177:38" pos:end="177:38">&amp;</operator><name pos:start="177:39" pos:end="177:53"><name pos:start="177:39" pos:end="177:43">frame</name><operator pos:start="177:44" pos:end="177:45">-&gt;</operator><name pos:start="177:46" pos:end="177:50">tramp</name><index pos:start="177:51" pos:end="177:53">[<expr pos:start="177:52" pos:end="177:52"><literal type="number" pos:start="177:52" pos:end="177:52">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="177:57" pos:end="181:9">{<block_content pos:start="179:13" pos:end="179:21">

            <return pos:start="179:13" pos:end="179:21">return <expr pos:start="179:20" pos:end="179:20"><literal type="number" pos:start="179:20" pos:end="179:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="187:5" pos:end="187:13">return <expr pos:start="187:12" pos:end="187:12"><literal type="number" pos:start="187:12" pos:end="187:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
