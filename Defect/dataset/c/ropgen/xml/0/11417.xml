<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11417.c" pos:tabs="8"><function pos:start="1:1" pos:end="575:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">x86_cpu_handle_mmu_fault</name><parameter_list pos:start="1:29" pos:end="3:56">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:37">CPUState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">cs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:53"><decl pos:start="1:44" pos:end="1:53"><type pos:start="1:44" pos:end="1:53"><name pos:start="1:44" pos:end="1:48">vaddr</name></type> <name pos:start="1:50" pos:end="1:53">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:42"><decl pos:start="3:30" pos:end="3:42"><type pos:start="3:30" pos:end="3:42"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:42">is_write1</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:55"><decl pos:start="3:45" pos:end="3:55"><type pos:start="3:45" pos:end="3:55"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:55">mmu_idx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="575:1">{<block_content pos:start="7:5" pos:end="573:13">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">X86CPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">cpu</name> <init pos:start="7:17" pos:end="7:29">= <expr pos:start="7:19" pos:end="7:29"><call pos:start="7:19" pos:end="7:29"><name pos:start="7:19" pos:end="7:25">X86_CPU</name><argument_list pos:start="7:26" pos:end="7:29">(<argument pos:start="7:27" pos:end="7:28"><expr pos:start="7:27" pos:end="7:28"><name pos:start="7:27" pos:end="7:28">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">CPUX86State</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">env</name> <init pos:start="9:22" pos:end="9:32">= <expr pos:start="9:24" pos:end="9:32"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:27">cpu</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:17">ptep</name></decl>, <decl pos:start="11:20" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:20" pos:end="11:22">pte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:25">pde_addr</name></decl>, <decl pos:start="13:28" pos:end="13:35"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:28" pos:end="13:35">pte_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">error_code</name> <init pos:start="15:20" pos:end="15:22">= <expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:53"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">is_dirty</name></decl>, <decl pos:start="17:19" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:19" pos:end="17:22">prot</name></decl>, <decl pos:start="17:25" pos:end="17:33"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:25" pos:end="17:33">page_size</name></decl>, <decl pos:start="17:36" pos:end="17:43"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:36" pos:end="17:43">is_write</name></decl>, <decl pos:start="17:46" pos:end="17:52"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:46" pos:end="17:52">is_user</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">hwaddr</name></type> <name pos:start="19:12" pos:end="19:16">paddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:41"><decl pos:start="21:5" pos:end="21:40"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint64_t</name></type> <name pos:start="21:14" pos:end="21:22">rsvd_mask</name> <init pos:start="21:24" pos:end="21:40">= <expr pos:start="21:26" pos:end="21:40"><name pos:start="21:26" pos:end="21:40">PG_HI_RSVD_MASK</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint32_t</name></type> <name pos:start="23:14" pos:end="23:24">page_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:23"><decl pos:start="25:5" pos:end="25:22"><type pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:16">target_ulong</name></type> <name pos:start="25:18" pos:end="25:22">vaddr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:11">is_user</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:21">mmu_idx</name> <operator pos:start="29:23" pos:end="29:24">==</operator> <name pos:start="29:26" pos:end="29:37">MMU_USER_IDX</name></expr>;</expr_stmt>

<cpp:if pos:start="31:1" pos:end="31:22">#<cpp:directive pos:start="31:2" pos:end="31:3">if</cpp:directive> <expr pos:start="31:5" pos:end="31:22"><call pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:11">defined</name><argument_list pos:start="31:12" pos:end="31:22">(<argument pos:start="31:13" pos:end="31:21"><expr pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:21">DEBUG_MMU</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="33:5" pos:end="38:0"><expr pos:start="33:5" pos:end="35:46"><call pos:start="33:5" pos:end="35:46"><name pos:start="33:5" pos:end="33:10">printf</name><argument_list pos:start="33:11" pos:end="35:46">(<argument pos:start="33:12" pos:end="33:78"><expr pos:start="33:12" pos:end="33:78"><literal type="string" pos:start="33:12" pos:end="33:30">"MMU fault: addr=%"</literal> <name pos:start="33:32" pos:end="33:41">VADDR_PRIx</name> <literal type="string" pos:start="33:43" pos:end="33:59">" w=%d u=%d eip="</literal> <name pos:start="33:61" pos:end="33:73">TARGET_FMT_lx</name> <literal type="string" pos:start="33:75" pos:end="33:78">"\n"</literal></expr></argument>,

           <argument pos:start="35:12" pos:end="35:15"><expr pos:start="35:12" pos:end="35:15"><name pos:start="35:12" pos:end="35:15">addr</name></expr></argument>, <argument pos:start="35:18" pos:end="35:26"><expr pos:start="35:18" pos:end="35:26"><name pos:start="35:18" pos:end="35:26">is_write1</name></expr></argument>, <argument pos:start="35:29" pos:end="35:35"><expr pos:start="35:29" pos:end="35:35"><name pos:start="35:29" pos:end="35:35">is_user</name></expr></argument>, <argument pos:start="35:38" pos:end="35:45"><expr pos:start="35:38" pos:end="35:45"><name pos:start="35:38" pos:end="35:45"><name pos:start="35:38" pos:end="35:40">env</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:45">eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:12">is_write</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:24">is_write1</name> <operator pos:start="39:26" pos:end="39:26">&amp;</operator> <literal type="number" pos:start="39:28" pos:end="39:28">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="65:5"><if pos:start="43:5" pos:end="65:5">if <condition pos:start="43:8" pos:end="43:36">(<expr pos:start="43:9" pos:end="43:35"><operator pos:start="43:9" pos:end="43:9">!</operator><operator pos:start="43:10" pos:end="43:10">(</operator><name pos:start="43:11" pos:end="43:20"><name pos:start="43:11" pos:end="43:13">env</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:17">cr</name><index pos:start="43:18" pos:end="43:20">[<expr pos:start="43:19" pos:end="43:19"><literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr>]</index></name> <operator pos:start="43:22" pos:end="43:22">&amp;</operator> <name pos:start="43:24" pos:end="43:34">CR0_PG_MASK</name><operator pos:start="43:35" pos:end="43:35">)</operator></expr>)</condition> <block pos:start="43:38" pos:end="65:5">{<block_content pos:start="45:9" pos:end="63:24">

        <expr_stmt pos:start="45:9" pos:end="48:0"><expr pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:11">pte</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:18">addr</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="47:1" pos:end="47:20">#<cpp:directive pos:start="47:2" pos:end="47:6">ifdef</cpp:directive> <name pos:start="47:8" pos:end="47:20">TARGET_X86_64</name></cpp:ifdef>

        <if_stmt pos:start="49:9" pos:end="58:0"><if pos:start="49:9" pos:end="58:0">if <condition pos:start="49:12" pos:end="49:41">(<expr pos:start="49:13" pos:end="49:40"><operator pos:start="49:13" pos:end="49:13">!</operator><operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:25"><name pos:start="49:15" pos:end="49:17">env</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:25">hflags</name></name> <operator pos:start="49:27" pos:end="49:27">&amp;</operator> <name pos:start="49:29" pos:end="49:39">HF_LMA_MASK</name><operator pos:start="49:40" pos:end="49:40">)</operator></expr>)</condition> <block pos:start="49:43" pos:end="58:0">{<block_content pos:start="53:13" pos:end="53:32">

            <comment type="block" pos:start="51:13" pos:end="51:75">/* Without long mode we can only address 32bits in real mode */</comment>

            <expr_stmt pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:15">pte</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <operator pos:start="53:19" pos:end="53:19">(</operator><name pos:start="53:20" pos:end="53:27">uint32_t</name><operator pos:start="53:28" pos:end="53:28">)</operator><name pos:start="53:29" pos:end="53:31">pte</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="59:9" pos:end="59:50"><expr pos:start="59:9" pos:end="59:49"><name pos:start="59:9" pos:end="59:12">prot</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:24">PAGE_READ</name> <operator pos:start="59:26" pos:end="59:26">|</operator> <name pos:start="59:28" pos:end="59:37">PAGE_WRITE</name> <operator pos:start="59:39" pos:end="59:39">|</operator> <name pos:start="59:41" pos:end="59:49">PAGE_EXEC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:25"><expr pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:17">page_size</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:24">4096</literal></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:24">goto <name pos:start="63:14" pos:end="63:23">do_mapping</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="371:5"><if pos:start="69:5" pos:end="299:5">if <condition pos:start="69:8" pos:end="69:34">(<expr pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:11">env</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:15">cr</name><index pos:start="69:16" pos:end="69:18">[<expr pos:start="69:17" pos:end="69:17"><literal type="number" pos:start="69:17" pos:end="69:17">4</literal></expr>]</index></name> <operator pos:start="69:20" pos:end="69:20">&amp;</operator> <name pos:start="69:22" pos:end="69:33">CR4_PAE_MASK</name></expr>)</condition> <block pos:start="69:36" pos:end="299:5">{<block_content pos:start="71:9" pos:end="297:25">

        <decl_stmt pos:start="71:9" pos:end="71:27"><decl pos:start="71:9" pos:end="71:20"><type pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:16">uint64_t</name></type> <name pos:start="71:18" pos:end="71:20">pde</name></decl>, <decl pos:start="71:23" pos:end="71:26"><type ref="prev" pos:start="71:9" pos:end="71:16"/><name pos:start="71:23" pos:end="71:26">pdpe</name></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="78:0"><decl pos:start="73:9" pos:end="73:30"><type pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:20">target_ulong</name></type> <name pos:start="73:22" pos:end="73:30">pdpe_addr</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="77:1" pos:end="77:20">#<cpp:directive pos:start="77:2" pos:end="77:6">ifdef</cpp:directive> <name pos:start="77:8" pos:end="77:20">TARGET_X86_64</name></cpp:ifdef>

        <if_stmt pos:start="79:9" pos:end="215:9"><if pos:start="79:9" pos:end="185:9">if <condition pos:start="79:12" pos:end="79:38">(<expr pos:start="79:13" pos:end="79:37"><name pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:15">env</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:23">hflags</name></name> <operator pos:start="79:25" pos:end="79:25">&amp;</operator> <name pos:start="79:27" pos:end="79:37">HF_LMA_MASK</name></expr>)</condition> <block pos:start="79:40" pos:end="185:9">{<block_content pos:start="81:13" pos:end="183:13">

            <decl_stmt pos:start="81:13" pos:end="81:39"><decl pos:start="81:13" pos:end="81:31"><type pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:20">uint64_t</name></type> <name pos:start="81:22" pos:end="81:31">pml4e_addr</name></decl>, <decl pos:start="81:34" pos:end="81:38"><type ref="prev" pos:start="81:13" pos:end="81:20"/><name pos:start="81:34" pos:end="81:38">pml4e</name></decl>;</decl_stmt>

            <decl_stmt pos:start="83:13" pos:end="83:25"><decl pos:start="83:13" pos:end="83:24"><type pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:19">int32_t</name></type> <name pos:start="83:21" pos:end="83:24">sext</name></decl>;</decl_stmt>



            <comment type="block" pos:start="87:13" pos:end="87:53">/* test virtual address sign extension */</comment>

            <expr_stmt pos:start="89:13" pos:end="89:39"><expr pos:start="89:13" pos:end="89:38"><name pos:start="89:13" pos:end="89:16">sext</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <operator pos:start="89:20" pos:end="89:20">(</operator><name pos:start="89:21" pos:end="89:27">int64_t</name><operator pos:start="89:28" pos:end="89:28">)</operator><name pos:start="89:29" pos:end="89:32">addr</name> <operator pos:start="89:34" pos:end="89:35">&gt;&gt;</operator> <literal type="number" pos:start="89:37" pos:end="89:38">47</literal></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="99:13"><if pos:start="91:13" pos:end="99:13">if <condition pos:start="91:16" pos:end="91:40">(<expr pos:start="91:17" pos:end="91:39"><name pos:start="91:17" pos:end="91:20">sext</name> <operator pos:start="91:22" pos:end="91:23">!=</operator> <literal type="number" pos:start="91:25" pos:end="91:25">0</literal> <operator pos:start="91:27" pos:end="91:28">&amp;&amp;</operator> <name pos:start="91:30" pos:end="91:33">sext</name> <operator pos:start="91:35" pos:end="91:36">!=</operator> <operator pos:start="91:38" pos:end="91:38">-</operator><literal type="number" pos:start="91:39" pos:end="91:39">1</literal></expr>)</condition> <block pos:start="91:42" pos:end="99:13">{<block_content pos:start="93:17" pos:end="97:25">

                <expr_stmt pos:start="93:17" pos:end="93:36"><expr pos:start="93:17" pos:end="93:35"><name pos:start="93:17" pos:end="93:31"><name pos:start="93:17" pos:end="93:19">env</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:31">error_code</name></name> <operator pos:start="93:33" pos:end="93:33">=</operator> <literal type="number" pos:start="93:35" pos:end="93:35">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:49"><expr pos:start="95:17" pos:end="95:48"><name pos:start="95:17" pos:end="95:35"><name pos:start="95:17" pos:end="95:18">cs</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:35">exception_index</name></name> <operator pos:start="95:37" pos:end="95:37">=</operator> <name pos:start="95:39" pos:end="95:48">EXCP0D_GPF</name></expr>;</expr_stmt>

                <return pos:start="97:17" pos:end="97:25">return <expr pos:start="97:24" pos:end="97:24"><literal type="number" pos:start="97:24" pos:end="97:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="103:13" pos:end="105:30"><expr pos:start="103:13" pos:end="105:29"><name pos:start="103:13" pos:end="103:22">pml4e_addr</name> <operator pos:start="103:24" pos:end="103:24">=</operator> <operator pos:start="103:26" pos:end="103:26">(</operator><operator pos:start="103:27" pos:end="103:27">(</operator><name pos:start="103:28" pos:end="103:37"><name pos:start="103:28" pos:end="103:30">env</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:34">cr</name><index pos:start="103:35" pos:end="103:37">[<expr pos:start="103:36" pos:end="103:36"><literal type="number" pos:start="103:36" pos:end="103:36">3</literal></expr>]</index></name> <operator pos:start="103:39" pos:end="103:39">&amp;</operator> <operator pos:start="103:41" pos:end="103:41">~</operator><literal type="number" pos:start="103:42" pos:end="103:46">0xfff</literal><operator pos:start="103:47" pos:end="103:47">)</operator> <operator pos:start="103:49" pos:end="103:49">+</operator> <operator pos:start="103:51" pos:end="103:51">(</operator><operator pos:start="103:52" pos:end="103:52">(</operator><operator pos:start="103:53" pos:end="103:53">(</operator><name pos:start="103:54" pos:end="103:57">addr</name> <operator pos:start="103:59" pos:end="103:60">&gt;&gt;</operator> <literal type="number" pos:start="103:62" pos:end="103:63">39</literal><operator pos:start="103:64" pos:end="103:64">)</operator> <operator pos:start="103:66" pos:end="103:66">&amp;</operator> <literal type="number" pos:start="103:68" pos:end="103:72">0x1ff</literal><operator pos:start="103:73" pos:end="103:73">)</operator> <operator pos:start="103:75" pos:end="103:76">&lt;&lt;</operator> <literal type="number" pos:start="103:78" pos:end="103:78">3</literal><operator pos:start="103:79" pos:end="103:79">)</operator><operator pos:start="103:80" pos:end="103:80">)</operator> <operator pos:start="103:82" pos:end="103:82">&amp;</operator>

                <name pos:start="105:17" pos:end="105:29"><name pos:start="105:17" pos:end="105:19">env</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:29">a20_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:49"><expr pos:start="107:13" pos:end="107:48"><name pos:start="107:13" pos:end="107:17">pml4e</name> <operator pos:start="107:19" pos:end="107:19">=</operator> <call pos:start="107:21" pos:end="107:48"><name pos:start="107:21" pos:end="107:28">ldq_phys</name><argument_list pos:start="107:29" pos:end="107:48">(<argument pos:start="107:30" pos:end="107:35"><expr pos:start="107:30" pos:end="107:35"><name pos:start="107:30" pos:end="107:35"><name pos:start="107:30" pos:end="107:31">cs</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:35">as</name></name></expr></argument>, <argument pos:start="107:38" pos:end="107:47"><expr pos:start="107:38" pos:end="107:47"><name pos:start="107:38" pos:end="107:47">pml4e_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="109:13" pos:end="113:13"><if pos:start="109:13" pos:end="113:13">if <condition pos:start="109:16" pos:end="109:43">(<expr pos:start="109:17" pos:end="109:42"><operator pos:start="109:17" pos:end="109:17">!</operator><operator pos:start="109:18" pos:end="109:18">(</operator><name pos:start="109:19" pos:end="109:23">pml4e</name> <operator pos:start="109:25" pos:end="109:25">&amp;</operator> <name pos:start="109:27" pos:end="109:41">PG_PRESENT_MASK</name><operator pos:start="109:42" pos:end="109:42">)</operator></expr>)</condition> <block pos:start="109:45" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:30">

                <goto pos:start="111:17" pos:end="111:30">goto <name pos:start="111:22" pos:end="111:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="115:13" pos:end="119:13"><if pos:start="115:13" pos:end="119:13">if <condition pos:start="115:16" pos:end="115:50">(<expr pos:start="115:17" pos:end="115:49"><name pos:start="115:17" pos:end="115:21">pml4e</name> <operator pos:start="115:23" pos:end="115:23">&amp;</operator> <operator pos:start="115:25" pos:end="115:25">(</operator><name pos:start="115:26" pos:end="115:34">rsvd_mask</name> <operator pos:start="115:36" pos:end="115:36">|</operator> <name pos:start="115:38" pos:end="115:48">PG_PSE_MASK</name><operator pos:start="115:49" pos:end="115:49">)</operator></expr>)</condition> <block pos:start="115:52" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:35">

                <goto pos:start="117:17" pos:end="117:35">goto <name pos:start="117:22" pos:end="117:34">do_fault_rsvd</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="121:13" pos:end="125:13"><if pos:start="121:13" pos:end="125:13">if <condition pos:start="121:16" pos:end="121:68">(<expr pos:start="121:17" pos:end="121:67"><operator pos:start="121:17" pos:end="121:17">!</operator><operator pos:start="121:18" pos:end="121:18">(</operator><name pos:start="121:19" pos:end="121:27"><name pos:start="121:19" pos:end="121:21">env</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:27">efer</name></name> <operator pos:start="121:29" pos:end="121:29">&amp;</operator> <name pos:start="121:31" pos:end="121:42">MSR_EFER_NXE</name><operator pos:start="121:43" pos:end="121:43">)</operator> <operator pos:start="121:45" pos:end="121:46">&amp;&amp;</operator> <operator pos:start="121:48" pos:end="121:48">(</operator><name pos:start="121:49" pos:end="121:53">pml4e</name> <operator pos:start="121:55" pos:end="121:55">&amp;</operator> <name pos:start="121:57" pos:end="121:66">PG_NX_MASK</name><operator pos:start="121:67" pos:end="121:67">)</operator></expr>)</condition> <block pos:start="121:70" pos:end="125:13">{<block_content pos:start="123:17" pos:end="123:35">

                <goto pos:start="123:17" pos:end="123:35">goto <name pos:start="123:22" pos:end="123:34">do_fault_rsvd</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="127:13" pos:end="133:13"><if pos:start="127:13" pos:end="133:13">if <condition pos:start="127:16" pos:end="127:44">(<expr pos:start="127:17" pos:end="127:43"><operator pos:start="127:17" pos:end="127:17">!</operator><operator pos:start="127:18" pos:end="127:18">(</operator><name pos:start="127:19" pos:end="127:23">pml4e</name> <operator pos:start="127:25" pos:end="127:25">&amp;</operator> <name pos:start="127:27" pos:end="127:42">PG_ACCESSED_MASK</name><operator pos:start="127:43" pos:end="127:43">)</operator></expr>)</condition> <block pos:start="127:46" pos:end="133:13">{<block_content pos:start="129:17" pos:end="131:61">

                <expr_stmt pos:start="129:17" pos:end="129:42"><expr pos:start="129:17" pos:end="129:41"><name pos:start="129:17" pos:end="129:21">pml4e</name> <operator pos:start="129:23" pos:end="129:24">|=</operator> <name pos:start="129:26" pos:end="129:41">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:61"><expr pos:start="131:17" pos:end="131:60"><call pos:start="131:17" pos:end="131:60"><name pos:start="131:17" pos:end="131:33">stl_phys_notdirty</name><argument_list pos:start="131:34" pos:end="131:60">(<argument pos:start="131:35" pos:end="131:40"><expr pos:start="131:35" pos:end="131:40"><name pos:start="131:35" pos:end="131:40"><name pos:start="131:35" pos:end="131:36">cs</name><operator pos:start="131:37" pos:end="131:38">-&gt;</operator><name pos:start="131:39" pos:end="131:40">as</name></name></expr></argument>, <argument pos:start="131:43" pos:end="131:52"><expr pos:start="131:43" pos:end="131:52"><name pos:start="131:43" pos:end="131:52">pml4e_addr</name></expr></argument>, <argument pos:start="131:55" pos:end="131:59"><expr pos:start="131:55" pos:end="131:59"><name pos:start="131:55" pos:end="131:59">pml4e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:38"><expr pos:start="135:13" pos:end="135:37"><name pos:start="135:13" pos:end="135:16">ptep</name> <operator pos:start="135:18" pos:end="135:18">=</operator> <name pos:start="135:20" pos:end="135:24">pml4e</name> <operator pos:start="135:26" pos:end="135:26">^</operator> <name pos:start="135:28" pos:end="135:37">PG_NX_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="139:30"><expr pos:start="137:13" pos:end="139:29"><name pos:start="137:13" pos:end="137:21">pdpe_addr</name> <operator pos:start="137:23" pos:end="137:23">=</operator> <operator pos:start="137:25" pos:end="137:25">(</operator><operator pos:start="137:26" pos:end="137:26">(</operator><name pos:start="137:27" pos:end="137:31">pml4e</name> <operator pos:start="137:33" pos:end="137:33">&amp;</operator> <name pos:start="137:35" pos:end="137:49">PG_ADDRESS_MASK</name><operator pos:start="137:50" pos:end="137:50">)</operator> <operator pos:start="137:52" pos:end="137:52">+</operator> <operator pos:start="137:54" pos:end="137:54">(</operator><operator pos:start="137:55" pos:end="137:55">(</operator><operator pos:start="137:56" pos:end="137:56">(</operator><name pos:start="137:57" pos:end="137:60">addr</name> <operator pos:start="137:62" pos:end="137:63">&gt;&gt;</operator> <literal type="number" pos:start="137:65" pos:end="137:66">30</literal><operator pos:start="137:67" pos:end="137:67">)</operator> <operator pos:start="137:69" pos:end="137:69">&amp;</operator> <literal type="number" pos:start="137:71" pos:end="137:75">0x1ff</literal><operator pos:start="137:76" pos:end="137:76">)</operator> <operator pos:start="137:78" pos:end="137:79">&lt;&lt;</operator> <literal type="number" pos:start="137:81" pos:end="137:81">3</literal><operator pos:start="137:82" pos:end="137:82">)</operator><operator pos:start="137:83" pos:end="137:83">)</operator> <operator pos:start="137:85" pos:end="137:85">&amp;</operator>

                <name pos:start="139:17" pos:end="139:29"><name pos:start="139:17" pos:end="139:19">env</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:29">a20_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:47"><expr pos:start="141:13" pos:end="141:46"><name pos:start="141:13" pos:end="141:16">pdpe</name> <operator pos:start="141:18" pos:end="141:18">=</operator> <call pos:start="141:20" pos:end="141:46"><name pos:start="141:20" pos:end="141:27">ldq_phys</name><argument_list pos:start="141:28" pos:end="141:46">(<argument pos:start="141:29" pos:end="141:34"><expr pos:start="141:29" pos:end="141:34"><name pos:start="141:29" pos:end="141:34"><name pos:start="141:29" pos:end="141:30">cs</name><operator pos:start="141:31" pos:end="141:32">-&gt;</operator><name pos:start="141:33" pos:end="141:34">as</name></name></expr></argument>, <argument pos:start="141:37" pos:end="141:45"><expr pos:start="141:37" pos:end="141:45"><name pos:start="141:37" pos:end="141:45">pdpe_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="147:13"><if pos:start="143:13" pos:end="147:13">if <condition pos:start="143:16" pos:end="143:42">(<expr pos:start="143:17" pos:end="143:41"><operator pos:start="143:17" pos:end="143:17">!</operator><operator pos:start="143:18" pos:end="143:18">(</operator><name pos:start="143:19" pos:end="143:22">pdpe</name> <operator pos:start="143:24" pos:end="143:24">&amp;</operator> <name pos:start="143:26" pos:end="143:40">PG_PRESENT_MASK</name><operator pos:start="143:41" pos:end="143:41">)</operator></expr>)</condition> <block pos:start="143:44" pos:end="147:13">{<block_content pos:start="145:17" pos:end="145:30">

                <goto pos:start="145:17" pos:end="145:30">goto <name pos:start="145:22" pos:end="145:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="149:13" pos:end="153:13"><if pos:start="149:13" pos:end="153:13">if <condition pos:start="149:16" pos:end="149:33">(<expr pos:start="149:17" pos:end="149:32"><name pos:start="149:17" pos:end="149:20">pdpe</name> <operator pos:start="149:22" pos:end="149:22">&amp;</operator> <name pos:start="149:24" pos:end="149:32">rsvd_mask</name></expr>)</condition> <block pos:start="149:35" pos:end="153:13">{<block_content pos:start="151:17" pos:end="151:35">

                <goto pos:start="151:17" pos:end="151:35">goto <name pos:start="151:22" pos:end="151:34">do_fault_rsvd</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="155:13" pos:end="159:13"><if pos:start="155:13" pos:end="159:13">if <condition pos:start="155:16" pos:end="155:67">(<expr pos:start="155:17" pos:end="155:66"><operator pos:start="155:17" pos:end="155:17">!</operator><operator pos:start="155:18" pos:end="155:18">(</operator><name pos:start="155:19" pos:end="155:27"><name pos:start="155:19" pos:end="155:21">env</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:27">efer</name></name> <operator pos:start="155:29" pos:end="155:29">&amp;</operator> <name pos:start="155:31" pos:end="155:42">MSR_EFER_NXE</name><operator pos:start="155:43" pos:end="155:43">)</operator> <operator pos:start="155:45" pos:end="155:46">&amp;&amp;</operator> <operator pos:start="155:48" pos:end="155:48">(</operator><name pos:start="155:49" pos:end="155:52">pdpe</name> <operator pos:start="155:54" pos:end="155:54">&amp;</operator> <name pos:start="155:56" pos:end="155:65">PG_NX_MASK</name><operator pos:start="155:66" pos:end="155:66">)</operator></expr>)</condition> <block pos:start="155:69" pos:end="159:13">{<block_content pos:start="157:17" pos:end="157:35">

                <goto pos:start="157:17" pos:end="157:35">goto <name pos:start="157:22" pos:end="157:34">do_fault_rsvd</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:38"><expr pos:start="161:13" pos:end="161:37"><name pos:start="161:13" pos:end="161:16">ptep</name> <operator pos:start="161:18" pos:end="161:19">&amp;=</operator> <name pos:start="161:21" pos:end="161:24">pdpe</name> <operator pos:start="161:26" pos:end="161:26">^</operator> <name pos:start="161:28" pos:end="161:37">PG_NX_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="163:13" pos:end="169:13"><if pos:start="163:13" pos:end="169:13">if <condition pos:start="163:16" pos:end="163:43">(<expr pos:start="163:17" pos:end="163:42"><operator pos:start="163:17" pos:end="163:17">!</operator><operator pos:start="163:18" pos:end="163:18">(</operator><name pos:start="163:19" pos:end="163:22">pdpe</name> <operator pos:start="163:24" pos:end="163:24">&amp;</operator> <name pos:start="163:26" pos:end="163:41">PG_ACCESSED_MASK</name><operator pos:start="163:42" pos:end="163:42">)</operator></expr>)</condition> <block pos:start="163:45" pos:end="169:13">{<block_content pos:start="165:17" pos:end="167:59">

                <expr_stmt pos:start="165:17" pos:end="165:41"><expr pos:start="165:17" pos:end="165:40"><name pos:start="165:17" pos:end="165:20">pdpe</name> <operator pos:start="165:22" pos:end="165:23">|=</operator> <name pos:start="165:25" pos:end="165:40">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:59"><expr pos:start="167:17" pos:end="167:58"><call pos:start="167:17" pos:end="167:58"><name pos:start="167:17" pos:end="167:33">stl_phys_notdirty</name><argument_list pos:start="167:34" pos:end="167:58">(<argument pos:start="167:35" pos:end="167:40"><expr pos:start="167:35" pos:end="167:40"><name pos:start="167:35" pos:end="167:40"><name pos:start="167:35" pos:end="167:36">cs</name><operator pos:start="167:37" pos:end="167:38">-&gt;</operator><name pos:start="167:39" pos:end="167:40">as</name></name></expr></argument>, <argument pos:start="167:43" pos:end="167:51"><expr pos:start="167:43" pos:end="167:51"><name pos:start="167:43" pos:end="167:51">pdpe_addr</name></expr></argument>, <argument pos:start="167:54" pos:end="167:57"><expr pos:start="167:54" pos:end="167:57"><name pos:start="167:54" pos:end="167:57">pdpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="171:13" pos:end="183:13"><if pos:start="171:13" pos:end="183:13">if <condition pos:start="171:16" pos:end="171:35">(<expr pos:start="171:17" pos:end="171:34"><name pos:start="171:17" pos:end="171:20">pdpe</name> <operator pos:start="171:22" pos:end="171:22">&amp;</operator> <name pos:start="171:24" pos:end="171:34">PG_PSE_MASK</name></expr>)</condition> <block pos:start="171:37" pos:end="183:13">{<block_content pos:start="175:17" pos:end="181:38">

                <comment type="block" pos:start="173:17" pos:end="173:31">/* 1 GB page */</comment>

                <expr_stmt pos:start="175:17" pos:end="175:47"><expr pos:start="175:17" pos:end="175:46"><name pos:start="175:17" pos:end="175:25">page_size</name> <operator pos:start="175:27" pos:end="175:27">=</operator> <literal type="number" pos:start="175:29" pos:end="175:32">1024</literal> <operator pos:start="175:34" pos:end="175:34">*</operator> <literal type="number" pos:start="175:36" pos:end="175:39">1024</literal> <operator pos:start="175:41" pos:end="175:41">*</operator> <literal type="number" pos:start="175:43" pos:end="175:46">1024</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:37"><expr pos:start="177:17" pos:end="177:36"><name pos:start="177:17" pos:end="177:24">pte_addr</name> <operator pos:start="177:26" pos:end="177:26">=</operator> <name pos:start="177:28" pos:end="177:36">pdpe_addr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:27"><expr pos:start="179:17" pos:end="179:26"><name pos:start="179:17" pos:end="179:19">pte</name> <operator pos:start="179:21" pos:end="179:21">=</operator> <name pos:start="179:23" pos:end="179:26">pdpe</name></expr>;</expr_stmt>

                <goto pos:start="181:17" pos:end="181:38">goto <name pos:start="181:22" pos:end="181:37">do_check_protect</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="185:11" pos:end="215:9">else

<cpp:endif pos:start="187:1" pos:end="187:6">#<cpp:directive pos:start="187:2" pos:end="187:6">endif</cpp:directive></cpp:endif>

        <block pos:start="189:9" pos:end="215:9">{<block_content pos:start="193:13" pos:end="213:58">

            <comment type="block" pos:start="191:13" pos:end="191:53">/* XXX: load them when cr3 is loaded ? */</comment>

            <expr_stmt pos:start="193:13" pos:end="195:30"><expr pos:start="193:13" pos:end="195:29"><name pos:start="193:13" pos:end="193:21">pdpe_addr</name> <operator pos:start="193:23" pos:end="193:23">=</operator> <operator pos:start="193:25" pos:end="193:25">(</operator><operator pos:start="193:26" pos:end="193:26">(</operator><name pos:start="193:27" pos:end="193:36"><name pos:start="193:27" pos:end="193:29">env</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:33">cr</name><index pos:start="193:34" pos:end="193:36">[<expr pos:start="193:35" pos:end="193:35"><literal type="number" pos:start="193:35" pos:end="193:35">3</literal></expr>]</index></name> <operator pos:start="193:38" pos:end="193:38">&amp;</operator> <operator pos:start="193:40" pos:end="193:40">~</operator><literal type="number" pos:start="193:41" pos:end="193:44">0x1f</literal><operator pos:start="193:45" pos:end="193:45">)</operator> <operator pos:start="193:47" pos:end="193:47">+</operator> <operator pos:start="193:49" pos:end="193:49">(</operator><operator pos:start="193:50" pos:end="193:50">(</operator><name pos:start="193:51" pos:end="193:54">addr</name> <operator pos:start="193:56" pos:end="193:57">&gt;&gt;</operator> <literal type="number" pos:start="193:59" pos:end="193:60">27</literal><operator pos:start="193:61" pos:end="193:61">)</operator> <operator pos:start="193:63" pos:end="193:63">&amp;</operator> <literal type="number" pos:start="193:65" pos:end="193:68">0x18</literal><operator pos:start="193:69" pos:end="193:69">)</operator><operator pos:start="193:70" pos:end="193:70">)</operator> <operator pos:start="193:72" pos:end="193:72">&amp;</operator>

                <name pos:start="195:17" pos:end="195:29"><name pos:start="195:17" pos:end="195:19">env</name><operator pos:start="195:20" pos:end="195:21">-&gt;</operator><name pos:start="195:22" pos:end="195:29">a20_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:47"><expr pos:start="197:13" pos:end="197:46"><name pos:start="197:13" pos:end="197:16">pdpe</name> <operator pos:start="197:18" pos:end="197:18">=</operator> <call pos:start="197:20" pos:end="197:46"><name pos:start="197:20" pos:end="197:27">ldq_phys</name><argument_list pos:start="197:28" pos:end="197:46">(<argument pos:start="197:29" pos:end="197:34"><expr pos:start="197:29" pos:end="197:34"><name pos:start="197:29" pos:end="197:34"><name pos:start="197:29" pos:end="197:30">cs</name><operator pos:start="197:31" pos:end="197:32">-&gt;</operator><name pos:start="197:33" pos:end="197:34">as</name></name></expr></argument>, <argument pos:start="197:37" pos:end="197:45"><expr pos:start="197:37" pos:end="197:45"><name pos:start="197:37" pos:end="197:45">pdpe_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="199:13" pos:end="203:13"><if pos:start="199:13" pos:end="203:13">if <condition pos:start="199:16" pos:end="199:42">(<expr pos:start="199:17" pos:end="199:41"><operator pos:start="199:17" pos:end="199:17">!</operator><operator pos:start="199:18" pos:end="199:18">(</operator><name pos:start="199:19" pos:end="199:22">pdpe</name> <operator pos:start="199:24" pos:end="199:24">&amp;</operator> <name pos:start="199:26" pos:end="199:40">PG_PRESENT_MASK</name><operator pos:start="199:41" pos:end="199:41">)</operator></expr>)</condition> <block pos:start="199:44" pos:end="203:13">{<block_content pos:start="201:17" pos:end="201:30">

                <goto pos:start="201:17" pos:end="201:30">goto <name pos:start="201:22" pos:end="201:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:54"><expr pos:start="205:13" pos:end="205:53"><name pos:start="205:13" pos:end="205:21">rsvd_mask</name> <operator pos:start="205:23" pos:end="205:24">|=</operator> <name pos:start="205:26" pos:end="205:40">PG_HI_USER_MASK</name> <operator pos:start="205:42" pos:end="205:42">|</operator> <name pos:start="205:44" pos:end="205:53">PG_NX_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="207:13" pos:end="211:13"><if pos:start="207:13" pos:end="211:13">if <condition pos:start="207:16" pos:end="207:33">(<expr pos:start="207:17" pos:end="207:32"><name pos:start="207:17" pos:end="207:20">pdpe</name> <operator pos:start="207:22" pos:end="207:22">&amp;</operator> <name pos:start="207:24" pos:end="207:32">rsvd_mask</name></expr>)</condition> <block pos:start="207:35" pos:end="211:13">{<block_content pos:start="209:17" pos:end="209:35">

                <goto pos:start="209:17" pos:end="209:35">goto <name pos:start="209:22" pos:end="209:34">do_fault_rsvd</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:58"><expr pos:start="213:13" pos:end="213:57"><name pos:start="213:13" pos:end="213:16">ptep</name> <operator pos:start="213:18" pos:end="213:18">=</operator> <name pos:start="213:20" pos:end="213:29">PG_NX_MASK</name> <operator pos:start="213:31" pos:end="213:31">|</operator> <name pos:start="213:33" pos:end="213:44">PG_USER_MASK</name> <operator pos:start="213:46" pos:end="213:46">|</operator> <name pos:start="213:48" pos:end="213:57">PG_RW_MASK</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="219:9" pos:end="221:26"><expr pos:start="219:9" pos:end="221:25"><name pos:start="219:9" pos:end="219:16">pde_addr</name> <operator pos:start="219:18" pos:end="219:18">=</operator> <operator pos:start="219:20" pos:end="219:20">(</operator><operator pos:start="219:21" pos:end="219:21">(</operator><name pos:start="219:22" pos:end="219:25">pdpe</name> <operator pos:start="219:27" pos:end="219:27">&amp;</operator> <name pos:start="219:29" pos:end="219:43">PG_ADDRESS_MASK</name><operator pos:start="219:44" pos:end="219:44">)</operator> <operator pos:start="219:46" pos:end="219:46">+</operator> <operator pos:start="219:48" pos:end="219:48">(</operator><operator pos:start="219:49" pos:end="219:49">(</operator><operator pos:start="219:50" pos:end="219:50">(</operator><name pos:start="219:51" pos:end="219:54">addr</name> <operator pos:start="219:56" pos:end="219:57">&gt;&gt;</operator> <literal type="number" pos:start="219:59" pos:end="219:60">21</literal><operator pos:start="219:61" pos:end="219:61">)</operator> <operator pos:start="219:63" pos:end="219:63">&amp;</operator> <literal type="number" pos:start="219:65" pos:end="219:69">0x1ff</literal><operator pos:start="219:70" pos:end="219:70">)</operator> <operator pos:start="219:72" pos:end="219:73">&lt;&lt;</operator> <literal type="number" pos:start="219:75" pos:end="219:75">3</literal><operator pos:start="219:76" pos:end="219:76">)</operator><operator pos:start="219:77" pos:end="219:77">)</operator> <operator pos:start="219:79" pos:end="219:79">&amp;</operator>

            <name pos:start="221:13" pos:end="221:25"><name pos:start="221:13" pos:end="221:15">env</name><operator pos:start="221:16" pos:end="221:17">-&gt;</operator><name pos:start="221:18" pos:end="221:25">a20_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:41"><expr pos:start="223:9" pos:end="223:40"><name pos:start="223:9" pos:end="223:11">pde</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <call pos:start="223:15" pos:end="223:40"><name pos:start="223:15" pos:end="223:22">ldq_phys</name><argument_list pos:start="223:23" pos:end="223:40">(<argument pos:start="223:24" pos:end="223:29"><expr pos:start="223:24" pos:end="223:29"><name pos:start="223:24" pos:end="223:29"><name pos:start="223:24" pos:end="223:25">cs</name><operator pos:start="223:26" pos:end="223:27">-&gt;</operator><name pos:start="223:28" pos:end="223:29">as</name></name></expr></argument>, <argument pos:start="223:32" pos:end="223:39"><expr pos:start="223:32" pos:end="223:39"><name pos:start="223:32" pos:end="223:39">pde_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="225:9" pos:end="229:9"><if pos:start="225:9" pos:end="229:9">if <condition pos:start="225:12" pos:end="225:37">(<expr pos:start="225:13" pos:end="225:36"><operator pos:start="225:13" pos:end="225:13">!</operator><operator pos:start="225:14" pos:end="225:14">(</operator><name pos:start="225:15" pos:end="225:17">pde</name> <operator pos:start="225:19" pos:end="225:19">&amp;</operator> <name pos:start="225:21" pos:end="225:35">PG_PRESENT_MASK</name><operator pos:start="225:36" pos:end="225:36">)</operator></expr>)</condition> <block pos:start="225:39" pos:end="229:9">{<block_content pos:start="227:13" pos:end="227:26">

            <goto pos:start="227:13" pos:end="227:26">goto <name pos:start="227:18" pos:end="227:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="231:9" pos:end="235:9"><if pos:start="231:9" pos:end="235:9">if <condition pos:start="231:12" pos:end="231:28">(<expr pos:start="231:13" pos:end="231:27"><name pos:start="231:13" pos:end="231:15">pde</name> <operator pos:start="231:17" pos:end="231:17">&amp;</operator> <name pos:start="231:19" pos:end="231:27">rsvd_mask</name></expr>)</condition> <block pos:start="231:30" pos:end="235:9">{<block_content pos:start="233:13" pos:end="233:31">

            <goto pos:start="233:13" pos:end="233:31">goto <name pos:start="233:18" pos:end="233:30">do_fault_rsvd</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="237:9" pos:end="241:9"><if pos:start="237:9" pos:end="241:9">if <condition pos:start="237:12" pos:end="237:62">(<expr pos:start="237:13" pos:end="237:61"><operator pos:start="237:13" pos:end="237:13">!</operator><operator pos:start="237:14" pos:end="237:14">(</operator><name pos:start="237:15" pos:end="237:23"><name pos:start="237:15" pos:end="237:17">env</name><operator pos:start="237:18" pos:end="237:19">-&gt;</operator><name pos:start="237:20" pos:end="237:23">efer</name></name> <operator pos:start="237:25" pos:end="237:25">&amp;</operator> <name pos:start="237:27" pos:end="237:38">MSR_EFER_NXE</name><operator pos:start="237:39" pos:end="237:39">)</operator> <operator pos:start="237:41" pos:end="237:42">&amp;&amp;</operator> <operator pos:start="237:44" pos:end="237:44">(</operator><name pos:start="237:45" pos:end="237:47">pde</name> <operator pos:start="237:49" pos:end="237:49">&amp;</operator> <name pos:start="237:51" pos:end="237:60">PG_NX_MASK</name><operator pos:start="237:61" pos:end="237:61">)</operator></expr>)</condition> <block pos:start="237:64" pos:end="241:9">{<block_content pos:start="239:13" pos:end="239:31">

            <goto pos:start="239:13" pos:end="239:31">goto <name pos:start="239:18" pos:end="239:30">do_fault_rsvd</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:33"><expr pos:start="243:9" pos:end="243:32"><name pos:start="243:9" pos:end="243:12">ptep</name> <operator pos:start="243:14" pos:end="243:15">&amp;=</operator> <name pos:start="243:17" pos:end="243:19">pde</name> <operator pos:start="243:21" pos:end="243:21">^</operator> <name pos:start="243:23" pos:end="243:32">PG_NX_MASK</name></expr>;</expr_stmt>

        <if_stmt pos:start="245:9" pos:end="257:9"><if pos:start="245:9" pos:end="257:9">if <condition pos:start="245:12" pos:end="245:30">(<expr pos:start="245:13" pos:end="245:29"><name pos:start="245:13" pos:end="245:15">pde</name> <operator pos:start="245:17" pos:end="245:17">&amp;</operator> <name pos:start="245:19" pos:end="245:29">PG_PSE_MASK</name></expr>)</condition> <block pos:start="245:32" pos:end="257:9">{<block_content pos:start="249:13" pos:end="255:34">

            <comment type="block" pos:start="247:13" pos:end="247:27">/* 2 MB page */</comment>

            <expr_stmt pos:start="249:13" pos:end="249:36"><expr pos:start="249:13" pos:end="249:35"><name pos:start="249:13" pos:end="249:21">page_size</name> <operator pos:start="249:23" pos:end="249:23">=</operator> <literal type="number" pos:start="249:25" pos:end="249:28">2048</literal> <operator pos:start="249:30" pos:end="249:30">*</operator> <literal type="number" pos:start="249:32" pos:end="249:35">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:32"><expr pos:start="251:13" pos:end="251:31"><name pos:start="251:13" pos:end="251:20">pte_addr</name> <operator pos:start="251:22" pos:end="251:22">=</operator> <name pos:start="251:24" pos:end="251:31">pde_addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:22"><expr pos:start="253:13" pos:end="253:21"><name pos:start="253:13" pos:end="253:15">pte</name> <operator pos:start="253:17" pos:end="253:17">=</operator> <name pos:start="253:19" pos:end="253:21">pde</name></expr>;</expr_stmt>

            <goto pos:start="255:13" pos:end="255:34">goto <name pos:start="255:18" pos:end="255:33">do_check_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="259:9" pos:end="259:23">/* 4 KB page */</comment>

        <if_stmt pos:start="261:9" pos:end="267:9"><if pos:start="261:9" pos:end="267:9">if <condition pos:start="261:12" pos:end="261:38">(<expr pos:start="261:13" pos:end="261:37"><operator pos:start="261:13" pos:end="261:13">!</operator><operator pos:start="261:14" pos:end="261:14">(</operator><name pos:start="261:15" pos:end="261:17">pde</name> <operator pos:start="261:19" pos:end="261:19">&amp;</operator> <name pos:start="261:21" pos:end="261:36">PG_ACCESSED_MASK</name><operator pos:start="261:37" pos:end="261:37">)</operator></expr>)</condition> <block pos:start="261:40" pos:end="267:9">{<block_content pos:start="263:13" pos:end="265:53">

            <expr_stmt pos:start="263:13" pos:end="263:36"><expr pos:start="263:13" pos:end="263:35"><name pos:start="263:13" pos:end="263:15">pde</name> <operator pos:start="263:17" pos:end="263:18">|=</operator> <name pos:start="263:20" pos:end="263:35">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:53"><expr pos:start="265:13" pos:end="265:52"><call pos:start="265:13" pos:end="265:52"><name pos:start="265:13" pos:end="265:29">stl_phys_notdirty</name><argument_list pos:start="265:30" pos:end="265:52">(<argument pos:start="265:31" pos:end="265:36"><expr pos:start="265:31" pos:end="265:36"><name pos:start="265:31" pos:end="265:36"><name pos:start="265:31" pos:end="265:32">cs</name><operator pos:start="265:33" pos:end="265:34">-&gt;</operator><name pos:start="265:35" pos:end="265:36">as</name></name></expr></argument>, <argument pos:start="265:39" pos:end="265:46"><expr pos:start="265:39" pos:end="265:46"><name pos:start="265:39" pos:end="265:46">pde_addr</name></expr></argument>, <argument pos:start="265:49" pos:end="265:51"><expr pos:start="265:49" pos:end="265:51"><name pos:start="265:49" pos:end="265:51">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="269:9" pos:end="271:26"><expr pos:start="269:9" pos:end="271:25"><name pos:start="269:9" pos:end="269:16">pte_addr</name> <operator pos:start="269:18" pos:end="269:18">=</operator> <operator pos:start="269:20" pos:end="269:20">(</operator><operator pos:start="269:21" pos:end="269:21">(</operator><name pos:start="269:22" pos:end="269:24">pde</name> <operator pos:start="269:26" pos:end="269:26">&amp;</operator> <name pos:start="269:28" pos:end="269:42">PG_ADDRESS_MASK</name><operator pos:start="269:43" pos:end="269:43">)</operator> <operator pos:start="269:45" pos:end="269:45">+</operator> <operator pos:start="269:47" pos:end="269:47">(</operator><operator pos:start="269:48" pos:end="269:48">(</operator><operator pos:start="269:49" pos:end="269:49">(</operator><name pos:start="269:50" pos:end="269:53">addr</name> <operator pos:start="269:55" pos:end="269:56">&gt;&gt;</operator> <literal type="number" pos:start="269:58" pos:end="269:59">12</literal><operator pos:start="269:60" pos:end="269:60">)</operator> <operator pos:start="269:62" pos:end="269:62">&amp;</operator> <literal type="number" pos:start="269:64" pos:end="269:68">0x1ff</literal><operator pos:start="269:69" pos:end="269:69">)</operator> <operator pos:start="269:71" pos:end="269:72">&lt;&lt;</operator> <literal type="number" pos:start="269:74" pos:end="269:74">3</literal><operator pos:start="269:75" pos:end="269:75">)</operator><operator pos:start="269:76" pos:end="269:76">)</operator> <operator pos:start="269:78" pos:end="269:78">&amp;</operator>

            <name pos:start="271:13" pos:end="271:25"><name pos:start="271:13" pos:end="271:15">env</name><operator pos:start="271:16" pos:end="271:17">-&gt;</operator><name pos:start="271:18" pos:end="271:25">a20_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:41"><expr pos:start="273:9" pos:end="273:40"><name pos:start="273:9" pos:end="273:11">pte</name> <operator pos:start="273:13" pos:end="273:13">=</operator> <call pos:start="273:15" pos:end="273:40"><name pos:start="273:15" pos:end="273:22">ldq_phys</name><argument_list pos:start="273:23" pos:end="273:40">(<argument pos:start="273:24" pos:end="273:29"><expr pos:start="273:24" pos:end="273:29"><name pos:start="273:24" pos:end="273:29"><name pos:start="273:24" pos:end="273:25">cs</name><operator pos:start="273:26" pos:end="273:27">-&gt;</operator><name pos:start="273:28" pos:end="273:29">as</name></name></expr></argument>, <argument pos:start="273:32" pos:end="273:39"><expr pos:start="273:32" pos:end="273:39"><name pos:start="273:32" pos:end="273:39">pte_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="275:9" pos:end="279:9"><if pos:start="275:9" pos:end="279:9">if <condition pos:start="275:12" pos:end="275:37">(<expr pos:start="275:13" pos:end="275:36"><operator pos:start="275:13" pos:end="275:13">!</operator><operator pos:start="275:14" pos:end="275:14">(</operator><name pos:start="275:15" pos:end="275:17">pte</name> <operator pos:start="275:19" pos:end="275:19">&amp;</operator> <name pos:start="275:21" pos:end="275:35">PG_PRESENT_MASK</name><operator pos:start="275:36" pos:end="275:36">)</operator></expr>)</condition> <block pos:start="275:39" pos:end="279:9">{<block_content pos:start="277:13" pos:end="277:26">

            <goto pos:start="277:13" pos:end="277:26">goto <name pos:start="277:18" pos:end="277:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="281:9" pos:end="285:9"><if pos:start="281:9" pos:end="285:9">if <condition pos:start="281:12" pos:end="281:28">(<expr pos:start="281:13" pos:end="281:27"><name pos:start="281:13" pos:end="281:15">pte</name> <operator pos:start="281:17" pos:end="281:17">&amp;</operator> <name pos:start="281:19" pos:end="281:27">rsvd_mask</name></expr>)</condition> <block pos:start="281:30" pos:end="285:9">{<block_content pos:start="283:13" pos:end="283:31">

            <goto pos:start="283:13" pos:end="283:31">goto <name pos:start="283:18" pos:end="283:30">do_fault_rsvd</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="287:9" pos:end="291:9"><if pos:start="287:9" pos:end="291:9">if <condition pos:start="287:12" pos:end="287:62">(<expr pos:start="287:13" pos:end="287:61"><operator pos:start="287:13" pos:end="287:13">!</operator><operator pos:start="287:14" pos:end="287:14">(</operator><name pos:start="287:15" pos:end="287:23"><name pos:start="287:15" pos:end="287:17">env</name><operator pos:start="287:18" pos:end="287:19">-&gt;</operator><name pos:start="287:20" pos:end="287:23">efer</name></name> <operator pos:start="287:25" pos:end="287:25">&amp;</operator> <name pos:start="287:27" pos:end="287:38">MSR_EFER_NXE</name><operator pos:start="287:39" pos:end="287:39">)</operator> <operator pos:start="287:41" pos:end="287:42">&amp;&amp;</operator> <operator pos:start="287:44" pos:end="287:44">(</operator><name pos:start="287:45" pos:end="287:47">pte</name> <operator pos:start="287:49" pos:end="287:49">&amp;</operator> <name pos:start="287:51" pos:end="287:60">PG_NX_MASK</name><operator pos:start="287:61" pos:end="287:61">)</operator></expr>)</condition> <block pos:start="287:64" pos:end="291:9">{<block_content pos:start="289:13" pos:end="289:31">

            <goto pos:start="289:13" pos:end="289:31">goto <name pos:start="289:18" pos:end="289:30">do_fault_rsvd</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="293:9" pos:end="293:61">/* combine pde and pte nx, user and rw protections */</comment>

        <expr_stmt pos:start="295:9" pos:end="295:33"><expr pos:start="295:9" pos:end="295:32"><name pos:start="295:9" pos:end="295:12">ptep</name> <operator pos:start="295:14" pos:end="295:15">&amp;=</operator> <name pos:start="295:17" pos:end="295:19">pte</name> <operator pos:start="295:21" pos:end="295:21">^</operator> <name pos:start="295:23" pos:end="295:32">PG_NX_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:25"><expr pos:start="297:9" pos:end="297:24"><name pos:start="297:9" pos:end="297:17">page_size</name> <operator pos:start="297:19" pos:end="297:19">=</operator> <literal type="number" pos:start="297:21" pos:end="297:24">4096</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="299:7" pos:end="371:5">else <block pos:start="299:12" pos:end="371:5">{<block_content pos:start="301:9" pos:end="369:22">

        <decl_stmt pos:start="301:9" pos:end="301:21"><decl pos:start="301:9" pos:end="301:20"><type pos:start="301:9" pos:end="301:16"><name pos:start="301:9" pos:end="301:16">uint32_t</name></type> <name pos:start="301:18" pos:end="301:20">pde</name></decl>;</decl_stmt>



        <comment type="block" pos:start="305:9" pos:end="305:34">/* page directory entry */</comment>

        <expr_stmt pos:start="307:9" pos:end="309:26"><expr pos:start="307:9" pos:end="309:25"><name pos:start="307:9" pos:end="307:16">pde_addr</name> <operator pos:start="307:18" pos:end="307:18">=</operator> <operator pos:start="307:20" pos:end="307:20">(</operator><operator pos:start="307:21" pos:end="307:21">(</operator><name pos:start="307:22" pos:end="307:31"><name pos:start="307:22" pos:end="307:24">env</name><operator pos:start="307:25" pos:end="307:26">-&gt;</operator><name pos:start="307:27" pos:end="307:28">cr</name><index pos:start="307:29" pos:end="307:31">[<expr pos:start="307:30" pos:end="307:30"><literal type="number" pos:start="307:30" pos:end="307:30">3</literal></expr>]</index></name> <operator pos:start="307:33" pos:end="307:33">&amp;</operator> <operator pos:start="307:35" pos:end="307:35">~</operator><literal type="number" pos:start="307:36" pos:end="307:40">0xfff</literal><operator pos:start="307:41" pos:end="307:41">)</operator> <operator pos:start="307:43" pos:end="307:43">+</operator> <operator pos:start="307:45" pos:end="307:45">(</operator><operator pos:start="307:46" pos:end="307:46">(</operator><name pos:start="307:47" pos:end="307:50">addr</name> <operator pos:start="307:52" pos:end="307:53">&gt;&gt;</operator> <literal type="number" pos:start="307:55" pos:end="307:56">20</literal><operator pos:start="307:57" pos:end="307:57">)</operator> <operator pos:start="307:59" pos:end="307:59">&amp;</operator> <literal type="number" pos:start="307:61" pos:end="307:65">0xffc</literal><operator pos:start="307:66" pos:end="307:66">)</operator><operator pos:start="307:67" pos:end="307:67">)</operator> <operator pos:start="307:69" pos:end="307:69">&amp;</operator>

            <name pos:start="309:13" pos:end="309:25"><name pos:start="309:13" pos:end="309:15">env</name><operator pos:start="309:16" pos:end="309:17">-&gt;</operator><name pos:start="309:18" pos:end="309:25">a20_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:41"><expr pos:start="311:9" pos:end="311:40"><name pos:start="311:9" pos:end="311:11">pde</name> <operator pos:start="311:13" pos:end="311:13">=</operator> <call pos:start="311:15" pos:end="311:40"><name pos:start="311:15" pos:end="311:22">ldl_phys</name><argument_list pos:start="311:23" pos:end="311:40">(<argument pos:start="311:24" pos:end="311:29"><expr pos:start="311:24" pos:end="311:29"><name pos:start="311:24" pos:end="311:29"><name pos:start="311:24" pos:end="311:25">cs</name><operator pos:start="311:26" pos:end="311:27">-&gt;</operator><name pos:start="311:28" pos:end="311:29">as</name></name></expr></argument>, <argument pos:start="311:32" pos:end="311:39"><expr pos:start="311:32" pos:end="311:39"><name pos:start="311:32" pos:end="311:39">pde_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="313:9" pos:end="317:9"><if pos:start="313:9" pos:end="317:9">if <condition pos:start="313:12" pos:end="313:37">(<expr pos:start="313:13" pos:end="313:36"><operator pos:start="313:13" pos:end="313:13">!</operator><operator pos:start="313:14" pos:end="313:14">(</operator><name pos:start="313:15" pos:end="313:17">pde</name> <operator pos:start="313:19" pos:end="313:19">&amp;</operator> <name pos:start="313:21" pos:end="313:35">PG_PRESENT_MASK</name><operator pos:start="313:36" pos:end="313:36">)</operator></expr>)</condition> <block pos:start="313:39" pos:end="317:9">{<block_content pos:start="315:13" pos:end="315:26">

            <goto pos:start="315:13" pos:end="315:26">goto <name pos:start="315:18" pos:end="315:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:32"><expr pos:start="319:9" pos:end="319:31"><name pos:start="319:9" pos:end="319:12">ptep</name> <operator pos:start="319:14" pos:end="319:14">=</operator> <name pos:start="319:16" pos:end="319:18">pde</name> <operator pos:start="319:20" pos:end="319:20">|</operator> <name pos:start="319:22" pos:end="319:31">PG_NX_MASK</name></expr>;</expr_stmt>



        <comment type="block" pos:start="323:9" pos:end="323:55">/* if PSE bit is set, then we use a 4MB page */</comment>

        <if_stmt pos:start="325:9" pos:end="335:9"><if pos:start="325:9" pos:end="335:9">if <condition pos:start="325:12" pos:end="325:63">(<expr pos:start="325:13" pos:end="325:62"><operator pos:start="325:13" pos:end="325:13">(</operator><name pos:start="325:14" pos:end="325:16">pde</name> <operator pos:start="325:18" pos:end="325:18">&amp;</operator> <name pos:start="325:20" pos:end="325:30">PG_PSE_MASK</name><operator pos:start="325:31" pos:end="325:31">)</operator> <operator pos:start="325:33" pos:end="325:34">&amp;&amp;</operator> <operator pos:start="325:36" pos:end="325:36">(</operator><name pos:start="325:37" pos:end="325:46"><name pos:start="325:37" pos:end="325:39">env</name><operator pos:start="325:40" pos:end="325:41">-&gt;</operator><name pos:start="325:42" pos:end="325:43">cr</name><index pos:start="325:44" pos:end="325:46">[<expr pos:start="325:45" pos:end="325:45"><literal type="number" pos:start="325:45" pos:end="325:45">4</literal></expr>]</index></name> <operator pos:start="325:48" pos:end="325:48">&amp;</operator> <name pos:start="325:50" pos:end="325:61">CR4_PSE_MASK</name><operator pos:start="325:62" pos:end="325:62">)</operator></expr>)</condition> <block pos:start="325:65" pos:end="335:9">{<block_content pos:start="327:13" pos:end="333:34">

            <expr_stmt pos:start="327:13" pos:end="327:36"><expr pos:start="327:13" pos:end="327:35"><name pos:start="327:13" pos:end="327:21">page_size</name> <operator pos:start="327:23" pos:end="327:23">=</operator> <literal type="number" pos:start="327:25" pos:end="327:28">4096</literal> <operator pos:start="327:30" pos:end="327:30">*</operator> <literal type="number" pos:start="327:32" pos:end="327:35">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:32"><expr pos:start="329:13" pos:end="329:31"><name pos:start="329:13" pos:end="329:20">pte_addr</name> <operator pos:start="329:22" pos:end="329:22">=</operator> <name pos:start="329:24" pos:end="329:31">pde_addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:22"><expr pos:start="331:13" pos:end="331:21"><name pos:start="331:13" pos:end="331:15">pte</name> <operator pos:start="331:17" pos:end="331:17">=</operator> <name pos:start="331:19" pos:end="331:21">pde</name></expr>;</expr_stmt>

            <goto pos:start="333:13" pos:end="333:34">goto <name pos:start="333:18" pos:end="333:33">do_check_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="339:9" pos:end="345:9"><if pos:start="339:9" pos:end="345:9">if <condition pos:start="339:12" pos:end="339:38">(<expr pos:start="339:13" pos:end="339:37"><operator pos:start="339:13" pos:end="339:13">!</operator><operator pos:start="339:14" pos:end="339:14">(</operator><name pos:start="339:15" pos:end="339:17">pde</name> <operator pos:start="339:19" pos:end="339:19">&amp;</operator> <name pos:start="339:21" pos:end="339:36">PG_ACCESSED_MASK</name><operator pos:start="339:37" pos:end="339:37">)</operator></expr>)</condition> <block pos:start="339:40" pos:end="345:9">{<block_content pos:start="341:13" pos:end="343:53">

            <expr_stmt pos:start="341:13" pos:end="341:36"><expr pos:start="341:13" pos:end="341:35"><name pos:start="341:13" pos:end="341:15">pde</name> <operator pos:start="341:17" pos:end="341:18">|=</operator> <name pos:start="341:20" pos:end="341:35">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:53"><expr pos:start="343:13" pos:end="343:52"><call pos:start="343:13" pos:end="343:52"><name pos:start="343:13" pos:end="343:29">stl_phys_notdirty</name><argument_list pos:start="343:30" pos:end="343:52">(<argument pos:start="343:31" pos:end="343:36"><expr pos:start="343:31" pos:end="343:36"><name pos:start="343:31" pos:end="343:36"><name pos:start="343:31" pos:end="343:32">cs</name><operator pos:start="343:33" pos:end="343:34">-&gt;</operator><name pos:start="343:35" pos:end="343:36">as</name></name></expr></argument>, <argument pos:start="343:39" pos:end="343:46"><expr pos:start="343:39" pos:end="343:46"><name pos:start="343:39" pos:end="343:46">pde_addr</name></expr></argument>, <argument pos:start="343:49" pos:end="343:51"><expr pos:start="343:49" pos:end="343:51"><name pos:start="343:49" pos:end="343:51">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="349:9" pos:end="349:34">/* page directory entry */</comment>

        <expr_stmt pos:start="351:9" pos:end="353:26"><expr pos:start="351:9" pos:end="353:25"><name pos:start="351:9" pos:end="351:16">pte_addr</name> <operator pos:start="351:18" pos:end="351:18">=</operator> <operator pos:start="351:20" pos:end="351:20">(</operator><operator pos:start="351:21" pos:end="351:21">(</operator><name pos:start="351:22" pos:end="351:24">pde</name> <operator pos:start="351:26" pos:end="351:26">&amp;</operator> <operator pos:start="351:28" pos:end="351:28">~</operator><literal type="number" pos:start="351:29" pos:end="351:33">0xfff</literal><operator pos:start="351:34" pos:end="351:34">)</operator> <operator pos:start="351:36" pos:end="351:36">+</operator> <operator pos:start="351:38" pos:end="351:38">(</operator><operator pos:start="351:39" pos:end="351:39">(</operator><name pos:start="351:40" pos:end="351:43">addr</name> <operator pos:start="351:45" pos:end="351:46">&gt;&gt;</operator> <literal type="number" pos:start="351:48" pos:end="351:49">10</literal><operator pos:start="351:50" pos:end="351:50">)</operator> <operator pos:start="351:52" pos:end="351:52">&amp;</operator> <literal type="number" pos:start="351:54" pos:end="351:58">0xffc</literal><operator pos:start="351:59" pos:end="351:59">)</operator><operator pos:start="351:60" pos:end="351:60">)</operator> <operator pos:start="351:62" pos:end="351:62">&amp;</operator>

            <name pos:start="353:13" pos:end="353:25"><name pos:start="353:13" pos:end="353:15">env</name><operator pos:start="353:16" pos:end="353:17">-&gt;</operator><name pos:start="353:18" pos:end="353:25">a20_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:41"><expr pos:start="355:9" pos:end="355:40"><name pos:start="355:9" pos:end="355:11">pte</name> <operator pos:start="355:13" pos:end="355:13">=</operator> <call pos:start="355:15" pos:end="355:40"><name pos:start="355:15" pos:end="355:22">ldl_phys</name><argument_list pos:start="355:23" pos:end="355:40">(<argument pos:start="355:24" pos:end="355:29"><expr pos:start="355:24" pos:end="355:29"><name pos:start="355:24" pos:end="355:29"><name pos:start="355:24" pos:end="355:25">cs</name><operator pos:start="355:26" pos:end="355:27">-&gt;</operator><name pos:start="355:28" pos:end="355:29">as</name></name></expr></argument>, <argument pos:start="355:32" pos:end="355:39"><expr pos:start="355:32" pos:end="355:39"><name pos:start="355:32" pos:end="355:39">pte_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="357:9" pos:end="361:9"><if pos:start="357:9" pos:end="361:9">if <condition pos:start="357:12" pos:end="357:37">(<expr pos:start="357:13" pos:end="357:36"><operator pos:start="357:13" pos:end="357:13">!</operator><operator pos:start="357:14" pos:end="357:14">(</operator><name pos:start="357:15" pos:end="357:17">pte</name> <operator pos:start="357:19" pos:end="357:19">&amp;</operator> <name pos:start="357:21" pos:end="357:35">PG_PRESENT_MASK</name><operator pos:start="357:36" pos:end="357:36">)</operator></expr>)</condition> <block pos:start="357:39" pos:end="361:9">{<block_content pos:start="359:13" pos:end="359:26">

            <goto pos:start="359:13" pos:end="359:26">goto <name pos:start="359:18" pos:end="359:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="363:9" pos:end="363:57">/* combine pde and pte user and rw protections */</comment>

        <expr_stmt pos:start="365:9" pos:end="365:33"><expr pos:start="365:9" pos:end="365:32"><name pos:start="365:9" pos:end="365:12">ptep</name> <operator pos:start="365:14" pos:end="365:15">&amp;=</operator> <name pos:start="365:17" pos:end="365:19">pte</name> <operator pos:start="365:21" pos:end="365:21">|</operator> <name pos:start="365:23" pos:end="365:32">PG_NX_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:25"><expr pos:start="367:9" pos:end="367:24"><name pos:start="367:9" pos:end="367:17">page_size</name> <operator pos:start="367:19" pos:end="367:19">=</operator> <literal type="number" pos:start="367:21" pos:end="367:24">4096</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:22"><expr pos:start="369:9" pos:end="369:21"><name pos:start="369:9" pos:end="369:17">rsvd_mask</name> <operator pos:start="369:19" pos:end="369:19">=</operator> <literal type="number" pos:start="369:21" pos:end="369:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="375:1" pos:end="375:17"><name pos:start="375:1" pos:end="375:16">do_check_protect</name>:</label>

    <if_stmt pos:start="377:5" pos:end="381:5"><if pos:start="377:5" pos:end="381:5">if <condition pos:start="377:8" pos:end="377:24">(<expr pos:start="377:9" pos:end="377:23"><name pos:start="377:9" pos:end="377:11">pte</name> <operator pos:start="377:13" pos:end="377:13">&amp;</operator> <name pos:start="377:15" pos:end="377:23">rsvd_mask</name></expr>)</condition> <block pos:start="377:26" pos:end="381:5">{<block_content pos:start="379:9" pos:end="379:27">

        <goto pos:start="379:9" pos:end="379:27">goto <name pos:start="379:14" pos:end="379:26">do_fault_rsvd</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="383:5" pos:end="383:23"><expr pos:start="383:5" pos:end="383:22"><name pos:start="383:5" pos:end="383:8">ptep</name> <operator pos:start="383:10" pos:end="383:11">^=</operator> <name pos:start="383:13" pos:end="383:22">PG_NX_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="385:5" pos:end="389:5"><if pos:start="385:5" pos:end="389:5">if <condition pos:start="385:8" pos:end="385:46">(<expr pos:start="385:9" pos:end="385:45"><operator pos:start="385:9" pos:end="385:9">(</operator><name pos:start="385:10" pos:end="385:13">ptep</name> <operator pos:start="385:15" pos:end="385:15">&amp;</operator> <name pos:start="385:17" pos:end="385:26">PG_NX_MASK</name><operator pos:start="385:27" pos:end="385:27">)</operator> <operator pos:start="385:29" pos:end="385:30">&amp;&amp;</operator> <name pos:start="385:32" pos:end="385:40">is_write1</name> <operator pos:start="385:42" pos:end="385:43">==</operator> <literal type="number" pos:start="385:45" pos:end="385:45">2</literal></expr>)</condition> <block pos:start="385:48" pos:end="389:5">{<block_content pos:start="387:9" pos:end="387:30">

        <goto pos:start="387:9" pos:end="387:30">goto <name pos:start="387:14" pos:end="387:29">do_fault_protect</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="391:5" pos:end="447:5">switch <condition pos:start="391:12" pos:end="391:20">(<expr pos:start="391:13" pos:end="391:19"><name pos:start="391:13" pos:end="391:19">mmu_idx</name></expr>)</condition> <block pos:start="391:22" pos:end="447:5">{<block_content pos:start="393:5" pos:end="445:14">

    <case pos:start="393:5" pos:end="393:22">case <expr pos:start="393:10" pos:end="393:21"><name pos:start="393:10" pos:end="393:21">MMU_USER_IDX</name></expr>:</case>

        <if_stmt pos:start="395:9" pos:end="399:9"><if pos:start="395:9" pos:end="399:9">if <condition pos:start="395:12" pos:end="395:35">(<expr pos:start="395:13" pos:end="395:34"><operator pos:start="395:13" pos:end="395:13">!</operator><operator pos:start="395:14" pos:end="395:14">(</operator><name pos:start="395:15" pos:end="395:18">ptep</name> <operator pos:start="395:20" pos:end="395:20">&amp;</operator> <name pos:start="395:22" pos:end="395:33">PG_USER_MASK</name><operator pos:start="395:34" pos:end="395:34">)</operator></expr>)</condition> <block pos:start="395:37" pos:end="399:9">{<block_content pos:start="397:13" pos:end="397:34">

            <goto pos:start="397:13" pos:end="397:34">goto <name pos:start="397:18" pos:end="397:33">do_fault_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="401:9" pos:end="405:9"><if pos:start="401:9" pos:end="405:9">if <condition pos:start="401:12" pos:end="401:45">(<expr pos:start="401:13" pos:end="401:44"><name pos:start="401:13" pos:end="401:20">is_write</name> <operator pos:start="401:22" pos:end="401:23">&amp;&amp;</operator> <operator pos:start="401:25" pos:end="401:25">!</operator><operator pos:start="401:26" pos:end="401:26">(</operator><name pos:start="401:27" pos:end="401:30">ptep</name> <operator pos:start="401:32" pos:end="401:32">&amp;</operator> <name pos:start="401:34" pos:end="401:43">PG_RW_MASK</name><operator pos:start="401:44" pos:end="401:44">)</operator></expr>)</condition> <block pos:start="401:47" pos:end="405:9">{<block_content pos:start="403:13" pos:end="403:34">

            <goto pos:start="403:13" pos:end="403:34">goto <name pos:start="403:18" pos:end="403:33">do_fault_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="407:9" pos:end="407:14">break;</break>



    <case pos:start="411:5" pos:end="411:23">case <expr pos:start="411:10" pos:end="411:22"><name pos:start="411:10" pos:end="411:22">MMU_KSMAP_IDX</name></expr>:</case>

        <if_stmt pos:start="413:9" pos:end="417:9"><if pos:start="413:9" pos:end="417:9">if <condition pos:start="413:12" pos:end="413:52">(<expr pos:start="413:13" pos:end="413:51"><name pos:start="413:13" pos:end="413:21">is_write1</name> <operator pos:start="413:23" pos:end="413:24">!=</operator> <literal type="number" pos:start="413:26" pos:end="413:26">2</literal> <operator pos:start="413:28" pos:end="413:29">&amp;&amp;</operator> <operator pos:start="413:31" pos:end="413:31">(</operator><name pos:start="413:32" pos:end="413:35">ptep</name> <operator pos:start="413:37" pos:end="413:37">&amp;</operator> <name pos:start="413:39" pos:end="413:50">PG_USER_MASK</name><operator pos:start="413:51" pos:end="413:51">)</operator></expr>)</condition> <block pos:start="413:54" pos:end="417:9">{<block_content pos:start="415:13" pos:end="415:34">

            <goto pos:start="415:13" pos:end="415:34">goto <name pos:start="415:18" pos:end="415:33">do_fault_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="419:9" pos:end="419:26">/* fall through */</comment>

    <case pos:start="421:5" pos:end="421:25">case <expr pos:start="421:10" pos:end="421:24"><name pos:start="421:10" pos:end="421:24">MMU_KNOSMAP_IDX</name></expr>:</case>

        <if_stmt pos:start="423:9" pos:end="429:9"><if pos:start="423:9" pos:end="429:9">if <condition pos:start="423:12" pos:end="425:34">(<expr pos:start="423:13" pos:end="425:33"><name pos:start="423:13" pos:end="423:21">is_write1</name> <operator pos:start="423:23" pos:end="423:24">==</operator> <literal type="number" pos:start="423:26" pos:end="423:26">2</literal> <operator pos:start="423:28" pos:end="423:29">&amp;&amp;</operator> <operator pos:start="423:31" pos:end="423:31">(</operator><name pos:start="423:32" pos:end="423:41"><name pos:start="423:32" pos:end="423:34">env</name><operator pos:start="423:35" pos:end="423:36">-&gt;</operator><name pos:start="423:37" pos:end="423:38">cr</name><index pos:start="423:39" pos:end="423:41">[<expr pos:start="423:40" pos:end="423:40"><literal type="number" pos:start="423:40" pos:end="423:40">4</literal></expr>]</index></name> <operator pos:start="423:43" pos:end="423:43">&amp;</operator> <name pos:start="423:45" pos:end="423:57">CR4_SMEP_MASK</name><operator pos:start="423:58" pos:end="423:58">)</operator> <operator pos:start="423:60" pos:end="423:61">&amp;&amp;</operator>

            <operator pos:start="425:13" pos:end="425:13">(</operator><name pos:start="425:14" pos:end="425:17">ptep</name> <operator pos:start="425:19" pos:end="425:19">&amp;</operator> <name pos:start="425:21" pos:end="425:32">PG_USER_MASK</name><operator pos:start="425:33" pos:end="425:33">)</operator></expr>)</condition> <block pos:start="425:36" pos:end="429:9">{<block_content pos:start="427:13" pos:end="427:34">

            <goto pos:start="427:13" pos:end="427:34">goto <name pos:start="427:18" pos:end="427:33">do_fault_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="431:9" pos:end="437:9"><if pos:start="431:9" pos:end="437:9">if <condition pos:start="431:12" pos:end="433:45">(<expr pos:start="431:13" pos:end="433:44"><operator pos:start="431:13" pos:end="431:13">(</operator><name pos:start="431:14" pos:end="431:23"><name pos:start="431:14" pos:end="431:16">env</name><operator pos:start="431:17" pos:end="431:18">-&gt;</operator><name pos:start="431:19" pos:end="431:20">cr</name><index pos:start="431:21" pos:end="431:23">[<expr pos:start="431:22" pos:end="431:22"><literal type="number" pos:start="431:22" pos:end="431:22">0</literal></expr>]</index></name> <operator pos:start="431:25" pos:end="431:25">&amp;</operator> <name pos:start="431:27" pos:end="431:37">CR0_WP_MASK</name><operator pos:start="431:38" pos:end="431:38">)</operator> <operator pos:start="431:40" pos:end="431:41">&amp;&amp;</operator>

            <name pos:start="433:13" pos:end="433:20">is_write</name> <operator pos:start="433:22" pos:end="433:23">&amp;&amp;</operator> <operator pos:start="433:25" pos:end="433:25">!</operator><operator pos:start="433:26" pos:end="433:26">(</operator><name pos:start="433:27" pos:end="433:30">ptep</name> <operator pos:start="433:32" pos:end="433:32">&amp;</operator> <name pos:start="433:34" pos:end="433:43">PG_RW_MASK</name><operator pos:start="433:44" pos:end="433:44">)</operator></expr>)</condition> <block pos:start="433:47" pos:end="437:9">{<block_content pos:start="435:13" pos:end="435:34">

            <goto pos:start="435:13" pos:end="435:34">goto <name pos:start="435:18" pos:end="435:33">do_fault_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="439:9" pos:end="439:14">break;</break>



    <default pos:start="443:5" pos:end="443:12">default:</default> <comment type="block" pos:start="443:14" pos:end="443:32">/* cannot happen */</comment>

        <break pos:start="445:9" pos:end="445:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="449:5" pos:end="449:50"><expr pos:start="449:5" pos:end="449:49"><name pos:start="449:5" pos:end="449:12">is_dirty</name> <operator pos:start="449:14" pos:end="449:14">=</operator> <name pos:start="449:16" pos:end="449:23">is_write</name> <operator pos:start="449:25" pos:end="449:26">&amp;&amp;</operator> <operator pos:start="449:28" pos:end="449:28">!</operator><operator pos:start="449:29" pos:end="449:29">(</operator><name pos:start="449:30" pos:end="449:32">pte</name> <operator pos:start="449:34" pos:end="449:34">&amp;</operator> <name pos:start="449:36" pos:end="449:48">PG_DIRTY_MASK</name><operator pos:start="449:49" pos:end="449:49">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="451:5" pos:end="463:5"><if pos:start="451:5" pos:end="463:5">if <condition pos:start="451:8" pos:end="451:46">(<expr pos:start="451:9" pos:end="451:45"><operator pos:start="451:9" pos:end="451:9">!</operator><operator pos:start="451:10" pos:end="451:10">(</operator><name pos:start="451:11" pos:end="451:13">pte</name> <operator pos:start="451:15" pos:end="451:15">&amp;</operator> <name pos:start="451:17" pos:end="451:32">PG_ACCESSED_MASK</name><operator pos:start="451:33" pos:end="451:33">)</operator> <operator pos:start="451:35" pos:end="451:36">||</operator> <name pos:start="451:38" pos:end="451:45">is_dirty</name></expr>)</condition> <block pos:start="451:48" pos:end="463:5">{<block_content pos:start="453:9" pos:end="461:49">

        <expr_stmt pos:start="453:9" pos:end="453:32"><expr pos:start="453:9" pos:end="453:31"><name pos:start="453:9" pos:end="453:11">pte</name> <operator pos:start="453:13" pos:end="453:14">|=</operator> <name pos:start="453:16" pos:end="453:31">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

        <if_stmt pos:start="455:9" pos:end="459:9"><if pos:start="455:9" pos:end="459:9">if <condition pos:start="455:12" pos:end="455:21">(<expr pos:start="455:13" pos:end="455:20"><name pos:start="455:13" pos:end="455:20">is_dirty</name></expr>)</condition> <block pos:start="455:23" pos:end="459:9">{<block_content pos:start="457:13" pos:end="457:33">

            <expr_stmt pos:start="457:13" pos:end="457:33"><expr pos:start="457:13" pos:end="457:32"><name pos:start="457:13" pos:end="457:15">pte</name> <operator pos:start="457:17" pos:end="457:18">|=</operator> <name pos:start="457:20" pos:end="457:32">PG_DIRTY_MASK</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="461:9" pos:end="461:49"><expr pos:start="461:9" pos:end="461:48"><call pos:start="461:9" pos:end="461:48"><name pos:start="461:9" pos:end="461:25">stl_phys_notdirty</name><argument_list pos:start="461:26" pos:end="461:48">(<argument pos:start="461:27" pos:end="461:32"><expr pos:start="461:27" pos:end="461:32"><name pos:start="461:27" pos:end="461:32"><name pos:start="461:27" pos:end="461:28">cs</name><operator pos:start="461:29" pos:end="461:30">-&gt;</operator><name pos:start="461:31" pos:end="461:32">as</name></name></expr></argument>, <argument pos:start="461:35" pos:end="461:42"><expr pos:start="461:35" pos:end="461:42"><name pos:start="461:35" pos:end="461:42">pte_addr</name></expr></argument>, <argument pos:start="461:45" pos:end="461:47"><expr pos:start="461:45" pos:end="461:47"><name pos:start="461:45" pos:end="461:47">pte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="467:5" pos:end="467:40">/* the page can be put in the TLB */</comment>

    <expr_stmt pos:start="469:5" pos:end="469:21"><expr pos:start="469:5" pos:end="469:20"><name pos:start="469:5" pos:end="469:8">prot</name> <operator pos:start="469:10" pos:end="469:10">=</operator> <name pos:start="469:12" pos:end="469:20">PAGE_READ</name></expr>;</expr_stmt>

    <if_stmt pos:start="471:5" pos:end="473:26"><if pos:start="471:5" pos:end="473:26">if <condition pos:start="471:8" pos:end="471:29">(<expr pos:start="471:9" pos:end="471:28"><operator pos:start="471:9" pos:end="471:9">!</operator><operator pos:start="471:10" pos:end="471:10">(</operator><name pos:start="471:11" pos:end="471:14">ptep</name> <operator pos:start="471:16" pos:end="471:16">&amp;</operator> <name pos:start="471:18" pos:end="471:27">PG_NX_MASK</name><operator pos:start="471:28" pos:end="471:28">)</operator></expr>)</condition><block type="pseudo" pos:start="473:9" pos:end="473:26"><block_content pos:start="473:9" pos:end="473:26">

        <expr_stmt pos:start="473:9" pos:end="473:26"><expr pos:start="473:9" pos:end="473:25"><name pos:start="473:9" pos:end="473:12">prot</name> <operator pos:start="473:14" pos:end="473:15">|=</operator> <name pos:start="473:17" pos:end="473:25">PAGE_EXEC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="475:5" pos:end="497:5"><if pos:start="475:5" pos:end="497:5">if <condition pos:start="475:8" pos:end="475:28">(<expr pos:start="475:9" pos:end="475:27"><name pos:start="475:9" pos:end="475:11">pte</name> <operator pos:start="475:13" pos:end="475:13">&amp;</operator> <name pos:start="475:15" pos:end="475:27">PG_DIRTY_MASK</name></expr>)</condition> <block pos:start="475:30" pos:end="497:5">{<block_content pos:start="481:9" pos:end="495:9">

        <comment type="block" pos:start="477:9" pos:end="479:30">/* only set write access if already dirty... otherwise wait

           for dirty access */</comment>

        <if_stmt pos:start="481:9" pos:end="495:9"><if pos:start="481:9" pos:end="487:9">if <condition pos:start="481:12" pos:end="481:20">(<expr pos:start="481:13" pos:end="481:19"><name pos:start="481:13" pos:end="481:19">is_user</name></expr>)</condition> <block pos:start="481:22" pos:end="487:9">{<block_content pos:start="483:13" pos:end="485:35">

            <if_stmt pos:start="483:13" pos:end="485:35"><if pos:start="483:13" pos:end="485:35">if <condition pos:start="483:16" pos:end="483:34">(<expr pos:start="483:17" pos:end="483:33"><name pos:start="483:17" pos:end="483:20">ptep</name> <operator pos:start="483:22" pos:end="483:22">&amp;</operator> <name pos:start="483:24" pos:end="483:33">PG_RW_MASK</name></expr>)</condition><block type="pseudo" pos:start="485:17" pos:end="485:35"><block_content pos:start="485:17" pos:end="485:35">

                <expr_stmt pos:start="485:17" pos:end="485:35"><expr pos:start="485:17" pos:end="485:34"><name pos:start="485:17" pos:end="485:20">prot</name> <operator pos:start="485:22" pos:end="485:23">|=</operator> <name pos:start="485:25" pos:end="485:34">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="487:11" pos:end="495:9">else <block pos:start="487:16" pos:end="495:9">{<block_content pos:start="489:13" pos:end="493:35">

            <if_stmt pos:start="489:13" pos:end="493:35"><if pos:start="489:13" pos:end="493:35">if <condition pos:start="489:16" pos:end="491:36">(<expr pos:start="489:17" pos:end="491:35"><operator pos:start="489:17" pos:end="489:17">!</operator><operator pos:start="489:18" pos:end="489:18">(</operator><name pos:start="489:19" pos:end="489:28"><name pos:start="489:19" pos:end="489:21">env</name><operator pos:start="489:22" pos:end="489:23">-&gt;</operator><name pos:start="489:24" pos:end="489:25">cr</name><index pos:start="489:26" pos:end="489:28">[<expr pos:start="489:27" pos:end="489:27"><literal type="number" pos:start="489:27" pos:end="489:27">0</literal></expr>]</index></name> <operator pos:start="489:30" pos:end="489:30">&amp;</operator> <name pos:start="489:32" pos:end="489:42">CR0_WP_MASK</name><operator pos:start="489:43" pos:end="489:43">)</operator> <operator pos:start="489:45" pos:end="489:46">||</operator>

                <operator pos:start="491:17" pos:end="491:17">(</operator><name pos:start="491:18" pos:end="491:21">ptep</name> <operator pos:start="491:23" pos:end="491:23">&amp;</operator> <name pos:start="491:25" pos:end="491:34">PG_RW_MASK</name><operator pos:start="491:35" pos:end="491:35">)</operator></expr>)</condition><block type="pseudo" pos:start="493:17" pos:end="493:35"><block_content pos:start="493:17" pos:end="493:35">

                <expr_stmt pos:start="493:17" pos:end="493:35"><expr pos:start="493:17" pos:end="493:34"><name pos:start="493:17" pos:end="493:20">prot</name> <operator pos:start="493:22" pos:end="493:23">|=</operator> <name pos:start="493:25" pos:end="493:34">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

 <label pos:start="499:2" pos:end="499:12"><name pos:start="499:2" pos:end="499:11">do_mapping</name>:</label>

    <expr_stmt pos:start="501:5" pos:end="501:30"><expr pos:start="501:5" pos:end="501:29"><name pos:start="501:5" pos:end="501:7">pte</name> <operator pos:start="501:9" pos:end="501:9">=</operator> <name pos:start="501:11" pos:end="501:13">pte</name> <operator pos:start="501:15" pos:end="501:15">&amp;</operator> <name pos:start="501:17" pos:end="501:29"><name pos:start="501:17" pos:end="501:19">env</name><operator pos:start="501:20" pos:end="501:21">-&gt;</operator><name pos:start="501:22" pos:end="501:29">a20_mask</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="505:5" pos:end="505:28">/* align to page_size */</comment>

    <expr_stmt pos:start="507:5" pos:end="507:46"><expr pos:start="507:5" pos:end="507:45"><name pos:start="507:5" pos:end="507:7">pte</name> <operator pos:start="507:9" pos:end="507:10">&amp;=</operator> <name pos:start="507:12" pos:end="507:26">PG_ADDRESS_MASK</name> <operator pos:start="507:28" pos:end="507:28">&amp;</operator> <operator pos:start="507:30" pos:end="507:30">~</operator><operator pos:start="507:31" pos:end="507:31">(</operator><name pos:start="507:32" pos:end="507:40">page_size</name> <operator pos:start="507:42" pos:end="507:42">-</operator> <literal type="number" pos:start="507:44" pos:end="507:44">1</literal><operator pos:start="507:45" pos:end="507:45">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="511:5" pos:end="513:35">/* Even if 4MB pages, we map only one 4KB page in the cache to

       avoid filling it too fast */</comment>

    <expr_stmt pos:start="515:5" pos:end="515:36"><expr pos:start="515:5" pos:end="515:35"><name pos:start="515:5" pos:end="515:9">vaddr</name> <operator pos:start="515:11" pos:end="515:11">=</operator> <name pos:start="515:13" pos:end="515:16">addr</name> <operator pos:start="515:18" pos:end="515:18">&amp;</operator> <name pos:start="515:20" pos:end="515:35">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="517:5" pos:end="517:42"><expr pos:start="517:5" pos:end="517:41"><name pos:start="517:5" pos:end="517:15">page_offset</name> <operator pos:start="517:17" pos:end="517:17">=</operator> <name pos:start="517:19" pos:end="517:23">vaddr</name> <operator pos:start="517:25" pos:end="517:25">&amp;</operator> <operator pos:start="517:27" pos:end="517:27">(</operator><name pos:start="517:28" pos:end="517:36">page_size</name> <operator pos:start="517:38" pos:end="517:38">-</operator> <literal type="number" pos:start="517:40" pos:end="517:40">1</literal><operator pos:start="517:41" pos:end="517:41">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="519:5" pos:end="519:30"><expr pos:start="519:5" pos:end="519:29"><name pos:start="519:5" pos:end="519:9">paddr</name> <operator pos:start="519:11" pos:end="519:11">=</operator> <name pos:start="519:13" pos:end="519:15">pte</name> <operator pos:start="519:17" pos:end="519:17">+</operator> <name pos:start="519:19" pos:end="519:29">page_offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="523:5" pos:end="523:61"><expr pos:start="523:5" pos:end="523:60"><call pos:start="523:5" pos:end="523:60"><name pos:start="523:5" pos:end="523:16">tlb_set_page</name><argument_list pos:start="523:17" pos:end="523:60">(<argument pos:start="523:18" pos:end="523:19"><expr pos:start="523:18" pos:end="523:19"><name pos:start="523:18" pos:end="523:19">cs</name></expr></argument>, <argument pos:start="523:22" pos:end="523:26"><expr pos:start="523:22" pos:end="523:26"><name pos:start="523:22" pos:end="523:26">vaddr</name></expr></argument>, <argument pos:start="523:29" pos:end="523:33"><expr pos:start="523:29" pos:end="523:33"><name pos:start="523:29" pos:end="523:33">paddr</name></expr></argument>, <argument pos:start="523:36" pos:end="523:39"><expr pos:start="523:36" pos:end="523:39"><name pos:start="523:36" pos:end="523:39">prot</name></expr></argument>, <argument pos:start="523:42" pos:end="523:48"><expr pos:start="523:42" pos:end="523:48"><name pos:start="523:42" pos:end="523:48">mmu_idx</name></expr></argument>, <argument pos:start="523:51" pos:end="523:59"><expr pos:start="523:51" pos:end="523:59"><name pos:start="523:51" pos:end="523:59">page_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="525:5" pos:end="525:13">return <expr pos:start="525:12" pos:end="525:12"><literal type="number" pos:start="525:12" pos:end="525:12">0</literal></expr>;</return>

 <label pos:start="527:2" pos:end="527:15"><name pos:start="527:2" pos:end="527:14">do_fault_rsvd</name>:</label>

    <expr_stmt pos:start="529:5" pos:end="529:37"><expr pos:start="529:5" pos:end="529:36"><name pos:start="529:5" pos:end="529:14">error_code</name> <operator pos:start="529:16" pos:end="529:17">|=</operator> <name pos:start="529:19" pos:end="529:36">PG_ERROR_RSVD_MASK</name></expr>;</expr_stmt>

 <label pos:start="531:2" pos:end="531:18"><name pos:start="531:2" pos:end="531:17">do_fault_protect</name>:</label>

    <expr_stmt pos:start="533:5" pos:end="533:34"><expr pos:start="533:5" pos:end="533:33"><name pos:start="533:5" pos:end="533:14">error_code</name> <operator pos:start="533:16" pos:end="533:17">|=</operator> <name pos:start="533:19" pos:end="533:33">PG_ERROR_P_MASK</name></expr>;</expr_stmt>

 <label pos:start="535:2" pos:end="535:10"><name pos:start="535:2" pos:end="535:9">do_fault</name>:</label>

    <expr_stmt pos:start="537:5" pos:end="537:47"><expr pos:start="537:5" pos:end="537:46"><name pos:start="537:5" pos:end="537:14">error_code</name> <operator pos:start="537:16" pos:end="537:17">|=</operator> <operator pos:start="537:19" pos:end="537:19">(</operator><name pos:start="537:20" pos:end="537:27">is_write</name> <operator pos:start="537:29" pos:end="537:30">&lt;&lt;</operator> <name pos:start="537:32" pos:end="537:45">PG_ERROR_W_BIT</name><operator pos:start="537:46" pos:end="537:46">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="539:5" pos:end="541:38"><if pos:start="539:5" pos:end="541:38">if <condition pos:start="539:8" pos:end="539:16">(<expr pos:start="539:9" pos:end="539:15"><name pos:start="539:9" pos:end="539:15">is_user</name></expr>)</condition><block type="pseudo" pos:start="541:9" pos:end="541:38"><block_content pos:start="541:9" pos:end="541:38">

        <expr_stmt pos:start="541:9" pos:end="541:38"><expr pos:start="541:9" pos:end="541:37"><name pos:start="541:9" pos:end="541:18">error_code</name> <operator pos:start="541:20" pos:end="541:21">|=</operator> <name pos:start="541:23" pos:end="541:37">PG_ERROR_U_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="543:5" pos:end="551:40"><if pos:start="543:5" pos:end="551:40">if <condition pos:start="543:8" pos:end="549:39">(<expr pos:start="543:9" pos:end="549:38"><name pos:start="543:9" pos:end="543:17">is_write1</name> <operator pos:start="543:19" pos:end="543:20">==</operator> <literal type="number" pos:start="543:22" pos:end="543:22">2</literal> <operator pos:start="543:24" pos:end="543:25">&amp;&amp;</operator>

        <operator pos:start="545:9" pos:end="545:9">(</operator><operator pos:start="545:10" pos:end="545:10">(</operator><operator pos:start="545:11" pos:end="545:11">(</operator><name pos:start="545:12" pos:end="545:20"><name pos:start="545:12" pos:end="545:14">env</name><operator pos:start="545:15" pos:end="545:16">-&gt;</operator><name pos:start="545:17" pos:end="545:20">efer</name></name> <operator pos:start="545:22" pos:end="545:22">&amp;</operator> <name pos:start="545:24" pos:end="545:35">MSR_EFER_NXE</name><operator pos:start="545:36" pos:end="545:36">)</operator> <operator pos:start="545:38" pos:end="545:39">&amp;&amp;</operator>

          <operator pos:start="547:11" pos:end="547:11">(</operator><name pos:start="547:12" pos:end="547:21"><name pos:start="547:12" pos:end="547:14">env</name><operator pos:start="547:15" pos:end="547:16">-&gt;</operator><name pos:start="547:17" pos:end="547:18">cr</name><index pos:start="547:19" pos:end="547:21">[<expr pos:start="547:20" pos:end="547:20"><literal type="number" pos:start="547:20" pos:end="547:20">4</literal></expr>]</index></name> <operator pos:start="547:23" pos:end="547:23">&amp;</operator> <name pos:start="547:25" pos:end="547:36">CR4_PAE_MASK</name><operator pos:start="547:37" pos:end="547:37">)</operator><operator pos:start="547:38" pos:end="547:38">)</operator> <operator pos:start="547:40" pos:end="547:41">||</operator>

         <operator pos:start="549:10" pos:end="549:10">(</operator><name pos:start="549:11" pos:end="549:20"><name pos:start="549:11" pos:end="549:13">env</name><operator pos:start="549:14" pos:end="549:15">-&gt;</operator><name pos:start="549:16" pos:end="549:17">cr</name><index pos:start="549:18" pos:end="549:20">[<expr pos:start="549:19" pos:end="549:19"><literal type="number" pos:start="549:19" pos:end="549:19">4</literal></expr>]</index></name> <operator pos:start="549:22" pos:end="549:22">&amp;</operator> <name pos:start="549:24" pos:end="549:36">CR4_SMEP_MASK</name><operator pos:start="549:37" pos:end="549:37">)</operator><operator pos:start="549:38" pos:end="549:38">)</operator></expr>)</condition><block type="pseudo" pos:start="551:9" pos:end="551:40"><block_content pos:start="551:9" pos:end="551:40">

        <expr_stmt pos:start="551:9" pos:end="551:40"><expr pos:start="551:9" pos:end="551:39"><name pos:start="551:9" pos:end="551:18">error_code</name> <operator pos:start="551:20" pos:end="551:21">|=</operator> <name pos:start="551:23" pos:end="551:39">PG_ERROR_I_D_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="553:5" pos:end="567:5"><if pos:start="553:5" pos:end="563:5">if <condition pos:start="553:8" pos:end="553:55">(<expr pos:start="553:9" pos:end="553:54"><name pos:start="553:9" pos:end="553:33"><name pos:start="553:9" pos:end="553:11">env</name><operator pos:start="553:12" pos:end="553:13">-&gt;</operator><name pos:start="553:14" pos:end="553:33">intercept_exceptions</name></name> <operator pos:start="553:35" pos:end="553:35">&amp;</operator> <operator pos:start="553:37" pos:end="553:37">(</operator><literal type="number" pos:start="553:38" pos:end="553:38">1</literal> <operator pos:start="553:40" pos:end="553:41">&lt;&lt;</operator> <name pos:start="553:43" pos:end="553:53">EXCP0E_PAGE</name><operator pos:start="553:54" pos:end="553:54">)</operator></expr>)</condition> <block pos:start="553:57" pos:end="563:5">{<block_content pos:start="557:9" pos:end="561:23">

        <comment type="block" pos:start="555:9" pos:end="555:55">/* cr2 is not modified in case of exceptions */</comment>

        <expr_stmt pos:start="557:9" pos:end="561:23"><expr pos:start="557:9" pos:end="561:22"><call pos:start="557:9" pos:end="561:22"><name pos:start="557:9" pos:end="557:16">stq_phys</name><argument_list pos:start="557:17" pos:end="561:22">(<argument pos:start="557:18" pos:end="557:23"><expr pos:start="557:18" pos:end="557:23"><name pos:start="557:18" pos:end="557:23"><name pos:start="557:18" pos:end="557:19">cs</name><operator pos:start="557:20" pos:end="557:21">-&gt;</operator><name pos:start="557:22" pos:end="557:23">as</name></name></expr></argument>,

                 <argument pos:start="559:18" pos:end="559:74"><expr pos:start="559:18" pos:end="559:74"><name pos:start="559:18" pos:end="559:29"><name pos:start="559:18" pos:end="559:20">env</name><operator pos:start="559:21" pos:end="559:22">-&gt;</operator><name pos:start="559:23" pos:end="559:29">vm_vmcb</name></name> <operator pos:start="559:31" pos:end="559:31">+</operator> <call pos:start="559:33" pos:end="559:74"><name pos:start="559:33" pos:end="559:40">offsetof</name><argument_list pos:start="559:41" pos:end="559:74">(<argument pos:start="559:42" pos:end="559:52"><expr pos:start="559:42" pos:end="559:52">struct <name pos:start="559:49" pos:end="559:52">vmcb</name></expr></argument>, <argument pos:start="559:55" pos:end="559:73"><expr pos:start="559:55" pos:end="559:73"><name pos:start="559:55" pos:end="559:73"><name pos:start="559:55" pos:end="559:61">control</name><operator pos:start="559:62" pos:end="559:62">.</operator><name pos:start="559:63" pos:end="559:73">exit_info_2</name></name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="561:18" pos:end="561:21"><expr pos:start="561:18" pos:end="561:21"><name pos:start="561:18" pos:end="561:21">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="563:7" pos:end="567:5">else <block pos:start="563:12" pos:end="567:5">{<block_content pos:start="565:9" pos:end="565:26">

        <expr_stmt pos:start="565:9" pos:end="565:26"><expr pos:start="565:9" pos:end="565:25"><name pos:start="565:9" pos:end="565:18"><name pos:start="565:9" pos:end="565:11">env</name><operator pos:start="565:12" pos:end="565:13">-&gt;</operator><name pos:start="565:14" pos:end="565:15">cr</name><index pos:start="565:16" pos:end="565:18">[<expr pos:start="565:17" pos:end="565:17"><literal type="number" pos:start="565:17" pos:end="565:17">2</literal></expr>]</index></name> <operator pos:start="565:20" pos:end="565:20">=</operator> <name pos:start="565:22" pos:end="565:25">addr</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="569:5" pos:end="569:33"><expr pos:start="569:5" pos:end="569:32"><name pos:start="569:5" pos:end="569:19"><name pos:start="569:5" pos:end="569:7">env</name><operator pos:start="569:8" pos:end="569:9">-&gt;</operator><name pos:start="569:10" pos:end="569:19">error_code</name></name> <operator pos:start="569:21" pos:end="569:21">=</operator> <name pos:start="569:23" pos:end="569:32">error_code</name></expr>;</expr_stmt>

    <expr_stmt pos:start="571:5" pos:end="571:38"><expr pos:start="571:5" pos:end="571:37"><name pos:start="571:5" pos:end="571:23"><name pos:start="571:5" pos:end="571:6">cs</name><operator pos:start="571:7" pos:end="571:8">-&gt;</operator><name pos:start="571:9" pos:end="571:23">exception_index</name></name> <operator pos:start="571:25" pos:end="571:25">=</operator> <name pos:start="571:27" pos:end="571:37">EXCP0E_PAGE</name></expr>;</expr_stmt>

    <return pos:start="573:5" pos:end="573:13">return <expr pos:start="573:12" pos:end="573:12"><literal type="number" pos:start="573:12" pos:end="573:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
