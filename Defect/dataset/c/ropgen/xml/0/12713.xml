<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12713.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">compare_sectors</name><parameter_list pos:start="1:27" pos:end="3:14">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:40">uint8_t</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">buf1</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:67"><decl pos:start="1:49" pos:end="1:67"><type pos:start="1:49" pos:end="1:67"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:61">uint8_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">buf2</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:74"><decl pos:start="1:70" pos:end="1:74"><type pos:start="1:70" pos:end="1:74"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:74">n</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:13"><type pos:start="3:5" pos:end="3:13"><name pos:start="3:5" pos:end="3:7">int</name> <modifier pos:start="3:9" pos:end="3:9">*</modifier></type><name pos:start="3:10" pos:end="3:13">pnum</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:15">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:12">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:15">(<expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:9">n</name> <operator pos:start="13:11" pos:end="13:12">&lt;=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>)</condition> <block pos:start="13:17" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:17">

        <expr_stmt pos:start="15:9" pos:end="15:18"><expr pos:start="15:9" pos:end="15:17"><operator pos:start="15:9" pos:end="15:9">*</operator><name pos:start="15:10" pos:end="15:13">pnum</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:7">res</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <operator pos:start="23:11" pos:end="23:11">!</operator><operator pos:start="23:12" pos:end="23:12">!</operator><call pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:18">memcmp</name><argument_list pos:start="23:19" pos:end="23:35">(<argument pos:start="23:20" pos:end="23:23"><expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">buf1</name></expr></argument>, <argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">buf2</name></expr></argument>, <argument pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><literal type="number" pos:start="23:32" pos:end="23:34">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="39:5">for<control pos:start="25:8" pos:end="25:26">(<init pos:start="25:9" pos:end="25:14"><expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">i</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">1</literal></expr>;</init> <condition pos:start="25:16" pos:end="25:21"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:16">i</name> <operator pos:start="25:18" pos:end="25:18">&lt;</operator> <name pos:start="25:20" pos:end="25:20">n</name></expr>;</condition> <incr pos:start="25:23" pos:end="25:25"><expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:23">i</name><operator pos:start="25:24" pos:end="25:25">++</operator></expr></incr>)</control> <block pos:start="25:28" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:9">

        <expr_stmt pos:start="27:9" pos:end="27:20"><expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:12">buf1</name> <operator pos:start="27:14" pos:end="27:15">+=</operator> <literal type="number" pos:start="27:17" pos:end="27:19">512</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:20"><expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:12">buf2</name> <operator pos:start="29:14" pos:end="29:15">+=</operator> <literal type="number" pos:start="29:17" pos:end="29:19">512</literal></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:45">(<expr pos:start="33:13" pos:end="33:44"><operator pos:start="33:13" pos:end="33:13">!</operator><operator pos:start="33:14" pos:end="33:14">!</operator><call pos:start="33:15" pos:end="33:37"><name pos:start="33:15" pos:end="33:20">memcmp</name><argument_list pos:start="33:21" pos:end="33:37">(<argument pos:start="33:22" pos:end="33:25"><expr pos:start="33:22" pos:end="33:25"><name pos:start="33:22" pos:end="33:25">buf1</name></expr></argument>, <argument pos:start="33:28" pos:end="33:31"><expr pos:start="33:28" pos:end="33:31"><name pos:start="33:28" pos:end="33:31">buf2</name></expr></argument>, <argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><literal type="number" pos:start="33:34" pos:end="33:36">512</literal></expr></argument>)</argument_list></call> <operator pos:start="33:39" pos:end="33:40">!=</operator> <name pos:start="33:42" pos:end="33:44">res</name></expr>)</condition> <block pos:start="33:47" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:18">

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="43:5" pos:end="43:14"><expr pos:start="43:5" pos:end="43:13"><operator pos:start="43:5" pos:end="43:5">*</operator><name pos:start="43:6" pos:end="43:9">pnum</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:13">i</name></expr>;</expr_stmt>

    <return pos:start="45:5" pos:end="45:15">return <expr pos:start="45:12" pos:end="45:14"><name pos:start="45:12" pos:end="45:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
