<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19678.c" pos:tabs="8"><function pos:start="1:1" pos:end="259:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">svq1_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:61">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:43">got_frame</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:53">AVPacket</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="259:1">{<block_content pos:start="7:5" pos:end="257:18">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:15">SVQ1Context</name>     <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:22">s</name> <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:11">AVFrame</name>       <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">cur</name> <init pos:start="13:24" pos:end="13:31">= <expr pos:start="13:26" pos:end="13:31"><name pos:start="13:26" pos:end="13:31"><name pos:start="13:26" pos:end="13:26">s</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:31">cur</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">current</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:39"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">result</name></decl>, <decl pos:start="17:17" pos:end="17:17"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:17" pos:end="17:17">i</name></decl>, <decl pos:start="17:20" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:20" pos:end="17:20">x</name></decl>, <decl pos:start="17:23" pos:end="17:23"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:23" pos:end="17:23">y</name></decl>, <decl pos:start="17:26" pos:end="17:30"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:26" pos:end="17:30">width</name></decl>, <decl pos:start="17:33" pos:end="17:38"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:33" pos:end="17:38">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">svq1_pmv</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">pmv</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:42"><if pos:start="23:5" pos:end="25:42">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:11">cur</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:17">data</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:42"><block_content pos:start="25:9" pos:end="25:42">

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><call pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:29">release_buffer</name></name><argument_list pos:start="25:30" pos:end="25:41">(<argument pos:start="25:31" pos:end="25:35"><expr pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:35">avctx</name></expr></argument>, <argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:31">/* initialize bit buffer */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><call pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:17">init_get_bits</name><argument_list pos:start="31:18" pos:end="31:44">(<argument pos:start="31:19" pos:end="31:24"><expr pos:start="31:19" pos:end="31:24"><operator pos:start="31:19" pos:end="31:19">&amp;</operator><name pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:24">gb</name></name></expr></argument>, <argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">buf</name></expr></argument>, <argument pos:start="31:32" pos:end="31:43"><expr pos:start="31:32" pos:end="31:43"><name pos:start="31:32" pos:end="31:39">buf_size</name> <operator pos:start="31:41" pos:end="31:41">*</operator> <literal type="number" pos:start="31:43" pos:end="31:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:29">/* decode frame header */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:17">frame_code</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:40"><name pos:start="37:21" pos:end="37:28">get_bits</name><argument_list pos:start="37:29" pos:end="37:40">(<argument pos:start="37:30" pos:end="37:35"><expr pos:start="37:30" pos:end="37:35"><operator pos:start="37:30" pos:end="37:30">&amp;</operator><name pos:start="37:31" pos:end="37:35"><name pos:start="37:31" pos:end="37:31">s</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:35">gb</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:39"><expr pos:start="37:38" pos:end="37:39"><literal type="number" pos:start="37:38" pos:end="37:39">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="43:35"><if pos:start="41:5" pos:end="43:35">if <condition pos:start="41:8" pos:end="41:59">(<expr pos:start="41:9" pos:end="41:58"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:10">s</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:22">frame_code</name></name> <operator pos:start="41:24" pos:end="41:24">&amp;</operator> <operator pos:start="41:26" pos:end="41:26">~</operator><literal type="number" pos:start="41:27" pos:end="41:30">0x70</literal><operator pos:start="41:31" pos:end="41:31">)</operator> <operator pos:start="41:33" pos:end="41:34">||</operator> <operator pos:start="41:36" pos:end="41:36">!</operator><operator pos:start="41:37" pos:end="41:37">(</operator><name pos:start="41:38" pos:end="41:50"><name pos:start="41:38" pos:end="41:38">s</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:50">frame_code</name></name> <operator pos:start="41:52" pos:end="41:52">&amp;</operator> <literal type="number" pos:start="41:54" pos:end="41:57">0x60</literal><operator pos:start="41:58" pos:end="41:58">)</operator></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:35"><block_content pos:start="43:9" pos:end="43:35">

        <return pos:start="43:9" pos:end="43:35">return <expr pos:start="43:16" pos:end="43:34"><name pos:start="43:16" pos:end="43:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:39">/* swap some header bytes (why?) */</comment>

    <if_stmt pos:start="49:5" pos:end="65:5"><if pos:start="49:5" pos:end="65:5">if <condition pos:start="49:8" pos:end="49:30">(<expr pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:21">frame_code</name></name> <operator pos:start="49:23" pos:end="49:24">!=</operator> <literal type="number" pos:start="49:26" pos:end="49:29">0x20</literal></expr>)</condition> <block pos:start="49:32" pos:end="65:5">{<block_content pos:start="51:9" pos:end="63:68">

        <decl_stmt pos:start="51:9" pos:end="51:46"><decl pos:start="51:9" pos:end="51:45"><type pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:16">uint32_t</name> <modifier pos:start="51:18" pos:end="51:18">*</modifier></type><name pos:start="51:19" pos:end="51:21">src</name> <init pos:start="51:23" pos:end="51:45">= <expr pos:start="51:25" pos:end="51:45"><operator pos:start="51:25" pos:end="51:25">(</operator><name pos:start="51:26" pos:end="51:33">uint32_t</name> <operator pos:start="51:35" pos:end="51:35">*</operator><operator pos:start="51:36" pos:end="51:36">)</operator><operator pos:start="51:37" pos:end="51:37">(</operator><name pos:start="51:38" pos:end="51:40">buf</name> <operator pos:start="51:42" pos:end="51:42">+</operator> <literal type="number" pos:start="51:44" pos:end="51:44">4</literal><operator pos:start="51:45" pos:end="51:45">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="55:9" pos:end="57:39"><if pos:start="55:9" pos:end="57:39">if <condition pos:start="55:12" pos:end="55:26">(<expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:20">buf_size</name> <operator pos:start="55:22" pos:end="55:22">&lt;</operator> <literal type="number" pos:start="55:24" pos:end="55:25">36</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:39"><block_content pos:start="57:13" pos:end="57:39">

            <return pos:start="57:13" pos:end="57:39">return <expr pos:start="57:20" pos:end="57:38"><name pos:start="57:20" pos:end="57:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="61:9" pos:end="63:68">for <control pos:start="61:13" pos:end="61:31">(<init pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:18"><name pos:start="61:14" pos:end="61:14">i</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:26"><expr pos:start="61:21" pos:end="61:25"><name pos:start="61:21" pos:end="61:21">i</name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <literal type="number" pos:start="61:25" pos:end="61:25">4</literal></expr>;</condition> <incr pos:start="61:28" pos:end="61:30"><expr pos:start="61:28" pos:end="61:30"><name pos:start="61:28" pos:end="61:28">i</name><operator pos:start="61:29" pos:end="61:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="63:13" pos:end="63:68"><block_content pos:start="63:13" pos:end="63:68">

            <expr_stmt pos:start="63:13" pos:end="63:68"><expr pos:start="63:13" pos:end="63:67"><name pos:start="63:13" pos:end="63:18"><name pos:start="63:13" pos:end="63:15">src</name><index pos:start="63:16" pos:end="63:18">[<expr pos:start="63:17" pos:end="63:17"><name pos:start="63:17" pos:end="63:17">i</name></expr>]</index></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <operator pos:start="63:22" pos:end="63:22">(</operator><operator pos:start="63:23" pos:end="63:23">(</operator><name pos:start="63:24" pos:end="63:29"><name pos:start="63:24" pos:end="63:26">src</name><index pos:start="63:27" pos:end="63:29">[<expr pos:start="63:28" pos:end="63:28"><name pos:start="63:28" pos:end="63:28">i</name></expr>]</index></name> <operator pos:start="63:31" pos:end="63:32">&lt;&lt;</operator> <literal type="number" pos:start="63:34" pos:end="63:35">16</literal><operator pos:start="63:36" pos:end="63:36">)</operator> <operator pos:start="63:38" pos:end="63:38">|</operator> <operator pos:start="63:40" pos:end="63:40">(</operator><name pos:start="63:41" pos:end="63:46"><name pos:start="63:41" pos:end="63:43">src</name><index pos:start="63:44" pos:end="63:46">[<expr pos:start="63:45" pos:end="63:45"><name pos:start="63:45" pos:end="63:45">i</name></expr>]</index></name> <operator pos:start="63:48" pos:end="63:49">&gt;&gt;</operator> <literal type="number" pos:start="63:51" pos:end="63:52">16</literal><operator pos:start="63:53" pos:end="63:53">)</operator><operator pos:start="63:54" pos:end="63:54">)</operator> <operator pos:start="63:56" pos:end="63:56">^</operator> <name pos:start="63:58" pos:end="63:67"><name pos:start="63:58" pos:end="63:60">src</name><index pos:start="63:61" pos:end="63:67">[<expr pos:start="63:62" pos:end="63:66"><literal type="number" pos:start="63:62" pos:end="63:62">7</literal> <operator pos:start="63:64" pos:end="63:64">-</operator> <name pos:start="63:66" pos:end="63:66">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:50"><expr pos:start="69:5" pos:end="69:49"><name pos:start="69:5" pos:end="69:10">result</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <call pos:start="69:14" pos:end="69:49"><name pos:start="69:14" pos:end="69:37">svq1_decode_frame_header</name><argument_list pos:start="69:38" pos:end="69:49">(<argument pos:start="69:39" pos:end="69:43"><expr pos:start="69:39" pos:end="69:43"><name pos:start="69:39" pos:end="69:43">avctx</name></expr></argument>, <argument pos:start="69:46" pos:end="69:48"><expr pos:start="69:46" pos:end="69:48"><name pos:start="69:46" pos:end="69:48">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:20">(<expr pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:14">result</name> <operator pos:start="71:16" pos:end="71:17">!=</operator> <literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>)</condition> <block pos:start="71:22" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:22">

        <expr_stmt pos:start="73:9" pos:end="73:73"><expr pos:start="73:9" pos:end="73:72"><call pos:start="73:9" pos:end="73:72"><name pos:start="73:9" pos:end="73:15">av_dlog</name><argument_list pos:start="73:16" pos:end="73:72">(<argument pos:start="73:17" pos:end="73:21"><expr pos:start="73:17" pos:end="73:21"><name pos:start="73:17" pos:end="73:21">avctx</name></expr></argument>, <argument pos:start="73:24" pos:end="73:63"><expr pos:start="73:24" pos:end="73:63"><literal type="string" pos:start="73:24" pos:end="73:63">"Error in svq1_decode_frame_header %i\n"</literal></expr></argument>, <argument pos:start="73:66" pos:end="73:71"><expr pos:start="73:66" pos:end="73:71"><name pos:start="73:66" pos:end="73:71">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:22">return <expr pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:21">result</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:55"><expr pos:start="79:5" pos:end="79:54"><call pos:start="79:5" pos:end="79:54"><name pos:start="79:5" pos:end="79:26">avcodec_set_dimensions</name><argument_list pos:start="79:27" pos:end="79:54">(<argument pos:start="79:28" pos:end="79:32"><expr pos:start="79:28" pos:end="79:32"><name pos:start="79:28" pos:end="79:32">avctx</name></expr></argument>, <argument pos:start="79:35" pos:end="79:42"><expr pos:start="79:35" pos:end="79:42"><name pos:start="79:35" pos:end="79:42"><name pos:start="79:35" pos:end="79:35">s</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:42">width</name></name></expr></argument>, <argument pos:start="79:45" pos:end="79:53"><expr pos:start="79:45" pos:end="79:53"><name pos:start="79:45" pos:end="79:53"><name pos:start="79:45" pos:end="79:45">s</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:53">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="91:24"><if pos:start="83:5" pos:end="91:24">if <condition pos:start="83:8" pos:end="89:43">(<expr pos:start="83:9" pos:end="89:42"><operator pos:start="83:9" pos:end="83:9">(</operator><name pos:start="83:10" pos:end="83:26"><name pos:start="83:10" pos:end="83:14">avctx</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:26">skip_frame</name></name> <operator pos:start="83:28" pos:end="83:29">&gt;=</operator> <name pos:start="83:31" pos:end="83:46">AVDISCARD_NONREF</name> <operator pos:start="83:48" pos:end="83:49">&amp;&amp;</operator> <name pos:start="83:51" pos:end="83:59"><name pos:start="83:51" pos:end="83:51">s</name><operator pos:start="83:52" pos:end="83:53">-&gt;</operator><name pos:start="83:54" pos:end="83:59">nonref</name></name><operator pos:start="83:60" pos:end="83:60">)</operator> <operator pos:start="83:62" pos:end="83:63">||</operator>

        <operator pos:start="85:9" pos:end="85:9">(</operator><name pos:start="85:10" pos:end="85:26"><name pos:start="85:10" pos:end="85:14">avctx</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:26">skip_frame</name></name> <operator pos:start="85:28" pos:end="85:29">&gt;=</operator> <name pos:start="85:31" pos:end="85:46">AVDISCARD_NONKEY</name> <operator pos:start="85:48" pos:end="85:49">&amp;&amp;</operator>

         <name pos:start="87:10" pos:end="87:23"><name pos:start="87:10" pos:end="87:12">cur</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:23">pict_type</name></name> <operator pos:start="87:25" pos:end="87:26">!=</operator> <name pos:start="87:28" pos:end="87:44">AV_PICTURE_TYPE_I</name><operator pos:start="87:45" pos:end="87:45">)</operator> <operator pos:start="87:47" pos:end="87:48">||</operator>

        <name pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:13">avctx</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:25">skip_frame</name></name> <operator pos:start="89:27" pos:end="89:28">&gt;=</operator> <name pos:start="89:30" pos:end="89:42">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:24"><block_content pos:start="91:9" pos:end="91:24">

        <return pos:start="91:9" pos:end="91:24">return <expr pos:start="91:16" pos:end="91:23"><name pos:start="91:16" pos:end="91:23">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:39"><expr pos:start="95:5" pos:end="95:38"><name pos:start="95:5" pos:end="95:10">result</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <call pos:start="95:14" pos:end="95:38"><name pos:start="95:14" pos:end="95:26">ff_get_buffer</name><argument_list pos:start="95:27" pos:end="95:38">(<argument pos:start="95:28" pos:end="95:32"><expr pos:start="95:28" pos:end="95:32"><name pos:start="95:28" pos:end="95:32">avctx</name></expr></argument>, <argument pos:start="95:35" pos:end="95:37"><expr pos:start="95:35" pos:end="95:37"><name pos:start="95:35" pos:end="95:37">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="99:22"><if pos:start="97:5" pos:end="99:22">if <condition pos:start="97:8" pos:end="97:19">(<expr pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:14">result</name> <operator pos:start="97:16" pos:end="97:16">&lt;</operator> <literal type="number" pos:start="97:18" pos:end="97:18">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:22"><block_content pos:start="99:9" pos:end="99:22">

        <return pos:start="99:9" pos:end="99:22">return <expr pos:start="99:16" pos:end="99:21"><name pos:start="99:16" pos:end="99:21">result</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:68"><expr pos:start="103:5" pos:end="103:67"><name pos:start="103:5" pos:end="103:7">pmv</name> <operator pos:start="103:9" pos:end="103:9">=</operator> <call pos:start="103:11" pos:end="103:67"><name pos:start="103:11" pos:end="103:19">av_malloc</name><argument_list pos:start="103:20" pos:end="103:67">(<argument pos:start="103:21" pos:end="103:66"><expr pos:start="103:21" pos:end="103:66"><operator pos:start="103:21" pos:end="103:21">(</operator><call pos:start="103:22" pos:end="103:42"><name pos:start="103:22" pos:end="103:28">FFALIGN</name><argument_list pos:start="103:29" pos:end="103:42">(<argument pos:start="103:30" pos:end="103:37"><expr pos:start="103:30" pos:end="103:37"><name pos:start="103:30" pos:end="103:37"><name pos:start="103:30" pos:end="103:30">s</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:37">width</name></name></expr></argument>, <argument pos:start="103:40" pos:end="103:41"><expr pos:start="103:40" pos:end="103:41"><literal type="number" pos:start="103:40" pos:end="103:41">16</literal></expr></argument>)</argument_list></call> <operator pos:start="103:44" pos:end="103:44">/</operator> <literal type="number" pos:start="103:46" pos:end="103:48">8</literal> <operator pos:start="103:48" pos:end="103:48">+</operator> <literal type="number" pos:start="103:50" pos:end="103:50">3</literal><operator pos:start="103:51" pos:end="103:51">)</operator> <operator pos:start="103:53" pos:end="103:53">*</operator> <sizeof pos:start="103:55" pos:end="103:66">sizeof<argument_list pos:start="103:61" pos:end="103:66">(<argument pos:start="103:62" pos:end="103:65"><expr pos:start="103:62" pos:end="103:65"><operator pos:start="103:62" pos:end="103:62">*</operator><name pos:start="103:63" pos:end="103:65">pmv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="107:31"><if pos:start="105:5" pos:end="107:31">if <condition pos:start="105:8" pos:end="105:13">(<expr pos:start="105:9" pos:end="105:12"><operator pos:start="105:9" pos:end="105:9">!</operator><name pos:start="105:10" pos:end="105:12">pmv</name></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:31"><block_content pos:start="107:9" pos:end="107:31">

        <return pos:start="107:9" pos:end="107:31">return <expr pos:start="107:16" pos:end="107:30"><call pos:start="107:16" pos:end="107:30"><name pos:start="107:16" pos:end="107:22">AVERROR</name><argument_list pos:start="107:23" pos:end="107:30">(<argument pos:start="107:24" pos:end="107:29"><expr pos:start="107:24" pos:end="107:29"><name pos:start="107:24" pos:end="107:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:38">/* decode y, u and v components */</comment>

    <for pos:start="113:5" pos:end="233:5">for <control pos:start="113:9" pos:end="113:27">(<init pos:start="113:10" pos:end="113:15"><expr pos:start="113:10" pos:end="113:14"><name pos:start="113:10" pos:end="113:10">i</name> <operator pos:start="113:12" pos:end="113:12">=</operator> <literal type="number" pos:start="113:14" pos:end="113:14">0</literal></expr>;</init> <condition pos:start="113:17" pos:end="113:22"><expr pos:start="113:17" pos:end="113:21"><name pos:start="113:17" pos:end="113:17">i</name> <operator pos:start="113:19" pos:end="113:19">&lt;</operator> <literal type="number" pos:start="113:21" pos:end="113:21">3</literal></expr>;</condition> <incr pos:start="113:24" pos:end="113:26"><expr pos:start="113:24" pos:end="113:26"><name pos:start="113:24" pos:end="113:24">i</name><operator pos:start="113:25" pos:end="113:26">++</operator></expr></incr>)</control> <block pos:start="113:29" pos:end="233:5">{<block_content pos:start="115:9" pos:end="231:9">

        <decl_stmt pos:start="115:9" pos:end="115:40"><decl pos:start="115:9" pos:end="115:39"><type pos:start="115:9" pos:end="115:11"><name pos:start="115:9" pos:end="115:11">int</name></type> <name pos:start="115:13" pos:end="115:20">linesize</name> <init pos:start="115:22" pos:end="115:39">= <expr pos:start="115:24" pos:end="115:39"><name pos:start="115:24" pos:end="115:39"><name pos:start="115:24" pos:end="115:26">cur</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:36">linesize</name><index pos:start="115:37" pos:end="115:39">[<expr pos:start="115:38" pos:end="115:38"><name pos:start="115:38" pos:end="115:38">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="117:9" pos:end="133:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:19">(<expr pos:start="117:13" pos:end="117:18"><name pos:start="117:13" pos:end="117:13">i</name> <operator pos:start="117:15" pos:end="117:16">==</operator> <literal type="number" pos:start="117:18" pos:end="117:18">0</literal></expr>)</condition> <block pos:start="117:21" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:46">

            <expr_stmt pos:start="119:13" pos:end="119:46"><expr pos:start="119:13" pos:end="119:45"><name pos:start="119:13" pos:end="119:17">width</name>    <operator pos:start="119:22" pos:end="119:22">=</operator> <call pos:start="119:24" pos:end="119:45"><name pos:start="119:24" pos:end="119:30">FFALIGN</name><argument_list pos:start="119:31" pos:end="119:45">(<argument pos:start="119:32" pos:end="119:39"><expr pos:start="119:32" pos:end="119:39"><name pos:start="119:32" pos:end="119:39"><name pos:start="119:32" pos:end="119:32">s</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:39">width</name></name></expr></argument>,  <argument pos:start="119:43" pos:end="119:44"><expr pos:start="119:43" pos:end="119:44"><literal type="number" pos:start="119:43" pos:end="119:44">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:46"><expr pos:start="121:13" pos:end="121:45"><name pos:start="121:13" pos:end="121:18">height</name>   <operator pos:start="121:22" pos:end="121:22">=</operator> <call pos:start="121:24" pos:end="121:45"><name pos:start="121:24" pos:end="121:30">FFALIGN</name><argument_list pos:start="121:31" pos:end="121:45">(<argument pos:start="121:32" pos:end="121:40"><expr pos:start="121:32" pos:end="121:40"><name pos:start="121:32" pos:end="121:40"><name pos:start="121:32" pos:end="121:32">s</name><operator pos:start="121:33" pos:end="121:34">-&gt;</operator><name pos:start="121:35" pos:end="121:40">height</name></name></expr></argument>, <argument pos:start="121:43" pos:end="121:44"><expr pos:start="121:43" pos:end="121:44"><literal type="number" pos:start="121:43" pos:end="121:44">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="123:11" pos:end="133:9">else <block pos:start="123:16" pos:end="133:9">{<block_content pos:start="125:13" pos:end="131:50">

            <if_stmt pos:start="125:13" pos:end="127:22"><if pos:start="125:13" pos:end="127:22">if <condition pos:start="125:16" pos:end="125:47">(<expr pos:start="125:17" pos:end="125:46"><name pos:start="125:17" pos:end="125:28"><name pos:start="125:17" pos:end="125:21">avctx</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:28">flags</name></name> <operator pos:start="125:30" pos:end="125:30">&amp;</operator> <name pos:start="125:32" pos:end="125:46">CODEC_FLAG_GRAY</name></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:22"><block_content pos:start="127:17" pos:end="127:22">

                <break pos:start="127:17" pos:end="127:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:50"><expr pos:start="129:13" pos:end="129:49"><name pos:start="129:13" pos:end="129:17">width</name>    <operator pos:start="129:22" pos:end="129:22">=</operator> <call pos:start="129:24" pos:end="129:49"><name pos:start="129:24" pos:end="129:30">FFALIGN</name><argument_list pos:start="129:31" pos:end="129:49">(<argument pos:start="129:32" pos:end="129:44"><expr pos:start="129:32" pos:end="129:44"><name pos:start="129:32" pos:end="129:39"><name pos:start="129:32" pos:end="129:32">s</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:39">width</name></name>  <operator pos:start="129:42" pos:end="129:42">/</operator> <literal type="number" pos:start="129:44" pos:end="129:44">4</literal></expr></argument>, <argument pos:start="129:47" pos:end="129:48"><expr pos:start="129:47" pos:end="129:48"><literal type="number" pos:start="129:47" pos:end="129:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:50"><expr pos:start="131:13" pos:end="131:49"><name pos:start="131:13" pos:end="131:18">height</name>   <operator pos:start="131:22" pos:end="131:22">=</operator> <call pos:start="131:24" pos:end="131:49"><name pos:start="131:24" pos:end="131:30">FFALIGN</name><argument_list pos:start="131:31" pos:end="131:49">(<argument pos:start="131:32" pos:end="131:44"><expr pos:start="131:32" pos:end="131:44"><name pos:start="131:32" pos:end="131:40"><name pos:start="131:32" pos:end="131:32">s</name><operator pos:start="131:33" pos:end="131:34">-&gt;</operator><name pos:start="131:35" pos:end="131:40">height</name></name> <operator pos:start="131:42" pos:end="131:42">/</operator> <literal type="number" pos:start="131:44" pos:end="131:44">4</literal></expr></argument>, <argument pos:start="131:47" pos:end="131:48"><expr pos:start="131:47" pos:end="131:48"><literal type="number" pos:start="131:47" pos:end="131:48">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:31"><expr pos:start="137:9" pos:end="137:30"><name pos:start="137:9" pos:end="137:15">current</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <name pos:start="137:19" pos:end="137:30"><name pos:start="137:19" pos:end="137:21">cur</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:27">data</name><index pos:start="137:28" pos:end="137:30">[<expr pos:start="137:29" pos:end="137:29"><name pos:start="137:29" pos:end="137:29">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="141:9" pos:end="231:9"><if pos:start="141:9" pos:end="171:9">if <condition pos:start="141:12" pos:end="141:48">(<expr pos:start="141:13" pos:end="141:47"><name pos:start="141:13" pos:end="141:26"><name pos:start="141:13" pos:end="141:15">cur</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:26">pict_type</name></name> <operator pos:start="141:28" pos:end="141:29">==</operator> <name pos:start="141:31" pos:end="141:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="141:50" pos:end="171:9">{<block_content pos:start="145:13" pos:end="169:13">

            <comment type="block" pos:start="143:13" pos:end="143:26">/* keyframe */</comment>

            <for pos:start="145:13" pos:end="169:13">for <control pos:start="145:17" pos:end="145:44">(<init pos:start="145:18" pos:end="145:23"><expr pos:start="145:18" pos:end="145:22"><name pos:start="145:18" pos:end="145:18">y</name> <operator pos:start="145:20" pos:end="145:20">=</operator> <literal type="number" pos:start="145:22" pos:end="145:22">0</literal></expr>;</init> <condition pos:start="145:25" pos:end="145:35"><expr pos:start="145:25" pos:end="145:34"><name pos:start="145:25" pos:end="145:25">y</name> <operator pos:start="145:27" pos:end="145:27">&lt;</operator> <name pos:start="145:29" pos:end="145:34">height</name></expr>;</condition> <incr pos:start="145:37" pos:end="145:43"><expr pos:start="145:37" pos:end="145:43"><name pos:start="145:37" pos:end="145:37">y</name> <operator pos:start="145:39" pos:end="145:40">+=</operator> <literal type="number" pos:start="145:42" pos:end="145:43">16</literal></expr></incr>)</control> <block pos:start="145:46" pos:end="169:13">{<block_content pos:start="147:17" pos:end="167:41">

                <for pos:start="147:17" pos:end="165:17">for <control pos:start="147:21" pos:end="147:47">(<init pos:start="147:22" pos:end="147:27"><expr pos:start="147:22" pos:end="147:26"><name pos:start="147:22" pos:end="147:22">x</name> <operator pos:start="147:24" pos:end="147:24">=</operator> <literal type="number" pos:start="147:26" pos:end="147:26">0</literal></expr>;</init> <condition pos:start="147:29" pos:end="147:38"><expr pos:start="147:29" pos:end="147:37"><name pos:start="147:29" pos:end="147:29">x</name> <operator pos:start="147:31" pos:end="147:31">&lt;</operator> <name pos:start="147:33" pos:end="147:37">width</name></expr>;</condition> <incr pos:start="147:40" pos:end="147:46"><expr pos:start="147:40" pos:end="147:46"><name pos:start="147:40" pos:end="147:40">x</name> <operator pos:start="147:42" pos:end="147:43">+=</operator> <literal type="number" pos:start="147:45" pos:end="147:46">16</literal></expr></incr>)</control> <block pos:start="147:49" pos:end="165:17">{<block_content pos:start="149:21" pos:end="163:21">

                    <expr_stmt pos:start="149:21" pos:end="151:63"><expr pos:start="149:21" pos:end="151:62"><name pos:start="149:21" pos:end="149:26">result</name> <operator pos:start="149:28" pos:end="149:28">=</operator> <call pos:start="149:30" pos:end="151:62"><name pos:start="149:30" pos:end="149:52">svq1_decode_block_intra</name><argument_list pos:start="149:53" pos:end="151:62">(<argument pos:start="149:54" pos:end="149:59"><expr pos:start="149:54" pos:end="149:59"><operator pos:start="149:54" pos:end="149:54">&amp;</operator><name pos:start="149:55" pos:end="149:59"><name pos:start="149:55" pos:end="149:55">s</name><operator pos:start="149:56" pos:end="149:57">-&gt;</operator><name pos:start="149:58" pos:end="149:59">gb</name></name></expr></argument>, <argument pos:start="149:62" pos:end="149:72"><expr pos:start="149:62" pos:end="149:72"><operator pos:start="149:62" pos:end="149:62">&amp;</operator><name pos:start="149:63" pos:end="149:72"><name pos:start="149:63" pos:end="149:69">current</name><index pos:start="149:70" pos:end="149:72">[<expr pos:start="149:71" pos:end="149:71"><name pos:start="149:71" pos:end="149:71">x</name></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="151:54" pos:end="151:61"><expr pos:start="151:54" pos:end="151:61"><name pos:start="151:54" pos:end="151:61">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="153:21" pos:end="163:21"><if pos:start="153:21" pos:end="163:21">if <condition pos:start="153:24" pos:end="153:31">(<expr pos:start="153:25" pos:end="153:30"><name pos:start="153:25" pos:end="153:30">result</name></expr>)</condition> <block pos:start="153:33" pos:end="163:21">{<block_content pos:start="155:25" pos:end="161:33">

                        <expr_stmt pos:start="155:25" pos:end="159:39"><expr pos:start="155:25" pos:end="159:38"><call pos:start="155:25" pos:end="159:38"><name pos:start="155:25" pos:end="155:30">av_log</name><argument_list pos:start="155:31" pos:end="159:38">(<argument pos:start="155:32" pos:end="155:36"><expr pos:start="155:32" pos:end="155:36"><name pos:start="155:32" pos:end="155:36">avctx</name></expr></argument>, <argument pos:start="155:39" pos:end="155:50"><expr pos:start="155:39" pos:end="155:50"><name pos:start="155:39" pos:end="155:50">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="157:32" pos:end="157:75"><expr pos:start="157:32" pos:end="157:75"><literal type="string" pos:start="157:32" pos:end="157:75">"Error in svq1_decode_block %i (keyframe)\n"</literal></expr></argument>,

                               <argument pos:start="159:32" pos:end="159:37"><expr pos:start="159:32" pos:end="159:37"><name pos:start="159:32" pos:end="159:37">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="161:25" pos:end="161:33">goto <name pos:start="161:30" pos:end="161:32">err</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="167:17" pos:end="167:41"><expr pos:start="167:17" pos:end="167:40"><name pos:start="167:17" pos:end="167:23">current</name> <operator pos:start="167:25" pos:end="167:26">+=</operator> <literal type="number" pos:start="167:28" pos:end="167:29">16</literal> <operator pos:start="167:31" pos:end="167:31">*</operator> <name pos:start="167:33" pos:end="167:40">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="171:11" pos:end="231:9">else <block pos:start="171:16" pos:end="231:9">{<block_content pos:start="175:13" pos:end="229:13">

            <comment type="block" pos:start="173:13" pos:end="173:29">/* delta frame */</comment>

            <decl_stmt pos:start="175:13" pos:end="175:49"><decl pos:start="175:13" pos:end="175:48"><type pos:start="175:13" pos:end="175:21"><name pos:start="175:13" pos:end="175:19">uint8_t</name> <modifier pos:start="175:21" pos:end="175:21">*</modifier></type><name pos:start="175:22" pos:end="175:29">previous</name> <init pos:start="175:31" pos:end="175:48">= <expr pos:start="175:33" pos:end="175:48"><name pos:start="175:33" pos:end="175:48"><name pos:start="175:33" pos:end="175:33">s</name><operator pos:start="175:34" pos:end="175:35">-&gt;</operator><name pos:start="175:36" pos:end="175:39">prev</name><operator pos:start="175:40" pos:end="175:41">-&gt;</operator><name pos:start="175:42" pos:end="175:45">data</name><index pos:start="175:46" pos:end="175:48">[<expr pos:start="175:47" pos:end="175:47"><name pos:start="175:47" pos:end="175:47">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="177:13" pos:end="185:13"><if pos:start="177:13" pos:end="185:13">if <condition pos:start="177:16" pos:end="177:26">(<expr pos:start="177:17" pos:end="177:25"><operator pos:start="177:17" pos:end="177:17">!</operator><name pos:start="177:18" pos:end="177:25">previous</name></expr>)</condition> <block pos:start="177:28" pos:end="185:13">{<block_content pos:start="179:17" pos:end="183:25">

                <expr_stmt pos:start="179:17" pos:end="179:74"><expr pos:start="179:17" pos:end="179:73"><call pos:start="179:17" pos:end="179:73"><name pos:start="179:17" pos:end="179:22">av_log</name><argument_list pos:start="179:23" pos:end="179:73">(<argument pos:start="179:24" pos:end="179:28"><expr pos:start="179:24" pos:end="179:28"><name pos:start="179:24" pos:end="179:28">avctx</name></expr></argument>, <argument pos:start="179:31" pos:end="179:42"><expr pos:start="179:31" pos:end="179:42"><name pos:start="179:31" pos:end="179:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:45" pos:end="179:72"><expr pos:start="179:45" pos:end="179:72"><literal type="string" pos:start="179:45" pos:end="179:72">"Missing reference frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:45"><expr pos:start="181:17" pos:end="181:44"><name pos:start="181:17" pos:end="181:22">result</name> <operator pos:start="181:24" pos:end="181:24">=</operator> <name pos:start="181:26" pos:end="181:44">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="183:17" pos:end="183:25">goto <name pos:start="183:22" pos:end="183:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="189:13" pos:end="189:65"><expr pos:start="189:13" pos:end="189:64"><call pos:start="189:13" pos:end="189:64"><name pos:start="189:13" pos:end="189:18">memset</name><argument_list pos:start="189:19" pos:end="189:64">(<argument pos:start="189:20" pos:end="189:22"><expr pos:start="189:20" pos:end="189:22"><name pos:start="189:20" pos:end="189:22">pmv</name></expr></argument>, <argument pos:start="189:25" pos:end="189:25"><expr pos:start="189:25" pos:end="189:25"><literal type="number" pos:start="189:25" pos:end="189:25">0</literal></expr></argument>, <argument pos:start="189:28" pos:end="189:63"><expr pos:start="189:28" pos:end="189:63"><operator pos:start="189:28" pos:end="189:28">(</operator><operator pos:start="189:29" pos:end="189:29">(</operator><name pos:start="189:30" pos:end="189:34">width</name> <operator pos:start="189:36" pos:end="189:36">/</operator> <literal type="number" pos:start="189:38" pos:end="189:38">8</literal><operator pos:start="189:39" pos:end="189:39">)</operator> <operator pos:start="189:41" pos:end="189:41">+</operator> <literal type="number" pos:start="189:43" pos:end="189:43">3</literal><operator pos:start="189:44" pos:end="189:44">)</operator> <operator pos:start="189:46" pos:end="189:46">*</operator> <sizeof pos:start="189:48" pos:end="189:63">sizeof<argument_list pos:start="189:54" pos:end="189:63">(<argument pos:start="189:55" pos:end="189:62"><expr pos:start="189:55" pos:end="189:62"><name pos:start="189:55" pos:end="189:62">svq1_pmv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="193:13" pos:end="229:13">for <control pos:start="193:17" pos:end="193:44">(<init pos:start="193:18" pos:end="193:23"><expr pos:start="193:18" pos:end="193:22"><name pos:start="193:18" pos:end="193:18">y</name> <operator pos:start="193:20" pos:end="193:20">=</operator> <literal type="number" pos:start="193:22" pos:end="193:22">0</literal></expr>;</init> <condition pos:start="193:25" pos:end="193:35"><expr pos:start="193:25" pos:end="193:34"><name pos:start="193:25" pos:end="193:25">y</name> <operator pos:start="193:27" pos:end="193:27">&lt;</operator> <name pos:start="193:29" pos:end="193:34">height</name></expr>;</condition> <incr pos:start="193:37" pos:end="193:43"><expr pos:start="193:37" pos:end="193:43"><name pos:start="193:37" pos:end="193:37">y</name> <operator pos:start="193:39" pos:end="193:40">+=</operator> <literal type="number" pos:start="193:42" pos:end="193:43">16</literal></expr></incr>)</control> <block pos:start="193:46" pos:end="229:13">{<block_content pos:start="195:17" pos:end="227:41">

                <for pos:start="195:17" pos:end="217:17">for <control pos:start="195:21" pos:end="195:47">(<init pos:start="195:22" pos:end="195:27"><expr pos:start="195:22" pos:end="195:26"><name pos:start="195:22" pos:end="195:22">x</name> <operator pos:start="195:24" pos:end="195:24">=</operator> <literal type="number" pos:start="195:26" pos:end="195:26">0</literal></expr>;</init> <condition pos:start="195:29" pos:end="195:38"><expr pos:start="195:29" pos:end="195:37"><name pos:start="195:29" pos:end="195:29">x</name> <operator pos:start="195:31" pos:end="195:31">&lt;</operator> <name pos:start="195:33" pos:end="195:37">width</name></expr>;</condition> <incr pos:start="195:40" pos:end="195:46"><expr pos:start="195:40" pos:end="195:46"><name pos:start="195:40" pos:end="195:40">x</name> <operator pos:start="195:42" pos:end="195:43">+=</operator> <literal type="number" pos:start="195:45" pos:end="195:46">16</literal></expr></incr>)</control> <block pos:start="195:49" pos:end="217:17">{<block_content pos:start="197:21" pos:end="215:21">

                    <expr_stmt pos:start="197:21" pos:end="203:64"><expr pos:start="197:21" pos:end="203:63"><name pos:start="197:21" pos:end="197:26">result</name> <operator pos:start="197:28" pos:end="197:28">=</operator> <call pos:start="197:30" pos:end="203:63"><name pos:start="197:30" pos:end="197:52">svq1_decode_delta_block</name><argument_list pos:start="197:53" pos:end="203:63">(<argument pos:start="197:54" pos:end="197:58"><expr pos:start="197:54" pos:end="197:58"><name pos:start="197:54" pos:end="197:58">avctx</name></expr></argument>, <argument pos:start="197:61" pos:end="197:67"><expr pos:start="197:61" pos:end="197:67"><operator pos:start="197:61" pos:end="197:61">&amp;</operator><name pos:start="197:62" pos:end="197:67"><name pos:start="197:62" pos:end="197:62">s</name><operator pos:start="197:63" pos:end="197:64">-&gt;</operator><name pos:start="197:65" pos:end="197:67">dsp</name></name></expr></argument>,

                                                     <argument pos:start="199:54" pos:end="199:59"><expr pos:start="199:54" pos:end="199:59"><operator pos:start="199:54" pos:end="199:54">&amp;</operator><name pos:start="199:55" pos:end="199:59"><name pos:start="199:55" pos:end="199:55">s</name><operator pos:start="199:56" pos:end="199:57">-&gt;</operator><name pos:start="199:58" pos:end="199:59">gb</name></name></expr></argument>, <argument pos:start="199:62" pos:end="199:72"><expr pos:start="199:62" pos:end="199:72"><operator pos:start="199:62" pos:end="199:62">&amp;</operator><name pos:start="199:63" pos:end="199:72"><name pos:start="199:63" pos:end="199:69">current</name><index pos:start="199:70" pos:end="199:72">[<expr pos:start="199:71" pos:end="199:71"><name pos:start="199:71" pos:end="199:71">x</name></expr>]</index></name></expr></argument>,

                                                     <argument pos:start="201:54" pos:end="201:61"><expr pos:start="201:54" pos:end="201:61"><name pos:start="201:54" pos:end="201:61">previous</name></expr></argument>, <argument pos:start="201:64" pos:end="201:71"><expr pos:start="201:64" pos:end="201:71"><name pos:start="201:64" pos:end="201:71">linesize</name></expr></argument>,

                                                     <argument pos:start="203:54" pos:end="203:56"><expr pos:start="203:54" pos:end="203:56"><name pos:start="203:54" pos:end="203:56">pmv</name></expr></argument>, <argument pos:start="203:59" pos:end="203:59"><expr pos:start="203:59" pos:end="203:59"><name pos:start="203:59" pos:end="203:59">x</name></expr></argument>, <argument pos:start="203:62" pos:end="203:62"><expr pos:start="203:62" pos:end="203:62"><name pos:start="203:62" pos:end="203:62">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="205:21" pos:end="215:21"><if pos:start="205:21" pos:end="215:21">if <condition pos:start="205:24" pos:end="205:31">(<expr pos:start="205:25" pos:end="205:30"><name pos:start="205:25" pos:end="205:30">result</name></expr>)</condition> <block pos:start="205:33" pos:end="215:21">{<block_content pos:start="207:25" pos:end="213:33">

                        <expr_stmt pos:start="207:25" pos:end="211:40"><expr pos:start="207:25" pos:end="211:39"><call pos:start="207:25" pos:end="211:39"><name pos:start="207:25" pos:end="207:31">av_dlog</name><argument_list pos:start="207:32" pos:end="211:39">(<argument pos:start="207:33" pos:end="207:37"><expr pos:start="207:33" pos:end="207:37"><name pos:start="207:33" pos:end="207:37">avctx</name></expr></argument>,

                                <argument pos:start="209:33" pos:end="209:71"><expr pos:start="209:33" pos:end="209:71"><literal type="string" pos:start="209:33" pos:end="209:71">"Error in svq1_decode_delta_block %i\n"</literal></expr></argument>,

                                <argument pos:start="211:33" pos:end="211:38"><expr pos:start="211:33" pos:end="211:38"><name pos:start="211:33" pos:end="211:38">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="213:25" pos:end="213:33">goto <name pos:start="213:30" pos:end="213:32">err</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>



                <expr_stmt pos:start="221:17" pos:end="223:33"><expr pos:start="221:17" pos:end="223:32"><name pos:start="221:17" pos:end="221:22"><name pos:start="221:17" pos:end="221:19">pmv</name><index pos:start="221:20" pos:end="221:22">[<expr pos:start="221:21" pos:end="221:21"><literal type="number" pos:start="221:21" pos:end="221:21">0</literal></expr>]</index></name><operator pos:start="221:23" pos:end="221:23">.</operator><name pos:start="221:24" pos:end="221:24">x</name>     <operator pos:start="221:30" pos:end="221:30">=</operator>

                    <name pos:start="223:21" pos:end="223:26"><name pos:start="223:21" pos:end="223:23">pmv</name><index pos:start="223:24" pos:end="223:26">[<expr pos:start="223:25" pos:end="223:25"><literal type="number" pos:start="223:25" pos:end="223:25">0</literal></expr>]</index></name><operator pos:start="223:27" pos:end="223:27">.</operator><name pos:start="223:28" pos:end="223:28">y</name> <operator pos:start="223:30" pos:end="223:30">=</operator> <literal type="number" pos:start="223:32" pos:end="223:32">0</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="227:17" pos:end="227:41"><expr pos:start="227:17" pos:end="227:40"><name pos:start="227:17" pos:end="227:23">current</name> <operator pos:start="227:25" pos:end="227:26">+=</operator> <literal type="number" pos:start="227:28" pos:end="227:29">16</literal> <operator pos:start="227:31" pos:end="227:31">*</operator> <name pos:start="227:33" pos:end="227:40">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="237:5" pos:end="237:27"><expr pos:start="237:5" pos:end="237:26"><operator pos:start="237:5" pos:end="237:5">*</operator><operator pos:start="237:6" pos:end="237:6">(</operator><name pos:start="237:7" pos:end="237:13">AVFrame</name><operator pos:start="237:14" pos:end="237:14">*</operator><operator pos:start="237:15" pos:end="237:15">)</operator><name pos:start="237:16" pos:end="237:19">data</name> <operator pos:start="237:21" pos:end="237:21">=</operator> <operator pos:start="237:23" pos:end="237:23">*</operator><name pos:start="237:24" pos:end="237:26">cur</name></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:29"><expr pos:start="239:5" pos:end="239:28"><name pos:start="239:5" pos:end="239:21"><name pos:start="239:5" pos:end="239:7">cur</name><operator pos:start="239:8" pos:end="239:9">-&gt;</operator><name pos:start="239:10" pos:end="239:21">qscale_table</name></name> <operator pos:start="239:23" pos:end="239:23">=</operator> <name pos:start="239:25" pos:end="239:28">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="241:5" pos:end="243:42"><if pos:start="241:5" pos:end="243:42">if <condition pos:start="241:8" pos:end="241:19">(<expr pos:start="241:9" pos:end="241:18"><operator pos:start="241:9" pos:end="241:9">!</operator><name pos:start="241:10" pos:end="241:18"><name pos:start="241:10" pos:end="241:10">s</name><operator pos:start="241:11" pos:end="241:12">-&gt;</operator><name pos:start="241:13" pos:end="241:18">nonref</name></name></expr>)</condition><block type="pseudo" pos:start="243:9" pos:end="243:42"><block_content pos:start="243:9" pos:end="243:42">

        <expr_stmt pos:start="243:9" pos:end="243:42"><expr pos:start="243:9" pos:end="243:41"><call pos:start="243:9" pos:end="243:41"><name pos:start="243:9" pos:end="243:14">FFSWAP</name><argument_list pos:start="243:15" pos:end="243:41">(<argument pos:start="243:16" pos:end="243:23"><expr pos:start="243:16" pos:end="243:23"><name pos:start="243:16" pos:end="243:22">AVFrame</name><operator pos:start="243:23" pos:end="243:23">*</operator></expr></argument>, <argument pos:start="243:26" pos:end="243:31"><expr pos:start="243:26" pos:end="243:31"><name pos:start="243:26" pos:end="243:31"><name pos:start="243:26" pos:end="243:26">s</name><operator pos:start="243:27" pos:end="243:28">-&gt;</operator><name pos:start="243:29" pos:end="243:31">cur</name></name></expr></argument>, <argument pos:start="243:34" pos:end="243:40"><expr pos:start="243:34" pos:end="243:40"><name pos:start="243:34" pos:end="243:40"><name pos:start="243:34" pos:end="243:34">s</name><operator pos:start="243:35" pos:end="243:36">-&gt;</operator><name pos:start="243:37" pos:end="243:40">prev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="247:5" pos:end="247:19"><expr pos:start="247:5" pos:end="247:18"><operator pos:start="247:5" pos:end="247:5">*</operator><name pos:start="247:6" pos:end="247:14">got_frame</name> <operator pos:start="247:16" pos:end="247:16">=</operator> <literal type="number" pos:start="247:18" pos:end="247:18">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:26"><expr pos:start="249:5" pos:end="249:25"><name pos:start="249:5" pos:end="249:10">result</name>     <operator pos:start="249:16" pos:end="249:16">=</operator> <name pos:start="249:18" pos:end="249:25">buf_size</name></expr>;</expr_stmt>



<label pos:start="253:1" pos:end="253:4"><name pos:start="253:1" pos:end="253:3">err</name>:</label>

    <expr_stmt pos:start="255:5" pos:end="255:17"><expr pos:start="255:5" pos:end="255:16"><call pos:start="255:5" pos:end="255:16"><name pos:start="255:5" pos:end="255:11">av_free</name><argument_list pos:start="255:12" pos:end="255:16">(<argument pos:start="255:13" pos:end="255:15"><expr pos:start="255:13" pos:end="255:15"><name pos:start="255:13" pos:end="255:15">pmv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="257:5" pos:end="257:18">return <expr pos:start="257:12" pos:end="257:17"><name pos:start="257:12" pos:end="257:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
