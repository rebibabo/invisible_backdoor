<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23609.c" pos:tabs="8"><function pos:start="1:1" pos:end="411:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">onenand_command</name><parameter_list pos:start="1:28" pos:end="1:44">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:40">OneNANDState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="411:1">{<block_content pos:start="5:5" pos:end="409:27">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">sec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="38:0"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">buf</name></decl>;</decl_stmt>

<cpp:define pos:start="11:1" pos:end="21:67">#<cpp:directive pos:start="11:2" pos:end="11:7">define</cpp:directive> <cpp:macro pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:15">SETADDR</name><parameter_list pos:start="11:16" pos:end="11:28">(<parameter pos:start="11:17" pos:end="11:21"><type pos:start="11:17" pos:end="11:21"><name pos:start="11:17" pos:end="11:21">block</name></type></parameter>, <parameter pos:start="11:24" pos:end="11:27"><type pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">page</name></type></parameter>)</parameter_list></cpp:macro>			\

    <cpp:value pos:start="13:5" pos:end="21:67">sec = (s-&gt;addr[page] &amp; 3) +			\

            ((((s-&gt;addr[page] &gt;&gt; 2) &amp; 0x3f) +	\

              (((s-&gt;addr[block] &amp; 0xfff) |	\

                (s-&gt;addr[block] &gt;&gt; 15 ?		\

                 s-&gt;density_mask : 0)) &lt;&lt; 6)) &lt;&lt; (PAGE_SHIFT - 9));</cpp:value></cpp:define>

<cpp:define pos:start="23:1" pos:end="29:33">#<cpp:directive pos:start="23:2" pos:end="23:7">define</cpp:directive> <cpp:macro pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:16">SETBUF_M</name><parameter_list pos:start="23:17" pos:end="23:18">()</parameter_list></cpp:macro>				\

    <cpp:value pos:start="25:5" pos:end="29:33">buf = (s-&gt;bufaddr &amp; 8) ?			\

            s-&gt;data[(s-&gt;bufaddr &gt;&gt; 2) &amp; 1][0] : s-&gt;boot[0];	\

    buf += (s-&gt;bufaddr &amp; 3) &lt;&lt; 9;</cpp:value></cpp:define>

<cpp:define pos:start="31:1" pos:end="37:33">#<cpp:directive pos:start="31:2" pos:end="31:7">define</cpp:directive> <cpp:macro pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:16">SETBUF_S</name><parameter_list pos:start="31:17" pos:end="31:18">()</parameter_list></cpp:macro>				\

    <cpp:value pos:start="33:5" pos:end="37:33">buf = (s-&gt;bufaddr &amp; 8) ?			\

            s-&gt;data[(s-&gt;bufaddr &gt;&gt; 2) &amp; 1][1] : s-&gt;boot[1];	\

    buf += (s-&gt;bufaddr &amp; 3) &lt;&lt; 4;</cpp:value></cpp:define>



    <switch pos:start="41:5" pos:end="405:5">switch <condition pos:start="41:12" pos:end="41:23">(<expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:22">command</name></name></expr>)</condition> <block pos:start="41:25" pos:end="405:5">{<block_content pos:start="43:5" pos:end="403:46">

    <case pos:start="43:5" pos:end="43:14">case <expr pos:start="43:10" pos:end="43:13"><literal type="number" pos:start="43:10" pos:end="43:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="43:17" pos:end="43:71">/* Load single/multiple sector data unit into buffer */</comment>

        <macro pos:start="45:9" pos:end="45:46"><name pos:start="45:9" pos:end="45:15">SETADDR</name><argument_list pos:start="45:16" pos:end="45:46">(<argument pos:start="45:17" pos:end="45:30">ONEN_BUF_BLOCK</argument>, <argument pos:start="45:33" pos:end="45:45">ONEN_BUF_PAGE</argument>)</argument_list></macro>



        <macro pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:16">SETBUF_M</name><argument_list pos:start="49:17" pos:end="49:18">()</argument_list></macro>

        <if_stmt pos:start="51:9" pos:end="66:0"><if pos:start="51:9" pos:end="66:0">if <condition pos:start="51:12" pos:end="51:53">(<expr pos:start="51:13" pos:end="51:52"><call pos:start="51:13" pos:end="51:52"><name pos:start="51:13" pos:end="51:29">onenand_load_main</name><argument_list pos:start="51:30" pos:end="51:52">(<argument pos:start="51:31" pos:end="51:31"><expr pos:start="51:31" pos:end="51:31"><name pos:start="51:31" pos:end="51:31">s</name></expr></argument>, <argument pos:start="51:34" pos:end="51:36"><expr pos:start="51:34" pos:end="51:36"><name pos:start="51:34" pos:end="51:36">sec</name></expr></argument>, <argument pos:start="51:39" pos:end="51:46"><expr pos:start="51:39" pos:end="51:46"><name pos:start="51:39" pos:end="51:46"><name pos:start="51:39" pos:end="51:39">s</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:46">count</name></name></expr></argument>, <argument pos:start="51:49" pos:end="51:51"><expr pos:start="51:49" pos:end="51:51"><name pos:start="51:49" pos:end="51:51">buf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="66:0"><block_content pos:start="53:13" pos:end="66:0">

            <expr_stmt pos:start="53:13" pos:end="66:0"><expr pos:start="53:13" pos:end="53:53"><name pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:21">status</name></name> <operator pos:start="53:23" pos:end="53:24">|=</operator> <name pos:start="53:26" pos:end="53:37">ONEN_ERR_CMD</name> <operator pos:start="53:39" pos:end="53:39">|</operator> <name pos:start="53:41" pos:end="53:53">ONEN_ERR_LOAD</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="57:1" pos:end="57:5">#<cpp:directive pos:start="57:2" pos:end="57:3">if</cpp:directive> <expr pos:start="57:5" pos:end="57:5"><literal type="number" pos:start="57:5" pos:end="57:5">0</literal></expr></cpp:if>

        SETBUF_S()

        if (onenand_load_spare(s, sec, s-&gt;count, buf))

            s-&gt;status |= ONEN_ERR_CMD | ONEN_ERR_LOAD;

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>



        <comment type="block" pos:start="69:9" pos:end="75:11">/* TODO: if (s-&gt;bufaddr &amp; 3) + s-&gt;count was &gt; 4 (2k-pages)

         * or    if (s-&gt;bufaddr &amp; 1) + s-&gt;count was &gt; 2 (1k-pages)

         * then we need two split the read/write into two chunks.

         */</comment>

        <expr_stmt pos:start="77:9" pos:end="77:49"><expr pos:start="77:9" pos:end="77:48"><name pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:20">intstatus</name></name> <operator pos:start="77:22" pos:end="77:23">|=</operator> <name pos:start="77:25" pos:end="77:32">ONEN_INT</name> <operator pos:start="77:34" pos:end="77:34">|</operator> <name pos:start="77:36" pos:end="77:48">ONEN_INT_LOAD</name></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:14">case <expr pos:start="81:10" pos:end="81:13"><literal type="number" pos:start="81:10" pos:end="81:13">0x13</literal></expr>:</case>	<comment type="block" pos:start="81:17" pos:end="81:67">/* Load single/multiple spare sector into buffer */</comment>

        <macro pos:start="83:9" pos:end="83:46"><name pos:start="83:9" pos:end="83:15">SETADDR</name><argument_list pos:start="83:16" pos:end="83:46">(<argument pos:start="83:17" pos:end="83:30">ONEN_BUF_BLOCK</argument>, <argument pos:start="83:33" pos:end="83:45">ONEN_BUF_PAGE</argument>)</argument_list></macro>



        <macro pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:16">SETBUF_S</name><argument_list pos:start="87:17" pos:end="87:18">()</argument_list></macro>

        <if_stmt pos:start="89:9" pos:end="91:54"><if pos:start="89:9" pos:end="91:54">if <condition pos:start="89:12" pos:end="89:54">(<expr pos:start="89:13" pos:end="89:53"><call pos:start="89:13" pos:end="89:53"><name pos:start="89:13" pos:end="89:30">onenand_load_spare</name><argument_list pos:start="89:31" pos:end="89:53">(<argument pos:start="89:32" pos:end="89:32"><expr pos:start="89:32" pos:end="89:32"><name pos:start="89:32" pos:end="89:32">s</name></expr></argument>, <argument pos:start="89:35" pos:end="89:37"><expr pos:start="89:35" pos:end="89:37"><name pos:start="89:35" pos:end="89:37">sec</name></expr></argument>, <argument pos:start="89:40" pos:end="89:47"><expr pos:start="89:40" pos:end="89:47"><name pos:start="89:40" pos:end="89:47"><name pos:start="89:40" pos:end="89:40">s</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:47">count</name></name></expr></argument>, <argument pos:start="89:50" pos:end="89:52"><expr pos:start="89:50" pos:end="89:52"><name pos:start="89:50" pos:end="89:52">buf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:54"><block_content pos:start="91:13" pos:end="91:54">

            <expr_stmt pos:start="91:13" pos:end="91:54"><expr pos:start="91:13" pos:end="91:53"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:21">status</name></name> <operator pos:start="91:23" pos:end="91:24">|=</operator> <name pos:start="91:26" pos:end="91:37">ONEN_ERR_CMD</name> <operator pos:start="91:39" pos:end="91:39">|</operator> <name pos:start="91:41" pos:end="91:53">ONEN_ERR_LOAD</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="95:9" pos:end="101:11">/* TODO: if (s-&gt;bufaddr &amp; 3) + s-&gt;count was &gt; 4 (2k-pages)

         * or    if (s-&gt;bufaddr &amp; 1) + s-&gt;count was &gt; 2 (1k-pages)

         * then we need two split the read/write into two chunks.

         */</comment>

        <expr_stmt pos:start="103:9" pos:end="103:49"><expr pos:start="103:9" pos:end="103:48"><name pos:start="103:9" pos:end="103:20"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:20">intstatus</name></name> <operator pos:start="103:22" pos:end="103:23">|=</operator> <name pos:start="103:25" pos:end="103:32">ONEN_INT</name> <operator pos:start="103:34" pos:end="103:34">|</operator> <name pos:start="103:36" pos:end="103:48">ONEN_INT_LOAD</name></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:14">case <expr pos:start="107:10" pos:end="107:13"><literal type="number" pos:start="107:10" pos:end="107:13">0x80</literal></expr>:</case>	<comment type="block" pos:start="107:17" pos:end="107:74">/* Program single/multiple sector data unit from buffer */</comment>

        <macro pos:start="109:9" pos:end="109:46"><name pos:start="109:9" pos:end="109:15">SETADDR</name><argument_list pos:start="109:16" pos:end="109:46">(<argument pos:start="109:17" pos:end="109:30">ONEN_BUF_BLOCK</argument>, <argument pos:start="109:33" pos:end="109:45">ONEN_BUF_PAGE</argument>)</argument_list></macro>



        <macro pos:start="113:9" pos:end="113:18"><name pos:start="113:9" pos:end="113:16">SETBUF_M</name><argument_list pos:start="113:17" pos:end="113:18">()</argument_list></macro>

        <if_stmt pos:start="115:9" pos:end="130:0"><if pos:start="115:9" pos:end="130:0">if <condition pos:start="115:12" pos:end="115:53">(<expr pos:start="115:13" pos:end="115:52"><call pos:start="115:13" pos:end="115:52"><name pos:start="115:13" pos:end="115:29">onenand_prog_main</name><argument_list pos:start="115:30" pos:end="115:52">(<argument pos:start="115:31" pos:end="115:31"><expr pos:start="115:31" pos:end="115:31"><name pos:start="115:31" pos:end="115:31">s</name></expr></argument>, <argument pos:start="115:34" pos:end="115:36"><expr pos:start="115:34" pos:end="115:36"><name pos:start="115:34" pos:end="115:36">sec</name></expr></argument>, <argument pos:start="115:39" pos:end="115:46"><expr pos:start="115:39" pos:end="115:46"><name pos:start="115:39" pos:end="115:46"><name pos:start="115:39" pos:end="115:39">s</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:46">count</name></name></expr></argument>, <argument pos:start="115:49" pos:end="115:51"><expr pos:start="115:49" pos:end="115:51"><name pos:start="115:49" pos:end="115:51">buf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="130:0"><block_content pos:start="117:13" pos:end="130:0">

            <expr_stmt pos:start="117:13" pos:end="130:0"><expr pos:start="117:13" pos:end="117:53"><name pos:start="117:13" pos:end="117:21"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:21">status</name></name> <operator pos:start="117:23" pos:end="117:24">|=</operator> <name pos:start="117:26" pos:end="117:37">ONEN_ERR_CMD</name> <operator pos:start="117:39" pos:end="117:39">|</operator> <name pos:start="117:41" pos:end="117:53">ONEN_ERR_PROG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="121:1" pos:end="121:5">#<cpp:directive pos:start="121:2" pos:end="121:3">if</cpp:directive> <expr pos:start="121:5" pos:end="121:5"><literal type="number" pos:start="121:5" pos:end="121:5">0</literal></expr></cpp:if>

        SETBUF_S()

        if (onenand_prog_spare(s, sec, s-&gt;count, buf))

            s-&gt;status |= ONEN_ERR_CMD | ONEN_ERR_PROG;

<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>



        <comment type="block" pos:start="133:9" pos:end="139:11">/* TODO: if (s-&gt;bufaddr &amp; 3) + s-&gt;count was &gt; 4 (2k-pages)

         * or    if (s-&gt;bufaddr &amp; 1) + s-&gt;count was &gt; 2 (1k-pages)

         * then we need two split the read/write into two chunks.

         */</comment>

        <expr_stmt pos:start="141:9" pos:end="141:49"><expr pos:start="141:9" pos:end="141:48"><name pos:start="141:9" pos:end="141:20"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:20">intstatus</name></name> <operator pos:start="141:22" pos:end="141:23">|=</operator> <name pos:start="141:25" pos:end="141:32">ONEN_INT</name> <operator pos:start="141:34" pos:end="141:34">|</operator> <name pos:start="141:36" pos:end="141:48">ONEN_INT_PROG</name></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    <case pos:start="145:5" pos:end="145:14">case <expr pos:start="145:10" pos:end="145:13"><literal type="number" pos:start="145:10" pos:end="145:13">0x1a</literal></expr>:</case>	<comment type="block" pos:start="145:17" pos:end="145:75">/* Program single/multiple spare area sector from buffer */</comment>

        <macro pos:start="147:9" pos:end="147:46"><name pos:start="147:9" pos:end="147:15">SETADDR</name><argument_list pos:start="147:16" pos:end="147:46">(<argument pos:start="147:17" pos:end="147:30">ONEN_BUF_BLOCK</argument>, <argument pos:start="147:33" pos:end="147:45">ONEN_BUF_PAGE</argument>)</argument_list></macro>



        <macro pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:16">SETBUF_S</name><argument_list pos:start="151:17" pos:end="151:18">()</argument_list></macro>

        <if_stmt pos:start="153:9" pos:end="155:54"><if pos:start="153:9" pos:end="155:54">if <condition pos:start="153:12" pos:end="153:54">(<expr pos:start="153:13" pos:end="153:53"><call pos:start="153:13" pos:end="153:53"><name pos:start="153:13" pos:end="153:30">onenand_prog_spare</name><argument_list pos:start="153:31" pos:end="153:53">(<argument pos:start="153:32" pos:end="153:32"><expr pos:start="153:32" pos:end="153:32"><name pos:start="153:32" pos:end="153:32">s</name></expr></argument>, <argument pos:start="153:35" pos:end="153:37"><expr pos:start="153:35" pos:end="153:37"><name pos:start="153:35" pos:end="153:37">sec</name></expr></argument>, <argument pos:start="153:40" pos:end="153:47"><expr pos:start="153:40" pos:end="153:47"><name pos:start="153:40" pos:end="153:47"><name pos:start="153:40" pos:end="153:40">s</name><operator pos:start="153:41" pos:end="153:42">-&gt;</operator><name pos:start="153:43" pos:end="153:47">count</name></name></expr></argument>, <argument pos:start="153:50" pos:end="153:52"><expr pos:start="153:50" pos:end="153:52"><name pos:start="153:50" pos:end="153:52">buf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:54"><block_content pos:start="155:13" pos:end="155:54">

            <expr_stmt pos:start="155:13" pos:end="155:54"><expr pos:start="155:13" pos:end="155:53"><name pos:start="155:13" pos:end="155:21"><name pos:start="155:13" pos:end="155:13">s</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:21">status</name></name> <operator pos:start="155:23" pos:end="155:24">|=</operator> <name pos:start="155:26" pos:end="155:37">ONEN_ERR_CMD</name> <operator pos:start="155:39" pos:end="155:39">|</operator> <name pos:start="155:41" pos:end="155:53">ONEN_ERR_PROG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="159:9" pos:end="165:11">/* TODO: if (s-&gt;bufaddr &amp; 3) + s-&gt;count was &gt; 4 (2k-pages)

         * or    if (s-&gt;bufaddr &amp; 1) + s-&gt;count was &gt; 2 (1k-pages)

         * then we need two split the read/write into two chunks.

         */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:49"><expr pos:start="167:9" pos:end="167:48"><name pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:20">intstatus</name></name> <operator pos:start="167:22" pos:end="167:23">|=</operator> <name pos:start="167:25" pos:end="167:32">ONEN_INT</name> <operator pos:start="167:34" pos:end="167:34">|</operator> <name pos:start="167:36" pos:end="167:48">ONEN_INT_PROG</name></expr>;</expr_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <case pos:start="171:5" pos:end="171:14">case <expr pos:start="171:10" pos:end="171:13"><literal type="number" pos:start="171:10" pos:end="171:13">0x1b</literal></expr>:</case>	<comment type="block" pos:start="171:17" pos:end="171:39">/* Copy-back program */</comment>

        <macro pos:start="173:9" pos:end="173:18"><name pos:start="173:9" pos:end="173:16">SETBUF_S</name><argument_list pos:start="173:17" pos:end="173:18">()</argument_list></macro>



        <macro pos:start="177:9" pos:end="177:46"><name pos:start="177:9" pos:end="177:15">SETADDR</name><argument_list pos:start="177:16" pos:end="177:46">(<argument pos:start="177:17" pos:end="177:30">ONEN_BUF_BLOCK</argument>, <argument pos:start="177:33" pos:end="177:45">ONEN_BUF_PAGE</argument>)</argument_list></macro>

        <if_stmt pos:start="179:9" pos:end="181:54"><if pos:start="179:9" pos:end="181:54">if <condition pos:start="179:12" pos:end="179:53">(<expr pos:start="179:13" pos:end="179:52"><call pos:start="179:13" pos:end="179:52"><name pos:start="179:13" pos:end="179:29">onenand_load_main</name><argument_list pos:start="179:30" pos:end="179:52">(<argument pos:start="179:31" pos:end="179:31"><expr pos:start="179:31" pos:end="179:31"><name pos:start="179:31" pos:end="179:31">s</name></expr></argument>, <argument pos:start="179:34" pos:end="179:36"><expr pos:start="179:34" pos:end="179:36"><name pos:start="179:34" pos:end="179:36">sec</name></expr></argument>, <argument pos:start="179:39" pos:end="179:46"><expr pos:start="179:39" pos:end="179:46"><name pos:start="179:39" pos:end="179:46"><name pos:start="179:39" pos:end="179:39">s</name><operator pos:start="179:40" pos:end="179:41">-&gt;</operator><name pos:start="179:42" pos:end="179:46">count</name></name></expr></argument>, <argument pos:start="179:49" pos:end="179:51"><expr pos:start="179:49" pos:end="179:51"><name pos:start="179:49" pos:end="179:51">buf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:54"><block_content pos:start="181:13" pos:end="181:54">

            <expr_stmt pos:start="181:13" pos:end="181:54"><expr pos:start="181:13" pos:end="181:53"><name pos:start="181:13" pos:end="181:21"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:21">status</name></name> <operator pos:start="181:23" pos:end="181:24">|=</operator> <name pos:start="181:26" pos:end="181:37">ONEN_ERR_CMD</name> <operator pos:start="181:39" pos:end="181:39">|</operator> <name pos:start="181:41" pos:end="181:53">ONEN_ERR_PROG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <macro pos:start="185:9" pos:end="185:56"><name pos:start="185:9" pos:end="185:15">SETADDR</name><argument_list pos:start="185:16" pos:end="185:56">(<argument pos:start="185:17" pos:end="185:35">ONEN_BUF_DEST_BLOCK</argument>, <argument pos:start="185:38" pos:end="185:55">ONEN_BUF_DEST_PAGE</argument>)</argument_list></macro>

        <if_stmt pos:start="187:9" pos:end="189:54"><if pos:start="187:9" pos:end="189:54">if <condition pos:start="187:12" pos:end="187:53">(<expr pos:start="187:13" pos:end="187:52"><call pos:start="187:13" pos:end="187:52"><name pos:start="187:13" pos:end="187:29">onenand_prog_main</name><argument_list pos:start="187:30" pos:end="187:52">(<argument pos:start="187:31" pos:end="187:31"><expr pos:start="187:31" pos:end="187:31"><name pos:start="187:31" pos:end="187:31">s</name></expr></argument>, <argument pos:start="187:34" pos:end="187:36"><expr pos:start="187:34" pos:end="187:36"><name pos:start="187:34" pos:end="187:36">sec</name></expr></argument>, <argument pos:start="187:39" pos:end="187:46"><expr pos:start="187:39" pos:end="187:46"><name pos:start="187:39" pos:end="187:46"><name pos:start="187:39" pos:end="187:39">s</name><operator pos:start="187:40" pos:end="187:41">-&gt;</operator><name pos:start="187:42" pos:end="187:46">count</name></name></expr></argument>, <argument pos:start="187:49" pos:end="187:51"><expr pos:start="187:49" pos:end="187:51"><name pos:start="187:49" pos:end="187:51">buf</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="189:13" pos:end="189:54"><block_content pos:start="189:13" pos:end="189:54">

            <expr_stmt pos:start="189:13" pos:end="189:54"><expr pos:start="189:13" pos:end="189:53"><name pos:start="189:13" pos:end="189:21"><name pos:start="189:13" pos:end="189:13">s</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:21">status</name></name> <operator pos:start="189:23" pos:end="189:24">|=</operator> <name pos:start="189:26" pos:end="189:37">ONEN_ERR_CMD</name> <operator pos:start="189:39" pos:end="189:39">|</operator> <name pos:start="189:41" pos:end="189:53">ONEN_ERR_PROG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="193:9" pos:end="193:31">/* TODO: spare areas */</comment>



        <expr_stmt pos:start="197:9" pos:end="197:49"><expr pos:start="197:9" pos:end="197:48"><name pos:start="197:9" pos:end="197:20"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:20">intstatus</name></name> <operator pos:start="197:22" pos:end="197:23">|=</operator> <name pos:start="197:25" pos:end="197:32">ONEN_INT</name> <operator pos:start="197:34" pos:end="197:34">|</operator> <name pos:start="197:36" pos:end="197:48">ONEN_INT_PROG</name></expr>;</expr_stmt>

        <break pos:start="199:9" pos:end="199:14">break;</break>



    <case pos:start="203:5" pos:end="203:14">case <expr pos:start="203:10" pos:end="203:13"><literal type="number" pos:start="203:10" pos:end="203:13">0x23</literal></expr>:</case>	<comment type="block" pos:start="203:17" pos:end="203:48">/* Unlock NAND array block(s) */</comment>

        <expr_stmt pos:start="205:9" pos:end="205:33"><expr pos:start="205:9" pos:end="205:32"><name pos:start="205:9" pos:end="205:20"><name pos:start="205:9" pos:end="205:9">s</name><operator pos:start="205:10" pos:end="205:11">-&gt;</operator><name pos:start="205:12" pos:end="205:20">intstatus</name></name> <operator pos:start="205:22" pos:end="205:23">|=</operator> <name pos:start="205:25" pos:end="205:32">ONEN_INT</name></expr>;</expr_stmt>



        <comment type="block" pos:start="209:9" pos:end="209:70">/* XXX the previous (?) area should be locked automatically */</comment>

        <for pos:start="211:9" pos:end="229:9">for <control pos:start="211:13" pos:end="211:57">(<init pos:start="211:14" pos:end="211:31"><expr pos:start="211:14" pos:end="211:30"><name pos:start="211:14" pos:end="211:14">b</name> <operator pos:start="211:16" pos:end="211:16">=</operator> <name pos:start="211:18" pos:end="211:30"><name pos:start="211:18" pos:end="211:18">s</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:27">unladdr</name><index pos:start="211:28" pos:end="211:30">[<expr pos:start="211:29" pos:end="211:29"><literal type="number" pos:start="211:29" pos:end="211:29">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="211:33" pos:end="211:51"><expr pos:start="211:33" pos:end="211:50"><name pos:start="211:33" pos:end="211:33">b</name> <operator pos:start="211:35" pos:end="211:36">&lt;=</operator> <name pos:start="211:38" pos:end="211:50"><name pos:start="211:38" pos:end="211:38">s</name><operator pos:start="211:39" pos:end="211:40">-&gt;</operator><name pos:start="211:41" pos:end="211:47">unladdr</name><index pos:start="211:48" pos:end="211:50">[<expr pos:start="211:49" pos:end="211:49"><literal type="number" pos:start="211:49" pos:end="211:49">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="211:53" pos:end="211:56"><expr pos:start="211:53" pos:end="211:56"><name pos:start="211:53" pos:end="211:53">b</name> <operator pos:start="211:55" pos:end="211:56">++</operator></expr></incr>)</control> <block pos:start="211:59" pos:end="229:9">{<block_content pos:start="213:13" pos:end="227:61">

            <if_stmt pos:start="213:13" pos:end="219:13"><if pos:start="213:13" pos:end="219:13">if <condition pos:start="213:16" pos:end="213:31">(<expr pos:start="213:17" pos:end="213:30"><name pos:start="213:17" pos:end="213:17">b</name> <operator pos:start="213:19" pos:end="213:20">&gt;=</operator> <name pos:start="213:22" pos:end="213:30"><name pos:start="213:22" pos:end="213:22">s</name><operator pos:start="213:23" pos:end="213:24">-&gt;</operator><name pos:start="213:25" pos:end="213:30">blocks</name></name></expr>)</condition> <block pos:start="213:33" pos:end="219:13">{<block_content pos:start="215:17" pos:end="217:22">

                <expr_stmt pos:start="215:17" pos:end="215:42"><expr pos:start="215:17" pos:end="215:41"><name pos:start="215:17" pos:end="215:25"><name pos:start="215:17" pos:end="215:17">s</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:25">status</name></name> <operator pos:start="215:27" pos:end="215:28">|=</operator> <name pos:start="215:30" pos:end="215:41">ONEN_ERR_CMD</name></expr>;</expr_stmt>

                <break pos:start="217:17" pos:end="217:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="221:13" pos:end="223:22"><if pos:start="221:13" pos:end="223:22">if <condition pos:start="221:16" pos:end="221:55">(<expr pos:start="221:17" pos:end="221:54"><name pos:start="221:17" pos:end="221:29"><name pos:start="221:17" pos:end="221:17">s</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:26">blockwp</name><index pos:start="221:27" pos:end="221:29">[<expr pos:start="221:28" pos:end="221:28"><name pos:start="221:28" pos:end="221:28">b</name></expr>]</index></name> <operator pos:start="221:31" pos:end="221:32">==</operator> <name pos:start="221:34" pos:end="221:54">ONEN_LOCK_LOCKTIGHTEN</name></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:22"><block_content pos:start="223:17" pos:end="223:22">

                <break pos:start="223:17" pos:end="223:22">break;</break></block_content></block></if></if_stmt>



            <expr_stmt pos:start="227:13" pos:end="227:61"><expr pos:start="227:13" pos:end="227:60"><name pos:start="227:13" pos:end="227:23"><name pos:start="227:13" pos:end="227:13">s</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:23">wpstatus</name></name> <operator pos:start="227:25" pos:end="227:25">=</operator> <name pos:start="227:27" pos:end="227:39"><name pos:start="227:27" pos:end="227:27">s</name><operator pos:start="227:28" pos:end="227:29">-&gt;</operator><name pos:start="227:30" pos:end="227:36">blockwp</name><index pos:start="227:37" pos:end="227:39">[<expr pos:start="227:38" pos:end="227:38"><name pos:start="227:38" pos:end="227:38">b</name></expr>]</index></name> <operator pos:start="227:41" pos:end="227:41">=</operator> <name pos:start="227:43" pos:end="227:60">ONEN_LOCK_UNLOCKED</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:14">case <expr pos:start="233:10" pos:end="233:13"><literal type="number" pos:start="233:10" pos:end="233:13">0x27</literal></expr>:</case>	<comment type="block" pos:start="233:17" pos:end="233:50">/* Unlock All NAND array blocks */</comment>

        <expr_stmt pos:start="235:9" pos:end="235:33"><expr pos:start="235:9" pos:end="235:32"><name pos:start="235:9" pos:end="235:20"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:20">intstatus</name></name> <operator pos:start="235:22" pos:end="235:23">|=</operator> <name pos:start="235:25" pos:end="235:32">ONEN_INT</name></expr>;</expr_stmt>



        <for pos:start="239:9" pos:end="257:9">for <control pos:start="239:13" pos:end="239:40">(<init pos:start="239:14" pos:end="239:19"><expr pos:start="239:14" pos:end="239:18"><name pos:start="239:14" pos:end="239:14">b</name> <operator pos:start="239:16" pos:end="239:16">=</operator> <literal type="number" pos:start="239:18" pos:end="239:18">0</literal></expr>;</init> <condition pos:start="239:21" pos:end="239:34"><expr pos:start="239:21" pos:end="239:33"><name pos:start="239:21" pos:end="239:21">b</name> <operator pos:start="239:23" pos:end="239:23">&lt;</operator> <name pos:start="239:25" pos:end="239:33"><name pos:start="239:25" pos:end="239:25">s</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:33">blocks</name></name></expr>;</condition> <incr pos:start="239:36" pos:end="239:39"><expr pos:start="239:36" pos:end="239:39"><name pos:start="239:36" pos:end="239:36">b</name> <operator pos:start="239:38" pos:end="239:39">++</operator></expr></incr>)</control> <block pos:start="239:42" pos:end="257:9">{<block_content pos:start="241:13" pos:end="255:61">

            <if_stmt pos:start="241:13" pos:end="247:13"><if pos:start="241:13" pos:end="247:13">if <condition pos:start="241:16" pos:end="241:31">(<expr pos:start="241:17" pos:end="241:30"><name pos:start="241:17" pos:end="241:17">b</name> <operator pos:start="241:19" pos:end="241:20">&gt;=</operator> <name pos:start="241:22" pos:end="241:30"><name pos:start="241:22" pos:end="241:22">s</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:30">blocks</name></name></expr>)</condition> <block pos:start="241:33" pos:end="247:13">{<block_content pos:start="243:17" pos:end="245:22">

                <expr_stmt pos:start="243:17" pos:end="243:42"><expr pos:start="243:17" pos:end="243:41"><name pos:start="243:17" pos:end="243:25"><name pos:start="243:17" pos:end="243:17">s</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:25">status</name></name> <operator pos:start="243:27" pos:end="243:28">|=</operator> <name pos:start="243:30" pos:end="243:41">ONEN_ERR_CMD</name></expr>;</expr_stmt>

                <break pos:start="245:17" pos:end="245:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="249:13" pos:end="251:22"><if pos:start="249:13" pos:end="251:22">if <condition pos:start="249:16" pos:end="249:55">(<expr pos:start="249:17" pos:end="249:54"><name pos:start="249:17" pos:end="249:29"><name pos:start="249:17" pos:end="249:17">s</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:26">blockwp</name><index pos:start="249:27" pos:end="249:29">[<expr pos:start="249:28" pos:end="249:28"><name pos:start="249:28" pos:end="249:28">b</name></expr>]</index></name> <operator pos:start="249:31" pos:end="249:32">==</operator> <name pos:start="249:34" pos:end="249:54">ONEN_LOCK_LOCKTIGHTEN</name></expr>)</condition><block type="pseudo" pos:start="251:17" pos:end="251:22"><block_content pos:start="251:17" pos:end="251:22">

                <break pos:start="251:17" pos:end="251:22">break;</break></block_content></block></if></if_stmt>



            <expr_stmt pos:start="255:13" pos:end="255:61"><expr pos:start="255:13" pos:end="255:60"><name pos:start="255:13" pos:end="255:23"><name pos:start="255:13" pos:end="255:13">s</name><operator pos:start="255:14" pos:end="255:15">-&gt;</operator><name pos:start="255:16" pos:end="255:23">wpstatus</name></name> <operator pos:start="255:25" pos:end="255:25">=</operator> <name pos:start="255:27" pos:end="255:39"><name pos:start="255:27" pos:end="255:27">s</name><operator pos:start="255:28" pos:end="255:29">-&gt;</operator><name pos:start="255:30" pos:end="255:36">blockwp</name><index pos:start="255:37" pos:end="255:39">[<expr pos:start="255:38" pos:end="255:38"><name pos:start="255:38" pos:end="255:38">b</name></expr>]</index></name> <operator pos:start="255:41" pos:end="255:41">=</operator> <name pos:start="255:43" pos:end="255:60">ONEN_LOCK_UNLOCKED</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="259:9" pos:end="259:14">break;</break>



    <case pos:start="263:5" pos:end="263:14">case <expr pos:start="263:10" pos:end="263:13"><literal type="number" pos:start="263:10" pos:end="263:13">0x2a</literal></expr>:</case>	<comment type="block" pos:start="263:17" pos:end="263:46">/* Lock NAND array block(s) */</comment>

        <expr_stmt pos:start="265:9" pos:end="265:33"><expr pos:start="265:9" pos:end="265:32"><name pos:start="265:9" pos:end="265:20"><name pos:start="265:9" pos:end="265:9">s</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:20">intstatus</name></name> <operator pos:start="265:22" pos:end="265:23">|=</operator> <name pos:start="265:25" pos:end="265:32">ONEN_INT</name></expr>;</expr_stmt>



        <for pos:start="269:9" pos:end="287:9">for <control pos:start="269:13" pos:end="269:57">(<init pos:start="269:14" pos:end="269:31"><expr pos:start="269:14" pos:end="269:30"><name pos:start="269:14" pos:end="269:14">b</name> <operator pos:start="269:16" pos:end="269:16">=</operator> <name pos:start="269:18" pos:end="269:30"><name pos:start="269:18" pos:end="269:18">s</name><operator pos:start="269:19" pos:end="269:20">-&gt;</operator><name pos:start="269:21" pos:end="269:27">unladdr</name><index pos:start="269:28" pos:end="269:30">[<expr pos:start="269:29" pos:end="269:29"><literal type="number" pos:start="269:29" pos:end="269:29">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="269:33" pos:end="269:51"><expr pos:start="269:33" pos:end="269:50"><name pos:start="269:33" pos:end="269:33">b</name> <operator pos:start="269:35" pos:end="269:36">&lt;=</operator> <name pos:start="269:38" pos:end="269:50"><name pos:start="269:38" pos:end="269:38">s</name><operator pos:start="269:39" pos:end="269:40">-&gt;</operator><name pos:start="269:41" pos:end="269:47">unladdr</name><index pos:start="269:48" pos:end="269:50">[<expr pos:start="269:49" pos:end="269:49"><literal type="number" pos:start="269:49" pos:end="269:49">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="269:53" pos:end="269:56"><expr pos:start="269:53" pos:end="269:56"><name pos:start="269:53" pos:end="269:53">b</name> <operator pos:start="269:55" pos:end="269:56">++</operator></expr></incr>)</control> <block pos:start="269:59" pos:end="287:9">{<block_content pos:start="271:13" pos:end="285:59">

            <if_stmt pos:start="271:13" pos:end="277:13"><if pos:start="271:13" pos:end="277:13">if <condition pos:start="271:16" pos:end="271:31">(<expr pos:start="271:17" pos:end="271:30"><name pos:start="271:17" pos:end="271:17">b</name> <operator pos:start="271:19" pos:end="271:20">&gt;=</operator> <name pos:start="271:22" pos:end="271:30"><name pos:start="271:22" pos:end="271:22">s</name><operator pos:start="271:23" pos:end="271:24">-&gt;</operator><name pos:start="271:25" pos:end="271:30">blocks</name></name></expr>)</condition> <block pos:start="271:33" pos:end="277:13">{<block_content pos:start="273:17" pos:end="275:22">

                <expr_stmt pos:start="273:17" pos:end="273:42"><expr pos:start="273:17" pos:end="273:41"><name pos:start="273:17" pos:end="273:25"><name pos:start="273:17" pos:end="273:17">s</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:25">status</name></name> <operator pos:start="273:27" pos:end="273:28">|=</operator> <name pos:start="273:30" pos:end="273:41">ONEN_ERR_CMD</name></expr>;</expr_stmt>

                <break pos:start="275:17" pos:end="275:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="279:13" pos:end="281:22"><if pos:start="279:13" pos:end="281:22">if <condition pos:start="279:16" pos:end="279:55">(<expr pos:start="279:17" pos:end="279:54"><name pos:start="279:17" pos:end="279:29"><name pos:start="279:17" pos:end="279:17">s</name><operator pos:start="279:18" pos:end="279:19">-&gt;</operator><name pos:start="279:20" pos:end="279:26">blockwp</name><index pos:start="279:27" pos:end="279:29">[<expr pos:start="279:28" pos:end="279:28"><name pos:start="279:28" pos:end="279:28">b</name></expr>]</index></name> <operator pos:start="279:31" pos:end="279:32">==</operator> <name pos:start="279:34" pos:end="279:54">ONEN_LOCK_LOCKTIGHTEN</name></expr>)</condition><block type="pseudo" pos:start="281:17" pos:end="281:22"><block_content pos:start="281:17" pos:end="281:22">

                <break pos:start="281:17" pos:end="281:22">break;</break></block_content></block></if></if_stmt>



            <expr_stmt pos:start="285:13" pos:end="285:59"><expr pos:start="285:13" pos:end="285:58"><name pos:start="285:13" pos:end="285:23"><name pos:start="285:13" pos:end="285:13">s</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:23">wpstatus</name></name> <operator pos:start="285:25" pos:end="285:25">=</operator> <name pos:start="285:27" pos:end="285:39"><name pos:start="285:27" pos:end="285:27">s</name><operator pos:start="285:28" pos:end="285:29">-&gt;</operator><name pos:start="285:30" pos:end="285:36">blockwp</name><index pos:start="285:37" pos:end="285:39">[<expr pos:start="285:38" pos:end="285:38"><name pos:start="285:38" pos:end="285:38">b</name></expr>]</index></name> <operator pos:start="285:41" pos:end="285:41">=</operator> <name pos:start="285:43" pos:end="285:58">ONEN_LOCK_LOCKED</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="289:9" pos:end="289:14">break;</break>

    <case pos:start="291:5" pos:end="291:14">case <expr pos:start="291:10" pos:end="291:13"><literal type="number" pos:start="291:10" pos:end="291:13">0x2c</literal></expr>:</case>	<comment type="block" pos:start="291:17" pos:end="291:52">/* Lock-tight NAND array block(s) */</comment>

        <expr_stmt pos:start="293:9" pos:end="293:33"><expr pos:start="293:9" pos:end="293:32"><name pos:start="293:9" pos:end="293:20"><name pos:start="293:9" pos:end="293:9">s</name><operator pos:start="293:10" pos:end="293:11">-&gt;</operator><name pos:start="293:12" pos:end="293:20">intstatus</name></name> <operator pos:start="293:22" pos:end="293:23">|=</operator> <name pos:start="293:25" pos:end="293:32">ONEN_INT</name></expr>;</expr_stmt>



        <for pos:start="297:9" pos:end="315:9">for <control pos:start="297:13" pos:end="297:57">(<init pos:start="297:14" pos:end="297:31"><expr pos:start="297:14" pos:end="297:30"><name pos:start="297:14" pos:end="297:14">b</name> <operator pos:start="297:16" pos:end="297:16">=</operator> <name pos:start="297:18" pos:end="297:30"><name pos:start="297:18" pos:end="297:18">s</name><operator pos:start="297:19" pos:end="297:20">-&gt;</operator><name pos:start="297:21" pos:end="297:27">unladdr</name><index pos:start="297:28" pos:end="297:30">[<expr pos:start="297:29" pos:end="297:29"><literal type="number" pos:start="297:29" pos:end="297:29">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="297:33" pos:end="297:51"><expr pos:start="297:33" pos:end="297:50"><name pos:start="297:33" pos:end="297:33">b</name> <operator pos:start="297:35" pos:end="297:36">&lt;=</operator> <name pos:start="297:38" pos:end="297:50"><name pos:start="297:38" pos:end="297:38">s</name><operator pos:start="297:39" pos:end="297:40">-&gt;</operator><name pos:start="297:41" pos:end="297:47">unladdr</name><index pos:start="297:48" pos:end="297:50">[<expr pos:start="297:49" pos:end="297:49"><literal type="number" pos:start="297:49" pos:end="297:49">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="297:53" pos:end="297:56"><expr pos:start="297:53" pos:end="297:56"><name pos:start="297:53" pos:end="297:53">b</name> <operator pos:start="297:55" pos:end="297:56">++</operator></expr></incr>)</control> <block pos:start="297:59" pos:end="315:9">{<block_content pos:start="299:13" pos:end="313:64">

            <if_stmt pos:start="299:13" pos:end="305:13"><if pos:start="299:13" pos:end="305:13">if <condition pos:start="299:16" pos:end="299:31">(<expr pos:start="299:17" pos:end="299:30"><name pos:start="299:17" pos:end="299:17">b</name> <operator pos:start="299:19" pos:end="299:20">&gt;=</operator> <name pos:start="299:22" pos:end="299:30"><name pos:start="299:22" pos:end="299:22">s</name><operator pos:start="299:23" pos:end="299:24">-&gt;</operator><name pos:start="299:25" pos:end="299:30">blocks</name></name></expr>)</condition> <block pos:start="299:33" pos:end="305:13">{<block_content pos:start="301:17" pos:end="303:22">

                <expr_stmt pos:start="301:17" pos:end="301:42"><expr pos:start="301:17" pos:end="301:41"><name pos:start="301:17" pos:end="301:25"><name pos:start="301:17" pos:end="301:17">s</name><operator pos:start="301:18" pos:end="301:19">-&gt;</operator><name pos:start="301:20" pos:end="301:25">status</name></name> <operator pos:start="301:27" pos:end="301:28">|=</operator> <name pos:start="301:30" pos:end="301:41">ONEN_ERR_CMD</name></expr>;</expr_stmt>

                <break pos:start="303:17" pos:end="303:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="307:13" pos:end="309:25"><if pos:start="307:13" pos:end="309:25">if <condition pos:start="307:16" pos:end="307:52">(<expr pos:start="307:17" pos:end="307:51"><name pos:start="307:17" pos:end="307:29"><name pos:start="307:17" pos:end="307:17">s</name><operator pos:start="307:18" pos:end="307:19">-&gt;</operator><name pos:start="307:20" pos:end="307:26">blockwp</name><index pos:start="307:27" pos:end="307:29">[<expr pos:start="307:28" pos:end="307:28"><name pos:start="307:28" pos:end="307:28">b</name></expr>]</index></name> <operator pos:start="307:31" pos:end="307:32">==</operator> <name pos:start="307:34" pos:end="307:51">ONEN_LOCK_UNLOCKED</name></expr>)</condition><block type="pseudo" pos:start="309:17" pos:end="309:25"><block_content pos:start="309:17" pos:end="309:25">

                <continue pos:start="309:17" pos:end="309:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="313:13" pos:end="313:64"><expr pos:start="313:13" pos:end="313:63"><name pos:start="313:13" pos:end="313:23"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:23">wpstatus</name></name> <operator pos:start="313:25" pos:end="313:25">=</operator> <name pos:start="313:27" pos:end="313:39"><name pos:start="313:27" pos:end="313:27">s</name><operator pos:start="313:28" pos:end="313:29">-&gt;</operator><name pos:start="313:30" pos:end="313:36">blockwp</name><index pos:start="313:37" pos:end="313:39">[<expr pos:start="313:38" pos:end="313:38"><name pos:start="313:38" pos:end="313:38">b</name></expr>]</index></name> <operator pos:start="313:41" pos:end="313:41">=</operator> <name pos:start="313:43" pos:end="313:63">ONEN_LOCK_LOCKTIGHTEN</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="317:9" pos:end="317:14">break;</break>



    <case pos:start="321:5" pos:end="321:14">case <expr pos:start="321:10" pos:end="321:13"><literal type="number" pos:start="321:10" pos:end="321:13">0x71</literal></expr>:</case>	<comment type="block" pos:start="321:17" pos:end="321:39">/* Erase-Verify-Read */</comment>

        <expr_stmt pos:start="323:9" pos:end="323:33"><expr pos:start="323:9" pos:end="323:32"><name pos:start="323:9" pos:end="323:20"><name pos:start="323:9" pos:end="323:9">s</name><operator pos:start="323:10" pos:end="323:11">-&gt;</operator><name pos:start="323:12" pos:end="323:20">intstatus</name></name> <operator pos:start="323:22" pos:end="323:23">|=</operator> <name pos:start="323:25" pos:end="323:32">ONEN_INT</name></expr>;</expr_stmt>

        <break pos:start="325:9" pos:end="325:14">break;</break>

    <case pos:start="327:5" pos:end="327:14">case <expr pos:start="327:10" pos:end="327:13"><literal type="number" pos:start="327:10" pos:end="327:13">0x95</literal></expr>:</case>	<comment type="block" pos:start="327:17" pos:end="327:39">/* Multi-block erase */</comment>

        <expr_stmt pos:start="329:9" pos:end="329:32"><expr pos:start="329:9" pos:end="329:31"><call pos:start="329:9" pos:end="329:31"><name pos:start="329:9" pos:end="329:22">qemu_irq_pulse</name><argument_list pos:start="329:23" pos:end="329:31">(<argument pos:start="329:24" pos:end="329:30"><expr pos:start="329:24" pos:end="329:30"><name pos:start="329:24" pos:end="329:30"><name pos:start="329:24" pos:end="329:24">s</name><operator pos:start="329:25" pos:end="329:26">-&gt;</operator><name pos:start="329:27" pos:end="329:30">intr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="331:9" pos:end="331:28">/* Fall through.  */</comment>

    <case pos:start="333:5" pos:end="333:14">case <expr pos:start="333:10" pos:end="333:13"><literal type="number" pos:start="333:10" pos:end="333:13">0x94</literal></expr>:</case>	<comment type="block" pos:start="333:17" pos:end="333:33">/* Block erase */</comment>

        <expr_stmt pos:start="335:9" pos:end="339:37"><expr pos:start="335:9" pos:end="339:36"><name pos:start="335:9" pos:end="335:11">sec</name> <operator pos:start="335:13" pos:end="335:13">=</operator> <operator pos:start="335:15" pos:end="335:15">(</operator><operator pos:start="335:16" pos:end="335:16">(</operator><name pos:start="335:17" pos:end="335:39"><name pos:start="335:17" pos:end="335:17">s</name><operator pos:start="335:18" pos:end="335:19">-&gt;</operator><name pos:start="335:20" pos:end="335:23">addr</name><index pos:start="335:24" pos:end="335:39">[<expr pos:start="335:25" pos:end="335:38"><name pos:start="335:25" pos:end="335:38">ONEN_BUF_BLOCK</name></expr>]</index></name> <operator pos:start="335:41" pos:end="335:41">&amp;</operator> <literal type="number" pos:start="335:43" pos:end="335:47">0xfff</literal><operator pos:start="335:48" pos:end="335:48">)</operator> <operator pos:start="335:50" pos:end="335:50">|</operator>

                        <operator pos:start="337:25" pos:end="337:25">(</operator><ternary pos:start="337:26" pos:end="337:76"><condition pos:start="337:26" pos:end="337:56"><expr pos:start="337:26" pos:end="337:54"><name pos:start="337:26" pos:end="337:48"><name pos:start="337:26" pos:end="337:26">s</name><operator pos:start="337:27" pos:end="337:28">-&gt;</operator><name pos:start="337:29" pos:end="337:32">addr</name><index pos:start="337:33" pos:end="337:48">[<expr pos:start="337:34" pos:end="337:47"><name pos:start="337:34" pos:end="337:47">ONEN_BUF_BLOCK</name></expr>]</index></name> <operator pos:start="337:50" pos:end="337:51">&gt;&gt;</operator> <literal type="number" pos:start="337:53" pos:end="337:54">15</literal></expr> ?</condition><then pos:start="337:58" pos:end="337:72"> <expr pos:start="337:58" pos:end="337:72"><name pos:start="337:58" pos:end="337:72"><name pos:start="337:58" pos:end="337:58">s</name><operator pos:start="337:59" pos:end="337:60">-&gt;</operator><name pos:start="337:61" pos:end="337:72">density_mask</name></name></expr> </then><else pos:start="337:74" pos:end="337:76">: <expr pos:start="337:76" pos:end="337:76"><literal type="number" pos:start="337:76" pos:end="337:76">0</literal></expr></else></ternary><operator pos:start="337:77" pos:end="337:77">)</operator><operator pos:start="337:78" pos:end="337:78">)</operator>

                <operator pos:start="339:17" pos:end="339:18">&lt;&lt;</operator> <operator pos:start="339:20" pos:end="339:20">(</operator><name pos:start="339:21" pos:end="339:31">BLOCK_SHIFT</name> <operator pos:start="339:33" pos:end="339:33">-</operator> <literal type="number" pos:start="339:35" pos:end="339:35">9</literal><operator pos:start="339:36" pos:end="339:36">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="341:9" pos:end="343:55"><if pos:start="341:9" pos:end="343:55">if <condition pos:start="341:12" pos:end="341:58">(<expr pos:start="341:13" pos:end="341:57"><call pos:start="341:13" pos:end="341:57"><name pos:start="341:13" pos:end="341:25">onenand_erase</name><argument_list pos:start="341:26" pos:end="341:57">(<argument pos:start="341:27" pos:end="341:27"><expr pos:start="341:27" pos:end="341:27"><name pos:start="341:27" pos:end="341:27">s</name></expr></argument>, <argument pos:start="341:30" pos:end="341:32"><expr pos:start="341:30" pos:end="341:32"><name pos:start="341:30" pos:end="341:32">sec</name></expr></argument>, <argument pos:start="341:35" pos:end="341:56"><expr pos:start="341:35" pos:end="341:56"><literal type="number" pos:start="341:35" pos:end="341:35">1</literal> <operator pos:start="341:37" pos:end="341:38">&lt;&lt;</operator> <operator pos:start="341:40" pos:end="341:40">(</operator><name pos:start="341:41" pos:end="341:51">BLOCK_SHIFT</name> <operator pos:start="341:53" pos:end="341:53">-</operator> <literal type="number" pos:start="341:55" pos:end="341:55">9</literal><operator pos:start="341:56" pos:end="341:56">)</operator></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="343:13" pos:end="343:55"><block_content pos:start="343:13" pos:end="343:55">

            <expr_stmt pos:start="343:13" pos:end="343:55"><expr pos:start="343:13" pos:end="343:54"><name pos:start="343:13" pos:end="343:21"><name pos:start="343:13" pos:end="343:13">s</name><operator pos:start="343:14" pos:end="343:15">-&gt;</operator><name pos:start="343:16" pos:end="343:21">status</name></name> <operator pos:start="343:23" pos:end="343:24">|=</operator> <name pos:start="343:26" pos:end="343:37">ONEN_ERR_CMD</name> <operator pos:start="343:39" pos:end="343:39">|</operator> <name pos:start="343:41" pos:end="343:54">ONEN_ERR_ERASE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="347:9" pos:end="347:50"><expr pos:start="347:9" pos:end="347:49"><name pos:start="347:9" pos:end="347:20"><name pos:start="347:9" pos:end="347:9">s</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:20">intstatus</name></name> <operator pos:start="347:22" pos:end="347:23">|=</operator> <name pos:start="347:25" pos:end="347:32">ONEN_INT</name> <operator pos:start="347:34" pos:end="347:34">|</operator> <name pos:start="347:36" pos:end="347:49">ONEN_INT_ERASE</name></expr>;</expr_stmt>

        <break pos:start="349:9" pos:end="349:14">break;</break>

    <case pos:start="351:5" pos:end="351:14">case <expr pos:start="351:10" pos:end="351:13"><literal type="number" pos:start="351:10" pos:end="351:13">0xb0</literal></expr>:</case>	<comment type="block" pos:start="351:17" pos:end="351:35">/* Erase suspend */</comment>

        <break pos:start="353:9" pos:end="353:14">break;</break>

    <case pos:start="355:5" pos:end="355:14">case <expr pos:start="355:10" pos:end="355:13"><literal type="number" pos:start="355:10" pos:end="355:13">0x30</literal></expr>:</case>	<comment type="block" pos:start="355:17" pos:end="355:34">/* Erase resume */</comment>

        <expr_stmt pos:start="357:9" pos:end="357:50"><expr pos:start="357:9" pos:end="357:49"><name pos:start="357:9" pos:end="357:20"><name pos:start="357:9" pos:end="357:9">s</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:20">intstatus</name></name> <operator pos:start="357:22" pos:end="357:23">|=</operator> <name pos:start="357:25" pos:end="357:32">ONEN_INT</name> <operator pos:start="357:34" pos:end="357:34">|</operator> <name pos:start="357:36" pos:end="357:49">ONEN_INT_ERASE</name></expr>;</expr_stmt>

        <break pos:start="359:9" pos:end="359:14">break;</break>



    <case pos:start="363:5" pos:end="363:14">case <expr pos:start="363:10" pos:end="363:13"><literal type="number" pos:start="363:10" pos:end="363:13">0xf0</literal></expr>:</case>	<comment type="block" pos:start="363:17" pos:end="363:43">/* Reset NAND Flash core */</comment>

        <expr_stmt pos:start="365:9" pos:end="365:28"><expr pos:start="365:9" pos:end="365:27"><call pos:start="365:9" pos:end="365:27"><name pos:start="365:9" pos:end="365:21">onenand_reset</name><argument_list pos:start="365:22" pos:end="365:27">(<argument pos:start="365:23" pos:end="365:23"><expr pos:start="365:23" pos:end="365:23"><name pos:start="365:23" pos:end="365:23">s</name></expr></argument>, <argument pos:start="365:26" pos:end="365:26"><expr pos:start="365:26" pos:end="365:26"><literal type="number" pos:start="365:26" pos:end="365:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="367:9" pos:end="367:14">break;</break>

    <case pos:start="369:5" pos:end="369:14">case <expr pos:start="369:10" pos:end="369:13"><literal type="number" pos:start="369:10" pos:end="369:13">0xf3</literal></expr>:</case>	<comment type="block" pos:start="369:17" pos:end="369:35">/* Reset OneNAND */</comment>

        <expr_stmt pos:start="371:9" pos:end="371:28"><expr pos:start="371:9" pos:end="371:27"><call pos:start="371:9" pos:end="371:27"><name pos:start="371:9" pos:end="371:21">onenand_reset</name><argument_list pos:start="371:22" pos:end="371:27">(<argument pos:start="371:23" pos:end="371:23"><expr pos:start="371:23" pos:end="371:23"><name pos:start="371:23" pos:end="371:23">s</name></expr></argument>, <argument pos:start="371:26" pos:end="371:26"><expr pos:start="371:26" pos:end="371:26"><literal type="number" pos:start="371:26" pos:end="371:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="373:9" pos:end="373:14">break;</break>



    <case pos:start="377:5" pos:end="377:14">case <expr pos:start="377:10" pos:end="377:13"><literal type="number" pos:start="377:10" pos:end="377:13">0x65</literal></expr>:</case>	<comment type="block" pos:start="377:17" pos:end="377:32">/* OTP Access */</comment>

        <expr_stmt pos:start="379:9" pos:end="379:33"><expr pos:start="379:9" pos:end="379:32"><name pos:start="379:9" pos:end="379:20"><name pos:start="379:9" pos:end="379:9">s</name><operator pos:start="379:10" pos:end="379:11">-&gt;</operator><name pos:start="379:12" pos:end="379:20">intstatus</name></name> <operator pos:start="379:22" pos:end="379:23">|=</operator> <name pos:start="379:25" pos:end="379:32">ONEN_INT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:27"><expr pos:start="381:9" pos:end="381:26"><name pos:start="381:9" pos:end="381:19"><name pos:start="381:9" pos:end="381:9">s</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:19">bdrv_cur</name></name> <operator pos:start="381:21" pos:end="381:21">=</operator> <name pos:start="381:23" pos:end="381:26">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:28"><expr pos:start="383:9" pos:end="383:27"><name pos:start="383:9" pos:end="383:18"><name pos:start="383:9" pos:end="383:9">s</name><operator pos:start="383:10" pos:end="383:11">-&gt;</operator><name pos:start="383:12" pos:end="383:18">current</name></name> <operator pos:start="383:20" pos:end="383:20">=</operator> <name pos:start="383:22" pos:end="383:27"><name pos:start="383:22" pos:end="383:22">s</name><operator pos:start="383:23" pos:end="383:24">-&gt;</operator><name pos:start="383:25" pos:end="383:27">otp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:45"><expr pos:start="385:9" pos:end="385:44"><name pos:start="385:9" pos:end="385:19"><name pos:start="385:9" pos:end="385:9">s</name><operator pos:start="385:10" pos:end="385:11">-&gt;</operator><name pos:start="385:12" pos:end="385:19">secs_cur</name></name> <operator pos:start="385:21" pos:end="385:21">=</operator> <literal type="number" pos:start="385:23" pos:end="385:23">1</literal> <operator pos:start="385:25" pos:end="385:26">&lt;&lt;</operator> <operator pos:start="385:28" pos:end="385:28">(</operator><name pos:start="385:29" pos:end="385:39">BLOCK_SHIFT</name> <operator pos:start="385:41" pos:end="385:41">-</operator> <literal type="number" pos:start="385:43" pos:end="385:43">9</literal><operator pos:start="385:44" pos:end="385:44">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="387:9" pos:end="387:36"><expr pos:start="387:9" pos:end="387:35"><name pos:start="387:9" pos:end="387:31"><name pos:start="387:9" pos:end="387:9">s</name><operator pos:start="387:10" pos:end="387:11">-&gt;</operator><name pos:start="387:12" pos:end="387:15">addr</name><index pos:start="387:16" pos:end="387:31">[<expr pos:start="387:17" pos:end="387:30"><name pos:start="387:17" pos:end="387:30">ONEN_BUF_BLOCK</name></expr>]</index></name> <operator pos:start="387:33" pos:end="387:33">=</operator> <literal type="number" pos:start="387:35" pos:end="387:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="389:9" pos:end="389:23"><expr pos:start="389:9" pos:end="389:22"><name pos:start="389:9" pos:end="389:18"><name pos:start="389:9" pos:end="389:9">s</name><operator pos:start="389:10" pos:end="389:11">-&gt;</operator><name pos:start="389:12" pos:end="389:18">otpmode</name></name> <operator pos:start="389:20" pos:end="389:20">=</operator> <literal type="number" pos:start="389:22" pos:end="389:22">1</literal></expr>;</expr_stmt>

        <break pos:start="391:9" pos:end="391:14">break;</break>



    <default pos:start="395:5" pos:end="395:12">default:</default>

        <expr_stmt pos:start="397:9" pos:end="397:34"><expr pos:start="397:9" pos:end="397:33"><name pos:start="397:9" pos:end="397:17"><name pos:start="397:9" pos:end="397:9">s</name><operator pos:start="397:10" pos:end="397:11">-&gt;</operator><name pos:start="397:12" pos:end="397:17">status</name></name> <operator pos:start="397:19" pos:end="397:20">|=</operator> <name pos:start="397:22" pos:end="397:33">ONEN_ERR_CMD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:33"><expr pos:start="399:9" pos:end="399:32"><name pos:start="399:9" pos:end="399:20"><name pos:start="399:9" pos:end="399:9">s</name><operator pos:start="399:10" pos:end="399:11">-&gt;</operator><name pos:start="399:12" pos:end="399:20">intstatus</name></name> <operator pos:start="399:22" pos:end="399:23">|=</operator> <name pos:start="399:25" pos:end="399:32">ONEN_INT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="401:9" pos:end="403:46"><expr pos:start="401:9" pos:end="403:45"><call pos:start="401:9" pos:end="403:45"><name pos:start="401:9" pos:end="401:15">fprintf</name><argument_list pos:start="401:16" pos:end="403:45">(<argument pos:start="401:17" pos:end="401:22"><expr pos:start="401:17" pos:end="401:22"><name pos:start="401:17" pos:end="401:22">stderr</name></expr></argument>, <argument pos:start="401:25" pos:end="401:58"><expr pos:start="401:25" pos:end="401:58"><literal type="string" pos:start="401:25" pos:end="401:58">"%s: unknown OneNAND command %x\n"</literal></expr></argument>,

                        <argument pos:start="403:25" pos:end="403:32"><expr pos:start="403:25" pos:end="403:32"><name pos:start="403:25" pos:end="403:32">__func__</name></expr></argument>, <argument pos:start="403:35" pos:end="403:44"><expr pos:start="403:35" pos:end="403:44"><name pos:start="403:35" pos:end="403:44"><name pos:start="403:35" pos:end="403:35">s</name><operator pos:start="403:36" pos:end="403:37">-&gt;</operator><name pos:start="403:38" pos:end="403:44">command</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="409:5" pos:end="409:27"><expr pos:start="409:5" pos:end="409:26"><call pos:start="409:5" pos:end="409:26"><name pos:start="409:5" pos:end="409:23">onenand_intr_update</name><argument_list pos:start="409:24" pos:end="409:26">(<argument pos:start="409:25" pos:end="409:25"><expr pos:start="409:25" pos:end="409:25"><name pos:start="409:25" pos:end="409:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
