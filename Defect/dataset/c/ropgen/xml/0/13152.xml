<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13152.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:35">ffm_read_write_index</name><parameter_list pos:start="1:36" pos:end="1:43">(<parameter pos:start="1:37" pos:end="1:42"><decl pos:start="1:37" pos:end="1:42"><type pos:start="1:37" pos:end="1:39"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:42">fd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:24">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:18"><name pos:start="5:13" pos:end="5:15">buf</name><index pos:start="5:16" pos:end="5:18">[<expr pos:start="5:17" pos:end="5:17"><literal type="number" pos:start="5:17" pos:end="5:17">8</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:27"><expr pos:start="9:5" pos:end="9:26"><call pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:9">lseek</name><argument_list pos:start="9:10" pos:end="9:26">(<argument pos:start="9:11" pos:end="9:12"><expr pos:start="9:11" pos:end="9:12"><name pos:start="9:11" pos:end="9:12">fd</name></expr></argument>, <argument pos:start="9:15" pos:end="9:15"><expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">8</literal></expr></argument>, <argument pos:start="9:18" pos:end="9:25"><expr pos:start="9:18" pos:end="9:25"><name pos:start="9:18" pos:end="9:25">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:28"><if pos:start="11:5" pos:end="13:28">if <condition pos:start="11:8" pos:end="11:30">(<expr pos:start="11:9" pos:end="11:29"><call pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:12">read</name><argument_list pos:start="11:13" pos:end="11:24">(<argument pos:start="11:14" pos:end="11:15"><expr pos:start="11:14" pos:end="11:15"><name pos:start="11:14" pos:end="11:15">fd</name></expr></argument>, <argument pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:20">buf</name></expr></argument>, <argument pos:start="11:23" pos:end="11:23"><expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">8</literal></expr></argument>)</argument_list></call> <operator pos:start="11:26" pos:end="11:27">!=</operator> <literal type="number" pos:start="11:29" pos:end="11:29">8</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:28"><block_content pos:start="13:9" pos:end="13:28">

        <return pos:start="13:9" pos:end="13:28">return <expr pos:start="13:16" pos:end="13:27"><call pos:start="13:16" pos:end="13:27"><name pos:start="13:16" pos:end="13:22">AVERROR</name><argument_list pos:start="13:23" pos:end="13:27">(<argument pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="15:5" pos:end="15:24">return <expr pos:start="15:12" pos:end="15:23"><call pos:start="15:12" pos:end="15:23"><name pos:start="15:12" pos:end="15:18">AV_RB64</name><argument_list pos:start="15:19" pos:end="15:23">(<argument pos:start="15:20" pos:end="15:22"><expr pos:start="15:20" pos:end="15:22"><name pos:start="15:20" pos:end="15:22">buf</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
