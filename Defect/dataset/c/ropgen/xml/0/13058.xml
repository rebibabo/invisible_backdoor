<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13058.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">abi_long</name></type> <name pos:start="1:17" pos:end="1:26">lock_iovec</name><parameter_list pos:start="1:27" pos:end="3:47">(<parameter pos:start="1:28" pos:end="1:35"><decl pos:start="1:28" pos:end="1:35"><type pos:start="1:28" pos:end="1:35"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:35">type</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:43">struct</name> <name pos:start="1:45" pos:end="1:49">iovec</name></name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">vec</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:77"><decl pos:start="1:57" pos:end="1:77"><type pos:start="1:57" pos:end="1:77"><name pos:start="1:57" pos:end="1:65">abi_ulong</name></type> <name pos:start="1:67" pos:end="1:77">target_addr</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:36">count</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:46"><decl pos:start="3:39" pos:end="3:46"><type pos:start="3:39" pos:end="3:46"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:46">copy</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:13">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">target_iovec</name></name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:35">target_vec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">abi_ulong</name></type> <name pos:start="9:15" pos:end="9:18">base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:93"><expr pos:start="15:5" pos:end="15:92"><name pos:start="15:5" pos:end="15:14">target_vec</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:92"><name pos:start="15:18" pos:end="15:26">lock_user</name><argument_list pos:start="15:27" pos:end="15:92">(<argument pos:start="15:28" pos:end="15:38"><expr pos:start="15:28" pos:end="15:38"><name pos:start="15:28" pos:end="15:38">VERIFY_READ</name></expr></argument>, <argument pos:start="15:41" pos:end="15:51"><expr pos:start="15:41" pos:end="15:51"><name pos:start="15:41" pos:end="15:51">target_addr</name></expr></argument>, <argument pos:start="15:54" pos:end="15:88"><expr pos:start="15:54" pos:end="15:88"><name pos:start="15:54" pos:end="15:58">count</name> <operator pos:start="15:60" pos:end="15:60">*</operator> <sizeof pos:start="15:62" pos:end="15:88">sizeof<argument_list pos:start="15:68" pos:end="15:88">(<argument pos:start="15:69" pos:end="15:87"><expr pos:start="15:69" pos:end="15:87">struct <name pos:start="15:76" pos:end="15:87">target_iovec</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="15:91" pos:end="15:91"><expr pos:start="15:91" pos:end="15:91"><literal type="number" pos:start="15:91" pos:end="15:91">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:30"><if pos:start="17:5" pos:end="19:30">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:19">target_vec</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:30"><block_content pos:start="19:9" pos:end="19:30">

        <return pos:start="19:9" pos:end="19:30">return <expr pos:start="19:16" pos:end="19:29"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:29">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="21:5" pos:end="43:5">for<control pos:start="21:8" pos:end="21:29">(<init pos:start="21:9" pos:end="21:14"><expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:9">i</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <literal type="number" pos:start="21:13" pos:end="21:13">0</literal></expr>;</init><condition pos:start="21:15" pos:end="21:24"><expr pos:start="21:15" pos:end="21:23"><name pos:start="21:15" pos:end="21:15">i</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <name pos:start="21:19" pos:end="21:23">count</name></expr>;</condition> <incr pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:26">i</name><operator pos:start="21:27" pos:end="21:28">++</operator></expr></incr>)</control> <block pos:start="21:31" pos:end="43:5">{<block_content pos:start="23:9" pos:end="41:9">

        <expr_stmt pos:start="23:9" pos:end="23:47"><expr pos:start="23:9" pos:end="23:46"><name pos:start="23:9" pos:end="23:12">base</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:46"><name pos:start="23:16" pos:end="23:22">tswapal</name><argument_list pos:start="23:23" pos:end="23:46">(<argument pos:start="23:24" pos:end="23:45"><expr pos:start="23:24" pos:end="23:45"><name pos:start="23:24" pos:end="23:36"><name pos:start="23:24" pos:end="23:33">target_vec</name><index pos:start="23:34" pos:end="23:36">[<expr pos:start="23:35" pos:end="23:35"><name pos:start="23:35" pos:end="23:35">i</name></expr>]</index></name><operator pos:start="23:37" pos:end="23:37">.</operator><name pos:start="23:38" pos:end="23:45">iov_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:56"><expr pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:11">vec</name><index pos:start="25:12" pos:end="25:14">[<expr pos:start="25:13" pos:end="25:13"><name pos:start="25:13" pos:end="25:13">i</name></expr>]</index></name><operator pos:start="25:15" pos:end="25:15">.</operator><name pos:start="25:16" pos:end="25:22">iov_len</name> <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:55"><name pos:start="25:26" pos:end="25:32">tswapal</name><argument_list pos:start="25:33" pos:end="25:55">(<argument pos:start="25:34" pos:end="25:54"><expr pos:start="25:34" pos:end="25:54"><name pos:start="25:34" pos:end="25:46"><name pos:start="25:34" pos:end="25:43">target_vec</name><index pos:start="25:44" pos:end="25:46">[<expr pos:start="25:45" pos:end="25:45"><name pos:start="25:45" pos:end="25:45">i</name></expr>]</index></name><operator pos:start="25:47" pos:end="25:47">.</operator><name pos:start="25:48" pos:end="25:54">iov_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="41:9"><if pos:start="27:9" pos:end="35:9">if <condition pos:start="27:12" pos:end="27:32">(<expr pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:15">vec</name><index pos:start="27:16" pos:end="27:18">[<expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">i</name></expr>]</index></name><operator pos:start="27:19" pos:end="27:19">.</operator><name pos:start="27:20" pos:end="27:26">iov_len</name> <operator pos:start="27:28" pos:end="27:29">!=</operator> <literal type="number" pos:start="27:31" pos:end="27:31">0</literal></expr>)</condition> <block pos:start="27:34" pos:end="35:9">{<block_content pos:start="29:13" pos:end="29:74">

            <expr_stmt pos:start="29:13" pos:end="29:74"><expr pos:start="29:13" pos:end="29:73"><name pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:15">vec</name><index pos:start="29:16" pos:end="29:18">[<expr pos:start="29:17" pos:end="29:17"><name pos:start="29:17" pos:end="29:17">i</name></expr>]</index></name><operator pos:start="29:19" pos:end="29:19">.</operator><name pos:start="29:20" pos:end="29:27">iov_base</name> <operator pos:start="29:29" pos:end="29:29">=</operator> <call pos:start="29:31" pos:end="29:73"><name pos:start="29:31" pos:end="29:39">lock_user</name><argument_list pos:start="29:40" pos:end="29:73">(<argument pos:start="29:41" pos:end="29:44"><expr pos:start="29:41" pos:end="29:44"><name pos:start="29:41" pos:end="29:44">type</name></expr></argument>, <argument pos:start="29:47" pos:end="29:50"><expr pos:start="29:47" pos:end="29:50"><name pos:start="29:47" pos:end="29:50">base</name></expr></argument>, <argument pos:start="29:53" pos:end="29:66"><expr pos:start="29:53" pos:end="29:66"><name pos:start="29:53" pos:end="29:58"><name pos:start="29:53" pos:end="29:55">vec</name><index pos:start="29:56" pos:end="29:58">[<expr pos:start="29:57" pos:end="29:57"><name pos:start="29:57" pos:end="29:57">i</name></expr>]</index></name><operator pos:start="29:59" pos:end="29:59">.</operator><name pos:start="29:60" pos:end="29:66">iov_len</name></expr></argument>, <argument pos:start="29:69" pos:end="29:72"><expr pos:start="29:69" pos:end="29:72"><name pos:start="29:69" pos:end="29:72">copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="31:13" pos:end="33:56">/* Don't check lock_user return value. We must call writev even

               if a element has invalid base address. */</comment>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="41:9">else <block pos:start="35:16" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:35">

            <comment type="block" pos:start="37:13" pos:end="37:48">/* zero length pointer is ignored */</comment>

            <expr_stmt pos:start="39:13" pos:end="39:35"><expr pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:15">vec</name><index pos:start="39:16" pos:end="39:18">[<expr pos:start="39:17" pos:end="39:17"><name pos:start="39:17" pos:end="39:17">i</name></expr>]</index></name><operator pos:start="39:19" pos:end="39:19">.</operator><name pos:start="39:20" pos:end="39:27">iov_base</name> <operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:34">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><call pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:15">unlock_user</name> <argument_list pos:start="45:17" pos:end="45:44">(<argument pos:start="45:18" pos:end="45:27"><expr pos:start="45:18" pos:end="45:27"><name pos:start="45:18" pos:end="45:27">target_vec</name></expr></argument>, <argument pos:start="45:30" pos:end="45:40"><expr pos:start="45:30" pos:end="45:40"><name pos:start="45:30" pos:end="45:40">target_addr</name></expr></argument>, <argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
