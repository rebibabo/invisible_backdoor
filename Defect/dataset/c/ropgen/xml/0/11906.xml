<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11906.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:46">virtio_blk_migration_state_changed</name><parameter_list pos:start="1:47" pos:end="1:78">(<parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:65"><name pos:start="1:48" pos:end="1:55">Notifier</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:65">notifier</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:77"><decl pos:start="1:68" pos:end="1:77"><type pos:start="1:68" pos:end="1:77"><name pos:start="1:68" pos:end="1:71">void</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:5">

    <decl_stmt pos:start="5:5" pos:end="7:60"><decl pos:start="5:5" pos:end="7:59"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">VirtIOBlock</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="7:59">= <expr pos:start="5:22" pos:end="7:59"><call pos:start="5:22" pos:end="7:59"><name pos:start="5:22" pos:end="5:33">container_of</name><argument_list pos:start="5:34" pos:end="7:59">(<argument pos:start="5:35" pos:end="5:42"><expr pos:start="5:35" pos:end="5:42"><name pos:start="5:35" pos:end="5:42">notifier</name></expr></argument>, <argument pos:start="5:45" pos:end="5:55"><expr pos:start="5:45" pos:end="5:55"><name pos:start="5:45" pos:end="5:55">VirtIOBlock</name></expr></argument>,

                                  <argument pos:start="7:35" pos:end="7:58"><expr pos:start="7:35" pos:end="7:58"><name pos:start="7:35" pos:end="7:58">migration_state_notifier</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">MigrationState</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">mig</name> <init pos:start="9:25" pos:end="9:30">= <expr pos:start="9:27" pos:end="9:30"><name pos:start="9:27" pos:end="9:30">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">err</name> <init pos:start="11:16" pos:end="11:21">= <expr pos:start="11:18" pos:end="11:21"><name pos:start="11:18" pos:end="11:21">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="51:5"><if pos:start="15:5" pos:end="27:5">if <condition pos:start="15:8" pos:end="15:32">(<expr pos:start="15:9" pos:end="15:31"><call pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:26">migration_in_setup</name><argument_list pos:start="15:27" pos:end="15:31">(<argument pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><name pos:start="15:28" pos:end="15:30">mig</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:34" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:28">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:26">(<expr pos:start="17:13" pos:end="17:25"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:25">dataplane</name></name></expr>)</condition> <block pos:start="17:28" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:19">

            <return pos:start="19:13" pos:end="19:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:52"><expr pos:start="23:9" pos:end="23:51"><call pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:37">virtio_blk_data_plane_destroy</name><argument_list pos:start="23:38" pos:end="23:51">(<argument pos:start="23:39" pos:end="23:50"><expr pos:start="23:39" pos:end="23:50"><name pos:start="23:39" pos:end="23:50"><name pos:start="23:39" pos:end="23:39">s</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:50">dataplane</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:20">dataplane</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:27">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="51:5">else if <condition pos:start="27:15" pos:end="29:41">(<expr pos:start="27:16" pos:end="29:40"><call pos:start="27:16" pos:end="27:42"><name pos:start="27:16" pos:end="27:37">migration_has_finished</name><argument_list pos:start="27:38" pos:end="27:42">(<argument pos:start="27:39" pos:end="27:41"><expr pos:start="27:39" pos:end="27:41"><name pos:start="27:39" pos:end="27:41">mig</name></expr></argument>)</argument_list></call> <operator pos:start="27:44" pos:end="27:45">||</operator>

               <call pos:start="29:16" pos:end="29:40"><name pos:start="29:16" pos:end="29:35">migration_has_failed</name><argument_list pos:start="29:36" pos:end="29:40">(<argument pos:start="29:37" pos:end="29:39"><expr pos:start="29:37" pos:end="29:39"><name pos:start="29:37" pos:end="29:39">mig</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:43" pos:end="51:5">{<block_content pos:start="31:9" pos:end="49:9">

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:25">(<expr pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:24">dataplane</name></name></expr>)</condition> <block pos:start="31:27" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:19">

            <return pos:start="33:13" pos:end="33:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><call pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:22">bdrv_drain_all</name><argument_list pos:start="37:23" pos:end="37:24">()</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="37:27" pos:end="37:73">/* complete in-flight non-dataplane requests */</comment>

        <expr_stmt pos:start="39:9" pos:end="41:58"><expr pos:start="39:9" pos:end="41:57"><call pos:start="39:9" pos:end="41:57"><name pos:start="39:9" pos:end="39:36">virtio_blk_data_plane_create</name><argument_list pos:start="39:37" pos:end="41:57">(<argument pos:start="39:38" pos:end="39:53"><expr pos:start="39:38" pos:end="39:53"><call pos:start="39:38" pos:end="39:53"><name pos:start="39:38" pos:end="39:50">VIRTIO_DEVICE</name><argument_list pos:start="39:51" pos:end="39:53">(<argument pos:start="39:52" pos:end="39:52"><expr pos:start="39:52" pos:end="39:52"><name pos:start="39:52" pos:end="39:52">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:56" pos:end="39:63"><expr pos:start="39:56" pos:end="39:63"><operator pos:start="39:56" pos:end="39:56">&amp;</operator><name pos:start="39:57" pos:end="39:63"><name pos:start="39:57" pos:end="39:57">s</name><operator pos:start="39:58" pos:end="39:59">-&gt;</operator><name pos:start="39:60" pos:end="39:63">conf</name></name></expr></argument>,

                                     <argument pos:start="41:38" pos:end="41:50"><expr pos:start="41:38" pos:end="41:50"><operator pos:start="41:38" pos:end="41:38">&amp;</operator><name pos:start="41:39" pos:end="41:50"><name pos:start="41:39" pos:end="41:39">s</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:50">dataplane</name></name></expr></argument>, <argument pos:start="41:53" pos:end="41:56"><expr pos:start="41:53" pos:end="41:56"><operator pos:start="41:53" pos:end="41:53">&amp;</operator><name pos:start="41:54" pos:end="41:56">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:24">(<expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:15">err</name> <operator pos:start="43:17" pos:end="43:18">!=</operator> <name pos:start="43:20" pos:end="43:23">NULL</name></expr>)</condition> <block pos:start="43:26" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:28">

            <expr_stmt pos:start="45:13" pos:end="45:54"><expr pos:start="45:13" pos:end="45:53"><call pos:start="45:13" pos:end="45:53"><name pos:start="45:13" pos:end="45:24">error_report</name><argument_list pos:start="45:25" pos:end="45:53">(<argument pos:start="45:26" pos:end="45:29"><expr pos:start="45:26" pos:end="45:29"><literal type="string" pos:start="45:26" pos:end="45:29">"%s"</literal></expr></argument>, <argument pos:start="45:32" pos:end="45:52"><expr pos:start="45:32" pos:end="45:52"><call pos:start="45:32" pos:end="45:52"><name pos:start="45:32" pos:end="45:47">error_get_pretty</name><argument_list pos:start="45:48" pos:end="45:52">(<argument pos:start="45:49" pos:end="45:51"><expr pos:start="45:49" pos:end="45:51"><name pos:start="45:49" pos:end="45:51">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:28"><expr pos:start="47:13" pos:end="47:27"><call pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:22">error_free</name><argument_list pos:start="47:23" pos:end="47:27">(<argument pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:26">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
