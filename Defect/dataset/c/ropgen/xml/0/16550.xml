<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16550.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">nvdec_mpeg12_decode_slice</name><parameter_list pos:start="1:37" pos:end="1:97">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:58"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:81"><decl pos:start="1:61" pos:end="1:81"><type pos:start="1:61" pos:end="1:81"><specifier pos:start="1:61" pos:end="1:65">const</specifier> <name pos:start="1:67" pos:end="1:73">uint8_t</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:81">buffer</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:96"><decl pos:start="1:84" pos:end="1:96"><type pos:start="1:84" pos:end="1:96"><name pos:start="1:84" pos:end="1:91">uint32_t</name></type> <name pos:start="1:93" pos:end="1:96">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">NVDECContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ctx</name> <init pos:start="5:23" pos:end="5:58">= <expr pos:start="5:25" pos:end="5:58"><name pos:start="5:25" pos:end="5:58"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:39">internal</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:58">hwaccel_priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:78"><expr pos:start="11:5" pos:end="13:77"><name pos:start="11:5" pos:end="11:7">tmp</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="13:77"><name pos:start="11:11" pos:end="11:25">av_fast_realloc</name><argument_list pos:start="11:26" pos:end="13:77">(<argument pos:start="11:27" pos:end="11:44"><expr pos:start="11:27" pos:end="11:44"><name pos:start="11:27" pos:end="11:44"><name pos:start="11:27" pos:end="11:29">ctx</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:44">slice_offsets</name></name></expr></argument>, <argument pos:start="11:47" pos:end="11:75"><expr pos:start="11:47" pos:end="11:75"><operator pos:start="11:47" pos:end="11:47">&amp;</operator><name pos:start="11:48" pos:end="11:75"><name pos:start="11:48" pos:end="11:50">ctx</name><operator pos:start="11:51" pos:end="11:52">-&gt;</operator><name pos:start="11:53" pos:end="11:75">slice_offsets_allocated</name></name></expr></argument>,

                          <argument pos:start="13:27" pos:end="13:76"><expr pos:start="13:27" pos:end="13:76"><operator pos:start="13:27" pos:end="13:27">(</operator><name pos:start="13:28" pos:end="13:41"><name pos:start="13:28" pos:end="13:30">ctx</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:41">nb_slices</name></name> <operator pos:start="13:43" pos:end="13:43">+</operator> <literal type="number" pos:start="13:45" pos:end="13:45">1</literal><operator pos:start="13:46" pos:end="13:46">)</operator> <operator pos:start="13:48" pos:end="13:48">*</operator> <sizeof pos:start="13:50" pos:end="13:76">sizeof<argument_list pos:start="13:56" pos:end="13:76">(<argument pos:start="13:57" pos:end="13:75"><expr pos:start="13:57" pos:end="13:75"><operator pos:start="13:57" pos:end="13:57">*</operator><name pos:start="13:58" pos:end="13:75"><name pos:start="13:58" pos:end="13:60">ctx</name><operator pos:start="13:61" pos:end="13:62">-&gt;</operator><name pos:start="13:63" pos:end="13:75">slice_offsets</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">tmp</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:7">ctx</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:22">slice_offsets</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <name pos:start="19:26" pos:end="19:28">tmp</name></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:42"><if pos:start="23:5" pos:end="25:42">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:23"><name pos:start="23:10" pos:end="23:12">ctx</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:23">bitstream</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:42"><block_content pos:start="25:9" pos:end="25:42">

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:11">ctx</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:22">bitstream</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <operator pos:start="25:26" pos:end="25:26">(</operator><name pos:start="25:27" pos:end="25:33">uint8_t</name><operator pos:start="25:34" pos:end="25:34">*</operator><operator pos:start="25:35" pos:end="25:35">)</operator><name pos:start="25:36" pos:end="25:41">buffer</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:65"><expr pos:start="29:5" pos:end="29:64"><name pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:7">ctx</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:22">slice_offsets</name><index pos:start="29:23" pos:end="29:38">[<expr pos:start="29:24" pos:end="29:37"><name pos:start="29:24" pos:end="29:37"><name pos:start="29:24" pos:end="29:26">ctx</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:37">nb_slices</name></name></expr>]</index></name> <operator pos:start="29:40" pos:end="29:40">=</operator> <name pos:start="29:42" pos:end="29:47">buffer</name> <operator pos:start="29:49" pos:end="29:49">-</operator> <name pos:start="29:51" pos:end="29:64"><name pos:start="29:51" pos:end="29:53">ctx</name><operator pos:start="29:54" pos:end="29:55">-&gt;</operator><name pos:start="29:56" pos:end="29:64">bitstream</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:31"><expr pos:start="31:5" pos:end="31:30"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:7">ctx</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:22">bitstream_len</name></name> <operator pos:start="31:24" pos:end="31:25">+=</operator> <name pos:start="31:27" pos:end="31:30">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:7">ctx</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:18">nb_slices</name></name><operator pos:start="33:19" pos:end="33:20">++</operator></expr>;</expr_stmt>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
