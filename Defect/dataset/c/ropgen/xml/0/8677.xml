<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8677.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">curl_open</name><parameter_list pos:start="1:21" pos:end="3:34">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:57">options</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">flags</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:33"><decl pos:start="3:22" pos:end="3:33"><type pos:start="3:22" pos:end="3:33"><name pos:start="3:22" pos:end="3:26">Error</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier><modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:33">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="203:1">{<block_content pos:start="7:5" pos:end="201:19">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVCURLState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">CURLState</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">state</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">QemuOpts</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:20">local_err</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:20">file</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">double</name></type> <name pos:start="17:12" pos:end="17:12">d</name></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:14"><specifier pos:start="21:5" pos:end="21:10">static</specifier> <name pos:start="21:12" pos:end="21:14">int</name></type> <name pos:start="21:16" pos:end="21:21">inited</name> <init pos:start="21:23" pos:end="21:25">= <expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:28">(<expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:13">flags</name> <operator pos:start="25:15" pos:end="25:15">&amp;</operator> <name pos:start="25:17" pos:end="25:27">BDRV_O_RDWR</name></expr>)</condition> <block pos:start="25:30" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:22">

        <expr_stmt pos:start="27:9" pos:end="27:70"><expr pos:start="27:9" pos:end="27:69"><call pos:start="27:9" pos:end="27:69"><name pos:start="27:9" pos:end="27:18">error_setg</name><argument_list pos:start="27:19" pos:end="27:69">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">errp</name></expr></argument>, <argument pos:start="27:26" pos:end="27:68"><expr pos:start="27:26" pos:end="27:68"><literal type="string" pos:start="27:26" pos:end="27:68">"curl block device does not support writes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:22">return <expr pos:start="29:16" pos:end="29:21"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:21">EROFS</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:66"><expr pos:start="35:5" pos:end="35:65"><name pos:start="35:5" pos:end="35:8">opts</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:65"><name pos:start="35:12" pos:end="35:27">qemu_opts_create</name><argument_list pos:start="35:28" pos:end="35:65">(<argument pos:start="35:29" pos:end="35:41"><expr pos:start="35:29" pos:end="35:41"><operator pos:start="35:29" pos:end="35:29">&amp;</operator><name pos:start="35:30" pos:end="35:41">runtime_opts</name></expr></argument>, <argument pos:start="35:44" pos:end="35:47"><expr pos:start="35:44" pos:end="35:47"><name pos:start="35:44" pos:end="35:47">NULL</name></expr></argument>, <argument pos:start="35:50" pos:end="35:50"><expr pos:start="35:50" pos:end="35:50"><literal type="number" pos:start="35:50" pos:end="35:50">0</literal></expr></argument>, <argument pos:start="35:53" pos:end="35:64"><expr pos:start="35:53" pos:end="35:64"><operator pos:start="35:53" pos:end="35:53">&amp;</operator><name pos:start="35:54" pos:end="35:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:54"><expr pos:start="37:5" pos:end="37:53"><call pos:start="37:5" pos:end="37:53"><name pos:start="37:5" pos:end="37:26">qemu_opts_absorb_qdict</name><argument_list pos:start="37:27" pos:end="37:53">(<argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><name pos:start="37:28" pos:end="37:31">opts</name></expr></argument>, <argument pos:start="37:34" pos:end="37:40"><expr pos:start="37:34" pos:end="37:40"><name pos:start="37:34" pos:end="37:40">options</name></expr></argument>, <argument pos:start="37:43" pos:end="37:52"><expr pos:start="37:43" pos:end="37:52"><operator pos:start="37:43" pos:end="37:43">&amp;</operator><name pos:start="37:44" pos:end="37:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:18">(<expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:17">local_err</name></expr>)</condition> <block pos:start="39:20" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:25">

        <expr_stmt pos:start="41:9" pos:end="41:41"><expr pos:start="41:9" pos:end="41:40"><call pos:start="41:9" pos:end="41:40"><name pos:start="41:9" pos:end="41:23">error_propagate</name><argument_list pos:start="41:24" pos:end="41:40">(<argument pos:start="41:25" pos:end="41:28"><expr pos:start="41:25" pos:end="41:28"><name pos:start="41:25" pos:end="41:28">errp</name></expr></argument>, <argument pos:start="41:31" pos:end="41:39"><expr pos:start="41:31" pos:end="41:39"><name pos:start="41:31" pos:end="41:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:25">goto <name pos:start="43:14" pos:end="43:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:78"><expr pos:start="49:5" pos:end="49:77"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:21">readahead_size</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <call pos:start="49:25" pos:end="49:77"><name pos:start="49:25" pos:end="49:41">qemu_opt_get_size</name><argument_list pos:start="49:42" pos:end="49:77">(<argument pos:start="49:43" pos:end="49:46"><expr pos:start="49:43" pos:end="49:46"><name pos:start="49:43" pos:end="49:46">opts</name></expr></argument>, <argument pos:start="49:49" pos:end="49:59"><expr pos:start="49:49" pos:end="49:59"><literal type="string" pos:start="49:49" pos:end="49:59">"readahead"</literal></expr></argument>, <argument pos:start="49:62" pos:end="49:76"><expr pos:start="49:62" pos:end="49:76"><name pos:start="49:62" pos:end="49:76">READ_AHEAD_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:41">(<expr pos:start="51:9" pos:end="51:40"><operator pos:start="51:9" pos:end="51:9">(</operator><name pos:start="51:10" pos:end="51:26"><name pos:start="51:10" pos:end="51:10">s</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:26">readahead_size</name></name> <operator pos:start="51:28" pos:end="51:28">&amp;</operator> <literal type="number" pos:start="51:30" pos:end="51:34">0x1ff</literal><operator pos:start="51:35" pos:end="51:35">)</operator> <operator pos:start="51:37" pos:end="51:38">!=</operator> <literal type="number" pos:start="51:40" pos:end="51:40">0</literal></expr>)</condition> <block pos:start="51:43" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:25">

        <expr_stmt pos:start="53:9" pos:end="55:38"><expr pos:start="53:9" pos:end="55:37"><call pos:start="53:9" pos:end="55:37"><name pos:start="53:9" pos:end="53:18">error_setg</name><argument_list pos:start="53:19" pos:end="55:37">(<argument pos:start="53:20" pos:end="53:23"><expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">errp</name></expr></argument>, <argument pos:start="53:26" pos:end="53:75"><expr pos:start="53:26" pos:end="53:75"><literal type="string" pos:start="53:26" pos:end="53:75">"HTTP_READAHEAD_SIZE %zd is not a multiple of 512"</literal></expr></argument>,

                   <argument pos:start="55:20" pos:end="55:36"><expr pos:start="55:20" pos:end="55:36"><name pos:start="55:20" pos:end="55:36"><name pos:start="55:20" pos:end="55:20">s</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:36">readahead_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:25">goto <name pos:start="57:14" pos:end="57:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:8">file</name> <operator pos:start="63:10" pos:end="63:10">=</operator> <call pos:start="63:12" pos:end="63:36"><name pos:start="63:12" pos:end="63:23">qemu_opt_get</name><argument_list pos:start="63:24" pos:end="63:36">(<argument pos:start="63:25" pos:end="63:28"><expr pos:start="63:25" pos:end="63:28"><name pos:start="63:25" pos:end="63:28">opts</name></expr></argument>, <argument pos:start="63:31" pos:end="63:35"><expr pos:start="63:31" pos:end="63:35"><literal type="string" pos:start="63:31" pos:end="63:35">"url"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:21">(<expr pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:12">file</name> <operator pos:start="65:14" pos:end="65:15">==</operator> <name pos:start="65:17" pos:end="65:20">NULL</name></expr>)</condition> <block pos:start="65:23" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:25">

        <expr_stmt pos:start="67:9" pos:end="67:71"><expr pos:start="67:9" pos:end="67:70"><call pos:start="67:9" pos:end="67:70"><name pos:start="67:9" pos:end="67:18">error_setg</name><argument_list pos:start="67:19" pos:end="67:70">(<argument pos:start="67:20" pos:end="67:23"><expr pos:start="67:20" pos:end="67:23"><name pos:start="67:20" pos:end="67:23">errp</name></expr></argument>, <argument pos:start="67:26" pos:end="67:69"><expr pos:start="67:26" pos:end="67:69"><literal type="string" pos:start="67:26" pos:end="67:69">"curl block driver requires an 'url' option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:25">goto <name pos:start="69:14" pos:end="69:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:16">(<expr pos:start="75:9" pos:end="75:15"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:15">inited</name></expr>)</condition> <block pos:start="75:18" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:19">

        <expr_stmt pos:start="77:9" pos:end="77:42"><expr pos:start="77:9" pos:end="77:41"><call pos:start="77:9" pos:end="77:41"><name pos:start="77:9" pos:end="77:24">curl_global_init</name><argument_list pos:start="77:25" pos:end="77:41">(<argument pos:start="77:26" pos:end="77:40"><expr pos:start="77:26" pos:end="77:40"><name pos:start="77:26" pos:end="77:40">CURL_GLOBAL_ALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:19"><expr pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:14">inited</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:40"><expr pos:start="85:5" pos:end="85:39"><call pos:start="85:5" pos:end="85:39"><name pos:start="85:5" pos:end="85:11">DPRINTF</name><argument_list pos:start="85:12" pos:end="85:39">(<argument pos:start="85:13" pos:end="85:32"><expr pos:start="85:13" pos:end="85:32"><literal type="string" pos:start="85:13" pos:end="85:32">"CURL: Opening %s\n"</literal></expr></argument>, <argument pos:start="85:35" pos:end="85:38"><expr pos:start="85:35" pos:end="85:38"><name pos:start="85:35" pos:end="85:38">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:28"><expr pos:start="87:5" pos:end="87:27"><name pos:start="87:5" pos:end="87:10"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:10">url</name></name> <operator pos:start="87:12" pos:end="87:12">=</operator> <call pos:start="87:14" pos:end="87:27"><name pos:start="87:14" pos:end="87:21">g_strdup</name><argument_list pos:start="87:22" pos:end="87:27">(<argument pos:start="87:23" pos:end="87:26"><expr pos:start="87:23" pos:end="87:26"><name pos:start="87:23" pos:end="87:26">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:31"><expr pos:start="89:5" pos:end="89:30"><name pos:start="89:5" pos:end="89:9">state</name> <operator pos:start="89:11" pos:end="89:11">=</operator> <call pos:start="89:13" pos:end="89:30"><name pos:start="89:13" pos:end="89:27">curl_init_state</name><argument_list pos:start="89:28" pos:end="89:30">(<argument pos:start="89:29" pos:end="89:29"><expr pos:start="89:29" pos:end="89:29"><name pos:start="89:29" pos:end="89:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="93:25"><if pos:start="91:5" pos:end="93:25">if <condition pos:start="91:8" pos:end="91:15">(<expr pos:start="91:9" pos:end="91:14"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:14">state</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:25"><block_content pos:start="93:9" pos:end="93:25">

        <goto pos:start="93:9" pos:end="93:25">goto <name pos:start="93:14" pos:end="93:24">out_noclean</name>;</goto></block_content></block></if></if_stmt>



    <comment type="line" pos:start="97:5" pos:end="97:20">// Get file size</comment>



    <expr_stmt pos:start="101:5" pos:end="101:28"><expr pos:start="101:5" pos:end="101:27"><name pos:start="101:5" pos:end="101:19"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:19">accept_range</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:27">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:53"><expr pos:start="103:5" pos:end="103:52"><call pos:start="103:5" pos:end="103:52"><name pos:start="103:5" pos:end="103:20">curl_easy_setopt</name><argument_list pos:start="103:21" pos:end="103:52">(<argument pos:start="103:22" pos:end="103:32"><expr pos:start="103:22" pos:end="103:32"><name pos:start="103:22" pos:end="103:32"><name pos:start="103:22" pos:end="103:26">state</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:32">curl</name></name></expr></argument>, <argument pos:start="103:35" pos:end="103:48"><expr pos:start="103:35" pos:end="103:48"><name pos:start="103:35" pos:end="103:48">CURLOPT_NOBODY</name></expr></argument>, <argument pos:start="103:51" pos:end="103:51"><expr pos:start="103:51" pos:end="103:51"><literal type="number" pos:start="103:51" pos:end="103:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="107:37"><expr pos:start="105:5" pos:end="107:36"><call pos:start="105:5" pos:end="107:36"><name pos:start="105:5" pos:end="105:20">curl_easy_setopt</name><argument_list pos:start="105:21" pos:end="107:36">(<argument pos:start="105:22" pos:end="105:32"><expr pos:start="105:22" pos:end="105:32"><name pos:start="105:22" pos:end="105:32"><name pos:start="105:22" pos:end="105:26">state</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:32">curl</name></name></expr></argument>, <argument pos:start="105:35" pos:end="105:56"><expr pos:start="105:35" pos:end="105:56"><name pos:start="105:35" pos:end="105:56">CURLOPT_HEADERFUNCTION</name></expr></argument>,

                     <argument pos:start="107:22" pos:end="107:35"><expr pos:start="107:22" pos:end="107:35"><name pos:start="107:22" pos:end="107:35">curl_header_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:57"><expr pos:start="109:5" pos:end="109:56"><call pos:start="109:5" pos:end="109:56"><name pos:start="109:5" pos:end="109:20">curl_easy_setopt</name><argument_list pos:start="109:21" pos:end="109:56">(<argument pos:start="109:22" pos:end="109:32"><expr pos:start="109:22" pos:end="109:32"><name pos:start="109:22" pos:end="109:32"><name pos:start="109:22" pos:end="109:26">state</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:32">curl</name></name></expr></argument>, <argument pos:start="109:35" pos:end="109:52"><expr pos:start="109:35" pos:end="109:52"><name pos:start="109:35" pos:end="109:52">CURLOPT_HEADERDATA</name></expr></argument>, <argument pos:start="109:55" pos:end="109:55"><expr pos:start="109:55" pos:end="109:55"><name pos:start="109:55" pos:end="109:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="113:17"><if pos:start="111:5" pos:end="113:17">if <condition pos:start="111:8" pos:end="111:39">(<expr pos:start="111:9" pos:end="111:38"><call pos:start="111:9" pos:end="111:38"><name pos:start="111:9" pos:end="111:25">curl_easy_perform</name><argument_list pos:start="111:26" pos:end="111:38">(<argument pos:start="111:27" pos:end="111:37"><expr pos:start="111:27" pos:end="111:37"><name pos:start="111:27" pos:end="111:37"><name pos:start="111:27" pos:end="111:31">state</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:37">curl</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:17"><block_content pos:start="113:9" pos:end="113:17">

        <goto pos:start="113:9" pos:end="113:17">goto <name pos:start="113:14" pos:end="113:16">out</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:73"><expr pos:start="115:5" pos:end="115:72"><call pos:start="115:5" pos:end="115:72"><name pos:start="115:5" pos:end="115:21">curl_easy_getinfo</name><argument_list pos:start="115:22" pos:end="115:72">(<argument pos:start="115:23" pos:end="115:33"><expr pos:start="115:23" pos:end="115:33"><name pos:start="115:23" pos:end="115:33"><name pos:start="115:23" pos:end="115:27">state</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:33">curl</name></name></expr></argument>, <argument pos:start="115:36" pos:end="115:67"><expr pos:start="115:36" pos:end="115:67"><name pos:start="115:36" pos:end="115:67">CURLINFO_CONTENT_LENGTH_DOWNLOAD</name></expr></argument>, <argument pos:start="115:70" pos:end="115:71"><expr pos:start="115:70" pos:end="115:71"><operator pos:start="115:70" pos:end="115:70">&amp;</operator><name pos:start="115:71" pos:end="115:71">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="123:17"><if pos:start="117:5" pos:end="119:27">if <condition pos:start="117:8" pos:end="117:10">(<expr pos:start="117:9" pos:end="117:9"><name pos:start="117:9" pos:end="117:9">d</name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:27"><block_content pos:start="119:9" pos:end="119:27">

        <expr_stmt pos:start="119:9" pos:end="119:27"><expr pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:14"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:14">len</name></name> <operator pos:start="119:16" pos:end="119:16">=</operator> <operator pos:start="119:18" pos:end="119:18">(</operator><name pos:start="119:19" pos:end="119:24">size_t</name><operator pos:start="119:25" pos:end="119:25">)</operator><name pos:start="119:26" pos:end="119:26">d</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="121:5" pos:end="123:17">else if<condition pos:start="121:12" pos:end="121:20">(<expr pos:start="121:13" pos:end="121:19"><operator pos:start="121:13" pos:end="121:13">!</operator><name pos:start="121:14" pos:end="121:19"><name pos:start="121:14" pos:end="121:14">s</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:19">len</name></name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:17"><block_content pos:start="123:9" pos:end="123:17">

        <goto pos:start="123:9" pos:end="123:17">goto <name pos:start="123:14" pos:end="123:16">out</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="125:5" pos:end="137:5"><if pos:start="125:5" pos:end="137:5">if <condition pos:start="125:8" pos:end="129:28">(<expr pos:start="125:9" pos:end="129:27"><operator pos:start="125:9" pos:end="125:9">(</operator><operator pos:start="125:10" pos:end="125:10">!</operator><call pos:start="125:11" pos:end="125:59"><name pos:start="125:11" pos:end="125:21">strncasecmp</name><argument_list pos:start="125:22" pos:end="125:59">(<argument pos:start="125:23" pos:end="125:28"><expr pos:start="125:23" pos:end="125:28"><name pos:start="125:23" pos:end="125:28"><name pos:start="125:23" pos:end="125:23">s</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:28">url</name></name></expr></argument>, <argument pos:start="125:31" pos:end="125:39"><expr pos:start="125:31" pos:end="125:39"><literal type="string" pos:start="125:31" pos:end="125:39">"http://"</literal></expr></argument>, <argument pos:start="125:42" pos:end="125:58"><expr pos:start="125:42" pos:end="125:58"><call pos:start="125:42" pos:end="125:58"><name pos:start="125:42" pos:end="125:47">strlen</name><argument_list pos:start="125:48" pos:end="125:58">(<argument pos:start="125:49" pos:end="125:57"><expr pos:start="125:49" pos:end="125:57"><literal type="string" pos:start="125:49" pos:end="125:57">"http://"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>

        <operator pos:start="127:9" pos:end="127:10">||</operator> <operator pos:start="127:12" pos:end="127:12">!</operator><call pos:start="127:13" pos:end="127:63"><name pos:start="127:13" pos:end="127:23">strncasecmp</name><argument_list pos:start="127:24" pos:end="127:63">(<argument pos:start="127:25" pos:end="127:30"><expr pos:start="127:25" pos:end="127:30"><name pos:start="127:25" pos:end="127:30"><name pos:start="127:25" pos:end="127:25">s</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:30">url</name></name></expr></argument>, <argument pos:start="127:33" pos:end="127:42"><expr pos:start="127:33" pos:end="127:42"><literal type="string" pos:start="127:33" pos:end="127:42">"https://"</literal></expr></argument>, <argument pos:start="127:45" pos:end="127:62"><expr pos:start="127:45" pos:end="127:62"><call pos:start="127:45" pos:end="127:62"><name pos:start="127:45" pos:end="127:50">strlen</name><argument_list pos:start="127:51" pos:end="127:62">(<argument pos:start="127:52" pos:end="127:61"><expr pos:start="127:52" pos:end="127:61"><literal type="string" pos:start="127:52" pos:end="127:61">"https://"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="127:64" pos:end="127:64">)</operator>

        <operator pos:start="129:9" pos:end="129:10">&amp;&amp;</operator> <operator pos:start="129:12" pos:end="129:12">!</operator><name pos:start="129:13" pos:end="129:27"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:27">accept_range</name></name></expr>)</condition> <block pos:start="129:30" pos:end="137:5">{<block_content pos:start="131:9" pos:end="135:17">

        <expr_stmt pos:start="131:9" pos:end="133:66"><expr pos:start="131:9" pos:end="133:65"><call pos:start="131:9" pos:end="133:65"><name pos:start="131:9" pos:end="131:15">pstrcpy</name><argument_list pos:start="131:16" pos:end="133:65">(<argument pos:start="131:17" pos:end="131:29"><expr pos:start="131:17" pos:end="131:29"><name pos:start="131:17" pos:end="131:29"><name pos:start="131:17" pos:end="131:21">state</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:29">errmsg</name></name></expr></argument>, <argument pos:start="131:32" pos:end="131:46"><expr pos:start="131:32" pos:end="131:46"><name pos:start="131:32" pos:end="131:46">CURL_ERROR_SIZE</name></expr></argument>,

                <argument pos:start="133:17" pos:end="133:64"><expr pos:start="133:17" pos:end="133:64"><literal type="string" pos:start="133:17" pos:end="133:64">"Server does not support 'range' (byte ranges)."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="135:9" pos:end="135:17">goto <name pos:start="135:14" pos:end="135:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:42"><expr pos:start="139:5" pos:end="139:41"><call pos:start="139:5" pos:end="139:41"><name pos:start="139:5" pos:end="139:11">DPRINTF</name><argument_list pos:start="139:12" pos:end="139:41">(<argument pos:start="139:13" pos:end="139:32"><expr pos:start="139:13" pos:end="139:32"><literal type="string" pos:start="139:13" pos:end="139:32">"CURL: Size = %zd\n"</literal></expr></argument>, <argument pos:start="139:35" pos:end="139:40"><expr pos:start="139:35" pos:end="139:40"><name pos:start="139:35" pos:end="139:40"><name pos:start="139:35" pos:end="139:35">s</name><operator pos:start="139:36" pos:end="139:37">-&gt;</operator><name pos:start="139:38" pos:end="139:40">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:28"><expr pos:start="143:5" pos:end="143:27"><call pos:start="143:5" pos:end="143:27"><name pos:start="143:5" pos:end="143:20">curl_clean_state</name><argument_list pos:start="143:21" pos:end="143:27">(<argument pos:start="143:22" pos:end="143:26"><expr pos:start="143:22" pos:end="143:26"><name pos:start="143:22" pos:end="143:26">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:35"><expr pos:start="145:5" pos:end="145:34"><call pos:start="145:5" pos:end="145:34"><name pos:start="145:5" pos:end="145:21">curl_easy_cleanup</name><argument_list pos:start="145:22" pos:end="145:34">(<argument pos:start="145:23" pos:end="145:33"><expr pos:start="145:23" pos:end="145:33"><name pos:start="145:23" pos:end="145:33"><name pos:start="145:23" pos:end="145:27">state</name><operator pos:start="145:28" pos:end="145:29">-&gt;</operator><name pos:start="145:30" pos:end="145:33">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:23"><expr pos:start="147:5" pos:end="147:22"><name pos:start="147:5" pos:end="147:15"><name pos:start="147:5" pos:end="147:9">state</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:15">curl</name></name> <operator pos:start="147:17" pos:end="147:17">=</operator> <name pos:start="147:19" pos:end="147:22">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="155:45"><expr pos:start="151:5" pos:end="155:44"><call pos:start="151:5" pos:end="155:44"><name pos:start="151:5" pos:end="151:18">aio_timer_init</name><argument_list pos:start="151:19" pos:end="155:44">(<argument pos:start="151:20" pos:end="151:43"><expr pos:start="151:20" pos:end="151:43"><call pos:start="151:20" pos:end="151:43"><name pos:start="151:20" pos:end="151:39">bdrv_get_aio_context</name><argument_list pos:start="151:40" pos:end="151:43">(<argument pos:start="151:41" pos:end="151:42"><expr pos:start="151:41" pos:end="151:42"><name pos:start="151:41" pos:end="151:42">bs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="151:46" pos:end="151:54"><expr pos:start="151:46" pos:end="151:54"><operator pos:start="151:46" pos:end="151:46">&amp;</operator><name pos:start="151:47" pos:end="151:54"><name pos:start="151:47" pos:end="151:47">s</name><operator pos:start="151:48" pos:end="151:49">-&gt;</operator><name pos:start="151:50" pos:end="151:54">timer</name></name></expr></argument>,

                   <argument pos:start="153:20" pos:end="153:38"><expr pos:start="153:20" pos:end="153:38"><name pos:start="153:20" pos:end="153:38">QEMU_CLOCK_REALTIME</name></expr></argument>, <argument pos:start="153:41" pos:end="153:48"><expr pos:start="153:41" pos:end="153:48"><name pos:start="153:41" pos:end="153:48">SCALE_NS</name></expr></argument>,

                   <argument pos:start="155:20" pos:end="155:40"><expr pos:start="155:20" pos:end="155:40"><name pos:start="155:20" pos:end="155:40">curl_multi_timeout_do</name></expr></argument>, <argument pos:start="155:43" pos:end="155:43"><expr pos:start="155:43" pos:end="155:43"><name pos:start="155:43" pos:end="155:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="159:5" pos:end="159:57">// Now we know the file exists and its size, so let's</comment>

    <comment type="line" pos:start="161:5" pos:end="161:38">// initialize the multi interface!</comment>



    <expr_stmt pos:start="165:5" pos:end="165:33"><expr pos:start="165:5" pos:end="165:32"><name pos:start="165:5" pos:end="165:12"><name pos:start="165:5" pos:end="165:5">s</name><operator pos:start="165:6" pos:end="165:7">-&gt;</operator><name pos:start="165:8" pos:end="165:12">multi</name></name> <operator pos:start="165:14" pos:end="165:14">=</operator> <call pos:start="165:16" pos:end="165:32"><name pos:start="165:16" pos:end="165:30">curl_multi_init</name><argument_list pos:start="165:31" pos:end="165:32">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:56"><expr pos:start="167:5" pos:end="167:55"><call pos:start="167:5" pos:end="167:55"><name pos:start="167:5" pos:end="167:21">curl_multi_setopt</name><argument_list pos:start="167:22" pos:end="167:55">(<argument pos:start="167:23" pos:end="167:30"><expr pos:start="167:23" pos:end="167:30"><name pos:start="167:23" pos:end="167:30"><name pos:start="167:23" pos:end="167:23">s</name><operator pos:start="167:24" pos:end="167:25">-&gt;</operator><name pos:start="167:26" pos:end="167:30">multi</name></name></expr></argument>, <argument pos:start="167:33" pos:end="167:51"><expr pos:start="167:33" pos:end="167:51"><name pos:start="167:33" pos:end="167:51">CURLMOPT_SOCKETDATA</name></expr></argument>, <argument pos:start="167:54" pos:end="167:54"><expr pos:start="167:54" pos:end="167:54"><name pos:start="167:54" pos:end="167:54">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="172:0"><expr pos:start="169:5" pos:end="169:70"><call pos:start="169:5" pos:end="169:70"><name pos:start="169:5" pos:end="169:21">curl_multi_setopt</name><argument_list pos:start="169:22" pos:end="169:70">(<argument pos:start="169:23" pos:end="169:30"><expr pos:start="169:23" pos:end="169:30"><name pos:start="169:23" pos:end="169:30"><name pos:start="169:23" pos:end="169:23">s</name><operator pos:start="169:24" pos:end="169:25">-&gt;</operator><name pos:start="169:26" pos:end="169:30">multi</name></name></expr></argument>, <argument pos:start="169:33" pos:end="169:55"><expr pos:start="169:33" pos:end="169:55"><name pos:start="169:33" pos:end="169:55">CURLMOPT_SOCKETFUNCTION</name></expr></argument>, <argument pos:start="169:58" pos:end="169:69"><expr pos:start="169:58" pos:end="169:69"><name pos:start="169:58" pos:end="169:69">curl_sock_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="171:1" pos:end="171:31">#<cpp:directive pos:start="171:2" pos:end="171:6">ifdef</cpp:directive> <name pos:start="171:8" pos:end="171:31">NEED_CURL_TIMER_CALLBACK</name></cpp:ifdef>

    <expr_stmt pos:start="173:5" pos:end="173:55"><expr pos:start="173:5" pos:end="173:54"><call pos:start="173:5" pos:end="173:54"><name pos:start="173:5" pos:end="173:21">curl_multi_setopt</name><argument_list pos:start="173:22" pos:end="173:54">(<argument pos:start="173:23" pos:end="173:30"><expr pos:start="173:23" pos:end="173:30"><name pos:start="173:23" pos:end="173:30"><name pos:start="173:23" pos:end="173:23">s</name><operator pos:start="173:24" pos:end="173:25">-&gt;</operator><name pos:start="173:26" pos:end="173:30">multi</name></name></expr></argument>, <argument pos:start="173:33" pos:end="173:50"><expr pos:start="173:33" pos:end="173:50"><name pos:start="173:33" pos:end="173:50">CURLMOPT_TIMERDATA</name></expr></argument>, <argument pos:start="173:53" pos:end="173:53"><expr pos:start="173:53" pos:end="173:53"><name pos:start="173:53" pos:end="173:53">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="178:0"><expr pos:start="175:5" pos:end="175:70"><call pos:start="175:5" pos:end="175:70"><name pos:start="175:5" pos:end="175:21">curl_multi_setopt</name><argument_list pos:start="175:22" pos:end="175:70">(<argument pos:start="175:23" pos:end="175:30"><expr pos:start="175:23" pos:end="175:30"><name pos:start="175:23" pos:end="175:30"><name pos:start="175:23" pos:end="175:23">s</name><operator pos:start="175:24" pos:end="175:25">-&gt;</operator><name pos:start="175:26" pos:end="175:30">multi</name></name></expr></argument>, <argument pos:start="175:33" pos:end="175:54"><expr pos:start="175:33" pos:end="175:54"><name pos:start="175:33" pos:end="175:54">CURLMOPT_TIMERFUNCTION</name></expr></argument>, <argument pos:start="175:57" pos:end="175:69"><expr pos:start="175:57" pos:end="175:69"><name pos:start="175:57" pos:end="175:69">curl_timer_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="177:1" pos:end="177:6">#<cpp:directive pos:start="177:2" pos:end="177:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="181:5" pos:end="181:24"><expr pos:start="181:5" pos:end="181:23"><call pos:start="181:5" pos:end="181:23"><name pos:start="181:5" pos:end="181:17">qemu_opts_del</name><argument_list pos:start="181:18" pos:end="181:23">(<argument pos:start="181:19" pos:end="181:22"><expr pos:start="181:19" pos:end="181:22"><name pos:start="181:19" pos:end="181:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="183:5" pos:end="183:13">return <expr pos:start="183:12" pos:end="183:12"><literal type="number" pos:start="183:12" pos:end="183:12">0</literal></expr>;</return>



<label pos:start="187:1" pos:end="187:4"><name pos:start="187:1" pos:end="187:3">out</name>:</label>

    <expr_stmt pos:start="189:5" pos:end="189:68"><expr pos:start="189:5" pos:end="189:67"><call pos:start="189:5" pos:end="189:67"><name pos:start="189:5" pos:end="189:14">error_setg</name><argument_list pos:start="189:15" pos:end="189:67">(<argument pos:start="189:16" pos:end="189:19"><expr pos:start="189:16" pos:end="189:19"><name pos:start="189:16" pos:end="189:19">errp</name></expr></argument>, <argument pos:start="189:22" pos:end="189:51"><expr pos:start="189:22" pos:end="189:51"><literal type="string" pos:start="189:22" pos:end="189:51">"CURL: Error opening file: %s"</literal></expr></argument>, <argument pos:start="189:54" pos:end="189:66"><expr pos:start="189:54" pos:end="189:66"><name pos:start="189:54" pos:end="189:66"><name pos:start="189:54" pos:end="189:58">state</name><operator pos:start="189:59" pos:end="189:60">-&gt;</operator><name pos:start="189:61" pos:end="189:66">errmsg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:35"><expr pos:start="191:5" pos:end="191:34"><call pos:start="191:5" pos:end="191:34"><name pos:start="191:5" pos:end="191:21">curl_easy_cleanup</name><argument_list pos:start="191:22" pos:end="191:34">(<argument pos:start="191:23" pos:end="191:33"><expr pos:start="191:23" pos:end="191:33"><name pos:start="191:23" pos:end="191:33"><name pos:start="191:23" pos:end="191:27">state</name><operator pos:start="191:28" pos:end="191:29">-&gt;</operator><name pos:start="191:30" pos:end="191:33">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:23"><expr pos:start="193:5" pos:end="193:22"><name pos:start="193:5" pos:end="193:15"><name pos:start="193:5" pos:end="193:9">state</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:15">curl</name></name> <operator pos:start="193:17" pos:end="193:17">=</operator> <name pos:start="193:19" pos:end="193:22">NULL</name></expr>;</expr_stmt>

<label pos:start="195:1" pos:end="195:12"><name pos:start="195:1" pos:end="195:11">out_noclean</name>:</label>

    <expr_stmt pos:start="197:5" pos:end="197:19"><expr pos:start="197:5" pos:end="197:18"><call pos:start="197:5" pos:end="197:18"><name pos:start="197:5" pos:end="197:10">g_free</name><argument_list pos:start="197:11" pos:end="197:18">(<argument pos:start="197:12" pos:end="197:17"><expr pos:start="197:12" pos:end="197:17"><name pos:start="197:12" pos:end="197:17"><name pos:start="197:12" pos:end="197:12">s</name><operator pos:start="197:13" pos:end="197:14">-&gt;</operator><name pos:start="197:15" pos:end="197:17">url</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:24"><expr pos:start="199:5" pos:end="199:23"><call pos:start="199:5" pos:end="199:23"><name pos:start="199:5" pos:end="199:17">qemu_opts_del</name><argument_list pos:start="199:18" pos:end="199:23">(<argument pos:start="199:19" pos:end="199:22"><expr pos:start="199:19" pos:end="199:22"><name pos:start="199:19" pos:end="199:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="201:5" pos:end="201:19">return <expr pos:start="201:12" pos:end="201:18"><operator pos:start="201:12" pos:end="201:12">-</operator><name pos:start="201:13" pos:end="201:18">EINVAL</name></expr>;</return>

</block_content>}</block></function>
</unit>
