<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4717.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:14">BlockStatsList</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:36">qmp_query_blockstats</name><parameter_list pos:start="1:37" pos:end="5:50">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:41">bool</name></type> <name pos:start="1:43" pos:end="1:57">has_query_nodes</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:53"><decl pos:start="3:38" pos:end="3:53"><type pos:start="3:38" pos:end="3:53"><name pos:start="3:38" pos:end="3:41">bool</name></type> <name pos:start="3:43" pos:end="3:53">query_nodes</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:49"><decl pos:start="5:38" pos:end="5:49"><type pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:42">Error</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier><modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:49">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:16">

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">BlockStatsList</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:24">head</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>, <decl pos:start="9:34" pos:end="9:49"><type ref="prev" pos:start="9:5" pos:end="9:20"><modifier pos:start="9:34" pos:end="9:34">*</modifier><modifier pos:start="9:35" pos:end="9:35">*</modifier></type><name pos:start="9:36" pos:end="9:41">p_next</name> <init pos:start="9:43" pos:end="9:49">= <expr pos:start="9:45" pos:end="9:49"><operator pos:start="9:45" pos:end="9:45">&amp;</operator><name pos:start="9:46" pos:end="9:49">head</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">BlockBackend</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">blk</name> <init pos:start="11:23" pos:end="11:28">= <expr pos:start="11:25" pos:end="11:28"><name pos:start="11:25" pos:end="11:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">BlockDriverState</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:24">bs</name> <init pos:start="13:26" pos:end="13:31">= <expr pos:start="13:28" pos:end="13:31"><name pos:start="13:28" pos:end="13:31">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:66">/* Just to be safe if query_nodes is not always initialized */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:49"><expr pos:start="19:5" pos:end="19:48"><name pos:start="19:5" pos:end="19:15">query_nodes</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:33">has_query_nodes</name> <operator pos:start="19:35" pos:end="19:36">&amp;&amp;</operator> <name pos:start="19:38" pos:end="19:48">query_nodes</name></expr>;</expr_stmt>



    <while pos:start="23:5" pos:end="45:5">while <condition pos:start="23:11" pos:end="23:50">(<expr pos:start="23:12" pos:end="23:49"><call pos:start="23:12" pos:end="23:49"><name pos:start="23:12" pos:end="23:25">next_query_bds</name><argument_list pos:start="23:26" pos:end="23:49">(<argument pos:start="23:27" pos:end="23:30"><expr pos:start="23:27" pos:end="23:30"><operator pos:start="23:27" pos:end="23:27">&amp;</operator><name pos:start="23:28" pos:end="23:30">blk</name></expr></argument>, <argument pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><operator pos:start="23:33" pos:end="23:33">&amp;</operator><name pos:start="23:34" pos:end="23:35">bs</name></expr></argument>, <argument pos:start="23:38" pos:end="23:48"><expr pos:start="23:38" pos:end="23:48"><name pos:start="23:38" pos:end="23:48">query_nodes</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:52" pos:end="45:5">{<block_content pos:start="25:9" pos:end="43:29">

        <decl_stmt pos:start="25:9" pos:end="25:56"><decl pos:start="25:9" pos:end="25:55"><type pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:22">BlockStatsList</name> <modifier pos:start="25:24" pos:end="25:24">*</modifier></type><name pos:start="25:25" pos:end="25:28">info</name> <init pos:start="25:30" pos:end="25:55">= <expr pos:start="25:32" pos:end="25:55"><call pos:start="25:32" pos:end="25:55"><name pos:start="25:32" pos:end="25:40">g_malloc0</name><argument_list pos:start="25:41" pos:end="25:55">(<argument pos:start="25:42" pos:end="25:54"><expr pos:start="25:42" pos:end="25:54"><sizeof pos:start="25:42" pos:end="25:54">sizeof<argument_list pos:start="25:48" pos:end="25:54">(<argument pos:start="25:49" pos:end="25:53"><expr pos:start="25:49" pos:end="25:53"><operator pos:start="25:49" pos:end="25:49">*</operator><name pos:start="25:50" pos:end="25:53">info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="29:57"><decl pos:start="27:9" pos:end="29:56"><type pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:18">AioContext</name> <modifier pos:start="27:20" pos:end="27:20">*</modifier></type><name pos:start="27:21" pos:end="27:23">ctx</name> <init pos:start="27:25" pos:end="29:56">= <expr pos:start="27:27" pos:end="29:56"><ternary pos:start="27:27" pos:end="29:56"><condition pos:start="27:27" pos:end="27:31"><expr pos:start="27:27" pos:end="27:29"><name pos:start="27:27" pos:end="27:29">blk</name></expr> ?</condition><then pos:start="27:33" pos:end="27:56"> <expr pos:start="27:33" pos:end="27:56"><call pos:start="27:33" pos:end="27:56"><name pos:start="27:33" pos:end="27:51">blk_get_aio_context</name><argument_list pos:start="27:52" pos:end="27:56">(<argument pos:start="27:53" pos:end="27:55"><expr pos:start="27:53" pos:end="27:55"><name pos:start="27:53" pos:end="27:55">blk</name></expr></argument>)</argument_list></call></expr>

                              </then><else pos:start="29:31" pos:end="29:56">: <expr pos:start="29:33" pos:end="29:56"><call pos:start="29:33" pos:end="29:56"><name pos:start="29:33" pos:end="29:52">bdrv_get_aio_context</name><argument_list pos:start="29:53" pos:end="29:56">(<argument pos:start="29:54" pos:end="29:55"><expr pos:start="29:54" pos:end="29:55"><name pos:start="29:54" pos:end="29:55">bs</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><call pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:27">aio_context_acquire</name><argument_list pos:start="33:28" pos:end="33:32">(<argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:62"><expr pos:start="35:9" pos:end="35:61"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:12">info</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:19">value</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:61"><name pos:start="35:23" pos:end="35:38">bdrv_query_stats</name><argument_list pos:start="35:39" pos:end="35:61">(<argument pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><name pos:start="35:40" pos:end="35:42">blk</name></expr></argument>, <argument pos:start="35:45" pos:end="35:46"><expr pos:start="35:45" pos:end="35:46"><name pos:start="35:45" pos:end="35:46">bs</name></expr></argument>, <argument pos:start="35:49" pos:end="35:60"><expr pos:start="35:49" pos:end="35:60"><operator pos:start="35:49" pos:end="35:49">!</operator><name pos:start="35:50" pos:end="35:60">query_nodes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><call pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:27">aio_context_release</name><argument_list pos:start="37:28" pos:end="37:32">(<argument pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:23"><expr pos:start="41:9" pos:end="41:22"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:15">p_next</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:22">info</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:14">p_next</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <operator pos:start="43:18" pos:end="43:18">&amp;</operator><name pos:start="43:19" pos:end="43:28"><name pos:start="43:19" pos:end="43:22">info</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:28">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="49:5" pos:end="49:16">return <expr pos:start="49:12" pos:end="49:15"><name pos:start="49:12" pos:end="49:15">head</name></expr>;</return>

</block_content>}</block></function>
</unit>
