<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2462.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_header</name><parameter_list pos:start="1:23" pos:end="1:43">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">s1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="223:1">{<block_content pos:start="5:5" pos:end="221:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VideoDemuxData</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:37">= <expr pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:26">s1</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">first_index</name></decl>, <decl pos:start="7:22" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:31">last_index</name></decl>, <decl pos:start="7:34" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:36">ret</name> <init pos:start="7:38" pos:end="7:40">= <expr pos:start="7:40" pos:end="7:40"><literal type="number" pos:start="7:40" pos:end="7:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">width</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>, <decl pos:start="9:20" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:25">height</name> <init pos:start="9:27" pos:end="9:29">= <expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:8">enum</name> <name pos:start="13:10" pos:end="13:20">PixelFormat</name></name></type> <name pos:start="13:22" pos:end="13:28">pix_fmt</name> <init pos:start="13:30" pos:end="13:43">= <expr pos:start="13:32" pos:end="13:43"><name pos:start="13:32" pos:end="13:43">PIX_FMT_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:14">AVRational</name></type> <name pos:start="15:16" pos:end="15:24">framerate</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:6">s1</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:17">ctx_flags</name></name> <operator pos:start="19:19" pos:end="19:20">|=</operator> <name pos:start="19:22" pos:end="19:38">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:39"><expr pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:6">st</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:38"><name pos:start="23:10" pos:end="23:28">avformat_new_stream</name><argument_list pos:start="23:29" pos:end="23:38">(<argument pos:start="23:30" pos:end="23:31"><expr pos:start="23:30" pos:end="23:31"><name pos:start="23:30" pos:end="23:31">s1</name></expr></argument>, <argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><name pos:start="23:34" pos:end="23:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:11">st</name></expr>)</condition> <block pos:start="25:14" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:87">(<expr pos:start="33:9" pos:end="33:86"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:23">pixel_format</name></name> <operator pos:start="33:25" pos:end="33:26">&amp;&amp;</operator> <operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:35">pix_fmt</name> <operator pos:start="33:37" pos:end="33:37">=</operator> <call pos:start="33:39" pos:end="33:69"><name pos:start="33:39" pos:end="33:52">av_get_pix_fmt</name><argument_list pos:start="33:53" pos:end="33:69">(<argument pos:start="33:54" pos:end="33:68"><expr pos:start="33:54" pos:end="33:68"><name pos:start="33:54" pos:end="33:68"><name pos:start="33:54" pos:end="33:54">s</name><operator pos:start="33:55" pos:end="33:56">-&gt;</operator><name pos:start="33:57" pos:end="33:68">pixel_format</name></name></expr></argument>)</argument_list></call><operator pos:start="33:70" pos:end="33:70">)</operator> <operator pos:start="33:72" pos:end="33:73">==</operator> <name pos:start="33:75" pos:end="33:86">PIX_FMT_NONE</name></expr>)</condition> <block pos:start="33:89" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:31">

        <expr_stmt pos:start="35:9" pos:end="35:81"><expr pos:start="35:9" pos:end="35:80"><call pos:start="35:9" pos:end="35:80"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:80">(<argument pos:start="35:16" pos:end="35:17"><expr pos:start="35:16" pos:end="35:17"><name pos:start="35:16" pos:end="35:17">s1</name></expr></argument>, <argument pos:start="35:20" pos:end="35:31"><expr pos:start="35:20" pos:end="35:31"><name pos:start="35:20" pos:end="35:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:34" pos:end="35:62"><expr pos:start="35:34" pos:end="35:62"><literal type="string" pos:start="35:34" pos:end="35:62">"No such pixel format: %s.\n"</literal></expr></argument>, <argument pos:start="35:65" pos:end="35:79"><expr pos:start="35:65" pos:end="35:79"><name pos:start="35:65" pos:end="35:79"><name pos:start="35:65" pos:end="35:65">s</name><operator pos:start="35:66" pos:end="35:67">-&gt;</operator><name pos:start="35:68" pos:end="35:79">pixel_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:89">(<expr pos:start="41:9" pos:end="41:88"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:21">video_size</name></name> <operator pos:start="41:23" pos:end="41:24">&amp;&amp;</operator> <operator pos:start="41:26" pos:end="41:26">(</operator><name pos:start="41:27" pos:end="41:29">ret</name> <operator pos:start="41:31" pos:end="41:31">=</operator> <call pos:start="41:33" pos:end="41:83"><name pos:start="41:33" pos:end="41:51">av_parse_video_size</name><argument_list pos:start="41:52" pos:end="41:83">(<argument pos:start="41:53" pos:end="41:58"><expr pos:start="41:53" pos:end="41:58"><operator pos:start="41:53" pos:end="41:53">&amp;</operator><name pos:start="41:54" pos:end="41:58">width</name></expr></argument>, <argument pos:start="41:61" pos:end="41:67"><expr pos:start="41:61" pos:end="41:67"><operator pos:start="41:61" pos:end="41:61">&amp;</operator><name pos:start="41:62" pos:end="41:67">height</name></expr></argument>, <argument pos:start="41:70" pos:end="41:82"><expr pos:start="41:70" pos:end="41:82"><name pos:start="41:70" pos:end="41:82"><name pos:start="41:70" pos:end="41:70">s</name><operator pos:start="41:71" pos:end="41:72">-&gt;</operator><name pos:start="41:73" pos:end="41:82">video_size</name></name></expr></argument>)</argument_list></call><operator pos:start="41:84" pos:end="41:84">)</operator> <operator pos:start="41:86" pos:end="41:86">&lt;</operator> <literal type="number" pos:start="41:88" pos:end="41:88">0</literal></expr>)</condition> <block pos:start="41:91" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:19">

        <expr_stmt pos:start="43:9" pos:end="43:84"><expr pos:start="43:9" pos:end="43:83"><call pos:start="43:9" pos:end="43:83"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:83">(<argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><name pos:start="43:16" pos:end="43:16">s</name></expr></argument>, <argument pos:start="43:19" pos:end="43:30"><expr pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:33" pos:end="43:67"><expr pos:start="43:33" pos:end="43:67"><literal type="string" pos:start="43:33" pos:end="43:67">"Could not parse video size: %s.\n"</literal></expr></argument>, <argument pos:start="43:70" pos:end="43:82"><expr pos:start="43:70" pos:end="43:82"><name pos:start="43:70" pos:end="43:82"><name pos:start="43:70" pos:end="43:70">s</name><operator pos:start="43:71" pos:end="43:72">-&gt;</operator><name pos:start="43:73" pos:end="43:82">video_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:19">return <expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:66">(<expr pos:start="49:9" pos:end="49:65"><operator pos:start="49:9" pos:end="49:9">(</operator><name pos:start="49:10" pos:end="49:12">ret</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:60"><name pos:start="49:16" pos:end="49:34">av_parse_video_rate</name><argument_list pos:start="49:35" pos:end="49:60">(<argument pos:start="49:36" pos:end="49:45"><expr pos:start="49:36" pos:end="49:45"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:45">framerate</name></expr></argument>, <argument pos:start="49:48" pos:end="49:59"><expr pos:start="49:48" pos:end="49:59"><name pos:start="49:48" pos:end="49:59"><name pos:start="49:48" pos:end="49:48">s</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:59">framerate</name></name></expr></argument>)</argument_list></call><operator pos:start="49:61" pos:end="49:61">)</operator> <operator pos:start="49:63" pos:end="49:63">&lt;</operator> <literal type="number" pos:start="49:65" pos:end="49:65">0</literal></expr>)</condition> <block pos:start="49:68" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:19">

        <expr_stmt pos:start="51:9" pos:end="51:82"><expr pos:start="51:9" pos:end="51:81"><call pos:start="51:9" pos:end="51:81"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:81">(<argument pos:start="51:16" pos:end="51:16"><expr pos:start="51:16" pos:end="51:16"><name pos:start="51:16" pos:end="51:16">s</name></expr></argument>, <argument pos:start="51:19" pos:end="51:30"><expr pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:33" pos:end="51:66"><expr pos:start="51:33" pos:end="51:66"><literal type="string" pos:start="51:33" pos:end="51:66">"Could not parse framerate: %s.\n"</literal></expr></argument>, <argument pos:start="51:69" pos:end="51:80"><expr pos:start="51:69" pos:end="51:80"><name pos:start="51:69" pos:end="51:80"><name pos:start="51:69" pos:end="51:69">s</name><operator pos:start="51:70" pos:end="51:71">-&gt;</operator><name pos:start="51:72" pos:end="51:80">framerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:19">return <expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:55"><expr pos:start="59:5" pos:end="59:54"><call pos:start="59:5" pos:end="59:54"><name pos:start="59:5" pos:end="59:14">av_strlcpy</name><argument_list pos:start="59:15" pos:end="59:54">(<argument pos:start="59:16" pos:end="59:22"><expr pos:start="59:16" pos:end="59:22"><name pos:start="59:16" pos:end="59:22"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:22">path</name></name></expr></argument>, <argument pos:start="59:25" pos:end="59:36"><expr pos:start="59:25" pos:end="59:36"><name pos:start="59:25" pos:end="59:36"><name pos:start="59:25" pos:end="59:26">s1</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:36">filename</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:53"><expr pos:start="59:39" pos:end="59:53"><sizeof pos:start="59:39" pos:end="59:53">sizeof<argument_list pos:start="59:45" pos:end="59:53">(<argument pos:start="59:46" pos:end="59:52"><expr pos:start="59:46" pos:end="59:52"><name pos:start="59:46" pos:end="59:52"><name pos:start="59:46" pos:end="59:46">s</name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:52">path</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:22"><expr pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:17">img_number</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:16">img_count</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <literal type="number" pos:start="63:20" pos:end="63:20">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:21">/* find format */</comment>

    <if_stmt pos:start="69:5" pos:end="79:5"><if pos:start="69:5" pos:end="71:23">if <condition pos:start="69:8" pos:end="69:42">(<expr pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:26"><name pos:start="69:9" pos:end="69:10">s1</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:19">iformat</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:26">flags</name></name> <operator pos:start="69:28" pos:end="69:28">&amp;</operator> <name pos:start="69:30" pos:end="69:41">AVFMT_NOFILE</name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:23"><block_content pos:start="71:9" pos:end="71:23">

        <expr_stmt pos:start="71:9" pos:end="71:23"><expr pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:18">is_pipe</name></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="73:5" pos:end="79:5">else<block pos:start="73:9" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:47">

        <expr_stmt pos:start="75:9" pos:end="75:23"><expr pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:18">is_pipe</name></name> <operator pos:start="75:20" pos:end="75:20">=</operator> <literal type="number" pos:start="75:22" pos:end="75:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:47"><expr pos:start="77:9" pos:end="77:46"><name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:10">st</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:24">need_parsing</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:46">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:62"><expr pos:start="83:5" pos:end="83:61"><call pos:start="83:5" pos:end="83:61"><name pos:start="83:5" pos:end="83:23">avpriv_set_pts_info</name><argument_list pos:start="83:24" pos:end="83:61">(<argument pos:start="83:25" pos:end="83:26"><expr pos:start="83:25" pos:end="83:26"><name pos:start="83:25" pos:end="83:26">st</name></expr></argument>, <argument pos:start="83:29" pos:end="83:30"><expr pos:start="83:29" pos:end="83:30"><literal type="number" pos:start="83:29" pos:end="83:30">60</literal></expr></argument>, <argument pos:start="83:33" pos:end="83:45"><expr pos:start="83:33" pos:end="83:45"><name pos:start="83:33" pos:end="83:45"><name pos:start="83:33" pos:end="83:41">framerate</name><operator pos:start="83:42" pos:end="83:42">.</operator><name pos:start="83:43" pos:end="83:45">den</name></name></expr></argument>, <argument pos:start="83:48" pos:end="83:60"><expr pos:start="83:48" pos:end="83:60"><name pos:start="83:48" pos:end="83:60"><name pos:start="83:48" pos:end="83:56">framerate</name><operator pos:start="83:57" pos:end="83:57">.</operator><name pos:start="83:58" pos:end="83:60">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:24">(<expr pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:13">width</name> <operator pos:start="87:15" pos:end="87:16">&amp;&amp;</operator> <name pos:start="87:18" pos:end="87:23">height</name></expr>)</condition> <block pos:start="87:26" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:35">

        <expr_stmt pos:start="89:9" pos:end="89:34"><expr pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:24"><name pos:start="89:9" pos:end="89:10">st</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:17">codec</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:24">width</name></name>  <operator pos:start="89:27" pos:end="89:27">=</operator> <name pos:start="89:29" pos:end="89:33">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:35"><expr pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:10">st</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:17">codec</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:25">height</name></name> <operator pos:start="91:27" pos:end="91:27">=</operator> <name pos:start="91:29" pos:end="91:34">height</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="183:5"><if pos:start="97:5" pos:end="183:5">if <condition pos:start="97:8" pos:end="97:20">(<expr pos:start="97:9" pos:end="97:19"><operator pos:start="97:9" pos:end="97:9">!</operator><name pos:start="97:10" pos:end="97:19"><name pos:start="97:10" pos:end="97:10">s</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:19">is_pipe</name></name></expr>)</condition> <block pos:start="97:22" pos:end="183:5">{<block_content pos:start="99:9" pos:end="181:52">

        <expr_stmt pos:start="99:9" pos:end="99:39"><expr pos:start="99:9" pos:end="99:38"><name pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:19">use_glob</name></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <call pos:start="99:23" pos:end="99:38"><name pos:start="99:23" pos:end="99:29">is_glob</name><argument_list pos:start="99:30" pos:end="99:38">(<argument pos:start="99:31" pos:end="99:37"><expr pos:start="99:31" pos:end="99:37"><name pos:start="99:31" pos:end="99:37"><name pos:start="99:31" pos:end="99:31">s</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:37">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="169:9"><if pos:start="101:9" pos:end="153:9">if <condition pos:start="101:12" pos:end="101:24">(<expr pos:start="101:13" pos:end="101:23"><name pos:start="101:13" pos:end="101:23"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:23">use_glob</name></name></expr>)</condition> <block pos:start="101:26" pos:end="153:9">{<block_content pos:start="105:13" pos:end="152:0">

<cpp:if pos:start="103:1" pos:end="103:13">#<cpp:directive pos:start="103:2" pos:end="103:3">if</cpp:directive> <expr pos:start="103:5" pos:end="103:13"><name pos:start="103:5" pos:end="103:13">HAVE_GLOB</name></expr></cpp:if>

            <decl_stmt pos:start="105:13" pos:end="105:40"><decl pos:start="105:13" pos:end="105:29"><type pos:start="105:13" pos:end="105:18"><name pos:start="105:13" pos:end="105:16">char</name> <modifier pos:start="105:18" pos:end="105:18">*</modifier></type><name pos:start="105:19" pos:end="105:19">p</name> <init pos:start="105:21" pos:end="105:29">= <expr pos:start="105:23" pos:end="105:29"><name pos:start="105:23" pos:end="105:29"><name pos:start="105:23" pos:end="105:23">s</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:29">path</name></name></expr></init></decl>, <decl pos:start="105:32" pos:end="105:33"><type ref="prev" pos:start="105:13" pos:end="105:18"><modifier pos:start="105:32" pos:end="105:32">*</modifier></type><name pos:start="105:33" pos:end="105:33">q</name></decl>, <decl pos:start="105:36" pos:end="105:39"><type ref="prev" pos:start="105:13" pos:end="105:18"><modifier pos:start="105:36" pos:end="105:36">*</modifier></type><name pos:start="105:37" pos:end="105:39">dup</name></decl>;</decl_stmt>

            <decl_stmt pos:start="107:13" pos:end="107:21"><decl pos:start="107:13" pos:end="107:20"><type pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:15">int</name></type> <name pos:start="107:17" pos:end="107:20">gerr</name></decl>;</decl_stmt>



            <expr_stmt pos:start="111:13" pos:end="111:35"><expr pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:15">dup</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <name pos:start="111:19" pos:end="111:19">q</name> <operator pos:start="111:21" pos:end="111:21">=</operator> <call pos:start="111:23" pos:end="111:34"><name pos:start="111:23" pos:end="111:31">av_strdup</name><argument_list pos:start="111:32" pos:end="111:34">(<argument pos:start="111:33" pos:end="111:33"><expr pos:start="111:33" pos:end="111:33"><name pos:start="111:33" pos:end="111:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <while pos:start="113:13" pos:end="131:13">while <condition pos:start="113:19" pos:end="113:22">(<expr pos:start="113:20" pos:end="113:21"><operator pos:start="113:20" pos:end="113:20">*</operator><name pos:start="113:21" pos:end="113:21">q</name></expr>)</condition> <block pos:start="113:24" pos:end="131:13">{<block_content pos:start="117:17" pos:end="129:28">

                <comment type="block" pos:start="115:17" pos:end="115:74">/* Do we have room for the next char and a \ insertion? */</comment>

                <if_stmt pos:start="117:17" pos:end="119:24"><if pos:start="117:17" pos:end="119:24">if <condition pos:start="117:20" pos:end="117:59">(<expr pos:start="117:21" pos:end="117:58"><operator pos:start="117:21" pos:end="117:21">(</operator><name pos:start="117:22" pos:end="117:22">p</name> <operator pos:start="117:24" pos:end="117:24">-</operator> <name pos:start="117:26" pos:end="117:32"><name pos:start="117:26" pos:end="117:26">s</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:32">path</name></name><operator pos:start="117:33" pos:end="117:33">)</operator> <operator pos:start="117:35" pos:end="117:36">&gt;=</operator> <operator pos:start="117:38" pos:end="117:38">(</operator><sizeof pos:start="117:39" pos:end="117:53">sizeof<argument_list pos:start="117:45" pos:end="117:53">(<argument pos:start="117:46" pos:end="117:52"><expr pos:start="117:46" pos:end="117:52"><name pos:start="117:46" pos:end="117:52"><name pos:start="117:46" pos:end="117:46">s</name><operator pos:start="117:47" pos:end="117:48">-&gt;</operator><name pos:start="117:49" pos:end="117:52">path</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="117:55" pos:end="117:55">-</operator> <literal type="number" pos:start="117:57" pos:end="117:57">2</literal><operator pos:start="117:58" pos:end="117:58">)</operator></expr>)</condition><block type="pseudo" pos:start="119:19" pos:end="119:24"><block_content pos:start="119:19" pos:end="119:24">

                  <break pos:start="119:19" pos:end="119:24">break;</break></block_content></block></if></if_stmt>

                <if_stmt pos:start="121:17" pos:end="127:32"><if pos:start="121:17" pos:end="123:24">if <condition pos:start="121:20" pos:end="121:58">(<expr pos:start="121:21" pos:end="121:57"><operator pos:start="121:21" pos:end="121:21">*</operator><name pos:start="121:22" pos:end="121:22">q</name> <operator pos:start="121:24" pos:end="121:25">==</operator> <literal type="char" pos:start="121:27" pos:end="121:29">'%'</literal> <operator pos:start="121:31" pos:end="121:32">&amp;&amp;</operator> <call pos:start="121:34" pos:end="121:57"><name pos:start="121:34" pos:end="121:39">strspn</name><argument_list pos:start="121:40" pos:end="121:57">(<argument pos:start="121:41" pos:end="121:45"><expr pos:start="121:41" pos:end="121:45"><name pos:start="121:41" pos:end="121:41">q</name> <operator pos:start="121:43" pos:end="121:43">+</operator> <literal type="number" pos:start="121:45" pos:end="121:45">1</literal></expr></argument>, <argument pos:start="121:48" pos:end="121:56"><expr pos:start="121:48" pos:end="121:56"><literal type="string" pos:start="121:48" pos:end="121:56">"%*?[]{}"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="123:21" pos:end="123:24"><block_content pos:start="123:21" pos:end="123:24">

                    <expr_stmt pos:start="123:21" pos:end="123:24"><expr pos:start="123:21" pos:end="123:23"><operator pos:start="123:21" pos:end="123:22">++</operator><name pos:start="123:23" pos:end="123:23">q</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="125:17" pos:end="127:32">else if <condition pos:start="125:25" pos:end="125:47">(<expr pos:start="125:26" pos:end="125:46"><call pos:start="125:26" pos:end="125:46"><name pos:start="125:26" pos:end="125:31">strspn</name><argument_list pos:start="125:32" pos:end="125:46">(<argument pos:start="125:33" pos:end="125:33"><expr pos:start="125:33" pos:end="125:33"><name pos:start="125:33" pos:end="125:33">q</name></expr></argument>, <argument pos:start="125:36" pos:end="125:45"><expr pos:start="125:36" pos:end="125:45"><literal type="string" pos:start="125:36" pos:end="125:45">"\\*?[]{}"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="127:21" pos:end="127:32"><block_content pos:start="127:21" pos:end="127:32">

                    <expr_stmt pos:start="127:21" pos:end="127:32"><expr pos:start="127:21" pos:end="127:31"><operator pos:start="127:21" pos:end="127:21">*</operator><name pos:start="127:22" pos:end="127:22">p</name><operator pos:start="127:23" pos:end="127:24">++</operator> <operator pos:start="127:26" pos:end="127:26">=</operator> <literal type="char" pos:start="127:28" pos:end="127:31">'\\'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:28"><expr pos:start="129:17" pos:end="129:27"><operator pos:start="129:17" pos:end="129:17">*</operator><name pos:start="129:18" pos:end="129:18">p</name><operator pos:start="129:19" pos:end="129:20">++</operator> <operator pos:start="129:22" pos:end="129:22">=</operator> <operator pos:start="129:24" pos:end="129:24">*</operator><name pos:start="129:25" pos:end="129:25">q</name><operator pos:start="129:26" pos:end="129:27">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="133:13" pos:end="133:19"><expr pos:start="133:13" pos:end="133:18"><operator pos:start="133:13" pos:end="133:13">*</operator><name pos:start="133:14" pos:end="133:14">p</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <literal type="number" pos:start="133:18" pos:end="133:18">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:25"><expr pos:start="135:13" pos:end="135:24"><call pos:start="135:13" pos:end="135:24"><name pos:start="135:13" pos:end="135:19">av_free</name><argument_list pos:start="135:20" pos:end="135:24">(<argument pos:start="135:21" pos:end="135:23"><expr pos:start="135:21" pos:end="135:23"><name pos:start="135:21" pos:end="135:23">dup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="139:13" pos:end="139:92"><expr pos:start="139:13" pos:end="139:91"><name pos:start="139:13" pos:end="139:16">gerr</name> <operator pos:start="139:18" pos:end="139:18">=</operator> <call pos:start="139:20" pos:end="139:91"><name pos:start="139:20" pos:end="139:23">glob</name><argument_list pos:start="139:24" pos:end="139:91">(<argument pos:start="139:25" pos:end="139:31"><expr pos:start="139:25" pos:end="139:31"><name pos:start="139:25" pos:end="139:31"><name pos:start="139:25" pos:end="139:25">s</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:31">path</name></name></expr></argument>, <argument pos:start="139:34" pos:end="139:69"><expr pos:start="139:34" pos:end="139:69"><name pos:start="139:34" pos:end="139:45">GLOB_NOCHECK</name><operator pos:start="139:46" pos:end="139:46">|</operator><name pos:start="139:47" pos:end="139:56">GLOB_BRACE</name><operator pos:start="139:57" pos:end="139:57">|</operator><name pos:start="139:58" pos:end="139:69">GLOB_NOMAGIC</name></expr></argument>, <argument pos:start="139:72" pos:end="139:75"><expr pos:start="139:72" pos:end="139:75"><name pos:start="139:72" pos:end="139:75">NULL</name></expr></argument>, <argument pos:start="139:78" pos:end="139:90"><expr pos:start="139:78" pos:end="139:90"><operator pos:start="139:78" pos:end="139:78">&amp;</operator><name pos:start="139:79" pos:end="139:90"><name pos:start="139:79" pos:end="139:79">s</name><operator pos:start="139:80" pos:end="139:81">-&gt;</operator><name pos:start="139:82" pos:end="139:90">globstate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="141:13" pos:end="145:13"><if pos:start="141:13" pos:end="145:13">if <condition pos:start="141:16" pos:end="141:26">(<expr pos:start="141:17" pos:end="141:25"><name pos:start="141:17" pos:end="141:20">gerr</name> <operator pos:start="141:22" pos:end="141:23">!=</operator> <literal type="number" pos:start="141:25" pos:end="141:25">0</literal></expr>)</condition> <block pos:start="141:28" pos:end="145:13">{<block_content pos:start="143:17" pos:end="143:39">

                <return pos:start="143:17" pos:end="143:39">return <expr pos:start="143:24" pos:end="143:38"><call pos:start="143:24" pos:end="143:38"><name pos:start="143:24" pos:end="143:30">AVERROR</name><argument_list pos:start="143:31" pos:end="143:38">(<argument pos:start="143:32" pos:end="143:37"><expr pos:start="143:32" pos:end="143:37"><name pos:start="143:32" pos:end="143:37">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:28"><expr pos:start="147:13" pos:end="147:27"><name pos:start="147:13" pos:end="147:23">first_index</name> <operator pos:start="147:25" pos:end="147:25">=</operator> <literal type="number" pos:start="147:27" pos:end="147:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="152:0"><expr pos:start="149:13" pos:end="149:50"><name pos:start="149:13" pos:end="149:22">last_index</name> <operator pos:start="149:24" pos:end="149:24">=</operator> <name pos:start="149:26" pos:end="149:46"><name pos:start="149:26" pos:end="149:26">s</name><operator pos:start="149:27" pos:end="149:28">-&gt;</operator><name pos:start="149:29" pos:end="149:37">globstate</name><operator pos:start="149:38" pos:end="149:38">.</operator><name pos:start="149:39" pos:end="149:46">gl_pathc</name></name> <operator pos:start="149:48" pos:end="149:48">-</operator> <literal type="number" pos:start="149:50" pos:end="149:50">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="151:1" pos:end="151:6">#<cpp:directive pos:start="151:2" pos:end="151:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="153:11" pos:end="169:9">else <block pos:start="153:16" pos:end="169:9">{<block_content pos:start="155:13" pos:end="167:13">

            <if_stmt pos:start="155:13" pos:end="167:13"><if pos:start="155:13" pos:end="167:13">if <condition pos:start="155:16" pos:end="157:77">(<expr pos:start="155:17" pos:end="157:76"><call pos:start="155:17" pos:end="157:72"><name pos:start="155:17" pos:end="155:32">find_image_range</name><argument_list pos:start="155:33" pos:end="157:72">(<argument pos:start="155:34" pos:end="155:45"><expr pos:start="155:34" pos:end="155:45"><operator pos:start="155:34" pos:end="155:34">&amp;</operator><name pos:start="155:35" pos:end="155:45">first_index</name></expr></argument>, <argument pos:start="155:48" pos:end="155:58"><expr pos:start="155:48" pos:end="155:58"><operator pos:start="155:48" pos:end="155:48">&amp;</operator><name pos:start="155:49" pos:end="155:58">last_index</name></expr></argument>, <argument pos:start="155:61" pos:end="155:67"><expr pos:start="155:61" pos:end="155:67"><name pos:start="155:61" pos:end="155:67"><name pos:start="155:61" pos:end="155:61">s</name><operator pos:start="155:62" pos:end="155:63">-&gt;</operator><name pos:start="155:64" pos:end="155:67">path</name></name></expr></argument>,

                                 <argument pos:start="157:34" pos:end="157:48"><expr pos:start="157:34" pos:end="157:48"><name pos:start="157:34" pos:end="157:48"><name pos:start="157:34" pos:end="157:34">s</name><operator pos:start="157:35" pos:end="157:36">-&gt;</operator><name pos:start="157:37" pos:end="157:48">start_number</name></name></expr></argument>, <argument pos:start="157:51" pos:end="157:71"><expr pos:start="157:51" pos:end="157:71"><name pos:start="157:51" pos:end="157:71"><name pos:start="157:51" pos:end="157:51">s</name><operator pos:start="157:52" pos:end="157:53">-&gt;</operator><name pos:start="157:54" pos:end="157:71">start_number_range</name></name></expr></argument>)</argument_list></call> <operator pos:start="157:74" pos:end="157:74">&lt;</operator> <literal type="number" pos:start="157:76" pos:end="157:76">0</literal></expr>)</condition> <block pos:start="157:79" pos:end="167:13">{<block_content pos:start="159:17" pos:end="165:39">

                <expr_stmt pos:start="159:17" pos:end="163:94"><expr pos:start="159:17" pos:end="163:93"><call pos:start="159:17" pos:end="163:93"><name pos:start="159:17" pos:end="159:22">av_log</name><argument_list pos:start="159:23" pos:end="163:93">(<argument pos:start="159:24" pos:end="159:25"><expr pos:start="159:24" pos:end="159:25"><name pos:start="159:24" pos:end="159:25">s1</name></expr></argument>, <argument pos:start="159:28" pos:end="159:39"><expr pos:start="159:28" pos:end="159:39"><name pos:start="159:28" pos:end="159:39">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="161:24" pos:end="161:94"><expr pos:start="161:24" pos:end="161:94"><literal type="string" pos:start="161:24" pos:end="161:94">"Could find no file with with path '%s' and index in the range %d-%d\n"</literal></expr></argument>,

                       <argument pos:start="163:24" pos:end="163:30"><expr pos:start="163:24" pos:end="163:30"><name pos:start="163:24" pos:end="163:30"><name pos:start="163:24" pos:end="163:24">s</name><operator pos:start="163:25" pos:end="163:26">-&gt;</operator><name pos:start="163:27" pos:end="163:30">path</name></name></expr></argument>, <argument pos:start="163:33" pos:end="163:47"><expr pos:start="163:33" pos:end="163:47"><name pos:start="163:33" pos:end="163:47"><name pos:start="163:33" pos:end="163:33">s</name><operator pos:start="163:34" pos:end="163:35">-&gt;</operator><name pos:start="163:36" pos:end="163:47">start_number</name></name></expr></argument>, <argument pos:start="163:50" pos:end="163:92"><expr pos:start="163:50" pos:end="163:92"><name pos:start="163:50" pos:end="163:64"><name pos:start="163:50" pos:end="163:50">s</name><operator pos:start="163:51" pos:end="163:52">-&gt;</operator><name pos:start="163:53" pos:end="163:64">start_number</name></name> <operator pos:start="163:66" pos:end="163:66">+</operator> <name pos:start="163:68" pos:end="163:88"><name pos:start="163:68" pos:end="163:68">s</name><operator pos:start="163:69" pos:end="163:70">-&gt;</operator><name pos:start="163:71" pos:end="163:88">start_number_range</name></name> <operator pos:start="163:90" pos:end="163:90">-</operator> <literal type="number" pos:start="163:92" pos:end="163:92">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="165:17" pos:end="165:39">return <expr pos:start="165:24" pos:end="165:38"><call pos:start="165:24" pos:end="165:38"><name pos:start="165:24" pos:end="165:30">AVERROR</name><argument_list pos:start="165:31" pos:end="165:38">(<argument pos:start="165:32" pos:end="165:37"><expr pos:start="165:32" pos:end="165:37"><name pos:start="165:32" pos:end="165:37">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:35"><expr pos:start="171:9" pos:end="171:34"><name pos:start="171:9" pos:end="171:20"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:20">img_first</name></name> <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:34">first_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:33"><expr pos:start="173:9" pos:end="173:32"><name pos:start="173:9" pos:end="173:19"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:19">img_last</name></name> <operator pos:start="173:21" pos:end="173:21">=</operator> <name pos:start="173:23" pos:end="173:32">last_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:36"><expr pos:start="175:9" pos:end="175:35"><name pos:start="175:9" pos:end="175:21"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:21">img_number</name></name> <operator pos:start="175:23" pos:end="175:23">=</operator> <name pos:start="175:25" pos:end="175:35">first_index</name></expr>;</expr_stmt>

        <comment type="block" pos:start="177:9" pos:end="177:30">/* compute duration */</comment>

        <expr_stmt pos:start="179:9" pos:end="179:27"><expr pos:start="179:9" pos:end="179:26"><name pos:start="179:9" pos:end="179:22"><name pos:start="179:9" pos:end="179:10">st</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:22">start_time</name></name> <operator pos:start="179:24" pos:end="179:24">=</operator> <literal type="number" pos:start="179:26" pos:end="179:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:52"><expr pos:start="181:9" pos:end="181:51"><name pos:start="181:9" pos:end="181:20"><name pos:start="181:9" pos:end="181:10">st</name><operator pos:start="181:11" pos:end="181:12">-&gt;</operator><name pos:start="181:13" pos:end="181:20">duration</name></name> <operator pos:start="181:22" pos:end="181:22">=</operator> <name pos:start="181:24" pos:end="181:33">last_index</name> <operator pos:start="181:35" pos:end="181:35">-</operator> <name pos:start="181:37" pos:end="181:47">first_index</name> <operator pos:start="181:49" pos:end="181:49">+</operator> <literal type="number" pos:start="181:51" pos:end="181:51">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="213:5"><if pos:start="187:5" pos:end="193:5">if<condition pos:start="187:7" pos:end="187:26">(<expr pos:start="187:8" pos:end="187:25"><name pos:start="187:8" pos:end="187:25"><name pos:start="187:8" pos:end="187:9">s1</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:25">video_codec_id</name></name></expr>)</condition><block pos:start="187:27" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:49">

        <expr_stmt pos:start="189:9" pos:end="189:51"><expr pos:start="189:9" pos:end="189:50"><name pos:start="189:9" pos:end="189:29"><name pos:start="189:9" pos:end="189:10">st</name><operator pos:start="189:11" pos:end="189:12">-&gt;</operator><name pos:start="189:13" pos:end="189:17">codec</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:29">codec_type</name></name> <operator pos:start="189:31" pos:end="189:31">=</operator> <name pos:start="189:33" pos:end="189:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:49"><expr pos:start="191:9" pos:end="191:48"><name pos:start="191:9" pos:end="191:27"><name pos:start="191:9" pos:end="191:10">st</name><operator pos:start="191:11" pos:end="191:12">-&gt;</operator><name pos:start="191:13" pos:end="191:17">codec</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:27">codec_id</name></name> <operator pos:start="191:29" pos:end="191:29">=</operator> <name pos:start="191:31" pos:end="191:48"><name pos:start="191:31" pos:end="191:32">s1</name><operator pos:start="191:33" pos:end="191:34">-&gt;</operator><name pos:start="191:35" pos:end="191:48">video_codec_id</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="193:6" pos:end="199:5">else if<condition pos:start="193:13" pos:end="193:32">(<expr pos:start="193:14" pos:end="193:31"><name pos:start="193:14" pos:end="193:31"><name pos:start="193:14" pos:end="193:15">s1</name><operator pos:start="193:16" pos:end="193:17">-&gt;</operator><name pos:start="193:18" pos:end="193:31">audio_codec_id</name></name></expr>)</condition><block pos:start="193:33" pos:end="199:5">{<block_content pos:start="195:9" pos:end="197:49">

        <expr_stmt pos:start="195:9" pos:end="195:51"><expr pos:start="195:9" pos:end="195:50"><name pos:start="195:9" pos:end="195:29"><name pos:start="195:9" pos:end="195:10">st</name><operator pos:start="195:11" pos:end="195:12">-&gt;</operator><name pos:start="195:13" pos:end="195:17">codec</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:29">codec_type</name></name> <operator pos:start="195:31" pos:end="195:31">=</operator> <name pos:start="195:33" pos:end="195:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:49"><expr pos:start="197:9" pos:end="197:48"><name pos:start="197:9" pos:end="197:27"><name pos:start="197:9" pos:end="197:10">st</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:17">codec</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:27">codec_id</name></name> <operator pos:start="197:29" pos:end="197:29">=</operator> <name pos:start="197:31" pos:end="197:48"><name pos:start="197:31" pos:end="197:32">s1</name><operator pos:start="197:33" pos:end="197:34">-&gt;</operator><name pos:start="197:35" pos:end="197:48">audio_codec_id</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="199:6" pos:end="213:5">else<block pos:start="199:10" pos:end="213:5">{<block_content pos:start="201:9" pos:end="211:52">

        <decl_stmt pos:start="201:9" pos:end="201:47"><decl pos:start="201:9" pos:end="201:46"><type pos:start="201:9" pos:end="201:20"><specifier pos:start="201:9" pos:end="201:13">const</specifier> <name pos:start="201:15" pos:end="201:18">char</name> <modifier pos:start="201:20" pos:end="201:20">*</modifier></type><name pos:start="201:21" pos:end="201:23">str</name><init pos:start="201:24" pos:end="201:46">= <expr pos:start="201:26" pos:end="201:46"><call pos:start="201:26" pos:end="201:46"><name pos:start="201:26" pos:end="201:32">strrchr</name><argument_list pos:start="201:33" pos:end="201:46">(<argument pos:start="201:34" pos:end="201:40"><expr pos:start="201:34" pos:end="201:40"><name pos:start="201:34" pos:end="201:40"><name pos:start="201:34" pos:end="201:34">s</name><operator pos:start="201:35" pos:end="201:36">-&gt;</operator><name pos:start="201:37" pos:end="201:40">path</name></name></expr></argument>, <argument pos:start="201:43" pos:end="201:45"><expr pos:start="201:43" pos:end="201:45"><literal type="char" pos:start="201:43" pos:end="201:45">'.'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:62"><expr pos:start="203:9" pos:end="203:61"><name pos:start="203:9" pos:end="203:23"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:23">split_planes</name></name> <operator pos:start="203:25" pos:end="203:25">=</operator> <name pos:start="203:27" pos:end="203:29">str</name> <operator pos:start="203:31" pos:end="203:32">&amp;&amp;</operator> <operator pos:start="203:34" pos:end="203:34">!</operator><call pos:start="203:35" pos:end="203:61"><name pos:start="203:35" pos:end="203:47">av_strcasecmp</name><argument_list pos:start="203:48" pos:end="203:61">(<argument pos:start="203:49" pos:end="203:55"><expr pos:start="203:49" pos:end="203:55"><name pos:start="203:49" pos:end="203:51">str</name> <operator pos:start="203:53" pos:end="203:53">+</operator> <literal type="number" pos:start="203:55" pos:end="203:55">1</literal></expr></argument>, <argument pos:start="203:58" pos:end="203:60"><expr pos:start="203:58" pos:end="203:60"><literal type="string" pos:start="203:58" pos:end="203:60">"y"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:51"><expr pos:start="205:9" pos:end="205:50"><name pos:start="205:9" pos:end="205:29"><name pos:start="205:9" pos:end="205:10">st</name><operator pos:start="205:11" pos:end="205:12">-&gt;</operator><name pos:start="205:13" pos:end="205:17">codec</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:29">codec_type</name></name> <operator pos:start="205:31" pos:end="205:31">=</operator> <name pos:start="205:33" pos:end="205:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:61"><expr pos:start="207:9" pos:end="207:60"><name pos:start="207:9" pos:end="207:27"><name pos:start="207:9" pos:end="207:10">st</name><operator pos:start="207:11" pos:end="207:12">-&gt;</operator><name pos:start="207:13" pos:end="207:17">codec</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:27">codec_id</name></name> <operator pos:start="207:29" pos:end="207:29">=</operator> <call pos:start="207:31" pos:end="207:60"><name pos:start="207:31" pos:end="207:51">ff_guess_image2_codec</name><argument_list pos:start="207:52" pos:end="207:60">(<argument pos:start="207:53" pos:end="207:59"><expr pos:start="207:53" pos:end="207:59"><name pos:start="207:53" pos:end="207:59"><name pos:start="207:53" pos:end="207:53">s</name><operator pos:start="207:54" pos:end="207:55">-&gt;</operator><name pos:start="207:56" pos:end="207:59">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="209:9" pos:end="211:52"><if pos:start="209:9" pos:end="211:52">if <condition pos:start="209:12" pos:end="209:53">(<expr pos:start="209:13" pos:end="209:52"><name pos:start="209:13" pos:end="209:31"><name pos:start="209:13" pos:end="209:14">st</name><operator pos:start="209:15" pos:end="209:16">-&gt;</operator><name pos:start="209:17" pos:end="209:21">codec</name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:31">codec_id</name></name> <operator pos:start="209:33" pos:end="209:34">==</operator> <name pos:start="209:36" pos:end="209:52">AV_CODEC_ID_LJPEG</name></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:52"><block_content pos:start="211:13" pos:end="211:52">

            <expr_stmt pos:start="211:13" pos:end="211:52"><expr pos:start="211:13" pos:end="211:51"><name pos:start="211:13" pos:end="211:31"><name pos:start="211:13" pos:end="211:14">st</name><operator pos:start="211:15" pos:end="211:16">-&gt;</operator><name pos:start="211:17" pos:end="211:21">codec</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:31">codec_id</name></name> <operator pos:start="211:33" pos:end="211:33">=</operator> <name pos:start="211:35" pos:end="211:51">AV_CODEC_ID_MJPEG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="215:5" pos:end="217:37"><if pos:start="215:5" pos:end="217:37">if<condition pos:start="215:7" pos:end="215:78">(<expr pos:start="215:8" pos:end="215:77"><name pos:start="215:8" pos:end="215:28"><name pos:start="215:8" pos:end="215:9">st</name><operator pos:start="215:10" pos:end="215:11">-&gt;</operator><name pos:start="215:12" pos:end="215:16">codec</name><operator pos:start="215:17" pos:end="215:18">-&gt;</operator><name pos:start="215:19" pos:end="215:28">codec_type</name></name> <operator pos:start="215:30" pos:end="215:31">==</operator> <name pos:start="215:33" pos:end="215:50">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="215:52" pos:end="215:53">&amp;&amp;</operator> <name pos:start="215:55" pos:end="215:61">pix_fmt</name> <operator pos:start="215:63" pos:end="215:64">!=</operator> <name pos:start="215:66" pos:end="215:77">PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="217:9" pos:end="217:37"><block_content pos:start="217:9" pos:end="217:37">

        <expr_stmt pos:start="217:9" pos:end="217:37"><expr pos:start="217:9" pos:end="217:36"><name pos:start="217:9" pos:end="217:26"><name pos:start="217:9" pos:end="217:10">st</name><operator pos:start="217:11" pos:end="217:12">-&gt;</operator><name pos:start="217:13" pos:end="217:17">codec</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:26">pix_fmt</name></name> <operator pos:start="217:28" pos:end="217:28">=</operator> <name pos:start="217:30" pos:end="217:36">pix_fmt</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="221:5" pos:end="221:13">return <expr pos:start="221:12" pos:end="221:12"><literal type="number" pos:start="221:12" pos:end="221:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
