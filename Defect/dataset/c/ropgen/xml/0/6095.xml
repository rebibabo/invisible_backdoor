<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6095.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ich9_pm_device_plug_cb</name><parameter_list pos:start="1:28" pos:end="3:41">(<parameter pos:start="1:29" pos:end="1:55"><decl pos:start="1:29" pos:end="1:55"><type pos:start="1:29" pos:end="1:55"><name pos:start="1:29" pos:end="1:42">HotplugHandler</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:55">hotplug_dev</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:73"><decl pos:start="1:58" pos:end="1:73"><type pos:start="1:58" pos:end="1:73"><name pos:start="1:58" pos:end="1:68">DeviceState</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">dev</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:33">Error</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier><modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:5">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ICH9LPCState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">lpc</name> <init pos:start="7:23" pos:end="7:52">= <expr pos:start="7:25" pos:end="7:52"><call pos:start="7:25" pos:end="7:52"><name pos:start="7:25" pos:end="7:39">ICH9_LPC_DEVICE</name><argument_list pos:start="7:40" pos:end="7:52">(<argument pos:start="7:41" pos:end="7:51"><expr pos:start="7:41" pos:end="7:51"><name pos:start="7:41" pos:end="7:51">hotplug_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="37:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="13:55">(<expr pos:start="11:9" pos:end="13:54"><name pos:start="11:9" pos:end="11:46"><name pos:start="11:9" pos:end="11:11">lpc</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:15">pm</name><operator pos:start="11:16" pos:end="11:16">.</operator><name pos:start="11:17" pos:end="11:35">acpi_memory_hotplug</name><operator pos:start="11:36" pos:end="11:36">.</operator><name pos:start="11:37" pos:end="11:46">is_enabled</name></name> <operator pos:start="11:48" pos:end="11:49">&amp;&amp;</operator>

        <call pos:start="13:9" pos:end="13:54"><name pos:start="13:9" pos:end="13:27">object_dynamic_cast</name><argument_list pos:start="13:28" pos:end="13:54">(<argument pos:start="13:29" pos:end="13:39"><expr pos:start="13:29" pos:end="13:39"><call pos:start="13:29" pos:end="13:39"><name pos:start="13:29" pos:end="13:34">OBJECT</name><argument_list pos:start="13:35" pos:end="13:39">(<argument pos:start="13:36" pos:end="13:38"><expr pos:start="13:36" pos:end="13:38"><name pos:start="13:36" pos:end="13:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:42" pos:end="13:53"><expr pos:start="13:42" pos:end="13:53"><name pos:start="13:42" pos:end="13:53">TYPE_PC_DIMM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:57" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:39">

        <expr_stmt pos:start="15:9" pos:end="17:39"><expr pos:start="15:9" pos:end="17:38"><call pos:start="15:9" pos:end="17:38"><name pos:start="15:9" pos:end="15:27">acpi_memory_plug_cb</name><argument_list pos:start="15:28" pos:end="17:38">(<argument pos:start="15:29" pos:end="15:39"><expr pos:start="15:29" pos:end="15:39"><name pos:start="15:29" pos:end="15:39">hotplug_dev</name></expr></argument>, <argument pos:start="15:42" pos:end="15:69"><expr pos:start="15:42" pos:end="15:69"><operator pos:start="15:42" pos:end="15:42">&amp;</operator><name pos:start="15:43" pos:end="15:69"><name pos:start="15:43" pos:end="15:45">lpc</name><operator pos:start="15:46" pos:end="15:47">-&gt;</operator><name pos:start="15:48" pos:end="15:49">pm</name><operator pos:start="15:50" pos:end="15:50">.</operator><name pos:start="15:51" pos:end="15:69">acpi_memory_hotplug</name></name></expr></argument>,

                            <argument pos:start="17:29" pos:end="17:31"><expr pos:start="17:29" pos:end="17:31"><name pos:start="17:29" pos:end="17:31">dev</name></expr></argument>, <argument pos:start="17:34" pos:end="17:37"><expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="31:5">else if <condition pos:start="19:15" pos:end="19:58">(<expr pos:start="19:16" pos:end="19:57"><call pos:start="19:16" pos:end="19:57"><name pos:start="19:16" pos:end="19:34">object_dynamic_cast</name><argument_list pos:start="19:35" pos:end="19:57">(<argument pos:start="19:36" pos:end="19:46"><expr pos:start="19:36" pos:end="19:46"><call pos:start="19:36" pos:end="19:46"><name pos:start="19:36" pos:end="19:41">OBJECT</name><argument_list pos:start="19:42" pos:end="19:46">(<argument pos:start="19:43" pos:end="19:45"><expr pos:start="19:43" pos:end="19:45"><name pos:start="19:43" pos:end="19:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:49" pos:end="19:56"><expr pos:start="19:49" pos:end="19:56"><name pos:start="19:49" pos:end="19:56">TYPE_CPU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:60" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:9">

        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:39">(<expr pos:start="21:13" pos:end="21:38"><name pos:start="21:13" pos:end="21:38"><name pos:start="21:13" pos:end="21:15">lpc</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:19">pm</name><operator pos:start="21:20" pos:end="21:20">.</operator><name pos:start="21:21" pos:end="21:38">cpu_hotplug_legacy</name></name></expr>)</condition> <block pos:start="21:41" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:78">

            <expr_stmt pos:start="23:13" pos:end="23:78"><expr pos:start="23:13" pos:end="23:77"><call pos:start="23:13" pos:end="23:77"><name pos:start="23:13" pos:end="23:35">legacy_acpi_cpu_plug_cb</name><argument_list pos:start="23:36" pos:end="23:77">(<argument pos:start="23:37" pos:end="23:47"><expr pos:start="23:37" pos:end="23:47"><name pos:start="23:37" pos:end="23:47">hotplug_dev</name></expr></argument>, <argument pos:start="23:50" pos:end="23:65"><expr pos:start="23:50" pos:end="23:65"><operator pos:start="23:50" pos:end="23:50">&amp;</operator><name pos:start="23:51" pos:end="23:65"><name pos:start="23:51" pos:end="23:53">lpc</name><operator pos:start="23:54" pos:end="23:55">-&gt;</operator><name pos:start="23:56" pos:end="23:57">pm</name><operator pos:start="23:58" pos:end="23:58">.</operator><name pos:start="23:59" pos:end="23:65">gpe_cpu</name></name></expr></argument>, <argument pos:start="23:68" pos:end="23:70"><expr pos:start="23:68" pos:end="23:70"><name pos:start="23:68" pos:end="23:70">dev</name></expr></argument>, <argument pos:start="23:73" pos:end="23:76"><expr pos:start="23:73" pos:end="23:76"><name pos:start="23:73" pos:end="23:76">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="29:9">else <block pos:start="25:16" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:75">

            <expr_stmt pos:start="27:13" pos:end="27:75"><expr pos:start="27:13" pos:end="27:74"><call pos:start="27:13" pos:end="27:74"><name pos:start="27:13" pos:end="27:28">acpi_cpu_plug_cb</name><argument_list pos:start="27:29" pos:end="27:74">(<argument pos:start="27:30" pos:end="27:40"><expr pos:start="27:30" pos:end="27:40"><name pos:start="27:30" pos:end="27:40">hotplug_dev</name></expr></argument>, <argument pos:start="27:43" pos:end="27:62"><expr pos:start="27:43" pos:end="27:62"><operator pos:start="27:43" pos:end="27:43">&amp;</operator><name pos:start="27:44" pos:end="27:62"><name pos:start="27:44" pos:end="27:46">lpc</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:50">pm</name><operator pos:start="27:51" pos:end="27:51">.</operator><name pos:start="27:52" pos:end="27:62">cpuhp_state</name></name></expr></argument>, <argument pos:start="27:65" pos:end="27:67"><expr pos:start="27:65" pos:end="27:67"><name pos:start="27:65" pos:end="27:67">dev</name></expr></argument>, <argument pos:start="27:70" pos:end="27:73"><expr pos:start="27:70" pos:end="27:73"><name pos:start="27:70" pos:end="27:73">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="37:5">else <block pos:start="31:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:66">

        <expr_stmt pos:start="33:9" pos:end="35:66"><expr pos:start="33:9" pos:end="35:65"><call pos:start="33:9" pos:end="35:65"><name pos:start="33:9" pos:end="33:18">error_setg</name><argument_list pos:start="33:19" pos:end="35:65">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">errp</name></expr></argument>, <argument pos:start="33:26" pos:end="35:30"><expr pos:start="33:26" pos:end="35:30"><literal type="string" pos:start="33:26" pos:end="33:77">"acpi: device plug request for not supported device"</literal>

                   <literal type="string" pos:start="35:20" pos:end="35:30">" type: %s"</literal></expr></argument>, <argument pos:start="35:33" pos:end="35:64"><expr pos:start="35:33" pos:end="35:64"><call pos:start="35:33" pos:end="35:64"><name pos:start="35:33" pos:end="35:51">object_get_typename</name><argument_list pos:start="35:52" pos:end="35:64">(<argument pos:start="35:53" pos:end="35:63"><expr pos:start="35:53" pos:end="35:63"><call pos:start="35:53" pos:end="35:63"><name pos:start="35:53" pos:end="35:58">OBJECT</name><argument_list pos:start="35:59" pos:end="35:63">(<argument pos:start="35:60" pos:end="35:62"><expr pos:start="35:60" pos:end="35:62"><name pos:start="35:60" pos:end="35:62">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
