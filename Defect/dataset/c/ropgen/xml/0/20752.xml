<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20752.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">encode_frame</name><parameter_list pos:start="1:24" pos:end="3:60">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:42"><decl pos:start="3:25" pos:end="3:42"><type pos:start="3:25" pos:end="3:42"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:37">AVFrame</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:42">pic</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:59"><decl pos:start="3:45" pos:end="3:59"><type pos:start="3:45" pos:end="3:59"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:59">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="235:1">{<block_content pos:start="7:5" pos:end="233:13">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ProresContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">ctx</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:21">orig_buf</name></decl>, <decl pos:start="9:24" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:27">buf</name></decl>, <decl pos:start="9:30" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:39">slice_hdr</name></decl>, <decl pos:start="9:42" pos:end="9:53"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:42" pos:end="9:42">*</modifier></type><name pos:start="9:43" pos:end="9:53">slice_sizes</name></decl>, <decl pos:start="9:56" pos:end="9:59"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:56" pos:end="9:56">*</modifier></type><name pos:start="9:57" pos:end="9:59">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:29">picture_size_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">PutBitContext</name></type> <name pos:start="13:19" pos:end="13:20">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">x</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">y</name></decl>, <decl pos:start="15:15" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:15">i</name></decl>, <decl pos:start="15:18" pos:end="15:19"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:19">mb</name></decl>, <decl pos:start="15:22" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:22" pos:end="15:22">q</name> <init pos:start="15:24" pos:end="15:26">= <expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:13">sizes</name><index pos:start="17:14" pos:end="17:16">[<expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">4</literal></expr>]</index></name> <init pos:start="17:18" pos:end="17:24">= <expr pos:start="17:20" pos:end="17:24"><block pos:start="17:20" pos:end="17:24">{ <expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:55"><decl pos:start="19:5" pos:end="19:54"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:22">slice_hdr_size</name> <init pos:start="19:24" pos:end="19:54">= <expr pos:start="19:26" pos:end="19:54"><literal type="number" pos:start="19:26" pos:end="19:28">2</literal> <operator pos:start="19:28" pos:end="19:28">+</operator> <literal type="number" pos:start="19:30" pos:end="19:30">2</literal> <operator pos:start="19:32" pos:end="19:32">*</operator> <operator pos:start="19:34" pos:end="19:34">(</operator><name pos:start="19:35" pos:end="19:49"><name pos:start="19:35" pos:end="19:37">ctx</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:49">num_planes</name></name> <operator pos:start="19:51" pos:end="19:51">-</operator> <literal type="number" pos:start="19:53" pos:end="19:53">1</literal><operator pos:start="19:54" pos:end="19:54">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:45"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:18">frame_size</name></decl>, <decl pos:start="21:21" pos:end="21:32"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:21" pos:end="21:32">picture_size</name></decl>, <decl pos:start="21:35" pos:end="21:44"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:35" pos:end="21:44">slice_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:43"><decl pos:start="23:5" pos:end="23:42"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:21">mbs_per_slice</name> <init pos:start="23:23" pos:end="23:42">= <expr pos:start="23:25" pos:end="23:42"><name pos:start="23:25" pos:end="23:42"><name pos:start="23:25" pos:end="23:27">ctx</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:42">mbs_per_slice</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:16">pkt_size</name></decl>, <decl pos:start="25:19" pos:end="25:21"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:19" pos:end="25:21">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><operator pos:start="29:5" pos:end="29:5">*</operator><name pos:start="29:6" pos:end="29:23"><name pos:start="29:6" pos:end="29:10">avctx</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:23">coded_frame</name></name>           <operator pos:start="29:35" pos:end="29:35">=</operator> <operator pos:start="29:37" pos:end="29:37">*</operator><name pos:start="29:38" pos:end="29:40">pic</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:9">avctx</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:22">coded_frame</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:33">pict_type</name></name> <operator pos:start="31:35" pos:end="31:35">=</operator> <name pos:start="31:37" pos:end="31:53">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:9">avctx</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:22">coded_frame</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:33">key_frame</name></name> <operator pos:start="33:35" pos:end="33:35">=</operator> <literal type="number" pos:start="33:37" pos:end="33:37">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="39:64"><expr pos:start="37:5" pos:end="39:63"><name pos:start="37:5" pos:end="37:12">pkt_size</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:18">ctx</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:28">mb_width</name></name> <operator pos:start="37:30" pos:end="37:30">*</operator> <name pos:start="37:32" pos:end="37:45"><name pos:start="37:32" pos:end="37:34">ctx</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:45">mb_height</name></name> <operator pos:start="37:47" pos:end="37:47">*</operator> <literal type="number" pos:start="37:49" pos:end="37:50">64</literal> <operator pos:start="37:52" pos:end="37:52">*</operator> <literal type="number" pos:start="37:54" pos:end="37:54">3</literal> <operator pos:start="37:56" pos:end="37:56">*</operator> <literal type="number" pos:start="37:58" pos:end="39:16">12</literal>

               <operator pos:start="39:16" pos:end="39:16">+</operator> <name pos:start="39:18" pos:end="39:32"><name pos:start="39:18" pos:end="39:20">ctx</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:32">num_slices</name></name> <operator pos:start="39:34" pos:end="39:34">*</operator> <literal type="number" pos:start="39:36" pos:end="39:38">2</literal> <operator pos:start="39:38" pos:end="39:38">+</operator> <literal type="number" pos:start="39:40" pos:end="39:44">200</literal> <operator pos:start="39:44" pos:end="39:44">+</operator> <name pos:start="39:46" pos:end="39:63">FF_MIN_BUFFER_SIZE</name></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:51">(<expr pos:start="43:9" pos:end="43:50"><operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:12">ret</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:45"><name pos:start="43:16" pos:end="43:30">ff_alloc_packet</name><argument_list pos:start="43:31" pos:end="43:45">(<argument pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">pkt</name></expr></argument>, <argument pos:start="43:37" pos:end="43:44"><expr pos:start="43:37" pos:end="43:44"><name pos:start="43:37" pos:end="43:44">pkt_size</name></expr></argument>)</argument_list></call><operator pos:start="43:46" pos:end="43:46">)</operator> <operator pos:start="43:48" pos:end="43:48">&lt;</operator> <literal type="number" pos:start="43:50" pos:end="43:50">0</literal></expr>)</condition> <block pos:start="43:53" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:19">

        <expr_stmt pos:start="45:9" pos:end="45:70"><expr pos:start="45:9" pos:end="45:69"><call pos:start="45:9" pos:end="45:69"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:69">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:68"><expr pos:start="45:37" pos:end="45:68"><literal type="string" pos:start="45:37" pos:end="45:68">"Error getting output packet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:19">return <expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:25"><expr pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:12">orig_buf</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:24"><name pos:start="53:16" pos:end="53:18">pkt</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:24">data</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="57:5" pos:end="57:17">// frame atom</comment>

    <expr_stmt pos:start="59:5" pos:end="59:18"><expr pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:12">orig_buf</name> <operator pos:start="59:14" pos:end="59:15">+=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">4</literal></expr>;</expr_stmt>                              <comment type="line" pos:start="59:49" pos:end="59:61">// frame size</comment>

    <expr_stmt pos:start="61:5" pos:end="61:47"><expr pos:start="61:5" pos:end="61:46"><call pos:start="61:5" pos:end="61:46"><name pos:start="61:5" pos:end="61:23">bytestream_put_be32</name>  <argument_list pos:start="61:26" pos:end="61:46">(<argument pos:start="61:27" pos:end="61:35"><expr pos:start="61:27" pos:end="61:35"><operator pos:start="61:27" pos:end="61:27">&amp;</operator><name pos:start="61:28" pos:end="61:35">orig_buf</name></expr></argument>, <argument pos:start="61:38" pos:end="61:45"><expr pos:start="61:38" pos:end="61:45"><name pos:start="61:38" pos:end="61:45">FRAME_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="61:49" pos:end="61:69">// frame container ID</comment>

    <expr_stmt pos:start="63:5" pos:end="63:19"><expr pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:7">buf</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <name pos:start="63:11" pos:end="63:18">orig_buf</name></expr>;</expr_stmt>



    <comment type="line" pos:start="67:5" pos:end="67:19">// frame header</comment>

    <expr_stmt pos:start="69:5" pos:end="69:14"><expr pos:start="69:5" pos:end="69:13"><name pos:start="69:5" pos:end="69:7">tmp</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <name pos:start="69:11" pos:end="69:13">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:13"><expr pos:start="71:5" pos:end="71:12"><name pos:start="71:5" pos:end="71:7">buf</name> <operator pos:start="71:9" pos:end="71:10">+=</operator> <literal type="number" pos:start="71:12" pos:end="71:12">2</literal></expr>;</expr_stmt>                                   <comment type="line" pos:start="71:49" pos:end="71:88">// frame header size will be stored here</comment>

    <expr_stmt pos:start="73:5" pos:end="73:35"><expr pos:start="73:5" pos:end="73:34"><call pos:start="73:5" pos:end="73:34"><name pos:start="73:5" pos:end="73:23">bytestream_put_be16</name>  <argument_list pos:start="73:26" pos:end="73:34">(<argument pos:start="73:27" pos:end="73:30"><expr pos:start="73:27" pos:end="73:30"><operator pos:start="73:27" pos:end="73:27">&amp;</operator><name pos:start="73:28" pos:end="73:30">buf</name></expr></argument>, <argument pos:start="73:33" pos:end="73:33"><expr pos:start="73:33" pos:end="73:33"><literal type="number" pos:start="73:33" pos:end="73:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="73:49" pos:end="73:60">// version 1</comment>

    <expr_stmt pos:start="75:5" pos:end="75:43"><expr pos:start="75:5" pos:end="75:42"><call pos:start="75:5" pos:end="75:42"><name pos:start="75:5" pos:end="75:25">bytestream_put_buffer</name><argument_list pos:start="75:26" pos:end="75:42">(<argument pos:start="75:27" pos:end="75:30"><expr pos:start="75:27" pos:end="75:30"><operator pos:start="75:27" pos:end="75:27">&amp;</operator><name pos:start="75:28" pos:end="75:30">buf</name></expr></argument>, <argument pos:start="75:33" pos:end="75:38"><expr pos:start="75:33" pos:end="75:38"><literal type="string" pos:start="75:33" pos:end="75:38">"Lavc"</literal></expr></argument>, <argument pos:start="75:41" pos:end="75:41"><expr pos:start="75:41" pos:end="75:41"><literal type="number" pos:start="75:41" pos:end="75:41">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="line" pos:start="75:49" pos:end="75:58">// creator</comment>

    <expr_stmt pos:start="77:5" pos:end="77:46"><expr pos:start="77:5" pos:end="77:45"><call pos:start="77:5" pos:end="77:45"><name pos:start="77:5" pos:end="77:23">bytestream_put_be16</name>  <argument_list pos:start="77:26" pos:end="77:45">(<argument pos:start="77:27" pos:end="77:30"><expr pos:start="77:27" pos:end="77:30"><operator pos:start="77:27" pos:end="77:27">&amp;</operator><name pos:start="77:28" pos:end="77:30">buf</name></expr></argument>, <argument pos:start="77:33" pos:end="77:44"><expr pos:start="77:33" pos:end="77:44"><name pos:start="77:33" pos:end="77:44"><name pos:start="77:33" pos:end="77:37">avctx</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:44">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:47"><expr pos:start="79:5" pos:end="79:46"><call pos:start="79:5" pos:end="79:46"><name pos:start="79:5" pos:end="79:23">bytestream_put_be16</name>  <argument_list pos:start="79:26" pos:end="79:46">(<argument pos:start="79:27" pos:end="79:30"><expr pos:start="79:27" pos:end="79:30"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:30">buf</name></expr></argument>, <argument pos:start="79:33" pos:end="79:45"><expr pos:start="79:33" pos:end="79:45"><name pos:start="79:33" pos:end="79:45"><name pos:start="79:33" pos:end="79:37">avctx</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:45">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:57"><expr pos:start="81:5" pos:end="81:56"><call pos:start="81:5" pos:end="81:56"><name pos:start="81:5" pos:end="81:23">bytestream_put_byte</name>  <argument_list pos:start="81:26" pos:end="81:56">(<argument pos:start="81:27" pos:end="81:30"><expr pos:start="81:27" pos:end="81:30"><operator pos:start="81:27" pos:end="81:27">&amp;</operator><name pos:start="81:28" pos:end="81:30">buf</name></expr></argument>, <argument pos:start="81:33" pos:end="81:55"><expr pos:start="81:33" pos:end="81:55"><name pos:start="81:33" pos:end="81:50"><name pos:start="81:33" pos:end="81:35">ctx</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:50">chroma_factor</name></name> <operator pos:start="81:52" pos:end="81:53">&lt;&lt;</operator> <literal type="number" pos:start="81:55" pos:end="81:55">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="81:59" pos:end="81:72">// frame flags</comment>

    <expr_stmt pos:start="83:5" pos:end="83:35"><expr pos:start="83:5" pos:end="83:34"><call pos:start="83:5" pos:end="83:34"><name pos:start="83:5" pos:end="83:23">bytestream_put_byte</name>  <argument_list pos:start="83:26" pos:end="83:34">(<argument pos:start="83:27" pos:end="83:30"><expr pos:start="83:27" pos:end="83:30"><operator pos:start="83:27" pos:end="83:27">&amp;</operator><name pos:start="83:28" pos:end="83:30">buf</name></expr></argument>, <argument pos:start="83:33" pos:end="83:33"><expr pos:start="83:33" pos:end="83:33"><literal type="number" pos:start="83:33" pos:end="83:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="83:49" pos:end="83:59">// reserved</comment>

    <expr_stmt pos:start="85:5" pos:end="85:35"><expr pos:start="85:5" pos:end="85:34"><call pos:start="85:5" pos:end="85:34"><name pos:start="85:5" pos:end="85:23">bytestream_put_byte</name>  <argument_list pos:start="85:26" pos:end="85:34">(<argument pos:start="85:27" pos:end="85:30"><expr pos:start="85:27" pos:end="85:30"><operator pos:start="85:27" pos:end="85:27">&amp;</operator><name pos:start="85:28" pos:end="85:30">buf</name></expr></argument>, <argument pos:start="85:33" pos:end="85:33"><expr pos:start="85:33" pos:end="85:33"><literal type="number" pos:start="85:33" pos:end="85:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="85:49" pos:end="85:60">// primaries</comment>

    <expr_stmt pos:start="87:5" pos:end="87:35"><expr pos:start="87:5" pos:end="87:34"><call pos:start="87:5" pos:end="87:34"><name pos:start="87:5" pos:end="87:23">bytestream_put_byte</name>  <argument_list pos:start="87:26" pos:end="87:34">(<argument pos:start="87:27" pos:end="87:30"><expr pos:start="87:27" pos:end="87:30"><operator pos:start="87:27" pos:end="87:27">&amp;</operator><name pos:start="87:28" pos:end="87:30">buf</name></expr></argument>, <argument pos:start="87:33" pos:end="87:33"><expr pos:start="87:33" pos:end="87:33"><literal type="number" pos:start="87:33" pos:end="87:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="87:49" pos:end="87:68">// transfer function</comment>

    <expr_stmt pos:start="89:5" pos:end="89:35"><expr pos:start="89:5" pos:end="89:34"><call pos:start="89:5" pos:end="89:34"><name pos:start="89:5" pos:end="89:23">bytestream_put_byte</name>  <argument_list pos:start="89:26" pos:end="89:34">(<argument pos:start="89:27" pos:end="89:30"><expr pos:start="89:27" pos:end="89:30"><operator pos:start="89:27" pos:end="89:27">&amp;</operator><name pos:start="89:28" pos:end="89:30">buf</name></expr></argument>, <argument pos:start="89:33" pos:end="89:33"><expr pos:start="89:33" pos:end="89:33"><literal type="number" pos:start="89:33" pos:end="89:33">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="89:49" pos:end="89:81">// colour matrix - ITU-R BT.601-4</comment>

    <expr_stmt pos:start="91:5" pos:end="91:38"><expr pos:start="91:5" pos:end="91:37"><call pos:start="91:5" pos:end="91:37"><name pos:start="91:5" pos:end="91:23">bytestream_put_byte</name>  <argument_list pos:start="91:26" pos:end="91:37">(<argument pos:start="91:27" pos:end="91:30"><expr pos:start="91:27" pos:end="91:30"><operator pos:start="91:27" pos:end="91:27">&amp;</operator><name pos:start="91:28" pos:end="91:30">buf</name></expr></argument>, <argument pos:start="91:33" pos:end="91:36"><expr pos:start="91:33" pos:end="91:36"><literal type="number" pos:start="91:33" pos:end="91:36">0x40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="line" pos:start="91:49" pos:end="91:86">// source format and alpha information</comment>

    <expr_stmt pos:start="93:5" pos:end="93:35"><expr pos:start="93:5" pos:end="93:34"><call pos:start="93:5" pos:end="93:34"><name pos:start="93:5" pos:end="93:23">bytestream_put_byte</name>  <argument_list pos:start="93:26" pos:end="93:34">(<argument pos:start="93:27" pos:end="93:30"><expr pos:start="93:27" pos:end="93:30"><operator pos:start="93:27" pos:end="93:27">&amp;</operator><name pos:start="93:28" pos:end="93:30">buf</name></expr></argument>, <argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><literal type="number" pos:start="93:33" pos:end="93:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>             <comment type="line" pos:start="93:49" pos:end="93:59">// reserved</comment>

    <expr_stmt pos:start="95:5" pos:end="95:38"><expr pos:start="95:5" pos:end="95:37"><call pos:start="95:5" pos:end="95:37"><name pos:start="95:5" pos:end="95:23">bytestream_put_byte</name>  <argument_list pos:start="95:26" pos:end="95:37">(<argument pos:start="95:27" pos:end="95:30"><expr pos:start="95:27" pos:end="95:30"><operator pos:start="95:27" pos:end="95:27">&amp;</operator><name pos:start="95:28" pos:end="95:30">buf</name></expr></argument>, <argument pos:start="95:33" pos:end="95:36"><expr pos:start="95:33" pos:end="95:36"><literal type="number" pos:start="95:33" pos:end="95:36">0x03</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="line" pos:start="95:49" pos:end="95:91">// matrix flags - both matrices are present</comment>

    <comment type="line" pos:start="97:5" pos:end="97:31">// luma quantisation matrix</comment>

    <for pos:start="99:5" pos:end="101:63">for <control pos:start="99:9" pos:end="99:28">(<init pos:start="99:10" pos:end="99:15"><expr pos:start="99:10" pos:end="99:14"><name pos:start="99:10" pos:end="99:10">i</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>;</init> <condition pos:start="99:17" pos:end="99:23"><expr pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:17">i</name> <operator pos:start="99:19" pos:end="99:19">&lt;</operator> <literal type="number" pos:start="99:21" pos:end="99:22">64</literal></expr>;</condition> <incr pos:start="99:25" pos:end="99:27"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:25">i</name><operator pos:start="99:26" pos:end="99:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:9" pos:end="101:63"><block_content pos:start="101:9" pos:end="101:63">

        <expr_stmt pos:start="101:9" pos:end="101:63"><expr pos:start="101:9" pos:end="101:62"><call pos:start="101:9" pos:end="101:62"><name pos:start="101:9" pos:end="101:27">bytestream_put_byte</name><argument_list pos:start="101:28" pos:end="101:62">(<argument pos:start="101:29" pos:end="101:32"><expr pos:start="101:29" pos:end="101:32"><operator pos:start="101:29" pos:end="101:29">&amp;</operator><name pos:start="101:30" pos:end="101:32">buf</name></expr></argument>, <argument pos:start="101:35" pos:end="101:61"><expr pos:start="101:35" pos:end="101:61"><name pos:start="101:35" pos:end="101:61"><name pos:start="101:35" pos:end="101:37">ctx</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:51">profile_info</name><operator pos:start="101:52" pos:end="101:53">-&gt;</operator><name pos:start="101:54" pos:end="101:58">quant</name><index pos:start="101:59" pos:end="101:61">[<expr pos:start="101:60" pos:end="101:60"><name pos:start="101:60" pos:end="101:60">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <comment type="line" pos:start="103:5" pos:end="103:33">// chroma quantisation matrix</comment>

    <for pos:start="105:5" pos:end="107:63">for <control pos:start="105:9" pos:end="105:28">(<init pos:start="105:10" pos:end="105:15"><expr pos:start="105:10" pos:end="105:14"><name pos:start="105:10" pos:end="105:10">i</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <literal type="number" pos:start="105:14" pos:end="105:14">0</literal></expr>;</init> <condition pos:start="105:17" pos:end="105:23"><expr pos:start="105:17" pos:end="105:22"><name pos:start="105:17" pos:end="105:17">i</name> <operator pos:start="105:19" pos:end="105:19">&lt;</operator> <literal type="number" pos:start="105:21" pos:end="105:22">64</literal></expr>;</condition> <incr pos:start="105:25" pos:end="105:27"><expr pos:start="105:25" pos:end="105:27"><name pos:start="105:25" pos:end="105:25">i</name><operator pos:start="105:26" pos:end="105:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:9" pos:end="107:63"><block_content pos:start="107:9" pos:end="107:63">

        <expr_stmt pos:start="107:9" pos:end="107:63"><expr pos:start="107:9" pos:end="107:62"><call pos:start="107:9" pos:end="107:62"><name pos:start="107:9" pos:end="107:27">bytestream_put_byte</name><argument_list pos:start="107:28" pos:end="107:62">(<argument pos:start="107:29" pos:end="107:32"><expr pos:start="107:29" pos:end="107:32"><operator pos:start="107:29" pos:end="107:29">&amp;</operator><name pos:start="107:30" pos:end="107:32">buf</name></expr></argument>, <argument pos:start="107:35" pos:end="107:61"><expr pos:start="107:35" pos:end="107:61"><name pos:start="107:35" pos:end="107:61"><name pos:start="107:35" pos:end="107:37">ctx</name><operator pos:start="107:38" pos:end="107:39">-&gt;</operator><name pos:start="107:40" pos:end="107:51">profile_info</name><operator pos:start="107:52" pos:end="107:53">-&gt;</operator><name pos:start="107:54" pos:end="107:58">quant</name><index pos:start="107:59" pos:end="107:61">[<expr pos:start="107:60" pos:end="107:60"><name pos:start="107:60" pos:end="107:60">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="109:5" pos:end="109:48"><expr pos:start="109:5" pos:end="109:47"><call pos:start="109:5" pos:end="109:47"><name pos:start="109:5" pos:end="109:23">bytestream_put_be16</name>  <argument_list pos:start="109:26" pos:end="109:47">(<argument pos:start="109:27" pos:end="109:30"><expr pos:start="109:27" pos:end="109:30"><operator pos:start="109:27" pos:end="109:27">&amp;</operator><name pos:start="109:28" pos:end="109:30">tmp</name></expr></argument>, <argument pos:start="109:33" pos:end="109:46"><expr pos:start="109:33" pos:end="109:46"><name pos:start="109:33" pos:end="109:35">buf</name> <operator pos:start="109:37" pos:end="109:37">-</operator> <name pos:start="109:39" pos:end="109:46">orig_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="109:50" pos:end="109:80">// write back frame header size</comment>



    <comment type="line" pos:start="113:5" pos:end="113:21">// picture header</comment>

    <expr_stmt pos:start="115:5" pos:end="115:31"><expr pos:start="115:5" pos:end="115:30"><name pos:start="115:5" pos:end="115:20">picture_size_pos</name> <operator pos:start="115:22" pos:end="115:22">=</operator> <name pos:start="115:24" pos:end="115:26">buf</name> <operator pos:start="115:28" pos:end="115:28">+</operator> <literal type="number" pos:start="115:30" pos:end="115:30">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:38"><expr pos:start="117:5" pos:end="117:37"><call pos:start="117:5" pos:end="117:37"><name pos:start="117:5" pos:end="117:23">bytestream_put_byte</name>  <argument_list pos:start="117:26" pos:end="117:37">(<argument pos:start="117:27" pos:end="117:30"><expr pos:start="117:27" pos:end="117:30"><operator pos:start="117:27" pos:end="117:27">&amp;</operator><name pos:start="117:28" pos:end="117:30">buf</name></expr></argument>, <argument pos:start="117:33" pos:end="117:36"><expr pos:start="117:33" pos:end="117:36"><literal type="number" pos:start="117:33" pos:end="117:36">0x40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="line" pos:start="117:49" pos:end="117:80">// picture header size (in bits)</comment>

    <expr_stmt pos:start="119:5" pos:end="119:13"><expr pos:start="119:5" pos:end="119:12"><name pos:start="119:5" pos:end="119:7">buf</name> <operator pos:start="119:9" pos:end="119:10">+=</operator> <literal type="number" pos:start="119:12" pos:end="119:12">4</literal></expr>;</expr_stmt>                                   <comment type="line" pos:start="119:49" pos:end="119:88">// picture data size will be stored here</comment>

    <expr_stmt pos:start="121:5" pos:end="121:49"><expr pos:start="121:5" pos:end="121:48"><call pos:start="121:5" pos:end="121:48"><name pos:start="121:5" pos:end="121:23">bytestream_put_be16</name>  <argument_list pos:start="121:26" pos:end="121:48">(<argument pos:start="121:27" pos:end="121:30"><expr pos:start="121:27" pos:end="121:30"><operator pos:start="121:27" pos:end="121:27">&amp;</operator><name pos:start="121:28" pos:end="121:30">buf</name></expr></argument>, <argument pos:start="121:33" pos:end="121:47"><expr pos:start="121:33" pos:end="121:47"><name pos:start="121:33" pos:end="121:47"><name pos:start="121:33" pos:end="121:35">ctx</name><operator pos:start="121:36" pos:end="121:37">-&gt;</operator><name pos:start="121:38" pos:end="121:47">num_slices</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="121:51" pos:end="121:75">// total number of slices</comment>

    <expr_stmt pos:start="123:5" pos:end="123:66"><expr pos:start="123:5" pos:end="123:65"><call pos:start="123:5" pos:end="123:65"><name pos:start="123:5" pos:end="123:23">bytestream_put_byte</name>  <argument_list pos:start="123:26" pos:end="123:65">(<argument pos:start="123:27" pos:end="123:30"><expr pos:start="123:27" pos:end="123:30"><operator pos:start="123:27" pos:end="123:27">&amp;</operator><name pos:start="123:28" pos:end="123:30">buf</name></expr></argument>, <argument pos:start="123:33" pos:end="123:64"><expr pos:start="123:33" pos:end="123:64"><call pos:start="123:33" pos:end="123:59"><name pos:start="123:33" pos:end="123:39">av_log2</name><argument_list pos:start="123:40" pos:end="123:59">(<argument pos:start="123:41" pos:end="123:58"><expr pos:start="123:41" pos:end="123:58"><name pos:start="123:41" pos:end="123:58"><name pos:start="123:41" pos:end="123:43">ctx</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:58">mbs_per_slice</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:61" pos:end="123:62">&lt;&lt;</operator> <literal type="number" pos:start="123:64" pos:end="123:64">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="123:68" pos:end="123:99">// slice width and height in MBs</comment>



    <comment type="line" pos:start="127:5" pos:end="127:56">// seek table - will be filled during slice encoding</comment>

    <expr_stmt pos:start="129:5" pos:end="129:22"><expr pos:start="129:5" pos:end="129:21"><name pos:start="129:5" pos:end="129:15">slice_sizes</name> <operator pos:start="129:17" pos:end="129:17">=</operator> <name pos:start="129:19" pos:end="129:21">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:31"><expr pos:start="131:5" pos:end="131:30"><name pos:start="131:5" pos:end="131:7">buf</name> <operator pos:start="131:9" pos:end="131:10">+=</operator> <name pos:start="131:12" pos:end="131:26"><name pos:start="131:12" pos:end="131:14">ctx</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:26">num_slices</name></name> <operator pos:start="131:28" pos:end="131:28">*</operator> <literal type="number" pos:start="131:30" pos:end="131:30">2</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="135:5" pos:end="135:13">// slices</comment>

    <for pos:start="137:5" pos:end="209:5">for <control pos:start="137:9" pos:end="137:40">(<init pos:start="137:10" pos:end="137:15"><expr pos:start="137:10" pos:end="137:14"><name pos:start="137:10" pos:end="137:10">y</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <literal type="number" pos:start="137:14" pos:end="137:14">0</literal></expr>;</init> <condition pos:start="137:17" pos:end="137:35"><expr pos:start="137:17" pos:end="137:34"><name pos:start="137:17" pos:end="137:17">y</name> <operator pos:start="137:19" pos:end="137:19">&lt;</operator> <name pos:start="137:21" pos:end="137:34"><name pos:start="137:21" pos:end="137:23">ctx</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:34">mb_height</name></name></expr>;</condition> <incr pos:start="137:37" pos:end="137:39"><expr pos:start="137:37" pos:end="137:39"><name pos:start="137:37" pos:end="137:37">y</name><operator pos:start="137:38" pos:end="137:39">++</operator></expr></incr>)</control> <block pos:start="137:42" pos:end="209:5">{<block_content pos:start="139:9" pos:end="207:9">

        <expr_stmt pos:start="139:9" pos:end="139:43"><expr pos:start="139:9" pos:end="139:42"><name pos:start="139:9" pos:end="139:21">mbs_per_slice</name> <operator pos:start="139:23" pos:end="139:23">=</operator> <name pos:start="139:25" pos:end="139:42"><name pos:start="139:25" pos:end="139:27">ctx</name><operator pos:start="139:28" pos:end="139:29">-&gt;</operator><name pos:start="139:30" pos:end="139:42">mbs_per_slice</name></name></expr>;</expr_stmt>

        <for pos:start="141:9" pos:end="151:9">for <control pos:start="141:13" pos:end="141:69">(<init pos:start="141:14" pos:end="141:24"><expr pos:start="141:14" pos:end="141:23"><name pos:start="141:14" pos:end="141:14">x</name> <operator pos:start="141:16" pos:end="141:16">=</operator> <name pos:start="141:18" pos:end="141:19">mb</name> <operator pos:start="141:21" pos:end="141:21">=</operator> <literal type="number" pos:start="141:23" pos:end="141:23">0</literal></expr>;</init> <condition pos:start="141:26" pos:end="141:43"><expr pos:start="141:26" pos:end="141:42"><name pos:start="141:26" pos:end="141:26">x</name> <operator pos:start="141:28" pos:end="141:28">&lt;</operator> <name pos:start="141:30" pos:end="141:42"><name pos:start="141:30" pos:end="141:32">ctx</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:42">mb_width</name></name></expr>;</condition> <incr pos:start="141:45" pos:end="141:68"><expr pos:start="141:45" pos:end="141:62"><name pos:start="141:45" pos:end="141:45">x</name> <operator pos:start="141:47" pos:end="141:48">+=</operator> <name pos:start="141:50" pos:end="141:62">mbs_per_slice</name></expr><operator pos:start="141:63" pos:end="141:63">,</operator> <expr pos:start="141:65" pos:end="141:68"><name pos:start="141:65" pos:end="141:66">mb</name><operator pos:start="141:67" pos:end="141:68">++</operator></expr></incr>)</control> <block pos:start="141:71" pos:end="151:9">{<block_content pos:start="143:13" pos:end="149:48">

            <while pos:start="143:13" pos:end="145:36">while <condition pos:start="143:19" pos:end="143:53">(<expr pos:start="143:20" pos:end="143:52"><name pos:start="143:20" pos:end="143:32"><name pos:start="143:20" pos:end="143:22">ctx</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:32">mb_width</name></name> <operator pos:start="143:34" pos:end="143:34">-</operator> <name pos:start="143:36" pos:end="143:36">x</name> <operator pos:start="143:38" pos:end="143:38">&lt;</operator> <name pos:start="143:40" pos:end="143:52">mbs_per_slice</name></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:36"><block_content pos:start="145:17" pos:end="145:36">

                <expr_stmt pos:start="145:17" pos:end="145:36"><expr pos:start="145:17" pos:end="145:35"><name pos:start="145:17" pos:end="145:29">mbs_per_slice</name> <operator pos:start="145:31" pos:end="145:33">&gt;&gt;=</operator> <literal type="number" pos:start="145:35" pos:end="145:35">1</literal></expr>;</expr_stmt></block_content></block></while>

            <expr_stmt pos:start="147:13" pos:end="149:48"><expr pos:start="147:13" pos:end="149:47"><name pos:start="147:13" pos:end="147:13">q</name> <operator pos:start="147:15" pos:end="147:15">=</operator> <call pos:start="147:17" pos:end="149:47"><name pos:start="147:17" pos:end="147:32">find_slice_quant</name><argument_list pos:start="147:33" pos:end="149:47">(<argument pos:start="147:34" pos:end="147:38"><expr pos:start="147:34" pos:end="147:38"><name pos:start="147:34" pos:end="147:38">avctx</name></expr></argument>, <argument pos:start="147:41" pos:end="147:43"><expr pos:start="147:41" pos:end="147:43"><name pos:start="147:41" pos:end="147:43">pic</name></expr></argument>, <argument pos:start="147:46" pos:end="147:69"><expr pos:start="147:46" pos:end="147:69"><operator pos:start="147:46" pos:end="147:46">(</operator><name pos:start="147:47" pos:end="147:48">mb</name> <operator pos:start="147:50" pos:end="147:50">+</operator> <literal type="number" pos:start="147:52" pos:end="147:52">1</literal><operator pos:start="147:53" pos:end="147:53">)</operator> <operator pos:start="147:55" pos:end="147:55">*</operator> <name pos:start="147:57" pos:end="147:69">TRELLIS_WIDTH</name></expr></argument>, <argument pos:start="147:72" pos:end="147:72"><expr pos:start="147:72" pos:end="147:72"><name pos:start="147:72" pos:end="147:72">x</name></expr></argument>, <argument pos:start="147:75" pos:end="147:75"><expr pos:start="147:75" pos:end="147:75"><name pos:start="147:75" pos:end="147:75">y</name></expr></argument>,

                                 <argument pos:start="149:34" pos:end="149:46"><expr pos:start="149:34" pos:end="149:46"><name pos:start="149:34" pos:end="149:46">mbs_per_slice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="155:9" pos:end="161:9">for <control pos:start="155:13" pos:end="155:52">(<init pos:start="155:14" pos:end="155:39"><expr pos:start="155:14" pos:end="155:38"><name pos:start="155:14" pos:end="155:14">x</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <name pos:start="155:18" pos:end="155:34"><name pos:start="155:18" pos:end="155:20">ctx</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:34">slices_width</name></name> <operator pos:start="155:36" pos:end="155:36">-</operator> <literal type="number" pos:start="155:38" pos:end="155:38">1</literal></expr>;</init> <condition pos:start="155:41" pos:end="155:47"><expr pos:start="155:41" pos:end="155:46"><name pos:start="155:41" pos:end="155:41">x</name> <operator pos:start="155:43" pos:end="155:44">&gt;=</operator> <literal type="number" pos:start="155:46" pos:end="155:46">0</literal></expr>;</condition> <incr pos:start="155:49" pos:end="155:51"><expr pos:start="155:49" pos:end="155:51"><name pos:start="155:49" pos:end="155:49">x</name><operator pos:start="155:50" pos:end="155:51">--</operator></expr></incr>)</control> <block pos:start="155:54" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:40">

            <expr_stmt pos:start="157:13" pos:end="157:50"><expr pos:start="157:13" pos:end="157:49"><name pos:start="157:13" pos:end="157:27"><name pos:start="157:13" pos:end="157:15">ctx</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:24">slice_q</name><index pos:start="157:25" pos:end="157:27">[<expr pos:start="157:26" pos:end="157:26"><name pos:start="157:26" pos:end="157:26">x</name></expr>]</index></name> <operator pos:start="157:29" pos:end="157:29">=</operator> <name pos:start="157:31" pos:end="157:43"><name pos:start="157:31" pos:end="157:33">ctx</name><operator pos:start="157:34" pos:end="157:35">-&gt;</operator><name pos:start="157:36" pos:end="157:40">nodes</name><index pos:start="157:41" pos:end="157:43">[<expr pos:start="157:42" pos:end="157:42"><name pos:start="157:42" pos:end="157:42">q</name></expr>]</index></name><operator pos:start="157:44" pos:end="157:44">.</operator><name pos:start="157:45" pos:end="157:49">quant</name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:40"><expr pos:start="159:13" pos:end="159:39"><name pos:start="159:13" pos:end="159:13">q</name> <operator pos:start="159:15" pos:end="159:15">=</operator> <name pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:19">ctx</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:26">nodes</name><index pos:start="159:27" pos:end="159:29">[<expr pos:start="159:28" pos:end="159:28"><name pos:start="159:28" pos:end="159:28">q</name></expr>]</index></name><operator pos:start="159:30" pos:end="159:30">.</operator><name pos:start="159:31" pos:end="159:39">prev_node</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="165:9" pos:end="165:43"><expr pos:start="165:9" pos:end="165:42"><name pos:start="165:9" pos:end="165:21">mbs_per_slice</name> <operator pos:start="165:23" pos:end="165:23">=</operator> <name pos:start="165:25" pos:end="165:42"><name pos:start="165:25" pos:end="165:27">ctx</name><operator pos:start="165:28" pos:end="165:29">-&gt;</operator><name pos:start="165:30" pos:end="165:42">mbs_per_slice</name></name></expr>;</expr_stmt>

        <for pos:start="167:9" pos:end="207:9">for <control pos:start="167:13" pos:end="167:69">(<init pos:start="167:14" pos:end="167:24"><expr pos:start="167:14" pos:end="167:23"><name pos:start="167:14" pos:end="167:14">x</name> <operator pos:start="167:16" pos:end="167:16">=</operator> <name pos:start="167:18" pos:end="167:19">mb</name> <operator pos:start="167:21" pos:end="167:21">=</operator> <literal type="number" pos:start="167:23" pos:end="167:23">0</literal></expr>;</init> <condition pos:start="167:26" pos:end="167:43"><expr pos:start="167:26" pos:end="167:42"><name pos:start="167:26" pos:end="167:26">x</name> <operator pos:start="167:28" pos:end="167:28">&lt;</operator> <name pos:start="167:30" pos:end="167:42"><name pos:start="167:30" pos:end="167:32">ctx</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:42">mb_width</name></name></expr>;</condition> <incr pos:start="167:45" pos:end="167:68"><expr pos:start="167:45" pos:end="167:62"><name pos:start="167:45" pos:end="167:45">x</name> <operator pos:start="167:47" pos:end="167:48">+=</operator> <name pos:start="167:50" pos:end="167:62">mbs_per_slice</name></expr><operator pos:start="167:63" pos:end="167:63">,</operator> <expr pos:start="167:65" pos:end="167:68"><name pos:start="167:65" pos:end="167:66">mb</name><operator pos:start="167:67" pos:end="167:68">++</operator></expr></incr>)</control> <block pos:start="167:71" pos:end="207:9">{<block_content pos:start="169:13" pos:end="205:47">

            <expr_stmt pos:start="169:13" pos:end="169:33"><expr pos:start="169:13" pos:end="169:32"><name pos:start="169:13" pos:end="169:13">q</name> <operator pos:start="169:15" pos:end="169:15">=</operator> <name pos:start="169:17" pos:end="169:32"><name pos:start="169:17" pos:end="169:19">ctx</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:28">slice_q</name><index pos:start="169:29" pos:end="169:32">[<expr pos:start="169:30" pos:end="169:31"><name pos:start="169:30" pos:end="169:31">mb</name></expr>]</index></name></expr>;</expr_stmt>



            <while pos:start="173:13" pos:end="175:36">while <condition pos:start="173:19" pos:end="173:53">(<expr pos:start="173:20" pos:end="173:52"><name pos:start="173:20" pos:end="173:32"><name pos:start="173:20" pos:end="173:22">ctx</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:32">mb_width</name></name> <operator pos:start="173:34" pos:end="173:34">-</operator> <name pos:start="173:36" pos:end="173:36">x</name> <operator pos:start="173:38" pos:end="173:38">&lt;</operator> <name pos:start="173:40" pos:end="173:52">mbs_per_slice</name></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:36"><block_content pos:start="175:17" pos:end="175:36">

                <expr_stmt pos:start="175:17" pos:end="175:36"><expr pos:start="175:17" pos:end="175:35"><name pos:start="175:17" pos:end="175:29">mbs_per_slice</name> <operator pos:start="175:31" pos:end="175:33">&gt;&gt;=</operator> <literal type="number" pos:start="175:35" pos:end="175:35">1</literal></expr>;</expr_stmt></block_content></block></while>



            <expr_stmt pos:start="179:13" pos:end="179:59"><expr pos:start="179:13" pos:end="179:58"><call pos:start="179:13" pos:end="179:58"><name pos:start="179:13" pos:end="179:31">bytestream_put_byte</name><argument_list pos:start="179:32" pos:end="179:58">(<argument pos:start="179:33" pos:end="179:36"><expr pos:start="179:33" pos:end="179:36"><operator pos:start="179:33" pos:end="179:33">&amp;</operator><name pos:start="179:34" pos:end="179:36">buf</name></expr></argument>, <argument pos:start="179:39" pos:end="179:57"><expr pos:start="179:39" pos:end="179:57"><name pos:start="179:39" pos:end="179:52">slice_hdr_size</name> <operator pos:start="179:54" pos:end="179:55">&lt;&lt;</operator> <literal type="number" pos:start="179:57" pos:end="179:57">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:28"><expr pos:start="181:13" pos:end="181:27"><name pos:start="181:13" pos:end="181:21">slice_hdr</name> <operator pos:start="181:23" pos:end="181:23">=</operator> <name pos:start="181:25" pos:end="181:27">buf</name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:38"><expr pos:start="183:13" pos:end="183:37"><name pos:start="183:13" pos:end="183:15">buf</name> <operator pos:start="183:17" pos:end="183:18">+=</operator> <name pos:start="183:20" pos:end="183:33">slice_hdr_size</name> <operator pos:start="183:35" pos:end="183:35">-</operator> <literal type="number" pos:start="183:37" pos:end="183:37">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:71"><expr pos:start="185:13" pos:end="185:70"><call pos:start="185:13" pos:end="185:70"><name pos:start="185:13" pos:end="185:25">init_put_bits</name><argument_list pos:start="185:26" pos:end="185:70">(<argument pos:start="185:27" pos:end="185:29"><expr pos:start="185:27" pos:end="185:29"><operator pos:start="185:27" pos:end="185:27">&amp;</operator><name pos:start="185:28" pos:end="185:29">pb</name></expr></argument>, <argument pos:start="185:32" pos:end="185:34"><expr pos:start="185:32" pos:end="185:34"><name pos:start="185:32" pos:end="185:34">buf</name></expr></argument>, <argument pos:start="185:37" pos:end="185:69"><expr pos:start="185:37" pos:end="185:69"><operator pos:start="185:37" pos:end="185:37">(</operator><name pos:start="185:38" pos:end="185:45">pkt_size</name> <operator pos:start="185:47" pos:end="185:47">-</operator> <operator pos:start="185:49" pos:end="185:49">(</operator><name pos:start="185:50" pos:end="185:52">buf</name> <operator pos:start="185:54" pos:end="185:54">-</operator> <name pos:start="185:56" pos:end="185:63">orig_buf</name><operator pos:start="185:64" pos:end="185:64">)</operator><operator pos:start="185:65" pos:end="185:65">)</operator> <operator pos:start="185:67" pos:end="185:67">*</operator> <literal type="number" pos:start="185:69" pos:end="185:69">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:73"><expr pos:start="187:13" pos:end="187:72"><call pos:start="187:13" pos:end="187:72"><name pos:start="187:13" pos:end="187:24">encode_slice</name><argument_list pos:start="187:25" pos:end="187:72">(<argument pos:start="187:26" pos:end="187:30"><expr pos:start="187:26" pos:end="187:30"><name pos:start="187:26" pos:end="187:30">avctx</name></expr></argument>, <argument pos:start="187:33" pos:end="187:35"><expr pos:start="187:33" pos:end="187:35"><name pos:start="187:33" pos:end="187:35">pic</name></expr></argument>, <argument pos:start="187:38" pos:end="187:40"><expr pos:start="187:38" pos:end="187:40"><operator pos:start="187:38" pos:end="187:38">&amp;</operator><name pos:start="187:39" pos:end="187:40">pb</name></expr></argument>, <argument pos:start="187:43" pos:end="187:47"><expr pos:start="187:43" pos:end="187:47"><name pos:start="187:43" pos:end="187:47">sizes</name></expr></argument>, <argument pos:start="187:50" pos:end="187:50"><expr pos:start="187:50" pos:end="187:50"><name pos:start="187:50" pos:end="187:50">x</name></expr></argument>, <argument pos:start="187:53" pos:end="187:53"><expr pos:start="187:53" pos:end="187:53"><name pos:start="187:53" pos:end="187:53">y</name></expr></argument>, <argument pos:start="187:56" pos:end="187:56"><expr pos:start="187:56" pos:end="187:56"><name pos:start="187:56" pos:end="187:56">q</name></expr></argument>, <argument pos:start="187:59" pos:end="187:71"><expr pos:start="187:59" pos:end="187:71"><name pos:start="187:59" pos:end="187:71">mbs_per_slice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="191:13" pos:end="191:47"><expr pos:start="191:13" pos:end="191:46"><call pos:start="191:13" pos:end="191:46"><name pos:start="191:13" pos:end="191:31">bytestream_put_byte</name><argument_list pos:start="191:32" pos:end="191:46">(<argument pos:start="191:33" pos:end="191:42"><expr pos:start="191:33" pos:end="191:42"><operator pos:start="191:33" pos:end="191:33">&amp;</operator><name pos:start="191:34" pos:end="191:42">slice_hdr</name></expr></argument>, <argument pos:start="191:45" pos:end="191:45"><expr pos:start="191:45" pos:end="191:45"><name pos:start="191:45" pos:end="191:45">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:69"><expr pos:start="193:13" pos:end="193:68"><name pos:start="193:13" pos:end="193:22">slice_size</name> <operator pos:start="193:24" pos:end="193:24">=</operator> <name pos:start="193:26" pos:end="193:39">slice_hdr_size</name> <operator pos:start="193:41" pos:end="193:41">+</operator> <name pos:start="193:43" pos:end="193:68"><name pos:start="193:43" pos:end="193:47">sizes</name><index pos:start="193:48" pos:end="193:68">[<expr pos:start="193:49" pos:end="193:67"><name pos:start="193:49" pos:end="193:63"><name pos:start="193:49" pos:end="193:51">ctx</name><operator pos:start="193:52" pos:end="193:53">-&gt;</operator><name pos:start="193:54" pos:end="193:63">num_planes</name></name> <operator pos:start="193:65" pos:end="193:65">-</operator> <literal type="number" pos:start="193:67" pos:end="193:67">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="195:13" pos:end="201:13">for <control pos:start="195:17" pos:end="195:53">(<init pos:start="195:18" pos:end="195:23"><expr pos:start="195:18" pos:end="195:22"><name pos:start="195:18" pos:end="195:18">i</name> <operator pos:start="195:20" pos:end="195:20">=</operator> <literal type="number" pos:start="195:22" pos:end="195:22">0</literal></expr>;</init> <condition pos:start="195:25" pos:end="195:48"><expr pos:start="195:25" pos:end="195:47"><name pos:start="195:25" pos:end="195:25">i</name> <operator pos:start="195:27" pos:end="195:27">&lt;</operator> <name pos:start="195:29" pos:end="195:43"><name pos:start="195:29" pos:end="195:31">ctx</name><operator pos:start="195:32" pos:end="195:33">-&gt;</operator><name pos:start="195:34" pos:end="195:43">num_planes</name></name> <operator pos:start="195:45" pos:end="195:45">-</operator> <literal type="number" pos:start="195:47" pos:end="195:47">1</literal></expr>;</condition> <incr pos:start="195:50" pos:end="195:52"><expr pos:start="195:50" pos:end="195:52"><name pos:start="195:50" pos:end="195:50">i</name><operator pos:start="195:51" pos:end="195:52">++</operator></expr></incr>)</control> <block pos:start="195:55" pos:end="201:13">{<block_content pos:start="197:17" pos:end="199:39">

                <expr_stmt pos:start="197:17" pos:end="197:58"><expr pos:start="197:17" pos:end="197:57"><call pos:start="197:17" pos:end="197:57"><name pos:start="197:17" pos:end="197:35">bytestream_put_be16</name><argument_list pos:start="197:36" pos:end="197:57">(<argument pos:start="197:37" pos:end="197:46"><expr pos:start="197:37" pos:end="197:46"><operator pos:start="197:37" pos:end="197:37">&amp;</operator><name pos:start="197:38" pos:end="197:46">slice_hdr</name></expr></argument>, <argument pos:start="197:49" pos:end="197:56"><expr pos:start="197:49" pos:end="197:56"><name pos:start="197:49" pos:end="197:56"><name pos:start="197:49" pos:end="197:53">sizes</name><index pos:start="197:54" pos:end="197:56">[<expr pos:start="197:55" pos:end="197:55"><name pos:start="197:55" pos:end="197:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:39"><expr pos:start="199:17" pos:end="199:38"><name pos:start="199:17" pos:end="199:26">slice_size</name> <operator pos:start="199:28" pos:end="199:29">+=</operator> <name pos:start="199:31" pos:end="199:38"><name pos:start="199:31" pos:end="199:35">sizes</name><index pos:start="199:36" pos:end="199:38">[<expr pos:start="199:37" pos:end="199:37"><name pos:start="199:37" pos:end="199:37">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="203:13" pos:end="203:58"><expr pos:start="203:13" pos:end="203:57"><call pos:start="203:13" pos:end="203:57"><name pos:start="203:13" pos:end="203:31">bytestream_put_be16</name><argument_list pos:start="203:32" pos:end="203:57">(<argument pos:start="203:33" pos:end="203:44"><expr pos:start="203:33" pos:end="203:44"><operator pos:start="203:33" pos:end="203:33">&amp;</operator><name pos:start="203:34" pos:end="203:44">slice_sizes</name></expr></argument>, <argument pos:start="203:47" pos:end="203:56"><expr pos:start="203:47" pos:end="203:56"><name pos:start="203:47" pos:end="203:56">slice_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:47"><expr pos:start="205:13" pos:end="205:46"><name pos:start="205:13" pos:end="205:15">buf</name> <operator pos:start="205:17" pos:end="205:18">+=</operator> <name pos:start="205:20" pos:end="205:29">slice_size</name> <operator pos:start="205:31" pos:end="205:31">-</operator> <name pos:start="205:33" pos:end="205:46">slice_hdr_size</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="213:5" pos:end="213:18"><expr pos:start="213:5" pos:end="213:17"><name pos:start="213:5" pos:end="213:12">orig_buf</name> <operator pos:start="213:14" pos:end="213:15">-=</operator> <literal type="number" pos:start="213:17" pos:end="213:17">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:32"><expr pos:start="215:5" pos:end="215:31"><name pos:start="215:5" pos:end="215:14">frame_size</name> <operator pos:start="215:16" pos:end="215:16">=</operator> <name pos:start="215:18" pos:end="215:20">buf</name> <operator pos:start="215:22" pos:end="215:22">-</operator> <name pos:start="215:24" pos:end="215:31">orig_buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:46"><expr pos:start="217:5" pos:end="217:45"><name pos:start="217:5" pos:end="217:16">picture_size</name> <operator pos:start="217:18" pos:end="217:18">=</operator> <name pos:start="217:20" pos:end="217:22">buf</name> <operator pos:start="217:24" pos:end="217:24">-</operator> <name pos:start="217:26" pos:end="217:41">picture_size_pos</name> <operator pos:start="217:43" pos:end="217:43">-</operator> <literal type="number" pos:start="217:45" pos:end="217:45">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:47"><expr pos:start="219:5" pos:end="219:46"><call pos:start="219:5" pos:end="219:46"><name pos:start="219:5" pos:end="219:23">bytestream_put_be32</name><argument_list pos:start="219:24" pos:end="219:46">(<argument pos:start="219:25" pos:end="219:33"><expr pos:start="219:25" pos:end="219:33"><operator pos:start="219:25" pos:end="219:25">&amp;</operator><name pos:start="219:26" pos:end="219:33">orig_buf</name></expr></argument>, <argument pos:start="219:36" pos:end="219:45"><expr pos:start="219:36" pos:end="219:45"><name pos:start="219:36" pos:end="219:45">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:57"><expr pos:start="221:5" pos:end="221:56"><call pos:start="221:5" pos:end="221:56"><name pos:start="221:5" pos:end="221:23">bytestream_put_be32</name><argument_list pos:start="221:24" pos:end="221:56">(<argument pos:start="221:25" pos:end="221:41"><expr pos:start="221:25" pos:end="221:41"><operator pos:start="221:25" pos:end="221:25">&amp;</operator><name pos:start="221:26" pos:end="221:41">picture_size_pos</name></expr></argument>, <argument pos:start="221:44" pos:end="221:55"><expr pos:start="221:44" pos:end="221:55"><name pos:start="221:44" pos:end="221:55">picture_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:29"><expr pos:start="225:5" pos:end="225:28"><name pos:start="225:5" pos:end="225:13"><name pos:start="225:5" pos:end="225:7">pkt</name><operator pos:start="225:8" pos:end="225:9">-&gt;</operator><name pos:start="225:10" pos:end="225:13">size</name></name>   <operator pos:start="225:17" pos:end="225:17">=</operator> <name pos:start="225:19" pos:end="225:28">frame_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:34"><expr pos:start="227:5" pos:end="227:33"><name pos:start="227:5" pos:end="227:14"><name pos:start="227:5" pos:end="227:7">pkt</name><operator pos:start="227:8" pos:end="227:9">-&gt;</operator><name pos:start="227:10" pos:end="227:14">flags</name></name> <operator pos:start="227:16" pos:end="227:17">|=</operator> <name pos:start="227:19" pos:end="227:33">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:20"><expr pos:start="229:5" pos:end="229:19"><operator pos:start="229:5" pos:end="229:5">*</operator><name pos:start="229:6" pos:end="229:15">got_packet</name> <operator pos:start="229:17" pos:end="229:17">=</operator> <literal type="number" pos:start="229:19" pos:end="229:19">1</literal></expr>;</expr_stmt>



    <return pos:start="233:5" pos:end="233:13">return <expr pos:start="233:12" pos:end="233:12"><literal type="number" pos:start="233:12" pos:end="233:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
