<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19335.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">mmap_frag</name><parameter_list pos:start="1:21" pos:end="5:67">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:30">abi_ulong</name></type> <name pos:start="1:32" pos:end="1:41">real_start</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:36"><decl pos:start="3:22" pos:end="3:36"><type pos:start="3:22" pos:end="3:36"><name pos:start="3:22" pos:end="3:30">abi_ulong</name></type> <name pos:start="3:32" pos:end="3:36">start</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:51"><decl pos:start="3:39" pos:end="3:51"><type pos:start="3:39" pos:end="3:51"><name pos:start="3:39" pos:end="3:47">abi_ulong</name></type> <name pos:start="3:49" pos:end="3:51">end</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:29"><decl pos:start="5:22" pos:end="5:29"><type pos:start="5:22" pos:end="5:29"><name pos:start="5:22" pos:end="5:24">int</name></type> <name pos:start="5:26" pos:end="5:29">prot</name></decl></parameter>, <parameter pos:start="5:32" pos:end="5:40"><decl pos:start="5:32" pos:end="5:40"><type pos:start="5:32" pos:end="5:40"><name pos:start="5:32" pos:end="5:34">int</name></type> <name pos:start="5:36" pos:end="5:40">flags</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:48"><decl pos:start="5:43" pos:end="5:48"><type pos:start="5:43" pos:end="5:48"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:48">fd</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:66"><decl pos:start="5:51" pos:end="5:66"><type pos:start="5:51" pos:end="5:66"><name pos:start="5:51" pos:end="5:59">abi_ulong</name></type> <name pos:start="5:61" pos:end="5:66">offset</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="109:1">{<block_content pos:start="9:5" pos:end="107:13">

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">abi_ulong</name></type> <name pos:start="9:15" pos:end="9:22">real_end</name></decl>, <decl pos:start="9:25" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:13"/><name pos:start="9:25" pos:end="9:28">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:20">host_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">prot1</name></decl>, <decl pos:start="13:16" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:23">prot_new</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:12">real_end</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:25">real_start</name> <operator pos:start="17:27" pos:end="17:27">+</operator> <name pos:start="17:29" pos:end="17:47">qemu_host_page_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:14">host_start</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:32"><name pos:start="19:18" pos:end="19:20">g2h</name><argument_list pos:start="19:21" pos:end="19:32">(<argument pos:start="19:22" pos:end="19:31"><expr pos:start="19:22" pos:end="19:31"><name pos:start="19:22" pos:end="19:31">real_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:68">/* get the protection of the target pages outside the mapping */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:14"><expr pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:9">prot1</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="33:5">for<control pos:start="27:8" pos:end="27:51">(<init pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:12">addr</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:25">real_start</name></expr>;</init> <condition pos:start="27:28" pos:end="27:43"><expr pos:start="27:28" pos:end="27:42"><name pos:start="27:28" pos:end="27:31">addr</name> <operator pos:start="27:33" pos:end="27:33">&lt;</operator> <name pos:start="27:35" pos:end="27:42">real_end</name></expr>;</condition> <incr pos:start="27:45" pos:end="27:50"><expr pos:start="27:45" pos:end="27:50"><name pos:start="27:45" pos:end="27:48">addr</name><operator pos:start="27:49" pos:end="27:50">++</operator></expr></incr>)</control> <block pos:start="27:53" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:42">

        <if_stmt pos:start="29:9" pos:end="31:42"><if pos:start="29:9" pos:end="31:42">if <condition pos:start="29:12" pos:end="29:40">(<expr pos:start="29:13" pos:end="29:39"><name pos:start="29:13" pos:end="29:16">addr</name> <operator pos:start="29:18" pos:end="29:18">&lt;</operator> <name pos:start="29:20" pos:end="29:24">start</name> <operator pos:start="29:26" pos:end="29:27">||</operator> <name pos:start="29:29" pos:end="29:32">addr</name> <operator pos:start="29:34" pos:end="29:35">&gt;=</operator> <name pos:start="29:37" pos:end="29:39">end</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:42"><block_content pos:start="31:13" pos:end="31:42">

            <expr_stmt pos:start="31:13" pos:end="31:42"><expr pos:start="31:13" pos:end="31:41"><name pos:start="31:13" pos:end="31:17">prot1</name> <operator pos:start="31:19" pos:end="31:20">|=</operator> <call pos:start="31:22" pos:end="31:41"><name pos:start="31:22" pos:end="31:35">page_get_flags</name><argument_list pos:start="31:36" pos:end="31:41">(<argument pos:start="31:37" pos:end="31:40"><expr pos:start="31:37" pos:end="31:40"><name pos:start="31:37" pos:end="31:40">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="37:5" pos:end="51:5"><if pos:start="37:5" pos:end="51:5">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:13">prot1</name> <operator pos:start="37:15" pos:end="37:16">==</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>)</condition> <block pos:start="37:21" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:21">

        <comment type="block" pos:start="39:9" pos:end="39:51">/* no page was there, so we allocate one */</comment>

        <decl_stmt pos:start="41:9" pos:end="43:53"><decl pos:start="41:9" pos:end="43:52"><type pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:12">void</name> <modifier pos:start="41:14" pos:end="41:14">*</modifier></type><name pos:start="41:15" pos:end="41:15">p</name> <init pos:start="41:17" pos:end="43:52">= <expr pos:start="41:19" pos:end="43:52"><call pos:start="41:19" pos:end="43:52"><name pos:start="41:19" pos:end="41:22">mmap</name><argument_list pos:start="41:23" pos:end="43:52">(<argument pos:start="41:24" pos:end="41:33"><expr pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:33">host_start</name></expr></argument>, <argument pos:start="41:36" pos:end="41:54"><expr pos:start="41:36" pos:end="41:54"><name pos:start="41:36" pos:end="41:54">qemu_host_page_size</name></expr></argument>, <argument pos:start="41:57" pos:end="41:60"><expr pos:start="41:57" pos:end="41:60"><name pos:start="41:57" pos:end="41:60">prot</name></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:44"><expr pos:start="43:24" pos:end="43:44"><name pos:start="43:24" pos:end="43:28">flags</name> <operator pos:start="43:30" pos:end="43:30">|</operator> <name pos:start="43:32" pos:end="43:44">MAP_ANONYMOUS</name></expr></argument>, <argument pos:start="43:47" pos:end="43:48"><expr pos:start="43:47" pos:end="43:48"><operator pos:start="43:47" pos:end="43:47">-</operator><literal type="number" pos:start="43:48" pos:end="43:48">1</literal></expr></argument>, <argument pos:start="43:51" pos:end="43:51"><expr pos:start="43:51" pos:end="43:51"><literal type="number" pos:start="43:51" pos:end="43:51">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="47:22"><if pos:start="45:9" pos:end="47:22">if <condition pos:start="45:12" pos:end="45:28">(<expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:13">p</name> <operator pos:start="45:15" pos:end="45:16">==</operator> <name pos:start="45:18" pos:end="45:27">MAP_FAILED</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:22"><block_content pos:start="47:13" pos:end="47:22">

            <return pos:start="47:13" pos:end="47:22">return <expr pos:start="47:20" pos:end="47:21"><operator pos:start="47:20" pos:end="47:20">-</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:21"><expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:13">prot1</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:20">prot</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:9">prot1</name> <operator pos:start="53:11" pos:end="53:12">&amp;=</operator> <name pos:start="53:14" pos:end="53:22">PAGE_BITS</name></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:28"><expr pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:12">prot_new</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:19">prot</name> <operator pos:start="57:21" pos:end="57:21">|</operator> <name pos:start="57:23" pos:end="57:27">prot1</name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="105:5"><if pos:start="59:5" pos:end="95:5">if <condition pos:start="59:8" pos:end="59:33">(<expr pos:start="59:9" pos:end="59:32"><operator pos:start="59:9" pos:end="59:9">!</operator><operator pos:start="59:10" pos:end="59:10">(</operator><name pos:start="59:11" pos:end="59:15">flags</name> <operator pos:start="59:17" pos:end="59:17">&amp;</operator> <name pos:start="59:19" pos:end="59:31">MAP_ANONYMOUS</name><operator pos:start="59:32" pos:end="59:32">)</operator></expr>)</condition> <block pos:start="59:35" pos:end="95:5">{<block_content pos:start="65:9" pos:end="93:64">

        <comment type="block" pos:start="61:9" pos:end="63:51">/* msync() won't work here, so we return an error if write is

           possible while it is a shared mapping */</comment>

        <if_stmt pos:start="65:9" pos:end="69:27"><if pos:start="65:9" pos:end="69:27">if <condition pos:start="65:12" pos:end="67:32">(<expr pos:start="65:13" pos:end="67:31"><operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:18">flags</name> <operator pos:start="65:20" pos:end="65:20">&amp;</operator> <name pos:start="65:22" pos:end="65:29">MAP_TYPE</name><operator pos:start="65:30" pos:end="65:30">)</operator> <operator pos:start="65:32" pos:end="65:33">==</operator> <name pos:start="65:35" pos:end="65:44">MAP_SHARED</name> <operator pos:start="65:46" pos:end="65:47">&amp;&amp;</operator>

            <operator pos:start="67:13" pos:end="67:13">(</operator><name pos:start="67:14" pos:end="67:17">prot</name> <operator pos:start="67:19" pos:end="67:19">&amp;</operator> <name pos:start="67:21" pos:end="67:30">PROT_WRITE</name><operator pos:start="67:31" pos:end="67:31">)</operator></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:27"><block_content pos:start="69:13" pos:end="69:27">

            <return pos:start="69:13" pos:end="69:27">return <expr pos:start="69:20" pos:end="69:26"><operator pos:start="69:20" pos:end="69:20">-</operator><name pos:start="69:21" pos:end="69:26">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="73:9" pos:end="73:50">/* adjust protection to be able to read */</comment>

        <if_stmt pos:start="75:9" pos:end="77:74"><if pos:start="75:9" pos:end="77:74">if <condition pos:start="75:12" pos:end="75:34">(<expr pos:start="75:13" pos:end="75:33"><operator pos:start="75:13" pos:end="75:13">!</operator><operator pos:start="75:14" pos:end="75:14">(</operator><name pos:start="75:15" pos:end="75:19">prot1</name> <operator pos:start="75:21" pos:end="75:21">&amp;</operator> <name pos:start="75:23" pos:end="75:32">PROT_WRITE</name><operator pos:start="75:33" pos:end="75:33">)</operator></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:74"><block_content pos:start="77:13" pos:end="77:74">

            <expr_stmt pos:start="77:13" pos:end="77:74"><expr pos:start="77:13" pos:end="77:73"><call pos:start="77:13" pos:end="77:73"><name pos:start="77:13" pos:end="77:20">mprotect</name><argument_list pos:start="77:21" pos:end="77:73">(<argument pos:start="77:22" pos:end="77:31"><expr pos:start="77:22" pos:end="77:31"><name pos:start="77:22" pos:end="77:31">host_start</name></expr></argument>, <argument pos:start="77:34" pos:end="77:52"><expr pos:start="77:34" pos:end="77:52"><name pos:start="77:34" pos:end="77:52">qemu_host_page_size</name></expr></argument>, <argument pos:start="77:55" pos:end="77:72"><expr pos:start="77:55" pos:end="77:72"><name pos:start="77:55" pos:end="77:59">prot1</name> <operator pos:start="77:61" pos:end="77:61">|</operator> <name pos:start="77:63" pos:end="77:72">PROT_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="81:9" pos:end="81:46">/* read the corresponding file data */</comment>

        <if_stmt pos:start="83:9" pos:end="85:22"><if pos:start="83:9" pos:end="85:22">if <condition pos:start="83:12" pos:end="83:61">(<expr pos:start="83:13" pos:end="83:60"><call pos:start="83:13" pos:end="83:54"><name pos:start="83:13" pos:end="83:17">pread</name><argument_list pos:start="83:18" pos:end="83:54">(<argument pos:start="83:19" pos:end="83:20"><expr pos:start="83:19" pos:end="83:20"><name pos:start="83:19" pos:end="83:20">fd</name></expr></argument>, <argument pos:start="83:23" pos:end="83:32"><expr pos:start="83:23" pos:end="83:32"><call pos:start="83:23" pos:end="83:32"><name pos:start="83:23" pos:end="83:25">g2h</name><argument_list pos:start="83:26" pos:end="83:32">(<argument pos:start="83:27" pos:end="83:31"><expr pos:start="83:27" pos:end="83:31"><name pos:start="83:27" pos:end="83:31">start</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:35" pos:end="83:45"><expr pos:start="83:35" pos:end="83:45"><name pos:start="83:35" pos:end="83:37">end</name> <operator pos:start="83:39" pos:end="83:39">-</operator> <name pos:start="83:41" pos:end="83:45">start</name></expr></argument>, <argument pos:start="83:48" pos:end="83:53"><expr pos:start="83:48" pos:end="83:53"><name pos:start="83:48" pos:end="83:53">offset</name></expr></argument>)</argument_list></call> <operator pos:start="83:56" pos:end="83:57">==</operator> <operator pos:start="83:59" pos:end="83:59">-</operator><literal type="number" pos:start="83:60" pos:end="83:60">1</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:22"><block_content pos:start="85:13" pos:end="85:22">

            <return pos:start="85:13" pos:end="85:22">return <expr pos:start="85:20" pos:end="85:21"><operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="89:9" pos:end="89:34">/* put final protection */</comment>

        <if_stmt pos:start="91:9" pos:end="93:64"><if pos:start="91:9" pos:end="93:64">if <condition pos:start="91:12" pos:end="91:45">(<expr pos:start="91:13" pos:end="91:44"><name pos:start="91:13" pos:end="91:20">prot_new</name> <operator pos:start="91:22" pos:end="91:23">!=</operator> <operator pos:start="91:25" pos:end="91:25">(</operator><name pos:start="91:26" pos:end="91:30">prot1</name> <operator pos:start="91:32" pos:end="91:32">|</operator> <name pos:start="91:34" pos:end="91:43">PROT_WRITE</name><operator pos:start="91:44" pos:end="91:44">)</operator></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:64"><block_content pos:start="93:13" pos:end="93:64">

            <expr_stmt pos:start="93:13" pos:end="93:64"><expr pos:start="93:13" pos:end="93:63"><call pos:start="93:13" pos:end="93:63"><name pos:start="93:13" pos:end="93:20">mprotect</name><argument_list pos:start="93:21" pos:end="93:63">(<argument pos:start="93:22" pos:end="93:31"><expr pos:start="93:22" pos:end="93:31"><name pos:start="93:22" pos:end="93:31">host_start</name></expr></argument>, <argument pos:start="93:34" pos:end="93:52"><expr pos:start="93:34" pos:end="93:52"><name pos:start="93:34" pos:end="93:52">qemu_host_page_size</name></expr></argument>, <argument pos:start="93:55" pos:end="93:62"><expr pos:start="93:55" pos:end="93:62"><name pos:start="93:55" pos:end="93:62">prot_new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="105:5">else <block pos:start="95:12" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:9">

        <comment type="block" pos:start="97:9" pos:end="97:40">/* just update the protection */</comment>

        <if_stmt pos:start="99:9" pos:end="103:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:30">(<expr pos:start="99:13" pos:end="99:29"><name pos:start="99:13" pos:end="99:20">prot_new</name> <operator pos:start="99:22" pos:end="99:23">!=</operator> <name pos:start="99:25" pos:end="99:29">prot1</name></expr>)</condition> <block pos:start="99:32" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:64">

            <expr_stmt pos:start="101:13" pos:end="101:64"><expr pos:start="101:13" pos:end="101:63"><call pos:start="101:13" pos:end="101:63"><name pos:start="101:13" pos:end="101:20">mprotect</name><argument_list pos:start="101:21" pos:end="101:63">(<argument pos:start="101:22" pos:end="101:31"><expr pos:start="101:22" pos:end="101:31"><name pos:start="101:22" pos:end="101:31">host_start</name></expr></argument>, <argument pos:start="101:34" pos:end="101:52"><expr pos:start="101:34" pos:end="101:52"><name pos:start="101:34" pos:end="101:52">qemu_host_page_size</name></expr></argument>, <argument pos:start="101:55" pos:end="101:62"><expr pos:start="101:55" pos:end="101:62"><name pos:start="101:55" pos:end="101:62">prot_new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
