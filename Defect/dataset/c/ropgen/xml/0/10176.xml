<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10176.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">sdp_read_header</name><parameter_list pos:start="1:27" pos:end="3:50">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:45">AVFormatParameters</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:49">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">RTSPState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rt</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">RTSPStream</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:23">rtsp_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">size</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:15">i</name></decl>, <decl pos:start="11:18" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:20">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:17">content</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:18"><name pos:start="15:10" pos:end="15:12">url</name><index pos:start="15:13" pos:end="15:18">[<expr pos:start="15:14" pos:end="15:17"><literal type="number" pos:start="15:14" pos:end="15:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:33">/* read the whole sdp file */</comment>

    <comment type="block" pos:start="21:5" pos:end="21:29">/* XXX: better loading */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:11">content</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:37"><name pos:start="23:15" pos:end="23:23">av_malloc</name><argument_list pos:start="23:24" pos:end="23:37">(<argument pos:start="23:25" pos:end="23:36"><expr pos:start="23:25" pos:end="23:36"><name pos:start="23:25" pos:end="23:36">SDP_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:56"><expr pos:start="25:5" pos:end="25:55"><name pos:start="25:5" pos:end="25:8">size</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:55"><name pos:start="25:12" pos:end="25:21">get_buffer</name><argument_list pos:start="25:22" pos:end="25:55">(<argument pos:start="25:23" pos:end="25:27"><expr pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:23">s</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:27">pb</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:36"><expr pos:start="25:30" pos:end="25:36"><name pos:start="25:30" pos:end="25:36">content</name></expr></argument>, <argument pos:start="25:39" pos:end="25:54"><expr pos:start="25:39" pos:end="25:54"><name pos:start="25:39" pos:end="25:50">SDP_MAX_SIZE</name> <operator pos:start="25:52" pos:end="25:52">-</operator> <literal type="number" pos:start="25:54" pos:end="25:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">size</name> <operator pos:start="27:14" pos:end="27:15">&lt;=</operator> <literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr>)</condition> <block pos:start="27:20" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:35">

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><call pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:15">av_free</name><argument_list pos:start="29:16" pos:end="29:24">(<argument pos:start="29:17" pos:end="29:23"><expr pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:23">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:35">return <expr pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:11">content</name><index pos:start="35:12" pos:end="35:17">[<expr pos:start="35:13" pos:end="35:16"><name pos:start="35:13" pos:end="35:16">size</name></expr>]</index></name> <operator pos:start="35:19" pos:end="35:19">=</operator><literal type="char" pos:start="35:20" pos:end="35:23">'\0'</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><call pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:13">sdp_parse</name><argument_list pos:start="39:14" pos:end="39:25">(<argument pos:start="39:15" pos:end="39:15"><expr pos:start="39:15" pos:end="39:15"><name pos:start="39:15" pos:end="39:15">s</name></expr></argument>, <argument pos:start="39:18" pos:end="39:24"><expr pos:start="39:18" pos:end="39:24"><name pos:start="39:18" pos:end="39:24">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:21"><expr pos:start="41:5" pos:end="41:20"><call pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:11">av_free</name><argument_list pos:start="41:12" pos:end="41:20">(<argument pos:start="41:13" pos:end="41:19"><expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:19">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:30">/* open each RTP stream */</comment>

    <for pos:start="47:5" pos:end="75:5">for<control pos:start="47:8" pos:end="47:38">(<init pos:start="47:9" pos:end="47:12"><expr pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:9">i</name><operator pos:start="47:10" pos:end="47:10">=</operator><literal type="number" pos:start="47:11" pos:end="47:11">0</literal></expr>;</init><condition pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:13">i</name><operator pos:start="47:14" pos:end="47:14">&lt;</operator><name pos:start="47:15" pos:end="47:33"><name pos:start="47:15" pos:end="47:16">rt</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:33">nb_rtsp_streams</name></name></expr>;</condition><incr pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><name pos:start="47:35" pos:end="47:35">i</name><operator pos:start="47:36" pos:end="47:37">++</operator></expr></incr>)</control> <block pos:start="47:40" pos:end="75:5">{<block_content pos:start="49:9" pos:end="73:22">

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:15">rtsp_st</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:37"><name pos:start="49:19" pos:end="49:20">rt</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:34">rtsp_streams</name><index pos:start="49:35" pos:end="49:37">[<expr pos:start="49:36" pos:end="49:36"><name pos:start="49:36" pos:end="49:36">i</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="61:35"><expr pos:start="53:9" pos:end="61:34"><call pos:start="53:9" pos:end="61:34"><name pos:start="53:9" pos:end="53:16">snprintf</name><argument_list pos:start="53:17" pos:end="61:34">(<argument pos:start="53:18" pos:end="53:20"><expr pos:start="53:18" pos:end="53:20"><name pos:start="53:18" pos:end="53:20">url</name></expr></argument>, <argument pos:start="53:23" pos:end="53:33"><expr pos:start="53:23" pos:end="53:33"><sizeof pos:start="53:23" pos:end="53:33">sizeof<argument_list pos:start="53:29" pos:end="53:33">(<argument pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:32">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="53:36" pos:end="53:68"><expr pos:start="53:36" pos:end="53:68"><literal type="string" pos:start="53:36" pos:end="53:68">"rtp://%s:%d?localport=%d&amp;ttl=%d"</literal></expr></argument>,

                 <argument pos:start="55:18" pos:end="55:43"><expr pos:start="55:18" pos:end="55:43"><call pos:start="55:18" pos:end="55:43"><name pos:start="55:18" pos:end="55:26">inet_ntoa</name><argument_list pos:start="55:27" pos:end="55:43">(<argument pos:start="55:28" pos:end="55:42"><expr pos:start="55:28" pos:end="55:42"><name pos:start="55:28" pos:end="55:42"><name pos:start="55:28" pos:end="55:34">rtsp_st</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:42">sdp_ip</name></name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="57:18" pos:end="57:34"><expr pos:start="57:18" pos:end="57:34"><name pos:start="57:18" pos:end="57:34"><name pos:start="57:18" pos:end="57:24">rtsp_st</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:34">sdp_port</name></name></expr></argument>,

                 <argument pos:start="59:18" pos:end="59:34"><expr pos:start="59:18" pos:end="59:34"><name pos:start="59:18" pos:end="59:34"><name pos:start="59:18" pos:end="59:24">rtsp_st</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:34">sdp_port</name></name></expr></argument>,

                 <argument pos:start="61:18" pos:end="61:33"><expr pos:start="61:18" pos:end="61:33"><name pos:start="61:18" pos:end="61:33"><name pos:start="61:18" pos:end="61:24">rtsp_st</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:33">sdp_ttl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:62">(<expr pos:start="63:13" pos:end="63:61"><call pos:start="63:13" pos:end="63:57"><name pos:start="63:13" pos:end="63:20">url_open</name><argument_list pos:start="63:21" pos:end="63:57">(<argument pos:start="63:22" pos:end="63:41"><expr pos:start="63:22" pos:end="63:41"><operator pos:start="63:22" pos:end="63:22">&amp;</operator><name pos:start="63:23" pos:end="63:41"><name pos:start="63:23" pos:end="63:29">rtsp_st</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:41">rtp_handle</name></name></expr></argument>, <argument pos:start="63:44" pos:end="63:46"><expr pos:start="63:44" pos:end="63:46"><name pos:start="63:44" pos:end="63:46">url</name></expr></argument>, <argument pos:start="63:49" pos:end="63:56"><expr pos:start="63:49" pos:end="63:56"><name pos:start="63:49" pos:end="63:56">URL_RDWR</name></expr></argument>)</argument_list></call> <operator pos:start="63:59" pos:end="63:59">&lt;</operator> <literal type="number" pos:start="63:61" pos:end="63:61">0</literal></expr>)</condition> <block pos:start="63:64" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:22">

            <expr_stmt pos:start="65:13" pos:end="65:38"><expr pos:start="65:13" pos:end="65:37"><name pos:start="65:13" pos:end="65:15">err</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="67:13" pos:end="67:22">goto <name pos:start="67:18" pos:end="67:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="71:9" pos:end="73:22"><if pos:start="71:9" pos:end="73:22">if <condition pos:start="71:12" pos:end="71:56">(<expr pos:start="71:13" pos:end="71:55"><operator pos:start="71:13" pos:end="71:13">(</operator><name pos:start="71:14" pos:end="71:16">err</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="71:54"><name pos:start="71:20" pos:end="71:42">rtsp_open_transport_ctx</name><argument_list pos:start="71:43" pos:end="71:54">(<argument pos:start="71:44" pos:end="71:44"><expr pos:start="71:44" pos:end="71:44"><name pos:start="71:44" pos:end="71:44">s</name></expr></argument>, <argument pos:start="71:47" pos:end="71:53"><expr pos:start="71:47" pos:end="71:53"><name pos:start="71:47" pos:end="71:53">rtsp_st</name></expr></argument>)</argument_list></call><operator pos:start="71:55" pos:end="71:55">)</operator></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:22"><block_content pos:start="73:13" pos:end="73:22">

            <goto pos:start="73:13" pos:end="73:22">goto <name pos:start="73:18" pos:end="73:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

 <label pos:start="79:2" pos:end="79:6"><name pos:start="79:2" pos:end="79:5">fail</name>:</label>

    <expr_stmt pos:start="81:5" pos:end="81:27"><expr pos:start="81:5" pos:end="81:26"><call pos:start="81:5" pos:end="81:26"><name pos:start="81:5" pos:end="81:22">rtsp_close_streams</name><argument_list pos:start="81:23" pos:end="81:26">(<argument pos:start="81:24" pos:end="81:25"><expr pos:start="81:24" pos:end="81:25"><name pos:start="81:24" pos:end="81:25">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:15">return <expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
