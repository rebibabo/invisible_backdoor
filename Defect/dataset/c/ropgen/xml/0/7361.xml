<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7361.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">store_word</name><parameter_list pos:start="1:23" pos:end="3:35">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:36">DBDMA_channel</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">ch</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:49"><decl pos:start="1:43" pos:end="1:49"><type pos:start="1:43" pos:end="1:49"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:49">key</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:59">uint32_t</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:34"><decl pos:start="3:23" pos:end="3:34"><type pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:30">uint16_t</name></type> <name pos:start="3:32" pos:end="3:34">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:31">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">dbdma_cmd</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:22">current</name> <init pos:start="7:24" pos:end="7:37">= <expr pos:start="7:26" pos:end="7:37"><operator pos:start="7:26" pos:end="7:26">&amp;</operator><name pos:start="7:27" pos:end="7:37"><name pos:start="7:27" pos:end="7:28">ch</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:37">current</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><call pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:17">DBDMA_DPRINTF</name><argument_list pos:start="13:18" pos:end="13:33">(<argument pos:start="13:19" pos:end="13:32"><expr pos:start="13:19" pos:end="13:32"><literal type="string" pos:start="13:19" pos:end="13:32">"store_word\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:36">/* only implements KEY_SYSTEM */</comment>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:11">key</name> <operator pos:start="21:13" pos:end="21:14">!=</operator> <name pos:start="21:16" pos:end="21:25">KEY_SYSTEM</name></expr>)</condition> <block pos:start="21:28" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:15">

        <expr_stmt pos:start="23:9" pos:end="23:65"><expr pos:start="23:9" pos:end="23:64"><call pos:start="23:9" pos:end="23:64"><name pos:start="23:9" pos:end="23:14">printf</name><argument_list pos:start="23:15" pos:end="23:64">(<argument pos:start="23:16" pos:end="23:58"><expr pos:start="23:16" pos:end="23:58"><literal type="string" pos:start="23:16" pos:end="23:58">"DBDMA: STORE_WORD, unimplemented key %x\n"</literal></expr></argument>, <argument pos:start="23:61" pos:end="23:63"><expr pos:start="23:61" pos:end="23:63"><name pos:start="23:61" pos:end="23:63">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:25"><expr pos:start="25:9" pos:end="25:24"><call pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:20">kill_channel</name><argument_list pos:start="25:21" pos:end="25:24">(<argument pos:start="25:22" pos:end="25:23"><expr pos:start="25:22" pos:end="25:23"><name pos:start="25:22" pos:end="25:23">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:7">val</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <name pos:start="33:11" pos:end="33:26"><name pos:start="33:11" pos:end="33:17">current</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:26">cmd_dep</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:19"><if pos:start="35:5" pos:end="37:19">if <condition pos:start="35:8" pos:end="35:17">(<expr pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:11">len</name> <operator pos:start="35:13" pos:end="35:14">==</operator> <literal type="number" pos:start="35:16" pos:end="35:16">2</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:19"><block_content pos:start="37:9" pos:end="37:19">

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:11">val</name> <operator pos:start="37:13" pos:end="37:15">&gt;&gt;=</operator> <literal type="number" pos:start="37:17" pos:end="37:18">16</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="39:5" pos:end="41:19">else if <condition pos:start="39:13" pos:end="39:22">(<expr pos:start="39:14" pos:end="39:21"><name pos:start="39:14" pos:end="39:16">len</name> <operator pos:start="39:18" pos:end="39:19">==</operator> <literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:19"><block_content pos:start="41:9" pos:end="41:19">

        <expr_stmt pos:start="41:9" pos:end="41:19"><expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:11">val</name> <operator pos:start="41:13" pos:end="41:15">&gt;&gt;=</operator> <literal type="number" pos:start="41:17" pos:end="41:18">24</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:57"><expr pos:start="45:5" pos:end="45:56"><call pos:start="45:5" pos:end="45:56"><name pos:start="45:5" pos:end="45:29">cpu_physical_memory_write</name><argument_list pos:start="45:30" pos:end="45:56">(<argument pos:start="45:31" pos:end="45:34"><expr pos:start="45:31" pos:end="45:34"><name pos:start="45:31" pos:end="45:34">addr</name></expr></argument>, <argument pos:start="45:37" pos:end="45:50"><expr pos:start="45:37" pos:end="45:50"><operator pos:start="45:37" pos:end="45:37">(</operator><name pos:start="45:38" pos:end="45:44">uint8_t</name><operator pos:start="45:45" pos:end="45:45">*</operator><operator pos:start="45:46" pos:end="45:46">)</operator><operator pos:start="45:47" pos:end="45:47">&amp;</operator><name pos:start="45:48" pos:end="45:50">val</name></expr></argument>, <argument pos:start="45:53" pos:end="45:55"><expr pos:start="45:53" pos:end="45:55"><name pos:start="45:53" pos:end="45:55">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="51:18"><if pos:start="49:5" pos:end="51:18">if <condition pos:start="49:8" pos:end="49:29">(<expr pos:start="49:9" pos:end="49:28"><call pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:24">conditional_wait</name><argument_list pos:start="49:25" pos:end="49:28">(<argument pos:start="49:26" pos:end="49:27"><expr pos:start="49:26" pos:end="49:27"><name pos:start="49:26" pos:end="49:27">ch</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18">

        <goto pos:start="51:9" pos:end="51:18">goto <name pos:start="51:14" pos:end="51:17">wait</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:76"><expr pos:start="55:5" pos:end="55:75"><name pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:11">current</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:24">xfer_status</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <call pos:start="55:28" pos:end="55:75"><name pos:start="55:28" pos:end="55:38">cpu_to_le16</name><argument_list pos:start="55:39" pos:end="55:75">(<argument pos:start="55:40" pos:end="55:74"><expr pos:start="55:40" pos:end="55:74"><call pos:start="55:40" pos:end="55:74"><name pos:start="55:40" pos:end="55:50">be32_to_cpu</name><argument_list pos:start="55:51" pos:end="55:74">(<argument pos:start="55:52" pos:end="55:73"><expr pos:start="55:52" pos:end="55:73"><name pos:start="55:52" pos:end="55:73"><name pos:start="55:52" pos:end="55:53">ch</name><operator pos:start="55:54" pos:end="55:55">-&gt;</operator><name pos:start="55:56" pos:end="55:59">regs</name><index pos:start="55:60" pos:end="55:73">[<expr pos:start="55:61" pos:end="55:72"><name pos:start="55:61" pos:end="55:72">DBDMA_STATUS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:26"><expr pos:start="57:5" pos:end="57:25"><call pos:start="57:5" pos:end="57:25"><name pos:start="57:5" pos:end="57:21">dbdma_cmdptr_save</name><argument_list pos:start="57:22" pos:end="57:25">(<argument pos:start="57:23" pos:end="57:24"><expr pos:start="57:23" pos:end="57:24"><name pos:start="57:23" pos:end="57:24">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:50"><expr pos:start="59:5" pos:end="59:49"><name pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:6">ch</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:12">regs</name><index pos:start="59:13" pos:end="59:26">[<expr pos:start="59:14" pos:end="59:25"><name pos:start="59:14" pos:end="59:25">DBDMA_STATUS</name></expr>]</index></name> <operator pos:start="59:28" pos:end="59:29">&amp;=</operator> <call pos:start="59:31" pos:end="59:49"><name pos:start="59:31" pos:end="59:41">cpu_to_be32</name><argument_list pos:start="59:42" pos:end="59:49">(<argument pos:start="59:43" pos:end="59:48"><expr pos:start="59:43" pos:end="59:48"><operator pos:start="59:43" pos:end="59:43">~</operator><name pos:start="59:44" pos:end="59:48">FLUSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:30"><expr pos:start="63:5" pos:end="63:29"><call pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:25">conditional_interrupt</name><argument_list pos:start="63:26" pos:end="63:29">(<argument pos:start="63:27" pos:end="63:28"><expr pos:start="63:27" pos:end="63:28"><name pos:start="63:27" pos:end="63:28">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:13"><expr pos:start="65:5" pos:end="65:12"><call pos:start="65:5" pos:end="65:12"><name pos:start="65:5" pos:end="65:8">next</name><argument_list pos:start="65:9" pos:end="65:12">(<argument pos:start="65:10" pos:end="65:11"><expr pos:start="65:10" pos:end="65:11"><name pos:start="65:10" pos:end="65:11">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="69:1" pos:end="69:5"><name pos:start="69:1" pos:end="69:4">wait</name>:</label>

    <expr_stmt pos:start="71:5" pos:end="71:31"><expr pos:start="71:5" pos:end="71:30"><call pos:start="71:5" pos:end="71:30"><name pos:start="71:5" pos:end="71:20">qemu_bh_schedule</name><argument_list pos:start="71:21" pos:end="71:30">(<argument pos:start="71:22" pos:end="71:29"><expr pos:start="71:22" pos:end="71:29"><name pos:start="71:22" pos:end="71:29">dbdma_bh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
