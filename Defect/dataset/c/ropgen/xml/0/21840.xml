<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21840.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:32">ff_dsputil_init_x86</name><parameter_list pos:start="1:33" pos:end="1:70">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">DSPContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">c</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:69"><decl pos:start="1:49" pos:end="1:69"><type pos:start="1:49" pos:end="1:69"><name pos:start="1:49" pos:end="1:62">AVCodecContext</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:41">

    <decl_stmt pos:start="5:5" pos:end="10:0"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">cpu_flags</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><call pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:36">av_get_cpu_flags</name><argument_list pos:start="5:37" pos:end="5:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="9:1" pos:end="9:33">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:14">HAVE_7REGS</name> <operator pos:start="9:16" pos:end="9:17">&amp;&amp;</operator> <name pos:start="9:19" pos:end="9:33">HAVE_INLINE_ASM</name></expr></cpp:if>

    <if_stmt pos:start="11:5" pos:end="16:0"><if pos:start="11:5" pos:end="16:0">if <condition pos:start="11:8" pos:end="11:37">(<expr pos:start="11:9" pos:end="11:36"><name pos:start="11:9" pos:end="11:17">cpu_flags</name> <operator pos:start="11:19" pos:end="11:19">&amp;</operator> <name pos:start="11:21" pos:end="11:36">AV_CPU_FLAG_CMOV</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="16:0"><block_content pos:start="13:9" pos:end="16:0">

        <expr_stmt pos:start="13:9" pos:end="16:0"><expr pos:start="13:9" pos:end="13:74"><name pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:9">c</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:37">add_hfyu_median_prediction</name></name> <operator pos:start="13:39" pos:end="13:39">=</operator> <name pos:start="13:41" pos:end="13:74">ff_add_hfyu_median_prediction_cmov</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="19:5" pos:end="21:46"><if pos:start="19:5" pos:end="21:46">if <condition pos:start="19:8" pos:end="19:36">(<expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:17">cpu_flags</name> <operator pos:start="19:19" pos:end="19:19">&amp;</operator> <name pos:start="19:21" pos:end="19:35">AV_CPU_FLAG_MMX</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:46"><block_content pos:start="21:9" pos:end="21:46">

        <expr_stmt pos:start="21:9" pos:end="21:46"><expr pos:start="21:9" pos:end="21:45"><call pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:24">dsputil_init_mmx</name><argument_list pos:start="21:25" pos:end="21:45">(<argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><name pos:start="21:26" pos:end="21:26">c</name></expr></argument>, <argument pos:start="21:29" pos:end="21:33"><expr pos:start="21:29" pos:end="21:33"><name pos:start="21:29" pos:end="21:33">avctx</name></expr></argument>, <argument pos:start="21:36" pos:end="21:44"><expr pos:start="21:36" pos:end="21:44"><name pos:start="21:36" pos:end="21:44">cpu_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:49"><if pos:start="25:5" pos:end="27:49">if <condition pos:start="25:8" pos:end="25:39">(<expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:17">cpu_flags</name> <operator pos:start="25:19" pos:end="25:19">&amp;</operator> <name pos:start="25:21" pos:end="25:38">AV_CPU_FLAG_MMXEXT</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:49"><block_content pos:start="27:9" pos:end="27:49">

        <expr_stmt pos:start="27:9" pos:end="27:49"><expr pos:start="27:9" pos:end="27:48"><call pos:start="27:9" pos:end="27:48"><name pos:start="27:9" pos:end="27:27">dsputil_init_mmxext</name><argument_list pos:start="27:28" pos:end="27:48">(<argument pos:start="27:29" pos:end="27:29"><expr pos:start="27:29" pos:end="27:29"><name pos:start="27:29" pos:end="27:29">c</name></expr></argument>, <argument pos:start="27:32" pos:end="27:36"><expr pos:start="27:32" pos:end="27:36"><name pos:start="27:32" pos:end="27:36">avctx</name></expr></argument>, <argument pos:start="27:39" pos:end="27:47"><expr pos:start="27:39" pos:end="27:47"><name pos:start="27:39" pos:end="27:47">cpu_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:46"><if pos:start="31:5" pos:end="33:46">if <condition pos:start="31:8" pos:end="31:36">(<expr pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:17">cpu_flags</name> <operator pos:start="31:19" pos:end="31:19">&amp;</operator> <name pos:start="31:21" pos:end="31:35">AV_CPU_FLAG_SSE</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:46"><block_content pos:start="33:9" pos:end="33:46">

        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><call pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:24">dsputil_init_sse</name><argument_list pos:start="33:25" pos:end="33:45">(<argument pos:start="33:26" pos:end="33:26"><expr pos:start="33:26" pos:end="33:26"><name pos:start="33:26" pos:end="33:26">c</name></expr></argument>, <argument pos:start="33:29" pos:end="33:33"><expr pos:start="33:29" pos:end="33:33"><name pos:start="33:29" pos:end="33:33">avctx</name></expr></argument>, <argument pos:start="33:36" pos:end="33:44"><expr pos:start="33:36" pos:end="33:44"><name pos:start="33:36" pos:end="33:44">cpu_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:47"><if pos:start="37:5" pos:end="39:47">if <condition pos:start="37:8" pos:end="37:37">(<expr pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:17">cpu_flags</name> <operator pos:start="37:19" pos:end="37:19">&amp;</operator> <name pos:start="37:21" pos:end="37:36">AV_CPU_FLAG_SSE2</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:47"><block_content pos:start="39:9" pos:end="39:47">

        <expr_stmt pos:start="39:9" pos:end="39:47"><expr pos:start="39:9" pos:end="39:46"><call pos:start="39:9" pos:end="39:46"><name pos:start="39:9" pos:end="39:25">dsputil_init_sse2</name><argument_list pos:start="39:26" pos:end="39:46">(<argument pos:start="39:27" pos:end="39:27"><expr pos:start="39:27" pos:end="39:27"><name pos:start="39:27" pos:end="39:27">c</name></expr></argument>, <argument pos:start="39:30" pos:end="39:34"><expr pos:start="39:30" pos:end="39:34"><name pos:start="39:30" pos:end="39:34">avctx</name></expr></argument>, <argument pos:start="39:37" pos:end="39:45"><expr pos:start="39:37" pos:end="39:45"><name pos:start="39:37" pos:end="39:45">cpu_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="45:48"><if pos:start="43:5" pos:end="45:48">if <condition pos:start="43:8" pos:end="43:38">(<expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:17">cpu_flags</name> <operator pos:start="43:19" pos:end="43:19">&amp;</operator> <name pos:start="43:21" pos:end="43:37">AV_CPU_FLAG_SSSE3</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:48"><block_content pos:start="45:9" pos:end="45:48">

        <expr_stmt pos:start="45:9" pos:end="45:48"><expr pos:start="45:9" pos:end="45:47"><call pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:26">dsputil_init_ssse3</name><argument_list pos:start="45:27" pos:end="45:47">(<argument pos:start="45:28" pos:end="45:28"><expr pos:start="45:28" pos:end="45:28"><name pos:start="45:28" pos:end="45:28">c</name></expr></argument>, <argument pos:start="45:31" pos:end="45:35"><expr pos:start="45:31" pos:end="45:35"><name pos:start="45:31" pos:end="45:35">avctx</name></expr></argument>, <argument pos:start="45:38" pos:end="45:46"><expr pos:start="45:38" pos:end="45:46"><name pos:start="45:38" pos:end="45:46">cpu_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:47"><if pos:start="49:5" pos:end="51:47">if <condition pos:start="49:8" pos:end="49:37">(<expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:17">cpu_flags</name> <operator pos:start="49:19" pos:end="49:19">&amp;</operator> <name pos:start="49:21" pos:end="49:36">AV_CPU_FLAG_SSE4</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:47"><block_content pos:start="51:9" pos:end="51:47">

        <expr_stmt pos:start="51:9" pos:end="51:47"><expr pos:start="51:9" pos:end="51:46"><call pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:25">dsputil_init_sse4</name><argument_list pos:start="51:26" pos:end="51:46">(<argument pos:start="51:27" pos:end="51:27"><expr pos:start="51:27" pos:end="51:27"><name pos:start="51:27" pos:end="51:27">c</name></expr></argument>, <argument pos:start="51:30" pos:end="51:34"><expr pos:start="51:30" pos:end="51:34"><name pos:start="51:30" pos:end="51:34">avctx</name></expr></argument>, <argument pos:start="51:37" pos:end="51:45"><expr pos:start="51:37" pos:end="51:45"><name pos:start="51:37" pos:end="51:45">cpu_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="57:41"><if pos:start="55:5" pos:end="57:41">if <condition pos:start="55:8" pos:end="55:24">(<expr pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:23">CONFIG_ENCODERS</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:41"><block_content pos:start="57:9" pos:end="57:41">

        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><call pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:30">ff_dsputilenc_init_mmx</name><argument_list pos:start="57:31" pos:end="57:40">(<argument pos:start="57:32" pos:end="57:32"><expr pos:start="57:32" pos:end="57:32"><name pos:start="57:32" pos:end="57:32">c</name></expr></argument>, <argument pos:start="57:35" pos:end="57:39"><expr pos:start="57:35" pos:end="57:39"><name pos:start="57:35" pos:end="57:39">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
