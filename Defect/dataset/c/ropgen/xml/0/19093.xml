<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19093.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">vnc_display_init</name><parameter_list pos:start="1:22" pos:end="1:39">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:34">DisplayState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">ds</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:37">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">VncState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">vs</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:40"><expr pos:start="9:5" pos:end="9:39"><name pos:start="9:5" pos:end="9:6">vs</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <call pos:start="9:10" pos:end="9:39"><name pos:start="9:10" pos:end="9:21">qemu_mallocz</name><argument_list pos:start="9:22" pos:end="9:39">(<argument pos:start="9:23" pos:end="9:38"><expr pos:start="9:23" pos:end="9:38"><sizeof pos:start="9:23" pos:end="9:38">sizeof<argument_list pos:start="9:29" pos:end="9:38">(<argument pos:start="9:30" pos:end="9:37"><expr pos:start="9:30" pos:end="9:37"><name pos:start="9:30" pos:end="9:37">VncState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:16"><if pos:start="11:5" pos:end="13:16">if <condition pos:start="11:8" pos:end="11:12">(<expr pos:start="11:9" pos:end="11:11"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:11">vs</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:16"><block_content pos:start="13:9" pos:end="13:16">

	<expr_stmt pos:start="13:9" pos:end="13:16"><expr pos:start="13:9" pos:end="13:15"><call pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:12">exit</name><argument_list pos:start="13:13" pos:end="13:15">(<argument pos:start="13:14" pos:end="13:14"><expr pos:start="13:14" pos:end="13:14"><literal type="number" pos:start="13:14" pos:end="13:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:6">ds</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:14">opaque</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:19">vs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:13">vnc_state</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:18">vs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:6">vs</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:15">display</name></name> <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:22">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:6">vs</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:16">password</name></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:23">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:19"><expr pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:6">vs</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:13">lsock</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <operator pos:start="27:17" pos:end="27:17">-</operator><literal type="number" pos:start="27:18" pos:end="27:18">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:6">vs</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:13">csock</name></name> <operator pos:start="29:15" pos:end="29:15">=</operator> <operator pos:start="29:17" pos:end="29:17">-</operator><literal type="number" pos:start="29:18" pos:end="29:18">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:6">vs</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:13">depth</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <literal type="number" pos:start="31:17" pos:end="31:17">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:20"><expr pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:6">vs</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:14">last_x</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <operator pos:start="33:18" pos:end="33:18">-</operator><literal type="number" pos:start="33:19" pos:end="33:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:6">vs</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:14">last_y</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <operator pos:start="35:18" pos:end="35:18">-</operator><literal type="number" pos:start="35:19" pos:end="35:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:16"><expr pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:6">vs</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:10">ds</name></name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:15">ds</name></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="45:34"><if pos:start="43:5" pos:end="45:34">if <condition pos:start="43:8" pos:end="43:25">(<expr pos:start="43:9" pos:end="43:24"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:24">keyboard_layout</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:34"><block_content pos:start="45:9" pos:end="45:34">

	<expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:23">keyboard_layout</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <literal type="string" pos:start="45:27" pos:end="45:33">"en-us"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:59"><expr pos:start="49:5" pos:end="49:58"><name pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:6">vs</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:18">kbd_layout</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:58"><name pos:start="49:22" pos:end="49:41">init_keyboard_layout</name><argument_list pos:start="49:42" pos:end="49:58">(<argument pos:start="49:43" pos:end="49:57"><expr pos:start="49:43" pos:end="49:57"><name pos:start="49:43" pos:end="49:57">keyboard_layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:16"><if pos:start="51:5" pos:end="53:16">if <condition pos:start="51:8" pos:end="51:24">(<expr pos:start="51:9" pos:end="51:23"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:23"><name pos:start="51:10" pos:end="51:11">vs</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:23">kbd_layout</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:16"><block_content pos:start="53:9" pos:end="53:16">

	<expr_stmt pos:start="53:9" pos:end="53:16"><expr pos:start="53:9" pos:end="53:15"><call pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:12">exit</name><argument_list pos:start="53:13" pos:end="53:15">(<argument pos:start="53:14" pos:end="53:14"><expr pos:start="53:14" pos:end="53:14"><literal type="number" pos:start="53:14" pos:end="53:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:64"><expr pos:start="57:5" pos:end="57:63"><name pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:6">vs</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:13">timer</name></name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="57:63"><name pos:start="57:17" pos:end="57:30">qemu_new_timer</name><argument_list pos:start="57:31" pos:end="57:63">(<argument pos:start="57:32" pos:end="57:39"><expr pos:start="57:32" pos:end="57:39"><name pos:start="57:32" pos:end="57:39">rt_clock</name></expr></argument>, <argument pos:start="57:42" pos:end="57:58"><expr pos:start="57:42" pos:end="57:58"><name pos:start="57:42" pos:end="57:58">vnc_update_client</name></expr></argument>, <argument pos:start="57:61" pos:end="57:62"><expr pos:start="57:61" pos:end="57:62"><name pos:start="57:61" pos:end="57:62">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:24"><expr pos:start="61:5" pos:end="61:23"><name pos:start="61:5" pos:end="61:16"><name pos:start="61:5" pos:end="61:6">vs</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:10">ds</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:16">data</name></name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:23">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:22"><name pos:start="63:5" pos:end="63:6">vs</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:10">ds</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:22">dpy_update</name></name> <operator pos:start="63:24" pos:end="63:24">=</operator> <name pos:start="63:26" pos:end="63:39">vnc_dpy_update</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:40"><expr pos:start="65:5" pos:end="65:39"><name pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:6">vs</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:10">ds</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:22">dpy_resize</name></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:39">vnc_dpy_resize</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:6">vs</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:10">ds</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:23">dpy_refresh</name></name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:30">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:55"><expr pos:start="71:5" pos:end="71:54"><call pos:start="71:5" pos:end="71:54"><name pos:start="71:5" pos:end="71:10">memset</name><argument_list pos:start="71:11" pos:end="71:54">(<argument pos:start="71:12" pos:end="71:24"><expr pos:start="71:12" pos:end="71:24"><name pos:start="71:12" pos:end="71:24"><name pos:start="71:12" pos:end="71:13">vs</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:24">dirty_row</name></name></expr></argument>, <argument pos:start="71:27" pos:end="71:30"><expr pos:start="71:27" pos:end="71:30"><literal type="number" pos:start="71:27" pos:end="71:30">0xFF</literal></expr></argument>, <argument pos:start="71:33" pos:end="71:53"><expr pos:start="71:33" pos:end="71:53"><sizeof pos:start="71:33" pos:end="71:53">sizeof<argument_list pos:start="71:39" pos:end="71:53">(<argument pos:start="71:40" pos:end="71:52"><expr pos:start="71:40" pos:end="71:52"><name pos:start="71:40" pos:end="71:52"><name pos:start="71:40" pos:end="71:41">vs</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:52">dirty_row</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:37"><expr pos:start="75:5" pos:end="75:36"><call pos:start="75:5" pos:end="75:36"><name pos:start="75:5" pos:end="75:18">vnc_dpy_resize</name><argument_list pos:start="75:19" pos:end="75:36">(<argument pos:start="75:20" pos:end="75:25"><expr pos:start="75:20" pos:end="75:25"><name pos:start="75:20" pos:end="75:25"><name pos:start="75:20" pos:end="75:21">vs</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:25">ds</name></name></expr></argument>, <argument pos:start="75:28" pos:end="75:30"><expr pos:start="75:28" pos:end="75:30"><literal type="number" pos:start="75:28" pos:end="75:30">640</literal></expr></argument>, <argument pos:start="75:33" pos:end="75:35"><expr pos:start="75:33" pos:end="75:35"><literal type="number" pos:start="75:33" pos:end="75:35">400</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
