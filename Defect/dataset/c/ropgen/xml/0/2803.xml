<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2803.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">qcow_create</name><parameter_list pos:start="1:23" pos:end="1:74">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:43">filename</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:73"><decl pos:start="1:46" pos:end="1:73"><type pos:start="1:46" pos:end="1:73"><name pos:start="1:46" pos:end="1:64">QEMUOptionParameter</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:73">options</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:32">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:28">backing_file</name> <init pos:start="5:30" pos:end="5:35">= <expr pos:start="5:32" pos:end="5:35"><name pos:start="5:32" pos:end="5:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:27">backing_fmt</name> <init pos:start="7:29" pos:end="7:34">= <expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:20">sectors</name> <init pos:start="9:22" pos:end="9:24">= <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">flags</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:23">cluster_size</name> <init pos:start="13:25" pos:end="13:31">= <expr pos:start="13:27" pos:end="13:31"><literal type="number" pos:start="13:27" pos:end="13:31">65536</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">prealloc</name> <init pos:start="15:18" pos:end="15:20">= <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:26">/* Read out options */</comment>

    <while pos:start="21:5" pos:end="71:5">while <condition pos:start="21:11" pos:end="21:36">(<expr pos:start="21:12" pos:end="21:35"><name pos:start="21:12" pos:end="21:18">options</name> <operator pos:start="21:20" pos:end="21:21">&amp;&amp;</operator> <name pos:start="21:23" pos:end="21:35"><name pos:start="21:23" pos:end="21:29">options</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:35">name</name></name></expr>)</condition> <block pos:start="21:38" pos:end="71:5">{<block_content pos:start="23:9" pos:end="69:18">

        <if_stmt pos:start="23:9" pos:end="67:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:51">(<expr pos:start="23:13" pos:end="23:50"><operator pos:start="23:13" pos:end="23:13">!</operator><call pos:start="23:14" pos:end="23:50"><name pos:start="23:14" pos:end="23:19">strcmp</name><argument_list pos:start="23:20" pos:end="23:50">(<argument pos:start="23:21" pos:end="23:33"><expr pos:start="23:21" pos:end="23:33"><name pos:start="23:21" pos:end="23:33"><name pos:start="23:21" pos:end="23:27">options</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:33">name</name></name></expr></argument>, <argument pos:start="23:36" pos:end="23:49"><expr pos:start="23:36" pos:end="23:49"><name pos:start="23:36" pos:end="23:49">BLOCK_OPT_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:53" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:45">

            <expr_stmt pos:start="25:13" pos:end="25:45"><expr pos:start="25:13" pos:end="25:44"><name pos:start="25:13" pos:end="25:19">sectors</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:38"><name pos:start="25:23" pos:end="25:29">options</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:36">value</name><operator pos:start="25:37" pos:end="25:37">.</operator><name pos:start="25:38" pos:end="25:38">n</name></name> <operator pos:start="25:40" pos:end="25:40">/</operator> <literal type="number" pos:start="25:42" pos:end="25:44">512</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="27:11" pos:end="31:9">else if <condition pos:start="27:19" pos:end="27:66">(<expr pos:start="27:20" pos:end="27:65"><operator pos:start="27:20" pos:end="27:20">!</operator><call pos:start="27:21" pos:end="27:65"><name pos:start="27:21" pos:end="27:26">strcmp</name><argument_list pos:start="27:27" pos:end="27:65">(<argument pos:start="27:28" pos:end="27:40"><expr pos:start="27:28" pos:end="27:40"><name pos:start="27:28" pos:end="27:40"><name pos:start="27:28" pos:end="27:34">options</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:40">name</name></name></expr></argument>, <argument pos:start="27:43" pos:end="27:64"><expr pos:start="27:43" pos:end="27:64"><name pos:start="27:43" pos:end="27:64">BLOCK_OPT_BACKING_FILE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:68" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:44">

            <expr_stmt pos:start="29:13" pos:end="29:44"><expr pos:start="29:13" pos:end="29:43"><name pos:start="29:13" pos:end="29:24">backing_file</name> <operator pos:start="29:26" pos:end="29:26">=</operator> <name pos:start="29:28" pos:end="29:43"><name pos:start="29:28" pos:end="29:34">options</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:41">value</name><operator pos:start="29:42" pos:end="29:42">.</operator><name pos:start="29:43" pos:end="29:43">s</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="31:11" pos:end="35:9">else if <condition pos:start="31:19" pos:end="31:65">(<expr pos:start="31:20" pos:end="31:64"><operator pos:start="31:20" pos:end="31:20">!</operator><call pos:start="31:21" pos:end="31:64"><name pos:start="31:21" pos:end="31:26">strcmp</name><argument_list pos:start="31:27" pos:end="31:64">(<argument pos:start="31:28" pos:end="31:40"><expr pos:start="31:28" pos:end="31:40"><name pos:start="31:28" pos:end="31:40"><name pos:start="31:28" pos:end="31:34">options</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:40">name</name></name></expr></argument>, <argument pos:start="31:43" pos:end="31:63"><expr pos:start="31:43" pos:end="31:63"><name pos:start="31:43" pos:end="31:63">BLOCK_OPT_BACKING_FMT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:67" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:43">

            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:23">backing_fmt</name> <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:42"><name pos:start="33:27" pos:end="33:33">options</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:40">value</name><operator pos:start="33:41" pos:end="33:41">.</operator><name pos:start="33:42" pos:end="33:42">s</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="39:9">else if <condition pos:start="35:19" pos:end="35:61">(<expr pos:start="35:20" pos:end="35:60"><operator pos:start="35:20" pos:end="35:20">!</operator><call pos:start="35:21" pos:end="35:60"><name pos:start="35:21" pos:end="35:26">strcmp</name><argument_list pos:start="35:27" pos:end="35:60">(<argument pos:start="35:28" pos:end="35:40"><expr pos:start="35:28" pos:end="35:40"><name pos:start="35:28" pos:end="35:40"><name pos:start="35:28" pos:end="35:34">options</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:40">name</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:59"><expr pos:start="35:43" pos:end="35:59"><name pos:start="35:43" pos:end="35:59">BLOCK_OPT_ENCRYPT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:63" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:63">

            <expr_stmt pos:start="37:13" pos:end="37:63"><expr pos:start="37:13" pos:end="37:62"><name pos:start="37:13" pos:end="37:17">flags</name> <operator pos:start="37:19" pos:end="37:20">|=</operator> <ternary pos:start="37:22" pos:end="37:62"><condition pos:start="37:22" pos:end="37:39"><expr pos:start="37:22" pos:end="37:37"><name pos:start="37:22" pos:end="37:37"><name pos:start="37:22" pos:end="37:28">options</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:35">value</name><operator pos:start="37:36" pos:end="37:36">.</operator><name pos:start="37:37" pos:end="37:37">n</name></name></expr> ?</condition><then pos:start="37:41" pos:end="37:58"> <expr pos:start="37:41" pos:end="37:58"><name pos:start="37:41" pos:end="37:58">BLOCK_FLAG_ENCRYPT</name></expr> </then><else pos:start="37:60" pos:end="37:62">: <expr pos:start="37:62" pos:end="37:62"><literal type="number" pos:start="37:62" pos:end="37:62">0</literal></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="47:9">else if <condition pos:start="39:19" pos:end="39:66">(<expr pos:start="39:20" pos:end="39:65"><operator pos:start="39:20" pos:end="39:20">!</operator><call pos:start="39:21" pos:end="39:65"><name pos:start="39:21" pos:end="39:26">strcmp</name><argument_list pos:start="39:27" pos:end="39:65">(<argument pos:start="39:28" pos:end="39:40"><expr pos:start="39:28" pos:end="39:40"><name pos:start="39:28" pos:end="39:40"><name pos:start="39:28" pos:end="39:34">options</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:40">name</name></name></expr></argument>, <argument pos:start="39:43" pos:end="39:64"><expr pos:start="39:43" pos:end="39:64"><name pos:start="39:43" pos:end="39:64">BLOCK_OPT_CLUSTER_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:68" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:13">

            <if_stmt pos:start="41:13" pos:end="45:13"><if pos:start="41:13" pos:end="45:13">if <condition pos:start="41:16" pos:end="41:33">(<expr pos:start="41:17" pos:end="41:32"><name pos:start="41:17" pos:end="41:32"><name pos:start="41:17" pos:end="41:23">options</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:30">value</name><operator pos:start="41:31" pos:end="41:31">.</operator><name pos:start="41:32" pos:end="41:32">n</name></name></expr>)</condition> <block pos:start="41:35" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:48">

                <expr_stmt pos:start="43:17" pos:end="43:48"><expr pos:start="43:17" pos:end="43:47"><name pos:start="43:17" pos:end="43:28">cluster_size</name> <operator pos:start="43:30" pos:end="43:30">=</operator> <name pos:start="43:32" pos:end="43:47"><name pos:start="43:32" pos:end="43:38">options</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:45">value</name><operator pos:start="43:46" pos:end="43:46">.</operator><name pos:start="43:47" pos:end="43:47">n</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="67:9">else if <condition pos:start="47:19" pos:end="47:62">(<expr pos:start="47:20" pos:end="47:61"><operator pos:start="47:20" pos:end="47:20">!</operator><call pos:start="47:21" pos:end="47:61"><name pos:start="47:21" pos:end="47:26">strcmp</name><argument_list pos:start="47:27" pos:end="47:61">(<argument pos:start="47:28" pos:end="47:40"><expr pos:start="47:28" pos:end="47:40"><name pos:start="47:28" pos:end="47:40"><name pos:start="47:28" pos:end="47:34">options</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:40">name</name></name></expr></argument>, <argument pos:start="47:43" pos:end="47:60"><expr pos:start="47:43" pos:end="47:60"><name pos:start="47:43" pos:end="47:60">BLOCK_OPT_PREALLOC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:64" pos:end="67:9">{<block_content pos:start="49:13" pos:end="65:13">

            <if_stmt pos:start="49:13" pos:end="65:13"><if pos:start="49:13" pos:end="53:13">if <condition pos:start="49:16" pos:end="49:70">(<expr pos:start="49:17" pos:end="49:69"><operator pos:start="49:17" pos:end="49:17">!</operator><name pos:start="49:18" pos:end="49:33"><name pos:start="49:18" pos:end="49:24">options</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:31">value</name><operator pos:start="49:32" pos:end="49:32">.</operator><name pos:start="49:33" pos:end="49:33">s</name></name> <operator pos:start="49:35" pos:end="49:36">||</operator> <operator pos:start="49:38" pos:end="49:38">!</operator><call pos:start="49:39" pos:end="49:69"><name pos:start="49:39" pos:end="49:44">strcmp</name><argument_list pos:start="49:45" pos:end="49:69">(<argument pos:start="49:46" pos:end="49:61"><expr pos:start="49:46" pos:end="49:61"><name pos:start="49:46" pos:end="49:61"><name pos:start="49:46" pos:end="49:52">options</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:59">value</name><operator pos:start="49:60" pos:end="49:60">.</operator><name pos:start="49:61" pos:end="49:61">s</name></name></expr></argument>, <argument pos:start="49:64" pos:end="49:68"><expr pos:start="49:64" pos:end="49:68"><literal type="string" pos:start="49:64" pos:end="49:68">"off"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:72" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:29">

                <expr_stmt pos:start="51:17" pos:end="51:29"><expr pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:24">prealloc</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <literal type="number" pos:start="51:28" pos:end="51:28">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="53:15" pos:end="57:13">else if <condition pos:start="53:23" pos:end="53:61">(<expr pos:start="53:24" pos:end="53:60"><operator pos:start="53:24" pos:end="53:24">!</operator><call pos:start="53:25" pos:end="53:60"><name pos:start="53:25" pos:end="53:30">strcmp</name><argument_list pos:start="53:31" pos:end="53:60">(<argument pos:start="53:32" pos:end="53:47"><expr pos:start="53:32" pos:end="53:47"><name pos:start="53:32" pos:end="53:47"><name pos:start="53:32" pos:end="53:38">options</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:45">value</name><operator pos:start="53:46" pos:end="53:46">.</operator><name pos:start="53:47" pos:end="53:47">s</name></name></expr></argument>, <argument pos:start="53:50" pos:end="53:59"><expr pos:start="53:50" pos:end="53:59"><literal type="string" pos:start="53:50" pos:end="53:59">"metadata"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:63" pos:end="57:13">{<block_content pos:start="55:17" pos:end="55:29">

                <expr_stmt pos:start="55:17" pos:end="55:29"><expr pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:24">prealloc</name> <operator pos:start="55:26" pos:end="55:26">=</operator> <literal type="number" pos:start="55:28" pos:end="55:28">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="65:13">else <block pos:start="57:20" pos:end="65:13">{<block_content pos:start="59:17" pos:end="63:31">

                <expr_stmt pos:start="59:17" pos:end="61:38"><expr pos:start="59:17" pos:end="61:37"><call pos:start="59:17" pos:end="61:37"><name pos:start="59:17" pos:end="59:23">fprintf</name><argument_list pos:start="59:24" pos:end="61:37">(<argument pos:start="59:25" pos:end="59:30"><expr pos:start="59:25" pos:end="59:30"><name pos:start="59:25" pos:end="59:30">stderr</name></expr></argument>, <argument pos:start="59:33" pos:end="59:68"><expr pos:start="59:33" pos:end="59:68"><literal type="string" pos:start="59:33" pos:end="59:68">"Invalid preallocation mode: '%s'\n"</literal></expr></argument>,

                    <argument pos:start="61:21" pos:end="61:36"><expr pos:start="61:21" pos:end="61:36"><name pos:start="61:21" pos:end="61:36"><name pos:start="61:21" pos:end="61:27">options</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:34">value</name><operator pos:start="61:35" pos:end="61:35">.</operator><name pos:start="61:36" pos:end="61:36">s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="63:17" pos:end="63:31">return <expr pos:start="63:24" pos:end="63:30"><operator pos:start="63:24" pos:end="63:24">-</operator><name pos:start="63:25" pos:end="63:30">EINVAL</name></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:18"><expr pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:15">options</name><operator pos:start="69:16" pos:end="69:17">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if <condition pos:start="75:8" pos:end="75:33">(<expr pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:20">backing_file</name> <operator pos:start="75:22" pos:end="75:23">&amp;&amp;</operator> <name pos:start="75:25" pos:end="75:32">prealloc</name></expr>)</condition> <block pos:start="75:35" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:23">

        <expr_stmt pos:start="77:9" pos:end="79:31"><expr pos:start="77:9" pos:end="79:30"><call pos:start="77:9" pos:end="79:30"><name pos:start="77:9" pos:end="77:15">fprintf</name><argument_list pos:start="77:16" pos:end="79:30">(<argument pos:start="77:17" pos:end="77:22"><expr pos:start="77:17" pos:end="77:22"><name pos:start="77:17" pos:end="77:22">stderr</name></expr></argument>, <argument pos:start="77:25" pos:end="79:29"><expr pos:start="77:25" pos:end="79:29"><literal type="string" pos:start="77:25" pos:end="77:75">"Backing file and preallocation cannot be used at "</literal>

            <literal type="string" pos:start="79:13" pos:end="79:29">"the same time\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:23">return <expr pos:start="81:16" pos:end="81:22"><operator pos:start="81:16" pos:end="81:16">-</operator><name pos:start="81:17" pos:end="81:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="87:5" pos:end="89:32">return <expr pos:start="87:12" pos:end="89:31"><call pos:start="87:12" pos:end="89:31"><name pos:start="87:12" pos:end="87:23">qcow_create2</name><argument_list pos:start="87:24" pos:end="89:31">(<argument pos:start="87:25" pos:end="87:32"><expr pos:start="87:25" pos:end="87:32"><name pos:start="87:25" pos:end="87:32">filename</name></expr></argument>, <argument pos:start="87:35" pos:end="87:41"><expr pos:start="87:35" pos:end="87:41"><name pos:start="87:35" pos:end="87:41">sectors</name></expr></argument>, <argument pos:start="87:44" pos:end="87:55"><expr pos:start="87:44" pos:end="87:55"><name pos:start="87:44" pos:end="87:55">backing_file</name></expr></argument>, <argument pos:start="87:58" pos:end="87:68"><expr pos:start="87:58" pos:end="87:68"><name pos:start="87:58" pos:end="87:68">backing_fmt</name></expr></argument>, <argument pos:start="87:71" pos:end="87:75"><expr pos:start="87:71" pos:end="87:75"><name pos:start="87:71" pos:end="87:75">flags</name></expr></argument>,

        <argument pos:start="89:9" pos:end="89:20"><expr pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:20">cluster_size</name></expr></argument>, <argument pos:start="89:23" pos:end="89:30"><expr pos:start="89:23" pos:end="89:30"><name pos:start="89:23" pos:end="89:30">prealloc</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
