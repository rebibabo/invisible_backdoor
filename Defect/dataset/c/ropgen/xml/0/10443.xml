<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10443.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:42">h264_loop_filter_luma_c</name><parameter_list pos:start="1:43" pos:end="1:113">(<parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">pix</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:68"><decl pos:start="1:58" pos:end="1:68"><type pos:start="1:58" pos:end="1:68"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:68">xstride</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:81"><decl pos:start="1:71" pos:end="1:81"><type pos:start="1:71" pos:end="1:81"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:81">ystride</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:92"><decl pos:start="1:84" pos:end="1:92"><type pos:start="1:84" pos:end="1:92"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:92">alpha</name></decl></parameter>, <parameter pos:start="1:95" pos:end="1:102"><decl pos:start="1:95" pos:end="1:102"><type pos:start="1:95" pos:end="1:102"><name pos:start="1:95" pos:end="1:97">int</name></type> <name pos:start="1:99" pos:end="1:102">beta</name></decl></parameter>, <parameter pos:start="1:105" pos:end="1:112"><decl pos:start="1:105" pos:end="1:112"><type pos:start="1:105" pos:end="1:112"><name pos:start="1:105" pos:end="1:107">int</name> <modifier pos:start="1:109" pos:end="1:109">*</modifier></type><name pos:start="1:110" pos:end="1:112">tc0</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">d</name></decl>;</decl_stmt>

    <for pos:start="7:5" pos:end="77:5">for<control pos:start="7:8" pos:end="7:28">( <init pos:start="7:10" pos:end="7:15"><expr pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:10">i</name> <operator pos:start="7:12" pos:end="7:12">=</operator> <literal type="number" pos:start="7:14" pos:end="7:14">0</literal></expr>;</init> <condition pos:start="7:17" pos:end="7:22"><expr pos:start="7:17" pos:end="7:21"><name pos:start="7:17" pos:end="7:17">i</name> <operator pos:start="7:19" pos:end="7:19">&lt;</operator> <literal type="number" pos:start="7:21" pos:end="7:21">4</literal></expr>;</condition> <incr pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:24">i</name><operator pos:start="7:25" pos:end="7:26">++</operator></expr></incr> )</control> <block pos:start="7:30" pos:end="77:5">{<block_content pos:start="9:9" pos:end="75:9">

        <if_stmt pos:start="9:9" pos:end="15:9"><if pos:start="9:9" pos:end="15:9">if<condition pos:start="9:11" pos:end="9:24">( <expr pos:start="9:13" pos:end="9:22"><name pos:start="9:13" pos:end="9:18"><name pos:start="9:13" pos:end="9:15">tc0</name><index pos:start="9:16" pos:end="9:18">[<expr pos:start="9:17" pos:end="9:17"><name pos:start="9:17" pos:end="9:17">i</name></expr>]</index></name> <operator pos:start="9:20" pos:end="9:20">&lt;</operator> <literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr> )</condition> <block pos:start="9:26" pos:end="15:9">{<block_content pos:start="11:13" pos:end="13:21">

            <expr_stmt pos:start="11:13" pos:end="11:29"><expr pos:start="11:13" pos:end="11:28"><name pos:start="11:13" pos:end="11:15">pix</name> <operator pos:start="11:17" pos:end="11:18">+=</operator> <literal type="number" pos:start="11:20" pos:end="11:20">4</literal><operator pos:start="11:21" pos:end="11:21">*</operator><name pos:start="11:22" pos:end="11:28">ystride</name></expr>;</expr_stmt>

            <continue pos:start="13:13" pos:end="13:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <for pos:start="17:9" pos:end="75:9">for<control pos:start="17:12" pos:end="17:32">( <init pos:start="17:14" pos:end="17:19"><expr pos:start="17:14" pos:end="17:18"><name pos:start="17:14" pos:end="17:14">d</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</init> <condition pos:start="17:21" pos:end="17:26"><expr pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:21">d</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <literal type="number" pos:start="17:25" pos:end="17:25">4</literal></expr>;</condition> <incr pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:28">d</name><operator pos:start="17:29" pos:end="17:30">++</operator></expr></incr> )</control> <block pos:start="17:34" pos:end="75:9">{<block_content pos:start="19:13" pos:end="73:27">

            <decl_stmt pos:start="19:13" pos:end="19:43"><decl pos:start="19:13" pos:end="19:42"><type pos:start="19:13" pos:end="19:21"><specifier pos:start="19:13" pos:end="19:17">const</specifier> <name pos:start="19:19" pos:end="19:21">int</name></type> <name pos:start="19:23" pos:end="19:24">p0</name> <init pos:start="19:26" pos:end="19:42">= <expr pos:start="19:28" pos:end="19:42"><name pos:start="19:28" pos:end="19:42"><name pos:start="19:28" pos:end="19:30">pix</name><index pos:start="19:31" pos:end="19:42">[<expr pos:start="19:32" pos:end="19:41"><operator pos:start="19:32" pos:end="19:32">-</operator><literal type="number" pos:start="19:33" pos:end="19:33">1</literal><operator pos:start="19:34" pos:end="19:34">*</operator><name pos:start="19:35" pos:end="19:41">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:43"><decl pos:start="21:13" pos:end="21:42"><type pos:start="21:13" pos:end="21:21"><specifier pos:start="21:13" pos:end="21:17">const</specifier> <name pos:start="21:19" pos:end="21:21">int</name></type> <name pos:start="21:23" pos:end="21:24">p1</name> <init pos:start="21:26" pos:end="21:42">= <expr pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:30">pix</name><index pos:start="21:31" pos:end="21:42">[<expr pos:start="21:32" pos:end="21:41"><operator pos:start="21:32" pos:end="21:32">-</operator><literal type="number" pos:start="21:33" pos:end="21:33">2</literal><operator pos:start="21:34" pos:end="21:34">*</operator><name pos:start="21:35" pos:end="21:41">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:43"><decl pos:start="23:13" pos:end="23:42"><type pos:start="23:13" pos:end="23:21"><specifier pos:start="23:13" pos:end="23:17">const</specifier> <name pos:start="23:19" pos:end="23:21">int</name></type> <name pos:start="23:23" pos:end="23:24">p2</name> <init pos:start="23:26" pos:end="23:42">= <expr pos:start="23:28" pos:end="23:42"><name pos:start="23:28" pos:end="23:42"><name pos:start="23:28" pos:end="23:30">pix</name><index pos:start="23:31" pos:end="23:42">[<expr pos:start="23:32" pos:end="23:41"><operator pos:start="23:32" pos:end="23:32">-</operator><literal type="number" pos:start="23:33" pos:end="23:33">3</literal><operator pos:start="23:34" pos:end="23:34">*</operator><name pos:start="23:35" pos:end="23:41">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:34"><decl pos:start="25:13" pos:end="25:33"><type pos:start="25:13" pos:end="25:21"><specifier pos:start="25:13" pos:end="25:17">const</specifier> <name pos:start="25:19" pos:end="25:21">int</name></type> <name pos:start="25:23" pos:end="25:24">q0</name> <init pos:start="25:26" pos:end="25:33">= <expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:30">pix</name><index pos:start="25:31" pos:end="25:33">[<expr pos:start="25:32" pos:end="25:32"><literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="27:13" pos:end="27:42"><decl pos:start="27:13" pos:end="27:41"><type pos:start="27:13" pos:end="27:21"><specifier pos:start="27:13" pos:end="27:17">const</specifier> <name pos:start="27:19" pos:end="27:21">int</name></type> <name pos:start="27:23" pos:end="27:24">q1</name> <init pos:start="27:26" pos:end="27:41">= <expr pos:start="27:28" pos:end="27:41"><name pos:start="27:28" pos:end="27:41"><name pos:start="27:28" pos:end="27:30">pix</name><index pos:start="27:31" pos:end="27:41">[<expr pos:start="27:32" pos:end="27:40"><literal type="number" pos:start="27:32" pos:end="27:32">1</literal><operator pos:start="27:33" pos:end="27:33">*</operator><name pos:start="27:34" pos:end="27:40">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="29:13" pos:end="29:42"><decl pos:start="29:13" pos:end="29:41"><type pos:start="29:13" pos:end="29:21"><specifier pos:start="29:13" pos:end="29:17">const</specifier> <name pos:start="29:19" pos:end="29:21">int</name></type> <name pos:start="29:23" pos:end="29:24">q2</name> <init pos:start="29:26" pos:end="29:41">= <expr pos:start="29:28" pos:end="29:41"><name pos:start="29:28" pos:end="29:41"><name pos:start="29:28" pos:end="29:30">pix</name><index pos:start="29:31" pos:end="29:41">[<expr pos:start="29:32" pos:end="29:40"><literal type="number" pos:start="29:32" pos:end="29:32">2</literal><operator pos:start="29:33" pos:end="29:33">*</operator><name pos:start="29:34" pos:end="29:40">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    

            <if_stmt pos:start="33:13" pos:end="71:13"><if pos:start="33:13" pos:end="71:13">if<condition pos:start="33:15" pos:end="37:39">( <expr pos:start="33:17" pos:end="37:37"><call pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:19">ABS</name><argument_list pos:start="33:20" pos:end="33:30">( <argument pos:start="33:22" pos:end="33:28"><expr pos:start="33:22" pos:end="33:28"><name pos:start="33:22" pos:end="33:23">p0</name> <operator pos:start="33:25" pos:end="33:25">-</operator> <name pos:start="33:27" pos:end="33:28">q0</name></expr></argument> )</argument_list></call> <operator pos:start="33:32" pos:end="33:32">&lt;</operator> <name pos:start="33:34" pos:end="33:38">alpha</name> <operator pos:start="33:40" pos:end="33:41">&amp;&amp;</operator>

                <call pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:19">ABS</name><argument_list pos:start="35:20" pos:end="35:30">( <argument pos:start="35:22" pos:end="35:28"><expr pos:start="35:22" pos:end="35:28"><name pos:start="35:22" pos:end="35:23">p1</name> <operator pos:start="35:25" pos:end="35:25">-</operator> <name pos:start="35:27" pos:end="35:28">p0</name></expr></argument> )</argument_list></call> <operator pos:start="35:32" pos:end="35:32">&lt;</operator> <name pos:start="35:34" pos:end="35:37">beta</name> <operator pos:start="35:39" pos:end="35:40">&amp;&amp;</operator>

                <call pos:start="37:17" pos:end="37:30"><name pos:start="37:17" pos:end="37:19">ABS</name><argument_list pos:start="37:20" pos:end="37:30">( <argument pos:start="37:22" pos:end="37:28"><expr pos:start="37:22" pos:end="37:28"><name pos:start="37:22" pos:end="37:23">q1</name> <operator pos:start="37:25" pos:end="37:25">-</operator> <name pos:start="37:27" pos:end="37:28">q0</name></expr></argument> )</argument_list></call> <operator pos:start="37:32" pos:end="37:32">&lt;</operator> <name pos:start="37:34" pos:end="37:37">beta</name></expr> )</condition> <block pos:start="37:41" pos:end="71:13">{<block_content pos:start="41:17" pos:end="69:59">

    

                <decl_stmt pos:start="41:17" pos:end="41:32"><decl pos:start="41:17" pos:end="41:31"><type pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">int</name></type> <name pos:start="41:21" pos:end="41:22">tc</name> <init pos:start="41:24" pos:end="41:31">= <expr pos:start="41:26" pos:end="41:31"><name pos:start="41:26" pos:end="41:31"><name pos:start="41:26" pos:end="41:28">tc0</name><index pos:start="41:29" pos:end="41:31">[<expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="43:17" pos:end="43:28"><decl pos:start="43:17" pos:end="43:27"><type pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">int</name></type> <name pos:start="43:21" pos:end="43:27">i_delta</name></decl>;</decl_stmt>

    

                <if_stmt pos:start="47:17" pos:end="53:17"><if pos:start="47:17" pos:end="53:17">if<condition pos:start="47:19" pos:end="47:43">( <expr pos:start="47:21" pos:end="47:41"><call pos:start="47:21" pos:end="47:34"><name pos:start="47:21" pos:end="47:23">ABS</name><argument_list pos:start="47:24" pos:end="47:34">( <argument pos:start="47:26" pos:end="47:32"><expr pos:start="47:26" pos:end="47:32"><name pos:start="47:26" pos:end="47:27">p2</name> <operator pos:start="47:29" pos:end="47:29">-</operator> <name pos:start="47:31" pos:end="47:32">p0</name></expr></argument> )</argument_list></call> <operator pos:start="47:36" pos:end="47:36">&lt;</operator> <name pos:start="47:38" pos:end="47:41">beta</name></expr> )</condition> <block pos:start="47:45" pos:end="53:17">{<block_content pos:start="49:21" pos:end="51:25">

                    <expr_stmt pos:start="49:21" pos:end="49:121"><expr pos:start="49:21" pos:end="49:120"><name pos:start="49:21" pos:end="49:35"><name pos:start="49:21" pos:end="49:23">pix</name><index pos:start="49:24" pos:end="49:35">[<expr pos:start="49:25" pos:end="49:34"><operator pos:start="49:25" pos:end="49:25">-</operator><literal type="number" pos:start="49:26" pos:end="49:26">2</literal><operator pos:start="49:27" pos:end="49:27">*</operator><name pos:start="49:28" pos:end="49:34">xstride</name></expr>]</index></name> <operator pos:start="49:37" pos:end="49:37">=</operator> <name pos:start="49:39" pos:end="49:40">p1</name> <operator pos:start="49:42" pos:end="49:42">+</operator> <call pos:start="49:44" pos:end="49:120"><name pos:start="49:44" pos:end="49:47">clip</name><argument_list pos:start="49:48" pos:end="49:120">( <argument pos:start="49:50" pos:end="49:101"><expr pos:start="49:50" pos:end="49:101"><operator pos:start="49:50" pos:end="49:50">(</operator> <name pos:start="49:52" pos:end="49:53">p2</name> <operator pos:start="49:55" pos:end="49:55">+</operator> <operator pos:start="49:57" pos:end="49:57">(</operator> <operator pos:start="49:59" pos:end="49:59">(</operator> <name pos:start="49:61" pos:end="49:62">p0</name> <operator pos:start="49:64" pos:end="49:64">+</operator> <name pos:start="49:66" pos:end="49:67">q0</name> <operator pos:start="49:69" pos:end="49:69">+</operator> <literal type="number" pos:start="49:71" pos:end="49:71">1</literal> <operator pos:start="49:73" pos:end="49:73">)</operator> <operator pos:start="49:75" pos:end="49:76">&gt;&gt;</operator> <literal type="number" pos:start="49:78" pos:end="49:78">1</literal> <operator pos:start="49:80" pos:end="49:80">)</operator> <operator pos:start="49:82" pos:end="49:82">-</operator> <operator pos:start="49:84" pos:end="49:84">(</operator> <name pos:start="49:86" pos:end="49:87">p1</name> <operator pos:start="49:89" pos:end="49:90">&lt;&lt;</operator> <literal type="number" pos:start="49:92" pos:end="49:92">1</literal> <operator pos:start="49:94" pos:end="49:94">)</operator> <operator pos:start="49:96" pos:end="49:96">)</operator> <operator pos:start="49:98" pos:end="49:99">&gt;&gt;</operator> <literal type="number" pos:start="49:101" pos:end="49:101">1</literal></expr></argument>, <argument pos:start="49:104" pos:end="49:110"><expr pos:start="49:104" pos:end="49:110"><operator pos:start="49:104" pos:end="49:104">-</operator><name pos:start="49:105" pos:end="49:110"><name pos:start="49:105" pos:end="49:107">tc0</name><index pos:start="49:108" pos:end="49:110">[<expr pos:start="49:109" pos:end="49:109"><name pos:start="49:109" pos:end="49:109">i</name></expr>]</index></name></expr></argument>, <argument pos:start="49:113" pos:end="49:118"><expr pos:start="49:113" pos:end="49:118"><name pos:start="49:113" pos:end="49:118"><name pos:start="49:113" pos:end="49:115">tc0</name><index pos:start="49:116" pos:end="49:118">[<expr pos:start="49:117" pos:end="49:117"><name pos:start="49:117" pos:end="49:117">i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:25"><expr pos:start="51:21" pos:end="51:24"><name pos:start="51:21" pos:end="51:22">tc</name><operator pos:start="51:23" pos:end="51:24">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="55:17" pos:end="61:17"><if pos:start="55:17" pos:end="61:17">if<condition pos:start="55:19" pos:end="55:43">( <expr pos:start="55:21" pos:end="55:41"><call pos:start="55:21" pos:end="55:34"><name pos:start="55:21" pos:end="55:23">ABS</name><argument_list pos:start="55:24" pos:end="55:34">( <argument pos:start="55:26" pos:end="55:32"><expr pos:start="55:26" pos:end="55:32"><name pos:start="55:26" pos:end="55:27">q2</name> <operator pos:start="55:29" pos:end="55:29">-</operator> <name pos:start="55:31" pos:end="55:32">q0</name></expr></argument> )</argument_list></call> <operator pos:start="55:36" pos:end="55:36">&lt;</operator> <name pos:start="55:38" pos:end="55:41">beta</name></expr> )</condition> <block pos:start="55:45" pos:end="61:17">{<block_content pos:start="57:21" pos:end="59:25">

                    <expr_stmt pos:start="57:21" pos:end="57:118"><expr pos:start="57:21" pos:end="57:117"><name pos:start="57:21" pos:end="57:32"><name pos:start="57:21" pos:end="57:23">pix</name><index pos:start="57:24" pos:end="57:32">[<expr pos:start="57:25" pos:end="57:31"><name pos:start="57:25" pos:end="57:31">xstride</name></expr>]</index></name> <operator pos:start="57:34" pos:end="57:34">=</operator> <name pos:start="57:36" pos:end="57:37">q1</name> <operator pos:start="57:39" pos:end="57:39">+</operator> <call pos:start="57:41" pos:end="57:117"><name pos:start="57:41" pos:end="57:44">clip</name><argument_list pos:start="57:45" pos:end="57:117">( <argument pos:start="57:47" pos:end="57:98"><expr pos:start="57:47" pos:end="57:98"><operator pos:start="57:47" pos:end="57:47">(</operator> <name pos:start="57:49" pos:end="57:50">q2</name> <operator pos:start="57:52" pos:end="57:52">+</operator> <operator pos:start="57:54" pos:end="57:54">(</operator> <operator pos:start="57:56" pos:end="57:56">(</operator> <name pos:start="57:58" pos:end="57:59">p0</name> <operator pos:start="57:61" pos:end="57:61">+</operator> <name pos:start="57:63" pos:end="57:64">q0</name> <operator pos:start="57:66" pos:end="57:66">+</operator> <literal type="number" pos:start="57:68" pos:end="57:68">1</literal> <operator pos:start="57:70" pos:end="57:70">)</operator> <operator pos:start="57:72" pos:end="57:73">&gt;&gt;</operator> <literal type="number" pos:start="57:75" pos:end="57:75">1</literal> <operator pos:start="57:77" pos:end="57:77">)</operator> <operator pos:start="57:79" pos:end="57:79">-</operator> <operator pos:start="57:81" pos:end="57:81">(</operator> <name pos:start="57:83" pos:end="57:84">q1</name> <operator pos:start="57:86" pos:end="57:87">&lt;&lt;</operator> <literal type="number" pos:start="57:89" pos:end="57:89">1</literal> <operator pos:start="57:91" pos:end="57:91">)</operator> <operator pos:start="57:93" pos:end="57:93">)</operator> <operator pos:start="57:95" pos:end="57:96">&gt;&gt;</operator> <literal type="number" pos:start="57:98" pos:end="57:98">1</literal></expr></argument>, <argument pos:start="57:101" pos:end="57:107"><expr pos:start="57:101" pos:end="57:107"><operator pos:start="57:101" pos:end="57:101">-</operator><name pos:start="57:102" pos:end="57:107"><name pos:start="57:102" pos:end="57:104">tc0</name><index pos:start="57:105" pos:end="57:107">[<expr pos:start="57:106" pos:end="57:106"><name pos:start="57:106" pos:end="57:106">i</name></expr>]</index></name></expr></argument>, <argument pos:start="57:110" pos:end="57:115"><expr pos:start="57:110" pos:end="57:115"><name pos:start="57:110" pos:end="57:115"><name pos:start="57:110" pos:end="57:112">tc0</name><index pos:start="57:113" pos:end="57:115">[<expr pos:start="57:114" pos:end="57:114"><name pos:start="57:114" pos:end="57:114">i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:25"><expr pos:start="59:21" pos:end="59:24"><name pos:start="59:21" pos:end="59:22">tc</name><operator pos:start="59:23" pos:end="59:24">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

    

                <expr_stmt pos:start="65:17" pos:end="65:84"><expr pos:start="65:17" pos:end="65:83"><name pos:start="65:17" pos:end="65:23">i_delta</name> <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="65:83"><name pos:start="65:27" pos:end="65:30">clip</name><argument_list pos:start="65:31" pos:end="65:83">( <argument pos:start="65:33" pos:end="65:72"><expr pos:start="65:33" pos:end="65:72"><operator pos:start="65:33" pos:end="65:33">(</operator><operator pos:start="65:34" pos:end="65:34">(</operator><operator pos:start="65:35" pos:end="65:35">(</operator><name pos:start="65:36" pos:end="65:37">q0</name> <operator pos:start="65:39" pos:end="65:39">-</operator> <name pos:start="65:41" pos:end="65:42">p0</name> <operator pos:start="65:44" pos:end="65:44">)</operator> <operator pos:start="65:46" pos:end="65:47">&lt;&lt;</operator> <literal type="number" pos:start="65:49" pos:end="65:49">2</literal><operator pos:start="65:50" pos:end="65:50">)</operator> <operator pos:start="65:52" pos:end="65:52">+</operator> <operator pos:start="65:54" pos:end="65:54">(</operator><name pos:start="65:55" pos:end="65:56">p1</name> <operator pos:start="65:58" pos:end="65:58">-</operator> <name pos:start="65:60" pos:end="65:61">q1</name><operator pos:start="65:62" pos:end="65:62">)</operator> <operator pos:start="65:64" pos:end="65:64">+</operator> <literal type="number" pos:start="65:66" pos:end="65:66">4</literal><operator pos:start="65:67" pos:end="65:67">)</operator> <operator pos:start="65:69" pos:end="65:70">&gt;&gt;</operator> <literal type="number" pos:start="65:72" pos:end="65:72">3</literal></expr></argument>, <argument pos:start="65:75" pos:end="65:77"><expr pos:start="65:75" pos:end="65:77"><operator pos:start="65:75" pos:end="65:75">-</operator><name pos:start="65:76" pos:end="65:77">tc</name></expr></argument>, <argument pos:start="65:80" pos:end="65:81"><expr pos:start="65:80" pos:end="65:81"><name pos:start="65:80" pos:end="65:81">tc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:59"><expr pos:start="67:17" pos:end="67:58"><name pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:19">pix</name><index pos:start="67:20" pos:end="67:29">[<expr pos:start="67:21" pos:end="67:28"><operator pos:start="67:21" pos:end="67:21">-</operator><name pos:start="67:22" pos:end="67:28">xstride</name></expr>]</index></name> <operator pos:start="67:31" pos:end="67:31">=</operator> <call pos:start="67:33" pos:end="67:58"><name pos:start="67:33" pos:end="67:42">clip_uint8</name><argument_list pos:start="67:43" pos:end="67:58">( <argument pos:start="67:45" pos:end="67:56"><expr pos:start="67:45" pos:end="67:56"><name pos:start="67:45" pos:end="67:46">p0</name> <operator pos:start="67:48" pos:end="67:48">+</operator> <name pos:start="67:50" pos:end="67:56">i_delta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="67:64" pos:end="67:72">/* p0' */</comment>

                <expr_stmt pos:start="69:17" pos:end="69:59"><expr pos:start="69:17" pos:end="69:58"><name pos:start="69:17" pos:end="69:22"><name pos:start="69:17" pos:end="69:19">pix</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><literal type="number" pos:start="69:21" pos:end="69:21">0</literal></expr>]</index></name>        <operator pos:start="69:31" pos:end="69:31">=</operator> <call pos:start="69:33" pos:end="69:58"><name pos:start="69:33" pos:end="69:42">clip_uint8</name><argument_list pos:start="69:43" pos:end="69:58">( <argument pos:start="69:45" pos:end="69:56"><expr pos:start="69:45" pos:end="69:56"><name pos:start="69:45" pos:end="69:46">q0</name> <operator pos:start="69:48" pos:end="69:48">-</operator> <name pos:start="69:50" pos:end="69:56">i_delta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="69:64" pos:end="69:72">/* q0' */</comment>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:27"><expr pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:15">pix</name> <operator pos:start="73:17" pos:end="73:18">+=</operator> <name pos:start="73:20" pos:end="73:26">ystride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
