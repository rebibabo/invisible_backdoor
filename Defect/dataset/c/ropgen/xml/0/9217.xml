<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9217.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">usb_host_claim_interfaces</name><parameter_list pos:start="1:37" pos:end="1:75">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:50">USBHostDevice</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">dev</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:74"><decl pos:start="1:58" pos:end="1:74"><type pos:start="1:58" pos:end="1:74"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:74">configuration</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:21">dev_descr_len</name></decl>, <decl pos:start="5:24" pos:end="5:39"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:39">config_descr_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">interface</name></decl>, <decl pos:start="7:20" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:32">nb_interfaces</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:21">configuration</name> <operator pos:start="13:23" pos:end="13:24">==</operator> <literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17"> <comment type="block" pos:start="13:29" pos:end="13:56">/* address state - ignore */</comment>

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:69"><expr pos:start="19:5" pos:end="19:68"><call pos:start="19:5" pos:end="19:68"><name pos:start="19:5" pos:end="19:11">DPRINTF</name><argument_list pos:start="19:12" pos:end="19:68">(<argument pos:start="19:13" pos:end="19:52"><expr pos:start="19:13" pos:end="19:52"><literal type="string" pos:start="19:13" pos:end="19:52">"husb: claiming interfaces. config %d\n"</literal></expr></argument>, <argument pos:start="19:55" pos:end="19:67"><expr pos:start="19:55" pos:end="19:67"><name pos:start="19:55" pos:end="19:67">configuration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:10"><expr pos:start="23:5" pos:end="23:9"><name pos:start="23:5" pos:end="23:5">i</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <literal type="number" pos:start="23:9" pos:end="23:9">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:17">dev_descr_len</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:33"><name pos:start="25:21" pos:end="25:23">dev</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:30">descr</name><index pos:start="25:31" pos:end="25:33">[<expr pos:start="25:32" pos:end="25:32"><literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:39">(<expr pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:21">dev_descr_len</name> <operator pos:start="27:23" pos:end="27:23">&gt;</operator> <name pos:start="27:25" pos:end="27:38"><name pos:start="27:25" pos:end="27:27">dev</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:38">descr_len</name></name></expr>)</condition> <block pos:start="27:41" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:18">

        <goto pos:start="29:9" pos:end="29:18">goto <name pos:start="29:14" pos:end="29:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:5">i</name> <operator pos:start="35:7" pos:end="35:8">+=</operator> <name pos:start="35:10" pos:end="35:22">dev_descr_len</name></expr>;</expr_stmt>

    <while pos:start="37:5" pos:end="75:5">while <condition pos:start="37:11" pos:end="37:30">(<expr pos:start="37:12" pos:end="37:29"><name pos:start="37:12" pos:end="37:12">i</name> <operator pos:start="37:14" pos:end="37:14">&lt;</operator> <name pos:start="37:16" pos:end="37:29"><name pos:start="37:16" pos:end="37:18">dev</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:29">descr_len</name></name></expr>)</condition> <block pos:start="37:32" pos:end="75:5">{<block_content pos:start="39:9" pos:end="73:30">

        <expr_stmt pos:start="39:9" pos:end="43:47"><expr pos:start="39:9" pos:end="43:46"><call pos:start="39:9" pos:end="43:46"><name pos:start="39:9" pos:end="39:15">DPRINTF</name><argument_list pos:start="39:16" pos:end="43:46">(<argument pos:start="39:17" pos:end="39:64"><expr pos:start="39:17" pos:end="39:64"><literal type="string" pos:start="39:17" pos:end="39:64">"husb: i is %d, descr_len is %d, dl %d, dt %d\n"</literal></expr></argument>,

                <argument pos:start="41:17" pos:end="41:17"><expr pos:start="41:17" pos:end="41:17"><name pos:start="41:17" pos:end="41:17">i</name></expr></argument>, <argument pos:start="41:20" pos:end="41:33"><expr pos:start="41:20" pos:end="41:33"><name pos:start="41:20" pos:end="41:33"><name pos:start="41:20" pos:end="41:22">dev</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:33">descr_len</name></name></expr></argument>,

               <argument pos:start="43:16" pos:end="43:28"><expr pos:start="43:16" pos:end="43:28"><name pos:start="43:16" pos:end="43:28"><name pos:start="43:16" pos:end="43:18">dev</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:25">descr</name><index pos:start="43:26" pos:end="43:28">[<expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">i</name></expr>]</index></name></expr></argument>, <argument pos:start="43:31" pos:end="43:45"><expr pos:start="43:31" pos:end="43:45"><name pos:start="43:31" pos:end="43:45"><name pos:start="43:31" pos:end="43:33">dev</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:40">descr</name><index pos:start="43:41" pos:end="43:45">[<expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:42">i</name><operator pos:start="43:43" pos:end="43:43">+</operator><literal type="number" pos:start="43:44" pos:end="43:44">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:45">(<expr pos:start="47:13" pos:end="47:44"><name pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:15">dev</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:22">descr</name><index pos:start="47:23" pos:end="47:27">[<expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:24">i</name><operator pos:start="47:25" pos:end="47:25">+</operator><literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr>]</index></name> <operator pos:start="47:29" pos:end="47:30">!=</operator> <name pos:start="47:32" pos:end="47:44">USB_DT_CONFIG</name></expr>)</condition> <block pos:start="47:47" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:21">

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:13">i</name> <operator pos:start="49:15" pos:end="49:16">+=</operator> <name pos:start="49:18" pos:end="49:30"><name pos:start="49:18" pos:end="49:20">dev</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:27">descr</name><index pos:start="49:28" pos:end="49:30">[<expr pos:start="49:29" pos:end="49:29"><name pos:start="49:29" pos:end="49:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <continue pos:start="51:13" pos:end="51:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:24">config_descr_len</name> <operator pos:start="55:26" pos:end="55:26">=</operator> <name pos:start="55:28" pos:end="55:40"><name pos:start="55:28" pos:end="55:30">dev</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:37">descr</name><index pos:start="55:38" pos:end="55:40">[<expr pos:start="55:39" pos:end="55:39"><name pos:start="55:39" pos:end="55:39">i</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:79"><expr pos:start="59:9" pos:end="59:78"><call pos:start="59:9" pos:end="59:78"><name pos:start="59:9" pos:end="59:14">printf</name><argument_list pos:start="59:15" pos:end="59:78">(<argument pos:start="59:16" pos:end="59:43"><expr pos:start="59:16" pos:end="59:43"><literal type="string" pos:start="59:16" pos:end="59:43">"husb: config #%d need %d\n"</literal></expr></argument>, <argument pos:start="59:46" pos:end="59:62"><expr pos:start="59:46" pos:end="59:62"><name pos:start="59:46" pos:end="59:62"><name pos:start="59:46" pos:end="59:48">dev</name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:55">descr</name><index pos:start="59:56" pos:end="59:62">[<expr pos:start="59:57" pos:end="59:61"><name pos:start="59:57" pos:end="59:57">i</name> <operator pos:start="59:59" pos:end="59:59">+</operator> <literal type="number" pos:start="59:61" pos:end="59:61">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="59:65" pos:end="59:77"><expr pos:start="59:65" pos:end="59:77"><name pos:start="59:65" pos:end="59:77">configuration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:68">(<expr pos:start="63:13" pos:end="63:67"><name pos:start="63:13" pos:end="63:25">configuration</name> <operator pos:start="63:27" pos:end="63:27">&lt;</operator> <literal type="number" pos:start="63:29" pos:end="63:29">0</literal> <operator pos:start="63:31" pos:end="63:32">||</operator> <name pos:start="63:34" pos:end="63:46">configuration</name> <operator pos:start="63:48" pos:end="63:49">==</operator> <name pos:start="63:51" pos:end="63:67"><name pos:start="63:51" pos:end="63:53">dev</name><operator pos:start="63:54" pos:end="63:55">-&gt;</operator><name pos:start="63:56" pos:end="63:60">descr</name><index pos:start="63:61" pos:end="63:67">[<expr pos:start="63:62" pos:end="63:66"><name pos:start="63:62" pos:end="63:62">i</name> <operator pos:start="63:64" pos:end="63:64">+</operator> <literal type="number" pos:start="63:66" pos:end="63:66">5</literal></expr>]</index></name></expr>)</condition> <block pos:start="63:70" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:18">

            <expr_stmt pos:start="65:13" pos:end="65:46"><expr pos:start="65:13" pos:end="65:45"><name pos:start="65:13" pos:end="65:25">configuration</name> <operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:45"><name pos:start="65:29" pos:end="65:31">dev</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:38">descr</name><index pos:start="65:39" pos:end="65:45">[<expr pos:start="65:40" pos:end="65:44"><name pos:start="65:40" pos:end="65:40">i</name> <operator pos:start="65:42" pos:end="65:42">+</operator> <literal type="number" pos:start="65:44" pos:end="65:44">5</literal></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:30"><expr pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:9">i</name> <operator pos:start="73:11" pos:end="73:12">+=</operator> <name pos:start="73:14" pos:end="73:29">config_descr_len</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="79:5" pos:end="87:5"><if pos:start="79:5" pos:end="87:5">if <condition pos:start="79:8" pos:end="79:28">(<expr pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:9">i</name> <operator pos:start="79:11" pos:end="79:12">&gt;=</operator> <name pos:start="79:14" pos:end="79:27"><name pos:start="79:14" pos:end="79:16">dev</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:27">descr_len</name></name></expr>)</condition> <block pos:start="79:30" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:18">

        <expr_stmt pos:start="81:9" pos:end="83:74"><expr pos:start="81:9" pos:end="83:73"><call pos:start="81:9" pos:end="83:73"><name pos:start="81:9" pos:end="81:15">fprintf</name><argument_list pos:start="81:16" pos:end="83:73">(<argument pos:start="81:17" pos:end="81:22"><expr pos:start="81:17" pos:end="81:22"><name pos:start="81:17" pos:end="81:22">stderr</name></expr></argument>,

                <argument pos:start="83:17" pos:end="83:72"><expr pos:start="83:17" pos:end="83:72"><literal type="string" pos:start="83:17" pos:end="83:72">"husb: update iface failed. no matching configuration\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="85:9" pos:end="85:18">goto <name pos:start="85:14" pos:end="85:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="94:0"><expr pos:start="89:5" pos:end="89:37"><name pos:start="89:5" pos:end="89:17">nb_interfaces</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:37"><name pos:start="89:21" pos:end="89:23">dev</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:30">descr</name><index pos:start="89:31" pos:end="89:37">[<expr pos:start="89:32" pos:end="89:36"><name pos:start="89:32" pos:end="89:32">i</name> <operator pos:start="89:34" pos:end="89:34">+</operator> <literal type="number" pos:start="89:36" pos:end="89:36">4</literal></expr>]</index></name></expr>;</expr_stmt>



<cpp:ifdef pos:start="93:1" pos:end="93:26">#<cpp:directive pos:start="93:2" pos:end="93:6">ifdef</cpp:directive> <name pos:start="93:8" pos:end="93:26">USBDEVFS_DISCONNECT</name></cpp:ifdef>

    <comment type="block" pos:start="95:5" pos:end="95:47">/* earlier Linux 2.4 do not support that */</comment>

    <block pos:start="97:5" pos:end="124:0">{<block_content pos:start="99:9" pos:end="119:9">

        <decl_stmt pos:start="99:9" pos:end="99:35"><decl pos:start="99:9" pos:end="99:34"><type pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:14">struct</name> <name pos:start="99:16" pos:end="99:29">usbdevfs_ioctl</name></name></type> <name pos:start="99:31" pos:end="99:34">ctrl</name></decl>;</decl_stmt>

        <for pos:start="101:9" pos:end="119:9">for <control pos:start="101:13" pos:end="101:67">(<init pos:start="101:14" pos:end="101:27"><expr pos:start="101:14" pos:end="101:26"><name pos:start="101:14" pos:end="101:22">interface</name> <operator pos:start="101:24" pos:end="101:24">=</operator> <literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>;</init> <condition pos:start="101:29" pos:end="101:54"><expr pos:start="101:29" pos:end="101:53"><name pos:start="101:29" pos:end="101:37">interface</name> <operator pos:start="101:39" pos:end="101:39">&lt;</operator> <name pos:start="101:41" pos:end="101:53">nb_interfaces</name></expr>;</condition> <incr pos:start="101:56" pos:end="101:66"><expr pos:start="101:56" pos:end="101:66"><name pos:start="101:56" pos:end="101:64">interface</name><operator pos:start="101:65" pos:end="101:66">++</operator></expr></incr>)</control> <block pos:start="101:69" pos:end="119:9">{<block_content pos:start="103:13" pos:end="117:13">

            <expr_stmt pos:start="103:13" pos:end="103:50"><expr pos:start="103:13" pos:end="103:49"><name pos:start="103:13" pos:end="103:27"><name pos:start="103:13" pos:end="103:16">ctrl</name><operator pos:start="103:17" pos:end="103:17">.</operator><name pos:start="103:18" pos:end="103:27">ioctl_code</name></name> <operator pos:start="103:29" pos:end="103:29">=</operator> <name pos:start="103:31" pos:end="103:49">USBDEVFS_DISCONNECT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:34"><expr pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:21"><name pos:start="105:13" pos:end="105:16">ctrl</name><operator pos:start="105:17" pos:end="105:17">.</operator><name pos:start="105:18" pos:end="105:21">ifno</name></name> <operator pos:start="105:23" pos:end="105:23">=</operator> <name pos:start="105:25" pos:end="105:33">interface</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:26"><expr pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:21"><name pos:start="107:13" pos:end="107:16">ctrl</name><operator pos:start="107:17" pos:end="107:17">.</operator><name pos:start="107:18" pos:end="107:21">data</name></name> <operator pos:start="107:23" pos:end="107:23">=</operator> <literal type="number" pos:start="107:25" pos:end="107:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:56"><expr pos:start="109:13" pos:end="109:55"><name pos:start="109:13" pos:end="109:15">ret</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="109:55"><name pos:start="109:19" pos:end="109:23">ioctl</name><argument_list pos:start="109:24" pos:end="109:55">(<argument pos:start="109:25" pos:end="109:31"><expr pos:start="109:25" pos:end="109:31"><name pos:start="109:25" pos:end="109:31"><name pos:start="109:25" pos:end="109:27">dev</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:31">fd</name></name></expr></argument>, <argument pos:start="109:34" pos:end="109:47"><expr pos:start="109:34" pos:end="109:47"><name pos:start="109:34" pos:end="109:47">USBDEVFS_IOCTL</name></expr></argument>, <argument pos:start="109:50" pos:end="109:54"><expr pos:start="109:50" pos:end="109:54"><operator pos:start="109:50" pos:end="109:50">&amp;</operator><name pos:start="109:51" pos:end="109:54">ctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="117:13"><if pos:start="111:13" pos:end="117:13">if <condition pos:start="111:16" pos:end="111:44">(<expr pos:start="111:17" pos:end="111:43"><name pos:start="111:17" pos:end="111:19">ret</name> <operator pos:start="111:21" pos:end="111:21">&lt;</operator> <literal type="number" pos:start="111:23" pos:end="111:23">0</literal> <operator pos:start="111:25" pos:end="111:26">&amp;&amp;</operator> <name pos:start="111:28" pos:end="111:32">errno</name> <operator pos:start="111:34" pos:end="111:35">!=</operator> <name pos:start="111:37" pos:end="111:43">ENODATA</name></expr>)</condition> <block pos:start="111:46" pos:end="117:13">{<block_content pos:start="113:17" pos:end="115:26">

                <expr_stmt pos:start="113:17" pos:end="113:46"><expr pos:start="113:17" pos:end="113:45"><call pos:start="113:17" pos:end="113:45"><name pos:start="113:17" pos:end="113:22">perror</name><argument_list pos:start="113:23" pos:end="113:45">(<argument pos:start="113:24" pos:end="113:44"><expr pos:start="113:24" pos:end="113:44"><literal type="string" pos:start="113:24" pos:end="113:44">"USBDEVFS_DISCONNECT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="115:17" pos:end="115:26">goto <name pos:start="115:22" pos:end="115:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block>

<cpp:endif pos:start="123:1" pos:end="123:6">#<cpp:directive pos:start="123:2" pos:end="123:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="127:5" pos:end="127:51">/* XXX: only grab if all interfaces are free */</comment>

    <for pos:start="129:5" pos:end="151:5">for <control pos:start="129:9" pos:end="129:63">(<init pos:start="129:10" pos:end="129:23"><expr pos:start="129:10" pos:end="129:22"><name pos:start="129:10" pos:end="129:18">interface</name> <operator pos:start="129:20" pos:end="129:20">=</operator> <literal type="number" pos:start="129:22" pos:end="129:22">0</literal></expr>;</init> <condition pos:start="129:25" pos:end="129:50"><expr pos:start="129:25" pos:end="129:49"><name pos:start="129:25" pos:end="129:33">interface</name> <operator pos:start="129:35" pos:end="129:35">&lt;</operator> <name pos:start="129:37" pos:end="129:49">nb_interfaces</name></expr>;</condition> <incr pos:start="129:52" pos:end="129:62"><expr pos:start="129:52" pos:end="129:62"><name pos:start="129:52" pos:end="129:60">interface</name><operator pos:start="129:61" pos:end="129:62">++</operator></expr></incr>)</control> <block pos:start="129:65" pos:end="151:5">{<block_content pos:start="131:9" pos:end="149:9">

        <expr_stmt pos:start="131:9" pos:end="131:66"><expr pos:start="131:9" pos:end="131:65"><name pos:start="131:9" pos:end="131:11">ret</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <call pos:start="131:15" pos:end="131:65"><name pos:start="131:15" pos:end="131:19">ioctl</name><argument_list pos:start="131:20" pos:end="131:65">(<argument pos:start="131:21" pos:end="131:27"><expr pos:start="131:21" pos:end="131:27"><name pos:start="131:21" pos:end="131:27"><name pos:start="131:21" pos:end="131:23">dev</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:27">fd</name></name></expr></argument>, <argument pos:start="131:30" pos:end="131:52"><expr pos:start="131:30" pos:end="131:52"><name pos:start="131:30" pos:end="131:52">USBDEVFS_CLAIMINTERFACE</name></expr></argument>, <argument pos:start="131:55" pos:end="131:64"><expr pos:start="131:55" pos:end="131:64"><operator pos:start="131:55" pos:end="131:55">&amp;</operator><name pos:start="131:56" pos:end="131:64">interface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="149:9"><if pos:start="133:9" pos:end="149:9">if <condition pos:start="133:12" pos:end="133:20">(<expr pos:start="133:13" pos:end="133:19"><name pos:start="133:13" pos:end="133:15">ret</name> <operator pos:start="133:17" pos:end="133:17">&lt;</operator> <literal type="number" pos:start="133:19" pos:end="133:19">0</literal></expr>)</condition> <block pos:start="133:22" pos:end="149:9">{<block_content pos:start="135:13" pos:end="147:21">

            <if_stmt pos:start="135:13" pos:end="143:13"><if pos:start="135:13" pos:end="139:13">if <condition pos:start="135:16" pos:end="135:31">(<expr pos:start="135:17" pos:end="135:30"><name pos:start="135:17" pos:end="135:21">errno</name> <operator pos:start="135:23" pos:end="135:24">==</operator> <name pos:start="135:26" pos:end="135:30">EBUSY</name></expr>)</condition> <block pos:start="135:33" pos:end="139:13">{<block_content pos:start="137:17" pos:end="137:71">

                <expr_stmt pos:start="137:17" pos:end="137:71"><expr pos:start="137:17" pos:end="137:70"><call pos:start="137:17" pos:end="137:70"><name pos:start="137:17" pos:end="137:22">printf</name><argument_list pos:start="137:23" pos:end="137:70">(<argument pos:start="137:24" pos:end="137:69"><expr pos:start="137:24" pos:end="137:69"><literal type="string" pos:start="137:24" pos:end="137:69">"husb: update iface. device already grabbed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="139:15" pos:end="143:13">else <block pos:start="139:20" pos:end="143:13">{<block_content pos:start="141:17" pos:end="141:58">

                <expr_stmt pos:start="141:17" pos:end="141:58"><expr pos:start="141:17" pos:end="141:57"><call pos:start="141:17" pos:end="141:57"><name pos:start="141:17" pos:end="141:22">perror</name><argument_list pos:start="141:23" pos:end="141:57">(<argument pos:start="141:24" pos:end="141:56"><expr pos:start="141:24" pos:end="141:56"><literal type="string" pos:start="141:24" pos:end="141:56">"husb: failed to claim interface"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        <label pos:start="145:9" pos:end="145:13"><name pos:start="145:9" pos:end="145:12">fail</name>:</label>

            <return pos:start="147:13" pos:end="147:21">return <expr pos:start="147:20" pos:end="147:20"><literal type="number" pos:start="147:20" pos:end="147:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="155:5" pos:end="157:41"><expr pos:start="155:5" pos:end="157:40"><call pos:start="155:5" pos:end="157:40"><name pos:start="155:5" pos:end="155:10">printf</name><argument_list pos:start="155:11" pos:end="157:40">(<argument pos:start="155:12" pos:end="155:63"><expr pos:start="155:12" pos:end="155:63"><literal type="string" pos:start="155:12" pos:end="155:63">"husb: %d interfaces claimed for configuration %d\n"</literal></expr></argument>,

           <argument pos:start="157:12" pos:end="157:24"><expr pos:start="157:12" pos:end="157:24"><name pos:start="157:12" pos:end="157:24">nb_interfaces</name></expr></argument>, <argument pos:start="157:27" pos:end="157:39"><expr pos:start="157:27" pos:end="157:39"><name pos:start="157:27" pos:end="157:39">configuration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:39"><expr pos:start="161:5" pos:end="161:38"><name pos:start="161:5" pos:end="161:20"><name pos:start="161:5" pos:end="161:7">dev</name><operator pos:start="161:8" pos:end="161:9">-&gt;</operator><name pos:start="161:10" pos:end="161:20">ninterfaces</name></name>   <operator pos:start="161:24" pos:end="161:24">=</operator> <name pos:start="161:26" pos:end="161:38">nb_interfaces</name></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:39"><expr pos:start="163:5" pos:end="163:38"><name pos:start="163:5" pos:end="163:22"><name pos:start="163:5" pos:end="163:7">dev</name><operator pos:start="163:8" pos:end="163:9">-&gt;</operator><name pos:start="163:10" pos:end="163:22">configuration</name></name> <operator pos:start="163:24" pos:end="163:24">=</operator> <name pos:start="163:26" pos:end="163:38">configuration</name></expr>;</expr_stmt>

    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><literal type="number" pos:start="165:12" pos:end="165:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
