<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9565.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mov_write_trailer</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="191:1">{<block_content pos:start="5:5" pos:end="189:15">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MOVMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">mov</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">res</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:20">moov_pos</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="23:7">/*

     * Before actually writing the trailer, make sure that there are no

     * dangling subtitles, that need a terminating sample.

     */</comment>

    <for pos:start="25:5" pos:end="39:5">for <control pos:start="25:9" pos:end="25:41">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:36"><expr pos:start="25:17" pos:end="25:35"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:35"><name pos:start="25:21" pos:end="25:23">mov</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:35">nb_streams</name></name></expr>;</condition> <incr pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:38">i</name><operator pos:start="25:39" pos:end="25:40">++</operator></expr></incr>)</control> <block pos:start="25:43" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:9">

        <decl_stmt pos:start="27:9" pos:end="27:40"><decl pos:start="27:9" pos:end="27:39"><type pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:16">MOVTrack</name> <modifier pos:start="27:18" pos:end="27:18">*</modifier></type><name pos:start="27:19" pos:end="27:21">trk</name> <init pos:start="27:23" pos:end="27:39">= <expr pos:start="27:25" pos:end="27:39"><operator pos:start="27:25" pos:end="27:25">&amp;</operator><name pos:start="27:26" pos:end="27:39"><name pos:start="27:26" pos:end="27:28">mov</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:36">tracks</name><index pos:start="27:37" pos:end="27:39">[<expr pos:start="27:38" pos:end="27:38"><name pos:start="27:38" pos:end="27:38">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="31:46">(<expr pos:start="29:13" pos:end="31:45"><name pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:15">trk</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:20">enc</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:30">codec_id</name></name> <operator pos:start="29:32" pos:end="29:33">==</operator> <name pos:start="29:35" pos:end="29:54">AV_CODEC_ID_MOV_TEXT</name> <operator pos:start="29:56" pos:end="29:57">&amp;&amp;</operator>

            <operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:45"><name pos:start="31:14" pos:end="31:16">trk</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:45">last_sample_is_subtitle_end</name></name></expr>)</condition> <block pos:start="31:48" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:49">

            <expr_stmt pos:start="33:13" pos:end="33:69"><expr pos:start="33:13" pos:end="33:68"><call pos:start="33:13" pos:end="33:68"><name pos:start="33:13" pos:end="33:41">mov_write_subtitle_end_packet</name><argument_list pos:start="33:42" pos:end="33:68">(<argument pos:start="33:43" pos:end="33:43"><expr pos:start="33:43" pos:end="33:43"><name pos:start="33:43" pos:end="33:43">s</name></expr></argument>, <argument pos:start="33:46" pos:end="33:46"><expr pos:start="33:46" pos:end="33:46"><name pos:start="33:46" pos:end="33:46">i</name></expr></argument>, <argument pos:start="33:49" pos:end="33:67"><expr pos:start="33:49" pos:end="33:67"><name pos:start="33:49" pos:end="33:67"><name pos:start="33:49" pos:end="33:51">trk</name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:67">track_duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:49"><expr pos:start="35:13" pos:end="35:48"><name pos:start="35:13" pos:end="35:44"><name pos:start="35:13" pos:end="35:15">trk</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:44">last_sample_is_subtitle_end</name></name> <operator pos:start="35:46" pos:end="35:46">=</operator> <literal type="number" pos:start="35:48" pos:end="35:48">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="43:5" pos:end="43:71">// If there were no chapters when the header was written, but there</comment>

    <comment type="line" pos:start="45:5" pos:end="45:68">// are chapters now, write them in the trailer.  This only works</comment>

    <comment type="line" pos:start="47:5" pos:end="47:39">// when we are not doing fragments.</comment>

    <if_stmt pos:start="49:5" pos:end="61:5"><if pos:start="49:5" pos:end="61:5">if <condition pos:start="49:8" pos:end="49:68">(<expr pos:start="49:9" pos:end="49:67"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:27"><name pos:start="49:10" pos:end="49:12">mov</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:27">chapter_track</name></name> <operator pos:start="49:29" pos:end="49:30">&amp;&amp;</operator> <operator pos:start="49:32" pos:end="49:32">!</operator><operator pos:start="49:33" pos:end="49:33">(</operator><name pos:start="49:34" pos:end="49:43"><name pos:start="49:34" pos:end="49:36">mov</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:43">flags</name></name> <operator pos:start="49:45" pos:end="49:45">&amp;</operator> <name pos:start="49:47" pos:end="49:66">FF_MOV_FLAG_FRAGMENT</name><operator pos:start="49:67" pos:end="49:67">)</operator></expr>)</condition> <block pos:start="49:70" pos:end="61:5">{<block_content pos:start="51:9" pos:end="59:9">

        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="59:9">if <condition pos:start="51:12" pos:end="51:72">(<expr pos:start="51:13" pos:end="51:71"><name pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:15">mov</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:21">mode</name></name> <operator pos:start="51:23" pos:end="51:23">&amp;</operator> <operator pos:start="51:25" pos:end="51:25">(</operator><name pos:start="51:26" pos:end="51:33">MODE_MP4</name><operator pos:start="51:34" pos:end="51:34">|</operator><name pos:start="51:35" pos:end="51:42">MODE_MOV</name><operator pos:start="51:43" pos:end="51:43">|</operator><name pos:start="51:44" pos:end="51:52">MODE_IPOD</name><operator pos:start="51:53" pos:end="51:53">)</operator> <operator pos:start="51:55" pos:end="51:56">&amp;&amp;</operator> <name pos:start="51:58" pos:end="51:71"><name pos:start="51:58" pos:end="51:58">s</name><operator pos:start="51:59" pos:end="51:60">-&gt;</operator><name pos:start="51:61" pos:end="51:71">nb_chapters</name></name></expr>)</condition> <block pos:start="51:74" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:27">

            <expr_stmt pos:start="53:13" pos:end="53:51"><expr pos:start="53:13" pos:end="53:50"><name pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:15">mov</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:30">chapter_track</name></name> <operator pos:start="53:32" pos:end="53:32">=</operator> <name pos:start="53:34" pos:end="53:48"><name pos:start="53:34" pos:end="53:36">mov</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:48">nb_streams</name></name><operator pos:start="53:49" pos:end="53:50">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="57:27"><if pos:start="55:13" pos:end="57:27">if <condition pos:start="55:16" pos:end="55:76">(<expr pos:start="55:17" pos:end="55:75"><operator pos:start="55:17" pos:end="55:17">(</operator><name pos:start="55:18" pos:end="55:20">res</name> <operator pos:start="55:22" pos:end="55:22">=</operator> <call pos:start="55:24" pos:end="55:70"><name pos:start="55:24" pos:end="55:47">mov_create_chapter_track</name><argument_list pos:start="55:48" pos:end="55:70">(<argument pos:start="55:49" pos:end="55:49"><expr pos:start="55:49" pos:end="55:49"><name pos:start="55:49" pos:end="55:49">s</name></expr></argument>, <argument pos:start="55:52" pos:end="55:69"><expr pos:start="55:52" pos:end="55:69"><name pos:start="55:52" pos:end="55:69"><name pos:start="55:52" pos:end="55:54">mov</name><operator pos:start="55:55" pos:end="55:56">-&gt;</operator><name pos:start="55:57" pos:end="55:69">chapter_track</name></name></expr></argument>)</argument_list></call><operator pos:start="55:71" pos:end="55:71">)</operator> <operator pos:start="55:73" pos:end="55:73">&lt;</operator> <literal type="number" pos:start="55:75" pos:end="55:75">0</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:27"><block_content pos:start="57:17" pos:end="57:27">

                <goto pos:start="57:17" pos:end="57:27">goto <name pos:start="57:22" pos:end="57:26">error</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="153:5"><if pos:start="65:5" pos:end="147:5">if <condition pos:start="65:8" pos:end="65:45">(<expr pos:start="65:9" pos:end="65:44"><operator pos:start="65:9" pos:end="65:9">!</operator><operator pos:start="65:10" pos:end="65:10">(</operator><name pos:start="65:11" pos:end="65:20"><name pos:start="65:11" pos:end="65:13">mov</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:20">flags</name></name> <operator pos:start="65:22" pos:end="65:22">&amp;</operator> <name pos:start="65:24" pos:end="65:43">FF_MOV_FLAG_FRAGMENT</name><operator pos:start="65:44" pos:end="65:44">)</operator></expr>)</condition> <block pos:start="65:47" pos:end="147:5">{<block_content pos:start="67:9" pos:end="145:9">

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:16">moov_pos</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:32"><name pos:start="67:20" pos:end="67:28">avio_tell</name><argument_list pos:start="67:29" pos:end="67:32">(<argument pos:start="67:30" pos:end="67:31"><expr pos:start="67:30" pos:end="67:31"><name pos:start="67:30" pos:end="67:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="71:9" pos:end="71:36">/* Write size of mdat tag */</comment>

        <if_stmt pos:start="73:9" pos:end="95:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:45">(<expr pos:start="73:13" pos:end="73:44"><name pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:15">mov</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:26">mdat_size</name></name> <operator pos:start="73:28" pos:end="73:28">+</operator> <literal type="number" pos:start="73:30" pos:end="73:30">8</literal> <operator pos:start="73:32" pos:end="73:33">&lt;=</operator> <name pos:start="73:35" pos:end="73:44">UINT32_MAX</name></expr>)</condition> <block pos:start="73:47" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:46">

            <expr_stmt pos:start="75:13" pos:end="75:51"><expr pos:start="75:13" pos:end="75:50"><call pos:start="75:13" pos:end="75:50"><name pos:start="75:13" pos:end="75:21">avio_seek</name><argument_list pos:start="75:22" pos:end="75:50">(<argument pos:start="75:23" pos:end="75:24"><expr pos:start="75:23" pos:end="75:24"><name pos:start="75:23" pos:end="75:24">pb</name></expr></argument>, <argument pos:start="75:27" pos:end="75:39"><expr pos:start="75:27" pos:end="75:39"><name pos:start="75:27" pos:end="75:39"><name pos:start="75:27" pos:end="75:29">mov</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:39">mdat_pos</name></name></expr></argument>, <argument pos:start="75:42" pos:end="75:49"><expr pos:start="75:42" pos:end="75:49"><name pos:start="75:42" pos:end="75:49">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:46"><expr pos:start="77:13" pos:end="77:45"><call pos:start="77:13" pos:end="77:45"><name pos:start="77:13" pos:end="77:21">avio_wb32</name><argument_list pos:start="77:22" pos:end="77:45">(<argument pos:start="77:23" pos:end="77:24"><expr pos:start="77:23" pos:end="77:24"><name pos:start="77:23" pos:end="77:24">pb</name></expr></argument>, <argument pos:start="77:27" pos:end="77:44"><expr pos:start="77:27" pos:end="77:44"><name pos:start="77:27" pos:end="77:40"><name pos:start="77:27" pos:end="77:29">mov</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:40">mdat_size</name></name> <operator pos:start="77:42" pos:end="77:42">+</operator> <literal type="number" pos:start="77:44" pos:end="77:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="79:11" pos:end="95:9">else <block pos:start="79:16" pos:end="95:9">{<block_content pos:start="83:13" pos:end="93:47">

            <comment type="block" pos:start="81:13" pos:end="81:51">/* overwrite 'wide' placeholder atom */</comment>

            <expr_stmt pos:start="83:13" pos:end="83:55"><expr pos:start="83:13" pos:end="83:54"><call pos:start="83:13" pos:end="83:54"><name pos:start="83:13" pos:end="83:21">avio_seek</name><argument_list pos:start="83:22" pos:end="83:54">(<argument pos:start="83:23" pos:end="83:24"><expr pos:start="83:23" pos:end="83:24"><name pos:start="83:23" pos:end="83:24">pb</name></expr></argument>, <argument pos:start="83:27" pos:end="83:43"><expr pos:start="83:27" pos:end="83:43"><name pos:start="83:27" pos:end="83:39"><name pos:start="83:27" pos:end="83:29">mov</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:39">mdat_pos</name></name> <operator pos:start="83:41" pos:end="83:41">-</operator> <literal type="number" pos:start="83:43" pos:end="83:43">8</literal></expr></argument>, <argument pos:start="83:46" pos:end="83:53"><expr pos:start="83:46" pos:end="83:53"><name pos:start="83:46" pos:end="83:53">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="85:13" pos:end="87:27">/* special value: real atom size will be 64 bit value after

             * tag field */</comment>

            <expr_stmt pos:start="89:13" pos:end="89:29"><expr pos:start="89:13" pos:end="89:28"><call pos:start="89:13" pos:end="89:28"><name pos:start="89:13" pos:end="89:21">avio_wb32</name><argument_list pos:start="89:22" pos:end="89:28">(<argument pos:start="89:23" pos:end="89:24"><expr pos:start="89:23" pos:end="89:24"><name pos:start="89:23" pos:end="89:24">pb</name></expr></argument>, <argument pos:start="89:27" pos:end="89:27"><expr pos:start="89:27" pos:end="89:27"><literal type="number" pos:start="89:27" pos:end="89:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:37"><expr pos:start="91:13" pos:end="91:36"><call pos:start="91:13" pos:end="91:36"><name pos:start="91:13" pos:end="91:24">ffio_wfourcc</name><argument_list pos:start="91:25" pos:end="91:36">(<argument pos:start="91:26" pos:end="91:27"><expr pos:start="91:26" pos:end="91:27"><name pos:start="91:26" pos:end="91:27">pb</name></expr></argument>, <argument pos:start="91:30" pos:end="91:35"><expr pos:start="91:30" pos:end="91:35"><literal type="string" pos:start="91:30" pos:end="91:35">"mdat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:47"><expr pos:start="93:13" pos:end="93:46"><call pos:start="93:13" pos:end="93:46"><name pos:start="93:13" pos:end="93:21">avio_wb64</name><argument_list pos:start="93:22" pos:end="93:46">(<argument pos:start="93:23" pos:end="93:24"><expr pos:start="93:23" pos:end="93:24"><name pos:start="93:23" pos:end="93:24">pb</name></expr></argument>, <argument pos:start="93:27" pos:end="93:45"><expr pos:start="93:27" pos:end="93:45"><name pos:start="93:27" pos:end="93:40"><name pos:start="93:27" pos:end="93:29">mov</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:40">mdat_size</name></name> <operator pos:start="93:42" pos:end="93:42">+</operator> <literal type="number" pos:start="93:44" pos:end="93:45">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:97"><expr pos:start="97:9" pos:end="97:96"><call pos:start="97:9" pos:end="97:96"><name pos:start="97:9" pos:end="97:17">avio_seek</name><argument_list pos:start="97:18" pos:end="97:96">(<argument pos:start="97:19" pos:end="97:20"><expr pos:start="97:19" pos:end="97:20"><name pos:start="97:19" pos:end="97:20">pb</name></expr></argument>, <argument pos:start="97:23" pos:end="97:85"><expr pos:start="97:23" pos:end="97:85"><ternary pos:start="97:23" pos:end="97:85"><condition pos:start="97:23" pos:end="97:51"><expr pos:start="97:23" pos:end="97:49"><name pos:start="97:23" pos:end="97:45"><name pos:start="97:23" pos:end="97:25">mov</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:45">reserved_moov_size</name></name> <operator pos:start="97:47" pos:end="97:47">&gt;</operator> <literal type="number" pos:start="97:49" pos:end="97:49">0</literal></expr> ?</condition><then pos:start="97:53" pos:end="97:74"> <expr pos:start="97:53" pos:end="97:74"><name pos:start="97:53" pos:end="97:74"><name pos:start="97:53" pos:end="97:55">mov</name><operator pos:start="97:56" pos:end="97:57">-&gt;</operator><name pos:start="97:58" pos:end="97:74">reserved_moov_pos</name></name></expr> </then><else pos:start="97:76" pos:end="97:85">: <expr pos:start="97:78" pos:end="97:85"><name pos:start="97:78" pos:end="97:85">moov_pos</name></expr></else></ternary></expr></argument>, <argument pos:start="97:88" pos:end="97:95"><expr pos:start="97:88" pos:end="97:95"><name pos:start="97:88" pos:end="97:95">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="101:9" pos:end="145:9"><if pos:start="101:9" pos:end="115:9">if <condition pos:start="101:12" pos:end="101:47">(<expr pos:start="101:13" pos:end="101:46"><name pos:start="101:13" pos:end="101:22"><name pos:start="101:13" pos:end="101:15">mov</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:22">flags</name></name> <operator pos:start="101:24" pos:end="101:24">&amp;</operator> <name pos:start="101:26" pos:end="101:46">FF_MOV_FLAG_FASTSTART</name></expr>)</condition> <block pos:start="101:49" pos:end="115:9">{<block_content pos:start="103:13" pos:end="113:13">

            <expr_stmt pos:start="103:13" pos:end="103:112"><expr pos:start="103:13" pos:end="103:111"><call pos:start="103:13" pos:end="103:111"><name pos:start="103:13" pos:end="103:18">av_log</name><argument_list pos:start="103:19" pos:end="103:111">(<argument pos:start="103:20" pos:end="103:20"><expr pos:start="103:20" pos:end="103:20"><name pos:start="103:20" pos:end="103:20">s</name></expr></argument>, <argument pos:start="103:23" pos:end="103:33"><expr pos:start="103:23" pos:end="103:33"><name pos:start="103:23" pos:end="103:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="103:36" pos:end="103:110"><expr pos:start="103:36" pos:end="103:110"><literal type="string" pos:start="103:36" pos:end="103:110">"Starting second pass: moving the moov atom to the beginning of the file\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:32"><expr pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:15">res</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <call pos:start="105:19" pos:end="105:31"><name pos:start="105:19" pos:end="105:28">shift_data</name><argument_list pos:start="105:29" pos:end="105:31">(<argument pos:start="105:30" pos:end="105:30"><expr pos:start="105:30" pos:end="105:30"><name pos:start="105:30" pos:end="105:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="113:13"><if pos:start="107:13" pos:end="113:13">if <condition pos:start="107:16" pos:end="107:25">(<expr pos:start="107:17" pos:end="107:24"><name pos:start="107:17" pos:end="107:19">res</name> <operator pos:start="107:21" pos:end="107:22">==</operator> <literal type="number" pos:start="107:24" pos:end="107:24">0</literal></expr>)</condition> <block pos:start="107:27" pos:end="113:13">{<block_content pos:start="109:17" pos:end="111:47">

                <expr_stmt pos:start="109:17" pos:end="109:67"><expr pos:start="109:17" pos:end="109:66"><call pos:start="109:17" pos:end="109:66"><name pos:start="109:17" pos:end="109:25">avio_seek</name><argument_list pos:start="109:26" pos:end="109:66">(<argument pos:start="109:27" pos:end="109:31"><expr pos:start="109:27" pos:end="109:31"><name pos:start="109:27" pos:end="109:31"><name pos:start="109:27" pos:end="109:27">s</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:31">pb</name></name></expr></argument>, <argument pos:start="109:34" pos:end="109:55"><expr pos:start="109:34" pos:end="109:55"><name pos:start="109:34" pos:end="109:55"><name pos:start="109:34" pos:end="109:36">mov</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:55">reserved_moov_pos</name></name></expr></argument>, <argument pos:start="109:58" pos:end="109:65"><expr pos:start="109:58" pos:end="109:65"><name pos:start="109:58" pos:end="109:65">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:47"><expr pos:start="111:17" pos:end="111:46"><call pos:start="111:17" pos:end="111:46"><name pos:start="111:17" pos:end="111:34">mov_write_moov_tag</name><argument_list pos:start="111:35" pos:end="111:46">(<argument pos:start="111:36" pos:end="111:37"><expr pos:start="111:36" pos:end="111:37"><name pos:start="111:36" pos:end="111:37">pb</name></expr></argument>, <argument pos:start="111:40" pos:end="111:42"><expr pos:start="111:40" pos:end="111:42"><name pos:start="111:40" pos:end="111:42">mov</name></expr></argument>, <argument pos:start="111:45" pos:end="111:45"><expr pos:start="111:45" pos:end="111:45"><name pos:start="111:45" pos:end="111:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="115:11" pos:end="141:9">else if <condition pos:start="115:19" pos:end="115:47">(<expr pos:start="115:20" pos:end="115:46"><name pos:start="115:20" pos:end="115:42"><name pos:start="115:20" pos:end="115:22">mov</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:42">reserved_moov_size</name></name> <operator pos:start="115:44" pos:end="115:44">&gt;</operator> <literal type="number" pos:start="115:46" pos:end="115:46">0</literal></expr>)</condition> <block pos:start="115:49" pos:end="141:9">{<block_content pos:start="117:13" pos:end="139:46">

            <decl_stmt pos:start="117:13" pos:end="117:25"><decl pos:start="117:13" pos:end="117:24"><type pos:start="117:13" pos:end="117:19"><name pos:start="117:13" pos:end="117:19">int64_t</name></type> <name pos:start="117:21" pos:end="117:24">size</name></decl>;</decl_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:43"><expr pos:start="119:13" pos:end="119:42"><call pos:start="119:13" pos:end="119:42"><name pos:start="119:13" pos:end="119:30">mov_write_moov_tag</name><argument_list pos:start="119:31" pos:end="119:42">(<argument pos:start="119:32" pos:end="119:33"><expr pos:start="119:32" pos:end="119:33"><name pos:start="119:32" pos:end="119:33">pb</name></expr></argument>, <argument pos:start="119:36" pos:end="119:38"><expr pos:start="119:36" pos:end="119:38"><name pos:start="119:36" pos:end="119:38">mov</name></expr></argument>, <argument pos:start="119:41" pos:end="119:41"><expr pos:start="119:41" pos:end="119:41"><name pos:start="119:41" pos:end="119:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:86"><expr pos:start="121:13" pos:end="121:85"><name pos:start="121:13" pos:end="121:16">size</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <name pos:start="121:20" pos:end="121:42"><name pos:start="121:20" pos:end="121:22">mov</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:42">reserved_moov_size</name></name> <operator pos:start="121:44" pos:end="121:44">-</operator> <operator pos:start="121:46" pos:end="121:46">(</operator><call pos:start="121:47" pos:end="121:59"><name pos:start="121:47" pos:end="121:55">avio_tell</name><argument_list pos:start="121:56" pos:end="121:59">(<argument pos:start="121:57" pos:end="121:58"><expr pos:start="121:57" pos:end="121:58"><name pos:start="121:57" pos:end="121:58">pb</name></expr></argument>)</argument_list></call> <operator pos:start="121:61" pos:end="121:61">-</operator> <name pos:start="121:63" pos:end="121:84"><name pos:start="121:63" pos:end="121:65">mov</name><operator pos:start="121:66" pos:end="121:67">-&gt;</operator><name pos:start="121:68" pos:end="121:84">reserved_moov_pos</name></name><operator pos:start="121:85" pos:end="121:85">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="129:13"><if pos:start="123:13" pos:end="129:13">if <condition pos:start="123:16" pos:end="123:25">(<expr pos:start="123:17" pos:end="123:24"><name pos:start="123:17" pos:end="123:20">size</name> <operator pos:start="123:22" pos:end="123:22">&lt;</operator> <literal type="number" pos:start="123:24" pos:end="123:24">8</literal></expr>)</condition><block pos:start="123:26" pos:end="129:13">{<block_content pos:start="125:17" pos:end="127:26">

                <expr_stmt pos:start="125:17" pos:end="125:114"><expr pos:start="125:17" pos:end="125:113"><call pos:start="125:17" pos:end="125:113"><name pos:start="125:17" pos:end="125:22">av_log</name><argument_list pos:start="125:23" pos:end="125:113">(<argument pos:start="125:24" pos:end="125:24"><expr pos:start="125:24" pos:end="125:24"><name pos:start="125:24" pos:end="125:24">s</name></expr></argument>, <argument pos:start="125:27" pos:end="125:38"><expr pos:start="125:27" pos:end="125:38"><name pos:start="125:27" pos:end="125:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:41" pos:end="125:104"><expr pos:start="125:41" pos:end="125:104"><literal type="string" pos:start="125:41" pos:end="125:83">"reserved_moov_size is too small, needed %"</literal><name pos:start="125:84" pos:end="125:89">PRId64</name><literal type="string" pos:start="125:90" pos:end="125:104">" additional\n"</literal></expr></argument>, <argument pos:start="125:107" pos:end="125:112"><expr pos:start="125:107" pos:end="125:112"><literal type="number" pos:start="125:107" pos:end="125:108">8</literal><operator pos:start="125:108" pos:end="125:108">-</operator><name pos:start="125:109" pos:end="125:112">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="127:17" pos:end="127:26">return <expr pos:start="127:24" pos:end="127:25"><operator pos:start="127:24" pos:end="127:24">-</operator><literal type="number" pos:start="127:25" pos:end="127:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:32"><expr pos:start="131:13" pos:end="131:31"><call pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:21">avio_wb32</name><argument_list pos:start="131:22" pos:end="131:31">(<argument pos:start="131:23" pos:end="131:24"><expr pos:start="131:23" pos:end="131:24"><name pos:start="131:23" pos:end="131:24">pb</name></expr></argument>, <argument pos:start="131:27" pos:end="131:30"><expr pos:start="131:27" pos:end="131:30"><name pos:start="131:27" pos:end="131:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:37"><expr pos:start="133:13" pos:end="133:36"><call pos:start="133:13" pos:end="133:36"><name pos:start="133:13" pos:end="133:24">ffio_wfourcc</name><argument_list pos:start="133:25" pos:end="133:36">(<argument pos:start="133:26" pos:end="133:27"><expr pos:start="133:26" pos:end="133:27"><name pos:start="133:26" pos:end="133:27">pb</name></expr></argument>, <argument pos:start="133:30" pos:end="133:35"><expr pos:start="133:30" pos:end="133:35"><literal type="string" pos:start="133:30" pos:end="133:35">"free"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="135:13" pos:end="137:31">for <control pos:start="135:17" pos:end="135:38">(<init pos:start="135:18" pos:end="135:23"><expr pos:start="135:18" pos:end="135:22"><name pos:start="135:18" pos:end="135:18">i</name> <operator pos:start="135:20" pos:end="135:20">=</operator> <literal type="number" pos:start="135:22" pos:end="135:22">0</literal></expr>;</init> <condition pos:start="135:25" pos:end="135:33"><expr pos:start="135:25" pos:end="135:32"><name pos:start="135:25" pos:end="135:25">i</name> <operator pos:start="135:27" pos:end="135:27">&lt;</operator> <name pos:start="135:29" pos:end="135:32">size</name></expr>;</condition> <incr pos:start="135:35" pos:end="135:37"><expr pos:start="135:35" pos:end="135:37"><name pos:start="135:35" pos:end="135:35">i</name><operator pos:start="135:36" pos:end="135:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:17" pos:end="137:31"><block_content pos:start="137:17" pos:end="137:31">

                <expr_stmt pos:start="137:17" pos:end="137:31"><expr pos:start="137:17" pos:end="137:30"><call pos:start="137:17" pos:end="137:30"><name pos:start="137:17" pos:end="137:23">avio_w8</name><argument_list pos:start="137:24" pos:end="137:30">(<argument pos:start="137:25" pos:end="137:26"><expr pos:start="137:25" pos:end="137:26"><name pos:start="137:25" pos:end="137:26">pb</name></expr></argument>, <argument pos:start="137:29" pos:end="137:29"><expr pos:start="137:29" pos:end="137:29"><literal type="number" pos:start="137:29" pos:end="137:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="139:13" pos:end="139:46"><expr pos:start="139:13" pos:end="139:45"><call pos:start="139:13" pos:end="139:45"><name pos:start="139:13" pos:end="139:21">avio_seek</name><argument_list pos:start="139:22" pos:end="139:45">(<argument pos:start="139:23" pos:end="139:24"><expr pos:start="139:23" pos:end="139:24"><name pos:start="139:23" pos:end="139:24">pb</name></expr></argument>, <argument pos:start="139:27" pos:end="139:34"><expr pos:start="139:27" pos:end="139:34"><name pos:start="139:27" pos:end="139:34">moov_pos</name></expr></argument>, <argument pos:start="139:37" pos:end="139:44"><expr pos:start="139:37" pos:end="139:44"><name pos:start="139:37" pos:end="139:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="141:11" pos:end="145:9">else <block pos:start="141:16" pos:end="145:9">{<block_content pos:start="143:13" pos:end="143:43">

            <expr_stmt pos:start="143:13" pos:end="143:43"><expr pos:start="143:13" pos:end="143:42"><call pos:start="143:13" pos:end="143:42"><name pos:start="143:13" pos:end="143:30">mov_write_moov_tag</name><argument_list pos:start="143:31" pos:end="143:42">(<argument pos:start="143:32" pos:end="143:33"><expr pos:start="143:32" pos:end="143:33"><name pos:start="143:32" pos:end="143:33">pb</name></expr></argument>, <argument pos:start="143:36" pos:end="143:38"><expr pos:start="143:36" pos:end="143:38"><name pos:start="143:36" pos:end="143:38">mov</name></expr></argument>, <argument pos:start="143:41" pos:end="143:41"><expr pos:start="143:41" pos:end="143:41"><name pos:start="143:41" pos:end="143:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="147:7" pos:end="153:5">else <block pos:start="147:12" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:36">

        <expr_stmt pos:start="149:9" pos:end="149:30"><expr pos:start="149:9" pos:end="149:29"><call pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:26">mov_flush_fragment</name><argument_list pos:start="149:27" pos:end="149:29">(<argument pos:start="149:28" pos:end="149:28"><expr pos:start="149:28" pos:end="149:28"><name pos:start="149:28" pos:end="149:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:36"><expr pos:start="151:9" pos:end="151:35"><call pos:start="151:9" pos:end="151:35"><name pos:start="151:9" pos:end="151:26">mov_write_mfra_tag</name><argument_list pos:start="151:27" pos:end="151:35">(<argument pos:start="151:28" pos:end="151:29"><expr pos:start="151:28" pos:end="151:29"><name pos:start="151:28" pos:end="151:29">pb</name></expr></argument>, <argument pos:start="151:32" pos:end="151:34"><expr pos:start="151:32" pos:end="151:34"><name pos:start="151:32" pos:end="151:34">mov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="157:5" pos:end="179:5">for <control pos:start="157:9" pos:end="157:41">(<init pos:start="157:10" pos:end="157:15"><expr pos:start="157:10" pos:end="157:14"><name pos:start="157:10" pos:end="157:10">i</name> <operator pos:start="157:12" pos:end="157:12">=</operator> <literal type="number" pos:start="157:14" pos:end="157:14">0</literal></expr>;</init> <condition pos:start="157:17" pos:end="157:36"><expr pos:start="157:17" pos:end="157:35"><name pos:start="157:17" pos:end="157:17">i</name> <operator pos:start="157:19" pos:end="157:19">&lt;</operator> <name pos:start="157:21" pos:end="157:35"><name pos:start="157:21" pos:end="157:23">mov</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:35">nb_streams</name></name></expr>;</condition> <incr pos:start="157:38" pos:end="157:40"><expr pos:start="157:38" pos:end="157:40"><name pos:start="157:38" pos:end="157:38">i</name><operator pos:start="157:39" pos:end="157:40">++</operator></expr></incr>)</control> <block pos:start="157:43" pos:end="179:5">{<block_content pos:start="159:9" pos:end="177:9">

        <if_stmt pos:start="159:9" pos:end="177:9"><if pos:start="159:9" pos:end="177:9">if <condition pos:start="159:12" pos:end="161:69">(<expr pos:start="159:13" pos:end="161:68"><name pos:start="159:13" pos:end="159:22"><name pos:start="159:13" pos:end="159:15">mov</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:22">flags</name></name> <operator pos:start="159:24" pos:end="159:24">&amp;</operator> <name pos:start="159:26" pos:end="159:45">FF_MOV_FLAG_FRAGMENT</name> <operator pos:start="159:47" pos:end="159:48">&amp;&amp;</operator>

            <name pos:start="161:13" pos:end="161:26"><name pos:start="161:13" pos:end="161:15">mov</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:23">tracks</name><index pos:start="161:24" pos:end="161:26">[<expr pos:start="161:25" pos:end="161:25"><name pos:start="161:25" pos:end="161:25">i</name></expr>]</index></name><operator pos:start="161:27" pos:end="161:27">.</operator><name pos:start="161:28" pos:end="161:49"><name pos:start="161:28" pos:end="161:35">vc1_info</name><operator pos:start="161:36" pos:end="161:36">.</operator><name pos:start="161:37" pos:end="161:49">struct_offset</name></name> <operator pos:start="161:51" pos:end="161:52">&amp;&amp;</operator> <name pos:start="161:54" pos:end="161:68"><name pos:start="161:54" pos:end="161:54">s</name><operator pos:start="161:55" pos:end="161:56">-&gt;</operator><name pos:start="161:57" pos:end="161:58">pb</name><operator pos:start="161:59" pos:end="161:60">-&gt;</operator><name pos:start="161:61" pos:end="161:68">seekable</name></name></expr>)</condition> <block pos:start="161:71" pos:end="177:9">{<block_content pos:start="163:13" pos:end="175:13">

            <decl_stmt pos:start="163:13" pos:end="163:40"><decl pos:start="163:13" pos:end="163:39"><type pos:start="163:13" pos:end="163:19"><name pos:start="163:13" pos:end="163:19">int64_t</name></type> <name pos:start="163:21" pos:end="163:23">off</name> <init pos:start="163:25" pos:end="163:39">= <expr pos:start="163:27" pos:end="163:39"><call pos:start="163:27" pos:end="163:39"><name pos:start="163:27" pos:end="163:35">avio_tell</name><argument_list pos:start="163:36" pos:end="163:39">(<argument pos:start="163:37" pos:end="163:38"><expr pos:start="163:37" pos:end="163:38"><name pos:start="163:37" pos:end="163:38">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="165:13" pos:end="165:27"><decl pos:start="165:13" pos:end="165:26"><type pos:start="165:13" pos:end="165:19"><name pos:start="165:13" pos:end="165:19">uint8_t</name></type> <name pos:start="165:21" pos:end="165:26"><name pos:start="165:21" pos:end="165:23">buf</name><index pos:start="165:24" pos:end="165:26">[<expr pos:start="165:25" pos:end="165:25"><literal type="number" pos:start="165:25" pos:end="165:25">7</literal></expr>]</index></name></decl>;</decl_stmt>

            <if_stmt pos:start="167:13" pos:end="175:13"><if pos:start="167:13" pos:end="175:13">if <condition pos:start="167:16" pos:end="167:66">(<expr pos:start="167:17" pos:end="167:65"><call pos:start="167:17" pos:end="167:60"><name pos:start="167:17" pos:end="167:38">mov_write_dvc1_structs</name><argument_list pos:start="167:39" pos:end="167:60">(<argument pos:start="167:40" pos:end="167:54"><expr pos:start="167:40" pos:end="167:54"><operator pos:start="167:40" pos:end="167:40">&amp;</operator><name pos:start="167:41" pos:end="167:54"><name pos:start="167:41" pos:end="167:43">mov</name><operator pos:start="167:44" pos:end="167:45">-&gt;</operator><name pos:start="167:46" pos:end="167:51">tracks</name><index pos:start="167:52" pos:end="167:54">[<expr pos:start="167:53" pos:end="167:53"><name pos:start="167:53" pos:end="167:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="167:57" pos:end="167:59"><expr pos:start="167:57" pos:end="167:59"><name pos:start="167:57" pos:end="167:59">buf</name></expr></argument>)</argument_list></call> <operator pos:start="167:62" pos:end="167:63">&gt;=</operator> <literal type="number" pos:start="167:65" pos:end="167:65">0</literal></expr>)</condition> <block pos:start="167:68" pos:end="175:13">{<block_content pos:start="169:17" pos:end="173:45">

                <expr_stmt pos:start="169:17" pos:end="169:79"><expr pos:start="169:17" pos:end="169:78"><call pos:start="169:17" pos:end="169:78"><name pos:start="169:17" pos:end="169:25">avio_seek</name><argument_list pos:start="169:26" pos:end="169:78">(<argument pos:start="169:27" pos:end="169:28"><expr pos:start="169:27" pos:end="169:28"><name pos:start="169:27" pos:end="169:28">pb</name></expr></argument>, <argument pos:start="169:31" pos:end="169:67"><expr pos:start="169:31" pos:end="169:67"><name pos:start="169:31" pos:end="169:44"><name pos:start="169:31" pos:end="169:33">mov</name><operator pos:start="169:34" pos:end="169:35">-&gt;</operator><name pos:start="169:36" pos:end="169:41">tracks</name><index pos:start="169:42" pos:end="169:44">[<expr pos:start="169:43" pos:end="169:43"><name pos:start="169:43" pos:end="169:43">i</name></expr>]</index></name><operator pos:start="169:45" pos:end="169:45">.</operator><name pos:start="169:46" pos:end="169:67"><name pos:start="169:46" pos:end="169:53">vc1_info</name><operator pos:start="169:54" pos:end="169:54">.</operator><name pos:start="169:55" pos:end="169:67">struct_offset</name></name></expr></argument>, <argument pos:start="169:70" pos:end="169:77"><expr pos:start="169:70" pos:end="169:77"><name pos:start="169:70" pos:end="169:77">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:39"><expr pos:start="171:17" pos:end="171:38"><call pos:start="171:17" pos:end="171:38"><name pos:start="171:17" pos:end="171:26">avio_write</name><argument_list pos:start="171:27" pos:end="171:38">(<argument pos:start="171:28" pos:end="171:29"><expr pos:start="171:28" pos:end="171:29"><name pos:start="171:28" pos:end="171:29">pb</name></expr></argument>, <argument pos:start="171:32" pos:end="171:34"><expr pos:start="171:32" pos:end="171:34"><name pos:start="171:32" pos:end="171:34">buf</name></expr></argument>, <argument pos:start="171:37" pos:end="171:37"><expr pos:start="171:37" pos:end="171:37"><literal type="number" pos:start="171:37" pos:end="171:37">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:45"><expr pos:start="173:17" pos:end="173:44"><call pos:start="173:17" pos:end="173:44"><name pos:start="173:17" pos:end="173:25">avio_seek</name><argument_list pos:start="173:26" pos:end="173:44">(<argument pos:start="173:27" pos:end="173:28"><expr pos:start="173:27" pos:end="173:28"><name pos:start="173:27" pos:end="173:28">pb</name></expr></argument>, <argument pos:start="173:31" pos:end="173:33"><expr pos:start="173:31" pos:end="173:33"><name pos:start="173:31" pos:end="173:33">off</name></expr></argument>, <argument pos:start="173:36" pos:end="173:43"><expr pos:start="173:36" pos:end="173:43"><name pos:start="173:36" pos:end="173:43">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



<label pos:start="183:1" pos:end="183:6"><name pos:start="183:1" pos:end="183:5">error</name>:</label>

    <expr_stmt pos:start="185:5" pos:end="185:16"><expr pos:start="185:5" pos:end="185:15"><call pos:start="185:5" pos:end="185:15"><name pos:start="185:5" pos:end="185:12">mov_free</name><argument_list pos:start="185:13" pos:end="185:15">(<argument pos:start="185:14" pos:end="185:14"><expr pos:start="185:14" pos:end="185:14"><name pos:start="185:14" pos:end="185:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="189:5" pos:end="189:15">return <expr pos:start="189:12" pos:end="189:14"><name pos:start="189:12" pos:end="189:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
