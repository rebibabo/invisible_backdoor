<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26887.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">do_blockdev_backup</name><parameter_list pos:start="1:24" pos:end="15:56">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">job_id</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:62">device</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:42"><decl pos:start="3:25" pos:end="3:42"><type pos:start="3:25" pos:end="3:42"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:34">char</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:42">target</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:68"><decl pos:start="3:45" pos:end="3:68"><type pos:start="3:45" pos:end="3:68"><name pos:start="3:45" pos:end="3:63"><name pos:start="3:45" pos:end="3:48">enum</name> <name pos:start="3:50" pos:end="3:63">MirrorSyncMode</name></name></type> <name pos:start="3:65" pos:end="3:68">sync</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:39"><decl pos:start="5:26" pos:end="5:39"><type pos:start="5:26" pos:end="5:39"><name pos:start="5:26" pos:end="5:29">bool</name></type> <name pos:start="5:31" pos:end="5:39">has_speed</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:54"><decl pos:start="5:42" pos:end="5:54"><type pos:start="5:42" pos:end="5:54"><name pos:start="5:42" pos:end="5:48">int64_t</name></type> <name pos:start="5:50" pos:end="5:54">speed</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:49"><decl pos:start="7:26" pos:end="7:49"><type pos:start="7:26" pos:end="7:49"><name pos:start="7:26" pos:end="7:29">bool</name></type> <name pos:start="7:31" pos:end="7:49">has_on_source_error</name></decl></parameter>,

                         <parameter pos:start="9:26" pos:end="9:56"><decl pos:start="9:26" pos:end="9:56"><type pos:start="9:26" pos:end="9:56"><name pos:start="9:26" pos:end="9:40">BlockdevOnError</name></type> <name pos:start="9:42" pos:end="9:56">on_source_error</name></decl></parameter>,

                         <parameter pos:start="11:26" pos:end="11:49"><decl pos:start="11:26" pos:end="11:49"><type pos:start="11:26" pos:end="11:49"><name pos:start="11:26" pos:end="11:29">bool</name></type> <name pos:start="11:31" pos:end="11:49">has_on_target_error</name></decl></parameter>,

                         <parameter pos:start="13:26" pos:end="13:56"><decl pos:start="13:26" pos:end="13:56"><type pos:start="13:26" pos:end="13:56"><name pos:start="13:26" pos:end="13:40">BlockdevOnError</name></type> <name pos:start="13:42" pos:end="13:56">on_target_error</name></decl></parameter>,

                         <parameter pos:start="15:26" pos:end="15:41"><decl pos:start="15:26" pos:end="15:41"><type pos:start="15:26" pos:end="15:41"><name pos:start="15:26" pos:end="15:36">BlockJobTxn</name> <modifier pos:start="15:38" pos:end="15:38">*</modifier></type><name pos:start="15:39" pos:end="15:41">txn</name></decl></parameter>, <parameter pos:start="15:44" pos:end="15:55"><decl pos:start="15:44" pos:end="15:55"><type pos:start="15:44" pos:end="15:55"><name pos:start="15:44" pos:end="15:48">Error</name> <modifier pos:start="15:50" pos:end="15:50">*</modifier><modifier pos:start="15:51" pos:end="15:51">*</modifier></type><name pos:start="15:52" pos:end="15:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="17:1" pos:end="127:1">{<block_content pos:start="19:5" pos:end="125:37">

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">BlockBackend</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:21">blk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:20">BlockDriverState</name> <modifier pos:start="21:22" pos:end="21:22">*</modifier></type><name pos:start="21:23" pos:end="21:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:32"><decl pos:start="23:5" pos:end="23:31"><type pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:20">BlockDriverState</name> <modifier pos:start="23:22" pos:end="23:22">*</modifier></type><name pos:start="23:23" pos:end="23:31">target_bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:9">Error</name> <modifier pos:start="25:11" pos:end="25:11">*</modifier></type><name pos:start="25:12" pos:end="25:20">local_err</name> <init pos:start="25:22" pos:end="25:27">= <expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:28"><decl pos:start="27:5" pos:end="27:27"><type pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:14">AioContext</name> <modifier pos:start="27:16" pos:end="27:16">*</modifier></type><name pos:start="27:17" pos:end="27:27">aio_context</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:18">has_speed</name></expr>)</condition> <block pos:start="31:21" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:18">

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:13">speed</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:29">(<expr pos:start="37:9" pos:end="37:28"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:28">has_on_source_error</name></expr>)</condition> <block pos:start="37:31" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:51">

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:23">on_source_error</name> <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:50">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:29">(<expr pos:start="43:9" pos:end="43:28"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:28">has_on_target_error</name></expr>)</condition> <block pos:start="43:31" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:51">

        <expr_stmt pos:start="45:9" pos:end="45:51"><expr pos:start="45:9" pos:end="45:50"><name pos:start="45:9" pos:end="45:23">on_target_error</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:50">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:7">blk</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:29"><name pos:start="51:11" pos:end="51:21">blk_by_name</name><argument_list pos:start="51:22" pos:end="51:29">(<argument pos:start="51:23" pos:end="51:28"><expr pos:start="51:23" pos:end="51:28"><name pos:start="51:23" pos:end="51:28">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:13">(<expr pos:start="53:9" pos:end="53:12"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:12">blk</name></expr>)</condition> <block pos:start="53:15" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:15">

        <expr_stmt pos:start="55:9" pos:end="55:58"><expr pos:start="55:9" pos:end="55:57"><call pos:start="55:9" pos:end="55:57"><name pos:start="55:9" pos:end="55:18">error_setg</name><argument_list pos:start="55:19" pos:end="55:57">(<argument pos:start="55:20" pos:end="55:23"><expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">errp</name></expr></argument>, <argument pos:start="55:26" pos:end="55:48"><expr pos:start="55:26" pos:end="55:48"><literal type="string" pos:start="55:26" pos:end="55:48">"Device '%s' not found"</literal></expr></argument>, <argument pos:start="55:51" pos:end="55:56"><expr pos:start="55:51" pos:end="55:56"><name pos:start="55:51" pos:end="55:56">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:43"><expr pos:start="63:5" pos:end="63:42"><name pos:start="63:5" pos:end="63:15">aio_context</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:42"><name pos:start="63:19" pos:end="63:37">blk_get_aio_context</name><argument_list pos:start="63:38" pos:end="63:42">(<argument pos:start="63:39" pos:end="63:41"><expr pos:start="63:39" pos:end="63:41"><name pos:start="63:39" pos:end="63:41">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><call pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:23">aio_context_acquire</name><argument_list pos:start="65:24" pos:end="65:36">(<argument pos:start="65:25" pos:end="65:35"><expr pos:start="65:25" pos:end="65:35"><name pos:start="65:25" pos:end="65:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:31">(<expr pos:start="69:9" pos:end="69:30"><operator pos:start="69:9" pos:end="69:9">!</operator><call pos:start="69:10" pos:end="69:30"><name pos:start="69:10" pos:end="69:25">blk_is_available</name><argument_list pos:start="69:26" pos:end="69:30">(<argument pos:start="69:27" pos:end="69:29"><expr pos:start="69:27" pos:end="69:29"><name pos:start="69:27" pos:end="69:29">blk</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:33" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:17">

        <expr_stmt pos:start="71:9" pos:end="71:62"><expr pos:start="71:9" pos:end="71:61"><call pos:start="71:9" pos:end="71:61"><name pos:start="71:9" pos:end="71:18">error_setg</name><argument_list pos:start="71:19" pos:end="71:61">(<argument pos:start="71:20" pos:end="71:23"><expr pos:start="71:20" pos:end="71:23"><name pos:start="71:20" pos:end="71:23">errp</name></expr></argument>, <argument pos:start="71:26" pos:end="71:52"><expr pos:start="71:26" pos:end="71:52"><literal type="string" pos:start="71:26" pos:end="71:52">"Device '%s' has no medium"</literal></expr></argument>, <argument pos:start="71:55" pos:end="71:60"><expr pos:start="71:55" pos:end="71:60"><name pos:start="71:55" pos:end="71:60">device</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:17">goto <name pos:start="73:14" pos:end="73:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:21"><expr pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:6">bs</name> <operator pos:start="77:8" pos:end="77:8">=</operator> <call pos:start="77:10" pos:end="77:20"><name pos:start="77:10" pos:end="77:15">blk_bs</name><argument_list pos:start="77:16" pos:end="77:20">(<argument pos:start="77:17" pos:end="77:19"><expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:19">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:53"><expr pos:start="81:5" pos:end="81:52"><name pos:start="81:5" pos:end="81:13">target_bs</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <call pos:start="81:17" pos:end="81:52"><name pos:start="81:17" pos:end="81:30">bdrv_lookup_bs</name><argument_list pos:start="81:31" pos:end="81:52">(<argument pos:start="81:32" pos:end="81:37"><expr pos:start="81:32" pos:end="81:37"><name pos:start="81:32" pos:end="81:37">target</name></expr></argument>, <argument pos:start="81:40" pos:end="81:45"><expr pos:start="81:40" pos:end="81:45"><name pos:start="81:40" pos:end="81:45">target</name></expr></argument>, <argument pos:start="81:48" pos:end="81:51"><expr pos:start="81:48" pos:end="81:51"><name pos:start="81:48" pos:end="81:51">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:19">(<expr pos:start="83:9" pos:end="83:18"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:18">target_bs</name></expr>)</condition> <block pos:start="83:21" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:17">

        <goto pos:start="85:9" pos:end="85:17">goto <name pos:start="85:14" pos:end="85:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="111:5"><if pos:start="91:5" pos:end="111:5">if <condition pos:start="91:8" pos:end="91:55">(<expr pos:start="91:9" pos:end="91:54"><call pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:28">bdrv_get_aio_context</name><argument_list pos:start="91:29" pos:end="91:39">(<argument pos:start="91:30" pos:end="91:38"><expr pos:start="91:30" pos:end="91:38"><name pos:start="91:30" pos:end="91:38">target_bs</name></expr></argument>)</argument_list></call> <operator pos:start="91:41" pos:end="91:42">!=</operator> <name pos:start="91:44" pos:end="91:54">aio_context</name></expr>)</condition> <block pos:start="91:57" pos:end="111:5">{<block_content pos:start="93:9" pos:end="109:9">

        <if_stmt pos:start="93:9" pos:end="109:9"><if pos:start="93:9" pos:end="101:9">if <condition pos:start="93:12" pos:end="93:37">(<expr pos:start="93:13" pos:end="93:36"><operator pos:start="93:13" pos:end="93:13">!</operator><call pos:start="93:14" pos:end="93:36"><name pos:start="93:14" pos:end="93:25">bdrv_has_blk</name><argument_list pos:start="93:26" pos:end="93:36">(<argument pos:start="93:27" pos:end="93:35"><expr pos:start="93:27" pos:end="93:35"><name pos:start="93:27" pos:end="93:35">target_bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:39" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:57">

            <comment type="block" pos:start="95:13" pos:end="97:29">/* The target BDS is not attached, we can safely move it to another

             * AioContext. */</comment>

            <expr_stmt pos:start="99:13" pos:end="99:57"><expr pos:start="99:13" pos:end="99:56"><call pos:start="99:13" pos:end="99:56"><name pos:start="99:13" pos:end="99:32">bdrv_set_aio_context</name><argument_list pos:start="99:33" pos:end="99:56">(<argument pos:start="99:34" pos:end="99:42"><expr pos:start="99:34" pos:end="99:42"><name pos:start="99:34" pos:end="99:42">target_bs</name></expr></argument>, <argument pos:start="99:45" pos:end="99:55"><expr pos:start="99:45" pos:end="99:55"><name pos:start="99:45" pos:end="99:55">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="101:11" pos:end="109:9">else <block pos:start="101:16" pos:end="109:9">{<block_content pos:start="103:13" pos:end="107:21">

            <expr_stmt pos:start="103:13" pos:end="105:40"><expr pos:start="103:13" pos:end="105:39"><call pos:start="103:13" pos:end="105:39"><name pos:start="103:13" pos:end="103:22">error_setg</name><argument_list pos:start="103:23" pos:end="105:39">(<argument pos:start="103:24" pos:end="103:27"><expr pos:start="103:24" pos:end="103:27"><name pos:start="103:24" pos:end="103:27">errp</name></expr></argument>, <argument pos:start="103:30" pos:end="105:38"><expr pos:start="103:30" pos:end="105:38"><literal type="string" pos:start="103:30" pos:end="103:77">"Target is attached to a different thread from "</literal>

                             <literal type="string" pos:start="105:30" pos:end="105:38">"source."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="107:13" pos:end="107:21">goto <name pos:start="107:18" pos:end="107:20">out</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="113:5" pos:end="115:69"><expr pos:start="113:5" pos:end="115:68"><call pos:start="113:5" pos:end="115:68"><name pos:start="113:5" pos:end="113:16">backup_start</name><argument_list pos:start="113:17" pos:end="115:68">(<argument pos:start="113:18" pos:end="113:23"><expr pos:start="113:18" pos:end="113:23"><name pos:start="113:18" pos:end="113:23">job_id</name></expr></argument>, <argument pos:start="113:26" pos:end="113:27"><expr pos:start="113:26" pos:end="113:27"><name pos:start="113:26" pos:end="113:27">bs</name></expr></argument>, <argument pos:start="113:30" pos:end="113:38"><expr pos:start="113:30" pos:end="113:38"><name pos:start="113:30" pos:end="113:38">target_bs</name></expr></argument>, <argument pos:start="113:41" pos:end="113:45"><expr pos:start="113:41" pos:end="113:45"><name pos:start="113:41" pos:end="113:45">speed</name></expr></argument>, <argument pos:start="113:48" pos:end="113:51"><expr pos:start="113:48" pos:end="113:51"><name pos:start="113:48" pos:end="113:51">sync</name></expr></argument>, <argument pos:start="113:54" pos:end="113:57"><expr pos:start="113:54" pos:end="113:57"><name pos:start="113:54" pos:end="113:57">NULL</name></expr></argument>, <argument pos:start="113:60" pos:end="113:74"><expr pos:start="113:60" pos:end="113:74"><name pos:start="113:60" pos:end="113:74">on_source_error</name></expr></argument>,

                 <argument pos:start="115:18" pos:end="115:32"><expr pos:start="115:18" pos:end="115:32"><name pos:start="115:18" pos:end="115:32">on_target_error</name></expr></argument>, <argument pos:start="115:35" pos:end="115:46"><expr pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:46">block_job_cb</name></expr></argument>, <argument pos:start="115:49" pos:end="115:50"><expr pos:start="115:49" pos:end="115:50"><name pos:start="115:49" pos:end="115:50">bs</name></expr></argument>, <argument pos:start="115:53" pos:end="115:55"><expr pos:start="115:53" pos:end="115:55"><name pos:start="115:53" pos:end="115:55">txn</name></expr></argument>, <argument pos:start="115:58" pos:end="115:67"><expr pos:start="115:58" pos:end="115:67"><operator pos:start="115:58" pos:end="115:58">&amp;</operator><name pos:start="115:59" pos:end="115:67">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="121:5"><if pos:start="117:5" pos:end="121:5">if <condition pos:start="117:8" pos:end="117:26">(<expr pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:17">local_err</name> <operator pos:start="117:19" pos:end="117:20">!=</operator> <name pos:start="117:22" pos:end="117:25">NULL</name></expr>)</condition> <block pos:start="117:28" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:41">

        <expr_stmt pos:start="119:9" pos:end="119:41"><expr pos:start="119:9" pos:end="119:40"><call pos:start="119:9" pos:end="119:40"><name pos:start="119:9" pos:end="119:23">error_propagate</name><argument_list pos:start="119:24" pos:end="119:40">(<argument pos:start="119:25" pos:end="119:28"><expr pos:start="119:25" pos:end="119:28"><name pos:start="119:25" pos:end="119:28">errp</name></expr></argument>, <argument pos:start="119:31" pos:end="119:39"><expr pos:start="119:31" pos:end="119:39"><name pos:start="119:31" pos:end="119:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="123:1" pos:end="123:4"><name pos:start="123:1" pos:end="123:3">out</name>:</label>

    <expr_stmt pos:start="125:5" pos:end="125:37"><expr pos:start="125:5" pos:end="125:36"><call pos:start="125:5" pos:end="125:36"><name pos:start="125:5" pos:end="125:23">aio_context_release</name><argument_list pos:start="125:24" pos:end="125:36">(<argument pos:start="125:25" pos:end="125:35"><expr pos:start="125:25" pos:end="125:35"><name pos:start="125:25" pos:end="125:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
