<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5569.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:44">h_add_logical_lan_buffer</name><parameter_list pos:start="1:45" pos:end="7:64">(<parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><name pos:start="1:46" pos:end="1:55">PowerPCCPU</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">cpu</name></decl></parameter>,

                                             <parameter pos:start="3:46" pos:end="3:69"><decl pos:start="3:46" pos:end="3:69"><type pos:start="3:46" pos:end="3:69"><name pos:start="3:46" pos:end="3:62">sPAPRMachineState</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:69">spapr</name></decl></parameter>,

                                             <parameter pos:start="5:46" pos:end="5:64"><decl pos:start="5:46" pos:end="5:64"><type pos:start="5:46" pos:end="5:64"><name pos:start="5:46" pos:end="5:57">target_ulong</name></type> <name pos:start="5:59" pos:end="5:64">opcode</name></decl></parameter>,

                                             <parameter pos:start="7:46" pos:end="7:63"><decl pos:start="7:46" pos:end="7:63"><type pos:start="7:46" pos:end="7:63"><name pos:start="7:46" pos:end="7:57">target_ulong</name> <modifier pos:start="7:59" pos:end="7:59">*</modifier></type><name pos:start="7:60" pos:end="7:63">args</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="79:1">{<block_content pos:start="11:5" pos:end="77:21">

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:20">reg</name> <init pos:start="11:22" pos:end="11:30">= <expr pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:27">args</name><index pos:start="11:28" pos:end="11:30">[<expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:20">buf</name> <init pos:start="13:22" pos:end="13:30">= <expr pos:start="13:24" pos:end="13:30"><name pos:start="13:24" pos:end="13:30"><name pos:start="13:24" pos:end="13:27">args</name><index pos:start="13:28" pos:end="13:30">[<expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:70"><decl pos:start="15:5" pos:end="15:69"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">VIOsPAPRDevice</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:24">sdev</name> <init pos:start="15:26" pos:end="15:69">= <expr pos:start="15:28" pos:end="15:69"><call pos:start="15:28" pos:end="15:69"><name pos:start="15:28" pos:end="15:48">spapr_vio_find_by_reg</name><argument_list pos:start="15:49" pos:end="15:69">(<argument pos:start="15:50" pos:end="15:63"><expr pos:start="15:50" pos:end="15:63"><name pos:start="15:50" pos:end="15:63"><name pos:start="15:50" pos:end="15:54">spapr</name><operator pos:start="15:55" pos:end="15:56">-&gt;</operator><name pos:start="15:57" pos:end="15:63">vio_bus</name></name></expr></argument>, <argument pos:start="15:66" pos:end="15:68"><expr pos:start="15:66" pos:end="15:68"><name pos:start="15:66" pos:end="15:68">reg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:58"><decl pos:start="17:5" pos:end="17:57"><type pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:22">VIOsPAPRVLANDevice</name> <modifier pos:start="17:24" pos:end="17:24">*</modifier></type><name pos:start="17:25" pos:end="17:27">dev</name> <init pos:start="17:29" pos:end="17:57">= <expr pos:start="17:31" pos:end="17:57"><call pos:start="17:31" pos:end="17:57"><name pos:start="17:31" pos:end="17:51">VIO_SPAPR_VLAN_DEVICE</name><argument_list pos:start="17:52" pos:end="17:57">(<argument pos:start="17:53" pos:end="17:56"><expr pos:start="17:53" pos:end="17:56"><name pos:start="17:53" pos:end="17:56">sdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:15">target_long</name></type> <name pos:start="19:17" pos:end="19:19">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:50"><expr pos:start="23:5" pos:end="25:49"><call pos:start="23:5" pos:end="25:49"><name pos:start="23:5" pos:end="23:11">DPRINTF</name><argument_list pos:start="23:12" pos:end="25:49">(<argument pos:start="23:13" pos:end="25:38"><expr pos:start="23:13" pos:end="25:38"><literal type="string" pos:start="23:13" pos:end="23:41">"H_ADD_LOGICAL_LAN_BUFFER(0x"</literal> <name pos:start="23:43" pos:end="23:55">TARGET_FMT_lx</name>

            <literal type="string" pos:start="25:13" pos:end="25:18">", 0x"</literal> <name pos:start="25:20" pos:end="25:32">TARGET_FMT_lx</name> <literal type="string" pos:start="25:34" pos:end="25:38">")\n"</literal></expr></argument>, <argument pos:start="25:41" pos:end="25:43"><expr pos:start="25:41" pos:end="25:43"><name pos:start="25:41" pos:end="25:43">reg</name></expr></argument>, <argument pos:start="25:46" pos:end="25:48"><expr pos:start="25:46" pos:end="25:48"><name pos:start="25:46" pos:end="25:48">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:14">(<expr pos:start="29:9" pos:end="29:13"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:13">sdev</name></expr>)</condition> <block pos:start="29:16" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:27">

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><call pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:21">hcall_dprintf</name><argument_list pos:start="31:22" pos:end="31:37">(<argument pos:start="31:23" pos:end="31:36"><expr pos:start="31:23" pos:end="31:36"><literal type="string" pos:start="31:23" pos:end="31:36">"Bad device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:27">return <expr pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="41:35">(<expr pos:start="39:9" pos:end="41:34"><operator pos:start="39:9" pos:end="39:9">(</operator><call pos:start="39:10" pos:end="39:30"><name pos:start="39:10" pos:end="39:17">check_bd</name><argument_list pos:start="39:18" pos:end="39:30">(<argument pos:start="39:19" pos:end="39:21"><expr pos:start="39:19" pos:end="39:21"><name pos:start="39:19" pos:end="39:21">dev</name></expr></argument>, <argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">buf</name></expr></argument>, <argument pos:start="39:29" pos:end="39:29"><expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">4</literal></expr></argument>)</argument_list></call> <operator pos:start="39:32" pos:end="39:32">&lt;</operator> <literal type="number" pos:start="39:34" pos:end="39:34">0</literal><operator pos:start="39:35" pos:end="39:35">)</operator>

        <operator pos:start="41:9" pos:end="41:10">||</operator> <operator pos:start="41:12" pos:end="41:12">(</operator><call pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:23">VLAN_BD_LEN</name><argument_list pos:start="41:24" pos:end="41:28">(<argument pos:start="41:25" pos:end="41:27"><expr pos:start="41:25" pos:end="41:27"><name pos:start="41:25" pos:end="41:27">buf</name></expr></argument>)</argument_list></call> <operator pos:start="41:30" pos:end="41:30">&lt;</operator> <literal type="number" pos:start="41:32" pos:end="41:33">16</literal><operator pos:start="41:34" pos:end="41:34">)</operator></expr>)</condition> <block pos:start="41:37" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:27">

        <expr_stmt pos:start="43:9" pos:end="43:47"><expr pos:start="43:9" pos:end="43:46"><call pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:21">hcall_dprintf</name><argument_list pos:start="43:22" pos:end="43:46">(<argument pos:start="43:23" pos:end="43:45"><expr pos:start="43:23" pos:end="43:45"><literal type="string" pos:start="43:23" pos:end="43:45">"Bad buffer enqueued\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:27">return <expr pos:start="45:16" pos:end="45:26"><name pos:start="45:16" pos:end="45:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:21">(<expr pos:start="51:9" pos:end="51:20"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:20"><name pos:start="51:10" pos:end="51:12">dev</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:20">isopen</name></name></expr>)</condition> <block pos:start="51:23" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:26">

        <return pos:start="53:9" pos:end="53:26">return <expr pos:start="53:16" pos:end="53:25"><name pos:start="53:16" pos:end="53:25">H_RESOURCE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:49"><expr pos:start="59:5" pos:end="59:48"><name pos:start="59:5" pos:end="59:7">ret</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <call pos:start="59:11" pos:end="59:48"><name pos:start="59:11" pos:end="59:38">spapr_vlan_add_rxbuf_to_page</name><argument_list pos:start="59:39" pos:end="59:48">(<argument pos:start="59:40" pos:end="59:42"><expr pos:start="59:40" pos:end="59:42"><name pos:start="59:40" pos:end="59:42">dev</name></expr></argument>, <argument pos:start="59:45" pos:end="59:47"><expr pos:start="59:45" pos:end="59:47"><name pos:start="59:45" pos:end="59:47">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:12">(<expr pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">ret</name></expr>)</condition> <block pos:start="61:14" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:19">

        <return pos:start="63:9" pos:end="63:19">return <expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:19"><expr pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:7">dev</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:16">rx_bufs</name></name><operator pos:start="69:17" pos:end="69:18">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:56"><expr pos:start="73:5" pos:end="73:55"><call pos:start="73:5" pos:end="73:55"><name pos:start="73:5" pos:end="73:29">qemu_flush_queued_packets</name><argument_list pos:start="73:30" pos:end="73:55">(<argument pos:start="73:31" pos:end="73:54"><expr pos:start="73:31" pos:end="73:54"><call pos:start="73:31" pos:end="73:54"><name pos:start="73:31" pos:end="73:44">qemu_get_queue</name><argument_list pos:start="73:45" pos:end="73:54">(<argument pos:start="73:46" pos:end="73:53"><expr pos:start="73:46" pos:end="73:53"><name pos:start="73:46" pos:end="73:53"><name pos:start="73:46" pos:end="73:48">dev</name><operator pos:start="73:49" pos:end="73:50">-&gt;</operator><name pos:start="73:51" pos:end="73:53">nic</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:21">return <expr pos:start="77:12" pos:end="77:20"><name pos:start="77:12" pos:end="77:20">H_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
