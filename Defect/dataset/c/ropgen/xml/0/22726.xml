<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22726.c" pos:tabs="8"><function pos:start="1:1" pos:end="471:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">helper_set_cp15</name><parameter_list pos:start="1:21" pos:end="1:64">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:29">CPUState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">env</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:44">uint32_t</name></type> <name pos:start="1:46" pos:end="1:49">insn</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">uint32_t</name></type> <name pos:start="1:61" pos:end="1:63">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="471:1">{<block_content pos:start="5:5" pos:end="469:58">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">op2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">crm</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:26"><expr pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:7">op2</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <operator pos:start="11:11" pos:end="11:11">(</operator><name pos:start="11:12" pos:end="11:15">insn</name> <operator pos:start="11:17" pos:end="11:18">&gt;&gt;</operator> <literal type="number" pos:start="11:20" pos:end="11:20">5</literal><operator pos:start="11:21" pos:end="11:21">)</operator> <operator pos:start="11:23" pos:end="11:23">&amp;</operator> <literal type="number" pos:start="11:25" pos:end="11:25">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:7">crm</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <name pos:start="13:11" pos:end="13:14">insn</name> <operator pos:start="13:16" pos:end="13:16">&amp;</operator> <literal type="number" pos:start="13:18" pos:end="13:20">0xf</literal></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="461:5">switch <condition pos:start="15:12" pos:end="15:31">(<expr pos:start="15:13" pos:end="15:30"><operator pos:start="15:13" pos:end="15:13">(</operator><name pos:start="15:14" pos:end="15:17">insn</name> <operator pos:start="15:19" pos:end="15:20">&gt;&gt;</operator> <literal type="number" pos:start="15:22" pos:end="15:23">16</literal><operator pos:start="15:24" pos:end="15:24">)</operator> <operator pos:start="15:26" pos:end="15:26">&amp;</operator> <literal type="number" pos:start="15:28" pos:end="15:30">0xf</literal></expr>)</condition> <block pos:start="15:33" pos:end="461:5">{<block_content pos:start="17:5" pos:end="459:14">

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal></expr>:</case> <comment type="block" pos:start="17:13" pos:end="17:28">/* ID codes.  */</comment>

        <if_stmt pos:start="19:9" pos:end="21:18"><if pos:start="19:9" pos:end="21:18">if <condition pos:start="19:12" pos:end="19:49">(<expr pos:start="19:13" pos:end="19:48"><call pos:start="19:13" pos:end="19:48"><name pos:start="19:13" pos:end="19:23">arm_feature</name><argument_list pos:start="19:24" pos:end="19:48">(<argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:27">env</name></expr></argument>, <argument pos:start="19:30" pos:end="19:47"><expr pos:start="19:30" pos:end="19:47"><name pos:start="19:30" pos:end="19:47">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:18"><block_content pos:start="21:13" pos:end="21:18">

            <break pos:start="21:13" pos:end="21:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="25:18"><if pos:start="23:9" pos:end="25:18">if <condition pos:start="23:12" pos:end="23:49">(<expr pos:start="23:13" pos:end="23:48"><call pos:start="23:13" pos:end="23:48"><name pos:start="23:13" pos:end="23:23">arm_feature</name><argument_list pos:start="23:24" pos:end="23:48">(<argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:27">env</name></expr></argument>, <argument pos:start="23:30" pos:end="23:47"><expr pos:start="23:30" pos:end="23:47"><name pos:start="23:30" pos:end="23:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:18"><block_content pos:start="25:13" pos:end="25:18">

            <break pos:start="25:13" pos:end="25:18">break;</break></block_content></block></if></if_stmt>

        <goto pos:start="27:9" pos:end="27:21">goto <name pos:start="27:14" pos:end="27:20">bad_reg</name>;</goto>

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">1</literal></expr>:</case> <comment type="block" pos:start="29:13" pos:end="29:40">/* System configuration.  */</comment>

        <if_stmt pos:start="31:9" pos:end="33:20"><if pos:start="31:9" pos:end="33:20">if <condition pos:start="31:12" pos:end="31:49">(<expr pos:start="31:13" pos:end="31:48"><call pos:start="31:13" pos:end="31:48"><name pos:start="31:13" pos:end="31:23">arm_feature</name><argument_list pos:start="31:24" pos:end="31:48">(<argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:27">env</name></expr></argument>, <argument pos:start="31:30" pos:end="31:47"><expr pos:start="31:30" pos:end="31:47"><name pos:start="31:30" pos:end="31:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:20"><block_content pos:start="33:13" pos:end="33:20">

            <expr_stmt pos:start="33:13" pos:end="33:20"><expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:15">op2</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <switch pos:start="35:9" pos:end="81:9">switch <condition pos:start="35:16" pos:end="35:20">(<expr pos:start="35:17" pos:end="35:19"><name pos:start="35:17" pos:end="35:19">op2</name></expr>)</condition> <block pos:start="35:22" pos:end="81:9">{<block_content pos:start="37:9" pos:end="79:25">

        <case pos:start="37:9" pos:end="37:15">case <expr pos:start="37:14" pos:end="37:14"><literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>:</case>

            <if_stmt pos:start="39:13" pos:end="41:39"><if pos:start="39:13" pos:end="41:39">if <condition pos:start="39:16" pos:end="39:66">(<expr pos:start="39:17" pos:end="39:65"><operator pos:start="39:17" pos:end="39:17">!</operator><call pos:start="39:18" pos:end="39:53"><name pos:start="39:18" pos:end="39:28">arm_feature</name><argument_list pos:start="39:29" pos:end="39:53">(<argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">env</name></expr></argument>, <argument pos:start="39:35" pos:end="39:52"><expr pos:start="39:35" pos:end="39:52"><name pos:start="39:35" pos:end="39:52">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call> <operator pos:start="39:55" pos:end="39:56">||</operator> <name pos:start="39:58" pos:end="39:60">crm</name> <operator pos:start="39:62" pos:end="39:63">==</operator> <literal type="number" pos:start="39:65" pos:end="39:65">0</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:39"><block_content pos:start="41:17" pos:end="41:39">

                <expr_stmt pos:start="41:17" pos:end="41:39"><expr pos:start="41:17" pos:end="41:38"><name pos:start="41:17" pos:end="41:32"><name pos:start="41:17" pos:end="41:19">env</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:25">cp15</name><operator pos:start="41:26" pos:end="41:26">.</operator><name pos:start="41:27" pos:end="41:32">c1_sys</name></name> <operator pos:start="41:34" pos:end="41:34">=</operator> <name pos:start="41:36" pos:end="41:38">val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="43:13" pos:end="43:62">/* ??? Lots of these bits are not implemented.  */</comment>

            <comment type="block" pos:start="45:13" pos:end="45:70">/* This may enable/disable the MMU, so do a TLB flush.  */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:30"><expr pos:start="47:13" pos:end="47:29"><call pos:start="47:13" pos:end="47:29"><name pos:start="47:13" pos:end="47:21">tlb_flush</name><argument_list pos:start="47:22" pos:end="47:29">(<argument pos:start="47:23" pos:end="47:25"><expr pos:start="47:23" pos:end="47:25"><name pos:start="47:23" pos:end="47:25">env</name></expr></argument>, <argument pos:start="47:28" pos:end="47:28"><expr pos:start="47:28" pos:end="47:28"><literal type="number" pos:start="47:28" pos:end="47:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <case pos:start="51:9" pos:end="51:15">case <expr pos:start="51:14" pos:end="51:14"><literal type="number" pos:start="51:14" pos:end="51:14">1</literal></expr>:</case>

            <if_stmt pos:start="53:13" pos:end="59:13"><if pos:start="53:13" pos:end="59:13">if <condition pos:start="53:16" pos:end="53:53">(<expr pos:start="53:17" pos:end="53:52"><call pos:start="53:17" pos:end="53:52"><name pos:start="53:17" pos:end="53:27">arm_feature</name><argument_list pos:start="53:28" pos:end="53:52">(<argument pos:start="53:29" pos:end="53:31"><expr pos:start="53:29" pos:end="53:31"><name pos:start="53:29" pos:end="53:31">env</name></expr></argument>, <argument pos:start="53:34" pos:end="53:51"><expr pos:start="53:34" pos:end="53:51"><name pos:start="53:34" pos:end="53:51">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:55" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:22">

                <expr_stmt pos:start="55:17" pos:end="55:47"><expr pos:start="55:17" pos:end="55:46"><name pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:19">env</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:25">cp15</name><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:40">c1_xscaleauxcr</name></name> <operator pos:start="55:42" pos:end="55:42">=</operator> <name pos:start="55:44" pos:end="55:46">val</name></expr>;</expr_stmt>

                <break pos:start="57:17" pos:end="57:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="61:13" pos:end="61:25">goto <name pos:start="61:18" pos:end="61:24">bad_reg</name>;</goto>

        <case pos:start="63:9" pos:end="63:15">case <expr pos:start="63:14" pos:end="63:14"><literal type="number" pos:start="63:14" pos:end="63:14">2</literal></expr>:</case>

            <if_stmt pos:start="65:13" pos:end="67:29"><if pos:start="65:13" pos:end="67:29">if <condition pos:start="65:16" pos:end="65:53">(<expr pos:start="65:17" pos:end="65:52"><call pos:start="65:17" pos:end="65:52"><name pos:start="65:17" pos:end="65:27">arm_feature</name><argument_list pos:start="65:28" pos:end="65:52">(<argument pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:31">env</name></expr></argument>, <argument pos:start="65:34" pos:end="65:51"><expr pos:start="65:34" pos:end="65:51"><name pos:start="65:34" pos:end="65:51">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:29"><block_content pos:start="67:17" pos:end="67:29">

                <goto pos:start="67:17" pos:end="67:29">goto <name pos:start="67:22" pos:end="67:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:38"><expr pos:start="69:13" pos:end="69:37"><name pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:15">env</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:21">cp15</name><operator pos:start="69:22" pos:end="69:22">.</operator><name pos:start="69:23" pos:end="69:31">c1_coproc</name></name> <operator pos:start="69:33" pos:end="69:33">=</operator> <name pos:start="69:35" pos:end="69:37">val</name></expr>;</expr_stmt>

            <comment type="block" pos:start="71:13" pos:end="71:65">/* ??? Is this safe when called from within a TB?  */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:26"><expr pos:start="73:13" pos:end="73:25"><call pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:20">tb_flush</name><argument_list pos:start="73:21" pos:end="73:25">(<argument pos:start="73:22" pos:end="73:24"><expr pos:start="73:22" pos:end="73:24"><name pos:start="73:22" pos:end="73:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <default pos:start="77:9" pos:end="77:16">default:</default>

            <goto pos:start="79:13" pos:end="79:25">goto <name pos:start="79:18" pos:end="79:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:11">case <expr pos:start="85:10" pos:end="85:10"><literal type="number" pos:start="85:10" pos:end="85:10">2</literal></expr>:</case> <comment type="block" pos:start="85:13" pos:end="85:62">/* MMU Page table control / MPU cache control.  */</comment>

        <if_stmt pos:start="87:9" pos:end="113:9"><if pos:start="87:9" pos:end="109:9">if <condition pos:start="87:12" pos:end="87:46">(<expr pos:start="87:13" pos:end="87:45"><call pos:start="87:13" pos:end="87:45"><name pos:start="87:13" pos:end="87:23">arm_feature</name><argument_list pos:start="87:24" pos:end="87:45">(<argument pos:start="87:25" pos:end="87:27"><expr pos:start="87:25" pos:end="87:27"><name pos:start="87:25" pos:end="87:27">env</name></expr></argument>, <argument pos:start="87:30" pos:end="87:44"><expr pos:start="87:30" pos:end="87:44"><name pos:start="87:30" pos:end="87:44">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:48" pos:end="109:9">{<block_content pos:start="89:13" pos:end="107:13">

            <switch pos:start="89:13" pos:end="107:13">switch <condition pos:start="89:20" pos:end="89:24">(<expr pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:23">op2</name></expr>)</condition> <block pos:start="89:26" pos:end="107:13">{<block_content pos:start="91:13" pos:end="105:29">

            <case pos:start="91:13" pos:end="91:19">case <expr pos:start="91:18" pos:end="91:18"><literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>:</case>

                <expr_stmt pos:start="93:17" pos:end="93:40"><expr pos:start="93:17" pos:end="93:39"><name pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:19">env</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:25">cp15</name><operator pos:start="93:26" pos:end="93:26">.</operator><name pos:start="93:27" pos:end="93:33">c2_data</name></name> <operator pos:start="93:35" pos:end="93:35">=</operator> <name pos:start="93:37" pos:end="93:39">val</name></expr>;</expr_stmt>

                <break pos:start="95:17" pos:end="95:22">break;</break>

            <case pos:start="97:13" pos:end="97:19">case <expr pos:start="97:18" pos:end="97:18"><literal type="number" pos:start="97:18" pos:end="97:18">1</literal></expr>:</case>

                <expr_stmt pos:start="99:17" pos:end="99:40"><expr pos:start="99:17" pos:end="99:39"><name pos:start="99:17" pos:end="99:33"><name pos:start="99:17" pos:end="99:19">env</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:25">cp15</name><operator pos:start="99:26" pos:end="99:26">.</operator><name pos:start="99:27" pos:end="99:33">c2_insn</name></name> <operator pos:start="99:35" pos:end="99:35">=</operator> <name pos:start="99:37" pos:end="99:39">val</name></expr>;</expr_stmt>

                <break pos:start="101:17" pos:end="101:22">break;</break>

            <default pos:start="103:13" pos:end="103:20">default:</default>

                <goto pos:start="105:17" pos:end="105:29">goto <name pos:start="105:22" pos:end="105:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="113:9">else <block pos:start="109:16" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:36">

            <expr_stmt pos:start="111:13" pos:end="111:36"><expr pos:start="111:13" pos:end="111:35"><name pos:start="111:13" pos:end="111:29"><name pos:start="111:13" pos:end="111:15">env</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:21">cp15</name><operator pos:start="111:22" pos:end="111:22">.</operator><name pos:start="111:23" pos:end="111:29">c2_base</name></name> <operator pos:start="111:31" pos:end="111:31">=</operator> <name pos:start="111:33" pos:end="111:35">val</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:11">case <expr pos:start="117:10" pos:end="117:10"><literal type="number" pos:start="117:10" pos:end="117:10">3</literal></expr>:</case> <comment type="block" pos:start="117:13" pos:end="117:72">/* MMU Domain access control / MPU write buffer control.  */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:27"><expr pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:11">env</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:17">cp15</name><operator pos:start="119:18" pos:end="119:18">.</operator><name pos:start="119:19" pos:end="119:20">c3</name></name> <operator pos:start="119:22" pos:end="119:22">=</operator> <name pos:start="119:24" pos:end="119:26">val</name></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:11">case <expr pos:start="123:10" pos:end="123:10"><literal type="number" pos:start="123:10" pos:end="123:10">4</literal></expr>:</case> <comment type="block" pos:start="123:13" pos:end="123:28">/* Reserved.  */</comment>

        <goto pos:start="125:9" pos:end="125:21">goto <name pos:start="125:14" pos:end="125:20">bad_reg</name>;</goto>

    <case pos:start="127:5" pos:end="127:11">case <expr pos:start="127:10" pos:end="127:10"><literal type="number" pos:start="127:10" pos:end="127:10">5</literal></expr>:</case> <comment type="block" pos:start="127:13" pos:end="127:60">/* MMU Fault status / MPU access permission.  */</comment>

        <if_stmt pos:start="129:9" pos:end="131:20"><if pos:start="129:9" pos:end="131:20">if <condition pos:start="129:12" pos:end="129:49">(<expr pos:start="129:13" pos:end="129:48"><call pos:start="129:13" pos:end="129:48"><name pos:start="129:13" pos:end="129:23">arm_feature</name><argument_list pos:start="129:24" pos:end="129:48">(<argument pos:start="129:25" pos:end="129:27"><expr pos:start="129:25" pos:end="129:27"><name pos:start="129:25" pos:end="129:27">env</name></expr></argument>, <argument pos:start="129:30" pos:end="129:47"><expr pos:start="129:30" pos:end="129:47"><name pos:start="129:30" pos:end="129:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:20"><block_content pos:start="131:13" pos:end="131:20">

            <expr_stmt pos:start="131:13" pos:end="131:20"><expr pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:15">op2</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <switch pos:start="133:9" pos:end="179:9">switch <condition pos:start="133:16" pos:end="133:20">(<expr pos:start="133:17" pos:end="133:19"><name pos:start="133:17" pos:end="133:19">op2</name></expr>)</condition> <block pos:start="133:22" pos:end="179:9">{<block_content pos:start="135:9" pos:end="177:25">

        <case pos:start="135:9" pos:end="135:15">case <expr pos:start="135:14" pos:end="135:14"><literal type="number" pos:start="135:14" pos:end="135:14">0</literal></expr>:</case>

            <if_stmt pos:start="137:13" pos:end="139:48"><if pos:start="137:13" pos:end="139:48">if <condition pos:start="137:16" pos:end="137:50">(<expr pos:start="137:17" pos:end="137:49"><call pos:start="137:17" pos:end="137:49"><name pos:start="137:17" pos:end="137:27">arm_feature</name><argument_list pos:start="137:28" pos:end="137:49">(<argument pos:start="137:29" pos:end="137:31"><expr pos:start="137:29" pos:end="137:31"><name pos:start="137:29" pos:end="137:31">env</name></expr></argument>, <argument pos:start="137:34" pos:end="137:48"><expr pos:start="137:34" pos:end="137:48"><name pos:start="137:34" pos:end="137:48">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:48"><block_content pos:start="139:17" pos:end="139:48">

                <expr_stmt pos:start="139:17" pos:end="139:48"><expr pos:start="139:17" pos:end="139:47"><name pos:start="139:17" pos:end="139:19">val</name> <operator pos:start="139:21" pos:end="139:21">=</operator> <call pos:start="139:23" pos:end="139:47"><name pos:start="139:23" pos:end="139:42">extended_mpu_ap_bits</name><argument_list pos:start="139:43" pos:end="139:47">(<argument pos:start="139:44" pos:end="139:46"><expr pos:start="139:44" pos:end="139:46"><name pos:start="139:44" pos:end="139:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:36"><expr pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:29"><name pos:start="141:13" pos:end="141:15">env</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:21">cp15</name><operator pos:start="141:22" pos:end="141:22">.</operator><name pos:start="141:23" pos:end="141:29">c5_data</name></name> <operator pos:start="141:31" pos:end="141:31">=</operator> <name pos:start="141:33" pos:end="141:35">val</name></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:15">case <expr pos:start="145:14" pos:end="145:14"><literal type="number" pos:start="145:14" pos:end="145:14">1</literal></expr>:</case>

            <if_stmt pos:start="147:13" pos:end="149:48"><if pos:start="147:13" pos:end="149:48">if <condition pos:start="147:16" pos:end="147:50">(<expr pos:start="147:17" pos:end="147:49"><call pos:start="147:17" pos:end="147:49"><name pos:start="147:17" pos:end="147:27">arm_feature</name><argument_list pos:start="147:28" pos:end="147:49">(<argument pos:start="147:29" pos:end="147:31"><expr pos:start="147:29" pos:end="147:31"><name pos:start="147:29" pos:end="147:31">env</name></expr></argument>, <argument pos:start="147:34" pos:end="147:48"><expr pos:start="147:34" pos:end="147:48"><name pos:start="147:34" pos:end="147:48">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:48"><block_content pos:start="149:17" pos:end="149:48">

                <expr_stmt pos:start="149:17" pos:end="149:48"><expr pos:start="149:17" pos:end="149:47"><name pos:start="149:17" pos:end="149:19">val</name> <operator pos:start="149:21" pos:end="149:21">=</operator> <call pos:start="149:23" pos:end="149:47"><name pos:start="149:23" pos:end="149:42">extended_mpu_ap_bits</name><argument_list pos:start="149:43" pos:end="149:47">(<argument pos:start="149:44" pos:end="149:46"><expr pos:start="149:44" pos:end="149:46"><name pos:start="149:44" pos:end="149:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:36"><expr pos:start="151:13" pos:end="151:35"><name pos:start="151:13" pos:end="151:29"><name pos:start="151:13" pos:end="151:15">env</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:21">cp15</name><operator pos:start="151:22" pos:end="151:22">.</operator><name pos:start="151:23" pos:end="151:29">c5_insn</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <name pos:start="151:33" pos:end="151:35">val</name></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        <case pos:start="155:9" pos:end="155:15">case <expr pos:start="155:14" pos:end="155:14"><literal type="number" pos:start="155:14" pos:end="155:14">2</literal></expr>:</case>

            <if_stmt pos:start="157:13" pos:end="159:29"><if pos:start="157:13" pos:end="159:29">if <condition pos:start="157:16" pos:end="157:51">(<expr pos:start="157:17" pos:end="157:50"><operator pos:start="157:17" pos:end="157:17">!</operator><call pos:start="157:18" pos:end="157:50"><name pos:start="157:18" pos:end="157:28">arm_feature</name><argument_list pos:start="157:29" pos:end="157:50">(<argument pos:start="157:30" pos:end="157:32"><expr pos:start="157:30" pos:end="157:32"><name pos:start="157:30" pos:end="157:32">env</name></expr></argument>, <argument pos:start="157:35" pos:end="157:49"><expr pos:start="157:35" pos:end="157:49"><name pos:start="157:35" pos:end="157:49">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="159:29"><block_content pos:start="159:17" pos:end="159:29">

                <goto pos:start="159:17" pos:end="159:29">goto <name pos:start="159:22" pos:end="159:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:36"><expr pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:29"><name pos:start="161:13" pos:end="161:15">env</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:21">cp15</name><operator pos:start="161:22" pos:end="161:22">.</operator><name pos:start="161:23" pos:end="161:29">c5_data</name></name> <operator pos:start="161:31" pos:end="161:31">=</operator> <name pos:start="161:33" pos:end="161:35">val</name></expr>;</expr_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>

        <case pos:start="165:9" pos:end="165:15">case <expr pos:start="165:14" pos:end="165:14"><literal type="number" pos:start="165:14" pos:end="165:14">3</literal></expr>:</case>

            <if_stmt pos:start="167:13" pos:end="169:29"><if pos:start="167:13" pos:end="169:29">if <condition pos:start="167:16" pos:end="167:51">(<expr pos:start="167:17" pos:end="167:50"><operator pos:start="167:17" pos:end="167:17">!</operator><call pos:start="167:18" pos:end="167:50"><name pos:start="167:18" pos:end="167:28">arm_feature</name><argument_list pos:start="167:29" pos:end="167:50">(<argument pos:start="167:30" pos:end="167:32"><expr pos:start="167:30" pos:end="167:32"><name pos:start="167:30" pos:end="167:32">env</name></expr></argument>, <argument pos:start="167:35" pos:end="167:49"><expr pos:start="167:35" pos:end="167:49"><name pos:start="167:35" pos:end="167:49">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="169:17" pos:end="169:29"><block_content pos:start="169:17" pos:end="169:29">

                <goto pos:start="169:17" pos:end="169:29">goto <name pos:start="169:22" pos:end="169:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:36"><expr pos:start="171:13" pos:end="171:35"><name pos:start="171:13" pos:end="171:29"><name pos:start="171:13" pos:end="171:15">env</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:21">cp15</name><operator pos:start="171:22" pos:end="171:22">.</operator><name pos:start="171:23" pos:end="171:29">c5_insn</name></name> <operator pos:start="171:31" pos:end="171:31">=</operator> <name pos:start="171:33" pos:end="171:35">val</name></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <default pos:start="175:9" pos:end="175:16">default:</default>

            <goto pos:start="177:13" pos:end="177:25">goto <name pos:start="177:18" pos:end="177:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    <case pos:start="183:5" pos:end="183:11">case <expr pos:start="183:10" pos:end="183:10"><literal type="number" pos:start="183:10" pos:end="183:10">6</literal></expr>:</case> <comment type="block" pos:start="183:13" pos:end="183:53">/* MMU Fault address / MPU base/size.  */</comment>

        <if_stmt pos:start="185:9" pos:end="219:9"><if pos:start="185:9" pos:end="193:9">if <condition pos:start="185:12" pos:end="185:46">(<expr pos:start="185:13" pos:end="185:45"><call pos:start="185:13" pos:end="185:45"><name pos:start="185:13" pos:end="185:23">arm_feature</name><argument_list pos:start="185:24" pos:end="185:45">(<argument pos:start="185:25" pos:end="185:27"><expr pos:start="185:25" pos:end="185:27"><name pos:start="185:25" pos:end="185:27">env</name></expr></argument>, <argument pos:start="185:30" pos:end="185:44"><expr pos:start="185:30" pos:end="185:44"><name pos:start="185:30" pos:end="185:44">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="185:48" pos:end="193:9">{<block_content pos:start="187:13" pos:end="191:43">

            <if_stmt pos:start="187:13" pos:end="189:29"><if pos:start="187:13" pos:end="189:29">if <condition pos:start="187:16" pos:end="187:25">(<expr pos:start="187:17" pos:end="187:24"><name pos:start="187:17" pos:end="187:19">crm</name> <operator pos:start="187:21" pos:end="187:22">&gt;=</operator> <literal type="number" pos:start="187:24" pos:end="187:24">8</literal></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:29"><block_content pos:start="189:17" pos:end="189:29">

                <goto pos:start="189:17" pos:end="189:29">goto <name pos:start="189:22" pos:end="189:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:43"><expr pos:start="191:13" pos:end="191:42"><name pos:start="191:13" pos:end="191:36"><name pos:start="191:13" pos:end="191:15">env</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:21">cp15</name><operator pos:start="191:22" pos:end="191:22">.</operator><name pos:start="191:23" pos:end="191:31">c6_region</name><index pos:start="191:32" pos:end="191:36">[<expr pos:start="191:33" pos:end="191:35"><name pos:start="191:33" pos:end="191:35">crm</name></expr>]</index></name> <operator pos:start="191:38" pos:end="191:38">=</operator> <name pos:start="191:40" pos:end="191:42">val</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="193:11" pos:end="219:9">else <block pos:start="193:16" pos:end="219:9">{<block_content pos:start="195:13" pos:end="217:13">

            <if_stmt pos:start="195:13" pos:end="197:24"><if pos:start="195:13" pos:end="197:24">if <condition pos:start="195:16" pos:end="195:53">(<expr pos:start="195:17" pos:end="195:52"><call pos:start="195:17" pos:end="195:52"><name pos:start="195:17" pos:end="195:27">arm_feature</name><argument_list pos:start="195:28" pos:end="195:52">(<argument pos:start="195:29" pos:end="195:31"><expr pos:start="195:29" pos:end="195:31"><name pos:start="195:29" pos:end="195:31">env</name></expr></argument>, <argument pos:start="195:34" pos:end="195:51"><expr pos:start="195:34" pos:end="195:51"><name pos:start="195:34" pos:end="195:51">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:24"><block_content pos:start="197:17" pos:end="197:24">

                <expr_stmt pos:start="197:17" pos:end="197:24"><expr pos:start="197:17" pos:end="197:23"><name pos:start="197:17" pos:end="197:19">op2</name> <operator pos:start="197:21" pos:end="197:21">=</operator> <literal type="number" pos:start="197:23" pos:end="197:23">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <switch pos:start="199:13" pos:end="217:13">switch <condition pos:start="199:20" pos:end="199:24">(<expr pos:start="199:21" pos:end="199:23"><name pos:start="199:21" pos:end="199:23">op2</name></expr>)</condition> <block pos:start="199:26" pos:end="217:13">{<block_content pos:start="201:13" pos:end="215:29">

            <case pos:start="201:13" pos:end="201:19">case <expr pos:start="201:18" pos:end="201:18"><literal type="number" pos:start="201:18" pos:end="201:18">0</literal></expr>:</case>

                <expr_stmt pos:start="203:17" pos:end="203:40"><expr pos:start="203:17" pos:end="203:39"><name pos:start="203:17" pos:end="203:33"><name pos:start="203:17" pos:end="203:19">env</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:25">cp15</name><operator pos:start="203:26" pos:end="203:26">.</operator><name pos:start="203:27" pos:end="203:33">c6_data</name></name> <operator pos:start="203:35" pos:end="203:35">=</operator> <name pos:start="203:37" pos:end="203:39">val</name></expr>;</expr_stmt>

                <break pos:start="205:17" pos:end="205:22">break;</break>

            <case pos:start="207:13" pos:end="207:19">case <expr pos:start="207:18" pos:end="207:18"><literal type="number" pos:start="207:18" pos:end="207:18">1</literal></expr>:</case>

                <expr_stmt pos:start="209:17" pos:end="209:40"><expr pos:start="209:17" pos:end="209:39"><name pos:start="209:17" pos:end="209:33"><name pos:start="209:17" pos:end="209:19">env</name><operator pos:start="209:20" pos:end="209:21">-&gt;</operator><name pos:start="209:22" pos:end="209:25">cp15</name><operator pos:start="209:26" pos:end="209:26">.</operator><name pos:start="209:27" pos:end="209:33">c6_insn</name></name> <operator pos:start="209:35" pos:end="209:35">=</operator> <name pos:start="209:37" pos:end="209:39">val</name></expr>;</expr_stmt>

                <break pos:start="211:17" pos:end="211:22">break;</break>

            <default pos:start="213:13" pos:end="213:20">default:</default>

                <goto pos:start="215:17" pos:end="215:29">goto <name pos:start="215:22" pos:end="215:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <break pos:start="221:9" pos:end="221:14">break;</break>

    <case pos:start="223:5" pos:end="223:11">case <expr pos:start="223:10" pos:end="223:10"><literal type="number" pos:start="223:10" pos:end="223:10">7</literal></expr>:</case> <comment type="block" pos:start="223:13" pos:end="223:33">/* Cache control.  */</comment>

        <expr_stmt pos:start="225:9" pos:end="225:36"><expr pos:start="225:9" pos:end="225:35"><name pos:start="225:9" pos:end="225:27"><name pos:start="225:9" pos:end="225:11">env</name><operator pos:start="225:12" pos:end="225:13">-&gt;</operator><name pos:start="225:14" pos:end="225:17">cp15</name><operator pos:start="225:18" pos:end="225:18">.</operator><name pos:start="225:19" pos:end="225:27">c15_i_max</name></name> <operator pos:start="225:29" pos:end="225:29">=</operator> <literal type="number" pos:start="225:31" pos:end="225:35">0x000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:36"><expr pos:start="227:9" pos:end="227:35"><name pos:start="227:9" pos:end="227:27"><name pos:start="227:9" pos:end="227:11">env</name><operator pos:start="227:12" pos:end="227:13">-&gt;</operator><name pos:start="227:14" pos:end="227:17">cp15</name><operator pos:start="227:18" pos:end="227:18">.</operator><name pos:start="227:19" pos:end="227:27">c15_i_min</name></name> <operator pos:start="227:29" pos:end="227:29">=</operator> <literal type="number" pos:start="227:31" pos:end="227:35">0xff0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="229:9" pos:end="229:42">/* No cache, so nothing to do.  */</comment>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:11">case <expr pos:start="233:10" pos:end="233:10"><literal type="number" pos:start="233:10" pos:end="233:10">8</literal></expr>:</case> <comment type="block" pos:start="233:13" pos:end="233:35">/* MMU TLB control.  */</comment>

        <switch pos:start="235:9" pos:end="275:9">switch <condition pos:start="235:16" pos:end="235:20">(<expr pos:start="235:17" pos:end="235:19"><name pos:start="235:17" pos:end="235:19">op2</name></expr>)</condition> <block pos:start="235:22" pos:end="275:9">{<block_content pos:start="237:9" pos:end="273:25">

        <case pos:start="237:9" pos:end="237:15">case <expr pos:start="237:14" pos:end="237:14"><literal type="number" pos:start="237:14" pos:end="237:14">0</literal></expr>:</case> <comment type="block" pos:start="237:17" pos:end="237:38">/* Invalidate all.  */</comment>

            <expr_stmt pos:start="239:13" pos:end="239:30"><expr pos:start="239:13" pos:end="239:29"><call pos:start="239:13" pos:end="239:29"><name pos:start="239:13" pos:end="239:21">tlb_flush</name><argument_list pos:start="239:22" pos:end="239:29">(<argument pos:start="239:23" pos:end="239:25"><expr pos:start="239:23" pos:end="239:25"><name pos:start="239:23" pos:end="239:25">env</name></expr></argument>, <argument pos:start="239:28" pos:end="239:28"><expr pos:start="239:28" pos:end="239:28"><literal type="number" pos:start="239:28" pos:end="239:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="241:13" pos:end="241:18">break;</break>

        <case pos:start="243:9" pos:end="264:0">case <expr pos:start="243:14" pos:end="243:14"><literal type="number" pos:start="243:14" pos:end="243:14">1</literal></expr>:</case> <comment type="block" pos:start="243:17" pos:end="243:51">/* Invalidate single TLB entry.  */</comment>

<cpp:if pos:start="245:1" pos:end="245:5">#<cpp:directive pos:start="245:2" pos:end="245:3">if</cpp:directive> <expr pos:start="245:5" pos:end="245:5"><literal type="number" pos:start="245:5" pos:end="245:5">0</literal></expr></cpp:if>

            <comment type="block" pos:start="247:13" pos:end="247:66">/* ??? This is wrong for large pages and sections.  */</comment>

            <comment type="block" pos:start="249:13" pos:end="251:25">/* As an ugly hack to make linux work we always flush a 4K

               pages.  */</comment>

            val &amp;= 0xfffff000;

            tlb_flush_page(env, val);

            tlb_flush_page(env, val + 0x400);

            tlb_flush_page(env, val + 0x800);

            tlb_flush_page(env, val + 0xc00);

<cpp:else pos:start="263:1" pos:end="263:5">#<cpp:directive pos:start="263:2" pos:end="263:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="265:13" pos:end="268:0"><expr pos:start="265:13" pos:end="265:29"><call pos:start="265:13" pos:end="265:29"><name pos:start="265:13" pos:end="265:21">tlb_flush</name><argument_list pos:start="265:22" pos:end="265:29">(<argument pos:start="265:23" pos:end="265:25"><expr pos:start="265:23" pos:end="265:25"><name pos:start="265:23" pos:end="265:25">env</name></expr></argument>, <argument pos:start="265:28" pos:end="265:28"><expr pos:start="265:28" pos:end="265:28"><literal type="number" pos:start="265:28" pos:end="265:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="267:1" pos:end="267:6">#<cpp:directive pos:start="267:2" pos:end="267:6">endif</cpp:directive></cpp:endif>

            <break pos:start="269:13" pos:end="269:18">break;</break>

        <default pos:start="271:9" pos:end="271:16">default:</default>

            <goto pos:start="273:13" pos:end="273:25">goto <name pos:start="273:18" pos:end="273:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="277:9" pos:end="277:14">break;</break>

    <case pos:start="279:5" pos:end="279:11">case <expr pos:start="279:10" pos:end="279:10"><literal type="number" pos:start="279:10" pos:end="279:10">9</literal></expr>:</case>

        <if_stmt pos:start="281:9" pos:end="283:18"><if pos:start="281:9" pos:end="283:18">if <condition pos:start="281:12" pos:end="281:49">(<expr pos:start="281:13" pos:end="281:48"><call pos:start="281:13" pos:end="281:48"><name pos:start="281:13" pos:end="281:23">arm_feature</name><argument_list pos:start="281:24" pos:end="281:48">(<argument pos:start="281:25" pos:end="281:27"><expr pos:start="281:25" pos:end="281:27"><name pos:start="281:25" pos:end="281:27">env</name></expr></argument>, <argument pos:start="281:30" pos:end="281:47"><expr pos:start="281:30" pos:end="281:47"><name pos:start="281:30" pos:end="281:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="283:13" pos:end="283:18"><block_content pos:start="283:13" pos:end="283:18">

            <break pos:start="283:13" pos:end="283:18">break;</break></block_content></block></if></if_stmt>

        <switch pos:start="285:9" pos:end="321:9">switch <condition pos:start="285:16" pos:end="285:20">(<expr pos:start="285:17" pos:end="285:19"><name pos:start="285:17" pos:end="285:19">crm</name></expr>)</condition> <block pos:start="285:22" pos:end="321:9">{<block_content pos:start="287:9" pos:end="319:25">

        <case pos:start="287:9" pos:end="287:15">case <expr pos:start="287:14" pos:end="287:14"><literal type="number" pos:start="287:14" pos:end="287:14">0</literal></expr>:</case> <comment type="block" pos:start="287:17" pos:end="287:38">/* Cache lockdown.  */</comment>

            <switch pos:start="289:13" pos:end="307:13">switch <condition pos:start="289:20" pos:end="289:24">(<expr pos:start="289:21" pos:end="289:23"><name pos:start="289:21" pos:end="289:23">op2</name></expr>)</condition> <block pos:start="289:26" pos:end="307:13">{<block_content pos:start="291:13" pos:end="305:29">

            <case pos:start="291:13" pos:end="291:19">case <expr pos:start="291:18" pos:end="291:18"><literal type="number" pos:start="291:18" pos:end="291:18">0</literal></expr>:</case>

                <expr_stmt pos:start="293:17" pos:end="293:40"><expr pos:start="293:17" pos:end="293:39"><name pos:start="293:17" pos:end="293:33"><name pos:start="293:17" pos:end="293:19">env</name><operator pos:start="293:20" pos:end="293:21">-&gt;</operator><name pos:start="293:22" pos:end="293:25">cp15</name><operator pos:start="293:26" pos:end="293:26">.</operator><name pos:start="293:27" pos:end="293:33">c9_data</name></name> <operator pos:start="293:35" pos:end="293:35">=</operator> <name pos:start="293:37" pos:end="293:39">val</name></expr>;</expr_stmt>

                <break pos:start="295:17" pos:end="295:22">break;</break>

            <case pos:start="297:13" pos:end="297:19">case <expr pos:start="297:18" pos:end="297:18"><literal type="number" pos:start="297:18" pos:end="297:18">1</literal></expr>:</case>

                <expr_stmt pos:start="299:17" pos:end="299:40"><expr pos:start="299:17" pos:end="299:39"><name pos:start="299:17" pos:end="299:33"><name pos:start="299:17" pos:end="299:19">env</name><operator pos:start="299:20" pos:end="299:21">-&gt;</operator><name pos:start="299:22" pos:end="299:25">cp15</name><operator pos:start="299:26" pos:end="299:26">.</operator><name pos:start="299:27" pos:end="299:33">c9_insn</name></name> <operator pos:start="299:35" pos:end="299:35">=</operator> <name pos:start="299:37" pos:end="299:39">val</name></expr>;</expr_stmt>

                <break pos:start="301:17" pos:end="301:22">break;</break>

            <default pos:start="303:13" pos:end="303:20">default:</default>

                <goto pos:start="305:17" pos:end="305:29">goto <name pos:start="305:22" pos:end="305:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

            <break pos:start="309:13" pos:end="309:18">break;</break>

        <case pos:start="311:9" pos:end="311:15">case <expr pos:start="311:14" pos:end="311:14"><literal type="number" pos:start="311:14" pos:end="311:14">1</literal></expr>:</case> <comment type="block" pos:start="311:17" pos:end="311:51">/* TCM memory region registers.  */</comment>

            <comment type="block" pos:start="313:13" pos:end="313:35">/* Not implemented.  */</comment>

            <goto pos:start="315:13" pos:end="315:25">goto <name pos:start="315:18" pos:end="315:24">bad_reg</name>;</goto>

        <default pos:start="317:9" pos:end="317:16">default:</default>

            <goto pos:start="319:13" pos:end="319:25">goto <name pos:start="319:18" pos:end="319:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="323:9" pos:end="323:14">break;</break>

    <case pos:start="325:5" pos:end="325:12">case <expr pos:start="325:10" pos:end="325:11"><literal type="number" pos:start="325:10" pos:end="325:11">10</literal></expr>:</case> <comment type="block" pos:start="325:14" pos:end="325:37">/* MMU TLB lockdown.  */</comment>

        <comment type="block" pos:start="327:9" pos:end="327:48">/* ??? TLB lockdown not implemented.  */</comment>

        <break pos:start="329:9" pos:end="329:14">break;</break>

    <case pos:start="331:5" pos:end="331:12">case <expr pos:start="331:10" pos:end="331:11"><literal type="number" pos:start="331:10" pos:end="331:11">12</literal></expr>:</case> <comment type="block" pos:start="331:14" pos:end="331:29">/* Reserved.  */</comment>

        <goto pos:start="333:9" pos:end="333:21">goto <name pos:start="333:14" pos:end="333:20">bad_reg</name>;</goto>

    <case pos:start="335:5" pos:end="335:12">case <expr pos:start="335:10" pos:end="335:11"><literal type="number" pos:start="335:10" pos:end="335:11">13</literal></expr>:</case> <comment type="block" pos:start="335:14" pos:end="335:31">/* Process ID.  */</comment>

        <switch pos:start="337:9" pos:end="377:9">switch <condition pos:start="337:16" pos:end="337:20">(<expr pos:start="337:17" pos:end="337:19"><name pos:start="337:17" pos:end="337:19">op2</name></expr>)</condition> <block pos:start="337:22" pos:end="377:9">{<block_content pos:start="339:9" pos:end="375:25">

        <case pos:start="339:9" pos:end="339:15">case <expr pos:start="339:14" pos:end="339:14"><literal type="number" pos:start="339:14" pos:end="339:14">0</literal></expr>:</case>

            <if_stmt pos:start="341:13" pos:end="343:29"><if pos:start="341:13" pos:end="343:29">if <condition pos:start="341:16" pos:end="341:51">(<expr pos:start="341:17" pos:end="341:50"><operator pos:start="341:17" pos:end="341:17">!</operator><call pos:start="341:18" pos:end="341:50"><name pos:start="341:18" pos:end="341:28">arm_feature</name><argument_list pos:start="341:29" pos:end="341:50">(<argument pos:start="341:30" pos:end="341:32"><expr pos:start="341:30" pos:end="341:32"><name pos:start="341:30" pos:end="341:32">env</name></expr></argument>, <argument pos:start="341:35" pos:end="341:49"><expr pos:start="341:35" pos:end="341:49"><name pos:start="341:35" pos:end="341:49">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="343:17" pos:end="343:29"><block_content pos:start="343:17" pos:end="343:29">

                <goto pos:start="343:17" pos:end="343:29">goto <name pos:start="343:22" pos:end="343:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="345:13" pos:end="349:15">/* Unlike real hardware the qemu TLB uses virtual addresses,

               not modified virtual addresses, so this causes a TLB flush.

             */</comment>

            <if_stmt pos:start="351:13" pos:end="353:32"><if pos:start="351:13" pos:end="353:32">if <condition pos:start="351:16" pos:end="351:42">(<expr pos:start="351:17" pos:end="351:41"><name pos:start="351:17" pos:end="351:34"><name pos:start="351:17" pos:end="351:19">env</name><operator pos:start="351:20" pos:end="351:21">-&gt;</operator><name pos:start="351:22" pos:end="351:25">cp15</name><operator pos:start="351:26" pos:end="351:26">.</operator><name pos:start="351:27" pos:end="351:34">c13_fcse</name></name> <operator pos:start="351:36" pos:end="351:37">!=</operator> <name pos:start="351:39" pos:end="351:41">val</name></expr>)</condition><block type="pseudo" pos:start="353:15" pos:end="353:32"><block_content pos:start="353:15" pos:end="353:32">

              <expr_stmt pos:start="353:15" pos:end="353:32"><expr pos:start="353:15" pos:end="353:31"><call pos:start="353:15" pos:end="353:31"><name pos:start="353:15" pos:end="353:23">tlb_flush</name><argument_list pos:start="353:24" pos:end="353:31">(<argument pos:start="353:25" pos:end="353:27"><expr pos:start="353:25" pos:end="353:27"><name pos:start="353:25" pos:end="353:27">env</name></expr></argument>, <argument pos:start="353:30" pos:end="353:30"><expr pos:start="353:30" pos:end="353:30"><literal type="number" pos:start="353:30" pos:end="353:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="355:13" pos:end="355:37"><expr pos:start="355:13" pos:end="355:36"><name pos:start="355:13" pos:end="355:30"><name pos:start="355:13" pos:end="355:15">env</name><operator pos:start="355:16" pos:end="355:17">-&gt;</operator><name pos:start="355:18" pos:end="355:21">cp15</name><operator pos:start="355:22" pos:end="355:22">.</operator><name pos:start="355:23" pos:end="355:30">c13_fcse</name></name> <operator pos:start="355:32" pos:end="355:32">=</operator> <name pos:start="355:34" pos:end="355:36">val</name></expr>;</expr_stmt>

            <break pos:start="357:13" pos:end="357:18">break;</break>

        <case pos:start="359:9" pos:end="359:15">case <expr pos:start="359:14" pos:end="359:14"><literal type="number" pos:start="359:14" pos:end="359:14">1</literal></expr>:</case>

            <comment type="block" pos:start="361:13" pos:end="361:60">/* This changes the ASID, so do a TLB flush.  */</comment>

            <if_stmt pos:start="363:13" pos:end="367:32"><if pos:start="363:13" pos:end="367:32">if <condition pos:start="363:16" pos:end="365:54">(<expr pos:start="363:17" pos:end="365:53"><name pos:start="363:17" pos:end="363:37"><name pos:start="363:17" pos:end="363:19">env</name><operator pos:start="363:20" pos:end="363:21">-&gt;</operator><name pos:start="363:22" pos:end="363:25">cp15</name><operator pos:start="363:26" pos:end="363:26">.</operator><name pos:start="363:27" pos:end="363:37">c13_context</name></name> <operator pos:start="363:39" pos:end="363:40">!=</operator> <name pos:start="363:42" pos:end="363:44">val</name>

                <operator pos:start="365:17" pos:end="365:18">&amp;&amp;</operator> <operator pos:start="365:20" pos:end="365:20">!</operator><call pos:start="365:21" pos:end="365:53"><name pos:start="365:21" pos:end="365:31">arm_feature</name><argument_list pos:start="365:32" pos:end="365:53">(<argument pos:start="365:33" pos:end="365:35"><expr pos:start="365:33" pos:end="365:35"><name pos:start="365:33" pos:end="365:35">env</name></expr></argument>, <argument pos:start="365:38" pos:end="365:52"><expr pos:start="365:38" pos:end="365:52"><name pos:start="365:38" pos:end="365:52">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="367:15" pos:end="367:32"><block_content pos:start="367:15" pos:end="367:32">

              <expr_stmt pos:start="367:15" pos:end="367:32"><expr pos:start="367:15" pos:end="367:31"><call pos:start="367:15" pos:end="367:31"><name pos:start="367:15" pos:end="367:23">tlb_flush</name><argument_list pos:start="367:24" pos:end="367:31">(<argument pos:start="367:25" pos:end="367:27"><expr pos:start="367:25" pos:end="367:27"><name pos:start="367:25" pos:end="367:27">env</name></expr></argument>, <argument pos:start="367:30" pos:end="367:30"><expr pos:start="367:30" pos:end="367:30"><literal type="number" pos:start="367:30" pos:end="367:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:40"><expr pos:start="369:13" pos:end="369:39"><name pos:start="369:13" pos:end="369:33"><name pos:start="369:13" pos:end="369:15">env</name><operator pos:start="369:16" pos:end="369:17">-&gt;</operator><name pos:start="369:18" pos:end="369:21">cp15</name><operator pos:start="369:22" pos:end="369:22">.</operator><name pos:start="369:23" pos:end="369:33">c13_context</name></name> <operator pos:start="369:35" pos:end="369:35">=</operator> <name pos:start="369:37" pos:end="369:39">val</name></expr>;</expr_stmt>

            <break pos:start="371:13" pos:end="371:18">break;</break>

        <default pos:start="373:9" pos:end="373:16">default:</default>

            <goto pos:start="375:13" pos:end="375:25">goto <name pos:start="375:18" pos:end="375:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="379:9" pos:end="379:14">break;</break>

    <case pos:start="381:5" pos:end="381:12">case <expr pos:start="381:10" pos:end="381:11"><literal type="number" pos:start="381:10" pos:end="381:11">14</literal></expr>:</case> <comment type="block" pos:start="381:14" pos:end="381:29">/* Reserved.  */</comment>

        <goto pos:start="383:9" pos:end="383:21">goto <name pos:start="383:14" pos:end="383:20">bad_reg</name>;</goto>

    <case pos:start="385:5" pos:end="385:12">case <expr pos:start="385:10" pos:end="385:11"><literal type="number" pos:start="385:10" pos:end="385:11">15</literal></expr>:</case> <comment type="block" pos:start="385:14" pos:end="385:44">/* Implementation specific.  */</comment>

        <if_stmt pos:start="387:9" pos:end="407:9"><if pos:start="387:9" pos:end="407:9">if <condition pos:start="387:12" pos:end="387:49">(<expr pos:start="387:13" pos:end="387:48"><call pos:start="387:13" pos:end="387:48"><name pos:start="387:13" pos:end="387:23">arm_feature</name><argument_list pos:start="387:24" pos:end="387:48">(<argument pos:start="387:25" pos:end="387:27"><expr pos:start="387:25" pos:end="387:27"><name pos:start="387:25" pos:end="387:27">env</name></expr></argument>, <argument pos:start="387:30" pos:end="387:47"><expr pos:start="387:30" pos:end="387:47"><name pos:start="387:30" pos:end="387:47">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="387:51" pos:end="407:9">{<block_content pos:start="389:13" pos:end="405:25">

            <if_stmt pos:start="389:13" pos:end="403:13"><if pos:start="389:13" pos:end="403:13">if <condition pos:start="389:16" pos:end="389:37">(<expr pos:start="389:17" pos:end="389:36"><name pos:start="389:17" pos:end="389:19">op2</name> <operator pos:start="389:21" pos:end="389:22">==</operator> <literal type="number" pos:start="389:24" pos:end="389:24">0</literal> <operator pos:start="389:26" pos:end="389:27">&amp;&amp;</operator> <name pos:start="389:29" pos:end="389:31">crm</name> <operator pos:start="389:33" pos:end="389:34">==</operator> <literal type="number" pos:start="389:36" pos:end="389:36">1</literal></expr>)</condition> <block pos:start="389:39" pos:end="403:13">{<block_content pos:start="391:17" pos:end="401:22">

                <if_stmt pos:start="391:17" pos:end="399:17"><if pos:start="391:17" pos:end="399:17">if <condition pos:start="391:20" pos:end="391:57">(<expr pos:start="391:21" pos:end="391:56"><name pos:start="391:21" pos:end="391:38"><name pos:start="391:21" pos:end="391:23">env</name><operator pos:start="391:24" pos:end="391:25">-&gt;</operator><name pos:start="391:26" pos:end="391:29">cp15</name><operator pos:start="391:30" pos:end="391:30">.</operator><name pos:start="391:31" pos:end="391:38">c15_cpar</name></name> <operator pos:start="391:40" pos:end="391:41">!=</operator> <operator pos:start="391:43" pos:end="391:43">(</operator><name pos:start="391:44" pos:end="391:46">val</name> <operator pos:start="391:48" pos:end="391:48">&amp;</operator> <literal type="number" pos:start="391:50" pos:end="391:55">0x3fff</literal><operator pos:start="391:56" pos:end="391:56">)</operator></expr>)</condition> <block pos:start="391:59" pos:end="399:17">{<block_content pos:start="395:21" pos:end="397:54">

                    <comment type="block" pos:start="393:21" pos:end="393:77">/* Changes cp0 to cp13 behavior, so needs a TB flush.  */</comment>

                    <expr_stmt pos:start="395:21" pos:end="395:34"><expr pos:start="395:21" pos:end="395:33"><call pos:start="395:21" pos:end="395:33"><name pos:start="395:21" pos:end="395:28">tb_flush</name><argument_list pos:start="395:29" pos:end="395:33">(<argument pos:start="395:30" pos:end="395:32"><expr pos:start="395:30" pos:end="395:32"><name pos:start="395:30" pos:end="395:32">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="397:21" pos:end="397:54"><expr pos:start="397:21" pos:end="397:53"><name pos:start="397:21" pos:end="397:38"><name pos:start="397:21" pos:end="397:23">env</name><operator pos:start="397:24" pos:end="397:25">-&gt;</operator><name pos:start="397:26" pos:end="397:29">cp15</name><operator pos:start="397:30" pos:end="397:30">.</operator><name pos:start="397:31" pos:end="397:38">c15_cpar</name></name> <operator pos:start="397:40" pos:end="397:40">=</operator> <name pos:start="397:42" pos:end="397:44">val</name> <operator pos:start="397:46" pos:end="397:46">&amp;</operator> <literal type="number" pos:start="397:48" pos:end="397:53">0x3fff</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="401:17" pos:end="401:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="405:13" pos:end="405:25">goto <name pos:start="405:18" pos:end="405:24">bad_reg</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="409:9" pos:end="457:9"><if pos:start="409:9" pos:end="457:9">if <condition pos:start="409:12" pos:end="409:49">(<expr pos:start="409:13" pos:end="409:48"><call pos:start="409:13" pos:end="409:48"><name pos:start="409:13" pos:end="409:23">arm_feature</name><argument_list pos:start="409:24" pos:end="409:48">(<argument pos:start="409:25" pos:end="409:27"><expr pos:start="409:25" pos:end="409:27"><name pos:start="409:25" pos:end="409:27">env</name></expr></argument>, <argument pos:start="409:30" pos:end="409:47"><expr pos:start="409:30" pos:end="409:47"><name pos:start="409:30" pos:end="409:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="409:51" pos:end="457:9">{<block_content pos:start="411:13" pos:end="455:13">

            <switch pos:start="411:13" pos:end="455:13">switch <condition pos:start="411:20" pos:end="411:24">(<expr pos:start="411:21" pos:end="411:23"><name pos:start="411:21" pos:end="411:23">crm</name></expr>)</condition> <block pos:start="411:26" pos:end="455:13">{<block_content pos:start="413:13" pos:end="453:29">

            <case pos:start="413:13" pos:end="413:19">case <expr pos:start="413:18" pos:end="413:18"><literal type="number" pos:start="413:18" pos:end="413:18">0</literal></expr>:</case>

                <break pos:start="415:17" pos:end="415:22">break;</break>

            <case pos:start="417:13" pos:end="417:19">case <expr pos:start="417:18" pos:end="417:18"><literal type="number" pos:start="417:18" pos:end="417:18">1</literal></expr>:</case> <comment type="block" pos:start="417:21" pos:end="417:52">/* Set TI925T configuration.  */</comment>

                <expr_stmt pos:start="419:17" pos:end="419:52"><expr pos:start="419:17" pos:end="419:51"><name pos:start="419:17" pos:end="419:38"><name pos:start="419:17" pos:end="419:19">env</name><operator pos:start="419:20" pos:end="419:21">-&gt;</operator><name pos:start="419:22" pos:end="419:25">cp15</name><operator pos:start="419:26" pos:end="419:26">.</operator><name pos:start="419:27" pos:end="419:38">c15_ticonfig</name></name> <operator pos:start="419:40" pos:end="419:40">=</operator> <name pos:start="419:42" pos:end="419:44">val</name> <operator pos:start="419:46" pos:end="419:46">&amp;</operator> <literal type="number" pos:start="419:48" pos:end="419:51">0xe7</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="421:17" pos:end="423:60"><expr pos:start="421:17" pos:end="423:59"><name pos:start="421:17" pos:end="421:34"><name pos:start="421:17" pos:end="421:19">env</name><operator pos:start="421:20" pos:end="421:21">-&gt;</operator><name pos:start="421:22" pos:end="421:25">cp15</name><operator pos:start="421:26" pos:end="421:26">.</operator><name pos:start="421:27" pos:end="421:34">c0_cpuid</name></name> <operator pos:start="421:36" pos:end="421:36">=</operator> <ternary pos:start="421:38" pos:end="423:59"><condition pos:start="421:38" pos:end="421:55"><expr pos:start="421:38" pos:end="421:53"><operator pos:start="421:38" pos:end="421:38">(</operator><name pos:start="421:39" pos:end="421:41">val</name> <operator pos:start="421:43" pos:end="421:43">&amp;</operator> <operator pos:start="421:45" pos:end="421:45">(</operator><literal type="number" pos:start="421:46" pos:end="421:46">1</literal> <operator pos:start="421:48" pos:end="421:49">&lt;&lt;</operator> <literal type="number" pos:start="421:51" pos:end="421:51">5</literal><operator pos:start="421:52" pos:end="421:52">)</operator><operator pos:start="421:53" pos:end="421:53">)</operator></expr> ?</condition><then pos:start="423:25" pos:end="423:40"> <comment type="block" pos:start="421:57" pos:end="421:73">/* OS_TYPE bit */</comment>

                        <expr pos:start="423:25" pos:end="423:40"><name pos:start="423:25" pos:end="423:40">ARM_CPUID_TI915T</name></expr> </then><else pos:start="423:42" pos:end="423:59">: <expr pos:start="423:44" pos:end="423:59"><name pos:start="423:44" pos:end="423:59">ARM_CPUID_TI925T</name></expr></else></ternary></expr>;</expr_stmt>

                <break pos:start="425:17" pos:end="425:22">break;</break>

            <case pos:start="427:13" pos:end="427:19">case <expr pos:start="427:18" pos:end="427:18"><literal type="number" pos:start="427:18" pos:end="427:18">2</literal></expr>:</case> <comment type="block" pos:start="427:21" pos:end="427:37">/* Set I_max.  */</comment>

                <expr_stmt pos:start="429:17" pos:end="429:42"><expr pos:start="429:17" pos:end="429:41"><name pos:start="429:17" pos:end="429:35"><name pos:start="429:17" pos:end="429:19">env</name><operator pos:start="429:20" pos:end="429:21">-&gt;</operator><name pos:start="429:22" pos:end="429:25">cp15</name><operator pos:start="429:26" pos:end="429:26">.</operator><name pos:start="429:27" pos:end="429:35">c15_i_max</name></name> <operator pos:start="429:37" pos:end="429:37">=</operator> <name pos:start="429:39" pos:end="429:41">val</name></expr>;</expr_stmt>

                <break pos:start="431:17" pos:end="431:22">break;</break>

            <case pos:start="433:13" pos:end="433:19">case <expr pos:start="433:18" pos:end="433:18"><literal type="number" pos:start="433:18" pos:end="433:18">3</literal></expr>:</case> <comment type="block" pos:start="433:21" pos:end="433:37">/* Set I_min.  */</comment>

                <expr_stmt pos:start="435:17" pos:end="435:42"><expr pos:start="435:17" pos:end="435:41"><name pos:start="435:17" pos:end="435:35"><name pos:start="435:17" pos:end="435:19">env</name><operator pos:start="435:20" pos:end="435:21">-&gt;</operator><name pos:start="435:22" pos:end="435:25">cp15</name><operator pos:start="435:26" pos:end="435:26">.</operator><name pos:start="435:27" pos:end="435:35">c15_i_min</name></name> <operator pos:start="435:37" pos:end="435:37">=</operator> <name pos:start="435:39" pos:end="435:41">val</name></expr>;</expr_stmt>

                <break pos:start="437:17" pos:end="437:22">break;</break>

            <case pos:start="439:13" pos:end="439:19">case <expr pos:start="439:18" pos:end="439:18"><literal type="number" pos:start="439:18" pos:end="439:18">4</literal></expr>:</case> <comment type="block" pos:start="439:21" pos:end="439:41">/* Set thread-ID.  */</comment>

                <expr_stmt pos:start="441:17" pos:end="441:54"><expr pos:start="441:17" pos:end="441:53"><name pos:start="441:17" pos:end="441:38"><name pos:start="441:17" pos:end="441:19">env</name><operator pos:start="441:20" pos:end="441:21">-&gt;</operator><name pos:start="441:22" pos:end="441:25">cp15</name><operator pos:start="441:26" pos:end="441:26">.</operator><name pos:start="441:27" pos:end="441:38">c15_threadid</name></name> <operator pos:start="441:40" pos:end="441:40">=</operator> <name pos:start="441:42" pos:end="441:44">val</name> <operator pos:start="441:46" pos:end="441:46">&amp;</operator> <literal type="number" pos:start="441:48" pos:end="441:53">0xffff</literal></expr>;</expr_stmt>

                <break pos:start="443:17" pos:end="443:22">break;</break>

            <case pos:start="445:13" pos:end="445:19">case <expr pos:start="445:18" pos:end="445:18"><literal type="number" pos:start="445:18" pos:end="445:18">8</literal></expr>:</case> <comment type="block" pos:start="445:21" pos:end="445:59">/* Wait-for-interrupt (deprecated).  */</comment>

                <expr_stmt pos:start="447:17" pos:end="447:55"><expr pos:start="447:17" pos:end="447:54"><call pos:start="447:17" pos:end="447:54"><name pos:start="447:17" pos:end="447:29">cpu_interrupt</name><argument_list pos:start="447:30" pos:end="447:54">(<argument pos:start="447:31" pos:end="447:33"><expr pos:start="447:31" pos:end="447:33"><name pos:start="447:31" pos:end="447:33">env</name></expr></argument>, <argument pos:start="447:36" pos:end="447:53"><expr pos:start="447:36" pos:end="447:53"><name pos:start="447:36" pos:end="447:53">CPU_INTERRUPT_HALT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="449:17" pos:end="449:22">break;</break>

            <default pos:start="451:13" pos:end="451:20">default:</default>

                <goto pos:start="453:17" pos:end="453:29">goto <name pos:start="453:22" pos:end="453:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

        <break pos:start="459:9" pos:end="459:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="463:5" pos:end="463:11">return;</return>

<label pos:start="465:1" pos:end="465:8"><name pos:start="465:1" pos:end="465:7">bad_reg</name>:</label>

    <comment type="block" pos:start="467:5" pos:end="467:79">/* ??? For debugging only.  Should raise illegal instruction exception.  */</comment>

    <expr_stmt pos:start="469:5" pos:end="469:58"><expr pos:start="469:5" pos:end="469:57"><call pos:start="469:5" pos:end="469:57"><name pos:start="469:5" pos:end="469:13">cpu_abort</name><argument_list pos:start="469:14" pos:end="469:57">(<argument pos:start="469:15" pos:end="469:17"><expr pos:start="469:15" pos:end="469:17"><name pos:start="469:15" pos:end="469:17">env</name></expr></argument>, <argument pos:start="469:20" pos:end="469:56"><expr pos:start="469:20" pos:end="469:56"><literal type="string" pos:start="469:20" pos:end="469:56">"Unimplemented cp15 register write\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
