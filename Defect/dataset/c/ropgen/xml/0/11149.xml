<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11149.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">bdrv_info</name><parameter_list pos:start="1:15" pos:end="1:20">(<parameter pos:start="1:16" pos:end="1:19"><decl pos:start="1:16" pos:end="1:19"><type pos:start="1:16" pos:end="1:19"><name pos:start="1:16" pos:end="1:19">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">bs</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="75:5">for <control pos:start="9:9" pos:end="9:52">(<init pos:start="9:10" pos:end="9:25"><expr pos:start="9:10" pos:end="9:24"><name pos:start="9:10" pos:end="9:11">bs</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <name pos:start="9:15" pos:end="9:24">bdrv_first</name></expr>;</init> <condition pos:start="9:27" pos:end="9:37"><expr pos:start="9:27" pos:end="9:36"><name pos:start="9:27" pos:end="9:28">bs</name> <operator pos:start="9:30" pos:end="9:31">!=</operator> <name pos:start="9:33" pos:end="9:36">NULL</name></expr>;</condition> <incr pos:start="9:39" pos:end="9:51"><expr pos:start="9:39" pos:end="9:51"><name pos:start="9:39" pos:end="9:40">bs</name> <operator pos:start="9:42" pos:end="9:42">=</operator> <name pos:start="9:44" pos:end="9:51"><name pos:start="9:44" pos:end="9:45">bs</name><operator pos:start="9:46" pos:end="9:47">-&gt;</operator><name pos:start="9:48" pos:end="9:51">next</name></name></expr></incr>)</control> <block pos:start="9:54" pos:end="75:5">{<block_content pos:start="11:9" pos:end="73:26">

        <expr_stmt pos:start="11:9" pos:end="11:44"><expr pos:start="11:9" pos:end="11:43"><call pos:start="11:9" pos:end="11:43"><name pos:start="11:9" pos:end="11:19">term_printf</name><argument_list pos:start="11:20" pos:end="11:43">(<argument pos:start="11:21" pos:end="11:25"><expr pos:start="11:21" pos:end="11:25"><literal type="string" pos:start="11:21" pos:end="11:25">"%s:"</literal></expr></argument>, <argument pos:start="11:28" pos:end="11:42"><expr pos:start="11:28" pos:end="11:42"><name pos:start="11:28" pos:end="11:42"><name pos:start="11:28" pos:end="11:29">bs</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:42">device_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:30"><expr pos:start="13:9" pos:end="13:29"><call pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:19">term_printf</name><argument_list pos:start="13:20" pos:end="13:29">(<argument pos:start="13:21" pos:end="13:28"><expr pos:start="13:21" pos:end="13:28"><literal type="string" pos:start="13:21" pos:end="13:28">" type="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="15:9" pos:end="35:9">switch<condition pos:start="15:15" pos:end="15:24">(<expr pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:17">bs</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:23">type</name></name></expr>)</condition> <block pos:start="15:26" pos:end="35:9">{<block_content pos:start="17:9" pos:end="33:18">

        <case pos:start="17:9" pos:end="17:26">case <expr pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:25">BDRV_TYPE_HD</name></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:30"><expr pos:start="19:13" pos:end="19:29"><call pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:23">term_printf</name><argument_list pos:start="19:24" pos:end="19:29">(<argument pos:start="19:25" pos:end="19:28"><expr pos:start="19:25" pos:end="19:28"><literal type="string" pos:start="19:25" pos:end="19:28">"hd"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>

        <case pos:start="23:9" pos:end="23:29">case <expr pos:start="23:14" pos:end="23:28"><name pos:start="23:14" pos:end="23:28">BDRV_TYPE_CDROM</name></expr>:</case>

            <expr_stmt pos:start="25:13" pos:end="25:33"><expr pos:start="25:13" pos:end="25:32"><call pos:start="25:13" pos:end="25:32"><name pos:start="25:13" pos:end="25:23">term_printf</name><argument_list pos:start="25:24" pos:end="25:32">(<argument pos:start="25:25" pos:end="25:31"><expr pos:start="25:25" pos:end="25:31"><literal type="string" pos:start="25:25" pos:end="25:31">"cdrom"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        <case pos:start="29:9" pos:end="29:30">case <expr pos:start="29:14" pos:end="29:29"><name pos:start="29:14" pos:end="29:29">BDRV_TYPE_FLOPPY</name></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:34"><expr pos:start="31:13" pos:end="31:33"><call pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:23">term_printf</name><argument_list pos:start="31:24" pos:end="31:33">(<argument pos:start="31:25" pos:end="31:32"><expr pos:start="31:25" pos:end="31:32"><literal type="string" pos:start="31:25" pos:end="31:32">"floppy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="37:9" pos:end="37:52"><expr pos:start="37:9" pos:end="37:51"><call pos:start="37:9" pos:end="37:51"><name pos:start="37:9" pos:end="37:19">term_printf</name><argument_list pos:start="37:20" pos:end="37:51">(<argument pos:start="37:21" pos:end="37:35"><expr pos:start="37:21" pos:end="37:35"><literal type="string" pos:start="37:21" pos:end="37:35">" removable=%d"</literal></expr></argument>, <argument pos:start="37:38" pos:end="37:50"><expr pos:start="37:38" pos:end="37:50"><name pos:start="37:38" pos:end="37:50"><name pos:start="37:38" pos:end="37:39">bs</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:50">removable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:26">(<expr pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:14">bs</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:25">removable</name></name></expr>)</condition> <block pos:start="39:28" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:50">

            <expr_stmt pos:start="41:13" pos:end="41:50"><expr pos:start="41:13" pos:end="41:49"><call pos:start="41:13" pos:end="41:49"><name pos:start="41:13" pos:end="41:23">term_printf</name><argument_list pos:start="41:24" pos:end="41:49">(<argument pos:start="41:25" pos:end="41:36"><expr pos:start="41:25" pos:end="41:36"><literal type="string" pos:start="41:25" pos:end="41:36">" locked=%d"</literal></expr></argument>, <argument pos:start="41:39" pos:end="41:48"><expr pos:start="41:39" pos:end="41:48"><name pos:start="41:39" pos:end="41:48"><name pos:start="41:39" pos:end="41:40">bs</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:48">locked</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="71:9"><if pos:start="45:9" pos:end="67:9">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:14">bs</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:19">drv</name></name></expr>)</condition> <block pos:start="45:22" pos:end="67:9">{<block_content pos:start="47:13" pos:end="65:42">

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><call pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:23">term_printf</name><argument_list pos:start="47:24" pos:end="47:33">(<argument pos:start="47:25" pos:end="47:32"><expr pos:start="47:25" pos:end="47:32"><literal type="string" pos:start="47:25" pos:end="47:32">" file="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="49:13" pos:end="49:46"><expr pos:start="49:13" pos:end="49:45"><call pos:start="49:13" pos:end="49:45"><name pos:start="49:13" pos:end="49:31">term_print_filename</name><argument_list pos:start="49:32" pos:end="49:45">(<argument pos:start="49:33" pos:end="49:44"><expr pos:start="49:33" pos:end="49:44"><name pos:start="49:33" pos:end="49:44"><name pos:start="49:33" pos:end="49:34">bs</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:44">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="57:13"><if pos:start="51:13" pos:end="57:13">if <condition pos:start="51:16" pos:end="51:44">(<expr pos:start="51:17" pos:end="51:43"><name pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:18">bs</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:32">backing_file</name><index pos:start="51:33" pos:end="51:35">[<expr pos:start="51:34" pos:end="51:34"><literal type="number" pos:start="51:34" pos:end="51:34">0</literal></expr>]</index></name> <operator pos:start="51:37" pos:end="51:38">!=</operator> <literal type="char" pos:start="51:40" pos:end="51:43">'\0'</literal></expr>)</condition> <block pos:start="51:46" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:54">

                <expr_stmt pos:start="53:17" pos:end="53:46"><expr pos:start="53:17" pos:end="53:45"><call pos:start="53:17" pos:end="53:45"><name pos:start="53:17" pos:end="53:27">term_printf</name><argument_list pos:start="53:28" pos:end="53:45">(<argument pos:start="53:29" pos:end="53:44"><expr pos:start="53:29" pos:end="53:44"><literal type="string" pos:start="53:29" pos:end="53:44">" backing_file="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="55:17" pos:end="55:54"><expr pos:start="55:17" pos:end="55:53"><call pos:start="55:17" pos:end="55:53"><name pos:start="55:17" pos:end="55:35">term_print_filename</name><argument_list pos:start="55:36" pos:end="55:53">(<argument pos:start="55:37" pos:end="55:52"><expr pos:start="55:37" pos:end="55:52"><name pos:start="55:37" pos:end="55:52"><name pos:start="55:37" pos:end="55:38">bs</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:52">backing_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:49"><expr pos:start="59:13" pos:end="59:48"><call pos:start="59:13" pos:end="59:48"><name pos:start="59:13" pos:end="59:23">term_printf</name><argument_list pos:start="59:24" pos:end="59:48">(<argument pos:start="59:25" pos:end="59:32"><expr pos:start="59:25" pos:end="59:32"><literal type="string" pos:start="59:25" pos:end="59:32">" ro=%d"</literal></expr></argument>, <argument pos:start="59:35" pos:end="59:47"><expr pos:start="59:35" pos:end="59:47"><name pos:start="59:35" pos:end="59:47"><name pos:start="59:35" pos:end="59:36">bs</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:47">read_only</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:57"><expr pos:start="61:13" pos:end="61:56"><call pos:start="61:13" pos:end="61:56"><name pos:start="61:13" pos:end="61:23">term_printf</name><argument_list pos:start="61:24" pos:end="61:56">(<argument pos:start="61:25" pos:end="61:33"><expr pos:start="61:25" pos:end="61:33"><literal type="string" pos:start="61:25" pos:end="61:33">" drv=%s"</literal></expr></argument>, <argument pos:start="61:36" pos:end="61:55"><expr pos:start="61:36" pos:end="61:55"><name pos:start="61:36" pos:end="61:55"><name pos:start="61:36" pos:end="61:37">bs</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:42">drv</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:55">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="65:42"><if pos:start="63:13" pos:end="65:42">if <condition pos:start="63:16" pos:end="63:30">(<expr pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:18">bs</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:29">encrypted</name></name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:42"><block_content pos:start="65:17" pos:end="65:42">

                <expr_stmt pos:start="65:17" pos:end="65:42"><expr pos:start="65:17" pos:end="65:41"><call pos:start="65:17" pos:end="65:41"><name pos:start="65:17" pos:end="65:27">term_printf</name><argument_list pos:start="65:28" pos:end="65:41">(<argument pos:start="65:29" pos:end="65:40"><expr pos:start="65:29" pos:end="65:40"><literal type="string" pos:start="65:29" pos:end="65:40">" encrypted"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="71:9">else <block pos:start="67:16" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:43">

            <expr_stmt pos:start="69:13" pos:end="69:43"><expr pos:start="69:13" pos:end="69:42"><call pos:start="69:13" pos:end="69:42"><name pos:start="69:13" pos:end="69:23">term_printf</name><argument_list pos:start="69:24" pos:end="69:42">(<argument pos:start="69:25" pos:end="69:41"><expr pos:start="69:25" pos:end="69:41"><literal type="string" pos:start="69:25" pos:end="69:41">" [not inserted]"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:26"><expr pos:start="73:9" pos:end="73:25"><call pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:19">term_printf</name><argument_list pos:start="73:20" pos:end="73:25">(<argument pos:start="73:21" pos:end="73:24"><expr pos:start="73:21" pos:end="73:24"><literal type="string" pos:start="73:21" pos:end="73:24">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
