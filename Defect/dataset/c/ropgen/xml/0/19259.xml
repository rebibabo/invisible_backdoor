<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19259.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">usb_hid_handle_data</name><parameter_list pos:start="1:31" pos:end="1:60">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:40">USBDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:56">USBPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:15">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">USBHIDState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">us</name> <init pos:start="5:21" pos:end="5:54">= <expr pos:start="5:23" pos:end="5:54"><call pos:start="5:23" pos:end="5:54"><name pos:start="5:23" pos:end="5:31">DO_UPCAST</name><argument_list pos:start="5:32" pos:end="5:54">(<argument pos:start="5:33" pos:end="5:43"><expr pos:start="5:33" pos:end="5:43"><name pos:start="5:33" pos:end="5:43">USBHIDState</name></expr></argument>, <argument pos:start="5:46" pos:end="5:48"><expr pos:start="5:46" pos:end="5:48"><name pos:start="5:46" pos:end="5:48">dev</name></expr></argument>, <argument pos:start="5:51" pos:end="5:53"><expr pos:start="5:51" pos:end="5:53"><name pos:start="5:51" pos:end="5:53">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">HIDState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">hs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><operator pos:start="7:20" pos:end="7:20">&amp;</operator><name pos:start="7:21" pos:end="7:27"><name pos:start="7:21" pos:end="7:22">us</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:27">hid</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:28"><name pos:start="9:13" pos:end="9:15">buf</name><index pos:start="9:16" pos:end="9:28">[<expr pos:start="9:17" pos:end="9:27"><name pos:start="9:17" pos:end="9:27"><name pos:start="9:17" pos:end="9:17">p</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:22">iov</name><operator pos:start="9:23" pos:end="9:23">.</operator><name pos:start="9:24" pos:end="9:27">size</name></name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="15:5" pos:end="65:5">switch <condition pos:start="15:12" pos:end="15:19">(<expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:13">p</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:18">pid</name></name></expr>)</condition> <block pos:start="15:21" pos:end="65:5">{<block_content pos:start="17:5" pos:end="63:14">

    <case pos:start="17:5" pos:end="17:22">case <expr pos:start="17:10" pos:end="17:21"><name pos:start="17:10" pos:end="17:21">USB_TOKEN_IN</name></expr>:</case>

        <if_stmt pos:start="19:9" pos:end="51:9"><if pos:start="19:9" pos:end="47:9">if <condition pos:start="19:12" pos:end="19:26">(<expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:13">p</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:20">devep</name></name> <operator pos:start="19:22" pos:end="19:23">==</operator> <literal type="number" pos:start="19:25" pos:end="19:25">1</literal></expr>)</condition> <block pos:start="19:28" pos:end="47:9">{<block_content pos:start="21:13" pos:end="45:36">

            <decl_stmt pos:start="21:13" pos:end="21:58"><decl pos:start="21:13" pos:end="21:57"><type pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:19">int64_t</name></type> <name pos:start="21:21" pos:end="21:27">curtime</name> <init pos:start="21:29" pos:end="21:57">= <expr pos:start="21:31" pos:end="21:57"><call pos:start="21:31" pos:end="21:57"><name pos:start="21:31" pos:end="21:47">qemu_get_clock_ns</name><argument_list pos:start="21:48" pos:end="21:57">(<argument pos:start="21:49" pos:end="21:56"><expr pos:start="21:49" pos:end="21:56"><name pos:start="21:49" pos:end="21:56">vm_clock</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="23:13" pos:end="29:13"><if pos:start="23:13" pos:end="29:13">if <condition pos:start="23:16" pos:end="25:65">(<expr pos:start="23:17" pos:end="25:64"><operator pos:start="23:17" pos:end="23:17">!</operator><name pos:start="23:18" pos:end="23:28"><name pos:start="23:18" pos:end="23:19">us</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:28">changed</name></name> <operator pos:start="23:30" pos:end="23:31">&amp;&amp;</operator>

                <operator pos:start="25:17" pos:end="25:17">(</operator><operator pos:start="25:18" pos:end="25:18">!</operator><name pos:start="25:19" pos:end="25:26"><name pos:start="25:19" pos:end="25:20">us</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:26">idle</name></name> <operator pos:start="25:28" pos:end="25:29">||</operator> <name pos:start="25:31" pos:end="25:49"><name pos:start="25:31" pos:end="25:32">us</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:49">next_idle_clock</name></name> <operator pos:start="25:51" pos:end="25:51">-</operator> <name pos:start="25:53" pos:end="25:59">curtime</name> <operator pos:start="25:61" pos:end="25:61">&gt;</operator> <literal type="number" pos:start="25:63" pos:end="25:63">0</literal><operator pos:start="25:64" pos:end="25:64">)</operator></expr>)</condition> <block pos:start="25:67" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:35">

                <return pos:start="27:17" pos:end="27:35">return <expr pos:start="27:24" pos:end="27:34"><name pos:start="27:24" pos:end="27:34">USB_RET_NAK</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:47"><expr pos:start="31:13" pos:end="31:46"><call pos:start="31:13" pos:end="31:46"><name pos:start="31:13" pos:end="31:33">usb_hid_set_next_idle</name><argument_list pos:start="31:34" pos:end="31:46">(<argument pos:start="31:35" pos:end="31:36"><expr pos:start="31:35" pos:end="31:36"><name pos:start="31:35" pos:end="31:36">us</name></expr></argument>, <argument pos:start="31:39" pos:end="31:45"><expr pos:start="31:39" pos:end="31:45"><name pos:start="31:39" pos:end="31:45">curtime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="41:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:64">(<expr pos:start="33:17" pos:end="33:63"><name pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:18">hs</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:24">kind</name></name> <operator pos:start="33:26" pos:end="33:27">==</operator> <name pos:start="33:29" pos:end="33:37">HID_MOUSE</name> <operator pos:start="33:39" pos:end="33:40">||</operator> <name pos:start="33:42" pos:end="33:49"><name pos:start="33:42" pos:end="33:43">hs</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:49">kind</name></name> <operator pos:start="33:51" pos:end="33:52">==</operator> <name pos:start="33:54" pos:end="33:63">HID_TABLET</name></expr>)</condition> <block pos:start="33:66" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:61">

                <expr_stmt pos:start="35:17" pos:end="35:61"><expr pos:start="35:17" pos:end="35:60"><name pos:start="35:17" pos:end="35:19">ret</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:60"><name pos:start="35:23" pos:end="35:38">hid_pointer_poll</name><argument_list pos:start="35:39" pos:end="35:60">(<argument pos:start="35:40" pos:end="35:41"><expr pos:start="35:40" pos:end="35:41"><name pos:start="35:40" pos:end="35:41">hs</name></expr></argument>, <argument pos:start="35:44" pos:end="35:46"><expr pos:start="35:44" pos:end="35:46"><name pos:start="35:44" pos:end="35:46">buf</name></expr></argument>, <argument pos:start="35:49" pos:end="35:59"><expr pos:start="35:49" pos:end="35:59"><name pos:start="35:49" pos:end="35:59"><name pos:start="35:49" pos:end="35:49">p</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:54">iov</name><operator pos:start="35:55" pos:end="35:55">.</operator><name pos:start="35:56" pos:end="35:59">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="37:15" pos:end="41:13">else if <condition pos:start="37:23" pos:end="37:48">(<expr pos:start="37:24" pos:end="37:47"><name pos:start="37:24" pos:end="37:31"><name pos:start="37:24" pos:end="37:25">hs</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:31">kind</name></name> <operator pos:start="37:33" pos:end="37:34">==</operator> <name pos:start="37:36" pos:end="37:47">HID_KEYBOARD</name></expr>)</condition> <block pos:start="37:50" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:62">

                <expr_stmt pos:start="39:17" pos:end="39:62"><expr pos:start="39:17" pos:end="39:61"><name pos:start="39:17" pos:end="39:19">ret</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <call pos:start="39:23" pos:end="39:61"><name pos:start="39:23" pos:end="39:39">hid_keyboard_poll</name><argument_list pos:start="39:40" pos:end="39:61">(<argument pos:start="39:41" pos:end="39:42"><expr pos:start="39:41" pos:end="39:42"><name pos:start="39:41" pos:end="39:42">hs</name></expr></argument>, <argument pos:start="39:45" pos:end="39:47"><expr pos:start="39:45" pos:end="39:47"><name pos:start="39:45" pos:end="39:47">buf</name></expr></argument>, <argument pos:start="39:50" pos:end="39:60"><expr pos:start="39:50" pos:end="39:60"><name pos:start="39:50" pos:end="39:60"><name pos:start="39:50" pos:end="39:50">p</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:55">iov</name><operator pos:start="39:56" pos:end="39:56">.</operator><name pos:start="39:57" pos:end="39:60">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:41"><expr pos:start="43:13" pos:end="43:40"><call pos:start="43:13" pos:end="43:40"><name pos:start="43:13" pos:end="43:27">usb_packet_copy</name><argument_list pos:start="43:28" pos:end="43:40">(<argument pos:start="43:29" pos:end="43:29"><expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">p</name></expr></argument>, <argument pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">buf</name></expr></argument>, <argument pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:39">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:36"><expr pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:14">us</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:23">changed</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:31"><name pos:start="45:27" pos:end="45:28">hs</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:31">n</name></name> <operator pos:start="45:33" pos:end="45:33">&gt;</operator> <literal type="number" pos:start="45:35" pos:end="45:35">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="51:9">else <block pos:start="47:16" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:22">

            <goto pos:start="49:13" pos:end="49:22">goto <name pos:start="49:18" pos:end="49:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:23">case <expr pos:start="55:10" pos:end="55:22"><name pos:start="55:10" pos:end="55:22">USB_TOKEN_OUT</name></expr>:</case>

    <default pos:start="57:5" pos:end="57:12">default:</default>

    <label pos:start="59:5" pos:end="59:9"><name pos:start="59:5" pos:end="59:8">fail</name>:</label>

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <name pos:start="61:15" pos:end="61:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="67:5" pos:end="67:15">return <expr pos:start="67:12" pos:end="67:14"><name pos:start="67:12" pos:end="67:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
