<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1262.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">bdrv_check_perm</name><parameter_list pos:start="1:27" pos:end="3:74">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:74"><decl pos:start="1:50" pos:end="1:74"><type pos:start="1:50" pos:end="1:74"><name pos:start="1:50" pos:end="1:57">uint64_t</name></type> <name pos:start="1:59" pos:end="1:74">cumulative_perms</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:59"><decl pos:start="3:28" pos:end="3:59"><type pos:start="3:28" pos:end="3:59"><name pos:start="3:28" pos:end="3:35">uint64_t</name></type> <name pos:start="3:37" pos:end="3:59">cumulative_shared_perms</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:73"><decl pos:start="3:62" pos:end="3:73"><type pos:start="3:62" pos:end="3:73"><name pos:start="3:62" pos:end="3:66">Error</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier><modifier pos:start="3:69" pos:end="3:69">*</modifier></type><name pos:start="3:70" pos:end="3:73">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:13">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">BlockDriver</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">drv</name> <init pos:start="7:22" pos:end="7:30">= <expr pos:start="7:24" pos:end="7:30"><name pos:start="7:24" pos:end="7:30"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:30">drv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">BdrvChild</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:16">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:60">/* Write permissions never work with read-only images */</comment>

    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="19:30">(<expr pos:start="17:9" pos:end="19:29"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:25">cumulative_perms</name> <operator pos:start="17:27" pos:end="17:27">&amp;</operator> <operator pos:start="17:29" pos:end="17:29">(</operator><name pos:start="17:30" pos:end="17:43">BLK_PERM_WRITE</name> <operator pos:start="17:45" pos:end="17:45">|</operator> <name pos:start="17:47" pos:end="17:70">BLK_PERM_WRITE_UNCHANGED</name><operator pos:start="17:71" pos:end="17:71">)</operator><operator pos:start="17:72" pos:end="17:72">)</operator> <operator pos:start="17:74" pos:end="17:75">&amp;&amp;</operator>

        <call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:25">bdrv_is_read_only</name><argument_list pos:start="19:26" pos:end="19:29">(<argument pos:start="19:27" pos:end="19:28"><expr pos:start="19:27" pos:end="19:28"><name pos:start="19:27" pos:end="19:28">bs</name></expr></argument>)</argument_list></call></expr>)</condition>

    <block pos:start="21:5" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:22">

        <expr_stmt pos:start="23:9" pos:end="23:52"><expr pos:start="23:9" pos:end="23:51"><call pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:18">error_setg</name><argument_list pos:start="23:19" pos:end="23:51">(<argument pos:start="23:20" pos:end="23:23"><expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">errp</name></expr></argument>, <argument pos:start="23:26" pos:end="23:50"><expr pos:start="23:26" pos:end="23:50"><literal type="string" pos:start="23:26" pos:end="23:50">"Block node is read-only"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:22">return <expr pos:start="25:16" pos:end="25:21"><operator pos:start="25:16" pos:end="25:16">-</operator><name pos:start="25:17" pos:end="25:21">EPERM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:25">/* Check this node */</comment>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:13">(<expr pos:start="33:9" pos:end="33:12"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:12">drv</name></expr>)</condition> <block pos:start="33:15" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:29">(<expr pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:11">drv</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:28">bdrv_check_perm</name></name></expr>)</condition> <block pos:start="41:31" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:67">

        <return pos:start="43:9" pos:end="45:67">return <expr pos:start="43:16" pos:end="45:66"><call pos:start="43:16" pos:end="45:66"><name pos:start="43:16" pos:end="43:35"><name pos:start="43:16" pos:end="43:18">drv</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:35">bdrv_check_perm</name></name><argument_list pos:start="43:36" pos:end="45:66">(<argument pos:start="43:37" pos:end="43:38"><expr pos:start="43:37" pos:end="43:38"><name pos:start="43:37" pos:end="43:38">bs</name></expr></argument>, <argument pos:start="43:41" pos:end="43:56"><expr pos:start="43:41" pos:end="43:56"><name pos:start="43:41" pos:end="43:56">cumulative_perms</name></expr></argument>,

                                    <argument pos:start="45:37" pos:end="45:59"><expr pos:start="45:37" pos:end="45:59"><name pos:start="45:37" pos:end="45:59">cumulative_shared_perms</name></expr></argument>, <argument pos:start="45:62" pos:end="45:65"><expr pos:start="45:62" pos:end="45:65"><name pos:start="45:62" pos:end="45:65">errp</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:70">/* Drivers that never have children can omit .bdrv_child_perm() */</comment>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:30">(<expr pos:start="53:9" pos:end="53:29"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:29"><name pos:start="53:10" pos:end="53:12">drv</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:29">bdrv_child_perm</name></name></expr>)</condition> <block pos:start="53:32" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:17">

        <expr_stmt pos:start="55:9" pos:end="55:43"><expr pos:start="55:9" pos:end="55:42"><call pos:start="55:9" pos:end="55:42"><name pos:start="55:9" pos:end="55:14">assert</name><argument_list pos:start="55:15" pos:end="55:42">(<argument pos:start="55:16" pos:end="55:41"><expr pos:start="55:16" pos:end="55:41"><call pos:start="55:16" pos:end="55:41"><name pos:start="55:16" pos:end="55:26">QLIST_EMPTY</name><argument_list pos:start="55:27" pos:end="55:41">(<argument pos:start="55:28" pos:end="55:40"><expr pos:start="55:28" pos:end="55:40"><operator pos:start="55:28" pos:end="55:28">&amp;</operator><name pos:start="55:29" pos:end="55:40"><name pos:start="55:29" pos:end="55:30">bs</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:40">children</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:28">/* Check all children */</comment>

    <macro pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:17">QLIST_FOREACH</name><argument_list pos:start="65:18" pos:end="65:41">(<argument pos:start="65:19" pos:end="65:19">c</argument>, <argument pos:start="65:22" pos:end="65:34">&amp;bs-&gt;children</argument>, <argument pos:start="65:37" pos:end="65:40">next</argument>)</argument_list></macro> <block pos:start="65:43" pos:end="83:5">{<block_content pos:start="67:9" pos:end="81:9">

        <decl_stmt pos:start="67:9" pos:end="67:38"><decl pos:start="67:9" pos:end="67:25"><type pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:16">uint64_t</name></type> <name pos:start="67:18" pos:end="67:25">cur_perm</name></decl>, <decl pos:start="67:28" pos:end="67:37"><type ref="prev" pos:start="67:9" pos:end="67:16"/><name pos:start="67:28" pos:end="67:37">cur_shared</name></decl>;</decl_stmt>

        <expr_stmt pos:start="69:9" pos:end="73:53"><expr pos:start="69:9" pos:end="73:52"><call pos:start="69:9" pos:end="73:52"><name pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:11">drv</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:28">bdrv_child_perm</name></name><argument_list pos:start="69:29" pos:end="73:52">(<argument pos:start="69:30" pos:end="69:31"><expr pos:start="69:30" pos:end="69:31"><name pos:start="69:30" pos:end="69:31">bs</name></expr></argument>, <argument pos:start="69:34" pos:end="69:34"><expr pos:start="69:34" pos:end="69:34"><name pos:start="69:34" pos:end="69:34">c</name></expr></argument>, <argument pos:start="69:37" pos:end="69:43"><expr pos:start="69:37" pos:end="69:43"><name pos:start="69:37" pos:end="69:43"><name pos:start="69:37" pos:end="69:37">c</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:43">role</name></name></expr></argument>,

                             <argument pos:start="71:30" pos:end="71:45"><expr pos:start="71:30" pos:end="71:45"><name pos:start="71:30" pos:end="71:45">cumulative_perms</name></expr></argument>, <argument pos:start="71:48" pos:end="71:70"><expr pos:start="71:48" pos:end="71:70"><name pos:start="71:48" pos:end="71:70">cumulative_shared_perms</name></expr></argument>,

                             <argument pos:start="73:30" pos:end="73:38"><expr pos:start="73:30" pos:end="73:38"><operator pos:start="73:30" pos:end="73:30">&amp;</operator><name pos:start="73:31" pos:end="73:38">cur_perm</name></expr></argument>, <argument pos:start="73:41" pos:end="73:51"><expr pos:start="73:41" pos:end="73:51"><operator pos:start="73:41" pos:end="73:41">&amp;</operator><name pos:start="73:42" pos:end="73:51">cur_shared</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:67"><expr pos:start="75:9" pos:end="75:66"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:66"><name pos:start="75:15" pos:end="75:35">bdrv_child_check_perm</name><argument_list pos:start="75:36" pos:end="75:66">(<argument pos:start="75:37" pos:end="75:37"><expr pos:start="75:37" pos:end="75:37"><name pos:start="75:37" pos:end="75:37">c</name></expr></argument>, <argument pos:start="75:40" pos:end="75:47"><expr pos:start="75:40" pos:end="75:47"><name pos:start="75:40" pos:end="75:47">cur_perm</name></expr></argument>, <argument pos:start="75:50" pos:end="75:59"><expr pos:start="75:50" pos:end="75:59"><name pos:start="75:50" pos:end="75:59">cur_shared</name></expr></argument>, <argument pos:start="75:62" pos:end="75:65"><expr pos:start="75:62" pos:end="75:65"><name pos:start="75:62" pos:end="75:65">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:20">(<expr pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">&lt;</operator> <literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>)</condition> <block pos:start="77:22" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:23">

            <return pos:start="79:13" pos:end="79:23">return <expr pos:start="79:20" pos:end="79:22"><name pos:start="79:20" pos:end="79:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
