<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17574.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_init</name><parameter_list pos:start="1:23" pos:end="1:45">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="203:1">{<block_content pos:start="5:5" pos:end="201:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">HYuvContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">width</name></decl>, <decl pos:start="7:16" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:21">height</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">avctx</name></name><operator pos:start="11:13" pos:end="11:13">=</operator> <name pos:start="11:15" pos:end="11:19">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:12">flags</name></name><operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:26"><name pos:start="13:15" pos:end="13:19">avctx</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:26">flags</name></name></expr>;</expr_stmt>

        

    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><call pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:16">dsputil_init</name><argument_list pos:start="17:17" pos:end="17:32">(<argument pos:start="17:18" pos:end="17:24"><expr pos:start="17:18" pos:end="17:24"><operator pos:start="17:18" pos:end="17:18">&amp;</operator><name pos:start="17:19" pos:end="17:24"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:24">dsp</name></name></expr></argument>, <argument pos:start="17:27" pos:end="17:31"><expr pos:start="17:27" pos:end="17:31"><name pos:start="17:27" pos:end="17:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><call pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:10">memset</name><argument_list pos:start="19:11" pos:end="19:36">(<argument pos:start="19:12" pos:end="19:17"><expr pos:start="19:12" pos:end="19:17"><name pos:start="19:12" pos:end="19:17"><name pos:start="19:12" pos:end="19:12">s</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:17">vlc</name></name></expr></argument>, <argument pos:start="19:20" pos:end="19:20"><expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr></argument>, <argument pos:start="19:23" pos:end="19:35"><expr pos:start="19:23" pos:end="19:35"><literal type="number" pos:start="19:23" pos:end="19:23">3</literal><operator pos:start="19:24" pos:end="19:24">*</operator><sizeof pos:start="19:25" pos:end="19:35">sizeof<argument_list pos:start="19:31" pos:end="19:35">(<argument pos:start="19:32" pos:end="19:34"><expr pos:start="19:32" pos:end="19:34"><name pos:start="19:32" pos:end="19:34">VLC</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:9">width</name><operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:19"><name pos:start="23:12" pos:end="23:12">s</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:19">width</name></name><operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:33"><name pos:start="23:22" pos:end="23:26">avctx</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:33">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:10">height</name><operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:21">height</name></name><operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:36"><name pos:start="25:24" pos:end="25:28">avctx</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:36">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:9">avctx</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:22">coded_frame</name></name><operator pos:start="27:23" pos:end="27:23">=</operator> <operator pos:start="27:25" pos:end="27:25">&amp;</operator><name pos:start="27:26" pos:end="27:35"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:35">picture</name></name></expr>;</expr_stmt>



<expr_stmt pos:start="31:1" pos:end="31:11"><expr pos:start="31:1" pos:end="31:10"><name pos:start="31:1" pos:end="31:8"><name pos:start="31:1" pos:end="31:1">s</name><operator pos:start="31:2" pos:end="31:3">-&gt;</operator><name pos:start="31:4" pos:end="31:8">bgr32</name></name><operator pos:start="31:9" pos:end="31:9">=</operator><literal type="number" pos:start="31:10" pos:end="31:10">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><call pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:10">assert</name><argument_list pos:start="33:11" pos:end="33:27">(<argument pos:start="33:12" pos:end="33:26"><expr pos:start="33:12" pos:end="33:26"><name pos:start="33:12" pos:end="33:16">width</name> <operator pos:start="33:18" pos:end="33:19">&amp;&amp;</operator> <name pos:start="33:21" pos:end="33:26">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="35:1" pos:end="35:22">//if(avctx-&gt;extradata)</comment>

<comment type="line" pos:start="37:1" pos:end="37:101">//  printf("extradata:%X, extradata_size:%d\n", *(uint32_t*)avctx-&gt;extradata, avctx-&gt;extradata_size);</comment>

    <if_stmt pos:start="39:5" pos:end="51:21"><if pos:start="39:5" pos:end="49:5">if<condition pos:start="39:7" pos:end="39:29">(<expr pos:start="39:8" pos:end="39:28"><name pos:start="39:8" pos:end="39:28"><name pos:start="39:8" pos:end="39:12">avctx</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:28">extradata_size</name></name></expr>)</condition><block pos:start="39:30" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:25">

        <if_stmt pos:start="41:9" pos:end="47:25"><if pos:start="41:9" pos:end="43:25">if<condition pos:start="41:11" pos:end="41:70">(<expr pos:start="41:12" pos:end="41:69"><operator pos:start="41:12" pos:end="41:12">(</operator><name pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:17">avctx</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:34">bits_per_sample</name></name><operator pos:start="41:35" pos:end="41:35">&amp;</operator><literal type="number" pos:start="41:36" pos:end="41:36">7</literal><operator pos:start="41:37" pos:end="41:37">)</operator> <operator pos:start="41:39" pos:end="41:40">&amp;&amp;</operator> <name pos:start="41:42" pos:end="41:63"><name pos:start="41:42" pos:end="41:46">avctx</name><operator pos:start="41:47" pos:end="41:48">-&gt;</operator><name pos:start="41:49" pos:end="41:63">bits_per_sample</name></name> <operator pos:start="41:65" pos:end="41:66">!=</operator> <literal type="number" pos:start="41:68" pos:end="41:69">12</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:25"><block_content pos:start="43:13" pos:end="43:25">

            <expr_stmt pos:start="43:13" pos:end="43:25"><expr pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">version</name></name><operator pos:start="43:23" pos:end="43:23">=</operator><literal type="number" pos:start="43:24" pos:end="43:24">1</literal></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="43:27" pos:end="43:56">// do such files exist at all?</comment>

        <else pos:start="45:9" pos:end="47:25">else<block type="pseudo" pos:start="47:13" pos:end="47:25"><block_content pos:start="47:13" pos:end="47:25">

            <expr_stmt pos:start="47:13" pos:end="47:25"><expr pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">version</name></name><operator pos:start="47:23" pos:end="47:23">=</operator><literal type="number" pos:start="47:24" pos:end="47:24">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if><else pos:start="49:6" pos:end="51:21">else<block type="pseudo" pos:start="51:9" pos:end="51:21"><block_content pos:start="51:9" pos:end="51:21">

        <expr_stmt pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:18">version</name></name><operator pos:start="51:19" pos:end="51:19">=</operator><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    

    <if_stmt pos:start="55:5" pos:end="137:5"><if pos:start="55:5" pos:end="81:5">if<condition pos:start="55:7" pos:end="55:21">(<expr pos:start="55:8" pos:end="55:20"><name pos:start="55:8" pos:end="55:17"><name pos:start="55:8" pos:end="55:8">s</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:17">version</name></name><operator pos:start="55:18" pos:end="55:19">==</operator><literal type="number" pos:start="55:20" pos:end="55:20">2</literal></expr>)</condition><block pos:start="55:22" pos:end="81:5">{<block_content pos:start="57:9" pos:end="79:22">

        <decl_stmt pos:start="57:9" pos:end="57:19"><decl pos:start="57:9" pos:end="57:18"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:18">method</name></decl>;</decl_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:48"><expr pos:start="61:9" pos:end="61:47"><name pos:start="61:9" pos:end="61:14">method</name><operator pos:start="61:15" pos:end="61:15">=</operator> <operator pos:start="61:17" pos:end="61:17">(</operator><operator pos:start="61:18" pos:end="61:18">(</operator><name pos:start="61:19" pos:end="61:25">uint8_t</name><operator pos:start="61:26" pos:end="61:26">*</operator><operator pos:start="61:27" pos:end="61:27">)</operator><name pos:start="61:28" pos:end="61:43"><name pos:start="61:28" pos:end="61:32">avctx</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:43">extradata</name></name><operator pos:start="61:44" pos:end="61:44">)</operator><index pos:start="61:45" pos:end="61:47">[<expr pos:start="61:46" pos:end="61:46"><literal type="number" pos:start="61:46" pos:end="61:46">0</literal></expr>]</index></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:42"><expr pos:start="63:9" pos:end="63:41"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:22">decorrelate</name></name><operator pos:start="63:23" pos:end="63:23">=</operator> <ternary pos:start="63:25" pos:end="63:41"><condition pos:start="63:25" pos:end="63:35"><expr pos:start="63:25" pos:end="63:33"><name pos:start="63:25" pos:end="63:30">method</name><operator pos:start="63:31" pos:end="63:31">&amp;</operator><literal type="number" pos:start="63:32" pos:end="63:33">64</literal></expr> ?</condition><then pos:start="63:37" pos:end="63:37"> <expr pos:start="63:37" pos:end="63:37"><literal type="number" pos:start="63:37" pos:end="63:37">1</literal></expr> </then><else pos:start="63:39" pos:end="63:41">: <expr pos:start="63:41" pos:end="63:41"><literal type="number" pos:start="63:41" pos:end="63:41">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:32"><expr pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:20">predictor</name></name><operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:28">method</name><operator pos:start="65:29" pos:end="65:29">&amp;</operator><literal type="number" pos:start="65:30" pos:end="65:31">63</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:58"><expr pos:start="67:9" pos:end="67:57"><name pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:24">bitstream_bpp</name></name><operator pos:start="67:25" pos:end="67:25">=</operator> <operator pos:start="67:27" pos:end="67:27">(</operator><operator pos:start="67:28" pos:end="67:28">(</operator><name pos:start="67:29" pos:end="67:35">uint8_t</name><operator pos:start="67:36" pos:end="67:36">*</operator><operator pos:start="67:37" pos:end="67:37">)</operator><name pos:start="67:38" pos:end="67:53"><name pos:start="67:38" pos:end="67:42">avctx</name><operator pos:start="67:43" pos:end="67:44">-&gt;</operator><name pos:start="67:45" pos:end="67:53">extradata</name></name><operator pos:start="67:54" pos:end="67:54">)</operator><index pos:start="67:55" pos:end="67:57">[<expr pos:start="67:56" pos:end="67:56"><literal type="number" pos:start="67:56" pos:end="67:56">1</literal></expr>]</index></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:56"><if pos:start="69:9" pos:end="71:56">if<condition pos:start="69:11" pos:end="69:31">(<expr pos:start="69:12" pos:end="69:30"><name pos:start="69:12" pos:end="69:27"><name pos:start="69:12" pos:end="69:12">s</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:27">bitstream_bpp</name></name><operator pos:start="69:28" pos:end="69:29">==</operator><literal type="number" pos:start="69:30" pos:end="69:30">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:56"><block_content pos:start="71:13" pos:end="71:56"> 

            <expr_stmt pos:start="71:13" pos:end="71:56"><expr pos:start="71:13" pos:end="71:55"><name pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:28">bitstream_bpp</name></name><operator pos:start="71:29" pos:end="71:29">=</operator> <name pos:start="71:31" pos:end="71:52"><name pos:start="71:31" pos:end="71:35">avctx</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:52">bits_per_sample</name></name><operator pos:start="71:53" pos:end="71:53">&amp;</operator><operator pos:start="71:54" pos:end="71:54">~</operator><literal type="number" pos:start="71:55" pos:end="71:55">7</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:67"><expr pos:start="73:9" pos:end="73:66"><name pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:18">context</name></name><operator pos:start="73:19" pos:end="73:19">=</operator> <ternary pos:start="73:21" pos:end="73:66"><condition pos:start="73:21" pos:end="73:60"><expr pos:start="73:21" pos:end="73:58"><operator pos:start="73:21" pos:end="73:21">(</operator><operator pos:start="73:22" pos:end="73:22">(</operator><name pos:start="73:23" pos:end="73:29">uint8_t</name><operator pos:start="73:30" pos:end="73:30">*</operator><operator pos:start="73:31" pos:end="73:31">)</operator><name pos:start="73:32" pos:end="73:47"><name pos:start="73:32" pos:end="73:36">avctx</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:47">extradata</name></name><operator pos:start="73:48" pos:end="73:48">)</operator><index pos:start="73:49" pos:end="73:51">[<expr pos:start="73:50" pos:end="73:50"><literal type="number" pos:start="73:50" pos:end="73:50">2</literal></expr>]</index> <operator pos:start="73:53" pos:end="73:53">&amp;</operator> <literal type="number" pos:start="73:55" pos:end="73:58">0x40</literal></expr> ?</condition><then pos:start="73:62" pos:end="73:62"> <expr pos:start="73:62" pos:end="73:62"><literal type="number" pos:start="73:62" pos:end="73:62">1</literal></expr> </then><else pos:start="73:64" pos:end="73:66">: <expr pos:start="73:66" pos:end="73:66"><literal type="number" pos:start="73:66" pos:end="73:66">0</literal></expr></else></ternary></expr>;</expr_stmt>

            

        <if_stmt pos:start="77:9" pos:end="79:22"><if pos:start="77:9" pos:end="79:22">if<condition pos:start="77:11" pos:end="77:93">(<expr pos:start="77:12" pos:end="77:92"><call pos:start="77:12" pos:end="77:88"><name pos:start="77:12" pos:end="77:30">read_huffman_tables</name><argument_list pos:start="77:31" pos:end="77:88">(<argument pos:start="77:32" pos:end="77:32"><expr pos:start="77:32" pos:end="77:32"><name pos:start="77:32" pos:end="77:32">s</name></expr></argument>, <argument pos:start="77:35" pos:end="77:64"><expr pos:start="77:35" pos:end="77:64"><operator pos:start="77:35" pos:end="77:35">(</operator><operator pos:start="77:36" pos:end="77:36">(</operator><name pos:start="77:37" pos:end="77:43">uint8_t</name><operator pos:start="77:44" pos:end="77:44">*</operator><operator pos:start="77:45" pos:end="77:45">)</operator><name pos:start="77:46" pos:end="77:61"><name pos:start="77:46" pos:end="77:50">avctx</name><operator pos:start="77:51" pos:end="77:52">-&gt;</operator><name pos:start="77:53" pos:end="77:61">extradata</name></name><operator pos:start="77:62" pos:end="77:62">)</operator><operator pos:start="77:63" pos:end="77:63">+</operator><literal type="number" pos:start="77:64" pos:end="77:64">4</literal></expr></argument>, <argument pos:start="77:67" pos:end="77:87"><expr pos:start="77:67" pos:end="77:87"><name pos:start="77:67" pos:end="77:87"><name pos:start="77:67" pos:end="77:71">avctx</name><operator pos:start="77:72" pos:end="77:73">-&gt;</operator><name pos:start="77:74" pos:end="77:87">extradata_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="77:90" pos:end="77:90">&lt;</operator> <literal type="number" pos:start="77:92" pos:end="77:92">0</literal></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:22"><block_content pos:start="79:13" pos:end="79:22">

            <return pos:start="79:13" pos:end="79:22">return <expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if><else pos:start="81:6" pos:end="137:5">else<block pos:start="81:10" pos:end="137:5">{<block_content pos:start="83:9" pos:end="135:22">

        <switch pos:start="83:9" pos:end="125:9">switch<condition pos:start="83:15" pos:end="83:40">(<expr pos:start="83:16" pos:end="83:39"><name pos:start="83:16" pos:end="83:37"><name pos:start="83:16" pos:end="83:20">avctx</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:37">bits_per_sample</name></name><operator pos:start="83:38" pos:end="83:38">&amp;</operator><literal type="number" pos:start="83:39" pos:end="83:39">7</literal></expr>)</condition><block pos:start="83:41" pos:end="125:9">{<block_content pos:start="85:9" pos:end="123:18">

        <case pos:start="85:9" pos:end="85:15">case <expr pos:start="85:14" pos:end="85:14"><literal type="number" pos:start="85:14" pos:end="85:14">1</literal></expr>:</case>

            <expr_stmt pos:start="87:13" pos:end="87:31"><expr pos:start="87:13" pos:end="87:30"><name pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:24">predictor</name></name><operator pos:start="87:25" pos:end="87:25">=</operator> <name pos:start="87:27" pos:end="87:30">LEFT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:30"><expr pos:start="89:13" pos:end="89:29"><name pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:26">decorrelate</name></name><operator pos:start="89:27" pos:end="89:27">=</operator> <literal type="number" pos:start="89:29" pos:end="89:29">0</literal></expr>;</expr_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:15">case <expr pos:start="93:14" pos:end="93:14"><literal type="number" pos:start="93:14" pos:end="93:14">2</literal></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:31"><expr pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:24">predictor</name></name><operator pos:start="95:25" pos:end="95:25">=</operator> <name pos:start="95:27" pos:end="95:30">LEFT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:30"><expr pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:26"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:26">decorrelate</name></name><operator pos:start="97:27" pos:end="97:27">=</operator> <literal type="number" pos:start="97:29" pos:end="97:29">1</literal></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <case pos:start="101:9" pos:end="101:15">case <expr pos:start="101:14" pos:end="101:14"><literal type="number" pos:start="101:14" pos:end="101:14">3</literal></expr>:</case>

            <expr_stmt pos:start="103:13" pos:end="103:32"><expr pos:start="103:13" pos:end="103:31"><name pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:24">predictor</name></name><operator pos:start="103:25" pos:end="103:25">=</operator> <name pos:start="103:27" pos:end="103:31">PLANE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:57"><expr pos:start="105:13" pos:end="105:56"><name pos:start="105:13" pos:end="105:26"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:26">decorrelate</name></name><operator pos:start="105:27" pos:end="105:27">=</operator> <name pos:start="105:29" pos:end="105:50"><name pos:start="105:29" pos:end="105:33">avctx</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:50">bits_per_sample</name></name> <operator pos:start="105:52" pos:end="105:53">&gt;=</operator> <literal type="number" pos:start="105:55" pos:end="105:56">24</literal></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:15">case <expr pos:start="109:14" pos:end="109:14"><literal type="number" pos:start="109:14" pos:end="109:14">4</literal></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:33"><expr pos:start="111:13" pos:end="111:32"><name pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:24">predictor</name></name><operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:32">MEDIAN</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:30"><expr pos:start="113:13" pos:end="113:29"><name pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:26">decorrelate</name></name><operator pos:start="113:27" pos:end="113:27">=</operator> <literal type="number" pos:start="113:29" pos:end="113:29">0</literal></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <default pos:start="117:9" pos:end="117:16">default:</default>

            <expr_stmt pos:start="119:13" pos:end="119:31"><expr pos:start="119:13" pos:end="119:30"><name pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:24">predictor</name></name><operator pos:start="119:25" pos:end="119:25">=</operator> <name pos:start="119:27" pos:end="119:30">LEFT</name></expr>;</expr_stmt> <comment type="line" pos:start="119:33" pos:end="119:37">//OLD</comment>

            <expr_stmt pos:start="121:13" pos:end="121:30"><expr pos:start="121:13" pos:end="121:29"><name pos:start="121:13" pos:end="121:26"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:26">decorrelate</name></name><operator pos:start="121:27" pos:end="121:27">=</operator> <literal type="number" pos:start="121:29" pos:end="121:29">0</literal></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="127:9" pos:end="127:54"><expr pos:start="127:9" pos:end="127:53"><name pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:24">bitstream_bpp</name></name><operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:48"><name pos:start="127:27" pos:end="127:31">avctx</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:48">bits_per_sample</name></name> <operator pos:start="127:50" pos:end="127:50">&amp;</operator> <operator pos:start="127:52" pos:end="127:52">~</operator><literal type="number" pos:start="127:53" pos:end="127:53">7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:22"><expr pos:start="129:9" pos:end="129:21"><name pos:start="129:9" pos:end="129:18"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:18">context</name></name><operator pos:start="129:19" pos:end="129:19">=</operator> <literal type="number" pos:start="129:21" pos:end="129:21">0</literal></expr>;</expr_stmt>

        

        <if_stmt pos:start="133:9" pos:end="135:22"><if pos:start="133:9" pos:end="135:22">if<condition pos:start="133:11" pos:end="133:42">(<expr pos:start="133:12" pos:end="133:41"><call pos:start="133:12" pos:end="133:37"><name pos:start="133:12" pos:end="133:34">read_old_huffman_tables</name><argument_list pos:start="133:35" pos:end="133:37">(<argument pos:start="133:36" pos:end="133:36"><expr pos:start="133:36" pos:end="133:36"><name pos:start="133:36" pos:end="133:36">s</name></expr></argument>)</argument_list></call> <operator pos:start="133:39" pos:end="133:39">&lt;</operator> <literal type="number" pos:start="133:41" pos:end="133:41">0</literal></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:22"><block_content pos:start="135:13" pos:end="135:22">

            <return pos:start="135:13" pos:end="135:22">return <expr pos:start="135:20" pos:end="135:21"><operator pos:start="135:20" pos:end="135:20">-</operator><literal type="number" pos:start="135:21" pos:end="135:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    

    <if_stmt pos:start="141:5" pos:end="147:36"><if pos:start="141:5" pos:end="143:70">if<condition pos:start="141:7" pos:end="141:46">(<expr pos:start="141:8" pos:end="141:45"><operator pos:start="141:8" pos:end="141:8">(</operator><operator pos:start="141:9" pos:end="141:9">(</operator><name pos:start="141:10" pos:end="141:16">uint8_t</name><operator pos:start="141:17" pos:end="141:17">*</operator><operator pos:start="141:18" pos:end="141:18">)</operator><name pos:start="141:19" pos:end="141:34"><name pos:start="141:19" pos:end="141:23">avctx</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:34">extradata</name></name><operator pos:start="141:35" pos:end="141:35">)</operator><index pos:start="141:36" pos:end="141:38">[<expr pos:start="141:37" pos:end="141:37"><literal type="number" pos:start="141:37" pos:end="141:37">2</literal></expr>]</index> <operator pos:start="141:40" pos:end="141:40">&amp;</operator> <literal type="number" pos:start="141:42" pos:end="141:45">0x20</literal></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:70"><block_content pos:start="143:9" pos:end="143:70">

	<expr_stmt pos:start="143:9" pos:end="143:70"><expr pos:start="143:9" pos:end="143:69"><name pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:21">interlaced</name></name><operator pos:start="143:22" pos:end="143:22">=</operator> <ternary pos:start="143:24" pos:end="143:69"><condition pos:start="143:24" pos:end="143:63"><expr pos:start="143:24" pos:end="143:61"><operator pos:start="143:24" pos:end="143:24">(</operator><operator pos:start="143:25" pos:end="143:25">(</operator><name pos:start="143:26" pos:end="143:32">uint8_t</name><operator pos:start="143:33" pos:end="143:33">*</operator><operator pos:start="143:34" pos:end="143:34">)</operator><name pos:start="143:35" pos:end="143:50"><name pos:start="143:35" pos:end="143:39">avctx</name><operator pos:start="143:40" pos:end="143:41">-&gt;</operator><name pos:start="143:42" pos:end="143:50">extradata</name></name><operator pos:start="143:51" pos:end="143:51">)</operator><index pos:start="143:52" pos:end="143:54">[<expr pos:start="143:53" pos:end="143:53"><literal type="number" pos:start="143:53" pos:end="143:53">2</literal></expr>]</index> <operator pos:start="143:56" pos:end="143:56">&amp;</operator> <literal type="number" pos:start="143:58" pos:end="143:61">0x10</literal></expr> ?</condition><then pos:start="143:65" pos:end="143:65"> <expr pos:start="143:65" pos:end="143:65"><literal type="number" pos:start="143:65" pos:end="143:65">1</literal></expr> </then><else pos:start="143:67" pos:end="143:69">: <expr pos:start="143:69" pos:end="143:69"><literal type="number" pos:start="143:69" pos:end="143:69">0</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="145:5" pos:end="147:36">else<block type="pseudo" pos:start="147:9" pos:end="147:36"><block_content pos:start="147:9" pos:end="147:36">

	<expr_stmt pos:start="147:9" pos:end="147:36"><expr pos:start="147:9" pos:end="147:35"><name pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:21">interlaced</name></name><operator pos:start="147:22" pos:end="147:22">=</operator> <name pos:start="147:24" pos:end="147:29">height</name> <operator pos:start="147:31" pos:end="147:31">&gt;</operator> <literal type="number" pos:start="147:33" pos:end="147:35">288</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    

    <switch pos:start="151:5" pos:end="193:5">switch<condition pos:start="151:11" pos:end="151:28">(<expr pos:start="151:12" pos:end="151:27"><name pos:start="151:12" pos:end="151:27"><name pos:start="151:12" pos:end="151:12">s</name><operator pos:start="151:13" pos:end="151:14">-&gt;</operator><name pos:start="151:15" pos:end="151:27">bitstream_bpp</name></name></expr>)</condition><block pos:start="151:29" pos:end="193:5">{<block_content pos:start="153:5" pos:end="191:18">

    <case pos:start="153:5" pos:end="153:12">case <expr pos:start="153:10" pos:end="153:11"><literal type="number" pos:start="153:10" pos:end="153:11">12</literal></expr>:</case>

        <expr_stmt pos:start="155:9" pos:end="155:41"><expr pos:start="155:9" pos:end="155:40"><name pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:13">avctx</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:22">pix_fmt</name></name> <operator pos:start="155:24" pos:end="155:24">=</operator> <name pos:start="155:26" pos:end="155:40">PIX_FMT_YUV420P</name></expr>;</expr_stmt>

        <break pos:start="157:9" pos:end="157:14">break;</break>

    <case pos:start="159:5" pos:end="159:12">case <expr pos:start="159:10" pos:end="159:11"><literal type="number" pos:start="159:10" pos:end="159:11">16</literal></expr>:</case>

        <if_stmt pos:start="161:9" pos:end="169:9"><if pos:start="161:9" pos:end="165:9">if<condition pos:start="161:11" pos:end="161:19">(<expr pos:start="161:12" pos:end="161:18"><name pos:start="161:12" pos:end="161:18"><name pos:start="161:12" pos:end="161:12">s</name><operator pos:start="161:13" pos:end="161:14">-&gt;</operator><name pos:start="161:15" pos:end="161:18">yuy2</name></name></expr>)</condition><block pos:start="161:20" pos:end="165:9">{<block_content pos:start="163:13" pos:end="163:44">

            <expr_stmt pos:start="163:13" pos:end="163:44"><expr pos:start="163:13" pos:end="163:43"><name pos:start="163:13" pos:end="163:26"><name pos:start="163:13" pos:end="163:17">avctx</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:26">pix_fmt</name></name> <operator pos:start="163:28" pos:end="163:28">=</operator> <name pos:start="163:30" pos:end="163:43">PIX_FMT_YUV422</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="165:10" pos:end="169:9">else<block pos:start="165:14" pos:end="169:9">{<block_content pos:start="167:13" pos:end="167:45">

            <expr_stmt pos:start="167:13" pos:end="167:45"><expr pos:start="167:13" pos:end="167:44"><name pos:start="167:13" pos:end="167:26"><name pos:start="167:13" pos:end="167:17">avctx</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:26">pix_fmt</name></name> <operator pos:start="167:28" pos:end="167:28">=</operator> <name pos:start="167:30" pos:end="167:44">PIX_FMT_YUV422P</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="171:9" pos:end="171:14">break;</break>

    <case pos:start="173:5" pos:end="173:12">case <expr pos:start="173:10" pos:end="173:11"><literal type="number" pos:start="173:10" pos:end="173:11">24</literal></expr>:</case>

    <case pos:start="175:5" pos:end="175:12">case <expr pos:start="175:10" pos:end="175:11"><literal type="number" pos:start="175:10" pos:end="175:11">32</literal></expr>:</case>

        <if_stmt pos:start="177:9" pos:end="185:9"><if pos:start="177:9" pos:end="181:9">if<condition pos:start="177:11" pos:end="177:20">(<expr pos:start="177:12" pos:end="177:19"><name pos:start="177:12" pos:end="177:19"><name pos:start="177:12" pos:end="177:12">s</name><operator pos:start="177:13" pos:end="177:14">-&gt;</operator><name pos:start="177:15" pos:end="177:19">bgr32</name></name></expr>)</condition><block pos:start="177:21" pos:end="181:9">{<block_content pos:start="179:13" pos:end="179:44">

            <expr_stmt pos:start="179:13" pos:end="179:44"><expr pos:start="179:13" pos:end="179:43"><name pos:start="179:13" pos:end="179:26"><name pos:start="179:13" pos:end="179:17">avctx</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:26">pix_fmt</name></name> <operator pos:start="179:28" pos:end="179:28">=</operator> <name pos:start="179:30" pos:end="179:43">PIX_FMT_RGBA32</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="181:10" pos:end="185:9">else<block pos:start="181:14" pos:end="185:9">{<block_content pos:start="183:13" pos:end="183:43">

            <expr_stmt pos:start="183:13" pos:end="183:43"><expr pos:start="183:13" pos:end="183:42"><name pos:start="183:13" pos:end="183:26"><name pos:start="183:13" pos:end="183:17">avctx</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:26">pix_fmt</name></name> <operator pos:start="183:28" pos:end="183:28">=</operator> <name pos:start="183:30" pos:end="183:42">PIX_FMT_BGR24</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="187:9" pos:end="187:14">break;</break>

    <default pos:start="189:5" pos:end="189:12">default:</default>

        <expr_stmt pos:start="191:9" pos:end="191:18"><expr pos:start="191:9" pos:end="191:17"><call pos:start="191:9" pos:end="191:17"><name pos:start="191:9" pos:end="191:14">assert</name><argument_list pos:start="191:15" pos:end="191:17">(<argument pos:start="191:16" pos:end="191:16"><expr pos:start="191:16" pos:end="191:16"><literal type="number" pos:start="191:16" pos:end="191:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    

<comment type="line" pos:start="197:1" pos:end="197:138">//    av_log(NULL, AV_LOG_DEBUG, "pred:%d bpp:%d hbpp:%d il:%d\n", s-&gt;predictor, s-&gt;bitstream_bpp, avctx-&gt;bits_per_sample, s-&gt;interlaced);</comment>



    <return pos:start="201:5" pos:end="201:13">return <expr pos:start="201:12" pos:end="201:12"><literal type="number" pos:start="201:12" pos:end="201:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
