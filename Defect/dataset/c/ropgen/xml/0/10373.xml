<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10373.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vty_receive</name><parameter_list pos:start="1:24" pos:end="1:67">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:56"><decl pos:start="1:39" pos:end="1:56"><type pos:start="1:39" pos:end="1:56"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">buf</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:66"><decl pos:start="1:59" pos:end="1:66"><type pos:start="1:59" pos:end="1:66"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:66">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:56"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">VIOsPAPRVTYDevice</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">dev</name> <init pos:start="5:28" pos:end="5:56">= <expr pos:start="5:30" pos:end="5:56"><operator pos:start="5:30" pos:end="5:30">(</operator><name pos:start="5:31" pos:end="5:47">VIOsPAPRVTYDevice</name> <operator pos:start="5:49" pos:end="5:49">*</operator><operator pos:start="5:50" pos:end="5:50">)</operator><name pos:start="5:51" pos:end="5:56">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:38">(<expr pos:start="11:9" pos:end="11:37"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:16"><name pos:start="11:10" pos:end="11:12">dev</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:16">in</name></name> <operator pos:start="11:18" pos:end="11:19">==</operator> <name pos:start="11:21" pos:end="11:28"><name pos:start="11:21" pos:end="11:23">dev</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:28">out</name></name><operator pos:start="11:29" pos:end="11:29">)</operator> <operator pos:start="11:31" pos:end="11:32">&amp;&amp;</operator> <name pos:start="11:34" pos:end="11:37">size</name></expr>)</condition> <block pos:start="11:40" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:39">

        <comment type="block" pos:start="13:9" pos:end="13:52">/* toggle line to simulate edge interrupt */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:39"><expr pos:start="15:9" pos:end="15:38"><call pos:start="15:9" pos:end="15:38"><name pos:start="15:9" pos:end="15:22">qemu_irq_pulse</name><argument_list pos:start="15:23" pos:end="15:38">(<argument pos:start="15:24" pos:end="15:37"><expr pos:start="15:24" pos:end="15:37"><name pos:start="15:24" pos:end="15:37"><name pos:start="15:24" pos:end="15:26">dev</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:32">sdev</name><operator pos:start="15:33" pos:end="15:33">.</operator><name pos:start="15:34" pos:end="15:37">qirq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="19:5" pos:end="25:5">for <control pos:start="19:9" pos:end="19:30">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:25"><expr pos:start="19:17" pos:end="19:24"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:24">size</name></expr>;</condition> <incr pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:27">i</name><operator pos:start="19:28" pos:end="19:29">++</operator></expr></incr>)</control> <block pos:start="19:32" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:53">

        <expr_stmt pos:start="21:9" pos:end="21:53"><expr pos:start="21:9" pos:end="21:52"><call pos:start="21:9" pos:end="21:52"><name pos:start="21:9" pos:end="21:14">assert</name><argument_list pos:start="21:15" pos:end="21:52">(<argument pos:start="21:16" pos:end="21:51"><expr pos:start="21:16" pos:end="21:51"><operator pos:start="21:16" pos:end="21:16">(</operator><name pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:19">dev</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:23">in</name></name> <operator pos:start="21:25" pos:end="21:25">-</operator> <name pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:29">dev</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:34">out</name></name><operator pos:start="21:35" pos:end="21:35">)</operator> <operator pos:start="21:37" pos:end="21:37">&lt;</operator> <name pos:start="21:39" pos:end="21:51">VTERM_BUFSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:53"><expr pos:start="23:9" pos:end="23:52"><name pos:start="23:9" pos:end="23:43"><name pos:start="23:9" pos:end="23:11">dev</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:16">buf</name><index pos:start="23:17" pos:end="23:43">[<expr pos:start="23:18" pos:end="23:42"><name pos:start="23:18" pos:end="23:24"><name pos:start="23:18" pos:end="23:20">dev</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:24">in</name></name><operator pos:start="23:25" pos:end="23:26">++</operator> <operator pos:start="23:28" pos:end="23:28">%</operator> <name pos:start="23:30" pos:end="23:42">VTERM_BUFSIZE</name></expr>]</index></name> <operator pos:start="23:45" pos:end="23:45">=</operator> <name pos:start="23:47" pos:end="23:52"><name pos:start="23:47" pos:end="23:49">buf</name><index pos:start="23:50" pos:end="23:52">[<expr pos:start="23:51" pos:end="23:51"><name pos:start="23:51" pos:end="23:51">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
