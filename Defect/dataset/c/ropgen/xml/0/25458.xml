<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25458.c" pos:tabs="8"><function pos:start="1:1" pos:end="331:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_video_out</name><parameter_list pos:start="1:25" pos:end="7:39">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:42"><decl pos:start="3:26" pos:end="3:42"><type pos:start="3:26" pos:end="3:42"><name pos:start="3:26" pos:end="3:37">OutputStream</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:42">ost</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:44"><decl pos:start="5:26" pos:end="5:44"><type pos:start="5:26" pos:end="5:44"><name pos:start="5:26" pos:end="5:32">AVFrame</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:44">in_picture</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:38"><decl pos:start="7:26" pos:end="7:38"><type pos:start="7:26" pos:end="7:38"><name pos:start="7:26" pos:end="7:30">float</name></type> <name pos:start="7:32" pos:end="7:38">quality</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="331:1">{<block_content pos:start="11:5" pos:end="329:76">

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:30">format_video_sync</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">AVPacket</name></type> <name pos:start="13:14" pos:end="13:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:40"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:23">enc</name> <init pos:start="15:25" pos:end="15:40">= <expr pos:start="15:27" pos:end="15:40"><name pos:start="15:27" pos:end="15:40"><name pos:start="15:27" pos:end="15:29">ost</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:33">st</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:40">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">nb_frames</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">double</name></type> <name pos:start="19:12" pos:end="19:20">sync_ipts</name></decl>, <decl pos:start="19:23" pos:end="19:27"><type ref="prev" pos:start="19:5" pos:end="19:10"/><name pos:start="19:23" pos:end="19:27">delta</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">double</name></type> <name pos:start="21:12" pos:end="21:19">duration</name> <init pos:start="21:21" pos:end="21:23">= <expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:18">frame_size</name> <init pos:start="23:20" pos:end="23:22">= <expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:15">InputStream</name> <modifier pos:start="25:17" pos:end="25:17">*</modifier></type><name pos:start="25:18" pos:end="25:20">ist</name> <init pos:start="25:22" pos:end="25:27">= <expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="31:47"><if pos:start="29:5" pos:end="31:47">if <condition pos:start="29:8" pos:end="29:31">(<expr pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:11">ost</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:25">source_index</name></name> <operator pos:start="29:27" pos:end="29:28">&gt;=</operator> <literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:47"><block_content pos:start="31:9" pos:end="31:47">

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:11">ist</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:46"><name pos:start="31:15" pos:end="31:27">input_streams</name><index pos:start="31:28" pos:end="31:46">[<expr pos:start="31:29" pos:end="31:45"><name pos:start="31:29" pos:end="31:45"><name pos:start="31:29" pos:end="31:31">ost</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:45">source_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="37:72"><if pos:start="35:5" pos:end="37:72">if<condition pos:start="35:7" pos:end="35:115">(<expr pos:start="35:8" pos:end="35:114"><name pos:start="35:8" pos:end="35:10">ist</name> <operator pos:start="35:12" pos:end="35:13">&amp;&amp;</operator> <name pos:start="35:15" pos:end="35:33"><name pos:start="35:15" pos:end="35:17">ist</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:21">st</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:33">start_time</name></name> <operator pos:start="35:35" pos:end="35:36">!=</operator> <name pos:start="35:38" pos:end="35:51">AV_NOPTS_VALUE</name> <operator pos:start="35:53" pos:end="35:54">&amp;&amp;</operator> <name pos:start="35:56" pos:end="35:73"><name pos:start="35:56" pos:end="35:58">ist</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:62">st</name><operator pos:start="35:63" pos:end="35:64">-&gt;</operator><name pos:start="35:65" pos:end="35:73">first_dts</name></name> <operator pos:start="35:75" pos:end="35:76">!=</operator> <name pos:start="35:78" pos:end="35:91">AV_NOPTS_VALUE</name> <operator pos:start="35:93" pos:end="35:94">&amp;&amp;</operator> <name pos:start="35:96" pos:end="35:114"><name pos:start="35:96" pos:end="35:98">ost</name><operator pos:start="35:99" pos:end="35:100">-&gt;</operator><name pos:start="35:101" pos:end="35:110">frame_rate</name><operator pos:start="35:111" pos:end="35:111">.</operator><name pos:start="35:112" pos:end="35:114">num</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:72"><block_content pos:start="37:9" pos:end="37:72">

        <expr_stmt pos:start="37:9" pos:end="37:72"><expr pos:start="37:9" pos:end="37:71"><name pos:start="37:9" pos:end="37:16">duration</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">1</literal><operator pos:start="37:21" pos:end="37:21">/</operator><operator pos:start="37:22" pos:end="37:22">(</operator><call pos:start="37:23" pos:end="37:45"><name pos:start="37:23" pos:end="37:28">av_q2d</name><argument_list pos:start="37:29" pos:end="37:45">(<argument pos:start="37:30" pos:end="37:44"><expr pos:start="37:30" pos:end="37:44"><name pos:start="37:30" pos:end="37:44"><name pos:start="37:30" pos:end="37:32">ost</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:44">frame_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="37:47" pos:end="37:47">*</operator> <call pos:start="37:49" pos:end="37:70"><name pos:start="37:49" pos:end="37:54">av_q2d</name><argument_list pos:start="37:55" pos:end="37:70">(<argument pos:start="37:56" pos:end="37:69"><expr pos:start="37:56" pos:end="37:69"><name pos:start="37:56" pos:end="37:69"><name pos:start="37:56" pos:end="37:58">enc</name><operator pos:start="37:59" pos:end="37:60">-&gt;</operator><name pos:start="37:61" pos:end="37:69">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="37:71" pos:end="37:71">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:13">sync_ipts</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:31"><name pos:start="41:17" pos:end="41:26">in_picture</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:31">pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:50"><expr pos:start="43:5" pos:end="43:49"><name pos:start="43:5" pos:end="43:9">delta</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:21">sync_ipts</name> <operator pos:start="43:23" pos:end="43:23">-</operator> <name pos:start="43:25" pos:end="43:38"><name pos:start="43:25" pos:end="43:27">ost</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:38">sync_opts</name></name> <operator pos:start="43:40" pos:end="43:40">+</operator> <name pos:start="43:42" pos:end="43:49">duration</name></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:46">/* by default, we output a single frame */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:18"><expr pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:13">nb_frames</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:21">format_video_sync</name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:41">video_sync_method</name></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:150"><if pos:start="55:5" pos:end="57:150">if <condition pos:start="55:8" pos:end="55:40">(<expr pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:25">format_video_sync</name> <operator pos:start="55:27" pos:end="55:28">==</operator> <name pos:start="55:30" pos:end="55:39">VSYNC_AUTO</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:150"><block_content pos:start="57:9" pos:end="57:150">

        <expr_stmt pos:start="57:9" pos:end="57:150"><expr pos:start="57:9" pos:end="57:149"><name pos:start="57:9" pos:end="57:25">format_video_sync</name> <operator pos:start="57:27" pos:end="57:27">=</operator> <ternary pos:start="57:29" pos:end="57:149"><condition pos:start="57:29" pos:end="57:70"><expr pos:start="57:29" pos:end="57:68"><operator pos:start="57:29" pos:end="57:29">(</operator><name pos:start="57:30" pos:end="57:46"><name pos:start="57:30" pos:end="57:30">s</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:39">oformat</name><operator pos:start="57:40" pos:end="57:41">-&gt;</operator><name pos:start="57:42" pos:end="57:46">flags</name></name> <operator pos:start="57:48" pos:end="57:48">&amp;</operator> <name pos:start="57:50" pos:end="57:67">AVFMT_VARIABLE_FPS</name><operator pos:start="57:68" pos:end="57:68">)</operator></expr> ?</condition><then pos:start="57:72" pos:end="57:145"> <expr pos:start="57:72" pos:end="57:145"><operator pos:start="57:72" pos:end="57:72">(</operator><ternary pos:start="57:73" pos:end="57:144"><condition pos:start="57:73" pos:end="57:114"><expr pos:start="57:73" pos:end="57:112"><operator pos:start="57:73" pos:end="57:73">(</operator><name pos:start="57:74" pos:end="57:90"><name pos:start="57:74" pos:end="57:74">s</name><operator pos:start="57:75" pos:end="57:76">-&gt;</operator><name pos:start="57:77" pos:end="57:83">oformat</name><operator pos:start="57:84" pos:end="57:85">-&gt;</operator><name pos:start="57:86" pos:end="57:90">flags</name></name> <operator pos:start="57:92" pos:end="57:92">&amp;</operator> <name pos:start="57:94" pos:end="57:111">AVFMT_NOTIMESTAMPS</name><operator pos:start="57:112" pos:end="57:112">)</operator></expr> ?</condition><then pos:start="57:116" pos:end="57:132"> <expr pos:start="57:116" pos:end="57:132"><name pos:start="57:116" pos:end="57:132">VSYNC_PASSTHROUGH</name></expr> </then><else pos:start="57:134" pos:end="57:144">: <expr pos:start="57:136" pos:end="57:144"><name pos:start="57:136" pos:end="57:144">VSYNC_VFR</name></expr></else></ternary><operator pos:start="57:145" pos:end="57:145">)</operator></expr> </then><else pos:start="57:147" pos:end="57:149">: <expr pos:start="57:149" pos:end="57:149"><literal type="number" pos:start="57:149" pos:end="57:149">1</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="61:5" pos:end="101:5">switch <condition pos:start="61:12" pos:end="61:30">(<expr pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:29">format_video_sync</name></expr>)</condition> <block pos:start="61:32" pos:end="101:5">{<block_content pos:start="63:5" pos:end="99:22">

    <case pos:start="63:5" pos:end="63:19">case <expr pos:start="63:10" pos:end="63:18"><name pos:start="63:10" pos:end="63:18">VSYNC_CFR</name></expr>:</case>

        <comment type="line" pos:start="65:9" pos:end="65:75">// FIXME set to 0.5 after we fix some dts/pts bugs like in avidec.c</comment>

        <if_stmt pos:start="67:9" pos:end="73:38"><if pos:start="67:9" pos:end="69:26">if <condition pos:start="67:12" pos:end="67:25">(<expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:17">delta</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <operator pos:start="67:21" pos:end="67:21">-</operator><literal type="number" pos:start="67:22" pos:end="67:24">1.1</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:26"><block_content pos:start="69:13" pos:end="69:26">

            <expr_stmt pos:start="69:13" pos:end="69:26"><expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:21">nb_frames</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <literal type="number" pos:start="69:25" pos:end="69:25">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="71:9" pos:end="73:38">else if <condition pos:start="71:17" pos:end="71:29">(<expr pos:start="71:18" pos:end="71:28"><name pos:start="71:18" pos:end="71:22">delta</name> <operator pos:start="71:24" pos:end="71:24">&gt;</operator> <literal type="number" pos:start="71:26" pos:end="71:28">1.1</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:38"><block_content pos:start="73:13" pos:end="73:38">

            <expr_stmt pos:start="73:13" pos:end="73:38"><expr pos:start="73:13" pos:end="73:37"><name pos:start="73:13" pos:end="73:21">nb_frames</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <call pos:start="73:25" pos:end="73:37"><name pos:start="73:25" pos:end="73:30">lrintf</name><argument_list pos:start="73:31" pos:end="73:37">(<argument pos:start="73:32" pos:end="73:36"><expr pos:start="73:32" pos:end="73:36"><name pos:start="73:32" pos:end="73:36">delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:19">case <expr pos:start="77:10" pos:end="77:18"><name pos:start="77:10" pos:end="77:18">VSYNC_VFR</name></expr>:</case>

        <if_stmt pos:start="79:9" pos:end="85:46"><if pos:start="79:9" pos:end="81:26">if <condition pos:start="79:12" pos:end="79:26">(<expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:17">delta</name> <operator pos:start="79:19" pos:end="79:20">&lt;=</operator> <operator pos:start="79:22" pos:end="79:22">-</operator><literal type="number" pos:start="79:23" pos:end="79:25">0.6</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:26"><block_content pos:start="81:13" pos:end="81:26">

            <expr_stmt pos:start="81:13" pos:end="81:26"><expr pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:21">nb_frames</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <literal type="number" pos:start="81:25" pos:end="81:25">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="83:9" pos:end="85:46">else if <condition pos:start="83:17" pos:end="83:29">(<expr pos:start="83:18" pos:end="83:28"><name pos:start="83:18" pos:end="83:22">delta</name> <operator pos:start="83:24" pos:end="83:24">&gt;</operator> <literal type="number" pos:start="83:26" pos:end="83:28">0.6</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:46"><block_content pos:start="85:13" pos:end="85:46">

            <expr_stmt pos:start="85:13" pos:end="85:46"><expr pos:start="85:13" pos:end="85:45"><name pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:15">ost</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:26">sync_opts</name></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <call pos:start="85:30" pos:end="85:45"><name pos:start="85:30" pos:end="85:34">lrint</name><argument_list pos:start="85:35" pos:end="85:45">(<argument pos:start="85:36" pos:end="85:44"><expr pos:start="85:36" pos:end="85:44"><name pos:start="85:36" pos:end="85:44">sync_ipts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:20">case <expr pos:start="89:10" pos:end="89:19"><name pos:start="89:10" pos:end="89:19">VSYNC_DROP</name></expr>:</case>

    <case pos:start="91:5" pos:end="91:27">case <expr pos:start="91:10" pos:end="91:26"><name pos:start="91:10" pos:end="91:26">VSYNC_PASSTHROUGH</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:42"><expr pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:11">ost</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:22">sync_opts</name></name> <operator pos:start="93:24" pos:end="93:24">=</operator> <call pos:start="93:26" pos:end="93:41"><name pos:start="93:26" pos:end="93:30">lrint</name><argument_list pos:start="93:31" pos:end="93:41">(<argument pos:start="93:32" pos:end="93:40"><expr pos:start="93:32" pos:end="93:40"><name pos:start="93:32" pos:end="93:40">sync_ipts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <default pos:start="97:5" pos:end="97:12">default:</default>

        <expr_stmt pos:start="99:9" pos:end="99:22"><expr pos:start="99:9" pos:end="99:21"><call pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:18">av_assert0</name><argument_list pos:start="99:19" pos:end="99:21">(<argument pos:start="99:20" pos:end="99:20"><expr pos:start="99:20" pos:end="99:20"><literal type="number" pos:start="99:20" pos:end="99:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="105:5" pos:end="105:70"><expr pos:start="105:5" pos:end="105:69"><name pos:start="105:5" pos:end="105:13">nb_frames</name> <operator pos:start="105:15" pos:end="105:15">=</operator> <call pos:start="105:17" pos:end="105:69"><name pos:start="105:17" pos:end="105:21">FFMIN</name><argument_list pos:start="105:22" pos:end="105:69">(<argument pos:start="105:23" pos:end="105:31"><expr pos:start="105:23" pos:end="105:31"><name pos:start="105:23" pos:end="105:31">nb_frames</name></expr></argument>, <argument pos:start="105:34" pos:end="105:68"><expr pos:start="105:34" pos:end="105:68"><name pos:start="105:34" pos:end="105:48"><name pos:start="105:34" pos:end="105:36">ost</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:48">max_frames</name></name> <operator pos:start="105:50" pos:end="105:50">-</operator> <name pos:start="105:52" pos:end="105:68"><name pos:start="105:52" pos:end="105:54">ost</name><operator pos:start="105:55" pos:end="105:56">-&gt;</operator><name pos:start="105:57" pos:end="105:68">frame_number</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="131:5"><if pos:start="107:5" pos:end="115:5">if <condition pos:start="107:8" pos:end="107:23">(<expr pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:17">nb_frames</name> <operator pos:start="107:19" pos:end="107:20">==</operator> <literal type="number" pos:start="107:22" pos:end="107:22">0</literal></expr>)</condition> <block pos:start="107:25" pos:end="115:5">{<block_content pos:start="109:9" pos:end="113:15">

        <expr_stmt pos:start="109:9" pos:end="109:25"><expr pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:22">nb_frames_drop</name><operator pos:start="109:23" pos:end="109:24">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:52"><expr pos:start="111:9" pos:end="111:51"><call pos:start="111:9" pos:end="111:51"><name pos:start="111:9" pos:end="111:14">av_log</name><argument_list pos:start="111:15" pos:end="111:51">(<argument pos:start="111:16" pos:end="111:19"><expr pos:start="111:16" pos:end="111:19"><name pos:start="111:16" pos:end="111:19">NULL</name></expr></argument>, <argument pos:start="111:22" pos:end="111:35"><expr pos:start="111:22" pos:end="111:35"><name pos:start="111:22" pos:end="111:35">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="111:38" pos:end="111:50"><expr pos:start="111:38" pos:end="111:50"><literal type="string" pos:start="111:38" pos:end="111:50">"*** drop!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="113:9" pos:end="113:15">return;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="115:7" pos:end="131:5">else if <condition pos:start="115:15" pos:end="115:29">(<expr pos:start="115:16" pos:end="115:28"><name pos:start="115:16" pos:end="115:24">nb_frames</name> <operator pos:start="115:26" pos:end="115:26">&gt;</operator> <literal type="number" pos:start="115:28" pos:end="115:28">1</literal></expr>)</condition> <block pos:start="115:31" pos:end="131:5">{<block_content pos:start="117:9" pos:end="129:69">

        <if_stmt pos:start="117:9" pos:end="125:9"><if pos:start="117:9" pos:end="125:9">if <condition pos:start="117:12" pos:end="117:49">(<expr pos:start="117:13" pos:end="117:48"><name pos:start="117:13" pos:end="117:21">nb_frames</name> <operator pos:start="117:23" pos:end="117:23">&gt;</operator> <name pos:start="117:25" pos:end="117:43">dts_error_threshold</name> <operator pos:start="117:45" pos:end="117:45">*</operator> <literal type="number" pos:start="117:47" pos:end="117:48">30</literal></expr>)</condition> <block pos:start="117:51" pos:end="125:9">{<block_content pos:start="119:13" pos:end="123:19">

            <expr_stmt pos:start="119:13" pos:end="119:99"><expr pos:start="119:13" pos:end="119:98"><call pos:start="119:13" pos:end="119:98"><name pos:start="119:13" pos:end="119:18">av_log</name><argument_list pos:start="119:19" pos:end="119:98">(<argument pos:start="119:20" pos:end="119:23"><expr pos:start="119:20" pos:end="119:23"><name pos:start="119:20" pos:end="119:23">NULL</name></expr></argument>, <argument pos:start="119:26" pos:end="119:37"><expr pos:start="119:26" pos:end="119:37"><name pos:start="119:26" pos:end="119:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:40" pos:end="119:82"><expr pos:start="119:40" pos:end="119:82"><literal type="string" pos:start="119:40" pos:end="119:82">"%d frame duplication too large, skiping\n"</literal></expr></argument>, <argument pos:start="119:85" pos:end="119:97"><expr pos:start="119:85" pos:end="119:97"><name pos:start="119:85" pos:end="119:93">nb_frames</name> <operator pos:start="119:95" pos:end="119:95">-</operator> <literal type="number" pos:start="119:97" pos:end="119:97">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:29"><expr pos:start="121:13" pos:end="121:28"><name pos:start="121:13" pos:end="121:26">nb_frames_drop</name><operator pos:start="121:27" pos:end="121:28">++</operator></expr>;</expr_stmt>

            <return pos:start="123:13" pos:end="123:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:39"><expr pos:start="127:9" pos:end="127:38"><name pos:start="127:9" pos:end="127:21">nb_frames_dup</name> <operator pos:start="127:23" pos:end="127:24">+=</operator> <name pos:start="127:26" pos:end="127:34">nb_frames</name> <operator pos:start="127:36" pos:end="127:36">-</operator> <literal type="number" pos:start="127:38" pos:end="127:38">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:69"><expr pos:start="129:9" pos:end="129:68"><call pos:start="129:9" pos:end="129:68"><name pos:start="129:9" pos:end="129:14">av_log</name><argument_list pos:start="129:15" pos:end="129:68">(<argument pos:start="129:16" pos:end="129:19"><expr pos:start="129:16" pos:end="129:19"><name pos:start="129:16" pos:end="129:19">NULL</name></expr></argument>, <argument pos:start="129:22" pos:end="129:35"><expr pos:start="129:22" pos:end="129:35"><name pos:start="129:22" pos:end="129:35">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="129:38" pos:end="129:52"><expr pos:start="129:38" pos:end="129:52"><literal type="string" pos:start="129:38" pos:end="129:52">"*** %d dup!\n"</literal></expr></argument>, <argument pos:start="129:55" pos:end="129:67"><expr pos:start="129:55" pos:end="129:67"><name pos:start="129:55" pos:end="129:63">nb_frames</name> <operator pos:start="129:65" pos:end="129:65">-</operator> <literal type="number" pos:start="129:67" pos:end="129:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





<label pos:start="137:1" pos:end="137:16"><name pos:start="137:1" pos:end="137:15">duplicate_frame</name>:</label>

    <expr_stmt pos:start="139:5" pos:end="139:25"><expr pos:start="139:5" pos:end="139:24"><call pos:start="139:5" pos:end="139:24"><name pos:start="139:5" pos:end="139:18">av_init_packet</name><argument_list pos:start="139:19" pos:end="139:24">(<argument pos:start="139:20" pos:end="139:23"><expr pos:start="139:20" pos:end="139:23"><operator pos:start="139:20" pos:end="139:20">&amp;</operator><name pos:start="139:21" pos:end="139:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:20"><expr pos:start="141:5" pos:end="141:19"><name pos:start="141:5" pos:end="141:12"><name pos:start="141:5" pos:end="141:7">pkt</name><operator pos:start="141:8" pos:end="141:8">.</operator><name pos:start="141:9" pos:end="141:12">data</name></name> <operator pos:start="141:14" pos:end="141:14">=</operator> <name pos:start="141:16" pos:end="141:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:17"><expr pos:start="143:5" pos:end="143:16"><name pos:start="143:5" pos:end="143:12"><name pos:start="143:5" pos:end="143:7">pkt</name><operator pos:start="143:8" pos:end="143:8">.</operator><name pos:start="143:9" pos:end="143:12">size</name></name> <operator pos:start="143:14" pos:end="143:14">=</operator> <literal type="number" pos:start="143:16" pos:end="143:16">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:37"><expr pos:start="147:5" pos:end="147:36"><name pos:start="147:5" pos:end="147:19"><name pos:start="147:5" pos:end="147:14">in_picture</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:19">pts</name></name> <operator pos:start="147:21" pos:end="147:21">=</operator> <name pos:start="147:23" pos:end="147:36"><name pos:start="147:23" pos:end="147:25">ost</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:36">sync_opts</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="151:5" pos:end="153:15"><if pos:start="151:5" pos:end="153:15">if <condition pos:start="151:8" pos:end="151:35">(<expr pos:start="151:9" pos:end="151:34"><operator pos:start="151:9" pos:end="151:9">!</operator><call pos:start="151:10" pos:end="151:34"><name pos:start="151:10" pos:end="151:29">check_recording_time</name><argument_list pos:start="151:30" pos:end="151:34">(<argument pos:start="151:31" pos:end="151:33"><expr pos:start="151:31" pos:end="151:33"><name pos:start="151:31" pos:end="151:33">ost</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:15"><block_content pos:start="153:9" pos:end="153:15">

        <return pos:start="153:9" pos:end="153:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="157:5" pos:end="303:5"><if pos:start="157:5" pos:end="185:5">if <condition pos:start="157:8" pos:end="159:44">(<expr pos:start="157:9" pos:end="159:43"><name pos:start="157:9" pos:end="157:25"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:18">oformat</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:25">flags</name></name> <operator pos:start="157:27" pos:end="157:27">&amp;</operator> <name pos:start="157:29" pos:end="157:44">AVFMT_RAWPICTURE</name> <operator pos:start="157:46" pos:end="157:47">&amp;&amp;</operator>

        <name pos:start="159:9" pos:end="159:22"><name pos:start="159:9" pos:end="159:11">enc</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:18">codec</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:22">id</name></name> <operator pos:start="159:24" pos:end="159:25">==</operator> <name pos:start="159:27" pos:end="159:43">CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="159:46" pos:end="185:5">{<block_content pos:start="167:9" pos:end="183:31">

        <comment type="block" pos:start="161:9" pos:end="165:21">/* raw pictures are written as AVPicture structure to

           avoid any copies. We support temporarily the older

           method. */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:74"><expr pos:start="167:9" pos:end="167:73"><name pos:start="167:9" pos:end="167:42"><name pos:start="167:9" pos:end="167:11">enc</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:24">coded_frame</name><operator pos:start="167:25" pos:end="167:26">-&gt;</operator><name pos:start="167:27" pos:end="167:42">interlaced_frame</name></name> <operator pos:start="167:44" pos:end="167:44">=</operator> <name pos:start="167:46" pos:end="167:73"><name pos:start="167:46" pos:end="167:55">in_picture</name><operator pos:start="167:56" pos:end="167:57">-&gt;</operator><name pos:start="167:58" pos:end="167:73">interlaced_frame</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:73"><expr pos:start="169:9" pos:end="169:72"><name pos:start="169:9" pos:end="169:41"><name pos:start="169:9" pos:end="169:11">enc</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:24">coded_frame</name><operator pos:start="169:25" pos:end="169:26">-&gt;</operator><name pos:start="169:27" pos:end="169:41">top_field_first</name></name>  <operator pos:start="169:44" pos:end="169:44">=</operator> <name pos:start="169:46" pos:end="169:72"><name pos:start="169:46" pos:end="169:55">in_picture</name><operator pos:start="169:56" pos:end="169:57">-&gt;</operator><name pos:start="169:58" pos:end="169:72">top_field_first</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:43"><expr pos:start="171:9" pos:end="171:42"><name pos:start="171:9" pos:end="171:16"><name pos:start="171:9" pos:end="171:11">pkt</name><operator pos:start="171:12" pos:end="171:12">.</operator><name pos:start="171:13" pos:end="171:16">data</name></name>   <operator pos:start="171:20" pos:end="171:20">=</operator> <operator pos:start="171:22" pos:end="171:22">(</operator><name pos:start="171:23" pos:end="171:29">uint8_t</name> <operator pos:start="171:31" pos:end="171:31">*</operator><operator pos:start="171:32" pos:end="171:32">)</operator><name pos:start="171:33" pos:end="171:42">in_picture</name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:40"><expr pos:start="173:9" pos:end="173:39"><name pos:start="173:9" pos:end="173:16"><name pos:start="173:9" pos:end="173:11">pkt</name><operator pos:start="173:12" pos:end="173:12">.</operator><name pos:start="173:13" pos:end="173:16">size</name></name>   <operator pos:start="173:20" pos:end="173:20">=</operator>  <sizeof pos:start="173:23" pos:end="173:39">sizeof<argument_list pos:start="173:29" pos:end="173:39">(<argument pos:start="173:30" pos:end="173:38"><expr pos:start="173:30" pos:end="173:38"><name pos:start="173:30" pos:end="173:38">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:87"><expr pos:start="175:9" pos:end="175:86"><name pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:11">pkt</name><operator pos:start="175:12" pos:end="175:12">.</operator><name pos:start="175:13" pos:end="175:15">pts</name></name>    <operator pos:start="175:20" pos:end="175:20">=</operator> <call pos:start="175:22" pos:end="175:86"><name pos:start="175:22" pos:end="175:33">av_rescale_q</name><argument_list pos:start="175:34" pos:end="175:86">(<argument pos:start="175:35" pos:end="175:49"><expr pos:start="175:35" pos:end="175:49"><name pos:start="175:35" pos:end="175:49"><name pos:start="175:35" pos:end="175:44">in_picture</name><operator pos:start="175:45" pos:end="175:46">-&gt;</operator><name pos:start="175:47" pos:end="175:49">pts</name></name></expr></argument>, <argument pos:start="175:52" pos:end="175:65"><expr pos:start="175:52" pos:end="175:65"><name pos:start="175:52" pos:end="175:65"><name pos:start="175:52" pos:end="175:54">enc</name><operator pos:start="175:55" pos:end="175:56">-&gt;</operator><name pos:start="175:57" pos:end="175:65">time_base</name></name></expr></argument>, <argument pos:start="175:68" pos:end="175:85"><expr pos:start="175:68" pos:end="175:85"><name pos:start="175:68" pos:end="175:85"><name pos:start="175:68" pos:end="175:70">ost</name><operator pos:start="175:71" pos:end="175:72">-&gt;</operator><name pos:start="175:73" pos:end="175:74">st</name><operator pos:start="175:75" pos:end="175:76">-&gt;</operator><name pos:start="175:77" pos:end="175:85">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:37"><expr pos:start="177:9" pos:end="177:36"><name pos:start="177:9" pos:end="177:17"><name pos:start="177:9" pos:end="177:11">pkt</name><operator pos:start="177:12" pos:end="177:12">.</operator><name pos:start="177:13" pos:end="177:17">flags</name></name> <operator pos:start="177:19" pos:end="177:20">|=</operator> <name pos:start="177:22" pos:end="177:36">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:34"><expr pos:start="181:9" pos:end="181:33"><call pos:start="181:9" pos:end="181:33"><name pos:start="181:9" pos:end="181:19">write_frame</name><argument_list pos:start="181:20" pos:end="181:33">(<argument pos:start="181:21" pos:end="181:21"><expr pos:start="181:21" pos:end="181:21"><name pos:start="181:21" pos:end="181:21">s</name></expr></argument>, <argument pos:start="181:24" pos:end="181:27"><expr pos:start="181:24" pos:end="181:27"><operator pos:start="181:24" pos:end="181:24">&amp;</operator><name pos:start="181:25" pos:end="181:27">pkt</name></expr></argument>, <argument pos:start="181:30" pos:end="181:32"><expr pos:start="181:30" pos:end="181:32"><name pos:start="181:30" pos:end="181:32">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:31"><expr pos:start="183:9" pos:end="183:30"><name pos:start="183:9" pos:end="183:18">video_size</name> <operator pos:start="183:20" pos:end="183:21">+=</operator> <name pos:start="183:23" pos:end="183:30"><name pos:start="183:23" pos:end="183:25">pkt</name><operator pos:start="183:26" pos:end="183:26">.</operator><name pos:start="183:27" pos:end="183:30">size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="185:7" pos:end="303:5">else <block pos:start="185:12" pos:end="303:5">{<block_content pos:start="187:9" pos:end="301:9">

        <decl_stmt pos:start="187:9" pos:end="187:23"><decl pos:start="187:9" pos:end="187:22"><type pos:start="187:9" pos:end="187:11"><name pos:start="187:9" pos:end="187:11">int</name></type> <name pos:start="187:13" pos:end="187:22">got_packet</name></decl>;</decl_stmt>

        <decl_stmt pos:start="189:9" pos:end="189:28"><decl pos:start="189:9" pos:end="189:27"><type pos:start="189:9" pos:end="189:15"><name pos:start="189:9" pos:end="189:15">AVFrame</name></type> <name pos:start="189:17" pos:end="189:27">big_picture</name></decl>;</decl_stmt>



        <expr_stmt pos:start="193:9" pos:end="193:34"><expr pos:start="193:9" pos:end="193:33"><name pos:start="193:9" pos:end="193:19">big_picture</name> <operator pos:start="193:21" pos:end="193:21">=</operator> <operator pos:start="193:23" pos:end="193:23">*</operator><name pos:start="193:24" pos:end="193:33">in_picture</name></expr>;</expr_stmt>

        <comment type="block" pos:start="195:9" pos:end="197:22">/* better than nothing: use input picture interlaced

           settings */</comment>

        <expr_stmt pos:start="199:9" pos:end="199:68"><expr pos:start="199:9" pos:end="199:67"><name pos:start="199:9" pos:end="199:36"><name pos:start="199:9" pos:end="199:19">big_picture</name><operator pos:start="199:20" pos:end="199:20">.</operator><name pos:start="199:21" pos:end="199:36">interlaced_frame</name></name> <operator pos:start="199:38" pos:end="199:38">=</operator> <name pos:start="199:40" pos:end="199:67"><name pos:start="199:40" pos:end="199:49">in_picture</name><operator pos:start="199:50" pos:end="199:51">-&gt;</operator><name pos:start="199:52" pos:end="199:67">interlaced_frame</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="211:9"><if pos:start="201:9" pos:end="211:9">if <condition pos:start="201:12" pos:end="201:89">(<expr pos:start="201:13" pos:end="201:88"><name pos:start="201:13" pos:end="201:33"><name pos:start="201:13" pos:end="201:15">ost</name><operator pos:start="201:16" pos:end="201:17">-&gt;</operator><name pos:start="201:18" pos:end="201:19">st</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:26">codec</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:33">flags</name></name> <operator pos:start="201:35" pos:end="201:35">&amp;</operator> <operator pos:start="201:37" pos:end="201:37">(</operator><name pos:start="201:38" pos:end="201:62">CODEC_FLAG_INTERLACED_DCT</name><operator pos:start="201:63" pos:end="201:63">|</operator><name pos:start="201:64" pos:end="201:87">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="201:88" pos:end="201:88">)</operator></expr>)</condition> <block pos:start="201:91" pos:end="211:9">{<block_content pos:start="203:13" pos:end="209:69">

            <if_stmt pos:start="203:13" pos:end="209:69"><if pos:start="203:13" pos:end="205:74">if <condition pos:start="203:16" pos:end="203:43">(<expr pos:start="203:17" pos:end="203:42"><name pos:start="203:17" pos:end="203:36"><name pos:start="203:17" pos:end="203:19">ost</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:36">top_field_first</name></name> <operator pos:start="203:38" pos:end="203:39">==</operator> <operator pos:start="203:41" pos:end="203:41">-</operator><literal type="number" pos:start="203:42" pos:end="203:42">1</literal></expr>)</condition><block type="pseudo" pos:start="205:17" pos:end="205:74"><block_content pos:start="205:17" pos:end="205:74">

                <expr_stmt pos:start="205:17" pos:end="205:74"><expr pos:start="205:17" pos:end="205:73"><name pos:start="205:17" pos:end="205:43"><name pos:start="205:17" pos:end="205:27">big_picture</name><operator pos:start="205:28" pos:end="205:28">.</operator><name pos:start="205:29" pos:end="205:43">top_field_first</name></name> <operator pos:start="205:45" pos:end="205:45">=</operator> <name pos:start="205:47" pos:end="205:73"><name pos:start="205:47" pos:end="205:56">in_picture</name><operator pos:start="205:57" pos:end="205:58">-&gt;</operator><name pos:start="205:59" pos:end="205:73">top_field_first</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="207:13" pos:end="209:69">else<block type="pseudo" pos:start="209:17" pos:end="209:69"><block_content pos:start="209:17" pos:end="209:69">

                <expr_stmt pos:start="209:17" pos:end="209:69"><expr pos:start="209:17" pos:end="209:68"><name pos:start="209:17" pos:end="209:43"><name pos:start="209:17" pos:end="209:27">big_picture</name><operator pos:start="209:28" pos:end="209:28">.</operator><name pos:start="209:29" pos:end="209:43">top_field_first</name></name> <operator pos:start="209:45" pos:end="209:45">=</operator> <operator pos:start="209:47" pos:end="209:47">!</operator><operator pos:start="209:48" pos:end="209:48">!</operator><name pos:start="209:49" pos:end="209:68"><name pos:start="209:49" pos:end="209:51">ost</name><operator pos:start="209:52" pos:end="209:53">-&gt;</operator><name pos:start="209:54" pos:end="209:68">top_field_first</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="215:9" pos:end="217:36">/* handles same_quant here. This is not correct because it may

           not be a global option */</comment>

        <expr_stmt pos:start="219:9" pos:end="219:38"><expr pos:start="219:9" pos:end="219:37"><name pos:start="219:9" pos:end="219:27"><name pos:start="219:9" pos:end="219:19">big_picture</name><operator pos:start="219:20" pos:end="219:20">.</operator><name pos:start="219:21" pos:end="219:27">quality</name></name> <operator pos:start="219:29" pos:end="219:29">=</operator> <name pos:start="219:31" pos:end="219:37">quality</name></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="223:38"><if pos:start="221:9" pos:end="223:38">if <condition pos:start="221:12" pos:end="221:31">(<expr pos:start="221:13" pos:end="221:30"><operator pos:start="221:13" pos:end="221:13">!</operator><name pos:start="221:14" pos:end="221:30"><name pos:start="221:14" pos:end="221:16">enc</name><operator pos:start="221:17" pos:end="221:18">-&gt;</operator><name pos:start="221:19" pos:end="221:30">me_threshold</name></name></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:38"><block_content pos:start="223:13" pos:end="223:38">

            <expr_stmt pos:start="223:13" pos:end="223:38"><expr pos:start="223:13" pos:end="223:37"><name pos:start="223:13" pos:end="223:33"><name pos:start="223:13" pos:end="223:23">big_picture</name><operator pos:start="223:24" pos:end="223:24">.</operator><name pos:start="223:25" pos:end="223:33">pict_type</name></name> <operator pos:start="223:35" pos:end="223:35">=</operator> <literal type="number" pos:start="223:37" pos:end="223:37">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="225:9" pos:end="233:9"><if pos:start="225:9" pos:end="233:9">if <condition pos:start="225:12" pos:end="227:72">(<expr pos:start="225:13" pos:end="227:71"><name pos:start="225:13" pos:end="225:32"><name pos:start="225:13" pos:end="225:15">ost</name><operator pos:start="225:16" pos:end="225:17">-&gt;</operator><name pos:start="225:18" pos:end="225:32">forced_kf_index</name></name> <operator pos:start="225:34" pos:end="225:34">&lt;</operator> <name pos:start="225:36" pos:end="225:55"><name pos:start="225:36" pos:end="225:38">ost</name><operator pos:start="225:39" pos:end="225:40">-&gt;</operator><name pos:start="225:41" pos:end="225:55">forced_kf_count</name></name> <operator pos:start="225:57" pos:end="225:58">&amp;&amp;</operator>

            <name pos:start="227:13" pos:end="227:27"><name pos:start="227:13" pos:end="227:23">big_picture</name><operator pos:start="227:24" pos:end="227:24">.</operator><name pos:start="227:25" pos:end="227:27">pts</name></name> <operator pos:start="227:29" pos:end="227:30">&gt;=</operator> <name pos:start="227:32" pos:end="227:71"><name pos:start="227:32" pos:end="227:34">ost</name><operator pos:start="227:35" pos:end="227:36">-&gt;</operator><name pos:start="227:37" pos:end="227:49">forced_kf_pts</name><index pos:start="227:50" pos:end="227:71">[<expr pos:start="227:51" pos:end="227:70"><name pos:start="227:51" pos:end="227:70"><name pos:start="227:51" pos:end="227:53">ost</name><operator pos:start="227:54" pos:end="227:55">-&gt;</operator><name pos:start="227:56" pos:end="227:70">forced_kf_index</name></name></expr>]</index></name></expr>)</condition> <block pos:start="227:74" pos:end="233:9">{<block_content pos:start="229:13" pos:end="231:35">

            <expr_stmt pos:start="229:13" pos:end="229:54"><expr pos:start="229:13" pos:end="229:53"><name pos:start="229:13" pos:end="229:33"><name pos:start="229:13" pos:end="229:23">big_picture</name><operator pos:start="229:24" pos:end="229:24">.</operator><name pos:start="229:25" pos:end="229:33">pict_type</name></name> <operator pos:start="229:35" pos:end="229:35">=</operator> <name pos:start="229:37" pos:end="229:53">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:35"><expr pos:start="231:13" pos:end="231:34"><name pos:start="231:13" pos:end="231:32"><name pos:start="231:13" pos:end="231:15">ost</name><operator pos:start="231:16" pos:end="231:17">-&gt;</operator><name pos:start="231:18" pos:end="231:32">forced_kf_index</name></name><operator pos:start="231:33" pos:end="231:34">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:31"><expr pos:start="235:9" pos:end="235:30"><call pos:start="235:9" pos:end="235:30"><name pos:start="235:9" pos:end="235:24">update_benchmark</name><argument_list pos:start="235:25" pos:end="235:30">(<argument pos:start="235:26" pos:end="235:29"><expr pos:start="235:26" pos:end="235:29"><name pos:start="235:26" pos:end="235:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:74"><expr pos:start="237:9" pos:end="237:73"><name pos:start="237:9" pos:end="237:11">ret</name> <operator pos:start="237:13" pos:end="237:13">=</operator> <call pos:start="237:15" pos:end="237:73"><name pos:start="237:15" pos:end="237:35">avcodec_encode_video2</name><argument_list pos:start="237:36" pos:end="237:73">(<argument pos:start="237:37" pos:end="237:39"><expr pos:start="237:37" pos:end="237:39"><name pos:start="237:37" pos:end="237:39">enc</name></expr></argument>, <argument pos:start="237:42" pos:end="237:45"><expr pos:start="237:42" pos:end="237:45"><operator pos:start="237:42" pos:end="237:42">&amp;</operator><name pos:start="237:43" pos:end="237:45">pkt</name></expr></argument>, <argument pos:start="237:48" pos:end="237:59"><expr pos:start="237:48" pos:end="237:59"><operator pos:start="237:48" pos:end="237:48">&amp;</operator><name pos:start="237:49" pos:end="237:59">big_picture</name></expr></argument>, <argument pos:start="237:62" pos:end="237:72"><expr pos:start="237:62" pos:end="237:72"><operator pos:start="237:62" pos:end="237:62">&amp;</operator><name pos:start="237:63" pos:end="237:72">got_packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:76"><expr pos:start="239:9" pos:end="239:75"><call pos:start="239:9" pos:end="239:75"><name pos:start="239:9" pos:end="239:24">update_benchmark</name><argument_list pos:start="239:25" pos:end="239:75">(<argument pos:start="239:26" pos:end="239:45"><expr pos:start="239:26" pos:end="239:45"><literal type="string" pos:start="239:26" pos:end="239:45">"encode_video %d.%d"</literal></expr></argument>, <argument pos:start="239:48" pos:end="239:62"><expr pos:start="239:48" pos:end="239:62"><name pos:start="239:48" pos:end="239:62"><name pos:start="239:48" pos:end="239:50">ost</name><operator pos:start="239:51" pos:end="239:52">-&gt;</operator><name pos:start="239:53" pos:end="239:62">file_index</name></name></expr></argument>, <argument pos:start="239:65" pos:end="239:74"><expr pos:start="239:65" pos:end="239:74"><name pos:start="239:65" pos:end="239:74"><name pos:start="239:65" pos:end="239:67">ost</name><operator pos:start="239:68" pos:end="239:69">-&gt;</operator><name pos:start="239:70" pos:end="239:74">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="241:9" pos:end="247:9"><if pos:start="241:9" pos:end="247:9">if <condition pos:start="241:12" pos:end="241:20">(<expr pos:start="241:13" pos:end="241:19"><name pos:start="241:13" pos:end="241:15">ret</name> <operator pos:start="241:17" pos:end="241:17">&lt;</operator> <literal type="number" pos:start="241:19" pos:end="241:19">0</literal></expr>)</condition> <block pos:start="241:22" pos:end="247:9">{<block_content pos:start="243:13" pos:end="245:28">

            <expr_stmt pos:start="243:13" pos:end="243:66"><expr pos:start="243:13" pos:end="243:65"><call pos:start="243:13" pos:end="243:65"><name pos:start="243:13" pos:end="243:18">av_log</name><argument_list pos:start="243:19" pos:end="243:65">(<argument pos:start="243:20" pos:end="243:23"><expr pos:start="243:20" pos:end="243:23"><name pos:start="243:20" pos:end="243:23">NULL</name></expr></argument>, <argument pos:start="243:26" pos:end="243:37"><expr pos:start="243:26" pos:end="243:37"><name pos:start="243:26" pos:end="243:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="243:40" pos:end="243:64"><expr pos:start="243:40" pos:end="243:64"><literal type="string" pos:start="243:40" pos:end="243:64">"Video encoding failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:28"><expr pos:start="245:13" pos:end="245:27"><call pos:start="245:13" pos:end="245:27"><name pos:start="245:13" pos:end="245:24">exit_program</name><argument_list pos:start="245:25" pos:end="245:27">(<argument pos:start="245:26" pos:end="245:26"><expr pos:start="245:26" pos:end="245:26"><literal type="number" pos:start="245:26" pos:end="245:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="251:9" pos:end="301:9"><if pos:start="251:9" pos:end="301:9">if <condition pos:start="251:12" pos:end="251:23">(<expr pos:start="251:13" pos:end="251:22"><name pos:start="251:13" pos:end="251:22">got_packet</name></expr>)</condition> <block pos:start="251:25" pos:end="301:9">{<block_content pos:start="253:13" pos:end="299:13">

            <if_stmt pos:start="253:13" pos:end="255:41"><if pos:start="253:13" pos:end="255:41">if <condition pos:start="253:16" pos:end="253:91">(<expr pos:start="253:17" pos:end="253:90"><name pos:start="253:17" pos:end="253:23"><name pos:start="253:17" pos:end="253:19">pkt</name><operator pos:start="253:20" pos:end="253:20">.</operator><name pos:start="253:21" pos:end="253:23">pts</name></name> <operator pos:start="253:25" pos:end="253:26">==</operator> <name pos:start="253:28" pos:end="253:41">AV_NOPTS_VALUE</name> <operator pos:start="253:43" pos:end="253:44">&amp;&amp;</operator> <operator pos:start="253:46" pos:end="253:46">!</operator><operator pos:start="253:47" pos:end="253:47">(</operator><name pos:start="253:48" pos:end="253:71"><name pos:start="253:48" pos:end="253:50">enc</name><operator pos:start="253:51" pos:end="253:52">-&gt;</operator><name pos:start="253:53" pos:end="253:57">codec</name><operator pos:start="253:58" pos:end="253:59">-&gt;</operator><name pos:start="253:60" pos:end="253:71">capabilities</name></name> <operator pos:start="253:73" pos:end="253:73">&amp;</operator> <name pos:start="253:75" pos:end="253:89">CODEC_CAP_DELAY</name><operator pos:start="253:90" pos:end="253:90">)</operator></expr>)</condition><block type="pseudo" pos:start="255:17" pos:end="255:41"><block_content pos:start="255:17" pos:end="255:41">

                <expr_stmt pos:start="255:17" pos:end="255:41"><expr pos:start="255:17" pos:end="255:40"><name pos:start="255:17" pos:end="255:23"><name pos:start="255:17" pos:end="255:19">pkt</name><operator pos:start="255:20" pos:end="255:20">.</operator><name pos:start="255:21" pos:end="255:23">pts</name></name> <operator pos:start="255:25" pos:end="255:25">=</operator> <name pos:start="255:27" pos:end="255:40"><name pos:start="255:27" pos:end="255:29">ost</name><operator pos:start="255:30" pos:end="255:31">-&gt;</operator><name pos:start="255:32" pos:end="255:40">sync_opts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="259:13" pos:end="261:84"><if pos:start="259:13" pos:end="261:84">if <condition pos:start="259:16" pos:end="259:42">(<expr pos:start="259:17" pos:end="259:41"><name pos:start="259:17" pos:end="259:23"><name pos:start="259:17" pos:end="259:19">pkt</name><operator pos:start="259:20" pos:end="259:20">.</operator><name pos:start="259:21" pos:end="259:23">pts</name></name> <operator pos:start="259:25" pos:end="259:26">!=</operator> <name pos:start="259:28" pos:end="259:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="261:17" pos:end="261:84"><block_content pos:start="261:17" pos:end="261:84">

                <expr_stmt pos:start="261:17" pos:end="261:84"><expr pos:start="261:17" pos:end="261:83"><name pos:start="261:17" pos:end="261:23"><name pos:start="261:17" pos:end="261:19">pkt</name><operator pos:start="261:20" pos:end="261:20">.</operator><name pos:start="261:21" pos:end="261:23">pts</name></name> <operator pos:start="261:25" pos:end="261:25">=</operator> <call pos:start="261:27" pos:end="261:83"><name pos:start="261:27" pos:end="261:38">av_rescale_q</name><argument_list pos:start="261:39" pos:end="261:83">(<argument pos:start="261:40" pos:end="261:46"><expr pos:start="261:40" pos:end="261:46"><name pos:start="261:40" pos:end="261:46"><name pos:start="261:40" pos:end="261:42">pkt</name><operator pos:start="261:43" pos:end="261:43">.</operator><name pos:start="261:44" pos:end="261:46">pts</name></name></expr></argument>, <argument pos:start="261:49" pos:end="261:62"><expr pos:start="261:49" pos:end="261:62"><name pos:start="261:49" pos:end="261:62"><name pos:start="261:49" pos:end="261:51">enc</name><operator pos:start="261:52" pos:end="261:53">-&gt;</operator><name pos:start="261:54" pos:end="261:62">time_base</name></name></expr></argument>, <argument pos:start="261:65" pos:end="261:82"><expr pos:start="261:65" pos:end="261:82"><name pos:start="261:65" pos:end="261:82"><name pos:start="261:65" pos:end="261:67">ost</name><operator pos:start="261:68" pos:end="261:69">-&gt;</operator><name pos:start="261:70" pos:end="261:71">st</name><operator pos:start="261:72" pos:end="261:73">-&gt;</operator><name pos:start="261:74" pos:end="261:82">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="263:13" pos:end="265:84"><if pos:start="263:13" pos:end="265:84">if <condition pos:start="263:16" pos:end="263:42">(<expr pos:start="263:17" pos:end="263:41"><name pos:start="263:17" pos:end="263:23"><name pos:start="263:17" pos:end="263:19">pkt</name><operator pos:start="263:20" pos:end="263:20">.</operator><name pos:start="263:21" pos:end="263:23">dts</name></name> <operator pos:start="263:25" pos:end="263:26">!=</operator> <name pos:start="263:28" pos:end="263:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="265:17" pos:end="265:84"><block_content pos:start="265:17" pos:end="265:84">

                <expr_stmt pos:start="265:17" pos:end="265:84"><expr pos:start="265:17" pos:end="265:83"><name pos:start="265:17" pos:end="265:23"><name pos:start="265:17" pos:end="265:19">pkt</name><operator pos:start="265:20" pos:end="265:20">.</operator><name pos:start="265:21" pos:end="265:23">dts</name></name> <operator pos:start="265:25" pos:end="265:25">=</operator> <call pos:start="265:27" pos:end="265:83"><name pos:start="265:27" pos:end="265:38">av_rescale_q</name><argument_list pos:start="265:39" pos:end="265:83">(<argument pos:start="265:40" pos:end="265:46"><expr pos:start="265:40" pos:end="265:46"><name pos:start="265:40" pos:end="265:46"><name pos:start="265:40" pos:end="265:42">pkt</name><operator pos:start="265:43" pos:end="265:43">.</operator><name pos:start="265:44" pos:end="265:46">dts</name></name></expr></argument>, <argument pos:start="265:49" pos:end="265:62"><expr pos:start="265:49" pos:end="265:62"><name pos:start="265:49" pos:end="265:62"><name pos:start="265:49" pos:end="265:51">enc</name><operator pos:start="265:52" pos:end="265:53">-&gt;</operator><name pos:start="265:54" pos:end="265:62">time_base</name></name></expr></argument>, <argument pos:start="265:65" pos:end="265:82"><expr pos:start="265:65" pos:end="265:82"><name pos:start="265:65" pos:end="265:82"><name pos:start="265:65" pos:end="265:67">ost</name><operator pos:start="265:68" pos:end="265:69">-&gt;</operator><name pos:start="265:70" pos:end="265:71">st</name><operator pos:start="265:72" pos:end="265:73">-&gt;</operator><name pos:start="265:74" pos:end="265:82">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="269:13" pos:end="279:13"><if pos:start="269:13" pos:end="279:13">if <condition pos:start="269:16" pos:end="269:25">(<expr pos:start="269:17" pos:end="269:24"><name pos:start="269:17" pos:end="269:24">debug_ts</name></expr>)</condition> <block pos:start="269:27" pos:end="279:13">{<block_content pos:start="271:17" pos:end="277:85">

                <expr_stmt pos:start="271:17" pos:end="277:85"><expr pos:start="271:17" pos:end="277:84"><call pos:start="271:17" pos:end="277:84"><name pos:start="271:17" pos:end="271:22">av_log</name><argument_list pos:start="271:23" pos:end="277:84">(<argument pos:start="271:24" pos:end="271:27"><expr pos:start="271:24" pos:end="271:27"><name pos:start="271:24" pos:end="271:27">NULL</name></expr></argument>, <argument pos:start="271:30" pos:end="271:40"><expr pos:start="271:30" pos:end="271:40"><name pos:start="271:30" pos:end="271:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="271:43" pos:end="273:77"><expr pos:start="271:43" pos:end="273:77"><literal type="string" pos:start="271:43" pos:end="271:66">"encoder -&gt; type:video "</literal>

                    <literal type="string" pos:start="273:21" pos:end="273:77">"pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s\n"</literal></expr></argument>,

                    <argument pos:start="275:21" pos:end="275:38"><expr pos:start="275:21" pos:end="275:38"><call pos:start="275:21" pos:end="275:38"><name pos:start="275:21" pos:end="275:29">av_ts2str</name><argument_list pos:start="275:30" pos:end="275:38">(<argument pos:start="275:31" pos:end="275:37"><expr pos:start="275:31" pos:end="275:37"><name pos:start="275:31" pos:end="275:37"><name pos:start="275:31" pos:end="275:33">pkt</name><operator pos:start="275:34" pos:end="275:34">.</operator><name pos:start="275:35" pos:end="275:37">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="275:41" pos:end="275:83"><expr pos:start="275:41" pos:end="275:83"><call pos:start="275:41" pos:end="275:83"><name pos:start="275:41" pos:end="275:53">av_ts2timestr</name><argument_list pos:start="275:54" pos:end="275:83">(<argument pos:start="275:55" pos:end="275:61"><expr pos:start="275:55" pos:end="275:61"><name pos:start="275:55" pos:end="275:61"><name pos:start="275:55" pos:end="275:57">pkt</name><operator pos:start="275:58" pos:end="275:58">.</operator><name pos:start="275:59" pos:end="275:61">pts</name></name></expr></argument>, <argument pos:start="275:64" pos:end="275:82"><expr pos:start="275:64" pos:end="275:82"><operator pos:start="275:64" pos:end="275:64">&amp;</operator><name pos:start="275:65" pos:end="275:82"><name pos:start="275:65" pos:end="275:67">ost</name><operator pos:start="275:68" pos:end="275:69">-&gt;</operator><name pos:start="275:70" pos:end="275:71">st</name><operator pos:start="275:72" pos:end="275:73">-&gt;</operator><name pos:start="275:74" pos:end="275:82">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="277:21" pos:end="277:38"><expr pos:start="277:21" pos:end="277:38"><call pos:start="277:21" pos:end="277:38"><name pos:start="277:21" pos:end="277:29">av_ts2str</name><argument_list pos:start="277:30" pos:end="277:38">(<argument pos:start="277:31" pos:end="277:37"><expr pos:start="277:31" pos:end="277:37"><name pos:start="277:31" pos:end="277:37"><name pos:start="277:31" pos:end="277:33">pkt</name><operator pos:start="277:34" pos:end="277:34">.</operator><name pos:start="277:35" pos:end="277:37">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="277:41" pos:end="277:83"><expr pos:start="277:41" pos:end="277:83"><call pos:start="277:41" pos:end="277:83"><name pos:start="277:41" pos:end="277:53">av_ts2timestr</name><argument_list pos:start="277:54" pos:end="277:83">(<argument pos:start="277:55" pos:end="277:61"><expr pos:start="277:55" pos:end="277:61"><name pos:start="277:55" pos:end="277:61"><name pos:start="277:55" pos:end="277:57">pkt</name><operator pos:start="277:58" pos:end="277:58">.</operator><name pos:start="277:59" pos:end="277:61">dts</name></name></expr></argument>, <argument pos:start="277:64" pos:end="277:82"><expr pos:start="277:64" pos:end="277:82"><operator pos:start="277:64" pos:end="277:64">&amp;</operator><name pos:start="277:65" pos:end="277:82"><name pos:start="277:65" pos:end="277:67">ost</name><operator pos:start="277:68" pos:end="277:69">-&gt;</operator><name pos:start="277:70" pos:end="277:71">st</name><operator pos:start="277:72" pos:end="277:73">-&gt;</operator><name pos:start="277:74" pos:end="277:82">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="283:13" pos:end="283:38"><expr pos:start="283:13" pos:end="283:37"><call pos:start="283:13" pos:end="283:37"><name pos:start="283:13" pos:end="283:23">write_frame</name><argument_list pos:start="283:24" pos:end="283:37">(<argument pos:start="283:25" pos:end="283:25"><expr pos:start="283:25" pos:end="283:25"><name pos:start="283:25" pos:end="283:25">s</name></expr></argument>, <argument pos:start="283:28" pos:end="283:31"><expr pos:start="283:28" pos:end="283:31"><operator pos:start="283:28" pos:end="283:28">&amp;</operator><name pos:start="283:29" pos:end="283:31">pkt</name></expr></argument>, <argument pos:start="283:34" pos:end="283:36"><expr pos:start="283:34" pos:end="283:36"><name pos:start="283:34" pos:end="283:36">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:34"><expr pos:start="285:13" pos:end="285:33"><name pos:start="285:13" pos:end="285:22">frame_size</name> <operator pos:start="285:24" pos:end="285:24">=</operator> <name pos:start="285:26" pos:end="285:33"><name pos:start="285:26" pos:end="285:28">pkt</name><operator pos:start="285:29" pos:end="285:29">.</operator><name pos:start="285:30" pos:end="285:33">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:35"><expr pos:start="287:13" pos:end="287:34"><name pos:start="287:13" pos:end="287:22">video_size</name> <operator pos:start="287:24" pos:end="287:25">+=</operator> <name pos:start="287:27" pos:end="287:34"><name pos:start="287:27" pos:end="287:29">pkt</name><operator pos:start="287:30" pos:end="287:30">.</operator><name pos:start="287:31" pos:end="287:34">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:33"><expr pos:start="289:13" pos:end="289:32"><call pos:start="289:13" pos:end="289:32"><name pos:start="289:13" pos:end="289:26">av_free_packet</name><argument_list pos:start="289:27" pos:end="289:32">(<argument pos:start="289:28" pos:end="289:31"><expr pos:start="289:28" pos:end="289:31"><operator pos:start="289:28" pos:end="289:28">&amp;</operator><name pos:start="289:29" pos:end="289:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="293:13" pos:end="293:41">/* if two pass, output log */</comment>

            <if_stmt pos:start="295:13" pos:end="299:13"><if pos:start="295:13" pos:end="299:13">if <condition pos:start="295:16" pos:end="295:47">(<expr pos:start="295:17" pos:end="295:46"><name pos:start="295:17" pos:end="295:28"><name pos:start="295:17" pos:end="295:19">ost</name><operator pos:start="295:20" pos:end="295:21">-&gt;</operator><name pos:start="295:22" pos:end="295:28">logfile</name></name> <operator pos:start="295:30" pos:end="295:31">&amp;&amp;</operator> <name pos:start="295:33" pos:end="295:46"><name pos:start="295:33" pos:end="295:35">enc</name><operator pos:start="295:36" pos:end="295:37">-&gt;</operator><name pos:start="295:38" pos:end="295:46">stats_out</name></name></expr>)</condition> <block pos:start="295:49" pos:end="299:13">{<block_content pos:start="297:17" pos:end="297:60">

                <expr_stmt pos:start="297:17" pos:end="297:60"><expr pos:start="297:17" pos:end="297:59"><call pos:start="297:17" pos:end="297:59"><name pos:start="297:17" pos:end="297:23">fprintf</name><argument_list pos:start="297:24" pos:end="297:59">(<argument pos:start="297:25" pos:end="297:36"><expr pos:start="297:25" pos:end="297:36"><name pos:start="297:25" pos:end="297:36"><name pos:start="297:25" pos:end="297:27">ost</name><operator pos:start="297:28" pos:end="297:29">-&gt;</operator><name pos:start="297:30" pos:end="297:36">logfile</name></name></expr></argument>, <argument pos:start="297:39" pos:end="297:42"><expr pos:start="297:39" pos:end="297:42"><literal type="string" pos:start="297:39" pos:end="297:42">"%s"</literal></expr></argument>, <argument pos:start="297:45" pos:end="297:58"><expr pos:start="297:45" pos:end="297:58"><name pos:start="297:45" pos:end="297:58"><name pos:start="297:45" pos:end="297:47">enc</name><operator pos:start="297:48" pos:end="297:49">-&gt;</operator><name pos:start="297:50" pos:end="297:58">stats_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:21"><expr pos:start="305:5" pos:end="305:20"><name pos:start="305:5" pos:end="305:18"><name pos:start="305:5" pos:end="305:7">ost</name><operator pos:start="305:8" pos:end="305:9">-&gt;</operator><name pos:start="305:10" pos:end="305:18">sync_opts</name></name><operator pos:start="305:19" pos:end="305:20">++</operator></expr>;</expr_stmt>

    <comment type="block" pos:start="307:5" pos:end="315:7">/*

     * For video, number of frames in == number of packets out.

     * But there may be reordering, so we can't throw away frames on encoder

     * flush, we need to limit them here, before they go into encoder.

     */</comment>

    <expr_stmt pos:start="317:5" pos:end="317:24"><expr pos:start="317:5" pos:end="317:23"><name pos:start="317:5" pos:end="317:21"><name pos:start="317:5" pos:end="317:7">ost</name><operator pos:start="317:8" pos:end="317:9">-&gt;</operator><name pos:start="317:10" pos:end="317:21">frame_number</name></name><operator pos:start="317:22" pos:end="317:23">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="321:5" pos:end="323:29"><if pos:start="321:5" pos:end="323:29">if<condition pos:start="321:7" pos:end="321:19">(<expr pos:start="321:8" pos:end="321:18"><operator pos:start="321:8" pos:end="321:9">--</operator><name pos:start="321:10" pos:end="321:18">nb_frames</name></expr>)</condition><block type="pseudo" pos:start="323:9" pos:end="323:29"><block_content pos:start="323:9" pos:end="323:29">

        <goto pos:start="323:9" pos:end="323:29">goto <name pos:start="323:14" pos:end="323:28">duplicate_frame</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="327:5" pos:end="329:76"><if pos:start="327:5" pos:end="329:76">if <condition pos:start="327:8" pos:end="327:38">(<expr pos:start="327:9" pos:end="327:37"><name pos:start="327:9" pos:end="327:23">vstats_filename</name> <operator pos:start="327:25" pos:end="327:26">&amp;&amp;</operator> <name pos:start="327:28" pos:end="327:37">frame_size</name></expr>)</condition><block type="pseudo" pos:start="329:9" pos:end="329:76"><block_content pos:start="329:9" pos:end="329:76">

        <expr_stmt pos:start="329:9" pos:end="329:76"><expr pos:start="329:9" pos:end="329:75"><call pos:start="329:9" pos:end="329:75"><name pos:start="329:9" pos:end="329:22">do_video_stats</name><argument_list pos:start="329:23" pos:end="329:75">(<argument pos:start="329:24" pos:end="329:57"><expr pos:start="329:24" pos:end="329:57"><name pos:start="329:24" pos:end="329:52"><name pos:start="329:24" pos:end="329:35">output_files</name><index pos:start="329:36" pos:end="329:52">[<expr pos:start="329:37" pos:end="329:51"><name pos:start="329:37" pos:end="329:51"><name pos:start="329:37" pos:end="329:39">ost</name><operator pos:start="329:40" pos:end="329:41">-&gt;</operator><name pos:start="329:42" pos:end="329:51">file_index</name></name></expr>]</index></name><operator pos:start="329:53" pos:end="329:54">-&gt;</operator><name pos:start="329:55" pos:end="329:57">ctx</name></expr></argument>, <argument pos:start="329:60" pos:end="329:62"><expr pos:start="329:60" pos:end="329:62"><name pos:start="329:60" pos:end="329:62">ost</name></expr></argument>, <argument pos:start="329:65" pos:end="329:74"><expr pos:start="329:65" pos:end="329:74"><name pos:start="329:65" pos:end="329:74">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
