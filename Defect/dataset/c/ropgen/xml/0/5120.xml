<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5120.c" pos:tabs="8"><function pos:start="1:1" pos:end="1307:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">transcode_init</name><parameter_list pos:start="1:26" pos:end="1:31">(<parameter pos:start="1:27" pos:end="1:30"><decl pos:start="1:27" pos:end="1:30"><type pos:start="1:27" pos:end="1:30"><name pos:start="1:27" pos:end="1:30">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1307:1">{<block_content pos:start="5:5" pos:end="1305:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">i</name></decl>, <decl pos:start="5:21" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:21">j</name></decl>, <decl pos:start="5:24" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:24">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">OutputStream</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">InputStream</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">ist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:20"><name pos:start="13:10" pos:end="13:14">error</name><index pos:start="13:15" pos:end="13:20">[<expr pos:start="13:16" pos:end="13:19"><literal type="number" pos:start="13:16" pos:end="13:19">1024</literal></expr>]</index></name> <init pos:start="13:22" pos:end="13:26">= <expr pos:start="13:24" pos:end="13:26"><block pos:start="13:24" pos:end="13:26">{<expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">want_sdp</name> <init pos:start="15:18" pos:end="15:20">= <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">1</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="45:5">for <control pos:start="19:9" pos:end="19:41">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:36"><expr pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:35">nb_filtergraphs</name></expr>;</condition> <incr pos:start="19:38" pos:end="19:40"><expr pos:start="19:38" pos:end="19:40"><name pos:start="19:38" pos:end="19:38">i</name><operator pos:start="19:39" pos:end="19:40">++</operator></expr></incr>)</control> <block pos:start="19:43" pos:end="45:5">{<block_content pos:start="21:9" pos:end="43:9">

        <decl_stmt pos:start="21:9" pos:end="21:42"><decl pos:start="21:9" pos:end="21:41"><type pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:19">FilterGraph</name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:23">fg</name> <init pos:start="21:25" pos:end="21:41">= <expr pos:start="21:27" pos:end="21:41"><name pos:start="21:27" pos:end="21:41"><name pos:start="21:27" pos:end="21:38">filtergraphs</name><index pos:start="21:39" pos:end="21:41">[<expr pos:start="21:40" pos:end="21:40"><name pos:start="21:40" pos:end="21:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="23:9" pos:end="43:9">for <control pos:start="23:13" pos:end="23:44">(<init pos:start="23:14" pos:end="23:19"><expr pos:start="23:14" pos:end="23:18"><name pos:start="23:14" pos:end="23:14">j</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</init> <condition pos:start="23:21" pos:end="23:39"><expr pos:start="23:21" pos:end="23:38"><name pos:start="23:21" pos:end="23:21">j</name> <operator pos:start="23:23" pos:end="23:23">&lt;</operator> <name pos:start="23:25" pos:end="23:38"><name pos:start="23:25" pos:end="23:26">fg</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:38">nb_outputs</name></name></expr>;</condition> <incr pos:start="23:41" pos:end="23:43"><expr pos:start="23:41" pos:end="23:43"><name pos:start="23:41" pos:end="23:41">j</name><operator pos:start="23:42" pos:end="23:43">++</operator></expr></incr>)</control> <block pos:start="23:46" pos:end="43:9">{<block_content pos:start="25:13" pos:end="41:43">

            <decl_stmt pos:start="25:13" pos:end="25:51"><decl pos:start="25:13" pos:end="25:50"><type pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:24">OutputFilter</name> <modifier pos:start="25:26" pos:end="25:26">*</modifier></type><name pos:start="25:27" pos:end="25:33">ofilter</name> <init pos:start="25:35" pos:end="25:50">= <expr pos:start="25:37" pos:end="25:50"><name pos:start="25:37" pos:end="25:50"><name pos:start="25:37" pos:end="25:38">fg</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:47">outputs</name><index pos:start="25:48" pos:end="25:50">[<expr pos:start="25:49" pos:end="25:49"><name pos:start="25:49" pos:end="25:49">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="27:13" pos:end="29:25"><if pos:start="27:13" pos:end="29:25">if <condition pos:start="27:16" pos:end="27:65">(<expr pos:start="27:17" pos:end="27:64"><operator pos:start="27:17" pos:end="27:17">!</operator><name pos:start="27:18" pos:end="27:29"><name pos:start="27:18" pos:end="27:24">ofilter</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:29">ost</name></name> <operator pos:start="27:31" pos:end="27:32">||</operator> <name pos:start="27:34" pos:end="27:59"><name pos:start="27:34" pos:end="27:40">ofilter</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:45">ost</name><operator pos:start="27:46" pos:end="27:47">-&gt;</operator><name pos:start="27:48" pos:end="27:59">source_index</name></name> <operator pos:start="27:61" pos:end="27:62">&gt;=</operator> <literal type="number" pos:start="27:64" pos:end="27:64">0</literal></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:25"><block_content pos:start="29:17" pos:end="29:25">

                <continue pos:start="29:17" pos:end="29:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="31:13" pos:end="33:25"><if pos:start="31:13" pos:end="33:25">if <condition pos:start="31:16" pos:end="31:35">(<expr pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:29"><name pos:start="31:17" pos:end="31:18">fg</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:29">nb_inputs</name></name> <operator pos:start="31:31" pos:end="31:32">!=</operator> <literal type="number" pos:start="31:34" pos:end="31:34">1</literal></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:25"><block_content pos:start="33:17" pos:end="33:25">

                <continue pos:start="33:17" pos:end="33:25">continue;</continue></block_content></block></if></if_stmt>

            <for pos:start="35:13" pos:end="39:26">for <control pos:start="35:17" pos:end="35:54">(<init pos:start="35:18" pos:end="35:40"><expr pos:start="35:18" pos:end="35:39"><name pos:start="35:18" pos:end="35:18">k</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:37">nb_input_streams</name><operator pos:start="35:38" pos:end="35:38">-</operator><literal type="number" pos:start="35:39" pos:end="35:39">1</literal></expr>;</init> <condition pos:start="35:42" pos:end="35:49"><expr pos:start="35:42" pos:end="35:47"><name pos:start="35:42" pos:end="35:42">k</name> <operator pos:start="35:44" pos:end="35:45">&gt;=</operator> <literal type="number" pos:start="35:47" pos:end="35:47">0</literal></expr> ;</condition> <incr pos:start="35:51" pos:end="35:53"><expr pos:start="35:51" pos:end="35:53"><name pos:start="35:51" pos:end="35:51">k</name><operator pos:start="35:52" pos:end="35:53">--</operator></expr></incr>)</control><block type="pseudo" pos:start="37:17" pos:end="39:26"><block_content pos:start="37:17" pos:end="39:26">

                <if_stmt pos:start="37:17" pos:end="39:26"><if pos:start="37:17" pos:end="39:26">if <condition pos:start="37:20" pos:end="37:59">(<expr pos:start="37:21" pos:end="37:58"><name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:22">fg</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:30">inputs</name><index pos:start="37:31" pos:end="37:33">[<expr pos:start="37:32" pos:end="37:32"><literal type="number" pos:start="37:32" pos:end="37:32">0</literal></expr>]</index></name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:38">ist</name> <operator pos:start="37:40" pos:end="37:41">==</operator> <name pos:start="37:43" pos:end="37:58"><name pos:start="37:43" pos:end="37:55">input_streams</name><index pos:start="37:56" pos:end="37:58">[<expr pos:start="37:57" pos:end="37:57"><name pos:start="37:57" pos:end="37:57">k</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="39:21" pos:end="39:26"><block_content pos:start="39:21" pos:end="39:26">

                    <break pos:start="39:21" pos:end="39:26">break;</break></block_content></block></if></if_stmt></block_content></block></for>

            <expr_stmt pos:start="41:13" pos:end="41:43"><expr pos:start="41:13" pos:end="41:42"><name pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:19">ofilter</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:24">ost</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:38">source_index</name></name> <operator pos:start="41:40" pos:end="41:40">=</operator> <name pos:start="41:42" pos:end="41:42">k</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="49:5" pos:end="49:34">/* init framerate emulation */</comment>

    <for pos:start="51:5" pos:end="61:5">for <control pos:start="51:9" pos:end="51:40">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:35"><expr pos:start="51:17" pos:end="51:34"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:34">nb_input_files</name></expr>;</condition> <incr pos:start="51:37" pos:end="51:39"><expr pos:start="51:37" pos:end="51:39"><name pos:start="51:37" pos:end="51:37">i</name><operator pos:start="51:38" pos:end="51:39">++</operator></expr></incr>)</control> <block pos:start="51:42" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:83">

        <decl_stmt pos:start="53:9" pos:end="53:42"><decl pos:start="53:9" pos:end="53:41"><type pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:17">InputFile</name> <modifier pos:start="53:19" pos:end="53:19">*</modifier></type><name pos:start="53:20" pos:end="53:24">ifile</name> <init pos:start="53:26" pos:end="53:41">= <expr pos:start="53:28" pos:end="53:41"><name pos:start="53:28" pos:end="53:41"><name pos:start="53:28" pos:end="53:38">input_files</name><index pos:start="53:39" pos:end="53:41">[<expr pos:start="53:40" pos:end="53:40"><name pos:start="53:40" pos:end="53:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="55:9" pos:end="59:83"><if pos:start="55:9" pos:end="59:83">if <condition pos:start="55:12" pos:end="55:28">(<expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:17">ifile</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:27">rate_emu</name></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="59:83"><block_content pos:start="57:13" pos:end="59:83">

            <for pos:start="57:13" pos:end="59:83">for <control pos:start="57:17" pos:end="57:51">(<init pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:22"><name pos:start="57:18" pos:end="57:18">j</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</init> <condition pos:start="57:25" pos:end="57:46"><expr pos:start="57:25" pos:end="57:45"><name pos:start="57:25" pos:end="57:25">j</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <name pos:start="57:29" pos:end="57:45"><name pos:start="57:29" pos:end="57:33">ifile</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:45">nb_streams</name></name></expr>;</condition> <incr pos:start="57:48" pos:end="57:50"><expr pos:start="57:48" pos:end="57:50"><name pos:start="57:48" pos:end="57:48">j</name><operator pos:start="57:49" pos:end="57:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:17" pos:end="59:83"><block_content pos:start="59:17" pos:end="59:83">

                <expr_stmt pos:start="59:17" pos:end="59:83"><expr pos:start="59:17" pos:end="59:82"><name pos:start="59:17" pos:end="59:51"><name pos:start="59:17" pos:end="59:29">input_streams</name><index pos:start="59:30" pos:end="59:51">[<expr pos:start="59:31" pos:end="59:50"><name pos:start="59:31" pos:end="59:31">j</name> <operator pos:start="59:33" pos:end="59:33">+</operator> <name pos:start="59:35" pos:end="59:50"><name pos:start="59:35" pos:end="59:39">ifile</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:50">ist_index</name></name></expr>]</index></name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:58">start</name> <operator pos:start="59:60" pos:end="59:60">=</operator> <call pos:start="59:62" pos:end="59:82"><name pos:start="59:62" pos:end="59:80">av_gettime_relative</name><argument_list pos:start="59:81" pos:end="59:82">()</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="65:5" pos:end="65:28">/* output stream init */</comment>

    <for pos:start="67:5" pos:end="81:5">for <control pos:start="67:9" pos:end="67:41">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:36"><expr pos:start="67:17" pos:end="67:35"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <name pos:start="67:21" pos:end="67:35">nb_output_files</name></expr>;</condition> <incr pos:start="67:38" pos:end="67:40"><expr pos:start="67:38" pos:end="67:40"><name pos:start="67:38" pos:end="67:38">i</name><operator pos:start="67:39" pos:end="67:40">++</operator></expr></incr>)</control> <block pos:start="67:43" pos:end="81:5">{<block_content pos:start="69:9" pos:end="79:9">

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:10">oc</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <name pos:start="69:14" pos:end="69:28"><name pos:start="69:14" pos:end="69:25">output_files</name><index pos:start="69:26" pos:end="69:28">[<expr pos:start="69:27" pos:end="69:27"><name pos:start="69:27" pos:end="69:27">i</name></expr>]</index></name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:33">ctx</name></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="79:9"><if pos:start="71:9" pos:end="79:9">if <condition pos:start="71:12" pos:end="71:71">(<expr pos:start="71:13" pos:end="71:70"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:27"><name pos:start="71:14" pos:end="71:15">oc</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:27">nb_streams</name></name> <operator pos:start="71:29" pos:end="71:30">&amp;&amp;</operator> <operator pos:start="71:32" pos:end="71:32">!</operator><operator pos:start="71:33" pos:end="71:33">(</operator><name pos:start="71:34" pos:end="71:51"><name pos:start="71:34" pos:end="71:35">oc</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:44">oformat</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:51">flags</name></name> <operator pos:start="71:53" pos:end="71:53">&amp;</operator> <name pos:start="71:55" pos:end="71:69">AVFMT_NOSTREAMS</name><operator pos:start="71:70" pos:end="71:70">)</operator></expr>)</condition> <block pos:start="71:73" pos:end="79:9">{<block_content pos:start="73:13" pos:end="77:35">

            <expr_stmt pos:start="73:13" pos:end="73:51"><expr pos:start="73:13" pos:end="73:50"><call pos:start="73:13" pos:end="73:50"><name pos:start="73:13" pos:end="73:26">av_dump_format</name><argument_list pos:start="73:27" pos:end="73:50">(<argument pos:start="73:28" pos:end="73:29"><expr pos:start="73:28" pos:end="73:29"><name pos:start="73:28" pos:end="73:29">oc</name></expr></argument>, <argument pos:start="73:32" pos:end="73:32"><expr pos:start="73:32" pos:end="73:32"><name pos:start="73:32" pos:end="73:32">i</name></expr></argument>, <argument pos:start="73:35" pos:end="73:46"><expr pos:start="73:35" pos:end="73:46"><name pos:start="73:35" pos:end="73:46"><name pos:start="73:35" pos:end="73:36">oc</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:46">filename</name></name></expr></argument>, <argument pos:start="73:49" pos:end="73:49"><expr pos:start="73:49" pos:end="73:49"><literal type="number" pos:start="73:49" pos:end="73:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:91"><expr pos:start="75:13" pos:end="75:90"><call pos:start="75:13" pos:end="75:90"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="75:90">(<argument pos:start="75:20" pos:end="75:23"><expr pos:start="75:20" pos:end="75:23"><name pos:start="75:20" pos:end="75:23">NULL</name></expr></argument>, <argument pos:start="75:26" pos:end="75:37"><expr pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:40" pos:end="75:86"><expr pos:start="75:40" pos:end="75:86"><literal type="string" pos:start="75:40" pos:end="75:86">"Output file #%d does not contain any stream\n"</literal></expr></argument>, <argument pos:start="75:89" pos:end="75:89"><expr pos:start="75:89" pos:end="75:89"><name pos:start="75:89" pos:end="75:89">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:35">return <expr pos:start="77:20" pos:end="77:34"><call pos:start="77:20" pos:end="77:34"><name pos:start="77:20" pos:end="77:26">AVERROR</name><argument_list pos:start="77:27" pos:end="77:34">(<argument pos:start="77:28" pos:end="77:33"><expr pos:start="77:28" pos:end="77:33"><name pos:start="77:28" pos:end="77:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="85:5" pos:end="85:35">/* init complex filtergraphs */</comment>

    <for pos:start="87:5" pos:end="91:23">for <control pos:start="87:9" pos:end="87:41">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:36"><expr pos:start="87:17" pos:end="87:35"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <name pos:start="87:21" pos:end="87:35">nb_filtergraphs</name></expr>;</condition> <incr pos:start="87:38" pos:end="87:40"><expr pos:start="87:38" pos:end="87:40"><name pos:start="87:38" pos:end="87:38">i</name><operator pos:start="87:39" pos:end="87:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:9" pos:end="91:23"><block_content pos:start="89:9" pos:end="91:23">

        <if_stmt pos:start="89:9" pos:end="91:23"><if pos:start="89:9" pos:end="91:23">if <condition pos:start="89:12" pos:end="89:76">(<expr pos:start="89:13" pos:end="89:75"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:16">ret</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:70"><name pos:start="89:20" pos:end="89:40">avfilter_graph_config</name><argument_list pos:start="89:41" pos:end="89:70">(<argument pos:start="89:42" pos:end="89:63"><expr pos:start="89:42" pos:end="89:63"><name pos:start="89:42" pos:end="89:56"><name pos:start="89:42" pos:end="89:53">filtergraphs</name><index pos:start="89:54" pos:end="89:56">[<expr pos:start="89:55" pos:end="89:55"><name pos:start="89:55" pos:end="89:55">i</name></expr>]</index></name><operator pos:start="89:57" pos:end="89:58">-&gt;</operator><name pos:start="89:59" pos:end="89:63">graph</name></expr></argument>, <argument pos:start="89:66" pos:end="89:69"><expr pos:start="89:66" pos:end="89:69"><name pos:start="89:66" pos:end="89:69">NULL</name></expr></argument>)</argument_list></call><operator pos:start="89:71" pos:end="89:71">)</operator> <operator pos:start="89:73" pos:end="89:73">&lt;</operator> <literal type="number" pos:start="89:75" pos:end="89:75">0</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:23"><block_content pos:start="91:13" pos:end="91:23">

            <return pos:start="91:13" pos:end="91:23">return <expr pos:start="91:20" pos:end="91:22"><name pos:start="91:20" pos:end="91:22">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>



    <comment type="block" pos:start="95:5" pos:end="95:74">/* for each output stream, we compute the right encoding parameters */</comment>

    <for pos:start="97:5" pos:end="889:5">for <control pos:start="97:9" pos:end="97:43">(<init pos:start="97:10" pos:end="97:15"><expr pos:start="97:10" pos:end="97:14"><name pos:start="97:10" pos:end="97:10">i</name> <operator pos:start="97:12" pos:end="97:12">=</operator> <literal type="number" pos:start="97:14" pos:end="97:14">0</literal></expr>;</init> <condition pos:start="97:17" pos:end="97:38"><expr pos:start="97:17" pos:end="97:37"><name pos:start="97:17" pos:end="97:17">i</name> <operator pos:start="97:19" pos:end="97:19">&lt;</operator> <name pos:start="97:21" pos:end="97:37">nb_output_streams</name></expr>;</condition> <incr pos:start="97:40" pos:end="97:42"><expr pos:start="97:40" pos:end="97:42"><name pos:start="97:40" pos:end="97:40">i</name><operator pos:start="97:41" pos:end="97:42">++</operator></expr></incr>)</control> <block pos:start="97:45" pos:end="889:5">{<block_content pos:start="99:9" pos:end="887:9">

        <decl_stmt pos:start="99:9" pos:end="99:32"><decl pos:start="99:9" pos:end="99:31"><type pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:22">AVCodecContext</name> <modifier pos:start="99:24" pos:end="99:24">*</modifier></type><name pos:start="99:25" pos:end="99:31">enc_ctx</name></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="101:39"><decl pos:start="101:9" pos:end="101:38"><type pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:22">AVCodecContext</name> <modifier pos:start="101:24" pos:end="101:24">*</modifier></type><name pos:start="101:25" pos:end="101:31">dec_ctx</name> <init pos:start="101:33" pos:end="101:38">= <expr pos:start="101:35" pos:end="101:38"><name pos:start="101:35" pos:end="101:38">NULL</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:32"><expr pos:start="103:9" pos:end="103:31"><name pos:start="103:9" pos:end="103:11">ost</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <name pos:start="103:15" pos:end="103:31"><name pos:start="103:15" pos:end="103:28">output_streams</name><index pos:start="103:29" pos:end="103:31">[<expr pos:start="103:30" pos:end="103:30"><name pos:start="103:30" pos:end="103:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:49"><expr pos:start="105:9" pos:end="105:48"><name pos:start="105:9" pos:end="105:10">oc</name>  <operator pos:start="105:13" pos:end="105:13">=</operator> <name pos:start="105:15" pos:end="105:43"><name pos:start="105:15" pos:end="105:26">output_files</name><index pos:start="105:27" pos:end="105:43">[<expr pos:start="105:28" pos:end="105:42"><name pos:start="105:28" pos:end="105:42"><name pos:start="105:28" pos:end="105:30">ost</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:42">file_index</name></name></expr>]</index></name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:48">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:36"><expr pos:start="107:9" pos:end="107:35"><name pos:start="107:9" pos:end="107:11">ist</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:35"><name pos:start="107:15" pos:end="107:30">get_input_stream</name><argument_list pos:start="107:31" pos:end="107:35">(<argument pos:start="107:32" pos:end="107:34"><expr pos:start="107:32" pos:end="107:34"><name pos:start="107:32" pos:end="107:34">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="111:9" pos:end="113:21"><if pos:start="111:9" pos:end="113:21">if <condition pos:start="111:12" pos:end="111:37">(<expr pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:15">ost</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:36">attachment_filename</name></name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:21"><block_content pos:start="113:13" pos:end="113:21">

            <continue pos:start="113:13" pos:end="113:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:67"><expr pos:start="117:9" pos:end="117:66"><name pos:start="117:9" pos:end="117:15">enc_ctx</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <ternary pos:start="117:19" pos:end="117:66"><condition pos:start="117:19" pos:end="117:36"><expr pos:start="117:19" pos:end="117:34"><name pos:start="117:19" pos:end="117:34"><name pos:start="117:19" pos:end="117:21">ost</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:34">stream_copy</name></name></expr> ?</condition><then pos:start="117:38" pos:end="117:51"> <expr pos:start="117:38" pos:end="117:51"><name pos:start="117:38" pos:end="117:51"><name pos:start="117:38" pos:end="117:40">ost</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:44">st</name><operator pos:start="117:45" pos:end="117:46">-&gt;</operator><name pos:start="117:47" pos:end="117:51">codec</name></name></expr> </then><else pos:start="117:53" pos:end="117:66">: <expr pos:start="117:55" pos:end="117:66"><name pos:start="117:55" pos:end="117:66"><name pos:start="117:55" pos:end="117:57">ost</name><operator pos:start="117:58" pos:end="117:59">-&gt;</operator><name pos:start="117:60" pos:end="117:66">enc_ctx</name></name></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="151:9"><if pos:start="121:9" pos:end="133:9">if <condition pos:start="121:12" pos:end="121:16">(<expr pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:15">ist</name></expr>)</condition> <block pos:start="121:18" pos:end="133:9">{<block_content pos:start="123:13" pos:end="131:78">

            <expr_stmt pos:start="123:13" pos:end="123:35"><expr pos:start="123:13" pos:end="123:34"><name pos:start="123:13" pos:end="123:19">dec_ctx</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:34"><name pos:start="123:23" pos:end="123:25">ist</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:34">dec_ctx</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="127:13" pos:end="127:65"><expr pos:start="127:13" pos:end="127:64"><name pos:start="127:13" pos:end="127:32"><name pos:start="127:13" pos:end="127:15">ost</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:19">st</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:32">disposition</name></name>          <operator pos:start="127:43" pos:end="127:43">=</operator> <name pos:start="127:45" pos:end="127:64"><name pos:start="127:45" pos:end="127:47">ist</name><operator pos:start="127:48" pos:end="127:49">-&gt;</operator><name pos:start="127:50" pos:end="127:51">st</name><operator pos:start="127:52" pos:end="127:53">-&gt;</operator><name pos:start="127:54" pos:end="127:64">disposition</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:75"><expr pos:start="129:13" pos:end="129:74"><name pos:start="129:13" pos:end="129:40"><name pos:start="129:13" pos:end="129:19">enc_ctx</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:40">bits_per_raw_sample</name></name>    <operator pos:start="129:45" pos:end="129:45">=</operator> <name pos:start="129:47" pos:end="129:74"><name pos:start="129:47" pos:end="129:53">dec_ctx</name><operator pos:start="129:54" pos:end="129:55">-&gt;</operator><name pos:start="129:56" pos:end="129:74">bits_per_raw_sample</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:78"><expr pos:start="131:13" pos:end="131:77"><name pos:start="131:13" pos:end="131:43"><name pos:start="131:13" pos:end="131:19">enc_ctx</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:43">chroma_sample_location</name></name> <operator pos:start="131:45" pos:end="131:45">=</operator> <name pos:start="131:47" pos:end="131:77"><name pos:start="131:47" pos:end="131:53">dec_ctx</name><operator pos:start="131:54" pos:end="131:55">-&gt;</operator><name pos:start="131:56" pos:end="131:77">chroma_sample_location</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="133:11" pos:end="151:9">else <block pos:start="133:16" pos:end="151:9">{<block_content pos:start="135:13" pos:end="149:66">

            <for pos:start="135:13" pos:end="143:13">for <control pos:start="135:17" pos:end="135:44">(<init pos:start="135:18" pos:end="135:21"><expr pos:start="135:18" pos:end="135:20"><name pos:start="135:18" pos:end="135:18">j</name><operator pos:start="135:19" pos:end="135:19">=</operator><literal type="number" pos:start="135:20" pos:end="135:20">0</literal></expr>;</init> <condition pos:start="135:23" pos:end="135:39"><expr pos:start="135:23" pos:end="135:38"><name pos:start="135:23" pos:end="135:23">j</name><operator pos:start="135:24" pos:end="135:24">&lt;</operator><name pos:start="135:25" pos:end="135:38"><name pos:start="135:25" pos:end="135:26">oc</name><operator pos:start="135:27" pos:end="135:28">-&gt;</operator><name pos:start="135:29" pos:end="135:38">nb_streams</name></name></expr>;</condition> <incr pos:start="135:41" pos:end="135:43"><expr pos:start="135:41" pos:end="135:43"><name pos:start="135:41" pos:end="135:41">j</name><operator pos:start="135:42" pos:end="135:43">++</operator></expr></incr>)</control> <block pos:start="135:46" pos:end="143:13">{<block_content pos:start="137:17" pos:end="141:26">

                <decl_stmt pos:start="137:17" pos:end="137:46"><decl pos:start="137:17" pos:end="137:45"><type pos:start="137:17" pos:end="137:26"><name pos:start="137:17" pos:end="137:24">AVStream</name> <modifier pos:start="137:26" pos:end="137:26">*</modifier></type><name pos:start="137:27" pos:end="137:28">st</name> <init pos:start="137:30" pos:end="137:45">= <expr pos:start="137:32" pos:end="137:45"><name pos:start="137:32" pos:end="137:45"><name pos:start="137:32" pos:end="137:33">oc</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:42">streams</name><index pos:start="137:43" pos:end="137:45">[<expr pos:start="137:44" pos:end="137:44"><name pos:start="137:44" pos:end="137:44">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="139:17" pos:end="141:26"><if pos:start="139:17" pos:end="141:26">if <condition pos:start="139:20" pos:end="139:82">(<expr pos:start="139:21" pos:end="139:81"><name pos:start="139:21" pos:end="139:22">st</name> <operator pos:start="139:24" pos:end="139:25">!=</operator> <name pos:start="139:27" pos:end="139:33"><name pos:start="139:27" pos:end="139:29">ost</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:33">st</name></name> <operator pos:start="139:35" pos:end="139:36">&amp;&amp;</operator> <name pos:start="139:38" pos:end="139:58"><name pos:start="139:38" pos:end="139:39">st</name><operator pos:start="139:40" pos:end="139:41">-&gt;</operator><name pos:start="139:42" pos:end="139:46">codec</name><operator pos:start="139:47" pos:end="139:48">-&gt;</operator><name pos:start="139:49" pos:end="139:58">codec_type</name></name> <operator pos:start="139:60" pos:end="139:61">==</operator> <name pos:start="139:63" pos:end="139:81"><name pos:start="139:63" pos:end="139:69">enc_ctx</name><operator pos:start="139:70" pos:end="139:71">-&gt;</operator><name pos:start="139:72" pos:end="139:81">codec_type</name></name></expr>)</condition><block type="pseudo" pos:start="141:21" pos:end="141:26"><block_content pos:start="141:21" pos:end="141:26">

                    <break pos:start="141:21" pos:end="141:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="145:13" pos:end="149:66"><if pos:start="145:13" pos:end="149:66">if <condition pos:start="145:16" pos:end="145:36">(<expr pos:start="145:17" pos:end="145:35"><name pos:start="145:17" pos:end="145:17">j</name> <operator pos:start="145:19" pos:end="145:20">==</operator> <name pos:start="145:22" pos:end="145:35"><name pos:start="145:22" pos:end="145:23">oc</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:35">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="149:66"><block_content pos:start="147:17" pos:end="149:66">

                <if_stmt pos:start="147:17" pos:end="149:66"><if pos:start="147:17" pos:end="149:66">if <condition pos:start="147:20" pos:end="147:107">(<expr pos:start="147:21" pos:end="147:106"><name pos:start="147:21" pos:end="147:39"><name pos:start="147:21" pos:end="147:27">enc_ctx</name><operator pos:start="147:28" pos:end="147:29">-&gt;</operator><name pos:start="147:30" pos:end="147:39">codec_type</name></name> <operator pos:start="147:41" pos:end="147:42">==</operator> <name pos:start="147:44" pos:end="147:61">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="147:63" pos:end="147:64">||</operator> <name pos:start="147:66" pos:end="147:84"><name pos:start="147:66" pos:end="147:72">enc_ctx</name><operator pos:start="147:73" pos:end="147:74">-&gt;</operator><name pos:start="147:75" pos:end="147:84">codec_type</name></name> <operator pos:start="147:86" pos:end="147:87">==</operator> <name pos:start="147:89" pos:end="147:106">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="149:21" pos:end="149:66"><block_content pos:start="149:21" pos:end="149:66">

                    <expr_stmt pos:start="149:21" pos:end="149:66"><expr pos:start="149:21" pos:end="149:65"><name pos:start="149:21" pos:end="149:40"><name pos:start="149:21" pos:end="149:23">ost</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:27">st</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:40">disposition</name></name> <operator pos:start="149:42" pos:end="149:42">=</operator> <name pos:start="149:44" pos:end="149:65">AV_DISPOSITION_DEFAULT</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="155:9" pos:end="825:9"><if pos:start="155:9" pos:end="479:9">if <condition pos:start="155:12" pos:end="155:29">(<expr pos:start="155:13" pos:end="155:28"><name pos:start="155:13" pos:end="155:28"><name pos:start="155:13" pos:end="155:15">ost</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:28">stream_copy</name></name></expr>)</condition> <block pos:start="155:31" pos:end="479:9">{<block_content pos:start="157:13" pos:end="477:13">

            <decl_stmt pos:start="157:13" pos:end="157:27"><decl pos:start="157:13" pos:end="157:26"><type pos:start="157:13" pos:end="157:22"><name pos:start="157:13" pos:end="157:22">AVRational</name></type> <name pos:start="157:24" pos:end="157:26">sar</name></decl>;</decl_stmt>

            <decl_stmt pos:start="159:13" pos:end="159:32"><decl pos:start="159:13" pos:end="159:31"><type pos:start="159:13" pos:end="159:20"><name pos:start="159:13" pos:end="159:20">uint64_t</name></type> <name pos:start="159:22" pos:end="159:31">extra_size</name></decl>;</decl_stmt>



            <expr_stmt pos:start="163:13" pos:end="163:44"><expr pos:start="163:13" pos:end="163:43"><call pos:start="163:13" pos:end="163:43"><name pos:start="163:13" pos:end="163:22">av_assert0</name><argument_list pos:start="163:23" pos:end="163:43">(<argument pos:start="163:24" pos:end="163:42"><expr pos:start="163:24" pos:end="163:42"><name pos:start="163:24" pos:end="163:26">ist</name> <operator pos:start="163:28" pos:end="163:29">&amp;&amp;</operator> <operator pos:start="163:31" pos:end="163:31">!</operator><name pos:start="163:32" pos:end="163:42"><name pos:start="163:32" pos:end="163:34">ost</name><operator pos:start="163:35" pos:end="163:36">-&gt;</operator><name pos:start="163:37" pos:end="163:42">filter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="167:13" pos:end="167:90"><expr pos:start="167:13" pos:end="167:89"><name pos:start="167:13" pos:end="167:22">extra_size</name> <operator pos:start="167:24" pos:end="167:24">=</operator> <operator pos:start="167:26" pos:end="167:26">(</operator><name pos:start="167:27" pos:end="167:34">uint64_t</name><operator pos:start="167:35" pos:end="167:35">)</operator><name pos:start="167:36" pos:end="167:58"><name pos:start="167:36" pos:end="167:42">dec_ctx</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:58">extradata_size</name></name> <operator pos:start="167:60" pos:end="167:60">+</operator> <name pos:start="167:62" pos:end="167:89">FF_INPUT_BUFFER_PADDING_SIZE</name></expr>;</expr_stmt>



            <if_stmt pos:start="171:13" pos:end="175:13"><if pos:start="171:13" pos:end="175:13">if <condition pos:start="171:16" pos:end="171:37">(<expr pos:start="171:17" pos:end="171:36"><name pos:start="171:17" pos:end="171:26">extra_size</name> <operator pos:start="171:28" pos:end="171:28">&gt;</operator> <name pos:start="171:30" pos:end="171:36">INT_MAX</name></expr>)</condition> <block pos:start="171:39" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:39">

                <return pos:start="173:17" pos:end="173:39">return <expr pos:start="173:24" pos:end="173:38"><call pos:start="173:24" pos:end="173:38"><name pos:start="173:24" pos:end="173:30">AVERROR</name><argument_list pos:start="173:31" pos:end="173:38">(<argument pos:start="173:32" pos:end="173:37"><expr pos:start="173:32" pos:end="173:37"><name pos:start="173:32" pos:end="173:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="179:13" pos:end="179:73">/* if stream_copy is selected, no need to decode or encode */</comment>

            <expr_stmt pos:start="181:13" pos:end="181:52"><expr pos:start="181:13" pos:end="181:51"><name pos:start="181:13" pos:end="181:29"><name pos:start="181:13" pos:end="181:19">enc_ctx</name><operator pos:start="181:20" pos:end="181:21">-&gt;</operator><name pos:start="181:22" pos:end="181:29">codec_id</name></name>   <operator pos:start="181:33" pos:end="181:33">=</operator> <name pos:start="181:35" pos:end="181:51"><name pos:start="181:35" pos:end="181:41">dec_ctx</name><operator pos:start="181:42" pos:end="181:43">-&gt;</operator><name pos:start="181:44" pos:end="181:51">codec_id</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:54"><expr pos:start="183:13" pos:end="183:53"><name pos:start="183:13" pos:end="183:31"><name pos:start="183:13" pos:end="183:19">enc_ctx</name><operator pos:start="183:20" pos:end="183:21">-&gt;</operator><name pos:start="183:22" pos:end="183:31">codec_type</name></name> <operator pos:start="183:33" pos:end="183:33">=</operator> <name pos:start="183:35" pos:end="183:53"><name pos:start="183:35" pos:end="183:41">dec_ctx</name><operator pos:start="183:42" pos:end="183:43">-&gt;</operator><name pos:start="183:44" pos:end="183:53">codec_type</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="187:13" pos:end="199:13"><if pos:start="187:13" pos:end="199:13">if <condition pos:start="187:16" pos:end="187:36">(<expr pos:start="187:17" pos:end="187:35"><operator pos:start="187:17" pos:end="187:17">!</operator><name pos:start="187:18" pos:end="187:35"><name pos:start="187:18" pos:end="187:24">enc_ctx</name><operator pos:start="187:25" pos:end="187:26">-&gt;</operator><name pos:start="187:27" pos:end="187:35">codec_tag</name></name></expr>)</condition> <block pos:start="187:38" pos:end="199:13">{<block_content pos:start="189:17" pos:end="197:60">

                <decl_stmt pos:start="189:17" pos:end="189:39"><decl pos:start="189:17" pos:end="189:38"><type pos:start="189:17" pos:end="189:28"><name pos:start="189:17" pos:end="189:24">unsigned</name> <name pos:start="189:26" pos:end="189:28">int</name></type> <name pos:start="189:30" pos:end="189:38">codec_tag</name></decl>;</decl_stmt>

                <if_stmt pos:start="191:17" pos:end="197:60"><if pos:start="191:17" pos:end="197:60">if <condition pos:start="191:20" pos:end="195:95">(<expr pos:start="191:21" pos:end="195:94"><operator pos:start="191:21" pos:end="191:21">!</operator><name pos:start="191:22" pos:end="191:43"><name pos:start="191:22" pos:end="191:23">oc</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:32">oformat</name><operator pos:start="191:33" pos:end="191:34">-&gt;</operator><name pos:start="191:35" pos:end="191:43">codec_tag</name></name> <operator pos:start="191:45" pos:end="191:46">||</operator>

                     <call pos:start="193:22" pos:end="193:81"><name pos:start="193:22" pos:end="193:36">av_codec_get_id</name> <argument_list pos:start="193:38" pos:end="193:81">(<argument pos:start="193:39" pos:end="193:60"><expr pos:start="193:39" pos:end="193:60"><name pos:start="193:39" pos:end="193:60"><name pos:start="193:39" pos:end="193:40">oc</name><operator pos:start="193:41" pos:end="193:42">-&gt;</operator><name pos:start="193:43" pos:end="193:49">oformat</name><operator pos:start="193:50" pos:end="193:51">-&gt;</operator><name pos:start="193:52" pos:end="193:60">codec_tag</name></name></expr></argument>, <argument pos:start="193:63" pos:end="193:80"><expr pos:start="193:63" pos:end="193:80"><name pos:start="193:63" pos:end="193:80"><name pos:start="193:63" pos:end="193:69">dec_ctx</name><operator pos:start="193:70" pos:end="193:71">-&gt;</operator><name pos:start="193:72" pos:end="193:80">codec_tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="193:83" pos:end="193:84">==</operator> <name pos:start="193:86" pos:end="193:102"><name pos:start="193:86" pos:end="193:92">enc_ctx</name><operator pos:start="193:93" pos:end="193:94">-&gt;</operator><name pos:start="193:95" pos:end="193:102">codec_id</name></name> <operator pos:start="193:104" pos:end="193:105">||</operator>

                     <operator pos:start="195:22" pos:end="195:22">!</operator><call pos:start="195:23" pos:end="195:94"><name pos:start="195:23" pos:end="195:39">av_codec_get_tag2</name><argument_list pos:start="195:40" pos:end="195:94">(<argument pos:start="195:41" pos:end="195:62"><expr pos:start="195:41" pos:end="195:62"><name pos:start="195:41" pos:end="195:62"><name pos:start="195:41" pos:end="195:42">oc</name><operator pos:start="195:43" pos:end="195:44">-&gt;</operator><name pos:start="195:45" pos:end="195:51">oformat</name><operator pos:start="195:52" pos:end="195:53">-&gt;</operator><name pos:start="195:54" pos:end="195:62">codec_tag</name></name></expr></argument>, <argument pos:start="195:65" pos:end="195:81"><expr pos:start="195:65" pos:end="195:81"><name pos:start="195:65" pos:end="195:81"><name pos:start="195:65" pos:end="195:71">dec_ctx</name><operator pos:start="195:72" pos:end="195:73">-&gt;</operator><name pos:start="195:74" pos:end="195:81">codec_id</name></name></expr></argument>, <argument pos:start="195:84" pos:end="195:93"><expr pos:start="195:84" pos:end="195:93"><operator pos:start="195:84" pos:end="195:84">&amp;</operator><name pos:start="195:85" pos:end="195:93">codec_tag</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="197:21" pos:end="197:60"><block_content pos:start="197:21" pos:end="197:60">

                    <expr_stmt pos:start="197:21" pos:end="197:60"><expr pos:start="197:21" pos:end="197:59"><name pos:start="197:21" pos:end="197:38"><name pos:start="197:21" pos:end="197:27">enc_ctx</name><operator pos:start="197:28" pos:end="197:29">-&gt;</operator><name pos:start="197:30" pos:end="197:38">codec_tag</name></name> <operator pos:start="197:40" pos:end="197:40">=</operator> <name pos:start="197:42" pos:end="197:59"><name pos:start="197:42" pos:end="197:48">dec_ctx</name><operator pos:start="197:49" pos:end="197:50">-&gt;</operator><name pos:start="197:51" pos:end="197:59">codec_tag</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="203:13" pos:end="203:56"><expr pos:start="203:13" pos:end="203:55"><name pos:start="203:13" pos:end="203:29"><name pos:start="203:13" pos:end="203:19">enc_ctx</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:29">bit_rate</name></name>       <operator pos:start="203:37" pos:end="203:37">=</operator> <name pos:start="203:39" pos:end="203:55"><name pos:start="203:39" pos:end="203:45">dec_ctx</name><operator pos:start="203:46" pos:end="203:47">-&gt;</operator><name pos:start="203:48" pos:end="203:55">bit_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:59"><expr pos:start="205:13" pos:end="205:58"><name pos:start="205:13" pos:end="205:32"><name pos:start="205:13" pos:end="205:19">enc_ctx</name><operator pos:start="205:20" pos:end="205:21">-&gt;</operator><name pos:start="205:22" pos:end="205:32">rc_max_rate</name></name>    <operator pos:start="205:37" pos:end="205:37">=</operator> <name pos:start="205:39" pos:end="205:58"><name pos:start="205:39" pos:end="205:45">dec_ctx</name><operator pos:start="205:46" pos:end="205:47">-&gt;</operator><name pos:start="205:48" pos:end="205:58">rc_max_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:62"><expr pos:start="207:13" pos:end="207:61"><name pos:start="207:13" pos:end="207:35"><name pos:start="207:13" pos:end="207:19">enc_ctx</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:35">rc_buffer_size</name></name> <operator pos:start="207:37" pos:end="207:37">=</operator> <name pos:start="207:39" pos:end="207:61"><name pos:start="207:39" pos:end="207:45">dec_ctx</name><operator pos:start="207:46" pos:end="207:47">-&gt;</operator><name pos:start="207:48" pos:end="207:61">rc_buffer_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:59"><expr pos:start="209:13" pos:end="209:58"><name pos:start="209:13" pos:end="209:32"><name pos:start="209:13" pos:end="209:19">enc_ctx</name><operator pos:start="209:20" pos:end="209:21">-&gt;</operator><name pos:start="209:22" pos:end="209:32">field_order</name></name>    <operator pos:start="209:37" pos:end="209:37">=</operator> <name pos:start="209:39" pos:end="209:58"><name pos:start="209:39" pos:end="209:45">dec_ctx</name><operator pos:start="209:46" pos:end="209:47">-&gt;</operator><name pos:start="209:48" pos:end="209:58">field_order</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="211:13" pos:end="223:13"><if pos:start="211:13" pos:end="223:13">if <condition pos:start="211:16" pos:end="211:40">(<expr pos:start="211:17" pos:end="211:39"><name pos:start="211:17" pos:end="211:39"><name pos:start="211:17" pos:end="211:23">dec_ctx</name><operator pos:start="211:24" pos:end="211:25">-&gt;</operator><name pos:start="211:26" pos:end="211:39">extradata_size</name></name></expr>)</condition> <block pos:start="211:42" pos:end="223:13">{<block_content pos:start="213:17" pos:end="221:88">

                <expr_stmt pos:start="213:17" pos:end="213:65"><expr pos:start="213:17" pos:end="213:64"><name pos:start="213:17" pos:end="213:34"><name pos:start="213:17" pos:end="213:23">enc_ctx</name><operator pos:start="213:24" pos:end="213:25">-&gt;</operator><name pos:start="213:26" pos:end="213:34">extradata</name></name>      <operator pos:start="213:41" pos:end="213:41">=</operator> <call pos:start="213:43" pos:end="213:64"><name pos:start="213:43" pos:end="213:52">av_mallocz</name><argument_list pos:start="213:53" pos:end="213:64">(<argument pos:start="213:54" pos:end="213:63"><expr pos:start="213:54" pos:end="213:63"><name pos:start="213:54" pos:end="213:63">extra_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="215:17" pos:end="219:17"><if pos:start="215:17" pos:end="219:17">if <condition pos:start="215:20" pos:end="215:40">(<expr pos:start="215:21" pos:end="215:39"><operator pos:start="215:21" pos:end="215:21">!</operator><name pos:start="215:22" pos:end="215:39"><name pos:start="215:22" pos:end="215:28">enc_ctx</name><operator pos:start="215:29" pos:end="215:30">-&gt;</operator><name pos:start="215:31" pos:end="215:39">extradata</name></name></expr>)</condition> <block pos:start="215:42" pos:end="219:17">{<block_content pos:start="217:21" pos:end="217:43">

                    <return pos:start="217:21" pos:end="217:43">return <expr pos:start="217:28" pos:end="217:42"><call pos:start="217:28" pos:end="217:42"><name pos:start="217:28" pos:end="217:34">AVERROR</name><argument_list pos:start="217:35" pos:end="217:42">(<argument pos:start="217:36" pos:end="217:41"><expr pos:start="217:36" pos:end="217:41"><name pos:start="217:36" pos:end="217:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:88"><expr pos:start="221:17" pos:end="221:87"><call pos:start="221:17" pos:end="221:87"><name pos:start="221:17" pos:end="221:22">memcpy</name><argument_list pos:start="221:23" pos:end="221:87">(<argument pos:start="221:24" pos:end="221:41"><expr pos:start="221:24" pos:end="221:41"><name pos:start="221:24" pos:end="221:41"><name pos:start="221:24" pos:end="221:30">enc_ctx</name><operator pos:start="221:31" pos:end="221:32">-&gt;</operator><name pos:start="221:33" pos:end="221:41">extradata</name></name></expr></argument>, <argument pos:start="221:44" pos:end="221:61"><expr pos:start="221:44" pos:end="221:61"><name pos:start="221:44" pos:end="221:61"><name pos:start="221:44" pos:end="221:50">dec_ctx</name><operator pos:start="221:51" pos:end="221:52">-&gt;</operator><name pos:start="221:53" pos:end="221:61">extradata</name></name></expr></argument>, <argument pos:start="221:64" pos:end="221:86"><expr pos:start="221:64" pos:end="221:86"><name pos:start="221:64" pos:end="221:86"><name pos:start="221:64" pos:end="221:70">dec_ctx</name><operator pos:start="221:71" pos:end="221:72">-&gt;</operator><name pos:start="221:73" pos:end="221:86">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:61"><expr pos:start="225:13" pos:end="225:60"><name pos:start="225:13" pos:end="225:35"><name pos:start="225:13" pos:end="225:19">enc_ctx</name><operator pos:start="225:20" pos:end="225:21">-&gt;</operator><name pos:start="225:22" pos:end="225:35">extradata_size</name></name><operator pos:start="225:36" pos:end="225:36">=</operator> <name pos:start="225:38" pos:end="225:60"><name pos:start="225:38" pos:end="225:44">dec_ctx</name><operator pos:start="225:45" pos:end="225:46">-&gt;</operator><name pos:start="225:47" pos:end="225:60">extradata_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:77"><expr pos:start="227:13" pos:end="227:76"><name pos:start="227:13" pos:end="227:42"><name pos:start="227:13" pos:end="227:19">enc_ctx</name><operator pos:start="227:20" pos:end="227:21">-&gt;</operator><name pos:start="227:22" pos:end="227:42">bits_per_coded_sample</name></name>  <operator pos:start="227:45" pos:end="227:45">=</operator> <name pos:start="227:47" pos:end="227:76"><name pos:start="227:47" pos:end="227:53">dec_ctx</name><operator pos:start="227:54" pos:end="227:55">-&gt;</operator><name pos:start="227:56" pos:end="227:76">bits_per_coded_sample</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="231:13" pos:end="231:52"><expr pos:start="231:13" pos:end="231:51"><name pos:start="231:13" pos:end="231:30"><name pos:start="231:13" pos:end="231:19">enc_ctx</name><operator pos:start="231:20" pos:end="231:21">-&gt;</operator><name pos:start="231:22" pos:end="231:30">time_base</name></name> <operator pos:start="231:32" pos:end="231:32">=</operator> <name pos:start="231:34" pos:end="231:51"><name pos:start="231:34" pos:end="231:36">ist</name><operator pos:start="231:37" pos:end="231:38">-&gt;</operator><name pos:start="231:39" pos:end="231:40">st</name><operator pos:start="231:41" pos:end="231:42">-&gt;</operator><name pos:start="231:43" pos:end="231:51">time_base</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="233:13" pos:end="241:15">/*

             * Avi is a special case here because it supports variable fps but

             * having the fps and timebase differe significantly adds quite some

             * overhead

             */</comment>

            <if_stmt pos:start="243:13" pos:end="301:13"><if pos:start="243:13" pos:end="277:13">if<condition pos:start="243:15" pos:end="243:49">(<expr pos:start="243:16" pos:end="243:48"><operator pos:start="243:16" pos:end="243:16">!</operator><call pos:start="243:17" pos:end="243:48"><name pos:start="243:17" pos:end="243:22">strcmp</name><argument_list pos:start="243:23" pos:end="243:48">(<argument pos:start="243:24" pos:end="243:40"><expr pos:start="243:24" pos:end="243:40"><name pos:start="243:24" pos:end="243:40"><name pos:start="243:24" pos:end="243:25">oc</name><operator pos:start="243:26" pos:end="243:27">-&gt;</operator><name pos:start="243:28" pos:end="243:34">oformat</name><operator pos:start="243:35" pos:end="243:36">-&gt;</operator><name pos:start="243:37" pos:end="243:40">name</name></name></expr></argument>, <argument pos:start="243:43" pos:end="243:47"><expr pos:start="243:43" pos:end="243:47"><literal type="string" pos:start="243:43" pos:end="243:47">"avi"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="243:51" pos:end="277:13">{<block_content pos:start="245:17" pos:end="275:17">

                <if_stmt pos:start="245:17" pos:end="275:17"><if pos:start="245:17" pos:end="261:17">if <condition pos:start="245:20" pos:end="253:35">( <expr pos:start="245:22" pos:end="253:34"><name pos:start="245:22" pos:end="247:69"><name pos:start="245:22" pos:end="245:28">copy_tb</name><argument_list type="generic" pos:start="245:29" pos:end="247:69">&lt;<argument pos:start="245:30" pos:end="247:67"><expr pos:start="245:30" pos:end="247:67"><literal type="number" pos:start="245:30" pos:end="245:30">0</literal> <operator pos:start="245:32" pos:end="245:33">&amp;&amp;</operator> <name pos:start="245:35" pos:end="245:40">av_q2d</name><operator pos:start="245:41" pos:end="245:41">(</operator><name pos:start="245:42" pos:end="245:62"><name pos:start="245:42" pos:end="245:44">ist</name><operator pos:start="245:45" pos:end="245:46">-&gt;</operator><name pos:start="245:47" pos:end="245:48">st</name><operator pos:start="245:49" pos:end="245:50">-&gt;</operator><name pos:start="245:51" pos:end="245:62">r_frame_rate</name></name><operator pos:start="245:63" pos:end="245:63">)</operator> <operator pos:start="245:65" pos:end="245:66">&gt;=</operator> <name pos:start="245:68" pos:end="245:73">av_q2d</name><operator pos:start="245:74" pos:end="245:74">(</operator><name pos:start="245:75" pos:end="245:97"><name pos:start="245:75" pos:end="245:77">ist</name><operator pos:start="245:78" pos:end="245:79">-&gt;</operator><name pos:start="245:80" pos:end="245:81">st</name><operator pos:start="245:82" pos:end="245:83">-&gt;</operator><name pos:start="245:84" pos:end="245:97">avg_frame_rate</name></name><operator pos:start="245:98" pos:end="245:98">)</operator>

                               <operator pos:start="247:32" pos:end="247:33">&amp;&amp;</operator> <literal type="number" pos:start="247:35" pos:end="247:37">0.5</literal><operator pos:start="247:38" pos:end="247:38">/</operator><name pos:start="247:39" pos:end="247:44">av_q2d</name><operator pos:start="247:45" pos:end="247:45">(</operator><name pos:start="247:46" pos:end="247:66"><name pos:start="247:46" pos:end="247:48">ist</name><operator pos:start="247:49" pos:end="247:50">-&gt;</operator><name pos:start="247:51" pos:end="247:52">st</name><operator pos:start="247:53" pos:end="247:54">-&gt;</operator><name pos:start="247:55" pos:end="247:66">r_frame_rate</name></name><operator pos:start="247:67" pos:end="247:67">)</operator></expr></argument> &gt;</argument_list></name> <call pos:start="247:71" pos:end="247:96"><name pos:start="247:71" pos:end="247:76">av_q2d</name><argument_list pos:start="247:77" pos:end="247:96">(<argument pos:start="247:78" pos:end="247:95"><expr pos:start="247:78" pos:end="247:95"><name pos:start="247:78" pos:end="247:95"><name pos:start="247:78" pos:end="247:80">ist</name><operator pos:start="247:81" pos:end="247:82">-&gt;</operator><name pos:start="247:83" pos:end="247:84">st</name><operator pos:start="247:85" pos:end="247:86">-&gt;</operator><name pos:start="247:87" pos:end="247:95">time_base</name></name></expr></argument>)</argument_list></call>

                               <operator pos:start="249:32" pos:end="249:33">&amp;&amp;</operator> <literal type="number" pos:start="249:35" pos:end="249:37">0.5</literal><operator pos:start="249:38" pos:end="249:38">/</operator><call pos:start="249:39" pos:end="249:67"><name pos:start="249:39" pos:end="249:44">av_q2d</name><argument_list pos:start="249:45" pos:end="249:67">(<argument pos:start="249:46" pos:end="249:66"><expr pos:start="249:46" pos:end="249:66"><name pos:start="249:46" pos:end="249:66"><name pos:start="249:46" pos:end="249:48">ist</name><operator pos:start="249:49" pos:end="249:50">-&gt;</operator><name pos:start="249:51" pos:end="249:52">st</name><operator pos:start="249:53" pos:end="249:54">-&gt;</operator><name pos:start="249:55" pos:end="249:66">r_frame_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="249:69" pos:end="249:69">&gt;</operator> <call pos:start="249:71" pos:end="249:96"><name pos:start="249:71" pos:end="249:76">av_q2d</name><argument_list pos:start="249:77" pos:end="249:96">(<argument pos:start="249:78" pos:end="249:95"><expr pos:start="249:78" pos:end="249:95"><name pos:start="249:78" pos:end="249:95"><name pos:start="249:78" pos:end="249:84">dec_ctx</name><operator pos:start="249:85" pos:end="249:86">-&gt;</operator><name pos:start="249:87" pos:end="249:95">time_base</name></name></expr></argument>)</argument_list></call>

                               <operator pos:start="251:32" pos:end="251:33">&amp;&amp;</operator> <call pos:start="251:35" pos:end="251:60"><name pos:start="251:35" pos:end="251:40">av_q2d</name><argument_list pos:start="251:41" pos:end="251:60">(<argument pos:start="251:42" pos:end="251:59"><expr pos:start="251:42" pos:end="251:59"><name pos:start="251:42" pos:end="251:59"><name pos:start="251:42" pos:end="251:44">ist</name><operator pos:start="251:45" pos:end="251:46">-&gt;</operator><name pos:start="251:47" pos:end="251:48">st</name><operator pos:start="251:49" pos:end="251:50">-&gt;</operator><name pos:start="251:51" pos:end="251:59">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="251:62" pos:end="251:62">&lt;</operator> <literal type="number" pos:start="251:64" pos:end="251:66">1.0</literal><operator pos:start="251:67" pos:end="251:67">/</operator><literal type="number" pos:start="251:68" pos:end="251:70">500</literal> <operator pos:start="251:72" pos:end="251:73">&amp;&amp;</operator> <call pos:start="251:75" pos:end="251:100"><name pos:start="251:75" pos:end="251:80">av_q2d</name><argument_list pos:start="251:81" pos:end="251:100">(<argument pos:start="251:82" pos:end="251:99"><expr pos:start="251:82" pos:end="251:99"><name pos:start="251:82" pos:end="251:99"><name pos:start="251:82" pos:end="251:88">dec_ctx</name><operator pos:start="251:89" pos:end="251:90">-&gt;</operator><name pos:start="251:91" pos:end="251:99">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="251:102" pos:end="251:102">&lt;</operator> <literal type="number" pos:start="251:104" pos:end="251:106">1.0</literal><operator pos:start="251:107" pos:end="251:107">/</operator><literal type="number" pos:start="251:108" pos:end="251:110">500</literal>

                     <operator pos:start="253:22" pos:end="253:23">||</operator> <name pos:start="253:25" pos:end="253:31">copy_tb</name><operator pos:start="253:32" pos:end="253:33">==</operator><literal type="number" pos:start="253:34" pos:end="253:34">2</literal></expr>)</condition><block pos:start="253:36" pos:end="261:17">{<block_content pos:start="255:21" pos:end="259:49">

                    <expr_stmt pos:start="255:21" pos:end="255:71"><expr pos:start="255:21" pos:end="255:70"><name pos:start="255:21" pos:end="255:42"><name pos:start="255:21" pos:end="255:27">enc_ctx</name><operator pos:start="255:28" pos:end="255:29">-&gt;</operator><name pos:start="255:30" pos:end="255:38">time_base</name><operator pos:start="255:39" pos:end="255:39">.</operator><name pos:start="255:40" pos:end="255:42">num</name></name> <operator pos:start="255:44" pos:end="255:44">=</operator> <name pos:start="255:46" pos:end="255:70"><name pos:start="255:46" pos:end="255:48">ist</name><operator pos:start="255:49" pos:end="255:50">-&gt;</operator><name pos:start="255:51" pos:end="255:52">st</name><operator pos:start="255:53" pos:end="255:54">-&gt;</operator><name pos:start="255:55" pos:end="255:66">r_frame_rate</name><operator pos:start="255:67" pos:end="255:67">.</operator><name pos:start="255:68" pos:end="255:70">den</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:73"><expr pos:start="257:21" pos:end="257:72"><name pos:start="257:21" pos:end="257:42"><name pos:start="257:21" pos:end="257:27">enc_ctx</name><operator pos:start="257:28" pos:end="257:29">-&gt;</operator><name pos:start="257:30" pos:end="257:38">time_base</name><operator pos:start="257:39" pos:end="257:39">.</operator><name pos:start="257:40" pos:end="257:42">den</name></name> <operator pos:start="257:44" pos:end="257:44">=</operator> <literal type="number" pos:start="257:46" pos:end="257:46">2</literal><operator pos:start="257:47" pos:end="257:47">*</operator><name pos:start="257:48" pos:end="257:72"><name pos:start="257:48" pos:end="257:50">ist</name><operator pos:start="257:51" pos:end="257:52">-&gt;</operator><name pos:start="257:53" pos:end="257:54">st</name><operator pos:start="257:55" pos:end="257:56">-&gt;</operator><name pos:start="257:57" pos:end="257:68">r_frame_rate</name><operator pos:start="257:69" pos:end="257:69">.</operator><name pos:start="257:70" pos:end="257:72">num</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:49"><expr pos:start="259:21" pos:end="259:48"><name pos:start="259:21" pos:end="259:44"><name pos:start="259:21" pos:end="259:27">enc_ctx</name><operator pos:start="259:28" pos:end="259:29">-&gt;</operator><name pos:start="259:30" pos:end="259:44">ticks_per_frame</name></name> <operator pos:start="259:46" pos:end="259:46">=</operator> <literal type="number" pos:start="259:48" pos:end="259:48">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="261:19" pos:end="275:17">else if <condition pos:start="261:27" pos:end="265:34">(   <expr pos:start="261:31" pos:end="265:33"><name pos:start="261:31" pos:end="261:96"><name pos:start="261:31" pos:end="261:37">copy_tb</name><argument_list type="generic" pos:start="261:38" pos:end="261:96">&lt;<argument pos:start="261:39" pos:end="261:94"><expr pos:start="261:39" pos:end="261:94"><literal type="number" pos:start="261:39" pos:end="261:39">0</literal> <operator pos:start="261:41" pos:end="261:42">&amp;&amp;</operator> <name pos:start="261:44" pos:end="261:49">av_q2d</name><operator pos:start="261:50" pos:end="261:50">(</operator><name pos:start="261:51" pos:end="261:68"><name pos:start="261:51" pos:end="261:57">dec_ctx</name><operator pos:start="261:58" pos:end="261:59">-&gt;</operator><name pos:start="261:60" pos:end="261:68">time_base</name></name><operator pos:start="261:69" pos:end="261:69">)</operator><operator pos:start="261:70" pos:end="261:70">*</operator><name pos:start="261:71" pos:end="261:94"><name pos:start="261:71" pos:end="261:77">dec_ctx</name><operator pos:start="261:78" pos:end="261:79">-&gt;</operator><name pos:start="261:80" pos:end="261:94">ticks_per_frame</name></name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="261:98" pos:end="261:98">2</literal><operator pos:start="261:99" pos:end="261:99">*</operator><call pos:start="261:100" pos:end="261:125"><name pos:start="261:100" pos:end="261:105">av_q2d</name><argument_list pos:start="261:106" pos:end="261:125">(<argument pos:start="261:107" pos:end="261:124"><expr pos:start="261:107" pos:end="261:124"><name pos:start="261:107" pos:end="261:124"><name pos:start="261:107" pos:end="261:109">ist</name><operator pos:start="261:110" pos:end="261:111">-&gt;</operator><name pos:start="261:112" pos:end="261:113">st</name><operator pos:start="261:114" pos:end="261:115">-&gt;</operator><name pos:start="261:116" pos:end="261:124">time_base</name></name></expr></argument>)</argument_list></call>

                                 <operator pos:start="263:34" pos:end="263:35">&amp;&amp;</operator> <call pos:start="263:37" pos:end="263:62"><name pos:start="263:37" pos:end="263:42">av_q2d</name><argument_list pos:start="263:43" pos:end="263:62">(<argument pos:start="263:44" pos:end="263:61"><expr pos:start="263:44" pos:end="263:61"><name pos:start="263:44" pos:end="263:61"><name pos:start="263:44" pos:end="263:46">ist</name><operator pos:start="263:47" pos:end="263:48">-&gt;</operator><name pos:start="263:49" pos:end="263:50">st</name><operator pos:start="263:51" pos:end="263:52">-&gt;</operator><name pos:start="263:53" pos:end="263:61">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="263:64" pos:end="263:64">&lt;</operator> <literal type="number" pos:start="263:66" pos:end="263:68">1.0</literal><operator pos:start="263:69" pos:end="263:69">/</operator><literal type="number" pos:start="263:70" pos:end="263:72">500</literal>

                    <operator pos:start="265:21" pos:end="265:22">||</operator> <name pos:start="265:24" pos:end="265:30">copy_tb</name><operator pos:start="265:31" pos:end="265:32">==</operator><literal type="number" pos:start="265:33" pos:end="265:33">0</literal></expr>)</condition><block pos:start="265:35" pos:end="275:17">{<block_content pos:start="267:21" pos:end="273:49">

                    <expr_stmt pos:start="267:21" pos:end="267:60"><expr pos:start="267:21" pos:end="267:59"><name pos:start="267:21" pos:end="267:38"><name pos:start="267:21" pos:end="267:27">enc_ctx</name><operator pos:start="267:28" pos:end="267:29">-&gt;</operator><name pos:start="267:30" pos:end="267:38">time_base</name></name> <operator pos:start="267:40" pos:end="267:40">=</operator> <name pos:start="267:42" pos:end="267:59"><name pos:start="267:42" pos:end="267:48">dec_ctx</name><operator pos:start="267:49" pos:end="267:50">-&gt;</operator><name pos:start="267:51" pos:end="267:59">time_base</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="269:21" pos:end="269:71"><expr pos:start="269:21" pos:end="269:70"><name pos:start="269:21" pos:end="269:42"><name pos:start="269:21" pos:end="269:27">enc_ctx</name><operator pos:start="269:28" pos:end="269:29">-&gt;</operator><name pos:start="269:30" pos:end="269:38">time_base</name><operator pos:start="269:39" pos:end="269:39">.</operator><name pos:start="269:40" pos:end="269:42">num</name></name> <operator pos:start="269:44" pos:end="269:45">*=</operator> <name pos:start="269:47" pos:end="269:70"><name pos:start="269:47" pos:end="269:53">dec_ctx</name><operator pos:start="269:54" pos:end="269:55">-&gt;</operator><name pos:start="269:56" pos:end="269:70">ticks_per_frame</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="271:21" pos:end="271:48"><expr pos:start="271:21" pos:end="271:47"><name pos:start="271:21" pos:end="271:42"><name pos:start="271:21" pos:end="271:27">enc_ctx</name><operator pos:start="271:28" pos:end="271:29">-&gt;</operator><name pos:start="271:30" pos:end="271:38">time_base</name><operator pos:start="271:39" pos:end="271:39">.</operator><name pos:start="271:40" pos:end="271:42">den</name></name> <operator pos:start="271:44" pos:end="271:45">*=</operator> <literal type="number" pos:start="271:47" pos:end="271:47">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="273:21" pos:end="273:49"><expr pos:start="273:21" pos:end="273:48"><name pos:start="273:21" pos:end="273:44"><name pos:start="273:21" pos:end="273:27">enc_ctx</name><operator pos:start="273:28" pos:end="273:29">-&gt;</operator><name pos:start="273:30" pos:end="273:44">ticks_per_frame</name></name> <operator pos:start="273:46" pos:end="273:46">=</operator> <literal type="number" pos:start="273:48" pos:end="273:48">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="277:15" pos:end="301:13">else if<condition pos:start="277:22" pos:end="285:13">(<expr pos:start="277:23" pos:end="283:57"><operator pos:start="277:23" pos:end="277:23">!</operator><operator pos:start="277:24" pos:end="277:24">(</operator><name pos:start="277:25" pos:end="277:42"><name pos:start="277:25" pos:end="277:26">oc</name><operator pos:start="277:27" pos:end="277:28">-&gt;</operator><name pos:start="277:29" pos:end="277:35">oformat</name><operator pos:start="277:36" pos:end="277:37">-&gt;</operator><name pos:start="277:38" pos:end="277:42">flags</name></name> <operator pos:start="277:44" pos:end="277:44">&amp;</operator> <name pos:start="277:46" pos:end="277:63">AVFMT_VARIABLE_FPS</name><operator pos:start="277:64" pos:end="277:64">)</operator>

                      <operator pos:start="279:23" pos:end="279:24">&amp;&amp;</operator> <call pos:start="279:26" pos:end="279:57"><name pos:start="279:26" pos:end="279:31">strcmp</name><argument_list pos:start="279:32" pos:end="279:57">(<argument pos:start="279:33" pos:end="279:49"><expr pos:start="279:33" pos:end="279:49"><name pos:start="279:33" pos:end="279:49"><name pos:start="279:33" pos:end="279:34">oc</name><operator pos:start="279:35" pos:end="279:36">-&gt;</operator><name pos:start="279:37" pos:end="279:43">oformat</name><operator pos:start="279:44" pos:end="279:45">-&gt;</operator><name pos:start="279:46" pos:end="279:49">name</name></name></expr></argument>, <argument pos:start="279:52" pos:end="279:56"><expr pos:start="279:52" pos:end="279:56"><literal type="string" pos:start="279:52" pos:end="279:56">"mov"</literal></expr></argument>)</argument_list></call> <operator pos:start="279:59" pos:end="279:60">&amp;&amp;</operator> <call pos:start="279:62" pos:end="279:93"><name pos:start="279:62" pos:end="279:67">strcmp</name><argument_list pos:start="279:68" pos:end="279:93">(<argument pos:start="279:69" pos:end="279:85"><expr pos:start="279:69" pos:end="279:85"><name pos:start="279:69" pos:end="279:85"><name pos:start="279:69" pos:end="279:70">oc</name><operator pos:start="279:71" pos:end="279:72">-&gt;</operator><name pos:start="279:73" pos:end="279:79">oformat</name><operator pos:start="279:80" pos:end="279:81">-&gt;</operator><name pos:start="279:82" pos:end="279:85">name</name></name></expr></argument>, <argument pos:start="279:88" pos:end="279:92"><expr pos:start="279:88" pos:end="279:92"><literal type="string" pos:start="279:88" pos:end="279:92">"mp4"</literal></expr></argument>)</argument_list></call> <operator pos:start="279:95" pos:end="279:96">&amp;&amp;</operator> <call pos:start="279:98" pos:end="279:129"><name pos:start="279:98" pos:end="279:103">strcmp</name><argument_list pos:start="279:104" pos:end="279:129">(<argument pos:start="279:105" pos:end="279:121"><expr pos:start="279:105" pos:end="279:121"><name pos:start="279:105" pos:end="279:121"><name pos:start="279:105" pos:end="279:106">oc</name><operator pos:start="279:107" pos:end="279:108">-&gt;</operator><name pos:start="279:109" pos:end="279:115">oformat</name><operator pos:start="279:116" pos:end="279:117">-&gt;</operator><name pos:start="279:118" pos:end="279:121">name</name></name></expr></argument>, <argument pos:start="279:124" pos:end="279:128"><expr pos:start="279:124" pos:end="279:128"><literal type="string" pos:start="279:124" pos:end="279:128">"3gp"</literal></expr></argument>)</argument_list></call>

                      <operator pos:start="281:23" pos:end="281:24">&amp;&amp;</operator> <call pos:start="281:26" pos:end="281:57"><name pos:start="281:26" pos:end="281:31">strcmp</name><argument_list pos:start="281:32" pos:end="281:57">(<argument pos:start="281:33" pos:end="281:49"><expr pos:start="281:33" pos:end="281:49"><name pos:start="281:33" pos:end="281:49"><name pos:start="281:33" pos:end="281:34">oc</name><operator pos:start="281:35" pos:end="281:36">-&gt;</operator><name pos:start="281:37" pos:end="281:43">oformat</name><operator pos:start="281:44" pos:end="281:45">-&gt;</operator><name pos:start="281:46" pos:end="281:49">name</name></name></expr></argument>, <argument pos:start="281:52" pos:end="281:56"><expr pos:start="281:52" pos:end="281:56"><literal type="string" pos:start="281:52" pos:end="281:56">"3g2"</literal></expr></argument>)</argument_list></call> <operator pos:start="281:59" pos:end="281:60">&amp;&amp;</operator> <call pos:start="281:62" pos:end="281:93"><name pos:start="281:62" pos:end="281:67">strcmp</name><argument_list pos:start="281:68" pos:end="281:93">(<argument pos:start="281:69" pos:end="281:85"><expr pos:start="281:69" pos:end="281:85"><name pos:start="281:69" pos:end="281:85"><name pos:start="281:69" pos:end="281:70">oc</name><operator pos:start="281:71" pos:end="281:72">-&gt;</operator><name pos:start="281:73" pos:end="281:79">oformat</name><operator pos:start="281:80" pos:end="281:81">-&gt;</operator><name pos:start="281:82" pos:end="281:85">name</name></name></expr></argument>, <argument pos:start="281:88" pos:end="281:92"><expr pos:start="281:88" pos:end="281:92"><literal type="string" pos:start="281:88" pos:end="281:92">"psp"</literal></expr></argument>)</argument_list></call> <operator pos:start="281:95" pos:end="281:96">&amp;&amp;</operator> <call pos:start="281:98" pos:end="281:130"><name pos:start="281:98" pos:end="281:103">strcmp</name><argument_list pos:start="281:104" pos:end="281:130">(<argument pos:start="281:105" pos:end="281:121"><expr pos:start="281:105" pos:end="281:121"><name pos:start="281:105" pos:end="281:121"><name pos:start="281:105" pos:end="281:106">oc</name><operator pos:start="281:107" pos:end="281:108">-&gt;</operator><name pos:start="281:109" pos:end="281:115">oformat</name><operator pos:start="281:116" pos:end="281:117">-&gt;</operator><name pos:start="281:118" pos:end="281:121">name</name></name></expr></argument>, <argument pos:start="281:124" pos:end="281:129"><expr pos:start="281:124" pos:end="281:129"><literal type="string" pos:start="281:124" pos:end="281:129">"ipod"</literal></expr></argument>)</argument_list></call>

                      <operator pos:start="283:23" pos:end="283:24">&amp;&amp;</operator> <call pos:start="283:26" pos:end="283:57"><name pos:start="283:26" pos:end="283:31">strcmp</name><argument_list pos:start="283:32" pos:end="283:57">(<argument pos:start="283:33" pos:end="283:49"><expr pos:start="283:33" pos:end="283:49"><name pos:start="283:33" pos:end="283:49"><name pos:start="283:33" pos:end="283:34">oc</name><operator pos:start="283:35" pos:end="283:36">-&gt;</operator><name pos:start="283:37" pos:end="283:43">oformat</name><operator pos:start="283:44" pos:end="283:45">-&gt;</operator><name pos:start="283:46" pos:end="283:49">name</name></name></expr></argument>, <argument pos:start="283:52" pos:end="283:56"><expr pos:start="283:52" pos:end="283:56"><literal type="string" pos:start="283:52" pos:end="283:56">"f4v"</literal></expr></argument>)</argument_list></call></expr>

            )</condition> <block pos:start="285:15" pos:end="301:13">{<block_content pos:start="287:17" pos:end="299:17">

                <if_stmt pos:start="287:17" pos:end="299:17"><if pos:start="287:17" pos:end="299:17">if<condition pos:start="287:19" pos:end="293:33">(   <expr pos:start="287:23" pos:end="293:32"><name pos:start="287:23" pos:end="289:88"><name pos:start="287:23" pos:end="287:29">copy_tb</name><argument_list type="generic" pos:start="287:30" pos:end="289:88">&lt;<argument pos:start="287:31" pos:end="289:86"><expr pos:start="287:31" pos:end="289:86"><literal type="number" pos:start="287:31" pos:end="287:31">0</literal> <operator pos:start="287:33" pos:end="287:34">&amp;&amp;</operator> <name pos:start="287:36" pos:end="287:57"><name pos:start="287:36" pos:end="287:42">dec_ctx</name><operator pos:start="287:43" pos:end="287:44">-&gt;</operator><name pos:start="287:45" pos:end="287:53">time_base</name><operator pos:start="287:54" pos:end="287:54">.</operator><name pos:start="287:55" pos:end="287:57">den</name></name>

                                <operator pos:start="289:33" pos:end="289:34">&amp;&amp;</operator> <name pos:start="289:36" pos:end="289:41">av_q2d</name><operator pos:start="289:42" pos:end="289:42">(</operator><name pos:start="289:43" pos:end="289:60"><name pos:start="289:43" pos:end="289:49">dec_ctx</name><operator pos:start="289:50" pos:end="289:51">-&gt;</operator><name pos:start="289:52" pos:end="289:60">time_base</name></name><operator pos:start="289:61" pos:end="289:61">)</operator><operator pos:start="289:62" pos:end="289:62">*</operator><name pos:start="289:63" pos:end="289:86"><name pos:start="289:63" pos:end="289:69">dec_ctx</name><operator pos:start="289:70" pos:end="289:71">-&gt;</operator><name pos:start="289:72" pos:end="289:86">ticks_per_frame</name></name></expr></argument> &gt;</argument_list></name> <call pos:start="289:90" pos:end="289:115"><name pos:start="289:90" pos:end="289:95">av_q2d</name><argument_list pos:start="289:96" pos:end="289:115">(<argument pos:start="289:97" pos:end="289:114"><expr pos:start="289:97" pos:end="289:114"><name pos:start="289:97" pos:end="289:114"><name pos:start="289:97" pos:end="289:99">ist</name><operator pos:start="289:100" pos:end="289:101">-&gt;</operator><name pos:start="289:102" pos:end="289:103">st</name><operator pos:start="289:104" pos:end="289:105">-&gt;</operator><name pos:start="289:106" pos:end="289:114">time_base</name></name></expr></argument>)</argument_list></call>

                                <operator pos:start="291:33" pos:end="291:34">&amp;&amp;</operator> <call pos:start="291:36" pos:end="291:61"><name pos:start="291:36" pos:end="291:41">av_q2d</name><argument_list pos:start="291:42" pos:end="291:61">(<argument pos:start="291:43" pos:end="291:60"><expr pos:start="291:43" pos:end="291:60"><name pos:start="291:43" pos:end="291:60"><name pos:start="291:43" pos:end="291:45">ist</name><operator pos:start="291:46" pos:end="291:47">-&gt;</operator><name pos:start="291:48" pos:end="291:49">st</name><operator pos:start="291:50" pos:end="291:51">-&gt;</operator><name pos:start="291:52" pos:end="291:60">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="291:63" pos:end="291:63">&lt;</operator> <literal type="number" pos:start="291:65" pos:end="291:67">1.0</literal><operator pos:start="291:68" pos:end="291:68">/</operator><literal type="number" pos:start="291:69" pos:end="291:71">500</literal>

                   <operator pos:start="293:20" pos:end="293:21">||</operator> <name pos:start="293:23" pos:end="293:29">copy_tb</name><operator pos:start="293:30" pos:end="293:31">==</operator><literal type="number" pos:start="293:32" pos:end="293:32">0</literal></expr>)</condition><block pos:start="293:34" pos:end="299:17">{<block_content pos:start="295:21" pos:end="297:71">

                    <expr_stmt pos:start="295:21" pos:end="295:60"><expr pos:start="295:21" pos:end="295:59"><name pos:start="295:21" pos:end="295:38"><name pos:start="295:21" pos:end="295:27">enc_ctx</name><operator pos:start="295:28" pos:end="295:29">-&gt;</operator><name pos:start="295:30" pos:end="295:38">time_base</name></name> <operator pos:start="295:40" pos:end="295:40">=</operator> <name pos:start="295:42" pos:end="295:59"><name pos:start="295:42" pos:end="295:48">dec_ctx</name><operator pos:start="295:49" pos:end="295:50">-&gt;</operator><name pos:start="295:51" pos:end="295:59">time_base</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="297:21" pos:end="297:71"><expr pos:start="297:21" pos:end="297:70"><name pos:start="297:21" pos:end="297:42"><name pos:start="297:21" pos:end="297:27">enc_ctx</name><operator pos:start="297:28" pos:end="297:29">-&gt;</operator><name pos:start="297:30" pos:end="297:38">time_base</name><operator pos:start="297:39" pos:end="297:39">.</operator><name pos:start="297:40" pos:end="297:42">num</name></name> <operator pos:start="297:44" pos:end="297:45">*=</operator> <name pos:start="297:47" pos:end="297:70"><name pos:start="297:47" pos:end="297:53">dec_ctx</name><operator pos:start="297:54" pos:end="297:55">-&gt;</operator><name pos:start="297:56" pos:end="297:70">ticks_per_frame</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="303:13" pos:end="313:13"><if pos:start="303:13" pos:end="313:13">if <condition pos:start="303:16" pos:end="309:73">(   <expr pos:start="303:20" pos:end="309:72"><name pos:start="303:20" pos:end="303:37"><name pos:start="303:20" pos:end="303:26">enc_ctx</name><operator pos:start="303:27" pos:end="303:28">-&gt;</operator><name pos:start="303:29" pos:end="303:37">codec_tag</name></name> <operator pos:start="303:39" pos:end="303:40">==</operator> <call pos:start="303:42" pos:end="303:56"><name pos:start="303:42" pos:end="303:48">AV_RL32</name><argument_list pos:start="303:49" pos:end="303:56">(<argument pos:start="303:50" pos:end="303:55"><expr pos:start="303:50" pos:end="303:55"><literal type="string" pos:start="303:50" pos:end="303:55">"tmcd"</literal></expr></argument>)</argument_list></call>

                <operator pos:start="305:17" pos:end="305:18">&amp;&amp;</operator> <name pos:start="305:20" pos:end="305:41"><name pos:start="305:20" pos:end="305:26">dec_ctx</name><operator pos:start="305:27" pos:end="305:28">-&gt;</operator><name pos:start="305:29" pos:end="305:37">time_base</name><operator pos:start="305:38" pos:end="305:38">.</operator><name pos:start="305:39" pos:end="305:41">num</name></name> <operator pos:start="305:43" pos:end="305:43">&lt;</operator> <name pos:start="305:45" pos:end="305:66"><name pos:start="305:45" pos:end="305:51">dec_ctx</name><operator pos:start="305:52" pos:end="305:53">-&gt;</operator><name pos:start="305:54" pos:end="305:62">time_base</name><operator pos:start="305:63" pos:end="305:63">.</operator><name pos:start="305:64" pos:end="305:66">den</name></name>

                <operator pos:start="307:17" pos:end="307:18">&amp;&amp;</operator> <name pos:start="307:20" pos:end="307:41"><name pos:start="307:20" pos:end="307:26">dec_ctx</name><operator pos:start="307:27" pos:end="307:28">-&gt;</operator><name pos:start="307:29" pos:end="307:37">time_base</name><operator pos:start="307:38" pos:end="307:38">.</operator><name pos:start="307:39" pos:end="307:41">num</name></name> <operator pos:start="307:43" pos:end="307:43">&gt;</operator> <literal type="number" pos:start="307:45" pos:end="307:45">0</literal>

                <operator pos:start="309:17" pos:end="309:18">&amp;&amp;</operator> <literal type="number" pos:start="309:20" pos:end="309:24">121LL</literal><operator pos:start="309:25" pos:end="309:25">*</operator><name pos:start="309:26" pos:end="309:47"><name pos:start="309:26" pos:end="309:32">dec_ctx</name><operator pos:start="309:33" pos:end="309:34">-&gt;</operator><name pos:start="309:35" pos:end="309:43">time_base</name><operator pos:start="309:44" pos:end="309:44">.</operator><name pos:start="309:45" pos:end="309:47">num</name></name> <operator pos:start="309:49" pos:end="309:49">&gt;</operator> <name pos:start="309:51" pos:end="309:72"><name pos:start="309:51" pos:end="309:57">dec_ctx</name><operator pos:start="309:58" pos:end="309:59">-&gt;</operator><name pos:start="309:60" pos:end="309:68">time_base</name><operator pos:start="309:69" pos:end="309:69">.</operator><name pos:start="309:70" pos:end="309:72">den</name></name></expr>)</condition> <block pos:start="309:75" pos:end="313:13">{<block_content pos:start="311:17" pos:end="311:56">

                <expr_stmt pos:start="311:17" pos:end="311:56"><expr pos:start="311:17" pos:end="311:55"><name pos:start="311:17" pos:end="311:34"><name pos:start="311:17" pos:end="311:23">enc_ctx</name><operator pos:start="311:24" pos:end="311:25">-&gt;</operator><name pos:start="311:26" pos:end="311:34">time_base</name></name> <operator pos:start="311:36" pos:end="311:36">=</operator> <name pos:start="311:38" pos:end="311:55"><name pos:start="311:38" pos:end="311:44">dec_ctx</name><operator pos:start="311:45" pos:end="311:46">-&gt;</operator><name pos:start="311:47" pos:end="311:55">time_base</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="317:13" pos:end="319:49"><if pos:start="317:13" pos:end="319:49">if <condition pos:start="317:16" pos:end="317:44">(<expr pos:start="317:17" pos:end="317:43"><name pos:start="317:17" pos:end="317:19">ist</name> <operator pos:start="317:21" pos:end="317:22">&amp;&amp;</operator> <operator pos:start="317:24" pos:end="317:24">!</operator><name pos:start="317:25" pos:end="317:43"><name pos:start="317:25" pos:end="317:27">ost</name><operator pos:start="317:28" pos:end="317:29">-&gt;</operator><name pos:start="317:30" pos:end="317:39">frame_rate</name><operator pos:start="317:40" pos:end="317:40">.</operator><name pos:start="317:41" pos:end="317:43">num</name></name></expr>)</condition><block type="pseudo" pos:start="319:17" pos:end="319:49"><block_content pos:start="319:17" pos:end="319:49">

                <expr_stmt pos:start="319:17" pos:end="319:49"><expr pos:start="319:17" pos:end="319:48"><name pos:start="319:17" pos:end="319:31"><name pos:start="319:17" pos:end="319:19">ost</name><operator pos:start="319:20" pos:end="319:21">-&gt;</operator><name pos:start="319:22" pos:end="319:31">frame_rate</name></name> <operator pos:start="319:33" pos:end="319:33">=</operator> <name pos:start="319:35" pos:end="319:48"><name pos:start="319:35" pos:end="319:37">ist</name><operator pos:start="319:38" pos:end="319:39">-&gt;</operator><name pos:start="319:40" pos:end="319:48">framerate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="321:13" pos:end="323:63"><if pos:start="321:13" pos:end="323:63">if<condition pos:start="321:15" pos:end="321:35">(<expr pos:start="321:16" pos:end="321:34"><name pos:start="321:16" pos:end="321:34"><name pos:start="321:16" pos:end="321:18">ost</name><operator pos:start="321:19" pos:end="321:20">-&gt;</operator><name pos:start="321:21" pos:end="321:30">frame_rate</name><operator pos:start="321:31" pos:end="321:31">.</operator><name pos:start="321:32" pos:end="321:34">num</name></name></expr>)</condition><block type="pseudo" pos:start="323:17" pos:end="323:63"><block_content pos:start="323:17" pos:end="323:63">

                <expr_stmt pos:start="323:17" pos:end="323:63"><expr pos:start="323:17" pos:end="323:62"><name pos:start="323:17" pos:end="323:34"><name pos:start="323:17" pos:end="323:23">enc_ctx</name><operator pos:start="323:24" pos:end="323:25">-&gt;</operator><name pos:start="323:26" pos:end="323:34">time_base</name></name> <operator pos:start="323:36" pos:end="323:36">=</operator> <call pos:start="323:38" pos:end="323:62"><name pos:start="323:38" pos:end="323:45">av_inv_q</name><argument_list pos:start="323:46" pos:end="323:62">(<argument pos:start="323:47" pos:end="323:61"><expr pos:start="323:47" pos:end="323:61"><name pos:start="323:47" pos:end="323:61"><name pos:start="323:47" pos:end="323:49">ost</name><operator pos:start="323:50" pos:end="323:51">-&gt;</operator><name pos:start="323:52" pos:end="323:61">frame_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="327:13" pos:end="329:81"><expr pos:start="327:13" pos:end="329:80"><call pos:start="327:13" pos:end="329:80"><name pos:start="327:13" pos:end="327:21">av_reduce</name><argument_list pos:start="327:22" pos:end="329:80">(<argument pos:start="327:23" pos:end="327:45"><expr pos:start="327:23" pos:end="327:45"><operator pos:start="327:23" pos:end="327:23">&amp;</operator><name pos:start="327:24" pos:end="327:45"><name pos:start="327:24" pos:end="327:30">enc_ctx</name><operator pos:start="327:31" pos:end="327:32">-&gt;</operator><name pos:start="327:33" pos:end="327:41">time_base</name><operator pos:start="327:42" pos:end="327:42">.</operator><name pos:start="327:43" pos:end="327:45">num</name></name></expr></argument>, <argument pos:start="327:48" pos:end="327:70"><expr pos:start="327:48" pos:end="327:70"><operator pos:start="327:48" pos:end="327:48">&amp;</operator><name pos:start="327:49" pos:end="327:70"><name pos:start="327:49" pos:end="327:55">enc_ctx</name><operator pos:start="327:56" pos:end="327:57">-&gt;</operator><name pos:start="327:58" pos:end="327:66">time_base</name><operator pos:start="327:67" pos:end="327:67">.</operator><name pos:start="327:68" pos:end="327:70">den</name></name></expr></argument>,

                        <argument pos:start="329:25" pos:end="329:46"><expr pos:start="329:25" pos:end="329:46"><name pos:start="329:25" pos:end="329:46"><name pos:start="329:25" pos:end="329:31">enc_ctx</name><operator pos:start="329:32" pos:end="329:33">-&gt;</operator><name pos:start="329:34" pos:end="329:42">time_base</name><operator pos:start="329:43" pos:end="329:43">.</operator><name pos:start="329:44" pos:end="329:46">num</name></name></expr></argument>, <argument pos:start="329:49" pos:end="329:70"><expr pos:start="329:49" pos:end="329:70"><name pos:start="329:49" pos:end="329:70"><name pos:start="329:49" pos:end="329:55">enc_ctx</name><operator pos:start="329:56" pos:end="329:57">-&gt;</operator><name pos:start="329:58" pos:end="329:66">time_base</name><operator pos:start="329:67" pos:end="329:67">.</operator><name pos:start="329:68" pos:end="329:70">den</name></name></expr></argument>, <argument pos:start="329:73" pos:end="329:79"><expr pos:start="329:73" pos:end="329:79"><name pos:start="329:73" pos:end="329:79">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="333:13" pos:end="369:13"><if pos:start="333:13" pos:end="369:13">if <condition pos:start="333:16" pos:end="333:38">(<expr pos:start="333:17" pos:end="333:37"><name pos:start="333:17" pos:end="333:37"><name pos:start="333:17" pos:end="333:19">ist</name><operator pos:start="333:20" pos:end="333:21">-&gt;</operator><name pos:start="333:22" pos:end="333:23">st</name><operator pos:start="333:24" pos:end="333:25">-&gt;</operator><name pos:start="333:26" pos:end="333:37">nb_side_data</name></name></expr>)</condition> <block pos:start="333:40" pos:end="369:13">{<block_content pos:start="335:17" pos:end="367:17">

                <expr_stmt pos:start="335:17" pos:end="337:83"><expr pos:start="335:17" pos:end="337:82"><name pos:start="335:17" pos:end="335:34"><name pos:start="335:17" pos:end="335:19">ost</name><operator pos:start="335:20" pos:end="335:21">-&gt;</operator><name pos:start="335:22" pos:end="335:23">st</name><operator pos:start="335:24" pos:end="335:25">-&gt;</operator><name pos:start="335:26" pos:end="335:34">side_data</name></name> <operator pos:start="335:36" pos:end="335:36">=</operator> <call pos:start="335:38" pos:end="337:82"><name pos:start="335:38" pos:end="335:53">av_realloc_array</name><argument_list pos:start="335:54" pos:end="337:82">(<argument pos:start="335:55" pos:end="335:58"><expr pos:start="335:55" pos:end="335:58"><name pos:start="335:55" pos:end="335:58">NULL</name></expr></argument>, <argument pos:start="335:61" pos:end="335:81"><expr pos:start="335:61" pos:end="335:81"><name pos:start="335:61" pos:end="335:81"><name pos:start="335:61" pos:end="335:63">ist</name><operator pos:start="335:64" pos:end="335:65">-&gt;</operator><name pos:start="335:66" pos:end="335:67">st</name><operator pos:start="335:68" pos:end="335:69">-&gt;</operator><name pos:start="335:70" pos:end="335:81">nb_side_data</name></name></expr></argument>,

                                                      <argument pos:start="337:55" pos:end="337:81"><expr pos:start="337:55" pos:end="337:81"><sizeof pos:start="337:55" pos:end="337:81">sizeof<argument_list pos:start="337:61" pos:end="337:81">(<argument pos:start="337:62" pos:end="337:80"><expr pos:start="337:62" pos:end="337:80"><operator pos:start="337:62" pos:end="337:62">*</operator><name pos:start="337:63" pos:end="337:80"><name pos:start="337:63" pos:end="337:65">ist</name><operator pos:start="337:66" pos:end="337:67">-&gt;</operator><name pos:start="337:68" pos:end="337:69">st</name><operator pos:start="337:70" pos:end="337:71">-&gt;</operator><name pos:start="337:72" pos:end="337:80">side_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="339:17" pos:end="341:43"><if pos:start="339:17" pos:end="341:43">if <condition pos:start="339:20" pos:end="339:40">(<expr pos:start="339:21" pos:end="339:39"><operator pos:start="339:21" pos:end="339:21">!</operator><name pos:start="339:22" pos:end="339:39"><name pos:start="339:22" pos:end="339:24">ost</name><operator pos:start="339:25" pos:end="339:26">-&gt;</operator><name pos:start="339:27" pos:end="339:28">st</name><operator pos:start="339:29" pos:end="339:30">-&gt;</operator><name pos:start="339:31" pos:end="339:39">side_data</name></name></expr>)</condition><block type="pseudo" pos:start="341:21" pos:end="341:43"><block_content pos:start="341:21" pos:end="341:43">

                    <return pos:start="341:21" pos:end="341:43">return <expr pos:start="341:28" pos:end="341:42"><call pos:start="341:28" pos:end="341:42"><name pos:start="341:28" pos:end="341:34">AVERROR</name><argument_list pos:start="341:35" pos:end="341:42">(<argument pos:start="341:36" pos:end="341:41"><expr pos:start="341:36" pos:end="341:41"><name pos:start="341:36" pos:end="341:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



                <for pos:start="345:17" pos:end="367:17">for <control pos:start="345:21" pos:end="345:59">(<init pos:start="345:22" pos:end="345:27"><expr pos:start="345:22" pos:end="345:26"><name pos:start="345:22" pos:end="345:22">j</name> <operator pos:start="345:24" pos:end="345:24">=</operator> <literal type="number" pos:start="345:26" pos:end="345:26">0</literal></expr>;</init> <condition pos:start="345:29" pos:end="345:54"><expr pos:start="345:29" pos:end="345:53"><name pos:start="345:29" pos:end="345:29">j</name> <operator pos:start="345:31" pos:end="345:31">&lt;</operator> <name pos:start="345:33" pos:end="345:53"><name pos:start="345:33" pos:end="345:35">ist</name><operator pos:start="345:36" pos:end="345:37">-&gt;</operator><name pos:start="345:38" pos:end="345:39">st</name><operator pos:start="345:40" pos:end="345:41">-&gt;</operator><name pos:start="345:42" pos:end="345:53">nb_side_data</name></name></expr>;</condition> <incr pos:start="345:56" pos:end="345:58"><expr pos:start="345:56" pos:end="345:58"><name pos:start="345:56" pos:end="345:56">j</name><operator pos:start="345:57" pos:end="345:58">++</operator></expr></incr>)</control> <block pos:start="345:61" pos:end="367:17">{<block_content pos:start="347:21" pos:end="365:44">

                    <decl_stmt pos:start="347:21" pos:end="347:76"><decl pos:start="347:21" pos:end="347:75"><type pos:start="347:21" pos:end="347:44"><specifier pos:start="347:21" pos:end="347:25">const</specifier> <name pos:start="347:27" pos:end="347:42">AVPacketSideData</name> <modifier pos:start="347:44" pos:end="347:44">*</modifier></type><name pos:start="347:45" pos:end="347:50">sd_src</name> <init pos:start="347:52" pos:end="347:75">= <expr pos:start="347:54" pos:end="347:75"><operator pos:start="347:54" pos:end="347:54">&amp;</operator><name pos:start="347:55" pos:end="347:75"><name pos:start="347:55" pos:end="347:57">ist</name><operator pos:start="347:58" pos:end="347:59">-&gt;</operator><name pos:start="347:60" pos:end="347:61">st</name><operator pos:start="347:62" pos:end="347:63">-&gt;</operator><name pos:start="347:64" pos:end="347:72">side_data</name><index pos:start="347:73" pos:end="347:75">[<expr pos:start="347:74" pos:end="347:74"><name pos:start="347:74" pos:end="347:74">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="349:21" pos:end="349:70"><decl pos:start="349:21" pos:end="349:69"><type pos:start="349:21" pos:end="349:38"><name pos:start="349:21" pos:end="349:36">AVPacketSideData</name> <modifier pos:start="349:38" pos:end="349:38">*</modifier></type><name pos:start="349:39" pos:end="349:44">sd_dst</name> <init pos:start="349:46" pos:end="349:69">= <expr pos:start="349:48" pos:end="349:69"><operator pos:start="349:48" pos:end="349:48">&amp;</operator><name pos:start="349:49" pos:end="349:69"><name pos:start="349:49" pos:end="349:51">ost</name><operator pos:start="349:52" pos:end="349:53">-&gt;</operator><name pos:start="349:54" pos:end="349:55">st</name><operator pos:start="349:56" pos:end="349:57">-&gt;</operator><name pos:start="349:58" pos:end="349:66">side_data</name><index pos:start="349:67" pos:end="349:69">[<expr pos:start="349:68" pos:end="349:68"><name pos:start="349:68" pos:end="349:68">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="353:21" pos:end="353:59"><expr pos:start="353:21" pos:end="353:58"><name pos:start="353:21" pos:end="353:32"><name pos:start="353:21" pos:end="353:26">sd_dst</name><operator pos:start="353:27" pos:end="353:28">-&gt;</operator><name pos:start="353:29" pos:end="353:32">data</name></name> <operator pos:start="353:34" pos:end="353:34">=</operator> <call pos:start="353:36" pos:end="353:58"><name pos:start="353:36" pos:end="353:44">av_malloc</name><argument_list pos:start="353:45" pos:end="353:58">(<argument pos:start="353:46" pos:end="353:57"><expr pos:start="353:46" pos:end="353:57"><name pos:start="353:46" pos:end="353:57"><name pos:start="353:46" pos:end="353:51">sd_src</name><operator pos:start="353:52" pos:end="353:53">-&gt;</operator><name pos:start="353:54" pos:end="353:57">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="355:21" pos:end="357:47"><if pos:start="355:21" pos:end="357:47">if <condition pos:start="355:24" pos:end="355:38">(<expr pos:start="355:25" pos:end="355:37"><operator pos:start="355:25" pos:end="355:25">!</operator><name pos:start="355:26" pos:end="355:37"><name pos:start="355:26" pos:end="355:31">sd_dst</name><operator pos:start="355:32" pos:end="355:33">-&gt;</operator><name pos:start="355:34" pos:end="355:37">data</name></name></expr>)</condition><block type="pseudo" pos:start="357:25" pos:end="357:47"><block_content pos:start="357:25" pos:end="357:47">

                        <return pos:start="357:25" pos:end="357:47">return <expr pos:start="357:32" pos:end="357:46"><call pos:start="357:32" pos:end="357:46"><name pos:start="357:32" pos:end="357:38">AVERROR</name><argument_list pos:start="357:39" pos:end="357:46">(<argument pos:start="357:40" pos:end="357:45"><expr pos:start="357:40" pos:end="357:45"><name pos:start="357:40" pos:end="357:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="359:21" pos:end="359:69"><expr pos:start="359:21" pos:end="359:68"><call pos:start="359:21" pos:end="359:68"><name pos:start="359:21" pos:end="359:26">memcpy</name><argument_list pos:start="359:27" pos:end="359:68">(<argument pos:start="359:28" pos:end="359:39"><expr pos:start="359:28" pos:end="359:39"><name pos:start="359:28" pos:end="359:39"><name pos:start="359:28" pos:end="359:33">sd_dst</name><operator pos:start="359:34" pos:end="359:35">-&gt;</operator><name pos:start="359:36" pos:end="359:39">data</name></name></expr></argument>, <argument pos:start="359:42" pos:end="359:53"><expr pos:start="359:42" pos:end="359:53"><name pos:start="359:42" pos:end="359:53"><name pos:start="359:42" pos:end="359:47">sd_src</name><operator pos:start="359:48" pos:end="359:49">-&gt;</operator><name pos:start="359:50" pos:end="359:53">data</name></name></expr></argument>, <argument pos:start="359:56" pos:end="359:67"><expr pos:start="359:56" pos:end="359:67"><name pos:start="359:56" pos:end="359:67"><name pos:start="359:56" pos:end="359:61">sd_src</name><operator pos:start="359:62" pos:end="359:63">-&gt;</operator><name pos:start="359:64" pos:end="359:67">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="361:21" pos:end="361:48"><expr pos:start="361:21" pos:end="361:47"><name pos:start="361:21" pos:end="361:32"><name pos:start="361:21" pos:end="361:26">sd_dst</name><operator pos:start="361:27" pos:end="361:28">-&gt;</operator><name pos:start="361:29" pos:end="361:32">size</name></name> <operator pos:start="361:34" pos:end="361:34">=</operator> <name pos:start="361:36" pos:end="361:47"><name pos:start="361:36" pos:end="361:41">sd_src</name><operator pos:start="361:42" pos:end="361:43">-&gt;</operator><name pos:start="361:44" pos:end="361:47">size</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="363:21" pos:end="363:48"><expr pos:start="363:21" pos:end="363:47"><name pos:start="363:21" pos:end="363:32"><name pos:start="363:21" pos:end="363:26">sd_dst</name><operator pos:start="363:27" pos:end="363:28">-&gt;</operator><name pos:start="363:29" pos:end="363:32">type</name></name> <operator pos:start="363:34" pos:end="363:34">=</operator> <name pos:start="363:36" pos:end="363:47"><name pos:start="363:36" pos:end="363:41">sd_src</name><operator pos:start="363:42" pos:end="363:43">-&gt;</operator><name pos:start="363:44" pos:end="363:47">type</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="365:21" pos:end="365:44"><expr pos:start="365:21" pos:end="365:43"><name pos:start="365:21" pos:end="365:41"><name pos:start="365:21" pos:end="365:23">ost</name><operator pos:start="365:24" pos:end="365:25">-&gt;</operator><name pos:start="365:26" pos:end="365:27">st</name><operator pos:start="365:28" pos:end="365:29">-&gt;</operator><name pos:start="365:30" pos:end="365:41">nb_side_data</name></name><operator pos:start="365:42" pos:end="365:43">++</operator></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="373:13" pos:end="373:60"><expr pos:start="373:13" pos:end="373:59"><name pos:start="373:13" pos:end="373:23"><name pos:start="373:13" pos:end="373:15">ost</name><operator pos:start="373:16" pos:end="373:17">-&gt;</operator><name pos:start="373:18" pos:end="373:23">parser</name></name> <operator pos:start="373:25" pos:end="373:25">=</operator> <call pos:start="373:27" pos:end="373:59"><name pos:start="373:27" pos:end="373:40">av_parser_init</name><argument_list pos:start="373:41" pos:end="373:59">(<argument pos:start="373:42" pos:end="373:58"><expr pos:start="373:42" pos:end="373:58"><name pos:start="373:42" pos:end="373:58"><name pos:start="373:42" pos:end="373:48">enc_ctx</name><operator pos:start="373:49" pos:end="373:50">-&gt;</operator><name pos:start="373:51" pos:end="373:58">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <switch pos:start="377:13" pos:end="477:13">switch <condition pos:start="377:20" pos:end="377:40">(<expr pos:start="377:21" pos:end="377:39"><name pos:start="377:21" pos:end="377:39"><name pos:start="377:21" pos:end="377:27">enc_ctx</name><operator pos:start="377:28" pos:end="377:29">-&gt;</operator><name pos:start="377:30" pos:end="377:39">codec_type</name></name></expr>)</condition> <block pos:start="377:42" pos:end="477:13">{<block_content pos:start="379:13" pos:end="475:24">

            <case pos:start="379:13" pos:end="379:36">case <expr pos:start="379:18" pos:end="379:35"><name pos:start="379:18" pos:end="379:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <if_stmt pos:start="381:17" pos:end="387:17"><if pos:start="381:17" pos:end="387:17">if <condition pos:start="381:20" pos:end="381:40">(<expr pos:start="381:21" pos:end="381:39"><name pos:start="381:21" pos:end="381:32">audio_volume</name> <operator pos:start="381:34" pos:end="381:35">!=</operator> <literal type="number" pos:start="381:37" pos:end="381:39">256</literal></expr>)</condition> <block pos:start="381:42" pos:end="387:17">{<block_content pos:start="383:21" pos:end="385:36">

                    <expr_stmt pos:start="383:21" pos:end="383:116"><expr pos:start="383:21" pos:end="383:115"><call pos:start="383:21" pos:end="383:115"><name pos:start="383:21" pos:end="383:26">av_log</name><argument_list pos:start="383:27" pos:end="383:115">(<argument pos:start="383:28" pos:end="383:31"><expr pos:start="383:28" pos:end="383:31"><name pos:start="383:28" pos:end="383:31">NULL</name></expr></argument>, <argument pos:start="383:34" pos:end="383:45"><expr pos:start="383:34" pos:end="383:45"><name pos:start="383:34" pos:end="383:45">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="383:48" pos:end="383:114"><expr pos:start="383:48" pos:end="383:114"><literal type="string" pos:start="383:48" pos:end="383:114">"-acodec copy and -vol are incompatible (frames are not decoded)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="385:21" pos:end="385:36"><expr pos:start="385:21" pos:end="385:35"><call pos:start="385:21" pos:end="385:35"><name pos:start="385:21" pos:end="385:32">exit_program</name><argument_list pos:start="385:33" pos:end="385:35">(<argument pos:start="385:34" pos:end="385:34"><expr pos:start="385:34" pos:end="385:34"><literal type="number" pos:start="385:34" pos:end="385:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="389:17" pos:end="389:70"><expr pos:start="389:17" pos:end="389:69"><name pos:start="389:17" pos:end="389:39"><name pos:start="389:17" pos:end="389:23">enc_ctx</name><operator pos:start="389:24" pos:end="389:25">-&gt;</operator><name pos:start="389:26" pos:end="389:39">channel_layout</name></name>     <operator pos:start="389:45" pos:end="389:45">=</operator> <name pos:start="389:47" pos:end="389:69"><name pos:start="389:47" pos:end="389:53">dec_ctx</name><operator pos:start="389:54" pos:end="389:55">-&gt;</operator><name pos:start="389:56" pos:end="389:69">channel_layout</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="391:17" pos:end="391:67"><expr pos:start="391:17" pos:end="391:66"><name pos:start="391:17" pos:end="391:36"><name pos:start="391:17" pos:end="391:23">enc_ctx</name><operator pos:start="391:24" pos:end="391:25">-&gt;</operator><name pos:start="391:26" pos:end="391:36">sample_rate</name></name>        <operator pos:start="391:45" pos:end="391:45">=</operator> <name pos:start="391:47" pos:end="391:66"><name pos:start="391:47" pos:end="391:53">dec_ctx</name><operator pos:start="391:54" pos:end="391:55">-&gt;</operator><name pos:start="391:56" pos:end="391:66">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="393:17" pos:end="393:64"><expr pos:start="393:17" pos:end="393:63"><name pos:start="393:17" pos:end="393:33"><name pos:start="393:17" pos:end="393:23">enc_ctx</name><operator pos:start="393:24" pos:end="393:25">-&gt;</operator><name pos:start="393:26" pos:end="393:33">channels</name></name>           <operator pos:start="393:45" pos:end="393:45">=</operator> <name pos:start="393:47" pos:end="393:63"><name pos:start="393:47" pos:end="393:53">dec_ctx</name><operator pos:start="393:54" pos:end="393:55">-&gt;</operator><name pos:start="393:56" pos:end="393:63">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="395:17" pos:end="395:66"><expr pos:start="395:17" pos:end="395:65"><name pos:start="395:17" pos:end="395:35"><name pos:start="395:17" pos:end="395:23">enc_ctx</name><operator pos:start="395:24" pos:end="395:25">-&gt;</operator><name pos:start="395:26" pos:end="395:35">frame_size</name></name>         <operator pos:start="395:45" pos:end="395:45">=</operator> <name pos:start="395:47" pos:end="395:65"><name pos:start="395:47" pos:end="395:53">dec_ctx</name><operator pos:start="395:54" pos:end="395:55">-&gt;</operator><name pos:start="395:56" pos:end="395:65">frame_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="397:17" pos:end="397:74"><expr pos:start="397:17" pos:end="397:73"><name pos:start="397:17" pos:end="397:43"><name pos:start="397:17" pos:end="397:23">enc_ctx</name><operator pos:start="397:24" pos:end="397:25">-&gt;</operator><name pos:start="397:26" pos:end="397:43">audio_service_type</name></name> <operator pos:start="397:45" pos:end="397:45">=</operator> <name pos:start="397:47" pos:end="397:73"><name pos:start="397:47" pos:end="397:53">dec_ctx</name><operator pos:start="397:54" pos:end="397:55">-&gt;</operator><name pos:start="397:56" pos:end="397:73">audio_service_type</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:67"><expr pos:start="399:17" pos:end="399:66"><name pos:start="399:17" pos:end="399:36"><name pos:start="399:17" pos:end="399:23">enc_ctx</name><operator pos:start="399:24" pos:end="399:25">-&gt;</operator><name pos:start="399:26" pos:end="399:36">block_align</name></name>        <operator pos:start="399:45" pos:end="399:45">=</operator> <name pos:start="399:47" pos:end="399:66"><name pos:start="399:47" pos:end="399:53">dec_ctx</name><operator pos:start="399:54" pos:end="399:55">-&gt;</operator><name pos:start="399:56" pos:end="399:66">block_align</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="401:17" pos:end="404:0"><expr pos:start="401:17" pos:end="401:60"><name pos:start="401:17" pos:end="401:40"><name pos:start="401:17" pos:end="401:23">enc_ctx</name><operator pos:start="401:24" pos:end="401:25">-&gt;</operator><name pos:start="401:26" pos:end="401:40">initial_padding</name></name>    <operator pos:start="401:45" pos:end="401:45">=</operator> <name pos:start="401:47" pos:end="401:60"><name pos:start="401:47" pos:end="401:53">dec_ctx</name><operator pos:start="401:54" pos:end="401:55">-&gt;</operator><name pos:start="401:56" pos:end="401:60">delay</name></name></expr>;</expr_stmt>

<cpp:if pos:start="403:1" pos:end="403:25">#<cpp:directive pos:start="403:2" pos:end="403:3">if</cpp:directive> <expr pos:start="403:5" pos:end="403:25"><name pos:start="403:5" pos:end="403:25">FF_API_AUDIOENC_DELAY</name></expr></cpp:if>

                <expr_stmt pos:start="405:17" pos:end="408:0"><expr pos:start="405:17" pos:end="405:60"><name pos:start="405:17" pos:end="405:30"><name pos:start="405:17" pos:end="405:23">enc_ctx</name><operator pos:start="405:24" pos:end="405:25">-&gt;</operator><name pos:start="405:26" pos:end="405:30">delay</name></name>              <operator pos:start="405:45" pos:end="405:45">=</operator> <name pos:start="405:47" pos:end="405:60"><name pos:start="405:47" pos:end="405:53">dec_ctx</name><operator pos:start="405:54" pos:end="405:55">-&gt;</operator><name pos:start="405:56" pos:end="405:60">delay</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="407:1" pos:end="407:6">#<cpp:directive pos:start="407:2" pos:end="407:6">endif</cpp:directive></cpp:endif>

                <if_stmt pos:start="409:17" pos:end="411:44"><if pos:start="409:17" pos:end="411:44">if<condition pos:start="409:19" pos:end="409:150">(<expr pos:start="409:20" pos:end="409:149"><operator pos:start="409:20" pos:end="409:20">(</operator><name pos:start="409:21" pos:end="409:40"><name pos:start="409:21" pos:end="409:27">enc_ctx</name><operator pos:start="409:28" pos:end="409:29">-&gt;</operator><name pos:start="409:30" pos:end="409:40">block_align</name></name> <operator pos:start="409:42" pos:end="409:43">==</operator> <literal type="number" pos:start="409:45" pos:end="409:45">1</literal> <operator pos:start="409:47" pos:end="409:48">||</operator> <name pos:start="409:50" pos:end="409:69"><name pos:start="409:50" pos:end="409:56">enc_ctx</name><operator pos:start="409:57" pos:end="409:58">-&gt;</operator><name pos:start="409:59" pos:end="409:69">block_align</name></name> <operator pos:start="409:71" pos:end="409:72">==</operator> <literal type="number" pos:start="409:74" pos:end="409:77">1152</literal> <operator pos:start="409:79" pos:end="409:80">||</operator> <name pos:start="409:82" pos:end="409:101"><name pos:start="409:82" pos:end="409:88">enc_ctx</name><operator pos:start="409:89" pos:end="409:90">-&gt;</operator><name pos:start="409:91" pos:end="409:101">block_align</name></name> <operator pos:start="409:103" pos:end="409:104">==</operator> <literal type="number" pos:start="409:106" pos:end="409:108">576</literal><operator pos:start="409:109" pos:end="409:109">)</operator> <operator pos:start="409:111" pos:end="409:112">&amp;&amp;</operator> <name pos:start="409:114" pos:end="409:130"><name pos:start="409:114" pos:end="409:120">enc_ctx</name><operator pos:start="409:121" pos:end="409:122">-&gt;</operator><name pos:start="409:123" pos:end="409:130">codec_id</name></name> <operator pos:start="409:132" pos:end="409:133">==</operator> <name pos:start="409:135" pos:end="409:149">AV_CODEC_ID_MP3</name></expr>)</condition><block type="pseudo" pos:start="411:21" pos:end="411:44"><block_content pos:start="411:21" pos:end="411:44">

                    <expr_stmt pos:start="411:21" pos:end="411:44"><expr pos:start="411:21" pos:end="411:43"><name pos:start="411:21" pos:end="411:40"><name pos:start="411:21" pos:end="411:27">enc_ctx</name><operator pos:start="411:28" pos:end="411:29">-&gt;</operator><name pos:start="411:30" pos:end="411:40">block_align</name></name><operator pos:start="411:41" pos:end="411:41">=</operator> <literal type="number" pos:start="411:43" pos:end="411:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="413:17" pos:end="415:44"><if pos:start="413:17" pos:end="415:44">if<condition pos:start="413:19" pos:end="413:56">(<expr pos:start="413:20" pos:end="413:55"><name pos:start="413:20" pos:end="413:36"><name pos:start="413:20" pos:end="413:26">enc_ctx</name><operator pos:start="413:27" pos:end="413:28">-&gt;</operator><name pos:start="413:29" pos:end="413:36">codec_id</name></name> <operator pos:start="413:38" pos:end="413:39">==</operator> <name pos:start="413:41" pos:end="413:55">AV_CODEC_ID_AC3</name></expr>)</condition><block type="pseudo" pos:start="415:21" pos:end="415:44"><block_content pos:start="415:21" pos:end="415:44">

                    <expr_stmt pos:start="415:21" pos:end="415:44"><expr pos:start="415:21" pos:end="415:43"><name pos:start="415:21" pos:end="415:40"><name pos:start="415:21" pos:end="415:27">enc_ctx</name><operator pos:start="415:28" pos:end="415:29">-&gt;</operator><name pos:start="415:30" pos:end="415:40">block_align</name></name><operator pos:start="415:41" pos:end="415:41">=</operator> <literal type="number" pos:start="415:43" pos:end="415:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="417:17" pos:end="417:22">break;</break>

            <case pos:start="419:13" pos:end="419:36">case <expr pos:start="419:18" pos:end="419:35"><name pos:start="419:18" pos:end="419:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="421:17" pos:end="421:63"><expr pos:start="421:17" pos:end="421:62"><name pos:start="421:17" pos:end="421:32"><name pos:start="421:17" pos:end="421:23">enc_ctx</name><operator pos:start="421:24" pos:end="421:25">-&gt;</operator><name pos:start="421:26" pos:end="421:32">pix_fmt</name></name>            <operator pos:start="421:45" pos:end="421:45">=</operator> <name pos:start="421:47" pos:end="421:62"><name pos:start="421:47" pos:end="421:53">dec_ctx</name><operator pos:start="421:54" pos:end="421:55">-&gt;</operator><name pos:start="421:56" pos:end="421:62">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="423:17" pos:end="423:61"><expr pos:start="423:17" pos:end="423:60"><name pos:start="423:17" pos:end="423:30"><name pos:start="423:17" pos:end="423:23">enc_ctx</name><operator pos:start="423:24" pos:end="423:25">-&gt;</operator><name pos:start="423:26" pos:end="423:30">width</name></name>              <operator pos:start="423:45" pos:end="423:45">=</operator> <name pos:start="423:47" pos:end="423:60"><name pos:start="423:47" pos:end="423:53">dec_ctx</name><operator pos:start="423:54" pos:end="423:55">-&gt;</operator><name pos:start="423:56" pos:end="423:60">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="425:17" pos:end="425:62"><expr pos:start="425:17" pos:end="425:61"><name pos:start="425:17" pos:end="425:31"><name pos:start="425:17" pos:end="425:23">enc_ctx</name><operator pos:start="425:24" pos:end="425:25">-&gt;</operator><name pos:start="425:26" pos:end="425:31">height</name></name>             <operator pos:start="425:45" pos:end="425:45">=</operator> <name pos:start="425:47" pos:end="425:61"><name pos:start="425:47" pos:end="425:53">dec_ctx</name><operator pos:start="425:54" pos:end="425:55">-&gt;</operator><name pos:start="425:56" pos:end="425:61">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="427:17" pos:end="427:68"><expr pos:start="427:17" pos:end="427:67"><name pos:start="427:17" pos:end="427:37"><name pos:start="427:17" pos:end="427:23">enc_ctx</name><operator pos:start="427:24" pos:end="427:25">-&gt;</operator><name pos:start="427:26" pos:end="427:37">has_b_frames</name></name>       <operator pos:start="427:45" pos:end="427:45">=</operator> <name pos:start="427:47" pos:end="427:67"><name pos:start="427:47" pos:end="427:53">dec_ctx</name><operator pos:start="427:54" pos:end="427:55">-&gt;</operator><name pos:start="427:56" pos:end="427:67">has_b_frames</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="429:17" pos:end="449:55"><if pos:start="429:17" pos:end="441:17">if <condition pos:start="429:20" pos:end="429:48">(<expr pos:start="429:21" pos:end="429:47"><name pos:start="429:21" pos:end="429:47"><name pos:start="429:21" pos:end="429:23">ost</name><operator pos:start="429:24" pos:end="429:25">-&gt;</operator><name pos:start="429:26" pos:end="429:43">frame_aspect_ratio</name><operator pos:start="429:44" pos:end="429:44">.</operator><name pos:start="429:45" pos:end="429:47">num</name></name></expr>)</condition> <block pos:start="429:50" pos:end="441:17">{<block_content pos:start="431:21" pos:end="439:75"> <comment type="line" pos:start="429:52" pos:end="429:90">// overridden by the -aspect cli option</comment>

                    <expr_stmt pos:start="431:21" pos:end="435:82"><expr pos:start="431:21" pos:end="435:81"><name pos:start="431:21" pos:end="431:23">sar</name> <operator pos:start="431:25" pos:end="431:25">=</operator>

                        <macro pos:start="433:25" pos:end="435:81"><name pos:start="433:25" pos:end="433:32">av_mul_q</name><argument_list pos:start="433:33" pos:end="435:81">(<argument pos:start="433:34" pos:end="433:56">ost-&gt;frame_aspect_ratio</argument>,

                                 <argument pos:start="435:34" pos:end="435:62">(AVRational){ enc_ctx-&gt;height</argument>, <argument pos:start="435:65" pos:end="435:80">enc_ctx-&gt;width }</argument>)</argument_list></macro></expr>;</expr_stmt>

                    <expr_stmt pos:start="437:21" pos:end="439:75"><expr pos:start="437:21" pos:end="439:74"><call pos:start="437:21" pos:end="439:74"><name pos:start="437:21" pos:end="437:26">av_log</name><argument_list pos:start="437:27" pos:end="439:74">(<argument pos:start="437:28" pos:end="437:31"><expr pos:start="437:28" pos:end="437:31"><name pos:start="437:28" pos:end="437:31">NULL</name></expr></argument>, <argument pos:start="437:34" pos:end="437:47"><expr pos:start="437:34" pos:end="437:47"><name pos:start="437:34" pos:end="437:47">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="437:50" pos:end="439:73"><expr pos:start="437:50" pos:end="439:73"><literal type="string" pos:start="437:50" pos:end="437:75">"Overriding aspect ratio "</literal>

                           <literal type="string" pos:start="439:28" pos:end="439:73">"with stream copy may produce invalid files\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if>

                <if type="elseif" pos:start="443:17" pos:end="445:55">else if <condition pos:start="443:25" pos:end="443:58">(<expr pos:start="443:26" pos:end="443:57"><name pos:start="443:26" pos:end="443:57"><name pos:start="443:26" pos:end="443:28">ist</name><operator pos:start="443:29" pos:end="443:30">-&gt;</operator><name pos:start="443:31" pos:end="443:32">st</name><operator pos:start="443:33" pos:end="443:34">-&gt;</operator><name pos:start="443:35" pos:end="443:53">sample_aspect_ratio</name><operator pos:start="443:54" pos:end="443:54">.</operator><name pos:start="443:55" pos:end="443:57">num</name></name></expr>)</condition><block type="pseudo" pos:start="445:21" pos:end="445:55"><block_content pos:start="445:21" pos:end="445:55">

                    <expr_stmt pos:start="445:21" pos:end="445:55"><expr pos:start="445:21" pos:end="445:54"><name pos:start="445:21" pos:end="445:23">sar</name> <operator pos:start="445:25" pos:end="445:25">=</operator> <name pos:start="445:27" pos:end="445:54"><name pos:start="445:27" pos:end="445:29">ist</name><operator pos:start="445:30" pos:end="445:31">-&gt;</operator><name pos:start="445:32" pos:end="445:33">st</name><operator pos:start="445:34" pos:end="445:35">-&gt;</operator><name pos:start="445:36" pos:end="445:54">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="447:17" pos:end="449:55">else<block type="pseudo" pos:start="449:21" pos:end="449:55"><block_content pos:start="449:21" pos:end="449:55">

                    <expr_stmt pos:start="449:21" pos:end="449:55"><expr pos:start="449:21" pos:end="449:54"><name pos:start="449:21" pos:end="449:23">sar</name> <operator pos:start="449:25" pos:end="449:25">=</operator> <name pos:start="449:27" pos:end="449:54"><name pos:start="449:27" pos:end="449:33">dec_ctx</name><operator pos:start="449:34" pos:end="449:35">-&gt;</operator><name pos:start="449:36" pos:end="449:54">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="451:17" pos:end="451:82"><expr pos:start="451:17" pos:end="451:81"><name pos:start="451:17" pos:end="451:44"><name pos:start="451:17" pos:end="451:19">ost</name><operator pos:start="451:20" pos:end="451:21">-&gt;</operator><name pos:start="451:22" pos:end="451:23">st</name><operator pos:start="451:24" pos:end="451:25">-&gt;</operator><name pos:start="451:26" pos:end="451:44">sample_aspect_ratio</name></name> <operator pos:start="451:46" pos:end="451:46">=</operator> <name pos:start="451:48" pos:end="451:75"><name pos:start="451:48" pos:end="451:54">enc_ctx</name><operator pos:start="451:55" pos:end="451:56">-&gt;</operator><name pos:start="451:57" pos:end="451:75">sample_aspect_ratio</name></name> <operator pos:start="451:77" pos:end="451:77">=</operator> <name pos:start="451:79" pos:end="451:81">sar</name></expr>;</expr_stmt>

                <expr_stmt pos:start="453:17" pos:end="453:66"><expr pos:start="453:17" pos:end="453:65"><name pos:start="453:17" pos:end="453:39"><name pos:start="453:17" pos:end="453:19">ost</name><operator pos:start="453:20" pos:end="453:21">-&gt;</operator><name pos:start="453:22" pos:end="453:23">st</name><operator pos:start="453:24" pos:end="453:25">-&gt;</operator><name pos:start="453:26" pos:end="453:39">avg_frame_rate</name></name> <operator pos:start="453:41" pos:end="453:41">=</operator> <name pos:start="453:43" pos:end="453:65"><name pos:start="453:43" pos:end="453:45">ist</name><operator pos:start="453:46" pos:end="453:47">-&gt;</operator><name pos:start="453:48" pos:end="453:49">st</name><operator pos:start="453:50" pos:end="453:51">-&gt;</operator><name pos:start="453:52" pos:end="453:65">avg_frame_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="455:17" pos:end="455:62"><expr pos:start="455:17" pos:end="455:61"><name pos:start="455:17" pos:end="455:37"><name pos:start="455:17" pos:end="455:19">ost</name><operator pos:start="455:20" pos:end="455:21">-&gt;</operator><name pos:start="455:22" pos:end="455:23">st</name><operator pos:start="455:24" pos:end="455:25">-&gt;</operator><name pos:start="455:26" pos:end="455:37">r_frame_rate</name></name> <operator pos:start="455:39" pos:end="455:39">=</operator> <name pos:start="455:41" pos:end="455:61"><name pos:start="455:41" pos:end="455:43">ist</name><operator pos:start="455:44" pos:end="455:45">-&gt;</operator><name pos:start="455:46" pos:end="455:47">st</name><operator pos:start="455:48" pos:end="455:49">-&gt;</operator><name pos:start="455:50" pos:end="455:61">r_frame_rate</name></name></expr>;</expr_stmt>

                <break pos:start="457:17" pos:end="457:22">break;</break>

            <case pos:start="459:13" pos:end="459:39">case <expr pos:start="459:18" pos:end="459:38"><name pos:start="459:18" pos:end="459:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="461:17" pos:end="461:49"><expr pos:start="461:17" pos:end="461:48"><name pos:start="461:17" pos:end="461:30"><name pos:start="461:17" pos:end="461:23">enc_ctx</name><operator pos:start="461:24" pos:end="461:25">-&gt;</operator><name pos:start="461:26" pos:end="461:30">width</name></name>  <operator pos:start="461:33" pos:end="461:33">=</operator> <name pos:start="461:35" pos:end="461:48"><name pos:start="461:35" pos:end="461:41">dec_ctx</name><operator pos:start="461:42" pos:end="461:43">-&gt;</operator><name pos:start="461:44" pos:end="461:48">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="463:17" pos:end="463:50"><expr pos:start="463:17" pos:end="463:49"><name pos:start="463:17" pos:end="463:31"><name pos:start="463:17" pos:end="463:23">enc_ctx</name><operator pos:start="463:24" pos:end="463:25">-&gt;</operator><name pos:start="463:26" pos:end="463:31">height</name></name> <operator pos:start="463:33" pos:end="463:33">=</operator> <name pos:start="463:35" pos:end="463:49"><name pos:start="463:35" pos:end="463:41">dec_ctx</name><operator pos:start="463:42" pos:end="463:43">-&gt;</operator><name pos:start="463:44" pos:end="463:49">height</name></name></expr>;</expr_stmt>

                <break pos:start="465:17" pos:end="465:22">break;</break>

            <case pos:start="467:13" pos:end="467:35">case <expr pos:start="467:18" pos:end="467:34"><name pos:start="467:18" pos:end="467:34">AVMEDIA_TYPE_DATA</name></expr>:</case>

            <case pos:start="469:13" pos:end="469:41">case <expr pos:start="469:18" pos:end="469:40"><name pos:start="469:18" pos:end="469:40">AVMEDIA_TYPE_ATTACHMENT</name></expr>:</case>

                <break pos:start="471:17" pos:end="471:22">break;</break>

            <default pos:start="473:13" pos:end="473:20">default:</default>

                <expr_stmt pos:start="475:17" pos:end="475:24"><expr pos:start="475:17" pos:end="475:23"><call pos:start="475:17" pos:end="475:23"><name pos:start="475:17" pos:end="475:21">abort</name><argument_list pos:start="475:22" pos:end="475:23">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="479:11" pos:end="825:9">else <block pos:start="479:16" pos:end="825:9">{<block_content pos:start="481:13" pos:end="823:13">

            <if_stmt pos:start="481:13" pos:end="483:67"><if pos:start="481:13" pos:end="483:67">if <condition pos:start="481:16" pos:end="481:26">(<expr pos:start="481:17" pos:end="481:25"><operator pos:start="481:17" pos:end="481:17">!</operator><name pos:start="481:18" pos:end="481:25"><name pos:start="481:18" pos:end="481:20">ost</name><operator pos:start="481:21" pos:end="481:22">-&gt;</operator><name pos:start="481:23" pos:end="481:25">enc</name></name></expr>)</condition><block type="pseudo" pos:start="483:17" pos:end="483:67"><block_content pos:start="483:17" pos:end="483:67">

                <expr_stmt pos:start="483:17" pos:end="483:67"><expr pos:start="483:17" pos:end="483:66"><name pos:start="483:17" pos:end="483:24"><name pos:start="483:17" pos:end="483:19">ost</name><operator pos:start="483:20" pos:end="483:21">-&gt;</operator><name pos:start="483:22" pos:end="483:24">enc</name></name> <operator pos:start="483:26" pos:end="483:26">=</operator> <call pos:start="483:28" pos:end="483:66"><name pos:start="483:28" pos:end="483:47">avcodec_find_encoder</name><argument_list pos:start="483:48" pos:end="483:66">(<argument pos:start="483:49" pos:end="483:65"><expr pos:start="483:49" pos:end="483:65"><name pos:start="483:49" pos:end="483:65"><name pos:start="483:49" pos:end="483:55">enc_ctx</name><operator pos:start="483:56" pos:end="483:57">-&gt;</operator><name pos:start="483:58" pos:end="483:65">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="485:13" pos:end="497:13"><if pos:start="485:13" pos:end="497:13">if <condition pos:start="485:16" pos:end="485:26">(<expr pos:start="485:17" pos:end="485:25"><operator pos:start="485:17" pos:end="485:17">!</operator><name pos:start="485:18" pos:end="485:25"><name pos:start="485:18" pos:end="485:20">ost</name><operator pos:start="485:21" pos:end="485:22">-&gt;</operator><name pos:start="485:23" pos:end="485:25">enc</name></name></expr>)</condition> <block pos:start="485:28" pos:end="497:13">{<block_content pos:start="489:17" pos:end="495:33">

                <comment type="block" pos:start="487:17" pos:end="487:77">/* should only happen when a default codec is not present. */</comment>

                <expr_stmt pos:start="489:17" pos:end="491:98"><expr pos:start="489:17" pos:end="491:97"><call pos:start="489:17" pos:end="491:97"><name pos:start="489:17" pos:end="489:24">snprintf</name><argument_list pos:start="489:25" pos:end="491:97">(<argument pos:start="489:26" pos:end="489:30"><expr pos:start="489:26" pos:end="489:30"><name pos:start="489:26" pos:end="489:30">error</name></expr></argument>, <argument pos:start="489:33" pos:end="489:45"><expr pos:start="489:33" pos:end="489:45"><sizeof pos:start="489:33" pos:end="489:45">sizeof<argument_list pos:start="489:39" pos:end="489:45">(<argument pos:start="489:40" pos:end="489:44"><expr pos:start="489:40" pos:end="489:44"><name pos:start="489:40" pos:end="489:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="489:48" pos:end="489:102"><expr pos:start="489:48" pos:end="489:102"><literal type="string" pos:start="489:48" pos:end="489:102">"Encoder (codec %s) not found for output stream #%d:%d"</literal></expr></argument>,

                         <argument pos:start="491:26" pos:end="491:67"><expr pos:start="491:26" pos:end="491:67"><call pos:start="491:26" pos:end="491:67"><name pos:start="491:26" pos:end="491:41">avcodec_get_name</name><argument_list pos:start="491:42" pos:end="491:67">(<argument pos:start="491:43" pos:end="491:66"><expr pos:start="491:43" pos:end="491:66"><name pos:start="491:43" pos:end="491:66"><name pos:start="491:43" pos:end="491:45">ost</name><operator pos:start="491:46" pos:end="491:47">-&gt;</operator><name pos:start="491:48" pos:end="491:49">st</name><operator pos:start="491:50" pos:end="491:51">-&gt;</operator><name pos:start="491:52" pos:end="491:56">codec</name><operator pos:start="491:57" pos:end="491:58">-&gt;</operator><name pos:start="491:59" pos:end="491:66">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="491:70" pos:end="491:84"><expr pos:start="491:70" pos:end="491:84"><name pos:start="491:70" pos:end="491:84"><name pos:start="491:70" pos:end="491:72">ost</name><operator pos:start="491:73" pos:end="491:74">-&gt;</operator><name pos:start="491:75" pos:end="491:84">file_index</name></name></expr></argument>, <argument pos:start="491:87" pos:end="491:96"><expr pos:start="491:87" pos:end="491:96"><name pos:start="491:87" pos:end="491:96"><name pos:start="491:87" pos:end="491:89">ost</name><operator pos:start="491:90" pos:end="491:91">-&gt;</operator><name pos:start="491:92" pos:end="491:96">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="493:17" pos:end="493:38"><expr pos:start="493:17" pos:end="493:37"><name pos:start="493:17" pos:end="493:19">ret</name> <operator pos:start="493:21" pos:end="493:21">=</operator> <call pos:start="493:23" pos:end="493:37"><name pos:start="493:23" pos:end="493:29">AVERROR</name><argument_list pos:start="493:30" pos:end="493:37">(<argument pos:start="493:31" pos:end="493:36"><expr pos:start="493:31" pos:end="493:36"><name pos:start="493:31" pos:end="493:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="495:17" pos:end="495:33">goto <name pos:start="495:22" pos:end="495:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="501:13" pos:end="503:57"><if pos:start="501:13" pos:end="503:57">if <condition pos:start="501:16" pos:end="501:20">(<expr pos:start="501:17" pos:end="501:19"><name pos:start="501:17" pos:end="501:19">ist</name></expr>)</condition><block type="pseudo" pos:start="503:17" pos:end="503:57"><block_content pos:start="503:17" pos:end="503:57">

                <expr_stmt pos:start="503:17" pos:end="503:57"><expr pos:start="503:17" pos:end="503:56"><name pos:start="503:17" pos:end="503:36"><name pos:start="503:17" pos:end="503:19">ist</name><operator pos:start="503:20" pos:end="503:21">-&gt;</operator><name pos:start="503:22" pos:end="503:36">decoding_needed</name></name> <operator pos:start="503:38" pos:end="503:39">|=</operator> <name pos:start="503:41" pos:end="503:56">DECODING_FOR_OST</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="505:13" pos:end="505:37"><expr pos:start="505:13" pos:end="505:36"><name pos:start="505:13" pos:end="505:32"><name pos:start="505:13" pos:end="505:15">ost</name><operator pos:start="505:16" pos:end="505:17">-&gt;</operator><name pos:start="505:18" pos:end="505:32">encoding_needed</name></name> <operator pos:start="505:34" pos:end="505:34">=</operator> <literal type="number" pos:start="505:36" pos:end="505:36">1</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="509:13" pos:end="509:63"><expr pos:start="509:13" pos:end="509:62"><call pos:start="509:13" pos:end="509:62"><name pos:start="509:13" pos:end="509:26">set_encoder_id</name><argument_list pos:start="509:27" pos:end="509:62">(<argument pos:start="509:28" pos:end="509:56"><expr pos:start="509:28" pos:end="509:56"><name pos:start="509:28" pos:end="509:56"><name pos:start="509:28" pos:end="509:39">output_files</name><index pos:start="509:40" pos:end="509:56">[<expr pos:start="509:41" pos:end="509:55"><name pos:start="509:41" pos:end="509:55"><name pos:start="509:41" pos:end="509:43">ost</name><operator pos:start="509:44" pos:end="509:45">-&gt;</operator><name pos:start="509:46" pos:end="509:55">file_index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="509:59" pos:end="509:61"><expr pos:start="509:59" pos:end="509:61"><name pos:start="509:59" pos:end="509:61">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="513:13" pos:end="531:13"><if pos:start="513:13" pos:end="531:13">if <condition pos:start="513:16" pos:end="517:60">(<expr pos:start="513:17" pos:end="517:59"><operator pos:start="513:17" pos:end="513:17">!</operator><name pos:start="513:18" pos:end="513:28"><name pos:start="513:18" pos:end="513:20">ost</name><operator pos:start="513:21" pos:end="513:22">-&gt;</operator><name pos:start="513:23" pos:end="513:28">filter</name></name> <operator pos:start="513:30" pos:end="513:31">&amp;&amp;</operator>

                <operator pos:start="515:17" pos:end="515:17">(</operator><name pos:start="515:18" pos:end="515:36"><name pos:start="515:18" pos:end="515:24">enc_ctx</name><operator pos:start="515:25" pos:end="515:26">-&gt;</operator><name pos:start="515:27" pos:end="515:36">codec_type</name></name> <operator pos:start="515:38" pos:end="515:39">==</operator> <name pos:start="515:41" pos:end="515:58">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="515:60" pos:end="515:61">||</operator>

                 <name pos:start="517:18" pos:end="517:36"><name pos:start="517:18" pos:end="517:24">enc_ctx</name><operator pos:start="517:25" pos:end="517:26">-&gt;</operator><name pos:start="517:27" pos:end="517:36">codec_type</name></name> <operator pos:start="517:38" pos:end="517:39">==</operator> <name pos:start="517:41" pos:end="517:58">AVMEDIA_TYPE_AUDIO</name><operator pos:start="517:59" pos:end="517:59">)</operator></expr>)</condition> <block pos:start="517:62" pos:end="531:13">{<block_content pos:start="519:21" pos:end="529:21">

                    <decl_stmt pos:start="519:21" pos:end="519:36"><decl pos:start="519:21" pos:end="519:35"><type pos:start="519:21" pos:end="519:33"><name pos:start="519:21" pos:end="519:31">FilterGraph</name> <modifier pos:start="519:33" pos:end="519:33">*</modifier></type><name pos:start="519:34" pos:end="519:35">fg</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="521:21" pos:end="521:59"><expr pos:start="521:21" pos:end="521:58"><name pos:start="521:21" pos:end="521:22">fg</name> <operator pos:start="521:24" pos:end="521:24">=</operator> <call pos:start="521:26" pos:end="521:58"><name pos:start="521:26" pos:end="521:48">init_simple_filtergraph</name><argument_list pos:start="521:49" pos:end="521:58">(<argument pos:start="521:50" pos:end="521:52"><expr pos:start="521:50" pos:end="521:52"><name pos:start="521:50" pos:end="521:52">ist</name></expr></argument>, <argument pos:start="521:55" pos:end="521:57"><expr pos:start="521:55" pos:end="521:57"><name pos:start="521:55" pos:end="521:57">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="523:21" pos:end="529:21"><if pos:start="523:21" pos:end="529:21">if <condition pos:start="523:24" pos:end="523:50">(<expr pos:start="523:25" pos:end="523:49"><call pos:start="523:25" pos:end="523:49"><name pos:start="523:25" pos:end="523:45">configure_filtergraph</name><argument_list pos:start="523:46" pos:end="523:49">(<argument pos:start="523:47" pos:end="523:48"><expr pos:start="523:47" pos:end="523:48"><name pos:start="523:47" pos:end="523:48">fg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="523:52" pos:end="529:21">{<block_content pos:start="525:25" pos:end="527:40">

                        <expr_stmt pos:start="525:25" pos:end="525:79"><expr pos:start="525:25" pos:end="525:78"><call pos:start="525:25" pos:end="525:78"><name pos:start="525:25" pos:end="525:30">av_log</name><argument_list pos:start="525:31" pos:end="525:78">(<argument pos:start="525:32" pos:end="525:35"><expr pos:start="525:32" pos:end="525:35"><name pos:start="525:32" pos:end="525:35">NULL</name></expr></argument>, <argument pos:start="525:38" pos:end="525:49"><expr pos:start="525:38" pos:end="525:49"><name pos:start="525:38" pos:end="525:49">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="525:52" pos:end="525:77"><expr pos:start="525:52" pos:end="525:77"><literal type="string" pos:start="525:52" pos:end="525:77">"Error opening filters!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="527:25" pos:end="527:40"><expr pos:start="527:25" pos:end="527:39"><call pos:start="527:25" pos:end="527:39"><name pos:start="527:25" pos:end="527:36">exit_program</name><argument_list pos:start="527:37" pos:end="527:39">(<argument pos:start="527:38" pos:end="527:38"><expr pos:start="527:38" pos:end="527:38"><literal type="number" pos:start="527:38" pos:end="527:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="535:13" pos:end="587:13"><if pos:start="535:13" pos:end="587:13">if <condition pos:start="535:16" pos:end="535:58">(<expr pos:start="535:17" pos:end="535:57"><name pos:start="535:17" pos:end="535:35"><name pos:start="535:17" pos:end="535:23">enc_ctx</name><operator pos:start="535:24" pos:end="535:25">-&gt;</operator><name pos:start="535:26" pos:end="535:35">codec_type</name></name> <operator pos:start="535:37" pos:end="535:38">==</operator> <name pos:start="535:40" pos:end="535:57">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="535:60" pos:end="587:13">{<block_content pos:start="537:17" pos:end="585:17">

                <if_stmt pos:start="537:17" pos:end="539:88"><if pos:start="537:17" pos:end="539:88">if <condition pos:start="537:20" pos:end="537:56">(<expr pos:start="537:21" pos:end="537:55"><name pos:start="537:21" pos:end="537:31"><name pos:start="537:21" pos:end="537:23">ost</name><operator pos:start="537:24" pos:end="537:25">-&gt;</operator><name pos:start="537:26" pos:end="537:31">filter</name></name> <operator pos:start="537:33" pos:end="537:34">&amp;&amp;</operator> <operator pos:start="537:36" pos:end="537:36">!</operator><name pos:start="537:37" pos:end="537:55"><name pos:start="537:37" pos:end="537:39">ost</name><operator pos:start="537:40" pos:end="537:41">-&gt;</operator><name pos:start="537:42" pos:end="537:51">frame_rate</name><operator pos:start="537:52" pos:end="537:52">.</operator><name pos:start="537:53" pos:end="537:55">num</name></name></expr>)</condition><block type="pseudo" pos:start="539:21" pos:end="539:88"><block_content pos:start="539:21" pos:end="539:88">

                    <expr_stmt pos:start="539:21" pos:end="539:88"><expr pos:start="539:21" pos:end="539:87"><name pos:start="539:21" pos:end="539:35"><name pos:start="539:21" pos:end="539:23">ost</name><operator pos:start="539:24" pos:end="539:25">-&gt;</operator><name pos:start="539:26" pos:end="539:35">frame_rate</name></name> <operator pos:start="539:37" pos:end="539:37">=</operator> <call pos:start="539:39" pos:end="539:87"><name pos:start="539:39" pos:end="539:66">av_buffersink_get_frame_rate</name><argument_list pos:start="539:67" pos:end="539:87">(<argument pos:start="539:68" pos:end="539:86"><expr pos:start="539:68" pos:end="539:86"><name pos:start="539:68" pos:end="539:86"><name pos:start="539:68" pos:end="539:70">ost</name><operator pos:start="539:71" pos:end="539:72">-&gt;</operator><name pos:start="539:73" pos:end="539:78">filter</name><operator pos:start="539:79" pos:end="539:80">-&gt;</operator><name pos:start="539:81" pos:end="539:86">filter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="541:17" pos:end="543:53"><if pos:start="541:17" pos:end="543:53">if <condition pos:start="541:20" pos:end="541:48">(<expr pos:start="541:21" pos:end="541:47"><name pos:start="541:21" pos:end="541:23">ist</name> <operator pos:start="541:25" pos:end="541:26">&amp;&amp;</operator> <operator pos:start="541:28" pos:end="541:28">!</operator><name pos:start="541:29" pos:end="541:47"><name pos:start="541:29" pos:end="541:31">ost</name><operator pos:start="541:32" pos:end="541:33">-&gt;</operator><name pos:start="541:34" pos:end="541:43">frame_rate</name><operator pos:start="541:44" pos:end="541:44">.</operator><name pos:start="541:45" pos:end="541:47">num</name></name></expr>)</condition><block type="pseudo" pos:start="543:21" pos:end="543:53"><block_content pos:start="543:21" pos:end="543:53">

                    <expr_stmt pos:start="543:21" pos:end="543:53"><expr pos:start="543:21" pos:end="543:52"><name pos:start="543:21" pos:end="543:35"><name pos:start="543:21" pos:end="543:23">ost</name><operator pos:start="543:24" pos:end="543:25">-&gt;</operator><name pos:start="543:26" pos:end="543:35">frame_rate</name></name> <operator pos:start="543:37" pos:end="543:37">=</operator> <name pos:start="543:39" pos:end="543:52"><name pos:start="543:39" pos:end="543:41">ist</name><operator pos:start="543:42" pos:end="543:43">-&gt;</operator><name pos:start="543:44" pos:end="543:52">framerate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="545:17" pos:end="547:60"><if pos:start="545:17" pos:end="547:60">if <condition pos:start="545:20" pos:end="545:48">(<expr pos:start="545:21" pos:end="545:47"><name pos:start="545:21" pos:end="545:23">ist</name> <operator pos:start="545:25" pos:end="545:26">&amp;&amp;</operator> <operator pos:start="545:28" pos:end="545:28">!</operator><name pos:start="545:29" pos:end="545:47"><name pos:start="545:29" pos:end="545:31">ost</name><operator pos:start="545:32" pos:end="545:33">-&gt;</operator><name pos:start="545:34" pos:end="545:43">frame_rate</name><operator pos:start="545:44" pos:end="545:44">.</operator><name pos:start="545:45" pos:end="545:47">num</name></name></expr>)</condition><block type="pseudo" pos:start="547:21" pos:end="547:60"><block_content pos:start="547:21" pos:end="547:60">

                    <expr_stmt pos:start="547:21" pos:end="547:60"><expr pos:start="547:21" pos:end="547:59"><name pos:start="547:21" pos:end="547:35"><name pos:start="547:21" pos:end="547:23">ost</name><operator pos:start="547:24" pos:end="547:25">-&gt;</operator><name pos:start="547:26" pos:end="547:35">frame_rate</name></name> <operator pos:start="547:37" pos:end="547:37">=</operator> <name pos:start="547:39" pos:end="547:59"><name pos:start="547:39" pos:end="547:41">ist</name><operator pos:start="547:42" pos:end="547:43">-&gt;</operator><name pos:start="547:44" pos:end="547:45">st</name><operator pos:start="547:46" pos:end="547:47">-&gt;</operator><name pos:start="547:48" pos:end="547:59">r_frame_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="549:17" pos:end="565:17"><if pos:start="549:17" pos:end="565:17">if <condition pos:start="549:20" pos:end="549:48">(<expr pos:start="549:21" pos:end="549:47"><name pos:start="549:21" pos:end="549:23">ist</name> <operator pos:start="549:25" pos:end="549:26">&amp;&amp;</operator> <operator pos:start="549:28" pos:end="549:28">!</operator><name pos:start="549:29" pos:end="549:47"><name pos:start="549:29" pos:end="549:31">ost</name><operator pos:start="549:32" pos:end="549:33">-&gt;</operator><name pos:start="549:34" pos:end="549:43">frame_rate</name><operator pos:start="549:44" pos:end="549:44">.</operator><name pos:start="549:45" pos:end="549:47">num</name></name></expr>)</condition> <block pos:start="549:50" pos:end="565:17">{<block_content pos:start="551:21" pos:end="563:56">

                    <expr_stmt pos:start="551:21" pos:end="551:58"><expr pos:start="551:21" pos:end="551:57"><name pos:start="551:21" pos:end="551:35"><name pos:start="551:21" pos:end="551:23">ost</name><operator pos:start="551:24" pos:end="551:25">-&gt;</operator><name pos:start="551:26" pos:end="551:35">frame_rate</name></name> <operator pos:start="551:37" pos:end="551:37">=</operator> <operator pos:start="551:39" pos:end="551:39">(</operator><name pos:start="551:40" pos:end="551:49">AVRational</name><operator pos:start="551:50" pos:end="551:50">)</operator><block pos:start="551:51" pos:end="551:57">{<expr pos:start="551:52" pos:end="551:53"><literal type="number" pos:start="551:52" pos:end="551:53">25</literal></expr>, <expr pos:start="551:56" pos:end="551:56"><literal type="number" pos:start="551:56" pos:end="551:56">1</literal></expr>}</block></expr>;</expr_stmt>

                    <expr_stmt pos:start="553:21" pos:end="563:56"><expr pos:start="553:21" pos:end="563:55"><call pos:start="553:21" pos:end="563:55"><name pos:start="553:21" pos:end="553:26">av_log</name><argument_list pos:start="553:27" pos:end="563:55">(<argument pos:start="553:28" pos:end="553:31"><expr pos:start="553:28" pos:end="553:31"><name pos:start="553:28" pos:end="553:31">NULL</name></expr></argument>, <argument pos:start="553:34" pos:end="553:47"><expr pos:start="553:34" pos:end="553:47"><name pos:start="553:34" pos:end="553:47">AV_LOG_WARNING</name></expr></argument>,

                           <argument pos:start="555:28" pos:end="561:65"><expr pos:start="555:28" pos:end="561:65"><literal type="string" pos:start="555:28" pos:end="555:44">"No information "</literal>

                           <literal type="string" pos:start="557:28" pos:end="557:77">"about the input framerate is available. Falling "</literal>

                           <literal type="string" pos:start="559:28" pos:end="559:106">"back to a default value of 25fps for output stream #%d:%d. Use the -r option "</literal>

                           <literal type="string" pos:start="561:28" pos:end="561:65">"if you want a different framerate.\n"</literal></expr></argument>,

                           <argument pos:start="563:28" pos:end="563:42"><expr pos:start="563:28" pos:end="563:42"><name pos:start="563:28" pos:end="563:42"><name pos:start="563:28" pos:end="563:30">ost</name><operator pos:start="563:31" pos:end="563:32">-&gt;</operator><name pos:start="563:33" pos:end="563:42">file_index</name></name></expr></argument>, <argument pos:start="563:45" pos:end="563:54"><expr pos:start="563:45" pos:end="563:54"><name pos:start="563:45" pos:end="563:54"><name pos:start="563:45" pos:end="563:47">ost</name><operator pos:start="563:48" pos:end="563:49">-&gt;</operator><name pos:start="563:50" pos:end="563:54">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="567:1" pos:end="567:116">//                    ost-&gt;frame_rate = ist-&gt;st-&gt;avg_frame_rate.num ? ist-&gt;st-&gt;avg_frame_rate : (AVRational){25, 1};</comment>

                <if_stmt pos:start="569:17" pos:end="575:17"><if pos:start="569:17" pos:end="575:17">if <condition pos:start="569:20" pos:end="569:82">(<expr pos:start="569:21" pos:end="569:81"><name pos:start="569:21" pos:end="569:28"><name pos:start="569:21" pos:end="569:23">ost</name><operator pos:start="569:24" pos:end="569:25">-&gt;</operator><name pos:start="569:26" pos:end="569:28">enc</name></name> <operator pos:start="569:30" pos:end="569:31">&amp;&amp;</operator> <name pos:start="569:33" pos:end="569:62"><name pos:start="569:33" pos:end="569:35">ost</name><operator pos:start="569:36" pos:end="569:37">-&gt;</operator><name pos:start="569:38" pos:end="569:40">enc</name><operator pos:start="569:41" pos:end="569:42">-&gt;</operator><name pos:start="569:43" pos:end="569:62">supported_framerates</name></name> <operator pos:start="569:64" pos:end="569:65">&amp;&amp;</operator> <operator pos:start="569:67" pos:end="569:67">!</operator><name pos:start="569:68" pos:end="569:81"><name pos:start="569:68" pos:end="569:70">ost</name><operator pos:start="569:71" pos:end="569:72">-&gt;</operator><name pos:start="569:73" pos:end="569:81">force_fps</name></name></expr>)</condition> <block pos:start="569:84" pos:end="575:17">{<block_content pos:start="571:21" pos:end="573:74">

                    <decl_stmt pos:start="571:21" pos:end="571:101"><decl pos:start="571:21" pos:end="571:100"><type pos:start="571:21" pos:end="571:23"><name pos:start="571:21" pos:end="571:23">int</name></type> <name pos:start="571:25" pos:end="571:27">idx</name> <init pos:start="571:29" pos:end="571:100">= <expr pos:start="571:31" pos:end="571:100"><call pos:start="571:31" pos:end="571:100"><name pos:start="571:31" pos:end="571:51">av_find_nearest_q_idx</name><argument_list pos:start="571:52" pos:end="571:100">(<argument pos:start="571:53" pos:end="571:67"><expr pos:start="571:53" pos:end="571:67"><name pos:start="571:53" pos:end="571:67"><name pos:start="571:53" pos:end="571:55">ost</name><operator pos:start="571:56" pos:end="571:57">-&gt;</operator><name pos:start="571:58" pos:end="571:67">frame_rate</name></name></expr></argument>, <argument pos:start="571:70" pos:end="571:99"><expr pos:start="571:70" pos:end="571:99"><name pos:start="571:70" pos:end="571:99"><name pos:start="571:70" pos:end="571:72">ost</name><operator pos:start="571:73" pos:end="571:74">-&gt;</operator><name pos:start="571:75" pos:end="571:77">enc</name><operator pos:start="571:78" pos:end="571:79">-&gt;</operator><name pos:start="571:80" pos:end="571:99">supported_framerates</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="573:21" pos:end="573:74"><expr pos:start="573:21" pos:end="573:73"><name pos:start="573:21" pos:end="573:35"><name pos:start="573:21" pos:end="573:23">ost</name><operator pos:start="573:24" pos:end="573:25">-&gt;</operator><name pos:start="573:26" pos:end="573:35">frame_rate</name></name> <operator pos:start="573:37" pos:end="573:37">=</operator> <name pos:start="573:39" pos:end="573:73"><name pos:start="573:39" pos:end="573:41">ost</name><operator pos:start="573:42" pos:end="573:43">-&gt;</operator><name pos:start="573:44" pos:end="573:46">enc</name><operator pos:start="573:47" pos:end="573:48">-&gt;</operator><name pos:start="573:49" pos:end="573:68">supported_framerates</name><index pos:start="573:69" pos:end="573:73">[<expr pos:start="573:70" pos:end="573:72"><name pos:start="573:70" pos:end="573:72">idx</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="line" pos:start="577:17" pos:end="577:75">// reduce frame rate for mpeg4 to be within the spec limits</comment>

                <if_stmt pos:start="579:17" pos:end="585:17"><if pos:start="579:17" pos:end="585:17">if <condition pos:start="579:20" pos:end="579:59">(<expr pos:start="579:21" pos:end="579:58"><name pos:start="579:21" pos:end="579:37"><name pos:start="579:21" pos:end="579:27">enc_ctx</name><operator pos:start="579:28" pos:end="579:29">-&gt;</operator><name pos:start="579:30" pos:end="579:37">codec_id</name></name> <operator pos:start="579:39" pos:end="579:40">==</operator> <name pos:start="579:42" pos:end="579:58">AV_CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="579:61" pos:end="585:17">{<block_content pos:start="581:21" pos:end="583:79">

                    <expr_stmt pos:start="581:21" pos:end="583:79"><expr pos:start="581:21" pos:end="583:78"><call pos:start="581:21" pos:end="583:78"><name pos:start="581:21" pos:end="581:29">av_reduce</name><argument_list pos:start="581:30" pos:end="583:78">(<argument pos:start="581:31" pos:end="581:50"><expr pos:start="581:31" pos:end="581:50"><operator pos:start="581:31" pos:end="581:31">&amp;</operator><name pos:start="581:32" pos:end="581:50"><name pos:start="581:32" pos:end="581:34">ost</name><operator pos:start="581:35" pos:end="581:36">-&gt;</operator><name pos:start="581:37" pos:end="581:46">frame_rate</name><operator pos:start="581:47" pos:end="581:47">.</operator><name pos:start="581:48" pos:end="581:50">num</name></name></expr></argument>, <argument pos:start="581:53" pos:end="581:72"><expr pos:start="581:53" pos:end="581:72"><operator pos:start="581:53" pos:end="581:53">&amp;</operator><name pos:start="581:54" pos:end="581:72"><name pos:start="581:54" pos:end="581:56">ost</name><operator pos:start="581:57" pos:end="581:58">-&gt;</operator><name pos:start="581:59" pos:end="581:68">frame_rate</name><operator pos:start="581:69" pos:end="581:69">.</operator><name pos:start="581:70" pos:end="581:72">den</name></name></expr></argument>,

                              <argument pos:start="583:31" pos:end="583:49"><expr pos:start="583:31" pos:end="583:49"><name pos:start="583:31" pos:end="583:49"><name pos:start="583:31" pos:end="583:33">ost</name><operator pos:start="583:34" pos:end="583:35">-&gt;</operator><name pos:start="583:36" pos:end="583:45">frame_rate</name><operator pos:start="583:46" pos:end="583:46">.</operator><name pos:start="583:47" pos:end="583:49">num</name></name></expr></argument>, <argument pos:start="583:52" pos:end="583:70"><expr pos:start="583:52" pos:end="583:70"><name pos:start="583:52" pos:end="583:70"><name pos:start="583:52" pos:end="583:54">ost</name><operator pos:start="583:55" pos:end="583:56">-&gt;</operator><name pos:start="583:57" pos:end="583:66">frame_rate</name><operator pos:start="583:67" pos:end="583:67">.</operator><name pos:start="583:68" pos:end="583:70">den</name></name></expr></argument>, <argument pos:start="583:73" pos:end="583:77"><expr pos:start="583:73" pos:end="583:77"><literal type="number" pos:start="583:73" pos:end="583:77">65535</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="591:13" pos:end="757:13">switch <condition pos:start="591:20" pos:end="591:40">(<expr pos:start="591:21" pos:end="591:39"><name pos:start="591:21" pos:end="591:39"><name pos:start="591:21" pos:end="591:27">enc_ctx</name><operator pos:start="591:28" pos:end="591:29">-&gt;</operator><name pos:start="591:30" pos:end="591:39">codec_type</name></name></expr>)</condition> <block pos:start="591:42" pos:end="757:13">{<block_content pos:start="593:13" pos:end="755:22">

            <case pos:start="593:13" pos:end="593:36">case <expr pos:start="593:18" pos:end="593:35"><name pos:start="593:18" pos:end="593:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="595:17" pos:end="595:81"><expr pos:start="595:17" pos:end="595:80"><name pos:start="595:17" pos:end="595:35"><name pos:start="595:17" pos:end="595:23">enc_ctx</name><operator pos:start="595:24" pos:end="595:25">-&gt;</operator><name pos:start="595:26" pos:end="595:35">sample_fmt</name></name>     <operator pos:start="595:41" pos:end="595:41">=</operator> <name pos:start="595:43" pos:end="595:72"><name pos:start="595:43" pos:end="595:45">ost</name><operator pos:start="595:46" pos:end="595:47">-&gt;</operator><name pos:start="595:48" pos:end="595:53">filter</name><operator pos:start="595:54" pos:end="595:55">-&gt;</operator><name pos:start="595:56" pos:end="595:61">filter</name><operator pos:start="595:62" pos:end="595:63">-&gt;</operator><name pos:start="595:64" pos:end="595:69">inputs</name><index pos:start="595:70" pos:end="595:72">[<expr pos:start="595:71" pos:end="595:71"><literal type="number" pos:start="595:71" pos:end="595:71">0</literal></expr>]</index></name><operator pos:start="595:73" pos:end="595:74">-&gt;</operator><name pos:start="595:75" pos:end="595:80">format</name></expr>;</expr_stmt>

                <expr_stmt pos:start="597:17" pos:end="597:86"><expr pos:start="597:17" pos:end="597:85"><name pos:start="597:17" pos:end="597:36"><name pos:start="597:17" pos:end="597:23">enc_ctx</name><operator pos:start="597:24" pos:end="597:25">-&gt;</operator><name pos:start="597:26" pos:end="597:36">sample_rate</name></name>    <operator pos:start="597:41" pos:end="597:41">=</operator> <name pos:start="597:43" pos:end="597:72"><name pos:start="597:43" pos:end="597:45">ost</name><operator pos:start="597:46" pos:end="597:47">-&gt;</operator><name pos:start="597:48" pos:end="597:53">filter</name><operator pos:start="597:54" pos:end="597:55">-&gt;</operator><name pos:start="597:56" pos:end="597:61">filter</name><operator pos:start="597:62" pos:end="597:63">-&gt;</operator><name pos:start="597:64" pos:end="597:69">inputs</name><index pos:start="597:70" pos:end="597:72">[<expr pos:start="597:71" pos:end="597:71"><literal type="number" pos:start="597:71" pos:end="597:71">0</literal></expr>]</index></name><operator pos:start="597:73" pos:end="597:74">-&gt;</operator><name pos:start="597:75" pos:end="597:85">sample_rate</name></expr>;</expr_stmt>

                <expr_stmt pos:start="599:17" pos:end="599:89"><expr pos:start="599:17" pos:end="599:88"><name pos:start="599:17" pos:end="599:39"><name pos:start="599:17" pos:end="599:23">enc_ctx</name><operator pos:start="599:24" pos:end="599:25">-&gt;</operator><name pos:start="599:26" pos:end="599:39">channel_layout</name></name> <operator pos:start="599:41" pos:end="599:41">=</operator> <name pos:start="599:43" pos:end="599:72"><name pos:start="599:43" pos:end="599:45">ost</name><operator pos:start="599:46" pos:end="599:47">-&gt;</operator><name pos:start="599:48" pos:end="599:53">filter</name><operator pos:start="599:54" pos:end="599:55">-&gt;</operator><name pos:start="599:56" pos:end="599:61">filter</name><operator pos:start="599:62" pos:end="599:63">-&gt;</operator><name pos:start="599:64" pos:end="599:69">inputs</name><index pos:start="599:70" pos:end="599:72">[<expr pos:start="599:71" pos:end="599:71"><literal type="number" pos:start="599:71" pos:end="599:71">0</literal></expr>]</index></name><operator pos:start="599:73" pos:end="599:74">-&gt;</operator><name pos:start="599:75" pos:end="599:88">channel_layout</name></expr>;</expr_stmt>

                <expr_stmt pos:start="601:17" pos:end="601:101"><expr pos:start="601:17" pos:end="601:100"><name pos:start="601:17" pos:end="601:33"><name pos:start="601:17" pos:end="601:23">enc_ctx</name><operator pos:start="601:24" pos:end="601:25">-&gt;</operator><name pos:start="601:26" pos:end="601:33">channels</name></name>       <operator pos:start="601:41" pos:end="601:41">=</operator> <call pos:start="601:43" pos:end="601:100"><name pos:start="601:43" pos:end="601:68">avfilter_link_get_channels</name><argument_list pos:start="601:69" pos:end="601:100">(<argument pos:start="601:70" pos:end="601:99"><expr pos:start="601:70" pos:end="601:99"><name pos:start="601:70" pos:end="601:99"><name pos:start="601:70" pos:end="601:72">ost</name><operator pos:start="601:73" pos:end="601:74">-&gt;</operator><name pos:start="601:75" pos:end="601:80">filter</name><operator pos:start="601:81" pos:end="601:82">-&gt;</operator><name pos:start="601:83" pos:end="601:88">filter</name><operator pos:start="601:89" pos:end="601:90">-&gt;</operator><name pos:start="601:91" pos:end="601:96">inputs</name><index pos:start="601:97" pos:end="601:99">[<expr pos:start="601:98" pos:end="601:98"><literal type="number" pos:start="601:98" pos:end="601:98">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="603:17" pos:end="603:82"><expr pos:start="603:17" pos:end="603:81"><name pos:start="603:17" pos:end="603:34"><name pos:start="603:17" pos:end="603:23">enc_ctx</name><operator pos:start="603:24" pos:end="603:25">-&gt;</operator><name pos:start="603:26" pos:end="603:34">time_base</name></name>      <operator pos:start="603:41" pos:end="603:41">=</operator> <operator pos:start="603:43" pos:end="603:43">(</operator><name pos:start="603:44" pos:end="603:53">AVRational</name><operator pos:start="603:54" pos:end="603:54">)</operator><block pos:start="603:55" pos:end="603:81">{ <expr pos:start="603:57" pos:end="603:57"><literal type="number" pos:start="603:57" pos:end="603:57">1</literal></expr>, <expr pos:start="603:60" pos:end="603:79"><name pos:start="603:60" pos:end="603:79"><name pos:start="603:60" pos:end="603:66">enc_ctx</name><operator pos:start="603:67" pos:end="603:68">-&gt;</operator><name pos:start="603:69" pos:end="603:79">sample_rate</name></name></expr> }</block></expr>;</expr_stmt>

                <break pos:start="605:17" pos:end="605:22">break;</break>

            <case pos:start="607:13" pos:end="607:36">case <expr pos:start="607:18" pos:end="607:35"><name pos:start="607:18" pos:end="607:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="609:17" pos:end="609:63"><expr pos:start="609:17" pos:end="609:62"><name pos:start="609:17" pos:end="609:34"><name pos:start="609:17" pos:end="609:23">enc_ctx</name><operator pos:start="609:24" pos:end="609:25">-&gt;</operator><name pos:start="609:26" pos:end="609:34">time_base</name></name> <operator pos:start="609:36" pos:end="609:36">=</operator> <call pos:start="609:38" pos:end="609:62"><name pos:start="609:38" pos:end="609:45">av_inv_q</name><argument_list pos:start="609:46" pos:end="609:62">(<argument pos:start="609:47" pos:end="609:61"><expr pos:start="609:47" pos:end="609:61"><name pos:start="609:47" pos:end="609:61"><name pos:start="609:47" pos:end="609:49">ost</name><operator pos:start="609:50" pos:end="609:51">-&gt;</operator><name pos:start="609:52" pos:end="609:61">frame_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="611:17" pos:end="613:83"><if pos:start="611:17" pos:end="613:83">if <condition pos:start="611:20" pos:end="611:87">(<expr pos:start="611:21" pos:end="611:86"><name pos:start="611:21" pos:end="611:31"><name pos:start="611:21" pos:end="611:23">ost</name><operator pos:start="611:24" pos:end="611:25">-&gt;</operator><name pos:start="611:26" pos:end="611:31">filter</name></name> <operator pos:start="611:33" pos:end="611:34">&amp;&amp;</operator> <operator pos:start="611:36" pos:end="611:36">!</operator><operator pos:start="611:37" pos:end="611:37">(</operator><name pos:start="611:38" pos:end="611:59"><name pos:start="611:38" pos:end="611:44">enc_ctx</name><operator pos:start="611:45" pos:end="611:46">-&gt;</operator><name pos:start="611:47" pos:end="611:55">time_base</name><operator pos:start="611:56" pos:end="611:56">.</operator><name pos:start="611:57" pos:end="611:59">num</name></name> <operator pos:start="611:61" pos:end="611:62">&amp;&amp;</operator> <name pos:start="611:64" pos:end="611:85"><name pos:start="611:64" pos:end="611:70">enc_ctx</name><operator pos:start="611:71" pos:end="611:72">-&gt;</operator><name pos:start="611:73" pos:end="611:81">time_base</name><operator pos:start="611:82" pos:end="611:82">.</operator><name pos:start="611:83" pos:end="611:85">den</name></name><operator pos:start="611:86" pos:end="611:86">)</operator></expr>)</condition><block type="pseudo" pos:start="613:21" pos:end="613:83"><block_content pos:start="613:21" pos:end="613:83">

                    <expr_stmt pos:start="613:21" pos:end="613:83"><expr pos:start="613:21" pos:end="613:82"><name pos:start="613:21" pos:end="613:38"><name pos:start="613:21" pos:end="613:27">enc_ctx</name><operator pos:start="613:28" pos:end="613:29">-&gt;</operator><name pos:start="613:30" pos:end="613:38">time_base</name></name> <operator pos:start="613:40" pos:end="613:40">=</operator> <name pos:start="613:42" pos:end="613:71"><name pos:start="613:42" pos:end="613:44">ost</name><operator pos:start="613:45" pos:end="613:46">-&gt;</operator><name pos:start="613:47" pos:end="613:52">filter</name><operator pos:start="613:53" pos:end="613:54">-&gt;</operator><name pos:start="613:55" pos:end="613:60">filter</name><operator pos:start="613:61" pos:end="613:62">-&gt;</operator><name pos:start="613:63" pos:end="613:68">inputs</name><index pos:start="613:69" pos:end="613:71">[<expr pos:start="613:70" pos:end="613:70"><literal type="number" pos:start="613:70" pos:end="613:70">0</literal></expr>]</index></name><operator pos:start="613:72" pos:end="613:73">-&gt;</operator><name pos:start="613:74" pos:end="613:82">time_base</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="615:17" pos:end="623:17"><if pos:start="615:17" pos:end="623:17">if <condition pos:start="615:20" pos:end="617:174">(   <expr pos:start="615:24" pos:end="617:173"><call pos:start="615:24" pos:end="615:49"><name pos:start="615:24" pos:end="615:29">av_q2d</name><argument_list pos:start="615:30" pos:end="615:49">(<argument pos:start="615:31" pos:end="615:48"><expr pos:start="615:31" pos:end="615:48"><name pos:start="615:31" pos:end="615:48"><name pos:start="615:31" pos:end="615:37">enc_ctx</name><operator pos:start="615:38" pos:end="615:39">-&gt;</operator><name pos:start="615:40" pos:end="615:48">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="615:51" pos:end="615:51">&lt;</operator> <literal type="number" pos:start="615:53" pos:end="615:57">0.001</literal> <operator pos:start="615:59" pos:end="615:60">&amp;&amp;</operator> <name pos:start="615:62" pos:end="615:78">video_sync_method</name> <operator pos:start="615:80" pos:end="615:81">!=</operator> <name pos:start="615:83" pos:end="615:99">VSYNC_PASSTHROUGH</name>

                   <operator pos:start="617:20" pos:end="617:21">&amp;&amp;</operator> <operator pos:start="617:23" pos:end="617:23">(</operator><name pos:start="617:24" pos:end="617:40">video_sync_method</name> <operator pos:start="617:42" pos:end="617:43">==</operator> <name pos:start="617:45" pos:end="617:53">VSYNC_CFR</name> <operator pos:start="617:55" pos:end="617:56">||</operator> <name pos:start="617:58" pos:end="617:74">video_sync_method</name> <operator pos:start="617:76" pos:end="617:77">==</operator> <name pos:start="617:79" pos:end="617:89">VSYNC_VSCFR</name> <operator pos:start="617:91" pos:end="617:92">||</operator> <operator pos:start="617:94" pos:end="617:94">(</operator><name pos:start="617:95" pos:end="617:111">video_sync_method</name> <operator pos:start="617:113" pos:end="617:114">==</operator> <name pos:start="617:116" pos:end="617:125">VSYNC_AUTO</name> <operator pos:start="617:127" pos:end="617:128">&amp;&amp;</operator> <operator pos:start="617:130" pos:end="617:130">!</operator><operator pos:start="617:131" pos:end="617:131">(</operator><name pos:start="617:132" pos:end="617:149"><name pos:start="617:132" pos:end="617:133">oc</name><operator pos:start="617:134" pos:end="617:135">-&gt;</operator><name pos:start="617:136" pos:end="617:142">oformat</name><operator pos:start="617:143" pos:end="617:144">-&gt;</operator><name pos:start="617:145" pos:end="617:149">flags</name></name> <operator pos:start="617:151" pos:end="617:151">&amp;</operator> <name pos:start="617:153" pos:end="617:170">AVFMT_VARIABLE_FPS</name><operator pos:start="617:171" pos:end="617:171">)</operator><operator pos:start="617:172" pos:end="617:172">)</operator><operator pos:start="617:173" pos:end="617:173">)</operator></expr>)</condition><block pos:start="617:175" pos:end="623:17">{<block_content pos:start="619:21" pos:end="621:128">

                    <expr_stmt pos:start="619:21" pos:end="621:128"><expr pos:start="619:21" pos:end="621:127"><call pos:start="619:21" pos:end="621:127"><name pos:start="619:21" pos:end="619:26">av_log</name><argument_list pos:start="619:27" pos:end="621:127">(<argument pos:start="619:28" pos:end="619:29"><expr pos:start="619:28" pos:end="619:29"><name pos:start="619:28" pos:end="619:29">oc</name></expr></argument>, <argument pos:start="619:32" pos:end="619:45"><expr pos:start="619:32" pos:end="619:45"><name pos:start="619:32" pos:end="619:45">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="619:48" pos:end="621:126"><expr pos:start="619:48" pos:end="621:126"><literal type="string" pos:start="619:48" pos:end="619:114">"Frame rate very high for a muxer not efficiently supporting it.\n"</literal>

                                               <literal type="string" pos:start="621:48" pos:end="621:126">"Please consider specifying a lower framerate, a different muxer or -vsync 2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <for pos:start="625:17" pos:end="631:77">for <control pos:start="625:21" pos:end="625:58">(<init pos:start="625:22" pos:end="625:27"><expr pos:start="625:22" pos:end="625:26"><name pos:start="625:22" pos:end="625:22">j</name> <operator pos:start="625:24" pos:end="625:24">=</operator> <literal type="number" pos:start="625:26" pos:end="625:26">0</literal></expr>;</init> <condition pos:start="625:29" pos:end="625:53"><expr pos:start="625:29" pos:end="625:52"><name pos:start="625:29" pos:end="625:29">j</name> <operator pos:start="625:31" pos:end="625:31">&lt;</operator> <name pos:start="625:33" pos:end="625:52"><name pos:start="625:33" pos:end="625:35">ost</name><operator pos:start="625:36" pos:end="625:37">-&gt;</operator><name pos:start="625:38" pos:end="625:52">forced_kf_count</name></name></expr>;</condition> <incr pos:start="625:55" pos:end="625:57"><expr pos:start="625:55" pos:end="625:57"><name pos:start="625:55" pos:end="625:55">j</name><operator pos:start="625:56" pos:end="625:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="627:21" pos:end="631:77"><block_content pos:start="627:21" pos:end="631:77">

                    <expr_stmt pos:start="627:21" pos:end="631:77"><expr pos:start="627:21" pos:end="631:76"><name pos:start="627:21" pos:end="627:41"><name pos:start="627:21" pos:end="627:23">ost</name><operator pos:start="627:24" pos:end="627:25">-&gt;</operator><name pos:start="627:26" pos:end="627:38">forced_kf_pts</name><index pos:start="627:39" pos:end="627:41">[<expr pos:start="627:40" pos:end="627:40"><name pos:start="627:40" pos:end="627:40">j</name></expr>]</index></name> <operator pos:start="627:43" pos:end="627:43">=</operator> <call pos:start="627:45" pos:end="631:76"><name pos:start="627:45" pos:end="627:56">av_rescale_q</name><argument_list pos:start="627:57" pos:end="631:76">(<argument pos:start="627:58" pos:end="627:78"><expr pos:start="627:58" pos:end="627:78"><name pos:start="627:58" pos:end="627:78"><name pos:start="627:58" pos:end="627:60">ost</name><operator pos:start="627:61" pos:end="627:62">-&gt;</operator><name pos:start="627:63" pos:end="627:75">forced_kf_pts</name><index pos:start="627:76" pos:end="627:78">[<expr pos:start="627:77" pos:end="627:77"><name pos:start="627:77" pos:end="627:77">j</name></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="629:58" pos:end="629:71"><expr pos:start="629:58" pos:end="629:71"><name pos:start="629:58" pos:end="629:71">AV_TIME_BASE_Q</name></expr></argument>,

                                                         <argument pos:start="631:58" pos:end="631:75"><expr pos:start="631:58" pos:end="631:75"><name pos:start="631:58" pos:end="631:75"><name pos:start="631:58" pos:end="631:64">enc_ctx</name><operator pos:start="631:65" pos:end="631:66">-&gt;</operator><name pos:start="631:67" pos:end="631:75">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



                <expr_stmt pos:start="635:17" pos:end="635:68"><expr pos:start="635:17" pos:end="635:67"><name pos:start="635:17" pos:end="635:30"><name pos:start="635:17" pos:end="635:23">enc_ctx</name><operator pos:start="635:24" pos:end="635:25">-&gt;</operator><name pos:start="635:26" pos:end="635:30">width</name></name>  <operator pos:start="635:33" pos:end="635:33">=</operator> <name pos:start="635:35" pos:end="635:64"><name pos:start="635:35" pos:end="635:37">ost</name><operator pos:start="635:38" pos:end="635:39">-&gt;</operator><name pos:start="635:40" pos:end="635:45">filter</name><operator pos:start="635:46" pos:end="635:47">-&gt;</operator><name pos:start="635:48" pos:end="635:53">filter</name><operator pos:start="635:54" pos:end="635:55">-&gt;</operator><name pos:start="635:56" pos:end="635:61">inputs</name><index pos:start="635:62" pos:end="635:64">[<expr pos:start="635:63" pos:end="635:63"><literal type="number" pos:start="635:63" pos:end="635:63">0</literal></expr>]</index></name><operator pos:start="635:65" pos:end="635:66">-&gt;</operator><name pos:start="635:67" pos:end="635:67">w</name></expr>;</expr_stmt>

                <expr_stmt pos:start="637:17" pos:end="637:68"><expr pos:start="637:17" pos:end="637:67"><name pos:start="637:17" pos:end="637:31"><name pos:start="637:17" pos:end="637:23">enc_ctx</name><operator pos:start="637:24" pos:end="637:25">-&gt;</operator><name pos:start="637:26" pos:end="637:31">height</name></name> <operator pos:start="637:33" pos:end="637:33">=</operator> <name pos:start="637:35" pos:end="637:64"><name pos:start="637:35" pos:end="637:37">ost</name><operator pos:start="637:38" pos:end="637:39">-&gt;</operator><name pos:start="637:40" pos:end="637:45">filter</name><operator pos:start="637:46" pos:end="637:47">-&gt;</operator><name pos:start="637:48" pos:end="637:53">filter</name><operator pos:start="637:54" pos:end="637:55">-&gt;</operator><name pos:start="637:56" pos:end="637:61">inputs</name><index pos:start="637:62" pos:end="637:64">[<expr pos:start="637:63" pos:end="637:63"><literal type="number" pos:start="637:63" pos:end="637:63">0</literal></expr>]</index></name><operator pos:start="637:65" pos:end="637:66">-&gt;</operator><name pos:start="637:67" pos:end="637:67">h</name></expr>;</expr_stmt>

                <expr_stmt pos:start="639:17" pos:end="645:72"><expr pos:start="639:17" pos:end="645:71"><name pos:start="639:17" pos:end="639:44"><name pos:start="639:17" pos:end="639:23">enc_ctx</name><operator pos:start="639:24" pos:end="639:25">-&gt;</operator><name pos:start="639:26" pos:end="639:44">sample_aspect_ratio</name></name> <operator pos:start="639:46" pos:end="639:46">=</operator> <name pos:start="639:48" pos:end="639:75"><name pos:start="639:48" pos:end="639:50">ost</name><operator pos:start="639:51" pos:end="639:52">-&gt;</operator><name pos:start="639:53" pos:end="639:54">st</name><operator pos:start="639:55" pos:end="639:56">-&gt;</operator><name pos:start="639:57" pos:end="639:75">sample_aspect_ratio</name></name> <operator pos:start="639:77" pos:end="639:77">=</operator>

                    <ternary pos:start="641:21" pos:end="645:71"><condition pos:start="641:21" pos:end="641:49"><expr pos:start="641:21" pos:end="641:47"><name pos:start="641:21" pos:end="641:47"><name pos:start="641:21" pos:end="641:23">ost</name><operator pos:start="641:24" pos:end="641:25">-&gt;</operator><name pos:start="641:26" pos:end="641:43">frame_aspect_ratio</name><operator pos:start="641:44" pos:end="641:44">.</operator><name pos:start="641:45" pos:end="641:47">num</name></name></expr> ?</condition><then pos:start="643:21" pos:end="643:102"> <comment type="line" pos:start="641:51" pos:end="641:89">// overridden by the -aspect cli option</comment>

                    <macro pos:start="643:21" pos:end="643:102"><name pos:start="643:21" pos:end="643:28">av_mul_q</name><argument_list pos:start="643:29" pos:end="643:102">(<argument pos:start="643:30" pos:end="643:52">ost-&gt;frame_aspect_ratio</argument>, <argument pos:start="643:55" pos:end="643:83">(AVRational){ enc_ctx-&gt;height</argument>, <argument pos:start="643:86" pos:end="643:101">enc_ctx-&gt;width }</argument>)</argument_list></macro> </then><else pos:start="643:104" pos:end="645:71">:

                    <expr pos:start="645:21" pos:end="645:71"><name pos:start="645:21" pos:end="645:50"><name pos:start="645:21" pos:end="645:23">ost</name><operator pos:start="645:24" pos:end="645:25">-&gt;</operator><name pos:start="645:26" pos:end="645:31">filter</name><operator pos:start="645:32" pos:end="645:33">-&gt;</operator><name pos:start="645:34" pos:end="645:39">filter</name><operator pos:start="645:40" pos:end="645:41">-&gt;</operator><name pos:start="645:42" pos:end="645:47">inputs</name><index pos:start="645:48" pos:end="645:50">[<expr pos:start="645:49" pos:end="645:49"><literal type="number" pos:start="645:49" pos:end="645:49">0</literal></expr>]</index></name><operator pos:start="645:51" pos:end="645:52">-&gt;</operator><name pos:start="645:53" pos:end="645:71">sample_aspect_ratio</name></expr></else></ternary></expr>;</expr_stmt>

                <if_stmt pos:start="647:17" pos:end="659:88"><if pos:start="647:17" pos:end="659:88">if <condition pos:start="647:20" pos:end="651:81">(<expr pos:start="647:21" pos:end="651:80"><operator pos:start="647:21" pos:end="647:21">!</operator><call pos:start="647:22" pos:end="647:58"><name pos:start="647:22" pos:end="647:28">strncmp</name><argument_list pos:start="647:29" pos:end="647:58">(<argument pos:start="647:30" pos:end="647:43"><expr pos:start="647:30" pos:end="647:43"><name pos:start="647:30" pos:end="647:43"><name pos:start="647:30" pos:end="647:32">ost</name><operator pos:start="647:33" pos:end="647:34">-&gt;</operator><name pos:start="647:35" pos:end="647:37">enc</name><operator pos:start="647:38" pos:end="647:39">-&gt;</operator><name pos:start="647:40" pos:end="647:43">name</name></name></expr></argument>, <argument pos:start="647:46" pos:end="647:54"><expr pos:start="647:46" pos:end="647:54"><literal type="string" pos:start="647:46" pos:end="647:54">"libx264"</literal></expr></argument>, <argument pos:start="647:57" pos:end="647:57"><expr pos:start="647:57" pos:end="647:57"><literal type="number" pos:start="647:57" pos:end="647:57">7</literal></expr></argument>)</argument_list></call> <operator pos:start="647:60" pos:end="647:61">&amp;&amp;</operator>

                    <name pos:start="649:21" pos:end="649:36"><name pos:start="649:21" pos:end="649:27">enc_ctx</name><operator pos:start="649:28" pos:end="649:29">-&gt;</operator><name pos:start="649:30" pos:end="649:36">pix_fmt</name></name> <operator pos:start="649:38" pos:end="649:39">==</operator> <name pos:start="649:41" pos:end="649:55">AV_PIX_FMT_NONE</name> <operator pos:start="649:57" pos:end="649:58">&amp;&amp;</operator>

                    <name pos:start="651:21" pos:end="651:50"><name pos:start="651:21" pos:end="651:23">ost</name><operator pos:start="651:24" pos:end="651:25">-&gt;</operator><name pos:start="651:26" pos:end="651:31">filter</name><operator pos:start="651:32" pos:end="651:33">-&gt;</operator><name pos:start="651:34" pos:end="651:39">filter</name><operator pos:start="651:40" pos:end="651:41">-&gt;</operator><name pos:start="651:42" pos:end="651:47">inputs</name><index pos:start="651:48" pos:end="651:50">[<expr pos:start="651:49" pos:end="651:49"><literal type="number" pos:start="651:49" pos:end="651:49">0</literal></expr>]</index></name><operator pos:start="651:51" pos:end="651:52">-&gt;</operator><name pos:start="651:53" pos:end="651:58">format</name> <operator pos:start="651:60" pos:end="651:61">!=</operator> <name pos:start="651:63" pos:end="651:80">AV_PIX_FMT_YUV420P</name></expr>)</condition><block type="pseudo" pos:start="653:21" pos:end="659:88"><block_content pos:start="653:21" pos:end="659:88">

                    <expr_stmt pos:start="653:21" pos:end="659:88"><expr pos:start="653:21" pos:end="659:87"><call pos:start="653:21" pos:end="659:87"><name pos:start="653:21" pos:end="653:26">av_log</name><argument_list pos:start="653:27" pos:end="659:87">(<argument pos:start="653:28" pos:end="653:31"><expr pos:start="653:28" pos:end="653:31"><name pos:start="653:28" pos:end="653:31">NULL</name></expr></argument>, <argument pos:start="653:34" pos:end="653:47"><expr pos:start="653:34" pos:end="653:47"><name pos:start="653:34" pos:end="653:47">AV_LOG_WARNING</name></expr></argument>,

                           <argument pos:start="655:28" pos:end="657:98"><expr pos:start="655:28" pos:end="657:98"><literal type="string" pos:start="655:28" pos:end="655:87">"No pixel format specified, %s for H.264 encoding chosen.\n"</literal>

                           <literal type="string" pos:start="657:28" pos:end="657:98">"Use -pix_fmt yuv420p for compatibility with outdated media players.\n"</literal></expr></argument>,

                           <argument pos:start="659:28" pos:end="659:86"><expr pos:start="659:28" pos:end="659:86"><call pos:start="659:28" pos:end="659:86"><name pos:start="659:28" pos:end="659:46">av_get_pix_fmt_name</name><argument_list pos:start="659:47" pos:end="659:86">(<argument pos:start="659:48" pos:end="659:85"><expr pos:start="659:48" pos:end="659:85"><name pos:start="659:48" pos:end="659:77"><name pos:start="659:48" pos:end="659:50">ost</name><operator pos:start="659:51" pos:end="659:52">-&gt;</operator><name pos:start="659:53" pos:end="659:58">filter</name><operator pos:start="659:59" pos:end="659:60">-&gt;</operator><name pos:start="659:61" pos:end="659:66">filter</name><operator pos:start="659:67" pos:end="659:68">-&gt;</operator><name pos:start="659:69" pos:end="659:74">inputs</name><index pos:start="659:75" pos:end="659:77">[<expr pos:start="659:76" pos:end="659:76"><literal type="number" pos:start="659:76" pos:end="659:76">0</literal></expr>]</index></name><operator pos:start="659:78" pos:end="659:79">-&gt;</operator><name pos:start="659:80" pos:end="659:85">format</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="661:17" pos:end="673:88"><if pos:start="661:17" pos:end="673:88">if <condition pos:start="661:20" pos:end="665:81">(<expr pos:start="661:21" pos:end="665:80"><operator pos:start="661:21" pos:end="661:21">!</operator><call pos:start="661:22" pos:end="661:62"><name pos:start="661:22" pos:end="661:28">strncmp</name><argument_list pos:start="661:29" pos:end="661:62">(<argument pos:start="661:30" pos:end="661:43"><expr pos:start="661:30" pos:end="661:43"><name pos:start="661:30" pos:end="661:43"><name pos:start="661:30" pos:end="661:32">ost</name><operator pos:start="661:33" pos:end="661:34">-&gt;</operator><name pos:start="661:35" pos:end="661:37">enc</name><operator pos:start="661:38" pos:end="661:39">-&gt;</operator><name pos:start="661:40" pos:end="661:43">name</name></name></expr></argument>, <argument pos:start="661:46" pos:end="661:57"><expr pos:start="661:46" pos:end="661:57"><literal type="string" pos:start="661:46" pos:end="661:57">"mpeg2video"</literal></expr></argument>, <argument pos:start="661:60" pos:end="661:61"><expr pos:start="661:60" pos:end="661:61"><literal type="number" pos:start="661:60" pos:end="661:61">10</literal></expr></argument>)</argument_list></call> <operator pos:start="661:64" pos:end="661:65">&amp;&amp;</operator>

                    <name pos:start="663:21" pos:end="663:36"><name pos:start="663:21" pos:end="663:27">enc_ctx</name><operator pos:start="663:28" pos:end="663:29">-&gt;</operator><name pos:start="663:30" pos:end="663:36">pix_fmt</name></name> <operator pos:start="663:38" pos:end="663:39">==</operator> <name pos:start="663:41" pos:end="663:55">AV_PIX_FMT_NONE</name> <operator pos:start="663:57" pos:end="663:58">&amp;&amp;</operator>

                    <name pos:start="665:21" pos:end="665:50"><name pos:start="665:21" pos:end="665:23">ost</name><operator pos:start="665:24" pos:end="665:25">-&gt;</operator><name pos:start="665:26" pos:end="665:31">filter</name><operator pos:start="665:32" pos:end="665:33">-&gt;</operator><name pos:start="665:34" pos:end="665:39">filter</name><operator pos:start="665:40" pos:end="665:41">-&gt;</operator><name pos:start="665:42" pos:end="665:47">inputs</name><index pos:start="665:48" pos:end="665:50">[<expr pos:start="665:49" pos:end="665:49"><literal type="number" pos:start="665:49" pos:end="665:49">0</literal></expr>]</index></name><operator pos:start="665:51" pos:end="665:52">-&gt;</operator><name pos:start="665:53" pos:end="665:58">format</name> <operator pos:start="665:60" pos:end="665:61">!=</operator> <name pos:start="665:63" pos:end="665:80">AV_PIX_FMT_YUV420P</name></expr>)</condition><block type="pseudo" pos:start="667:21" pos:end="673:88"><block_content pos:start="667:21" pos:end="673:88">

                    <expr_stmt pos:start="667:21" pos:end="673:88"><expr pos:start="667:21" pos:end="673:87"><call pos:start="667:21" pos:end="673:87"><name pos:start="667:21" pos:end="667:26">av_log</name><argument_list pos:start="667:27" pos:end="673:87">(<argument pos:start="667:28" pos:end="667:31"><expr pos:start="667:28" pos:end="667:31"><name pos:start="667:28" pos:end="667:31">NULL</name></expr></argument>, <argument pos:start="667:34" pos:end="667:47"><expr pos:start="667:34" pos:end="667:47"><name pos:start="667:34" pos:end="667:47">AV_LOG_WARNING</name></expr></argument>,

                           <argument pos:start="669:28" pos:end="671:98"><expr pos:start="669:28" pos:end="671:98"><literal type="string" pos:start="669:28" pos:end="669:88">"No pixel format specified, %s for MPEG-2 encoding chosen.\n"</literal>

                           <literal type="string" pos:start="671:28" pos:end="671:98">"Use -pix_fmt yuv420p for compatibility with outdated media players.\n"</literal></expr></argument>,

                           <argument pos:start="673:28" pos:end="673:86"><expr pos:start="673:28" pos:end="673:86"><call pos:start="673:28" pos:end="673:86"><name pos:start="673:28" pos:end="673:46">av_get_pix_fmt_name</name><argument_list pos:start="673:47" pos:end="673:86">(<argument pos:start="673:48" pos:end="673:85"><expr pos:start="673:48" pos:end="673:85"><name pos:start="673:48" pos:end="673:77"><name pos:start="673:48" pos:end="673:50">ost</name><operator pos:start="673:51" pos:end="673:52">-&gt;</operator><name pos:start="673:53" pos:end="673:58">filter</name><operator pos:start="673:59" pos:end="673:60">-&gt;</operator><name pos:start="673:61" pos:end="673:66">filter</name><operator pos:start="673:67" pos:end="673:68">-&gt;</operator><name pos:start="673:69" pos:end="673:74">inputs</name><index pos:start="673:75" pos:end="673:77">[<expr pos:start="673:76" pos:end="673:76"><literal type="number" pos:start="673:76" pos:end="673:76">0</literal></expr>]</index></name><operator pos:start="673:78" pos:end="673:79">-&gt;</operator><name pos:start="673:80" pos:end="673:85">format</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="675:17" pos:end="675:74"><expr pos:start="675:17" pos:end="675:73"><name pos:start="675:17" pos:end="675:32"><name pos:start="675:17" pos:end="675:23">enc_ctx</name><operator pos:start="675:24" pos:end="675:25">-&gt;</operator><name pos:start="675:26" pos:end="675:32">pix_fmt</name></name> <operator pos:start="675:34" pos:end="675:34">=</operator> <name pos:start="675:36" pos:end="675:65"><name pos:start="675:36" pos:end="675:38">ost</name><operator pos:start="675:39" pos:end="675:40">-&gt;</operator><name pos:start="675:41" pos:end="675:46">filter</name><operator pos:start="675:47" pos:end="675:48">-&gt;</operator><name pos:start="675:49" pos:end="675:54">filter</name><operator pos:start="675:55" pos:end="675:56">-&gt;</operator><name pos:start="675:57" pos:end="675:62">inputs</name><index pos:start="675:63" pos:end="675:65">[<expr pos:start="675:64" pos:end="675:64"><literal type="number" pos:start="675:64" pos:end="675:64">0</literal></expr>]</index></name><operator pos:start="675:66" pos:end="675:67">-&gt;</operator><name pos:start="675:68" pos:end="675:73">format</name></expr>;</expr_stmt>



                <expr_stmt pos:start="679:17" pos:end="679:58"><expr pos:start="679:17" pos:end="679:57"><name pos:start="679:17" pos:end="679:39"><name pos:start="679:17" pos:end="679:19">ost</name><operator pos:start="679:20" pos:end="679:21">-&gt;</operator><name pos:start="679:22" pos:end="679:23">st</name><operator pos:start="679:24" pos:end="679:25">-&gt;</operator><name pos:start="679:26" pos:end="679:39">avg_frame_rate</name></name> <operator pos:start="679:41" pos:end="679:41">=</operator> <name pos:start="679:43" pos:end="679:57"><name pos:start="679:43" pos:end="679:45">ost</name><operator pos:start="679:46" pos:end="679:47">-&gt;</operator><name pos:start="679:48" pos:end="679:57">frame_rate</name></name></expr>;</expr_stmt>



                <if_stmt pos:start="683:17" pos:end="693:17"><if pos:start="683:17" pos:end="693:17">if <condition pos:start="683:20" pos:end="689:57">(<expr pos:start="683:21" pos:end="689:56"><operator pos:start="683:21" pos:end="683:21">!</operator><name pos:start="683:22" pos:end="683:28">dec_ctx</name> <operator pos:start="683:30" pos:end="683:31">||</operator>

                    <name pos:start="685:21" pos:end="685:34"><name pos:start="685:21" pos:end="685:27">enc_ctx</name><operator pos:start="685:28" pos:end="685:29">-&gt;</operator><name pos:start="685:30" pos:end="685:34">width</name></name>   <operator pos:start="685:38" pos:end="685:39">!=</operator> <name pos:start="685:41" pos:end="685:54"><name pos:start="685:41" pos:end="685:47">dec_ctx</name><operator pos:start="685:48" pos:end="685:49">-&gt;</operator><name pos:start="685:50" pos:end="685:54">width</name></name>  <operator pos:start="685:57" pos:end="685:58">||</operator>

                    <name pos:start="687:21" pos:end="687:35"><name pos:start="687:21" pos:end="687:27">enc_ctx</name><operator pos:start="687:28" pos:end="687:29">-&gt;</operator><name pos:start="687:30" pos:end="687:35">height</name></name>  <operator pos:start="687:38" pos:end="687:39">!=</operator> <name pos:start="687:41" pos:end="687:55"><name pos:start="687:41" pos:end="687:47">dec_ctx</name><operator pos:start="687:48" pos:end="687:49">-&gt;</operator><name pos:start="687:50" pos:end="687:55">height</name></name> <operator pos:start="687:57" pos:end="687:58">||</operator>

                    <name pos:start="689:21" pos:end="689:36"><name pos:start="689:21" pos:end="689:27">enc_ctx</name><operator pos:start="689:28" pos:end="689:29">-&gt;</operator><name pos:start="689:30" pos:end="689:36">pix_fmt</name></name> <operator pos:start="689:38" pos:end="689:39">!=</operator> <name pos:start="689:41" pos:end="689:56"><name pos:start="689:41" pos:end="689:47">dec_ctx</name><operator pos:start="689:48" pos:end="689:49">-&gt;</operator><name pos:start="689:50" pos:end="689:56">pix_fmt</name></name></expr>)</condition> <block pos:start="689:59" pos:end="693:17">{<block_content pos:start="691:21" pos:end="691:77">

                    <expr_stmt pos:start="691:21" pos:end="691:77"><expr pos:start="691:21" pos:end="691:76"><name pos:start="691:21" pos:end="691:48"><name pos:start="691:21" pos:end="691:27">enc_ctx</name><operator pos:start="691:28" pos:end="691:29">-&gt;</operator><name pos:start="691:30" pos:end="691:48">bits_per_raw_sample</name></name> <operator pos:start="691:50" pos:end="691:50">=</operator> <name pos:start="691:52" pos:end="691:76">frame_bits_per_raw_sample</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="697:17" pos:end="729:17"><if pos:start="697:17" pos:end="729:17">if <condition pos:start="697:20" pos:end="697:42">(<expr pos:start="697:21" pos:end="697:41"><name pos:start="697:21" pos:end="697:41"><name pos:start="697:21" pos:end="697:23">ost</name><operator pos:start="697:24" pos:end="697:25">-&gt;</operator><name pos:start="697:26" pos:end="697:41">forced_keyframes</name></name></expr>)</condition> <block pos:start="697:44" pos:end="729:17">{<block_content pos:start="699:21" pos:end="727:21">

                    <if_stmt pos:start="699:21" pos:end="727:21"><if pos:start="699:21" pos:end="723:21">if <condition pos:start="699:24" pos:end="699:68">(<expr pos:start="699:25" pos:end="699:67"><operator pos:start="699:25" pos:end="699:25">!</operator><call pos:start="699:26" pos:end="699:67"><name pos:start="699:26" pos:end="699:32">strncmp</name><argument_list pos:start="699:33" pos:end="699:67">(<argument pos:start="699:34" pos:end="699:54"><expr pos:start="699:34" pos:end="699:54"><name pos:start="699:34" pos:end="699:54"><name pos:start="699:34" pos:end="699:36">ost</name><operator pos:start="699:37" pos:end="699:38">-&gt;</operator><name pos:start="699:39" pos:end="699:54">forced_keyframes</name></name></expr></argument>, <argument pos:start="699:57" pos:end="699:63"><expr pos:start="699:57" pos:end="699:63"><literal type="string" pos:start="699:57" pos:end="699:63">"expr:"</literal></expr></argument>, <argument pos:start="699:66" pos:end="699:66"><expr pos:start="699:66" pos:end="699:66"><literal type="number" pos:start="699:66" pos:end="699:66">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="699:70" pos:end="723:21">{<block_content pos:start="701:25" pos:end="721:89">

                        <expr_stmt pos:start="701:25" pos:end="703:107"><expr pos:start="701:25" pos:end="703:106"><name pos:start="701:25" pos:end="701:27">ret</name> <operator pos:start="701:29" pos:end="701:29">=</operator> <call pos:start="701:31" pos:end="703:106"><name pos:start="701:31" pos:end="701:43">av_expr_parse</name><argument_list pos:start="701:44" pos:end="703:106">(<argument pos:start="701:45" pos:end="701:72"><expr pos:start="701:45" pos:end="701:72"><operator pos:start="701:45" pos:end="701:45">&amp;</operator><name pos:start="701:46" pos:end="701:72"><name pos:start="701:46" pos:end="701:48">ost</name><operator pos:start="701:49" pos:end="701:50">-&gt;</operator><name pos:start="701:51" pos:end="701:72">forced_keyframes_pexpr</name></name></expr></argument>, <argument pos:start="701:75" pos:end="701:97"><expr pos:start="701:75" pos:end="701:97"><name pos:start="701:75" pos:end="701:95"><name pos:start="701:75" pos:end="701:77">ost</name><operator pos:start="701:78" pos:end="701:79">-&gt;</operator><name pos:start="701:80" pos:end="701:95">forced_keyframes</name></name><operator pos:start="701:96" pos:end="701:96">+</operator><literal type="number" pos:start="701:97" pos:end="701:97">5</literal></expr></argument>,

                                            <argument pos:start="703:45" pos:end="703:72"><expr pos:start="703:45" pos:end="703:72"><name pos:start="703:45" pos:end="703:72">forced_keyframes_const_names</name></expr></argument>, <argument pos:start="703:75" pos:end="703:78"><expr pos:start="703:75" pos:end="703:78"><name pos:start="703:75" pos:end="703:78">NULL</name></expr></argument>, <argument pos:start="703:81" pos:end="703:84"><expr pos:start="703:81" pos:end="703:84"><name pos:start="703:81" pos:end="703:84">NULL</name></expr></argument>, <argument pos:start="703:87" pos:end="703:90"><expr pos:start="703:87" pos:end="703:90"><name pos:start="703:87" pos:end="703:90">NULL</name></expr></argument>, <argument pos:start="703:93" pos:end="703:96"><expr pos:start="703:93" pos:end="703:96"><name pos:start="703:93" pos:end="703:96">NULL</name></expr></argument>, <argument pos:start="703:99" pos:end="703:99"><expr pos:start="703:99" pos:end="703:99"><literal type="number" pos:start="703:99" pos:end="703:99">0</literal></expr></argument>, <argument pos:start="703:102" pos:end="703:105"><expr pos:start="703:102" pos:end="703:105"><name pos:start="703:102" pos:end="703:105">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="705:25" pos:end="713:25"><if pos:start="705:25" pos:end="713:25">if <condition pos:start="705:28" pos:end="705:36">(<expr pos:start="705:29" pos:end="705:35"><name pos:start="705:29" pos:end="705:31">ret</name> <operator pos:start="705:33" pos:end="705:33">&lt;</operator> <literal type="number" pos:start="705:35" pos:end="705:35">0</literal></expr>)</condition> <block pos:start="705:38" pos:end="713:25">{<block_content pos:start="707:29" pos:end="711:39">

                            <expr_stmt pos:start="707:29" pos:end="709:106"><expr pos:start="707:29" pos:end="709:105"><call pos:start="707:29" pos:end="709:105"><name pos:start="707:29" pos:end="707:34">av_log</name><argument_list pos:start="707:35" pos:end="709:105">(<argument pos:start="707:36" pos:end="707:39"><expr pos:start="707:36" pos:end="707:39"><name pos:start="707:36" pos:end="707:39">NULL</name></expr></argument>, <argument pos:start="707:42" pos:end="707:53"><expr pos:start="707:42" pos:end="707:53"><name pos:start="707:42" pos:end="707:53">AV_LOG_ERROR</name></expr></argument>,

                                   <argument pos:start="709:36" pos:end="709:79"><expr pos:start="709:36" pos:end="709:79"><literal type="string" pos:start="709:36" pos:end="709:79">"Invalid force_key_frames expression '%s'\n"</literal></expr></argument>, <argument pos:start="709:82" pos:end="709:104"><expr pos:start="709:82" pos:end="709:104"><name pos:start="709:82" pos:end="709:102"><name pos:start="709:82" pos:end="709:84">ost</name><operator pos:start="709:85" pos:end="709:86">-&gt;</operator><name pos:start="709:87" pos:end="709:102">forced_keyframes</name></name><operator pos:start="709:103" pos:end="709:103">+</operator><literal type="number" pos:start="709:104" pos:end="709:104">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="711:29" pos:end="711:39">return <expr pos:start="711:36" pos:end="711:38"><name pos:start="711:36" pos:end="711:38">ret</name></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="715:25" pos:end="715:75"><expr pos:start="715:25" pos:end="715:74"><name pos:start="715:25" pos:end="715:70"><name pos:start="715:25" pos:end="715:27">ost</name><operator pos:start="715:28" pos:end="715:29">-&gt;</operator><name pos:start="715:30" pos:end="715:63">forced_keyframes_expr_const_values</name><index pos:start="715:64" pos:end="715:70">[<expr pos:start="715:65" pos:end="715:69"><name pos:start="715:65" pos:end="715:69">FKF_N</name></expr>]</index></name> <operator pos:start="715:72" pos:end="715:72">=</operator> <literal type="number" pos:start="715:74" pos:end="715:74">0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="717:25" pos:end="717:82"><expr pos:start="717:25" pos:end="717:81"><name pos:start="717:25" pos:end="717:77"><name pos:start="717:25" pos:end="717:27">ost</name><operator pos:start="717:28" pos:end="717:29">-&gt;</operator><name pos:start="717:30" pos:end="717:63">forced_keyframes_expr_const_values</name><index pos:start="717:64" pos:end="717:77">[<expr pos:start="717:65" pos:end="717:76"><name pos:start="717:65" pos:end="717:76">FKF_N_FORCED</name></expr>]</index></name> <operator pos:start="717:79" pos:end="717:79">=</operator> <literal type="number" pos:start="717:81" pos:end="717:81">0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="719:25" pos:end="719:89"><expr pos:start="719:25" pos:end="719:88"><name pos:start="719:25" pos:end="719:82"><name pos:start="719:25" pos:end="719:27">ost</name><operator pos:start="719:28" pos:end="719:29">-&gt;</operator><name pos:start="719:30" pos:end="719:63">forced_keyframes_expr_const_values</name><index pos:start="719:64" pos:end="719:82">[<expr pos:start="719:65" pos:end="719:81"><name pos:start="719:65" pos:end="719:81">FKF_PREV_FORCED_N</name></expr>]</index></name> <operator pos:start="719:84" pos:end="719:84">=</operator> <name pos:start="719:86" pos:end="719:88">NAN</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="721:25" pos:end="721:89"><expr pos:start="721:25" pos:end="721:88"><name pos:start="721:25" pos:end="721:82"><name pos:start="721:25" pos:end="721:27">ost</name><operator pos:start="721:28" pos:end="721:29">-&gt;</operator><name pos:start="721:30" pos:end="721:63">forced_keyframes_expr_const_values</name><index pos:start="721:64" pos:end="721:82">[<expr pos:start="721:65" pos:end="721:81"><name pos:start="721:65" pos:end="721:81">FKF_PREV_FORCED_T</name></expr>]</index></name> <operator pos:start="721:84" pos:end="721:84">=</operator> <name pos:start="721:86" pos:end="721:88">NAN</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="723:23" pos:end="727:21">else <block pos:start="723:28" pos:end="727:21">{<block_content pos:start="725:25" pos:end="725:90">

                        <expr_stmt pos:start="725:25" pos:end="725:90"><expr pos:start="725:25" pos:end="725:89"><call pos:start="725:25" pos:end="725:89"><name pos:start="725:25" pos:end="725:47">parse_forced_key_frames</name><argument_list pos:start="725:48" pos:end="725:89">(<argument pos:start="725:49" pos:end="725:69"><expr pos:start="725:49" pos:end="725:69"><name pos:start="725:49" pos:end="725:69"><name pos:start="725:49" pos:end="725:51">ost</name><operator pos:start="725:52" pos:end="725:53">-&gt;</operator><name pos:start="725:54" pos:end="725:69">forced_keyframes</name></name></expr></argument>, <argument pos:start="725:72" pos:end="725:74"><expr pos:start="725:72" pos:end="725:74"><name pos:start="725:72" pos:end="725:74">ost</name></expr></argument>, <argument pos:start="725:77" pos:end="725:88"><expr pos:start="725:77" pos:end="725:88"><name pos:start="725:77" pos:end="725:88"><name pos:start="725:77" pos:end="725:79">ost</name><operator pos:start="725:80" pos:end="725:81">-&gt;</operator><name pos:start="725:82" pos:end="725:88">enc_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="731:17" pos:end="731:22">break;</break>

            <case pos:start="733:13" pos:end="733:39">case <expr pos:start="733:18" pos:end="733:38"><name pos:start="733:18" pos:end="733:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="735:17" pos:end="735:59"><expr pos:start="735:17" pos:end="735:58"><name pos:start="735:17" pos:end="735:34"><name pos:start="735:17" pos:end="735:23">enc_ctx</name><operator pos:start="735:24" pos:end="735:25">-&gt;</operator><name pos:start="735:26" pos:end="735:34">time_base</name></name> <operator pos:start="735:36" pos:end="735:36">=</operator> <operator pos:start="735:38" pos:end="735:38">(</operator><name pos:start="735:39" pos:end="735:48">AVRational</name><operator pos:start="735:49" pos:end="735:49">)</operator><block pos:start="735:50" pos:end="735:58">{<expr pos:start="735:51" pos:end="735:51"><literal type="number" pos:start="735:51" pos:end="735:51">1</literal></expr>, <expr pos:start="735:54" pos:end="735:57"><literal type="number" pos:start="735:54" pos:end="735:57">1000</literal></expr>}</block></expr>;</expr_stmt>

                <if_stmt pos:start="737:17" pos:end="743:17"><if pos:start="737:17" pos:end="743:17">if <condition pos:start="737:20" pos:end="737:36">(<expr pos:start="737:21" pos:end="737:35"><operator pos:start="737:21" pos:end="737:21">!</operator><name pos:start="737:22" pos:end="737:35"><name pos:start="737:22" pos:end="737:28">enc_ctx</name><operator pos:start="737:29" pos:end="737:30">-&gt;</operator><name pos:start="737:31" pos:end="737:35">width</name></name></expr>)</condition> <block pos:start="737:38" pos:end="743:17">{<block_content pos:start="739:21" pos:end="741:93">

                    <expr_stmt pos:start="739:21" pos:end="739:92"><expr pos:start="739:21" pos:end="739:91"><name pos:start="739:21" pos:end="739:34"><name pos:start="739:21" pos:end="739:27">enc_ctx</name><operator pos:start="739:28" pos:end="739:29">-&gt;</operator><name pos:start="739:30" pos:end="739:34">width</name></name>     <operator pos:start="739:40" pos:end="739:40">=</operator> <name pos:start="739:42" pos:end="739:73"><name pos:start="739:42" pos:end="739:54">input_streams</name><index pos:start="739:55" pos:end="739:73">[<expr pos:start="739:56" pos:end="739:72"><name pos:start="739:56" pos:end="739:72"><name pos:start="739:56" pos:end="739:58">ost</name><operator pos:start="739:59" pos:end="739:60">-&gt;</operator><name pos:start="739:61" pos:end="739:72">source_index</name></name></expr>]</index></name><operator pos:start="739:74" pos:end="739:75">-&gt;</operator><name pos:start="739:76" pos:end="739:91"><name pos:start="739:76" pos:end="739:77">st</name><operator pos:start="739:78" pos:end="739:79">-&gt;</operator><name pos:start="739:80" pos:end="739:84">codec</name><operator pos:start="739:85" pos:end="739:86">-&gt;</operator><name pos:start="739:87" pos:end="739:91">width</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="741:21" pos:end="741:93"><expr pos:start="741:21" pos:end="741:92"><name pos:start="741:21" pos:end="741:35"><name pos:start="741:21" pos:end="741:27">enc_ctx</name><operator pos:start="741:28" pos:end="741:29">-&gt;</operator><name pos:start="741:30" pos:end="741:35">height</name></name>    <operator pos:start="741:40" pos:end="741:40">=</operator> <name pos:start="741:42" pos:end="741:73"><name pos:start="741:42" pos:end="741:54">input_streams</name><index pos:start="741:55" pos:end="741:73">[<expr pos:start="741:56" pos:end="741:72"><name pos:start="741:56" pos:end="741:72"><name pos:start="741:56" pos:end="741:58">ost</name><operator pos:start="741:59" pos:end="741:60">-&gt;</operator><name pos:start="741:61" pos:end="741:72">source_index</name></name></expr>]</index></name><operator pos:start="741:74" pos:end="741:75">-&gt;</operator><name pos:start="741:76" pos:end="741:92"><name pos:start="741:76" pos:end="741:77">st</name><operator pos:start="741:78" pos:end="741:79">-&gt;</operator><name pos:start="741:80" pos:end="741:84">codec</name><operator pos:start="741:85" pos:end="741:86">-&gt;</operator><name pos:start="741:87" pos:end="741:92">height</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="745:17" pos:end="745:22">break;</break>

            <case pos:start="747:13" pos:end="747:35">case <expr pos:start="747:18" pos:end="747:34"><name pos:start="747:18" pos:end="747:34">AVMEDIA_TYPE_DATA</name></expr>:</case>

                <break pos:start="749:17" pos:end="749:22">break;</break>

            <default pos:start="751:13" pos:end="751:20">default:</default>

                <expr_stmt pos:start="753:17" pos:end="753:24"><expr pos:start="753:17" pos:end="753:23"><call pos:start="753:17" pos:end="753:23"><name pos:start="753:17" pos:end="753:21">abort</name><argument_list pos:start="753:22" pos:end="753:23">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="755:17" pos:end="755:22">break;</break>

            </block_content>}</block></switch>

            <comment type="block" pos:start="759:13" pos:end="759:31">/* two pass mode */</comment>

            <if_stmt pos:start="761:13" pos:end="823:13"><if pos:start="761:13" pos:end="823:13">if <condition pos:start="761:16" pos:end="761:71">(<expr pos:start="761:17" pos:end="761:70"><name pos:start="761:17" pos:end="761:30"><name pos:start="761:17" pos:end="761:23">enc_ctx</name><operator pos:start="761:24" pos:end="761:25">-&gt;</operator><name pos:start="761:26" pos:end="761:30">flags</name></name> <operator pos:start="761:32" pos:end="761:32">&amp;</operator> <operator pos:start="761:34" pos:end="761:34">(</operator><name pos:start="761:35" pos:end="761:50">CODEC_FLAG_PASS1</name> <operator pos:start="761:52" pos:end="761:52">|</operator> <name pos:start="761:54" pos:end="761:69">CODEC_FLAG_PASS2</name><operator pos:start="761:70" pos:end="761:70">)</operator></expr>)</condition> <block pos:start="761:73" pos:end="823:13">{<block_content pos:start="763:17" pos:end="821:17">

                <decl_stmt pos:start="763:17" pos:end="763:39"><decl pos:start="763:17" pos:end="763:38"><type pos:start="763:17" pos:end="763:20"><name pos:start="763:17" pos:end="763:20">char</name></type> <name pos:start="763:22" pos:end="763:38"><name pos:start="763:22" pos:end="763:32">logfilename</name><index pos:start="763:33" pos:end="763:38">[<expr pos:start="763:34" pos:end="763:37"><literal type="number" pos:start="763:34" pos:end="763:37">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="765:17" pos:end="765:24"><decl pos:start="765:17" pos:end="765:23"><type pos:start="765:17" pos:end="765:22"><name pos:start="765:17" pos:end="765:20">FILE</name> <modifier pos:start="765:22" pos:end="765:22">*</modifier></type><name pos:start="765:23" pos:end="765:23">f</name></decl>;</decl_stmt>



                <expr_stmt pos:start="769:17" pos:end="775:28"><expr pos:start="769:17" pos:end="775:27"><call pos:start="769:17" pos:end="775:27"><name pos:start="769:17" pos:end="769:24">snprintf</name><argument_list pos:start="769:25" pos:end="775:27">(<argument pos:start="769:26" pos:end="769:36"><expr pos:start="769:26" pos:end="769:36"><name pos:start="769:26" pos:end="769:36">logfilename</name></expr></argument>, <argument pos:start="769:39" pos:end="769:57"><expr pos:start="769:39" pos:end="769:57"><sizeof pos:start="769:39" pos:end="769:57">sizeof<argument_list pos:start="769:45" pos:end="769:57">(<argument pos:start="769:46" pos:end="769:56"><expr pos:start="769:46" pos:end="769:56"><name pos:start="769:46" pos:end="769:56">logfilename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="769:60" pos:end="769:70"><expr pos:start="769:60" pos:end="769:70"><literal type="string" pos:start="769:60" pos:end="769:70">"%s-%d.log"</literal></expr></argument>,

                         <argument pos:start="771:26" pos:end="773:78"><expr pos:start="771:26" pos:end="773:78"><ternary pos:start="771:26" pos:end="773:78"><condition pos:start="771:26" pos:end="771:46"><expr pos:start="771:26" pos:end="771:44"><name pos:start="771:26" pos:end="771:44"><name pos:start="771:26" pos:end="771:28">ost</name><operator pos:start="771:29" pos:end="771:30">-&gt;</operator><name pos:start="771:31" pos:end="771:44">logfile_prefix</name></name></expr> ?</condition><then pos:start="771:48" pos:end="771:66"> <expr pos:start="771:48" pos:end="771:66"><name pos:start="771:48" pos:end="771:66"><name pos:start="771:48" pos:end="771:50">ost</name><operator pos:start="771:51" pos:end="771:52">-&gt;</operator><name pos:start="771:53" pos:end="771:66">logfile_prefix</name></name></expr> </then><else pos:start="771:68" pos:end="773:78">:

                                               <expr pos:start="773:48" pos:end="773:78"><name pos:start="773:48" pos:end="773:78">DEFAULT_PASS_LOGFILENAME_PREFIX</name></expr></else></ternary></expr></argument>,

                         <argument pos:start="775:26" pos:end="775:26"><expr pos:start="775:26" pos:end="775:26"><name pos:start="775:26" pos:end="775:26">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="777:17" pos:end="821:17"><if pos:start="777:17" pos:end="781:17">if <condition pos:start="777:20" pos:end="777:55">(<expr pos:start="777:21" pos:end="777:54"><operator pos:start="777:21" pos:end="777:21">!</operator><call pos:start="777:22" pos:end="777:54"><name pos:start="777:22" pos:end="777:27">strcmp</name><argument_list pos:start="777:28" pos:end="777:54">(<argument pos:start="777:29" pos:end="777:42"><expr pos:start="777:29" pos:end="777:42"><name pos:start="777:29" pos:end="777:42"><name pos:start="777:29" pos:end="777:31">ost</name><operator pos:start="777:32" pos:end="777:33">-&gt;</operator><name pos:start="777:34" pos:end="777:36">enc</name><operator pos:start="777:37" pos:end="777:38">-&gt;</operator><name pos:start="777:39" pos:end="777:42">name</name></name></expr></argument>, <argument pos:start="777:45" pos:end="777:53"><expr pos:start="777:45" pos:end="777:53"><literal type="string" pos:start="777:45" pos:end="777:53">"libx264"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="777:57" pos:end="781:17">{<block_content pos:start="779:21" pos:end="779:98">

                    <expr_stmt pos:start="779:21" pos:end="779:98"><expr pos:start="779:21" pos:end="779:97"><call pos:start="779:21" pos:end="779:97"><name pos:start="779:21" pos:end="779:31">av_dict_set</name><argument_list pos:start="779:32" pos:end="779:97">(<argument pos:start="779:33" pos:end="779:50"><expr pos:start="779:33" pos:end="779:50"><operator pos:start="779:33" pos:end="779:33">&amp;</operator><name pos:start="779:34" pos:end="779:50"><name pos:start="779:34" pos:end="779:36">ost</name><operator pos:start="779:37" pos:end="779:38">-&gt;</operator><name pos:start="779:39" pos:end="779:50">encoder_opts</name></name></expr></argument>, <argument pos:start="779:53" pos:end="779:59"><expr pos:start="779:53" pos:end="779:59"><literal type="string" pos:start="779:53" pos:end="779:59">"stats"</literal></expr></argument>, <argument pos:start="779:62" pos:end="779:72"><expr pos:start="779:62" pos:end="779:72"><name pos:start="779:62" pos:end="779:72">logfilename</name></expr></argument>, <argument pos:start="779:75" pos:end="779:96"><expr pos:start="779:75" pos:end="779:96"><name pos:start="779:75" pos:end="779:96">AV_DICT_DONT_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="781:19" pos:end="821:17">else <block pos:start="781:24" pos:end="821:17">{<block_content pos:start="783:21" pos:end="819:21">

                    <if_stmt pos:start="783:21" pos:end="801:21"><if pos:start="783:21" pos:end="801:21">if <condition pos:start="783:24" pos:end="783:58">(<expr pos:start="783:25" pos:end="783:57"><name pos:start="783:25" pos:end="783:38"><name pos:start="783:25" pos:end="783:31">enc_ctx</name><operator pos:start="783:32" pos:end="783:33">-&gt;</operator><name pos:start="783:34" pos:end="783:38">flags</name></name> <operator pos:start="783:40" pos:end="783:40">&amp;</operator> <name pos:start="783:42" pos:end="783:57">CODEC_FLAG_PASS2</name></expr>)</condition> <block pos:start="783:60" pos:end="801:21">{<block_content pos:start="785:25" pos:end="799:54">

                        <decl_stmt pos:start="785:25" pos:end="785:41"><decl pos:start="785:25" pos:end="785:40"><type pos:start="785:25" pos:end="785:31"><name pos:start="785:25" pos:end="785:28">char</name>  <modifier pos:start="785:31" pos:end="785:31">*</modifier></type><name pos:start="785:32" pos:end="785:40">logbuffer</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="787:25" pos:end="787:46"><decl pos:start="787:25" pos:end="787:45"><type pos:start="787:25" pos:end="787:30"><name pos:start="787:25" pos:end="787:30">size_t</name></type> <name pos:start="787:32" pos:end="787:45">logbuffer_size</name></decl>;</decl_stmt>

                        <if_stmt pos:start="789:25" pos:end="797:25"><if pos:start="789:25" pos:end="797:25">if <condition pos:start="789:28" pos:end="789:93">(<expr pos:start="789:29" pos:end="789:92"><call pos:start="789:29" pos:end="789:88"><name pos:start="789:29" pos:end="789:46">cmdutils_read_file</name><argument_list pos:start="789:47" pos:end="789:88">(<argument pos:start="789:48" pos:end="789:58"><expr pos:start="789:48" pos:end="789:58"><name pos:start="789:48" pos:end="789:58">logfilename</name></expr></argument>, <argument pos:start="789:61" pos:end="789:70"><expr pos:start="789:61" pos:end="789:70"><operator pos:start="789:61" pos:end="789:61">&amp;</operator><name pos:start="789:62" pos:end="789:70">logbuffer</name></expr></argument>, <argument pos:start="789:73" pos:end="789:87"><expr pos:start="789:73" pos:end="789:87"><operator pos:start="789:73" pos:end="789:73">&amp;</operator><name pos:start="789:74" pos:end="789:87">logbuffer_size</name></expr></argument>)</argument_list></call> <operator pos:start="789:90" pos:end="789:90">&lt;</operator> <literal type="number" pos:start="789:92" pos:end="789:92">0</literal></expr>)</condition> <block pos:start="789:95" pos:end="797:25">{<block_content pos:start="791:29" pos:end="795:44">

                            <expr_stmt pos:start="791:29" pos:end="793:48"><expr pos:start="791:29" pos:end="793:47"><call pos:start="791:29" pos:end="793:47"><name pos:start="791:29" pos:end="791:34">av_log</name><argument_list pos:start="791:35" pos:end="793:47">(<argument pos:start="791:36" pos:end="791:39"><expr pos:start="791:36" pos:end="791:39"><name pos:start="791:36" pos:end="791:39">NULL</name></expr></argument>, <argument pos:start="791:42" pos:end="791:53"><expr pos:start="791:42" pos:end="791:53"><name pos:start="791:42" pos:end="791:53">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="791:56" pos:end="791:106"><expr pos:start="791:56" pos:end="791:106"><literal type="string" pos:start="791:56" pos:end="791:106">"Error reading log file '%s' for pass-2 encoding\n"</literal></expr></argument>,

                                   <argument pos:start="793:36" pos:end="793:46"><expr pos:start="793:36" pos:end="793:46"><name pos:start="793:36" pos:end="793:46">logfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="795:29" pos:end="795:44"><expr pos:start="795:29" pos:end="795:43"><call pos:start="795:29" pos:end="795:43"><name pos:start="795:29" pos:end="795:40">exit_program</name><argument_list pos:start="795:41" pos:end="795:43">(<argument pos:start="795:42" pos:end="795:42"><expr pos:start="795:42" pos:end="795:42"><literal type="number" pos:start="795:42" pos:end="795:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="799:25" pos:end="799:54"><expr pos:start="799:25" pos:end="799:53"><name pos:start="799:25" pos:end="799:41"><name pos:start="799:25" pos:end="799:31">enc_ctx</name><operator pos:start="799:32" pos:end="799:33">-&gt;</operator><name pos:start="799:34" pos:end="799:41">stats_in</name></name> <operator pos:start="799:43" pos:end="799:43">=</operator> <name pos:start="799:45" pos:end="799:53">logbuffer</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="803:21" pos:end="819:21"><if pos:start="803:21" pos:end="819:21">if <condition pos:start="803:24" pos:end="803:58">(<expr pos:start="803:25" pos:end="803:57"><name pos:start="803:25" pos:end="803:38"><name pos:start="803:25" pos:end="803:31">enc_ctx</name><operator pos:start="803:32" pos:end="803:33">-&gt;</operator><name pos:start="803:34" pos:end="803:38">flags</name></name> <operator pos:start="803:40" pos:end="803:40">&amp;</operator> <name pos:start="803:42" pos:end="803:57">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="803:60" pos:end="819:21">{<block_content pos:start="805:25" pos:end="817:41">

                        <expr_stmt pos:start="805:25" pos:end="805:61"><expr pos:start="805:25" pos:end="805:60"><name pos:start="805:25" pos:end="805:25">f</name> <operator pos:start="805:27" pos:end="805:27">=</operator> <call pos:start="805:29" pos:end="805:60"><name pos:start="805:29" pos:end="805:41">av_fopen_utf8</name><argument_list pos:start="805:42" pos:end="805:60">(<argument pos:start="805:43" pos:end="805:53"><expr pos:start="805:43" pos:end="805:53"><name pos:start="805:43" pos:end="805:53">logfilename</name></expr></argument>, <argument pos:start="805:56" pos:end="805:59"><expr pos:start="805:56" pos:end="805:59"><literal type="string" pos:start="805:56" pos:end="805:59">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="807:25" pos:end="815:25"><if pos:start="807:25" pos:end="815:25">if <condition pos:start="807:28" pos:end="807:31">(<expr pos:start="807:29" pos:end="807:30"><operator pos:start="807:29" pos:end="807:29">!</operator><name pos:start="807:30" pos:end="807:30">f</name></expr>)</condition> <block pos:start="807:33" pos:end="815:25">{<block_content pos:start="809:29" pos:end="813:44">

                            <expr_stmt pos:start="809:29" pos:end="811:62"><expr pos:start="809:29" pos:end="811:61"><call pos:start="809:29" pos:end="811:61"><name pos:start="809:29" pos:end="809:34">av_log</name><argument_list pos:start="809:35" pos:end="811:61">(<argument pos:start="809:36" pos:end="809:39"><expr pos:start="809:36" pos:end="809:39"><name pos:start="809:36" pos:end="809:39">NULL</name></expr></argument>, <argument pos:start="809:42" pos:end="809:53"><expr pos:start="809:42" pos:end="809:53"><name pos:start="809:42" pos:end="809:53">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="809:56" pos:end="809:109"><expr pos:start="809:56" pos:end="809:109"><literal type="string" pos:start="809:56" pos:end="809:109">"Cannot write log file '%s' for pass-1 encoding: %s\n"</literal></expr></argument>,

                                <argument pos:start="811:33" pos:end="811:43"><expr pos:start="811:33" pos:end="811:43"><name pos:start="811:33" pos:end="811:43">logfilename</name></expr></argument>, <argument pos:start="811:46" pos:end="811:60"><expr pos:start="811:46" pos:end="811:60"><call pos:start="811:46" pos:end="811:60"><name pos:start="811:46" pos:end="811:53">strerror</name><argument_list pos:start="811:54" pos:end="811:60">(<argument pos:start="811:55" pos:end="811:59"><expr pos:start="811:55" pos:end="811:59"><name pos:start="811:55" pos:end="811:59">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="813:29" pos:end="813:44"><expr pos:start="813:29" pos:end="813:43"><call pos:start="813:29" pos:end="813:43"><name pos:start="813:29" pos:end="813:40">exit_program</name><argument_list pos:start="813:41" pos:end="813:43">(<argument pos:start="813:42" pos:end="813:42"><expr pos:start="813:42" pos:end="813:42"><literal type="number" pos:start="813:42" pos:end="813:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="817:25" pos:end="817:41"><expr pos:start="817:25" pos:end="817:40"><name pos:start="817:25" pos:end="817:36"><name pos:start="817:25" pos:end="817:27">ost</name><operator pos:start="817:28" pos:end="817:29">-&gt;</operator><name pos:start="817:30" pos:end="817:36">logfile</name></name> <operator pos:start="817:38" pos:end="817:38">=</operator> <name pos:start="817:40" pos:end="817:40">f</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="829:9" pos:end="887:9"><if pos:start="829:9" pos:end="887:9">if <condition pos:start="829:12" pos:end="829:29">(<expr pos:start="829:13" pos:end="829:28"><name pos:start="829:13" pos:end="829:28"><name pos:start="829:13" pos:end="829:15">ost</name><operator pos:start="829:16" pos:end="829:17">-&gt;</operator><name pos:start="829:18" pos:end="829:28">disposition</name></name></expr>)</condition> <block pos:start="829:31" pos:end="887:9">{<block_content pos:start="831:13" pos:end="885:33">

            <decl_stmt pos:start="831:13" pos:end="863:14"><decl pos:start="831:13" pos:end="863:13"><type pos:start="831:13" pos:end="831:33"><specifier pos:start="831:13" pos:end="831:18">static</specifier> <specifier pos:start="831:20" pos:end="831:24">const</specifier> <name pos:start="831:26" pos:end="831:33">AVOption</name></type> <name pos:start="831:35" pos:end="831:40"><name pos:start="831:35" pos:end="831:38">opts</name><index pos:start="831:39" pos:end="831:40">[]</index></name> <init pos:start="831:42" pos:end="863:13">= <expr pos:start="831:44" pos:end="863:13"><block pos:start="831:44" pos:end="863:13">{

                <expr pos:start="833:17" pos:end="833:123"><block pos:start="833:17" pos:end="833:123">{ <expr pos:start="833:19" pos:end="833:31"><literal type="string" pos:start="833:19" pos:end="833:31">"disposition"</literal></expr>         , <expr pos:start="833:43" pos:end="833:46"><name pos:start="833:43" pos:end="833:46">NULL</name></expr>, <expr pos:start="833:49" pos:end="833:49"><literal type="number" pos:start="833:49" pos:end="833:49">0</literal></expr>, <expr pos:start="833:52" pos:end="833:68"><name pos:start="833:52" pos:end="833:68">AV_OPT_TYPE_FLAGS</name></expr>, <expr pos:start="833:71" pos:end="833:82"><block pos:start="833:71" pos:end="833:82">{ <expr pos:start="833:73" pos:end="833:80"><operator pos:start="833:73" pos:end="833:73">.</operator><name pos:start="833:74" pos:end="833:76">i64</name> <operator pos:start="833:78" pos:end="833:78">=</operator> <literal type="number" pos:start="833:80" pos:end="833:80">0</literal></expr> }</block></expr>, <expr pos:start="833:85" pos:end="833:93"><name pos:start="833:85" pos:end="833:93">INT64_MIN</name></expr>, <expr pos:start="833:96" pos:end="833:104"><name pos:start="833:96" pos:end="833:104">INT64_MAX</name></expr>, <expr pos:start="833:107" pos:end="833:121"><operator pos:start="833:107" pos:end="833:107">.</operator><name pos:start="833:108" pos:end="833:111">unit</name> <operator pos:start="833:113" pos:end="833:113">=</operator> <literal type="string" pos:start="833:115" pos:end="833:121">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="835:17" pos:end="835:135"><block pos:start="835:17" pos:end="835:135">{ <expr pos:start="835:19" pos:end="835:27"><literal type="string" pos:start="835:19" pos:end="835:27">"default"</literal></expr>             , <expr pos:start="835:43" pos:end="835:46"><name pos:start="835:43" pos:end="835:46">NULL</name></expr>, <expr pos:start="835:49" pos:end="835:49"><literal type="number" pos:start="835:49" pos:end="835:49">0</literal></expr>, <expr pos:start="835:52" pos:end="835:68"><name pos:start="835:52" pos:end="835:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="835:71" pos:end="835:113"><block pos:start="835:71" pos:end="835:113">{ <expr pos:start="835:73" pos:end="835:101"><operator pos:start="835:73" pos:end="835:73">.</operator><name pos:start="835:74" pos:end="835:76">i64</name> <operator pos:start="835:78" pos:end="835:78">=</operator> <name pos:start="835:80" pos:end="835:101">AV_DISPOSITION_DEFAULT</name></expr>           }</block></expr>,    <expr pos:start="835:119" pos:end="835:133"><operator pos:start="835:119" pos:end="835:119">.</operator><name pos:start="835:120" pos:end="835:123">unit</name> <operator pos:start="835:125" pos:end="835:125">=</operator> <literal type="string" pos:start="835:127" pos:end="835:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="837:17" pos:end="837:135"><block pos:start="837:17" pos:end="837:135">{ <expr pos:start="837:19" pos:end="837:23"><literal type="string" pos:start="837:19" pos:end="837:23">"dub"</literal></expr>                 , <expr pos:start="837:43" pos:end="837:46"><name pos:start="837:43" pos:end="837:46">NULL</name></expr>, <expr pos:start="837:49" pos:end="837:49"><literal type="number" pos:start="837:49" pos:end="837:49">0</literal></expr>, <expr pos:start="837:52" pos:end="837:68"><name pos:start="837:52" pos:end="837:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="837:71" pos:end="837:113"><block pos:start="837:71" pos:end="837:113">{ <expr pos:start="837:73" pos:end="837:97"><operator pos:start="837:73" pos:end="837:73">.</operator><name pos:start="837:74" pos:end="837:76">i64</name> <operator pos:start="837:78" pos:end="837:78">=</operator> <name pos:start="837:80" pos:end="837:97">AV_DISPOSITION_DUB</name></expr>               }</block></expr>,    <expr pos:start="837:119" pos:end="837:133"><operator pos:start="837:119" pos:end="837:119">.</operator><name pos:start="837:120" pos:end="837:123">unit</name> <operator pos:start="837:125" pos:end="837:125">=</operator> <literal type="string" pos:start="837:127" pos:end="837:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="839:17" pos:end="839:135"><block pos:start="839:17" pos:end="839:135">{ <expr pos:start="839:19" pos:end="839:28"><literal type="string" pos:start="839:19" pos:end="839:28">"original"</literal></expr>            , <expr pos:start="839:43" pos:end="839:46"><name pos:start="839:43" pos:end="839:46">NULL</name></expr>, <expr pos:start="839:49" pos:end="839:49"><literal type="number" pos:start="839:49" pos:end="839:49">0</literal></expr>, <expr pos:start="839:52" pos:end="839:68"><name pos:start="839:52" pos:end="839:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="839:71" pos:end="839:113"><block pos:start="839:71" pos:end="839:113">{ <expr pos:start="839:73" pos:end="839:102"><operator pos:start="839:73" pos:end="839:73">.</operator><name pos:start="839:74" pos:end="839:76">i64</name> <operator pos:start="839:78" pos:end="839:78">=</operator> <name pos:start="839:80" pos:end="839:102">AV_DISPOSITION_ORIGINAL</name></expr>          }</block></expr>,    <expr pos:start="839:119" pos:end="839:133"><operator pos:start="839:119" pos:end="839:119">.</operator><name pos:start="839:120" pos:end="839:123">unit</name> <operator pos:start="839:125" pos:end="839:125">=</operator> <literal type="string" pos:start="839:127" pos:end="839:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="841:17" pos:end="841:135"><block pos:start="841:17" pos:end="841:135">{ <expr pos:start="841:19" pos:end="841:27"><literal type="string" pos:start="841:19" pos:end="841:27">"comment"</literal></expr>             , <expr pos:start="841:43" pos:end="841:46"><name pos:start="841:43" pos:end="841:46">NULL</name></expr>, <expr pos:start="841:49" pos:end="841:49"><literal type="number" pos:start="841:49" pos:end="841:49">0</literal></expr>, <expr pos:start="841:52" pos:end="841:68"><name pos:start="841:52" pos:end="841:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="841:71" pos:end="841:113"><block pos:start="841:71" pos:end="841:113">{ <expr pos:start="841:73" pos:end="841:101"><operator pos:start="841:73" pos:end="841:73">.</operator><name pos:start="841:74" pos:end="841:76">i64</name> <operator pos:start="841:78" pos:end="841:78">=</operator> <name pos:start="841:80" pos:end="841:101">AV_DISPOSITION_COMMENT</name></expr>           }</block></expr>,    <expr pos:start="841:119" pos:end="841:133"><operator pos:start="841:119" pos:end="841:119">.</operator><name pos:start="841:120" pos:end="841:123">unit</name> <operator pos:start="841:125" pos:end="841:125">=</operator> <literal type="string" pos:start="841:127" pos:end="841:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="843:17" pos:end="843:135"><block pos:start="843:17" pos:end="843:135">{ <expr pos:start="843:19" pos:end="843:26"><literal type="string" pos:start="843:19" pos:end="843:26">"lyrics"</literal></expr>              , <expr pos:start="843:43" pos:end="843:46"><name pos:start="843:43" pos:end="843:46">NULL</name></expr>, <expr pos:start="843:49" pos:end="843:49"><literal type="number" pos:start="843:49" pos:end="843:49">0</literal></expr>, <expr pos:start="843:52" pos:end="843:68"><name pos:start="843:52" pos:end="843:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="843:71" pos:end="843:113"><block pos:start="843:71" pos:end="843:113">{ <expr pos:start="843:73" pos:end="843:100"><operator pos:start="843:73" pos:end="843:73">.</operator><name pos:start="843:74" pos:end="843:76">i64</name> <operator pos:start="843:78" pos:end="843:78">=</operator> <name pos:start="843:80" pos:end="843:100">AV_DISPOSITION_LYRICS</name></expr>            }</block></expr>,    <expr pos:start="843:119" pos:end="843:133"><operator pos:start="843:119" pos:end="843:119">.</operator><name pos:start="843:120" pos:end="843:123">unit</name> <operator pos:start="843:125" pos:end="843:125">=</operator> <literal type="string" pos:start="843:127" pos:end="843:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="845:17" pos:end="845:135"><block pos:start="845:17" pos:end="845:135">{ <expr pos:start="845:19" pos:end="845:27"><literal type="string" pos:start="845:19" pos:end="845:27">"karaoke"</literal></expr>             , <expr pos:start="845:43" pos:end="845:46"><name pos:start="845:43" pos:end="845:46">NULL</name></expr>, <expr pos:start="845:49" pos:end="845:49"><literal type="number" pos:start="845:49" pos:end="845:49">0</literal></expr>, <expr pos:start="845:52" pos:end="845:68"><name pos:start="845:52" pos:end="845:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="845:71" pos:end="845:113"><block pos:start="845:71" pos:end="845:113">{ <expr pos:start="845:73" pos:end="845:101"><operator pos:start="845:73" pos:end="845:73">.</operator><name pos:start="845:74" pos:end="845:76">i64</name> <operator pos:start="845:78" pos:end="845:78">=</operator> <name pos:start="845:80" pos:end="845:101">AV_DISPOSITION_KARAOKE</name></expr>           }</block></expr>,    <expr pos:start="845:119" pos:end="845:133"><operator pos:start="845:119" pos:end="845:119">.</operator><name pos:start="845:120" pos:end="845:123">unit</name> <operator pos:start="845:125" pos:end="845:125">=</operator> <literal type="string" pos:start="845:127" pos:end="845:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="847:17" pos:end="847:135"><block pos:start="847:17" pos:end="847:135">{ <expr pos:start="847:19" pos:end="847:26"><literal type="string" pos:start="847:19" pos:end="847:26">"forced"</literal></expr>              , <expr pos:start="847:43" pos:end="847:46"><name pos:start="847:43" pos:end="847:46">NULL</name></expr>, <expr pos:start="847:49" pos:end="847:49"><literal type="number" pos:start="847:49" pos:end="847:49">0</literal></expr>, <expr pos:start="847:52" pos:end="847:68"><name pos:start="847:52" pos:end="847:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="847:71" pos:end="847:113"><block pos:start="847:71" pos:end="847:113">{ <expr pos:start="847:73" pos:end="847:100"><operator pos:start="847:73" pos:end="847:73">.</operator><name pos:start="847:74" pos:end="847:76">i64</name> <operator pos:start="847:78" pos:end="847:78">=</operator> <name pos:start="847:80" pos:end="847:100">AV_DISPOSITION_FORCED</name></expr>            }</block></expr>,    <expr pos:start="847:119" pos:end="847:133"><operator pos:start="847:119" pos:end="847:119">.</operator><name pos:start="847:120" pos:end="847:123">unit</name> <operator pos:start="847:125" pos:end="847:125">=</operator> <literal type="string" pos:start="847:127" pos:end="847:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="849:17" pos:end="849:135"><block pos:start="849:17" pos:end="849:135">{ <expr pos:start="849:19" pos:end="849:36"><literal type="string" pos:start="849:19" pos:end="849:36">"hearing_impaired"</literal></expr>    , <expr pos:start="849:43" pos:end="849:46"><name pos:start="849:43" pos:end="849:46">NULL</name></expr>, <expr pos:start="849:49" pos:end="849:49"><literal type="number" pos:start="849:49" pos:end="849:49">0</literal></expr>, <expr pos:start="849:52" pos:end="849:68"><name pos:start="849:52" pos:end="849:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="849:71" pos:end="849:113"><block pos:start="849:71" pos:end="849:113">{ <expr pos:start="849:73" pos:end="849:110"><operator pos:start="849:73" pos:end="849:73">.</operator><name pos:start="849:74" pos:end="849:76">i64</name> <operator pos:start="849:78" pos:end="849:78">=</operator> <name pos:start="849:80" pos:end="849:110">AV_DISPOSITION_HEARING_IMPAIRED</name></expr>  }</block></expr>,    <expr pos:start="849:119" pos:end="849:133"><operator pos:start="849:119" pos:end="849:119">.</operator><name pos:start="849:120" pos:end="849:123">unit</name> <operator pos:start="849:125" pos:end="849:125">=</operator> <literal type="string" pos:start="849:127" pos:end="849:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="851:17" pos:end="851:135"><block pos:start="851:17" pos:end="851:135">{ <expr pos:start="851:19" pos:end="851:35"><literal type="string" pos:start="851:19" pos:end="851:35">"visual_impaired"</literal></expr>     , <expr pos:start="851:43" pos:end="851:46"><name pos:start="851:43" pos:end="851:46">NULL</name></expr>, <expr pos:start="851:49" pos:end="851:49"><literal type="number" pos:start="851:49" pos:end="851:49">0</literal></expr>, <expr pos:start="851:52" pos:end="851:68"><name pos:start="851:52" pos:end="851:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="851:71" pos:end="851:113"><block pos:start="851:71" pos:end="851:113">{ <expr pos:start="851:73" pos:end="851:109"><operator pos:start="851:73" pos:end="851:73">.</operator><name pos:start="851:74" pos:end="851:76">i64</name> <operator pos:start="851:78" pos:end="851:78">=</operator> <name pos:start="851:80" pos:end="851:109">AV_DISPOSITION_VISUAL_IMPAIRED</name></expr>   }</block></expr>,    <expr pos:start="851:119" pos:end="851:133"><operator pos:start="851:119" pos:end="851:119">.</operator><name pos:start="851:120" pos:end="851:123">unit</name> <operator pos:start="851:125" pos:end="851:125">=</operator> <literal type="string" pos:start="851:127" pos:end="851:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="853:17" pos:end="853:135"><block pos:start="853:17" pos:end="853:135">{ <expr pos:start="853:19" pos:end="853:33"><literal type="string" pos:start="853:19" pos:end="853:33">"clean_effects"</literal></expr>       , <expr pos:start="853:43" pos:end="853:46"><name pos:start="853:43" pos:end="853:46">NULL</name></expr>, <expr pos:start="853:49" pos:end="853:49"><literal type="number" pos:start="853:49" pos:end="853:49">0</literal></expr>, <expr pos:start="853:52" pos:end="853:68"><name pos:start="853:52" pos:end="853:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="853:71" pos:end="853:113"><block pos:start="853:71" pos:end="853:113">{ <expr pos:start="853:73" pos:end="853:107"><operator pos:start="853:73" pos:end="853:73">.</operator><name pos:start="853:74" pos:end="853:76">i64</name> <operator pos:start="853:78" pos:end="853:78">=</operator> <name pos:start="853:80" pos:end="853:107">AV_DISPOSITION_CLEAN_EFFECTS</name></expr>     }</block></expr>,    <expr pos:start="853:119" pos:end="853:133"><operator pos:start="853:119" pos:end="853:119">.</operator><name pos:start="853:120" pos:end="853:123">unit</name> <operator pos:start="853:125" pos:end="853:125">=</operator> <literal type="string" pos:start="853:127" pos:end="853:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="855:17" pos:end="855:135"><block pos:start="855:17" pos:end="855:135">{ <expr pos:start="855:19" pos:end="855:28"><literal type="string" pos:start="855:19" pos:end="855:28">"captions"</literal></expr>            , <expr pos:start="855:43" pos:end="855:46"><name pos:start="855:43" pos:end="855:46">NULL</name></expr>, <expr pos:start="855:49" pos:end="855:49"><literal type="number" pos:start="855:49" pos:end="855:49">0</literal></expr>, <expr pos:start="855:52" pos:end="855:68"><name pos:start="855:52" pos:end="855:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="855:71" pos:end="855:113"><block pos:start="855:71" pos:end="855:113">{ <expr pos:start="855:73" pos:end="855:102"><operator pos:start="855:73" pos:end="855:73">.</operator><name pos:start="855:74" pos:end="855:76">i64</name> <operator pos:start="855:78" pos:end="855:78">=</operator> <name pos:start="855:80" pos:end="855:102">AV_DISPOSITION_CAPTIONS</name></expr>          }</block></expr>,    <expr pos:start="855:119" pos:end="855:133"><operator pos:start="855:119" pos:end="855:119">.</operator><name pos:start="855:120" pos:end="855:123">unit</name> <operator pos:start="855:125" pos:end="855:125">=</operator> <literal type="string" pos:start="855:127" pos:end="855:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="857:17" pos:end="857:135"><block pos:start="857:17" pos:end="857:135">{ <expr pos:start="857:19" pos:end="857:32"><literal type="string" pos:start="857:19" pos:end="857:32">"descriptions"</literal></expr>        , <expr pos:start="857:43" pos:end="857:46"><name pos:start="857:43" pos:end="857:46">NULL</name></expr>, <expr pos:start="857:49" pos:end="857:49"><literal type="number" pos:start="857:49" pos:end="857:49">0</literal></expr>, <expr pos:start="857:52" pos:end="857:68"><name pos:start="857:52" pos:end="857:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="857:71" pos:end="857:113"><block pos:start="857:71" pos:end="857:113">{ <expr pos:start="857:73" pos:end="857:106"><operator pos:start="857:73" pos:end="857:73">.</operator><name pos:start="857:74" pos:end="857:76">i64</name> <operator pos:start="857:78" pos:end="857:78">=</operator> <name pos:start="857:80" pos:end="857:106">AV_DISPOSITION_DESCRIPTIONS</name></expr>      }</block></expr>,    <expr pos:start="857:119" pos:end="857:133"><operator pos:start="857:119" pos:end="857:119">.</operator><name pos:start="857:120" pos:end="857:123">unit</name> <operator pos:start="857:125" pos:end="857:125">=</operator> <literal type="string" pos:start="857:127" pos:end="857:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="859:17" pos:end="859:135"><block pos:start="859:17" pos:end="859:135">{ <expr pos:start="859:19" pos:end="859:28"><literal type="string" pos:start="859:19" pos:end="859:28">"metadata"</literal></expr>            , <expr pos:start="859:43" pos:end="859:46"><name pos:start="859:43" pos:end="859:46">NULL</name></expr>, <expr pos:start="859:49" pos:end="859:49"><literal type="number" pos:start="859:49" pos:end="859:49">0</literal></expr>, <expr pos:start="859:52" pos:end="859:68"><name pos:start="859:52" pos:end="859:68">AV_OPT_TYPE_CONST</name></expr>, <expr pos:start="859:71" pos:end="859:113"><block pos:start="859:71" pos:end="859:113">{ <expr pos:start="859:73" pos:end="859:102"><operator pos:start="859:73" pos:end="859:73">.</operator><name pos:start="859:74" pos:end="859:76">i64</name> <operator pos:start="859:78" pos:end="859:78">=</operator> <name pos:start="859:80" pos:end="859:102">AV_DISPOSITION_METADATA</name></expr>          }</block></expr>,    <expr pos:start="859:119" pos:end="859:133"><operator pos:start="859:119" pos:end="859:119">.</operator><name pos:start="859:120" pos:end="859:123">unit</name> <operator pos:start="859:125" pos:end="859:125">=</operator> <literal type="string" pos:start="859:127" pos:end="859:133">"flags"</literal></expr> }</block></expr>,

                <expr pos:start="861:17" pos:end="861:24"><block pos:start="861:17" pos:end="861:24">{ <expr pos:start="861:19" pos:end="861:22"><name pos:start="861:19" pos:end="861:22">NULL</name></expr> }</block></expr>,

            }</block></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="865:13" pos:end="875:14"><decl pos:start="865:13" pos:end="875:13"><type pos:start="865:13" pos:end="865:32"><specifier pos:start="865:13" pos:end="865:18">static</specifier> <specifier pos:start="865:20" pos:end="865:24">const</specifier> <name pos:start="865:26" pos:end="865:32">AVClass</name></type> <name pos:start="865:34" pos:end="865:38">class</name> <init pos:start="865:40" pos:end="875:13">= <expr pos:start="865:42" pos:end="875:13"><block pos:start="865:42" pos:end="875:13">{

                <expr pos:start="867:17" pos:end="867:32"><operator pos:start="867:17" pos:end="867:17">.</operator><name pos:start="867:18" pos:end="867:27">class_name</name> <operator pos:start="867:29" pos:end="867:29">=</operator> <literal type="string" pos:start="867:31" pos:end="867:32">""</literal></expr>,

                <expr pos:start="869:17" pos:end="869:50"><operator pos:start="869:17" pos:end="869:17">.</operator><name pos:start="869:18" pos:end="869:26">item_name</name>  <operator pos:start="869:29" pos:end="869:29">=</operator> <name pos:start="869:31" pos:end="869:50">av_default_item_name</name></expr>,

                <expr pos:start="871:17" pos:end="871:34"><operator pos:start="871:17" pos:end="871:17">.</operator><name pos:start="871:18" pos:end="871:23">option</name>     <operator pos:start="871:29" pos:end="871:29">=</operator> <name pos:start="871:31" pos:end="871:34">opts</name></expr>,

                <expr pos:start="873:17" pos:end="873:51"><operator pos:start="873:17" pos:end="873:17">.</operator><name pos:start="873:18" pos:end="873:24">version</name>    <operator pos:start="873:29" pos:end="873:29">=</operator> <name pos:start="873:31" pos:end="873:51">LIBAVUTIL_VERSION_INT</name></expr>,

            }</block></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="877:13" pos:end="877:43"><decl pos:start="877:13" pos:end="877:42"><type pos:start="877:13" pos:end="877:27"><specifier pos:start="877:13" pos:end="877:17">const</specifier> <name pos:start="877:19" pos:end="877:25">AVClass</name> <modifier pos:start="877:27" pos:end="877:27">*</modifier></type><name pos:start="877:28" pos:end="877:33">pclass</name> <init pos:start="877:35" pos:end="877:42">= <expr pos:start="877:37" pos:end="877:42"><operator pos:start="877:37" pos:end="877:37">&amp;</operator><name pos:start="877:38" pos:end="877:42">class</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="881:13" pos:end="881:96"><expr pos:start="881:13" pos:end="881:95"><name pos:start="881:13" pos:end="881:15">ret</name> <operator pos:start="881:17" pos:end="881:17">=</operator> <call pos:start="881:19" pos:end="881:95"><name pos:start="881:19" pos:end="881:35">av_opt_eval_flags</name><argument_list pos:start="881:36" pos:end="881:95">(<argument pos:start="881:37" pos:end="881:43"><expr pos:start="881:37" pos:end="881:43"><operator pos:start="881:37" pos:end="881:37">&amp;</operator><name pos:start="881:38" pos:end="881:43">pclass</name></expr></argument>, <argument pos:start="881:46" pos:end="881:53"><expr pos:start="881:46" pos:end="881:53"><operator pos:start="881:46" pos:end="881:46">&amp;</operator><name pos:start="881:47" pos:end="881:53"><name pos:start="881:47" pos:end="881:50">opts</name><index pos:start="881:51" pos:end="881:53">[<expr pos:start="881:52" pos:end="881:52"><literal type="number" pos:start="881:52" pos:end="881:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="881:56" pos:end="881:71"><expr pos:start="881:56" pos:end="881:71"><name pos:start="881:56" pos:end="881:71"><name pos:start="881:56" pos:end="881:58">ost</name><operator pos:start="881:59" pos:end="881:60">-&gt;</operator><name pos:start="881:61" pos:end="881:71">disposition</name></name></expr></argument>, <argument pos:start="881:74" pos:end="881:94"><expr pos:start="881:74" pos:end="881:94"><operator pos:start="881:74" pos:end="881:74">&amp;</operator><name pos:start="881:75" pos:end="881:94"><name pos:start="881:75" pos:end="881:77">ost</name><operator pos:start="881:78" pos:end="881:79">-&gt;</operator><name pos:start="881:80" pos:end="881:81">st</name><operator pos:start="881:82" pos:end="881:83">-&gt;</operator><name pos:start="881:84" pos:end="881:94">disposition</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="883:13" pos:end="885:33"><if pos:start="883:13" pos:end="885:33">if <condition pos:start="883:16" pos:end="883:24">(<expr pos:start="883:17" pos:end="883:23"><name pos:start="883:17" pos:end="883:19">ret</name> <operator pos:start="883:21" pos:end="883:21">&lt;</operator> <literal type="number" pos:start="883:23" pos:end="883:23">0</literal></expr>)</condition><block type="pseudo" pos:start="885:17" pos:end="885:33"><block_content pos:start="885:17" pos:end="885:33">

                <goto pos:start="885:17" pos:end="885:33">goto <name pos:start="885:22" pos:end="885:32">dump_format</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="893:5" pos:end="893:27">/* open each encoder */</comment>

    <for pos:start="895:5" pos:end="1011:5">for <control pos:start="895:9" pos:end="895:43">(<init pos:start="895:10" pos:end="895:15"><expr pos:start="895:10" pos:end="895:14"><name pos:start="895:10" pos:end="895:10">i</name> <operator pos:start="895:12" pos:end="895:12">=</operator> <literal type="number" pos:start="895:14" pos:end="895:14">0</literal></expr>;</init> <condition pos:start="895:17" pos:end="895:38"><expr pos:start="895:17" pos:end="895:37"><name pos:start="895:17" pos:end="895:17">i</name> <operator pos:start="895:19" pos:end="895:19">&lt;</operator> <name pos:start="895:21" pos:end="895:37">nb_output_streams</name></expr>;</condition> <incr pos:start="895:40" pos:end="895:42"><expr pos:start="895:40" pos:end="895:42"><name pos:start="895:40" pos:end="895:40">i</name><operator pos:start="895:41" pos:end="895:42">++</operator></expr></incr>)</control> <block pos:start="895:45" pos:end="1011:5">{<block_content pos:start="897:9" pos:end="1009:9">

        <expr_stmt pos:start="897:9" pos:end="897:32"><expr pos:start="897:9" pos:end="897:31"><name pos:start="897:9" pos:end="897:11">ost</name> <operator pos:start="897:13" pos:end="897:13">=</operator> <name pos:start="897:15" pos:end="897:31"><name pos:start="897:15" pos:end="897:28">output_streams</name><index pos:start="897:29" pos:end="897:31">[<expr pos:start="897:30" pos:end="897:30"><name pos:start="897:30" pos:end="897:30">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="899:9" pos:end="1009:9"><if pos:start="899:9" pos:end="991:9">if <condition pos:start="899:12" pos:end="899:33">(<expr pos:start="899:13" pos:end="899:32"><name pos:start="899:13" pos:end="899:32"><name pos:start="899:13" pos:end="899:15">ost</name><operator pos:start="899:16" pos:end="899:17">-&gt;</operator><name pos:start="899:18" pos:end="899:32">encoding_needed</name></name></expr>)</condition> <block pos:start="899:35" pos:end="991:9">{<block_content pos:start="901:13" pos:end="989:55">

            <decl_stmt pos:start="901:13" pos:end="901:43"><decl pos:start="901:13" pos:end="901:42"><type pos:start="901:13" pos:end="901:26"><name pos:start="901:13" pos:end="901:19">AVCodec</name>      <modifier pos:start="901:26" pos:end="901:26">*</modifier></type><name pos:start="901:27" pos:end="901:31">codec</name> <init pos:start="901:33" pos:end="901:42">= <expr pos:start="901:35" pos:end="901:42"><name pos:start="901:35" pos:end="901:42"><name pos:start="901:35" pos:end="901:37">ost</name><operator pos:start="901:38" pos:end="901:39">-&gt;</operator><name pos:start="901:40" pos:end="901:42">enc</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="903:13" pos:end="903:39"><decl pos:start="903:13" pos:end="903:38"><type pos:start="903:13" pos:end="903:28"><name pos:start="903:13" pos:end="903:26">AVCodecContext</name> <modifier pos:start="903:28" pos:end="903:28">*</modifier></type><name pos:start="903:29" pos:end="903:31">dec</name> <init pos:start="903:33" pos:end="903:38">= <expr pos:start="903:35" pos:end="903:38"><name pos:start="903:35" pos:end="903:38">NULL</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="907:13" pos:end="909:35"><if pos:start="907:13" pos:end="909:35">if <condition pos:start="907:16" pos:end="907:46">(<expr pos:start="907:17" pos:end="907:45"><operator pos:start="907:17" pos:end="907:17">(</operator><name pos:start="907:18" pos:end="907:20">ist</name> <operator pos:start="907:22" pos:end="907:22">=</operator> <call pos:start="907:24" pos:end="907:44"><name pos:start="907:24" pos:end="907:39">get_input_stream</name><argument_list pos:start="907:40" pos:end="907:44">(<argument pos:start="907:41" pos:end="907:43"><expr pos:start="907:41" pos:end="907:43"><name pos:start="907:41" pos:end="907:43">ost</name></expr></argument>)</argument_list></call><operator pos:start="907:45" pos:end="907:45">)</operator></expr>)</condition><block type="pseudo" pos:start="909:17" pos:end="909:35"><block_content pos:start="909:17" pos:end="909:35">

                <expr_stmt pos:start="909:17" pos:end="909:35"><expr pos:start="909:17" pos:end="909:34"><name pos:start="909:17" pos:end="909:19">dec</name> <operator pos:start="909:21" pos:end="909:21">=</operator> <name pos:start="909:23" pos:end="909:34"><name pos:start="909:23" pos:end="909:25">ist</name><operator pos:start="909:26" pos:end="909:27">-&gt;</operator><name pos:start="909:28" pos:end="909:34">dec_ctx</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="911:13" pos:end="929:13"><if pos:start="911:13" pos:end="929:13">if <condition pos:start="911:16" pos:end="911:44">(<expr pos:start="911:17" pos:end="911:43"><name pos:start="911:17" pos:end="911:19">dec</name> <operator pos:start="911:21" pos:end="911:22">&amp;&amp;</operator> <name pos:start="911:24" pos:end="911:43"><name pos:start="911:24" pos:end="911:26">dec</name><operator pos:start="911:27" pos:end="911:28">-&gt;</operator><name pos:start="911:29" pos:end="911:43">subtitle_header</name></name></expr>)</condition> <block pos:start="911:46" pos:end="929:13">{<block_content pos:start="915:17" pos:end="927:79">

                <comment type="block" pos:start="913:17" pos:end="913:88">/* ASS code assumes this buffer is null terminated so add extra byte. */</comment>

                <expr_stmt pos:start="915:17" pos:end="915:90"><expr pos:start="915:17" pos:end="915:89"><name pos:start="915:17" pos:end="915:45"><name pos:start="915:17" pos:end="915:19">ost</name><operator pos:start="915:20" pos:end="915:21">-&gt;</operator><name pos:start="915:22" pos:end="915:28">enc_ctx</name><operator pos:start="915:29" pos:end="915:30">-&gt;</operator><name pos:start="915:31" pos:end="915:45">subtitle_header</name></name> <operator pos:start="915:47" pos:end="915:47">=</operator> <call pos:start="915:49" pos:end="915:89"><name pos:start="915:49" pos:end="915:58">av_mallocz</name><argument_list pos:start="915:59" pos:end="915:89">(<argument pos:start="915:60" pos:end="915:88"><expr pos:start="915:60" pos:end="915:88"><name pos:start="915:60" pos:end="915:84"><name pos:start="915:60" pos:end="915:62">dec</name><operator pos:start="915:63" pos:end="915:64">-&gt;</operator><name pos:start="915:65" pos:end="915:84">subtitle_header_size</name></name> <operator pos:start="915:86" pos:end="915:86">+</operator> <literal type="number" pos:start="915:88" pos:end="915:88">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="917:17" pos:end="923:17"><if pos:start="917:17" pos:end="923:17">if <condition pos:start="917:20" pos:end="917:51">(<expr pos:start="917:21" pos:end="917:50"><operator pos:start="917:21" pos:end="917:21">!</operator><name pos:start="917:22" pos:end="917:50"><name pos:start="917:22" pos:end="917:24">ost</name><operator pos:start="917:25" pos:end="917:26">-&gt;</operator><name pos:start="917:27" pos:end="917:33">enc_ctx</name><operator pos:start="917:34" pos:end="917:35">-&gt;</operator><name pos:start="917:36" pos:end="917:50">subtitle_header</name></name></expr>)</condition> <block pos:start="917:53" pos:end="923:17">{<block_content pos:start="919:21" pos:end="921:37">

                    <expr_stmt pos:start="919:21" pos:end="919:42"><expr pos:start="919:21" pos:end="919:41"><name pos:start="919:21" pos:end="919:23">ret</name> <operator pos:start="919:25" pos:end="919:25">=</operator> <call pos:start="919:27" pos:end="919:41"><name pos:start="919:27" pos:end="919:33">AVERROR</name><argument_list pos:start="919:34" pos:end="919:41">(<argument pos:start="919:35" pos:end="919:40"><expr pos:start="919:35" pos:end="919:40"><name pos:start="919:35" pos:end="919:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="921:21" pos:end="921:37">goto <name pos:start="921:26" pos:end="921:36">dump_format</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="925:17" pos:end="925:103"><expr pos:start="925:17" pos:end="925:102"><call pos:start="925:17" pos:end="925:102"><name pos:start="925:17" pos:end="925:22">memcpy</name><argument_list pos:start="925:23" pos:end="925:102">(<argument pos:start="925:24" pos:end="925:52"><expr pos:start="925:24" pos:end="925:52"><name pos:start="925:24" pos:end="925:52"><name pos:start="925:24" pos:end="925:26">ost</name><operator pos:start="925:27" pos:end="925:28">-&gt;</operator><name pos:start="925:29" pos:end="925:35">enc_ctx</name><operator pos:start="925:36" pos:end="925:37">-&gt;</operator><name pos:start="925:38" pos:end="925:52">subtitle_header</name></name></expr></argument>, <argument pos:start="925:55" pos:end="925:74"><expr pos:start="925:55" pos:end="925:74"><name pos:start="925:55" pos:end="925:74"><name pos:start="925:55" pos:end="925:57">dec</name><operator pos:start="925:58" pos:end="925:59">-&gt;</operator><name pos:start="925:60" pos:end="925:74">subtitle_header</name></name></expr></argument>, <argument pos:start="925:77" pos:end="925:101"><expr pos:start="925:77" pos:end="925:101"><name pos:start="925:77" pos:end="925:101"><name pos:start="925:77" pos:end="925:79">dec</name><operator pos:start="925:80" pos:end="925:81">-&gt;</operator><name pos:start="925:82" pos:end="925:101">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="927:17" pos:end="927:79"><expr pos:start="927:17" pos:end="927:78"><name pos:start="927:17" pos:end="927:50"><name pos:start="927:17" pos:end="927:19">ost</name><operator pos:start="927:20" pos:end="927:21">-&gt;</operator><name pos:start="927:22" pos:end="927:28">enc_ctx</name><operator pos:start="927:29" pos:end="927:30">-&gt;</operator><name pos:start="927:31" pos:end="927:50">subtitle_header_size</name></name> <operator pos:start="927:52" pos:end="927:52">=</operator> <name pos:start="927:54" pos:end="927:78"><name pos:start="927:54" pos:end="927:56">dec</name><operator pos:start="927:57" pos:end="927:58">-&gt;</operator><name pos:start="927:59" pos:end="927:78">subtitle_header_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="931:13" pos:end="933:70"><if pos:start="931:13" pos:end="933:70">if <condition pos:start="931:16" pos:end="931:68">(<expr pos:start="931:17" pos:end="931:67"><operator pos:start="931:17" pos:end="931:17">!</operator><call pos:start="931:18" pos:end="931:67"><name pos:start="931:18" pos:end="931:28">av_dict_get</name><argument_list pos:start="931:29" pos:end="931:67">(<argument pos:start="931:30" pos:end="931:46"><expr pos:start="931:30" pos:end="931:46"><name pos:start="931:30" pos:end="931:46"><name pos:start="931:30" pos:end="931:32">ost</name><operator pos:start="931:33" pos:end="931:34">-&gt;</operator><name pos:start="931:35" pos:end="931:46">encoder_opts</name></name></expr></argument>, <argument pos:start="931:49" pos:end="931:57"><expr pos:start="931:49" pos:end="931:57"><literal type="string" pos:start="931:49" pos:end="931:57">"threads"</literal></expr></argument>, <argument pos:start="931:60" pos:end="931:63"><expr pos:start="931:60" pos:end="931:63"><name pos:start="931:60" pos:end="931:63">NULL</name></expr></argument>, <argument pos:start="931:66" pos:end="931:66"><expr pos:start="931:66" pos:end="931:66"><literal type="number" pos:start="931:66" pos:end="931:66">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="933:17" pos:end="933:70"><block_content pos:start="933:17" pos:end="933:70">

                <expr_stmt pos:start="933:17" pos:end="933:70"><expr pos:start="933:17" pos:end="933:69"><call pos:start="933:17" pos:end="933:69"><name pos:start="933:17" pos:end="933:27">av_dict_set</name><argument_list pos:start="933:28" pos:end="933:69">(<argument pos:start="933:29" pos:end="933:46"><expr pos:start="933:29" pos:end="933:46"><operator pos:start="933:29" pos:end="933:29">&amp;</operator><name pos:start="933:30" pos:end="933:46"><name pos:start="933:30" pos:end="933:32">ost</name><operator pos:start="933:33" pos:end="933:34">-&gt;</operator><name pos:start="933:35" pos:end="933:46">encoder_opts</name></name></expr></argument>, <argument pos:start="933:49" pos:end="933:57"><expr pos:start="933:49" pos:end="933:57"><literal type="string" pos:start="933:49" pos:end="933:57">"threads"</literal></expr></argument>, <argument pos:start="933:60" pos:end="933:65"><expr pos:start="933:60" pos:end="933:65"><literal type="string" pos:start="933:60" pos:end="933:65">"auto"</literal></expr></argument>, <argument pos:start="933:68" pos:end="933:68"><expr pos:start="933:68" pos:end="933:68"><literal type="number" pos:start="933:68" pos:end="933:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="935:13" pos:end="935:78"><expr pos:start="935:13" pos:end="935:77"><call pos:start="935:13" pos:end="935:77"><name pos:start="935:13" pos:end="935:23">av_dict_set</name><argument_list pos:start="935:24" pos:end="935:77">(<argument pos:start="935:25" pos:end="935:42"><expr pos:start="935:25" pos:end="935:42"><operator pos:start="935:25" pos:end="935:25">&amp;</operator><name pos:start="935:26" pos:end="935:42"><name pos:start="935:26" pos:end="935:28">ost</name><operator pos:start="935:29" pos:end="935:30">-&gt;</operator><name pos:start="935:31" pos:end="935:42">encoder_opts</name></name></expr></argument>, <argument pos:start="935:45" pos:end="935:68"><expr pos:start="935:45" pos:end="935:68"><literal type="string" pos:start="935:45" pos:end="935:68">"side_data_only_packets"</literal></expr></argument>, <argument pos:start="935:71" pos:end="935:73"><expr pos:start="935:71" pos:end="935:73"><literal type="string" pos:start="935:71" pos:end="935:73">"1"</literal></expr></argument>, <argument pos:start="935:76" pos:end="935:76"><expr pos:start="935:76" pos:end="935:76"><literal type="number" pos:start="935:76" pos:end="935:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="939:13" pos:end="951:13"><if pos:start="939:13" pos:end="951:13">if <condition pos:start="939:16" pos:end="939:83">(<expr pos:start="939:17" pos:end="939:82"><operator pos:start="939:17" pos:end="939:17">(</operator><name pos:start="939:18" pos:end="939:20">ret</name> <operator pos:start="939:22" pos:end="939:22">=</operator> <call pos:start="939:24" pos:end="939:77"><name pos:start="939:24" pos:end="939:36">avcodec_open2</name><argument_list pos:start="939:37" pos:end="939:77">(<argument pos:start="939:38" pos:end="939:49"><expr pos:start="939:38" pos:end="939:49"><name pos:start="939:38" pos:end="939:49"><name pos:start="939:38" pos:end="939:40">ost</name><operator pos:start="939:41" pos:end="939:42">-&gt;</operator><name pos:start="939:43" pos:end="939:49">enc_ctx</name></name></expr></argument>, <argument pos:start="939:52" pos:end="939:56"><expr pos:start="939:52" pos:end="939:56"><name pos:start="939:52" pos:end="939:56">codec</name></expr></argument>, <argument pos:start="939:59" pos:end="939:76"><expr pos:start="939:59" pos:end="939:76"><operator pos:start="939:59" pos:end="939:59">&amp;</operator><name pos:start="939:60" pos:end="939:76"><name pos:start="939:60" pos:end="939:62">ost</name><operator pos:start="939:63" pos:end="939:64">-&gt;</operator><name pos:start="939:65" pos:end="939:76">encoder_opts</name></name></expr></argument>)</argument_list></call><operator pos:start="939:78" pos:end="939:78">)</operator> <operator pos:start="939:80" pos:end="939:80">&lt;</operator> <literal type="number" pos:start="939:82" pos:end="939:82">0</literal></expr>)</condition> <block pos:start="939:85" pos:end="951:13">{<block_content pos:start="941:17" pos:end="949:33">

                <if_stmt pos:start="941:17" pos:end="943:55"><if pos:start="941:17" pos:end="943:55">if <condition pos:start="941:20" pos:end="941:48">(<expr pos:start="941:21" pos:end="941:47"><name pos:start="941:21" pos:end="941:23">ret</name> <operator pos:start="941:25" pos:end="941:26">==</operator> <name pos:start="941:28" pos:end="941:47">AVERROR_EXPERIMENTAL</name></expr>)</condition><block type="pseudo" pos:start="943:21" pos:end="943:55"><block_content pos:start="943:21" pos:end="943:55">

                    <expr_stmt pos:start="943:21" pos:end="943:55"><expr pos:start="943:21" pos:end="943:54"><call pos:start="943:21" pos:end="943:54"><name pos:start="943:21" pos:end="943:44">abort_codec_experimental</name><argument_list pos:start="943:45" pos:end="943:54">(<argument pos:start="943:46" pos:end="943:50"><expr pos:start="943:46" pos:end="943:50"><name pos:start="943:46" pos:end="943:50">codec</name></expr></argument>, <argument pos:start="943:53" pos:end="943:53"><expr pos:start="943:53" pos:end="943:53"><literal type="number" pos:start="943:53" pos:end="943:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="945:17" pos:end="947:53"><expr pos:start="945:17" pos:end="947:52"><call pos:start="945:17" pos:end="947:52"><name pos:start="945:17" pos:end="945:24">snprintf</name><argument_list pos:start="945:25" pos:end="947:52">(<argument pos:start="945:26" pos:end="945:30"><expr pos:start="945:26" pos:end="945:30"><name pos:start="945:26" pos:end="945:30">error</name></expr></argument>, <argument pos:start="945:33" pos:end="945:45"><expr pos:start="945:33" pos:end="945:45"><sizeof pos:start="945:33" pos:end="945:45">sizeof<argument_list pos:start="945:39" pos:end="945:45">(<argument pos:start="945:40" pos:end="945:44"><expr pos:start="945:40" pos:end="945:44"><name pos:start="945:40" pos:end="945:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="945:48" pos:end="945:170"><expr pos:start="945:48" pos:end="945:170"><literal type="string" pos:start="945:48" pos:end="945:170">"Error while opening encoder for output stream #%d:%d - maybe incorrect parameters such as bit_rate, rate, width or height"</literal></expr></argument>,

                        <argument pos:start="947:25" pos:end="947:39"><expr pos:start="947:25" pos:end="947:39"><name pos:start="947:25" pos:end="947:39"><name pos:start="947:25" pos:end="947:27">ost</name><operator pos:start="947:28" pos:end="947:29">-&gt;</operator><name pos:start="947:30" pos:end="947:39">file_index</name></name></expr></argument>, <argument pos:start="947:42" pos:end="947:51"><expr pos:start="947:42" pos:end="947:51"><name pos:start="947:42" pos:end="947:51"><name pos:start="947:42" pos:end="947:44">ost</name><operator pos:start="947:45" pos:end="947:46">-&gt;</operator><name pos:start="947:47" pos:end="947:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="949:17" pos:end="949:33">goto <name pos:start="949:22" pos:end="949:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="953:13" pos:end="959:71"><if pos:start="953:13" pos:end="959:71">if <condition pos:start="953:16" pos:end="955:74">(<expr pos:start="953:17" pos:end="955:73"><name pos:start="953:17" pos:end="953:30"><name pos:start="953:17" pos:end="953:19">ost</name><operator pos:start="953:20" pos:end="953:21">-&gt;</operator><name pos:start="953:22" pos:end="953:24">enc</name><operator pos:start="953:25" pos:end="953:26">-&gt;</operator><name pos:start="953:27" pos:end="953:30">type</name></name> <operator pos:start="953:32" pos:end="953:33">==</operator> <name pos:start="953:35" pos:end="953:52">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="953:54" pos:end="953:55">&amp;&amp;</operator>

                <operator pos:start="955:17" pos:end="955:17">!</operator><operator pos:start="955:18" pos:end="955:18">(</operator><name pos:start="955:19" pos:end="955:40"><name pos:start="955:19" pos:end="955:21">ost</name><operator pos:start="955:22" pos:end="955:23">-&gt;</operator><name pos:start="955:24" pos:end="955:26">enc</name><operator pos:start="955:27" pos:end="955:28">-&gt;</operator><name pos:start="955:29" pos:end="955:40">capabilities</name></name> <operator pos:start="955:42" pos:end="955:42">&amp;</operator> <name pos:start="955:44" pos:end="955:72">CODEC_CAP_VARIABLE_FRAME_SIZE</name><operator pos:start="955:73" pos:end="955:73">)</operator></expr>)</condition><block type="pseudo" pos:start="957:17" pos:end="959:71"><block_content pos:start="957:17" pos:end="959:71">

                <expr_stmt pos:start="957:17" pos:end="959:71"><expr pos:start="957:17" pos:end="959:70"><call pos:start="957:17" pos:end="959:70"><name pos:start="957:17" pos:end="957:44">av_buffersink_set_frame_size</name><argument_list pos:start="957:45" pos:end="959:70">(<argument pos:start="957:46" pos:end="957:64"><expr pos:start="957:46" pos:end="957:64"><name pos:start="957:46" pos:end="957:64"><name pos:start="957:46" pos:end="957:48">ost</name><operator pos:start="957:49" pos:end="957:50">-&gt;</operator><name pos:start="957:51" pos:end="957:56">filter</name><operator pos:start="957:57" pos:end="957:58">-&gt;</operator><name pos:start="957:59" pos:end="957:64">filter</name></name></expr></argument>,

                                             <argument pos:start="959:46" pos:end="959:69"><expr pos:start="959:46" pos:end="959:69"><name pos:start="959:46" pos:end="959:69"><name pos:start="959:46" pos:end="959:48">ost</name><operator pos:start="959:49" pos:end="959:50">-&gt;</operator><name pos:start="959:51" pos:end="959:57">enc_ctx</name><operator pos:start="959:58" pos:end="959:59">-&gt;</operator><name pos:start="959:60" pos:end="959:69">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="961:13" pos:end="961:48"><expr pos:start="961:13" pos:end="961:47"><call pos:start="961:13" pos:end="961:47"><name pos:start="961:13" pos:end="961:28">assert_avoptions</name><argument_list pos:start="961:29" pos:end="961:47">(<argument pos:start="961:30" pos:end="961:46"><expr pos:start="961:30" pos:end="961:46"><name pos:start="961:30" pos:end="961:46"><name pos:start="961:30" pos:end="961:32">ost</name><operator pos:start="961:33" pos:end="961:34">-&gt;</operator><name pos:start="961:35" pos:end="961:46">encoder_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="963:13" pos:end="967:92"><if pos:start="963:13" pos:end="967:92">if <condition pos:start="963:16" pos:end="963:72">(<expr pos:start="963:17" pos:end="963:71"><name pos:start="963:17" pos:end="963:38"><name pos:start="963:17" pos:end="963:19">ost</name><operator pos:start="963:20" pos:end="963:21">-&gt;</operator><name pos:start="963:22" pos:end="963:28">enc_ctx</name><operator pos:start="963:29" pos:end="963:30">-&gt;</operator><name pos:start="963:31" pos:end="963:38">bit_rate</name></name> <operator pos:start="963:40" pos:end="963:41">&amp;&amp;</operator> <name pos:start="963:43" pos:end="963:64"><name pos:start="963:43" pos:end="963:45">ost</name><operator pos:start="963:46" pos:end="963:47">-&gt;</operator><name pos:start="963:48" pos:end="963:54">enc_ctx</name><operator pos:start="963:55" pos:end="963:56">-&gt;</operator><name pos:start="963:57" pos:end="963:64">bit_rate</name></name> <operator pos:start="963:66" pos:end="963:66">&lt;</operator> <literal type="number" pos:start="963:68" pos:end="963:71">1000</literal></expr>)</condition><block type="pseudo" pos:start="965:17" pos:end="967:92"><block_content pos:start="965:17" pos:end="967:92">

                <expr_stmt pos:start="965:17" pos:end="967:92"><expr pos:start="965:17" pos:end="967:91"><call pos:start="965:17" pos:end="967:91"><name pos:start="965:17" pos:end="965:22">av_log</name><argument_list pos:start="965:23" pos:end="967:91">(<argument pos:start="965:24" pos:end="965:27"><expr pos:start="965:24" pos:end="965:27"><name pos:start="965:24" pos:end="965:27">NULL</name></expr></argument>, <argument pos:start="965:30" pos:end="965:43"><expr pos:start="965:30" pos:end="965:43"><name pos:start="965:30" pos:end="965:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="965:46" pos:end="967:90"><expr pos:start="965:46" pos:end="967:90"><literal type="string" pos:start="965:46" pos:end="965:84">"The bitrate parameter is set too low."</literal>

                                             <literal type="string" pos:start="967:46" pos:end="967:90">" It takes bits/s as argument, not kbits/s\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="971:13" pos:end="971:69"><expr pos:start="971:13" pos:end="971:68"><name pos:start="971:13" pos:end="971:15">ret</name> <operator pos:start="971:17" pos:end="971:17">=</operator> <call pos:start="971:19" pos:end="971:68"><name pos:start="971:19" pos:end="971:38">avcodec_copy_context</name><argument_list pos:start="971:39" pos:end="971:68">(<argument pos:start="971:40" pos:end="971:53"><expr pos:start="971:40" pos:end="971:53"><name pos:start="971:40" pos:end="971:53"><name pos:start="971:40" pos:end="971:42">ost</name><operator pos:start="971:43" pos:end="971:44">-&gt;</operator><name pos:start="971:45" pos:end="971:46">st</name><operator pos:start="971:47" pos:end="971:48">-&gt;</operator><name pos:start="971:49" pos:end="971:53">codec</name></name></expr></argument>, <argument pos:start="971:56" pos:end="971:67"><expr pos:start="971:56" pos:end="971:67"><name pos:start="971:56" pos:end="971:67"><name pos:start="971:56" pos:end="971:58">ost</name><operator pos:start="971:59" pos:end="971:60">-&gt;</operator><name pos:start="971:61" pos:end="971:67">enc_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="973:13" pos:end="981:13"><if pos:start="973:13" pos:end="981:13">if <condition pos:start="973:16" pos:end="973:24">(<expr pos:start="973:17" pos:end="973:23"><name pos:start="973:17" pos:end="973:19">ret</name> <operator pos:start="973:21" pos:end="973:21">&lt;</operator> <literal type="number" pos:start="973:23" pos:end="973:23">0</literal></expr>)</condition> <block pos:start="973:26" pos:end="981:13">{<block_content pos:start="975:17" pos:end="979:32">

                <expr_stmt pos:start="975:17" pos:end="977:80"><expr pos:start="975:17" pos:end="977:79"><call pos:start="975:17" pos:end="977:79"><name pos:start="975:17" pos:end="975:22">av_log</name><argument_list pos:start="975:23" pos:end="977:79">(<argument pos:start="975:24" pos:end="975:27"><expr pos:start="975:24" pos:end="975:27"><name pos:start="975:24" pos:end="975:27">NULL</name></expr></argument>, <argument pos:start="975:30" pos:end="975:41"><expr pos:start="975:30" pos:end="975:41"><name pos:start="975:30" pos:end="975:41">AV_LOG_FATAL</name></expr></argument>,

                       <argument pos:start="977:24" pos:end="977:78"><expr pos:start="977:24" pos:end="977:78"><literal type="string" pos:start="977:24" pos:end="977:78">"Error initializing the output stream codec context.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="979:17" pos:end="979:32"><expr pos:start="979:17" pos:end="979:31"><call pos:start="979:17" pos:end="979:31"><name pos:start="979:17" pos:end="979:28">exit_program</name><argument_list pos:start="979:29" pos:end="979:31">(<argument pos:start="979:30" pos:end="979:30"><expr pos:start="979:30" pos:end="979:30"><literal type="number" pos:start="979:30" pos:end="979:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="line" pos:start="985:13" pos:end="985:58">// copy timebase while removing common factors</comment>

            <expr_stmt pos:start="987:13" pos:end="987:87"><expr pos:start="987:13" pos:end="987:86"><name pos:start="987:13" pos:end="987:30"><name pos:start="987:13" pos:end="987:15">ost</name><operator pos:start="987:16" pos:end="987:17">-&gt;</operator><name pos:start="987:18" pos:end="987:19">st</name><operator pos:start="987:20" pos:end="987:21">-&gt;</operator><name pos:start="987:22" pos:end="987:30">time_base</name></name> <operator pos:start="987:32" pos:end="987:32">=</operator> <macro pos:start="987:34" pos:end="987:86"><name pos:start="987:34" pos:end="987:41">av_add_q</name><argument_list pos:start="987:42" pos:end="987:86">(<argument pos:start="987:43" pos:end="987:65">ost-&gt;enc_ctx-&gt;time_base</argument>, <argument pos:start="987:68" pos:end="987:81">(AVRational){<literal type="number" pos:start="987:81" pos:end="987:81">0</literal></argument>, <argument pos:start="987:84" pos:end="987:85"><literal type="number" pos:start="987:84" pos:end="987:84">1</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt>

            <expr_stmt pos:start="989:13" pos:end="989:55"><expr pos:start="989:13" pos:end="989:54"><name pos:start="989:13" pos:end="989:33"><name pos:start="989:13" pos:end="989:15">ost</name><operator pos:start="989:16" pos:end="989:17">-&gt;</operator><name pos:start="989:18" pos:end="989:19">st</name><operator pos:start="989:20" pos:end="989:21">-&gt;</operator><name pos:start="989:22" pos:end="989:26">codec</name><operator pos:start="989:27" pos:end="989:28">-&gt;</operator><name pos:start="989:29" pos:end="989:33">codec</name></name><operator pos:start="989:34" pos:end="989:34">=</operator> <name pos:start="989:36" pos:end="989:54"><name pos:start="989:36" pos:end="989:38">ost</name><operator pos:start="989:39" pos:end="989:40">-&gt;</operator><name pos:start="989:41" pos:end="989:47">enc_ctx</name><operator pos:start="989:48" pos:end="989:49">-&gt;</operator><name pos:start="989:50" pos:end="989:54">codec</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="991:11" pos:end="1009:9">else <block pos:start="991:16" pos:end="1009:9">{<block_content pos:start="993:13" pos:end="1007:89">

            <expr_stmt pos:start="993:13" pos:end="993:68"><expr pos:start="993:13" pos:end="993:67"><name pos:start="993:13" pos:end="993:15">ret</name> <operator pos:start="993:17" pos:end="993:17">=</operator> <call pos:start="993:19" pos:end="993:67"><name pos:start="993:19" pos:end="993:33">av_opt_set_dict</name><argument_list pos:start="993:34" pos:end="993:67">(<argument pos:start="993:35" pos:end="993:46"><expr pos:start="993:35" pos:end="993:46"><name pos:start="993:35" pos:end="993:46"><name pos:start="993:35" pos:end="993:37">ost</name><operator pos:start="993:38" pos:end="993:39">-&gt;</operator><name pos:start="993:40" pos:end="993:46">enc_ctx</name></name></expr></argument>, <argument pos:start="993:49" pos:end="993:66"><expr pos:start="993:49" pos:end="993:66"><operator pos:start="993:49" pos:end="993:49">&amp;</operator><name pos:start="993:50" pos:end="993:66"><name pos:start="993:50" pos:end="993:52">ost</name><operator pos:start="993:53" pos:end="993:54">-&gt;</operator><name pos:start="993:55" pos:end="993:66">encoder_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="995:13" pos:end="1003:13"><if pos:start="995:13" pos:end="1003:13">if <condition pos:start="995:16" pos:end="995:24">(<expr pos:start="995:17" pos:end="995:23"><name pos:start="995:17" pos:end="995:19">ret</name> <operator pos:start="995:21" pos:end="995:21">&lt;</operator> <literal type="number" pos:start="995:23" pos:end="995:23">0</literal></expr>)</condition> <block pos:start="995:26" pos:end="1003:13">{<block_content pos:start="997:17" pos:end="1001:27">

                <expr_stmt pos:start="997:17" pos:end="999:65"><expr pos:start="997:17" pos:end="999:64"><call pos:start="997:17" pos:end="999:64"><name pos:start="997:17" pos:end="997:22">av_log</name><argument_list pos:start="997:23" pos:end="999:64">(<argument pos:start="997:24" pos:end="997:27"><expr pos:start="997:24" pos:end="997:27"><name pos:start="997:24" pos:end="997:27">NULL</name></expr></argument>, <argument pos:start="997:30" pos:end="997:41"><expr pos:start="997:30" pos:end="997:41"><name pos:start="997:30" pos:end="997:41">AV_LOG_FATAL</name></expr></argument>,

                    <argument pos:start="999:21" pos:end="999:63"><expr pos:start="999:21" pos:end="999:63"><literal type="string" pos:start="999:21" pos:end="999:63">"Error setting up codec context options.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1001:17" pos:end="1001:27">return <expr pos:start="1001:24" pos:end="1001:26"><name pos:start="1001:24" pos:end="1001:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="1005:13" pos:end="1005:58">// copy timebase while removing common factors</comment>

            <expr_stmt pos:start="1007:13" pos:end="1007:89"><expr pos:start="1007:13" pos:end="1007:88"><name pos:start="1007:13" pos:end="1007:30"><name pos:start="1007:13" pos:end="1007:15">ost</name><operator pos:start="1007:16" pos:end="1007:17">-&gt;</operator><name pos:start="1007:18" pos:end="1007:19">st</name><operator pos:start="1007:20" pos:end="1007:21">-&gt;</operator><name pos:start="1007:22" pos:end="1007:30">time_base</name></name> <operator pos:start="1007:32" pos:end="1007:32">=</operator> <macro pos:start="1007:34" pos:end="1007:88"><name pos:start="1007:34" pos:end="1007:41">av_add_q</name><argument_list pos:start="1007:42" pos:end="1007:88">(<argument pos:start="1007:43" pos:end="1007:67">ost-&gt;st-&gt;codec-&gt;time_base</argument>, <argument pos:start="1007:70" pos:end="1007:83">(AVRational){<literal type="number" pos:start="1007:83" pos:end="1007:83">0</literal></argument>, <argument pos:start="1007:86" pos:end="1007:87"><literal type="number" pos:start="1007:86" pos:end="1007:86">1</literal>}</argument>)</argument_list></macro></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1015:5" pos:end="1015:28">/* init input streams */</comment>

    <for pos:start="1017:5" pos:end="1031:9">for <control pos:start="1017:9" pos:end="1017:42">(<init pos:start="1017:10" pos:end="1017:15"><expr pos:start="1017:10" pos:end="1017:14"><name pos:start="1017:10" pos:end="1017:10">i</name> <operator pos:start="1017:12" pos:end="1017:12">=</operator> <literal type="number" pos:start="1017:14" pos:end="1017:14">0</literal></expr>;</init> <condition pos:start="1017:17" pos:end="1017:37"><expr pos:start="1017:17" pos:end="1017:36"><name pos:start="1017:17" pos:end="1017:17">i</name> <operator pos:start="1017:19" pos:end="1017:19">&lt;</operator> <name pos:start="1017:21" pos:end="1017:36">nb_input_streams</name></expr>;</condition> <incr pos:start="1017:39" pos:end="1017:41"><expr pos:start="1017:39" pos:end="1017:41"><name pos:start="1017:39" pos:end="1017:39">i</name><operator pos:start="1017:40" pos:end="1017:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1019:9" pos:end="1031:9"><block_content pos:start="1019:9" pos:end="1031:9">

        <if_stmt pos:start="1019:9" pos:end="1031:9"><if pos:start="1019:9" pos:end="1031:9">if <condition pos:start="1019:12" pos:end="1019:67">(<expr pos:start="1019:13" pos:end="1019:66"><operator pos:start="1019:13" pos:end="1019:13">(</operator><name pos:start="1019:14" pos:end="1019:16">ret</name> <operator pos:start="1019:18" pos:end="1019:18">=</operator> <call pos:start="1019:20" pos:end="1019:61"><name pos:start="1019:20" pos:end="1019:36">init_input_stream</name><argument_list pos:start="1019:37" pos:end="1019:61">(<argument pos:start="1019:38" pos:end="1019:38"><expr pos:start="1019:38" pos:end="1019:38"><name pos:start="1019:38" pos:end="1019:38">i</name></expr></argument>, <argument pos:start="1019:41" pos:end="1019:45"><expr pos:start="1019:41" pos:end="1019:45"><name pos:start="1019:41" pos:end="1019:45">error</name></expr></argument>, <argument pos:start="1019:48" pos:end="1019:60"><expr pos:start="1019:48" pos:end="1019:60"><sizeof pos:start="1019:48" pos:end="1019:60">sizeof<argument_list pos:start="1019:54" pos:end="1019:60">(<argument pos:start="1019:55" pos:end="1019:59"><expr pos:start="1019:55" pos:end="1019:59"><name pos:start="1019:55" pos:end="1019:59">error</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="1019:62" pos:end="1019:62">)</operator> <operator pos:start="1019:64" pos:end="1019:64">&lt;</operator> <literal type="number" pos:start="1019:66" pos:end="1019:66">0</literal></expr>)</condition> <block pos:start="1019:69" pos:end="1031:9">{<block_content pos:start="1021:13" pos:end="1029:29">

            <for pos:start="1021:13" pos:end="1027:13">for <control pos:start="1021:17" pos:end="1021:51">(<init pos:start="1021:18" pos:end="1021:23"><expr pos:start="1021:18" pos:end="1021:22"><name pos:start="1021:18" pos:end="1021:18">i</name> <operator pos:start="1021:20" pos:end="1021:20">=</operator> <literal type="number" pos:start="1021:22" pos:end="1021:22">0</literal></expr>;</init> <condition pos:start="1021:25" pos:end="1021:46"><expr pos:start="1021:25" pos:end="1021:45"><name pos:start="1021:25" pos:end="1021:25">i</name> <operator pos:start="1021:27" pos:end="1021:27">&lt;</operator> <name pos:start="1021:29" pos:end="1021:45">nb_output_streams</name></expr>;</condition> <incr pos:start="1021:48" pos:end="1021:50"><expr pos:start="1021:48" pos:end="1021:50"><name pos:start="1021:48" pos:end="1021:48">i</name><operator pos:start="1021:49" pos:end="1021:50">++</operator></expr></incr>)</control> <block pos:start="1021:53" pos:end="1027:13">{<block_content pos:start="1023:17" pos:end="1025:44">

                <expr_stmt pos:start="1023:17" pos:end="1023:40"><expr pos:start="1023:17" pos:end="1023:39"><name pos:start="1023:17" pos:end="1023:19">ost</name> <operator pos:start="1023:21" pos:end="1023:21">=</operator> <name pos:start="1023:23" pos:end="1023:39"><name pos:start="1023:23" pos:end="1023:36">output_streams</name><index pos:start="1023:37" pos:end="1023:39">[<expr pos:start="1023:38" pos:end="1023:38"><name pos:start="1023:38" pos:end="1023:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1025:17" pos:end="1025:44"><expr pos:start="1025:17" pos:end="1025:43"><call pos:start="1025:17" pos:end="1025:43"><name pos:start="1025:17" pos:end="1025:29">avcodec_close</name><argument_list pos:start="1025:30" pos:end="1025:43">(<argument pos:start="1025:31" pos:end="1025:42"><expr pos:start="1025:31" pos:end="1025:42"><name pos:start="1025:31" pos:end="1025:42"><name pos:start="1025:31" pos:end="1025:33">ost</name><operator pos:start="1025:34" pos:end="1025:35">-&gt;</operator><name pos:start="1025:36" pos:end="1025:42">enc_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <goto pos:start="1029:13" pos:end="1029:29">goto <name pos:start="1029:18" pos:end="1029:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <comment type="block" pos:start="1035:5" pos:end="1035:33">/* discard unused programs */</comment>

    <for pos:start="1037:5" pos:end="1063:5">for <control pos:start="1037:9" pos:end="1037:40">(<init pos:start="1037:10" pos:end="1037:15"><expr pos:start="1037:10" pos:end="1037:14"><name pos:start="1037:10" pos:end="1037:10">i</name> <operator pos:start="1037:12" pos:end="1037:12">=</operator> <literal type="number" pos:start="1037:14" pos:end="1037:14">0</literal></expr>;</init> <condition pos:start="1037:17" pos:end="1037:35"><expr pos:start="1037:17" pos:end="1037:34"><name pos:start="1037:17" pos:end="1037:17">i</name> <operator pos:start="1037:19" pos:end="1037:19">&lt;</operator> <name pos:start="1037:21" pos:end="1037:34">nb_input_files</name></expr>;</condition> <incr pos:start="1037:37" pos:end="1037:39"><expr pos:start="1037:37" pos:end="1037:39"><name pos:start="1037:37" pos:end="1037:37">i</name><operator pos:start="1037:38" pos:end="1037:39">++</operator></expr></incr>)</control> <block pos:start="1037:42" pos:end="1063:5">{<block_content pos:start="1039:9" pos:end="1061:9">

        <decl_stmt pos:start="1039:9" pos:end="1039:42"><decl pos:start="1039:9" pos:end="1039:41"><type pos:start="1039:9" pos:end="1039:19"><name pos:start="1039:9" pos:end="1039:17">InputFile</name> <modifier pos:start="1039:19" pos:end="1039:19">*</modifier></type><name pos:start="1039:20" pos:end="1039:24">ifile</name> <init pos:start="1039:26" pos:end="1039:41">= <expr pos:start="1039:28" pos:end="1039:41"><name pos:start="1039:28" pos:end="1039:41"><name pos:start="1039:28" pos:end="1039:38">input_files</name><index pos:start="1039:39" pos:end="1039:41">[<expr pos:start="1039:40" pos:end="1039:40"><name pos:start="1039:40" pos:end="1039:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="1041:9" pos:end="1061:9">for <control pos:start="1041:13" pos:end="1041:53">(<init pos:start="1041:14" pos:end="1041:19"><expr pos:start="1041:14" pos:end="1041:18"><name pos:start="1041:14" pos:end="1041:14">j</name> <operator pos:start="1041:16" pos:end="1041:16">=</operator> <literal type="number" pos:start="1041:18" pos:end="1041:18">0</literal></expr>;</init> <condition pos:start="1041:21" pos:end="1041:48"><expr pos:start="1041:21" pos:end="1041:47"><name pos:start="1041:21" pos:end="1041:21">j</name> <operator pos:start="1041:23" pos:end="1041:23">&lt;</operator> <name pos:start="1041:25" pos:end="1041:47"><name pos:start="1041:25" pos:end="1041:29">ifile</name><operator pos:start="1041:30" pos:end="1041:31">-&gt;</operator><name pos:start="1041:32" pos:end="1041:34">ctx</name><operator pos:start="1041:35" pos:end="1041:36">-&gt;</operator><name pos:start="1041:37" pos:end="1041:47">nb_programs</name></name></expr>;</condition> <incr pos:start="1041:50" pos:end="1041:52"><expr pos:start="1041:50" pos:end="1041:52"><name pos:start="1041:50" pos:end="1041:50">j</name><operator pos:start="1041:51" pos:end="1041:52">++</operator></expr></incr>)</control> <block pos:start="1041:55" pos:end="1061:9">{<block_content pos:start="1043:13" pos:end="1059:33">

            <decl_stmt pos:start="1043:13" pos:end="1043:51"><decl pos:start="1043:13" pos:end="1043:50"><type pos:start="1043:13" pos:end="1043:23"><name pos:start="1043:13" pos:end="1043:21">AVProgram</name> <modifier pos:start="1043:23" pos:end="1043:23">*</modifier></type><name pos:start="1043:24" pos:end="1043:24">p</name> <init pos:start="1043:26" pos:end="1043:50">= <expr pos:start="1043:28" pos:end="1043:50"><name pos:start="1043:28" pos:end="1043:50"><name pos:start="1043:28" pos:end="1043:32">ifile</name><operator pos:start="1043:33" pos:end="1043:34">-&gt;</operator><name pos:start="1043:35" pos:end="1043:37">ctx</name><operator pos:start="1043:38" pos:end="1043:39">-&gt;</operator><name pos:start="1043:40" pos:end="1043:47">programs</name><index pos:start="1043:48" pos:end="1043:50">[<expr pos:start="1043:49" pos:end="1043:49"><name pos:start="1043:49" pos:end="1043:49">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1045:13" pos:end="1045:41"><decl pos:start="1045:13" pos:end="1045:40"><type pos:start="1045:13" pos:end="1045:15"><name pos:start="1045:13" pos:end="1045:15">int</name></type> <name pos:start="1045:17" pos:end="1045:23">discard</name>  <init pos:start="1045:26" pos:end="1045:40">= <expr pos:start="1045:28" pos:end="1045:40"><name pos:start="1045:28" pos:end="1045:40">AVDISCARD_ALL</name></expr></init></decl>;</decl_stmt>



            <for pos:start="1049:13" pos:end="1057:17">for <control pos:start="1049:17" pos:end="1049:54">(<init pos:start="1049:18" pos:end="1049:23"><expr pos:start="1049:18" pos:end="1049:22"><name pos:start="1049:18" pos:end="1049:18">k</name> <operator pos:start="1049:20" pos:end="1049:20">=</operator> <literal type="number" pos:start="1049:22" pos:end="1049:22">0</literal></expr>;</init> <condition pos:start="1049:25" pos:end="1049:49"><expr pos:start="1049:25" pos:end="1049:48"><name pos:start="1049:25" pos:end="1049:25">k</name> <operator pos:start="1049:27" pos:end="1049:27">&lt;</operator> <name pos:start="1049:29" pos:end="1049:48"><name pos:start="1049:29" pos:end="1049:29">p</name><operator pos:start="1049:30" pos:end="1049:31">-&gt;</operator><name pos:start="1049:32" pos:end="1049:48">nb_stream_indexes</name></name></expr>;</condition> <incr pos:start="1049:51" pos:end="1049:53"><expr pos:start="1049:51" pos:end="1049:53"><name pos:start="1049:51" pos:end="1049:51">k</name><operator pos:start="1049:52" pos:end="1049:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1051:17" pos:end="1057:17"><block_content pos:start="1051:17" pos:end="1057:17">

                <if_stmt pos:start="1051:17" pos:end="1057:17"><if pos:start="1051:17" pos:end="1057:17">if <condition pos:start="1051:20" pos:end="1051:83">(<expr pos:start="1051:21" pos:end="1051:82"><operator pos:start="1051:21" pos:end="1051:21">!</operator><name pos:start="1051:22" pos:end="1051:73"><name pos:start="1051:22" pos:end="1051:34">input_streams</name><index pos:start="1051:35" pos:end="1051:73">[<expr pos:start="1051:36" pos:end="1051:72"><name pos:start="1051:36" pos:end="1051:51"><name pos:start="1051:36" pos:end="1051:40">ifile</name><operator pos:start="1051:41" pos:end="1051:42">-&gt;</operator><name pos:start="1051:43" pos:end="1051:51">ist_index</name></name> <operator pos:start="1051:53" pos:end="1051:53">+</operator> <name pos:start="1051:55" pos:end="1051:72"><name pos:start="1051:55" pos:end="1051:55">p</name><operator pos:start="1051:56" pos:end="1051:57">-&gt;</operator><name pos:start="1051:58" pos:end="1051:69">stream_index</name><index pos:start="1051:70" pos:end="1051:72">[<expr pos:start="1051:71" pos:end="1051:71"><name pos:start="1051:71" pos:end="1051:71">k</name></expr>]</index></name></expr>]</index></name><operator pos:start="1051:74" pos:end="1051:75">-&gt;</operator><name pos:start="1051:76" pos:end="1051:82">discard</name></expr>)</condition> <block pos:start="1051:85" pos:end="1057:17">{<block_content pos:start="1053:21" pos:end="1055:26">

                    <expr_stmt pos:start="1053:21" pos:end="1053:48"><expr pos:start="1053:21" pos:end="1053:47"><name pos:start="1053:21" pos:end="1053:27">discard</name> <operator pos:start="1053:29" pos:end="1053:29">=</operator> <name pos:start="1053:31" pos:end="1053:47">AVDISCARD_DEFAULT</name></expr>;</expr_stmt>

                    <break pos:start="1055:21" pos:end="1055:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for>

            <expr_stmt pos:start="1059:13" pos:end="1059:33"><expr pos:start="1059:13" pos:end="1059:32"><name pos:start="1059:13" pos:end="1059:22"><name pos:start="1059:13" pos:end="1059:13">p</name><operator pos:start="1059:14" pos:end="1059:15">-&gt;</operator><name pos:start="1059:16" pos:end="1059:22">discard</name></name> <operator pos:start="1059:24" pos:end="1059:24">=</operator> <name pos:start="1059:26" pos:end="1059:32">discard</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="1067:5" pos:end="1067:43">/* open files and write file headers */</comment>

    <for pos:start="1069:5" pos:end="1099:5">for <control pos:start="1069:9" pos:end="1069:41">(<init pos:start="1069:10" pos:end="1069:15"><expr pos:start="1069:10" pos:end="1069:14"><name pos:start="1069:10" pos:end="1069:10">i</name> <operator pos:start="1069:12" pos:end="1069:12">=</operator> <literal type="number" pos:start="1069:14" pos:end="1069:14">0</literal></expr>;</init> <condition pos:start="1069:17" pos:end="1069:36"><expr pos:start="1069:17" pos:end="1069:35"><name pos:start="1069:17" pos:end="1069:17">i</name> <operator pos:start="1069:19" pos:end="1069:19">&lt;</operator> <name pos:start="1069:21" pos:end="1069:35">nb_output_files</name></expr>;</condition> <incr pos:start="1069:38" pos:end="1069:40"><expr pos:start="1069:38" pos:end="1069:40"><name pos:start="1069:38" pos:end="1069:38">i</name><operator pos:start="1069:39" pos:end="1069:40">++</operator></expr></incr>)</control> <block pos:start="1069:43" pos:end="1099:5">{<block_content pos:start="1071:9" pos:end="1097:9">

        <expr_stmt pos:start="1071:9" pos:end="1071:34"><expr pos:start="1071:9" pos:end="1071:33"><name pos:start="1071:9" pos:end="1071:10">oc</name> <operator pos:start="1071:12" pos:end="1071:12">=</operator> <name pos:start="1071:14" pos:end="1071:28"><name pos:start="1071:14" pos:end="1071:25">output_files</name><index pos:start="1071:26" pos:end="1071:28">[<expr pos:start="1071:27" pos:end="1071:27"><name pos:start="1071:27" pos:end="1071:27">i</name></expr>]</index></name><operator pos:start="1071:29" pos:end="1071:30">-&gt;</operator><name pos:start="1071:31" pos:end="1071:33">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="1073:9" pos:end="1073:40"><expr pos:start="1073:9" pos:end="1073:39"><name pos:start="1073:9" pos:end="1073:30"><name pos:start="1073:9" pos:end="1073:10">oc</name><operator pos:start="1073:11" pos:end="1073:12">-&gt;</operator><name pos:start="1073:13" pos:end="1073:30">interrupt_callback</name></name> <operator pos:start="1073:32" pos:end="1073:32">=</operator> <name pos:start="1073:34" pos:end="1073:39">int_cb</name></expr>;</expr_stmt>

        <if_stmt pos:start="1075:9" pos:end="1089:9"><if pos:start="1075:9" pos:end="1089:9">if <condition pos:start="1075:12" pos:end="1075:74">(<expr pos:start="1075:13" pos:end="1075:73"><operator pos:start="1075:13" pos:end="1075:13">(</operator><name pos:start="1075:14" pos:end="1075:16">ret</name> <operator pos:start="1075:18" pos:end="1075:18">=</operator> <call pos:start="1075:20" pos:end="1075:68"><name pos:start="1075:20" pos:end="1075:40">avformat_write_header</name><argument_list pos:start="1075:41" pos:end="1075:68">(<argument pos:start="1075:42" pos:end="1075:43"><expr pos:start="1075:42" pos:end="1075:43"><name pos:start="1075:42" pos:end="1075:43">oc</name></expr></argument>, <argument pos:start="1075:46" pos:end="1075:67"><expr pos:start="1075:46" pos:end="1075:67"><operator pos:start="1075:46" pos:end="1075:46">&amp;</operator><name pos:start="1075:47" pos:end="1075:61"><name pos:start="1075:47" pos:end="1075:58">output_files</name><index pos:start="1075:59" pos:end="1075:61">[<expr pos:start="1075:60" pos:end="1075:60"><name pos:start="1075:60" pos:end="1075:60">i</name></expr>]</index></name><operator pos:start="1075:62" pos:end="1075:63">-&gt;</operator><name pos:start="1075:64" pos:end="1075:67">opts</name></expr></argument>)</argument_list></call><operator pos:start="1075:69" pos:end="1075:69">)</operator> <operator pos:start="1075:71" pos:end="1075:71">&lt;</operator> <literal type="number" pos:start="1075:73" pos:end="1075:73">0</literal></expr>)</condition> <block pos:start="1075:76" pos:end="1089:9">{<block_content pos:start="1077:13" pos:end="1087:29">

            <expr_stmt pos:start="1077:13" pos:end="1083:41"><expr pos:start="1077:13" pos:end="1083:40"><call pos:start="1077:13" pos:end="1083:40"><name pos:start="1077:13" pos:end="1077:20">snprintf</name><argument_list pos:start="1077:21" pos:end="1083:40">(<argument pos:start="1077:22" pos:end="1077:26"><expr pos:start="1077:22" pos:end="1077:26"><name pos:start="1077:22" pos:end="1077:26">error</name></expr></argument>, <argument pos:start="1077:29" pos:end="1077:41"><expr pos:start="1077:29" pos:end="1077:41"><sizeof pos:start="1077:29" pos:end="1077:41">sizeof<argument_list pos:start="1077:35" pos:end="1077:41">(<argument pos:start="1077:36" pos:end="1077:40"><expr pos:start="1077:36" pos:end="1077:40"><name pos:start="1077:36" pos:end="1077:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="1079:22" pos:end="1081:57"><expr pos:start="1079:22" pos:end="1081:57"><literal type="string" pos:start="1079:22" pos:end="1079:66">"Could not write header for output file #%d "</literal>

                     <literal type="string" pos:start="1081:22" pos:end="1081:57">"(incorrect codec parameters ?): %s"</literal></expr></argument>,

                     <argument pos:start="1083:22" pos:end="1083:22"><expr pos:start="1083:22" pos:end="1083:22"><name pos:start="1083:22" pos:end="1083:22">i</name></expr></argument>, <argument pos:start="1083:25" pos:end="1083:39"><expr pos:start="1083:25" pos:end="1083:39"><call pos:start="1083:25" pos:end="1083:39"><name pos:start="1083:25" pos:end="1083:34">av_err2str</name><argument_list pos:start="1083:35" pos:end="1083:39">(<argument pos:start="1083:36" pos:end="1083:38"><expr pos:start="1083:36" pos:end="1083:38"><name pos:start="1083:36" pos:end="1083:38">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1085:13" pos:end="1085:34"><expr pos:start="1085:13" pos:end="1085:33"><name pos:start="1085:13" pos:end="1085:15">ret</name> <operator pos:start="1085:17" pos:end="1085:17">=</operator> <call pos:start="1085:19" pos:end="1085:33"><name pos:start="1085:19" pos:end="1085:25">AVERROR</name><argument_list pos:start="1085:26" pos:end="1085:33">(<argument pos:start="1085:27" pos:end="1085:32"><expr pos:start="1085:27" pos:end="1085:32"><name pos:start="1085:27" pos:end="1085:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1087:13" pos:end="1087:29">goto <name pos:start="1087:18" pos:end="1087:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="1091:1" pos:end="1091:51">//         assert_avoptions(output_files[i]-&gt;opts);</comment>

        <if_stmt pos:start="1093:9" pos:end="1097:9"><if pos:start="1093:9" pos:end="1097:9">if <condition pos:start="1093:12" pos:end="1093:45">(<expr pos:start="1093:13" pos:end="1093:44"><call pos:start="1093:13" pos:end="1093:44"><name pos:start="1093:13" pos:end="1093:18">strcmp</name><argument_list pos:start="1093:19" pos:end="1093:44">(<argument pos:start="1093:20" pos:end="1093:36"><expr pos:start="1093:20" pos:end="1093:36"><name pos:start="1093:20" pos:end="1093:36"><name pos:start="1093:20" pos:end="1093:21">oc</name><operator pos:start="1093:22" pos:end="1093:23">-&gt;</operator><name pos:start="1093:24" pos:end="1093:30">oformat</name><operator pos:start="1093:31" pos:end="1093:32">-&gt;</operator><name pos:start="1093:33" pos:end="1093:36">name</name></name></expr></argument>, <argument pos:start="1093:39" pos:end="1093:43"><expr pos:start="1093:39" pos:end="1093:43"><literal type="string" pos:start="1093:39" pos:end="1093:43">"rtp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1093:47" pos:end="1097:9">{<block_content pos:start="1095:13" pos:end="1095:25">

            <expr_stmt pos:start="1095:13" pos:end="1095:25"><expr pos:start="1095:13" pos:end="1095:24"><name pos:start="1095:13" pos:end="1095:20">want_sdp</name> <operator pos:start="1095:22" pos:end="1095:22">=</operator> <literal type="number" pos:start="1095:24" pos:end="1095:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



 <label pos:start="1103:2" pos:end="1103:13"><name pos:start="1103:2" pos:end="1103:12">dump_format</name>:</label>

    <comment type="block" pos:start="1105:5" pos:end="1107:24">/* dump the file output parameters - cannot be done before in case

       of stream copy */</comment>

    <for pos:start="1109:5" pos:end="1113:5">for <control pos:start="1109:9" pos:end="1109:41">(<init pos:start="1109:10" pos:end="1109:15"><expr pos:start="1109:10" pos:end="1109:14"><name pos:start="1109:10" pos:end="1109:10">i</name> <operator pos:start="1109:12" pos:end="1109:12">=</operator> <literal type="number" pos:start="1109:14" pos:end="1109:14">0</literal></expr>;</init> <condition pos:start="1109:17" pos:end="1109:36"><expr pos:start="1109:17" pos:end="1109:35"><name pos:start="1109:17" pos:end="1109:17">i</name> <operator pos:start="1109:19" pos:end="1109:19">&lt;</operator> <name pos:start="1109:21" pos:end="1109:35">nb_output_files</name></expr>;</condition> <incr pos:start="1109:38" pos:end="1109:40"><expr pos:start="1109:38" pos:end="1109:40"><name pos:start="1109:38" pos:end="1109:38">i</name><operator pos:start="1109:39" pos:end="1109:40">++</operator></expr></incr>)</control> <block pos:start="1109:43" pos:end="1113:5">{<block_content pos:start="1111:9" pos:end="1111:83">

        <expr_stmt pos:start="1111:9" pos:end="1111:83"><expr pos:start="1111:9" pos:end="1111:82"><call pos:start="1111:9" pos:end="1111:82"><name pos:start="1111:9" pos:end="1111:22">av_dump_format</name><argument_list pos:start="1111:23" pos:end="1111:82">(<argument pos:start="1111:24" pos:end="1111:43"><expr pos:start="1111:24" pos:end="1111:43"><name pos:start="1111:24" pos:end="1111:38"><name pos:start="1111:24" pos:end="1111:35">output_files</name><index pos:start="1111:36" pos:end="1111:38">[<expr pos:start="1111:37" pos:end="1111:37"><name pos:start="1111:37" pos:end="1111:37">i</name></expr>]</index></name><operator pos:start="1111:39" pos:end="1111:40">-&gt;</operator><name pos:start="1111:41" pos:end="1111:43">ctx</name></expr></argument>, <argument pos:start="1111:46" pos:end="1111:46"><expr pos:start="1111:46" pos:end="1111:46"><name pos:start="1111:46" pos:end="1111:46">i</name></expr></argument>, <argument pos:start="1111:49" pos:end="1111:78"><expr pos:start="1111:49" pos:end="1111:78"><name pos:start="1111:49" pos:end="1111:63"><name pos:start="1111:49" pos:end="1111:60">output_files</name><index pos:start="1111:61" pos:end="1111:63">[<expr pos:start="1111:62" pos:end="1111:62"><name pos:start="1111:62" pos:end="1111:62">i</name></expr>]</index></name><operator pos:start="1111:64" pos:end="1111:65">-&gt;</operator><name pos:start="1111:66" pos:end="1111:78"><name pos:start="1111:66" pos:end="1111:68">ctx</name><operator pos:start="1111:69" pos:end="1111:70">-&gt;</operator><name pos:start="1111:71" pos:end="1111:78">filename</name></name></expr></argument>, <argument pos:start="1111:81" pos:end="1111:81"><expr pos:start="1111:81" pos:end="1111:81"><literal type="number" pos:start="1111:81" pos:end="1111:81">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1117:5" pos:end="1117:33">/* dump the stream mapping */</comment>

    <expr_stmt pos:start="1119:5" pos:end="1119:51"><expr pos:start="1119:5" pos:end="1119:50"><call pos:start="1119:5" pos:end="1119:50"><name pos:start="1119:5" pos:end="1119:10">av_log</name><argument_list pos:start="1119:11" pos:end="1119:50">(<argument pos:start="1119:12" pos:end="1119:15"><expr pos:start="1119:12" pos:end="1119:15"><name pos:start="1119:12" pos:end="1119:15">NULL</name></expr></argument>, <argument pos:start="1119:18" pos:end="1119:28"><expr pos:start="1119:18" pos:end="1119:28"><name pos:start="1119:18" pos:end="1119:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1119:31" pos:end="1119:49"><expr pos:start="1119:31" pos:end="1119:49"><literal type="string" pos:start="1119:31" pos:end="1119:49">"Stream mapping:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="1121:5" pos:end="1147:5">for <control pos:start="1121:9" pos:end="1121:42">(<init pos:start="1121:10" pos:end="1121:15"><expr pos:start="1121:10" pos:end="1121:14"><name pos:start="1121:10" pos:end="1121:10">i</name> <operator pos:start="1121:12" pos:end="1121:12">=</operator> <literal type="number" pos:start="1121:14" pos:end="1121:14">0</literal></expr>;</init> <condition pos:start="1121:17" pos:end="1121:37"><expr pos:start="1121:17" pos:end="1121:36"><name pos:start="1121:17" pos:end="1121:17">i</name> <operator pos:start="1121:19" pos:end="1121:19">&lt;</operator> <name pos:start="1121:21" pos:end="1121:36">nb_input_streams</name></expr>;</condition> <incr pos:start="1121:39" pos:end="1121:41"><expr pos:start="1121:39" pos:end="1121:41"><name pos:start="1121:39" pos:end="1121:39">i</name><operator pos:start="1121:40" pos:end="1121:41">++</operator></expr></incr>)</control> <block pos:start="1121:44" pos:end="1147:5">{<block_content pos:start="1123:9" pos:end="1145:9">

        <expr_stmt pos:start="1123:9" pos:end="1123:31"><expr pos:start="1123:9" pos:end="1123:30"><name pos:start="1123:9" pos:end="1123:11">ist</name> <operator pos:start="1123:13" pos:end="1123:13">=</operator> <name pos:start="1123:15" pos:end="1123:30"><name pos:start="1123:15" pos:end="1123:27">input_streams</name><index pos:start="1123:28" pos:end="1123:30">[<expr pos:start="1123:29" pos:end="1123:29"><name pos:start="1123:29" pos:end="1123:29">i</name></expr>]</index></name></expr>;</expr_stmt>



        <for pos:start="1127:9" pos:end="1145:9">for <control pos:start="1127:13" pos:end="1127:45">(<init pos:start="1127:14" pos:end="1127:19"><expr pos:start="1127:14" pos:end="1127:18"><name pos:start="1127:14" pos:end="1127:14">j</name> <operator pos:start="1127:16" pos:end="1127:16">=</operator> <literal type="number" pos:start="1127:18" pos:end="1127:18">0</literal></expr>;</init> <condition pos:start="1127:21" pos:end="1127:40"><expr pos:start="1127:21" pos:end="1127:39"><name pos:start="1127:21" pos:end="1127:21">j</name> <operator pos:start="1127:23" pos:end="1127:23">&lt;</operator> <name pos:start="1127:25" pos:end="1127:39"><name pos:start="1127:25" pos:end="1127:27">ist</name><operator pos:start="1127:28" pos:end="1127:29">-&gt;</operator><name pos:start="1127:30" pos:end="1127:39">nb_filters</name></name></expr>;</condition> <incr pos:start="1127:42" pos:end="1127:44"><expr pos:start="1127:42" pos:end="1127:44"><name pos:start="1127:42" pos:end="1127:42">j</name><operator pos:start="1127:43" pos:end="1127:44">++</operator></expr></incr>)</control> <block pos:start="1127:47" pos:end="1145:9">{<block_content pos:start="1129:13" pos:end="1143:13">

            <if_stmt pos:start="1129:13" pos:end="1143:13"><if pos:start="1129:13" pos:end="1143:13">if <condition pos:start="1129:16" pos:end="1129:51">(<expr pos:start="1129:17" pos:end="1129:50"><name pos:start="1129:17" pos:end="1129:31"><name pos:start="1129:17" pos:end="1129:19">ist</name><operator pos:start="1129:20" pos:end="1129:21">-&gt;</operator><name pos:start="1129:22" pos:end="1129:28">filters</name><index pos:start="1129:29" pos:end="1129:31">[<expr pos:start="1129:30" pos:end="1129:30"><name pos:start="1129:30" pos:end="1129:30">j</name></expr>]</index></name><operator pos:start="1129:32" pos:end="1129:33">-&gt;</operator><name pos:start="1129:34" pos:end="1129:50"><name pos:start="1129:34" pos:end="1129:38">graph</name><operator pos:start="1129:39" pos:end="1129:40">-&gt;</operator><name pos:start="1129:41" pos:end="1129:50">graph_desc</name></name></expr>)</condition> <block pos:start="1129:53" pos:end="1143:13">{<block_content pos:start="1131:17" pos:end="1141:48">

                <expr_stmt pos:start="1131:17" pos:end="1135:46"><expr pos:start="1131:17" pos:end="1135:45"><call pos:start="1131:17" pos:end="1135:45"><name pos:start="1131:17" pos:end="1131:22">av_log</name><argument_list pos:start="1131:23" pos:end="1135:45">(<argument pos:start="1131:24" pos:end="1131:27"><expr pos:start="1131:24" pos:end="1131:27"><name pos:start="1131:24" pos:end="1131:27">NULL</name></expr></argument>, <argument pos:start="1131:30" pos:end="1131:40"><expr pos:start="1131:30" pos:end="1131:40"><name pos:start="1131:30" pos:end="1131:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1131:43" pos:end="1131:70"><expr pos:start="1131:43" pos:end="1131:70"><literal type="string" pos:start="1131:43" pos:end="1131:70">"  Stream #%d:%d (%s) -&gt; %s"</literal></expr></argument>,

                       <argument pos:start="1133:24" pos:end="1133:38"><expr pos:start="1133:24" pos:end="1133:38"><name pos:start="1133:24" pos:end="1133:38"><name pos:start="1133:24" pos:end="1133:26">ist</name><operator pos:start="1133:27" pos:end="1133:28">-&gt;</operator><name pos:start="1133:29" pos:end="1133:38">file_index</name></name></expr></argument>, <argument pos:start="1133:41" pos:end="1133:54"><expr pos:start="1133:41" pos:end="1133:54"><name pos:start="1133:41" pos:end="1133:54"><name pos:start="1133:41" pos:end="1133:43">ist</name><operator pos:start="1133:44" pos:end="1133:45">-&gt;</operator><name pos:start="1133:46" pos:end="1133:47">st</name><operator pos:start="1133:48" pos:end="1133:49">-&gt;</operator><name pos:start="1133:50" pos:end="1133:54">index</name></name></expr></argument>, <argument pos:start="1133:57" pos:end="1133:87"><expr pos:start="1133:57" pos:end="1133:87"><ternary pos:start="1133:57" pos:end="1133:87"><condition pos:start="1133:57" pos:end="1133:66"><expr pos:start="1133:57" pos:end="1133:64"><name pos:start="1133:57" pos:end="1133:64"><name pos:start="1133:57" pos:end="1133:59">ist</name><operator pos:start="1133:60" pos:end="1133:61">-&gt;</operator><name pos:start="1133:62" pos:end="1133:64">dec</name></name></expr> ?</condition><then pos:start="1133:68" pos:end="1133:81"> <expr pos:start="1133:68" pos:end="1133:81"><name pos:start="1133:68" pos:end="1133:81"><name pos:start="1133:68" pos:end="1133:70">ist</name><operator pos:start="1133:71" pos:end="1133:72">-&gt;</operator><name pos:start="1133:73" pos:end="1133:75">dec</name><operator pos:start="1133:76" pos:end="1133:77">-&gt;</operator><name pos:start="1133:78" pos:end="1133:81">name</name></name></expr> </then><else pos:start="1133:83" pos:end="1133:87">: <expr pos:start="1133:85" pos:end="1133:87"><literal type="string" pos:start="1133:85" pos:end="1133:87">"?"</literal></expr></else></ternary></expr></argument>,

                       <argument pos:start="1135:24" pos:end="1135:44"><expr pos:start="1135:24" pos:end="1135:44"><name pos:start="1135:24" pos:end="1135:38"><name pos:start="1135:24" pos:end="1135:26">ist</name><operator pos:start="1135:27" pos:end="1135:28">-&gt;</operator><name pos:start="1135:29" pos:end="1135:35">filters</name><index pos:start="1135:36" pos:end="1135:38">[<expr pos:start="1135:37" pos:end="1135:37"><name pos:start="1135:37" pos:end="1135:37">j</name></expr>]</index></name><operator pos:start="1135:39" pos:end="1135:40">-&gt;</operator><name pos:start="1135:41" pos:end="1135:44">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1137:17" pos:end="1139:92"><if pos:start="1137:17" pos:end="1139:92">if <condition pos:start="1137:20" pos:end="1137:40">(<expr pos:start="1137:21" pos:end="1137:39"><name pos:start="1137:21" pos:end="1137:35">nb_filtergraphs</name> <operator pos:start="1137:37" pos:end="1137:37">&gt;</operator> <literal type="number" pos:start="1137:39" pos:end="1137:39">1</literal></expr>)</condition><block type="pseudo" pos:start="1139:21" pos:end="1139:92"><block_content pos:start="1139:21" pos:end="1139:92">

                    <expr_stmt pos:start="1139:21" pos:end="1139:92"><expr pos:start="1139:21" pos:end="1139:91"><call pos:start="1139:21" pos:end="1139:91"><name pos:start="1139:21" pos:end="1139:26">av_log</name><argument_list pos:start="1139:27" pos:end="1139:91">(<argument pos:start="1139:28" pos:end="1139:31"><expr pos:start="1139:28" pos:end="1139:31"><name pos:start="1139:28" pos:end="1139:31">NULL</name></expr></argument>, <argument pos:start="1139:34" pos:end="1139:44"><expr pos:start="1139:34" pos:end="1139:44"><name pos:start="1139:34" pos:end="1139:44">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1139:47" pos:end="1139:59"><expr pos:start="1139:47" pos:end="1139:59"><literal type="string" pos:start="1139:47" pos:end="1139:59">" (graph %d)"</literal></expr></argument>, <argument pos:start="1139:62" pos:end="1139:90"><expr pos:start="1139:62" pos:end="1139:90"><name pos:start="1139:62" pos:end="1139:76"><name pos:start="1139:62" pos:end="1139:64">ist</name><operator pos:start="1139:65" pos:end="1139:66">-&gt;</operator><name pos:start="1139:67" pos:end="1139:73">filters</name><index pos:start="1139:74" pos:end="1139:76">[<expr pos:start="1139:75" pos:end="1139:75"><name pos:start="1139:75" pos:end="1139:75">j</name></expr>]</index></name><operator pos:start="1139:77" pos:end="1139:78">-&gt;</operator><name pos:start="1139:79" pos:end="1139:90"><name pos:start="1139:79" pos:end="1139:83">graph</name><operator pos:start="1139:84" pos:end="1139:85">-&gt;</operator><name pos:start="1139:86" pos:end="1139:90">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1141:17" pos:end="1141:48"><expr pos:start="1141:17" pos:end="1141:47"><call pos:start="1141:17" pos:end="1141:47"><name pos:start="1141:17" pos:end="1141:22">av_log</name><argument_list pos:start="1141:23" pos:end="1141:47">(<argument pos:start="1141:24" pos:end="1141:27"><expr pos:start="1141:24" pos:end="1141:27"><name pos:start="1141:24" pos:end="1141:27">NULL</name></expr></argument>, <argument pos:start="1141:30" pos:end="1141:40"><expr pos:start="1141:30" pos:end="1141:40"><name pos:start="1141:30" pos:end="1141:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1141:43" pos:end="1141:46"><expr pos:start="1141:43" pos:end="1141:46"><literal type="string" pos:start="1141:43" pos:end="1141:46">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <for pos:start="1151:5" pos:end="1279:5">for <control pos:start="1151:9" pos:end="1151:43">(<init pos:start="1151:10" pos:end="1151:15"><expr pos:start="1151:10" pos:end="1151:14"><name pos:start="1151:10" pos:end="1151:10">i</name> <operator pos:start="1151:12" pos:end="1151:12">=</operator> <literal type="number" pos:start="1151:14" pos:end="1151:14">0</literal></expr>;</init> <condition pos:start="1151:17" pos:end="1151:38"><expr pos:start="1151:17" pos:end="1151:37"><name pos:start="1151:17" pos:end="1151:17">i</name> <operator pos:start="1151:19" pos:end="1151:19">&lt;</operator> <name pos:start="1151:21" pos:end="1151:37">nb_output_streams</name></expr>;</condition> <incr pos:start="1151:40" pos:end="1151:42"><expr pos:start="1151:40" pos:end="1151:42"><name pos:start="1151:40" pos:end="1151:40">i</name><operator pos:start="1151:41" pos:end="1151:42">++</operator></expr></incr>)</control> <block pos:start="1151:45" pos:end="1279:5">{<block_content pos:start="1153:9" pos:end="1277:40">

        <expr_stmt pos:start="1153:9" pos:end="1153:32"><expr pos:start="1153:9" pos:end="1153:31"><name pos:start="1153:9" pos:end="1153:11">ost</name> <operator pos:start="1153:13" pos:end="1153:13">=</operator> <name pos:start="1153:15" pos:end="1153:31"><name pos:start="1153:15" pos:end="1153:28">output_streams</name><index pos:start="1153:29" pos:end="1153:31">[<expr pos:start="1153:30" pos:end="1153:30"><name pos:start="1153:30" pos:end="1153:30">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="1157:9" pos:end="1167:9"><if pos:start="1157:9" pos:end="1167:9">if <condition pos:start="1157:12" pos:end="1157:37">(<expr pos:start="1157:13" pos:end="1157:36"><name pos:start="1157:13" pos:end="1157:36"><name pos:start="1157:13" pos:end="1157:15">ost</name><operator pos:start="1157:16" pos:end="1157:17">-&gt;</operator><name pos:start="1157:18" pos:end="1157:36">attachment_filename</name></name></expr>)</condition> <block pos:start="1157:39" pos:end="1167:9">{<block_content pos:start="1161:13" pos:end="1165:21">

            <comment type="block" pos:start="1159:13" pos:end="1159:34">/* an attached file */</comment>

            <expr_stmt pos:start="1161:13" pos:end="1163:74"><expr pos:start="1161:13" pos:end="1163:73"><call pos:start="1161:13" pos:end="1163:73"><name pos:start="1161:13" pos:end="1161:18">av_log</name><argument_list pos:start="1161:19" pos:end="1163:73">(<argument pos:start="1161:20" pos:end="1161:23"><expr pos:start="1161:20" pos:end="1161:23"><name pos:start="1161:20" pos:end="1161:23">NULL</name></expr></argument>, <argument pos:start="1161:26" pos:end="1161:36"><expr pos:start="1161:26" pos:end="1161:36"><name pos:start="1161:26" pos:end="1161:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1161:39" pos:end="1161:68"><expr pos:start="1161:39" pos:end="1161:68"><literal type="string" pos:start="1161:39" pos:end="1161:68">"  File %s -&gt; Stream #%d:%d\n"</literal></expr></argument>,

                   <argument pos:start="1163:20" pos:end="1163:43"><expr pos:start="1163:20" pos:end="1163:43"><name pos:start="1163:20" pos:end="1163:43"><name pos:start="1163:20" pos:end="1163:22">ost</name><operator pos:start="1163:23" pos:end="1163:24">-&gt;</operator><name pos:start="1163:25" pos:end="1163:43">attachment_filename</name></name></expr></argument>, <argument pos:start="1163:46" pos:end="1163:60"><expr pos:start="1163:46" pos:end="1163:60"><name pos:start="1163:46" pos:end="1163:60"><name pos:start="1163:46" pos:end="1163:48">ost</name><operator pos:start="1163:49" pos:end="1163:50">-&gt;</operator><name pos:start="1163:51" pos:end="1163:60">file_index</name></name></expr></argument>, <argument pos:start="1163:63" pos:end="1163:72"><expr pos:start="1163:63" pos:end="1163:72"><name pos:start="1163:63" pos:end="1163:72"><name pos:start="1163:63" pos:end="1163:65">ost</name><operator pos:start="1163:66" pos:end="1163:67">-&gt;</operator><name pos:start="1163:68" pos:end="1163:72">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="1165:13" pos:end="1165:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="1171:9" pos:end="1189:9"><if pos:start="1171:9" pos:end="1189:9">if <condition pos:start="1171:12" pos:end="1171:58">(<expr pos:start="1171:13" pos:end="1171:57"><name pos:start="1171:13" pos:end="1171:23"><name pos:start="1171:13" pos:end="1171:15">ost</name><operator pos:start="1171:16" pos:end="1171:17">-&gt;</operator><name pos:start="1171:18" pos:end="1171:23">filter</name></name> <operator pos:start="1171:25" pos:end="1171:26">&amp;&amp;</operator> <name pos:start="1171:28" pos:end="1171:57"><name pos:start="1171:28" pos:end="1171:30">ost</name><operator pos:start="1171:31" pos:end="1171:32">-&gt;</operator><name pos:start="1171:33" pos:end="1171:38">filter</name><operator pos:start="1171:39" pos:end="1171:40">-&gt;</operator><name pos:start="1171:41" pos:end="1171:45">graph</name><operator pos:start="1171:46" pos:end="1171:47">-&gt;</operator><name pos:start="1171:48" pos:end="1171:57">graph_desc</name></name></expr>)</condition> <block pos:start="1171:60" pos:end="1189:9">{<block_content pos:start="1175:13" pos:end="1187:21">

            <comment type="block" pos:start="1173:13" pos:end="1173:45">/* output from a complex graph */</comment>

            <expr_stmt pos:start="1175:13" pos:end="1175:65"><expr pos:start="1175:13" pos:end="1175:64"><call pos:start="1175:13" pos:end="1175:64"><name pos:start="1175:13" pos:end="1175:18">av_log</name><argument_list pos:start="1175:19" pos:end="1175:64">(<argument pos:start="1175:20" pos:end="1175:23"><expr pos:start="1175:20" pos:end="1175:23"><name pos:start="1175:20" pos:end="1175:23">NULL</name></expr></argument>, <argument pos:start="1175:26" pos:end="1175:36"><expr pos:start="1175:26" pos:end="1175:36"><name pos:start="1175:26" pos:end="1175:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1175:39" pos:end="1175:44"><expr pos:start="1175:39" pos:end="1175:44"><literal type="string" pos:start="1175:39" pos:end="1175:44">"  %s"</literal></expr></argument>, <argument pos:start="1175:47" pos:end="1175:63"><expr pos:start="1175:47" pos:end="1175:63"><name pos:start="1175:47" pos:end="1175:63"><name pos:start="1175:47" pos:end="1175:49">ost</name><operator pos:start="1175:50" pos:end="1175:51">-&gt;</operator><name pos:start="1175:52" pos:end="1175:57">filter</name><operator pos:start="1175:58" pos:end="1175:59">-&gt;</operator><name pos:start="1175:60" pos:end="1175:63">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1177:13" pos:end="1179:84"><if pos:start="1177:13" pos:end="1179:84">if <condition pos:start="1177:16" pos:end="1177:36">(<expr pos:start="1177:17" pos:end="1177:35"><name pos:start="1177:17" pos:end="1177:31">nb_filtergraphs</name> <operator pos:start="1177:33" pos:end="1177:33">&gt;</operator> <literal type="number" pos:start="1177:35" pos:end="1177:35">1</literal></expr>)</condition><block type="pseudo" pos:start="1179:17" pos:end="1179:84"><block_content pos:start="1179:17" pos:end="1179:84">

                <expr_stmt pos:start="1179:17" pos:end="1179:84"><expr pos:start="1179:17" pos:end="1179:83"><call pos:start="1179:17" pos:end="1179:83"><name pos:start="1179:17" pos:end="1179:22">av_log</name><argument_list pos:start="1179:23" pos:end="1179:83">(<argument pos:start="1179:24" pos:end="1179:27"><expr pos:start="1179:24" pos:end="1179:27"><name pos:start="1179:24" pos:end="1179:27">NULL</name></expr></argument>, <argument pos:start="1179:30" pos:end="1179:40"><expr pos:start="1179:30" pos:end="1179:40"><name pos:start="1179:30" pos:end="1179:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1179:43" pos:end="1179:55"><expr pos:start="1179:43" pos:end="1179:55"><literal type="string" pos:start="1179:43" pos:end="1179:55">" (graph %d)"</literal></expr></argument>, <argument pos:start="1179:58" pos:end="1179:82"><expr pos:start="1179:58" pos:end="1179:82"><name pos:start="1179:58" pos:end="1179:82"><name pos:start="1179:58" pos:end="1179:60">ost</name><operator pos:start="1179:61" pos:end="1179:62">-&gt;</operator><name pos:start="1179:63" pos:end="1179:68">filter</name><operator pos:start="1179:69" pos:end="1179:70">-&gt;</operator><name pos:start="1179:71" pos:end="1179:75">graph</name><operator pos:start="1179:76" pos:end="1179:77">-&gt;</operator><name pos:start="1179:78" pos:end="1179:82">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="1183:13" pos:end="1185:64"><expr pos:start="1183:13" pos:end="1185:63"><call pos:start="1183:13" pos:end="1185:63"><name pos:start="1183:13" pos:end="1183:18">av_log</name><argument_list pos:start="1183:19" pos:end="1185:63">(<argument pos:start="1183:20" pos:end="1183:23"><expr pos:start="1183:20" pos:end="1183:23"><name pos:start="1183:20" pos:end="1183:23">NULL</name></expr></argument>, <argument pos:start="1183:26" pos:end="1183:36"><expr pos:start="1183:26" pos:end="1183:36"><name pos:start="1183:26" pos:end="1183:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1183:39" pos:end="1183:64"><expr pos:start="1183:39" pos:end="1183:64"><literal type="string" pos:start="1183:39" pos:end="1183:64">" -&gt; Stream #%d:%d (%s)\n"</literal></expr></argument>, <argument pos:start="1183:67" pos:end="1183:81"><expr pos:start="1183:67" pos:end="1183:81"><name pos:start="1183:67" pos:end="1183:81"><name pos:start="1183:67" pos:end="1183:69">ost</name><operator pos:start="1183:70" pos:end="1183:71">-&gt;</operator><name pos:start="1183:72" pos:end="1183:81">file_index</name></name></expr></argument>,

                   <argument pos:start="1185:20" pos:end="1185:29"><expr pos:start="1185:20" pos:end="1185:29"><name pos:start="1185:20" pos:end="1185:29"><name pos:start="1185:20" pos:end="1185:22">ost</name><operator pos:start="1185:23" pos:end="1185:24">-&gt;</operator><name pos:start="1185:25" pos:end="1185:29">index</name></name></expr></argument>, <argument pos:start="1185:32" pos:end="1185:62"><expr pos:start="1185:32" pos:end="1185:62"><ternary pos:start="1185:32" pos:end="1185:62"><condition pos:start="1185:32" pos:end="1185:41"><expr pos:start="1185:32" pos:end="1185:39"><name pos:start="1185:32" pos:end="1185:39"><name pos:start="1185:32" pos:end="1185:34">ost</name><operator pos:start="1185:35" pos:end="1185:36">-&gt;</operator><name pos:start="1185:37" pos:end="1185:39">enc</name></name></expr> ?</condition><then pos:start="1185:43" pos:end="1185:56"> <expr pos:start="1185:43" pos:end="1185:56"><name pos:start="1185:43" pos:end="1185:56"><name pos:start="1185:43" pos:end="1185:45">ost</name><operator pos:start="1185:46" pos:end="1185:47">-&gt;</operator><name pos:start="1185:48" pos:end="1185:50">enc</name><operator pos:start="1185:51" pos:end="1185:52">-&gt;</operator><name pos:start="1185:53" pos:end="1185:56">name</name></name></expr> </then><else pos:start="1185:58" pos:end="1185:62">: <expr pos:start="1185:60" pos:end="1185:62"><literal type="string" pos:start="1185:60" pos:end="1185:62">"?"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="1187:13" pos:end="1187:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1193:9" pos:end="1201:27"><expr pos:start="1193:9" pos:end="1201:26"><call pos:start="1193:9" pos:end="1201:26"><name pos:start="1193:9" pos:end="1193:14">av_log</name><argument_list pos:start="1193:15" pos:end="1201:26">(<argument pos:start="1193:16" pos:end="1193:19"><expr pos:start="1193:16" pos:end="1193:19"><name pos:start="1193:16" pos:end="1193:19">NULL</name></expr></argument>, <argument pos:start="1193:22" pos:end="1193:32"><expr pos:start="1193:22" pos:end="1193:32"><name pos:start="1193:22" pos:end="1193:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1193:35" pos:end="1193:61"><expr pos:start="1193:35" pos:end="1193:61"><literal type="string" pos:start="1193:35" pos:end="1193:61">"  Stream #%d:%d -&gt; #%d:%d"</literal></expr></argument>,

               <argument pos:start="1195:16" pos:end="1195:59"><expr pos:start="1195:16" pos:end="1195:59"><name pos:start="1195:16" pos:end="1195:47"><name pos:start="1195:16" pos:end="1195:28">input_streams</name><index pos:start="1195:29" pos:end="1195:47">[<expr pos:start="1195:30" pos:end="1195:46"><name pos:start="1195:30" pos:end="1195:46"><name pos:start="1195:30" pos:end="1195:32">ost</name><operator pos:start="1195:33" pos:end="1195:34">-&gt;</operator><name pos:start="1195:35" pos:end="1195:46">source_index</name></name></expr>]</index></name><operator pos:start="1195:48" pos:end="1195:49">-&gt;</operator><name pos:start="1195:50" pos:end="1195:59">file_index</name></expr></argument>,

               <argument pos:start="1197:16" pos:end="1197:58"><expr pos:start="1197:16" pos:end="1197:58"><name pos:start="1197:16" pos:end="1197:47"><name pos:start="1197:16" pos:end="1197:28">input_streams</name><index pos:start="1197:29" pos:end="1197:47">[<expr pos:start="1197:30" pos:end="1197:46"><name pos:start="1197:30" pos:end="1197:46"><name pos:start="1197:30" pos:end="1197:32">ost</name><operator pos:start="1197:33" pos:end="1197:34">-&gt;</operator><name pos:start="1197:35" pos:end="1197:46">source_index</name></name></expr>]</index></name><operator pos:start="1197:48" pos:end="1197:49">-&gt;</operator><name pos:start="1197:50" pos:end="1197:58"><name pos:start="1197:50" pos:end="1197:51">st</name><operator pos:start="1197:52" pos:end="1197:53">-&gt;</operator><name pos:start="1197:54" pos:end="1197:58">index</name></name></expr></argument>,

               <argument pos:start="1199:16" pos:end="1199:30"><expr pos:start="1199:16" pos:end="1199:30"><name pos:start="1199:16" pos:end="1199:30"><name pos:start="1199:16" pos:end="1199:18">ost</name><operator pos:start="1199:19" pos:end="1199:20">-&gt;</operator><name pos:start="1199:21" pos:end="1199:30">file_index</name></name></expr></argument>,

               <argument pos:start="1201:16" pos:end="1201:25"><expr pos:start="1201:16" pos:end="1201:25"><name pos:start="1201:16" pos:end="1201:25"><name pos:start="1201:16" pos:end="1201:18">ost</name><operator pos:start="1201:19" pos:end="1201:20">-&gt;</operator><name pos:start="1201:21" pos:end="1201:25">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1203:9" pos:end="1209:45"><if pos:start="1203:9" pos:end="1209:45">if <condition pos:start="1203:12" pos:end="1203:62">(<expr pos:start="1203:13" pos:end="1203:61"><name pos:start="1203:13" pos:end="1203:25"><name pos:start="1203:13" pos:end="1203:15">ost</name><operator pos:start="1203:16" pos:end="1203:17">-&gt;</operator><name pos:start="1203:18" pos:end="1203:25">sync_ist</name></name> <operator pos:start="1203:27" pos:end="1203:28">!=</operator> <name pos:start="1203:30" pos:end="1203:61"><name pos:start="1203:30" pos:end="1203:42">input_streams</name><index pos:start="1203:43" pos:end="1203:61">[<expr pos:start="1203:44" pos:end="1203:60"><name pos:start="1203:44" pos:end="1203:60"><name pos:start="1203:44" pos:end="1203:46">ost</name><operator pos:start="1203:47" pos:end="1203:48">-&gt;</operator><name pos:start="1203:49" pos:end="1203:60">source_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1205:13" pos:end="1209:45"><block_content pos:start="1205:13" pos:end="1209:45">

            <expr_stmt pos:start="1205:13" pos:end="1209:45"><expr pos:start="1205:13" pos:end="1209:44"><call pos:start="1205:13" pos:end="1209:44"><name pos:start="1205:13" pos:end="1205:18">av_log</name><argument_list pos:start="1205:19" pos:end="1209:44">(<argument pos:start="1205:20" pos:end="1205:23"><expr pos:start="1205:20" pos:end="1205:23"><name pos:start="1205:20" pos:end="1205:23">NULL</name></expr></argument>, <argument pos:start="1205:26" pos:end="1205:36"><expr pos:start="1205:26" pos:end="1205:36"><name pos:start="1205:26" pos:end="1205:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1205:39" pos:end="1205:54"><expr pos:start="1205:39" pos:end="1205:54"><literal type="string" pos:start="1205:39" pos:end="1205:54">" [sync #%d:%d]"</literal></expr></argument>,

                   <argument pos:start="1207:20" pos:end="1207:44"><expr pos:start="1207:20" pos:end="1207:44"><name pos:start="1207:20" pos:end="1207:44"><name pos:start="1207:20" pos:end="1207:22">ost</name><operator pos:start="1207:23" pos:end="1207:24">-&gt;</operator><name pos:start="1207:25" pos:end="1207:32">sync_ist</name><operator pos:start="1207:33" pos:end="1207:34">-&gt;</operator><name pos:start="1207:35" pos:end="1207:44">file_index</name></name></expr></argument>,

                   <argument pos:start="1209:20" pos:end="1209:43"><expr pos:start="1209:20" pos:end="1209:43"><name pos:start="1209:20" pos:end="1209:43"><name pos:start="1209:20" pos:end="1209:22">ost</name><operator pos:start="1209:23" pos:end="1209:24">-&gt;</operator><name pos:start="1209:25" pos:end="1209:32">sync_ist</name><operator pos:start="1209:33" pos:end="1209:34">-&gt;</operator><name pos:start="1209:35" pos:end="1209:36">st</name><operator pos:start="1209:37" pos:end="1209:38">-&gt;</operator><name pos:start="1209:39" pos:end="1209:43">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="1211:9" pos:end="1275:9"><if pos:start="1211:9" pos:end="1213:49">if <condition pos:start="1211:12" pos:end="1211:29">(<expr pos:start="1211:13" pos:end="1211:28"><name pos:start="1211:13" pos:end="1211:28"><name pos:start="1211:13" pos:end="1211:15">ost</name><operator pos:start="1211:16" pos:end="1211:17">-&gt;</operator><name pos:start="1211:18" pos:end="1211:28">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="1213:13" pos:end="1213:49"><block_content pos:start="1213:13" pos:end="1213:49">

            <expr_stmt pos:start="1213:13" pos:end="1213:49"><expr pos:start="1213:13" pos:end="1213:48"><call pos:start="1213:13" pos:end="1213:48"><name pos:start="1213:13" pos:end="1213:18">av_log</name><argument_list pos:start="1213:19" pos:end="1213:48">(<argument pos:start="1213:20" pos:end="1213:23"><expr pos:start="1213:20" pos:end="1213:23"><name pos:start="1213:20" pos:end="1213:23">NULL</name></expr></argument>, <argument pos:start="1213:26" pos:end="1213:36"><expr pos:start="1213:26" pos:end="1213:36"><name pos:start="1213:26" pos:end="1213:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1213:39" pos:end="1213:47"><expr pos:start="1213:39" pos:end="1213:47"><literal type="string" pos:start="1213:39" pos:end="1213:47">" (copy)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="1215:9" pos:end="1275:9">else <block pos:start="1215:14" pos:end="1275:9">{<block_content pos:start="1217:13" pos:end="1273:49">

            <decl_stmt pos:start="1217:13" pos:end="1217:79"><decl pos:start="1217:13" pos:end="1217:78"><type pos:start="1217:13" pos:end="1217:27"><specifier pos:start="1217:13" pos:end="1217:17">const</specifier> <name pos:start="1217:19" pos:end="1217:25">AVCodec</name> <modifier pos:start="1217:27" pos:end="1217:27">*</modifier></type><name pos:start="1217:28" pos:end="1217:35">in_codec</name>    <init pos:start="1217:40" pos:end="1217:78">= <expr pos:start="1217:42" pos:end="1217:78"><name pos:start="1217:42" pos:end="1217:73"><name pos:start="1217:42" pos:end="1217:54">input_streams</name><index pos:start="1217:55" pos:end="1217:73">[<expr pos:start="1217:56" pos:end="1217:72"><name pos:start="1217:56" pos:end="1217:72"><name pos:start="1217:56" pos:end="1217:58">ost</name><operator pos:start="1217:59" pos:end="1217:60">-&gt;</operator><name pos:start="1217:61" pos:end="1217:72">source_index</name></name></expr>]</index></name><operator pos:start="1217:74" pos:end="1217:75">-&gt;</operator><name pos:start="1217:76" pos:end="1217:78">dec</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1219:13" pos:end="1219:50"><decl pos:start="1219:13" pos:end="1219:49"><type pos:start="1219:13" pos:end="1219:27"><specifier pos:start="1219:13" pos:end="1219:17">const</specifier> <name pos:start="1219:19" pos:end="1219:25">AVCodec</name> <modifier pos:start="1219:27" pos:end="1219:27">*</modifier></type><name pos:start="1219:28" pos:end="1219:36">out_codec</name>   <init pos:start="1219:40" pos:end="1219:49">= <expr pos:start="1219:42" pos:end="1219:49"><name pos:start="1219:42" pos:end="1219:49"><name pos:start="1219:42" pos:end="1219:44">ost</name><operator pos:start="1219:45" pos:end="1219:46">-&gt;</operator><name pos:start="1219:47" pos:end="1219:49">enc</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1221:13" pos:end="1221:45"><decl pos:start="1221:13" pos:end="1221:44"><type pos:start="1221:13" pos:end="1221:24"><specifier pos:start="1221:13" pos:end="1221:17">const</specifier> <name pos:start="1221:19" pos:end="1221:22">char</name> <modifier pos:start="1221:24" pos:end="1221:24">*</modifier></type><name pos:start="1221:25" pos:end="1221:36">decoder_name</name>   <init pos:start="1221:40" pos:end="1221:44">= <expr pos:start="1221:42" pos:end="1221:44"><literal type="string" pos:start="1221:42" pos:end="1221:44">"?"</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1223:13" pos:end="1223:45"><decl pos:start="1223:13" pos:end="1223:44"><type pos:start="1223:13" pos:end="1223:24"><specifier pos:start="1223:13" pos:end="1223:17">const</specifier> <name pos:start="1223:19" pos:end="1223:22">char</name> <modifier pos:start="1223:24" pos:end="1223:24">*</modifier></type><name pos:start="1223:25" pos:end="1223:37">in_codec_name</name>  <init pos:start="1223:40" pos:end="1223:44">= <expr pos:start="1223:42" pos:end="1223:44"><literal type="string" pos:start="1223:42" pos:end="1223:44">"?"</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1225:13" pos:end="1225:45"><decl pos:start="1225:13" pos:end="1225:44"><type pos:start="1225:13" pos:end="1225:24"><specifier pos:start="1225:13" pos:end="1225:17">const</specifier> <name pos:start="1225:19" pos:end="1225:22">char</name> <modifier pos:start="1225:24" pos:end="1225:24">*</modifier></type><name pos:start="1225:25" pos:end="1225:36">encoder_name</name>   <init pos:start="1225:40" pos:end="1225:44">= <expr pos:start="1225:42" pos:end="1225:44"><literal type="string" pos:start="1225:42" pos:end="1225:44">"?"</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1227:13" pos:end="1227:45"><decl pos:start="1227:13" pos:end="1227:44"><type pos:start="1227:13" pos:end="1227:24"><specifier pos:start="1227:13" pos:end="1227:17">const</specifier> <name pos:start="1227:19" pos:end="1227:22">char</name> <modifier pos:start="1227:24" pos:end="1227:24">*</modifier></type><name pos:start="1227:25" pos:end="1227:38">out_codec_name</name> <init pos:start="1227:40" pos:end="1227:44">= <expr pos:start="1227:42" pos:end="1227:44"><literal type="string" pos:start="1227:42" pos:end="1227:44">"?"</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1229:13" pos:end="1229:42"><decl pos:start="1229:13" pos:end="1229:41"><type pos:start="1229:13" pos:end="1229:37"><specifier pos:start="1229:13" pos:end="1229:17">const</specifier> <name pos:start="1229:19" pos:end="1229:35">AVCodecDescriptor</name> <modifier pos:start="1229:37" pos:end="1229:37">*</modifier></type><name pos:start="1229:38" pos:end="1229:41">desc</name></decl>;</decl_stmt>



            <if_stmt pos:start="1233:13" pos:end="1247:13"><if pos:start="1233:13" pos:end="1247:13">if <condition pos:start="1233:16" pos:end="1233:25">(<expr pos:start="1233:17" pos:end="1233:24"><name pos:start="1233:17" pos:end="1233:24">in_codec</name></expr>)</condition> <block pos:start="1233:27" pos:end="1247:13">{<block_content pos:start="1235:17" pos:end="1245:44">

                <expr_stmt pos:start="1235:17" pos:end="1235:47"><expr pos:start="1235:17" pos:end="1235:46"><name pos:start="1235:17" pos:end="1235:28">decoder_name</name>  <operator pos:start="1235:31" pos:end="1235:31">=</operator> <name pos:start="1235:33" pos:end="1235:46"><name pos:start="1235:33" pos:end="1235:40">in_codec</name><operator pos:start="1235:41" pos:end="1235:42">-&gt;</operator><name pos:start="1235:43" pos:end="1235:46">name</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1237:17" pos:end="1237:60"><expr pos:start="1237:17" pos:end="1237:59"><name pos:start="1237:17" pos:end="1237:20">desc</name> <operator pos:start="1237:22" pos:end="1237:22">=</operator> <call pos:start="1237:24" pos:end="1237:59"><name pos:start="1237:24" pos:end="1237:45">avcodec_descriptor_get</name><argument_list pos:start="1237:46" pos:end="1237:59">(<argument pos:start="1237:47" pos:end="1237:58"><expr pos:start="1237:47" pos:end="1237:58"><name pos:start="1237:47" pos:end="1237:58"><name pos:start="1237:47" pos:end="1237:54">in_codec</name><operator pos:start="1237:55" pos:end="1237:56">-&gt;</operator><name pos:start="1237:57" pos:end="1237:58">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1239:17" pos:end="1241:47"><if pos:start="1239:17" pos:end="1241:47">if <condition pos:start="1239:20" pos:end="1239:25">(<expr pos:start="1239:21" pos:end="1239:24"><name pos:start="1239:21" pos:end="1239:24">desc</name></expr>)</condition><block type="pseudo" pos:start="1241:21" pos:end="1241:47"><block_content pos:start="1241:21" pos:end="1241:47">

                    <expr_stmt pos:start="1241:21" pos:end="1241:47"><expr pos:start="1241:21" pos:end="1241:46"><name pos:start="1241:21" pos:end="1241:33">in_codec_name</name> <operator pos:start="1241:35" pos:end="1241:35">=</operator> <name pos:start="1241:37" pos:end="1241:46"><name pos:start="1241:37" pos:end="1241:40">desc</name><operator pos:start="1241:41" pos:end="1241:42">-&gt;</operator><name pos:start="1241:43" pos:end="1241:46">name</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1243:17" pos:end="1245:44"><if pos:start="1243:17" pos:end="1245:44">if <condition pos:start="1243:20" pos:end="1243:57">(<expr pos:start="1243:21" pos:end="1243:56"><operator pos:start="1243:21" pos:end="1243:21">!</operator><call pos:start="1243:22" pos:end="1243:56"><name pos:start="1243:22" pos:end="1243:27">strcmp</name><argument_list pos:start="1243:28" pos:end="1243:56">(<argument pos:start="1243:29" pos:end="1243:40"><expr pos:start="1243:29" pos:end="1243:40"><name pos:start="1243:29" pos:end="1243:40">decoder_name</name></expr></argument>, <argument pos:start="1243:43" pos:end="1243:55"><expr pos:start="1243:43" pos:end="1243:55"><name pos:start="1243:43" pos:end="1243:55">in_codec_name</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1245:21" pos:end="1245:44"><block_content pos:start="1245:21" pos:end="1245:44">

                    <expr_stmt pos:start="1245:21" pos:end="1245:44"><expr pos:start="1245:21" pos:end="1245:43"><name pos:start="1245:21" pos:end="1245:32">decoder_name</name> <operator pos:start="1245:34" pos:end="1245:34">=</operator> <literal type="string" pos:start="1245:36" pos:end="1245:43">"native"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="1251:13" pos:end="1265:13"><if pos:start="1251:13" pos:end="1265:13">if <condition pos:start="1251:16" pos:end="1251:26">(<expr pos:start="1251:17" pos:end="1251:25"><name pos:start="1251:17" pos:end="1251:25">out_codec</name></expr>)</condition> <block pos:start="1251:28" pos:end="1265:13">{<block_content pos:start="1253:17" pos:end="1263:44">

                <expr_stmt pos:start="1253:17" pos:end="1253:49"><expr pos:start="1253:17" pos:end="1253:48"><name pos:start="1253:17" pos:end="1253:28">encoder_name</name>   <operator pos:start="1253:32" pos:end="1253:32">=</operator> <name pos:start="1253:34" pos:end="1253:48"><name pos:start="1253:34" pos:end="1253:42">out_codec</name><operator pos:start="1253:43" pos:end="1253:44">-&gt;</operator><name pos:start="1253:45" pos:end="1253:48">name</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1255:17" pos:end="1255:61"><expr pos:start="1255:17" pos:end="1255:60"><name pos:start="1255:17" pos:end="1255:20">desc</name> <operator pos:start="1255:22" pos:end="1255:22">=</operator> <call pos:start="1255:24" pos:end="1255:60"><name pos:start="1255:24" pos:end="1255:45">avcodec_descriptor_get</name><argument_list pos:start="1255:46" pos:end="1255:60">(<argument pos:start="1255:47" pos:end="1255:59"><expr pos:start="1255:47" pos:end="1255:59"><name pos:start="1255:47" pos:end="1255:59"><name pos:start="1255:47" pos:end="1255:55">out_codec</name><operator pos:start="1255:56" pos:end="1255:57">-&gt;</operator><name pos:start="1255:58" pos:end="1255:59">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1257:17" pos:end="1259:48"><if pos:start="1257:17" pos:end="1259:48">if <condition pos:start="1257:20" pos:end="1257:25">(<expr pos:start="1257:21" pos:end="1257:24"><name pos:start="1257:21" pos:end="1257:24">desc</name></expr>)</condition><block type="pseudo" pos:start="1259:21" pos:end="1259:48"><block_content pos:start="1259:21" pos:end="1259:48">

                    <expr_stmt pos:start="1259:21" pos:end="1259:48"><expr pos:start="1259:21" pos:end="1259:47"><name pos:start="1259:21" pos:end="1259:34">out_codec_name</name> <operator pos:start="1259:36" pos:end="1259:36">=</operator> <name pos:start="1259:38" pos:end="1259:47"><name pos:start="1259:38" pos:end="1259:41">desc</name><operator pos:start="1259:42" pos:end="1259:43">-&gt;</operator><name pos:start="1259:44" pos:end="1259:47">name</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="1261:17" pos:end="1263:44"><if pos:start="1261:17" pos:end="1263:44">if <condition pos:start="1261:20" pos:end="1261:58">(<expr pos:start="1261:21" pos:end="1261:57"><operator pos:start="1261:21" pos:end="1261:21">!</operator><call pos:start="1261:22" pos:end="1261:57"><name pos:start="1261:22" pos:end="1261:27">strcmp</name><argument_list pos:start="1261:28" pos:end="1261:57">(<argument pos:start="1261:29" pos:end="1261:40"><expr pos:start="1261:29" pos:end="1261:40"><name pos:start="1261:29" pos:end="1261:40">encoder_name</name></expr></argument>, <argument pos:start="1261:43" pos:end="1261:56"><expr pos:start="1261:43" pos:end="1261:56"><name pos:start="1261:43" pos:end="1261:56">out_codec_name</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1263:21" pos:end="1263:44"><block_content pos:start="1263:21" pos:end="1263:44">

                    <expr_stmt pos:start="1263:21" pos:end="1263:44"><expr pos:start="1263:21" pos:end="1263:43"><name pos:start="1263:21" pos:end="1263:32">encoder_name</name> <operator pos:start="1263:34" pos:end="1263:34">=</operator> <literal type="string" pos:start="1263:36" pos:end="1263:43">"native"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="1269:13" pos:end="1273:49"><expr pos:start="1269:13" pos:end="1273:48"><call pos:start="1269:13" pos:end="1273:48"><name pos:start="1269:13" pos:end="1269:18">av_log</name><argument_list pos:start="1269:19" pos:end="1273:48">(<argument pos:start="1269:20" pos:end="1269:23"><expr pos:start="1269:20" pos:end="1269:23"><name pos:start="1269:20" pos:end="1269:23">NULL</name></expr></argument>, <argument pos:start="1269:26" pos:end="1269:36"><expr pos:start="1269:26" pos:end="1269:36"><name pos:start="1269:26" pos:end="1269:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1269:39" pos:end="1269:61"><expr pos:start="1269:39" pos:end="1269:61"><literal type="string" pos:start="1269:39" pos:end="1269:61">" (%s (%s) -&gt; %s (%s))"</literal></expr></argument>,

                   <argument pos:start="1271:20" pos:end="1271:32"><expr pos:start="1271:20" pos:end="1271:32"><name pos:start="1271:20" pos:end="1271:32">in_codec_name</name></expr></argument>, <argument pos:start="1271:35" pos:end="1271:46"><expr pos:start="1271:35" pos:end="1271:46"><name pos:start="1271:35" pos:end="1271:46">decoder_name</name></expr></argument>,

                   <argument pos:start="1273:20" pos:end="1273:33"><expr pos:start="1273:20" pos:end="1273:33"><name pos:start="1273:20" pos:end="1273:33">out_codec_name</name></expr></argument>, <argument pos:start="1273:36" pos:end="1273:47"><expr pos:start="1273:36" pos:end="1273:47"><name pos:start="1273:36" pos:end="1273:47">encoder_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="1277:9" pos:end="1277:40"><expr pos:start="1277:9" pos:end="1277:39"><call pos:start="1277:9" pos:end="1277:39"><name pos:start="1277:9" pos:end="1277:14">av_log</name><argument_list pos:start="1277:15" pos:end="1277:39">(<argument pos:start="1277:16" pos:end="1277:19"><expr pos:start="1277:16" pos:end="1277:19"><name pos:start="1277:16" pos:end="1277:19">NULL</name></expr></argument>, <argument pos:start="1277:22" pos:end="1277:32"><expr pos:start="1277:22" pos:end="1277:32"><name pos:start="1277:22" pos:end="1277:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="1277:35" pos:end="1277:38"><expr pos:start="1277:35" pos:end="1277:38"><literal type="string" pos:start="1277:35" pos:end="1277:38">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="1283:5" pos:end="1289:5"><if pos:start="1283:5" pos:end="1289:5">if <condition pos:start="1283:8" pos:end="1283:12">(<expr pos:start="1283:9" pos:end="1283:11"><name pos:start="1283:9" pos:end="1283:11">ret</name></expr>)</condition> <block pos:start="1283:14" pos:end="1289:5">{<block_content pos:start="1285:9" pos:end="1287:19">

        <expr_stmt pos:start="1285:9" pos:end="1285:50"><expr pos:start="1285:9" pos:end="1285:49"><call pos:start="1285:9" pos:end="1285:49"><name pos:start="1285:9" pos:end="1285:14">av_log</name><argument_list pos:start="1285:15" pos:end="1285:49">(<argument pos:start="1285:16" pos:end="1285:19"><expr pos:start="1285:16" pos:end="1285:19"><name pos:start="1285:16" pos:end="1285:19">NULL</name></expr></argument>, <argument pos:start="1285:22" pos:end="1285:33"><expr pos:start="1285:22" pos:end="1285:33"><name pos:start="1285:22" pos:end="1285:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="1285:36" pos:end="1285:41"><expr pos:start="1285:36" pos:end="1285:41"><literal type="string" pos:start="1285:36" pos:end="1285:41">"%s\n"</literal></expr></argument>, <argument pos:start="1285:44" pos:end="1285:48"><expr pos:start="1285:44" pos:end="1285:48"><name pos:start="1285:44" pos:end="1285:48">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="1287:9" pos:end="1287:19">return <expr pos:start="1287:16" pos:end="1287:18"><name pos:start="1287:16" pos:end="1287:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1293:5" pos:end="1297:5"><if pos:start="1293:5" pos:end="1297:5">if <condition pos:start="1293:8" pos:end="1293:33">(<expr pos:start="1293:9" pos:end="1293:32"><name pos:start="1293:9" pos:end="1293:20">sdp_filename</name> <operator pos:start="1293:22" pos:end="1293:23">||</operator> <name pos:start="1293:25" pos:end="1293:32">want_sdp</name></expr>)</condition> <block pos:start="1293:35" pos:end="1297:5">{<block_content pos:start="1295:9" pos:end="1295:20">

        <expr_stmt pos:start="1295:9" pos:end="1295:20"><expr pos:start="1295:9" pos:end="1295:19"><call pos:start="1295:9" pos:end="1295:19"><name pos:start="1295:9" pos:end="1295:17">print_sdp</name><argument_list pos:start="1295:18" pos:end="1295:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="1301:5" pos:end="1301:28"><expr pos:start="1301:5" pos:end="1301:27"><name pos:start="1301:5" pos:end="1301:23">transcode_init_done</name> <operator pos:start="1301:25" pos:end="1301:25">=</operator> <literal type="number" pos:start="1301:27" pos:end="1301:27">1</literal></expr>;</expr_stmt>



    <return pos:start="1305:5" pos:end="1305:13">return <expr pos:start="1305:12" pos:end="1305:12"><literal type="number" pos:start="1305:12" pos:end="1305:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
