<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13921.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">check_pred16x16</name><parameter_list pos:start="1:28" pos:end="3:72">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">H264PredContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">h</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">buf0</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:76"><decl pos:start="1:64" pos:end="1:76"><type pos:start="1:64" pos:end="1:76"><name pos:start="1:64" pos:end="1:70">uint8_t</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:76">buf1</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:37"><decl pos:start="3:29" pos:end="3:37"><type pos:start="3:29" pos:end="3:37"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:37">codec</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:56"><decl pos:start="3:40" pos:end="3:56"><type pos:start="3:40" pos:end="3:56"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:56">chroma_format</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:71"><decl pos:start="3:59" pos:end="3:71"><type pos:start="3:59" pos:end="3:71"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:71">bit_depth</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:5">

    <if_stmt pos:start="7:5" pos:end="35:5"><if pos:start="7:5" pos:end="35:5">if <condition pos:start="7:8" pos:end="7:27">(<expr pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:21">chroma_format</name> <operator pos:start="7:23" pos:end="7:24">==</operator> <literal type="number" pos:start="7:26" pos:end="7:26">1</literal></expr>)</condition> <block pos:start="7:29" pos:end="35:5">{<block_content pos:start="9:9" pos:end="33:9">

        <decl_stmt pos:start="9:9" pos:end="9:22"><decl pos:start="9:9" pos:end="9:21"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:21">pred_mode</name></decl>;</decl_stmt>

        <macro pos:start="11:9" pos:end="11:58"><name pos:start="11:9" pos:end="11:20">declare_func</name><argument_list pos:start="11:21" pos:end="11:58">(<argument pos:start="11:22" pos:end="11:25">void</argument>, <argument pos:start="11:28" pos:end="11:39">uint8_t *src</argument>, <argument pos:start="11:42" pos:end="11:57">ptrdiff_t stride</argument>)</argument_list></macro><empty_stmt pos:start="11:59" pos:end="11:59">;</empty_stmt>



        <for pos:start="15:9" pos:end="33:9">for <control pos:start="15:13" pos:end="15:55">(<init pos:start="15:14" pos:end="15:27"><expr pos:start="15:14" pos:end="15:26"><name pos:start="15:14" pos:end="15:22">pred_mode</name> <operator pos:start="15:24" pos:end="15:24">=</operator> <literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr>;</init> <condition pos:start="15:29" pos:end="15:42"><expr pos:start="15:29" pos:end="15:41"><name pos:start="15:29" pos:end="15:37">pred_mode</name> <operator pos:start="15:39" pos:end="15:39">&lt;</operator> <literal type="number" pos:start="15:41" pos:end="15:41">9</literal></expr>;</condition> <incr pos:start="15:44" pos:end="15:54"><expr pos:start="15:44" pos:end="15:54"><name pos:start="15:44" pos:end="15:52">pred_mode</name><operator pos:start="15:53" pos:end="15:54">++</operator></expr></incr>)</control> <block pos:start="15:57" pos:end="33:9">{<block_content pos:start="17:13" pos:end="31:13">

            <if_stmt pos:start="17:13" pos:end="31:13"><if pos:start="17:13" pos:end="31:13">if <condition pos:start="17:16" pos:end="17:101">(<expr pos:start="17:17" pos:end="17:100"><call pos:start="17:17" pos:end="17:100"><name pos:start="17:17" pos:end="17:31">check_pred_func</name><argument_list pos:start="17:32" pos:end="17:100">(<argument pos:start="17:33" pos:end="17:55"><expr pos:start="17:33" pos:end="17:55"><name pos:start="17:33" pos:end="17:55"><name pos:start="17:33" pos:end="17:33">h</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:44">pred16x16</name><index pos:start="17:45" pos:end="17:55">[<expr pos:start="17:46" pos:end="17:54"><name pos:start="17:46" pos:end="17:54">pred_mode</name></expr>]</index></name></expr></argument>, <argument pos:start="17:58" pos:end="17:64"><expr pos:start="17:58" pos:end="17:64"><literal type="string" pos:start="17:58" pos:end="17:64">"16x16"</literal></expr></argument>, <argument pos:start="17:67" pos:end="17:99"><expr pos:start="17:67" pos:end="17:99"><name pos:start="17:67" pos:end="17:99"><name pos:start="17:67" pos:end="17:81">pred16x16_modes</name><index pos:start="17:82" pos:end="17:88">[<expr pos:start="17:83" pos:end="17:87"><name pos:start="17:83" pos:end="17:87">codec</name></expr>]</index><index pos:start="17:89" pos:end="17:99">[<expr pos:start="17:90" pos:end="17:98"><name pos:start="17:90" pos:end="17:98">pred_mode</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:103" pos:end="31:13">{<block_content pos:start="19:17" pos:end="29:36">

                <expr_stmt pos:start="19:17" pos:end="19:36"><expr pos:start="19:17" pos:end="19:35"><call pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:33">randomize_buffers</name><argument_list pos:start="19:34" pos:end="19:35">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="21:17" pos:end="21:35"><expr pos:start="21:17" pos:end="21:34"><call pos:start="21:17" pos:end="21:34"><name pos:start="21:17" pos:end="21:24">call_ref</name><argument_list pos:start="21:25" pos:end="21:34">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">src0</name></expr></argument>, <argument pos:start="21:32" pos:end="21:33"><expr pos:start="21:32" pos:end="21:33"><literal type="number" pos:start="21:32" pos:end="21:33">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="23:17" pos:end="23:35"><expr pos:start="23:17" pos:end="23:34"><call pos:start="23:17" pos:end="23:34"><name pos:start="23:17" pos:end="23:24">call_new</name><argument_list pos:start="23:25" pos:end="23:34">(<argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">src1</name></expr></argument>, <argument pos:start="23:32" pos:end="23:33"><expr pos:start="23:32" pos:end="23:33"><literal type="number" pos:start="23:32" pos:end="23:33">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="25:17" pos:end="27:27"><if pos:start="25:17" pos:end="27:27">if <condition pos:start="25:20" pos:end="25:49">(<expr pos:start="25:21" pos:end="25:48"><call pos:start="25:21" pos:end="25:48"><name pos:start="25:21" pos:end="25:26">memcmp</name><argument_list pos:start="25:27" pos:end="25:48">(<argument pos:start="25:28" pos:end="25:31"><expr pos:start="25:28" pos:end="25:31"><name pos:start="25:28" pos:end="25:31">buf0</name></expr></argument>, <argument pos:start="25:34" pos:end="25:37"><expr pos:start="25:34" pos:end="25:37"><name pos:start="25:34" pos:end="25:37">buf1</name></expr></argument>, <argument pos:start="25:40" pos:end="25:47"><expr pos:start="25:40" pos:end="25:47"><name pos:start="25:40" pos:end="25:47">BUF_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:21" pos:end="27:27"><block_content pos:start="27:21" pos:end="27:27">

                    <expr_stmt pos:start="27:21" pos:end="27:27"><expr pos:start="27:21" pos:end="27:26"><call pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:24">fail</name><argument_list pos:start="27:25" pos:end="27:26">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:36"><expr pos:start="29:17" pos:end="29:35"><call pos:start="29:17" pos:end="29:35"><name pos:start="29:17" pos:end="29:25">bench_new</name><argument_list pos:start="29:26" pos:end="29:35">(<argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:30">src1</name></expr></argument>, <argument pos:start="29:33" pos:end="29:34"><expr pos:start="29:33" pos:end="29:34"><literal type="number" pos:start="29:33" pos:end="29:34">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
