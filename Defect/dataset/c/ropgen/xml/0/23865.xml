<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23865.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">gxf_probe</name><parameter_list pos:start="1:21" pos:end="1:36">(<parameter pos:start="1:22" pos:end="1:35"><decl pos:start="1:22" pos:end="1:35"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">AVProbeData</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">p</name></decl></parameter>)</parameter_list> <block pos:start="1:38" pos:end="19:1">{<block_content pos:start="3:5" pos:end="17:13">

    <decl_stmt pos:start="3:5" pos:end="3:61"><decl pos:start="3:5" pos:end="3:60"><type pos:start="3:5" pos:end="3:24"><specifier pos:start="3:5" pos:end="3:10">static</specifier> <specifier pos:start="3:12" pos:end="3:16">const</specifier> <name pos:start="3:18" pos:end="3:24">uint8_t</name></type> <name pos:start="3:26" pos:end="3:36"><name pos:start="3:26" pos:end="3:34">startcode</name><index pos:start="3:35" pos:end="3:36">[]</index></name> <init pos:start="3:38" pos:end="3:60">= <expr pos:start="3:40" pos:end="3:60"><block pos:start="3:40" pos:end="3:60">{<expr pos:start="3:41" pos:end="3:41"><literal type="number" pos:start="3:41" pos:end="3:41">0</literal></expr>, <expr pos:start="3:44" pos:end="3:44"><literal type="number" pos:start="3:44" pos:end="3:44">0</literal></expr>, <expr pos:start="3:47" pos:end="3:47"><literal type="number" pos:start="3:47" pos:end="3:47">0</literal></expr>, <expr pos:start="3:50" pos:end="3:50"><literal type="number" pos:start="3:50" pos:end="3:50">0</literal></expr>, <expr pos:start="3:53" pos:end="3:53"><literal type="number" pos:start="3:53" pos:end="3:53">1</literal></expr>, <expr pos:start="3:56" pos:end="3:59"><literal type="number" pos:start="3:56" pos:end="3:59">0xbc</literal></expr>}</block></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="3:63" pos:end="3:86">// start with map packet</comment>

    <decl_stmt pos:start="5:5" pos:end="5:62"><decl pos:start="5:5" pos:end="5:61"><type pos:start="5:5" pos:end="5:24"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:24">uint8_t</name></type> <name pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:32">endcode</name><index pos:start="5:33" pos:end="5:34">[]</index></name> <init pos:start="5:36" pos:end="5:61">= <expr pos:start="5:38" pos:end="5:61"><block pos:start="5:38" pos:end="5:61">{<expr pos:start="5:39" pos:end="5:39"><literal type="number" pos:start="5:39" pos:end="5:39">0</literal></expr>, <expr pos:start="5:42" pos:end="5:42"><literal type="number" pos:start="5:42" pos:end="5:42">0</literal></expr>, <expr pos:start="5:45" pos:end="5:45"><literal type="number" pos:start="5:45" pos:end="5:45">0</literal></expr>, <expr pos:start="5:48" pos:end="5:48"><literal type="number" pos:start="5:48" pos:end="5:48">0</literal></expr>, <expr pos:start="5:51" pos:end="5:54"><literal type="number" pos:start="5:51" pos:end="5:54">0xe1</literal></expr>, <expr pos:start="5:57" pos:end="5:60"><literal type="number" pos:start="5:57" pos:end="5:60">0xe2</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="9:17"><if pos:start="7:5" pos:end="9:17">if <condition pos:start="7:8" pos:end="7:25">(<expr pos:start="7:9" pos:end="7:24"><name pos:start="7:9" pos:end="7:19"><name pos:start="7:9" pos:end="7:9">p</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:19">buf_size</name></name> <operator pos:start="7:21" pos:end="7:21">&lt;</operator> <literal type="number" pos:start="7:23" pos:end="7:24">16</literal></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:17"><block_content pos:start="9:9" pos:end="9:17">

        <return pos:start="9:9" pos:end="9:17">return <expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="11:5" pos:end="15:33"><if pos:start="11:5" pos:end="15:33">if <condition pos:start="11:8" pos:end="13:73">(<expr pos:start="11:9" pos:end="13:72"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:53"><name pos:start="11:10" pos:end="11:15">memcmp</name><argument_list pos:start="11:16" pos:end="11:53">(<argument pos:start="11:17" pos:end="11:22"><expr pos:start="11:17" pos:end="11:22"><name pos:start="11:17" pos:end="11:22"><name pos:start="11:17" pos:end="11:17">p</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:22">buf</name></name></expr></argument>, <argument pos:start="11:25" pos:end="11:33"><expr pos:start="11:25" pos:end="11:33"><name pos:start="11:25" pos:end="11:33">startcode</name></expr></argument>, <argument pos:start="11:36" pos:end="11:52"><expr pos:start="11:36" pos:end="11:52"><sizeof pos:start="11:36" pos:end="11:52">sizeof<argument_list pos:start="11:42" pos:end="11:52">(<argument pos:start="11:43" pos:end="11:51"><expr pos:start="11:43" pos:end="11:51"><name pos:start="11:43" pos:end="11:51">startcode</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="11:55" pos:end="11:56">&amp;&amp;</operator>

        <operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:72"><name pos:start="13:10" pos:end="13:15">memcmp</name><argument_list pos:start="13:16" pos:end="13:72">(<argument pos:start="13:17" pos:end="13:45"><expr pos:start="13:17" pos:end="13:45"><operator pos:start="13:17" pos:end="13:17">&amp;</operator><name pos:start="13:18" pos:end="13:45"><name pos:start="13:18" pos:end="13:18">p</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:23">buf</name><index pos:start="13:24" pos:end="13:45">[<expr pos:start="13:25" pos:end="13:44"><literal type="number" pos:start="13:25" pos:end="13:28">16</literal> <operator pos:start="13:28" pos:end="13:28">-</operator> <sizeof pos:start="13:30" pos:end="13:44">sizeof<argument_list pos:start="13:36" pos:end="13:44">(<argument pos:start="13:37" pos:end="13:43"><expr pos:start="13:37" pos:end="13:43"><name pos:start="13:37" pos:end="13:43">endcode</name></expr></argument>)</argument_list></sizeof></expr>]</index></name></expr></argument>, <argument pos:start="13:48" pos:end="13:54"><expr pos:start="13:48" pos:end="13:54"><name pos:start="13:48" pos:end="13:54">endcode</name></expr></argument>, <argument pos:start="13:57" pos:end="13:71"><expr pos:start="13:57" pos:end="13:71"><sizeof pos:start="13:57" pos:end="13:71">sizeof<argument_list pos:start="13:63" pos:end="13:71">(<argument pos:start="13:64" pos:end="13:70"><expr pos:start="13:64" pos:end="13:70"><name pos:start="13:64" pos:end="13:70">endcode</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:33"><block_content pos:start="15:9" pos:end="15:33">

        <return pos:start="15:9" pos:end="15:33">return <expr pos:start="15:16" pos:end="15:32"><name pos:start="15:16" pos:end="15:32">AVPROBE_SCORE_MAX</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="17:5" pos:end="17:13">return <expr pos:start="17:12" pos:end="17:12"><literal type="number" pos:start="17:12" pos:end="17:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
