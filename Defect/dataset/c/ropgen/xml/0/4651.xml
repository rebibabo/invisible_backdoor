<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4651.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:36">ff_avfilter_graph_config_formats</name><parameter_list pos:start="1:37" pos:end="1:76">(<parameter pos:start="1:38" pos:end="1:57"><decl pos:start="1:38" pos:end="1:57"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:50">AVFilterGraph</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">graph</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:75"><decl pos:start="1:60" pos:end="1:75"><type pos:start="1:60" pos:end="1:75"><name pos:start="1:60" pos:end="1:66">AVClass</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:75">log_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:72">/* find supported formats from sub-filters, and merge along links */</comment>

    <if_stmt pos:start="11:5" pos:end="13:19"><if pos:start="11:5" pos:end="13:19">if <condition pos:start="11:8" pos:end="11:50">(<expr pos:start="11:9" pos:end="11:49"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:12">ret</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <call pos:start="11:16" pos:end="11:44"><name pos:start="11:16" pos:end="11:28">query_formats</name><argument_list pos:start="11:29" pos:end="11:44">(<argument pos:start="11:30" pos:end="11:34"><expr pos:start="11:30" pos:end="11:34"><name pos:start="11:30" pos:end="11:34">graph</name></expr></argument>, <argument pos:start="11:37" pos:end="11:43"><expr pos:start="11:37" pos:end="11:43"><name pos:start="11:37" pos:end="11:43">log_ctx</name></expr></argument>)</argument_list></call><operator pos:start="11:45" pos:end="11:45">)</operator> <operator pos:start="11:47" pos:end="11:47">&lt;</operator> <literal type="number" pos:start="11:49" pos:end="11:49">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:19"><block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="17:5" pos:end="19:69">/* Once everything is merged, it's possible that we'll still have

     * multiple valid media format choices. We pick the first one. */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><call pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:16">pick_formats</name><argument_list pos:start="21:17" pos:end="21:23">(<argument pos:start="21:18" pos:end="21:22"><expr pos:start="21:18" pos:end="21:22"><name pos:start="21:18" pos:end="21:22">graph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
