<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1171.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">inc_refcounts</name><parameter_list pos:start="1:26" pos:end="7:55">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:50"><decl pos:start="3:27" pos:end="3:50"><type pos:start="3:27" pos:end="3:50"><name pos:start="3:27" pos:end="3:34">uint16_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:50">refcount_table</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:49"><decl pos:start="5:27" pos:end="5:49"><type pos:start="5:27" pos:end="5:49"><name pos:start="5:27" pos:end="5:29">int</name></type> <name pos:start="5:31" pos:end="5:49">refcount_table_size</name></decl></parameter>,

                          <parameter pos:start="7:27" pos:end="7:40"><decl pos:start="7:27" pos:end="7:40"><type pos:start="7:27" pos:end="7:40"><name pos:start="7:27" pos:end="7:33">int64_t</name></type> <name pos:start="7:35" pos:end="7:40">offset</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:54"><decl pos:start="7:43" pos:end="7:54"><type pos:start="7:43" pos:end="7:54"><name pos:start="7:43" pos:end="7:49">int64_t</name></type> <name pos:start="7:51" pos:end="7:54">size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="55:1">{<block_content pos:start="11:5" pos:end="53:5">

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">BDRVQcowState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">s</name> <init pos:start="11:22" pos:end="11:33">= <expr pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:25">bs</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:17">start</name></decl>, <decl pos:start="13:20" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:20" pos:end="13:23">last</name></decl>, <decl pos:start="13:26" pos:end="13:39"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:26" pos:end="13:39">cluster_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">k</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:15"><if pos:start="19:5" pos:end="21:15">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:12">size</name> <operator pos:start="19:14" pos:end="19:15">&lt;=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:15"><block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:44"><expr pos:start="25:5" pos:end="25:43"><name pos:start="25:5" pos:end="25:9">start</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:18">offset</name> <operator pos:start="25:20" pos:end="25:20">&amp;</operator> <operator pos:start="25:22" pos:end="25:22">~</operator><operator pos:start="25:23" pos:end="25:23">(</operator><name pos:start="25:24" pos:end="25:38"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:38">cluster_size</name></name> <operator pos:start="25:40" pos:end="25:40">-</operator> <literal type="number" pos:start="25:42" pos:end="25:42">1</literal><operator pos:start="25:43" pos:end="25:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:56"><expr pos:start="27:5" pos:end="27:55"><name pos:start="27:5" pos:end="27:8">last</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <operator pos:start="27:12" pos:end="27:12">(</operator><name pos:start="27:13" pos:end="27:18">offset</name> <operator pos:start="27:20" pos:end="27:20">+</operator> <name pos:start="27:22" pos:end="27:25">size</name> <operator pos:start="27:27" pos:end="27:27">-</operator> <literal type="number" pos:start="27:29" pos:end="27:29">1</literal><operator pos:start="27:30" pos:end="27:30">)</operator> <operator pos:start="27:32" pos:end="27:32">&amp;</operator> <operator pos:start="27:34" pos:end="27:34">~</operator><operator pos:start="27:35" pos:end="27:35">(</operator><name pos:start="27:36" pos:end="27:50"><name pos:start="27:36" pos:end="27:36">s</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:50">cluster_size</name></name> <operator pos:start="27:52" pos:end="27:52">-</operator> <literal type="number" pos:start="27:54" pos:end="27:54">1</literal><operator pos:start="27:55" pos:end="27:55">)</operator></expr>;</expr_stmt>

    <for pos:start="29:5" pos:end="53:5">for<control pos:start="29:8" pos:end="31:42">(<init pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:22">cluster_offset</name> <operator pos:start="29:24" pos:end="29:24">=</operator> <name pos:start="29:26" pos:end="29:30">start</name></expr>;</init> <condition pos:start="29:33" pos:end="29:55"><expr pos:start="29:33" pos:end="29:54"><name pos:start="29:33" pos:end="29:46">cluster_offset</name> <operator pos:start="29:48" pos:end="29:49">&lt;=</operator> <name pos:start="29:51" pos:end="29:54">last</name></expr>;</condition>

        <incr pos:start="31:9" pos:end="31:41"><expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:22">cluster_offset</name> <operator pos:start="31:24" pos:end="31:25">+=</operator> <name pos:start="31:27" pos:end="31:41"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:41">cluster_size</name></name></expr></incr>)</control> <block pos:start="31:44" pos:end="53:5">{<block_content pos:start="33:9" pos:end="51:9">

        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:9">k</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <name pos:start="33:13" pos:end="33:26">cluster_offset</name> <operator pos:start="33:28" pos:end="33:29">&gt;&gt;</operator> <name pos:start="33:31" pos:end="33:45"><name pos:start="33:31" pos:end="33:31">s</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:45">cluster_bits</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="51:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:46">(<expr pos:start="35:13" pos:end="35:45"><name pos:start="35:13" pos:end="35:13">k</name> <operator pos:start="35:15" pos:end="35:15">&lt;</operator> <literal type="number" pos:start="35:17" pos:end="35:17">0</literal> <operator pos:start="35:19" pos:end="35:20">||</operator> <name pos:start="35:22" pos:end="35:22">k</name> <operator pos:start="35:24" pos:end="35:25">&gt;=</operator> <name pos:start="35:27" pos:end="35:45">refcount_table_size</name></expr>)</condition> <block pos:start="35:48" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:32">

            <expr_stmt pos:start="37:13" pos:end="39:32"><expr pos:start="37:13" pos:end="39:31"><call pos:start="37:13" pos:end="39:31"><name pos:start="37:13" pos:end="37:19">fprintf</name><argument_list pos:start="37:20" pos:end="39:31">(<argument pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:26">stderr</name></expr></argument>, <argument pos:start="37:29" pos:end="37:75"><expr pos:start="37:29" pos:end="37:75"><literal type="string" pos:start="37:29" pos:end="37:63">"ERROR: invalid cluster offset=0x%"</literal> <name pos:start="37:65" pos:end="37:70">PRIx64</name> <literal type="string" pos:start="37:72" pos:end="37:75">"\n"</literal></expr></argument>,

                <argument pos:start="39:17" pos:end="39:30"><expr pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:30">cluster_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="51:9">else <block pos:start="41:16" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:13">

            <if_stmt pos:start="43:13" pos:end="49:13"><if pos:start="43:13" pos:end="49:13">if <condition pos:start="43:16" pos:end="43:41">(<expr pos:start="43:17" pos:end="43:40"><operator pos:start="43:17" pos:end="43:18">++</operator><name pos:start="43:19" pos:end="43:35"><name pos:start="43:19" pos:end="43:32">refcount_table</name><index pos:start="43:33" pos:end="43:35">[<expr pos:start="43:34" pos:end="43:34"><name pos:start="43:34" pos:end="43:34">k</name></expr>]</index></name> <operator pos:start="43:37" pos:end="43:38">==</operator> <literal type="number" pos:start="43:40" pos:end="43:40">0</literal></expr>)</condition> <block pos:start="43:43" pos:end="49:13">{<block_content pos:start="45:17" pos:end="47:42">

                <expr_stmt pos:start="45:17" pos:end="47:42"><expr pos:start="45:17" pos:end="47:41"><call pos:start="45:17" pos:end="47:41"><name pos:start="45:17" pos:end="45:23">fprintf</name><argument_list pos:start="45:24" pos:end="47:41">(<argument pos:start="45:25" pos:end="45:30"><expr pos:start="45:25" pos:end="45:30"><name pos:start="45:25" pos:end="45:30">stderr</name></expr></argument>, <argument pos:start="45:33" pos:end="47:24"><expr pos:start="45:33" pos:end="47:24"><literal type="string" pos:start="45:33" pos:end="45:68">"ERROR: overflow cluster offset=0x%"</literal> <name pos:start="45:70" pos:end="45:75">PRIx64</name>

                    <literal type="string" pos:start="47:21" pos:end="47:24">"\n"</literal></expr></argument>, <argument pos:start="47:27" pos:end="47:40"><expr pos:start="47:27" pos:end="47:40"><name pos:start="47:27" pos:end="47:40">cluster_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
