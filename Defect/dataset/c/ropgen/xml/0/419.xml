<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/419.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">cb_hmp_change_bdrv_pwd</name><parameter_list pos:start="1:35" pos:end="3:48">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:42">Monitor</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">mon</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:69"><decl pos:start="1:50" pos:end="1:69"><type pos:start="1:50" pos:end="1:69"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:69">password</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:47"><decl pos:start="3:36" pos:end="3:47"><type pos:start="3:36" pos:end="3:47"><name pos:start="3:36" pos:end="3:39">void</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:47">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:33">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:25">encryption_err</name> <init pos:start="7:27" pos:end="7:34">= <expr pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:22">device</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:55"><expr pos:start="15:5" pos:end="15:54"><name pos:start="15:5" pos:end="15:10">device</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:54"><name pos:start="15:14" pos:end="15:28">error_get_field</name><argument_list pos:start="15:29" pos:end="15:54">(<argument pos:start="15:30" pos:end="15:43"><expr pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:43">encryption_err</name></expr></argument>, <argument pos:start="15:46" pos:end="15:53"><expr pos:start="15:46" pos:end="15:53"><literal type="string" pos:start="15:46" pos:end="15:53">"device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><call pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:20">qmp_block_passwd</name><argument_list pos:start="19:21" pos:end="19:44">(<argument pos:start="19:22" pos:end="19:27"><expr pos:start="19:22" pos:end="19:27"><name pos:start="19:22" pos:end="19:27">device</name></expr></argument>, <argument pos:start="19:30" pos:end="19:37"><expr pos:start="19:30" pos:end="19:37"><name pos:start="19:30" pos:end="19:37">password</name></expr></argument>, <argument pos:start="19:40" pos:end="19:43"><expr pos:start="19:40" pos:end="19:43"><operator pos:start="19:40" pos:end="19:40">&amp;</operator><name pos:start="19:41" pos:end="19:43">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><call pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:20">hmp_handle_error</name><argument_list pos:start="21:21" pos:end="21:31">(<argument pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:24">mon</name></expr></argument>, <argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:30">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><call pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:14">error_free</name><argument_list pos:start="23:15" pos:end="23:30">(<argument pos:start="23:16" pos:end="23:29"><expr pos:start="23:16" pos:end="23:29"><name pos:start="23:16" pos:end="23:29">encryption_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><call pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:24">monitor_read_command</name><argument_list pos:start="27:25" pos:end="27:32">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">mon</name></expr></argument>, <argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
