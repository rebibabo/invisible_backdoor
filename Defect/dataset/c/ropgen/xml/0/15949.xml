<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15949.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">tcp_chr_read</name><parameter_list pos:start="1:25" pos:end="1:38">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:31"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name> <init pos:start="5:26" pos:end="5:33">= <expr pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">TCPCharDriver</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:34">= <expr pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:26">chr</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:21"><name pos:start="9:13" pos:end="9:15">buf</name><index pos:start="9:16" pos:end="9:21">[<expr pos:start="9:17" pos:end="9:20"><literal type="number" pos:start="9:17" pos:end="9:20">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>, <decl pos:start="11:14" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:17">size</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:42">(<expr pos:start="15:9" pos:end="15:41"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:21"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:21">connected</name></name> <operator pos:start="15:23" pos:end="15:24">||</operator> <name pos:start="15:26" pos:end="15:36"><name pos:start="15:26" pos:end="15:26">s</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:36">max_size</name></name> <operator pos:start="15:38" pos:end="15:39">&lt;=</operator> <literal type="number" pos:start="15:41" pos:end="15:41">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:7">len</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <sizeof pos:start="19:11" pos:end="19:21">sizeof<argument_list pos:start="19:17" pos:end="19:21">(<argument pos:start="19:18" pos:end="19:20"><expr pos:start="19:18" pos:end="19:20"><name pos:start="19:18" pos:end="19:20">buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:26"><if pos:start="21:5" pos:end="23:26">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:11">len</name> <operator pos:start="21:13" pos:end="21:13">&gt;</operator> <name pos:start="21:15" pos:end="21:25"><name pos:start="21:15" pos:end="21:15">s</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:25">max_size</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:26"><block_content pos:start="23:9" pos:end="23:26">

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:11">len</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:25"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:25">max_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:8">size</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:46"><name pos:start="25:12" pos:end="25:23">tcp_chr_recv</name><argument_list pos:start="25:24" pos:end="25:46">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">chr</name></expr></argument>, <argument pos:start="25:30" pos:end="25:40"><expr pos:start="25:30" pos:end="25:40"><operator pos:start="25:30" pos:end="25:30">(</operator><name pos:start="25:31" pos:end="25:34">void</name> <operator pos:start="25:36" pos:end="25:36">*</operator><operator pos:start="25:37" pos:end="25:37">)</operator><name pos:start="25:38" pos:end="25:40">buf</name></expr></argument>, <argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="65:5"><if pos:start="27:5" pos:end="47:5">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">size</name> <operator pos:start="27:14" pos:end="27:15">==</operator> <literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr>)</condition> <block pos:start="27:20" pos:end="47:5">{<block_content pos:start="31:9" pos:end="45:46">

        <comment type="block" pos:start="29:9" pos:end="29:31">/* connection closed */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:20">connected</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:30">(<expr pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:24">listen_fd</name></name> <operator pos:start="33:26" pos:end="33:27">&gt;=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>)</condition> <block pos:start="33:32" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:73">

            <expr_stmt pos:start="35:13" pos:end="35:73"><expr pos:start="35:13" pos:end="35:72"><call pos:start="35:13" pos:end="35:72"><name pos:start="35:13" pos:end="35:31">qemu_set_fd_handler</name><argument_list pos:start="35:32" pos:end="35:72">(<argument pos:start="35:33" pos:end="35:44"><expr pos:start="35:33" pos:end="35:44"><name pos:start="35:33" pos:end="35:44"><name pos:start="35:33" pos:end="35:33">s</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:44">listen_fd</name></name></expr></argument>, <argument pos:start="35:47" pos:end="35:60"><expr pos:start="35:47" pos:end="35:60"><name pos:start="35:47" pos:end="35:60">tcp_chr_accept</name></expr></argument>, <argument pos:start="35:63" pos:end="35:66"><expr pos:start="35:63" pos:end="35:66"><name pos:start="35:63" pos:end="35:66">NULL</name></expr></argument>, <argument pos:start="35:69" pos:end="35:71"><expr pos:start="35:69" pos:end="35:71"><name pos:start="35:69" pos:end="35:71">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:53"><expr pos:start="39:9" pos:end="39:52"><call pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:27">qemu_set_fd_handler</name><argument_list pos:start="39:28" pos:end="39:52">(<argument pos:start="39:29" pos:end="39:33"><expr pos:start="39:29" pos:end="39:33"><name pos:start="39:29" pos:end="39:33"><name pos:start="39:29" pos:end="39:29">s</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:33">fd</name></name></expr></argument>, <argument pos:start="39:36" pos:end="39:39"><expr pos:start="39:36" pos:end="39:39"><name pos:start="39:36" pos:end="39:39">NULL</name></expr></argument>, <argument pos:start="39:42" pos:end="39:45"><expr pos:start="39:42" pos:end="39:45"><name pos:start="39:42" pos:end="39:45">NULL</name></expr></argument>, <argument pos:start="39:48" pos:end="39:51"><expr pos:start="39:48" pos:end="39:51"><name pos:start="39:48" pos:end="39:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:27"><expr pos:start="41:9" pos:end="41:26"><call pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:19">closesocket</name><argument_list pos:start="41:20" pos:end="41:26">(<argument pos:start="41:21" pos:end="41:25"><expr pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:25">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:19"><expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:13">fd</name></name> <operator pos:start="43:15" pos:end="43:15">=</operator> <operator pos:start="43:17" pos:end="43:17">-</operator><literal type="number" pos:start="43:18" pos:end="43:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:46"><expr pos:start="45:9" pos:end="45:45"><call pos:start="45:9" pos:end="45:45"><name pos:start="45:9" pos:end="45:22">qemu_chr_event</name><argument_list pos:start="45:23" pos:end="45:45">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">chr</name></expr></argument>, <argument pos:start="45:29" pos:end="45:44"><expr pos:start="45:29" pos:end="45:44"><name pos:start="45:29" pos:end="45:44">CHR_EVENT_CLOSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="47:7" pos:end="65:5">else if <condition pos:start="47:15" pos:end="47:24">(<expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:19">size</name> <operator pos:start="47:21" pos:end="47:21">&gt;</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>)</condition> <block pos:start="47:26" pos:end="65:5">{<block_content pos:start="49:9" pos:end="63:9">

        <if_stmt pos:start="49:9" pos:end="51:58"><if pos:start="49:9" pos:end="51:58">if <condition pos:start="49:12" pos:end="49:28">(<expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:27">do_telnetopt</name></name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:58"><block_content pos:start="51:13" pos:end="51:58">

            <expr_stmt pos:start="51:13" pos:end="51:58"><expr pos:start="51:13" pos:end="51:57"><call pos:start="51:13" pos:end="51:57"><name pos:start="51:13" pos:end="51:37">tcp_chr_process_IAC_bytes</name><argument_list pos:start="51:38" pos:end="51:57">(<argument pos:start="51:39" pos:end="51:41"><expr pos:start="51:39" pos:end="51:41"><name pos:start="51:39" pos:end="51:41">chr</name></expr></argument>, <argument pos:start="51:44" pos:end="51:44"><expr pos:start="51:44" pos:end="51:44"><name pos:start="51:44" pos:end="51:44">s</name></expr></argument>, <argument pos:start="51:47" pos:end="51:49"><expr pos:start="51:47" pos:end="51:49"><name pos:start="51:47" pos:end="51:49">buf</name></expr></argument>, <argument pos:start="51:52" pos:end="51:56"><expr pos:start="51:52" pos:end="51:56"><operator pos:start="51:52" pos:end="51:52">&amp;</operator><name pos:start="51:53" pos:end="51:56">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="55:42"><if pos:start="53:9" pos:end="55:42">if <condition pos:start="53:12" pos:end="53:21">(<expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:16">size</name> <operator pos:start="53:18" pos:end="53:18">&gt;</operator> <literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:42"><block_content pos:start="55:13" pos:end="55:42">

            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><call pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:25">qemu_chr_read</name><argument_list pos:start="55:26" pos:end="55:41">(<argument pos:start="55:27" pos:end="55:29"><expr pos:start="55:27" pos:end="55:29"><name pos:start="55:27" pos:end="55:29">chr</name></expr></argument>, <argument pos:start="55:32" pos:end="55:34"><expr pos:start="55:32" pos:end="55:34"><name pos:start="55:32" pos:end="55:34">buf</name></expr></argument>, <argument pos:start="55:37" pos:end="55:40"><expr pos:start="55:37" pos:end="55:40"><name pos:start="55:37" pos:end="55:40">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:27">(<expr pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:20">msgfd</name></name> <operator pos:start="57:22" pos:end="57:23">!=</operator> <operator pos:start="57:25" pos:end="57:25">-</operator><literal type="number" pos:start="57:26" pos:end="57:26">1</literal></expr>)</condition> <block pos:start="57:29" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:26">

            <expr_stmt pos:start="59:13" pos:end="59:28"><expr pos:start="59:13" pos:end="59:27"><call pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:17">close</name><argument_list pos:start="59:18" pos:end="59:27">(<argument pos:start="59:19" pos:end="59:26"><expr pos:start="59:19" pos:end="59:26"><name pos:start="59:19" pos:end="59:26"><name pos:start="59:19" pos:end="59:19">s</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:26">msgfd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:26"><expr pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:20">msgfd</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <operator pos:start="61:24" pos:end="61:24">-</operator><literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
