<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11025.c" pos:tabs="8"><function pos:start="1:1" pos:end="315:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">video_refresh</name><parameter_list pos:start="1:26" pos:end="1:39">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:32"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="315:1">{<block_content pos:start="5:5" pos:end="313:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VideoState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">is</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VideoPicture</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">vp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type> <name pos:start="9:12" pos:end="9:15">time</name></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">SubPicture</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:18">sp</name></decl>, <decl pos:start="13:21" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:24">sp2</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:39"><if pos:start="17:5" pos:end="19:39">if <condition pos:start="17:8" pos:end="17:90">(<expr pos:start="17:9" pos:end="17:89"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:19"><name pos:start="17:10" pos:end="17:11">is</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:19">paused</name></name> <operator pos:start="17:21" pos:end="17:22">&amp;&amp;</operator> <call pos:start="17:24" pos:end="17:47"><name pos:start="17:24" pos:end="17:43">get_master_sync_type</name><argument_list pos:start="17:44" pos:end="17:47">(<argument pos:start="17:45" pos:end="17:46"><expr pos:start="17:45" pos:end="17:46"><name pos:start="17:45" pos:end="17:46">is</name></expr></argument>)</argument_list></call> <operator pos:start="17:49" pos:end="17:50">==</operator> <name pos:start="17:52" pos:end="17:73">AV_SYNC_EXTERNAL_CLOCK</name> <operator pos:start="17:75" pos:end="17:76">&amp;&amp;</operator> <name pos:start="17:78" pos:end="17:89"><name pos:start="17:78" pos:end="17:79">is</name><operator pos:start="17:80" pos:end="17:81">-&gt;</operator><name pos:start="17:82" pos:end="17:89">realtime</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:39"><block_content pos:start="19:9" pos:end="19:39">

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><call pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:34">check_external_clock_speed</name><argument_list pos:start="19:35" pos:end="19:38">(<argument pos:start="19:36" pos:end="19:37"><expr pos:start="19:36" pos:end="19:37"><name pos:start="19:36" pos:end="19:37">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="25:26"><if pos:start="23:5" pos:end="25:26">if <condition pos:start="23:8" pos:end="23:77">(<expr pos:start="23:9" pos:end="23:76"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:24">display_disable</name> <operator pos:start="23:26" pos:end="23:27">&amp;&amp;</operator> <name pos:start="23:29" pos:end="23:41"><name pos:start="23:29" pos:end="23:30">is</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:41">show_mode</name></name> <operator pos:start="23:43" pos:end="23:44">!=</operator> <name pos:start="23:46" pos:end="23:60">SHOW_MODE_VIDEO</name> <operator pos:start="23:62" pos:end="23:63">&amp;&amp;</operator> <name pos:start="23:65" pos:end="23:76"><name pos:start="23:65" pos:end="23:66">is</name><operator pos:start="23:67" pos:end="23:68">-&gt;</operator><name pos:start="23:69" pos:end="23:76">audio_st</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:26"><block_content pos:start="25:9" pos:end="25:26">

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><call pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:21">video_display</name><argument_list pos:start="25:22" pos:end="25:25">(<argument pos:start="25:23" pos:end="25:24"><expr pos:start="25:23" pos:end="25:24"><name pos:start="25:23" pos:end="25:24">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="245:5"><if pos:start="29:5" pos:end="245:5">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:10">is</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:20">video_st</name></name></expr>)</condition> <block pos:start="29:23" pos:end="245:5">{<block_content pos:start="31:9" pos:end="243:9">

        <if_stmt pos:start="31:9" pos:end="33:35"><if pos:start="31:9" pos:end="33:35">if <condition pos:start="31:12" pos:end="31:30">(<expr pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:14">is</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:29">force_refresh</name></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:35"><block_content pos:start="33:13" pos:end="33:35">

            <expr_stmt pos:start="33:13" pos:end="33:35"><expr pos:start="33:13" pos:end="33:34"><call pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:30">pictq_prev_picture</name><argument_list pos:start="33:31" pos:end="33:34">(<argument pos:start="33:32" pos:end="33:33"><expr pos:start="33:32" pos:end="33:33"><name pos:start="33:32" pos:end="33:33">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<label pos:start="35:1" pos:end="35:6"><name pos:start="35:1" pos:end="35:5">retry</name>:</label>

        <if_stmt pos:start="37:9" pos:end="243:9"><if pos:start="37:9" pos:end="53:9">if <condition pos:start="37:12" pos:end="37:32">(<expr pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:14">is</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:26">pictq_size</name></name> <operator pos:start="37:28" pos:end="37:29">==</operator> <literal type="number" pos:start="37:31" pos:end="37:31">0</literal></expr>)</condition> <block pos:start="37:34" pos:end="53:9">{<block_content pos:start="39:13" pos:end="49:45">

            <expr_stmt pos:start="39:13" pos:end="39:43"><expr pos:start="39:13" pos:end="39:42"><call pos:start="39:13" pos:end="39:42"><name pos:start="39:13" pos:end="39:25">SDL_LockMutex</name><argument_list pos:start="39:26" pos:end="39:42">(<argument pos:start="39:27" pos:end="39:41"><expr pos:start="39:27" pos:end="39:41"><name pos:start="39:27" pos:end="39:41"><name pos:start="39:27" pos:end="39:28">is</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:41">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="47:13"><if pos:start="41:13" pos:end="47:13">if <condition pos:start="41:16" pos:end="41:112">(<expr pos:start="41:17" pos:end="41:111"><name pos:start="41:17" pos:end="41:42"><name pos:start="41:17" pos:end="41:18">is</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:42">frame_last_dropped_pts</name></name> <operator pos:start="41:44" pos:end="41:45">!=</operator> <name pos:start="41:47" pos:end="41:60">AV_NOPTS_VALUE</name> <operator pos:start="41:62" pos:end="41:63">&amp;&amp;</operator> <name pos:start="41:65" pos:end="41:90"><name pos:start="41:65" pos:end="41:66">is</name><operator pos:start="41:67" pos:end="41:68">-&gt;</operator><name pos:start="41:69" pos:end="41:90">frame_last_dropped_pts</name></name> <operator pos:start="41:92" pos:end="41:92">&gt;</operator> <name pos:start="41:94" pos:end="41:111"><name pos:start="41:94" pos:end="41:95">is</name><operator pos:start="41:96" pos:end="41:97">-&gt;</operator><name pos:start="41:98" pos:end="41:111">frame_last_pts</name></name></expr>)</condition> <block pos:start="41:114" pos:end="47:13">{<block_content pos:start="43:17" pos:end="45:60">

                <expr_stmt pos:start="43:17" pos:end="43:96"><expr pos:start="43:17" pos:end="43:95"><call pos:start="43:17" pos:end="43:95"><name pos:start="43:17" pos:end="43:32">update_video_pts</name><argument_list pos:start="43:33" pos:end="43:95">(<argument pos:start="43:34" pos:end="43:35"><expr pos:start="43:34" pos:end="43:35"><name pos:start="43:34" pos:end="43:35">is</name></expr></argument>, <argument pos:start="43:38" pos:end="43:63"><expr pos:start="43:38" pos:end="43:63"><name pos:start="43:38" pos:end="43:63"><name pos:start="43:38" pos:end="43:39">is</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:63">frame_last_dropped_pts</name></name></expr></argument>, <argument pos:start="43:66" pos:end="43:91"><expr pos:start="43:66" pos:end="43:91"><name pos:start="43:66" pos:end="43:91"><name pos:start="43:66" pos:end="43:67">is</name><operator pos:start="43:68" pos:end="43:69">-&gt;</operator><name pos:start="43:70" pos:end="43:91">frame_last_dropped_pos</name></name></expr></argument>, <argument pos:start="43:94" pos:end="43:94"><expr pos:start="43:94" pos:end="43:94"><literal type="number" pos:start="43:94" pos:end="43:94">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:60"><expr pos:start="45:17" pos:end="45:59"><name pos:start="45:17" pos:end="45:42"><name pos:start="45:17" pos:end="45:18">is</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:42">frame_last_dropped_pts</name></name> <operator pos:start="45:44" pos:end="45:44">=</operator> <name pos:start="45:46" pos:end="45:59">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:45"><expr pos:start="49:13" pos:end="49:44"><call pos:start="49:13" pos:end="49:44"><name pos:start="49:13" pos:end="49:27">SDL_UnlockMutex</name><argument_list pos:start="49:28" pos:end="49:44">(<argument pos:start="49:29" pos:end="49:43"><expr pos:start="49:29" pos:end="49:43"><name pos:start="49:29" pos:end="49:43"><name pos:start="49:29" pos:end="49:30">is</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:43">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="51:13" pos:end="51:64">// nothing to do, no picture to display in the queue</comment>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="243:9">else <block pos:start="53:16" pos:end="243:9">{<block_content pos:start="55:13" pos:end="241:40">

            <decl_stmt pos:start="55:13" pos:end="55:50"><decl pos:start="55:13" pos:end="55:32"><type pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:18">double</name></type> <name pos:start="55:20" pos:end="55:32">last_duration</name></decl>, <decl pos:start="55:35" pos:end="55:42"><type ref="prev" pos:start="55:13" pos:end="55:18"/><name pos:start="55:35" pos:end="55:42">duration</name></decl>, <decl pos:start="55:45" pos:end="55:49"><type ref="prev" pos:start="55:13" pos:end="55:18"/><name pos:start="55:45" pos:end="55:49">delay</name></decl>;</decl_stmt>

            <comment type="block" pos:start="57:13" pos:end="57:37">/* dequeue the picture */</comment>

            <expr_stmt pos:start="59:13" pos:end="59:46"><expr pos:start="59:13" pos:end="59:45"><name pos:start="59:13" pos:end="59:14">vp</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <operator pos:start="59:18" pos:end="59:18">&amp;</operator><name pos:start="59:19" pos:end="59:45"><name pos:start="59:19" pos:end="59:20">is</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:27">pictq</name><index pos:start="59:28" pos:end="59:45">[<expr pos:start="59:29" pos:end="59:44"><name pos:start="59:29" pos:end="59:44"><name pos:start="59:29" pos:end="59:30">is</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:44">pictq_rindex</name></name></expr>]</index></name></expr>;</expr_stmt>



            <if_stmt pos:start="63:13" pos:end="69:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:48">(<expr pos:start="63:17" pos:end="63:47"><name pos:start="63:17" pos:end="63:26"><name pos:start="63:17" pos:end="63:18">vp</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:26">serial</name></name> <operator pos:start="63:28" pos:end="63:29">!=</operator> <name pos:start="63:31" pos:end="63:47"><name pos:start="63:31" pos:end="63:32">is</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:40">videoq</name><operator pos:start="63:41" pos:end="63:41">.</operator><name pos:start="63:42" pos:end="63:47">serial</name></name></expr>)</condition> <block pos:start="63:50" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:27">

                <expr_stmt pos:start="65:17" pos:end="65:39"><expr pos:start="65:17" pos:end="65:38"><call pos:start="65:17" pos:end="65:38"><name pos:start="65:17" pos:end="65:34">pictq_next_picture</name><argument_list pos:start="65:35" pos:end="65:38">(<argument pos:start="65:36" pos:end="65:37"><expr pos:start="65:36" pos:end="65:37"><name pos:start="65:36" pos:end="65:37">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="67:17" pos:end="67:27">goto <name pos:start="67:22" pos:end="67:26">retry</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="73:13" pos:end="75:29"><if pos:start="73:13" pos:end="75:29">if <condition pos:start="73:16" pos:end="73:27">(<expr pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:18">is</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:26">paused</name></name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:29"><block_content pos:start="75:17" pos:end="75:29">

                <goto pos:start="75:17" pos:end="75:29">goto <name pos:start="75:22" pos:end="75:28">display</name>;</goto></block_content></block></if></if_stmt>



            <comment type="block" pos:start="79:13" pos:end="79:47">/* compute nominal last_duration */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:57"><expr pos:start="81:13" pos:end="81:56"><name pos:start="81:13" pos:end="81:25">last_duration</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:35"><name pos:start="81:29" pos:end="81:30">vp</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:35">pts</name></name> <operator pos:start="81:37" pos:end="81:37">-</operator> <name pos:start="81:39" pos:end="81:56"><name pos:start="81:39" pos:end="81:40">is</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:56">frame_last_pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:76">(<expr pos:start="83:17" pos:end="83:75"><name pos:start="83:17" pos:end="83:29">last_duration</name> <operator pos:start="83:31" pos:end="83:31">&gt;</operator> <literal type="number" pos:start="83:33" pos:end="83:33">0</literal> <operator pos:start="83:35" pos:end="83:36">&amp;&amp;</operator> <name pos:start="83:38" pos:end="83:50">last_duration</name> <operator pos:start="83:52" pos:end="83:52">&lt;</operator> <name pos:start="83:54" pos:end="83:75"><name pos:start="83:54" pos:end="83:55">is</name><operator pos:start="83:56" pos:end="83:57">-&gt;</operator><name pos:start="83:58" pos:end="83:75">max_frame_duration</name></name></expr>)</condition> <block pos:start="83:78" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:56">

                <comment type="block" pos:start="85:17" pos:end="85:97">/* if duration of the last frame was sane, update last_duration in video state */</comment>

                <expr_stmt pos:start="87:17" pos:end="87:56"><expr pos:start="87:17" pos:end="87:55"><name pos:start="87:17" pos:end="87:39"><name pos:start="87:17" pos:end="87:18">is</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:39">frame_last_duration</name></name> <operator pos:start="87:41" pos:end="87:41">=</operator> <name pos:start="87:43" pos:end="87:55">last_duration</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:70"><expr pos:start="91:13" pos:end="91:69"><name pos:start="91:13" pos:end="91:17">delay</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <call pos:start="91:21" pos:end="91:69"><name pos:start="91:21" pos:end="91:40">compute_target_delay</name><argument_list pos:start="91:41" pos:end="91:69">(<argument pos:start="91:42" pos:end="91:64"><expr pos:start="91:42" pos:end="91:64"><name pos:start="91:42" pos:end="91:64"><name pos:start="91:42" pos:end="91:43">is</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:64">frame_last_duration</name></name></expr></argument>, <argument pos:start="91:67" pos:end="91:68"><expr pos:start="91:67" pos:end="91:68"><name pos:start="91:67" pos:end="91:68">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="95:13" pos:end="95:41"><expr pos:start="95:13" pos:end="95:40"><name pos:start="95:13" pos:end="95:16">time</name><operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:30"><name pos:start="95:19" pos:end="95:28">av_gettime</name><argument_list pos:start="95:29" pos:end="95:30">()</argument_list></call><operator pos:start="95:31" pos:end="95:31">/</operator><literal type="number" pos:start="95:32" pos:end="95:40">1000000.0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="99:23"><if pos:start="97:13" pos:end="99:23">if <condition pos:start="97:16" pos:end="97:47">(<expr pos:start="97:17" pos:end="97:46"><name pos:start="97:17" pos:end="97:20">time</name> <operator pos:start="97:22" pos:end="97:22">&lt;</operator> <name pos:start="97:24" pos:end="97:38"><name pos:start="97:24" pos:end="97:25">is</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:38">frame_timer</name></name> <operator pos:start="97:40" pos:end="97:40">+</operator> <name pos:start="97:42" pos:end="97:46">delay</name></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:23"><block_content pos:start="99:17" pos:end="99:23">

                <return pos:start="99:17" pos:end="99:23">return;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="103:13" pos:end="105:91"><if pos:start="103:13" pos:end="105:91">if <condition pos:start="103:16" pos:end="103:26">(<expr pos:start="103:17" pos:end="103:25"><name pos:start="103:17" pos:end="103:21">delay</name> <operator pos:start="103:23" pos:end="103:23">&gt;</operator> <literal type="number" pos:start="103:25" pos:end="103:25">0</literal></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:91"><block_content pos:start="105:17" pos:end="105:91">

                <expr_stmt pos:start="105:17" pos:end="105:91"><expr pos:start="105:17" pos:end="105:90"><name pos:start="105:17" pos:end="105:31"><name pos:start="105:17" pos:end="105:18">is</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:31">frame_timer</name></name> <operator pos:start="105:33" pos:end="105:34">+=</operator> <name pos:start="105:36" pos:end="105:40">delay</name> <operator pos:start="105:42" pos:end="105:42">*</operator> <call pos:start="105:44" pos:end="105:90"><name pos:start="105:44" pos:end="105:48">FFMAX</name><argument_list pos:start="105:49" pos:end="105:90">(<argument pos:start="105:50" pos:end="105:50"><expr pos:start="105:50" pos:end="105:50"><literal type="number" pos:start="105:50" pos:end="105:50">1</literal></expr></argument>, <argument pos:start="105:53" pos:end="105:89"><expr pos:start="105:53" pos:end="105:89"><call pos:start="105:53" pos:end="105:89"><name pos:start="105:53" pos:end="105:57">floor</name><argument_list pos:start="105:58" pos:end="105:89">(<argument pos:start="105:59" pos:end="105:88"><expr pos:start="105:59" pos:end="105:88"><operator pos:start="105:59" pos:end="105:59">(</operator><name pos:start="105:60" pos:end="105:63">time</name><operator pos:start="105:64" pos:end="105:64">-</operator><name pos:start="105:65" pos:end="105:79"><name pos:start="105:65" pos:end="105:66">is</name><operator pos:start="105:67" pos:end="105:68">-&gt;</operator><name pos:start="105:69" pos:end="105:79">frame_timer</name></name><operator pos:start="105:80" pos:end="105:80">)</operator> <operator pos:start="105:82" pos:end="105:82">/</operator> <name pos:start="105:84" pos:end="105:88">delay</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="109:13" pos:end="109:43"><expr pos:start="109:13" pos:end="109:42"><call pos:start="109:13" pos:end="109:42"><name pos:start="109:13" pos:end="109:25">SDL_LockMutex</name><argument_list pos:start="109:26" pos:end="109:42">(<argument pos:start="109:27" pos:end="109:41"><expr pos:start="109:27" pos:end="109:41"><name pos:start="109:27" pos:end="109:41"><name pos:start="109:27" pos:end="109:28">is</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:41">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:63"><expr pos:start="111:13" pos:end="111:62"><call pos:start="111:13" pos:end="111:62"><name pos:start="111:13" pos:end="111:28">update_video_pts</name><argument_list pos:start="111:29" pos:end="111:62">(<argument pos:start="111:30" pos:end="111:31"><expr pos:start="111:30" pos:end="111:31"><name pos:start="111:30" pos:end="111:31">is</name></expr></argument>, <argument pos:start="111:34" pos:end="111:40"><expr pos:start="111:34" pos:end="111:40"><name pos:start="111:34" pos:end="111:40"><name pos:start="111:34" pos:end="111:35">vp</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:40">pts</name></name></expr></argument>, <argument pos:start="111:43" pos:end="111:49"><expr pos:start="111:43" pos:end="111:49"><name pos:start="111:43" pos:end="111:49"><name pos:start="111:43" pos:end="111:44">vp</name><operator pos:start="111:45" pos:end="111:46">-&gt;</operator><name pos:start="111:47" pos:end="111:49">pos</name></name></expr></argument>, <argument pos:start="111:52" pos:end="111:61"><expr pos:start="111:52" pos:end="111:61"><name pos:start="111:52" pos:end="111:61"><name pos:start="111:52" pos:end="111:53">vp</name><operator pos:start="111:54" pos:end="111:55">-&gt;</operator><name pos:start="111:56" pos:end="111:61">serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:45"><expr pos:start="113:13" pos:end="113:44"><call pos:start="113:13" pos:end="113:44"><name pos:start="113:13" pos:end="113:27">SDL_UnlockMutex</name><argument_list pos:start="113:28" pos:end="113:44">(<argument pos:start="113:29" pos:end="113:43"><expr pos:start="113:29" pos:end="113:43"><name pos:start="113:29" pos:end="113:43"><name pos:start="113:29" pos:end="113:30">is</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:43">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="117:13" pos:end="133:13"><if pos:start="117:13" pos:end="133:13">if <condition pos:start="117:16" pos:end="117:35">(<expr pos:start="117:17" pos:end="117:34"><name pos:start="117:17" pos:end="117:30"><name pos:start="117:17" pos:end="117:18">is</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:30">pictq_size</name></name> <operator pos:start="117:32" pos:end="117:32">&gt;</operator> <literal type="number" pos:start="117:34" pos:end="117:34">1</literal></expr>)</condition> <block pos:start="117:37" pos:end="133:13">{<block_content pos:start="119:17" pos:end="131:17">

                <decl_stmt pos:start="119:17" pos:end="119:101"><decl pos:start="119:17" pos:end="119:100"><type pos:start="119:17" pos:end="119:30"><name pos:start="119:17" pos:end="119:28">VideoPicture</name> <modifier pos:start="119:30" pos:end="119:30">*</modifier></type><name pos:start="119:31" pos:end="119:36">nextvp</name> <init pos:start="119:38" pos:end="119:100">= <expr pos:start="119:40" pos:end="119:100"><operator pos:start="119:40" pos:end="119:40">&amp;</operator><name pos:start="119:41" pos:end="119:100"><name pos:start="119:41" pos:end="119:42">is</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:49">pictq</name><index pos:start="119:50" pos:end="119:100">[<expr pos:start="119:51" pos:end="119:99"><operator pos:start="119:51" pos:end="119:51">(</operator><name pos:start="119:52" pos:end="119:67"><name pos:start="119:52" pos:end="119:53">is</name><operator pos:start="119:54" pos:end="119:55">-&gt;</operator><name pos:start="119:56" pos:end="119:67">pictq_rindex</name></name> <operator pos:start="119:69" pos:end="119:69">+</operator> <literal type="number" pos:start="119:71" pos:end="119:71">1</literal><operator pos:start="119:72" pos:end="119:72">)</operator> <operator pos:start="119:74" pos:end="119:74">%</operator> <name pos:start="119:76" pos:end="119:99">VIDEO_PICTURE_QUEUE_SIZE</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:49"><expr pos:start="121:17" pos:end="121:48"><name pos:start="121:17" pos:end="121:24">duration</name> <operator pos:start="121:26" pos:end="121:26">=</operator> <name pos:start="121:28" pos:end="121:38"><name pos:start="121:28" pos:end="121:33">nextvp</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:38">pts</name></name> <operator pos:start="121:40" pos:end="121:40">-</operator> <name pos:start="121:42" pos:end="121:48"><name pos:start="121:42" pos:end="121:43">vp</name><operator pos:start="121:44" pos:end="121:45">-&gt;</operator><name pos:start="121:46" pos:end="121:48">pts</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="123:17" pos:end="131:17"><if pos:start="123:17" pos:end="131:17">if<condition pos:start="123:19" pos:end="123:150">(<expr pos:start="123:20" pos:end="123:149"><operator pos:start="123:20" pos:end="123:20">!</operator><name pos:start="123:21" pos:end="123:28"><name pos:start="123:21" pos:end="123:22">is</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:28">step</name></name> <operator pos:start="123:30" pos:end="123:31">&amp;&amp;</operator> <operator pos:start="123:33" pos:end="123:33">(</operator><name pos:start="123:34" pos:end="123:42">framedrop</name><operator pos:start="123:43" pos:end="123:43">&gt;</operator><literal type="number" pos:start="123:44" pos:end="123:44">0</literal> <operator pos:start="123:46" pos:end="123:47">||</operator> <operator pos:start="123:49" pos:end="123:49">(</operator><name pos:start="123:50" pos:end="123:58">framedrop</name> <operator pos:start="123:60" pos:end="123:61">&amp;&amp;</operator> <call pos:start="123:63" pos:end="123:86"><name pos:start="123:63" pos:end="123:82">get_master_sync_type</name><argument_list pos:start="123:83" pos:end="123:86">(<argument pos:start="123:84" pos:end="123:85"><expr pos:start="123:84" pos:end="123:85"><name pos:start="123:84" pos:end="123:85">is</name></expr></argument>)</argument_list></call> <operator pos:start="123:88" pos:end="123:89">!=</operator> <name pos:start="123:91" pos:end="123:110">AV_SYNC_VIDEO_MASTER</name><operator pos:start="123:111" pos:end="123:111">)</operator><operator pos:start="123:112" pos:end="123:112">)</operator> <operator pos:start="123:114" pos:end="123:115">&amp;&amp;</operator> <name pos:start="123:117" pos:end="123:120">time</name> <operator pos:start="123:122" pos:end="123:122">&gt;</operator> <name pos:start="123:124" pos:end="123:138"><name pos:start="123:124" pos:end="123:125">is</name><operator pos:start="123:126" pos:end="123:127">-&gt;</operator><name pos:start="123:128" pos:end="123:138">frame_timer</name></name> <operator pos:start="123:140" pos:end="123:140">+</operator> <name pos:start="123:142" pos:end="123:149">duration</name></expr>)</condition><block pos:start="123:151" pos:end="131:17">{<block_content pos:start="125:21" pos:end="129:31">

                    <expr_stmt pos:start="125:21" pos:end="125:43"><expr pos:start="125:21" pos:end="125:42"><name pos:start="125:21" pos:end="125:40"><name pos:start="125:21" pos:end="125:22">is</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:40">frame_drops_late</name></name><operator pos:start="125:41" pos:end="125:42">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="127:21" pos:end="127:43"><expr pos:start="127:21" pos:end="127:42"><call pos:start="127:21" pos:end="127:42"><name pos:start="127:21" pos:end="127:38">pictq_next_picture</name><argument_list pos:start="127:39" pos:end="127:42">(<argument pos:start="127:40" pos:end="127:41"><expr pos:start="127:40" pos:end="127:41"><name pos:start="127:40" pos:end="127:41">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="129:21" pos:end="129:31">goto <name pos:start="129:26" pos:end="129:30">retry</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="137:13" pos:end="221:13"><if pos:start="137:13" pos:end="221:13">if <condition pos:start="137:16" pos:end="137:32">(<expr pos:start="137:17" pos:end="137:31"><name pos:start="137:17" pos:end="137:31"><name pos:start="137:17" pos:end="137:18">is</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:31">subtitle_st</name></name></expr>)</condition> <block pos:start="137:34" pos:end="221:13">{<block_content pos:start="139:17" pos:end="219:17">

                <if_stmt pos:start="139:17" pos:end="219:17"><if pos:start="139:17" pos:end="171:17">if <condition pos:start="139:20" pos:end="139:48">(<expr pos:start="139:21" pos:end="139:47"><name pos:start="139:21" pos:end="139:47"><name pos:start="139:21" pos:end="139:22">is</name><operator pos:start="139:23" pos:end="139:24">-&gt;</operator><name pos:start="139:25" pos:end="139:47">subtitle_stream_changed</name></name></expr>)</condition> <block pos:start="139:50" pos:end="171:17">{<block_content pos:start="141:21" pos:end="169:53">

                    <expr_stmt pos:start="141:21" pos:end="141:51"><expr pos:start="141:21" pos:end="141:50"><call pos:start="141:21" pos:end="141:50"><name pos:start="141:21" pos:end="141:33">SDL_LockMutex</name><argument_list pos:start="141:34" pos:end="141:50">(<argument pos:start="141:35" pos:end="141:49"><expr pos:start="141:35" pos:end="141:49"><name pos:start="141:35" pos:end="141:49"><name pos:start="141:35" pos:end="141:36">is</name><operator pos:start="141:37" pos:end="141:38">-&gt;</operator><name pos:start="141:39" pos:end="141:49">subpq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <while pos:start="145:21" pos:end="161:21">while <condition pos:start="145:27" pos:end="145:42">(<expr pos:start="145:28" pos:end="145:41"><name pos:start="145:28" pos:end="145:41"><name pos:start="145:28" pos:end="145:29">is</name><operator pos:start="145:30" pos:end="145:31">-&gt;</operator><name pos:start="145:32" pos:end="145:41">subpq_size</name></name></expr>)</condition> <block pos:start="145:44" pos:end="161:21">{<block_content pos:start="147:25" pos:end="159:41">

                        <expr_stmt pos:start="147:25" pos:end="147:70"><expr pos:start="147:25" pos:end="147:69"><call pos:start="147:25" pos:end="147:69"><name pos:start="147:25" pos:end="147:39">free_subpicture</name><argument_list pos:start="147:40" pos:end="147:69">(<argument pos:start="147:41" pos:end="147:68"><expr pos:start="147:41" pos:end="147:68"><operator pos:start="147:41" pos:end="147:41">&amp;</operator><name pos:start="147:42" pos:end="147:68"><name pos:start="147:42" pos:end="147:43">is</name><operator pos:start="147:44" pos:end="147:45">-&gt;</operator><name pos:start="147:46" pos:end="147:50">subpq</name><index pos:start="147:51" pos:end="147:68">[<expr pos:start="147:52" pos:end="147:67"><name pos:start="147:52" pos:end="147:67"><name pos:start="147:52" pos:end="147:53">is</name><operator pos:start="147:54" pos:end="147:55">-&gt;</operator><name pos:start="147:56" pos:end="147:67">subpq_rindex</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <comment type="block" pos:start="151:25" pos:end="151:75">/* update queue size and signal for next picture */</comment>

                        <if_stmt pos:start="153:25" pos:end="155:49"><if pos:start="153:25" pos:end="155:49">if <condition pos:start="153:28" pos:end="153:72">(<expr pos:start="153:29" pos:end="153:71"><operator pos:start="153:29" pos:end="153:30">++</operator><name pos:start="153:31" pos:end="153:46"><name pos:start="153:31" pos:end="153:32">is</name><operator pos:start="153:33" pos:end="153:34">-&gt;</operator><name pos:start="153:35" pos:end="153:46">subpq_rindex</name></name> <operator pos:start="153:48" pos:end="153:49">==</operator> <name pos:start="153:51" pos:end="153:71">SUBPICTURE_QUEUE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="155:29" pos:end="155:49"><block_content pos:start="155:29" pos:end="155:49">

                            <expr_stmt pos:start="155:29" pos:end="155:49"><expr pos:start="155:29" pos:end="155:48"><name pos:start="155:29" pos:end="155:44"><name pos:start="155:29" pos:end="155:30">is</name><operator pos:start="155:31" pos:end="155:32">-&gt;</operator><name pos:start="155:33" pos:end="155:44">subpq_rindex</name></name> <operator pos:start="155:46" pos:end="155:46">=</operator> <literal type="number" pos:start="155:48" pos:end="155:48">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="159:25" pos:end="159:41"><expr pos:start="159:25" pos:end="159:40"><name pos:start="159:25" pos:end="159:38"><name pos:start="159:25" pos:end="159:26">is</name><operator pos:start="159:27" pos:end="159:28">-&gt;</operator><name pos:start="159:29" pos:end="159:38">subpq_size</name></name><operator pos:start="159:39" pos:end="159:40">--</operator></expr>;</expr_stmt>

                    </block_content>}</block></while>

                    <expr_stmt pos:start="163:21" pos:end="163:52"><expr pos:start="163:21" pos:end="163:51"><name pos:start="163:21" pos:end="163:47"><name pos:start="163:21" pos:end="163:22">is</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:47">subtitle_stream_changed</name></name> <operator pos:start="163:49" pos:end="163:49">=</operator> <literal type="number" pos:start="163:51" pos:end="163:51">0</literal></expr>;</expr_stmt>



                    <expr_stmt pos:start="167:21" pos:end="167:51"><expr pos:start="167:21" pos:end="167:50"><call pos:start="167:21" pos:end="167:50"><name pos:start="167:21" pos:end="167:34">SDL_CondSignal</name><argument_list pos:start="167:35" pos:end="167:50">(<argument pos:start="167:36" pos:end="167:49"><expr pos:start="167:36" pos:end="167:49"><name pos:start="167:36" pos:end="167:49"><name pos:start="167:36" pos:end="167:37">is</name><operator pos:start="167:38" pos:end="167:39">-&gt;</operator><name pos:start="167:40" pos:end="167:49">subpq_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="169:21" pos:end="169:53"><expr pos:start="169:21" pos:end="169:52"><call pos:start="169:21" pos:end="169:52"><name pos:start="169:21" pos:end="169:35">SDL_UnlockMutex</name><argument_list pos:start="169:36" pos:end="169:52">(<argument pos:start="169:37" pos:end="169:51"><expr pos:start="169:37" pos:end="169:51"><name pos:start="169:37" pos:end="169:51"><name pos:start="169:37" pos:end="169:38">is</name><operator pos:start="169:39" pos:end="169:40">-&gt;</operator><name pos:start="169:41" pos:end="169:51">subpq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="171:19" pos:end="219:17">else <block pos:start="171:24" pos:end="219:17">{<block_content pos:start="173:21" pos:end="217:21">

                    <if_stmt pos:start="173:21" pos:end="217:21"><if pos:start="173:21" pos:end="217:21">if <condition pos:start="173:24" pos:end="173:43">(<expr pos:start="173:25" pos:end="173:42"><name pos:start="173:25" pos:end="173:38"><name pos:start="173:25" pos:end="173:26">is</name><operator pos:start="173:27" pos:end="173:28">-&gt;</operator><name pos:start="173:29" pos:end="173:38">subpq_size</name></name> <operator pos:start="173:40" pos:end="173:40">&gt;</operator> <literal type="number" pos:start="173:42" pos:end="173:42">0</literal></expr>)</condition> <block pos:start="173:45" pos:end="217:21">{<block_content pos:start="175:25" pos:end="215:25">

                        <expr_stmt pos:start="175:25" pos:end="175:58"><expr pos:start="175:25" pos:end="175:57"><name pos:start="175:25" pos:end="175:26">sp</name> <operator pos:start="175:28" pos:end="175:28">=</operator> <operator pos:start="175:30" pos:end="175:30">&amp;</operator><name pos:start="175:31" pos:end="175:57"><name pos:start="175:31" pos:end="175:32">is</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:39">subpq</name><index pos:start="175:40" pos:end="175:57">[<expr pos:start="175:41" pos:end="175:56"><name pos:start="175:41" pos:end="175:56"><name pos:start="175:41" pos:end="175:42">is</name><operator pos:start="175:43" pos:end="175:44">-&gt;</operator><name pos:start="175:45" pos:end="175:56">subpq_rindex</name></name></expr>]</index></name></expr>;</expr_stmt>



                        <if_stmt pos:start="179:25" pos:end="185:39"><if pos:start="179:25" pos:end="181:93">if <condition pos:start="179:28" pos:end="179:47">(<expr pos:start="179:29" pos:end="179:46"><name pos:start="179:29" pos:end="179:42"><name pos:start="179:29" pos:end="179:30">is</name><operator pos:start="179:31" pos:end="179:32">-&gt;</operator><name pos:start="179:33" pos:end="179:42">subpq_size</name></name> <operator pos:start="179:44" pos:end="179:44">&gt;</operator> <literal type="number" pos:start="179:46" pos:end="179:46">1</literal></expr>)</condition><block type="pseudo" pos:start="181:29" pos:end="181:93"><block_content pos:start="181:29" pos:end="181:93">

                            <expr_stmt pos:start="181:29" pos:end="181:93"><expr pos:start="181:29" pos:end="181:92"><name pos:start="181:29" pos:end="181:31">sp2</name> <operator pos:start="181:33" pos:end="181:33">=</operator> <operator pos:start="181:35" pos:end="181:35">&amp;</operator><name pos:start="181:36" pos:end="181:92"><name pos:start="181:36" pos:end="181:37">is</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:44">subpq</name><index pos:start="181:45" pos:end="181:92">[<expr pos:start="181:46" pos:end="181:91"><operator pos:start="181:46" pos:end="181:46">(</operator><name pos:start="181:47" pos:end="181:62"><name pos:start="181:47" pos:end="181:48">is</name><operator pos:start="181:49" pos:end="181:50">-&gt;</operator><name pos:start="181:51" pos:end="181:62">subpq_rindex</name></name> <operator pos:start="181:64" pos:end="181:64">+</operator> <literal type="number" pos:start="181:66" pos:end="181:66">1</literal><operator pos:start="181:67" pos:end="181:67">)</operator> <operator pos:start="181:69" pos:end="181:69">%</operator> <name pos:start="181:71" pos:end="181:91">SUBPICTURE_QUEUE_SIZE</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="183:25" pos:end="185:39">else<block type="pseudo" pos:start="185:29" pos:end="185:39"><block_content pos:start="185:29" pos:end="185:39">

                            <expr_stmt pos:start="185:29" pos:end="185:39"><expr pos:start="185:29" pos:end="185:38"><name pos:start="185:29" pos:end="185:31">sp2</name> <operator pos:start="185:33" pos:end="185:33">=</operator> <name pos:start="185:35" pos:end="185:38">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                        <if_stmt pos:start="189:25" pos:end="215:25"><if pos:start="189:25" pos:end="215:25">if <condition pos:start="189:28" pos:end="191:126">(<expr pos:start="189:29" pos:end="191:125"><operator pos:start="189:29" pos:end="189:29">(</operator><name pos:start="189:30" pos:end="189:50"><name pos:start="189:30" pos:end="189:31">is</name><operator pos:start="189:32" pos:end="189:33">-&gt;</operator><name pos:start="189:34" pos:end="189:50">video_current_pts</name></name> <operator pos:start="189:52" pos:end="189:52">&gt;</operator> <operator pos:start="189:54" pos:end="189:54">(</operator><name pos:start="189:55" pos:end="189:61"><name pos:start="189:55" pos:end="189:56">sp</name><operator pos:start="189:57" pos:end="189:58">-&gt;</operator><name pos:start="189:59" pos:end="189:61">pts</name></name> <operator pos:start="189:63" pos:end="189:63">+</operator> <operator pos:start="189:65" pos:end="189:65">(</operator><operator pos:start="189:66" pos:end="189:66">(</operator><name pos:start="189:67" pos:end="189:71">float</name><operator pos:start="189:72" pos:end="189:72">)</operator> <name pos:start="189:74" pos:end="189:97"><name pos:start="189:74" pos:end="189:75">sp</name><operator pos:start="189:76" pos:end="189:77">-&gt;</operator><name pos:start="189:78" pos:end="189:80">sub</name><operator pos:start="189:81" pos:end="189:81">.</operator><name pos:start="189:82" pos:end="189:97">end_display_time</name></name> <operator pos:start="189:99" pos:end="189:99">/</operator> <literal type="number" pos:start="189:101" pos:end="189:104">1000</literal><operator pos:start="189:105" pos:end="189:105">)</operator><operator pos:start="189:106" pos:end="189:106">)</operator><operator pos:start="189:107" pos:end="189:107">)</operator>

                                <operator pos:start="191:33" pos:end="191:34">||</operator> <operator pos:start="191:36" pos:end="191:36">(</operator><name pos:start="191:37" pos:end="191:39">sp2</name> <operator pos:start="191:41" pos:end="191:42">&amp;&amp;</operator> <name pos:start="191:44" pos:end="191:64"><name pos:start="191:44" pos:end="191:45">is</name><operator pos:start="191:46" pos:end="191:47">-&gt;</operator><name pos:start="191:48" pos:end="191:64">video_current_pts</name></name> <operator pos:start="191:66" pos:end="191:66">&gt;</operator> <operator pos:start="191:68" pos:end="191:68">(</operator><name pos:start="191:69" pos:end="191:76"><name pos:start="191:69" pos:end="191:71">sp2</name><operator pos:start="191:72" pos:end="191:73">-&gt;</operator><name pos:start="191:74" pos:end="191:76">pts</name></name> <operator pos:start="191:78" pos:end="191:78">+</operator> <operator pos:start="191:80" pos:end="191:80">(</operator><operator pos:start="191:81" pos:end="191:81">(</operator><name pos:start="191:82" pos:end="191:86">float</name><operator pos:start="191:87" pos:end="191:87">)</operator> <name pos:start="191:89" pos:end="191:115"><name pos:start="191:89" pos:end="191:91">sp2</name><operator pos:start="191:92" pos:end="191:93">-&gt;</operator><name pos:start="191:94" pos:end="191:96">sub</name><operator pos:start="191:97" pos:end="191:97">.</operator><name pos:start="191:98" pos:end="191:115">start_display_time</name></name> <operator pos:start="191:117" pos:end="191:117">/</operator> <literal type="number" pos:start="191:119" pos:end="191:122">1000</literal><operator pos:start="191:123" pos:end="191:123">)</operator><operator pos:start="191:124" pos:end="191:124">)</operator><operator pos:start="191:125" pos:end="191:125">)</operator></expr>)</condition>

                        <block pos:start="193:25" pos:end="215:25">{<block_content pos:start="195:29" pos:end="213:61">

                            <expr_stmt pos:start="195:29" pos:end="195:48"><expr pos:start="195:29" pos:end="195:47"><call pos:start="195:29" pos:end="195:47"><name pos:start="195:29" pos:end="195:43">free_subpicture</name><argument_list pos:start="195:44" pos:end="195:47">(<argument pos:start="195:45" pos:end="195:46"><expr pos:start="195:45" pos:end="195:46"><name pos:start="195:45" pos:end="195:46">sp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                            <comment type="block" pos:start="199:29" pos:end="199:79">/* update queue size and signal for next picture */</comment>

                            <if_stmt pos:start="201:29" pos:end="203:53"><if pos:start="201:29" pos:end="203:53">if <condition pos:start="201:32" pos:end="201:76">(<expr pos:start="201:33" pos:end="201:75"><operator pos:start="201:33" pos:end="201:34">++</operator><name pos:start="201:35" pos:end="201:50"><name pos:start="201:35" pos:end="201:36">is</name><operator pos:start="201:37" pos:end="201:38">-&gt;</operator><name pos:start="201:39" pos:end="201:50">subpq_rindex</name></name> <operator pos:start="201:52" pos:end="201:53">==</operator> <name pos:start="201:55" pos:end="201:75">SUBPICTURE_QUEUE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="203:33" pos:end="203:53"><block_content pos:start="203:33" pos:end="203:53">

                                <expr_stmt pos:start="203:33" pos:end="203:53"><expr pos:start="203:33" pos:end="203:52"><name pos:start="203:33" pos:end="203:48"><name pos:start="203:33" pos:end="203:34">is</name><operator pos:start="203:35" pos:end="203:36">-&gt;</operator><name pos:start="203:37" pos:end="203:48">subpq_rindex</name></name> <operator pos:start="203:50" pos:end="203:50">=</operator> <literal type="number" pos:start="203:52" pos:end="203:52">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                            <expr_stmt pos:start="207:29" pos:end="207:59"><expr pos:start="207:29" pos:end="207:58"><call pos:start="207:29" pos:end="207:58"><name pos:start="207:29" pos:end="207:41">SDL_LockMutex</name><argument_list pos:start="207:42" pos:end="207:58">(<argument pos:start="207:43" pos:end="207:57"><expr pos:start="207:43" pos:end="207:57"><name pos:start="207:43" pos:end="207:57"><name pos:start="207:43" pos:end="207:44">is</name><operator pos:start="207:45" pos:end="207:46">-&gt;</operator><name pos:start="207:47" pos:end="207:57">subpq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="209:29" pos:end="209:45"><expr pos:start="209:29" pos:end="209:44"><name pos:start="209:29" pos:end="209:42"><name pos:start="209:29" pos:end="209:30">is</name><operator pos:start="209:31" pos:end="209:32">-&gt;</operator><name pos:start="209:33" pos:end="209:42">subpq_size</name></name><operator pos:start="209:43" pos:end="209:44">--</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="211:29" pos:end="211:59"><expr pos:start="211:29" pos:end="211:58"><call pos:start="211:29" pos:end="211:58"><name pos:start="211:29" pos:end="211:42">SDL_CondSignal</name><argument_list pos:start="211:43" pos:end="211:58">(<argument pos:start="211:44" pos:end="211:57"><expr pos:start="211:44" pos:end="211:57"><name pos:start="211:44" pos:end="211:57"><name pos:start="211:44" pos:end="211:45">is</name><operator pos:start="211:46" pos:end="211:47">-&gt;</operator><name pos:start="211:48" pos:end="211:57">subpq_cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="213:29" pos:end="213:61"><expr pos:start="213:29" pos:end="213:60"><call pos:start="213:29" pos:end="213:60"><name pos:start="213:29" pos:end="213:43">SDL_UnlockMutex</name><argument_list pos:start="213:44" pos:end="213:60">(<argument pos:start="213:45" pos:end="213:59"><expr pos:start="213:45" pos:end="213:59"><name pos:start="213:45" pos:end="213:59"><name pos:start="213:45" pos:end="213:46">is</name><operator pos:start="213:47" pos:end="213:48">-&gt;</operator><name pos:start="213:49" pos:end="213:59">subpq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



<label pos:start="225:1" pos:end="225:8"><name pos:start="225:1" pos:end="225:7">display</name>:</label>

            <comment type="block" pos:start="227:13" pos:end="227:33">/* display picture */</comment>

            <if_stmt pos:start="229:13" pos:end="231:34"><if pos:start="229:13" pos:end="231:34">if <condition pos:start="229:16" pos:end="229:69">(<expr pos:start="229:17" pos:end="229:68"><operator pos:start="229:17" pos:end="229:17">!</operator><name pos:start="229:18" pos:end="229:32">display_disable</name> <operator pos:start="229:34" pos:end="229:35">&amp;&amp;</operator> <name pos:start="229:37" pos:end="229:49"><name pos:start="229:37" pos:end="229:38">is</name><operator pos:start="229:39" pos:end="229:40">-&gt;</operator><name pos:start="229:41" pos:end="229:49">show_mode</name></name> <operator pos:start="229:51" pos:end="229:52">==</operator> <name pos:start="229:54" pos:end="229:68">SHOW_MODE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="231:17" pos:end="231:34"><block_content pos:start="231:17" pos:end="231:34">

                <expr_stmt pos:start="231:17" pos:end="231:34"><expr pos:start="231:17" pos:end="231:33"><call pos:start="231:17" pos:end="231:33"><name pos:start="231:17" pos:end="231:29">video_display</name><argument_list pos:start="231:30" pos:end="231:33">(<argument pos:start="231:31" pos:end="231:32"><expr pos:start="231:31" pos:end="231:32"><name pos:start="231:31" pos:end="231:32">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="235:13" pos:end="235:35"><expr pos:start="235:13" pos:end="235:34"><call pos:start="235:13" pos:end="235:34"><name pos:start="235:13" pos:end="235:30">pictq_next_picture</name><argument_list pos:start="235:31" pos:end="235:34">(<argument pos:start="235:32" pos:end="235:33"><expr pos:start="235:32" pos:end="235:33"><name pos:start="235:32" pos:end="235:33">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="239:13" pos:end="241:40"><if pos:start="239:13" pos:end="241:40">if <condition pos:start="239:16" pos:end="239:40">(<expr pos:start="239:17" pos:end="239:39"><name pos:start="239:17" pos:end="239:24"><name pos:start="239:17" pos:end="239:18">is</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:24">step</name></name> <operator pos:start="239:26" pos:end="239:27">&amp;&amp;</operator> <operator pos:start="239:29" pos:end="239:29">!</operator><name pos:start="239:30" pos:end="239:39"><name pos:start="239:30" pos:end="239:31">is</name><operator pos:start="239:32" pos:end="239:33">-&gt;</operator><name pos:start="239:34" pos:end="239:39">paused</name></name></expr>)</condition><block type="pseudo" pos:start="241:17" pos:end="241:40"><block_content pos:start="241:17" pos:end="241:40">

                <expr_stmt pos:start="241:17" pos:end="241:40"><expr pos:start="241:17" pos:end="241:39"><call pos:start="241:17" pos:end="241:39"><name pos:start="241:17" pos:end="241:35">stream_toggle_pause</name><argument_list pos:start="241:36" pos:end="241:39">(<argument pos:start="241:37" pos:end="241:38"><expr pos:start="241:37" pos:end="241:38"><name pos:start="241:37" pos:end="241:38">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:26"><expr pos:start="247:5" pos:end="247:25"><name pos:start="247:5" pos:end="247:21"><name pos:start="247:5" pos:end="247:6">is</name><operator pos:start="247:7" pos:end="247:8">-&gt;</operator><name pos:start="247:9" pos:end="247:21">force_refresh</name></name> <operator pos:start="247:23" pos:end="247:23">=</operator> <literal type="number" pos:start="247:25" pos:end="247:25">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="249:5" pos:end="313:5"><if pos:start="249:5" pos:end="313:5">if <condition pos:start="249:8" pos:end="249:20">(<expr pos:start="249:9" pos:end="249:19"><name pos:start="249:9" pos:end="249:19">show_status</name></expr>)</condition> <block pos:start="249:22" pos:end="313:5">{<block_content pos:start="251:9" pos:end="311:9">

        <decl_stmt pos:start="251:9" pos:end="251:33"><decl pos:start="251:9" pos:end="251:32"><type pos:start="251:9" pos:end="251:22"><specifier pos:start="251:9" pos:end="251:14">static</specifier> <name pos:start="251:16" pos:end="251:22">int64_t</name></type> <name pos:start="251:24" pos:end="251:32">last_time</name></decl>;</decl_stmt>

        <decl_stmt pos:start="253:9" pos:end="253:25"><decl pos:start="253:9" pos:end="253:24"><type pos:start="253:9" pos:end="253:15"><name pos:start="253:9" pos:end="253:15">int64_t</name></type> <name pos:start="253:17" pos:end="253:24">cur_time</name></decl>;</decl_stmt>

        <decl_stmt pos:start="255:9" pos:end="255:35"><decl pos:start="255:9" pos:end="255:18"><type pos:start="255:9" pos:end="255:11"><name pos:start="255:9" pos:end="255:11">int</name></type> <name pos:start="255:13" pos:end="255:18">aqsize</name></decl>, <decl pos:start="255:21" pos:end="255:26"><type ref="prev" pos:start="255:9" pos:end="255:11"/><name pos:start="255:21" pos:end="255:26">vqsize</name></decl>, <decl pos:start="255:29" pos:end="255:34"><type ref="prev" pos:start="255:9" pos:end="255:11"/><name pos:start="255:29" pos:end="255:34">sqsize</name></decl>;</decl_stmt>

        <decl_stmt pos:start="257:9" pos:end="257:23"><decl pos:start="257:9" pos:end="257:22"><type pos:start="257:9" pos:end="257:14"><name pos:start="257:9" pos:end="257:14">double</name></type> <name pos:start="257:16" pos:end="257:22">av_diff</name></decl>;</decl_stmt>



        <expr_stmt pos:start="261:9" pos:end="261:32"><expr pos:start="261:9" pos:end="261:31"><name pos:start="261:9" pos:end="261:16">cur_time</name> <operator pos:start="261:18" pos:end="261:18">=</operator> <call pos:start="261:20" pos:end="261:31"><name pos:start="261:20" pos:end="261:29">av_gettime</name><argument_list pos:start="261:30" pos:end="261:31">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="263:9" pos:end="311:9"><if pos:start="263:9" pos:end="311:9">if <condition pos:start="263:12" pos:end="263:58">(<expr pos:start="263:13" pos:end="263:57"><operator pos:start="263:13" pos:end="263:13">!</operator><name pos:start="263:14" pos:end="263:22">last_time</name> <operator pos:start="263:24" pos:end="263:25">||</operator> <operator pos:start="263:27" pos:end="263:27">(</operator><name pos:start="263:28" pos:end="263:35">cur_time</name> <operator pos:start="263:37" pos:end="263:37">-</operator> <name pos:start="263:39" pos:end="263:47">last_time</name><operator pos:start="263:48" pos:end="263:48">)</operator> <operator pos:start="263:50" pos:end="263:51">&gt;=</operator> <literal type="number" pos:start="263:53" pos:end="263:57">30000</literal></expr>)</condition> <block pos:start="263:60" pos:end="311:9">{<block_content pos:start="265:13" pos:end="309:33">

            <expr_stmt pos:start="265:13" pos:end="265:23"><expr pos:start="265:13" pos:end="265:22"><name pos:start="265:13" pos:end="265:18">aqsize</name> <operator pos:start="265:20" pos:end="265:20">=</operator> <literal type="number" pos:start="265:22" pos:end="265:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:23"><expr pos:start="267:13" pos:end="267:22"><name pos:start="267:13" pos:end="267:18">vqsize</name> <operator pos:start="267:20" pos:end="267:20">=</operator> <literal type="number" pos:start="267:22" pos:end="267:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:23"><expr pos:start="269:13" pos:end="269:22"><name pos:start="269:13" pos:end="269:18">sqsize</name> <operator pos:start="269:20" pos:end="269:20">=</operator> <literal type="number" pos:start="269:22" pos:end="269:22">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="271:13" pos:end="273:41"><if pos:start="271:13" pos:end="273:41">if <condition pos:start="271:16" pos:end="271:29">(<expr pos:start="271:17" pos:end="271:28"><name pos:start="271:17" pos:end="271:28"><name pos:start="271:17" pos:end="271:18">is</name><operator pos:start="271:19" pos:end="271:20">-&gt;</operator><name pos:start="271:21" pos:end="271:28">audio_st</name></name></expr>)</condition><block type="pseudo" pos:start="273:17" pos:end="273:41"><block_content pos:start="273:17" pos:end="273:41">

                <expr_stmt pos:start="273:17" pos:end="273:41"><expr pos:start="273:17" pos:end="273:40"><name pos:start="273:17" pos:end="273:22">aqsize</name> <operator pos:start="273:24" pos:end="273:24">=</operator> <name pos:start="273:26" pos:end="273:40"><name pos:start="273:26" pos:end="273:27">is</name><operator pos:start="273:28" pos:end="273:29">-&gt;</operator><name pos:start="273:30" pos:end="273:35">audioq</name><operator pos:start="273:36" pos:end="273:36">.</operator><name pos:start="273:37" pos:end="273:40">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="275:13" pos:end="277:41"><if pos:start="275:13" pos:end="277:41">if <condition pos:start="275:16" pos:end="275:29">(<expr pos:start="275:17" pos:end="275:28"><name pos:start="275:17" pos:end="275:28"><name pos:start="275:17" pos:end="275:18">is</name><operator pos:start="275:19" pos:end="275:20">-&gt;</operator><name pos:start="275:21" pos:end="275:28">video_st</name></name></expr>)</condition><block type="pseudo" pos:start="277:17" pos:end="277:41"><block_content pos:start="277:17" pos:end="277:41">

                <expr_stmt pos:start="277:17" pos:end="277:41"><expr pos:start="277:17" pos:end="277:40"><name pos:start="277:17" pos:end="277:22">vqsize</name> <operator pos:start="277:24" pos:end="277:24">=</operator> <name pos:start="277:26" pos:end="277:40"><name pos:start="277:26" pos:end="277:27">is</name><operator pos:start="277:28" pos:end="277:29">-&gt;</operator><name pos:start="277:30" pos:end="277:35">videoq</name><operator pos:start="277:36" pos:end="277:36">.</operator><name pos:start="277:37" pos:end="277:40">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="279:13" pos:end="281:44"><if pos:start="279:13" pos:end="281:44">if <condition pos:start="279:16" pos:end="279:32">(<expr pos:start="279:17" pos:end="279:31"><name pos:start="279:17" pos:end="279:31"><name pos:start="279:17" pos:end="279:18">is</name><operator pos:start="279:19" pos:end="279:20">-&gt;</operator><name pos:start="279:21" pos:end="279:31">subtitle_st</name></name></expr>)</condition><block type="pseudo" pos:start="281:17" pos:end="281:44"><block_content pos:start="281:17" pos:end="281:44">

                <expr_stmt pos:start="281:17" pos:end="281:44"><expr pos:start="281:17" pos:end="281:43"><name pos:start="281:17" pos:end="281:22">sqsize</name> <operator pos:start="281:24" pos:end="281:24">=</operator> <name pos:start="281:26" pos:end="281:43"><name pos:start="281:26" pos:end="281:27">is</name><operator pos:start="281:28" pos:end="281:29">-&gt;</operator><name pos:start="281:30" pos:end="281:38">subtitleq</name><operator pos:start="281:39" pos:end="281:39">.</operator><name pos:start="281:40" pos:end="281:43">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:24"><expr pos:start="283:13" pos:end="283:23"><name pos:start="283:13" pos:end="283:19">av_diff</name> <operator pos:start="283:21" pos:end="283:21">=</operator> <literal type="number" pos:start="283:23" pos:end="283:23">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="285:13" pos:end="287:68"><if pos:start="285:13" pos:end="287:68">if <condition pos:start="285:16" pos:end="285:45">(<expr pos:start="285:17" pos:end="285:44"><name pos:start="285:17" pos:end="285:28"><name pos:start="285:17" pos:end="285:18">is</name><operator pos:start="285:19" pos:end="285:20">-&gt;</operator><name pos:start="285:21" pos:end="285:28">audio_st</name></name> <operator pos:start="285:30" pos:end="285:31">&amp;&amp;</operator> <name pos:start="285:33" pos:end="285:44"><name pos:start="285:33" pos:end="285:34">is</name><operator pos:start="285:35" pos:end="285:36">-&gt;</operator><name pos:start="285:37" pos:end="285:44">video_st</name></name></expr>)</condition><block type="pseudo" pos:start="287:17" pos:end="287:68"><block_content pos:start="287:17" pos:end="287:68">

                <expr_stmt pos:start="287:17" pos:end="287:68"><expr pos:start="287:17" pos:end="287:67"><name pos:start="287:17" pos:end="287:23">av_diff</name> <operator pos:start="287:25" pos:end="287:25">=</operator> <call pos:start="287:27" pos:end="287:45"><name pos:start="287:27" pos:end="287:41">get_audio_clock</name><argument_list pos:start="287:42" pos:end="287:45">(<argument pos:start="287:43" pos:end="287:44"><expr pos:start="287:43" pos:end="287:44"><name pos:start="287:43" pos:end="287:44">is</name></expr></argument>)</argument_list></call> <operator pos:start="287:47" pos:end="287:47">-</operator> <call pos:start="287:49" pos:end="287:67"><name pos:start="287:49" pos:end="287:63">get_video_clock</name><argument_list pos:start="287:64" pos:end="287:67">(<argument pos:start="287:65" pos:end="287:66"><expr pos:start="287:65" pos:end="287:66"><name pos:start="287:65" pos:end="287:66">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="289:13" pos:end="305:90"><expr pos:start="289:13" pos:end="305:89"><call pos:start="289:13" pos:end="305:89"><name pos:start="289:13" pos:end="289:18">printf</name><argument_list pos:start="289:19" pos:end="305:89">(<argument pos:start="289:20" pos:end="289:96"><expr pos:start="289:20" pos:end="289:96"><literal type="string" pos:start="289:20" pos:end="289:73">"%7.2f A-V:%7.3f fd=%4d aq=%5dKB vq=%5dKB sq=%5dB f=%"</literal><name pos:start="289:74" pos:end="289:79">PRId64</name><literal type="string" pos:start="289:80" pos:end="289:83">"/%"</literal><name pos:start="289:84" pos:end="289:89">PRId64</name><literal type="string" pos:start="289:90" pos:end="289:96">"   \r"</literal></expr></argument>,

                   <argument pos:start="291:20" pos:end="291:39"><expr pos:start="291:20" pos:end="291:39"><call pos:start="291:20" pos:end="291:39"><name pos:start="291:20" pos:end="291:35">get_master_clock</name><argument_list pos:start="291:36" pos:end="291:39">(<argument pos:start="291:37" pos:end="291:38"><expr pos:start="291:37" pos:end="291:38"><name pos:start="291:37" pos:end="291:38">is</name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="293:20" pos:end="293:26"><expr pos:start="293:20" pos:end="293:26"><name pos:start="293:20" pos:end="293:26">av_diff</name></expr></argument>,

                   <argument pos:start="295:20" pos:end="295:63"><expr pos:start="295:20" pos:end="295:63"><name pos:start="295:20" pos:end="295:40"><name pos:start="295:20" pos:end="295:21">is</name><operator pos:start="295:22" pos:end="295:23">-&gt;</operator><name pos:start="295:24" pos:end="295:40">frame_drops_early</name></name> <operator pos:start="295:42" pos:end="295:42">+</operator> <name pos:start="295:44" pos:end="295:63"><name pos:start="295:44" pos:end="295:45">is</name><operator pos:start="295:46" pos:end="295:47">-&gt;</operator><name pos:start="295:48" pos:end="295:63">frame_drops_late</name></name></expr></argument>,

                   <argument pos:start="297:20" pos:end="297:32"><expr pos:start="297:20" pos:end="297:32"><name pos:start="297:20" pos:end="297:25">aqsize</name> <operator pos:start="297:27" pos:end="297:27">/</operator> <literal type="number" pos:start="297:29" pos:end="297:32">1024</literal></expr></argument>,

                   <argument pos:start="299:20" pos:end="299:32"><expr pos:start="299:20" pos:end="299:32"><name pos:start="299:20" pos:end="299:25">vqsize</name> <operator pos:start="299:27" pos:end="299:27">/</operator> <literal type="number" pos:start="299:29" pos:end="299:32">1024</literal></expr></argument>,

                   <argument pos:start="301:20" pos:end="301:25"><expr pos:start="301:20" pos:end="301:25"><name pos:start="301:20" pos:end="301:25">sqsize</name></expr></argument>,

                   <argument pos:start="303:20" pos:end="303:88"><expr pos:start="303:20" pos:end="303:88"><ternary pos:start="303:20" pos:end="303:88"><condition pos:start="303:20" pos:end="303:33"><expr pos:start="303:20" pos:end="303:31"><name pos:start="303:20" pos:end="303:31"><name pos:start="303:20" pos:end="303:21">is</name><operator pos:start="303:22" pos:end="303:23">-&gt;</operator><name pos:start="303:24" pos:end="303:31">video_st</name></name></expr> ?</condition><then pos:start="303:35" pos:end="303:84"> <expr pos:start="303:35" pos:end="303:84"><name pos:start="303:35" pos:end="303:84"><name pos:start="303:35" pos:end="303:36">is</name><operator pos:start="303:37" pos:end="303:38">-&gt;</operator><name pos:start="303:39" pos:end="303:46">video_st</name><operator pos:start="303:47" pos:end="303:48">-&gt;</operator><name pos:start="303:49" pos:end="303:53">codec</name><operator pos:start="303:54" pos:end="303:55">-&gt;</operator><name pos:start="303:56" pos:end="303:84">pts_correction_num_faulty_dts</name></name></expr> </then><else pos:start="303:86" pos:end="303:88">: <expr pos:start="303:88" pos:end="303:88"><literal type="number" pos:start="303:88" pos:end="303:88">0</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="305:20" pos:end="305:88"><expr pos:start="305:20" pos:end="305:88"><ternary pos:start="305:20" pos:end="305:88"><condition pos:start="305:20" pos:end="305:33"><expr pos:start="305:20" pos:end="305:31"><name pos:start="305:20" pos:end="305:31"><name pos:start="305:20" pos:end="305:21">is</name><operator pos:start="305:22" pos:end="305:23">-&gt;</operator><name pos:start="305:24" pos:end="305:31">video_st</name></name></expr> ?</condition><then pos:start="305:35" pos:end="305:84"> <expr pos:start="305:35" pos:end="305:84"><name pos:start="305:35" pos:end="305:84"><name pos:start="305:35" pos:end="305:36">is</name><operator pos:start="305:37" pos:end="305:38">-&gt;</operator><name pos:start="305:39" pos:end="305:46">video_st</name><operator pos:start="305:47" pos:end="305:48">-&gt;</operator><name pos:start="305:49" pos:end="305:53">codec</name><operator pos:start="305:54" pos:end="305:55">-&gt;</operator><name pos:start="305:56" pos:end="305:84">pts_correction_num_faulty_pts</name></name></expr> </then><else pos:start="305:86" pos:end="305:88">: <expr pos:start="305:88" pos:end="305:88"><literal type="number" pos:start="305:88" pos:end="305:88">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:27"><expr pos:start="307:13" pos:end="307:26"><call pos:start="307:13" pos:end="307:26"><name pos:start="307:13" pos:end="307:18">fflush</name><argument_list pos:start="307:19" pos:end="307:26">(<argument pos:start="307:20" pos:end="307:25"><expr pos:start="307:20" pos:end="307:25"><name pos:start="307:20" pos:end="307:25">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:33"><expr pos:start="309:13" pos:end="309:32"><name pos:start="309:13" pos:end="309:21">last_time</name> <operator pos:start="309:23" pos:end="309:23">=</operator> <name pos:start="309:25" pos:end="309:32">cur_time</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
