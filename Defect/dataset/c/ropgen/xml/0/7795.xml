<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7795.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">h264_mp4toannexb_filter</name><parameter_list pos:start="1:35" pos:end="9:48">(<parameter pos:start="1:36" pos:end="1:65"><decl pos:start="1:36" pos:end="1:65"><type pos:start="1:36" pos:end="1:65"><name pos:start="1:36" pos:end="1:59">AVBitStreamFilterContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">bsfc</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:56"><decl pos:start="3:36" pos:end="3:56"><type pos:start="3:36" pos:end="3:56"><name pos:start="3:36" pos:end="3:49">AVCodecContext</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:56">avctx</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:74"><decl pos:start="3:59" pos:end="3:74"><type pos:start="3:59" pos:end="3:74"><specifier pos:start="3:59" pos:end="3:63">const</specifier> <name pos:start="3:65" pos:end="3:68">char</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier></type><name pos:start="3:71" pos:end="3:74">args</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:52"><decl pos:start="5:36" pos:end="5:52"><type pos:start="5:36" pos:end="5:52"><name pos:start="5:36" pos:end="5:42">uint8_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier><modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:52">poutbuf</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:71"><decl pos:start="5:55" pos:end="5:71"><type pos:start="5:55" pos:end="5:71"><name pos:start="5:55" pos:end="5:57">int</name> <modifier pos:start="5:59" pos:end="5:59">*</modifier></type><name pos:start="5:60" pos:end="5:71">poutbuf_size</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:53"><decl pos:start="7:36" pos:end="7:53"><type pos:start="7:36" pos:end="7:53"><specifier pos:start="7:36" pos:end="7:40">const</specifier> <name pos:start="7:42" pos:end="7:48">uint8_t</name> <modifier pos:start="7:50" pos:end="7:50">*</modifier></type><name pos:start="7:51" pos:end="7:53">buf</name></decl></parameter>, <parameter pos:start="7:56" pos:end="7:67"><decl pos:start="7:56" pos:end="7:67"><type pos:start="7:56" pos:end="7:67"><name pos:start="7:56" pos:end="7:58">int</name></type> <name pos:start="7:60" pos:end="7:67">buf_size</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:47"><decl pos:start="9:36" pos:end="9:47"><type pos:start="9:36" pos:end="9:47"><name pos:start="9:36" pos:end="9:38">int</name></type> <name pos:start="9:40" pos:end="9:47">keyframe</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="237:1">{<block_content pos:start="13:5" pos:end="235:15">

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">H264BSFContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:23">ctx</name> <init pos:start="13:25" pos:end="13:41">= <expr pos:start="13:27" pos:end="13:41"><name pos:start="13:27" pos:end="13:41"><name pos:start="13:27" pos:end="13:30">bsfc</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:21">unit_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int32_t</name></type> <name pos:start="19:13" pos:end="19:20">nal_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:30"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:23">cumul_size</name>    <init pos:start="21:28" pos:end="21:30">= <expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:44"><decl pos:start="23:5" pos:end="23:43"><type pos:start="23:5" pos:end="23:19"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:17">uint8_t</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:26">buf_end</name> <init pos:start="23:28" pos:end="23:43">= <expr pos:start="23:30" pos:end="23:43"><name pos:start="23:30" pos:end="23:32">buf</name> <operator pos:start="23:34" pos:end="23:34">+</operator> <name pos:start="23:36" pos:end="23:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:16"><decl pos:start="25:5" pos:end="25:15"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ret</name> <init pos:start="25:13" pos:end="25:15">= <expr pos:start="25:15" pos:end="25:15"><literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:27">/* nothing to filter */</comment>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:55">(<expr pos:start="31:9" pos:end="31:54"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:25"><name pos:start="31:10" pos:end="31:14">avctx</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:25">extradata</name></name> <operator pos:start="31:27" pos:end="31:28">||</operator> <name pos:start="31:30" pos:end="31:50"><name pos:start="31:30" pos:end="31:34">avctx</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:50">extradata_size</name></name> <operator pos:start="31:52" pos:end="31:52">&lt;</operator> <literal type="number" pos:start="31:54" pos:end="31:54">6</literal></expr>)</condition> <block pos:start="31:57" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:17">

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:16">poutbuf</name>      <operator pos:start="33:23" pos:end="33:23">=</operator> <operator pos:start="33:25" pos:end="33:25">(</operator><name pos:start="33:26" pos:end="33:32">uint8_t</name> <operator pos:start="33:34" pos:end="33:34">*</operator><operator pos:start="33:35" pos:end="33:35">)</operator><name pos:start="33:36" pos:end="33:38">buf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:21">poutbuf_size</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:32">buf_size</name></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:55">/* retrieve sps and pps NAL units from extradata */</comment>

    <if_stmt pos:start="45:5" pos:end="69:5"><if pos:start="45:5" pos:end="69:5">if <condition pos:start="45:8" pos:end="45:31">(<expr pos:start="45:9" pos:end="45:30"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:30"><name pos:start="45:10" pos:end="45:12">ctx</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:30">extradata_parsed</name></name></expr>)</condition> <block pos:start="45:33" pos:end="69:5">{<block_content pos:start="47:9" pos:end="67:34">

        <if_stmt pos:start="47:9" pos:end="49:36"><if pos:start="47:9" pos:end="49:36">if <condition pos:start="47:12" pos:end="47:55">(<expr pos:start="47:13" pos:end="47:54"><name pos:start="47:13" pos:end="47:16">args</name> <operator pos:start="47:18" pos:end="47:19">&amp;&amp;</operator> <call pos:start="47:21" pos:end="47:54"><name pos:start="47:21" pos:end="47:26">strstr</name><argument_list pos:start="47:27" pos:end="47:54">(<argument pos:start="47:28" pos:end="47:31"><expr pos:start="47:28" pos:end="47:31"><name pos:start="47:28" pos:end="47:31">args</name></expr></argument>, <argument pos:start="47:34" pos:end="47:53"><expr pos:start="47:34" pos:end="47:53"><literal type="string" pos:start="47:34" pos:end="47:53">"private_spspps_buf"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:36"><block_content pos:start="49:13" pos:end="49:36">

            <expr_stmt pos:start="49:13" pos:end="49:36"><expr pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:31"><name pos:start="49:13" pos:end="49:15">ctx</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:31">private_spspps</name></name> <operator pos:start="49:33" pos:end="49:33">=</operator> <literal type="number" pos:start="49:35" pos:end="49:35">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:81"><expr pos:start="53:9" pos:end="53:80"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:80"><name pos:start="53:15" pos:end="53:38">h264_extradata_to_annexb</name><argument_list pos:start="53:39" pos:end="53:80">(<argument pos:start="53:40" pos:end="53:42"><expr pos:start="53:40" pos:end="53:42"><name pos:start="53:40" pos:end="53:42">ctx</name></expr></argument>, <argument pos:start="53:45" pos:end="53:49"><expr pos:start="53:45" pos:end="53:49"><name pos:start="53:45" pos:end="53:49">avctx</name></expr></argument>, <argument pos:start="53:52" pos:end="53:79"><expr pos:start="53:52" pos:end="53:79"><name pos:start="53:52" pos:end="53:79">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:23"><if pos:start="55:9" pos:end="57:23">if <condition pos:start="55:12" pos:end="55:20">(<expr pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">&lt;</operator> <literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:23"><block_content pos:start="57:13" pos:end="57:23">

            <return pos:start="57:13" pos:end="57:23">return <expr pos:start="57:20" pos:end="57:22"><name pos:start="57:20" pos:end="57:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:36"><expr pos:start="59:9" pos:end="59:35"><name pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:11">ctx</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:24">length_size</name></name>      <operator pos:start="59:31" pos:end="59:31">=</operator> <name pos:start="59:33" pos:end="59:35">ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:34"><expr pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:11">ctx</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:20">new_idr</name></name>          <operator pos:start="61:31" pos:end="61:31">=</operator> <literal type="number" pos:start="61:33" pos:end="61:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:34"><expr pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:11">ctx</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:25">idr_sps_seen</name></name>     <operator pos:start="63:31" pos:end="63:31">=</operator> <literal type="number" pos:start="63:33" pos:end="63:33">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:34"><expr pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:11">ctx</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:25">idr_pps_seen</name></name>     <operator pos:start="65:31" pos:end="65:31">=</operator> <literal type="number" pos:start="65:33" pos:end="65:33">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:34"><expr pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:11">ctx</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:29">extradata_parsed</name></name> <operator pos:start="67:31" pos:end="67:31">=</operator> <literal type="number" pos:start="67:33" pos:end="67:33">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:22"><expr pos:start="73:5" pos:end="73:21"><operator pos:start="73:5" pos:end="73:5">*</operator><name pos:start="73:6" pos:end="73:17">poutbuf_size</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <literal type="number" pos:start="73:21" pos:end="73:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:25"><expr pos:start="75:5" pos:end="75:24"><operator pos:start="75:5" pos:end="75:5">*</operator><name pos:start="75:6" pos:end="75:12">poutbuf</name>      <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:24">NULL</name></expr>;</expr_stmt>

    <do pos:start="77:5" pos:end="221:36">do <block pos:start="77:8" pos:end="221:5">{<block_content pos:start="79:9" pos:end="219:50">

        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:11">ret</name><operator pos:start="79:12" pos:end="79:12">=</operator> <call pos:start="79:14" pos:end="79:28"><name pos:start="79:14" pos:end="79:20">AVERROR</name><argument_list pos:start="79:21" pos:end="79:28">(<argument pos:start="79:22" pos:end="79:27"><expr pos:start="79:22" pos:end="79:27"><name pos:start="79:22" pos:end="79:27">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="83:22"><if pos:start="81:9" pos:end="83:22">if <condition pos:start="81:12" pos:end="81:45">(<expr pos:start="81:13" pos:end="81:44"><name pos:start="81:13" pos:end="81:15">buf</name> <operator pos:start="81:17" pos:end="81:17">+</operator> <name pos:start="81:19" pos:end="81:34"><name pos:start="81:19" pos:end="81:21">ctx</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:34">length_size</name></name> <operator pos:start="81:36" pos:end="81:36">&gt;</operator> <name pos:start="81:38" pos:end="81:44">buf_end</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:22"><block_content pos:start="83:13" pos:end="83:22">

            <goto pos:start="83:13" pos:end="83:22">goto <name pos:start="83:18" pos:end="83:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <for pos:start="87:9" pos:end="89:48">for <control pos:start="87:13" pos:end="87:58">(<init pos:start="87:14" pos:end="87:33"><expr pos:start="87:14" pos:end="87:25"><name pos:start="87:14" pos:end="87:21">nal_size</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <literal type="number" pos:start="87:25" pos:end="87:25">0</literal></expr><operator pos:start="87:26" pos:end="87:26">,</operator> <expr pos:start="87:28" pos:end="87:32"><name pos:start="87:28" pos:end="87:28">i</name> <operator pos:start="87:30" pos:end="87:30">=</operator> <literal type="number" pos:start="87:32" pos:end="87:32">0</literal></expr>;</init> <condition pos:start="87:35" pos:end="87:53"><expr pos:start="87:35" pos:end="87:52"><name pos:start="87:35" pos:end="87:35">i</name><operator pos:start="87:36" pos:end="87:36">&lt;</operator><name pos:start="87:37" pos:end="87:52"><name pos:start="87:37" pos:end="87:39">ctx</name><operator pos:start="87:40" pos:end="87:41">-&gt;</operator><name pos:start="87:42" pos:end="87:52">length_size</name></name></expr>;</condition> <incr pos:start="87:55" pos:end="87:57"><expr pos:start="87:55" pos:end="87:57"><name pos:start="87:55" pos:end="87:55">i</name><operator pos:start="87:56" pos:end="87:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:13" pos:end="89:48"><block_content pos:start="89:13" pos:end="89:48">

            <expr_stmt pos:start="89:13" pos:end="89:48"><expr pos:start="89:13" pos:end="89:47"><name pos:start="89:13" pos:end="89:20">nal_size</name> <operator pos:start="89:22" pos:end="89:22">=</operator> <operator pos:start="89:24" pos:end="89:24">(</operator><name pos:start="89:25" pos:end="89:32">nal_size</name> <operator pos:start="89:34" pos:end="89:35">&lt;&lt;</operator> <literal type="number" pos:start="89:37" pos:end="89:37">8</literal><operator pos:start="89:38" pos:end="89:38">)</operator> <operator pos:start="89:40" pos:end="89:40">|</operator> <name pos:start="89:42" pos:end="89:47"><name pos:start="89:42" pos:end="89:44">buf</name><index pos:start="89:45" pos:end="89:47">[<expr pos:start="89:46" pos:end="89:46"><name pos:start="89:46" pos:end="89:46">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="93:9" pos:end="93:37"><expr pos:start="93:9" pos:end="93:36"><name pos:start="93:9" pos:end="93:11">buf</name>      <operator pos:start="93:18" pos:end="93:19">+=</operator> <name pos:start="93:21" pos:end="93:36"><name pos:start="93:21" pos:end="93:23">ctx</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:36">length_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:32"><expr pos:start="95:9" pos:end="95:31"><name pos:start="95:9" pos:end="95:17">unit_type</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <operator pos:start="95:21" pos:end="95:21">*</operator><name pos:start="95:22" pos:end="95:24">buf</name> <operator pos:start="95:26" pos:end="95:26">&amp;</operator> <literal type="number" pos:start="95:28" pos:end="95:31">0x1f</literal></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="101:22"><if pos:start="99:9" pos:end="101:22">if <condition pos:start="99:12" pos:end="99:53">(<expr pos:start="99:13" pos:end="99:52"><name pos:start="99:13" pos:end="99:15">buf</name> <operator pos:start="99:17" pos:end="99:17">+</operator> <name pos:start="99:19" pos:end="99:26">nal_size</name> <operator pos:start="99:28" pos:end="99:28">&gt;</operator> <name pos:start="99:30" pos:end="99:36">buf_end</name> <operator pos:start="99:38" pos:end="99:39">||</operator> <name pos:start="99:41" pos:end="99:48">nal_size</name> <operator pos:start="99:50" pos:end="99:50">&lt;</operator> <literal type="number" pos:start="99:52" pos:end="99:52">0</literal></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:22"><block_content pos:start="101:13" pos:end="101:22">

            <goto pos:start="101:13" pos:end="101:22">goto <name pos:start="101:18" pos:end="101:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="141:9"><if pos:start="105:9" pos:end="107:49">if <condition pos:start="105:12" pos:end="105:27">(<expr pos:start="105:13" pos:end="105:26"><name pos:start="105:13" pos:end="105:21">unit_type</name> <operator pos:start="105:23" pos:end="105:24">==</operator> <literal type="number" pos:start="105:26" pos:end="105:26">7</literal></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:49"><block_content pos:start="107:13" pos:end="107:49">

            <expr_stmt pos:start="107:13" pos:end="107:49"><expr pos:start="107:13" pos:end="107:48"><name pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:15">ctx</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:29">idr_sps_seen</name></name> <operator pos:start="107:31" pos:end="107:31">=</operator> <name pos:start="107:33" pos:end="107:44"><name pos:start="107:33" pos:end="107:35">ctx</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:44">new_idr</name></name> <operator pos:start="107:46" pos:end="107:46">=</operator> <literal type="number" pos:start="107:48" pos:end="107:48">1</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="109:9" pos:end="141:9">else if <condition pos:start="109:17" pos:end="109:32">(<expr pos:start="109:18" pos:end="109:31"><name pos:start="109:18" pos:end="109:26">unit_type</name> <operator pos:start="109:28" pos:end="109:29">==</operator> <literal type="number" pos:start="109:31" pos:end="109:31">8</literal></expr>)</condition> <block pos:start="109:34" pos:end="141:9">{<block_content pos:start="111:13" pos:end="139:13">

            <expr_stmt pos:start="111:13" pos:end="111:49"><expr pos:start="111:13" pos:end="111:48"><name pos:start="111:13" pos:end="111:29"><name pos:start="111:13" pos:end="111:15">ctx</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:29">idr_pps_seen</name></name> <operator pos:start="111:31" pos:end="111:31">=</operator> <name pos:start="111:33" pos:end="111:44"><name pos:start="111:33" pos:end="111:35">ctx</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:44">new_idr</name></name> <operator pos:start="111:46" pos:end="111:46">=</operator> <literal type="number" pos:start="111:48" pos:end="111:48">1</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="113:13" pos:end="113:75">/* if SPS has not been seen yet, prepend the AVCC one to PPS */</comment>

            <if_stmt pos:start="115:13" pos:end="139:13"><if pos:start="115:13" pos:end="139:13">if <condition pos:start="115:16" pos:end="115:35">(<expr pos:start="115:17" pos:end="115:34"><operator pos:start="115:17" pos:end="115:17">!</operator><name pos:start="115:18" pos:end="115:34"><name pos:start="115:18" pos:end="115:20">ctx</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:34">idr_sps_seen</name></name></expr>)</condition> <block pos:start="115:37" pos:end="139:13">{<block_content pos:start="117:17" pos:end="137:17">

                <if_stmt pos:start="117:17" pos:end="137:17"><if pos:start="117:17" pos:end="119:124">if <condition pos:start="117:20" pos:end="117:42">(<expr pos:start="117:21" pos:end="117:41"><name pos:start="117:21" pos:end="117:35"><name pos:start="117:21" pos:end="117:23">ctx</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:35">sps_offset</name></name> <operator pos:start="117:37" pos:end="117:38">==</operator> <operator pos:start="117:40" pos:end="117:40">-</operator><literal type="number" pos:start="117:41" pos:end="117:41">1</literal></expr>)</condition><block type="pseudo" pos:start="119:21" pos:end="119:124"><block_content pos:start="119:21" pos:end="119:124">

                    <expr_stmt pos:start="119:21" pos:end="119:124"><expr pos:start="119:21" pos:end="119:123"><call pos:start="119:21" pos:end="119:123"><name pos:start="119:21" pos:end="119:26">av_log</name><argument_list pos:start="119:27" pos:end="119:123">(<argument pos:start="119:28" pos:end="119:32"><expr pos:start="119:28" pos:end="119:32"><name pos:start="119:28" pos:end="119:32">avctx</name></expr></argument>, <argument pos:start="119:35" pos:end="119:48"><expr pos:start="119:35" pos:end="119:48"><name pos:start="119:35" pos:end="119:48">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="119:51" pos:end="119:122"><expr pos:start="119:51" pos:end="119:122"><literal type="string" pos:start="119:51" pos:end="119:122">"SPS not present in the stream, nor in AVCC, stream may be unreadable\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="121:17" pos:end="137:17">else <block pos:start="121:22" pos:end="137:17">{<block_content pos:start="123:21" pos:end="135:34">

                    <if_stmt pos:start="123:21" pos:end="131:34"><if pos:start="123:21" pos:end="131:34">if <condition pos:start="123:24" pos:end="129:61">(<expr pos:start="123:25" pos:end="129:60"><operator pos:start="123:25" pos:end="123:25">(</operator><name pos:start="123:26" pos:end="123:28">ret</name> <operator pos:start="123:30" pos:end="123:30">=</operator> <call pos:start="123:32" pos:end="129:55"><name pos:start="123:32" pos:end="123:45">alloc_and_copy</name><argument_list pos:start="123:46" pos:end="129:55">(<argument pos:start="123:47" pos:end="123:53"><expr pos:start="123:47" pos:end="123:53"><name pos:start="123:47" pos:end="123:53">poutbuf</name></expr></argument>, <argument pos:start="123:56" pos:end="123:67"><expr pos:start="123:56" pos:end="123:67"><name pos:start="123:56" pos:end="123:67">poutbuf_size</name></expr></argument>,

                                         <argument pos:start="125:42" pos:end="125:74"><expr pos:start="125:42" pos:end="125:74"><name pos:start="125:42" pos:end="125:56"><name pos:start="125:42" pos:end="125:44">ctx</name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:56">spspps_buf</name></name> <operator pos:start="125:58" pos:end="125:58">+</operator> <name pos:start="125:60" pos:end="125:74"><name pos:start="125:60" pos:end="125:62">ctx</name><operator pos:start="125:63" pos:end="125:64">-&gt;</operator><name pos:start="125:65" pos:end="125:74">sps_offset</name></name></expr></argument>,

                                         <argument pos:start="127:42" pos:end="127:117"><expr pos:start="127:42" pos:end="127:117"><ternary pos:start="127:42" pos:end="127:117"><condition pos:start="127:42" pos:end="127:64"><expr pos:start="127:42" pos:end="127:62"><name pos:start="127:42" pos:end="127:56"><name pos:start="127:42" pos:end="127:44">ctx</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:56">pps_offset</name></name> <operator pos:start="127:58" pos:end="127:59">!=</operator> <operator pos:start="127:61" pos:end="127:61">-</operator><literal type="number" pos:start="127:62" pos:end="127:62">1</literal></expr> ?</condition><then pos:start="127:66" pos:end="127:80"> <expr pos:start="127:66" pos:end="127:80"><name pos:start="127:66" pos:end="127:80"><name pos:start="127:66" pos:end="127:68">ctx</name><operator pos:start="127:69" pos:end="127:70">-&gt;</operator><name pos:start="127:71" pos:end="127:80">pps_offset</name></name></expr> </then><else pos:start="127:82" pos:end="127:117">: <expr pos:start="127:84" pos:end="127:117"><name pos:start="127:84" pos:end="127:99"><name pos:start="127:84" pos:end="127:86">ctx</name><operator pos:start="127:87" pos:end="127:88">-&gt;</operator><name pos:start="127:89" pos:end="127:99">spspps_size</name></name> <operator pos:start="127:101" pos:end="127:101">-</operator> <name pos:start="127:103" pos:end="127:117"><name pos:start="127:103" pos:end="127:105">ctx</name><operator pos:start="127:106" pos:end="127:107">-&gt;</operator><name pos:start="127:108" pos:end="127:117">sps_offset</name></name></expr></else></ternary></expr></argument>,

                                         <argument pos:start="129:42" pos:end="129:44"><expr pos:start="129:42" pos:end="129:44"><name pos:start="129:42" pos:end="129:44">buf</name></expr></argument>, <argument pos:start="129:47" pos:end="129:54"><expr pos:start="129:47" pos:end="129:54"><name pos:start="129:47" pos:end="129:54">nal_size</name></expr></argument>)</argument_list></call><operator pos:start="129:56" pos:end="129:56">)</operator> <operator pos:start="129:58" pos:end="129:58">&lt;</operator> <literal type="number" pos:start="129:60" pos:end="129:60">0</literal></expr>)</condition><block type="pseudo" pos:start="131:25" pos:end="131:34"><block_content pos:start="131:25" pos:end="131:34">

                        <goto pos:start="131:25" pos:end="131:34">goto <name pos:start="131:30" pos:end="131:33">fail</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:42"><expr pos:start="133:21" pos:end="133:41"><name pos:start="133:21" pos:end="133:37"><name pos:start="133:21" pos:end="133:23">ctx</name><operator pos:start="133:24" pos:end="133:25">-&gt;</operator><name pos:start="133:26" pos:end="133:37">idr_sps_seen</name></name> <operator pos:start="133:39" pos:end="133:39">=</operator> <literal type="number" pos:start="133:41" pos:end="133:41">1</literal></expr>;</expr_stmt>

                    <goto pos:start="135:21" pos:end="135:34">goto <name pos:start="135:26" pos:end="135:33">next_nal</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="145:9" pos:end="149:90">/* if this is a new IDR picture following an IDR picture, reset the idr flag.

         * Just check first_mb_in_slice to be 0 as this is the simplest solution.

         * This could be checking idr_pic_id instead, but would complexify the parsing. */</comment>

        <if_stmt pos:start="151:9" pos:end="153:29"><if pos:start="151:9" pos:end="153:29">if <condition pos:start="151:12" pos:end="151:63">(<expr pos:start="151:13" pos:end="151:62"><operator pos:start="151:13" pos:end="151:13">!</operator><name pos:start="151:14" pos:end="151:25"><name pos:start="151:14" pos:end="151:16">ctx</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:25">new_idr</name></name> <operator pos:start="151:27" pos:end="151:28">&amp;&amp;</operator> <name pos:start="151:30" pos:end="151:38">unit_type</name> <operator pos:start="151:40" pos:end="151:41">==</operator> <literal type="number" pos:start="151:43" pos:end="151:43">5</literal> <operator pos:start="151:45" pos:end="151:46">&amp;&amp;</operator> <operator pos:start="151:48" pos:end="151:48">(</operator><name pos:start="151:49" pos:end="151:54"><name pos:start="151:49" pos:end="151:51">buf</name><index pos:start="151:52" pos:end="151:54">[<expr pos:start="151:53" pos:end="151:53"><literal type="number" pos:start="151:53" pos:end="151:53">1</literal></expr>]</index></name> <operator pos:start="151:56" pos:end="151:56">&amp;</operator> <literal type="number" pos:start="151:58" pos:end="151:61">0x80</literal><operator pos:start="151:62" pos:end="151:62">)</operator></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:29"><block_content pos:start="153:13" pos:end="153:29">

            <expr_stmt pos:start="153:13" pos:end="153:29"><expr pos:start="153:13" pos:end="153:28"><name pos:start="153:13" pos:end="153:24"><name pos:start="153:13" pos:end="153:15">ctx</name><operator pos:start="153:16" pos:end="153:17">-&gt;</operator><name pos:start="153:18" pos:end="153:24">new_idr</name></name> <operator pos:start="153:26" pos:end="153:26">=</operator> <literal type="number" pos:start="153:28" pos:end="153:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="157:9" pos:end="157:108">/* prepend only to the first type 5 NAL unit of an IDR picture, if no sps/pps are already present */</comment>

        <if_stmt pos:start="159:9" pos:end="211:9"><if pos:start="159:9" pos:end="173:9">if <condition pos:start="159:12" pos:end="159:87">(<expr pos:start="159:13" pos:end="159:86"><name pos:start="159:13" pos:end="159:24"><name pos:start="159:13" pos:end="159:15">ctx</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:24">new_idr</name></name> <operator pos:start="159:26" pos:end="159:27">&amp;&amp;</operator> <name pos:start="159:29" pos:end="159:37">unit_type</name> <operator pos:start="159:39" pos:end="159:40">==</operator> <literal type="number" pos:start="159:42" pos:end="159:42">5</literal> <operator pos:start="159:44" pos:end="159:45">&amp;&amp;</operator> <operator pos:start="159:47" pos:end="159:47">!</operator><name pos:start="159:48" pos:end="159:64"><name pos:start="159:48" pos:end="159:50">ctx</name><operator pos:start="159:51" pos:end="159:52">-&gt;</operator><name pos:start="159:53" pos:end="159:64">idr_sps_seen</name></name> <operator pos:start="159:66" pos:end="159:67">&amp;&amp;</operator> <operator pos:start="159:69" pos:end="159:69">!</operator><name pos:start="159:70" pos:end="159:86"><name pos:start="159:70" pos:end="159:72">ctx</name><operator pos:start="159:73" pos:end="159:74">-&gt;</operator><name pos:start="159:75" pos:end="159:86">idr_pps_seen</name></name></expr>)</condition> <block pos:start="159:89" pos:end="173:9">{<block_content pos:start="161:13" pos:end="169:29">

            <if_stmt pos:start="161:13" pos:end="167:26"><if pos:start="161:13" pos:end="167:26">if <condition pos:start="161:16" pos:end="165:51">(<expr pos:start="161:17" pos:end="165:50"><operator pos:start="161:17" pos:end="161:17">(</operator><name pos:start="161:18" pos:end="161:20">ret</name><operator pos:start="161:21" pos:end="161:21">=</operator><call pos:start="161:22" pos:end="165:45"><name pos:start="161:22" pos:end="161:35">alloc_and_copy</name><argument_list pos:start="161:36" pos:end="165:45">(<argument pos:start="161:37" pos:end="161:43"><expr pos:start="161:37" pos:end="161:43"><name pos:start="161:37" pos:end="161:43">poutbuf</name></expr></argument>, <argument pos:start="161:46" pos:end="161:57"><expr pos:start="161:46" pos:end="161:57"><name pos:start="161:46" pos:end="161:57">poutbuf_size</name></expr></argument>,

                               <argument pos:start="163:32" pos:end="163:46"><expr pos:start="163:32" pos:end="163:46"><name pos:start="163:32" pos:end="163:46"><name pos:start="163:32" pos:end="163:34">ctx</name><operator pos:start="163:35" pos:end="163:36">-&gt;</operator><name pos:start="163:37" pos:end="163:46">spspps_buf</name></name></expr></argument>, <argument pos:start="163:49" pos:end="163:64"><expr pos:start="163:49" pos:end="163:64"><name pos:start="163:49" pos:end="163:64"><name pos:start="163:49" pos:end="163:51">ctx</name><operator pos:start="163:52" pos:end="163:53">-&gt;</operator><name pos:start="163:54" pos:end="163:64">spspps_size</name></name></expr></argument>,

                               <argument pos:start="165:32" pos:end="165:34"><expr pos:start="165:32" pos:end="165:34"><name pos:start="165:32" pos:end="165:34">buf</name></expr></argument>, <argument pos:start="165:37" pos:end="165:44"><expr pos:start="165:37" pos:end="165:44"><name pos:start="165:37" pos:end="165:44">nal_size</name></expr></argument>)</argument_list></call><operator pos:start="165:46" pos:end="165:46">)</operator> <operator pos:start="165:48" pos:end="165:48">&lt;</operator> <literal type="number" pos:start="165:50" pos:end="165:50">0</literal></expr>)</condition><block type="pseudo" pos:start="167:17" pos:end="167:26"><block_content pos:start="167:17" pos:end="167:26">

                <goto pos:start="167:17" pos:end="167:26">goto <name pos:start="167:22" pos:end="167:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:29"><expr pos:start="169:13" pos:end="169:28"><name pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:15">ctx</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:24">new_idr</name></name> <operator pos:start="169:26" pos:end="169:26">=</operator> <literal type="number" pos:start="169:28" pos:end="169:28">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="171:9" pos:end="171:56">/* if only SPS has been seen, also insert PPS */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="173:11" pos:end="193:9">else if <condition pos:start="173:19" pos:end="173:93">(<expr pos:start="173:20" pos:end="173:92"><name pos:start="173:20" pos:end="173:31"><name pos:start="173:20" pos:end="173:22">ctx</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:31">new_idr</name></name> <operator pos:start="173:33" pos:end="173:34">&amp;&amp;</operator> <name pos:start="173:36" pos:end="173:44">unit_type</name> <operator pos:start="173:46" pos:end="173:47">==</operator> <literal type="number" pos:start="173:49" pos:end="173:49">5</literal> <operator pos:start="173:51" pos:end="173:52">&amp;&amp;</operator> <name pos:start="173:54" pos:end="173:70"><name pos:start="173:54" pos:end="173:56">ctx</name><operator pos:start="173:57" pos:end="173:58">-&gt;</operator><name pos:start="173:59" pos:end="173:70">idr_sps_seen</name></name> <operator pos:start="173:72" pos:end="173:73">&amp;&amp;</operator> <operator pos:start="173:75" pos:end="173:75">!</operator><name pos:start="173:76" pos:end="173:92"><name pos:start="173:76" pos:end="173:78">ctx</name><operator pos:start="173:79" pos:end="173:80">-&gt;</operator><name pos:start="173:81" pos:end="173:92">idr_pps_seen</name></name></expr>)</condition> <block pos:start="173:95" pos:end="193:9">{<block_content pos:start="175:13" pos:end="191:26">

            <if_stmt pos:start="175:13" pos:end="191:26"><if pos:start="175:13" pos:end="185:13">if <condition pos:start="175:16" pos:end="175:38">(<expr pos:start="175:17" pos:end="175:37"><name pos:start="175:17" pos:end="175:31"><name pos:start="175:17" pos:end="175:19">ctx</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:31">pps_offset</name></name> <operator pos:start="175:33" pos:end="175:34">==</operator> <operator pos:start="175:36" pos:end="175:36">-</operator><literal type="number" pos:start="175:37" pos:end="175:37">1</literal></expr>)</condition> <block pos:start="175:40" pos:end="185:13">{<block_content pos:start="177:17" pos:end="183:30">

                <expr_stmt pos:start="177:17" pos:end="177:120"><expr pos:start="177:17" pos:end="177:119"><call pos:start="177:17" pos:end="177:119"><name pos:start="177:17" pos:end="177:22">av_log</name><argument_list pos:start="177:23" pos:end="177:119">(<argument pos:start="177:24" pos:end="177:28"><expr pos:start="177:24" pos:end="177:28"><name pos:start="177:24" pos:end="177:28">avctx</name></expr></argument>, <argument pos:start="177:31" pos:end="177:44"><expr pos:start="177:31" pos:end="177:44"><name pos:start="177:31" pos:end="177:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="177:47" pos:end="177:118"><expr pos:start="177:47" pos:end="177:118"><literal type="string" pos:start="177:47" pos:end="177:118">"PPS not present in the stream, nor in AVCC, stream may be unreadable\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="179:17" pos:end="183:30"><if pos:start="179:17" pos:end="183:30">if <condition pos:start="179:20" pos:end="181:66">(<expr pos:start="179:21" pos:end="181:65"><operator pos:start="179:21" pos:end="179:21">(</operator><name pos:start="179:22" pos:end="179:24">ret</name> <operator pos:start="179:26" pos:end="179:26">=</operator> <call pos:start="179:28" pos:end="181:60"><name pos:start="179:28" pos:end="179:41">alloc_and_copy</name><argument_list pos:start="179:42" pos:end="181:60">(<argument pos:start="179:43" pos:end="179:49"><expr pos:start="179:43" pos:end="179:49"><name pos:start="179:43" pos:end="179:49">poutbuf</name></expr></argument>, <argument pos:start="179:52" pos:end="179:63"><expr pos:start="179:52" pos:end="179:63"><name pos:start="179:52" pos:end="179:63">poutbuf_size</name></expr></argument>,

                                     <argument pos:start="181:38" pos:end="181:41"><expr pos:start="181:38" pos:end="181:41"><name pos:start="181:38" pos:end="181:41">NULL</name></expr></argument>, <argument pos:start="181:44" pos:end="181:44"><expr pos:start="181:44" pos:end="181:44"><literal type="number" pos:start="181:44" pos:end="181:44">0</literal></expr></argument>, <argument pos:start="181:47" pos:end="181:49"><expr pos:start="181:47" pos:end="181:49"><name pos:start="181:47" pos:end="181:49">buf</name></expr></argument>, <argument pos:start="181:52" pos:end="181:59"><expr pos:start="181:52" pos:end="181:59"><name pos:start="181:52" pos:end="181:59">nal_size</name></expr></argument>)</argument_list></call><operator pos:start="181:61" pos:end="181:61">)</operator> <operator pos:start="181:63" pos:end="181:63">&lt;</operator> <literal type="number" pos:start="181:65" pos:end="181:65">0</literal></expr>)</condition><block type="pseudo" pos:start="183:21" pos:end="183:30"><block_content pos:start="183:21" pos:end="183:30">

                    <goto pos:start="183:21" pos:end="183:30">goto <name pos:start="183:26" pos:end="183:29">fail</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="185:15" pos:end="191:26">else if <condition pos:start="185:23" pos:end="189:60">(<expr pos:start="185:24" pos:end="189:59"><operator pos:start="185:24" pos:end="185:24">(</operator><name pos:start="185:25" pos:end="185:27">ret</name> <operator pos:start="185:29" pos:end="185:29">=</operator> <call pos:start="185:31" pos:end="189:54"><name pos:start="185:31" pos:end="185:44">alloc_and_copy</name><argument_list pos:start="185:45" pos:end="189:54">(<argument pos:start="185:46" pos:end="185:52"><expr pos:start="185:46" pos:end="185:52"><name pos:start="185:46" pos:end="185:52">poutbuf</name></expr></argument>, <argument pos:start="185:55" pos:end="185:66"><expr pos:start="185:55" pos:end="185:66"><name pos:start="185:55" pos:end="185:66">poutbuf_size</name></expr></argument>,

                                        <argument pos:start="187:41" pos:end="187:73"><expr pos:start="187:41" pos:end="187:73"><name pos:start="187:41" pos:end="187:55"><name pos:start="187:41" pos:end="187:43">ctx</name><operator pos:start="187:44" pos:end="187:45">-&gt;</operator><name pos:start="187:46" pos:end="187:55">spspps_buf</name></name> <operator pos:start="187:57" pos:end="187:57">+</operator> <name pos:start="187:59" pos:end="187:73"><name pos:start="187:59" pos:end="187:61">ctx</name><operator pos:start="187:62" pos:end="187:63">-&gt;</operator><name pos:start="187:64" pos:end="187:73">pps_offset</name></name></expr></argument>, <argument pos:start="187:76" pos:end="187:109"><expr pos:start="187:76" pos:end="187:109"><name pos:start="187:76" pos:end="187:91"><name pos:start="187:76" pos:end="187:78">ctx</name><operator pos:start="187:79" pos:end="187:80">-&gt;</operator><name pos:start="187:81" pos:end="187:91">spspps_size</name></name> <operator pos:start="187:93" pos:end="187:93">-</operator> <name pos:start="187:95" pos:end="187:109"><name pos:start="187:95" pos:end="187:97">ctx</name><operator pos:start="187:98" pos:end="187:99">-&gt;</operator><name pos:start="187:100" pos:end="187:109">pps_offset</name></name></expr></argument>,

                                        <argument pos:start="189:41" pos:end="189:43"><expr pos:start="189:41" pos:end="189:43"><name pos:start="189:41" pos:end="189:43">buf</name></expr></argument>, <argument pos:start="189:46" pos:end="189:53"><expr pos:start="189:46" pos:end="189:53"><name pos:start="189:46" pos:end="189:53">nal_size</name></expr></argument>)</argument_list></call><operator pos:start="189:55" pos:end="189:55">)</operator> <operator pos:start="189:57" pos:end="189:57">&lt;</operator> <literal type="number" pos:start="189:59" pos:end="189:59">0</literal></expr>)</condition><block type="pseudo" pos:start="191:17" pos:end="191:26"><block_content pos:start="191:17" pos:end="191:26">

                <goto pos:start="191:17" pos:end="191:26">goto <name pos:start="191:22" pos:end="191:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="193:11" pos:end="211:9">else <block pos:start="193:16" pos:end="211:9">{<block_content pos:start="195:13" pos:end="209:13">

            <if_stmt pos:start="195:13" pos:end="199:26"><if pos:start="195:13" pos:end="199:26">if <condition pos:start="195:16" pos:end="197:60">(<expr pos:start="195:17" pos:end="197:59"><operator pos:start="195:17" pos:end="195:17">(</operator><name pos:start="195:18" pos:end="195:20">ret</name><operator pos:start="195:21" pos:end="195:21">=</operator><call pos:start="195:22" pos:end="197:54"><name pos:start="195:22" pos:end="195:35">alloc_and_copy</name><argument_list pos:start="195:36" pos:end="197:54">(<argument pos:start="195:37" pos:end="195:43"><expr pos:start="195:37" pos:end="195:43"><name pos:start="195:37" pos:end="195:43">poutbuf</name></expr></argument>, <argument pos:start="195:46" pos:end="195:57"><expr pos:start="195:46" pos:end="195:57"><name pos:start="195:46" pos:end="195:57">poutbuf_size</name></expr></argument>,

                               <argument pos:start="197:32" pos:end="197:35"><expr pos:start="197:32" pos:end="197:35"><name pos:start="197:32" pos:end="197:35">NULL</name></expr></argument>, <argument pos:start="197:38" pos:end="197:38"><expr pos:start="197:38" pos:end="197:38"><literal type="number" pos:start="197:38" pos:end="197:38">0</literal></expr></argument>, <argument pos:start="197:41" pos:end="197:43"><expr pos:start="197:41" pos:end="197:43"><name pos:start="197:41" pos:end="197:43">buf</name></expr></argument>, <argument pos:start="197:46" pos:end="197:53"><expr pos:start="197:46" pos:end="197:53"><name pos:start="197:46" pos:end="197:53">nal_size</name></expr></argument>)</argument_list></call><operator pos:start="197:55" pos:end="197:55">)</operator> <operator pos:start="197:57" pos:end="197:57">&lt;</operator> <literal type="number" pos:start="197:59" pos:end="197:59">0</literal></expr>)</condition><block type="pseudo" pos:start="199:17" pos:end="199:26"><block_content pos:start="199:17" pos:end="199:26">

                <goto pos:start="199:17" pos:end="199:26">goto <name pos:start="199:22" pos:end="199:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="201:13" pos:end="209:13"><if pos:start="201:13" pos:end="209:13">if <condition pos:start="201:16" pos:end="201:48">(<expr pos:start="201:17" pos:end="201:47"><operator pos:start="201:17" pos:end="201:17">!</operator><name pos:start="201:18" pos:end="201:29"><name pos:start="201:18" pos:end="201:20">ctx</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:29">new_idr</name></name> <operator pos:start="201:31" pos:end="201:32">&amp;&amp;</operator> <name pos:start="201:34" pos:end="201:42">unit_type</name> <operator pos:start="201:44" pos:end="201:45">==</operator> <literal type="number" pos:start="201:47" pos:end="201:47">1</literal></expr>)</condition> <block pos:start="201:50" pos:end="209:13">{<block_content pos:start="203:17" pos:end="207:38">

                <expr_stmt pos:start="203:17" pos:end="203:33"><expr pos:start="203:17" pos:end="203:32"><name pos:start="203:17" pos:end="203:28"><name pos:start="203:17" pos:end="203:19">ctx</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:28">new_idr</name></name> <operator pos:start="203:30" pos:end="203:30">=</operator> <literal type="number" pos:start="203:32" pos:end="203:32">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:38"><expr pos:start="205:17" pos:end="205:37"><name pos:start="205:17" pos:end="205:33"><name pos:start="205:17" pos:end="205:19">ctx</name><operator pos:start="205:20" pos:end="205:21">-&gt;</operator><name pos:start="205:22" pos:end="205:33">idr_sps_seen</name></name> <operator pos:start="205:35" pos:end="205:35">=</operator> <literal type="number" pos:start="205:37" pos:end="205:37">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:38"><expr pos:start="207:17" pos:end="207:37"><name pos:start="207:17" pos:end="207:33"><name pos:start="207:17" pos:end="207:19">ctx</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:33">idr_pps_seen</name></name> <operator pos:start="207:35" pos:end="207:35">=</operator> <literal type="number" pos:start="207:37" pos:end="207:37">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



<label pos:start="215:1" pos:end="215:9"><name pos:start="215:1" pos:end="215:8">next_nal</name>:</label>

        <expr_stmt pos:start="217:9" pos:end="217:31"><expr pos:start="217:9" pos:end="217:30"><name pos:start="217:9" pos:end="217:11">buf</name>        <operator pos:start="217:20" pos:end="217:21">+=</operator> <name pos:start="217:23" pos:end="217:30">nal_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:50"><expr pos:start="219:9" pos:end="219:49"><name pos:start="219:9" pos:end="219:18">cumul_size</name> <operator pos:start="219:20" pos:end="219:21">+=</operator> <name pos:start="219:23" pos:end="219:30">nal_size</name> <operator pos:start="219:32" pos:end="219:32">+</operator> <name pos:start="219:34" pos:end="219:49"><name pos:start="219:34" pos:end="219:36">ctx</name><operator pos:start="219:37" pos:end="219:38">-&gt;</operator><name pos:start="219:39" pos:end="219:49">length_size</name></name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="221:13" pos:end="221:35">(<expr pos:start="221:14" pos:end="221:34"><name pos:start="221:14" pos:end="221:23">cumul_size</name> <operator pos:start="221:25" pos:end="221:25">&lt;</operator> <name pos:start="221:27" pos:end="221:34">buf_size</name></expr>)</condition>;</do>



    <return pos:start="225:5" pos:end="225:13">return <expr pos:start="225:12" pos:end="225:12"><literal type="number" pos:start="225:12" pos:end="225:12">1</literal></expr>;</return>



<label pos:start="229:1" pos:end="229:5"><name pos:start="229:1" pos:end="229:4">fail</name>:</label>

    <expr_stmt pos:start="231:5" pos:end="231:22"><expr pos:start="231:5" pos:end="231:21"><call pos:start="231:5" pos:end="231:21"><name pos:start="231:5" pos:end="231:12">av_freep</name><argument_list pos:start="231:13" pos:end="231:21">(<argument pos:start="231:14" pos:end="231:20"><expr pos:start="231:14" pos:end="231:20"><name pos:start="231:14" pos:end="231:20">poutbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:22"><expr pos:start="233:5" pos:end="233:21"><operator pos:start="233:5" pos:end="233:5">*</operator><name pos:start="233:6" pos:end="233:17">poutbuf_size</name> <operator pos:start="233:19" pos:end="233:19">=</operator> <literal type="number" pos:start="233:21" pos:end="233:21">0</literal></expr>;</expr_stmt>

    <return pos:start="235:5" pos:end="235:15">return <expr pos:start="235:12" pos:end="235:14"><name pos:start="235:12" pos:end="235:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
