<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22589.c" pos:tabs="8"><function pos:start="1:1" pos:end="471:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mkv_write_track</name><parameter_list pos:start="1:27" pos:end="3:77">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:70"><decl pos:start="1:48" pos:end="1:70"><type pos:start="1:48" pos:end="1:70"><name pos:start="1:48" pos:end="1:65">MatroskaMuxContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">mkv</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:32"><decl pos:start="3:28" pos:end="3:32"><type pos:start="3:28" pos:end="3:32"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:32">i</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:49"><decl pos:start="3:35" pos:end="3:49"><type pos:start="3:35" pos:end="3:49"><name pos:start="3:35" pos:end="3:45">AVIOContext</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:49">pb</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:76"><decl pos:start="3:52" pos:end="3:76"><type pos:start="3:52" pos:end="3:76"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:76">default_stream_exists</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="471:1">{<block_content pos:start="7:5" pos:end="469:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:29">streams</name><index pos:start="7:30" pos:end="7:32">[<expr pos:start="7:31" pos:end="7:31"><name pos:start="7:31" pos:end="7:31">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">codec</name> <init pos:start="9:27" pos:end="9:37">= <expr pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:30">st</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:37">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">ebml_master</name></type> <name pos:start="11:17" pos:end="11:23">subinfo</name></decl>, <decl pos:start="11:26" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:15"/><name pos:start="11:26" pos:end="11:30">track</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">native_id</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">qt_id</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:60"><decl pos:start="17:5" pos:end="17:59"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:17">bit_depth</name> <init pos:start="17:19" pos:end="17:59">= <expr pos:start="17:21" pos:end="17:59"><call pos:start="17:21" pos:end="17:59"><name pos:start="17:21" pos:end="17:42">av_get_bits_per_sample</name><argument_list pos:start="17:43" pos:end="17:59">(<argument pos:start="17:44" pos:end="17:58"><expr pos:start="17:44" pos:end="17:58"><name pos:start="17:44" pos:end="17:58"><name pos:start="17:44" pos:end="17:48">codec</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:58">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:41"><decl pos:start="19:5" pos:end="19:40"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">sample_rate</name> <init pos:start="19:21" pos:end="19:40">= <expr pos:start="19:23" pos:end="19:40"><name pos:start="19:23" pos:end="19:40"><name pos:start="19:23" pos:end="19:27">codec</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:40">sample_rate</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:30"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:26">output_sample_rate</name> <init pos:start="21:28" pos:end="21:30">= <expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:25">display_width_div</name> <init pos:start="23:27" pos:end="23:29">= <expr pos:start="23:29" pos:end="23:29"><literal type="number" pos:start="23:29" pos:end="23:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:31"><decl pos:start="25:5" pos:end="25:30"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:26">display_height_div</name> <init pos:start="25:28" pos:end="25:30">= <expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:15"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">j</name></decl>, <decl pos:start="27:12" pos:end="27:14"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:12" pos:end="27:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:27"><decl pos:start="29:5" pos:end="29:26"><type pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:21">AVDictionaryEntry</name> <modifier pos:start="29:23" pos:end="29:23">*</modifier></type><name pos:start="29:24" pos:end="29:26">tag</name></decl>;</decl_stmt>



    <comment type="line" pos:start="33:5" pos:end="33:68">// ms precision is the de-facto standard timescale for mkv files</comment>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><call pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:23">avpriv_set_pts_info</name><argument_list pos:start="35:24" pos:end="35:40">(<argument pos:start="35:25" pos:end="35:26"><expr pos:start="35:25" pos:end="35:26"><name pos:start="35:25" pos:end="35:26">st</name></expr></argument>, <argument pos:start="35:29" pos:end="35:30"><expr pos:start="35:29" pos:end="35:30"><literal type="number" pos:start="35:29" pos:end="35:30">64</literal></expr></argument>, <argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><literal type="number" pos:start="35:33" pos:end="35:33">1</literal></expr></argument>, <argument pos:start="35:36" pos:end="35:39"><expr pos:start="35:36" pos:end="35:39"><literal type="number" pos:start="35:36" pos:end="35:39">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:53">(<expr pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:13">codec</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:25">codec_type</name></name> <operator pos:start="39:27" pos:end="39:28">==</operator> <name pos:start="39:30" pos:end="39:52">AVMEDIA_TYPE_ATTACHMENT</name></expr>)</condition> <block pos:start="39:55" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:17">

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:11">mkv</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:29">have_attachments</name></name> <operator pos:start="41:31" pos:end="41:31">=</operator> <literal type="number" pos:start="41:33" pos:end="41:33">1</literal></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:68"><if pos:start="49:5" pos:end="51:68">if <condition pos:start="49:8" pos:end="49:64">(<expr pos:start="49:9" pos:end="49:63"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:18">bit_depth</name> <operator pos:start="49:20" pos:end="49:21">&amp;&amp;</operator> <name pos:start="49:23" pos:end="49:37"><name pos:start="49:23" pos:end="49:27">codec</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:37">codec_id</name></name> <operator pos:start="49:39" pos:end="49:40">!=</operator> <name pos:start="49:42" pos:end="49:63">AV_CODEC_ID_ADPCM_G726</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:68"><block_content pos:start="51:9" pos:end="51:68">

        <expr_stmt pos:start="51:9" pos:end="51:68"><expr pos:start="51:9" pos:end="51:67"><name pos:start="51:9" pos:end="51:17">bit_depth</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:62"><name pos:start="51:21" pos:end="51:43">av_get_bytes_per_sample</name><argument_list pos:start="51:44" pos:end="51:62">(<argument pos:start="51:45" pos:end="51:61"><expr pos:start="51:45" pos:end="51:61"><name pos:start="51:45" pos:end="51:61"><name pos:start="51:45" pos:end="51:49">codec</name><operator pos:start="51:50" pos:end="51:51">-&gt;</operator><name pos:start="51:52" pos:end="51:61">sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="51:64" pos:end="51:65">&lt;&lt;</operator> <literal type="number" pos:start="51:67" pos:end="51:67">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="55:49"><if pos:start="53:5" pos:end="55:49">if <condition pos:start="53:8" pos:end="53:19">(<expr pos:start="53:9" pos:end="53:18"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:18">bit_depth</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:49"><block_content pos:start="55:9" pos:end="55:49">

        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:17">bit_depth</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:48"><name pos:start="55:21" pos:end="55:25">codec</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:48">bits_per_coded_sample</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="61:74"><if pos:start="59:5" pos:end="61:74">if <condition pos:start="59:8" pos:end="59:43">(<expr pos:start="59:9" pos:end="59:42"><name pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:13">codec</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:23">codec_id</name></name> <operator pos:start="59:25" pos:end="59:26">==</operator> <name pos:start="59:28" pos:end="59:42">AV_CODEC_ID_AAC</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:74"><block_content pos:start="61:9" pos:end="61:74">

        <expr_stmt pos:start="61:9" pos:end="61:74"><expr pos:start="61:9" pos:end="61:73"><call pos:start="61:9" pos:end="61:73"><name pos:start="61:9" pos:end="61:28">get_aac_sample_rates</name><argument_list pos:start="61:29" pos:end="61:73">(<argument pos:start="61:30" pos:end="61:30"><expr pos:start="61:30" pos:end="61:30"><name pos:start="61:30" pos:end="61:30">s</name></expr></argument>, <argument pos:start="61:33" pos:end="61:37"><expr pos:start="61:33" pos:end="61:37"><name pos:start="61:33" pos:end="61:37">codec</name></expr></argument>, <argument pos:start="61:40" pos:end="61:51"><expr pos:start="61:40" pos:end="61:51"><operator pos:start="61:40" pos:end="61:40">&amp;</operator><name pos:start="61:41" pos:end="61:51">sample_rate</name></expr></argument>, <argument pos:start="61:54" pos:end="61:72"><expr pos:start="61:54" pos:end="61:72"><operator pos:start="61:54" pos:end="61:54">&amp;</operator><name pos:start="61:55" pos:end="61:72">output_sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:61"><expr pos:start="65:5" pos:end="65:60"><name pos:start="65:5" pos:end="65:9">track</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <call pos:start="65:13" pos:end="65:60"><name pos:start="65:13" pos:end="65:29">start_ebml_master</name><argument_list pos:start="65:30" pos:end="65:60">(<argument pos:start="65:31" pos:end="65:32"><expr pos:start="65:31" pos:end="65:32"><name pos:start="65:31" pos:end="65:32">pb</name></expr></argument>, <argument pos:start="65:35" pos:end="65:56"><expr pos:start="65:35" pos:end="65:56"><name pos:start="65:35" pos:end="65:56">MATROSKA_ID_TRACKENTRY</name></expr></argument>, <argument pos:start="65:59" pos:end="65:59"><expr pos:start="65:59" pos:end="65:59"><literal type="number" pos:start="65:59" pos:end="65:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="69:66"><expr pos:start="67:5" pos:end="69:65"><call pos:start="67:5" pos:end="69:65"><name pos:start="67:5" pos:end="67:17">put_ebml_uint</name> <argument_list pos:start="67:19" pos:end="69:65">(<argument pos:start="67:20" pos:end="67:21"><expr pos:start="67:20" pos:end="67:21"><name pos:start="67:20" pos:end="67:21">pb</name></expr></argument>, <argument pos:start="67:24" pos:end="67:46"><expr pos:start="67:24" pos:end="67:46"><name pos:start="67:24" pos:end="67:46">MATROSKA_ID_TRACKNUMBER</name></expr></argument>,

                   <argument pos:start="69:20" pos:end="69:64"><expr pos:start="69:20" pos:end="69:64"><ternary pos:start="69:20" pos:end="69:64"><condition pos:start="69:20" pos:end="69:33"><expr pos:start="69:20" pos:end="69:31"><name pos:start="69:20" pos:end="69:31"><name pos:start="69:20" pos:end="69:22">mkv</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:31">is_dash</name></name></expr> ?</condition><then pos:start="69:35" pos:end="69:56"> <expr pos:start="69:35" pos:end="69:56"><name pos:start="69:35" pos:end="69:56"><name pos:start="69:35" pos:end="69:37">mkv</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:56">dash_track_number</name></name></expr> </then><else pos:start="69:58" pos:end="69:64">: <expr pos:start="69:60" pos:end="69:64"><name pos:start="69:60" pos:end="69:60">i</name> <operator pos:start="69:62" pos:end="69:62">+</operator> <literal type="number" pos:start="69:64" pos:end="69:64">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="73:66"><expr pos:start="71:5" pos:end="73:65"><call pos:start="71:5" pos:end="73:65"><name pos:start="71:5" pos:end="71:17">put_ebml_uint</name> <argument_list pos:start="71:19" pos:end="73:65">(<argument pos:start="71:20" pos:end="71:21"><expr pos:start="71:20" pos:end="71:21"><name pos:start="71:20" pos:end="71:21">pb</name></expr></argument>, <argument pos:start="71:24" pos:end="71:43"><expr pos:start="71:24" pos:end="71:43"><name pos:start="71:24" pos:end="71:43">MATROSKA_ID_TRACKUID</name></expr></argument>,

                   <argument pos:start="73:20" pos:end="73:64"><expr pos:start="73:20" pos:end="73:64"><ternary pos:start="73:20" pos:end="73:64"><condition pos:start="73:20" pos:end="73:33"><expr pos:start="73:20" pos:end="73:31"><name pos:start="73:20" pos:end="73:31"><name pos:start="73:20" pos:end="73:22">mkv</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:31">is_dash</name></name></expr> ?</condition><then pos:start="73:35" pos:end="73:56"> <expr pos:start="73:35" pos:end="73:56"><name pos:start="73:35" pos:end="73:56"><name pos:start="73:35" pos:end="73:37">mkv</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:56">dash_track_number</name></name></expr> </then><else pos:start="73:58" pos:end="73:64">: <expr pos:start="73:60" pos:end="73:64"><name pos:start="73:60" pos:end="73:60">i</name> <operator pos:start="73:62" pos:end="73:62">+</operator> <literal type="number" pos:start="73:64" pos:end="73:64">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:56"><expr pos:start="75:5" pos:end="75:55"><call pos:start="75:5" pos:end="75:55"><name pos:start="75:5" pos:end="75:17">put_ebml_uint</name> <argument_list pos:start="75:19" pos:end="75:55">(<argument pos:start="75:20" pos:end="75:21"><expr pos:start="75:20" pos:end="75:21"><name pos:start="75:20" pos:end="75:21">pb</name></expr></argument>, <argument pos:start="75:24" pos:end="75:50"><expr pos:start="75:24" pos:end="75:50"><name pos:start="75:24" pos:end="75:50">MATROSKA_ID_TRACKFLAGLACING</name></expr></argument> , <argument pos:start="75:54" pos:end="75:54"><expr pos:start="75:54" pos:end="75:54"><literal type="number" pos:start="75:54" pos:end="75:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="75:61" pos:end="75:78">// no lacing (yet)</comment>



    <if_stmt pos:start="79:5" pos:end="81:63"><if pos:start="79:5" pos:end="81:63">if <condition pos:start="79:8" pos:end="79:60">(<expr pos:start="79:9" pos:end="79:59"><operator pos:start="79:9" pos:end="79:9">(</operator><name pos:start="79:10" pos:end="79:12">tag</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <call pos:start="79:16" pos:end="79:58"><name pos:start="79:16" pos:end="79:26">av_dict_get</name><argument_list pos:start="79:27" pos:end="79:58">(<argument pos:start="79:28" pos:end="79:39"><expr pos:start="79:28" pos:end="79:39"><name pos:start="79:28" pos:end="79:39"><name pos:start="79:28" pos:end="79:29">st</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:39">metadata</name></name></expr></argument>, <argument pos:start="79:42" pos:end="79:48"><expr pos:start="79:42" pos:end="79:48"><literal type="string" pos:start="79:42" pos:end="79:48">"title"</literal></expr></argument>, <argument pos:start="79:51" pos:end="79:54"><expr pos:start="79:51" pos:end="79:54"><name pos:start="79:51" pos:end="79:54">NULL</name></expr></argument>, <argument pos:start="79:57" pos:end="79:57"><expr pos:start="79:57" pos:end="79:57"><literal type="number" pos:start="79:57" pos:end="79:57">0</literal></expr></argument>)</argument_list></call><operator pos:start="79:59" pos:end="79:59">)</operator></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:63"><block_content pos:start="81:9" pos:end="81:63">

        <expr_stmt pos:start="81:9" pos:end="81:63"><expr pos:start="81:9" pos:end="81:62"><call pos:start="81:9" pos:end="81:62"><name pos:start="81:9" pos:end="81:23">put_ebml_string</name><argument_list pos:start="81:24" pos:end="81:62">(<argument pos:start="81:25" pos:end="81:26"><expr pos:start="81:25" pos:end="81:26"><name pos:start="81:25" pos:end="81:26">pb</name></expr></argument>, <argument pos:start="81:29" pos:end="81:49"><expr pos:start="81:29" pos:end="81:49"><name pos:start="81:29" pos:end="81:49">MATROSKA_ID_TRACKNAME</name></expr></argument>, <argument pos:start="81:52" pos:end="81:61"><expr pos:start="81:52" pos:end="81:61"><name pos:start="81:52" pos:end="81:61"><name pos:start="81:52" pos:end="81:54">tag</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:61">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:57"><expr pos:start="83:5" pos:end="83:56"><name pos:start="83:5" pos:end="83:7">tag</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <call pos:start="83:11" pos:end="83:56"><name pos:start="83:11" pos:end="83:21">av_dict_get</name><argument_list pos:start="83:22" pos:end="83:56">(<argument pos:start="83:23" pos:end="83:34"><expr pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:24">st</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:34">metadata</name></name></expr></argument>, <argument pos:start="83:37" pos:end="83:46"><expr pos:start="83:37" pos:end="83:46"><literal type="string" pos:start="83:37" pos:end="83:46">"language"</literal></expr></argument>, <argument pos:start="83:49" pos:end="83:52"><expr pos:start="83:49" pos:end="83:52"><name pos:start="83:49" pos:end="83:52">NULL</name></expr></argument>, <argument pos:start="83:55" pos:end="83:55"><expr pos:start="83:55" pos:end="83:55"><literal type="number" pos:start="83:55" pos:end="83:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:72">(<expr pos:start="85:9" pos:end="85:71"><name pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:11">mkv</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:17">mode</name></name> <operator pos:start="85:19" pos:end="85:20">!=</operator> <name pos:start="85:22" pos:end="85:30">MODE_WEBM</name> <operator pos:start="85:32" pos:end="85:33">||</operator> <name pos:start="85:35" pos:end="85:49"><name pos:start="85:35" pos:end="85:39">codec</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:49">codec_id</name></name> <operator pos:start="85:51" pos:end="85:52">!=</operator> <name pos:start="85:54" pos:end="85:71">AV_CODEC_ID_WEBVTT</name></expr>)</condition> <block pos:start="85:74" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:93">

        <expr_stmt pos:start="87:9" pos:end="87:93"><expr pos:start="87:9" pos:end="87:92"><call pos:start="87:9" pos:end="87:92"><name pos:start="87:9" pos:end="87:23">put_ebml_string</name><argument_list pos:start="87:24" pos:end="87:92">(<argument pos:start="87:25" pos:end="87:26"><expr pos:start="87:25" pos:end="87:26"><name pos:start="87:25" pos:end="87:26">pb</name></expr></argument>, <argument pos:start="87:29" pos:end="87:53"><expr pos:start="87:29" pos:end="87:53"><name pos:start="87:29" pos:end="87:53">MATROSKA_ID_TRACKLANGUAGE</name></expr></argument>, <argument pos:start="87:56" pos:end="87:91"><expr pos:start="87:56" pos:end="87:91"><ternary pos:start="87:56" pos:end="87:91"><condition pos:start="87:56" pos:end="87:74"><expr pos:start="87:56" pos:end="87:72"><name pos:start="87:56" pos:end="87:58">tag</name> <operator pos:start="87:60" pos:end="87:61">&amp;&amp;</operator> <name pos:start="87:63" pos:end="87:72"><name pos:start="87:63" pos:end="87:65">tag</name><operator pos:start="87:66" pos:end="87:67">-&gt;</operator><name pos:start="87:68" pos:end="87:72">value</name></name></expr> ?</condition><then pos:start="87:76" pos:end="87:85"> <expr pos:start="87:76" pos:end="87:85"><name pos:start="87:76" pos:end="87:85"><name pos:start="87:76" pos:end="87:78">tag</name><operator pos:start="87:79" pos:end="87:80">-&gt;</operator><name pos:start="87:81" pos:end="87:85">value</name></name></expr></then><else pos:start="87:86" pos:end="87:91">:<expr pos:start="87:87" pos:end="87:91"><literal type="string" pos:start="87:87" pos:end="87:91">"und"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="89:7" pos:end="93:5">else if <condition pos:start="89:15" pos:end="89:33">(<expr pos:start="89:16" pos:end="89:32"><name pos:start="89:16" pos:end="89:18">tag</name> <operator pos:start="89:20" pos:end="89:21">&amp;&amp;</operator> <name pos:start="89:23" pos:end="89:32"><name pos:start="89:23" pos:end="89:25">tag</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:32">value</name></name></expr>)</condition> <block pos:start="89:35" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:67">

        <expr_stmt pos:start="91:9" pos:end="91:67"><expr pos:start="91:9" pos:end="91:66"><call pos:start="91:9" pos:end="91:66"><name pos:start="91:9" pos:end="91:23">put_ebml_string</name><argument_list pos:start="91:24" pos:end="91:66">(<argument pos:start="91:25" pos:end="91:26"><expr pos:start="91:25" pos:end="91:26"><name pos:start="91:25" pos:end="91:26">pb</name></expr></argument>, <argument pos:start="91:29" pos:end="91:53"><expr pos:start="91:29" pos:end="91:53"><name pos:start="91:29" pos:end="91:53">MATROSKA_ID_TRACKLANGUAGE</name></expr></argument>, <argument pos:start="91:56" pos:end="91:65"><expr pos:start="91:56" pos:end="91:65"><name pos:start="91:56" pos:end="91:65"><name pos:start="91:56" pos:end="91:58">tag</name><operator pos:start="91:59" pos:end="91:60">-&gt;</operator><name pos:start="91:61" pos:end="91:65">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="97:5" pos:end="97:66">// The default value for TRACKFLAGDEFAULT is 1, so add element</comment>

    <comment type="line" pos:start="99:5" pos:end="99:30">// if we need to clear it.</comment>

    <if_stmt pos:start="101:5" pos:end="103:102"><if pos:start="101:5" pos:end="103:102">if <condition pos:start="101:8" pos:end="101:77">(<expr pos:start="101:9" pos:end="101:76"><name pos:start="101:9" pos:end="101:29">default_stream_exists</name> <operator pos:start="101:31" pos:end="101:32">&amp;&amp;</operator> <operator pos:start="101:34" pos:end="101:34">!</operator><operator pos:start="101:35" pos:end="101:35">(</operator><name pos:start="101:36" pos:end="101:50"><name pos:start="101:36" pos:end="101:37">st</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:50">disposition</name></name> <operator pos:start="101:52" pos:end="101:52">&amp;</operator> <name pos:start="101:54" pos:end="101:75">AV_DISPOSITION_DEFAULT</name><operator pos:start="101:76" pos:end="101:76">)</operator></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:102"><block_content pos:start="103:9" pos:end="103:102">

        <expr_stmt pos:start="103:9" pos:end="103:102"><expr pos:start="103:9" pos:end="103:101"><call pos:start="103:9" pos:end="103:101"><name pos:start="103:9" pos:end="103:21">put_ebml_uint</name><argument_list pos:start="103:22" pos:end="103:101">(<argument pos:start="103:23" pos:end="103:24"><expr pos:start="103:23" pos:end="103:24"><name pos:start="103:23" pos:end="103:24">pb</name></expr></argument>, <argument pos:start="103:27" pos:end="103:54"><expr pos:start="103:27" pos:end="103:54"><name pos:start="103:27" pos:end="103:54">MATROSKA_ID_TRACKFLAGDEFAULT</name></expr></argument>, <argument pos:start="103:57" pos:end="103:100"><expr pos:start="103:57" pos:end="103:100"><operator pos:start="103:57" pos:end="103:57">!</operator><operator pos:start="103:58" pos:end="103:58">!</operator><operator pos:start="103:59" pos:end="103:59">(</operator><name pos:start="103:60" pos:end="103:74"><name pos:start="103:60" pos:end="103:61">st</name><operator pos:start="103:62" pos:end="103:63">-&gt;</operator><name pos:start="103:64" pos:end="103:74">disposition</name></name> <operator pos:start="103:76" pos:end="103:76">&amp;</operator> <name pos:start="103:78" pos:end="103:99">AV_DISPOSITION_DEFAULT</name><operator pos:start="103:100" pos:end="103:100">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="109:58"><if pos:start="107:5" pos:end="109:58">if <condition pos:start="107:8" pos:end="107:48">(<expr pos:start="107:9" pos:end="107:47"><name pos:start="107:9" pos:end="107:23"><name pos:start="107:9" pos:end="107:10">st</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:23">disposition</name></name> <operator pos:start="107:25" pos:end="107:25">&amp;</operator> <name pos:start="107:27" pos:end="107:47">AV_DISPOSITION_FORCED</name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:58"><block_content pos:start="109:9" pos:end="109:58">

        <expr_stmt pos:start="109:9" pos:end="109:58"><expr pos:start="109:9" pos:end="109:57"><call pos:start="109:9" pos:end="109:57"><name pos:start="109:9" pos:end="109:21">put_ebml_uint</name><argument_list pos:start="109:22" pos:end="109:57">(<argument pos:start="109:23" pos:end="109:24"><expr pos:start="109:23" pos:end="109:24"><name pos:start="109:23" pos:end="109:24">pb</name></expr></argument>, <argument pos:start="109:27" pos:end="109:53"><expr pos:start="109:27" pos:end="109:53"><name pos:start="109:27" pos:end="109:53">MATROSKA_ID_TRACKFLAGFORCED</name></expr></argument>, <argument pos:start="109:56" pos:end="109:56"><expr pos:start="109:56" pos:end="109:56"><literal type="number" pos:start="109:56" pos:end="109:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="165:5"><if pos:start="113:5" pos:end="145:5">if <condition pos:start="113:8" pos:end="113:72">(<expr pos:start="113:9" pos:end="113:71"><name pos:start="113:9" pos:end="113:17"><name pos:start="113:9" pos:end="113:11">mkv</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:17">mode</name></name> <operator pos:start="113:19" pos:end="113:20">==</operator> <name pos:start="113:22" pos:end="113:30">MODE_WEBM</name> <operator pos:start="113:32" pos:end="113:33">&amp;&amp;</operator> <name pos:start="113:35" pos:end="113:49"><name pos:start="113:35" pos:end="113:39">codec</name><operator pos:start="113:40" pos:end="113:41">-&gt;</operator><name pos:start="113:42" pos:end="113:49">codec_id</name></name> <operator pos:start="113:51" pos:end="113:52">==</operator> <name pos:start="113:54" pos:end="113:71">AV_CODEC_ID_WEBVTT</name></expr>)</condition> <block pos:start="113:74" pos:end="145:5">{<block_content pos:start="115:9" pos:end="143:59">

        <decl_stmt pos:start="115:9" pos:end="115:29"><decl pos:start="115:9" pos:end="115:28"><type pos:start="115:9" pos:end="115:20"><specifier pos:start="115:9" pos:end="115:13">const</specifier> <name pos:start="115:15" pos:end="115:18">char</name> <modifier pos:start="115:20" pos:end="115:20">*</modifier></type><name pos:start="115:21" pos:end="115:28">codec_id</name></decl>;</decl_stmt>

        <if_stmt pos:start="117:9" pos:end="141:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:54">(<expr pos:start="117:13" pos:end="117:53"><name pos:start="117:13" pos:end="117:27"><name pos:start="117:13" pos:end="117:14">st</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:27">disposition</name></name> <operator pos:start="117:29" pos:end="117:29">&amp;</operator> <name pos:start="117:31" pos:end="117:53">AV_DISPOSITION_CAPTIONS</name></expr>)</condition> <block pos:start="117:56" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:53">

            <expr_stmt pos:start="119:13" pos:end="119:43"><expr pos:start="119:13" pos:end="119:42"><name pos:start="119:13" pos:end="119:20">codec_id</name> <operator pos:start="119:22" pos:end="119:22">=</operator> <literal type="string" pos:start="119:24" pos:end="119:42">"D_WEBVTT/CAPTIONS"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:53"><expr pos:start="121:13" pos:end="121:52"><name pos:start="121:13" pos:end="121:21">native_id</name> <operator pos:start="121:23" pos:end="121:23">=</operator> <name pos:start="121:25" pos:end="121:52">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="123:11" pos:end="129:9">else if <condition pos:start="123:19" pos:end="123:65">(<expr pos:start="123:20" pos:end="123:64"><name pos:start="123:20" pos:end="123:34"><name pos:start="123:20" pos:end="123:21">st</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:34">disposition</name></name> <operator pos:start="123:36" pos:end="123:36">&amp;</operator> <name pos:start="123:38" pos:end="123:64">AV_DISPOSITION_DESCRIPTIONS</name></expr>)</condition> <block pos:start="123:67" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:53">

            <expr_stmt pos:start="125:13" pos:end="125:47"><expr pos:start="125:13" pos:end="125:46"><name pos:start="125:13" pos:end="125:20">codec_id</name> <operator pos:start="125:22" pos:end="125:22">=</operator> <literal type="string" pos:start="125:24" pos:end="125:46">"D_WEBVTT/DESCRIPTIONS"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:53"><expr pos:start="127:13" pos:end="127:52"><name pos:start="127:13" pos:end="127:21">native_id</name> <operator pos:start="127:23" pos:end="127:23">=</operator> <name pos:start="127:25" pos:end="127:52">MATROSKA_TRACK_TYPE_METADATA</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="129:11" pos:end="135:9">else if <condition pos:start="129:19" pos:end="129:61">(<expr pos:start="129:20" pos:end="129:60"><name pos:start="129:20" pos:end="129:34"><name pos:start="129:20" pos:end="129:21">st</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:34">disposition</name></name> <operator pos:start="129:36" pos:end="129:36">&amp;</operator> <name pos:start="129:38" pos:end="129:60">AV_DISPOSITION_METADATA</name></expr>)</condition> <block pos:start="129:63" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:53">

            <expr_stmt pos:start="131:13" pos:end="131:43"><expr pos:start="131:13" pos:end="131:42"><name pos:start="131:13" pos:end="131:20">codec_id</name> <operator pos:start="131:22" pos:end="131:22">=</operator> <literal type="string" pos:start="131:24" pos:end="131:42">"D_WEBVTT/METADATA"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:53"><expr pos:start="133:13" pos:end="133:52"><name pos:start="133:13" pos:end="133:21">native_id</name> <operator pos:start="133:23" pos:end="133:23">=</operator> <name pos:start="133:25" pos:end="133:52">MATROSKA_TRACK_TYPE_METADATA</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="135:11" pos:end="141:9">else <block pos:start="135:16" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:53">

            <expr_stmt pos:start="137:13" pos:end="137:44"><expr pos:start="137:13" pos:end="137:43"><name pos:start="137:13" pos:end="137:20">codec_id</name> <operator pos:start="137:22" pos:end="137:22">=</operator> <literal type="string" pos:start="137:24" pos:end="137:43">"D_WEBVTT/SUBTITLES"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:53"><expr pos:start="139:13" pos:end="139:52"><name pos:start="139:13" pos:end="139:21">native_id</name> <operator pos:start="139:23" pos:end="139:23">=</operator> <name pos:start="139:25" pos:end="139:52">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:59"><expr pos:start="143:9" pos:end="143:58"><call pos:start="143:9" pos:end="143:58"><name pos:start="143:9" pos:end="143:23">put_ebml_string</name><argument_list pos:start="143:24" pos:end="143:58">(<argument pos:start="143:25" pos:end="143:26"><expr pos:start="143:25" pos:end="143:26"><name pos:start="143:25" pos:end="143:26">pb</name></expr></argument>, <argument pos:start="143:29" pos:end="143:47"><expr pos:start="143:29" pos:end="143:47"><name pos:start="143:29" pos:end="143:47">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="143:50" pos:end="143:57"><expr pos:start="143:50" pos:end="143:57"><name pos:start="143:50" pos:end="143:57">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="145:7" pos:end="165:5">else <block pos:start="145:12" pos:end="165:5">{<block_content pos:start="151:9" pos:end="163:9">

        <comment type="line" pos:start="147:9" pos:end="147:61">// look for a codec ID string specific to mkv to use,</comment>

        <comment type="line" pos:start="149:9" pos:end="149:43">// if none are found, use AVI codes</comment>

        <for pos:start="151:9" pos:end="163:9">for <control pos:start="151:13" pos:end="151:69">(<init pos:start="151:14" pos:end="151:19"><expr pos:start="151:14" pos:end="151:18"><name pos:start="151:14" pos:end="151:14">j</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <literal type="number" pos:start="151:18" pos:end="151:18">0</literal></expr>;</init> <condition pos:start="151:21" pos:end="151:64"><expr pos:start="151:21" pos:end="151:63"><name pos:start="151:21" pos:end="151:40"><name pos:start="151:21" pos:end="151:37">ff_mkv_codec_tags</name><index pos:start="151:38" pos:end="151:40">[<expr pos:start="151:39" pos:end="151:39"><name pos:start="151:39" pos:end="151:39">j</name></expr>]</index></name><operator pos:start="151:41" pos:end="151:41">.</operator><name pos:start="151:42" pos:end="151:43">id</name> <operator pos:start="151:45" pos:end="151:46">!=</operator> <name pos:start="151:48" pos:end="151:63">AV_CODEC_ID_NONE</name></expr>;</condition> <incr pos:start="151:66" pos:end="151:68"><expr pos:start="151:66" pos:end="151:68"><name pos:start="151:66" pos:end="151:66">j</name><operator pos:start="151:67" pos:end="151:68">++</operator></expr></incr>)</control> <block pos:start="151:71" pos:end="163:9">{<block_content pos:start="153:13" pos:end="161:13">

            <if_stmt pos:start="153:13" pos:end="161:13"><if pos:start="153:13" pos:end="161:13">if <condition pos:start="153:16" pos:end="153:59">(<expr pos:start="153:17" pos:end="153:58"><name pos:start="153:17" pos:end="153:36"><name pos:start="153:17" pos:end="153:33">ff_mkv_codec_tags</name><index pos:start="153:34" pos:end="153:36">[<expr pos:start="153:35" pos:end="153:35"><name pos:start="153:35" pos:end="153:35">j</name></expr>]</index></name><operator pos:start="153:37" pos:end="153:37">.</operator><name pos:start="153:38" pos:end="153:39">id</name> <operator pos:start="153:41" pos:end="153:42">==</operator> <name pos:start="153:44" pos:end="153:58"><name pos:start="153:44" pos:end="153:48">codec</name><operator pos:start="153:49" pos:end="153:50">-&gt;</operator><name pos:start="153:51" pos:end="153:58">codec_id</name></name></expr>)</condition> <block pos:start="153:61" pos:end="161:13">{<block_content pos:start="155:17" pos:end="159:22">

                <expr_stmt pos:start="155:17" pos:end="155:83"><expr pos:start="155:17" pos:end="155:82"><call pos:start="155:17" pos:end="155:82"><name pos:start="155:17" pos:end="155:31">put_ebml_string</name><argument_list pos:start="155:32" pos:end="155:82">(<argument pos:start="155:33" pos:end="155:34"><expr pos:start="155:33" pos:end="155:34"><name pos:start="155:33" pos:end="155:34">pb</name></expr></argument>, <argument pos:start="155:37" pos:end="155:55"><expr pos:start="155:37" pos:end="155:55"><name pos:start="155:37" pos:end="155:55">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="155:58" pos:end="155:81"><expr pos:start="155:58" pos:end="155:81"><name pos:start="155:58" pos:end="155:77"><name pos:start="155:58" pos:end="155:74">ff_mkv_codec_tags</name><index pos:start="155:75" pos:end="155:77">[<expr pos:start="155:76" pos:end="155:76"><name pos:start="155:76" pos:end="155:76">j</name></expr>]</index></name><operator pos:start="155:78" pos:end="155:78">.</operator><name pos:start="155:79" pos:end="155:81">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:30"><expr pos:start="157:17" pos:end="157:29"><name pos:start="157:17" pos:end="157:25">native_id</name> <operator pos:start="157:27" pos:end="157:27">=</operator> <literal type="number" pos:start="157:29" pos:end="157:29">1</literal></expr>;</expr_stmt>

                <break pos:start="159:17" pos:end="159:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="169:5" pos:end="185:5"><if pos:start="169:5" pos:end="185:5">if <condition pos:start="169:8" pos:end="169:103">(<expr pos:start="169:9" pos:end="169:102"><name pos:start="169:9" pos:end="169:25"><name pos:start="169:9" pos:end="169:13">codec</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:25">codec_type</name></name> <operator pos:start="169:27" pos:end="169:28">==</operator> <name pos:start="169:30" pos:end="169:47">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="169:49" pos:end="169:50">&amp;&amp;</operator> <name pos:start="169:52" pos:end="169:63"><name pos:start="169:52" pos:end="169:56">codec</name><operator pos:start="169:57" pos:end="169:58">-&gt;</operator><name pos:start="169:59" pos:end="169:63">delay</name></name> <operator pos:start="169:65" pos:end="169:66">&amp;&amp;</operator> <name pos:start="169:68" pos:end="169:82"><name pos:start="169:68" pos:end="169:72">codec</name><operator pos:start="169:73" pos:end="169:74">-&gt;</operator><name pos:start="169:75" pos:end="169:82">codec_id</name></name> <operator pos:start="169:84" pos:end="169:85">==</operator> <name pos:start="169:87" pos:end="169:102">AV_CODEC_ID_OPUS</name></expr>)</condition> <block pos:start="169:105" pos:end="185:5">{<block_content pos:start="179:9" pos:end="183:67">

<comment type="line" pos:start="171:1" pos:end="171:64">//         mkv-&gt;tracks[i].ts_offset = av_rescale_q(codec-&gt;delay,</comment>

<comment type="line" pos:start="173:1" pos:end="173:89">//                                                 (AVRational){ 1, codec-&gt;sample_rate },</comment>

<comment type="line" pos:start="175:1" pos:end="175:66">//                                                 st-&gt;time_base);</comment>



        <macro pos:start="179:9" pos:end="183:66"><name pos:start="179:9" pos:end="179:21">put_ebml_uint</name><argument_list pos:start="179:22" pos:end="183:66">(<argument pos:start="179:23" pos:end="179:24">pb</argument>, <argument pos:start="179:27" pos:end="179:48">MATROSKA_ID_CODECDELAY</argument>,

                      <argument pos:start="181:23" pos:end="183:65">av_rescale_q(codec-&gt;delay, (AVRational){ <literal type="number" pos:start="181:64" pos:end="181:64">1</literal>, codec-&gt;sample_rate },

                                   (AVRational){ <literal type="number" pos:start="183:50" pos:end="183:50">1</literal>, <literal type="number" pos:start="183:53" pos:end="183:62">1000000000</literal> })</argument>)</argument_list></macro><empty_stmt pos:start="183:67" pos:end="183:67">;</empty_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="187:5" pos:end="191:5"><if pos:start="187:5" pos:end="191:5">if <condition pos:start="187:8" pos:end="187:44">(<expr pos:start="187:9" pos:end="187:43"><name pos:start="187:9" pos:end="187:23"><name pos:start="187:9" pos:end="187:13">codec</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:23">codec_id</name></name> <operator pos:start="187:25" pos:end="187:26">==</operator> <name pos:start="187:28" pos:end="187:43">AV_CODEC_ID_OPUS</name></expr>)</condition> <block pos:start="187:46" pos:end="191:5">{<block_content pos:start="189:9" pos:end="189:70">

        <expr_stmt pos:start="189:9" pos:end="189:70"><expr pos:start="189:9" pos:end="189:69"><call pos:start="189:9" pos:end="189:69"><name pos:start="189:9" pos:end="189:21">put_ebml_uint</name><argument_list pos:start="189:22" pos:end="189:69">(<argument pos:start="189:23" pos:end="189:24"><expr pos:start="189:23" pos:end="189:24"><name pos:start="189:23" pos:end="189:24">pb</name></expr></argument>, <argument pos:start="189:27" pos:end="189:49"><expr pos:start="189:27" pos:end="189:49"><name pos:start="189:27" pos:end="189:49">MATROSKA_ID_SEEKPREROLL</name></expr></argument>, <argument pos:start="189:52" pos:end="189:68"><expr pos:start="189:52" pos:end="189:68"><name pos:start="189:52" pos:end="189:68">OPUS_SEEK_PREROLL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="195:5" pos:end="211:5"><if pos:start="195:5" pos:end="211:5">if <condition pos:start="195:8" pos:end="203:75">(<expr pos:start="195:9" pos:end="203:74"><name pos:start="195:9" pos:end="195:17"><name pos:start="195:9" pos:end="195:11">mkv</name><operator pos:start="195:12" pos:end="195:13">-&gt;</operator><name pos:start="195:14" pos:end="195:17">mode</name></name> <operator pos:start="195:19" pos:end="195:20">==</operator> <name pos:start="195:22" pos:end="195:30">MODE_WEBM</name> <operator pos:start="195:32" pos:end="195:33">&amp;&amp;</operator> <operator pos:start="195:35" pos:end="195:35">!</operator><operator pos:start="195:36" pos:end="195:36">(</operator><name pos:start="195:37" pos:end="195:51"><name pos:start="195:37" pos:end="195:41">codec</name><operator pos:start="195:42" pos:end="195:43">-&gt;</operator><name pos:start="195:44" pos:end="195:51">codec_id</name></name> <operator pos:start="195:53" pos:end="195:54">==</operator> <name pos:start="195:56" pos:end="195:70">AV_CODEC_ID_VP8</name> <operator pos:start="195:72" pos:end="195:73">||</operator>

                                    <name pos:start="197:37" pos:end="197:51"><name pos:start="197:37" pos:end="197:41">codec</name><operator pos:start="197:42" pos:end="197:43">-&gt;</operator><name pos:start="197:44" pos:end="197:51">codec_id</name></name> <operator pos:start="197:53" pos:end="197:54">==</operator> <name pos:start="197:56" pos:end="197:70">AV_CODEC_ID_VP9</name> <operator pos:start="197:72" pos:end="197:73">||</operator>

                                    <name pos:start="199:37" pos:end="199:51"><name pos:start="199:37" pos:end="199:41">codec</name><operator pos:start="199:42" pos:end="199:43">-&gt;</operator><name pos:start="199:44" pos:end="199:51">codec_id</name></name> <operator pos:start="199:53" pos:end="199:54">==</operator> <name pos:start="199:56" pos:end="199:71">AV_CODEC_ID_OPUS</name> <operator pos:start="199:73" pos:end="199:74">||</operator>

                                    <name pos:start="201:37" pos:end="201:51"><name pos:start="201:37" pos:end="201:41">codec</name><operator pos:start="201:42" pos:end="201:43">-&gt;</operator><name pos:start="201:44" pos:end="201:51">codec_id</name></name> <operator pos:start="201:53" pos:end="201:54">==</operator> <name pos:start="201:56" pos:end="201:73">AV_CODEC_ID_VORBIS</name> <operator pos:start="201:75" pos:end="201:76">||</operator>

                                    <name pos:start="203:37" pos:end="203:51"><name pos:start="203:37" pos:end="203:41">codec</name><operator pos:start="203:42" pos:end="203:43">-&gt;</operator><name pos:start="203:44" pos:end="203:51">codec_id</name></name> <operator pos:start="203:53" pos:end="203:54">==</operator> <name pos:start="203:56" pos:end="203:73">AV_CODEC_ID_WEBVTT</name><operator pos:start="203:74" pos:end="203:74">)</operator></expr>)</condition> <block pos:start="203:77" pos:end="211:5">{<block_content pos:start="205:9" pos:end="209:31">

        <expr_stmt pos:start="205:9" pos:end="207:112"><expr pos:start="205:9" pos:end="207:111"><call pos:start="205:9" pos:end="207:111"><name pos:start="205:9" pos:end="205:14">av_log</name><argument_list pos:start="205:15" pos:end="207:111">(<argument pos:start="205:16" pos:end="205:16"><expr pos:start="205:16" pos:end="205:16"><name pos:start="205:16" pos:end="205:16">s</name></expr></argument>, <argument pos:start="205:19" pos:end="205:30"><expr pos:start="205:19" pos:end="205:30"><name pos:start="205:19" pos:end="205:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="207:16" pos:end="207:110"><expr pos:start="207:16" pos:end="207:110"><literal type="string" pos:start="207:16" pos:end="207:110">"Only VP8 or VP9 video and Vorbis or Opus audio and WebVTT subtitles are supported for WebM.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="209:9" pos:end="209:31">return <expr pos:start="209:16" pos:end="209:30"><call pos:start="209:16" pos:end="209:30"><name pos:start="209:16" pos:end="209:22">AVERROR</name><argument_list pos:start="209:23" pos:end="209:30">(<argument pos:start="209:24" pos:end="209:29"><expr pos:start="209:24" pos:end="209:29"><name pos:start="209:24" pos:end="209:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="215:5" pos:end="449:5">switch <condition pos:start="215:12" pos:end="215:30">(<expr pos:start="215:13" pos:end="215:29"><name pos:start="215:13" pos:end="215:29"><name pos:start="215:13" pos:end="215:17">codec</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:29">codec_type</name></name></expr>)</condition> <block pos:start="215:32" pos:end="449:5">{<block_content pos:start="217:5" pos:end="447:31">

    <case pos:start="217:5" pos:end="217:28">case <expr pos:start="217:10" pos:end="217:27"><name pos:start="217:10" pos:end="217:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="219:9" pos:end="219:76"><expr pos:start="219:9" pos:end="219:75"><call pos:start="219:9" pos:end="219:75"><name pos:start="219:9" pos:end="219:21">put_ebml_uint</name><argument_list pos:start="219:22" pos:end="219:75">(<argument pos:start="219:23" pos:end="219:24"><expr pos:start="219:23" pos:end="219:24"><name pos:start="219:23" pos:end="219:24">pb</name></expr></argument>, <argument pos:start="219:27" pos:end="219:47"><expr pos:start="219:27" pos:end="219:47"><name pos:start="219:27" pos:end="219:47">MATROSKA_ID_TRACKTYPE</name></expr></argument>, <argument pos:start="219:50" pos:end="219:74"><expr pos:start="219:50" pos:end="219:74"><name pos:start="219:50" pos:end="219:74">MATROSKA_TRACK_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="223:9" pos:end="231:94"><if pos:start="223:9" pos:end="227:98">if<condition pos:start="223:11" pos:end="225:72">(   <expr pos:start="223:15" pos:end="225:71"><name pos:start="223:15" pos:end="223:36"><name pos:start="223:15" pos:end="223:16">st</name><operator pos:start="223:17" pos:end="223:18">-&gt;</operator><name pos:start="223:19" pos:end="223:32">avg_frame_rate</name><operator pos:start="223:33" pos:end="223:33">.</operator><name pos:start="223:34" pos:end="223:36">num</name></name> <operator pos:start="223:38" pos:end="223:38">&gt;</operator> <literal type="number" pos:start="223:40" pos:end="223:40">0</literal> <operator pos:start="223:42" pos:end="223:43">&amp;&amp;</operator> <name pos:start="223:45" pos:end="223:66"><name pos:start="223:45" pos:end="223:46">st</name><operator pos:start="223:47" pos:end="223:48">-&gt;</operator><name pos:start="223:49" pos:end="223:62">avg_frame_rate</name><operator pos:start="223:63" pos:end="223:63">.</operator><name pos:start="223:64" pos:end="223:66">den</name></name> <operator pos:start="223:68" pos:end="223:68">&gt;</operator> <literal type="number" pos:start="223:70" pos:end="223:70">0</literal>

           <operator pos:start="225:12" pos:end="225:13">&amp;&amp;</operator> <literal type="number" pos:start="225:15" pos:end="225:17">1.0</literal><operator pos:start="225:18" pos:end="225:18">/</operator><call pos:start="225:19" pos:end="225:44"><name pos:start="225:19" pos:end="225:24">av_q2d</name><argument_list pos:start="225:25" pos:end="225:44">(<argument pos:start="225:26" pos:end="225:43"><expr pos:start="225:26" pos:end="225:43"><name pos:start="225:26" pos:end="225:43"><name pos:start="225:26" pos:end="225:27">st</name><operator pos:start="225:28" pos:end="225:29">-&gt;</operator><name pos:start="225:30" pos:end="225:43">avg_frame_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="225:46" pos:end="225:46">&gt;</operator> <call pos:start="225:48" pos:end="225:71"><name pos:start="225:48" pos:end="225:53">av_q2d</name><argument_list pos:start="225:54" pos:end="225:71">(<argument pos:start="225:55" pos:end="225:70"><expr pos:start="225:55" pos:end="225:70"><name pos:start="225:55" pos:end="225:70"><name pos:start="225:55" pos:end="225:59">codec</name><operator pos:start="225:60" pos:end="225:61">-&gt;</operator><name pos:start="225:62" pos:end="225:70">time_base</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="227:13" pos:end="227:98"><block_content pos:start="227:13" pos:end="227:98">

            <expr_stmt pos:start="227:13" pos:end="227:98"><expr pos:start="227:13" pos:end="227:97"><call pos:start="227:13" pos:end="227:97"><name pos:start="227:13" pos:end="227:25">put_ebml_uint</name><argument_list pos:start="227:26" pos:end="227:97">(<argument pos:start="227:27" pos:end="227:28"><expr pos:start="227:27" pos:end="227:28"><name pos:start="227:27" pos:end="227:28">pb</name></expr></argument>, <argument pos:start="227:31" pos:end="227:62"><expr pos:start="227:31" pos:end="227:62"><name pos:start="227:31" pos:end="227:62">MATROSKA_ID_TRACKDEFAULTDURATION</name></expr></argument>, <argument pos:start="227:65" pos:end="227:96"><expr pos:start="227:65" pos:end="227:96"><literal type="number" pos:start="227:65" pos:end="227:67">1E9</literal> <operator pos:start="227:69" pos:end="227:69">/</operator> <call pos:start="227:71" pos:end="227:96"><name pos:start="227:71" pos:end="227:76">av_q2d</name><argument_list pos:start="227:77" pos:end="227:96">(<argument pos:start="227:78" pos:end="227:95"><expr pos:start="227:78" pos:end="227:95"><name pos:start="227:78" pos:end="227:95"><name pos:start="227:78" pos:end="227:79">st</name><operator pos:start="227:80" pos:end="227:81">-&gt;</operator><name pos:start="227:82" pos:end="227:95">avg_frame_rate</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="229:9" pos:end="231:94">else<block type="pseudo" pos:start="231:13" pos:end="231:94"><block_content pos:start="231:13" pos:end="231:94">

            <expr_stmt pos:start="231:13" pos:end="231:94"><expr pos:start="231:13" pos:end="231:93"><call pos:start="231:13" pos:end="231:93"><name pos:start="231:13" pos:end="231:25">put_ebml_uint</name><argument_list pos:start="231:26" pos:end="231:93">(<argument pos:start="231:27" pos:end="231:28"><expr pos:start="231:27" pos:end="231:28"><name pos:start="231:27" pos:end="231:28">pb</name></expr></argument>, <argument pos:start="231:31" pos:end="231:62"><expr pos:start="231:31" pos:end="231:62"><name pos:start="231:31" pos:end="231:62">MATROSKA_ID_TRACKDEFAULTDURATION</name></expr></argument>, <argument pos:start="231:65" pos:end="231:92"><expr pos:start="231:65" pos:end="231:92"><call pos:start="231:65" pos:end="231:88"><name pos:start="231:65" pos:end="231:70">av_q2d</name><argument_list pos:start="231:71" pos:end="231:88">(<argument pos:start="231:72" pos:end="231:87"><expr pos:start="231:72" pos:end="231:87"><name pos:start="231:72" pos:end="231:87"><name pos:start="231:72" pos:end="231:76">codec</name><operator pos:start="231:77" pos:end="231:78">-&gt;</operator><name pos:start="231:79" pos:end="231:87">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="231:89" pos:end="231:89">*</operator><literal type="number" pos:start="231:90" pos:end="231:92">1E9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="235:9" pos:end="247:22"><if pos:start="235:9" pos:end="247:22">if <condition pos:start="235:12" pos:end="245:53">(<expr pos:start="235:13" pos:end="245:52"><operator pos:start="235:13" pos:end="235:13">!</operator><name pos:start="235:14" pos:end="235:22">native_id</name> <operator pos:start="235:24" pos:end="235:25">&amp;&amp;</operator>

            <call pos:start="237:13" pos:end="237:69"><name pos:start="237:13" pos:end="237:28">ff_codec_get_tag</name><argument_list pos:start="237:29" pos:end="237:69">(<argument pos:start="237:30" pos:end="237:51"><expr pos:start="237:30" pos:end="237:51"><name pos:start="237:30" pos:end="237:51">ff_codec_movvideo_tags</name></expr></argument>, <argument pos:start="237:54" pos:end="237:68"><expr pos:start="237:54" pos:end="237:68"><name pos:start="237:54" pos:end="237:68"><name pos:start="237:54" pos:end="237:58">codec</name><operator pos:start="237:59" pos:end="237:60">-&gt;</operator><name pos:start="237:61" pos:end="237:68">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="237:71" pos:end="237:72">&amp;&amp;</operator>

            <operator pos:start="239:13" pos:end="239:13">(</operator><operator pos:start="239:14" pos:end="239:14">!</operator><call pos:start="239:15" pos:end="239:68"><name pos:start="239:15" pos:end="239:30">ff_codec_get_tag</name><argument_list pos:start="239:31" pos:end="239:68">(<argument pos:start="239:32" pos:end="239:48"><expr pos:start="239:32" pos:end="239:48"><name pos:start="239:32" pos:end="239:48">ff_codec_bmp_tags</name></expr></argument>,   <argument pos:start="239:53" pos:end="239:67"><expr pos:start="239:53" pos:end="239:67"><name pos:start="239:53" pos:end="239:67"><name pos:start="239:53" pos:end="239:57">codec</name><operator pos:start="239:58" pos:end="239:59">-&gt;</operator><name pos:start="239:60" pos:end="239:67">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="239:70" pos:end="239:71">||</operator>

             <name pos:start="241:14" pos:end="241:28"><name pos:start="241:14" pos:end="241:18">codec</name><operator pos:start="241:19" pos:end="241:20">-&gt;</operator><name pos:start="241:21" pos:end="241:28">codec_id</name></name> <operator pos:start="241:30" pos:end="241:31">==</operator> <name pos:start="241:33" pos:end="241:48">AV_CODEC_ID_SVQ1</name> <operator pos:start="241:50" pos:end="241:51">||</operator>

             <name pos:start="243:14" pos:end="243:28"><name pos:start="243:14" pos:end="243:18">codec</name><operator pos:start="243:19" pos:end="243:20">-&gt;</operator><name pos:start="243:21" pos:end="243:28">codec_id</name></name> <operator pos:start="243:30" pos:end="243:31">==</operator> <name pos:start="243:33" pos:end="243:48">AV_CODEC_ID_SVQ3</name> <operator pos:start="243:50" pos:end="243:51">||</operator>

             <name pos:start="245:14" pos:end="245:28"><name pos:start="245:14" pos:end="245:18">codec</name><operator pos:start="245:19" pos:end="245:20">-&gt;</operator><name pos:start="245:21" pos:end="245:28">codec_id</name></name> <operator pos:start="245:30" pos:end="245:31">==</operator> <name pos:start="245:33" pos:end="245:51">AV_CODEC_ID_CINEPAK</name><operator pos:start="245:52" pos:end="245:52">)</operator></expr>)</condition><block type="pseudo" pos:start="247:13" pos:end="247:22"><block_content pos:start="247:13" pos:end="247:22">

            <expr_stmt pos:start="247:13" pos:end="247:22"><expr pos:start="247:13" pos:end="247:21"><name pos:start="247:13" pos:end="247:17">qt_id</name> <operator pos:start="247:19" pos:end="247:19">=</operator> <literal type="number" pos:start="247:21" pos:end="247:21">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="251:9" pos:end="263:9"><if pos:start="251:9" pos:end="253:68">if <condition pos:start="251:12" pos:end="251:18">(<expr pos:start="251:13" pos:end="251:17"><name pos:start="251:13" pos:end="251:17">qt_id</name></expr>)</condition><block type="pseudo" pos:start="253:13" pos:end="253:68"><block_content pos:start="253:13" pos:end="253:68">

            <expr_stmt pos:start="253:13" pos:end="253:68"><expr pos:start="253:13" pos:end="253:67"><call pos:start="253:13" pos:end="253:67"><name pos:start="253:13" pos:end="253:27">put_ebml_string</name><argument_list pos:start="253:28" pos:end="253:67">(<argument pos:start="253:29" pos:end="253:30"><expr pos:start="253:29" pos:end="253:30"><name pos:start="253:29" pos:end="253:30">pb</name></expr></argument>, <argument pos:start="253:33" pos:end="253:51"><expr pos:start="253:33" pos:end="253:51"><name pos:start="253:33" pos:end="253:51">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="253:54" pos:end="253:66"><expr pos:start="253:54" pos:end="253:66"><literal type="string" pos:start="253:54" pos:end="253:66">"V_QUICKTIME"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="255:9" pos:end="263:9">else if <condition pos:start="255:17" pos:end="255:28">(<expr pos:start="255:18" pos:end="255:27"><operator pos:start="255:18" pos:end="255:18">!</operator><name pos:start="255:19" pos:end="255:27">native_id</name></expr>)</condition> <block pos:start="255:30" pos:end="263:9">{<block_content pos:start="259:13" pos:end="261:41">

            <comment type="line" pos:start="257:13" pos:end="257:65">// if there is no mkv-specific codec ID, use VFW mode</comment>

            <expr_stmt pos:start="259:13" pos:end="259:72"><expr pos:start="259:13" pos:end="259:71"><call pos:start="259:13" pos:end="259:71"><name pos:start="259:13" pos:end="259:27">put_ebml_string</name><argument_list pos:start="259:28" pos:end="259:71">(<argument pos:start="259:29" pos:end="259:30"><expr pos:start="259:29" pos:end="259:30"><name pos:start="259:29" pos:end="259:30">pb</name></expr></argument>, <argument pos:start="259:33" pos:end="259:51"><expr pos:start="259:33" pos:end="259:51"><name pos:start="259:33" pos:end="259:51">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="259:54" pos:end="259:70"><expr pos:start="259:54" pos:end="259:70"><literal type="string" pos:start="259:54" pos:end="259:70">"V_MS/VFW/FOURCC"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:41"><expr pos:start="261:13" pos:end="261:40"><name pos:start="261:13" pos:end="261:26"><name pos:start="261:13" pos:end="261:15">mkv</name><operator pos:start="261:16" pos:end="261:17">-&gt;</operator><name pos:start="261:18" pos:end="261:23">tracks</name><index pos:start="261:24" pos:end="261:26">[<expr pos:start="261:25" pos:end="261:25"><name pos:start="261:25" pos:end="261:25">i</name></expr>]</index></name><operator pos:start="261:27" pos:end="261:27">.</operator><name pos:start="261:28" pos:end="261:36">write_dts</name> <operator pos:start="261:38" pos:end="261:38">=</operator> <literal type="number" pos:start="261:40" pos:end="261:40">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="267:9" pos:end="267:67"><expr pos:start="267:9" pos:end="267:66"><name pos:start="267:9" pos:end="267:15">subinfo</name> <operator pos:start="267:17" pos:end="267:17">=</operator> <call pos:start="267:19" pos:end="267:66"><name pos:start="267:19" pos:end="267:35">start_ebml_master</name><argument_list pos:start="267:36" pos:end="267:66">(<argument pos:start="267:37" pos:end="267:38"><expr pos:start="267:37" pos:end="267:38"><name pos:start="267:37" pos:end="267:38">pb</name></expr></argument>, <argument pos:start="267:41" pos:end="267:62"><expr pos:start="267:41" pos:end="267:62"><name pos:start="267:41" pos:end="267:62">MATROSKA_ID_TRACKVIDEO</name></expr></argument>, <argument pos:start="267:65" pos:end="267:65"><expr pos:start="267:65" pos:end="267:65"><literal type="number" pos:start="267:65" pos:end="267:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="269:9" pos:end="269:31">// XXX: interlace flag?</comment>

        <expr_stmt pos:start="271:9" pos:end="271:71"><expr pos:start="271:9" pos:end="271:70"><call pos:start="271:9" pos:end="271:70"><name pos:start="271:9" pos:end="271:21">put_ebml_uint</name> <argument_list pos:start="271:23" pos:end="271:70">(<argument pos:start="271:24" pos:end="271:25"><expr pos:start="271:24" pos:end="271:25"><name pos:start="271:24" pos:end="271:25">pb</name></expr></argument>, <argument pos:start="271:28" pos:end="271:54"><expr pos:start="271:28" pos:end="271:54"><name pos:start="271:28" pos:end="271:54">MATROSKA_ID_VIDEOPIXELWIDTH</name></expr></argument> , <argument pos:start="271:58" pos:end="271:69"><expr pos:start="271:58" pos:end="271:69"><name pos:start="271:58" pos:end="271:69"><name pos:start="271:58" pos:end="271:62">codec</name><operator pos:start="271:63" pos:end="271:64">-&gt;</operator><name pos:start="271:65" pos:end="271:69">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:72"><expr pos:start="273:9" pos:end="273:71"><call pos:start="273:9" pos:end="273:71"><name pos:start="273:9" pos:end="273:21">put_ebml_uint</name> <argument_list pos:start="273:23" pos:end="273:71">(<argument pos:start="273:24" pos:end="273:25"><expr pos:start="273:24" pos:end="273:25"><name pos:start="273:24" pos:end="273:25">pb</name></expr></argument>, <argument pos:start="273:28" pos:end="273:55"><expr pos:start="273:28" pos:end="273:55"><name pos:start="273:28" pos:end="273:55">MATROSKA_ID_VIDEOPIXELHEIGHT</name></expr></argument>, <argument pos:start="273:58" pos:end="273:70"><expr pos:start="273:58" pos:end="273:70"><name pos:start="273:58" pos:end="273:70"><name pos:start="273:58" pos:end="273:62">codec</name><operator pos:start="273:63" pos:end="273:64">-&gt;</operator><name pos:start="273:65" pos:end="273:70">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="277:9" pos:end="331:9"><if pos:start="277:9" pos:end="331:9">if <condition pos:start="277:12" pos:end="279:70">(<expr pos:start="277:13" pos:end="279:69"><operator pos:start="277:13" pos:end="277:13">(</operator><name pos:start="277:14" pos:end="277:16">tag</name> <operator pos:start="277:18" pos:end="277:18">=</operator> <call pos:start="277:20" pos:end="277:68"><name pos:start="277:20" pos:end="277:30">av_dict_get</name><argument_list pos:start="277:31" pos:end="277:68">(<argument pos:start="277:32" pos:end="277:43"><expr pos:start="277:32" pos:end="277:43"><name pos:start="277:32" pos:end="277:43"><name pos:start="277:32" pos:end="277:33">st</name><operator pos:start="277:34" pos:end="277:35">-&gt;</operator><name pos:start="277:36" pos:end="277:43">metadata</name></name></expr></argument>, <argument pos:start="277:46" pos:end="277:58"><expr pos:start="277:46" pos:end="277:58"><literal type="string" pos:start="277:46" pos:end="277:58">"stereo_mode"</literal></expr></argument>, <argument pos:start="277:61" pos:end="277:64"><expr pos:start="277:61" pos:end="277:64"><name pos:start="277:61" pos:end="277:64">NULL</name></expr></argument>, <argument pos:start="277:67" pos:end="277:67"><expr pos:start="277:67" pos:end="277:67"><literal type="number" pos:start="277:67" pos:end="277:67">0</literal></expr></argument>)</argument_list></call><operator pos:start="277:69" pos:end="277:69">)</operator> <operator pos:start="277:71" pos:end="277:72">||</operator>

            <operator pos:start="279:13" pos:end="279:13">(</operator><name pos:start="279:14" pos:end="279:16">tag</name> <operator pos:start="279:18" pos:end="279:18">=</operator> <call pos:start="279:20" pos:end="279:68"><name pos:start="279:20" pos:end="279:30">av_dict_get</name><argument_list pos:start="279:31" pos:end="279:68">( <argument pos:start="279:33" pos:end="279:43"><expr pos:start="279:33" pos:end="279:43"><name pos:start="279:33" pos:end="279:43"><name pos:start="279:33" pos:end="279:33">s</name><operator pos:start="279:34" pos:end="279:35">-&gt;</operator><name pos:start="279:36" pos:end="279:43">metadata</name></name></expr></argument>, <argument pos:start="279:46" pos:end="279:58"><expr pos:start="279:46" pos:end="279:58"><literal type="string" pos:start="279:46" pos:end="279:58">"stereo_mode"</literal></expr></argument>, <argument pos:start="279:61" pos:end="279:64"><expr pos:start="279:61" pos:end="279:64"><name pos:start="279:61" pos:end="279:64">NULL</name></expr></argument>, <argument pos:start="279:67" pos:end="279:67"><expr pos:start="279:67" pos:end="279:67"><literal type="number" pos:start="279:67" pos:end="279:67">0</literal></expr></argument>)</argument_list></call><operator pos:start="279:69" pos:end="279:69">)</operator></expr>)</condition> <block pos:start="279:72" pos:end="331:9">{<block_content pos:start="281:13" pos:end="329:13">

            <decl_stmt pos:start="281:13" pos:end="281:59"><decl pos:start="281:13" pos:end="281:58"><type pos:start="281:13" pos:end="281:15"><name pos:start="281:13" pos:end="281:15">int</name></type> <name pos:start="281:17" pos:end="281:23">st_mode</name> <init pos:start="281:25" pos:end="281:58">= <expr pos:start="281:27" pos:end="281:58"><name pos:start="281:27" pos:end="281:58">MATROSKA_VIDEO_STEREO_MODE_COUNT</name></expr></init></decl>;</decl_stmt>



            <for pos:start="285:13" pos:end="293:17">for <control pos:start="285:17" pos:end="285:62">(<init pos:start="285:18" pos:end="285:21"><expr pos:start="285:18" pos:end="285:20"><name pos:start="285:18" pos:end="285:18">j</name><operator pos:start="285:19" pos:end="285:19">=</operator><literal type="number" pos:start="285:20" pos:end="285:20">0</literal></expr>;</init> <condition pos:start="285:23" pos:end="285:57"><expr pos:start="285:23" pos:end="285:56"><name pos:start="285:23" pos:end="285:23">j</name><operator pos:start="285:24" pos:end="285:24">&lt;</operator><name pos:start="285:25" pos:end="285:56">MATROSKA_VIDEO_STEREO_MODE_COUNT</name></expr>;</condition> <incr pos:start="285:59" pos:end="285:61"><expr pos:start="285:59" pos:end="285:61"><name pos:start="285:59" pos:end="285:59">j</name><operator pos:start="285:60" pos:end="285:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="287:17" pos:end="293:17"><block_content pos:start="287:17" pos:end="293:17">

                <if_stmt pos:start="287:17" pos:end="293:17"><if pos:start="287:17" pos:end="293:17">if <condition pos:start="287:20" pos:end="287:74">(<expr pos:start="287:21" pos:end="287:73"><operator pos:start="287:21" pos:end="287:21">!</operator><call pos:start="287:22" pos:end="287:73"><name pos:start="287:22" pos:end="287:27">strcmp</name><argument_list pos:start="287:28" pos:end="287:73">(<argument pos:start="287:29" pos:end="287:38"><expr pos:start="287:29" pos:end="287:38"><name pos:start="287:29" pos:end="287:38"><name pos:start="287:29" pos:end="287:31">tag</name><operator pos:start="287:32" pos:end="287:33">-&gt;</operator><name pos:start="287:34" pos:end="287:38">value</name></name></expr></argument>, <argument pos:start="287:41" pos:end="287:72"><expr pos:start="287:41" pos:end="287:72"><name pos:start="287:41" pos:end="287:72"><name pos:start="287:41" pos:end="287:69">ff_matroska_video_stereo_mode</name><index pos:start="287:70" pos:end="287:72">[<expr pos:start="287:71" pos:end="287:71"><name pos:start="287:71" pos:end="287:71">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="287:75" pos:end="293:17">{<block_content pos:start="289:21" pos:end="291:26">

                    <expr_stmt pos:start="289:21" pos:end="289:32"><expr pos:start="289:21" pos:end="289:31"><name pos:start="289:21" pos:end="289:27">st_mode</name> <operator pos:start="289:29" pos:end="289:29">=</operator> <name pos:start="289:31" pos:end="289:31">j</name></expr>;</expr_stmt>

                    <break pos:start="291:21" pos:end="291:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for>



            <if_stmt pos:start="297:13" pos:end="299:39"><if pos:start="297:13" pos:end="299:39">if <condition pos:start="297:16" pos:end="297:69">(<expr pos:start="297:17" pos:end="297:68"><call pos:start="297:17" pos:end="297:64"><name pos:start="297:17" pos:end="297:37">mkv_write_stereo_mode</name><argument_list pos:start="297:38" pos:end="297:64">(<argument pos:start="297:39" pos:end="297:39"><expr pos:start="297:39" pos:end="297:39"><name pos:start="297:39" pos:end="297:39">s</name></expr></argument>, <argument pos:start="297:42" pos:end="297:43"><expr pos:start="297:42" pos:end="297:43"><name pos:start="297:42" pos:end="297:43">pb</name></expr></argument>, <argument pos:start="297:46" pos:end="297:52"><expr pos:start="297:46" pos:end="297:52"><name pos:start="297:46" pos:end="297:52">st_mode</name></expr></argument>, <argument pos:start="297:55" pos:end="297:63"><expr pos:start="297:55" pos:end="297:63"><name pos:start="297:55" pos:end="297:63"><name pos:start="297:55" pos:end="297:57">mkv</name><operator pos:start="297:58" pos:end="297:59">-&gt;</operator><name pos:start="297:60" pos:end="297:63">mode</name></name></expr></argument>)</argument_list></call> <operator pos:start="297:66" pos:end="297:66">&lt;</operator> <literal type="number" pos:start="297:68" pos:end="297:68">0</literal></expr>)</condition><block type="pseudo" pos:start="299:17" pos:end="299:39"><block_content pos:start="299:17" pos:end="299:39">

                <return pos:start="299:17" pos:end="299:39">return <expr pos:start="299:24" pos:end="299:38"><call pos:start="299:24" pos:end="299:38"><name pos:start="299:24" pos:end="299:30">AVERROR</name><argument_list pos:start="299:31" pos:end="299:38">(<argument pos:start="299:32" pos:end="299:37"><expr pos:start="299:32" pos:end="299:37"><name pos:start="299:32" pos:end="299:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <switch pos:start="303:13" pos:end="329:13">switch <condition pos:start="303:20" pos:end="303:28">(<expr pos:start="303:21" pos:end="303:27"><name pos:start="303:21" pos:end="303:27">st_mode</name></expr>)</condition> <block pos:start="303:30" pos:end="329:13">{<block_content pos:start="305:13" pos:end="327:22">

            <case pos:start="305:13" pos:end="305:19">case <expr pos:start="305:18" pos:end="305:18"><literal type="number" pos:start="305:18" pos:end="305:18">1</literal></expr>:</case>

            <case pos:start="307:13" pos:end="307:19">case <expr pos:start="307:18" pos:end="307:18"><literal type="number" pos:start="307:18" pos:end="307:18">8</literal></expr>:</case>

            <case pos:start="309:13" pos:end="309:19">case <expr pos:start="309:18" pos:end="309:18"><literal type="number" pos:start="309:18" pos:end="309:18">9</literal></expr>:</case>

            <case pos:start="311:13" pos:end="311:20">case <expr pos:start="311:18" pos:end="311:19"><literal type="number" pos:start="311:18" pos:end="311:19">11</literal></expr>:</case>

                <expr_stmt pos:start="313:17" pos:end="313:38"><expr pos:start="313:17" pos:end="313:37"><name pos:start="313:17" pos:end="313:33">display_width_div</name> <operator pos:start="313:35" pos:end="313:35">=</operator> <literal type="number" pos:start="313:37" pos:end="313:37">2</literal></expr>;</expr_stmt>

                <break pos:start="315:17" pos:end="315:22">break;</break>

            <case pos:start="317:13" pos:end="317:19">case <expr pos:start="317:18" pos:end="317:18"><literal type="number" pos:start="317:18" pos:end="317:18">2</literal></expr>:</case>

            <case pos:start="319:13" pos:end="319:19">case <expr pos:start="319:18" pos:end="319:18"><literal type="number" pos:start="319:18" pos:end="319:18">3</literal></expr>:</case>

            <case pos:start="321:13" pos:end="321:19">case <expr pos:start="321:18" pos:end="321:18"><literal type="number" pos:start="321:18" pos:end="321:18">6</literal></expr>:</case>

            <case pos:start="323:13" pos:end="323:19">case <expr pos:start="323:18" pos:end="323:18"><literal type="number" pos:start="323:18" pos:end="323:18">7</literal></expr>:</case>

                <expr_stmt pos:start="325:17" pos:end="325:39"><expr pos:start="325:17" pos:end="325:38"><name pos:start="325:17" pos:end="325:34">display_height_div</name> <operator pos:start="325:36" pos:end="325:36">=</operator> <literal type="number" pos:start="325:38" pos:end="325:38">2</literal></expr>;</expr_stmt>

                <break pos:start="327:17" pos:end="327:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="335:9" pos:end="343:9"><if pos:start="335:9" pos:end="343:9">if <condition pos:start="335:12" pos:end="339:52">(<expr pos:start="335:13" pos:end="339:51"><operator pos:start="335:13" pos:end="335:13">(</operator><name pos:start="335:14" pos:end="335:16">tag</name> <operator pos:start="335:18" pos:end="335:18">=</operator> <call pos:start="335:20" pos:end="335:67"><name pos:start="335:20" pos:end="335:30">av_dict_get</name><argument_list pos:start="335:31" pos:end="335:67">(<argument pos:start="335:32" pos:end="335:43"><expr pos:start="335:32" pos:end="335:43"><name pos:start="335:32" pos:end="335:43"><name pos:start="335:32" pos:end="335:33">st</name><operator pos:start="335:34" pos:end="335:35">-&gt;</operator><name pos:start="335:36" pos:end="335:43">metadata</name></name></expr></argument>, <argument pos:start="335:46" pos:end="335:57"><expr pos:start="335:46" pos:end="335:57"><literal type="string" pos:start="335:46" pos:end="335:57">"alpha_mode"</literal></expr></argument>, <argument pos:start="335:60" pos:end="335:63"><expr pos:start="335:60" pos:end="335:63"><name pos:start="335:60" pos:end="335:63">NULL</name></expr></argument>, <argument pos:start="335:66" pos:end="335:66"><expr pos:start="335:66" pos:end="335:66"><literal type="number" pos:start="335:66" pos:end="335:66">0</literal></expr></argument>)</argument_list></call><operator pos:start="335:68" pos:end="335:68">)</operator> <operator pos:start="335:70" pos:end="335:71">||</operator>

            <operator pos:start="337:13" pos:end="337:13">(</operator><name pos:start="337:14" pos:end="337:16">tag</name> <operator pos:start="337:18" pos:end="337:18">=</operator> <call pos:start="337:20" pos:end="337:67"><name pos:start="337:20" pos:end="337:30">av_dict_get</name><argument_list pos:start="337:31" pos:end="337:67">( <argument pos:start="337:33" pos:end="337:43"><expr pos:start="337:33" pos:end="337:43"><name pos:start="337:33" pos:end="337:43"><name pos:start="337:33" pos:end="337:33">s</name><operator pos:start="337:34" pos:end="337:35">-&gt;</operator><name pos:start="337:36" pos:end="337:43">metadata</name></name></expr></argument>, <argument pos:start="337:46" pos:end="337:57"><expr pos:start="337:46" pos:end="337:57"><literal type="string" pos:start="337:46" pos:end="337:57">"alpha_mode"</literal></expr></argument>, <argument pos:start="337:60" pos:end="337:63"><expr pos:start="337:60" pos:end="337:63"><name pos:start="337:60" pos:end="337:63">NULL</name></expr></argument>, <argument pos:start="337:66" pos:end="337:66"><expr pos:start="337:66" pos:end="337:66"><literal type="number" pos:start="337:66" pos:end="337:66">0</literal></expr></argument>)</argument_list></call><operator pos:start="337:68" pos:end="337:68">)</operator> <operator pos:start="337:70" pos:end="337:71">||</operator>

            <operator pos:start="339:13" pos:end="339:13">(</operator><name pos:start="339:14" pos:end="339:27"><name pos:start="339:14" pos:end="339:18">codec</name><operator pos:start="339:19" pos:end="339:20">-&gt;</operator><name pos:start="339:21" pos:end="339:27">pix_fmt</name></name> <operator pos:start="339:29" pos:end="339:30">==</operator> <name pos:start="339:32" pos:end="339:50">AV_PIX_FMT_YUVA420P</name><operator pos:start="339:51" pos:end="339:51">)</operator></expr>)</condition> <block pos:start="339:54" pos:end="343:9">{<block_content pos:start="341:13" pos:end="341:61">

            <expr_stmt pos:start="341:13" pos:end="341:61"><expr pos:start="341:13" pos:end="341:60"><call pos:start="341:13" pos:end="341:60"><name pos:start="341:13" pos:end="341:25">put_ebml_uint</name><argument_list pos:start="341:26" pos:end="341:60">(<argument pos:start="341:27" pos:end="341:28"><expr pos:start="341:27" pos:end="341:28"><name pos:start="341:27" pos:end="341:28">pb</name></expr></argument>, <argument pos:start="341:31" pos:end="341:56"><expr pos:start="341:31" pos:end="341:56"><name pos:start="341:31" pos:end="341:56">MATROSKA_ID_VIDEOALPHAMODE</name></expr></argument>, <argument pos:start="341:59" pos:end="341:59"><expr pos:start="341:59" pos:end="341:59"><literal type="number" pos:start="341:59" pos:end="341:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="347:9" pos:end="369:9"><if pos:start="347:9" pos:end="363:9">if <condition pos:start="347:12" pos:end="347:40">(<expr pos:start="347:13" pos:end="347:39"><name pos:start="347:13" pos:end="347:39"><name pos:start="347:13" pos:end="347:14">st</name><operator pos:start="347:15" pos:end="347:16">-&gt;</operator><name pos:start="347:17" pos:end="347:35">sample_aspect_ratio</name><operator pos:start="347:36" pos:end="347:36">.</operator><name pos:start="347:37" pos:end="347:39">num</name></name></expr>)</condition> <block pos:start="347:42" pos:end="363:9">{<block_content pos:start="349:13" pos:end="361:98">

            <decl_stmt pos:start="349:13" pos:end="349:113"><decl pos:start="349:13" pos:end="349:112"><type pos:start="349:13" pos:end="349:19"><name pos:start="349:13" pos:end="349:19">int64_t</name></type> <name pos:start="349:21" pos:end="349:27">d_width</name> <init pos:start="349:29" pos:end="349:112">= <expr pos:start="349:31" pos:end="349:112"><call pos:start="349:31" pos:end="349:112"><name pos:start="349:31" pos:end="349:40">av_rescale</name><argument_list pos:start="349:41" pos:end="349:112">(<argument pos:start="349:42" pos:end="349:53"><expr pos:start="349:42" pos:end="349:53"><name pos:start="349:42" pos:end="349:53"><name pos:start="349:42" pos:end="349:46">codec</name><operator pos:start="349:47" pos:end="349:48">-&gt;</operator><name pos:start="349:49" pos:end="349:53">width</name></name></expr></argument>, <argument pos:start="349:56" pos:end="349:82"><expr pos:start="349:56" pos:end="349:82"><name pos:start="349:56" pos:end="349:82"><name pos:start="349:56" pos:end="349:57">st</name><operator pos:start="349:58" pos:end="349:59">-&gt;</operator><name pos:start="349:60" pos:end="349:78">sample_aspect_ratio</name><operator pos:start="349:79" pos:end="349:79">.</operator><name pos:start="349:80" pos:end="349:82">num</name></name></expr></argument>, <argument pos:start="349:85" pos:end="349:111"><expr pos:start="349:85" pos:end="349:111"><name pos:start="349:85" pos:end="349:111"><name pos:start="349:85" pos:end="349:86">st</name><operator pos:start="349:87" pos:end="349:88">-&gt;</operator><name pos:start="349:89" pos:end="349:107">sample_aspect_ratio</name><operator pos:start="349:108" pos:end="349:108">.</operator><name pos:start="349:109" pos:end="349:111">den</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="351:13" pos:end="357:13"><if pos:start="351:13" pos:end="357:13">if <condition pos:start="351:16" pos:end="351:34">(<expr pos:start="351:17" pos:end="351:33"><name pos:start="351:17" pos:end="351:23">d_width</name> <operator pos:start="351:25" pos:end="351:25">&gt;</operator> <name pos:start="351:27" pos:end="351:33">INT_MAX</name></expr>)</condition> <block pos:start="351:36" pos:end="357:13">{<block_content pos:start="353:17" pos:end="355:39">

                <expr_stmt pos:start="353:17" pos:end="353:71"><expr pos:start="353:17" pos:end="353:70"><call pos:start="353:17" pos:end="353:70"><name pos:start="353:17" pos:end="353:22">av_log</name><argument_list pos:start="353:23" pos:end="353:70">(<argument pos:start="353:24" pos:end="353:24"><expr pos:start="353:24" pos:end="353:24"><name pos:start="353:24" pos:end="353:24">s</name></expr></argument>, <argument pos:start="353:27" pos:end="353:38"><expr pos:start="353:27" pos:end="353:38"><name pos:start="353:27" pos:end="353:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="353:41" pos:end="353:69"><expr pos:start="353:41" pos:end="353:69"><literal type="string" pos:start="353:41" pos:end="353:69">"Overflow in display width\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="355:17" pos:end="355:39">return <expr pos:start="355:24" pos:end="355:38"><call pos:start="355:24" pos:end="355:38"><name pos:start="355:24" pos:end="355:30">AVERROR</name><argument_list pos:start="355:31" pos:end="355:38">(<argument pos:start="355:32" pos:end="355:37"><expr pos:start="355:32" pos:end="355:37"><name pos:start="355:32" pos:end="355:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:91"><expr pos:start="359:13" pos:end="359:90"><call pos:start="359:13" pos:end="359:90"><name pos:start="359:13" pos:end="359:25">put_ebml_uint</name><argument_list pos:start="359:26" pos:end="359:90">(<argument pos:start="359:27" pos:end="359:28"><expr pos:start="359:27" pos:end="359:28"><name pos:start="359:27" pos:end="359:28">pb</name></expr></argument>, <argument pos:start="359:31" pos:end="359:59"><expr pos:start="359:31" pos:end="359:59"><name pos:start="359:31" pos:end="359:59">MATROSKA_ID_VIDEODISPLAYWIDTH</name></expr></argument> , <argument pos:start="359:63" pos:end="359:89"><expr pos:start="359:63" pos:end="359:89"><name pos:start="359:63" pos:end="359:69">d_width</name> <operator pos:start="359:71" pos:end="359:71">/</operator> <name pos:start="359:73" pos:end="359:89">display_width_div</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:98"><expr pos:start="361:13" pos:end="361:97"><call pos:start="361:13" pos:end="361:97"><name pos:start="361:13" pos:end="361:25">put_ebml_uint</name><argument_list pos:start="361:26" pos:end="361:97">(<argument pos:start="361:27" pos:end="361:28"><expr pos:start="361:27" pos:end="361:28"><name pos:start="361:27" pos:end="361:28">pb</name></expr></argument>, <argument pos:start="361:31" pos:end="361:60"><expr pos:start="361:31" pos:end="361:60"><name pos:start="361:31" pos:end="361:60">MATROSKA_ID_VIDEODISPLAYHEIGHT</name></expr></argument>, <argument pos:start="361:63" pos:end="361:96"><expr pos:start="361:63" pos:end="361:96"><name pos:start="361:63" pos:end="361:75"><name pos:start="361:63" pos:end="361:67">codec</name><operator pos:start="361:68" pos:end="361:69">-&gt;</operator><name pos:start="361:70" pos:end="361:75">height</name></name> <operator pos:start="361:77" pos:end="361:77">/</operator> <name pos:start="361:79" pos:end="361:96">display_height_div</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="363:11" pos:end="369:9">else if <condition pos:start="363:19" pos:end="363:69">(<expr pos:start="363:20" pos:end="363:68"><name pos:start="363:20" pos:end="363:36">display_width_div</name> <operator pos:start="363:38" pos:end="363:39">!=</operator> <literal type="number" pos:start="363:41" pos:end="363:41">1</literal> <operator pos:start="363:43" pos:end="363:44">||</operator> <name pos:start="363:46" pos:end="363:63">display_height_div</name> <operator pos:start="363:65" pos:end="363:66">!=</operator> <literal type="number" pos:start="363:68" pos:end="363:68">1</literal></expr>)</condition> <block pos:start="363:71" pos:end="369:9">{<block_content pos:start="365:13" pos:end="367:98">

            <expr_stmt pos:start="365:13" pos:end="365:96"><expr pos:start="365:13" pos:end="365:95"><call pos:start="365:13" pos:end="365:95"><name pos:start="365:13" pos:end="365:25">put_ebml_uint</name><argument_list pos:start="365:26" pos:end="365:95">(<argument pos:start="365:27" pos:end="365:28"><expr pos:start="365:27" pos:end="365:28"><name pos:start="365:27" pos:end="365:28">pb</name></expr></argument>, <argument pos:start="365:31" pos:end="365:59"><expr pos:start="365:31" pos:end="365:59"><name pos:start="365:31" pos:end="365:59">MATROSKA_ID_VIDEODISPLAYWIDTH</name></expr></argument> , <argument pos:start="365:63" pos:end="365:94"><expr pos:start="365:63" pos:end="365:94"><name pos:start="365:63" pos:end="365:74"><name pos:start="365:63" pos:end="365:67">codec</name><operator pos:start="365:68" pos:end="365:69">-&gt;</operator><name pos:start="365:70" pos:end="365:74">width</name></name> <operator pos:start="365:76" pos:end="365:76">/</operator> <name pos:start="365:78" pos:end="365:94">display_width_div</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:98"><expr pos:start="367:13" pos:end="367:97"><call pos:start="367:13" pos:end="367:97"><name pos:start="367:13" pos:end="367:25">put_ebml_uint</name><argument_list pos:start="367:26" pos:end="367:97">(<argument pos:start="367:27" pos:end="367:28"><expr pos:start="367:27" pos:end="367:28"><name pos:start="367:27" pos:end="367:28">pb</name></expr></argument>, <argument pos:start="367:31" pos:end="367:60"><expr pos:start="367:31" pos:end="367:60"><name pos:start="367:31" pos:end="367:60">MATROSKA_ID_VIDEODISPLAYHEIGHT</name></expr></argument>, <argument pos:start="367:63" pos:end="367:96"><expr pos:start="367:63" pos:end="367:96"><name pos:start="367:63" pos:end="367:75"><name pos:start="367:63" pos:end="367:67">codec</name><operator pos:start="367:68" pos:end="367:69">-&gt;</operator><name pos:start="367:70" pos:end="367:75">height</name></name> <operator pos:start="367:77" pos:end="367:77">/</operator> <name pos:start="367:79" pos:end="367:96">display_height_div</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="373:9" pos:end="379:9"><if pos:start="373:9" pos:end="379:9">if <condition pos:start="373:12" pos:end="373:52">(<expr pos:start="373:13" pos:end="373:51"><name pos:start="373:13" pos:end="373:27"><name pos:start="373:13" pos:end="373:17">codec</name><operator pos:start="373:18" pos:end="373:19">-&gt;</operator><name pos:start="373:20" pos:end="373:27">codec_id</name></name> <operator pos:start="373:29" pos:end="373:30">==</operator> <name pos:start="373:32" pos:end="373:51">AV_CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="373:54" pos:end="379:9">{<block_content pos:start="375:13" pos:end="377:96">

            <decl_stmt pos:start="375:13" pos:end="375:64"><decl pos:start="375:13" pos:end="375:63"><type pos:start="375:13" pos:end="375:20"><name pos:start="375:13" pos:end="375:20">uint32_t</name></type> <name pos:start="375:22" pos:end="375:32">color_space</name> <init pos:start="375:34" pos:end="375:63">= <expr pos:start="375:36" pos:end="375:63"><call pos:start="375:36" pos:end="375:63"><name pos:start="375:36" pos:end="375:45">av_le2ne32</name><argument_list pos:start="375:46" pos:end="375:63">(<argument pos:start="375:47" pos:end="375:62"><expr pos:start="375:47" pos:end="375:62"><name pos:start="375:47" pos:end="375:62"><name pos:start="375:47" pos:end="375:51">codec</name><operator pos:start="375:52" pos:end="375:53">-&gt;</operator><name pos:start="375:54" pos:end="375:62">codec_tag</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="377:13" pos:end="377:96"><expr pos:start="377:13" pos:end="377:95"><call pos:start="377:13" pos:end="377:95"><name pos:start="377:13" pos:end="377:27">put_ebml_binary</name><argument_list pos:start="377:28" pos:end="377:95">(<argument pos:start="377:29" pos:end="377:30"><expr pos:start="377:29" pos:end="377:30"><name pos:start="377:29" pos:end="377:30">pb</name></expr></argument>, <argument pos:start="377:33" pos:end="377:59"><expr pos:start="377:33" pos:end="377:59"><name pos:start="377:33" pos:end="377:59">MATROSKA_ID_VIDEOCOLORSPACE</name></expr></argument>, <argument pos:start="377:62" pos:end="377:73"><expr pos:start="377:62" pos:end="377:73"><operator pos:start="377:62" pos:end="377:62">&amp;</operator><name pos:start="377:63" pos:end="377:73">color_space</name></expr></argument>, <argument pos:start="377:76" pos:end="377:94"><expr pos:start="377:76" pos:end="377:94"><sizeof pos:start="377:76" pos:end="377:94">sizeof<argument_list pos:start="377:82" pos:end="377:94">(<argument pos:start="377:83" pos:end="377:93"><expr pos:start="377:83" pos:end="377:93"><name pos:start="377:83" pos:end="377:93">color_space</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:37"><expr pos:start="381:9" pos:end="381:36"><call pos:start="381:9" pos:end="381:36"><name pos:start="381:9" pos:end="381:23">end_ebml_master</name><argument_list pos:start="381:24" pos:end="381:36">(<argument pos:start="381:25" pos:end="381:26"><expr pos:start="381:25" pos:end="381:26"><name pos:start="381:25" pos:end="381:26">pb</name></expr></argument>, <argument pos:start="381:29" pos:end="381:35"><expr pos:start="381:29" pos:end="381:35"><name pos:start="381:29" pos:end="381:35">subinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="383:9" pos:end="383:14">break;</break>



    <case pos:start="387:5" pos:end="387:28">case <expr pos:start="387:10" pos:end="387:27"><name pos:start="387:10" pos:end="387:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="389:9" pos:end="389:76"><expr pos:start="389:9" pos:end="389:75"><call pos:start="389:9" pos:end="389:75"><name pos:start="389:9" pos:end="389:21">put_ebml_uint</name><argument_list pos:start="389:22" pos:end="389:75">(<argument pos:start="389:23" pos:end="389:24"><expr pos:start="389:23" pos:end="389:24"><name pos:start="389:23" pos:end="389:24">pb</name></expr></argument>, <argument pos:start="389:27" pos:end="389:47"><expr pos:start="389:27" pos:end="389:47"><name pos:start="389:27" pos:end="389:47">MATROSKA_ID_TRACKTYPE</name></expr></argument>, <argument pos:start="389:50" pos:end="389:74"><expr pos:start="389:50" pos:end="389:74"><name pos:start="389:50" pos:end="389:74">MATROSKA_TRACK_TYPE_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="393:9" pos:end="397:65"><if pos:start="393:9" pos:end="397:65">if <condition pos:start="393:12" pos:end="393:23">(<expr pos:start="393:13" pos:end="393:22"><operator pos:start="393:13" pos:end="393:13">!</operator><name pos:start="393:14" pos:end="393:22">native_id</name></expr>)</condition><block type="pseudo" pos:start="397:13" pos:end="397:65"><block_content pos:start="397:13" pos:end="397:65">

            <comment type="line" pos:start="395:13" pos:end="395:47">// no mkv-specific ID, use ACM mode</comment>

            <expr_stmt pos:start="397:13" pos:end="397:65"><expr pos:start="397:13" pos:end="397:64"><call pos:start="397:13" pos:end="397:64"><name pos:start="397:13" pos:end="397:27">put_ebml_string</name><argument_list pos:start="397:28" pos:end="397:64">(<argument pos:start="397:29" pos:end="397:30"><expr pos:start="397:29" pos:end="397:30"><name pos:start="397:29" pos:end="397:30">pb</name></expr></argument>, <argument pos:start="397:33" pos:end="397:51"><expr pos:start="397:33" pos:end="397:51"><name pos:start="397:33" pos:end="397:51">MATROSKA_ID_CODECID</name></expr></argument>, <argument pos:start="397:54" pos:end="397:63"><expr pos:start="397:54" pos:end="397:63"><literal type="string" pos:start="397:54" pos:end="397:63">"A_MS/ACM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="401:9" pos:end="401:67"><expr pos:start="401:9" pos:end="401:66"><name pos:start="401:9" pos:end="401:15">subinfo</name> <operator pos:start="401:17" pos:end="401:17">=</operator> <call pos:start="401:19" pos:end="401:66"><name pos:start="401:19" pos:end="401:35">start_ebml_master</name><argument_list pos:start="401:36" pos:end="401:66">(<argument pos:start="401:37" pos:end="401:38"><expr pos:start="401:37" pos:end="401:38"><name pos:start="401:37" pos:end="401:38">pb</name></expr></argument>, <argument pos:start="401:41" pos:end="401:62"><expr pos:start="401:41" pos:end="401:62"><name pos:start="401:41" pos:end="401:62">MATROSKA_ID_TRACKAUDIO</name></expr></argument>, <argument pos:start="401:65" pos:end="401:65"><expr pos:start="401:65" pos:end="401:65"><literal type="number" pos:start="401:65" pos:end="401:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="403:9" pos:end="403:76"><expr pos:start="403:9" pos:end="403:75"><call pos:start="403:9" pos:end="403:75"><name pos:start="403:9" pos:end="403:21">put_ebml_uint</name>  <argument_list pos:start="403:24" pos:end="403:75">(<argument pos:start="403:25" pos:end="403:26"><expr pos:start="403:25" pos:end="403:26"><name pos:start="403:25" pos:end="403:26">pb</name></expr></argument>, <argument pos:start="403:29" pos:end="403:53"><expr pos:start="403:29" pos:end="403:53"><name pos:start="403:29" pos:end="403:53">MATROSKA_ID_AUDIOCHANNELS</name></expr></argument>    , <argument pos:start="403:60" pos:end="403:74"><expr pos:start="403:60" pos:end="403:74"><name pos:start="403:60" pos:end="403:74"><name pos:start="403:60" pos:end="403:64">codec</name><operator pos:start="403:65" pos:end="403:66">-&gt;</operator><name pos:start="403:67" pos:end="403:74">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:72"><expr pos:start="405:9" pos:end="405:71"><call pos:start="405:9" pos:end="405:71"><name pos:start="405:9" pos:end="405:22">put_ebml_float</name> <argument_list pos:start="405:24" pos:end="405:71">(<argument pos:start="405:25" pos:end="405:26"><expr pos:start="405:25" pos:end="405:26"><name pos:start="405:25" pos:end="405:26">pb</name></expr></argument>, <argument pos:start="405:29" pos:end="405:57"><expr pos:start="405:29" pos:end="405:57"><name pos:start="405:29" pos:end="405:57">MATROSKA_ID_AUDIOSAMPLINGFREQ</name></expr></argument>, <argument pos:start="405:60" pos:end="405:70"><expr pos:start="405:60" pos:end="405:70"><name pos:start="405:60" pos:end="405:70">sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="407:9" pos:end="409:85"><if pos:start="407:9" pos:end="409:85">if <condition pos:start="407:12" pos:end="407:31">(<expr pos:start="407:13" pos:end="407:30"><name pos:start="407:13" pos:end="407:30">output_sample_rate</name></expr>)</condition><block type="pseudo" pos:start="409:13" pos:end="409:85"><block_content pos:start="409:13" pos:end="409:85">

            <expr_stmt pos:start="409:13" pos:end="409:85"><expr pos:start="409:13" pos:end="409:84"><call pos:start="409:13" pos:end="409:84"><name pos:start="409:13" pos:end="409:26">put_ebml_float</name><argument_list pos:start="409:27" pos:end="409:84">(<argument pos:start="409:28" pos:end="409:29"><expr pos:start="409:28" pos:end="409:29"><name pos:start="409:28" pos:end="409:29">pb</name></expr></argument>, <argument pos:start="409:32" pos:end="409:63"><expr pos:start="409:32" pos:end="409:63"><name pos:start="409:32" pos:end="409:63">MATROSKA_ID_AUDIOOUTSAMPLINGFREQ</name></expr></argument>, <argument pos:start="409:66" pos:end="409:83"><expr pos:start="409:66" pos:end="409:83"><name pos:start="409:66" pos:end="409:83">output_sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="411:9" pos:end="413:68"><if pos:start="411:9" pos:end="413:68">if <condition pos:start="411:12" pos:end="411:22">(<expr pos:start="411:13" pos:end="411:21"><name pos:start="411:13" pos:end="411:21">bit_depth</name></expr>)</condition><block type="pseudo" pos:start="413:13" pos:end="413:68"><block_content pos:start="413:13" pos:end="413:68">

            <expr_stmt pos:start="413:13" pos:end="413:68"><expr pos:start="413:13" pos:end="413:67"><call pos:start="413:13" pos:end="413:67"><name pos:start="413:13" pos:end="413:25">put_ebml_uint</name><argument_list pos:start="413:26" pos:end="413:67">(<argument pos:start="413:27" pos:end="413:28"><expr pos:start="413:27" pos:end="413:28"><name pos:start="413:27" pos:end="413:28">pb</name></expr></argument>, <argument pos:start="413:31" pos:end="413:55"><expr pos:start="413:31" pos:end="413:55"><name pos:start="413:31" pos:end="413:55">MATROSKA_ID_AUDIOBITDEPTH</name></expr></argument>, <argument pos:start="413:58" pos:end="413:66"><expr pos:start="413:58" pos:end="413:66"><name pos:start="413:58" pos:end="413:66">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:37"><expr pos:start="415:9" pos:end="415:36"><call pos:start="415:9" pos:end="415:36"><name pos:start="415:9" pos:end="415:23">end_ebml_master</name><argument_list pos:start="415:24" pos:end="415:36">(<argument pos:start="415:25" pos:end="415:26"><expr pos:start="415:25" pos:end="415:26"><name pos:start="415:25" pos:end="415:26">pb</name></expr></argument>, <argument pos:start="415:29" pos:end="415:35"><expr pos:start="415:29" pos:end="415:35"><name pos:start="415:29" pos:end="415:35">subinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="417:9" pos:end="417:14">break;</break>



    <case pos:start="421:5" pos:end="421:31">case <expr pos:start="421:10" pos:end="421:30"><name pos:start="421:10" pos:end="421:30">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

        <if_stmt pos:start="423:9" pos:end="429:9"><if pos:start="423:9" pos:end="429:9">if <condition pos:start="423:12" pos:end="423:23">(<expr pos:start="423:13" pos:end="423:22"><operator pos:start="423:13" pos:end="423:13">!</operator><name pos:start="423:14" pos:end="423:22">native_id</name></expr>)</condition> <block pos:start="423:25" pos:end="429:9">{<block_content pos:start="425:13" pos:end="427:35">

            <expr_stmt pos:start="425:13" pos:end="425:94"><expr pos:start="425:13" pos:end="425:93"><call pos:start="425:13" pos:end="425:93"><name pos:start="425:13" pos:end="425:18">av_log</name><argument_list pos:start="425:19" pos:end="425:93">(<argument pos:start="425:20" pos:end="425:20"><expr pos:start="425:20" pos:end="425:20"><name pos:start="425:20" pos:end="425:20">s</name></expr></argument>, <argument pos:start="425:23" pos:end="425:34"><expr pos:start="425:23" pos:end="425:34"><name pos:start="425:23" pos:end="425:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="425:37" pos:end="425:75"><expr pos:start="425:37" pos:end="425:75"><literal type="string" pos:start="425:37" pos:end="425:75">"Subtitle codec %d is not supported.\n"</literal></expr></argument>, <argument pos:start="425:78" pos:end="425:92"><expr pos:start="425:78" pos:end="425:92"><name pos:start="425:78" pos:end="425:92"><name pos:start="425:78" pos:end="425:82">codec</name><operator pos:start="425:83" pos:end="425:84">-&gt;</operator><name pos:start="425:85" pos:end="425:92">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="427:13" pos:end="427:35">return <expr pos:start="427:20" pos:end="427:34"><call pos:start="427:20" pos:end="427:34"><name pos:start="427:20" pos:end="427:26">AVERROR</name><argument_list pos:start="427:27" pos:end="427:34">(<argument pos:start="427:28" pos:end="427:33"><expr pos:start="427:28" pos:end="427:33"><name pos:start="427:28" pos:end="427:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="433:9" pos:end="435:53"><if pos:start="433:9" pos:end="435:53">if <condition pos:start="433:12" pos:end="433:76">(<expr pos:start="433:13" pos:end="433:75"><name pos:start="433:13" pos:end="433:21"><name pos:start="433:13" pos:end="433:15">mkv</name><operator pos:start="433:16" pos:end="433:17">-&gt;</operator><name pos:start="433:18" pos:end="433:21">mode</name></name> <operator pos:start="433:23" pos:end="433:24">!=</operator> <name pos:start="433:26" pos:end="433:34">MODE_WEBM</name> <operator pos:start="433:36" pos:end="433:37">||</operator> <name pos:start="433:39" pos:end="433:53"><name pos:start="433:39" pos:end="433:43">codec</name><operator pos:start="433:44" pos:end="433:45">-&gt;</operator><name pos:start="433:46" pos:end="433:53">codec_id</name></name> <operator pos:start="433:55" pos:end="433:56">!=</operator> <name pos:start="433:58" pos:end="433:75">AV_CODEC_ID_WEBVTT</name></expr>)</condition><block type="pseudo" pos:start="435:13" pos:end="435:53"><block_content pos:start="435:13" pos:end="435:53">

            <expr_stmt pos:start="435:13" pos:end="435:53"><expr pos:start="435:13" pos:end="435:52"><name pos:start="435:13" pos:end="435:21">native_id</name> <operator pos:start="435:23" pos:end="435:23">=</operator> <name pos:start="435:25" pos:end="435:52">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="439:9" pos:end="439:60"><expr pos:start="439:9" pos:end="439:59"><call pos:start="439:9" pos:end="439:59"><name pos:start="439:9" pos:end="439:21">put_ebml_uint</name><argument_list pos:start="439:22" pos:end="439:59">(<argument pos:start="439:23" pos:end="439:24"><expr pos:start="439:23" pos:end="439:24"><name pos:start="439:23" pos:end="439:24">pb</name></expr></argument>, <argument pos:start="439:27" pos:end="439:47"><expr pos:start="439:27" pos:end="439:47"><name pos:start="439:27" pos:end="439:47">MATROSKA_ID_TRACKTYPE</name></expr></argument>, <argument pos:start="439:50" pos:end="439:58"><expr pos:start="439:50" pos:end="439:58"><name pos:start="439:50" pos:end="439:58">native_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="441:9" pos:end="441:14">break;</break>

    <default pos:start="443:5" pos:end="443:12">default:</default>

        <expr_stmt pos:start="445:9" pos:end="445:98"><expr pos:start="445:9" pos:end="445:97"><call pos:start="445:9" pos:end="445:97"><name pos:start="445:9" pos:end="445:14">av_log</name><argument_list pos:start="445:15" pos:end="445:97">(<argument pos:start="445:16" pos:end="445:16"><expr pos:start="445:16" pos:end="445:16"><name pos:start="445:16" pos:end="445:16">s</name></expr></argument>, <argument pos:start="445:19" pos:end="445:30"><expr pos:start="445:19" pos:end="445:30"><name pos:start="445:19" pos:end="445:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="445:33" pos:end="445:96"><expr pos:start="445:33" pos:end="445:96"><literal type="string" pos:start="445:33" pos:end="445:96">"Only audio, video, and subtitles are supported for Matroska.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="447:9" pos:end="447:31">return <expr pos:start="447:16" pos:end="447:30"><call pos:start="447:16" pos:end="447:30"><name pos:start="447:16" pos:end="447:22">AVERROR</name><argument_list pos:start="447:23" pos:end="447:30">(<argument pos:start="447:24" pos:end="447:29"><expr pos:start="447:24" pos:end="447:29"><name pos:start="447:24" pos:end="447:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="453:5" pos:end="461:5"><if pos:start="453:5" pos:end="461:5">if <condition pos:start="453:8" pos:end="453:72">(<expr pos:start="453:9" pos:end="453:71"><name pos:start="453:9" pos:end="453:17"><name pos:start="453:9" pos:end="453:11">mkv</name><operator pos:start="453:12" pos:end="453:13">-&gt;</operator><name pos:start="453:14" pos:end="453:17">mode</name></name> <operator pos:start="453:19" pos:end="453:20">!=</operator> <name pos:start="453:22" pos:end="453:30">MODE_WEBM</name> <operator pos:start="453:32" pos:end="453:33">||</operator> <name pos:start="453:35" pos:end="453:49"><name pos:start="453:35" pos:end="453:39">codec</name><operator pos:start="453:40" pos:end="453:41">-&gt;</operator><name pos:start="453:42" pos:end="453:49">codec_id</name></name> <operator pos:start="453:51" pos:end="453:52">!=</operator> <name pos:start="453:54" pos:end="453:71">AV_CODEC_ID_WEBVTT</name></expr>)</condition> <block pos:start="453:74" pos:end="461:5">{<block_content pos:start="455:9" pos:end="459:23">

        <expr_stmt pos:start="455:9" pos:end="455:69"><expr pos:start="455:9" pos:end="455:68"><name pos:start="455:9" pos:end="455:11">ret</name> <operator pos:start="455:13" pos:end="455:13">=</operator> <call pos:start="455:15" pos:end="455:68"><name pos:start="455:15" pos:end="455:36">mkv_write_codecprivate</name><argument_list pos:start="455:37" pos:end="455:68">(<argument pos:start="455:38" pos:end="455:38"><expr pos:start="455:38" pos:end="455:38"><name pos:start="455:38" pos:end="455:38">s</name></expr></argument>, <argument pos:start="455:41" pos:end="455:42"><expr pos:start="455:41" pos:end="455:42"><name pos:start="455:41" pos:end="455:42">pb</name></expr></argument>, <argument pos:start="455:45" pos:end="455:49"><expr pos:start="455:45" pos:end="455:49"><name pos:start="455:45" pos:end="455:49">codec</name></expr></argument>, <argument pos:start="455:52" pos:end="455:60"><expr pos:start="455:52" pos:end="455:60"><name pos:start="455:52" pos:end="455:60">native_id</name></expr></argument>, <argument pos:start="455:63" pos:end="455:67"><expr pos:start="455:63" pos:end="455:67"><name pos:start="455:63" pos:end="455:67">qt_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="457:9" pos:end="459:23"><if pos:start="457:9" pos:end="459:23">if <condition pos:start="457:12" pos:end="457:20">(<expr pos:start="457:13" pos:end="457:19"><name pos:start="457:13" pos:end="457:15">ret</name> <operator pos:start="457:17" pos:end="457:17">&lt;</operator> <literal type="number" pos:start="457:19" pos:end="457:19">0</literal></expr>)</condition><block type="pseudo" pos:start="459:13" pos:end="459:23"><block_content pos:start="459:13" pos:end="459:23">

            <return pos:start="459:13" pos:end="459:23">return <expr pos:start="459:20" pos:end="459:22"><name pos:start="459:20" pos:end="459:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="465:5" pos:end="465:31"><expr pos:start="465:5" pos:end="465:30"><call pos:start="465:5" pos:end="465:30"><name pos:start="465:5" pos:end="465:19">end_ebml_master</name><argument_list pos:start="465:20" pos:end="465:30">(<argument pos:start="465:21" pos:end="465:22"><expr pos:start="465:21" pos:end="465:22"><name pos:start="465:21" pos:end="465:22">pb</name></expr></argument>, <argument pos:start="465:25" pos:end="465:29"><expr pos:start="465:25" pos:end="465:29"><name pos:start="465:25" pos:end="465:29">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="469:5" pos:end="469:13">return <expr pos:start="469:12" pos:end="469:12"><literal type="number" pos:start="469:12" pos:end="469:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
