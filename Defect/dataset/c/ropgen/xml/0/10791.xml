<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10791.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">get_frame_filename</name><parameter_list pos:start="1:23" pos:end="3:52">(<parameter pos:start="1:24" pos:end="1:32"><decl pos:start="1:24" pos:end="1:32"><type pos:start="1:24" pos:end="1:32"><name pos:start="1:24" pos:end="1:27">char</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">buf</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:37">int</name></type> <name pos:start="1:39" pos:end="1:46">buf_size</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:39"><decl pos:start="3:24" pos:end="3:39"><type pos:start="3:24" pos:end="3:39"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:33">char</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">path</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:51"><decl pos:start="3:42" pos:end="3:51"><type pos:start="3:42" pos:end="3:51"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:51">number</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="119:1">{<block_content pos:start="7:5" pos:end="117:14">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:11">q</name></decl>, <decl pos:start="9:14" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:10"/><name pos:start="9:14" pos:end="9:21"><name pos:start="9:14" pos:end="9:17">buf1</name><index pos:start="9:18" pos:end="9:21">[<expr pos:start="9:19" pos:end="9:20"><literal type="number" pos:start="9:19" pos:end="9:20">20</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">nd</name></decl>, <decl pos:start="11:13" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:15">len</name></decl>, <decl pos:start="11:18" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:18">c</name></decl>, <decl pos:start="11:21" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:34">percentd_found</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:12"><expr pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:5">q</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <name pos:start="15:9" pos:end="15:11">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:13"><expr pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:5">p</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <name pos:start="17:9" pos:end="17:12">path</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:18">percentd_found</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="103:5">for<control pos:start="21:8" pos:end="21:11">(<init pos:start="21:9" pos:end="21:9">;</init><condition pos:start="21:10" pos:end="21:10">;</condition><incr/>)</control> <block pos:start="21:13" pos:end="103:5">{<block_content pos:start="23:9" pos:end="101:9">

        <expr_stmt pos:start="23:9" pos:end="23:17"><expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:9">c</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <operator pos:start="23:13" pos:end="23:13">*</operator><name pos:start="23:14" pos:end="23:14">p</name><operator pos:start="23:15" pos:end="23:16">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:22">(<expr pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:13">c</name> <operator pos:start="25:15" pos:end="25:16">==</operator> <literal type="char" pos:start="25:18" pos:end="25:21">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="101:9"><if pos:start="29:9" pos:end="93:9">if <condition pos:start="29:12" pos:end="29:21">(<expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:13">c</name> <operator pos:start="29:15" pos:end="29:16">==</operator> <literal type="char" pos:start="29:18" pos:end="29:20">'%'</literal></expr>)</condition> <block pos:start="29:23" pos:end="93:9">{<block_content pos:start="31:13" pos:end="91:13">

            <do pos:start="31:13" pos:end="55:33">do <block pos:start="31:16" pos:end="55:13">{<block_content pos:start="33:17" pos:end="53:17">

                <expr_stmt pos:start="33:17" pos:end="33:23"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:18">nd</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="number" pos:start="33:22" pos:end="33:22">0</literal></expr>;</expr_stmt>

                <while pos:start="35:17" pos:end="39:17">while <condition pos:start="35:23" pos:end="35:35">(<expr pos:start="35:24" pos:end="35:34"><call pos:start="35:24" pos:end="35:34"><name pos:start="35:24" pos:end="35:30">isdigit</name><argument_list pos:start="35:31" pos:end="35:34">(<argument pos:start="35:32" pos:end="35:33"><expr pos:start="35:32" pos:end="35:33"><operator pos:start="35:32" pos:end="35:32">*</operator><name pos:start="35:33" pos:end="35:33">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:37" pos:end="39:17">{<block_content pos:start="37:21" pos:end="37:46">

                    <expr_stmt pos:start="37:21" pos:end="37:46"><expr pos:start="37:21" pos:end="37:45"><name pos:start="37:21" pos:end="37:22">nd</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:27">nd</name> <operator pos:start="37:29" pos:end="37:29">*</operator> <literal type="number" pos:start="37:31" pos:end="37:34">10</literal> <operator pos:start="37:34" pos:end="37:34">+</operator> <operator pos:start="37:36" pos:end="37:36">*</operator><name pos:start="37:37" pos:end="37:37">p</name><operator pos:start="37:38" pos:end="37:39">++</operator> <operator pos:start="37:41" pos:end="37:41">-</operator> <literal type="char" pos:start="37:43" pos:end="37:45">'0'</literal></expr>;</expr_stmt>

                </block_content>}</block></while>

                <expr_stmt pos:start="41:17" pos:end="41:25"><expr pos:start="41:17" pos:end="41:24"><name pos:start="41:17" pos:end="41:17">c</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <operator pos:start="41:21" pos:end="41:21">*</operator><name pos:start="41:22" pos:end="41:22">p</name><operator pos:start="41:23" pos:end="41:24">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="43:17" pos:end="53:17"><if pos:start="43:17" pos:end="53:17">if <condition pos:start="43:20" pos:end="43:39">(<expr pos:start="43:21" pos:end="43:38"><name pos:start="43:21" pos:end="43:21">c</name> <operator pos:start="43:23" pos:end="43:24">==</operator> <literal type="char" pos:start="43:26" pos:end="43:28">'*'</literal> <operator pos:start="43:30" pos:end="43:31">&amp;&amp;</operator> <name pos:start="43:33" pos:end="43:34">nd</name> <operator pos:start="43:36" pos:end="43:36">&gt;</operator> <literal type="number" pos:start="43:38" pos:end="43:38">0</literal></expr>)</condition> <block pos:start="43:41" pos:end="53:17">{<block_content pos:start="47:21" pos:end="51:27">

                    <comment type="line" pos:start="45:21" pos:end="45:59">// The nd field is actually the modulus</comment>

                    <expr_stmt pos:start="47:21" pos:end="47:41"><expr pos:start="47:21" pos:end="47:40"><name pos:start="47:21" pos:end="47:26">number</name> <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:35">number</name> <operator pos:start="47:37" pos:end="47:37">%</operator> <name pos:start="47:39" pos:end="47:40">nd</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:29"><expr pos:start="49:21" pos:end="49:28"><name pos:start="49:21" pos:end="49:21">c</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <operator pos:start="49:25" pos:end="49:25">*</operator><name pos:start="49:26" pos:end="49:26">p</name><operator pos:start="49:27" pos:end="49:28">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:27"><expr pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:22">nd</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block> while <condition pos:start="55:21" pos:end="55:32">(<expr pos:start="55:22" pos:end="55:31"><call pos:start="55:22" pos:end="55:31"><name pos:start="55:22" pos:end="55:28">isdigit</name><argument_list pos:start="55:29" pos:end="55:31">(<argument pos:start="55:30" pos:end="55:30"><expr pos:start="55:30" pos:end="55:30"><name pos:start="55:30" pos:end="55:30">c</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>



            <switch pos:start="59:13" pos:end="91:13">switch<condition pos:start="59:19" pos:end="59:21">(<expr pos:start="59:20" pos:end="59:20"><name pos:start="59:20" pos:end="59:20">c</name></expr>)</condition> <block pos:start="59:23" pos:end="91:13">{<block_content pos:start="61:13" pos:end="89:26">

            <case pos:start="61:13" pos:end="61:21">case <expr pos:start="61:18" pos:end="61:20"><literal type="char" pos:start="61:18" pos:end="61:20">'%'</literal></expr>:</case>

                <goto pos:start="63:17" pos:end="63:29">goto <name pos:start="63:22" pos:end="63:28">addchar</name>;</goto>

            <case pos:start="65:13" pos:end="65:21">case <expr pos:start="65:18" pos:end="65:20"><literal type="char" pos:start="65:18" pos:end="65:20">'d'</literal></expr>:</case>

                <if_stmt pos:start="67:17" pos:end="69:30"><if pos:start="67:17" pos:end="69:30">if <condition pos:start="67:20" pos:end="67:35">(<expr pos:start="67:21" pos:end="67:34"><name pos:start="67:21" pos:end="67:34">percentd_found</name></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:30"><block_content pos:start="69:21" pos:end="69:30">

                    <goto pos:start="69:21" pos:end="69:30">goto <name pos:start="69:26" pos:end="69:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:35"><expr pos:start="71:17" pos:end="71:34"><name pos:start="71:17" pos:end="71:30">percentd_found</name> <operator pos:start="71:32" pos:end="71:32">=</operator> <literal type="number" pos:start="71:34" pos:end="71:34">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:65"><expr pos:start="73:17" pos:end="73:64"><call pos:start="73:17" pos:end="73:64"><name pos:start="73:17" pos:end="73:24">snprintf</name><argument_list pos:start="73:25" pos:end="73:64">(<argument pos:start="73:26" pos:end="73:29"><expr pos:start="73:26" pos:end="73:29"><name pos:start="73:26" pos:end="73:29">buf1</name></expr></argument>, <argument pos:start="73:32" pos:end="73:43"><expr pos:start="73:32" pos:end="73:43"><sizeof pos:start="73:32" pos:end="73:43">sizeof<argument_list pos:start="73:38" pos:end="73:43">(<argument pos:start="73:39" pos:end="73:42"><expr pos:start="73:39" pos:end="73:42"><name pos:start="73:39" pos:end="73:42">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="73:46" pos:end="73:51"><expr pos:start="73:46" pos:end="73:51"><literal type="string" pos:start="73:46" pos:end="73:51">"%0*d"</literal></expr></argument>, <argument pos:start="73:54" pos:end="73:55"><expr pos:start="73:54" pos:end="73:55"><name pos:start="73:54" pos:end="73:55">nd</name></expr></argument>, <argument pos:start="73:58" pos:end="73:63"><expr pos:start="73:58" pos:end="73:63"><name pos:start="73:58" pos:end="73:63">number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:35"><expr pos:start="75:17" pos:end="75:34"><name pos:start="75:17" pos:end="75:19">len</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <call pos:start="75:23" pos:end="75:34"><name pos:start="75:23" pos:end="75:28">strlen</name><argument_list pos:start="75:29" pos:end="75:34">(<argument pos:start="75:30" pos:end="75:33"><expr pos:start="75:30" pos:end="75:33"><name pos:start="75:30" pos:end="75:33">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="77:17" pos:end="79:30"><if pos:start="77:17" pos:end="79:30">if <condition pos:start="77:20" pos:end="77:51">(<expr pos:start="77:21" pos:end="77:50"><operator pos:start="77:21" pos:end="77:21">(</operator><name pos:start="77:22" pos:end="77:22">q</name> <operator pos:start="77:24" pos:end="77:24">-</operator> <name pos:start="77:26" pos:end="77:28">buf</name> <operator pos:start="77:30" pos:end="77:30">+</operator> <name pos:start="77:32" pos:end="77:34">len</name><operator pos:start="77:35" pos:end="77:35">)</operator> <operator pos:start="77:37" pos:end="77:37">&gt;</operator> <name pos:start="77:39" pos:end="77:46">buf_size</name> <operator pos:start="77:48" pos:end="77:48">-</operator> <literal type="number" pos:start="77:50" pos:end="77:50">1</literal></expr>)</condition><block type="pseudo" pos:start="79:21" pos:end="79:30"><block_content pos:start="79:21" pos:end="79:30">

                    <goto pos:start="79:21" pos:end="79:30">goto <name pos:start="79:26" pos:end="79:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:37"><expr pos:start="81:17" pos:end="81:36"><call pos:start="81:17" pos:end="81:36"><name pos:start="81:17" pos:end="81:22">memcpy</name><argument_list pos:start="81:23" pos:end="81:36">(<argument pos:start="81:24" pos:end="81:24"><expr pos:start="81:24" pos:end="81:24"><name pos:start="81:24" pos:end="81:24">q</name></expr></argument>, <argument pos:start="81:27" pos:end="81:30"><expr pos:start="81:27" pos:end="81:30"><name pos:start="81:27" pos:end="81:30">buf1</name></expr></argument>, <argument pos:start="81:33" pos:end="81:35"><expr pos:start="81:33" pos:end="81:35"><name pos:start="81:33" pos:end="81:35">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:25"><expr pos:start="83:17" pos:end="83:24"><name pos:start="83:17" pos:end="83:17">q</name> <operator pos:start="83:19" pos:end="83:20">+=</operator> <name pos:start="83:22" pos:end="83:24">len</name></expr>;</expr_stmt>

                <break pos:start="85:17" pos:end="85:22">break;</break>

            <default pos:start="87:13" pos:end="87:20">default:</default>

                <goto pos:start="89:17" pos:end="89:26">goto <name pos:start="89:22" pos:end="89:25">fail</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="101:9">else <block pos:start="93:16" pos:end="101:9">{<block_content pos:start="95:9" pos:end="99:25">

        <label pos:start="95:9" pos:end="95:16"><name pos:start="95:9" pos:end="95:15">addchar</name>:</label>

            <if_stmt pos:start="97:13" pos:end="99:25"><if pos:start="97:13" pos:end="99:25">if <condition pos:start="97:16" pos:end="97:41">(<expr pos:start="97:17" pos:end="97:40"><operator pos:start="97:17" pos:end="97:17">(</operator><name pos:start="97:18" pos:end="97:18">q</name> <operator pos:start="97:20" pos:end="97:20">-</operator> <name pos:start="97:22" pos:end="97:24">buf</name><operator pos:start="97:25" pos:end="97:25">)</operator> <operator pos:start="97:27" pos:end="97:27">&lt;</operator> <name pos:start="97:29" pos:end="97:36">buf_size</name> <operator pos:start="97:38" pos:end="97:38">-</operator> <literal type="number" pos:start="97:40" pos:end="97:40">1</literal></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:25"><block_content pos:start="99:17" pos:end="99:25">

                <expr_stmt pos:start="99:17" pos:end="99:25"><expr pos:start="99:17" pos:end="99:24"><operator pos:start="99:17" pos:end="99:17">*</operator><name pos:start="99:18" pos:end="99:18">q</name><operator pos:start="99:19" pos:end="99:20">++</operator> <operator pos:start="99:22" pos:end="99:22">=</operator> <name pos:start="99:24" pos:end="99:24">c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="105:5" pos:end="107:18"><if pos:start="105:5" pos:end="107:18">if <condition pos:start="105:8" pos:end="105:24">(<expr pos:start="105:9" pos:end="105:23"><operator pos:start="105:9" pos:end="105:9">!</operator><name pos:start="105:10" pos:end="105:23">percentd_found</name></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:18"><block_content pos:start="107:9" pos:end="107:18">

        <goto pos:start="107:9" pos:end="107:18">goto <name pos:start="107:14" pos:end="107:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:14"><expr pos:start="109:5" pos:end="109:13"><operator pos:start="109:5" pos:end="109:5">*</operator><name pos:start="109:6" pos:end="109:6">q</name> <operator pos:start="109:8" pos:end="109:8">=</operator> <literal type="char" pos:start="109:10" pos:end="109:13">'\0'</literal></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>

 <label pos:start="113:2" pos:end="113:6"><name pos:start="113:2" pos:end="113:5">fail</name>:</label>

    <expr_stmt pos:start="115:5" pos:end="115:14"><expr pos:start="115:5" pos:end="115:13"><operator pos:start="115:5" pos:end="115:5">*</operator><name pos:start="115:6" pos:end="115:6">q</name> <operator pos:start="115:8" pos:end="115:8">=</operator> <literal type="char" pos:start="115:10" pos:end="115:13">'\0'</literal></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:14">return <expr pos:start="117:12" pos:end="117:13"><operator pos:start="117:12" pos:end="117:12">-</operator><literal type="number" pos:start="117:13" pos:end="117:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
