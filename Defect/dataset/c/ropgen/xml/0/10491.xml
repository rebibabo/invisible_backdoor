<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10491.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">virtio_pci_vector_unmask</name><parameter_list pos:start="1:36" pos:end="3:51">(<parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:45">PCIDevice</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">dev</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:60">unsigned</name></type> <name pos:start="1:62" pos:end="1:67">vector</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:46">MSIMessage</name></type> <name pos:start="3:48" pos:end="3:50">msg</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:15">

    <decl_stmt pos:start="7:5" pos:end="7:71"><decl pos:start="7:5" pos:end="7:70"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtIOPCIProxy</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">proxy</name> <init pos:start="7:27" pos:end="7:70">= <expr pos:start="7:29" pos:end="7:70"><call pos:start="7:29" pos:end="7:70"><name pos:start="7:29" pos:end="7:40">container_of</name><argument_list pos:start="7:41" pos:end="7:70">(<argument pos:start="7:42" pos:end="7:44"><expr pos:start="7:42" pos:end="7:44"><name pos:start="7:42" pos:end="7:44">dev</name></expr></argument>, <argument pos:start="7:47" pos:end="7:60"><expr pos:start="7:47" pos:end="7:60"><name pos:start="7:47" pos:end="7:60">VirtIOPCIProxy</name></expr></argument>, <argument pos:start="7:63" pos:end="7:69"><expr pos:start="7:63" pos:end="7:69"><name pos:start="7:63" pos:end="7:69">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">VirtIODevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">vdev</name> <init pos:start="9:24" pos:end="9:59">= <expr pos:start="9:26" pos:end="9:59"><call pos:start="9:26" pos:end="9:59"><name pos:start="9:26" pos:end="9:46">virtio_bus_get_device</name><argument_list pos:start="9:47" pos:end="9:59">(<argument pos:start="9:48" pos:end="9:58"><expr pos:start="9:48" pos:end="9:58"><operator pos:start="9:48" pos:end="9:48">&amp;</operator><name pos:start="9:49" pos:end="9:58"><name pos:start="9:49" pos:end="9:53">proxy</name><operator pos:start="9:54" pos:end="9:55">-&gt;</operator><name pos:start="9:56" pos:end="9:58">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:59"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">VirtQueue</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:17">vq</name> <init pos:start="11:19" pos:end="11:59">= <expr pos:start="11:21" pos:end="11:59"><call pos:start="11:21" pos:end="11:59"><name pos:start="11:21" pos:end="11:45">virtio_vector_first_queue</name><argument_list pos:start="11:46" pos:end="11:59">(<argument pos:start="11:47" pos:end="11:50"><expr pos:start="11:47" pos:end="11:50"><name pos:start="11:47" pos:end="11:50">vdev</name></expr></argument>, <argument pos:start="11:53" pos:end="11:58"><expr pos:start="11:53" pos:end="11:58"><name pos:start="11:53" pos:end="11:58">vector</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:18">index</name></decl>, <decl pos:start="13:21" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:28">unmasked</name> <init pos:start="13:30" pos:end="13:32">= <expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="39:5">while <condition pos:start="17:11" pos:end="17:14">(<expr pos:start="17:12" pos:end="17:13"><name pos:start="17:12" pos:end="17:13">vq</name></expr>)</condition> <block pos:start="17:16" pos:end="39:5">{<block_content pos:start="19:9" pos:end="37:19">

        <expr_stmt pos:start="19:9" pos:end="19:43"><expr pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:13">index</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:42"><name pos:start="19:17" pos:end="19:38">virtio_get_queue_index</name><argument_list pos:start="19:39" pos:end="19:42">(<argument pos:start="19:40" pos:end="19:41"><expr pos:start="19:40" pos:end="19:41"><name pos:start="19:40" pos:end="19:41">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:47">(<expr pos:start="21:13" pos:end="21:46"><operator pos:start="21:13" pos:end="21:13">!</operator><call pos:start="21:14" pos:end="21:46"><name pos:start="21:14" pos:end="21:33">virtio_queue_get_num</name><argument_list pos:start="21:34" pos:end="21:46">(<argument pos:start="21:35" pos:end="21:38"><expr pos:start="21:35" pos:end="21:38"><name pos:start="21:35" pos:end="21:38">vdev</name></expr></argument>, <argument pos:start="21:41" pos:end="21:45"><expr pos:start="21:41" pos:end="21:45"><name pos:start="21:41" pos:end="21:45">index</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:49" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:18">

            <break pos:start="23:13" pos:end="23:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:69"><expr pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:68"><name pos:start="27:15" pos:end="27:41">virtio_pci_vq_vector_unmask</name><argument_list pos:start="27:42" pos:end="27:68">(<argument pos:start="27:43" pos:end="27:47"><expr pos:start="27:43" pos:end="27:47"><name pos:start="27:43" pos:end="27:47">proxy</name></expr></argument>, <argument pos:start="27:50" pos:end="27:54"><expr pos:start="27:50" pos:end="27:54"><name pos:start="27:50" pos:end="27:54">index</name></expr></argument>, <argument pos:start="27:57" pos:end="27:62"><expr pos:start="27:57" pos:end="27:62"><name pos:start="27:57" pos:end="27:62">vector</name></expr></argument>, <argument pos:start="27:65" pos:end="27:67"><expr pos:start="27:65" pos:end="27:67"><name pos:start="27:65" pos:end="27:67">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>)</condition> <block pos:start="29:22" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:22">

            <goto pos:start="31:13" pos:end="31:22">goto <name pos:start="31:18" pos:end="31:21">undo</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:10">vq</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <call pos:start="35:14" pos:end="35:41"><name pos:start="35:14" pos:end="35:37">virtio_vector_next_queue</name><argument_list pos:start="35:38" pos:end="35:41">(<argument pos:start="35:39" pos:end="35:40"><expr pos:start="35:39" pos:end="35:40"><name pos:start="35:39" pos:end="35:40">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><operator pos:start="37:9" pos:end="37:10">++</operator><name pos:start="37:11" pos:end="37:18">unmasked</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>



<label pos:start="47:1" pos:end="47:5"><name pos:start="47:1" pos:end="47:4">undo</name>:</label>

    <expr_stmt pos:start="49:5" pos:end="49:49"><expr pos:start="49:5" pos:end="49:48"><name pos:start="49:5" pos:end="49:6">vq</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <call pos:start="49:10" pos:end="49:48"><name pos:start="49:10" pos:end="49:34">virtio_vector_first_queue</name><argument_list pos:start="49:35" pos:end="49:48">(<argument pos:start="49:36" pos:end="49:39"><expr pos:start="49:36" pos:end="49:39"><name pos:start="49:36" pos:end="49:39">vdev</name></expr></argument>, <argument pos:start="49:42" pos:end="49:47"><expr pos:start="49:42" pos:end="49:47"><name pos:start="49:42" pos:end="49:47">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="51:5" pos:end="59:5">while <condition pos:start="51:11" pos:end="51:33">(<expr pos:start="51:12" pos:end="51:32"><name pos:start="51:12" pos:end="51:13">vq</name> <operator pos:start="51:15" pos:end="51:16">&amp;&amp;</operator> <operator pos:start="51:18" pos:end="51:19">--</operator><name pos:start="51:20" pos:end="51:27">unmasked</name> <operator pos:start="51:29" pos:end="51:30">&gt;=</operator> <literal type="number" pos:start="51:32" pos:end="51:32">0</literal></expr>)</condition> <block pos:start="51:35" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:42">

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:13">index</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:42"><name pos:start="53:17" pos:end="53:38">virtio_get_queue_index</name><argument_list pos:start="53:39" pos:end="53:42">(<argument pos:start="53:40" pos:end="53:41"><expr pos:start="53:40" pos:end="53:41"><name pos:start="53:40" pos:end="53:41">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:56"><expr pos:start="55:9" pos:end="55:55"><call pos:start="55:9" pos:end="55:55"><name pos:start="55:9" pos:end="55:33">virtio_pci_vq_vector_mask</name><argument_list pos:start="55:34" pos:end="55:55">(<argument pos:start="55:35" pos:end="55:39"><expr pos:start="55:35" pos:end="55:39"><name pos:start="55:35" pos:end="55:39">proxy</name></expr></argument>, <argument pos:start="55:42" pos:end="55:46"><expr pos:start="55:42" pos:end="55:46"><name pos:start="55:42" pos:end="55:46">index</name></expr></argument>, <argument pos:start="55:49" pos:end="55:54"><expr pos:start="55:49" pos:end="55:54"><name pos:start="55:49" pos:end="55:54">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:42"><expr pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:10">vq</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="57:41"><name pos:start="57:14" pos:end="57:37">virtio_vector_next_queue</name><argument_list pos:start="57:38" pos:end="57:41">(<argument pos:start="57:39" pos:end="57:40"><expr pos:start="57:39" pos:end="57:40"><name pos:start="57:39" pos:end="57:40">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="61:5" pos:end="61:15">return <expr pos:start="61:12" pos:end="61:14"><name pos:start="61:12" pos:end="61:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
