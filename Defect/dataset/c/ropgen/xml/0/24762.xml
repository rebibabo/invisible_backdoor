<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24762.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">decode_cabac_mb_dqp</name><parameter_list pos:start="1:31" pos:end="1:47">( <parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:43">H264Context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">h</name></decl></parameter>)</parameter_list> <block pos:start="1:49" pos:end="57:1">{<block_content pos:start="3:5" pos:end="55:28">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">mbn_xy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>   <name pos:start="7:11" pos:end="7:13">ctx</name> <init pos:start="7:15" pos:end="7:17">= <expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type>   <name pos:start="9:11" pos:end="9:13">val</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:60"><if pos:start="13:5" pos:end="15:52">if<condition pos:start="13:7" pos:end="13:21">( <expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:15">mb_x</name></name> <operator pos:start="13:17" pos:end="13:17">&gt;</operator> <literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr> )</condition><block type="pseudo" pos:start="15:9" pos:end="15:52"><block_content pos:start="15:9" pos:end="15:52">

        <expr_stmt pos:start="15:9" pos:end="15:52"><expr pos:start="15:9" pos:end="15:51"><name pos:start="15:9" pos:end="15:14">mbn_xy</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:24"><name pos:start="15:18" pos:end="15:18">s</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:24">mb_x</name></name> <operator pos:start="15:26" pos:end="15:26">+</operator> <name pos:start="15:28" pos:end="15:34"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:34">mb_y</name></name><operator pos:start="15:35" pos:end="15:35">*</operator><name pos:start="15:36" pos:end="15:47"><name pos:start="15:36" pos:end="15:36">s</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:47">mb_stride</name></name> <operator pos:start="15:49" pos:end="15:49">-</operator> <literal type="number" pos:start="15:51" pos:end="15:51">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="17:5" pos:end="19:60">else<block type="pseudo" pos:start="19:9" pos:end="19:60"><block_content pos:start="19:9" pos:end="19:60">

        <expr_stmt pos:start="19:9" pos:end="19:60"><expr pos:start="19:9" pos:end="19:59"><name pos:start="19:9" pos:end="19:14">mbn_xy</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:28"><name pos:start="19:18" pos:end="19:18">s</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:28">mb_width</name></name> <operator pos:start="19:30" pos:end="19:30">-</operator> <literal type="number" pos:start="19:32" pos:end="19:34">1</literal> <operator pos:start="19:34" pos:end="19:34">+</operator> <operator pos:start="19:36" pos:end="19:36">(</operator><name pos:start="19:37" pos:end="19:43"><name pos:start="19:37" pos:end="19:37">s</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:43">mb_y</name></name><operator pos:start="19:44" pos:end="19:44">-</operator><literal type="number" pos:start="19:45" pos:end="19:45">1</literal><operator pos:start="19:46" pos:end="19:46">)</operator><operator pos:start="19:47" pos:end="19:47">*</operator><name pos:start="19:48" pos:end="19:59"><name pos:start="19:48" pos:end="19:48">s</name><operator pos:start="19:49" pos:end="19:50">-&gt;</operator><name pos:start="19:51" pos:end="19:59">mb_stride</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="23:5" pos:end="25:14"><if pos:start="23:5" pos:end="25:14">if<condition pos:start="23:7" pos:end="23:34">( <expr pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:9">h</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:27">last_qscale_diff</name></name> <operator pos:start="23:29" pos:end="23:30">!=</operator> <literal type="number" pos:start="23:32" pos:end="23:32">0</literal></expr> )</condition><block type="pseudo" pos:start="25:9" pos:end="25:14"><block_content pos:start="25:9" pos:end="25:14">

        <expr_stmt pos:start="25:9" pos:end="25:14"><expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:11">ctx</name><operator pos:start="25:12" pos:end="25:13">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <while pos:start="29:5" pos:end="45:5">while<condition pos:start="29:10" pos:end="29:62">( <expr pos:start="29:12" pos:end="29:60"><call pos:start="29:12" pos:end="29:60"><name pos:start="29:12" pos:end="29:20">get_cabac</name><argument_list pos:start="29:21" pos:end="29:60">( <argument pos:start="29:23" pos:end="29:31"><expr pos:start="29:23" pos:end="29:31"><operator pos:start="29:23" pos:end="29:23">&amp;</operator><name pos:start="29:24" pos:end="29:31"><name pos:start="29:24" pos:end="29:24">h</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:31">cabac</name></name></expr></argument>, <argument pos:start="29:34" pos:end="29:58"><expr pos:start="29:34" pos:end="29:58"><operator pos:start="29:34" pos:end="29:34">&amp;</operator><name pos:start="29:35" pos:end="29:58"><name pos:start="29:35" pos:end="29:35">h</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:48">cabac_state</name><index pos:start="29:49" pos:end="29:58">[<expr pos:start="29:50" pos:end="29:57"><literal type="number" pos:start="29:50" pos:end="29:53">60</literal> <operator pos:start="29:53" pos:end="29:53">+</operator> <name pos:start="29:55" pos:end="29:57">ctx</name></expr>]</index></name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="29:64" pos:end="45:5">{<block_content pos:start="31:9" pos:end="43:27">

        <if_stmt pos:start="31:9" pos:end="37:20"><if pos:start="31:9" pos:end="33:20">if<condition pos:start="31:11" pos:end="31:21">( <expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ctx</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">2</literal></expr> )</condition><block type="pseudo" pos:start="33:13" pos:end="33:20"><block_content pos:start="33:13" pos:end="33:20">

            <expr_stmt pos:start="33:13" pos:end="33:20"><expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:15">ctx</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <literal type="number" pos:start="33:19" pos:end="33:19">2</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="35:9" pos:end="37:20">else<block type="pseudo" pos:start="37:13" pos:end="37:20"><block_content pos:start="37:13" pos:end="37:20">

            <expr_stmt pos:start="37:13" pos:end="37:20"><expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">ctx</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:14"><expr pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:11">val</name><operator pos:start="39:12" pos:end="39:13">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:27"><if pos:start="41:9" pos:end="43:27">if<condition pos:start="41:11" pos:end="41:21">(<expr pos:start="41:12" pos:end="41:20"><name pos:start="41:12" pos:end="41:14">val</name> <operator pos:start="41:16" pos:end="41:16">&gt;</operator> <literal type="number" pos:start="41:18" pos:end="41:20">102</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:27"><block_content pos:start="43:13" pos:end="43:27"> <comment type="line" pos:start="41:23" pos:end="41:45">//prevent infinite loop</comment>

            <return pos:start="43:13" pos:end="43:27">return <expr pos:start="43:20" pos:end="43:26"><name pos:start="43:20" pos:end="43:26">INT_MIN</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="49:5" pos:end="55:28"><if pos:start="49:5" pos:end="51:27">if<condition pos:start="49:7" pos:end="49:18">( <expr pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:11">val</name><operator pos:start="49:12" pos:end="49:12">&amp;</operator><literal type="number" pos:start="49:13" pos:end="49:16">0x01</literal></expr> )</condition><block type="pseudo" pos:start="51:9" pos:end="51:27"><block_content pos:start="51:9" pos:end="51:27">

        <return pos:start="51:9" pos:end="51:27">return <expr pos:start="51:16" pos:end="51:26"><operator pos:start="51:16" pos:end="51:16">(</operator><name pos:start="51:17" pos:end="51:19">val</name> <operator pos:start="51:21" pos:end="51:21">+</operator> <literal type="number" pos:start="51:23" pos:end="51:23">1</literal><operator pos:start="51:24" pos:end="51:24">)</operator><operator pos:start="51:25" pos:end="51:25">/</operator><literal type="number" pos:start="51:26" pos:end="51:26">2</literal></expr>;</return></block_content></block></if>

    <else pos:start="53:5" pos:end="55:28">else<block type="pseudo" pos:start="55:9" pos:end="55:28"><block_content pos:start="55:9" pos:end="55:28">

        <return pos:start="55:9" pos:end="55:28">return <expr pos:start="55:16" pos:end="55:27"><operator pos:start="55:16" pos:end="55:16">-</operator><operator pos:start="55:17" pos:end="55:17">(</operator><name pos:start="55:18" pos:end="55:20">val</name> <operator pos:start="55:22" pos:end="55:22">+</operator> <literal type="number" pos:start="55:24" pos:end="55:24">1</literal><operator pos:start="55:25" pos:end="55:25">)</operator><operator pos:start="55:26" pos:end="55:26">/</operator><literal type="number" pos:start="55:27" pos:end="55:27">2</literal></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
