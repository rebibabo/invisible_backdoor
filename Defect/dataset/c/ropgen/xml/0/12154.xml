<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12154.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">img_read_packet</name><parameter_list pos:start="1:27" pos:end="1:62">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">s1</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VideoData</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:32">= <expr pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:21">s1</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:23"><name pos:start="7:10" pos:end="7:17">filename</name><index pos:start="7:18" pos:end="7:23">[<expr pos:start="7:19" pos:end="7:22"><literal type="number" pos:start="7:19" pos:end="7:22">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">ByteIOContext</name></type> <name pos:start="11:19" pos:end="11:20">f1</name></decl>, <decl pos:start="11:23" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:17"><modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:24">f</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="37:5"><if pos:start="15:5" pos:end="29:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:19"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:19">is_pipe</name></name></expr>)</condition> <block pos:start="15:22" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:24">

        <if_stmt pos:start="17:9" pos:end="21:24"><if pos:start="17:9" pos:end="21:24">if <condition pos:start="17:12" pos:end="19:59">(<expr pos:start="17:13" pos:end="19:58"><call pos:start="17:13" pos:end="19:54"><name pos:start="17:13" pos:end="17:30">get_frame_filename</name><argument_list pos:start="17:31" pos:end="19:54">(<argument pos:start="17:32" pos:end="17:39"><expr pos:start="17:32" pos:end="17:39"><name pos:start="17:32" pos:end="17:39">filename</name></expr></argument>, <argument pos:start="17:42" pos:end="17:57"><expr pos:start="17:42" pos:end="17:57"><sizeof pos:start="17:42" pos:end="17:57">sizeof<argument_list pos:start="17:48" pos:end="17:57">(<argument pos:start="17:49" pos:end="17:56"><expr pos:start="17:49" pos:end="17:56"><name pos:start="17:49" pos:end="17:56">filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                               <argument pos:start="19:32" pos:end="19:38"><expr pos:start="19:32" pos:end="19:38"><name pos:start="19:32" pos:end="19:38"><name pos:start="19:32" pos:end="19:32">s</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:38">path</name></name></expr></argument>, <argument pos:start="19:41" pos:end="19:53"><expr pos:start="19:41" pos:end="19:53"><name pos:start="19:41" pos:end="19:53"><name pos:start="19:41" pos:end="19:41">s</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:53">img_number</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:56" pos:end="19:56">&lt;</operator> <literal type="number" pos:start="19:58" pos:end="19:58">0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:24"><block_content pos:start="21:13" pos:end="21:24">

            <return pos:start="21:13" pos:end="21:24">return <expr pos:start="21:20" pos:end="21:23"><operator pos:start="21:20" pos:end="21:20">-</operator><name pos:start="21:21" pos:end="21:23">EIO</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:9">f</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <operator pos:start="23:13" pos:end="23:13">&amp;</operator><name pos:start="23:14" pos:end="23:15">f1</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:24"><if pos:start="25:9" pos:end="27:24">if <condition pos:start="25:12" pos:end="25:51">(<expr pos:start="25:13" pos:end="25:50"><call pos:start="25:13" pos:end="25:46"><name pos:start="25:13" pos:end="25:21">url_fopen</name><argument_list pos:start="25:22" pos:end="25:46">(<argument pos:start="25:23" pos:end="25:23"><expr pos:start="25:23" pos:end="25:23"><name pos:start="25:23" pos:end="25:23">f</name></expr></argument>, <argument pos:start="25:26" pos:end="25:33"><expr pos:start="25:26" pos:end="25:33"><name pos:start="25:26" pos:end="25:33">filename</name></expr></argument>, <argument pos:start="25:36" pos:end="25:45"><expr pos:start="25:36" pos:end="25:45"><name pos:start="25:36" pos:end="25:45">URL_RDONLY</name></expr></argument>)</argument_list></call> <operator pos:start="25:48" pos:end="25:48">&lt;</operator> <literal type="number" pos:start="25:50" pos:end="25:50">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:24"><block_content pos:start="27:13" pos:end="27:24">

            <return pos:start="27:13" pos:end="27:24">return <expr pos:start="27:20" pos:end="27:23"><operator pos:start="27:20" pos:end="27:20">-</operator><name pos:start="27:21" pos:end="27:23">EIO</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="37:5">else <block pos:start="29:12" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:24">

        <expr_stmt pos:start="31:9" pos:end="31:20"><expr pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:9">f</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <operator pos:start="31:13" pos:end="31:13">&amp;</operator><name pos:start="31:14" pos:end="31:19"><name pos:start="31:14" pos:end="31:15">s1</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:19">pb</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:24"><if pos:start="33:9" pos:end="35:24">if <condition pos:start="33:12" pos:end="33:24">(<expr pos:start="33:13" pos:end="33:23"><call pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:20">url_feof</name><argument_list pos:start="33:21" pos:end="33:23">(<argument pos:start="33:22" pos:end="33:22"><expr pos:start="33:22" pos:end="33:22"><name pos:start="33:22" pos:end="33:22">f</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:24"><block_content pos:start="35:13" pos:end="35:24">

            <return pos:start="35:13" pos:end="35:24">return <expr pos:start="35:20" pos:end="35:23"><operator pos:start="35:20" pos:end="35:20">-</operator><name pos:start="35:21" pos:end="35:23">EIO</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><call pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:17">av_new_packet</name><argument_list pos:start="41:18" pos:end="41:35">(<argument pos:start="41:19" pos:end="41:21"><expr pos:start="41:19" pos:end="41:21"><name pos:start="41:19" pos:end="41:21">pkt</name></expr></argument>, <argument pos:start="41:24" pos:end="41:34"><expr pos:start="41:24" pos:end="41:34"><name pos:start="41:24" pos:end="41:34"><name pos:start="41:24" pos:end="41:24">s</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:34">img_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:26"><expr pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:7">pkt</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:21">stream_index</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <literal type="number" pos:start="43:25" pos:end="43:25">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:10"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:10">ptr</name></name> <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:22"><name pos:start="47:14" pos:end="47:16">pkt</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:22">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:74"><expr pos:start="49:5" pos:end="49:73"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:73"><name pos:start="49:11" pos:end="49:23">av_read_image</name><argument_list pos:start="49:24" pos:end="49:73">(<argument pos:start="49:25" pos:end="49:25"><expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">f</name></expr></argument>, <argument pos:start="49:28" pos:end="49:35"><expr pos:start="49:28" pos:end="49:35"><name pos:start="49:28" pos:end="49:35">filename</name></expr></argument>, <argument pos:start="49:38" pos:end="49:47"><expr pos:start="49:38" pos:end="49:47"><name pos:start="49:38" pos:end="49:47"><name pos:start="49:38" pos:end="49:38">s</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:47">img_fmt</name></name></expr></argument>, <argument pos:start="49:50" pos:end="49:69"><expr pos:start="49:50" pos:end="49:69"><name pos:start="49:50" pos:end="49:69">read_packet_alloc_cb</name></expr></argument>, <argument pos:start="49:72" pos:end="49:72"><expr pos:start="49:72" pos:end="49:72"><name pos:start="49:72" pos:end="49:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:20">(<expr pos:start="51:9" pos:end="51:19"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:19"><name pos:start="51:10" pos:end="51:10">s</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:19">is_pipe</name></name></expr>)</condition> <block pos:start="51:22" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:22">

        <expr_stmt pos:start="53:9" pos:end="53:22"><expr pos:start="53:9" pos:end="53:21"><call pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:18">url_fclose</name><argument_list pos:start="53:19" pos:end="53:21">(<argument pos:start="53:20" pos:end="53:20"><expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="73:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">&lt;</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>)</condition> <block pos:start="59:18" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:20">

        <expr_stmt pos:start="61:9" pos:end="61:28"><expr pos:start="61:9" pos:end="61:27"><call pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:22">av_free_packet</name><argument_list pos:start="61:23" pos:end="61:27">(<argument pos:start="61:24" pos:end="61:26"><expr pos:start="61:24" pos:end="61:26"><name pos:start="61:24" pos:end="61:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:20">return <expr pos:start="63:16" pos:end="63:19"><operator pos:start="63:16" pos:end="63:16">-</operator><name pos:start="63:17" pos:end="63:19">EIO</name></expr>;</return> <comment type="block" pos:start="63:22" pos:end="63:37">/* signal EOF */</comment>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="73:5">else <block pos:start="65:12" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:17">

        <expr_stmt pos:start="67:9" pos:end="67:155"><expr pos:start="67:9" pos:end="67:154"><name pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:11">pkt</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:16">pts</name></name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:140"><name pos:start="67:20" pos:end="67:29">av_rescale</name><argument_list pos:start="67:30" pos:end="67:140">(<argument pos:start="67:31" pos:end="67:92"><expr pos:start="67:31" pos:end="67:92"><operator pos:start="67:31" pos:end="67:31">(</operator><name pos:start="67:32" pos:end="67:38">int64_t</name><operator pos:start="67:39" pos:end="67:39">)</operator><name pos:start="67:40" pos:end="67:52"><name pos:start="67:40" pos:end="67:40">s</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:52">img_number</name></name> <operator pos:start="67:54" pos:end="67:54">*</operator> <name pos:start="67:56" pos:end="67:69"><name pos:start="67:56" pos:end="67:57">s1</name><operator pos:start="67:58" pos:end="67:59">-&gt;</operator><name pos:start="67:60" pos:end="67:66">streams</name><index pos:start="67:67" pos:end="67:69">[<expr pos:start="67:68" pos:end="67:68"><literal type="number" pos:start="67:68" pos:end="67:68">0</literal></expr>]</index></name><operator pos:start="67:70" pos:end="67:71">-&gt;</operator><name pos:start="67:72" pos:end="67:92"><name pos:start="67:72" pos:end="67:76">codec</name><operator pos:start="67:77" pos:end="67:77">.</operator><name pos:start="67:78" pos:end="67:92">frame_rate_base</name></name></expr></argument>, <argument pos:start="67:95" pos:end="67:105"><expr pos:start="67:95" pos:end="67:105"><name pos:start="67:95" pos:end="67:105"><name pos:start="67:95" pos:end="67:96">s1</name><operator pos:start="67:97" pos:end="67:98">-&gt;</operator><name pos:start="67:99" pos:end="67:105">pts_den</name></name></expr></argument>, <argument pos:start="67:108" pos:end="67:139"><expr pos:start="67:108" pos:end="67:139"><name pos:start="67:108" pos:end="67:121"><name pos:start="67:108" pos:end="67:109">s1</name><operator pos:start="67:110" pos:end="67:111">-&gt;</operator><name pos:start="67:112" pos:end="67:118">streams</name><index pos:start="67:119" pos:end="67:121">[<expr pos:start="67:120" pos:end="67:120"><literal type="number" pos:start="67:120" pos:end="67:120">0</literal></expr>]</index></name><operator pos:start="67:122" pos:end="67:123">-&gt;</operator><name pos:start="67:124" pos:end="67:139"><name pos:start="67:124" pos:end="67:128">codec</name><operator pos:start="67:129" pos:end="67:129">.</operator><name pos:start="67:130" pos:end="67:139">frame_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="67:142" pos:end="67:142">/</operator> <name pos:start="67:144" pos:end="67:154"><name pos:start="67:144" pos:end="67:145">s1</name><operator pos:start="67:146" pos:end="67:147">-&gt;</operator><name pos:start="67:148" pos:end="67:154">pts_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:21">img_number</name></name><operator pos:start="69:22" pos:end="69:23">++</operator></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:17">return <expr pos:start="71:16" pos:end="71:16"><literal type="number" pos:start="71:16" pos:end="71:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
