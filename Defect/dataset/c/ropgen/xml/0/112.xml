<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/112.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">kvm_arch_debug</name><parameter_list pos:start="1:19" pos:end="1:57">(<parameter pos:start="1:20" pos:end="1:56"><decl pos:start="1:20" pos:end="1:56"><type pos:start="1:20" pos:end="1:56"><name pos:start="1:20" pos:end="1:45"><name pos:start="1:20" pos:end="1:25">struct</name> <name pos:start="1:27" pos:end="1:45">kvm_debug_exit_arch</name></name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:56">arch_info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:18">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">handle</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="63:19"><if pos:start="11:5" pos:end="61:5">if <condition pos:start="11:8" pos:end="11:34">(<expr pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:17">arch_info</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:28">exception</name></name> <operator pos:start="11:30" pos:end="11:31">==</operator> <literal type="number" pos:start="11:33" pos:end="11:33">1</literal></expr>)</condition> <block pos:start="11:36" pos:end="61:5">{<block_content pos:start="13:9" pos:end="59:9">

        <if_stmt pos:start="13:9" pos:end="59:9"><if pos:start="13:9" pos:end="19:9">if <condition pos:start="13:12" pos:end="13:39">(<expr pos:start="13:13" pos:end="13:38"><name pos:start="13:13" pos:end="13:26"><name pos:start="13:13" pos:end="13:21">arch_info</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:26">dr6</name></name> <operator pos:start="13:28" pos:end="13:28">&amp;</operator> <operator pos:start="13:30" pos:end="13:30">(</operator><literal type="number" pos:start="13:31" pos:end="13:31">1</literal> <operator pos:start="13:33" pos:end="13:34">&lt;&lt;</operator> <literal type="number" pos:start="13:36" pos:end="13:37">14</literal><operator pos:start="13:38" pos:end="13:38">)</operator></expr>)</condition> <block pos:start="13:41" pos:end="19:9">{<block_content pos:start="15:13" pos:end="17:27">

            <if_stmt pos:start="15:13" pos:end="17:27"><if pos:start="15:13" pos:end="17:27">if <condition pos:start="15:16" pos:end="15:51">(<expr pos:start="15:17" pos:end="15:50"><name pos:start="15:17" pos:end="15:50"><name pos:start="15:17" pos:end="15:30">cpu_single_env</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:50">singlestep_enabled</name></name></expr>)</condition><block type="pseudo" pos:start="17:17" pos:end="17:27"><block_content pos:start="17:17" pos:end="17:27">

                <expr_stmt pos:start="17:17" pos:end="17:27"><expr pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:22">handle</name> <operator pos:start="17:24" pos:end="17:24">=</operator> <literal type="number" pos:start="17:26" pos:end="17:26">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="19:11" pos:end="59:9">else <block pos:start="19:16" pos:end="59:9">{<block_content pos:start="21:13" pos:end="57:21">

            <for pos:start="21:13" pos:end="57:21">for <control pos:start="21:17" pos:end="21:35">(<init pos:start="21:18" pos:end="21:23"><expr pos:start="21:18" pos:end="21:22"><name pos:start="21:18" pos:end="21:18">n</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr>;</init> <condition pos:start="21:25" pos:end="21:30"><expr pos:start="21:25" pos:end="21:29"><name pos:start="21:25" pos:end="21:25">n</name> <operator pos:start="21:27" pos:end="21:27">&lt;</operator> <literal type="number" pos:start="21:29" pos:end="21:29">4</literal></expr>;</condition> <incr pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:32">n</name><operator pos:start="21:33" pos:end="21:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:17" pos:end="57:21"><block_content pos:start="23:17" pos:end="57:21">

                <if_stmt pos:start="23:17" pos:end="57:21"><if pos:start="23:17" pos:end="57:21">if <condition pos:start="23:20" pos:end="23:46">(<expr pos:start="23:21" pos:end="23:45"><name pos:start="23:21" pos:end="23:34"><name pos:start="23:21" pos:end="23:29">arch_info</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:34">dr6</name></name> <operator pos:start="23:36" pos:end="23:36">&amp;</operator> <operator pos:start="23:38" pos:end="23:38">(</operator><literal type="number" pos:start="23:39" pos:end="23:39">1</literal> <operator pos:start="23:41" pos:end="23:42">&lt;&lt;</operator> <name pos:start="23:44" pos:end="23:44">n</name><operator pos:start="23:45" pos:end="23:45">)</operator></expr>)</condition><block type="pseudo" pos:start="25:21" pos:end="57:21"><block_content pos:start="25:21" pos:end="57:21">

                    <switch pos:start="25:21" pos:end="57:21">switch <condition pos:start="25:28" pos:end="25:65">(<expr pos:start="25:29" pos:end="25:64"><operator pos:start="25:29" pos:end="25:29">(</operator><name pos:start="25:30" pos:end="25:43"><name pos:start="25:30" pos:end="25:38">arch_info</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:43">dr7</name></name> <operator pos:start="25:45" pos:end="25:46">&gt;&gt;</operator> <operator pos:start="25:48" pos:end="25:48">(</operator><literal type="number" pos:start="25:49" pos:end="25:52">16</literal> <operator pos:start="25:52" pos:end="25:52">+</operator> <name pos:start="25:54" pos:end="25:54">n</name><operator pos:start="25:55" pos:end="25:55">*</operator><literal type="number" pos:start="25:56" pos:end="25:56">4</literal><operator pos:start="25:57" pos:end="25:57">)</operator><operator pos:start="25:58" pos:end="25:58">)</operator> <operator pos:start="25:60" pos:end="25:60">&amp;</operator> <literal type="number" pos:start="25:62" pos:end="25:64">0x3</literal></expr>)</condition> <block pos:start="25:67" pos:end="57:21">{<block_content pos:start="27:21" pos:end="55:30">

                    <case pos:start="27:21" pos:end="27:29">case <expr pos:start="27:26" pos:end="27:28"><literal type="number" pos:start="27:26" pos:end="27:28">0x0</literal></expr>:</case>

                        <expr_stmt pos:start="29:25" pos:end="29:35"><expr pos:start="29:25" pos:end="29:34"><name pos:start="29:25" pos:end="29:30">handle</name> <operator pos:start="29:32" pos:end="29:32">=</operator> <literal type="number" pos:start="29:34" pos:end="29:34">1</literal></expr>;</expr_stmt>

                        <break pos:start="31:25" pos:end="31:30">break;</break>

                    <case pos:start="33:21" pos:end="33:29">case <expr pos:start="33:26" pos:end="33:28"><literal type="number" pos:start="33:26" pos:end="33:28">0x1</literal></expr>:</case>

                        <expr_stmt pos:start="35:25" pos:end="35:35"><expr pos:start="35:25" pos:end="35:34"><name pos:start="35:25" pos:end="35:30">handle</name> <operator pos:start="35:32" pos:end="35:32">=</operator> <literal type="number" pos:start="35:34" pos:end="35:34">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="37:25" pos:end="37:72"><expr pos:start="37:25" pos:end="37:71"><name pos:start="37:25" pos:end="37:54"><name pos:start="37:25" pos:end="37:38">cpu_single_env</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:54">watchpoint_hit</name></name> <operator pos:start="37:56" pos:end="37:56">=</operator> <operator pos:start="37:58" pos:end="37:58">&amp;</operator><name pos:start="37:59" pos:end="37:71">hw_watchpoint</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="39:25" pos:end="39:68"><expr pos:start="39:25" pos:end="39:67"><name pos:start="39:25" pos:end="39:43"><name pos:start="39:25" pos:end="39:37">hw_watchpoint</name><operator pos:start="39:38" pos:end="39:38">.</operator><name pos:start="39:39" pos:end="39:43">vaddr</name></name> <operator pos:start="39:45" pos:end="39:45">=</operator> <name pos:start="39:47" pos:end="39:62"><name pos:start="39:47" pos:end="39:59">hw_breakpoint</name><index pos:start="39:60" pos:end="39:62">[<expr pos:start="39:61" pos:end="39:61"><name pos:start="39:61" pos:end="39:61">n</name></expr>]</index></name><operator pos:start="39:63" pos:end="39:63">.</operator><name pos:start="39:64" pos:end="39:67">addr</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="41:25" pos:end="41:59"><expr pos:start="41:25" pos:end="41:58"><name pos:start="41:25" pos:end="41:43"><name pos:start="41:25" pos:end="41:37">hw_watchpoint</name><operator pos:start="41:38" pos:end="41:38">.</operator><name pos:start="41:39" pos:end="41:43">flags</name></name> <operator pos:start="41:45" pos:end="41:45">=</operator> <name pos:start="41:47" pos:end="41:58">BP_MEM_WRITE</name></expr>;</expr_stmt>

                        <break pos:start="43:25" pos:end="43:30">break;</break>

                    <case pos:start="45:21" pos:end="45:29">case <expr pos:start="45:26" pos:end="45:28"><literal type="number" pos:start="45:26" pos:end="45:28">0x3</literal></expr>:</case>

                        <expr_stmt pos:start="47:25" pos:end="47:35"><expr pos:start="47:25" pos:end="47:34"><name pos:start="47:25" pos:end="47:30">handle</name> <operator pos:start="47:32" pos:end="47:32">=</operator> <literal type="number" pos:start="47:34" pos:end="47:34">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="49:25" pos:end="49:72"><expr pos:start="49:25" pos:end="49:71"><name pos:start="49:25" pos:end="49:54"><name pos:start="49:25" pos:end="49:38">cpu_single_env</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:54">watchpoint_hit</name></name> <operator pos:start="49:56" pos:end="49:56">=</operator> <operator pos:start="49:58" pos:end="49:58">&amp;</operator><name pos:start="49:59" pos:end="49:71">hw_watchpoint</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="51:25" pos:end="51:68"><expr pos:start="51:25" pos:end="51:67"><name pos:start="51:25" pos:end="51:43"><name pos:start="51:25" pos:end="51:37">hw_watchpoint</name><operator pos:start="51:38" pos:end="51:38">.</operator><name pos:start="51:39" pos:end="51:43">vaddr</name></name> <operator pos:start="51:45" pos:end="51:45">=</operator> <name pos:start="51:47" pos:end="51:62"><name pos:start="51:47" pos:end="51:59">hw_breakpoint</name><index pos:start="51:60" pos:end="51:62">[<expr pos:start="51:61" pos:end="51:61"><name pos:start="51:61" pos:end="51:61">n</name></expr>]</index></name><operator pos:start="51:63" pos:end="51:63">.</operator><name pos:start="51:64" pos:end="51:67">addr</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="53:25" pos:end="53:60"><expr pos:start="53:25" pos:end="53:59"><name pos:start="53:25" pos:end="53:43"><name pos:start="53:25" pos:end="53:37">hw_watchpoint</name><operator pos:start="53:38" pos:end="53:38">.</operator><name pos:start="53:39" pos:end="53:43">flags</name></name> <operator pos:start="53:45" pos:end="53:45">=</operator> <name pos:start="53:47" pos:end="53:59">BP_MEM_ACCESS</name></expr>;</expr_stmt>

                        <break pos:start="55:25" pos:end="55:30">break;</break>

                    </block_content>}</block></switch></block_content></block></if></if_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="61:7" pos:end="63:19">else if <condition pos:start="61:15" pos:end="61:69">(<expr pos:start="61:16" pos:end="61:68"><call pos:start="61:16" pos:end="61:68"><name pos:start="61:16" pos:end="61:37">kvm_find_sw_breakpoint</name><argument_list pos:start="61:38" pos:end="61:68">(<argument pos:start="61:39" pos:end="61:52"><expr pos:start="61:39" pos:end="61:52"><name pos:start="61:39" pos:end="61:52">cpu_single_env</name></expr></argument>, <argument pos:start="61:55" pos:end="61:67"><expr pos:start="61:55" pos:end="61:67"><name pos:start="61:55" pos:end="61:67"><name pos:start="61:55" pos:end="61:63">arch_info</name><operator pos:start="61:64" pos:end="61:65">-&gt;</operator><name pos:start="61:66" pos:end="61:67">pc</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:19"><block_content pos:start="63:9" pos:end="63:19">

        <expr_stmt pos:start="63:9" pos:end="63:19"><expr pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:14">handle</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="79:5"><if pos:start="67:5" pos:end="79:5">if <condition pos:start="67:8" pos:end="67:16">(<expr pos:start="67:9" pos:end="67:15"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:15">handle</name></expr>)</condition> <block pos:start="67:18" pos:end="79:5">{<block_content pos:start="69:9" pos:end="77:43">

        <expr_stmt pos:start="69:9" pos:end="69:46"><expr pos:start="69:9" pos:end="69:45"><call pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:29">cpu_synchronize_state</name><argument_list pos:start="69:30" pos:end="69:45">(<argument pos:start="69:31" pos:end="69:44"><expr pos:start="69:31" pos:end="69:44"><name pos:start="69:31" pos:end="69:44">cpu_single_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:57"><expr pos:start="71:9" pos:end="71:56"><call pos:start="71:9" pos:end="71:56"><name pos:start="71:9" pos:end="71:14">assert</name><argument_list pos:start="71:15" pos:end="71:56">(<argument pos:start="71:16" pos:end="71:55"><expr pos:start="71:16" pos:end="71:55"><name pos:start="71:16" pos:end="71:49"><name pos:start="71:16" pos:end="71:29">cpu_single_env</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:49">exception_injected</name></name> <operator pos:start="71:51" pos:end="71:52">==</operator> <operator pos:start="71:54" pos:end="71:54">-</operator><literal type="number" pos:start="71:55" pos:end="71:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:66"><expr pos:start="75:9" pos:end="75:65"><name pos:start="75:9" pos:end="75:42"><name pos:start="75:9" pos:end="75:22">cpu_single_env</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:42">exception_injected</name></name> <operator pos:start="75:44" pos:end="75:44">=</operator> <name pos:start="75:46" pos:end="75:65"><name pos:start="75:46" pos:end="75:54">arch_info</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:65">exception</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:43"><expr pos:start="77:9" pos:end="77:42"><name pos:start="77:9" pos:end="77:38"><name pos:start="77:9" pos:end="77:22">cpu_single_env</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:38">has_error_code</name></name> <operator pos:start="77:40" pos:end="77:40">=</operator> <literal type="number" pos:start="77:42" pos:end="77:42">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="83:5" pos:end="83:18">return <expr pos:start="83:12" pos:end="83:17"><name pos:start="83:12" pos:end="83:17">handle</name></expr>;</return>

</block_content>}</block></function>
</unit>
