<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25351.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">tcg_out_brcond</name><parameter_list pos:start="1:27" pos:end="3:61">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">TCGContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:50">TCGMemOp</name></type> <name pos:start="1:52" pos:end="1:54">ext</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:65"><decl pos:start="1:57" pos:end="1:65"><type pos:start="1:57" pos:end="1:65"><name pos:start="1:57" pos:end="1:63">TCGCond</name></type> <name pos:start="1:65" pos:end="1:65">c</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:75"><decl pos:start="1:68" pos:end="1:75"><type pos:start="1:68" pos:end="1:75"><name pos:start="1:68" pos:end="1:73">TCGArg</name></type> <name pos:start="1:75" pos:end="1:75">a</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:35"><decl pos:start="3:28" pos:end="3:35"><type pos:start="3:28" pos:end="3:35"><name pos:start="3:28" pos:end="3:33">TCGArg</name></type> <name pos:start="3:35" pos:end="3:35">b</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:41">bool</name></type> <name pos:start="3:43" pos:end="3:49">b_const</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:60"><decl pos:start="3:52" pos:end="3:60"><type pos:start="3:52" pos:end="3:60"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:60">label</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:5">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">TCGLabel</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">l</name> <init pos:start="7:17" pos:end="7:35">= <expr pos:start="7:19" pos:end="7:35"><operator pos:start="7:19" pos:end="7:19">&amp;</operator><name pos:start="7:20" pos:end="7:35"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:28">labels</name><index pos:start="7:29" pos:end="7:35">[<expr pos:start="7:30" pos:end="7:34"><name pos:start="7:30" pos:end="7:34">label</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">intptr_t</name></type> <name pos:start="9:14" pos:end="9:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:17">need_cmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:68">(<expr pos:start="15:9" pos:end="15:67"><name pos:start="15:9" pos:end="15:15">b_const</name> <operator pos:start="15:17" pos:end="15:18">&amp;&amp;</operator> <name pos:start="15:20" pos:end="15:20">b</name> <operator pos:start="15:22" pos:end="15:23">==</operator> <literal type="number" pos:start="15:25" pos:end="15:25">0</literal> <operator pos:start="15:27" pos:end="15:28">&amp;&amp;</operator> <operator pos:start="15:30" pos:end="15:30">(</operator><name pos:start="15:31" pos:end="15:31">c</name> <operator pos:start="15:33" pos:end="15:34">==</operator> <name pos:start="15:36" pos:end="15:46">TCG_COND_EQ</name> <operator pos:start="15:48" pos:end="15:49">||</operator> <name pos:start="15:51" pos:end="15:51">c</name> <operator pos:start="15:53" pos:end="15:54">==</operator> <name pos:start="15:56" pos:end="15:66">TCG_COND_NE</name><operator pos:start="15:67" pos:end="15:67">)</operator></expr>)</condition> <block pos:start="15:70" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:25">

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:16">need_cmp</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:24">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="25:5">else <block pos:start="19:12" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:43">

        <expr_stmt pos:start="21:9" pos:end="21:24"><expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:16">need_cmp</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:23">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><call pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:19">tcg_out_cmp</name><argument_list pos:start="23:20" pos:end="23:42">(<argument pos:start="23:21" pos:end="23:21"><expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">s</name></expr></argument>, <argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">ext</name></expr></argument>, <argument pos:start="23:29" pos:end="23:29"><expr pos:start="23:29" pos:end="23:29"><name pos:start="23:29" pos:end="23:29">a</name></expr></argument>, <argument pos:start="23:32" pos:end="23:32"><expr pos:start="23:32" pos:end="23:32"><name pos:start="23:32" pos:end="23:32">b</name></expr></argument>, <argument pos:start="23:35" pos:end="23:41"><expr pos:start="23:35" pos:end="23:41"><name pos:start="23:35" pos:end="23:41">b_const</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:22">(<expr pos:start="29:9" pos:end="29:21"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:21"><name pos:start="29:10" pos:end="29:10">l</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:21">has_value</name></name></expr>)</condition> <block pos:start="29:24" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:34">

        <expr_stmt pos:start="31:9" pos:end="31:68"><expr pos:start="31:9" pos:end="31:67"><call pos:start="31:9" pos:end="31:67"><name pos:start="31:9" pos:end="31:21">tcg_out_reloc</name><argument_list pos:start="31:22" pos:end="31:67">(<argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">s</name></expr></argument>, <argument pos:start="31:26" pos:end="31:36"><expr pos:start="31:26" pos:end="31:36"><name pos:start="31:26" pos:end="31:36"><name pos:start="31:26" pos:end="31:26">s</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:36">code_ptr</name></name></expr></argument>, <argument pos:start="31:39" pos:end="31:56"><expr pos:start="31:39" pos:end="31:56"><name pos:start="31:39" pos:end="31:56">R_AARCH64_CONDBR19</name></expr></argument>, <argument pos:start="31:59" pos:end="31:63"><expr pos:start="31:59" pos:end="31:63"><name pos:start="31:59" pos:end="31:63">label</name></expr></argument>, <argument pos:start="31:66" pos:end="31:66"><expr pos:start="31:66" pos:end="31:66"><literal type="number" pos:start="31:66" pos:end="31:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:14">offset</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:28"><name pos:start="33:18" pos:end="33:25">tcg_in32</name><argument_list pos:start="33:26" pos:end="33:28">(<argument pos:start="33:27" pos:end="33:27"><expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">s</name></expr></argument>)</argument_list></call> <operator pos:start="33:30" pos:end="33:31">&gt;&gt;</operator> <literal type="number" pos:start="33:33" pos:end="33:33">5</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="41:5">else <block pos:start="35:12" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:52">

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:14">offset</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:31"><name pos:start="37:18" pos:end="37:18">l</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:21">u</name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:31">value_ptr</name></name> <operator pos:start="37:33" pos:end="37:33">-</operator> <name pos:start="37:35" pos:end="37:45"><name pos:start="37:35" pos:end="37:35">s</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:45">code_ptr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><call pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:14">assert</name><argument_list pos:start="39:15" pos:end="39:51">(<argument pos:start="39:16" pos:end="39:50"><expr pos:start="39:16" pos:end="39:50"><name pos:start="39:16" pos:end="39:21">offset</name> <operator pos:start="39:23" pos:end="39:24">==</operator> <call pos:start="39:26" pos:end="39:50"><name pos:start="39:26" pos:end="39:35">sextract64</name><argument_list pos:start="39:36" pos:end="39:50">(<argument pos:start="39:37" pos:end="39:42"><expr pos:start="39:37" pos:end="39:42"><name pos:start="39:37" pos:end="39:42">offset</name></expr></argument>, <argument pos:start="39:45" pos:end="39:45"><expr pos:start="39:45" pos:end="39:45"><literal type="number" pos:start="39:45" pos:end="39:45">0</literal></expr></argument>, <argument pos:start="39:48" pos:end="39:49"><expr pos:start="39:48" pos:end="39:49"><literal type="number" pos:start="39:48" pos:end="39:49">19</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:17">(<expr pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:16">need_cmp</name></expr>)</condition> <block pos:start="45:19" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:46">

        <expr_stmt pos:start="47:9" pos:end="47:46"><expr pos:start="47:9" pos:end="47:45"><call pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:20">tcg_out_insn</name><argument_list pos:start="47:21" pos:end="47:45">(<argument pos:start="47:22" pos:end="47:22"><expr pos:start="47:22" pos:end="47:22"><name pos:start="47:22" pos:end="47:22">s</name></expr></argument>, <argument pos:start="47:25" pos:end="47:28"><expr pos:start="47:25" pos:end="47:28"><literal type="number" pos:start="47:25" pos:end="47:28">3202</literal></expr></argument>, <argument pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:33">B_C</name></expr></argument>, <argument pos:start="47:36" pos:end="47:36"><expr pos:start="47:36" pos:end="47:36"><name pos:start="47:36" pos:end="47:36">c</name></expr></argument>, <argument pos:start="47:39" pos:end="47:44"><expr pos:start="47:39" pos:end="47:44"><name pos:start="47:39" pos:end="47:44">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="53:5">else if <condition pos:start="49:15" pos:end="49:32">(<expr pos:start="49:16" pos:end="49:31"><name pos:start="49:16" pos:end="49:16">c</name> <operator pos:start="49:18" pos:end="49:19">==</operator> <name pos:start="49:21" pos:end="49:31">TCG_COND_EQ</name></expr>)</condition> <block pos:start="49:34" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:51">

        <expr_stmt pos:start="51:9" pos:end="51:51"><expr pos:start="51:9" pos:end="51:50"><call pos:start="51:9" pos:end="51:50"><name pos:start="51:9" pos:end="51:20">tcg_out_insn</name><argument_list pos:start="51:21" pos:end="51:50">(<argument pos:start="51:22" pos:end="51:22"><expr pos:start="51:22" pos:end="51:22"><name pos:start="51:22" pos:end="51:22">s</name></expr></argument>, <argument pos:start="51:25" pos:end="51:28"><expr pos:start="51:25" pos:end="51:28"><literal type="number" pos:start="51:25" pos:end="51:28">3201</literal></expr></argument>, <argument pos:start="51:31" pos:end="51:33"><expr pos:start="51:31" pos:end="51:33"><name pos:start="51:31" pos:end="51:33">CBZ</name></expr></argument>, <argument pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><name pos:start="51:36" pos:end="51:38">ext</name></expr></argument>, <argument pos:start="51:41" pos:end="51:41"><expr pos:start="51:41" pos:end="51:41"><name pos:start="51:41" pos:end="51:41">a</name></expr></argument>, <argument pos:start="51:44" pos:end="51:49"><expr pos:start="51:44" pos:end="51:49"><name pos:start="51:44" pos:end="51:49">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="57:5">else <block pos:start="53:12" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:52">

        <expr_stmt pos:start="55:9" pos:end="55:52"><expr pos:start="55:9" pos:end="55:51"><call pos:start="55:9" pos:end="55:51"><name pos:start="55:9" pos:end="55:20">tcg_out_insn</name><argument_list pos:start="55:21" pos:end="55:51">(<argument pos:start="55:22" pos:end="55:22"><expr pos:start="55:22" pos:end="55:22"><name pos:start="55:22" pos:end="55:22">s</name></expr></argument>, <argument pos:start="55:25" pos:end="55:28"><expr pos:start="55:25" pos:end="55:28"><literal type="number" pos:start="55:25" pos:end="55:28">3201</literal></expr></argument>, <argument pos:start="55:31" pos:end="55:34"><expr pos:start="55:31" pos:end="55:34"><name pos:start="55:31" pos:end="55:34">CBNZ</name></expr></argument>, <argument pos:start="55:37" pos:end="55:39"><expr pos:start="55:37" pos:end="55:39"><name pos:start="55:37" pos:end="55:39">ext</name></expr></argument>, <argument pos:start="55:42" pos:end="55:42"><expr pos:start="55:42" pos:end="55:42"><name pos:start="55:42" pos:end="55:42">a</name></expr></argument>, <argument pos:start="55:45" pos:end="55:50"><expr pos:start="55:45" pos:end="55:50"><name pos:start="55:45" pos:end="55:50">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
