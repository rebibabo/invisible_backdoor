<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12677.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">get_cluster_offset</name><parameter_list pos:start="1:30" pos:end="15:54">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:46">BlockDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">bs</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:48"><decl pos:start="3:31" pos:end="3:48"><type pos:start="3:31" pos:end="3:48"><name pos:start="3:31" pos:end="3:40">VmdkExtent</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:48">extent</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:50"><decl pos:start="5:31" pos:end="5:50"><type pos:start="5:31" pos:end="5:50"><name pos:start="5:31" pos:end="5:42">VmdkMetaData</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:50">m_data</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:45"><decl pos:start="7:31" pos:end="7:45"><type pos:start="7:31" pos:end="7:45"><name pos:start="7:31" pos:end="7:38">uint64_t</name></type> <name pos:start="7:40" pos:end="7:45">offset</name></decl></parameter>,

                              <parameter pos:start="9:31" pos:end="9:43"><decl pos:start="9:31" pos:end="9:43"><type pos:start="9:31" pos:end="9:43"><name pos:start="9:31" pos:end="9:34">bool</name></type> <name pos:start="9:36" pos:end="9:43">allocate</name></decl></parameter>,

                              <parameter pos:start="11:31" pos:end="11:54"><decl pos:start="11:31" pos:end="11:54"><type pos:start="11:31" pos:end="11:54"><name pos:start="11:31" pos:end="11:38">uint64_t</name> <modifier pos:start="11:40" pos:end="11:40">*</modifier></type><name pos:start="11:41" pos:end="11:54">cluster_offset</name></decl></parameter>,

                              <parameter pos:start="13:31" pos:end="13:55"><decl pos:start="13:31" pos:end="13:55"><type pos:start="13:31" pos:end="13:55"><name pos:start="13:31" pos:end="13:38">uint64_t</name></type> <name pos:start="13:40" pos:end="13:55">skip_start_bytes</name></decl></parameter>,

                              <parameter pos:start="15:31" pos:end="15:53"><decl pos:start="15:31" pos:end="15:53"><type pos:start="15:31" pos:end="15:53"><name pos:start="15:31" pos:end="15:38">uint64_t</name></type> <name pos:start="15:40" pos:end="15:53">skip_end_bytes</name></decl></parameter>)</parameter_list>

<block pos:start="17:1" pos:end="203:1">{<block_content pos:start="19:5" pos:end="201:19">

    <decl_stmt pos:start="19:5" pos:end="19:47"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:16">int</name></type> <name pos:start="19:18" pos:end="19:25">l1_index</name></decl>, <decl pos:start="19:28" pos:end="19:36"><type ref="prev" pos:start="19:5" pos:end="19:16"/><name pos:start="19:28" pos:end="19:36">l2_offset</name></decl>, <decl pos:start="19:39" pos:end="19:46"><type ref="prev" pos:start="19:5" pos:end="19:16"/><name pos:start="19:39" pos:end="19:46">l2_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:17">min_index</name></decl>, <decl pos:start="21:20" pos:end="21:20"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:20" pos:end="21:20">i</name></decl>, <decl pos:start="21:23" pos:end="21:23"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:23" pos:end="21:23">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:34"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint32_t</name></type> <name pos:start="23:14" pos:end="23:22">min_count</name></decl>, <decl pos:start="23:25" pos:end="23:33"><type ref="prev" pos:start="23:5" pos:end="23:12"><modifier pos:start="23:25" pos:end="23:25">*</modifier></type><name pos:start="23:26" pos:end="23:33">l2_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:24"><decl pos:start="25:5" pos:end="25:23"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">bool</name></type> <name pos:start="25:10" pos:end="25:15">zeroed</name> <init pos:start="25:17" pos:end="25:23">= <expr pos:start="25:19" pos:end="25:23"><name pos:start="25:19" pos:end="25:23">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:16"><decl pos:start="27:5" pos:end="27:15"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">int64_t</name></type> <name pos:start="27:13" pos:end="27:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:27"><decl pos:start="29:5" pos:end="29:26"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:11">int64_t</name></type> <name pos:start="29:13" pos:end="29:26">cluster_sector</name></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:14">m_data</name></expr>)</condition> <block pos:start="33:17" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:26">

        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:14">m_data</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:21">valid</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:21">(<expr pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:14">extent</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:20">flat</name></name></expr>)</condition> <block pos:start="39:23" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:23">

        <expr_stmt pos:start="41:9" pos:end="41:52"><expr pos:start="41:9" pos:end="41:51"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:23">cluster_offset</name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:51"><name pos:start="41:27" pos:end="41:32">extent</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:51">flat_start_offset</name></name></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:23">return <expr pos:start="43:16" pos:end="43:22"><name pos:start="43:16" pos:end="43:22">VMDK_OK</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:67"><expr pos:start="49:5" pos:end="49:66"><name pos:start="49:5" pos:end="49:10">offset</name> <operator pos:start="49:12" pos:end="49:13">-=</operator> <operator pos:start="49:15" pos:end="49:15">(</operator><name pos:start="49:16" pos:end="49:33"><name pos:start="49:16" pos:end="49:21">extent</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:33">end_sector</name></name> <operator pos:start="49:35" pos:end="49:35">-</operator> <name pos:start="49:37" pos:end="49:51"><name pos:start="49:37" pos:end="49:42">extent</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:51">sectors</name></name><operator pos:start="49:52" pos:end="49:52">)</operator> <operator pos:start="49:54" pos:end="49:54">*</operator> <name pos:start="49:56" pos:end="49:66">SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:56"><expr pos:start="51:5" pos:end="51:55"><name pos:start="51:5" pos:end="51:12">l1_index</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <operator pos:start="51:16" pos:end="51:16">(</operator><name pos:start="51:17" pos:end="51:22">offset</name> <operator pos:start="51:24" pos:end="51:25">&gt;&gt;</operator> <literal type="number" pos:start="51:27" pos:end="51:27">9</literal><operator pos:start="51:28" pos:end="51:28">)</operator> <operator pos:start="51:30" pos:end="51:30">/</operator> <name pos:start="51:32" pos:end="51:55"><name pos:start="51:32" pos:end="51:37">extent</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:55">l1_entry_sectors</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:36">(<expr pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:16">l1_index</name> <operator pos:start="53:18" pos:end="53:19">&gt;=</operator> <name pos:start="53:21" pos:end="53:35"><name pos:start="53:21" pos:end="53:26">extent</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:35">l1_size</name></name></expr>)</condition> <block pos:start="53:38" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:26">

        <return pos:start="55:9" pos:end="55:26">return <expr pos:start="55:16" pos:end="55:25"><name pos:start="55:16" pos:end="55:25">VMDK_ERROR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:43"><expr pos:start="59:5" pos:end="59:42"><name pos:start="59:5" pos:end="59:13">l2_offset</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:42"><name pos:start="59:17" pos:end="59:22">extent</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:32">l1_table</name><index pos:start="59:33" pos:end="59:42">[<expr pos:start="59:34" pos:end="59:41"><name pos:start="59:34" pos:end="59:41">l1_index</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:19">(<expr pos:start="61:9" pos:end="61:18"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:18">l2_offset</name></expr>)</condition> <block pos:start="61:21" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:28">

        <return pos:start="63:9" pos:end="63:28">return <expr pos:start="63:16" pos:end="63:27"><name pos:start="63:16" pos:end="63:27">VMDK_UNALLOC</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="67:5" pos:end="89:5">for <control pos:start="67:9" pos:end="67:39">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:34"><expr pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <name pos:start="67:21" pos:end="67:33">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="67:36" pos:end="67:38"><expr pos:start="67:36" pos:end="67:38"><name pos:start="67:36" pos:end="67:36">i</name><operator pos:start="67:37" pos:end="67:38">++</operator></expr></incr>)</control> <block pos:start="67:41" pos:end="89:5">{<block_content pos:start="69:9" pos:end="87:9">

        <if_stmt pos:start="69:9" pos:end="87:9"><if pos:start="69:9" pos:end="87:9">if <condition pos:start="69:12" pos:end="69:53">(<expr pos:start="69:13" pos:end="69:52"><name pos:start="69:13" pos:end="69:21">l2_offset</name> <operator pos:start="69:23" pos:end="69:24">==</operator> <name pos:start="69:26" pos:end="69:52"><name pos:start="69:26" pos:end="69:31">extent</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:49">l2_cache_offsets</name><index pos:start="69:50" pos:end="69:52">[<expr pos:start="69:51" pos:end="69:51"><name pos:start="69:51" pos:end="69:51">i</name></expr>]</index></name></expr>)</condition> <block pos:start="69:55" pos:end="87:9">{<block_content pos:start="73:13" pos:end="85:23">

            <comment type="block" pos:start="71:13" pos:end="71:41">/* increment the hit count */</comment>

            <if_stmt pos:start="73:13" pos:end="81:13"><if pos:start="73:13" pos:end="81:13">if <condition pos:start="73:16" pos:end="73:59">(<expr pos:start="73:17" pos:end="73:58"><operator pos:start="73:17" pos:end="73:18">++</operator><name pos:start="73:19" pos:end="73:44"><name pos:start="73:19" pos:end="73:24">extent</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:41">l2_cache_counts</name><index pos:start="73:42" pos:end="73:44">[<expr pos:start="73:43" pos:end="73:43"><name pos:start="73:43" pos:end="73:43">i</name></expr>]</index></name> <operator pos:start="73:46" pos:end="73:47">==</operator> <literal type="number" pos:start="73:49" pos:end="73:58">0xffffffff</literal></expr>)</condition> <block pos:start="73:61" pos:end="81:13">{<block_content pos:start="75:17" pos:end="79:17">

                <for pos:start="75:17" pos:end="79:17">for <control pos:start="75:21" pos:end="75:51">(<init pos:start="75:22" pos:end="75:27"><expr pos:start="75:22" pos:end="75:26"><name pos:start="75:22" pos:end="75:22">j</name> <operator pos:start="75:24" pos:end="75:24">=</operator> <literal type="number" pos:start="75:26" pos:end="75:26">0</literal></expr>;</init> <condition pos:start="75:29" pos:end="75:46"><expr pos:start="75:29" pos:end="75:45"><name pos:start="75:29" pos:end="75:29">j</name> <operator pos:start="75:31" pos:end="75:31">&lt;</operator> <name pos:start="75:33" pos:end="75:45">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="75:48" pos:end="75:50"><expr pos:start="75:48" pos:end="75:50"><name pos:start="75:48" pos:end="75:48">j</name><operator pos:start="75:49" pos:end="75:50">++</operator></expr></incr>)</control> <block pos:start="75:53" pos:end="79:17">{<block_content pos:start="77:21" pos:end="77:53">

                    <expr_stmt pos:start="77:21" pos:end="77:53"><expr pos:start="77:21" pos:end="77:52"><name pos:start="77:21" pos:end="77:46"><name pos:start="77:21" pos:end="77:26">extent</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:43">l2_cache_counts</name><index pos:start="77:44" pos:end="77:46">[<expr pos:start="77:45" pos:end="77:45"><name pos:start="77:45" pos:end="77:45">j</name></expr>]</index></name> <operator pos:start="77:48" pos:end="77:50">&gt;&gt;=</operator> <literal type="number" pos:start="77:52" pos:end="77:52">1</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:64"><expr pos:start="83:13" pos:end="83:63"><name pos:start="83:13" pos:end="83:20">l2_table</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:39"><name pos:start="83:24" pos:end="83:29">extent</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:39">l2_cache</name></name> <operator pos:start="83:41" pos:end="83:41">+</operator> <operator pos:start="83:43" pos:end="83:43">(</operator><name pos:start="83:44" pos:end="83:44">i</name> <operator pos:start="83:46" pos:end="83:46">*</operator> <name pos:start="83:48" pos:end="83:62"><name pos:start="83:48" pos:end="83:53">extent</name><operator pos:start="83:54" pos:end="83:55">-&gt;</operator><name pos:start="83:56" pos:end="83:62">l2_size</name></name><operator pos:start="83:63" pos:end="83:63">)</operator></expr>;</expr_stmt>

            <goto pos:start="85:13" pos:end="85:23">goto <name pos:start="85:18" pos:end="85:22">found</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="91:5" pos:end="91:59">/* not found: load a new entry in the least used one */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:18"><expr pos:start="93:5" pos:end="93:17"><name pos:start="93:5" pos:end="93:13">min_index</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <literal type="number" pos:start="93:17" pos:end="93:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:27"><expr pos:start="95:5" pos:end="95:26"><name pos:start="95:5" pos:end="95:13">min_count</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <literal type="number" pos:start="95:17" pos:end="95:26">0xffffffff</literal></expr>;</expr_stmt>

    <for pos:start="97:5" pos:end="107:5">for <control pos:start="97:9" pos:end="97:39">(<init pos:start="97:10" pos:end="97:15"><expr pos:start="97:10" pos:end="97:14"><name pos:start="97:10" pos:end="97:10">i</name> <operator pos:start="97:12" pos:end="97:12">=</operator> <literal type="number" pos:start="97:14" pos:end="97:14">0</literal></expr>;</init> <condition pos:start="97:17" pos:end="97:34"><expr pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:17">i</name> <operator pos:start="97:19" pos:end="97:19">&lt;</operator> <name pos:start="97:21" pos:end="97:33">L2_CACHE_SIZE</name></expr>;</condition> <incr pos:start="97:36" pos:end="97:38"><expr pos:start="97:36" pos:end="97:38"><name pos:start="97:36" pos:end="97:36">i</name><operator pos:start="97:37" pos:end="97:38">++</operator></expr></incr>)</control> <block pos:start="97:41" pos:end="107:5">{<block_content pos:start="99:9" pos:end="105:9">

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:51">(<expr pos:start="99:13" pos:end="99:50"><name pos:start="99:13" pos:end="99:38"><name pos:start="99:13" pos:end="99:18">extent</name><operator pos:start="99:19" pos:end="99:20">-&gt;</operator><name pos:start="99:21" pos:end="99:35">l2_cache_counts</name><index pos:start="99:36" pos:end="99:38">[<expr pos:start="99:37" pos:end="99:37"><name pos:start="99:37" pos:end="99:37">i</name></expr>]</index></name> <operator pos:start="99:40" pos:end="99:40">&lt;</operator> <name pos:start="99:42" pos:end="99:50">min_count</name></expr>)</condition> <block pos:start="99:53" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:26">

            <expr_stmt pos:start="101:13" pos:end="101:51"><expr pos:start="101:13" pos:end="101:50"><name pos:start="101:13" pos:end="101:21">min_count</name> <operator pos:start="101:23" pos:end="101:23">=</operator> <name pos:start="101:25" pos:end="101:50"><name pos:start="101:25" pos:end="101:30">extent</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:47">l2_cache_counts</name><index pos:start="101:48" pos:end="101:50">[<expr pos:start="101:49" pos:end="101:49"><name pos:start="101:49" pos:end="101:49">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:26"><expr pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:21">min_index</name> <operator pos:start="103:23" pos:end="103:23">=</operator> <name pos:start="103:25" pos:end="103:25">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="109:5" pos:end="109:64"><expr pos:start="109:5" pos:end="109:63"><name pos:start="109:5" pos:end="109:12">l2_table</name> <operator pos:start="109:14" pos:end="109:14">=</operator> <name pos:start="109:16" pos:end="109:31"><name pos:start="109:16" pos:end="109:21">extent</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:31">l2_cache</name></name> <operator pos:start="109:33" pos:end="109:33">+</operator> <operator pos:start="109:35" pos:end="109:35">(</operator><name pos:start="109:36" pos:end="109:44">min_index</name> <operator pos:start="109:46" pos:end="109:46">*</operator> <name pos:start="109:48" pos:end="109:62"><name pos:start="109:48" pos:end="109:53">extent</name><operator pos:start="109:54" pos:end="109:55">-&gt;</operator><name pos:start="109:56" pos:end="109:62">l2_size</name></name><operator pos:start="109:63" pos:end="109:63">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="123:5"><if pos:start="111:5" pos:end="123:5">if <condition pos:start="111:8" pos:end="119:52">(<expr pos:start="111:9" pos:end="119:51"><call pos:start="111:9" pos:end="119:13"><name pos:start="111:9" pos:end="111:18">bdrv_pread</name><argument_list pos:start="111:19" pos:end="119:13">(<argument pos:start="111:20" pos:end="111:31"><expr pos:start="111:20" pos:end="111:31"><name pos:start="111:20" pos:end="111:31"><name pos:start="111:20" pos:end="111:25">extent</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:31">file</name></name></expr></argument>,

                <argument pos:start="113:17" pos:end="113:40"><expr pos:start="113:17" pos:end="113:40"><operator pos:start="113:17" pos:end="113:17">(</operator><name pos:start="113:18" pos:end="113:24">int64_t</name><operator pos:start="113:25" pos:end="113:25">)</operator><name pos:start="113:26" pos:end="113:34">l2_offset</name> <operator pos:start="113:36" pos:end="113:36">*</operator> <literal type="number" pos:start="113:38" pos:end="113:40">512</literal></expr></argument>,

                <argument pos:start="115:17" pos:end="115:24"><expr pos:start="115:17" pos:end="115:24"><name pos:start="115:17" pos:end="115:24">l2_table</name></expr></argument>,

                <argument pos:start="117:17" pos:end="117:50"><expr pos:start="117:17" pos:end="117:50"><name pos:start="117:17" pos:end="117:31"><name pos:start="117:17" pos:end="117:22">extent</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:31">l2_size</name></name> <operator pos:start="117:33" pos:end="117:33">*</operator> <sizeof pos:start="117:35" pos:end="117:50">sizeof<argument_list pos:start="117:41" pos:end="117:50">(<argument pos:start="117:42" pos:end="117:49"><expr pos:start="117:42" pos:end="117:49"><name pos:start="117:42" pos:end="117:49">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>

            )</argument_list></call> <operator pos:start="119:15" pos:end="119:16">!=</operator> <name pos:start="119:18" pos:end="119:32"><name pos:start="119:18" pos:end="119:23">extent</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:32">l2_size</name></name> <operator pos:start="119:34" pos:end="119:34">*</operator> <sizeof pos:start="119:36" pos:end="119:51">sizeof<argument_list pos:start="119:42" pos:end="119:51">(<argument pos:start="119:43" pos:end="119:50"><expr pos:start="119:43" pos:end="119:50"><name pos:start="119:43" pos:end="119:50">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="119:54" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:26">

        <return pos:start="121:9" pos:end="121:26">return <expr pos:start="121:16" pos:end="121:25"><name pos:start="121:16" pos:end="121:25">VMDK_ERROR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:52"><expr pos:start="127:5" pos:end="127:51"><name pos:start="127:5" pos:end="127:39"><name pos:start="127:5" pos:end="127:10">extent</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:28">l2_cache_offsets</name><index pos:start="127:29" pos:end="127:39">[<expr pos:start="127:30" pos:end="127:38"><name pos:start="127:30" pos:end="127:38">min_index</name></expr>]</index></name> <operator pos:start="127:41" pos:end="127:41">=</operator> <name pos:start="127:43" pos:end="127:51">l2_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:43"><expr pos:start="129:5" pos:end="129:42"><name pos:start="129:5" pos:end="129:38"><name pos:start="129:5" pos:end="129:10">extent</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:27">l2_cache_counts</name><index pos:start="129:28" pos:end="129:38">[<expr pos:start="129:29" pos:end="129:37"><name pos:start="129:29" pos:end="129:37">min_index</name></expr>]</index></name> <operator pos:start="129:40" pos:end="129:40">=</operator> <literal type="number" pos:start="129:42" pos:end="129:42">1</literal></expr>;</expr_stmt>

 <label pos:start="131:2" pos:end="131:7"><name pos:start="131:2" pos:end="131:6">found</name>:</label>

    <expr_stmt pos:start="133:5" pos:end="133:75"><expr pos:start="133:5" pos:end="133:74"><name pos:start="133:5" pos:end="133:12">l2_index</name> <operator pos:start="133:14" pos:end="133:14">=</operator> <operator pos:start="133:16" pos:end="133:16">(</operator><operator pos:start="133:17" pos:end="133:17">(</operator><name pos:start="133:18" pos:end="133:23">offset</name> <operator pos:start="133:25" pos:end="133:26">&gt;&gt;</operator> <literal type="number" pos:start="133:28" pos:end="133:28">9</literal><operator pos:start="133:29" pos:end="133:29">)</operator> <operator pos:start="133:31" pos:end="133:31">/</operator> <name pos:start="133:33" pos:end="133:55"><name pos:start="133:33" pos:end="133:38">extent</name><operator pos:start="133:39" pos:end="133:40">-&gt;</operator><name pos:start="133:41" pos:end="133:55">cluster_sectors</name></name><operator pos:start="133:56" pos:end="133:56">)</operator> <operator pos:start="133:58" pos:end="133:58">%</operator> <name pos:start="133:60" pos:end="133:74"><name pos:start="133:60" pos:end="133:65">extent</name><operator pos:start="133:66" pos:end="133:67">-&gt;</operator><name pos:start="133:68" pos:end="133:74">l2_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:53"><expr pos:start="135:5" pos:end="135:52"><name pos:start="135:5" pos:end="135:18">cluster_sector</name> <operator pos:start="135:20" pos:end="135:20">=</operator> <call pos:start="135:22" pos:end="135:52"><name pos:start="135:22" pos:end="135:32">le32_to_cpu</name><argument_list pos:start="135:33" pos:end="135:52">(<argument pos:start="135:34" pos:end="135:51"><expr pos:start="135:34" pos:end="135:51"><name pos:start="135:34" pos:end="135:51"><name pos:start="135:34" pos:end="135:41">l2_table</name><index pos:start="135:42" pos:end="135:51">[<expr pos:start="135:43" pos:end="135:50"><name pos:start="135:43" pos:end="135:50">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="139:5" pos:end="151:5"><if pos:start="139:5" pos:end="151:5">if <condition pos:start="139:8" pos:end="139:15">(<expr pos:start="139:9" pos:end="139:14"><name pos:start="139:9" pos:end="139:14">m_data</name></expr>)</condition> <block pos:start="139:17" pos:end="151:5">{<block_content pos:start="141:9" pos:end="149:53">

        <expr_stmt pos:start="141:9" pos:end="141:26"><expr pos:start="141:9" pos:end="141:25"><name pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:14">m_data</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:21">valid</name></name> <operator pos:start="141:23" pos:end="141:23">=</operator> <literal type="number" pos:start="141:25" pos:end="141:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:36"><expr pos:start="143:9" pos:end="143:35"><name pos:start="143:9" pos:end="143:24"><name pos:start="143:9" pos:end="143:14">m_data</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:24">l1_index</name></name> <operator pos:start="143:26" pos:end="143:26">=</operator> <name pos:start="143:28" pos:end="143:35">l1_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:36"><expr pos:start="145:9" pos:end="145:35"><name pos:start="145:9" pos:end="145:24"><name pos:start="145:9" pos:end="145:14">m_data</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:24">l2_index</name></name> <operator pos:start="145:26" pos:end="145:26">=</operator> <name pos:start="145:28" pos:end="145:35">l2_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:38"><expr pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:25"><name pos:start="147:9" pos:end="147:14">m_data</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:25">l2_offset</name></name> <operator pos:start="147:27" pos:end="147:27">=</operator> <name pos:start="147:29" pos:end="147:37">l2_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:53"><expr pos:start="149:9" pos:end="149:52"><name pos:start="149:9" pos:end="149:30"><name pos:start="149:9" pos:end="149:14">m_data</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:30">l2_cache_entry</name></name> <operator pos:start="149:32" pos:end="149:32">=</operator> <operator pos:start="149:34" pos:end="149:34">&amp;</operator><name pos:start="149:35" pos:end="149:52"><name pos:start="149:35" pos:end="149:42">l2_table</name><index pos:start="149:43" pos:end="149:52">[<expr pos:start="149:44" pos:end="149:51"><name pos:start="149:44" pos:end="149:51">l2_index</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="153:5" pos:end="157:5"><if pos:start="153:5" pos:end="157:5">if <condition pos:start="153:8" pos:end="153:68">(<expr pos:start="153:9" pos:end="153:67"><name pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:14">extent</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:30">has_zero_grain</name></name> <operator pos:start="153:32" pos:end="153:33">&amp;&amp;</operator> <name pos:start="153:35" pos:end="153:48">cluster_sector</name> <operator pos:start="153:50" pos:end="153:51">==</operator> <name pos:start="153:53" pos:end="153:67">VMDK_GTE_ZEROED</name></expr>)</condition> <block pos:start="153:70" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:22">

        <expr_stmt pos:start="155:9" pos:end="155:22"><expr pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:14">zeroed</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <name pos:start="155:18" pos:end="155:21">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="161:5" pos:end="197:5"><if pos:start="161:5" pos:end="197:5">if <condition pos:start="161:8" pos:end="161:34">(<expr pos:start="161:9" pos:end="161:33"><operator pos:start="161:9" pos:end="161:9">!</operator><name pos:start="161:10" pos:end="161:23">cluster_sector</name> <operator pos:start="161:25" pos:end="161:26">||</operator> <name pos:start="161:28" pos:end="161:33">zeroed</name></expr>)</condition> <block pos:start="161:36" pos:end="197:5">{<block_content pos:start="163:9" pos:end="195:9">

        <if_stmt pos:start="163:9" pos:end="167:9"><if pos:start="163:9" pos:end="167:9">if <condition pos:start="163:12" pos:end="163:22">(<expr pos:start="163:13" pos:end="163:21"><operator pos:start="163:13" pos:end="163:13">!</operator><name pos:start="163:14" pos:end="163:21">allocate</name></expr>)</condition> <block pos:start="163:24" pos:end="167:9">{<block_content pos:start="165:13" pos:end="165:55">

            <return pos:start="165:13" pos:end="165:55">return <expr pos:start="165:20" pos:end="165:54"><ternary pos:start="165:20" pos:end="165:54"><condition pos:start="165:20" pos:end="165:27"><expr pos:start="165:20" pos:end="165:25"><name pos:start="165:20" pos:end="165:25">zeroed</name></expr> ?</condition><then pos:start="165:29" pos:end="165:39"> <expr pos:start="165:29" pos:end="165:39"><name pos:start="165:29" pos:end="165:39">VMDK_ZEROED</name></expr> </then><else pos:start="165:41" pos:end="165:54">: <expr pos:start="165:43" pos:end="165:54"><name pos:start="165:43" pos:end="165:54">VMDK_UNALLOC</name></expr></else></ternary></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:53"><expr pos:start="171:9" pos:end="171:52"><name pos:start="171:9" pos:end="171:22">cluster_sector</name> <operator pos:start="171:24" pos:end="171:24">=</operator> <name pos:start="171:26" pos:end="171:52"><name pos:start="171:26" pos:end="171:31">extent</name><operator pos:start="171:32" pos:end="171:33">-&gt;</operator><name pos:start="171:34" pos:end="171:52">next_cluster_sector</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:63"><expr pos:start="173:9" pos:end="173:62"><name pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:14">extent</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:35">next_cluster_sector</name></name> <operator pos:start="173:37" pos:end="173:38">+=</operator> <name pos:start="173:40" pos:end="173:62"><name pos:start="173:40" pos:end="173:45">extent</name><operator pos:start="173:46" pos:end="173:47">-&gt;</operator><name pos:start="173:48" pos:end="173:62">cluster_sectors</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="177:9" pos:end="185:11">/* First of all we write grain itself, to avoid race condition

         * that may to corrupt the image.

         * This problem may occur because of insufficient space on host disk

         * or inappropriate VM shutdown.

         */</comment>

        <expr_stmt pos:start="187:9" pos:end="189:74"><expr pos:start="187:9" pos:end="189:73"><name pos:start="187:9" pos:end="187:11">ret</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <call pos:start="187:15" pos:end="189:73"><name pos:start="187:15" pos:end="187:31">get_whole_cluster</name><argument_list pos:start="187:32" pos:end="189:73">(<argument pos:start="187:33" pos:end="187:34"><expr pos:start="187:33" pos:end="187:34"><name pos:start="187:33" pos:end="187:34">bs</name></expr></argument>, <argument pos:start="187:37" pos:end="187:42"><expr pos:start="187:37" pos:end="187:42"><name pos:start="187:37" pos:end="187:42">extent</name></expr></argument>, <argument pos:start="187:45" pos:end="187:77"><expr pos:start="187:45" pos:end="187:77"><name pos:start="187:45" pos:end="187:58">cluster_sector</name> <operator pos:start="187:60" pos:end="187:60">*</operator> <name pos:start="187:62" pos:end="187:77">BDRV_SECTOR_SIZE</name></expr></argument>,

                                <argument pos:start="189:33" pos:end="189:38"><expr pos:start="189:33" pos:end="189:38"><name pos:start="189:33" pos:end="189:38">offset</name></expr></argument>, <argument pos:start="189:41" pos:end="189:56"><expr pos:start="189:41" pos:end="189:56"><name pos:start="189:41" pos:end="189:56">skip_start_bytes</name></expr></argument>, <argument pos:start="189:59" pos:end="189:72"><expr pos:start="189:59" pos:end="189:72"><name pos:start="189:59" pos:end="189:72">skip_end_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="195:9"><if pos:start="191:9" pos:end="195:9">if <condition pos:start="191:12" pos:end="191:16">(<expr pos:start="191:13" pos:end="191:15"><name pos:start="191:13" pos:end="191:15">ret</name></expr>)</condition> <block pos:start="191:18" pos:end="195:9">{<block_content pos:start="193:13" pos:end="193:23">

            <return pos:start="193:13" pos:end="193:23">return <expr pos:start="193:20" pos:end="193:22"><name pos:start="193:20" pos:end="193:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:57"><expr pos:start="199:5" pos:end="199:56"><operator pos:start="199:5" pos:end="199:5">*</operator><name pos:start="199:6" pos:end="199:19">cluster_offset</name> <operator pos:start="199:21" pos:end="199:21">=</operator> <name pos:start="199:23" pos:end="199:36">cluster_sector</name> <operator pos:start="199:38" pos:end="199:39">&lt;&lt;</operator> <name pos:start="199:41" pos:end="199:56">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>

    <return pos:start="201:5" pos:end="201:19">return <expr pos:start="201:12" pos:end="201:18"><name pos:start="201:12" pos:end="201:18">VMDK_OK</name></expr>;</return>

</block_content>}</block></function>
</unit>
