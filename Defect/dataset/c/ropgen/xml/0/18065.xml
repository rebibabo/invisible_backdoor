<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18065.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">net_socket_send</name><parameter_list pos:start="1:28" pos:end="1:41">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:34"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">NetSocketState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">size</name></decl>, <decl pos:start="7:15" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:17">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:14">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:29"><name pos:start="11:13" pos:end="11:16">buf1</name><index pos:start="11:17" pos:end="11:29">[<expr pos:start="11:18" pos:end="11:28"><name pos:start="11:18" pos:end="11:28">NET_BUFSIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">buf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:8">size</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:50"><name pos:start="17:12" pos:end="17:20">qemu_recv</name><argument_list pos:start="17:21" pos:end="17:50">(<argument pos:start="17:22" pos:end="17:26"><expr pos:start="17:22" pos:end="17:26"><name pos:start="17:22" pos:end="17:26"><name pos:start="17:22" pos:end="17:22">s</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:26">fd</name></name></expr></argument>, <argument pos:start="17:29" pos:end="17:32"><expr pos:start="17:29" pos:end="17:32"><name pos:start="17:29" pos:end="17:32">buf1</name></expr></argument>, <argument pos:start="17:35" pos:end="17:46"><expr pos:start="17:35" pos:end="17:46"><sizeof pos:start="17:35" pos:end="17:46">sizeof<argument_list pos:start="17:41" pos:end="17:46">(<argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:49" pos:end="17:49"><expr pos:start="17:49" pos:end="17:49"><literal type="number" pos:start="17:49" pos:end="17:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="65:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:12">size</name> <operator pos:start="19:14" pos:end="19:14">&lt;</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>)</condition> <block pos:start="19:19" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:21">

        <expr_stmt pos:start="21:9" pos:end="21:29"><expr pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:11">err</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:28"><name pos:start="21:15" pos:end="21:26">socket_error</name><argument_list pos:start="21:27" pos:end="21:28">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:21"><if pos:start="23:9" pos:end="25:21">if <condition pos:start="23:12" pos:end="23:31">(<expr pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:15">err</name> <operator pos:start="23:17" pos:end="23:18">!=</operator> <name pos:start="23:20" pos:end="23:30">EWOULDBLOCK</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:21"><block_content pos:start="25:13" pos:end="25:21">

            <goto pos:start="25:13" pos:end="25:21">goto <name pos:start="25:18" pos:end="25:20">eoc</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="65:5">else if <condition pos:start="27:15" pos:end="27:25">(<expr pos:start="27:16" pos:end="27:24"><name pos:start="27:16" pos:end="27:19">size</name> <operator pos:start="27:21" pos:end="27:22">==</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>)</condition> <block pos:start="27:27" pos:end="65:5">{<block_content pos:start="31:5" pos:end="63:15">

        <comment type="block" pos:start="29:9" pos:end="29:31">/* end of connection */</comment>

    <label pos:start="31:5" pos:end="31:8"><name pos:start="31:5" pos:end="31:7">eoc</name>:</label>

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><call pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:28">net_socket_read_poll</name><argument_list pos:start="33:29" pos:end="33:38">(<argument pos:start="33:30" pos:end="33:30"><expr pos:start="33:30" pos:end="33:30"><name pos:start="33:30" pos:end="33:30">s</name></expr></argument>, <argument pos:start="33:33" pos:end="33:37"><expr pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:37">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:39"><call pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:29">net_socket_write_poll</name><argument_list pos:start="35:30" pos:end="35:39">(<argument pos:start="35:31" pos:end="35:31"><expr pos:start="35:31" pos:end="35:31"><name pos:start="35:31" pos:end="35:31">s</name></expr></argument>, <argument pos:start="35:34" pos:end="35:38"><expr pos:start="35:34" pos:end="35:38"><name pos:start="35:34" pos:end="35:38">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:31">(<expr pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:24">listen_fd</name></name> <operator pos:start="37:26" pos:end="37:27">!=</operator> <operator pos:start="37:29" pos:end="37:29">-</operator><literal type="number" pos:start="37:30" pos:end="37:30">1</literal></expr>)</condition> <block pos:start="37:33" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:74">

            <expr_stmt pos:start="39:13" pos:end="39:74"><expr pos:start="39:13" pos:end="39:73"><call pos:start="39:13" pos:end="39:73"><name pos:start="39:13" pos:end="39:31">qemu_set_fd_handler</name><argument_list pos:start="39:32" pos:end="39:73">(<argument pos:start="39:33" pos:end="39:44"><expr pos:start="39:33" pos:end="39:44"><name pos:start="39:33" pos:end="39:44"><name pos:start="39:33" pos:end="39:33">s</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:44">listen_fd</name></name></expr></argument>, <argument pos:start="39:47" pos:end="39:63"><expr pos:start="39:47" pos:end="39:63"><name pos:start="39:47" pos:end="39:63">net_socket_accept</name></expr></argument>, <argument pos:start="39:66" pos:end="39:69"><expr pos:start="39:66" pos:end="39:69"><name pos:start="39:66" pos:end="39:69">NULL</name></expr></argument>, <argument pos:start="39:72" pos:end="39:72"><expr pos:start="39:72" pos:end="39:72"><name pos:start="39:72" pos:end="39:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><call pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:19">closesocket</name><argument_list pos:start="43:20" pos:end="43:26">(<argument pos:start="43:21" pos:end="43:25"><expr pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:25">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:19"><expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:13">fd</name></name> <operator pos:start="47:15" pos:end="47:15">=</operator> <operator pos:start="47:17" pos:end="47:17">-</operator><literal type="number" pos:start="47:18" pos:end="47:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:21"><expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:16">state</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:16">index</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:26"><expr pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:21">packet_len</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:13">nc</name><operator pos:start="55:14" pos:end="55:14">.</operator><name pos:start="55:15" pos:end="55:23">link_down</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:30">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:42"><expr pos:start="57:9" pos:end="57:41"><call pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:14">memset</name><argument_list pos:start="57:15" pos:end="57:41">(<argument pos:start="57:16" pos:end="57:21"><expr pos:start="57:16" pos:end="57:21"><name pos:start="57:16" pos:end="57:21"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:21">buf</name></name></expr></argument>, <argument pos:start="57:24" pos:end="57:24"><expr pos:start="57:24" pos:end="57:24"><literal type="number" pos:start="57:24" pos:end="57:24">0</literal></expr></argument>, <argument pos:start="57:27" pos:end="57:40"><expr pos:start="57:27" pos:end="57:40"><sizeof pos:start="57:27" pos:end="57:40">sizeof<argument_list pos:start="57:33" pos:end="57:40">(<argument pos:start="57:34" pos:end="57:39"><expr pos:start="57:34" pos:end="57:39"><name pos:start="57:34" pos:end="57:39"><name pos:start="57:34" pos:end="57:34">s</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:39">buf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:58"><expr pos:start="59:9" pos:end="59:57"><call pos:start="59:9" pos:end="59:57"><name pos:start="59:9" pos:end="59:14">memset</name><argument_list pos:start="59:15" pos:end="59:57">(<argument pos:start="59:16" pos:end="59:29"><expr pos:start="59:16" pos:end="59:29"><name pos:start="59:16" pos:end="59:29"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:20">nc</name><operator pos:start="59:21" pos:end="59:21">.</operator><name pos:start="59:22" pos:end="59:29">info_str</name></name></expr></argument>, <argument pos:start="59:32" pos:end="59:32"><expr pos:start="59:32" pos:end="59:32"><literal type="number" pos:start="59:32" pos:end="59:32">0</literal></expr></argument>, <argument pos:start="59:35" pos:end="59:56"><expr pos:start="59:35" pos:end="59:56"><sizeof pos:start="59:35" pos:end="59:56">sizeof<argument_list pos:start="59:41" pos:end="59:56">(<argument pos:start="59:42" pos:end="59:55"><expr pos:start="59:42" pos:end="59:55"><name pos:start="59:42" pos:end="59:55"><name pos:start="59:42" pos:end="59:42">s</name><operator pos:start="59:43" pos:end="59:44">-&gt;</operator><name pos:start="59:45" pos:end="59:46">nc</name><operator pos:start="59:47" pos:end="59:47">.</operator><name pos:start="59:48" pos:end="59:55">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="63:9" pos:end="63:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:15"><expr pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:7">buf</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <name pos:start="67:11" pos:end="67:14">buf1</name></expr>;</expr_stmt>

    <while pos:start="69:5" pos:end="151:5">while <condition pos:start="69:11" pos:end="69:20">(<expr pos:start="69:12" pos:end="69:19"><name pos:start="69:12" pos:end="69:15">size</name> <operator pos:start="69:17" pos:end="69:17">&gt;</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>)</condition> <block pos:start="69:22" pos:end="151:5">{<block_content pos:start="73:9" pos:end="149:9">

        <comment type="block" pos:start="71:9" pos:end="71:50">/* reassemble a packet from the network */</comment>

        <switch pos:start="73:9" pos:end="149:9">switch<condition pos:start="73:15" pos:end="73:24">(<expr pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:16">s</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:23">state</name></name></expr>)</condition> <block pos:start="73:26" pos:end="149:9">{<block_content pos:start="75:9" pos:end="147:18">

        <case pos:start="75:9" pos:end="75:15">case <expr pos:start="75:14" pos:end="75:14"><literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:29"><expr pos:start="77:13" pos:end="77:28"><name pos:start="77:13" pos:end="77:13">l</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <literal type="number" pos:start="77:17" pos:end="77:19">4</literal> <operator pos:start="77:19" pos:end="77:19">-</operator> <name pos:start="77:21" pos:end="77:28"><name pos:start="77:21" pos:end="77:21">s</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:28">index</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="81:25"><if pos:start="79:13" pos:end="81:25">if <condition pos:start="79:16" pos:end="79:25">(<expr pos:start="79:17" pos:end="79:24"><name pos:start="79:17" pos:end="79:17">l</name> <operator pos:start="79:19" pos:end="79:19">&gt;</operator> <name pos:start="79:21" pos:end="79:24">size</name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:25"><block_content pos:start="81:17" pos:end="81:25">

                <expr_stmt pos:start="81:17" pos:end="81:25"><expr pos:start="81:17" pos:end="81:24"><name pos:start="81:17" pos:end="81:17">l</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <name pos:start="81:21" pos:end="81:24">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:46"><expr pos:start="83:13" pos:end="83:45"><call pos:start="83:13" pos:end="83:45"><name pos:start="83:13" pos:end="83:18">memcpy</name><argument_list pos:start="83:19" pos:end="83:45">(<argument pos:start="83:20" pos:end="83:36"><expr pos:start="83:20" pos:end="83:36"><name pos:start="83:20" pos:end="83:25"><name pos:start="83:20" pos:end="83:20">s</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:25">buf</name></name> <operator pos:start="83:27" pos:end="83:27">+</operator> <name pos:start="83:29" pos:end="83:36"><name pos:start="83:29" pos:end="83:29">s</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:36">index</name></name></expr></argument>, <argument pos:start="83:39" pos:end="83:41"><expr pos:start="83:39" pos:end="83:41"><name pos:start="83:39" pos:end="83:41">buf</name></expr></argument>, <argument pos:start="83:44" pos:end="83:44"><expr pos:start="83:44" pos:end="83:44"><name pos:start="83:44" pos:end="83:44">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:21"><expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:15">buf</name> <operator pos:start="85:17" pos:end="85:18">+=</operator> <name pos:start="85:20" pos:end="85:20">l</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:22"><expr pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:16">size</name> <operator pos:start="87:18" pos:end="87:19">-=</operator> <name pos:start="87:21" pos:end="87:21">l</name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:20">index</name></name> <operator pos:start="89:22" pos:end="89:23">+=</operator> <name pos:start="89:25" pos:end="89:25">l</name></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="101:13"><if pos:start="91:13" pos:end="101:13">if <condition pos:start="91:16" pos:end="91:30">(<expr pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:24"><name pos:start="91:17" pos:end="91:17">s</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:24">index</name></name> <operator pos:start="91:26" pos:end="91:27">==</operator> <literal type="number" pos:start="91:29" pos:end="91:29">4</literal></expr>)</condition> <block pos:start="91:32" pos:end="101:13">{<block_content pos:start="95:17" pos:end="99:29">

                <comment type="block" pos:start="93:17" pos:end="93:32">/* got length */</comment>

                <expr_stmt pos:start="95:17" pos:end="95:59"><expr pos:start="95:17" pos:end="95:58"><name pos:start="95:17" pos:end="95:29"><name pos:start="95:17" pos:end="95:17">s</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:29">packet_len</name></name> <operator pos:start="95:31" pos:end="95:31">=</operator> <call pos:start="95:33" pos:end="95:58"><name pos:start="95:33" pos:end="95:37">ntohl</name><argument_list pos:start="95:38" pos:end="95:58">(<argument pos:start="95:39" pos:end="95:57"><expr pos:start="95:39" pos:end="95:57"><operator pos:start="95:39" pos:end="95:39">*</operator><operator pos:start="95:40" pos:end="95:40">(</operator><name pos:start="95:41" pos:end="95:48">uint32_t</name> <operator pos:start="95:50" pos:end="95:50">*</operator><operator pos:start="95:51" pos:end="95:51">)</operator><name pos:start="95:52" pos:end="95:57"><name pos:start="95:52" pos:end="95:52">s</name><operator pos:start="95:53" pos:end="95:54">-&gt;</operator><name pos:start="95:55" pos:end="95:57">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:29"><expr pos:start="97:17" pos:end="97:28"><name pos:start="97:17" pos:end="97:24"><name pos:start="97:17" pos:end="97:17">s</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:24">index</name></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <literal type="number" pos:start="97:28" pos:end="97:28">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:29"><expr pos:start="99:17" pos:end="99:28"><name pos:start="99:17" pos:end="99:24"><name pos:start="99:17" pos:end="99:17">s</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:24">state</name></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <literal type="number" pos:start="99:28" pos:end="99:28">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        <case pos:start="105:9" pos:end="105:15">case <expr pos:start="105:14" pos:end="105:14"><literal type="number" pos:start="105:14" pos:end="105:14">1</literal></expr>:</case>

            <expr_stmt pos:start="107:13" pos:end="107:41"><expr pos:start="107:13" pos:end="107:40"><name pos:start="107:13" pos:end="107:13">l</name> <operator pos:start="107:15" pos:end="107:15">=</operator> <name pos:start="107:17" pos:end="107:29"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:29">packet_len</name></name> <operator pos:start="107:31" pos:end="107:31">-</operator> <name pos:start="107:33" pos:end="107:40"><name pos:start="107:33" pos:end="107:33">s</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:40">index</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="109:13" pos:end="111:25"><if pos:start="109:13" pos:end="111:25">if <condition pos:start="109:16" pos:end="109:25">(<expr pos:start="109:17" pos:end="109:24"><name pos:start="109:17" pos:end="109:17">l</name> <operator pos:start="109:19" pos:end="109:19">&gt;</operator> <name pos:start="109:21" pos:end="109:24">size</name></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:25"><block_content pos:start="111:17" pos:end="111:25">

                <expr_stmt pos:start="111:17" pos:end="111:25"><expr pos:start="111:17" pos:end="111:24"><name pos:start="111:17" pos:end="111:17">l</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <name pos:start="111:21" pos:end="111:24">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="113:13" pos:end="127:13"><if pos:start="113:13" pos:end="117:13">if <condition pos:start="113:16" pos:end="113:47">(<expr pos:start="113:17" pos:end="113:46"><name pos:start="113:17" pos:end="113:24"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:24">index</name></name> <operator pos:start="113:26" pos:end="113:26">+</operator> <name pos:start="113:28" pos:end="113:28">l</name> <operator pos:start="113:30" pos:end="113:31">&lt;=</operator> <sizeof pos:start="113:33" pos:end="113:46">sizeof<argument_list pos:start="113:39" pos:end="113:46">(<argument pos:start="113:40" pos:end="113:45"><expr pos:start="113:40" pos:end="113:45"><name pos:start="113:40" pos:end="113:45"><name pos:start="113:40" pos:end="113:40">s</name><operator pos:start="113:41" pos:end="113:42">-&gt;</operator><name pos:start="113:43" pos:end="113:45">buf</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="113:49" pos:end="117:13">{<block_content pos:start="115:17" pos:end="115:50">

                <expr_stmt pos:start="115:17" pos:end="115:50"><expr pos:start="115:17" pos:end="115:49"><call pos:start="115:17" pos:end="115:49"><name pos:start="115:17" pos:end="115:22">memcpy</name><argument_list pos:start="115:23" pos:end="115:49">(<argument pos:start="115:24" pos:end="115:40"><expr pos:start="115:24" pos:end="115:40"><name pos:start="115:24" pos:end="115:29"><name pos:start="115:24" pos:end="115:24">s</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:29">buf</name></name> <operator pos:start="115:31" pos:end="115:31">+</operator> <name pos:start="115:33" pos:end="115:40"><name pos:start="115:33" pos:end="115:33">s</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:40">index</name></name></expr></argument>, <argument pos:start="115:43" pos:end="115:45"><expr pos:start="115:43" pos:end="115:45"><name pos:start="115:43" pos:end="115:45">buf</name></expr></argument>, <argument pos:start="115:48" pos:end="115:48"><expr pos:start="115:48" pos:end="115:48"><name pos:start="115:48" pos:end="115:48">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="117:15" pos:end="127:13">else <block pos:start="117:20" pos:end="127:13">{<block_content pos:start="119:17" pos:end="125:25">

                <expr_stmt pos:start="119:17" pos:end="121:48"><expr pos:start="119:17" pos:end="121:47"><call pos:start="119:17" pos:end="121:47"><name pos:start="119:17" pos:end="119:23">fprintf</name><argument_list pos:start="119:24" pos:end="121:47">(<argument pos:start="119:25" pos:end="119:30"><expr pos:start="119:25" pos:end="119:30"><name pos:start="119:25" pos:end="119:30">stderr</name></expr></argument>, <argument pos:start="119:33" pos:end="121:46"><expr pos:start="119:33" pos:end="121:46"><literal type="string" pos:start="119:33" pos:end="119:75">"serious error: oversized packet received,"</literal>

                    <literal type="string" pos:start="121:21" pos:end="121:46">"connection terminated.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:29"><expr pos:start="123:17" pos:end="123:28"><name pos:start="123:17" pos:end="123:24"><name pos:start="123:17" pos:end="123:17">s</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:24">state</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <literal type="number" pos:start="123:28" pos:end="123:28">0</literal></expr>;</expr_stmt>

                <goto pos:start="125:17" pos:end="125:25">goto <name pos:start="125:22" pos:end="125:24">eoc</name>;</goto>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="131:13" pos:end="131:26"><expr pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:20"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:20">index</name></name> <operator pos:start="131:22" pos:end="131:23">+=</operator> <name pos:start="131:25" pos:end="131:25">l</name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:21"><expr pos:start="133:13" pos:end="133:20"><name pos:start="133:13" pos:end="133:15">buf</name> <operator pos:start="133:17" pos:end="133:18">+=</operator> <name pos:start="133:20" pos:end="133:20">l</name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:22"><expr pos:start="135:13" pos:end="135:21"><name pos:start="135:13" pos:end="135:16">size</name> <operator pos:start="135:18" pos:end="135:19">-=</operator> <name pos:start="135:21" pos:end="135:21">l</name></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="145:13"><if pos:start="137:13" pos:end="145:13">if <condition pos:start="137:16" pos:end="137:42">(<expr pos:start="137:17" pos:end="137:41"><name pos:start="137:17" pos:end="137:24"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:24">index</name></name> <operator pos:start="137:26" pos:end="137:27">&gt;=</operator> <name pos:start="137:29" pos:end="137:41"><name pos:start="137:29" pos:end="137:29">s</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:41">packet_len</name></name></expr>)</condition> <block pos:start="137:44" pos:end="145:13">{<block_content pos:start="139:17" pos:end="143:29">

                <expr_stmt pos:start="139:17" pos:end="139:64"><expr pos:start="139:17" pos:end="139:63"><call pos:start="139:17" pos:end="139:63"><name pos:start="139:17" pos:end="139:32">qemu_send_packet</name><argument_list pos:start="139:33" pos:end="139:63">(<argument pos:start="139:34" pos:end="139:39"><expr pos:start="139:34" pos:end="139:39"><operator pos:start="139:34" pos:end="139:34">&amp;</operator><name pos:start="139:35" pos:end="139:39"><name pos:start="139:35" pos:end="139:35">s</name><operator pos:start="139:36" pos:end="139:37">-&gt;</operator><name pos:start="139:38" pos:end="139:39">nc</name></name></expr></argument>, <argument pos:start="139:42" pos:end="139:47"><expr pos:start="139:42" pos:end="139:47"><name pos:start="139:42" pos:end="139:47"><name pos:start="139:42" pos:end="139:42">s</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:47">buf</name></name></expr></argument>, <argument pos:start="139:50" pos:end="139:62"><expr pos:start="139:50" pos:end="139:62"><name pos:start="139:50" pos:end="139:62"><name pos:start="139:50" pos:end="139:50">s</name><operator pos:start="139:51" pos:end="139:52">-&gt;</operator><name pos:start="139:53" pos:end="139:62">packet_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:29"><expr pos:start="141:17" pos:end="141:28"><name pos:start="141:17" pos:end="141:24"><name pos:start="141:17" pos:end="141:17">s</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:24">index</name></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <literal type="number" pos:start="141:28" pos:end="141:28">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:29"><expr pos:start="143:17" pos:end="143:28"><name pos:start="143:17" pos:end="143:24"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:24">state</name></name> <operator pos:start="143:26" pos:end="143:26">=</operator> <literal type="number" pos:start="143:28" pos:end="143:28">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
