<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22341.c" pos:tabs="8"><function pos:start="1:1" pos:end="335:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">arm_cpu_reset</name><parameter_list pos:start="1:26" pos:end="1:38">(<parameter pos:start="1:27" pos:end="1:37"><decl pos:start="1:27" pos:end="1:37"><type pos:start="1:27" pos:end="1:36"><name pos:start="1:27" pos:end="1:34">CPUState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="335:1">{<block_content pos:start="5:5" pos:end="333:34">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">ARMCPU</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">cpu</name> <init pos:start="5:17" pos:end="5:28">= <expr pos:start="5:19" pos:end="5:28"><call pos:start="5:19" pos:end="5:28"><name pos:start="5:19" pos:end="5:25">ARM_CPU</name><argument_list pos:start="5:26" pos:end="5:28">(<argument pos:start="5:27" pos:end="5:27"><expr pos:start="5:27" pos:end="5:27"><name pos:start="5:27" pos:end="5:27">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">ARMCPUClass</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">acc</name> <init pos:start="7:22" pos:end="7:45">= <expr pos:start="7:24" pos:end="7:45"><call pos:start="7:24" pos:end="7:45"><name pos:start="7:24" pos:end="7:40">ARM_CPU_GET_CLASS</name><argument_list pos:start="7:41" pos:end="7:45">(<argument pos:start="7:42" pos:end="7:44"><expr pos:start="7:42" pos:end="7:44"><name pos:start="7:42" pos:end="7:44">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">CPUARMState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">env</name> <init pos:start="9:22" pos:end="9:32">= <expr pos:start="9:24" pos:end="9:32"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:27">cpu</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:32">env</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><call pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:7">acc</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:21">parent_reset</name></name><argument_list pos:start="13:22" pos:end="13:24">(<argument pos:start="13:23" pos:end="13:23"><expr pos:start="13:23" pos:end="13:23"><name pos:start="13:23" pos:end="13:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:60"><expr pos:start="17:5" pos:end="17:59"><call pos:start="17:5" pos:end="17:59"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:59">(<argument pos:start="17:12" pos:end="17:14"><expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:14">env</name></expr></argument>, <argument pos:start="17:17" pos:end="17:17"><expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></argument>, <argument pos:start="17:20" pos:end="17:58"><expr pos:start="17:20" pos:end="17:58"><call pos:start="17:20" pos:end="17:58"><name pos:start="17:20" pos:end="17:27">offsetof</name><argument_list pos:start="17:28" pos:end="17:58">(<argument pos:start="17:29" pos:end="17:39"><expr pos:start="17:29" pos:end="17:39"><name pos:start="17:29" pos:end="17:39">CPUARMState</name></expr></argument>, <argument pos:start="17:42" pos:end="17:57"><expr pos:start="17:42" pos:end="17:57"><name pos:start="17:42" pos:end="17:57">end_reset_fields</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:58"><expr pos:start="21:5" pos:end="21:57"><call pos:start="21:5" pos:end="21:57"><name pos:start="21:5" pos:end="21:24">g_hash_table_foreach</name><argument_list pos:start="21:25" pos:end="21:57">(<argument pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:28">cpu</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:37">cp_regs</name></name></expr></argument>, <argument pos:start="21:40" pos:end="21:51"><expr pos:start="21:40" pos:end="21:51"><name pos:start="21:40" pos:end="21:51">cp_reg_reset</name></expr></argument>, <argument pos:start="21:54" pos:end="21:56"><expr pos:start="21:54" pos:end="21:56"><name pos:start="21:54" pos:end="21:56">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:64"><expr pos:start="23:5" pos:end="23:63"><call pos:start="23:5" pos:end="23:63"><name pos:start="23:5" pos:end="23:24">g_hash_table_foreach</name><argument_list pos:start="23:25" pos:end="23:63">(<argument pos:start="23:26" pos:end="23:37"><expr pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:28">cpu</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:37">cp_regs</name></name></expr></argument>, <argument pos:start="23:40" pos:end="23:57"><expr pos:start="23:40" pos:end="23:57"><name pos:start="23:40" pos:end="23:57">cp_reg_check_reset</name></expr></argument>, <argument pos:start="23:60" pos:end="23:62"><expr pos:start="23:60" pos:end="23:62"><name pos:start="23:60" pos:end="23:62">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:7">env</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:12">vfp</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:18">xregs</name><index pos:start="27:19" pos:end="27:33">[<expr pos:start="27:20" pos:end="27:32"><name pos:start="27:20" pos:end="27:32">ARM_VFP_FPSID</name></expr>]</index></name> <operator pos:start="27:35" pos:end="27:35">=</operator> <name pos:start="27:37" pos:end="27:52"><name pos:start="27:37" pos:end="27:39">cpu</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:52">reset_fpsid</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:12">vfp</name><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:18">xregs</name><index pos:start="29:19" pos:end="29:33">[<expr pos:start="29:20" pos:end="29:32"><name pos:start="29:20" pos:end="29:32">ARM_VFP_MVFR0</name></expr>]</index></name> <operator pos:start="29:35" pos:end="29:35">=</operator> <name pos:start="29:37" pos:end="29:46"><name pos:start="29:37" pos:end="29:39">cpu</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:46">mvfr0</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:47"><expr pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:12">vfp</name><operator pos:start="31:13" pos:end="31:13">.</operator><name pos:start="31:14" pos:end="31:18">xregs</name><index pos:start="31:19" pos:end="31:33">[<expr pos:start="31:20" pos:end="31:32"><name pos:start="31:20" pos:end="31:32">ARM_VFP_MVFR1</name></expr>]</index></name> <operator pos:start="31:35" pos:end="31:35">=</operator> <name pos:start="31:37" pos:end="31:46"><name pos:start="31:37" pos:end="31:39">cpu</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:46">mvfr1</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:47"><expr pos:start="33:5" pos:end="33:46"><name pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:7">env</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:12">vfp</name><operator pos:start="33:13" pos:end="33:13">.</operator><name pos:start="33:14" pos:end="33:18">xregs</name><index pos:start="33:19" pos:end="33:33">[<expr pos:start="33:20" pos:end="33:32"><name pos:start="33:20" pos:end="33:32">ARM_VFP_MVFR2</name></expr>]</index></name> <operator pos:start="33:35" pos:end="33:35">=</operator> <name pos:start="33:37" pos:end="33:46"><name pos:start="33:37" pos:end="33:39">cpu</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:46">mvfr2</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:67"><expr pos:start="37:5" pos:end="37:66"><name pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:7">cpu</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:20">power_state</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <ternary pos:start="37:24" pos:end="37:66"><condition pos:start="37:24" pos:end="37:47"><expr pos:start="37:24" pos:end="37:45"><name pos:start="37:24" pos:end="37:45"><name pos:start="37:24" pos:end="37:26">cpu</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:45">start_powered_off</name></name></expr> ?</condition><then pos:start="37:49" pos:end="37:56"> <expr pos:start="37:49" pos:end="37:56"><name pos:start="37:49" pos:end="37:56">PSCI_OFF</name></expr> </then><else pos:start="37:58" pos:end="37:66">: <expr pos:start="37:60" pos:end="37:66"><name pos:start="37:60" pos:end="37:66">PSCI_ON</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:13">halted</name></name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:38"><name pos:start="39:17" pos:end="39:19">cpu</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:38">start_powered_off</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:45">(<expr pos:start="43:9" pos:end="43:44"><call pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:19">arm_feature</name><argument_list pos:start="43:20" pos:end="43:44">(<argument pos:start="43:21" pos:end="43:23"><expr pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:23">env</name></expr></argument>, <argument pos:start="43:26" pos:end="43:43"><expr pos:start="43:26" pos:end="43:43"><name pos:start="43:26" pos:end="43:43">ARM_FEATURE_IWMMXT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:47" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:62">

        <expr_stmt pos:start="45:9" pos:end="45:62"><expr pos:start="45:9" pos:end="45:61"><name pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:11">env</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:19">iwmmxt</name><operator pos:start="45:20" pos:end="45:20">.</operator><name pos:start="45:21" pos:end="45:25">cregs</name><index pos:start="45:26" pos:end="45:42">[<expr pos:start="45:27" pos:end="45:41"><name pos:start="45:27" pos:end="45:41">ARM_IWMMXT_wCID</name></expr>]</index></name> <operator pos:start="45:44" pos:end="45:44">=</operator> <literal type="number" pos:start="45:46" pos:end="45:55">0x69051000</literal> <operator pos:start="45:57" pos:end="45:57">|</operator> <literal type="char" pos:start="45:59" pos:end="45:61">'Q'</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="106:0"><if pos:start="51:5" pos:end="91:5">if <condition pos:start="51:8" pos:end="51:46">(<expr pos:start="51:9" pos:end="51:45"><call pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:19">arm_feature</name><argument_list pos:start="51:20" pos:end="51:45">(<argument pos:start="51:21" pos:end="51:23"><expr pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:23">env</name></expr></argument>, <argument pos:start="51:26" pos:end="51:44"><expr pos:start="51:26" pos:end="51:44"><name pos:start="51:26" pos:end="51:44">ARM_FEATURE_AARCH64</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:48" pos:end="91:5">{<block_content pos:start="55:9" pos:end="90:0">

        <comment type="block" pos:start="53:9" pos:end="53:53">/* 64 bit CPUs always start in 64 bit mode */</comment>

        <expr_stmt pos:start="55:9" pos:end="58:0"><expr pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:11">env</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:20">aarch64</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <literal type="number" pos:start="55:24" pos:end="55:24">1</literal></expr>;</expr_stmt>

<cpp:if pos:start="57:1" pos:end="57:29">#<cpp:directive pos:start="57:2" pos:end="57:3">if</cpp:directive> <expr pos:start="57:5" pos:end="57:29"><call pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:11">defined</name><argument_list pos:start="57:12" pos:end="57:29">(<argument pos:start="57:13" pos:end="57:28"><expr pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="59:9" pos:end="59:39"><expr pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:11">env</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:19">pstate</name></name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:38">PSTATE_MODE_EL0t</name></expr>;</expr_stmt>

        <comment type="block" pos:start="61:9" pos:end="61:75">/* Userspace expects access to DC ZVA, CTL_EL0 and the cache ops */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:67"><expr pos:start="63:9" pos:end="63:66"><name pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:11">env</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:17">cp15</name><operator pos:start="63:18" pos:end="63:18">.</operator><name pos:start="63:19" pos:end="63:26">sctlr_el</name><index pos:start="63:27" pos:end="63:29">[<expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">1</literal></expr>]</index></name> <operator pos:start="63:31" pos:end="63:32">|=</operator> <name pos:start="63:34" pos:end="63:42">SCTLR_UCT</name> <operator pos:start="63:44" pos:end="63:44">|</operator> <name pos:start="63:46" pos:end="63:54">SCTLR_UCI</name> <operator pos:start="63:56" pos:end="63:56">|</operator> <name pos:start="63:58" pos:end="63:66">SCTLR_DZE</name></expr>;</expr_stmt>

        <comment type="block" pos:start="65:9" pos:end="65:45">/* and to the FP/Neon instructions */</comment>

        <expr_stmt pos:start="67:9" pos:end="70:0"><expr pos:start="67:9" pos:end="67:70"><name pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:11">env</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:17">cp15</name><operator pos:start="67:18" pos:end="67:18">.</operator><name pos:start="67:19" pos:end="67:27">cpacr_el1</name></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <call pos:start="67:31" pos:end="67:70"><name pos:start="67:31" pos:end="67:39">deposit64</name><argument_list pos:start="67:40" pos:end="67:70">(<argument pos:start="67:41" pos:end="67:59"><expr pos:start="67:41" pos:end="67:59"><name pos:start="67:41" pos:end="67:59"><name pos:start="67:41" pos:end="67:43">env</name><operator pos:start="67:44" pos:end="67:45">-&gt;</operator><name pos:start="67:46" pos:end="67:49">cp15</name><operator pos:start="67:50" pos:end="67:50">.</operator><name pos:start="67:51" pos:end="67:59">cpacr_el1</name></name></expr></argument>, <argument pos:start="67:62" pos:end="67:63"><expr pos:start="67:62" pos:end="67:63"><literal type="number" pos:start="67:62" pos:end="67:63">20</literal></expr></argument>, <argument pos:start="67:66" pos:end="67:66"><expr pos:start="67:66" pos:end="67:66"><literal type="number" pos:start="67:66" pos:end="67:66">2</literal></expr></argument>, <argument pos:start="67:69" pos:end="67:69"><expr pos:start="67:69" pos:end="67:69"><literal type="number" pos:start="67:69" pos:end="67:69">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="69:1" pos:end="69:5">#<cpp:directive pos:start="69:2" pos:end="69:5">else</cpp:directive></cpp:else>

        <comment type="block" pos:start="71:9" pos:end="71:49">/* Reset into the highest available EL */</comment>

        <if_stmt pos:start="73:9" pos:end="85:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:46">(<expr pos:start="73:13" pos:end="73:45"><call pos:start="73:13" pos:end="73:45"><name pos:start="73:13" pos:end="73:23">arm_feature</name><argument_list pos:start="73:24" pos:end="73:45">(<argument pos:start="73:25" pos:end="73:27"><expr pos:start="73:25" pos:end="73:27"><name pos:start="73:25" pos:end="73:27">env</name></expr></argument>, <argument pos:start="73:30" pos:end="73:44"><expr pos:start="73:30" pos:end="73:44"><name pos:start="73:30" pos:end="73:44">ARM_FEATURE_EL3</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:48" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:43">

            <expr_stmt pos:start="75:13" pos:end="75:43"><expr pos:start="75:13" pos:end="75:42"><name pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:15">env</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:23">pstate</name></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:42">PSTATE_MODE_EL3h</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="77:11" pos:end="81:9">else if <condition pos:start="77:19" pos:end="77:53">(<expr pos:start="77:20" pos:end="77:52"><call pos:start="77:20" pos:end="77:52"><name pos:start="77:20" pos:end="77:30">arm_feature</name><argument_list pos:start="77:31" pos:end="77:52">(<argument pos:start="77:32" pos:end="77:34"><expr pos:start="77:32" pos:end="77:34"><name pos:start="77:32" pos:end="77:34">env</name></expr></argument>, <argument pos:start="77:37" pos:end="77:51"><expr pos:start="77:37" pos:end="77:51"><name pos:start="77:37" pos:end="77:51">ARM_FEATURE_EL2</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:55" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:43">

            <expr_stmt pos:start="79:13" pos:end="79:43"><expr pos:start="79:13" pos:end="79:42"><name pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:15">env</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:23">pstate</name></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:42">PSTATE_MODE_EL2h</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="85:9">else <block pos:start="81:16" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:43">

            <expr_stmt pos:start="83:13" pos:end="83:43"><expr pos:start="83:13" pos:end="83:42"><name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:15">env</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:23">pstate</name></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <name pos:start="83:27" pos:end="83:42">PSTATE_MODE_EL1h</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="90:0"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:11">env</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:15">pc</name></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:28"><name pos:start="87:19" pos:end="87:21">cpu</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:28">rvbar</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="106:0">else <block pos:start="91:12" pos:end="106:0">{<block_content pos:start="97:9" pos:end="100:0">

<cpp:if pos:start="93:1" pos:end="93:29">#<cpp:directive pos:start="93:2" pos:end="93:3">if</cpp:directive> <expr pos:start="93:5" pos:end="93:29"><call pos:start="93:5" pos:end="93:29"><name pos:start="93:5" pos:end="93:11">defined</name><argument_list pos:start="93:12" pos:end="93:29">(<argument pos:start="93:13" pos:end="93:28"><expr pos:start="93:13" pos:end="93:28"><name pos:start="93:13" pos:end="93:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <comment type="block" pos:start="95:9" pos:end="95:67">/* Userspace expects access to cp10 and cp11 for FP/Neon */</comment>

        <expr_stmt pos:start="97:9" pos:end="100:0"><expr pos:start="97:9" pos:end="97:72"><name pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:11">env</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:17">cp15</name><operator pos:start="97:18" pos:end="97:18">.</operator><name pos:start="97:19" pos:end="97:27">cpacr_el1</name></name> <operator pos:start="97:29" pos:end="97:29">=</operator> <call pos:start="97:31" pos:end="97:72"><name pos:start="97:31" pos:end="97:39">deposit64</name><argument_list pos:start="97:40" pos:end="97:72">(<argument pos:start="97:41" pos:end="97:59"><expr pos:start="97:41" pos:end="97:59"><name pos:start="97:41" pos:end="97:59"><name pos:start="97:41" pos:end="97:43">env</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:49">cp15</name><operator pos:start="97:50" pos:end="97:50">.</operator><name pos:start="97:51" pos:end="97:59">cpacr_el1</name></name></expr></argument>, <argument pos:start="97:62" pos:end="97:63"><expr pos:start="97:62" pos:end="97:63"><literal type="number" pos:start="97:62" pos:end="97:63">20</literal></expr></argument>, <argument pos:start="97:66" pos:end="97:66"><expr pos:start="97:66" pos:end="97:66"><literal type="number" pos:start="97:66" pos:end="97:66">4</literal></expr></argument>, <argument pos:start="97:69" pos:end="97:71"><expr pos:start="97:69" pos:end="97:71"><literal type="number" pos:start="97:69" pos:end="97:71">0xf</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="99:1" pos:end="99:6">#<cpp:directive pos:start="99:2" pos:end="99:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></else></if_stmt>



<cpp:if pos:start="105:1" pos:end="105:29">#<cpp:directive pos:start="105:2" pos:end="105:3">if</cpp:directive> <expr pos:start="105:5" pos:end="105:29"><call pos:start="105:5" pos:end="105:29"><name pos:start="105:5" pos:end="105:11">defined</name><argument_list pos:start="105:12" pos:end="105:29">(<argument pos:start="105:13" pos:end="105:28"><expr pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="107:5" pos:end="107:42"><expr pos:start="107:5" pos:end="107:41"><name pos:start="107:5" pos:end="107:22"><name pos:start="107:5" pos:end="107:7">env</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:22">uncached_cpsr</name></name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:41">ARM_CPU_MODE_USR</name></expr>;</expr_stmt>

    <comment type="block" pos:start="109:5" pos:end="109:61">/* For user mode we must enable access to coprocessors */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:44"><expr pos:start="111:5" pos:end="111:43"><name pos:start="111:5" pos:end="111:33"><name pos:start="111:5" pos:end="111:7">env</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:12">vfp</name><operator pos:start="111:13" pos:end="111:13">.</operator><name pos:start="111:14" pos:end="111:18">xregs</name><index pos:start="111:19" pos:end="111:33">[<expr pos:start="111:20" pos:end="111:32"><name pos:start="111:20" pos:end="111:32">ARM_VFP_FPEXC</name></expr>]</index></name> <operator pos:start="111:35" pos:end="111:35">=</operator> <literal type="number" pos:start="111:37" pos:end="111:37">1</literal> <operator pos:start="111:39" pos:end="111:40">&lt;&lt;</operator> <literal type="number" pos:start="111:42" pos:end="111:43">30</literal></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="124:0"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:45">(<expr pos:start="113:9" pos:end="113:44"><call pos:start="113:9" pos:end="113:44"><name pos:start="113:9" pos:end="113:19">arm_feature</name><argument_list pos:start="113:20" pos:end="113:44">(<argument pos:start="113:21" pos:end="113:23"><expr pos:start="113:21" pos:end="113:23"><name pos:start="113:21" pos:end="113:23">env</name></expr></argument>, <argument pos:start="113:26" pos:end="113:43"><expr pos:start="113:26" pos:end="113:43"><name pos:start="113:26" pos:end="113:43">ARM_FEATURE_IWMMXT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:47" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:31">

        <expr_stmt pos:start="115:9" pos:end="115:31"><expr pos:start="115:9" pos:end="115:30"><name pos:start="115:9" pos:end="115:26"><name pos:start="115:9" pos:end="115:11">env</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:17">cp15</name><operator pos:start="115:18" pos:end="115:18">.</operator><name pos:start="115:19" pos:end="115:26">c15_cpar</name></name> <operator pos:start="115:28" pos:end="115:28">=</operator> <literal type="number" pos:start="115:30" pos:end="115:30">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="117:7" pos:end="124:0">else if <condition pos:start="117:15" pos:end="117:52">(<expr pos:start="117:16" pos:end="117:51"><call pos:start="117:16" pos:end="117:51"><name pos:start="117:16" pos:end="117:26">arm_feature</name><argument_list pos:start="117:27" pos:end="117:51">(<argument pos:start="117:28" pos:end="117:30"><expr pos:start="117:28" pos:end="117:30"><name pos:start="117:28" pos:end="117:30">env</name></expr></argument>, <argument pos:start="117:33" pos:end="117:50"><expr pos:start="117:33" pos:end="117:50"><name pos:start="117:33" pos:end="117:50">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:54" pos:end="124:0">{<block_content pos:start="119:9" pos:end="119:31">

        <expr_stmt pos:start="119:9" pos:end="119:31"><expr pos:start="119:9" pos:end="119:30"><name pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:11">env</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:17">cp15</name><operator pos:start="119:18" pos:end="119:18">.</operator><name pos:start="119:19" pos:end="119:26">c15_cpar</name></name> <operator pos:start="119:28" pos:end="119:28">=</operator> <literal type="number" pos:start="119:30" pos:end="119:30">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:else pos:start="123:1" pos:end="123:5">#<cpp:directive pos:start="123:2" pos:end="123:5">else</cpp:directive></cpp:else>

    <comment type="block" pos:start="125:5" pos:end="125:45">/* SVC mode with interrupts disabled.  */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:42"><expr pos:start="127:5" pos:end="127:41"><name pos:start="127:5" pos:end="127:22"><name pos:start="127:5" pos:end="127:7">env</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:22">uncached_cpsr</name></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <name pos:start="127:26" pos:end="127:41">ARM_CPU_MODE_SVC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:58"><expr pos:start="129:5" pos:end="129:57"><name pos:start="129:5" pos:end="129:13"><name pos:start="129:5" pos:end="129:7">env</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:13">daif</name></name> <operator pos:start="129:15" pos:end="129:15">=</operator> <name pos:start="129:17" pos:end="129:24">PSTATE_D</name> <operator pos:start="129:26" pos:end="129:26">|</operator> <name pos:start="129:28" pos:end="129:35">PSTATE_A</name> <operator pos:start="129:37" pos:end="129:37">|</operator> <name pos:start="129:39" pos:end="129:46">PSTATE_I</name> <operator pos:start="129:48" pos:end="129:48">|</operator> <name pos:start="129:50" pos:end="129:57">PSTATE_F</name></expr>;</expr_stmt>



    <if_stmt pos:start="133:5" pos:end="211:5"><if pos:start="133:5" pos:end="211:5">if <condition pos:start="133:8" pos:end="133:40">(<expr pos:start="133:9" pos:end="133:39"><call pos:start="133:9" pos:end="133:39"><name pos:start="133:9" pos:end="133:19">arm_feature</name><argument_list pos:start="133:20" pos:end="133:39">(<argument pos:start="133:21" pos:end="133:23"><expr pos:start="133:21" pos:end="133:23"><name pos:start="133:21" pos:end="133:23">env</name></expr></argument>, <argument pos:start="133:26" pos:end="133:38"><expr pos:start="133:26" pos:end="133:38"><name pos:start="133:26" pos:end="133:38">ARM_FEATURE_M</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:42" pos:end="211:5">{<block_content pos:start="135:9" pos:end="209:36">

        <decl_stmt pos:start="135:9" pos:end="135:29"><decl pos:start="135:9" pos:end="135:28"><type pos:start="135:9" pos:end="135:16"><name pos:start="135:9" pos:end="135:16">uint32_t</name></type> <name pos:start="135:18" pos:end="135:28">initial_msp</name></decl>;</decl_stmt> <comment type="block" pos:start="135:31" pos:end="135:51">/* Loaded from 0x0 */</comment>

        <decl_stmt pos:start="137:9" pos:end="137:28"><decl pos:start="137:9" pos:end="137:27"><type pos:start="137:9" pos:end="137:16"><name pos:start="137:9" pos:end="137:16">uint32_t</name></type> <name pos:start="137:18" pos:end="137:27">initial_pc</name></decl>;</decl_stmt> <comment type="block" pos:start="137:30" pos:end="137:50">/* Loaded from 0x4 */</comment>

        <decl_stmt pos:start="139:9" pos:end="139:21"><decl pos:start="139:9" pos:end="139:20"><type pos:start="139:9" pos:end="139:17"><name pos:start="139:9" pos:end="139:15">uint8_t</name> <modifier pos:start="139:17" pos:end="139:17">*</modifier></type><name pos:start="139:18" pos:end="139:20">rom</name></decl>;</decl_stmt>



        <if_stmt pos:start="143:9" pos:end="147:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:53">(<expr pos:start="143:13" pos:end="143:52"><call pos:start="143:13" pos:end="143:52"><name pos:start="143:13" pos:end="143:23">arm_feature</name><argument_list pos:start="143:24" pos:end="143:52">(<argument pos:start="143:25" pos:end="143:27"><expr pos:start="143:25" pos:end="143:27"><name pos:start="143:25" pos:end="143:27">env</name></expr></argument>, <argument pos:start="143:30" pos:end="143:51"><expr pos:start="143:30" pos:end="143:51"><name pos:start="143:30" pos:end="143:51">ARM_FEATURE_M_SECURITY</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:55" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:35">

            <expr_stmt pos:start="145:13" pos:end="145:35"><expr pos:start="145:13" pos:end="145:34"><name pos:start="145:13" pos:end="145:27"><name pos:start="145:13" pos:end="145:15">env</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:20">v7m</name><operator pos:start="145:21" pos:end="145:21">.</operator><name pos:start="145:22" pos:end="145:27">secure</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <name pos:start="145:31" pos:end="145:34">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="151:9" pos:end="157:11">/* The reset value of this bit is IMPDEF, but ARM recommends

         * that it resets to 1, so QEMU always does that rather than making

         * it dependent on CPU model.

         */</comment>

        <expr_stmt pos:start="159:9" pos:end="159:47"><expr pos:start="159:9" pos:end="159:46"><name pos:start="159:9" pos:end="159:20"><name pos:start="159:9" pos:end="159:11">env</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:16">v7m</name><operator pos:start="159:17" pos:end="159:17">.</operator><name pos:start="159:18" pos:end="159:20">ccr</name></name> <operator pos:start="159:22" pos:end="159:22">=</operator> <name pos:start="159:24" pos:end="159:46">R_V7M_CCR_STKALIGN_MASK</name></expr>;</expr_stmt>



        <comment type="block" pos:start="163:9" pos:end="163:70">/* Unlike A/R profile, M profile defines the reset LR value */</comment>

        <expr_stmt pos:start="165:9" pos:end="165:35"><expr pos:start="165:9" pos:end="165:34"><name pos:start="165:9" pos:end="165:21"><name pos:start="165:9" pos:end="165:11">env</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:17">regs</name><index pos:start="165:18" pos:end="165:21">[<expr pos:start="165:19" pos:end="165:20"><literal type="number" pos:start="165:19" pos:end="165:20">14</literal></expr>]</index></name> <operator pos:start="165:23" pos:end="165:23">=</operator> <literal type="number" pos:start="165:25" pos:end="165:34">0xffffffff</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="169:9" pos:end="169:75">/* Load the initial SP and PC from the vector table at address 0 */</comment>

        <expr_stmt pos:start="171:9" pos:end="171:25"><expr pos:start="171:9" pos:end="171:24"><name pos:start="171:9" pos:end="171:11">rom</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <call pos:start="171:15" pos:end="171:24"><name pos:start="171:15" pos:end="171:21">rom_ptr</name><argument_list pos:start="171:22" pos:end="171:24">(<argument pos:start="171:23" pos:end="171:23"><expr pos:start="171:23" pos:end="171:23"><literal type="number" pos:start="171:23" pos:end="171:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="201:9"><if pos:start="173:9" pos:end="185:9">if <condition pos:start="173:12" pos:end="173:16">(<expr pos:start="173:13" pos:end="173:15"><name pos:start="173:13" pos:end="173:15">rom</name></expr>)</condition> <block pos:start="173:18" pos:end="185:9">{<block_content pos:start="181:13" pos:end="183:40">

            <comment type="block" pos:start="175:13" pos:end="179:15">/* Address zero is covered by ROM which hasn't yet been

             * copied into physical memory.

             */</comment>

            <expr_stmt pos:start="181:13" pos:end="181:37"><expr pos:start="181:13" pos:end="181:36"><name pos:start="181:13" pos:end="181:23">initial_msp</name> <operator pos:start="181:25" pos:end="181:25">=</operator> <call pos:start="181:27" pos:end="181:36"><name pos:start="181:27" pos:end="181:31">ldl_p</name><argument_list pos:start="181:32" pos:end="181:36">(<argument pos:start="181:33" pos:end="181:35"><expr pos:start="181:33" pos:end="181:35"><name pos:start="181:33" pos:end="181:35">rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:40"><expr pos:start="183:13" pos:end="183:39"><name pos:start="183:13" pos:end="183:22">initial_pc</name> <operator pos:start="183:24" pos:end="183:24">=</operator> <call pos:start="183:26" pos:end="183:39"><name pos:start="183:26" pos:end="183:30">ldl_p</name><argument_list pos:start="183:31" pos:end="183:39">(<argument pos:start="183:32" pos:end="183:38"><expr pos:start="183:32" pos:end="183:38"><name pos:start="183:32" pos:end="183:34">rom</name> <operator pos:start="183:36" pos:end="183:36">+</operator> <literal type="number" pos:start="183:38" pos:end="183:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="185:11" pos:end="201:9">else <block pos:start="185:16" pos:end="201:9">{<block_content pos:start="197:13" pos:end="199:44">

            <comment type="block" pos:start="187:13" pos:end="195:15">/* Address zero not covered by a ROM blob, or the ROM blob

             * is in non-modifiable memory and this is a second reset after

             * it got copied into memory. In the latter case, rom_ptr

             * will return a NULL pointer and we should use ldl_phys instead.

             */</comment>

            <expr_stmt pos:start="197:13" pos:end="197:45"><expr pos:start="197:13" pos:end="197:44"><name pos:start="197:13" pos:end="197:23">initial_msp</name> <operator pos:start="197:25" pos:end="197:25">=</operator> <call pos:start="197:27" pos:end="197:44"><name pos:start="197:27" pos:end="197:34">ldl_phys</name><argument_list pos:start="197:35" pos:end="197:44">(<argument pos:start="197:36" pos:end="197:40"><expr pos:start="197:36" pos:end="197:40"><name pos:start="197:36" pos:end="197:40"><name pos:start="197:36" pos:end="197:36">s</name><operator pos:start="197:37" pos:end="197:38">-&gt;</operator><name pos:start="197:39" pos:end="197:40">as</name></name></expr></argument>, <argument pos:start="197:43" pos:end="197:43"><expr pos:start="197:43" pos:end="197:43"><literal type="number" pos:start="197:43" pos:end="197:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:44"><expr pos:start="199:13" pos:end="199:43"><name pos:start="199:13" pos:end="199:22">initial_pc</name> <operator pos:start="199:24" pos:end="199:24">=</operator> <call pos:start="199:26" pos:end="199:43"><name pos:start="199:26" pos:end="199:33">ldl_phys</name><argument_list pos:start="199:34" pos:end="199:43">(<argument pos:start="199:35" pos:end="199:39"><expr pos:start="199:35" pos:end="199:39"><name pos:start="199:35" pos:end="199:39"><name pos:start="199:35" pos:end="199:35">s</name><operator pos:start="199:36" pos:end="199:37">-&gt;</operator><name pos:start="199:38" pos:end="199:39">as</name></name></expr></argument>, <argument pos:start="199:42" pos:end="199:42"><expr pos:start="199:42" pos:end="199:42"><literal type="number" pos:start="199:42" pos:end="199:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="205:9" pos:end="205:49"><expr pos:start="205:9" pos:end="205:48"><name pos:start="205:9" pos:end="205:21"><name pos:start="205:9" pos:end="205:11">env</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:17">regs</name><index pos:start="205:18" pos:end="205:21">[<expr pos:start="205:19" pos:end="205:20"><literal type="number" pos:start="205:19" pos:end="205:20">13</literal></expr>]</index></name> <operator pos:start="205:23" pos:end="205:23">=</operator> <name pos:start="205:25" pos:end="205:35">initial_msp</name> <operator pos:start="205:37" pos:end="205:37">&amp;</operator> <literal type="number" pos:start="205:39" pos:end="205:48">0xFFFFFFFC</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:40"><expr pos:start="207:9" pos:end="207:39"><name pos:start="207:9" pos:end="207:21"><name pos:start="207:9" pos:end="207:11">env</name><operator pos:start="207:12" pos:end="207:13">-&gt;</operator><name pos:start="207:14" pos:end="207:17">regs</name><index pos:start="207:18" pos:end="207:21">[<expr pos:start="207:19" pos:end="207:20"><literal type="number" pos:start="207:19" pos:end="207:20">15</literal></expr>]</index></name> <operator pos:start="207:23" pos:end="207:23">=</operator> <name pos:start="207:25" pos:end="207:34">initial_pc</name> <operator pos:start="207:36" pos:end="207:36">&amp;</operator> <operator pos:start="207:38" pos:end="207:38">~</operator><literal type="number" pos:start="207:39" pos:end="207:39">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:36"><expr pos:start="209:9" pos:end="209:35"><name pos:start="209:9" pos:end="209:18"><name pos:start="209:9" pos:end="209:11">env</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:18">thumb</name></name> <operator pos:start="209:20" pos:end="209:20">=</operator> <name pos:start="209:22" pos:end="209:31">initial_pc</name> <operator pos:start="209:33" pos:end="209:33">&amp;</operator> <literal type="number" pos:start="209:35" pos:end="209:35">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="215:5" pos:end="221:7">/* AArch32 has a hard highvec setting of 0xFFFF0000.  If we are currently

     * executing as AArch32 then check if highvecs are enabled and

     * adjust the PC accordingly.

     */</comment>

    <if_stmt pos:start="223:5" pos:end="227:5"><if pos:start="223:5" pos:end="227:5">if <condition pos:start="223:8" pos:end="223:57">(<expr pos:start="223:9" pos:end="223:56"><call pos:start="223:9" pos:end="223:46"><name pos:start="223:9" pos:end="223:34">A32_BANKED_CURRENT_REG_GET</name><argument_list pos:start="223:35" pos:end="223:46">(<argument pos:start="223:36" pos:end="223:38"><expr pos:start="223:36" pos:end="223:38"><name pos:start="223:36" pos:end="223:38">env</name></expr></argument>, <argument pos:start="223:41" pos:end="223:45"><expr pos:start="223:41" pos:end="223:45"><name pos:start="223:41" pos:end="223:45">sctlr</name></expr></argument>)</argument_list></call> <operator pos:start="223:48" pos:end="223:48">&amp;</operator> <name pos:start="223:50" pos:end="223:56">SCTLR_V</name></expr>)</condition> <block pos:start="223:59" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:35">

        <expr_stmt pos:start="225:9" pos:end="225:35"><expr pos:start="225:9" pos:end="225:34"><name pos:start="225:9" pos:end="225:21"><name pos:start="225:9" pos:end="225:11">env</name><operator pos:start="225:12" pos:end="225:13">-&gt;</operator><name pos:start="225:14" pos:end="225:17">regs</name><index pos:start="225:18" pos:end="225:21">[<expr pos:start="225:19" pos:end="225:20"><literal type="number" pos:start="225:19" pos:end="225:20">15</literal></expr>]</index></name> <operator pos:start="225:23" pos:end="225:23">=</operator> <literal type="number" pos:start="225:25" pos:end="225:34">0xFFFF0000</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="231:5" pos:end="234:0"><expr pos:start="231:5" pos:end="231:37"><name pos:start="231:5" pos:end="231:33"><name pos:start="231:5" pos:end="231:7">env</name><operator pos:start="231:8" pos:end="231:9">-&gt;</operator><name pos:start="231:10" pos:end="231:12">vfp</name><operator pos:start="231:13" pos:end="231:13">.</operator><name pos:start="231:14" pos:end="231:18">xregs</name><index pos:start="231:19" pos:end="231:33">[<expr pos:start="231:20" pos:end="231:32"><name pos:start="231:20" pos:end="231:32">ARM_VFP_FPEXC</name></expr>]</index></name> <operator pos:start="231:35" pos:end="231:35">=</operator> <literal type="number" pos:start="231:37" pos:end="231:37">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="233:1" pos:end="233:6">#<cpp:directive pos:start="233:2" pos:end="233:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="237:5" pos:end="301:5"><if pos:start="237:5" pos:end="301:5">if <condition pos:start="237:8" pos:end="237:43">(<expr pos:start="237:9" pos:end="237:42"><call pos:start="237:9" pos:end="237:42"><name pos:start="237:9" pos:end="237:19">arm_feature</name><argument_list pos:start="237:20" pos:end="237:42">(<argument pos:start="237:21" pos:end="237:23"><expr pos:start="237:21" pos:end="237:23"><name pos:start="237:21" pos:end="237:23">env</name></expr></argument>, <argument pos:start="237:26" pos:end="237:41"><expr pos:start="237:26" pos:end="237:41"><name pos:start="237:26" pos:end="237:41">ARM_FEATURE_PMSA</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="237:45" pos:end="301:5">{<block_content pos:start="239:9" pos:end="299:39">

        <if_stmt pos:start="239:9" pos:end="287:9"><if pos:start="239:9" pos:end="287:9">if <condition pos:start="239:12" pos:end="239:36">(<expr pos:start="239:13" pos:end="239:35"><name pos:start="239:13" pos:end="239:31"><name pos:start="239:13" pos:end="239:15">cpu</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:31">pmsav7_dregion</name></name> <operator pos:start="239:33" pos:end="239:33">&gt;</operator> <literal type="number" pos:start="239:35" pos:end="239:35">0</literal></expr>)</condition> <block pos:start="239:38" pos:end="287:9">{<block_content pos:start="241:13" pos:end="285:13">

            <if_stmt pos:start="241:13" pos:end="285:13"><if pos:start="241:13" pos:end="271:13">if <condition pos:start="241:16" pos:end="241:49">(<expr pos:start="241:17" pos:end="241:48"><call pos:start="241:17" pos:end="241:48"><name pos:start="241:17" pos:end="241:27">arm_feature</name><argument_list pos:start="241:28" pos:end="241:48">(<argument pos:start="241:29" pos:end="241:31"><expr pos:start="241:29" pos:end="241:31"><name pos:start="241:29" pos:end="241:31">env</name></expr></argument>, <argument pos:start="241:34" pos:end="241:47"><expr pos:start="241:34" pos:end="241:47"><name pos:start="241:34" pos:end="241:47">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="241:51" pos:end="271:13">{<block_content pos:start="243:17" pos:end="269:17">

                <expr_stmt pos:start="243:17" pos:end="247:46"><expr pos:start="243:17" pos:end="247:45"><call pos:start="243:17" pos:end="247:45"><name pos:start="243:17" pos:end="243:22">memset</name><argument_list pos:start="243:23" pos:end="247:45">(<argument pos:start="243:24" pos:end="243:49"><expr pos:start="243:24" pos:end="243:49"><name pos:start="243:24" pos:end="243:49"><name pos:start="243:24" pos:end="243:26">env</name><operator pos:start="243:27" pos:end="243:28">-&gt;</operator><name pos:start="243:29" pos:end="243:34">pmsav8</name><operator pos:start="243:35" pos:end="243:35">.</operator><name pos:start="243:36" pos:end="243:39">rbar</name><index pos:start="243:40" pos:end="243:49">[<expr pos:start="243:41" pos:end="243:48"><name pos:start="243:41" pos:end="243:48">M_REG_NS</name></expr>]</index></name></expr></argument>, <argument pos:start="243:52" pos:end="243:52"><expr pos:start="243:52" pos:end="243:52"><literal type="number" pos:start="243:52" pos:end="243:52">0</literal></expr></argument>,

                       <argument pos:start="245:24" pos:end="247:44"><expr pos:start="245:24" pos:end="247:44"><sizeof pos:start="245:24" pos:end="245:58">sizeof<argument_list pos:start="245:30" pos:end="245:58">(<argument pos:start="245:31" pos:end="245:57"><expr pos:start="245:31" pos:end="245:57"><operator pos:start="245:31" pos:end="245:31">*</operator><name pos:start="245:32" pos:end="245:57"><name pos:start="245:32" pos:end="245:34">env</name><operator pos:start="245:35" pos:end="245:36">-&gt;</operator><name pos:start="245:37" pos:end="245:42">pmsav8</name><operator pos:start="245:43" pos:end="245:43">.</operator><name pos:start="245:44" pos:end="245:47">rbar</name><index pos:start="245:48" pos:end="245:57">[<expr pos:start="245:49" pos:end="245:56"><name pos:start="245:49" pos:end="245:56">M_REG_NS</name></expr>]</index></name></expr></argument>)</argument_list></sizeof>

                       <operator pos:start="247:24" pos:end="247:24">*</operator> <name pos:start="247:26" pos:end="247:44"><name pos:start="247:26" pos:end="247:28">cpu</name><operator pos:start="247:29" pos:end="247:30">-&gt;</operator><name pos:start="247:31" pos:end="247:44">pmsav7_dregion</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="253:46"><expr pos:start="249:17" pos:end="253:45"><call pos:start="249:17" pos:end="253:45"><name pos:start="249:17" pos:end="249:22">memset</name><argument_list pos:start="249:23" pos:end="253:45">(<argument pos:start="249:24" pos:end="249:49"><expr pos:start="249:24" pos:end="249:49"><name pos:start="249:24" pos:end="249:49"><name pos:start="249:24" pos:end="249:26">env</name><operator pos:start="249:27" pos:end="249:28">-&gt;</operator><name pos:start="249:29" pos:end="249:34">pmsav8</name><operator pos:start="249:35" pos:end="249:35">.</operator><name pos:start="249:36" pos:end="249:39">rlar</name><index pos:start="249:40" pos:end="249:49">[<expr pos:start="249:41" pos:end="249:48"><name pos:start="249:41" pos:end="249:48">M_REG_NS</name></expr>]</index></name></expr></argument>, <argument pos:start="249:52" pos:end="249:52"><expr pos:start="249:52" pos:end="249:52"><literal type="number" pos:start="249:52" pos:end="249:52">0</literal></expr></argument>,

                       <argument pos:start="251:24" pos:end="253:44"><expr pos:start="251:24" pos:end="253:44"><sizeof pos:start="251:24" pos:end="251:58">sizeof<argument_list pos:start="251:30" pos:end="251:58">(<argument pos:start="251:31" pos:end="251:57"><expr pos:start="251:31" pos:end="251:57"><operator pos:start="251:31" pos:end="251:31">*</operator><name pos:start="251:32" pos:end="251:57"><name pos:start="251:32" pos:end="251:34">env</name><operator pos:start="251:35" pos:end="251:36">-&gt;</operator><name pos:start="251:37" pos:end="251:42">pmsav8</name><operator pos:start="251:43" pos:end="251:43">.</operator><name pos:start="251:44" pos:end="251:47">rlar</name><index pos:start="251:48" pos:end="251:57">[<expr pos:start="251:49" pos:end="251:56"><name pos:start="251:49" pos:end="251:56">M_REG_NS</name></expr>]</index></name></expr></argument>)</argument_list></sizeof>

                       <operator pos:start="253:24" pos:end="253:24">*</operator> <name pos:start="253:26" pos:end="253:44"><name pos:start="253:26" pos:end="253:28">cpu</name><operator pos:start="253:29" pos:end="253:30">-&gt;</operator><name pos:start="253:31" pos:end="253:44">pmsav7_dregion</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="255:17" pos:end="269:17"><if pos:start="255:17" pos:end="269:17">if <condition pos:start="255:20" pos:end="255:61">(<expr pos:start="255:21" pos:end="255:60"><call pos:start="255:21" pos:end="255:60"><name pos:start="255:21" pos:end="255:31">arm_feature</name><argument_list pos:start="255:32" pos:end="255:60">(<argument pos:start="255:33" pos:end="255:35"><expr pos:start="255:33" pos:end="255:35"><name pos:start="255:33" pos:end="255:35">env</name></expr></argument>, <argument pos:start="255:38" pos:end="255:59"><expr pos:start="255:38" pos:end="255:59"><name pos:start="255:38" pos:end="255:59">ARM_FEATURE_M_SECURITY</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="255:63" pos:end="269:17">{<block_content pos:start="257:21" pos:end="267:50">

                    <expr_stmt pos:start="257:21" pos:end="261:50"><expr pos:start="257:21" pos:end="261:49"><call pos:start="257:21" pos:end="261:49"><name pos:start="257:21" pos:end="257:26">memset</name><argument_list pos:start="257:27" pos:end="261:49">(<argument pos:start="257:28" pos:end="257:52"><expr pos:start="257:28" pos:end="257:52"><name pos:start="257:28" pos:end="257:52"><name pos:start="257:28" pos:end="257:30">env</name><operator pos:start="257:31" pos:end="257:32">-&gt;</operator><name pos:start="257:33" pos:end="257:38">pmsav8</name><operator pos:start="257:39" pos:end="257:39">.</operator><name pos:start="257:40" pos:end="257:43">rbar</name><index pos:start="257:44" pos:end="257:52">[<expr pos:start="257:45" pos:end="257:51"><name pos:start="257:45" pos:end="257:51">M_REG_S</name></expr>]</index></name></expr></argument>, <argument pos:start="257:55" pos:end="257:55"><expr pos:start="257:55" pos:end="257:55"><literal type="number" pos:start="257:55" pos:end="257:55">0</literal></expr></argument>,

                           <argument pos:start="259:28" pos:end="261:48"><expr pos:start="259:28" pos:end="261:48"><sizeof pos:start="259:28" pos:end="259:61">sizeof<argument_list pos:start="259:34" pos:end="259:61">(<argument pos:start="259:35" pos:end="259:60"><expr pos:start="259:35" pos:end="259:60"><operator pos:start="259:35" pos:end="259:35">*</operator><name pos:start="259:36" pos:end="259:60"><name pos:start="259:36" pos:end="259:38">env</name><operator pos:start="259:39" pos:end="259:40">-&gt;</operator><name pos:start="259:41" pos:end="259:46">pmsav8</name><operator pos:start="259:47" pos:end="259:47">.</operator><name pos:start="259:48" pos:end="259:51">rbar</name><index pos:start="259:52" pos:end="259:60">[<expr pos:start="259:53" pos:end="259:59"><name pos:start="259:53" pos:end="259:59">M_REG_S</name></expr>]</index></name></expr></argument>)</argument_list></sizeof>

                           <operator pos:start="261:28" pos:end="261:28">*</operator> <name pos:start="261:30" pos:end="261:48"><name pos:start="261:30" pos:end="261:32">cpu</name><operator pos:start="261:33" pos:end="261:34">-&gt;</operator><name pos:start="261:35" pos:end="261:48">pmsav7_dregion</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="263:21" pos:end="267:50"><expr pos:start="263:21" pos:end="267:49"><call pos:start="263:21" pos:end="267:49"><name pos:start="263:21" pos:end="263:26">memset</name><argument_list pos:start="263:27" pos:end="267:49">(<argument pos:start="263:28" pos:end="263:52"><expr pos:start="263:28" pos:end="263:52"><name pos:start="263:28" pos:end="263:52"><name pos:start="263:28" pos:end="263:30">env</name><operator pos:start="263:31" pos:end="263:32">-&gt;</operator><name pos:start="263:33" pos:end="263:38">pmsav8</name><operator pos:start="263:39" pos:end="263:39">.</operator><name pos:start="263:40" pos:end="263:43">rlar</name><index pos:start="263:44" pos:end="263:52">[<expr pos:start="263:45" pos:end="263:51"><name pos:start="263:45" pos:end="263:51">M_REG_S</name></expr>]</index></name></expr></argument>, <argument pos:start="263:55" pos:end="263:55"><expr pos:start="263:55" pos:end="263:55"><literal type="number" pos:start="263:55" pos:end="263:55">0</literal></expr></argument>,

                           <argument pos:start="265:28" pos:end="267:48"><expr pos:start="265:28" pos:end="267:48"><sizeof pos:start="265:28" pos:end="265:61">sizeof<argument_list pos:start="265:34" pos:end="265:61">(<argument pos:start="265:35" pos:end="265:60"><expr pos:start="265:35" pos:end="265:60"><operator pos:start="265:35" pos:end="265:35">*</operator><name pos:start="265:36" pos:end="265:60"><name pos:start="265:36" pos:end="265:38">env</name><operator pos:start="265:39" pos:end="265:40">-&gt;</operator><name pos:start="265:41" pos:end="265:46">pmsav8</name><operator pos:start="265:47" pos:end="265:47">.</operator><name pos:start="265:48" pos:end="265:51">rlar</name><index pos:start="265:52" pos:end="265:60">[<expr pos:start="265:53" pos:end="265:59"><name pos:start="265:53" pos:end="265:59">M_REG_S</name></expr>]</index></name></expr></argument>)</argument_list></sizeof>

                           <operator pos:start="267:28" pos:end="267:28">*</operator> <name pos:start="267:30" pos:end="267:48"><name pos:start="267:30" pos:end="267:32">cpu</name><operator pos:start="267:33" pos:end="267:34">-&gt;</operator><name pos:start="267:35" pos:end="267:48">pmsav7_dregion</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="271:15" pos:end="285:13">else if <condition pos:start="271:23" pos:end="271:56">(<expr pos:start="271:24" pos:end="271:55"><call pos:start="271:24" pos:end="271:55"><name pos:start="271:24" pos:end="271:34">arm_feature</name><argument_list pos:start="271:35" pos:end="271:55">(<argument pos:start="271:36" pos:end="271:38"><expr pos:start="271:36" pos:end="271:38"><name pos:start="271:36" pos:end="271:38">env</name></expr></argument>, <argument pos:start="271:41" pos:end="271:54"><expr pos:start="271:41" pos:end="271:54"><name pos:start="271:41" pos:end="271:54">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="271:58" pos:end="285:13">{<block_content pos:start="273:17" pos:end="283:73">

                <expr_stmt pos:start="273:17" pos:end="275:73"><expr pos:start="273:17" pos:end="275:72"><call pos:start="273:17" pos:end="275:72"><name pos:start="273:17" pos:end="273:22">memset</name><argument_list pos:start="273:23" pos:end="275:72">(<argument pos:start="273:24" pos:end="273:40"><expr pos:start="273:24" pos:end="273:40"><name pos:start="273:24" pos:end="273:40"><name pos:start="273:24" pos:end="273:26">env</name><operator pos:start="273:27" pos:end="273:28">-&gt;</operator><name pos:start="273:29" pos:end="273:34">pmsav7</name><operator pos:start="273:35" pos:end="273:35">.</operator><name pos:start="273:36" pos:end="273:40">drbar</name></name></expr></argument>, <argument pos:start="273:43" pos:end="273:43"><expr pos:start="273:43" pos:end="273:43"><literal type="number" pos:start="273:43" pos:end="273:43">0</literal></expr></argument>,

                       <argument pos:start="275:24" pos:end="275:71"><expr pos:start="275:24" pos:end="275:71"><sizeof pos:start="275:24" pos:end="275:49">sizeof<argument_list pos:start="275:30" pos:end="275:49">(<argument pos:start="275:31" pos:end="275:48"><expr pos:start="275:31" pos:end="275:48"><operator pos:start="275:31" pos:end="275:31">*</operator><name pos:start="275:32" pos:end="275:48"><name pos:start="275:32" pos:end="275:34">env</name><operator pos:start="275:35" pos:end="275:36">-&gt;</operator><name pos:start="275:37" pos:end="275:42">pmsav7</name><operator pos:start="275:43" pos:end="275:43">.</operator><name pos:start="275:44" pos:end="275:48">drbar</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="275:51" pos:end="275:51">*</operator> <name pos:start="275:53" pos:end="275:71"><name pos:start="275:53" pos:end="275:55">cpu</name><operator pos:start="275:56" pos:end="275:57">-&gt;</operator><name pos:start="275:58" pos:end="275:71">pmsav7_dregion</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="279:72"><expr pos:start="277:17" pos:end="279:71"><call pos:start="277:17" pos:end="279:71"><name pos:start="277:17" pos:end="277:22">memset</name><argument_list pos:start="277:23" pos:end="279:71">(<argument pos:start="277:24" pos:end="277:39"><expr pos:start="277:24" pos:end="277:39"><name pos:start="277:24" pos:end="277:39"><name pos:start="277:24" pos:end="277:26">env</name><operator pos:start="277:27" pos:end="277:28">-&gt;</operator><name pos:start="277:29" pos:end="277:34">pmsav7</name><operator pos:start="277:35" pos:end="277:35">.</operator><name pos:start="277:36" pos:end="277:39">drsr</name></name></expr></argument>, <argument pos:start="277:42" pos:end="277:42"><expr pos:start="277:42" pos:end="277:42"><literal type="number" pos:start="277:42" pos:end="277:42">0</literal></expr></argument>,

                       <argument pos:start="279:24" pos:end="279:70"><expr pos:start="279:24" pos:end="279:70"><sizeof pos:start="279:24" pos:end="279:48">sizeof<argument_list pos:start="279:30" pos:end="279:48">(<argument pos:start="279:31" pos:end="279:47"><expr pos:start="279:31" pos:end="279:47"><operator pos:start="279:31" pos:end="279:31">*</operator><name pos:start="279:32" pos:end="279:47"><name pos:start="279:32" pos:end="279:34">env</name><operator pos:start="279:35" pos:end="279:36">-&gt;</operator><name pos:start="279:37" pos:end="279:42">pmsav7</name><operator pos:start="279:43" pos:end="279:43">.</operator><name pos:start="279:44" pos:end="279:47">drsr</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="279:50" pos:end="279:50">*</operator> <name pos:start="279:52" pos:end="279:70"><name pos:start="279:52" pos:end="279:54">cpu</name><operator pos:start="279:55" pos:end="279:56">-&gt;</operator><name pos:start="279:57" pos:end="279:70">pmsav7_dregion</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="281:17" pos:end="283:73"><expr pos:start="281:17" pos:end="283:72"><call pos:start="281:17" pos:end="283:72"><name pos:start="281:17" pos:end="281:22">memset</name><argument_list pos:start="281:23" pos:end="283:72">(<argument pos:start="281:24" pos:end="281:40"><expr pos:start="281:24" pos:end="281:40"><name pos:start="281:24" pos:end="281:40"><name pos:start="281:24" pos:end="281:26">env</name><operator pos:start="281:27" pos:end="281:28">-&gt;</operator><name pos:start="281:29" pos:end="281:34">pmsav7</name><operator pos:start="281:35" pos:end="281:35">.</operator><name pos:start="281:36" pos:end="281:40">dracr</name></name></expr></argument>, <argument pos:start="281:43" pos:end="281:43"><expr pos:start="281:43" pos:end="281:43"><literal type="number" pos:start="281:43" pos:end="281:43">0</literal></expr></argument>,

                       <argument pos:start="283:24" pos:end="283:71"><expr pos:start="283:24" pos:end="283:71"><sizeof pos:start="283:24" pos:end="283:49">sizeof<argument_list pos:start="283:30" pos:end="283:49">(<argument pos:start="283:31" pos:end="283:48"><expr pos:start="283:31" pos:end="283:48"><operator pos:start="283:31" pos:end="283:31">*</operator><name pos:start="283:32" pos:end="283:48"><name pos:start="283:32" pos:end="283:34">env</name><operator pos:start="283:35" pos:end="283:36">-&gt;</operator><name pos:start="283:37" pos:end="283:42">pmsav7</name><operator pos:start="283:43" pos:end="283:43">.</operator><name pos:start="283:44" pos:end="283:48">dracr</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="283:51" pos:end="283:51">*</operator> <name pos:start="283:53" pos:end="283:71"><name pos:start="283:53" pos:end="283:55">cpu</name><operator pos:start="283:56" pos:end="283:57">-&gt;</operator><name pos:start="283:58" pos:end="283:71">pmsav7_dregion</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:38"><expr pos:start="289:9" pos:end="289:37"><name pos:start="289:9" pos:end="289:33"><name pos:start="289:9" pos:end="289:11">env</name><operator pos:start="289:12" pos:end="289:13">-&gt;</operator><name pos:start="289:14" pos:end="289:19">pmsav7</name><operator pos:start="289:20" pos:end="289:20">.</operator><name pos:start="289:21" pos:end="289:23">rnr</name><index pos:start="289:24" pos:end="289:33">[<expr pos:start="289:25" pos:end="289:32"><name pos:start="289:25" pos:end="289:32">M_REG_NS</name></expr>]</index></name> <operator pos:start="289:35" pos:end="289:35">=</operator> <literal type="number" pos:start="289:37" pos:end="289:37">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:37"><expr pos:start="291:9" pos:end="291:36"><name pos:start="291:9" pos:end="291:32"><name pos:start="291:9" pos:end="291:11">env</name><operator pos:start="291:12" pos:end="291:13">-&gt;</operator><name pos:start="291:14" pos:end="291:19">pmsav7</name><operator pos:start="291:20" pos:end="291:20">.</operator><name pos:start="291:21" pos:end="291:23">rnr</name><index pos:start="291:24" pos:end="291:32">[<expr pos:start="291:25" pos:end="291:31"><name pos:start="291:25" pos:end="291:31">M_REG_S</name></expr>]</index></name> <operator pos:start="291:34" pos:end="291:34">=</operator> <literal type="number" pos:start="291:36" pos:end="291:36">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:40"><expr pos:start="293:9" pos:end="293:39"><name pos:start="293:9" pos:end="293:35"><name pos:start="293:9" pos:end="293:11">env</name><operator pos:start="293:12" pos:end="293:13">-&gt;</operator><name pos:start="293:14" pos:end="293:19">pmsav8</name><operator pos:start="293:20" pos:end="293:20">.</operator><name pos:start="293:21" pos:end="293:25">mair0</name><index pos:start="293:26" pos:end="293:35">[<expr pos:start="293:27" pos:end="293:34"><name pos:start="293:27" pos:end="293:34">M_REG_NS</name></expr>]</index></name> <operator pos:start="293:37" pos:end="293:37">=</operator> <literal type="number" pos:start="293:39" pos:end="293:39">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="295:9" pos:end="295:39"><expr pos:start="295:9" pos:end="295:38"><name pos:start="295:9" pos:end="295:34"><name pos:start="295:9" pos:end="295:11">env</name><operator pos:start="295:12" pos:end="295:13">-&gt;</operator><name pos:start="295:14" pos:end="295:19">pmsav8</name><operator pos:start="295:20" pos:end="295:20">.</operator><name pos:start="295:21" pos:end="295:25">mair0</name><index pos:start="295:26" pos:end="295:34">[<expr pos:start="295:27" pos:end="295:33"><name pos:start="295:27" pos:end="295:33">M_REG_S</name></expr>]</index></name> <operator pos:start="295:36" pos:end="295:36">=</operator> <literal type="number" pos:start="295:38" pos:end="295:38">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:40"><expr pos:start="297:9" pos:end="297:39"><name pos:start="297:9" pos:end="297:35"><name pos:start="297:9" pos:end="297:11">env</name><operator pos:start="297:12" pos:end="297:13">-&gt;</operator><name pos:start="297:14" pos:end="297:19">pmsav8</name><operator pos:start="297:20" pos:end="297:20">.</operator><name pos:start="297:21" pos:end="297:25">mair1</name><index pos:start="297:26" pos:end="297:35">[<expr pos:start="297:27" pos:end="297:34"><name pos:start="297:27" pos:end="297:34">M_REG_NS</name></expr>]</index></name> <operator pos:start="297:37" pos:end="297:37">=</operator> <literal type="number" pos:start="297:39" pos:end="297:39">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:39"><expr pos:start="299:9" pos:end="299:38"><name pos:start="299:9" pos:end="299:34"><name pos:start="299:9" pos:end="299:11">env</name><operator pos:start="299:12" pos:end="299:13">-&gt;</operator><name pos:start="299:14" pos:end="299:19">pmsav8</name><operator pos:start="299:20" pos:end="299:20">.</operator><name pos:start="299:21" pos:end="299:25">mair1</name><index pos:start="299:26" pos:end="299:34">[<expr pos:start="299:27" pos:end="299:33"><name pos:start="299:27" pos:end="299:33">M_REG_S</name></expr>]</index></name> <operator pos:start="299:36" pos:end="299:36">=</operator> <literal type="number" pos:start="299:38" pos:end="299:38">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="305:5" pos:end="305:55"><expr pos:start="305:5" pos:end="305:54"><call pos:start="305:5" pos:end="305:54"><name pos:start="305:5" pos:end="305:21">set_flush_to_zero</name><argument_list pos:start="305:22" pos:end="305:54">(<argument pos:start="305:23" pos:end="305:23"><expr pos:start="305:23" pos:end="305:23"><literal type="number" pos:start="305:23" pos:end="305:23">1</literal></expr></argument>, <argument pos:start="305:26" pos:end="305:53"><expr pos:start="305:26" pos:end="305:53"><operator pos:start="305:26" pos:end="305:26">&amp;</operator><name pos:start="305:27" pos:end="305:53"><name pos:start="305:27" pos:end="305:29">env</name><operator pos:start="305:30" pos:end="305:31">-&gt;</operator><name pos:start="305:32" pos:end="305:34">vfp</name><operator pos:start="305:35" pos:end="305:35">.</operator><name pos:start="305:36" pos:end="305:53">standard_fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:62"><expr pos:start="307:5" pos:end="307:61"><call pos:start="307:5" pos:end="307:61"><name pos:start="307:5" pos:end="307:28">set_flush_inputs_to_zero</name><argument_list pos:start="307:29" pos:end="307:61">(<argument pos:start="307:30" pos:end="307:30"><expr pos:start="307:30" pos:end="307:30"><literal type="number" pos:start="307:30" pos:end="307:30">1</literal></expr></argument>, <argument pos:start="307:33" pos:end="307:60"><expr pos:start="307:33" pos:end="307:60"><operator pos:start="307:33" pos:end="307:33">&amp;</operator><name pos:start="307:34" pos:end="307:60"><name pos:start="307:34" pos:end="307:36">env</name><operator pos:start="307:37" pos:end="307:38">-&gt;</operator><name pos:start="307:39" pos:end="307:41">vfp</name><operator pos:start="307:42" pos:end="307:42">.</operator><name pos:start="307:43" pos:end="307:60">standard_fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:58"><expr pos:start="309:5" pos:end="309:57"><call pos:start="309:5" pos:end="309:57"><name pos:start="309:5" pos:end="309:24">set_default_nan_mode</name><argument_list pos:start="309:25" pos:end="309:57">(<argument pos:start="309:26" pos:end="309:26"><expr pos:start="309:26" pos:end="309:26"><literal type="number" pos:start="309:26" pos:end="309:26">1</literal></expr></argument>, <argument pos:start="309:29" pos:end="309:56"><expr pos:start="309:29" pos:end="309:56"><operator pos:start="309:29" pos:end="309:29">&amp;</operator><name pos:start="309:30" pos:end="309:56"><name pos:start="309:30" pos:end="309:32">env</name><operator pos:start="309:33" pos:end="309:34">-&gt;</operator><name pos:start="309:35" pos:end="309:37">vfp</name><operator pos:start="309:38" pos:end="309:38">.</operator><name pos:start="309:39" pos:end="309:56">standard_fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="311:5" pos:end="313:51"><expr pos:start="311:5" pos:end="313:50"><call pos:start="311:5" pos:end="313:50"><name pos:start="311:5" pos:end="311:29">set_float_detect_tininess</name><argument_list pos:start="311:30" pos:end="313:50">(<argument pos:start="311:31" pos:end="311:60"><expr pos:start="311:31" pos:end="311:60"><name pos:start="311:31" pos:end="311:60">float_tininess_before_rounding</name></expr></argument>,

                              <argument pos:start="313:31" pos:end="313:49"><expr pos:start="313:31" pos:end="313:49"><operator pos:start="313:31" pos:end="313:31">&amp;</operator><name pos:start="313:32" pos:end="313:49"><name pos:start="313:32" pos:end="313:34">env</name><operator pos:start="313:35" pos:end="313:36">-&gt;</operator><name pos:start="313:37" pos:end="313:39">vfp</name><operator pos:start="313:40" pos:end="313:40">.</operator><name pos:start="313:41" pos:end="313:49">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="315:5" pos:end="320:0"><expr pos:start="315:5" pos:end="317:59"><call pos:start="315:5" pos:end="317:59"><name pos:start="315:5" pos:end="315:29">set_float_detect_tininess</name><argument_list pos:start="315:30" pos:end="317:59">(<argument pos:start="315:31" pos:end="315:60"><expr pos:start="315:31" pos:end="315:60"><name pos:start="315:31" pos:end="315:60">float_tininess_before_rounding</name></expr></argument>,

                              <argument pos:start="317:31" pos:end="317:58"><expr pos:start="317:31" pos:end="317:58"><operator pos:start="317:31" pos:end="317:31">&amp;</operator><name pos:start="317:32" pos:end="317:58"><name pos:start="317:32" pos:end="317:34">env</name><operator pos:start="317:35" pos:end="317:36">-&gt;</operator><name pos:start="317:37" pos:end="317:39">vfp</name><operator pos:start="317:40" pos:end="317:40">.</operator><name pos:start="317:41" pos:end="317:58">standard_fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifndef pos:start="319:1" pos:end="319:24">#<cpp:directive pos:start="319:2" pos:end="319:7">ifndef</cpp:directive> <name pos:start="319:9" pos:end="319:24">CONFIG_USER_ONLY</name></cpp:ifndef>

    <if_stmt pos:start="321:5" pos:end="328:0"><if pos:start="321:5" pos:end="328:0">if <condition pos:start="321:8" pos:end="321:22">(<expr pos:start="321:9" pos:end="321:21"><call pos:start="321:9" pos:end="321:21"><name pos:start="321:9" pos:end="321:19">kvm_enabled</name><argument_list pos:start="321:20" pos:end="321:21">()</argument_list></call></expr>)</condition> <block pos:start="321:24" pos:end="328:0">{<block_content pos:start="323:9" pos:end="323:32">

        <expr_stmt pos:start="323:9" pos:end="323:32"><expr pos:start="323:9" pos:end="323:31"><call pos:start="323:9" pos:end="323:31"><name pos:start="323:9" pos:end="323:26">kvm_arm_reset_vcpu</name><argument_list pos:start="323:27" pos:end="323:31">(<argument pos:start="323:28" pos:end="323:30"><expr pos:start="323:28" pos:end="323:30"><name pos:start="323:28" pos:end="323:30">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="327:1" pos:end="327:6">#<cpp:directive pos:start="327:2" pos:end="327:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="331:5" pos:end="331:34"><expr pos:start="331:5" pos:end="331:33"><call pos:start="331:5" pos:end="331:33"><name pos:start="331:5" pos:end="331:28">hw_breakpoint_update_all</name><argument_list pos:start="331:29" pos:end="331:33">(<argument pos:start="331:30" pos:end="331:32"><expr pos:start="331:30" pos:end="331:32"><name pos:start="331:30" pos:end="331:32">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="333:34"><expr pos:start="333:5" pos:end="333:33"><call pos:start="333:5" pos:end="333:33"><name pos:start="333:5" pos:end="333:28">hw_watchpoint_update_all</name><argument_list pos:start="333:29" pos:end="333:33">(<argument pos:start="333:30" pos:end="333:32"><expr pos:start="333:30" pos:end="333:32"><name pos:start="333:30" pos:end="333:32">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
