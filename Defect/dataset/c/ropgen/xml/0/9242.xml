<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9242.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">read_data</name><parameter_list pos:start="1:21" pos:end="1:62">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:25">void</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:33">opaque</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:42">uint8_t</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">buf</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:61">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="177:1">{<block_content pos:start="5:5" pos:end="175:17">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">playlist</name></name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">v</name> <init pos:start="5:24" pos:end="5:31">= <expr pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:31">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">HLSContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">c</name> <init pos:start="7:19" pos:end="7:40">= <expr pos:start="7:21" pos:end="7:40"><name pos:start="7:21" pos:end="7:40"><name pos:start="7:21" pos:end="7:21">v</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:29">parent</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">just_opened</name> <init pos:start="11:21" pos:end="11:23">= <expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:27"><if pos:start="15:5" pos:end="17:27">if <condition pos:start="15:8" pos:end="15:19">(<expr pos:start="15:9" pos:end="15:18"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:18"><name pos:start="15:10" pos:end="15:10">v</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:18">needed</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:27"><block_content pos:start="17:9" pos:end="17:27">

        <return pos:start="17:9" pos:end="17:27">return <expr pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



<label pos:start="21:1" pos:end="21:8"><name pos:start="21:1" pos:end="21:7">restart</name>:</label>

    <if_stmt pos:start="23:5" pos:end="109:5"><if pos:start="23:5" pos:end="109:5">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:17"><name pos:start="23:10" pos:end="23:10">v</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:17">input</name></name></expr>)</condition> <block pos:start="23:20" pos:end="109:5">{<block_content pos:start="29:9" pos:end="107:24">

        <comment type="block" pos:start="25:9" pos:end="27:65">/* If this is a live stream and the reload interval has elapsed since

         * the last playlist reload, reload the playlists now. */</comment>

        <decl_stmt pos:start="29:9" pos:end="29:61"><decl pos:start="29:9" pos:end="29:60"><type pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:15">int64_t</name></type> <name pos:start="29:17" pos:end="29:31">reload_interval</name> <init pos:start="29:33" pos:end="29:60">= <expr pos:start="29:35" pos:end="29:60"><call pos:start="29:35" pos:end="29:60"><name pos:start="29:35" pos:end="29:57">default_reload_interval</name><argument_list pos:start="29:58" pos:end="29:60">(<argument pos:start="29:59" pos:end="29:59"><expr pos:start="29:59" pos:end="29:59"><name pos:start="29:59" pos:end="29:59">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<label pos:start="33:1" pos:end="33:7"><name pos:start="33:1" pos:end="33:6">reload</name>:</label>

        <if_stmt pos:start="35:9" pos:end="57:9"><if pos:start="35:9" pos:end="57:9">if <condition pos:start="35:12" pos:end="37:64">(<expr pos:start="35:13" pos:end="37:63"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:24"><name pos:start="35:14" pos:end="35:14">v</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:24">finished</name></name> <operator pos:start="35:26" pos:end="35:27">&amp;&amp;</operator>

            <call pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:22">av_gettime</name><argument_list pos:start="37:23" pos:end="37:24">()</argument_list></call> <operator pos:start="37:26" pos:end="37:26">-</operator> <name pos:start="37:28" pos:end="37:44"><name pos:start="37:28" pos:end="37:28">v</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:44">last_load_time</name></name> <operator pos:start="37:46" pos:end="37:47">&gt;=</operator> <name pos:start="37:49" pos:end="37:63">reload_interval</name></expr>)</condition> <block pos:start="37:66" pos:end="57:9">{<block_content pos:start="39:13" pos:end="55:53">

            <if_stmt pos:start="39:13" pos:end="47:13"><if pos:start="39:13" pos:end="47:13">if <condition pos:start="39:16" pos:end="39:63">(<expr pos:start="39:17" pos:end="39:62"><operator pos:start="39:17" pos:end="39:17">(</operator><name pos:start="39:18" pos:end="39:20">ret</name> <operator pos:start="39:22" pos:end="39:22">=</operator> <call pos:start="39:24" pos:end="39:57"><name pos:start="39:24" pos:end="39:37">parse_playlist</name><argument_list pos:start="39:38" pos:end="39:57">(<argument pos:start="39:39" pos:end="39:39"><expr pos:start="39:39" pos:end="39:39"><name pos:start="39:39" pos:end="39:39">c</name></expr></argument>, <argument pos:start="39:42" pos:end="39:47"><expr pos:start="39:42" pos:end="39:47"><name pos:start="39:42" pos:end="39:47"><name pos:start="39:42" pos:end="39:42">v</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:47">url</name></name></expr></argument>, <argument pos:start="39:50" pos:end="39:50"><expr pos:start="39:50" pos:end="39:50"><name pos:start="39:50" pos:end="39:50">v</name></expr></argument>, <argument pos:start="39:53" pos:end="39:56"><expr pos:start="39:53" pos:end="39:56"><name pos:start="39:53" pos:end="39:56">NULL</name></expr></argument>)</argument_list></call><operator pos:start="39:58" pos:end="39:58">)</operator> <operator pos:start="39:60" pos:end="39:60">&lt;</operator> <literal type="number" pos:start="39:62" pos:end="39:62">0</literal></expr>)</condition> <block pos:start="39:65" pos:end="47:13">{<block_content pos:start="41:17" pos:end="45:27">

                <expr_stmt pos:start="41:17" pos:end="43:33"><expr pos:start="41:17" pos:end="43:32"><call pos:start="41:17" pos:end="43:32"><name pos:start="41:17" pos:end="41:22">av_log</name><argument_list pos:start="41:23" pos:end="43:32">(<argument pos:start="41:24" pos:end="41:32"><expr pos:start="41:24" pos:end="41:32"><name pos:start="41:24" pos:end="41:32"><name pos:start="41:24" pos:end="41:24">v</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:32">parent</name></name></expr></argument>, <argument pos:start="41:35" pos:end="41:48"><expr pos:start="41:35" pos:end="41:48"><name pos:start="41:35" pos:end="41:48">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="41:51" pos:end="41:82"><expr pos:start="41:51" pos:end="41:82"><literal type="string" pos:start="41:51" pos:end="41:82">"Failed to reload playlist %d\n"</literal></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:31"><expr pos:start="43:24" pos:end="43:31"><name pos:start="43:24" pos:end="43:31"><name pos:start="43:24" pos:end="43:24">v</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:31">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="45:17" pos:end="45:27">return <expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="49:13" pos:end="53:55">/* If we need to reload the playlist again below (if

             * there's still no more segments), switch to a reload

             * interval of half the target duration. */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:53"><expr pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:27">reload_interval</name> <operator pos:start="55:29" pos:end="55:29">=</operator> <name pos:start="55:31" pos:end="55:48"><name pos:start="55:31" pos:end="55:31">v</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:48">target_duration</name></name> <operator pos:start="55:50" pos:end="55:50">/</operator> <literal type="number" pos:start="55:52" pos:end="55:52">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="69:9"><if pos:start="59:9" pos:end="69:9">if <condition pos:start="59:12" pos:end="59:44">(<expr pos:start="59:13" pos:end="59:43"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:13">v</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:25">cur_seq_no</name></name> <operator pos:start="59:27" pos:end="59:27">&lt;</operator> <name pos:start="59:29" pos:end="59:43"><name pos:start="59:29" pos:end="59:29">v</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:43">start_seq_no</name></name></expr>)</condition> <block pos:start="59:46" pos:end="69:9">{<block_content pos:start="61:13" pos:end="67:44">

            <expr_stmt pos:start="61:13" pos:end="65:52"><expr pos:start="61:13" pos:end="65:51"><call pos:start="61:13" pos:end="65:51"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="65:51">(<argument pos:start="61:20" pos:end="61:23"><expr pos:start="61:20" pos:end="61:23"><name pos:start="61:20" pos:end="61:23">NULL</name></expr></argument>, <argument pos:start="61:26" pos:end="61:39"><expr pos:start="61:26" pos:end="61:39"><name pos:start="61:26" pos:end="61:39">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="63:20" pos:end="63:73"><expr pos:start="63:20" pos:end="63:73"><literal type="string" pos:start="63:20" pos:end="63:73">"skipping %d segments ahead, expired from playlists\n"</literal></expr></argument>,

                   <argument pos:start="65:20" pos:end="65:50"><expr pos:start="65:20" pos:end="65:50"><name pos:start="65:20" pos:end="65:34"><name pos:start="65:20" pos:end="65:20">v</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:34">start_seq_no</name></name> <operator pos:start="65:36" pos:end="65:36">-</operator> <name pos:start="65:38" pos:end="65:50"><name pos:start="65:38" pos:end="65:38">v</name><operator pos:start="65:39" pos:end="65:40">-&gt;</operator><name pos:start="65:41" pos:end="65:50">cur_seq_no</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:44"><expr pos:start="67:13" pos:end="67:43"><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:13">v</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:25">cur_seq_no</name></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <name pos:start="67:29" pos:end="67:43"><name pos:start="67:29" pos:end="67:29">v</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:43">start_seq_no</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="71:9" pos:end="91:9"><if pos:start="71:9" pos:end="91:9">if <condition pos:start="71:12" pos:end="71:61">(<expr pos:start="71:13" pos:end="71:60"><name pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:13">v</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:25">cur_seq_no</name></name> <operator pos:start="71:27" pos:end="71:28">&gt;=</operator> <name pos:start="71:30" pos:end="71:44"><name pos:start="71:30" pos:end="71:30">v</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:44">start_seq_no</name></name> <operator pos:start="71:46" pos:end="71:46">+</operator> <name pos:start="71:48" pos:end="71:60"><name pos:start="71:48" pos:end="71:48">v</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:60">n_segments</name></name></expr>)</condition> <block pos:start="71:63" pos:end="91:9">{<block_content pos:start="73:13" pos:end="89:24">

            <if_stmt pos:start="73:13" pos:end="75:35"><if pos:start="73:13" pos:end="75:35">if <condition pos:start="73:16" pos:end="73:28">(<expr pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:17">v</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:27">finished</name></name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:35"><block_content pos:start="75:17" pos:end="75:35">

                <return pos:start="75:17" pos:end="75:35">return <expr pos:start="75:24" pos:end="75:34"><name pos:start="75:24" pos:end="75:34">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

            <while pos:start="77:13" pos:end="85:13">while <condition pos:start="77:19" pos:end="77:70">(<expr pos:start="77:20" pos:end="77:69"><call pos:start="77:20" pos:end="77:31"><name pos:start="77:20" pos:end="77:29">av_gettime</name><argument_list pos:start="77:30" pos:end="77:31">()</argument_list></call> <operator pos:start="77:33" pos:end="77:33">-</operator> <name pos:start="77:35" pos:end="77:51"><name pos:start="77:35" pos:end="77:35">v</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:51">last_load_time</name></name> <operator pos:start="77:53" pos:end="77:53">&lt;</operator> <name pos:start="77:55" pos:end="77:69">reload_interval</name></expr>)</condition> <block pos:start="77:72" pos:end="85:13">{<block_content pos:start="79:17" pos:end="83:36">

                <if_stmt pos:start="79:17" pos:end="81:40"><if pos:start="79:17" pos:end="81:40">if <condition pos:start="79:20" pos:end="79:62">(<expr pos:start="79:21" pos:end="79:61"><call pos:start="79:21" pos:end="79:61"><name pos:start="79:21" pos:end="79:38">ff_check_interrupt</name><argument_list pos:start="79:39" pos:end="79:61">(<argument pos:start="79:40" pos:end="79:60"><expr pos:start="79:40" pos:end="79:60"><name pos:start="79:40" pos:end="79:60"><name pos:start="79:40" pos:end="79:40">c</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:60">interrupt_callback</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="81:21" pos:end="81:40"><block_content pos:start="81:21" pos:end="81:40">

                    <return pos:start="81:21" pos:end="81:40">return <expr pos:start="81:28" pos:end="81:39"><name pos:start="81:28" pos:end="81:39">AVERROR_EXIT</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:36"><expr pos:start="83:17" pos:end="83:35"><call pos:start="83:17" pos:end="83:35"><name pos:start="83:17" pos:end="83:25">av_usleep</name><argument_list pos:start="83:26" pos:end="83:35">(<argument pos:start="83:27" pos:end="83:34"><expr pos:start="83:27" pos:end="83:34"><literal type="number" pos:start="83:27" pos:end="83:29">100</literal><operator pos:start="83:30" pos:end="83:30">*</operator><literal type="number" pos:start="83:31" pos:end="83:34">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <comment type="block" pos:start="87:13" pos:end="87:63">/* Enough time has elapsed since the last reload */</comment>

            <goto pos:start="89:13" pos:end="89:24">goto <name pos:start="89:18" pos:end="89:23">reload</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:30"><name pos:start="95:15" pos:end="95:24">open_input</name><argument_list pos:start="95:25" pos:end="95:30">(<argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><name pos:start="95:26" pos:end="95:26">c</name></expr></argument>, <argument pos:start="95:29" pos:end="95:29"><expr pos:start="95:29" pos:end="95:29"><name pos:start="95:29" pos:end="95:29">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="105:9"><if pos:start="97:9" pos:end="105:9">if <condition pos:start="97:12" pos:end="97:20">(<expr pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:15">ret</name> <operator pos:start="97:17" pos:end="97:17">&lt;</operator> <literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>)</condition> <block pos:start="97:22" pos:end="105:9">{<block_content pos:start="99:13" pos:end="103:23">

            <expr_stmt pos:start="99:13" pos:end="101:29"><expr pos:start="99:13" pos:end="101:28"><call pos:start="99:13" pos:end="101:28"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="101:28">(<argument pos:start="99:20" pos:end="99:28"><expr pos:start="99:20" pos:end="99:28"><name pos:start="99:20" pos:end="99:28"><name pos:start="99:20" pos:end="99:20">v</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:28">parent</name></name></expr></argument>, <argument pos:start="99:31" pos:end="99:44"><expr pos:start="99:31" pos:end="99:44"><name pos:start="99:31" pos:end="99:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="99:47" pos:end="99:87"><expr pos:start="99:47" pos:end="99:87"><literal type="string" pos:start="99:47" pos:end="99:87">"Failed to open segment of playlist %d\n"</literal></expr></argument>,

                   <argument pos:start="101:20" pos:end="101:27"><expr pos:start="101:20" pos:end="101:27"><name pos:start="101:20" pos:end="101:27"><name pos:start="101:20" pos:end="101:20">v</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:27">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:23">return <expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:24"><expr pos:start="107:9" pos:end="107:23"><name pos:start="107:9" pos:end="107:19">just_opened</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <literal type="number" pos:start="107:23" pos:end="107:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:55"><expr pos:start="113:5" pos:end="113:54"><name pos:start="113:5" pos:end="113:7">ret</name> <operator pos:start="113:9" pos:end="113:9">=</operator> <call pos:start="113:11" pos:end="113:54"><name pos:start="113:11" pos:end="113:23">read_from_url</name><argument_list pos:start="113:24" pos:end="113:54">(<argument pos:start="113:25" pos:end="113:25"><expr pos:start="113:25" pos:end="113:25"><name pos:start="113:25" pos:end="113:25">v</name></expr></argument>, <argument pos:start="113:28" pos:end="113:30"><expr pos:start="113:28" pos:end="113:30"><name pos:start="113:28" pos:end="113:30">buf</name></expr></argument>, <argument pos:start="113:33" pos:end="113:40"><expr pos:start="113:33" pos:end="113:40"><name pos:start="113:33" pos:end="113:40">buf_size</name></expr></argument>, <argument pos:start="113:43" pos:end="113:53"><expr pos:start="113:43" pos:end="113:53"><name pos:start="113:43" pos:end="113:53">READ_NORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="131:5"><if pos:start="115:5" pos:end="131:5">if <condition pos:start="115:8" pos:end="115:16">(<expr pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">&gt;</operator> <literal type="number" pos:start="115:15" pos:end="115:15">0</literal></expr>)</condition> <block pos:start="115:18" pos:end="131:5">{<block_content pos:start="117:9" pos:end="129:19">

        <if_stmt pos:start="117:9" pos:end="125:9"><if pos:start="117:9" pos:end="125:9">if <condition pos:start="117:12" pos:end="117:54">(<expr pos:start="117:13" pos:end="117:53"><name pos:start="117:13" pos:end="117:23">just_opened</name> <operator pos:start="117:25" pos:end="117:26">&amp;&amp;</operator> <name pos:start="117:28" pos:end="117:48"><name pos:start="117:28" pos:end="117:28">v</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:48">is_id3_timestamped</name></name> <operator pos:start="117:50" pos:end="117:51">!=</operator> <literal type="number" pos:start="117:53" pos:end="117:53">0</literal></expr>)</condition> <block pos:start="117:56" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:50">

            <comment type="block" pos:start="119:13" pos:end="121:83">/* Intercept ID3 tags here, elementary audio streams are required

             * to convey timestamps using them in the beginning of each segment. */</comment>

            <expr_stmt pos:start="123:13" pos:end="123:50"><expr pos:start="123:13" pos:end="123:49"><call pos:start="123:13" pos:end="123:49"><name pos:start="123:13" pos:end="123:25">intercept_id3</name><argument_list pos:start="123:26" pos:end="123:49">(<argument pos:start="123:27" pos:end="123:27"><expr pos:start="123:27" pos:end="123:27"><name pos:start="123:27" pos:end="123:27">v</name></expr></argument>, <argument pos:start="123:30" pos:end="123:32"><expr pos:start="123:30" pos:end="123:32"><name pos:start="123:30" pos:end="123:32">buf</name></expr></argument>, <argument pos:start="123:35" pos:end="123:42"><expr pos:start="123:35" pos:end="123:42"><name pos:start="123:35" pos:end="123:42">buf_size</name></expr></argument>, <argument pos:start="123:45" pos:end="123:48"><expr pos:start="123:45" pos:end="123:48"><operator pos:start="123:45" pos:end="123:45">&amp;</operator><name pos:start="123:46" pos:end="123:48">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="129:9" pos:end="129:19">return <expr pos:start="129:16" pos:end="129:18"><name pos:start="129:16" pos:end="129:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:26"><expr pos:start="133:5" pos:end="133:25"><call pos:start="133:5" pos:end="133:25"><name pos:start="133:5" pos:end="133:15">ffurl_close</name><argument_list pos:start="133:16" pos:end="133:25">(<argument pos:start="133:17" pos:end="133:24"><expr pos:start="133:17" pos:end="133:24"><name pos:start="133:17" pos:end="133:24"><name pos:start="133:17" pos:end="133:17">v</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:24">input</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:20"><expr pos:start="135:5" pos:end="135:19"><name pos:start="135:5" pos:end="135:12"><name pos:start="135:5" pos:end="135:5">v</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:12">input</name></name> <operator pos:start="135:14" pos:end="135:14">=</operator> <name pos:start="135:16" pos:end="135:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:20"><expr pos:start="137:5" pos:end="137:19"><name pos:start="137:5" pos:end="137:17"><name pos:start="137:5" pos:end="137:5">v</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:17">cur_seq_no</name></name><operator pos:start="137:18" pos:end="137:19">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:26"><expr pos:start="141:5" pos:end="141:25"><name pos:start="141:5" pos:end="141:21"><name pos:start="141:5" pos:end="141:5">c</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:21">end_of_segment</name></name> <operator pos:start="141:23" pos:end="141:23">=</operator> <literal type="number" pos:start="141:25" pos:end="141:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:34"><expr pos:start="143:5" pos:end="143:33"><name pos:start="143:5" pos:end="143:17"><name pos:start="143:5" pos:end="143:5">c</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:17">cur_seq_no</name></name> <operator pos:start="143:19" pos:end="143:19">=</operator> <name pos:start="143:21" pos:end="143:33"><name pos:start="143:21" pos:end="143:21">v</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:33">cur_seq_no</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="147:5" pos:end="163:5"><if pos:start="147:5" pos:end="163:5">if <condition pos:start="147:8" pos:end="149:71">(<expr pos:start="147:9" pos:end="149:70"><name pos:start="147:9" pos:end="147:14"><name pos:start="147:9" pos:end="147:9">v</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:14">ctx</name></name> <operator pos:start="147:16" pos:end="147:17">&amp;&amp;</operator> <name pos:start="147:19" pos:end="147:36"><name pos:start="147:19" pos:end="147:19">v</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:24">ctx</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:36">nb_streams</name></name> <operator pos:start="147:38" pos:end="147:39">&amp;&amp;</operator>

        <name pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:9">v</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:17">parent</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:29">nb_streams</name></name> <operator pos:start="149:31" pos:end="149:32">&gt;=</operator> <name pos:start="149:34" pos:end="149:49"><name pos:start="149:34" pos:end="149:34">v</name><operator pos:start="149:35" pos:end="149:36">-&gt;</operator><name pos:start="149:37" pos:end="149:49">stream_offset</name></name> <operator pos:start="149:51" pos:end="149:51">+</operator> <name pos:start="149:53" pos:end="149:70"><name pos:start="149:53" pos:end="149:53">v</name><operator pos:start="149:54" pos:end="149:55">-&gt;</operator><name pos:start="149:56" pos:end="149:58">ctx</name><operator pos:start="149:59" pos:end="149:60">-&gt;</operator><name pos:start="149:61" pos:end="149:70">nb_streams</name></name></expr>)</condition> <block pos:start="149:73" pos:end="163:5">{<block_content pos:start="151:9" pos:end="161:9">

        <expr_stmt pos:start="151:9" pos:end="151:22"><expr pos:start="151:9" pos:end="151:21"><name pos:start="151:9" pos:end="151:17"><name pos:start="151:9" pos:end="151:9">v</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:17">needed</name></name> <operator pos:start="151:19" pos:end="151:19">=</operator> <literal type="number" pos:start="151:21" pos:end="151:21">0</literal></expr>;</expr_stmt>

        <for pos:start="153:9" pos:end="161:9">for <control pos:start="153:13" pos:end="155:17">(<init pos:start="153:14" pos:end="153:34"><expr pos:start="153:14" pos:end="153:33"><name pos:start="153:14" pos:end="153:14">i</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <name pos:start="153:18" pos:end="153:33"><name pos:start="153:18" pos:end="153:18">v</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:33">stream_offset</name></name></expr>;</init> <condition pos:start="153:36" pos:end="153:77"><expr pos:start="153:36" pos:end="153:76"><name pos:start="153:36" pos:end="153:36">i</name> <operator pos:start="153:38" pos:end="153:38">&lt;</operator> <name pos:start="153:40" pos:end="153:55"><name pos:start="153:40" pos:end="153:40">v</name><operator pos:start="153:41" pos:end="153:42">-&gt;</operator><name pos:start="153:43" pos:end="153:55">stream_offset</name></name> <operator pos:start="153:57" pos:end="153:57">+</operator> <name pos:start="153:59" pos:end="153:76"><name pos:start="153:59" pos:end="153:59">v</name><operator pos:start="153:60" pos:end="153:61">-&gt;</operator><name pos:start="153:62" pos:end="153:64">ctx</name><operator pos:start="153:65" pos:end="153:66">-&gt;</operator><name pos:start="153:67" pos:end="153:76">nb_streams</name></name></expr>;</condition>

             <incr pos:start="155:14" pos:end="155:16"><expr pos:start="155:14" pos:end="155:16"><name pos:start="155:14" pos:end="155:14">i</name><operator pos:start="155:15" pos:end="155:16">++</operator></expr></incr>)</control> <block pos:start="155:19" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:30">

            <if_stmt pos:start="157:13" pos:end="159:30"><if pos:start="157:13" pos:end="159:30">if <condition pos:start="157:16" pos:end="157:63">(<expr pos:start="157:17" pos:end="157:62"><name pos:start="157:17" pos:end="157:37"><name pos:start="157:17" pos:end="157:17">v</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:25">parent</name><operator pos:start="157:26" pos:end="157:27">-&gt;</operator><name pos:start="157:28" pos:end="157:34">streams</name><index pos:start="157:35" pos:end="157:37">[<expr pos:start="157:36" pos:end="157:36"><name pos:start="157:36" pos:end="157:36">i</name></expr>]</index></name><operator pos:start="157:38" pos:end="157:39">-&gt;</operator><name pos:start="157:40" pos:end="157:46">discard</name> <operator pos:start="157:48" pos:end="157:48">&lt;</operator> <name pos:start="157:50" pos:end="157:62">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="159:30"><block_content pos:start="159:17" pos:end="159:30">

                <expr_stmt pos:start="159:17" pos:end="159:30"><expr pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:25"><name pos:start="159:17" pos:end="159:17">v</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:25">needed</name></name> <operator pos:start="159:27" pos:end="159:27">=</operator> <literal type="number" pos:start="159:29" pos:end="159:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="165:5" pos:end="173:5"><if pos:start="165:5" pos:end="173:5">if <condition pos:start="165:8" pos:end="165:19">(<expr pos:start="165:9" pos:end="165:18"><operator pos:start="165:9" pos:end="165:9">!</operator><name pos:start="165:10" pos:end="165:18"><name pos:start="165:10" pos:end="165:10">v</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:18">needed</name></name></expr>)</condition> <block pos:start="165:21" pos:end="173:5">{<block_content pos:start="167:9" pos:end="171:27">

        <expr_stmt pos:start="167:9" pos:end="169:25"><expr pos:start="167:9" pos:end="169:24"><call pos:start="167:9" pos:end="169:24"><name pos:start="167:9" pos:end="167:14">av_log</name><argument_list pos:start="167:15" pos:end="169:24">(<argument pos:start="167:16" pos:end="167:24"><expr pos:start="167:16" pos:end="167:24"><name pos:start="167:16" pos:end="167:24"><name pos:start="167:16" pos:end="167:16">v</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:24">parent</name></name></expr></argument>, <argument pos:start="167:27" pos:end="167:37"><expr pos:start="167:27" pos:end="167:37"><name pos:start="167:27" pos:end="167:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="167:40" pos:end="167:74"><expr pos:start="167:40" pos:end="167:74"><literal type="string" pos:start="167:40" pos:end="167:74">"No longer receiving playlist %d\n"</literal></expr></argument>,

               <argument pos:start="169:16" pos:end="169:23"><expr pos:start="169:16" pos:end="169:23"><name pos:start="169:16" pos:end="169:23"><name pos:start="169:16" pos:end="169:16">v</name><operator pos:start="169:17" pos:end="169:18">-&gt;</operator><name pos:start="169:19" pos:end="169:23">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="171:9" pos:end="171:27">return <expr pos:start="171:16" pos:end="171:26"><name pos:start="171:16" pos:end="171:26">AVERROR_EOF</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <goto pos:start="175:5" pos:end="175:17">goto <name pos:start="175:10" pos:end="175:16">restart</name>;</goto>

</block_content>}</block></function>
</unit>
