<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24722.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">qdev_init</name><parameter_list pos:start="1:14" pos:end="1:31">(<parameter pos:start="1:15" pos:end="1:30"><decl pos:start="1:15" pos:end="1:30"><type pos:start="1:15" pos:end="1:27"><name pos:start="1:15" pos:end="1:25">DeviceState</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:30">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">rc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:44"><expr pos:start="9:5" pos:end="9:43"><call pos:start="9:5" pos:end="9:43"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:43">(<argument pos:start="9:12" pos:end="9:42"><expr pos:start="9:12" pos:end="9:42"><name pos:start="9:12" pos:end="9:21"><name pos:start="9:12" pos:end="9:14">dev</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:21">state</name></name> <operator pos:start="9:23" pos:end="9:24">==</operator> <name pos:start="9:26" pos:end="9:42">DEV_STATE_CREATED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:41"><expr pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:6">rc</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <call pos:start="11:10" pos:end="11:40"><name pos:start="11:10" pos:end="11:24"><name pos:start="11:10" pos:end="11:12">dev</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:18">info</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:24">init</name></name><argument_list pos:start="11:25" pos:end="11:40">(<argument pos:start="11:26" pos:end="11:28"><expr pos:start="11:26" pos:end="11:28"><name pos:start="11:26" pos:end="11:28">dev</name></expr></argument>, <argument pos:start="11:31" pos:end="11:39"><expr pos:start="11:31" pos:end="11:39"><name pos:start="11:31" pos:end="11:39"><name pos:start="11:31" pos:end="11:33">dev</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:39">info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:15">(<expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:10">rc</name> <operator pos:start="13:12" pos:end="13:12">&lt;</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>)</condition> <block pos:start="13:17" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:18">

        <expr_stmt pos:start="15:9" pos:end="15:23"><expr pos:start="15:9" pos:end="15:22"><call pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:17">qdev_free</name><argument_list pos:start="15:18" pos:end="15:22">(<argument pos:start="15:19" pos:end="15:21"><expr pos:start="15:19" pos:end="15:21"><name pos:start="15:19" pos:end="15:21">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><name pos:start="17:16" pos:end="17:17">rc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><call pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:23">qemu_register_reset</name><argument_list pos:start="21:24" pos:end="21:40">(<argument pos:start="21:25" pos:end="21:34"><expr pos:start="21:25" pos:end="21:34"><name pos:start="21:25" pos:end="21:34">qdev_reset</name></expr></argument>, <argument pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:39">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:11">dev</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:17">info</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:23">vmsd</name></name></expr>)</condition> <block pos:start="23:26" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:72">

        <expr_stmt pos:start="25:9" pos:end="29:72"><expr pos:start="25:9" pos:end="29:71"><call pos:start="25:9" pos:end="29:71"><name pos:start="25:9" pos:end="25:38">vmstate_register_with_alias_id</name><argument_list pos:start="25:39" pos:end="29:71">(<argument pos:start="25:40" pos:end="25:42"><expr pos:start="25:40" pos:end="25:42"><name pos:start="25:40" pos:end="25:42">dev</name></expr></argument>, <argument pos:start="25:45" pos:end="25:46"><expr pos:start="25:45" pos:end="25:46"><operator pos:start="25:45" pos:end="25:45">-</operator><literal type="number" pos:start="25:46" pos:end="25:46">1</literal></expr></argument>, <argument pos:start="25:49" pos:end="25:63"><expr pos:start="25:49" pos:end="25:63"><name pos:start="25:49" pos:end="25:63"><name pos:start="25:49" pos:end="25:51">dev</name><operator pos:start="25:52" pos:end="25:53">-&gt;</operator><name pos:start="25:54" pos:end="25:57">info</name><operator pos:start="25:58" pos:end="25:59">-&gt;</operator><name pos:start="25:60" pos:end="25:63">vmsd</name></name></expr></argument>, <argument pos:start="25:66" pos:end="25:68"><expr pos:start="25:66" pos:end="25:68"><name pos:start="25:66" pos:end="25:68">dev</name></expr></argument>,

                                       <argument pos:start="27:40" pos:end="27:61"><expr pos:start="27:40" pos:end="27:61"><name pos:start="27:40" pos:end="27:61"><name pos:start="27:40" pos:end="27:42">dev</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:61">instance_id_alias</name></name></expr></argument>,

                                       <argument pos:start="29:40" pos:end="29:70"><expr pos:start="29:40" pos:end="29:70"><name pos:start="29:40" pos:end="29:70"><name pos:start="29:40" pos:end="29:42">dev</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:70">alias_required_for_version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:7">dev</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:14">state</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:38">DEV_STATE_INITIALIZED</name></expr>;</expr_stmt>

    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
