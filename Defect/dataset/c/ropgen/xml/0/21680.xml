<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21680.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">dirac_decode_frame_internal</name><parameter_list pos:start="1:39" pos:end="1:55">(<parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:51">DiracContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="159:1">{<block_content pos:start="5:5" pos:end="157:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">DWTContext</name></type> <name pos:start="5:16" pos:end="5:16">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">y</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">i</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">comp</name></decl>, <decl pos:start="7:21" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:24">dsty</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="27:5"><if pos:start="11:5" pos:end="27:5">if <condition pos:start="11:8" pos:end="11:21">(<expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:20">low_delay</name></name></expr>)</condition> <block pos:start="11:23" pos:end="27:5">{<block_content pos:start="15:9" pos:end="25:31">

        <comment type="block" pos:start="13:9" pos:end="13:59">/* [DIRAC_STD] 13.5.1 low_delay_transform_data() */</comment>

        <for pos:start="15:9" pos:end="21:9">for <control pos:start="15:13" pos:end="15:40">(<init pos:start="15:14" pos:end="15:22"><expr pos:start="15:14" pos:end="15:21"><name pos:start="15:14" pos:end="15:17">comp</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr>;</init> <condition pos:start="15:24" pos:end="15:32"><expr pos:start="15:24" pos:end="15:31"><name pos:start="15:24" pos:end="15:27">comp</name> <operator pos:start="15:29" pos:end="15:29">&lt;</operator> <literal type="number" pos:start="15:31" pos:end="15:31">3</literal></expr>;</condition> <incr pos:start="15:34" pos:end="15:39"><expr pos:start="15:34" pos:end="15:39"><name pos:start="15:34" pos:end="15:37">comp</name><operator pos:start="15:38" pos:end="15:39">++</operator></expr></incr>)</control> <block pos:start="15:42" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:87">

            <decl_stmt pos:start="17:13" pos:end="17:39"><decl pos:start="17:13" pos:end="17:38"><type pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:17">Plane</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:20">p</name> <init pos:start="17:22" pos:end="17:38">= <expr pos:start="17:24" pos:end="17:38"><operator pos:start="17:24" pos:end="17:24">&amp;</operator><name pos:start="17:25" pos:end="17:38"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:32">plane</name><index pos:start="17:33" pos:end="17:38">[<expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">comp</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:87"><expr pos:start="19:13" pos:end="19:86"><call pos:start="19:13" pos:end="19:86"><name pos:start="19:13" pos:end="19:18">memset</name><argument_list pos:start="19:19" pos:end="19:86">(<argument pos:start="19:20" pos:end="19:30"><expr pos:start="19:20" pos:end="19:30"><name pos:start="19:20" pos:end="19:30"><name pos:start="19:20" pos:end="19:20">p</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:30">idwt_buf</name></name></expr></argument>, <argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><literal type="number" pos:start="19:33" pos:end="19:33">0</literal></expr></argument>, <argument pos:start="19:36" pos:end="19:85"><expr pos:start="19:36" pos:end="19:85"><name pos:start="19:36" pos:end="19:49"><name pos:start="19:36" pos:end="19:36">p</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:49">idwt_stride</name></name> <operator pos:start="19:51" pos:end="19:51">*</operator> <name pos:start="19:53" pos:end="19:66"><name pos:start="19:53" pos:end="19:53">p</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:66">idwt_height</name></name> <operator pos:start="19:68" pos:end="19:68">*</operator> <sizeof pos:start="19:70" pos:end="19:85">sizeof<argument_list pos:start="19:76" pos:end="19:85">(<argument pos:start="19:77" pos:end="19:84"><expr pos:start="19:77" pos:end="19:84"><name pos:start="19:77" pos:end="19:84">IDWTELEM</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="23:9" pos:end="25:31"><if pos:start="23:9" pos:end="25:31">if <condition pos:start="23:12" pos:end="23:25">(<expr pos:start="23:13" pos:end="23:24"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:24"><name pos:start="23:14" pos:end="23:14">s</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:24">zero_res</name></name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:31"><block_content pos:start="25:13" pos:end="25:31">

            <expr_stmt pos:start="25:13" pos:end="25:31"><expr pos:start="25:13" pos:end="25:30"><call pos:start="25:13" pos:end="25:30"><name pos:start="25:13" pos:end="25:27">decode_lowdelay</name><argument_list pos:start="25:28" pos:end="25:30">(<argument pos:start="25:29" pos:end="25:29"><expr pos:start="25:29" pos:end="25:29"><name pos:start="25:29" pos:end="25:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="31:5" pos:end="151:5">for <control pos:start="31:9" pos:end="31:36">(<init pos:start="31:10" pos:end="31:18"><expr pos:start="31:10" pos:end="31:17"><name pos:start="31:10" pos:end="31:13">comp</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr>;</init> <condition pos:start="31:20" pos:end="31:28"><expr pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:23">comp</name> <operator pos:start="31:25" pos:end="31:25">&lt;</operator> <literal type="number" pos:start="31:27" pos:end="31:27">3</literal></expr>;</condition> <incr pos:start="31:30" pos:end="31:35"><expr pos:start="31:30" pos:end="31:35"><name pos:start="31:30" pos:end="31:33">comp</name><operator pos:start="31:34" pos:end="31:35">++</operator></expr></incr>)</control> <block pos:start="31:38" pos:end="151:5">{<block_content pos:start="33:9" pos:end="149:9">

        <decl_stmt pos:start="33:9" pos:end="33:41"><decl pos:start="33:9" pos:end="33:40"><type pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:13">Plane</name> <modifier pos:start="33:15" pos:end="33:15">*</modifier></type><name pos:start="33:16" pos:end="33:16">p</name>       <init pos:start="33:24" pos:end="33:40">= <expr pos:start="33:26" pos:end="33:40"><operator pos:start="33:26" pos:end="33:26">&amp;</operator><name pos:start="33:27" pos:end="33:40"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:34">plane</name><index pos:start="33:35" pos:end="33:40">[<expr pos:start="33:36" pos:end="33:39"><name pos:start="33:36" pos:end="33:39">comp</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:65"><decl pos:start="35:9" pos:end="35:64"><type pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:15">uint8_t</name> <modifier pos:start="35:17" pos:end="35:17">*</modifier></type><name pos:start="35:18" pos:end="35:22">frame</name> <init pos:start="35:24" pos:end="35:64">= <expr pos:start="35:26" pos:end="35:64"><name pos:start="35:26" pos:end="35:64"><name pos:start="35:26" pos:end="35:26">s</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:43">current_picture</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:52">avframe</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:58">data</name><index pos:start="35:59" pos:end="35:64">[<expr pos:start="35:60" pos:end="35:63"><name pos:start="35:60" pos:end="35:63">comp</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="39:9" pos:end="39:38">/* FIXME: small resolutions */</comment>

        <for pos:start="41:9" pos:end="43:86">for <control pos:start="41:13" pos:end="41:31">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:26"><expr pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:21">i</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <literal type="number" pos:start="41:25" pos:end="41:25">4</literal></expr>;</condition> <incr pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:28">i</name><operator pos:start="41:29" pos:end="41:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:13" pos:end="43:86"><block_content pos:start="43:13" pos:end="43:86">

            <expr_stmt pos:start="43:13" pos:end="43:86"><expr pos:start="43:13" pos:end="43:85"><name pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:30">edge_emu_buffer</name><index pos:start="43:31" pos:end="43:33">[<expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">i</name></expr>]</index></name> <operator pos:start="43:35" pos:end="43:35">=</operator> <name pos:start="43:37" pos:end="43:59"><name pos:start="43:37" pos:end="43:37">s</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:59">edge_emu_buffer_base</name></name> <operator pos:start="43:61" pos:end="43:61">+</operator> <name pos:start="43:63" pos:end="43:63">i</name><operator pos:start="43:64" pos:end="43:64">*</operator><call pos:start="43:65" pos:end="43:85"><name pos:start="43:65" pos:end="43:71">FFALIGN</name><argument_list pos:start="43:72" pos:end="43:85">(<argument pos:start="43:73" pos:end="43:80"><expr pos:start="43:73" pos:end="43:80"><name pos:start="43:73" pos:end="43:80"><name pos:start="43:73" pos:end="43:73">p</name><operator pos:start="43:74" pos:end="43:75">-&gt;</operator><name pos:start="43:76" pos:end="43:80">width</name></name></expr></argument>, <argument pos:start="43:83" pos:end="43:84"><expr pos:start="43:83" pos:end="43:84"><literal type="number" pos:start="43:83" pos:end="43:84">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:42">(<expr pos:start="47:13" pos:end="47:41"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:24"><name pos:start="47:14" pos:end="47:14">s</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:24">zero_res</name></name> <operator pos:start="47:26" pos:end="47:27">&amp;&amp;</operator> <operator pos:start="47:29" pos:end="47:29">!</operator><name pos:start="47:30" pos:end="47:41"><name pos:start="47:30" pos:end="47:30">s</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:41">low_delay</name></name></expr>)</condition>

        <block pos:start="49:9" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:38">

            <expr_stmt pos:start="51:13" pos:end="51:87"><expr pos:start="51:13" pos:end="51:86"><call pos:start="51:13" pos:end="51:86"><name pos:start="51:13" pos:end="51:18">memset</name><argument_list pos:start="51:19" pos:end="51:86">(<argument pos:start="51:20" pos:end="51:30"><expr pos:start="51:20" pos:end="51:30"><name pos:start="51:20" pos:end="51:30"><name pos:start="51:20" pos:end="51:20">p</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:30">idwt_buf</name></name></expr></argument>, <argument pos:start="51:33" pos:end="51:33"><expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr></argument>, <argument pos:start="51:36" pos:end="51:85"><expr pos:start="51:36" pos:end="51:85"><name pos:start="51:36" pos:end="51:49"><name pos:start="51:36" pos:end="51:36">p</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:49">idwt_stride</name></name> <operator pos:start="51:51" pos:end="51:51">*</operator> <name pos:start="51:53" pos:end="51:66"><name pos:start="51:53" pos:end="51:53">p</name><operator pos:start="51:54" pos:end="51:55">-&gt;</operator><name pos:start="51:56" pos:end="51:66">idwt_height</name></name> <operator pos:start="51:68" pos:end="51:68">*</operator> <sizeof pos:start="51:70" pos:end="51:85">sizeof<argument_list pos:start="51:76" pos:end="51:85">(<argument pos:start="51:77" pos:end="51:84"><expr pos:start="51:77" pos:end="51:84"><name pos:start="51:77" pos:end="51:84">IDWTELEM</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:38"><expr pos:start="53:13" pos:end="53:37"><call pos:start="53:13" pos:end="53:37"><name pos:start="53:13" pos:end="53:28">decode_component</name><argument_list pos:start="53:29" pos:end="53:37">(<argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><name pos:start="53:30" pos:end="53:30">s</name></expr></argument>, <argument pos:start="53:33" pos:end="53:36"><expr pos:start="53:33" pos:end="53:36"><name pos:start="53:33" pos:end="53:36">comp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="53:40" pos:end="53:85">/* [DIRAC_STD] 13.4.1 core_transform_data() */</comment>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="61:22"><if pos:start="57:9" pos:end="61:22">if <condition pos:start="57:12" pos:end="59:83">(<expr pos:start="57:13" pos:end="59:82"><call pos:start="57:13" pos:end="59:82"><name pos:start="57:13" pos:end="57:33">ff_spatial_idwt_init2</name><argument_list pos:start="57:34" pos:end="59:82">(<argument pos:start="57:35" pos:end="57:36"><expr pos:start="57:35" pos:end="57:36"><operator pos:start="57:35" pos:end="57:35">&amp;</operator><name pos:start="57:36" pos:end="57:36">d</name></expr></argument>, <argument pos:start="57:39" pos:end="57:49"><expr pos:start="57:39" pos:end="57:49"><name pos:start="57:39" pos:end="57:49"><name pos:start="57:39" pos:end="57:39">p</name><operator pos:start="57:40" pos:end="57:41">-&gt;</operator><name pos:start="57:42" pos:end="57:49">idwt_buf</name></name></expr></argument>, <argument pos:start="57:52" pos:end="57:64"><expr pos:start="57:52" pos:end="57:64"><name pos:start="57:52" pos:end="57:64"><name pos:start="57:52" pos:end="57:52">p</name><operator pos:start="57:53" pos:end="57:54">-&gt;</operator><name pos:start="57:55" pos:end="57:64">idwt_width</name></name></expr></argument>, <argument pos:start="57:67" pos:end="57:80"><expr pos:start="57:67" pos:end="57:80"><name pos:start="57:67" pos:end="57:80"><name pos:start="57:67" pos:end="57:67">p</name><operator pos:start="57:68" pos:end="57:69">-&gt;</operator><name pos:start="57:70" pos:end="57:80">idwt_height</name></name></expr></argument>, <argument pos:start="57:83" pos:end="57:96"><expr pos:start="57:83" pos:end="57:96"><name pos:start="57:83" pos:end="57:96"><name pos:start="57:83" pos:end="57:83">p</name><operator pos:start="57:84" pos:end="57:85">-&gt;</operator><name pos:start="57:86" pos:end="57:96">idwt_stride</name></name></expr></argument>,

                                  <argument pos:start="59:35" pos:end="59:50"><expr pos:start="59:35" pos:end="59:50"><name pos:start="59:35" pos:end="59:48"><name pos:start="59:35" pos:end="59:35">s</name><operator pos:start="59:36" pos:end="59:37">-&gt;</operator><name pos:start="59:38" pos:end="59:48">wavelet_idx</name></name><operator pos:start="59:49" pos:end="59:49">+</operator><literal type="number" pos:start="59:50" pos:end="59:50">2</literal></expr></argument>, <argument pos:start="59:53" pos:end="59:68"><expr pos:start="59:53" pos:end="59:68"><name pos:start="59:53" pos:end="59:68"><name pos:start="59:53" pos:end="59:53">s</name><operator pos:start="59:54" pos:end="59:55">-&gt;</operator><name pos:start="59:56" pos:end="59:68">wavelet_depth</name></name></expr></argument>, <argument pos:start="59:71" pos:end="59:81"><expr pos:start="59:71" pos:end="59:81"><name pos:start="59:71" pos:end="59:81"><name pos:start="59:71" pos:end="59:71">p</name><operator pos:start="59:72" pos:end="59:73">-&gt;</operator><name pos:start="59:74" pos:end="59:81">idwt_tmp</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:22"><block_content pos:start="61:13" pos:end="61:22">

            <return pos:start="61:13" pos:end="61:22">return <expr pos:start="61:20" pos:end="61:21"><operator pos:start="61:20" pos:end="61:20">-</operator><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="65:9" pos:end="149:9"><if pos:start="65:9" pos:end="77:9">if <condition pos:start="65:12" pos:end="65:25">(<expr pos:start="65:13" pos:end="65:24"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:24"><name pos:start="65:14" pos:end="65:14">s</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:24">num_refs</name></name></expr>)</condition> <block pos:start="65:27" pos:end="77:9">{<block_content pos:start="67:13" pos:end="75:13"> <comment type="block" pos:start="65:29" pos:end="65:39">/* intra */</comment>

            <for pos:start="67:13" pos:end="75:13">for <control pos:start="67:17" pos:end="67:47">(<init pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:22"><name pos:start="67:18" pos:end="67:18">y</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:38"><expr pos:start="67:25" pos:end="67:37"><name pos:start="67:25" pos:end="67:25">y</name> <operator pos:start="67:27" pos:end="67:27">&lt;</operator> <name pos:start="67:29" pos:end="67:37"><name pos:start="67:29" pos:end="67:29">p</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:37">height</name></name></expr>;</condition> <incr pos:start="67:40" pos:end="67:46"><expr pos:start="67:40" pos:end="67:46"><name pos:start="67:40" pos:end="67:40">y</name> <operator pos:start="67:42" pos:end="67:43">+=</operator> <literal type="number" pos:start="67:45" pos:end="67:46">16</literal></expr></incr>)</control> <block pos:start="67:49" pos:end="75:13">{<block_content pos:start="69:17" pos:end="73:114">

                <expr_stmt pos:start="69:17" pos:end="69:49"><expr pos:start="69:17" pos:end="69:48"><call pos:start="69:17" pos:end="69:48"><name pos:start="69:17" pos:end="69:38">ff_spatial_idwt_slice2</name><argument_list pos:start="69:39" pos:end="69:48">(<argument pos:start="69:40" pos:end="69:41"><expr pos:start="69:40" pos:end="69:41"><operator pos:start="69:40" pos:end="69:40">&amp;</operator><name pos:start="69:41" pos:end="69:41">d</name></expr></argument>, <argument pos:start="69:44" pos:end="69:47"><expr pos:start="69:44" pos:end="69:47"><name pos:start="69:44" pos:end="69:44">y</name><operator pos:start="69:45" pos:end="69:45">+</operator><literal type="number" pos:start="69:46" pos:end="69:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:51" pos:end="69:62">/* decode */</comment>

                <expr_stmt pos:start="71:17" pos:end="73:114"><expr pos:start="71:17" pos:end="73:113"><call pos:start="71:17" pos:end="73:113"><name pos:start="71:17" pos:end="71:51"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:27">diracdsp</name><operator pos:start="71:28" pos:end="71:28">.</operator><name pos:start="71:29" pos:end="71:51">put_signed_rect_clamped</name></name><argument_list pos:start="71:52" pos:end="73:113">(<argument pos:start="71:53" pos:end="71:71"><expr pos:start="71:53" pos:end="71:71"><name pos:start="71:53" pos:end="71:57">frame</name> <operator pos:start="71:59" pos:end="71:59">+</operator> <name pos:start="71:61" pos:end="71:61">y</name><operator pos:start="71:62" pos:end="71:62">*</operator><name pos:start="71:63" pos:end="71:71"><name pos:start="71:63" pos:end="71:63">p</name><operator pos:start="71:64" pos:end="71:65">-&gt;</operator><name pos:start="71:66" pos:end="71:71">stride</name></name></expr></argument>, <argument pos:start="71:74" pos:end="71:82"><expr pos:start="71:74" pos:end="71:82"><name pos:start="71:74" pos:end="71:82"><name pos:start="71:74" pos:end="71:74">p</name><operator pos:start="71:75" pos:end="71:76">-&gt;</operator><name pos:start="71:77" pos:end="71:82">stride</name></name></expr></argument>,

                                                    <argument pos:start="73:53" pos:end="73:82"><expr pos:start="73:53" pos:end="73:82"><name pos:start="73:53" pos:end="73:63"><name pos:start="73:53" pos:end="73:53">p</name><operator pos:start="73:54" pos:end="73:55">-&gt;</operator><name pos:start="73:56" pos:end="73:63">idwt_buf</name></name> <operator pos:start="73:65" pos:end="73:65">+</operator> <name pos:start="73:67" pos:end="73:67">y</name><operator pos:start="73:68" pos:end="73:68">*</operator><name pos:start="73:69" pos:end="73:82"><name pos:start="73:69" pos:end="73:69">p</name><operator pos:start="73:70" pos:end="73:71">-&gt;</operator><name pos:start="73:72" pos:end="73:82">idwt_stride</name></name></expr></argument>, <argument pos:start="73:85" pos:end="73:98"><expr pos:start="73:85" pos:end="73:98"><name pos:start="73:85" pos:end="73:98"><name pos:start="73:85" pos:end="73:85">p</name><operator pos:start="73:86" pos:end="73:87">-&gt;</operator><name pos:start="73:88" pos:end="73:98">idwt_stride</name></name></expr></argument>, <argument pos:start="73:101" pos:end="73:108"><expr pos:start="73:101" pos:end="73:108"><name pos:start="73:101" pos:end="73:108"><name pos:start="73:101" pos:end="73:101">p</name><operator pos:start="73:102" pos:end="73:103">-&gt;</operator><name pos:start="73:104" pos:end="73:108">width</name></name></expr></argument>, <argument pos:start="73:111" pos:end="73:112"><expr pos:start="73:111" pos:end="73:112"><literal type="number" pos:start="73:111" pos:end="73:112">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="149:9">else <block pos:start="77:16" pos:end="149:9">{<block_content pos:start="79:13" pos:end="147:13"> <comment type="block" pos:start="77:18" pos:end="77:28">/* inter */</comment>

            <decl_stmt pos:start="79:13" pos:end="79:47"><decl pos:start="79:13" pos:end="79:46"><type pos:start="79:13" pos:end="79:15"><name pos:start="79:13" pos:end="79:15">int</name></type> <name pos:start="79:17" pos:end="79:25">rowheight</name> <init pos:start="79:27" pos:end="79:46">= <expr pos:start="79:29" pos:end="79:46"><name pos:start="79:29" pos:end="79:36"><name pos:start="79:29" pos:end="79:29">p</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:36">ybsep</name></name><operator pos:start="79:37" pos:end="79:37">*</operator><name pos:start="79:38" pos:end="79:46"><name pos:start="79:38" pos:end="79:38">p</name><operator pos:start="79:39" pos:end="79:40">-&gt;</operator><name pos:start="79:41" pos:end="79:46">stride</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="83:13" pos:end="83:73"><expr pos:start="83:13" pos:end="83:72"><call pos:start="83:13" pos:end="83:72"><name pos:start="83:13" pos:end="83:28">select_dsp_funcs</name><argument_list pos:start="83:29" pos:end="83:72">(<argument pos:start="83:30" pos:end="83:30"><expr pos:start="83:30" pos:end="83:30"><name pos:start="83:30" pos:end="83:30">s</name></expr></argument>, <argument pos:start="83:33" pos:end="83:40"><expr pos:start="83:33" pos:end="83:40"><name pos:start="83:33" pos:end="83:40"><name pos:start="83:33" pos:end="83:33">p</name><operator pos:start="83:34" pos:end="83:35">-&gt;</operator><name pos:start="83:36" pos:end="83:40">width</name></name></expr></argument>, <argument pos:start="83:43" pos:end="83:51"><expr pos:start="83:43" pos:end="83:51"><name pos:start="83:43" pos:end="83:51"><name pos:start="83:43" pos:end="83:43">p</name><operator pos:start="83:44" pos:end="83:45">-&gt;</operator><name pos:start="83:46" pos:end="83:51">height</name></name></expr></argument>, <argument pos:start="83:54" pos:end="83:61"><expr pos:start="83:54" pos:end="83:61"><name pos:start="83:54" pos:end="83:61"><name pos:start="83:54" pos:end="83:54">p</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:61">xblen</name></name></expr></argument>, <argument pos:start="83:64" pos:end="83:71"><expr pos:start="83:64" pos:end="83:71"><name pos:start="83:64" pos:end="83:71"><name pos:start="83:64" pos:end="83:64">p</name><operator pos:start="83:65" pos:end="83:66">-&gt;</operator><name pos:start="83:67" pos:end="83:71">yblen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="87:13" pos:end="89:83">for <control pos:start="87:17" pos:end="87:45">(<init pos:start="87:18" pos:end="87:23"><expr pos:start="87:18" pos:end="87:22"><name pos:start="87:18" pos:end="87:18">i</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr>;</init> <condition pos:start="87:25" pos:end="87:40"><expr pos:start="87:25" pos:end="87:39"><name pos:start="87:25" pos:end="87:25">i</name> <operator pos:start="87:27" pos:end="87:27">&lt;</operator> <name pos:start="87:29" pos:end="87:39"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:39">num_refs</name></name></expr>;</condition> <incr pos:start="87:42" pos:end="87:44"><expr pos:start="87:42" pos:end="87:44"><name pos:start="87:42" pos:end="87:42">i</name><operator pos:start="87:43" pos:end="87:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:17" pos:end="89:83"><block_content pos:start="89:17" pos:end="89:83">

                <expr_stmt pos:start="89:17" pos:end="89:83"><expr pos:start="89:17" pos:end="89:82"><call pos:start="89:17" pos:end="89:82"><name pos:start="89:17" pos:end="89:36">interpolate_refplane</name><argument_list pos:start="89:37" pos:end="89:82">(<argument pos:start="89:38" pos:end="89:38"><expr pos:start="89:38" pos:end="89:38"><name pos:start="89:38" pos:end="89:38">s</name></expr></argument>, <argument pos:start="89:41" pos:end="89:54"><expr pos:start="89:41" pos:end="89:54"><name pos:start="89:41" pos:end="89:54"><name pos:start="89:41" pos:end="89:41">s</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:51">ref_pics</name><index pos:start="89:52" pos:end="89:54">[<expr pos:start="89:53" pos:end="89:53"><name pos:start="89:53" pos:end="89:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="89:57" pos:end="89:60"><expr pos:start="89:57" pos:end="89:60"><name pos:start="89:57" pos:end="89:60">comp</name></expr></argument>, <argument pos:start="89:63" pos:end="89:70"><expr pos:start="89:63" pos:end="89:70"><name pos:start="89:63" pos:end="89:70"><name pos:start="89:63" pos:end="89:63">p</name><operator pos:start="89:64" pos:end="89:65">-&gt;</operator><name pos:start="89:66" pos:end="89:70">width</name></name></expr></argument>, <argument pos:start="89:73" pos:end="89:81"><expr pos:start="89:73" pos:end="89:81"><name pos:start="89:73" pos:end="89:81"><name pos:start="89:73" pos:end="89:73">p</name><operator pos:start="89:74" pos:end="89:75">-&gt;</operator><name pos:start="89:76" pos:end="89:81">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="93:13" pos:end="93:56"><expr pos:start="93:13" pos:end="93:55"><call pos:start="93:13" pos:end="93:55"><name pos:start="93:13" pos:end="93:18">memset</name><argument_list pos:start="93:19" pos:end="93:55">(<argument pos:start="93:20" pos:end="93:27"><expr pos:start="93:20" pos:end="93:27"><name pos:start="93:20" pos:end="93:27"><name pos:start="93:20" pos:end="93:20">s</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:27">mctmp</name></name></expr></argument>, <argument pos:start="93:30" pos:end="93:30"><expr pos:start="93:30" pos:end="93:30"><literal type="number" pos:start="93:30" pos:end="93:30">0</literal></expr></argument>, <argument pos:start="93:33" pos:end="93:54"><expr pos:start="93:33" pos:end="93:54"><literal type="number" pos:start="93:33" pos:end="93:33">4</literal><operator pos:start="93:34" pos:end="93:34">*</operator><name pos:start="93:35" pos:end="93:44"><name pos:start="93:35" pos:end="93:35">p</name><operator pos:start="93:36" pos:end="93:37">-&gt;</operator><name pos:start="93:38" pos:end="93:44">yoffset</name></name><operator pos:start="93:45" pos:end="93:45">*</operator><name pos:start="93:46" pos:end="93:54"><name pos:start="93:46" pos:end="93:46">p</name><operator pos:start="93:47" pos:end="93:48">-&gt;</operator><name pos:start="93:49" pos:end="93:54">stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:31"><expr pos:start="97:13" pos:end="97:30"><name pos:start="97:13" pos:end="97:16">dsty</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <operator pos:start="97:20" pos:end="97:20">-</operator><name pos:start="97:21" pos:end="97:30"><name pos:start="97:21" pos:end="97:21">p</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:30">yoffset</name></name></expr>;</expr_stmt>

            <for pos:start="99:13" pos:end="147:13">for <control pos:start="99:17" pos:end="99:45">(<init pos:start="99:18" pos:end="99:23"><expr pos:start="99:18" pos:end="99:22"><name pos:start="99:18" pos:end="99:18">y</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</init> <condition pos:start="99:25" pos:end="99:40"><expr pos:start="99:25" pos:end="99:39"><name pos:start="99:25" pos:end="99:25">y</name> <operator pos:start="99:27" pos:end="99:27">&lt;</operator> <name pos:start="99:29" pos:end="99:39"><name pos:start="99:29" pos:end="99:29">s</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:39">blheight</name></name></expr>;</condition> <incr pos:start="99:42" pos:end="99:44"><expr pos:start="99:42" pos:end="99:44"><name pos:start="99:42" pos:end="99:42">y</name><operator pos:start="99:43" pos:end="99:44">++</operator></expr></incr>)</control> <block pos:start="99:47" pos:end="147:13">{<block_content pos:start="101:17" pos:end="145:33">

                <decl_stmt pos:start="101:17" pos:end="103:43"><decl pos:start="101:17" pos:end="101:29"><type pos:start="101:17" pos:end="101:19"><name pos:start="101:17" pos:end="101:19">int</name></type> <name pos:start="101:21" pos:end="101:21">h</name>     <init pos:start="101:27" pos:end="101:29">= <expr pos:start="101:29" pos:end="101:29"><literal type="number" pos:start="101:29" pos:end="101:29">0</literal></expr></init></decl>,

                    <decl pos:start="103:21" pos:end="103:42"><type ref="prev" pos:start="101:17" pos:end="101:19"/><name pos:start="103:21" pos:end="103:25">start</name> <init pos:start="103:27" pos:end="103:42">= <expr pos:start="103:29" pos:end="103:42"><call pos:start="103:29" pos:end="103:42"><name pos:start="103:29" pos:end="103:33">FFMAX</name><argument_list pos:start="103:34" pos:end="103:42">(<argument pos:start="103:35" pos:end="103:38"><expr pos:start="103:35" pos:end="103:38"><name pos:start="103:35" pos:end="103:38">dsty</name></expr></argument>, <argument pos:start="103:41" pos:end="103:41"><expr pos:start="103:41" pos:end="103:41"><literal type="number" pos:start="103:41" pos:end="103:41">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="105:17" pos:end="105:60"><decl pos:start="105:17" pos:end="105:59"><type pos:start="105:17" pos:end="105:26"><name pos:start="105:17" pos:end="105:24">uint16_t</name> <modifier pos:start="105:26" pos:end="105:26">*</modifier></type><name pos:start="105:27" pos:end="105:31">mctmp</name>    <init pos:start="105:36" pos:end="105:59">= <expr pos:start="105:38" pos:end="105:59"><name pos:start="105:38" pos:end="105:45"><name pos:start="105:38" pos:end="105:38">s</name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:45">mctmp</name></name> <operator pos:start="105:47" pos:end="105:47">+</operator> <name pos:start="105:49" pos:end="105:49">y</name><operator pos:start="105:50" pos:end="105:50">*</operator><name pos:start="105:51" pos:end="105:59">rowheight</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="107:17" pos:end="107:64"><decl pos:start="107:17" pos:end="107:63"><type pos:start="107:17" pos:end="107:28"><name pos:start="107:17" pos:end="107:26">DiracBlock</name> <modifier pos:start="107:28" pos:end="107:28">*</modifier></type><name pos:start="107:29" pos:end="107:34">blocks</name> <init pos:start="107:36" pos:end="107:63">= <expr pos:start="107:38" pos:end="107:63"><name pos:start="107:38" pos:end="107:48"><name pos:start="107:38" pos:end="107:38">s</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:48">blmotion</name></name> <operator pos:start="107:50" pos:end="107:50">+</operator> <name pos:start="107:52" pos:end="107:52">y</name><operator pos:start="107:53" pos:end="107:53">*</operator><name pos:start="107:54" pos:end="107:63"><name pos:start="107:54" pos:end="107:54">s</name><operator pos:start="107:55" pos:end="107:56">-&gt;</operator><name pos:start="107:57" pos:end="107:63">blwidth</name></name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="111:17" pos:end="111:43"><expr pos:start="111:17" pos:end="111:42"><call pos:start="111:17" pos:end="111:42"><name pos:start="111:17" pos:end="111:33">init_obmc_weights</name><argument_list pos:start="111:34" pos:end="111:42">(<argument pos:start="111:35" pos:end="111:35"><expr pos:start="111:35" pos:end="111:35"><name pos:start="111:35" pos:end="111:35">s</name></expr></argument>, <argument pos:start="111:38" pos:end="111:38"><expr pos:start="111:38" pos:end="111:38"><name pos:start="111:38" pos:end="111:38">p</name></expr></argument>, <argument pos:start="111:41" pos:end="111:41"><expr pos:start="111:41" pos:end="111:41"><name pos:start="111:41" pos:end="111:41">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="115:17" pos:end="121:50"><if pos:start="115:17" pos:end="117:42">if <condition pos:start="115:20" pos:end="115:69">(<expr pos:start="115:21" pos:end="115:68"><name pos:start="115:21" pos:end="115:21">y</name> <operator pos:start="115:23" pos:end="115:24">==</operator> <name pos:start="115:26" pos:end="115:36"><name pos:start="115:26" pos:end="115:26">s</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:36">blheight</name></name><operator pos:start="115:37" pos:end="115:37">-</operator><literal type="number" pos:start="115:38" pos:end="115:38">1</literal> <operator pos:start="115:40" pos:end="115:41">||</operator> <name pos:start="115:43" pos:end="115:47">start</name><operator pos:start="115:48" pos:end="115:48">+</operator><name pos:start="115:49" pos:end="115:56"><name pos:start="115:49" pos:end="115:49">p</name><operator pos:start="115:50" pos:end="115:51">-&gt;</operator><name pos:start="115:52" pos:end="115:56">ybsep</name></name> <operator pos:start="115:58" pos:end="115:58">&gt;</operator> <name pos:start="115:60" pos:end="115:68"><name pos:start="115:60" pos:end="115:60">p</name><operator pos:start="115:61" pos:end="115:62">-&gt;</operator><name pos:start="115:63" pos:end="115:68">height</name></name></expr>)</condition><block type="pseudo" pos:start="117:21" pos:end="117:42"><block_content pos:start="117:21" pos:end="117:42">

                    <expr_stmt pos:start="117:21" pos:end="117:42"><expr pos:start="117:21" pos:end="117:41"><name pos:start="117:21" pos:end="117:21">h</name> <operator pos:start="117:23" pos:end="117:23">=</operator> <name pos:start="117:25" pos:end="117:33"><name pos:start="117:25" pos:end="117:25">p</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:33">height</name></name> <operator pos:start="117:35" pos:end="117:35">-</operator> <name pos:start="117:37" pos:end="117:41">start</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="119:17" pos:end="121:50">else<block type="pseudo" pos:start="121:21" pos:end="121:50"><block_content pos:start="121:21" pos:end="121:50">

                    <expr_stmt pos:start="121:21" pos:end="121:50"><expr pos:start="121:21" pos:end="121:49"><name pos:start="121:21" pos:end="121:21">h</name> <operator pos:start="121:23" pos:end="121:23">=</operator> <name pos:start="121:25" pos:end="121:32"><name pos:start="121:25" pos:end="121:25">p</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:32">ybsep</name></name> <operator pos:start="121:34" pos:end="121:34">-</operator> <operator pos:start="121:36" pos:end="121:36">(</operator><name pos:start="121:37" pos:end="121:41">start</name> <operator pos:start="121:43" pos:end="121:43">-</operator> <name pos:start="121:45" pos:end="121:48">dsty</name><operator pos:start="121:49" pos:end="121:49">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="123:17" pos:end="125:26"><if pos:start="123:17" pos:end="125:26">if <condition pos:start="123:20" pos:end="123:26">(<expr pos:start="123:21" pos:end="123:25"><name pos:start="123:21" pos:end="123:21">h</name> <operator pos:start="123:23" pos:end="123:23">&lt;</operator> <literal type="number" pos:start="123:25" pos:end="123:25">0</literal></expr>)</condition><block type="pseudo" pos:start="125:21" pos:end="125:26"><block_content pos:start="125:21" pos:end="125:26">

                    <break pos:start="125:21" pos:end="125:26">break;</break></block_content></block></if></if_stmt>



                <expr_stmt pos:start="129:17" pos:end="129:69"><expr pos:start="129:17" pos:end="129:68"><call pos:start="129:17" pos:end="129:68"><name pos:start="129:17" pos:end="129:22">memset</name><argument_list pos:start="129:23" pos:end="129:68">(<argument pos:start="129:24" pos:end="129:51"><expr pos:start="129:24" pos:end="129:51"><name pos:start="129:24" pos:end="129:28">mctmp</name><operator pos:start="129:29" pos:end="129:29">+</operator><literal type="number" pos:start="129:30" pos:end="129:30">2</literal><operator pos:start="129:31" pos:end="129:31">*</operator><name pos:start="129:32" pos:end="129:41"><name pos:start="129:32" pos:end="129:32">p</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:41">yoffset</name></name><operator pos:start="129:42" pos:end="129:42">*</operator><name pos:start="129:43" pos:end="129:51"><name pos:start="129:43" pos:end="129:43">p</name><operator pos:start="129:44" pos:end="129:45">-&gt;</operator><name pos:start="129:46" pos:end="129:51">stride</name></name></expr></argument>, <argument pos:start="129:54" pos:end="129:54"><expr pos:start="129:54" pos:end="129:54"><literal type="number" pos:start="129:54" pos:end="129:54">0</literal></expr></argument>, <argument pos:start="129:57" pos:end="129:67"><expr pos:start="129:57" pos:end="129:67"><literal type="number" pos:start="129:57" pos:end="129:57">2</literal><operator pos:start="129:58" pos:end="129:58">*</operator><name pos:start="129:59" pos:end="129:67">rowheight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:53"><expr pos:start="131:17" pos:end="131:52"><call pos:start="131:17" pos:end="131:52"><name pos:start="131:17" pos:end="131:22">mc_row</name><argument_list pos:start="131:23" pos:end="131:52">(<argument pos:start="131:24" pos:end="131:24"><expr pos:start="131:24" pos:end="131:24"><name pos:start="131:24" pos:end="131:24">s</name></expr></argument>, <argument pos:start="131:27" pos:end="131:32"><expr pos:start="131:27" pos:end="131:32"><name pos:start="131:27" pos:end="131:32">blocks</name></expr></argument>, <argument pos:start="131:35" pos:end="131:39"><expr pos:start="131:35" pos:end="131:39"><name pos:start="131:35" pos:end="131:39">mctmp</name></expr></argument>, <argument pos:start="131:42" pos:end="131:45"><expr pos:start="131:42" pos:end="131:45"><name pos:start="131:42" pos:end="131:45">comp</name></expr></argument>, <argument pos:start="131:48" pos:end="131:51"><expr pos:start="131:48" pos:end="131:51"><name pos:start="131:48" pos:end="131:51">dsty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="135:17" pos:end="135:63"><expr pos:start="135:17" pos:end="135:62"><name pos:start="135:17" pos:end="135:21">mctmp</name> <operator pos:start="135:23" pos:end="135:24">+=</operator> <operator pos:start="135:26" pos:end="135:26">(</operator><name pos:start="135:27" pos:end="135:31">start</name> <operator pos:start="135:33" pos:end="135:33">-</operator> <name pos:start="135:35" pos:end="135:38">dsty</name><operator pos:start="135:39" pos:end="135:39">)</operator><operator pos:start="135:40" pos:end="135:40">*</operator><name pos:start="135:41" pos:end="135:49"><name pos:start="135:41" pos:end="135:41">p</name><operator pos:start="135:42" pos:end="135:43">-&gt;</operator><name pos:start="135:44" pos:end="135:49">stride</name></name> <operator pos:start="135:51" pos:end="135:51">+</operator> <name pos:start="135:53" pos:end="135:62"><name pos:start="135:53" pos:end="135:53">p</name><operator pos:start="135:54" pos:end="135:55">-&gt;</operator><name pos:start="135:56" pos:end="135:62">xoffset</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:54"><expr pos:start="137:17" pos:end="137:53"><call pos:start="137:17" pos:end="137:53"><name pos:start="137:17" pos:end="137:38">ff_spatial_idwt_slice2</name><argument_list pos:start="137:39" pos:end="137:53">(<argument pos:start="137:40" pos:end="137:41"><expr pos:start="137:40" pos:end="137:41"><operator pos:start="137:40" pos:end="137:40">&amp;</operator><name pos:start="137:41" pos:end="137:41">d</name></expr></argument>, <argument pos:start="137:44" pos:end="137:52"><expr pos:start="137:44" pos:end="137:52"><name pos:start="137:44" pos:end="137:48">start</name> <operator pos:start="137:50" pos:end="137:50">+</operator> <name pos:start="137:52" pos:end="137:52">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="137:56" pos:end="137:67">/* decode */</comment>

                <expr_stmt pos:start="139:17" pos:end="141:110"><expr pos:start="139:17" pos:end="141:109"><call pos:start="139:17" pos:end="141:109"><name pos:start="139:17" pos:end="139:44"><name pos:start="139:17" pos:end="139:17">s</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:27">diracdsp</name><operator pos:start="139:28" pos:end="139:28">.</operator><name pos:start="139:29" pos:end="139:44">add_rect_clamped</name></name><argument_list pos:start="139:45" pos:end="141:109">(<argument pos:start="139:46" pos:end="139:68"><expr pos:start="139:46" pos:end="139:68"><name pos:start="139:46" pos:end="139:50">frame</name> <operator pos:start="139:52" pos:end="139:52">+</operator> <name pos:start="139:54" pos:end="139:58">start</name><operator pos:start="139:59" pos:end="139:59">*</operator><name pos:start="139:60" pos:end="139:68"><name pos:start="139:60" pos:end="139:60">p</name><operator pos:start="139:61" pos:end="139:62">-&gt;</operator><name pos:start="139:63" pos:end="139:68">stride</name></name></expr></argument>, <argument pos:start="139:71" pos:end="139:75"><expr pos:start="139:71" pos:end="139:75"><name pos:start="139:71" pos:end="139:75">mctmp</name></expr></argument>, <argument pos:start="139:78" pos:end="139:86"><expr pos:start="139:78" pos:end="139:86"><name pos:start="139:78" pos:end="139:86"><name pos:start="139:78" pos:end="139:78">p</name><operator pos:start="139:79" pos:end="139:80">-&gt;</operator><name pos:start="139:81" pos:end="139:86">stride</name></name></expr></argument>,

                                             <argument pos:start="141:46" pos:end="141:79"><expr pos:start="141:46" pos:end="141:79"><name pos:start="141:46" pos:end="141:56"><name pos:start="141:46" pos:end="141:46">p</name><operator pos:start="141:47" pos:end="141:48">-&gt;</operator><name pos:start="141:49" pos:end="141:56">idwt_buf</name></name> <operator pos:start="141:58" pos:end="141:58">+</operator> <name pos:start="141:60" pos:end="141:64">start</name><operator pos:start="141:65" pos:end="141:65">*</operator><name pos:start="141:66" pos:end="141:79"><name pos:start="141:66" pos:end="141:66">p</name><operator pos:start="141:67" pos:end="141:68">-&gt;</operator><name pos:start="141:69" pos:end="141:79">idwt_stride</name></name></expr></argument>, <argument pos:start="141:82" pos:end="141:95"><expr pos:start="141:82" pos:end="141:95"><name pos:start="141:82" pos:end="141:95"><name pos:start="141:82" pos:end="141:82">p</name><operator pos:start="141:83" pos:end="141:84">-&gt;</operator><name pos:start="141:85" pos:end="141:95">idwt_stride</name></name></expr></argument>, <argument pos:start="141:98" pos:end="141:105"><expr pos:start="141:98" pos:end="141:105"><name pos:start="141:98" pos:end="141:105"><name pos:start="141:98" pos:end="141:98">p</name><operator pos:start="141:99" pos:end="141:100">-&gt;</operator><name pos:start="141:101" pos:end="141:105">width</name></name></expr></argument>, <argument pos:start="141:108" pos:end="141:108"><expr pos:start="141:108" pos:end="141:108"><name pos:start="141:108" pos:end="141:108">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="145:17" pos:end="145:33"><expr pos:start="145:17" pos:end="145:32"><name pos:start="145:17" pos:end="145:20">dsty</name> <operator pos:start="145:22" pos:end="145:23">+=</operator> <name pos:start="145:25" pos:end="145:32"><name pos:start="145:25" pos:end="145:25">p</name><operator pos:start="145:26" pos:end="145:27">-&gt;</operator><name pos:start="145:28" pos:end="145:32">ybsep</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>





    <return pos:start="157:5" pos:end="157:13">return <expr pos:start="157:12" pos:end="157:12"><literal type="number" pos:start="157:12" pos:end="157:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
