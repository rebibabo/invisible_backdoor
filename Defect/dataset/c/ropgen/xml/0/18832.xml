<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18832.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">av_seek_frame_generic</name><parameter_list pos:start="1:33" pos:end="3:80">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:49"><decl pos:start="3:34" pos:end="3:49"><type pos:start="3:34" pos:end="3:49"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:49">stream_index</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:68"><decl pos:start="3:52" pos:end="3:68"><type pos:start="3:52" pos:end="3:68"><name pos:start="3:52" pos:end="3:58">int64_t</name></type> <name pos:start="3:60" pos:end="3:68">timestamp</name></decl></parameter>, <parameter pos:start="3:71" pos:end="3:79"><decl pos:start="3:71" pos:end="3:79"><type pos:start="3:71" pos:end="3:79"><name pos:start="3:71" pos:end="3:73">int</name></type> <name pos:start="3:75" pos:end="3:79">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:13">

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">AVIndexEntry</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">ie</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:6">st</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <name pos:start="15:10" pos:end="15:33"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:19">streams</name><index pos:start="15:20" pos:end="15:33">[<expr pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:32">stream_index</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:60"><expr pos:start="19:5" pos:end="19:59"><name pos:start="19:5" pos:end="19:9">index</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:59"><name pos:start="19:13" pos:end="19:37">av_index_search_timestamp</name><argument_list pos:start="19:38" pos:end="19:59">(<argument pos:start="19:39" pos:end="19:40"><expr pos:start="19:39" pos:end="19:40"><name pos:start="19:39" pos:end="19:40">st</name></expr></argument>, <argument pos:start="19:43" pos:end="19:51"><expr pos:start="19:43" pos:end="19:51"><name pos:start="19:43" pos:end="19:51">timestamp</name></expr></argument>, <argument pos:start="19:54" pos:end="19:58"><expr pos:start="19:54" pos:end="19:58"><name pos:start="19:54" pos:end="19:58">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="69:5"><if pos:start="23:5" pos:end="69:5">if<condition pos:start="23:7" pos:end="23:50">(<expr pos:start="23:8" pos:end="23:49"><name pos:start="23:8" pos:end="23:12">index</name> <operator pos:start="23:14" pos:end="23:14">&lt;</operator> <literal type="number" pos:start="23:16" pos:end="23:16">0</literal> <operator pos:start="23:18" pos:end="23:19">||</operator> <name pos:start="23:21" pos:end="23:25">index</name><operator pos:start="23:26" pos:end="23:27">==</operator><name pos:start="23:28" pos:end="23:47"><name pos:start="23:28" pos:end="23:29">st</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:47">nb_index_entries</name></name><operator pos:start="23:48" pos:end="23:48">-</operator><literal type="number" pos:start="23:49" pos:end="23:49">1</literal></expr>)</condition><block pos:start="23:51" pos:end="69:5">{<block_content pos:start="25:9" pos:end="67:64">

        <decl_stmt pos:start="25:9" pos:end="25:14"><decl pos:start="25:9" pos:end="25:13"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:21"><decl pos:start="27:9" pos:end="27:20"><type pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:16">AVPacket</name></type> <name pos:start="27:18" pos:end="27:20">pkt</name></decl>;</decl_stmt>



        <if_stmt pos:start="31:9" pos:end="43:42"><if pos:start="31:9" pos:end="41:9">if<condition pos:start="31:11" pos:end="31:32">(<expr pos:start="31:12" pos:end="31:31"><name pos:start="31:12" pos:end="31:31"><name pos:start="31:12" pos:end="31:13">st</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:31">nb_index_entries</name></name></expr>)</condition><block pos:start="31:33" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:52">

            <expr_stmt pos:start="33:13" pos:end="33:38"><expr pos:start="33:13" pos:end="33:37"><call pos:start="33:13" pos:end="33:37"><name pos:start="33:13" pos:end="33:18">assert</name><argument_list pos:start="33:19" pos:end="33:37">(<argument pos:start="33:20" pos:end="33:36"><expr pos:start="33:20" pos:end="33:36"><name pos:start="33:20" pos:end="33:36"><name pos:start="33:20" pos:end="33:21">st</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:36">index_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:59"><expr pos:start="35:13" pos:end="35:58"><name pos:start="35:13" pos:end="35:14">ie</name><operator pos:start="35:15" pos:end="35:15">=</operator> <operator pos:start="35:17" pos:end="35:17">&amp;</operator><name pos:start="35:18" pos:end="35:58"><name pos:start="35:18" pos:end="35:19">st</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:34">index_entries</name><index pos:start="35:35" pos:end="35:58">[<expr pos:start="35:36" pos:end="35:57"><name pos:start="35:36" pos:end="35:55"><name pos:start="35:36" pos:end="35:37">st</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:55">nb_index_entries</name></name><operator pos:start="35:56" pos:end="35:56">-</operator><literal type="number" pos:start="35:57" pos:end="35:57">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:48"><expr pos:start="37:13" pos:end="37:47"><call pos:start="37:13" pos:end="37:47"><name pos:start="37:13" pos:end="37:21">url_fseek</name><argument_list pos:start="37:22" pos:end="37:47">(<argument pos:start="37:23" pos:end="37:27"><expr pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:27">pb</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:36"><expr pos:start="37:30" pos:end="37:36"><name pos:start="37:30" pos:end="37:36"><name pos:start="37:30" pos:end="37:31">ie</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:36">pos</name></name></expr></argument>, <argument pos:start="37:39" pos:end="37:46"><expr pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:52"><expr pos:start="39:13" pos:end="39:51"><call pos:start="39:13" pos:end="39:51"><name pos:start="39:13" pos:end="39:29">av_update_cur_dts</name><argument_list pos:start="39:30" pos:end="39:51">(<argument pos:start="39:31" pos:end="39:31"><expr pos:start="39:31" pos:end="39:31"><name pos:start="39:31" pos:end="39:31">s</name></expr></argument>, <argument pos:start="39:34" pos:end="39:35"><expr pos:start="39:34" pos:end="39:35"><name pos:start="39:34" pos:end="39:35">st</name></expr></argument>, <argument pos:start="39:38" pos:end="39:50"><expr pos:start="39:38" pos:end="39:50"><name pos:start="39:38" pos:end="39:50"><name pos:start="39:38" pos:end="39:39">ie</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:50">timestamp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="41:10" pos:end="43:42">else<block type="pseudo" pos:start="43:13" pos:end="43:42"><block_content pos:start="43:13" pos:end="43:42">

            <expr_stmt pos:start="43:13" pos:end="43:42"><expr pos:start="43:13" pos:end="43:41"><call pos:start="43:13" pos:end="43:41"><name pos:start="43:13" pos:end="43:21">url_fseek</name><argument_list pos:start="43:22" pos:end="43:41">(<argument pos:start="43:23" pos:end="43:27"><expr pos:start="43:23" pos:end="43:27"><name pos:start="43:23" pos:end="43:27"><name pos:start="43:23" pos:end="43:23">s</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:27">pb</name></name></expr></argument>, <argument pos:start="43:30" pos:end="43:30"><expr pos:start="43:30" pos:end="43:30"><literal type="number" pos:start="43:30" pos:end="43:30">0</literal></expr></argument>, <argument pos:start="43:33" pos:end="43:40"><expr pos:start="43:33" pos:end="43:40"><name pos:start="43:33" pos:end="43:40">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <for pos:start="47:9" pos:end="65:9">for<control pos:start="47:12" pos:end="47:22">(<init pos:start="47:13" pos:end="47:16"><expr pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:13">i</name><operator pos:start="47:14" pos:end="47:14">=</operator><literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>;</init><condition pos:start="47:17" pos:end="47:17">;</condition> <incr pos:start="47:19" pos:end="47:21"><expr pos:start="47:19" pos:end="47:21"><name pos:start="47:19" pos:end="47:19">i</name><operator pos:start="47:20" pos:end="47:21">++</operator></expr></incr>)</control> <block pos:start="47:24" pos:end="65:9">{<block_content pos:start="49:13" pos:end="63:13">

            <decl_stmt pos:start="49:13" pos:end="49:45"><decl pos:start="49:13" pos:end="49:44"><type pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">int</name></type> <name pos:start="49:17" pos:end="49:19">ret</name> <init pos:start="49:21" pos:end="49:44">= <expr pos:start="49:23" pos:end="49:44"><call pos:start="49:23" pos:end="49:44"><name pos:start="49:23" pos:end="49:35">av_read_frame</name><argument_list pos:start="49:36" pos:end="49:44">(<argument pos:start="49:37" pos:end="49:37"><expr pos:start="49:37" pos:end="49:37"><name pos:start="49:37" pos:end="49:37">s</name></expr></argument>, <argument pos:start="49:40" pos:end="49:43"><expr pos:start="49:40" pos:end="49:43"><operator pos:start="49:40" pos:end="49:40">&amp;</operator><name pos:start="49:41" pos:end="49:43">pkt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="51:13" pos:end="53:22"><if pos:start="51:13" pos:end="53:22">if<condition pos:start="51:15" pos:end="51:21">(<expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:18">ret</name><operator pos:start="51:19" pos:end="51:19">&lt;</operator><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:22"><block_content pos:start="53:17" pos:end="53:22">

                <break pos:start="53:17" pos:end="53:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><call pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:26">av_free_packet</name><argument_list pos:start="55:27" pos:end="55:32">(<argument pos:start="55:28" pos:end="55:31"><expr pos:start="55:28" pos:end="55:31"><operator pos:start="55:28" pos:end="55:28">&amp;</operator><name pos:start="55:29" pos:end="55:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="63:13"><if pos:start="57:13" pos:end="63:13">if<condition pos:start="57:15" pos:end="57:48">(<expr pos:start="57:16" pos:end="57:47"><name pos:start="57:16" pos:end="57:27">stream_index</name> <operator pos:start="57:29" pos:end="57:30">==</operator> <name pos:start="57:32" pos:end="57:47"><name pos:start="57:32" pos:end="57:34">pkt</name><operator pos:start="57:35" pos:end="57:35">.</operator><name pos:start="57:36" pos:end="57:47">stream_index</name></name></expr>)</condition><block pos:start="57:49" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:26">

                <if_stmt pos:start="59:17" pos:end="61:26"><if pos:start="59:17" pos:end="61:26">if<condition pos:start="59:19" pos:end="59:69">(<expr pos:start="59:20" pos:end="59:68"><operator pos:start="59:20" pos:end="59:20">(</operator><name pos:start="59:21" pos:end="59:29"><name pos:start="59:21" pos:end="59:23">pkt</name><operator pos:start="59:24" pos:end="59:24">.</operator><name pos:start="59:25" pos:end="59:29">flags</name></name> <operator pos:start="59:31" pos:end="59:31">&amp;</operator> <name pos:start="59:33" pos:end="59:44">PKT_FLAG_KEY</name><operator pos:start="59:45" pos:end="59:45">)</operator> <operator pos:start="59:47" pos:end="59:48">&amp;&amp;</operator> <name pos:start="59:50" pos:end="59:56"><name pos:start="59:50" pos:end="59:52">pkt</name><operator pos:start="59:53" pos:end="59:53">.</operator><name pos:start="59:54" pos:end="59:56">dts</name></name> <operator pos:start="59:58" pos:end="59:58">&gt;</operator> <name pos:start="59:60" pos:end="59:68">timestamp</name></expr>)</condition><block type="pseudo" pos:start="61:21" pos:end="61:26"><block_content pos:start="61:21" pos:end="61:26">

                    <break pos:start="61:21" pos:end="61:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="67:9" pos:end="67:64"><expr pos:start="67:9" pos:end="67:63"><name pos:start="67:9" pos:end="67:13">index</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <call pos:start="67:17" pos:end="67:63"><name pos:start="67:17" pos:end="67:41">av_index_search_timestamp</name><argument_list pos:start="67:42" pos:end="67:63">(<argument pos:start="67:43" pos:end="67:44"><expr pos:start="67:43" pos:end="67:44"><name pos:start="67:43" pos:end="67:44">st</name></expr></argument>, <argument pos:start="67:47" pos:end="67:55"><expr pos:start="67:47" pos:end="67:55"><name pos:start="67:47" pos:end="67:55">timestamp</name></expr></argument>, <argument pos:start="67:58" pos:end="67:62"><expr pos:start="67:58" pos:end="67:62"><name pos:start="67:58" pos:end="67:62">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="73:18"><if pos:start="71:5" pos:end="73:18">if <condition pos:start="71:8" pos:end="71:18">(<expr pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:13">index</name> <operator pos:start="71:15" pos:end="71:15">&lt;</operator> <literal type="number" pos:start="71:17" pos:end="71:17">0</literal></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:18"><block_content pos:start="73:9" pos:end="73:18">

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:27"><expr pos:start="77:5" pos:end="77:26"><call pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:23">av_read_frame_flush</name><argument_list pos:start="77:24" pos:end="77:26">(<argument pos:start="77:25" pos:end="77:25"><expr pos:start="77:25" pos:end="77:25"><name pos:start="77:25" pos:end="77:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:30">(<expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:18">iformat</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:29">read_seek</name></name></expr>)</condition><block pos:start="79:31" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:21">

        <if_stmt pos:start="81:9" pos:end="83:21"><if pos:start="81:9" pos:end="83:21">if<condition pos:start="81:11" pos:end="81:73">(<expr pos:start="81:12" pos:end="81:72"><call pos:start="81:12" pos:end="81:67"><name pos:start="81:12" pos:end="81:32"><name pos:start="81:12" pos:end="81:12">s</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:21">iformat</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:32">read_seek</name></name><argument_list pos:start="81:33" pos:end="81:67">(<argument pos:start="81:34" pos:end="81:34"><expr pos:start="81:34" pos:end="81:34"><name pos:start="81:34" pos:end="81:34">s</name></expr></argument>, <argument pos:start="81:37" pos:end="81:48"><expr pos:start="81:37" pos:end="81:48"><name pos:start="81:37" pos:end="81:48">stream_index</name></expr></argument>, <argument pos:start="81:51" pos:end="81:59"><expr pos:start="81:51" pos:end="81:59"><name pos:start="81:51" pos:end="81:59">timestamp</name></expr></argument>, <argument pos:start="81:62" pos:end="81:66"><expr pos:start="81:62" pos:end="81:66"><name pos:start="81:62" pos:end="81:66">flags</name></expr></argument>)</argument_list></call> <operator pos:start="81:69" pos:end="81:70">&gt;=</operator> <literal type="number" pos:start="81:72" pos:end="81:72">0</literal></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:21"><block_content pos:start="83:13" pos:end="83:21">

            <return pos:start="83:13" pos:end="83:21">return <expr pos:start="83:20" pos:end="83:20"><literal type="number" pos:start="83:20" pos:end="83:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:35"><expr pos:start="87:5" pos:end="87:34"><name pos:start="87:5" pos:end="87:6">ie</name> <operator pos:start="87:8" pos:end="87:8">=</operator> <operator pos:start="87:10" pos:end="87:10">&amp;</operator><name pos:start="87:11" pos:end="87:34"><name pos:start="87:11" pos:end="87:12">st</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:27">index_entries</name><index pos:start="87:28" pos:end="87:34">[<expr pos:start="87:29" pos:end="87:33"><name pos:start="87:29" pos:end="87:33">index</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:40"><expr pos:start="89:5" pos:end="89:39"><call pos:start="89:5" pos:end="89:39"><name pos:start="89:5" pos:end="89:13">url_fseek</name><argument_list pos:start="89:14" pos:end="89:39">(<argument pos:start="89:15" pos:end="89:19"><expr pos:start="89:15" pos:end="89:19"><name pos:start="89:15" pos:end="89:19"><name pos:start="89:15" pos:end="89:15">s</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:19">pb</name></name></expr></argument>, <argument pos:start="89:22" pos:end="89:28"><expr pos:start="89:22" pos:end="89:28"><name pos:start="89:22" pos:end="89:28"><name pos:start="89:22" pos:end="89:23">ie</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:28">pos</name></name></expr></argument>, <argument pos:start="89:31" pos:end="89:38"><expr pos:start="89:31" pos:end="89:38"><name pos:start="89:31" pos:end="89:38">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:44"><expr pos:start="93:5" pos:end="93:43"><call pos:start="93:5" pos:end="93:43"><name pos:start="93:5" pos:end="93:21">av_update_cur_dts</name><argument_list pos:start="93:22" pos:end="93:43">(<argument pos:start="93:23" pos:end="93:23"><expr pos:start="93:23" pos:end="93:23"><name pos:start="93:23" pos:end="93:23">s</name></expr></argument>, <argument pos:start="93:26" pos:end="93:27"><expr pos:start="93:26" pos:end="93:27"><name pos:start="93:26" pos:end="93:27">st</name></expr></argument>, <argument pos:start="93:30" pos:end="93:42"><expr pos:start="93:30" pos:end="93:42"><name pos:start="93:30" pos:end="93:42"><name pos:start="93:30" pos:end="93:31">ie</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:42">timestamp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="97:5" pos:end="97:13">return <expr pos:start="97:12" pos:end="97:12"><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
