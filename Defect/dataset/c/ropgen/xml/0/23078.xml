<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23078.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">memory_region_iommu_replay</name><parameter_list pos:start="1:32" pos:end="3:66">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:44">MemoryRegion</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">mr</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:58">Notifier</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">n</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><name pos:start="3:33" pos:end="3:38">hwaddr</name></type> <name pos:start="3:40" pos:end="3:50">granularity</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:65"><decl pos:start="3:53" pos:end="3:65"><type pos:start="3:53" pos:end="3:65"><name pos:start="3:53" pos:end="3:56">bool</name></type> <name pos:start="3:58" pos:end="3:65">is_write</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:5">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">hwaddr</name></type> <name pos:start="7:12" pos:end="7:15">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">IOMMUTLBEntry</name></type> <name pos:start="9:19" pos:end="9:23">iotlb</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="35:5">for <control pos:start="13:9" pos:end="13:70">(<init pos:start="13:10" pos:end="13:18"><expr pos:start="13:10" pos:end="13:17"><name pos:start="13:10" pos:end="13:13">addr</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>;</init> <condition pos:start="13:20" pos:end="13:49"><expr pos:start="13:20" pos:end="13:48"><name pos:start="13:20" pos:end="13:23">addr</name> <operator pos:start="13:25" pos:end="13:25">&lt;</operator> <call pos:start="13:27" pos:end="13:48"><name pos:start="13:27" pos:end="13:44">memory_region_size</name><argument_list pos:start="13:45" pos:end="13:48">(<argument pos:start="13:46" pos:end="13:47"><expr pos:start="13:46" pos:end="13:47"><name pos:start="13:46" pos:end="13:47">mr</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="13:51" pos:end="13:69"><expr pos:start="13:51" pos:end="13:69"><name pos:start="13:51" pos:end="13:54">addr</name> <operator pos:start="13:56" pos:end="13:57">+=</operator> <name pos:start="13:59" pos:end="13:69">granularity</name></expr></incr>)</control> <block pos:start="13:72" pos:end="35:5">{<block_content pos:start="15:9" pos:end="33:9">

        <expr_stmt pos:start="15:9" pos:end="15:61"><expr pos:start="15:9" pos:end="15:60"><name pos:start="15:9" pos:end="15:13">iotlb</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:60"><name pos:start="15:17" pos:end="15:40"><name pos:start="15:17" pos:end="15:18">mr</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:29">iommu_ops</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:40">translate</name></name><argument_list pos:start="15:41" pos:end="15:60">(<argument pos:start="15:42" pos:end="15:43"><expr pos:start="15:42" pos:end="15:43"><name pos:start="15:42" pos:end="15:43">mr</name></expr></argument>, <argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">addr</name></expr></argument>, <argument pos:start="15:52" pos:end="15:59"><expr pos:start="15:52" pos:end="15:59"><name pos:start="15:52" pos:end="15:59">is_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:37">(<expr pos:start="17:13" pos:end="17:36"><name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:17">iotlb</name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:22">perm</name></name> <operator pos:start="17:24" pos:end="17:25">!=</operator> <name pos:start="17:27" pos:end="17:36">IOMMU_NONE</name></expr>)</condition> <block pos:start="17:39" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:33">

            <expr_stmt pos:start="19:13" pos:end="19:33"><expr pos:start="19:13" pos:end="19:32"><call pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:13">n</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:21">notify</name></name><argument_list pos:start="19:22" pos:end="19:32">(<argument pos:start="19:23" pos:end="19:23"><expr pos:start="19:23" pos:end="19:23"><name pos:start="19:23" pos:end="19:23">n</name></expr></argument>, <argument pos:start="19:26" pos:end="19:31"><expr pos:start="19:26" pos:end="19:31"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:31">iotlb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="25:9" pos:end="27:70">/* if (2^64 - MR size) &lt; granularity, it's possible to get an

         * infinite loop here.  This should catch such a wraparound */</comment>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:40">(<expr pos:start="29:13" pos:end="29:39"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:17">addr</name> <operator pos:start="29:19" pos:end="29:19">+</operator> <name pos:start="29:21" pos:end="29:31">granularity</name><operator pos:start="29:32" pos:end="29:32">)</operator> <operator pos:start="29:34" pos:end="29:34">&lt;</operator> <name pos:start="29:36" pos:end="29:39">addr</name></expr>)</condition> <block pos:start="29:42" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
