<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7215.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:22">uint32_t</name></type> <name pos:start="1:24" pos:end="1:43">vmsvga_fifo_read_raw</name><parameter_list pos:start="1:44" pos:end="1:69">(<parameter pos:start="1:45" pos:end="1:68"><decl pos:start="1:45" pos:end="1:68"><type pos:start="1:45" pos:end="1:68"><name pos:start="1:45" pos:end="1:65"><name pos:start="1:45" pos:end="1:50">struct</name> <name pos:start="1:52" pos:end="1:65">vmsvga_state_s</name></name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:68">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="15:1">{<block_content pos:start="5:5" pos:end="13:15">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">cmd</name> <init pos:start="5:18" pos:end="5:42">= <expr pos:start="5:20" pos:end="5:42"><name pos:start="5:20" pos:end="5:42"><name pos:start="5:20" pos:end="5:20">s</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:26">fifo</name><index pos:start="5:27" pos:end="5:42">[<expr pos:start="5:28" pos:end="5:41"><call pos:start="5:28" pos:end="5:36"><name pos:start="5:28" pos:end="5:30">CMD</name><argument_list pos:start="5:31" pos:end="5:36">(<argument pos:start="5:32" pos:end="5:35"><expr pos:start="5:32" pos:end="5:35"><name pos:start="5:32" pos:end="5:35">stop</name></expr></argument>)</argument_list></call> <operator pos:start="5:38" pos:end="5:39">&gt;&gt;</operator> <literal type="number" pos:start="5:41" pos:end="5:41">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:46"><expr pos:start="7:5" pos:end="7:45"><name pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:10">cmd</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:16">stop</name></name> <operator pos:start="7:18" pos:end="7:18">=</operator> <call pos:start="7:20" pos:end="7:45"><name pos:start="7:20" pos:end="7:30">cpu_to_le32</name><argument_list pos:start="7:31" pos:end="7:45">(<argument pos:start="7:32" pos:end="7:44"><expr pos:start="7:32" pos:end="7:44"><call pos:start="7:32" pos:end="7:40"><name pos:start="7:32" pos:end="7:34">CMD</name><argument_list pos:start="7:35" pos:end="7:40">(<argument pos:start="7:36" pos:end="7:39"><expr pos:start="7:36" pos:end="7:39"><name pos:start="7:36" pos:end="7:39">stop</name></expr></argument>)</argument_list></call> <operator pos:start="7:42" pos:end="7:42">+</operator> <literal type="number" pos:start="7:44" pos:end="7:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="11:35"><if pos:start="9:5" pos:end="11:35">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><call pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:11">CMD</name><argument_list pos:start="9:12" pos:end="9:17">(<argument pos:start="9:13" pos:end="9:16"><expr pos:start="9:13" pos:end="9:16"><name pos:start="9:13" pos:end="9:16">stop</name></expr></argument>)</argument_list></call> <operator pos:start="9:19" pos:end="9:20">&gt;=</operator> <call pos:start="9:22" pos:end="9:29"><name pos:start="9:22" pos:end="9:24">CMD</name><argument_list pos:start="9:25" pos:end="9:29">(<argument pos:start="9:26" pos:end="9:28"><expr pos:start="9:26" pos:end="9:28"><name pos:start="9:26" pos:end="9:28">max</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:35"><block_content pos:start="11:9" pos:end="11:35">

        <expr_stmt pos:start="11:9" pos:end="11:35"><expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:14">cmd</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:20">stop</name></name> <operator pos:start="11:22" pos:end="11:22">=</operator> <name pos:start="11:24" pos:end="11:34"><name pos:start="11:24" pos:end="11:24">s</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:29">cmd</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:34">min</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="13:5" pos:end="13:15">return <expr pos:start="13:12" pos:end="13:14"><name pos:start="13:12" pos:end="13:14">cmd</name></expr>;</return>

</block_content>}</block></function>
</unit>
