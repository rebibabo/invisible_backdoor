<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15012.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">gen_load_store_alignment</name><parameter_list pos:start="1:37" pos:end="3:44">(<parameter pos:start="1:38" pos:end="1:53"><decl pos:start="1:38" pos:end="1:53"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:49">DisasContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">dc</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:64">shift</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:21"><decl pos:start="3:9" pos:end="3:21"><type pos:start="3:9" pos:end="3:21"><name pos:start="3:9" pos:end="3:16">TCGv_i32</name></type> <name pos:start="3:18" pos:end="3:21">addr</name></decl></parameter>, <parameter pos:start="3:24" pos:end="3:43"><decl pos:start="3:24" pos:end="3:43"><type pos:start="3:24" pos:end="3:43"><name pos:start="3:24" pos:end="3:27">bool</name></type> <name pos:start="3:29" pos:end="3:43">no_hw_alignment</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="29:5">

    <if_stmt pos:start="7:5" pos:end="29:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:63">(<expr pos:start="7:9" pos:end="7:62"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:62"><name pos:start="7:10" pos:end="7:23">option_enabled</name><argument_list pos:start="7:24" pos:end="7:62">(<argument pos:start="7:25" pos:end="7:26"><expr pos:start="7:25" pos:end="7:26"><name pos:start="7:25" pos:end="7:26">dc</name></expr></argument>, <argument pos:start="7:29" pos:end="7:61"><expr pos:start="7:29" pos:end="7:61"><name pos:start="7:29" pos:end="7:61">XTENSA_OPTION_UNALIGNED_EXCEPTION</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:65" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:50">

        <expr_stmt pos:start="9:9" pos:end="9:50"><expr pos:start="9:9" pos:end="9:49"><call pos:start="9:9" pos:end="9:49"><name pos:start="9:9" pos:end="9:24">tcg_gen_andi_i32</name><argument_list pos:start="9:25" pos:end="9:49">(<argument pos:start="9:26" pos:end="9:29"><expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">addr</name></expr></argument>, <argument pos:start="9:32" pos:end="9:35"><expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">addr</name></expr></argument>, <argument pos:start="9:38" pos:end="9:48"><expr pos:start="9:38" pos:end="9:48"><operator pos:start="9:38" pos:end="9:38">~</operator><literal type="number" pos:start="9:39" pos:end="9:39">0</literal> <operator pos:start="9:41" pos:end="9:42">&lt;&lt;</operator> <name pos:start="9:44" pos:end="9:48">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="11:7" pos:end="29:5">else if <condition pos:start="11:15" pos:end="13:28">(<expr pos:start="11:16" pos:end="13:27"><call pos:start="11:16" pos:end="11:61"><name pos:start="11:16" pos:end="11:29">option_enabled</name><argument_list pos:start="11:30" pos:end="11:61">(<argument pos:start="11:31" pos:end="11:32"><expr pos:start="11:31" pos:end="11:32"><name pos:start="11:31" pos:end="11:32">dc</name></expr></argument>, <argument pos:start="11:35" pos:end="11:60"><expr pos:start="11:35" pos:end="11:60"><name pos:start="11:35" pos:end="11:60">XTENSA_OPTION_HW_ALIGNMENT</name></expr></argument>)</argument_list></call> <operator pos:start="11:63" pos:end="11:64">&amp;&amp;</operator>

            <name pos:start="13:13" pos:end="13:27">no_hw_alignment</name></expr>)</condition> <block pos:start="13:30" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:27">

        <decl_stmt pos:start="15:9" pos:end="15:36"><decl pos:start="15:9" pos:end="15:35"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:17">label</name> <init pos:start="15:19" pos:end="15:35">= <expr pos:start="15:21" pos:end="15:35"><call pos:start="15:21" pos:end="15:35"><name pos:start="15:21" pos:end="15:33">gen_new_label</name><argument_list pos:start="15:34" pos:end="15:35">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:42"><decl pos:start="17:9" pos:end="17:41"><type pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">TCGv_i32</name></type> <name pos:start="17:18" pos:end="17:20">tmp</name> <init pos:start="17:22" pos:end="17:41">= <expr pos:start="17:24" pos:end="17:41"><call pos:start="17:24" pos:end="17:41"><name pos:start="17:24" pos:end="17:39">tcg_temp_new_i32</name><argument_list pos:start="17:40" pos:end="17:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:52"><expr pos:start="19:9" pos:end="19:51"><call pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:24">tcg_gen_andi_i32</name><argument_list pos:start="19:25" pos:end="19:51">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">tmp</name></expr></argument>, <argument pos:start="19:31" pos:end="19:34"><expr pos:start="19:31" pos:end="19:34"><name pos:start="19:31" pos:end="19:34">addr</name></expr></argument>, <argument pos:start="19:37" pos:end="19:50"><expr pos:start="19:37" pos:end="19:50"><operator pos:start="19:37" pos:end="19:37">~</operator><operator pos:start="19:38" pos:end="19:38">(</operator><operator pos:start="19:39" pos:end="19:39">~</operator><literal type="number" pos:start="19:40" pos:end="19:40">0</literal> <operator pos:start="19:42" pos:end="19:43">&lt;&lt;</operator> <name pos:start="19:45" pos:end="19:49">shift</name><operator pos:start="19:50" pos:end="19:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:56"><expr pos:start="21:9" pos:end="21:55"><call pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:27">tcg_gen_brcondi_i32</name><argument_list pos:start="21:28" pos:end="21:55">(<argument pos:start="21:29" pos:end="21:39"><expr pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:39">TCG_COND_EQ</name></expr></argument>, <argument pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:44">tmp</name></expr></argument>, <argument pos:start="21:47" pos:end="21:47"><expr pos:start="21:47" pos:end="21:47"><literal type="number" pos:start="21:47" pos:end="21:47">0</literal></expr></argument>, <argument pos:start="21:50" pos:end="21:54"><expr pos:start="21:50" pos:end="21:54"><name pos:start="21:50" pos:end="21:54">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:72"><expr pos:start="23:9" pos:end="23:71"><call pos:start="23:9" pos:end="23:71"><name pos:start="23:9" pos:end="23:33">gen_exception_cause_vaddr</name><argument_list pos:start="23:34" pos:end="23:71">(<argument pos:start="23:35" pos:end="23:36"><expr pos:start="23:35" pos:end="23:36"><name pos:start="23:35" pos:end="23:36">dc</name></expr></argument>, <argument pos:start="23:39" pos:end="23:64"><expr pos:start="23:39" pos:end="23:64"><name pos:start="23:39" pos:end="23:64">LOAD_STORE_ALIGNMENT_CAUSE</name></expr></argument>, <argument pos:start="23:67" pos:end="23:70"><expr pos:start="23:67" pos:end="23:70"><name pos:start="23:67" pos:end="23:70">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><call pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:21">gen_set_label</name><argument_list pos:start="25:22" pos:end="25:28">(<argument pos:start="25:23" pos:end="25:27"><expr pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:27">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:27"><expr pos:start="27:9" pos:end="27:26"><call pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:21">tcg_temp_free</name><argument_list pos:start="27:22" pos:end="27:26">(<argument pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><name pos:start="27:23" pos:end="27:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
