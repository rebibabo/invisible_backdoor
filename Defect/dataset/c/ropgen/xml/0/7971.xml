<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7971.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">tcg_reg_sync</name><parameter_list pos:start="1:25" pos:end="1:77">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">TCGContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:50"><decl pos:start="1:41" pos:end="1:50"><type pos:start="1:41" pos:end="1:50"><name pos:start="1:41" pos:end="1:46">TCGReg</name></type> <name pos:start="1:48" pos:end="1:50">reg</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:76"><decl pos:start="1:53" pos:end="1:76"><type pos:start="1:53" pos:end="1:76"><name pos:start="1:53" pos:end="1:61">TCGRegSet</name></type> <name pos:start="1:63" pos:end="1:76">allocated_regs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:25">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">TCGTemp</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:15">ts</name> <init pos:start="5:17" pos:end="5:37">= <expr pos:start="5:19" pos:end="5:37"><name pos:start="5:19" pos:end="5:37"><name pos:start="5:19" pos:end="5:19">s</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:32">reg_to_temp</name><index pos:start="5:33" pos:end="5:37">[<expr pos:start="5:34" pos:end="5:36"><name pos:start="5:34" pos:end="5:36">reg</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:41"><expr pos:start="9:5" pos:end="9:40"><call pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:40">(<argument pos:start="9:12" pos:end="9:39"><expr pos:start="9:12" pos:end="9:39"><name pos:start="9:12" pos:end="9:23"><name pos:start="9:12" pos:end="9:13">ts</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:23">val_type</name></name> <operator pos:start="9:25" pos:end="9:26">==</operator> <name pos:start="9:28" pos:end="9:39">TEMP_VAL_REG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="31:5"><if pos:start="11:5" pos:end="31:5">if <condition pos:start="11:8" pos:end="11:44">(<expr pos:start="11:9" pos:end="11:43"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:25"><name pos:start="11:10" pos:end="11:11">ts</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:25">mem_coherent</name></name> <operator pos:start="11:27" pos:end="11:28">&amp;&amp;</operator> <operator pos:start="11:30" pos:end="11:30">!</operator><name pos:start="11:31" pos:end="11:43"><name pos:start="11:31" pos:end="11:32">ts</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:43">fixed_reg</name></name></expr>)</condition> <block pos:start="11:46" pos:end="31:5">{<block_content pos:start="13:9" pos:end="29:72">

        <if_stmt pos:start="13:9" pos:end="27:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:31">(<expr pos:start="13:13" pos:end="13:30"><operator pos:start="13:13" pos:end="13:13">!</operator><name pos:start="13:14" pos:end="13:30"><name pos:start="13:14" pos:end="13:15">ts</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:30">mem_allocated</name></name></expr>)</condition> <block pos:start="13:33" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:52">

            <expr_stmt pos:start="15:13" pos:end="15:52"><expr pos:start="15:13" pos:end="15:51"><call pos:start="15:13" pos:end="15:51"><name pos:start="15:13" pos:end="15:31">temp_allocate_frame</name><argument_list pos:start="15:32" pos:end="15:51">(<argument pos:start="15:33" pos:end="15:33"><expr pos:start="15:33" pos:end="15:33"><name pos:start="15:33" pos:end="15:33">s</name></expr></argument>, <argument pos:start="15:36" pos:end="15:50"><expr pos:start="15:36" pos:end="15:50"><call pos:start="15:36" pos:end="15:50"><name pos:start="15:36" pos:end="15:43">temp_idx</name><argument_list pos:start="15:44" pos:end="15:50">(<argument pos:start="15:45" pos:end="15:45"><expr pos:start="15:45" pos:end="15:45"><name pos:start="15:45" pos:end="15:45">s</name></expr></argument>, <argument pos:start="15:48" pos:end="15:49"><expr pos:start="15:48" pos:end="15:49"><name pos:start="15:48" pos:end="15:49">ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="17:11" pos:end="27:9">else if <condition pos:start="17:19" pos:end="17:36">(<expr pos:start="17:20" pos:end="17:35"><name pos:start="17:20" pos:end="17:35"><name pos:start="17:20" pos:end="17:21">ts</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:35">indirect_reg</name></name></expr>)</condition> <block pos:start="17:38" pos:end="27:9">{<block_content pos:start="19:13" pos:end="25:38">

            <expr_stmt pos:start="19:13" pos:end="19:56"><expr pos:start="19:13" pos:end="19:55"><call pos:start="19:13" pos:end="19:55"><name pos:start="19:13" pos:end="19:30">tcg_regset_set_reg</name><argument_list pos:start="19:31" pos:end="19:55">(<argument pos:start="19:32" pos:end="19:45"><expr pos:start="19:32" pos:end="19:45"><name pos:start="19:32" pos:end="19:45">allocated_regs</name></expr></argument>, <argument pos:start="19:48" pos:end="19:54"><expr pos:start="19:48" pos:end="19:54"><name pos:start="19:48" pos:end="19:54"><name pos:start="19:48" pos:end="19:49">ts</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:54">reg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="25:38"><expr pos:start="21:13" pos:end="25:37"><call pos:start="21:13" pos:end="25:37"><name pos:start="21:13" pos:end="21:21">temp_load</name><argument_list pos:start="21:22" pos:end="25:37">(<argument pos:start="21:23" pos:end="21:23"><expr pos:start="21:23" pos:end="21:23"><name pos:start="21:23" pos:end="21:23">s</name></expr></argument>, <argument pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:27">ts</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:37">mem_base</name></name></expr></argument>,

                      <argument pos:start="23:23" pos:end="23:61"><expr pos:start="23:23" pos:end="23:61"><name pos:start="23:23" pos:end="23:61"><name pos:start="23:23" pos:end="23:47">tcg_target_available_regs</name><index pos:start="23:48" pos:end="23:61">[<expr pos:start="23:49" pos:end="23:60"><name pos:start="23:49" pos:end="23:60">TCG_TYPE_PTR</name></expr>]</index></name></expr></argument>,

                      <argument pos:start="25:23" pos:end="25:36"><expr pos:start="25:23" pos:end="25:36"><name pos:start="25:23" pos:end="25:36">allocated_regs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:72"><expr pos:start="29:9" pos:end="29:71"><call pos:start="29:9" pos:end="29:71"><name pos:start="29:9" pos:end="29:18">tcg_out_st</name><argument_list pos:start="29:19" pos:end="29:71">(<argument pos:start="29:20" pos:end="29:20"><expr pos:start="29:20" pos:end="29:20"><name pos:start="29:20" pos:end="29:20">s</name></expr></argument>, <argument pos:start="29:23" pos:end="29:30"><expr pos:start="29:23" pos:end="29:30"><name pos:start="29:23" pos:end="29:30"><name pos:start="29:23" pos:end="29:24">ts</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:30">type</name></name></expr></argument>, <argument pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:35">reg</name></expr></argument>, <argument pos:start="29:38" pos:end="29:54"><expr pos:start="29:38" pos:end="29:54"><name pos:start="29:38" pos:end="29:54"><name pos:start="29:38" pos:end="29:39">ts</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:49">mem_base</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:54">reg</name></name></expr></argument>, <argument pos:start="29:57" pos:end="29:70"><expr pos:start="29:57" pos:end="29:70"><name pos:start="29:57" pos:end="29:70"><name pos:start="29:57" pos:end="29:58">ts</name><operator pos:start="29:59" pos:end="29:60">-&gt;</operator><name pos:start="29:61" pos:end="29:70">mem_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:6">ts</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:20">mem_coherent</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <literal type="number" pos:start="33:24" pos:end="33:24">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
