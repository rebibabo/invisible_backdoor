<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8077.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:9">ISADevice</name> <modifier pos:start="1:11" pos:end="1:11">*</modifier></type><name pos:start="1:12" pos:end="1:23">pc_find_fdc0</name><parameter_list pos:start="1:24" pos:end="1:29">(<parameter pos:start="1:25" pos:end="1:28"><decl pos:start="1:25" pos:end="1:28"><type pos:start="1:25" pos:end="1:28"><name pos:start="1:25" pos:end="1:28">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:24">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">Object</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:21">container</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">CheckFdcState</name></type> <name pos:start="9:19" pos:end="9:23">state</name> <init pos:start="9:25" pos:end="9:31">= <expr pos:start="9:27" pos:end="9:31"><block pos:start="9:27" pos:end="9:31">{ <expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="19:5">for <control pos:start="13:9" pos:end="13:56">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:51"><expr pos:start="13:17" pos:end="13:50"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <call pos:start="13:21" pos:end="13:50"><name pos:start="13:21" pos:end="13:30">ARRAY_SIZE</name><argument_list pos:start="13:31" pos:end="13:50">(<argument pos:start="13:32" pos:end="13:49"><expr pos:start="13:32" pos:end="13:49"><name pos:start="13:32" pos:end="13:49">fdc_container_path</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="13:53" pos:end="13:55"><expr pos:start="13:53" pos:end="13:55"><name pos:start="13:53" pos:end="13:53">i</name><operator pos:start="13:54" pos:end="13:55">++</operator></expr></incr>)</control> <block pos:start="13:58" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:59">

        <expr_stmt pos:start="15:9" pos:end="15:77"><expr pos:start="15:9" pos:end="15:76"><name pos:start="15:9" pos:end="15:17">container</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:76"><name pos:start="15:21" pos:end="15:33">container_get</name><argument_list pos:start="15:34" pos:end="15:76">(<argument pos:start="15:35" pos:end="15:52"><expr pos:start="15:35" pos:end="15:52"><call pos:start="15:35" pos:end="15:52"><name pos:start="15:35" pos:end="15:50">qdev_get_machine</name><argument_list pos:start="15:51" pos:end="15:52">()</argument_list></call></expr></argument>, <argument pos:start="15:55" pos:end="15:75"><expr pos:start="15:55" pos:end="15:75"><name pos:start="15:55" pos:end="15:75"><name pos:start="15:55" pos:end="15:72">fdc_container_path</name><index pos:start="15:73" pos:end="15:75">[<expr pos:start="15:74" pos:end="15:74"><name pos:start="15:74" pos:end="15:74">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:59"><expr pos:start="17:9" pos:end="17:58"><call pos:start="17:9" pos:end="17:58"><name pos:start="17:9" pos:end="17:28">object_child_foreach</name><argument_list pos:start="17:29" pos:end="17:58">(<argument pos:start="17:30" pos:end="17:38"><expr pos:start="17:30" pos:end="17:38"><name pos:start="17:30" pos:end="17:38">container</name></expr></argument>, <argument pos:start="17:41" pos:end="17:49"><expr pos:start="17:41" pos:end="17:49"><name pos:start="17:41" pos:end="17:49">check_fdc</name></expr></argument>, <argument pos:start="17:52" pos:end="17:57"><expr pos:start="17:52" pos:end="17:57"><operator pos:start="17:52" pos:end="17:52">&amp;</operator><name pos:start="17:53" pos:end="17:57">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:13">state</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:22">multiple</name></name></expr>)</condition> <block pos:start="23:25" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:38">

        <expr_stmt pos:start="25:9" pos:end="27:53"><expr pos:start="25:9" pos:end="27:52"><call pos:start="25:9" pos:end="27:52"><name pos:start="25:9" pos:end="25:20">error_report</name><argument_list pos:start="25:21" pos:end="27:52">(<argument pos:start="25:22" pos:end="27:51"><expr pos:start="25:22" pos:end="27:51"><literal type="string" pos:start="25:22" pos:end="25:70">"warning: multiple floppy disk controllers with "</literal>

                     <literal type="string" pos:start="27:22" pos:end="27:51">"iobase=0x3f0 have been found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="31:38"><expr pos:start="29:9" pos:end="31:37"><call pos:start="29:9" pos:end="31:37"><name pos:start="29:9" pos:end="29:20">error_printf</name><argument_list pos:start="29:21" pos:end="31:37">(<argument pos:start="29:22" pos:end="31:36"><expr pos:start="29:22" pos:end="31:36"><literal type="string" pos:start="29:22" pos:end="29:77">"the one being picked for CMOS setup might not reflect "</literal>

                     <literal type="string" pos:start="31:22" pos:end="31:36">"your intent\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="37:5" pos:end="37:24">return <expr pos:start="37:12" pos:end="37:23"><name pos:start="37:12" pos:end="37:23"><name pos:start="37:12" pos:end="37:16">state</name><operator pos:start="37:17" pos:end="37:17">.</operator><name pos:start="37:18" pos:end="37:23">floppy</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
