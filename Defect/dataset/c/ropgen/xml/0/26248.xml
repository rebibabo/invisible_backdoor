<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26248.c" pos:tabs="8"><function pos:start="1:1" pos:end="521:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">ppce500_load_device_tree</name><parameter_list pos:start="1:36" pos:end="9:55">(<parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:47">CPUPPCState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">env</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:57"><decl pos:start="3:37" pos:end="3:57"><type pos:start="3:37" pos:end="3:57"><name pos:start="3:37" pos:end="3:49">PPCE500Params</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:57">params</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:47"><decl pos:start="5:37" pos:end="5:47"><type pos:start="5:37" pos:end="5:47"><name pos:start="5:37" pos:end="5:42">hwaddr</name></type> <name pos:start="5:44" pos:end="5:47">addr</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:54"><decl pos:start="7:37" pos:end="7:54"><type pos:start="7:37" pos:end="7:54"><name pos:start="7:37" pos:end="7:42">hwaddr</name></type> <name pos:start="7:44" pos:end="7:54">initrd_base</name></decl></parameter>,

                                    <parameter pos:start="9:37" pos:end="9:54"><decl pos:start="9:37" pos:end="9:54"><type pos:start="9:37" pos:end="9:54"><name pos:start="9:37" pos:end="9:42">hwaddr</name></type> <name pos:start="9:44" pos:end="9:54">initrd_size</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="521:1">{<block_content pos:start="13:5" pos:end="519:15">

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:16">= <expr pos:start="13:15" pos:end="13:16"><operator pos:start="13:15" pos:end="13:15">-</operator><literal type="number" pos:start="13:16" pos:end="13:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:71"><decl pos:start="15:5" pos:end="15:70"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:31"><name pos:start="15:14" pos:end="15:29">mem_reg_property</name><index pos:start="15:30" pos:end="15:31">[]</index></name> <init pos:start="15:33" pos:end="15:70">= <expr pos:start="15:35" pos:end="15:70"><block pos:start="15:35" pos:end="15:70">{ <expr pos:start="15:37" pos:end="15:37"><literal type="number" pos:start="15:37" pos:end="15:37">0</literal></expr>, <macro pos:start="15:40" pos:end="15:68"><name pos:start="15:40" pos:end="15:50">cpu_to_be64</name><argument_list pos:start="15:51" pos:end="15:68">(<argument pos:start="15:52" pos:end="15:67">params-&gt;ram_size</argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">fdt_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:14"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">void</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:13">fdt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">uint8_t</name></type> <name pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:21">hypercall</name><index pos:start="21:22" pos:end="21:25">[<expr pos:start="21:23" pos:end="21:24"><literal type="number" pos:start="21:23" pos:end="21:24">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:36"><decl pos:start="23:5" pos:end="23:35"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint32_t</name></type> <name pos:start="23:14" pos:end="23:23">clock_freq</name> <init pos:start="23:25" pos:end="23:35">= <expr pos:start="23:27" pos:end="23:35"><literal type="number" pos:start="23:27" pos:end="23:35">400000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:33"><decl pos:start="25:5" pos:end="25:32"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint32_t</name></type> <name pos:start="25:14" pos:end="25:20">tb_freq</name> <init pos:start="25:22" pos:end="25:32">= <expr pos:start="25:24" pos:end="25:32"><literal type="number" pos:start="25:24" pos:end="25:32">400000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:10"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:39"><decl pos:start="29:5" pos:end="29:38"><type pos:start="29:5" pos:end="29:16"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:14">char</name> <modifier pos:start="29:16" pos:end="29:16">*</modifier></type><name pos:start="29:17" pos:end="29:31">toplevel_compat</name> <init pos:start="29:33" pos:end="29:38">= <expr pos:start="29:35" pos:end="29:38"><name pos:start="29:35" pos:end="29:38">NULL</name></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="29:41" pos:end="29:59">/* user override */</comment>

    <decl_stmt pos:start="31:5" pos:end="31:58"><decl pos:start="31:5" pos:end="31:57"><type pos:start="31:5" pos:end="31:8"><name pos:start="31:5" pos:end="31:8">char</name></type> <name pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:22">compatible_sb</name><index pos:start="31:23" pos:end="31:24">[]</index></name> <init pos:start="31:26" pos:end="31:57">= <expr pos:start="31:28" pos:end="31:57"><literal type="string" pos:start="31:28" pos:end="31:57">"fsl,mpc8544-immr\0simple-bus"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:18"><decl pos:start="33:5" pos:end="33:17"><type pos:start="33:5" pos:end="33:8"><name pos:start="33:5" pos:end="33:8">char</name></type> <name pos:start="33:10" pos:end="33:17"><name pos:start="33:10" pos:end="33:12">soc</name><index pos:start="33:13" pos:end="33:17">[<expr pos:start="33:14" pos:end="33:16"><literal type="number" pos:start="33:14" pos:end="33:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:19"><decl pos:start="35:5" pos:end="35:18"><type pos:start="35:5" pos:end="35:8"><name pos:start="35:5" pos:end="35:8">char</name></type> <name pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:13">mpic</name><index pos:start="35:14" pos:end="35:18">[<expr pos:start="35:15" pos:end="35:17"><literal type="number" pos:start="35:15" pos:end="35:17">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:21"><decl pos:start="37:5" pos:end="37:20"><type pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:12">uint32_t</name></type> <name pos:start="37:14" pos:end="37:20">mpic_ph</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:20"><decl pos:start="39:5" pos:end="39:19"><type pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:12">uint32_t</name></type> <name pos:start="39:14" pos:end="39:19">msi_ph</name></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:20"><decl pos:start="41:5" pos:end="41:19"><type pos:start="41:5" pos:end="41:8"><name pos:start="41:5" pos:end="41:8">char</name></type> <name pos:start="41:10" pos:end="41:19"><name pos:start="41:10" pos:end="41:14">gutil</name><index pos:start="41:15" pos:end="41:19">[<expr pos:start="41:16" pos:end="41:18"><literal type="number" pos:start="41:16" pos:end="41:18">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:18"><decl pos:start="43:5" pos:end="43:17"><type pos:start="43:5" pos:end="43:8"><name pos:start="43:5" pos:end="43:8">char</name></type> <name pos:start="43:10" pos:end="43:17"><name pos:start="43:10" pos:end="43:12">pci</name><index pos:start="43:13" pos:end="43:17">[<expr pos:start="43:14" pos:end="43:16"><literal type="number" pos:start="43:14" pos:end="43:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:18"><decl pos:start="45:5" pos:end="45:17"><type pos:start="45:5" pos:end="45:8"><name pos:start="45:5" pos:end="45:8">char</name></type> <name pos:start="45:10" pos:end="45:17"><name pos:start="45:10" pos:end="45:12">msi</name><index pos:start="45:13" pos:end="45:17">[<expr pos:start="45:14" pos:end="45:16"><literal type="number" pos:start="45:14" pos:end="45:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:29"><decl pos:start="47:5" pos:end="47:28"><type pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:12">uint32_t</name> <modifier pos:start="47:14" pos:end="47:14">*</modifier></type><name pos:start="47:15" pos:end="47:21">pci_map</name> <init pos:start="47:23" pos:end="47:28">= <expr pos:start="47:25" pos:end="47:28"><name pos:start="47:25" pos:end="47:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:12"><decl pos:start="49:5" pos:end="49:11"><type pos:start="49:5" pos:end="49:7"><name pos:start="49:5" pos:end="49:7">int</name></type> <name pos:start="49:9" pos:end="49:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="69:10"><decl pos:start="51:5" pos:end="69:9"><type pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:12">uint32_t</name></type> <name pos:start="51:14" pos:end="51:27"><name pos:start="51:14" pos:end="51:23">pci_ranges</name><index pos:start="51:24" pos:end="51:27">[<expr pos:start="51:25" pos:end="51:26"><literal type="number" pos:start="51:25" pos:end="51:26">14</literal></expr>]</index></name> <init pos:start="51:29" pos:end="69:9">=

        <expr pos:start="53:9" pos:end="69:9"><block pos:start="53:9" pos:end="69:9">{

            <expr pos:start="55:13" pos:end="55:21"><literal type="number" pos:start="55:13" pos:end="55:21">0x2000000</literal></expr>, <expr pos:start="55:24" pos:end="55:26"><literal type="number" pos:start="55:24" pos:end="55:26">0x0</literal></expr>, <expr pos:start="55:29" pos:end="55:38"><literal type="number" pos:start="55:29" pos:end="55:38">0xc0000000</literal></expr>,

            <expr pos:start="57:13" pos:end="57:15"><literal type="number" pos:start="57:13" pos:end="57:15">0x0</literal></expr>, <expr pos:start="57:18" pos:end="57:27"><literal type="number" pos:start="57:18" pos:end="57:27">0xc0000000</literal></expr>,

            <expr pos:start="59:13" pos:end="59:15"><literal type="number" pos:start="59:13" pos:end="59:15">0x0</literal></expr>, <expr pos:start="59:18" pos:end="59:27"><literal type="number" pos:start="59:18" pos:end="59:27">0x20000000</literal></expr>,



            <expr pos:start="63:13" pos:end="63:21"><literal type="number" pos:start="63:13" pos:end="63:21">0x1000000</literal></expr>, <expr pos:start="63:24" pos:end="63:26"><literal type="number" pos:start="63:24" pos:end="63:26">0x0</literal></expr>, <expr pos:start="63:29" pos:end="63:31"><literal type="number" pos:start="63:29" pos:end="63:31">0x0</literal></expr>,

            <expr pos:start="65:13" pos:end="65:15"><literal type="number" pos:start="65:13" pos:end="65:15">0x0</literal></expr>, <expr pos:start="65:18" pos:end="65:27"><literal type="number" pos:start="65:18" pos:end="65:27">0xe1000000</literal></expr>,

            <expr pos:start="67:13" pos:end="67:15"><literal type="number" pos:start="67:13" pos:end="67:15">0x0</literal></expr>, <expr pos:start="67:18" pos:end="67:24"><literal type="number" pos:start="67:18" pos:end="67:24">0x10000</literal></expr>,

        }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="71:5" pos:end="71:27"><decl pos:start="71:5" pos:end="71:26"><type pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:12">QemuOpts</name> <modifier pos:start="71:14" pos:end="71:14">*</modifier></type><name pos:start="71:15" pos:end="71:26">machine_opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="73:5" pos:end="73:32"><decl pos:start="73:5" pos:end="73:31"><type pos:start="73:5" pos:end="73:16"><specifier pos:start="73:5" pos:end="73:9">const</specifier> <name pos:start="73:11" pos:end="73:14">char</name> <modifier pos:start="73:16" pos:end="73:16">*</modifier></type><name pos:start="73:17" pos:end="73:24">dtb_file</name> <init pos:start="73:26" pos:end="73:31">= <expr pos:start="73:28" pos:end="73:31"><name pos:start="73:28" pos:end="73:31">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:64"><expr pos:start="77:5" pos:end="77:63"><name pos:start="77:5" pos:end="77:16">machine_opts</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="77:63"><name pos:start="77:20" pos:end="77:33">qemu_opts_find</name><argument_list pos:start="77:34" pos:end="77:63">(<argument pos:start="77:35" pos:end="77:59"><expr pos:start="77:35" pos:end="77:59"><call pos:start="77:35" pos:end="77:59"><name pos:start="77:35" pos:end="77:48">qemu_find_opts</name><argument_list pos:start="77:49" pos:end="77:59">(<argument pos:start="77:50" pos:end="77:58"><expr pos:start="77:50" pos:end="77:58"><literal type="string" pos:start="77:50" pos:end="77:58">"machine"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:62" pos:end="77:62"><expr pos:start="77:62" pos:end="77:62"><literal type="number" pos:start="77:62" pos:end="77:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:21">(<expr pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:20">machine_opts</name></expr>)</condition> <block pos:start="79:23" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:70">

        <expr_stmt pos:start="81:9" pos:end="81:53"><expr pos:start="81:9" pos:end="81:52"><name pos:start="81:9" pos:end="81:16">dtb_file</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <call pos:start="81:20" pos:end="81:52"><name pos:start="81:20" pos:end="81:31">qemu_opt_get</name><argument_list pos:start="81:32" pos:end="81:52">(<argument pos:start="81:33" pos:end="81:44"><expr pos:start="81:33" pos:end="81:44"><name pos:start="81:33" pos:end="81:44">machine_opts</name></expr></argument>, <argument pos:start="81:47" pos:end="81:51"><expr pos:start="81:47" pos:end="81:51"><literal type="string" pos:start="81:47" pos:end="81:51">"dtb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:70"><expr pos:start="83:9" pos:end="83:69"><name pos:start="83:9" pos:end="83:23">toplevel_compat</name> <operator pos:start="83:25" pos:end="83:25">=</operator> <call pos:start="83:27" pos:end="83:69"><name pos:start="83:27" pos:end="83:38">qemu_opt_get</name><argument_list pos:start="83:39" pos:end="83:69">(<argument pos:start="83:40" pos:end="83:51"><expr pos:start="83:40" pos:end="83:51"><name pos:start="83:40" pos:end="83:51">machine_opts</name></expr></argument>, <argument pos:start="83:54" pos:end="83:68"><expr pos:start="83:54" pos:end="83:68"><literal type="string" pos:start="83:54" pos:end="83:68">"dt_compatible"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="113:5"><if pos:start="89:5" pos:end="113:5">if <condition pos:start="89:8" pos:end="89:17">(<expr pos:start="89:9" pos:end="89:16"><name pos:start="89:9" pos:end="89:16">dtb_file</name></expr>)</condition> <block pos:start="89:19" pos:end="113:5">{<block_content pos:start="91:9" pos:end="111:18">

        <decl_stmt pos:start="91:9" pos:end="91:23"><decl pos:start="91:9" pos:end="91:22"><type pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:12">char</name> <modifier pos:start="91:14" pos:end="91:14">*</modifier></type><name pos:start="91:15" pos:end="91:22">filename</name></decl>;</decl_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:65"><expr pos:start="93:9" pos:end="93:64"><name pos:start="93:9" pos:end="93:16">filename</name> <operator pos:start="93:18" pos:end="93:18">=</operator> <call pos:start="93:20" pos:end="93:64"><name pos:start="93:20" pos:end="93:33">qemu_find_file</name><argument_list pos:start="93:34" pos:end="93:64">(<argument pos:start="93:35" pos:end="93:53"><expr pos:start="93:35" pos:end="93:53"><name pos:start="93:35" pos:end="93:53">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="93:56" pos:end="93:63"><expr pos:start="93:56" pos:end="93:63"><name pos:start="93:56" pos:end="93:63">dtb_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:22">(<expr pos:start="95:13" pos:end="95:21"><operator pos:start="95:13" pos:end="95:13">!</operator><name pos:start="95:14" pos:end="95:21">filename</name></expr>)</condition> <block pos:start="95:24" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:21">

            <goto pos:start="97:13" pos:end="97:21">goto <name pos:start="97:18" pos:end="97:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:52"><expr pos:start="103:9" pos:end="103:51"><name pos:start="103:9" pos:end="103:11">fdt</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="103:51"><name pos:start="103:15" pos:end="103:30">load_device_tree</name><argument_list pos:start="103:31" pos:end="103:51">(<argument pos:start="103:32" pos:end="103:39"><expr pos:start="103:32" pos:end="103:39"><name pos:start="103:32" pos:end="103:39">filename</name></expr></argument>, <argument pos:start="103:42" pos:end="103:50"><expr pos:start="103:42" pos:end="103:50"><operator pos:start="103:42" pos:end="103:42">&amp;</operator><name pos:start="103:43" pos:end="103:50">fdt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:17">(<expr pos:start="105:13" pos:end="105:16"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:16">fdt</name></expr>)</condition> <block pos:start="105:19" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:21">

            <goto pos:start="107:13" pos:end="107:21">goto <name pos:start="107:18" pos:end="107:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="111:9" pos:end="111:18">goto <name pos:start="111:14" pos:end="111:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:40"><expr pos:start="117:5" pos:end="117:39"><name pos:start="117:5" pos:end="117:7">fdt</name> <operator pos:start="117:9" pos:end="117:9">=</operator> <call pos:start="117:11" pos:end="117:39"><name pos:start="117:11" pos:end="117:28">create_device_tree</name><argument_list pos:start="117:29" pos:end="117:39">(<argument pos:start="117:30" pos:end="117:38"><expr pos:start="117:30" pos:end="117:38"><operator pos:start="117:30" pos:end="117:30">&amp;</operator><name pos:start="117:31" pos:end="117:38">fdt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:20">(<expr pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:11">fdt</name> <operator pos:start="119:13" pos:end="119:14">==</operator> <name pos:start="119:16" pos:end="119:19">NULL</name></expr>)</condition> <block pos:start="119:22" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:17">

        <goto pos:start="121:9" pos:end="121:17">goto <name pos:start="121:14" pos:end="121:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="127:5" pos:end="127:43">/* Manipulate device tree in memory. */</comment>

    <expr_stmt pos:start="129:5" pos:end="129:61"><expr pos:start="129:5" pos:end="129:60"><call pos:start="129:5" pos:end="129:60"><name pos:start="129:5" pos:end="129:29">qemu_devtree_setprop_cell</name><argument_list pos:start="129:30" pos:end="129:60">(<argument pos:start="129:31" pos:end="129:33"><expr pos:start="129:31" pos:end="129:33"><name pos:start="129:31" pos:end="129:33">fdt</name></expr></argument>, <argument pos:start="129:36" pos:end="129:38"><expr pos:start="129:36" pos:end="129:38"><literal type="string" pos:start="129:36" pos:end="129:38">"/"</literal></expr></argument>, <argument pos:start="129:41" pos:end="129:56"><expr pos:start="129:41" pos:end="129:56"><literal type="string" pos:start="129:41" pos:end="129:56">"#address-cells"</literal></expr></argument>, <argument pos:start="129:59" pos:end="129:59"><expr pos:start="129:59" pos:end="129:59"><literal type="number" pos:start="129:59" pos:end="129:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:58"><expr pos:start="131:5" pos:end="131:57"><call pos:start="131:5" pos:end="131:57"><name pos:start="131:5" pos:end="131:29">qemu_devtree_setprop_cell</name><argument_list pos:start="131:30" pos:end="131:57">(<argument pos:start="131:31" pos:end="131:33"><expr pos:start="131:31" pos:end="131:33"><name pos:start="131:31" pos:end="131:33">fdt</name></expr></argument>, <argument pos:start="131:36" pos:end="131:38"><expr pos:start="131:36" pos:end="131:38"><literal type="string" pos:start="131:36" pos:end="131:38">"/"</literal></expr></argument>, <argument pos:start="131:41" pos:end="131:53"><expr pos:start="131:41" pos:end="131:53"><literal type="string" pos:start="131:41" pos:end="131:53">"#size-cells"</literal></expr></argument>, <argument pos:start="131:56" pos:end="131:56"><expr pos:start="131:56" pos:end="131:56"><literal type="number" pos:start="131:56" pos:end="131:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:45"><expr pos:start="135:5" pos:end="135:44"><call pos:start="135:5" pos:end="135:44"><name pos:start="135:5" pos:end="135:28">qemu_devtree_add_subnode</name><argument_list pos:start="135:29" pos:end="135:44">(<argument pos:start="135:30" pos:end="135:32"><expr pos:start="135:30" pos:end="135:32"><name pos:start="135:30" pos:end="135:32">fdt</name></expr></argument>, <argument pos:start="135:35" pos:end="135:43"><expr pos:start="135:35" pos:end="135:43"><literal type="string" pos:start="135:35" pos:end="135:43">"/memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:73"><expr pos:start="137:5" pos:end="137:72"><call pos:start="137:5" pos:end="137:72"><name pos:start="137:5" pos:end="137:31">qemu_devtree_setprop_string</name><argument_list pos:start="137:32" pos:end="137:72">(<argument pos:start="137:33" pos:end="137:35"><expr pos:start="137:33" pos:end="137:35"><name pos:start="137:33" pos:end="137:35">fdt</name></expr></argument>, <argument pos:start="137:38" pos:end="137:46"><expr pos:start="137:38" pos:end="137:46"><literal type="string" pos:start="137:38" pos:end="137:46">"/memory"</literal></expr></argument>, <argument pos:start="137:49" pos:end="137:61"><expr pos:start="137:49" pos:end="137:61"><literal type="string" pos:start="137:49" pos:end="137:61">"device_type"</literal></expr></argument>, <argument pos:start="137:64" pos:end="137:71"><expr pos:start="137:64" pos:end="137:71"><literal type="string" pos:start="137:64" pos:end="137:71">"memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="141:51"><expr pos:start="139:5" pos:end="141:50"><call pos:start="139:5" pos:end="141:50"><name pos:start="139:5" pos:end="139:24">qemu_devtree_setprop</name><argument_list pos:start="139:25" pos:end="141:50">(<argument pos:start="139:26" pos:end="139:28"><expr pos:start="139:26" pos:end="139:28"><name pos:start="139:26" pos:end="139:28">fdt</name></expr></argument>, <argument pos:start="139:31" pos:end="139:39"><expr pos:start="139:31" pos:end="139:39"><literal type="string" pos:start="139:31" pos:end="139:39">"/memory"</literal></expr></argument>, <argument pos:start="139:42" pos:end="139:46"><expr pos:start="139:42" pos:end="139:46"><literal type="string" pos:start="139:42" pos:end="139:46">"reg"</literal></expr></argument>, <argument pos:start="139:49" pos:end="139:64"><expr pos:start="139:49" pos:end="139:64"><name pos:start="139:49" pos:end="139:64">mem_reg_property</name></expr></argument>,

                         <argument pos:start="141:26" pos:end="141:49"><expr pos:start="141:26" pos:end="141:49"><sizeof pos:start="141:26" pos:end="141:49">sizeof<argument_list pos:start="141:32" pos:end="141:49">(<argument pos:start="141:33" pos:end="141:48"><expr pos:start="141:33" pos:end="141:48"><name pos:start="141:33" pos:end="141:48">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:45"><expr pos:start="145:5" pos:end="145:44"><call pos:start="145:5" pos:end="145:44"><name pos:start="145:5" pos:end="145:28">qemu_devtree_add_subnode</name><argument_list pos:start="145:29" pos:end="145:44">(<argument pos:start="145:30" pos:end="145:32"><expr pos:start="145:30" pos:end="145:32"><name pos:start="145:30" pos:end="145:32">fdt</name></expr></argument>, <argument pos:start="145:35" pos:end="145:43"><expr pos:start="145:35" pos:end="145:43"><literal type="string" pos:start="145:35" pos:end="145:43">"/chosen"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="171:5"><if pos:start="147:5" pos:end="171:5">if <condition pos:start="147:8" pos:end="147:20">(<expr pos:start="147:9" pos:end="147:19"><name pos:start="147:9" pos:end="147:19">initrd_size</name></expr>)</condition> <block pos:start="147:22" pos:end="171:5">{<block_content pos:start="149:9" pos:end="169:9">

        <expr_stmt pos:start="149:9" pos:end="151:53"><expr pos:start="149:9" pos:end="151:52"><name pos:start="149:9" pos:end="149:11">ret</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <call pos:start="149:15" pos:end="151:52"><name pos:start="149:15" pos:end="149:39">qemu_devtree_setprop_cell</name><argument_list pos:start="149:40" pos:end="151:52">(<argument pos:start="149:41" pos:end="149:43"><expr pos:start="149:41" pos:end="149:43"><name pos:start="149:41" pos:end="149:43">fdt</name></expr></argument>, <argument pos:start="149:46" pos:end="149:54"><expr pos:start="149:46" pos:end="149:54"><literal type="string" pos:start="149:46" pos:end="149:54">"/chosen"</literal></expr></argument>, <argument pos:start="149:57" pos:end="149:76"><expr pos:start="149:57" pos:end="149:76"><literal type="string" pos:start="149:57" pos:end="149:76">"linux,initrd-start"</literal></expr></argument>,

                                        <argument pos:start="151:41" pos:end="151:51"><expr pos:start="151:41" pos:end="151:51"><name pos:start="151:41" pos:end="151:51">initrd_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="153:9" pos:end="157:9"><if pos:start="153:9" pos:end="157:9">if <condition pos:start="153:12" pos:end="153:20">(<expr pos:start="153:13" pos:end="153:19"><name pos:start="153:13" pos:end="153:15">ret</name> <operator pos:start="153:17" pos:end="153:17">&lt;</operator> <literal type="number" pos:start="153:19" pos:end="153:19">0</literal></expr>)</condition> <block pos:start="153:22" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:73">

            <expr_stmt pos:start="155:13" pos:end="155:73"><expr pos:start="155:13" pos:end="155:72"><call pos:start="155:13" pos:end="155:72"><name pos:start="155:13" pos:end="155:19">fprintf</name><argument_list pos:start="155:20" pos:end="155:72">(<argument pos:start="155:21" pos:end="155:26"><expr pos:start="155:21" pos:end="155:26"><name pos:start="155:21" pos:end="155:26">stderr</name></expr></argument>, <argument pos:start="155:29" pos:end="155:71"><expr pos:start="155:29" pos:end="155:71"><literal type="string" pos:start="155:29" pos:end="155:71">"couldn't set /chosen/linux,initrd-start\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="161:9" pos:end="163:69"><expr pos:start="161:9" pos:end="163:68"><name pos:start="161:9" pos:end="161:11">ret</name> <operator pos:start="161:13" pos:end="161:13">=</operator> <call pos:start="161:15" pos:end="163:68"><name pos:start="161:15" pos:end="161:39">qemu_devtree_setprop_cell</name><argument_list pos:start="161:40" pos:end="163:68">(<argument pos:start="161:41" pos:end="161:43"><expr pos:start="161:41" pos:end="161:43"><name pos:start="161:41" pos:end="161:43">fdt</name></expr></argument>, <argument pos:start="161:46" pos:end="161:54"><expr pos:start="161:46" pos:end="161:54"><literal type="string" pos:start="161:46" pos:end="161:54">"/chosen"</literal></expr></argument>, <argument pos:start="161:57" pos:end="161:74"><expr pos:start="161:57" pos:end="161:74"><literal type="string" pos:start="161:57" pos:end="161:74">"linux,initrd-end"</literal></expr></argument>,

                                        <argument pos:start="163:41" pos:end="163:67"><expr pos:start="163:41" pos:end="163:67"><operator pos:start="163:41" pos:end="163:41">(</operator><name pos:start="163:42" pos:end="163:52">initrd_base</name> <operator pos:start="163:54" pos:end="163:54">+</operator> <name pos:start="163:56" pos:end="163:66">initrd_size</name><operator pos:start="163:67" pos:end="163:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="169:9"><if pos:start="165:9" pos:end="169:9">if <condition pos:start="165:12" pos:end="165:20">(<expr pos:start="165:13" pos:end="165:19"><name pos:start="165:13" pos:end="165:15">ret</name> <operator pos:start="165:17" pos:end="165:17">&lt;</operator> <literal type="number" pos:start="165:19" pos:end="165:19">0</literal></expr>)</condition> <block pos:start="165:22" pos:end="169:9">{<block_content pos:start="167:13" pos:end="167:71">

            <expr_stmt pos:start="167:13" pos:end="167:71"><expr pos:start="167:13" pos:end="167:70"><call pos:start="167:13" pos:end="167:70"><name pos:start="167:13" pos:end="167:19">fprintf</name><argument_list pos:start="167:20" pos:end="167:70">(<argument pos:start="167:21" pos:end="167:26"><expr pos:start="167:21" pos:end="167:26"><name pos:start="167:21" pos:end="167:26">stderr</name></expr></argument>, <argument pos:start="167:29" pos:end="167:69"><expr pos:start="167:29" pos:end="167:69"><literal type="string" pos:start="167:29" pos:end="167:69">"couldn't set /chosen/linux,initrd-end\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="175:5" pos:end="177:62"><expr pos:start="175:5" pos:end="177:61"><name pos:start="175:5" pos:end="175:7">ret</name> <operator pos:start="175:9" pos:end="175:9">=</operator> <call pos:start="175:11" pos:end="177:61"><name pos:start="175:11" pos:end="175:37">qemu_devtree_setprop_string</name><argument_list pos:start="175:38" pos:end="177:61">(<argument pos:start="175:39" pos:end="175:41"><expr pos:start="175:39" pos:end="175:41"><name pos:start="175:39" pos:end="175:41">fdt</name></expr></argument>, <argument pos:start="175:44" pos:end="175:52"><expr pos:start="175:44" pos:end="175:52"><literal type="string" pos:start="175:44" pos:end="175:52">"/chosen"</literal></expr></argument>, <argument pos:start="175:55" pos:end="175:64"><expr pos:start="175:55" pos:end="175:64"><literal type="string" pos:start="175:55" pos:end="175:64">"bootargs"</literal></expr></argument>,

                                      <argument pos:start="177:39" pos:end="177:60"><expr pos:start="177:39" pos:end="177:60"><name pos:start="177:39" pos:end="177:60"><name pos:start="177:39" pos:end="177:44">params</name><operator pos:start="177:45" pos:end="177:46">-&gt;</operator><name pos:start="177:47" pos:end="177:60">kernel_cmdline</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="179:5" pos:end="181:59"><if pos:start="179:5" pos:end="181:59">if <condition pos:start="179:8" pos:end="179:16">(<expr pos:start="179:9" pos:end="179:15"><name pos:start="179:9" pos:end="179:11">ret</name> <operator pos:start="179:13" pos:end="179:13">&lt;</operator> <literal type="number" pos:start="179:15" pos:end="179:15">0</literal></expr>)</condition><block type="pseudo" pos:start="181:9" pos:end="181:59"><block_content pos:start="181:9" pos:end="181:59">

        <expr_stmt pos:start="181:9" pos:end="181:59"><expr pos:start="181:9" pos:end="181:58"><call pos:start="181:9" pos:end="181:58"><name pos:start="181:9" pos:end="181:15">fprintf</name><argument_list pos:start="181:16" pos:end="181:58">(<argument pos:start="181:17" pos:end="181:22"><expr pos:start="181:17" pos:end="181:22"><name pos:start="181:17" pos:end="181:22">stderr</name></expr></argument>, <argument pos:start="181:25" pos:end="181:57"><expr pos:start="181:25" pos:end="181:57"><literal type="string" pos:start="181:25" pos:end="181:57">"couldn't set /chosen/bootargs\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="185:5" pos:end="209:5"><if pos:start="185:5" pos:end="209:5">if <condition pos:start="185:8" pos:end="185:22">(<expr pos:start="185:9" pos:end="185:21"><call pos:start="185:9" pos:end="185:21"><name pos:start="185:9" pos:end="185:19">kvm_enabled</name><argument_list pos:start="185:20" pos:end="185:21">()</argument_list></call></expr>)</condition> <block pos:start="185:24" pos:end="209:5">{<block_content pos:start="189:9" pos:end="207:59">

        <comment type="block" pos:start="187:9" pos:end="187:41">/* Read out host's frequencies */</comment>

        <expr_stmt pos:start="189:9" pos:end="189:44"><expr pos:start="189:9" pos:end="189:43"><name pos:start="189:9" pos:end="189:18">clock_freq</name> <operator pos:start="189:20" pos:end="189:20">=</operator> <call pos:start="189:22" pos:end="189:43"><name pos:start="189:22" pos:end="189:41">kvmppc_get_clockfreq</name><argument_list pos:start="189:42" pos:end="189:43">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:38"><expr pos:start="191:9" pos:end="191:37"><name pos:start="191:9" pos:end="191:15">tb_freq</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <call pos:start="191:19" pos:end="191:37"><name pos:start="191:19" pos:end="191:35">kvmppc_get_tbfreq</name><argument_list pos:start="191:36" pos:end="191:37">()</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="195:9" pos:end="195:46">/* indicate KVM hypercall interface */</comment>

        <expr_stmt pos:start="197:9" pos:end="197:53"><expr pos:start="197:9" pos:end="197:52"><call pos:start="197:9" pos:end="197:52"><name pos:start="197:9" pos:end="197:32">qemu_devtree_add_subnode</name><argument_list pos:start="197:33" pos:end="197:52">(<argument pos:start="197:34" pos:end="197:36"><expr pos:start="197:34" pos:end="197:36"><name pos:start="197:34" pos:end="197:36">fdt</name></expr></argument>, <argument pos:start="197:39" pos:end="197:51"><expr pos:start="197:39" pos:end="197:51"><literal type="string" pos:start="197:39" pos:end="197:51">"/hypervisor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="201:49"><expr pos:start="199:9" pos:end="201:48"><call pos:start="199:9" pos:end="201:48"><name pos:start="199:9" pos:end="199:35">qemu_devtree_setprop_string</name><argument_list pos:start="199:36" pos:end="201:48">(<argument pos:start="199:37" pos:end="199:39"><expr pos:start="199:37" pos:end="199:39"><name pos:start="199:37" pos:end="199:39">fdt</name></expr></argument>, <argument pos:start="199:42" pos:end="199:54"><expr pos:start="199:42" pos:end="199:54"><literal type="string" pos:start="199:42" pos:end="199:54">"/hypervisor"</literal></expr></argument>, <argument pos:start="199:57" pos:end="199:68"><expr pos:start="199:57" pos:end="199:68"><literal type="string" pos:start="199:57" pos:end="199:68">"compatible"</literal></expr></argument>,

                                    <argument pos:start="201:37" pos:end="201:47"><expr pos:start="201:37" pos:end="201:47"><literal type="string" pos:start="201:37" pos:end="201:47">"linux,kvm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:64"><expr pos:start="203:9" pos:end="203:63"><call pos:start="203:9" pos:end="203:63"><name pos:start="203:9" pos:end="203:28">kvmppc_get_hypercall</name><argument_list pos:start="203:29" pos:end="203:63">(<argument pos:start="203:30" pos:end="203:32"><expr pos:start="203:30" pos:end="203:32"><name pos:start="203:30" pos:end="203:32">env</name></expr></argument>, <argument pos:start="203:35" pos:end="203:43"><expr pos:start="203:35" pos:end="203:43"><name pos:start="203:35" pos:end="203:43">hypercall</name></expr></argument>, <argument pos:start="203:46" pos:end="203:62"><expr pos:start="203:46" pos:end="203:62"><sizeof pos:start="203:46" pos:end="203:62">sizeof<argument_list pos:start="203:52" pos:end="203:62">(<argument pos:start="203:53" pos:end="203:61"><expr pos:start="203:53" pos:end="203:61"><name pos:start="203:53" pos:end="203:61">hypercall</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="207:59"><expr pos:start="205:9" pos:end="207:58"><call pos:start="205:9" pos:end="207:58"><name pos:start="205:9" pos:end="205:28">qemu_devtree_setprop</name><argument_list pos:start="205:29" pos:end="207:58">(<argument pos:start="205:30" pos:end="205:32"><expr pos:start="205:30" pos:end="205:32"><name pos:start="205:30" pos:end="205:32">fdt</name></expr></argument>, <argument pos:start="205:35" pos:end="205:47"><expr pos:start="205:35" pos:end="205:47"><literal type="string" pos:start="205:35" pos:end="205:47">"/hypervisor"</literal></expr></argument>, <argument pos:start="205:50" pos:end="205:69"><expr pos:start="205:50" pos:end="205:69"><literal type="string" pos:start="205:50" pos:end="205:69">"hcall-instructions"</literal></expr></argument>,

                             <argument pos:start="207:30" pos:end="207:38"><expr pos:start="207:30" pos:end="207:38"><name pos:start="207:30" pos:end="207:38">hypercall</name></expr></argument>, <argument pos:start="207:41" pos:end="207:57"><expr pos:start="207:41" pos:end="207:57"><sizeof pos:start="207:41" pos:end="207:57">sizeof<argument_list pos:start="207:47" pos:end="207:57">(<argument pos:start="207:48" pos:end="207:56"><expr pos:start="207:48" pos:end="207:56"><name pos:start="207:48" pos:end="207:56">hypercall</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="213:5" pos:end="213:26">/* Create CPU nodes */</comment>

    <expr_stmt pos:start="215:5" pos:end="215:43"><expr pos:start="215:5" pos:end="215:42"><call pos:start="215:5" pos:end="215:42"><name pos:start="215:5" pos:end="215:28">qemu_devtree_add_subnode</name><argument_list pos:start="215:29" pos:end="215:42">(<argument pos:start="215:30" pos:end="215:32"><expr pos:start="215:30" pos:end="215:32"><name pos:start="215:30" pos:end="215:32">fdt</name></expr></argument>, <argument pos:start="215:35" pos:end="215:41"><expr pos:start="215:35" pos:end="215:41"><literal type="string" pos:start="215:35" pos:end="215:41">"/cpus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:65"><expr pos:start="217:5" pos:end="217:64"><call pos:start="217:5" pos:end="217:64"><name pos:start="217:5" pos:end="217:29">qemu_devtree_setprop_cell</name><argument_list pos:start="217:30" pos:end="217:64">(<argument pos:start="217:31" pos:end="217:33"><expr pos:start="217:31" pos:end="217:33"><name pos:start="217:31" pos:end="217:33">fdt</name></expr></argument>, <argument pos:start="217:36" pos:end="217:42"><expr pos:start="217:36" pos:end="217:42"><literal type="string" pos:start="217:36" pos:end="217:42">"/cpus"</literal></expr></argument>, <argument pos:start="217:45" pos:end="217:60"><expr pos:start="217:45" pos:end="217:60"><literal type="string" pos:start="217:45" pos:end="217:60">"#address-cells"</literal></expr></argument>, <argument pos:start="217:63" pos:end="217:63"><expr pos:start="217:63" pos:end="217:63"><literal type="number" pos:start="217:63" pos:end="217:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:62"><expr pos:start="219:5" pos:end="219:61"><call pos:start="219:5" pos:end="219:61"><name pos:start="219:5" pos:end="219:29">qemu_devtree_setprop_cell</name><argument_list pos:start="219:30" pos:end="219:61">(<argument pos:start="219:31" pos:end="219:33"><expr pos:start="219:31" pos:end="219:33"><name pos:start="219:31" pos:end="219:33">fdt</name></expr></argument>, <argument pos:start="219:36" pos:end="219:42"><expr pos:start="219:36" pos:end="219:42"><literal type="string" pos:start="219:36" pos:end="219:42">"/cpus"</literal></expr></argument>, <argument pos:start="219:45" pos:end="219:57"><expr pos:start="219:45" pos:end="219:57"><literal type="string" pos:start="219:45" pos:end="219:57">"#size-cells"</literal></expr></argument>, <argument pos:start="219:60" pos:end="219:60"><expr pos:start="219:60" pos:end="219:60"><literal type="number" pos:start="219:60" pos:end="219:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="223:5" pos:end="225:50">/* We need to generate the cpu nodes in reverse order, so Linux can pick

       the first node as boot node and be happy */</comment>

    <for pos:start="227:5" pos:end="297:5">for <control pos:start="227:9" pos:end="227:39">(<init pos:start="227:10" pos:end="227:26"><expr pos:start="227:10" pos:end="227:25"><name pos:start="227:10" pos:end="227:10">i</name> <operator pos:start="227:12" pos:end="227:12">=</operator> <name pos:start="227:14" pos:end="227:21">smp_cpus</name> <operator pos:start="227:23" pos:end="227:23">-</operator> <literal type="number" pos:start="227:25" pos:end="227:25">1</literal></expr>;</init> <condition pos:start="227:28" pos:end="227:34"><expr pos:start="227:28" pos:end="227:33"><name pos:start="227:28" pos:end="227:28">i</name> <operator pos:start="227:30" pos:end="227:31">&gt;=</operator> <literal type="number" pos:start="227:33" pos:end="227:33">0</literal></expr>;</condition> <incr pos:start="227:36" pos:end="227:38"><expr pos:start="227:36" pos:end="227:38"><name pos:start="227:36" pos:end="227:36">i</name><operator pos:start="227:37" pos:end="227:38">--</operator></expr></incr>)</control> <block pos:start="227:41" pos:end="297:5">{<block_content pos:start="229:9" pos:end="295:9">

        <decl_stmt pos:start="229:9" pos:end="229:27"><decl pos:start="229:9" pos:end="229:26"><type pos:start="229:9" pos:end="229:12"><name pos:start="229:9" pos:end="229:12">char</name></type> <name pos:start="229:14" pos:end="229:26"><name pos:start="229:14" pos:end="229:21">cpu_name</name><index pos:start="229:22" pos:end="229:26">[<expr pos:start="229:23" pos:end="229:25"><literal type="number" pos:start="229:23" pos:end="229:25">128</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="231:9" pos:end="231:67"><decl pos:start="231:9" pos:end="231:66"><type pos:start="231:9" pos:end="231:16"><name pos:start="231:9" pos:end="231:16">uint64_t</name></type> <name pos:start="231:18" pos:end="231:33">cpu_release_addr</name> <init pos:start="231:35" pos:end="231:66">= <expr pos:start="231:37" pos:end="231:66"><name pos:start="231:37" pos:end="231:53">MPC8544_SPIN_BASE</name> <operator pos:start="231:55" pos:end="231:55">+</operator> <operator pos:start="231:57" pos:end="231:57">(</operator><name pos:start="231:58" pos:end="231:58">i</name> <operator pos:start="231:60" pos:end="231:60">*</operator> <literal type="number" pos:start="231:62" pos:end="231:65">0x20</literal><operator pos:start="231:66" pos:end="231:66">)</operator></expr></init></decl>;</decl_stmt>



        <for pos:start="235:9" pos:end="243:9">for <control pos:start="235:13" pos:end="235:63">(<init pos:start="235:14" pos:end="235:29"><expr pos:start="235:14" pos:end="235:28"><name pos:start="235:14" pos:end="235:16">env</name> <operator pos:start="235:18" pos:end="235:18">=</operator> <name pos:start="235:20" pos:end="235:28">first_cpu</name></expr>;</init> <condition pos:start="235:31" pos:end="235:42"><expr pos:start="235:31" pos:end="235:41"><name pos:start="235:31" pos:end="235:33">env</name> <operator pos:start="235:35" pos:end="235:36">!=</operator> <name pos:start="235:38" pos:end="235:41">NULL</name></expr>;</condition> <incr pos:start="235:44" pos:end="235:62"><expr pos:start="235:44" pos:end="235:62"><name pos:start="235:44" pos:end="235:46">env</name> <operator pos:start="235:48" pos:end="235:48">=</operator> <name pos:start="235:50" pos:end="235:62"><name pos:start="235:50" pos:end="235:52">env</name><operator pos:start="235:53" pos:end="235:54">-&gt;</operator><name pos:start="235:55" pos:end="235:62">next_cpu</name></name></expr></incr>)</control> <block pos:start="235:65" pos:end="243:9">{<block_content pos:start="237:13" pos:end="241:13">

            <if_stmt pos:start="237:13" pos:end="241:13"><if pos:start="237:13" pos:end="241:13">if <condition pos:start="237:16" pos:end="237:36">(<expr pos:start="237:17" pos:end="237:35"><name pos:start="237:17" pos:end="237:30"><name pos:start="237:17" pos:end="237:19">env</name><operator pos:start="237:20" pos:end="237:21">-&gt;</operator><name pos:start="237:22" pos:end="237:30">cpu_index</name></name> <operator pos:start="237:32" pos:end="237:33">==</operator> <name pos:start="237:35" pos:end="237:35">i</name></expr>)</condition> <block pos:start="237:38" pos:end="241:13">{<block_content pos:start="239:17" pos:end="239:22">

                <break pos:start="239:17" pos:end="239:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="247:9" pos:end="251:9"><if pos:start="247:9" pos:end="251:9">if <condition pos:start="247:12" pos:end="247:17">(<expr pos:start="247:13" pos:end="247:16"><operator pos:start="247:13" pos:end="247:13">!</operator><name pos:start="247:14" pos:end="247:16">env</name></expr>)</condition> <block pos:start="247:19" pos:end="251:9">{<block_content pos:start="249:13" pos:end="249:21">

            <continue pos:start="249:13" pos:end="249:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="255:9" pos:end="255:86"><expr pos:start="255:9" pos:end="255:85"><call pos:start="255:9" pos:end="255:85"><name pos:start="255:9" pos:end="255:16">snprintf</name><argument_list pos:start="255:17" pos:end="255:85">(<argument pos:start="255:18" pos:end="255:25"><expr pos:start="255:18" pos:end="255:25"><name pos:start="255:18" pos:end="255:25">cpu_name</name></expr></argument>, <argument pos:start="255:28" pos:end="255:43"><expr pos:start="255:28" pos:end="255:43"><sizeof pos:start="255:28" pos:end="255:43">sizeof<argument_list pos:start="255:34" pos:end="255:43">(<argument pos:start="255:35" pos:end="255:42"><expr pos:start="255:35" pos:end="255:42"><name pos:start="255:35" pos:end="255:42">cpu_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="255:46" pos:end="255:68"><expr pos:start="255:46" pos:end="255:68"><literal type="string" pos:start="255:46" pos:end="255:68">"/cpus/PowerPC,8544@%x"</literal></expr></argument>, <argument pos:start="255:71" pos:end="255:84"><expr pos:start="255:71" pos:end="255:84"><name pos:start="255:71" pos:end="255:84"><name pos:start="255:71" pos:end="255:73">env</name><operator pos:start="255:74" pos:end="255:75">-&gt;</operator><name pos:start="255:76" pos:end="255:84">cpu_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:48"><expr pos:start="257:9" pos:end="257:47"><call pos:start="257:9" pos:end="257:47"><name pos:start="257:9" pos:end="257:32">qemu_devtree_add_subnode</name><argument_list pos:start="257:33" pos:end="257:47">(<argument pos:start="257:34" pos:end="257:36"><expr pos:start="257:34" pos:end="257:36"><name pos:start="257:34" pos:end="257:36">fdt</name></expr></argument>, <argument pos:start="257:39" pos:end="257:46"><expr pos:start="257:39" pos:end="257:46"><name pos:start="257:39" pos:end="257:46">cpu_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:80"><expr pos:start="259:9" pos:end="259:79"><call pos:start="259:9" pos:end="259:79"><name pos:start="259:9" pos:end="259:33">qemu_devtree_setprop_cell</name><argument_list pos:start="259:34" pos:end="259:79">(<argument pos:start="259:35" pos:end="259:37"><expr pos:start="259:35" pos:end="259:37"><name pos:start="259:35" pos:end="259:37">fdt</name></expr></argument>, <argument pos:start="259:40" pos:end="259:47"><expr pos:start="259:40" pos:end="259:47"><name pos:start="259:40" pos:end="259:47">cpu_name</name></expr></argument>, <argument pos:start="259:50" pos:end="259:66"><expr pos:start="259:50" pos:end="259:66"><literal type="string" pos:start="259:50" pos:end="259:66">"clock-frequency"</literal></expr></argument>, <argument pos:start="259:69" pos:end="259:78"><expr pos:start="259:69" pos:end="259:78"><name pos:start="259:69" pos:end="259:78">clock_freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:80"><expr pos:start="261:9" pos:end="261:79"><call pos:start="261:9" pos:end="261:79"><name pos:start="261:9" pos:end="261:33">qemu_devtree_setprop_cell</name><argument_list pos:start="261:34" pos:end="261:79">(<argument pos:start="261:35" pos:end="261:37"><expr pos:start="261:35" pos:end="261:37"><name pos:start="261:35" pos:end="261:37">fdt</name></expr></argument>, <argument pos:start="261:40" pos:end="261:47"><expr pos:start="261:40" pos:end="261:47"><name pos:start="261:40" pos:end="261:47">cpu_name</name></expr></argument>, <argument pos:start="261:50" pos:end="261:69"><expr pos:start="261:50" pos:end="261:69"><literal type="string" pos:start="261:50" pos:end="261:69">"timebase-frequency"</literal></expr></argument>, <argument pos:start="261:72" pos:end="261:78"><expr pos:start="261:72" pos:end="261:78"><name pos:start="261:72" pos:end="261:78">tb_freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:73"><expr pos:start="263:9" pos:end="263:72"><call pos:start="263:9" pos:end="263:72"><name pos:start="263:9" pos:end="263:35">qemu_devtree_setprop_string</name><argument_list pos:start="263:36" pos:end="263:72">(<argument pos:start="263:37" pos:end="263:39"><expr pos:start="263:37" pos:end="263:39"><name pos:start="263:37" pos:end="263:39">fdt</name></expr></argument>, <argument pos:start="263:42" pos:end="263:49"><expr pos:start="263:42" pos:end="263:49"><name pos:start="263:42" pos:end="263:49">cpu_name</name></expr></argument>, <argument pos:start="263:52" pos:end="263:64"><expr pos:start="263:52" pos:end="263:64"><literal type="string" pos:start="263:52" pos:end="263:64">"device_type"</literal></expr></argument>, <argument pos:start="263:67" pos:end="263:71"><expr pos:start="263:67" pos:end="263:71"><literal type="string" pos:start="263:67" pos:end="263:71">"cpu"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:72"><expr pos:start="265:9" pos:end="265:71"><call pos:start="265:9" pos:end="265:71"><name pos:start="265:9" pos:end="265:33">qemu_devtree_setprop_cell</name><argument_list pos:start="265:34" pos:end="265:71">(<argument pos:start="265:35" pos:end="265:37"><expr pos:start="265:35" pos:end="265:37"><name pos:start="265:35" pos:end="265:37">fdt</name></expr></argument>, <argument pos:start="265:40" pos:end="265:47"><expr pos:start="265:40" pos:end="265:47"><name pos:start="265:40" pos:end="265:47">cpu_name</name></expr></argument>, <argument pos:start="265:50" pos:end="265:54"><expr pos:start="265:50" pos:end="265:54"><literal type="string" pos:start="265:50" pos:end="265:54">"reg"</literal></expr></argument>, <argument pos:start="265:57" pos:end="265:70"><expr pos:start="265:57" pos:end="265:70"><name pos:start="265:57" pos:end="265:70"><name pos:start="265:57" pos:end="265:59">env</name><operator pos:start="265:60" pos:end="265:61">-&gt;</operator><name pos:start="265:62" pos:end="265:70">cpu_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="267:9" pos:end="269:57"><expr pos:start="267:9" pos:end="269:56"><call pos:start="267:9" pos:end="269:56"><name pos:start="267:9" pos:end="267:33">qemu_devtree_setprop_cell</name><argument_list pos:start="267:34" pos:end="269:56">(<argument pos:start="267:35" pos:end="267:37"><expr pos:start="267:35" pos:end="267:37"><name pos:start="267:35" pos:end="267:37">fdt</name></expr></argument>, <argument pos:start="267:40" pos:end="267:47"><expr pos:start="267:40" pos:end="267:47"><name pos:start="267:40" pos:end="267:47">cpu_name</name></expr></argument>, <argument pos:start="267:50" pos:end="267:68"><expr pos:start="267:50" pos:end="267:68"><literal type="string" pos:start="267:50" pos:end="267:68">"d-cache-line-size"</literal></expr></argument>,

                                  <argument pos:start="269:35" pos:end="269:55"><expr pos:start="269:35" pos:end="269:55"><name pos:start="269:35" pos:end="269:55"><name pos:start="269:35" pos:end="269:37">env</name><operator pos:start="269:38" pos:end="269:39">-&gt;</operator><name pos:start="269:40" pos:end="269:55">dcache_line_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="273:57"><expr pos:start="271:9" pos:end="273:56"><call pos:start="271:9" pos:end="273:56"><name pos:start="271:9" pos:end="271:33">qemu_devtree_setprop_cell</name><argument_list pos:start="271:34" pos:end="273:56">(<argument pos:start="271:35" pos:end="271:37"><expr pos:start="271:35" pos:end="271:37"><name pos:start="271:35" pos:end="271:37">fdt</name></expr></argument>, <argument pos:start="271:40" pos:end="271:47"><expr pos:start="271:40" pos:end="271:47"><name pos:start="271:40" pos:end="271:47">cpu_name</name></expr></argument>, <argument pos:start="271:50" pos:end="271:68"><expr pos:start="271:50" pos:end="271:68"><literal type="string" pos:start="271:50" pos:end="271:68">"i-cache-line-size"</literal></expr></argument>,

                                  <argument pos:start="273:35" pos:end="273:55"><expr pos:start="273:35" pos:end="273:55"><name pos:start="273:35" pos:end="273:55"><name pos:start="273:35" pos:end="273:37">env</name><operator pos:start="273:38" pos:end="273:39">-&gt;</operator><name pos:start="273:40" pos:end="273:55">icache_line_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:73"><expr pos:start="275:9" pos:end="275:72"><call pos:start="275:9" pos:end="275:72"><name pos:start="275:9" pos:end="275:33">qemu_devtree_setprop_cell</name><argument_list pos:start="275:34" pos:end="275:72">(<argument pos:start="275:35" pos:end="275:37"><expr pos:start="275:35" pos:end="275:37"><name pos:start="275:35" pos:end="275:37">fdt</name></expr></argument>, <argument pos:start="275:40" pos:end="275:47"><expr pos:start="275:40" pos:end="275:47"><name pos:start="275:40" pos:end="275:47">cpu_name</name></expr></argument>, <argument pos:start="275:50" pos:end="275:63"><expr pos:start="275:50" pos:end="275:63"><literal type="string" pos:start="275:50" pos:end="275:63">"d-cache-size"</literal></expr></argument>, <argument pos:start="275:66" pos:end="275:71"><expr pos:start="275:66" pos:end="275:71"><literal type="number" pos:start="275:66" pos:end="275:71">0x8000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:73"><expr pos:start="277:9" pos:end="277:72"><call pos:start="277:9" pos:end="277:72"><name pos:start="277:9" pos:end="277:33">qemu_devtree_setprop_cell</name><argument_list pos:start="277:34" pos:end="277:72">(<argument pos:start="277:35" pos:end="277:37"><expr pos:start="277:35" pos:end="277:37"><name pos:start="277:35" pos:end="277:37">fdt</name></expr></argument>, <argument pos:start="277:40" pos:end="277:47"><expr pos:start="277:40" pos:end="277:47"><name pos:start="277:40" pos:end="277:47">cpu_name</name></expr></argument>, <argument pos:start="277:50" pos:end="277:63"><expr pos:start="277:50" pos:end="277:63"><literal type="string" pos:start="277:50" pos:end="277:63">"i-cache-size"</literal></expr></argument>, <argument pos:start="277:66" pos:end="277:71"><expr pos:start="277:66" pos:end="277:71"><literal type="number" pos:start="277:66" pos:end="277:71">0x8000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:69"><expr pos:start="279:9" pos:end="279:68"><call pos:start="279:9" pos:end="279:68"><name pos:start="279:9" pos:end="279:33">qemu_devtree_setprop_cell</name><argument_list pos:start="279:34" pos:end="279:68">(<argument pos:start="279:35" pos:end="279:37"><expr pos:start="279:35" pos:end="279:37"><name pos:start="279:35" pos:end="279:37">fdt</name></expr></argument>, <argument pos:start="279:40" pos:end="279:47"><expr pos:start="279:40" pos:end="279:47"><name pos:start="279:40" pos:end="279:47">cpu_name</name></expr></argument>, <argument pos:start="279:50" pos:end="279:64"><expr pos:start="279:50" pos:end="279:64"><literal type="string" pos:start="279:50" pos:end="279:64">"bus-frequency"</literal></expr></argument>, <argument pos:start="279:67" pos:end="279:67"><expr pos:start="279:67" pos:end="279:67"><literal type="number" pos:start="279:67" pos:end="279:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="281:9" pos:end="295:9"><if pos:start="281:9" pos:end="291:9">if <condition pos:start="281:12" pos:end="281:27">(<expr pos:start="281:13" pos:end="281:26"><name pos:start="281:13" pos:end="281:26"><name pos:start="281:13" pos:end="281:15">env</name><operator pos:start="281:16" pos:end="281:17">-&gt;</operator><name pos:start="281:18" pos:end="281:26">cpu_index</name></name></expr>)</condition> <block pos:start="281:29" pos:end="291:9">{<block_content pos:start="283:13" pos:end="289:55">

            <expr_stmt pos:start="283:13" pos:end="283:77"><expr pos:start="283:13" pos:end="283:76"><call pos:start="283:13" pos:end="283:76"><name pos:start="283:13" pos:end="283:39">qemu_devtree_setprop_string</name><argument_list pos:start="283:40" pos:end="283:76">(<argument pos:start="283:41" pos:end="283:43"><expr pos:start="283:41" pos:end="283:43"><name pos:start="283:41" pos:end="283:43">fdt</name></expr></argument>, <argument pos:start="283:46" pos:end="283:53"><expr pos:start="283:46" pos:end="283:53"><name pos:start="283:46" pos:end="283:53">cpu_name</name></expr></argument>, <argument pos:start="283:56" pos:end="283:63"><expr pos:start="283:56" pos:end="283:63"><literal type="string" pos:start="283:56" pos:end="283:63">"status"</literal></expr></argument>, <argument pos:start="283:66" pos:end="283:75"><expr pos:start="283:66" pos:end="283:75"><literal type="string" pos:start="283:66" pos:end="283:75">"disabled"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:86"><expr pos:start="285:13" pos:end="285:85"><call pos:start="285:13" pos:end="285:85"><name pos:start="285:13" pos:end="285:39">qemu_devtree_setprop_string</name><argument_list pos:start="285:40" pos:end="285:85">(<argument pos:start="285:41" pos:end="285:43"><expr pos:start="285:41" pos:end="285:43"><name pos:start="285:41" pos:end="285:43">fdt</name></expr></argument>, <argument pos:start="285:46" pos:end="285:53"><expr pos:start="285:46" pos:end="285:53"><name pos:start="285:46" pos:end="285:53">cpu_name</name></expr></argument>, <argument pos:start="285:56" pos:end="285:70"><expr pos:start="285:56" pos:end="285:70"><literal type="string" pos:start="285:56" pos:end="285:70">"enable-method"</literal></expr></argument>, <argument pos:start="285:73" pos:end="285:84"><expr pos:start="285:73" pos:end="285:84"><literal type="string" pos:start="285:73" pos:end="285:84">"spin-table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="289:55"><expr pos:start="287:13" pos:end="289:54"><call pos:start="287:13" pos:end="289:54"><name pos:start="287:13" pos:end="287:36">qemu_devtree_setprop_u64</name><argument_list pos:start="287:37" pos:end="289:54">(<argument pos:start="287:38" pos:end="287:40"><expr pos:start="287:38" pos:end="287:40"><name pos:start="287:38" pos:end="287:40">fdt</name></expr></argument>, <argument pos:start="287:43" pos:end="287:50"><expr pos:start="287:43" pos:end="287:50"><name pos:start="287:43" pos:end="287:50">cpu_name</name></expr></argument>, <argument pos:start="287:53" pos:end="287:70"><expr pos:start="287:53" pos:end="287:70"><literal type="string" pos:start="287:53" pos:end="287:70">"cpu-release-addr"</literal></expr></argument>,

                                     <argument pos:start="289:38" pos:end="289:53"><expr pos:start="289:38" pos:end="289:53"><name pos:start="289:38" pos:end="289:53">cpu_release_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="291:11" pos:end="295:9">else <block pos:start="291:16" pos:end="295:9">{<block_content pos:start="293:13" pos:end="293:73">

            <expr_stmt pos:start="293:13" pos:end="293:73"><expr pos:start="293:13" pos:end="293:72"><call pos:start="293:13" pos:end="293:72"><name pos:start="293:13" pos:end="293:39">qemu_devtree_setprop_string</name><argument_list pos:start="293:40" pos:end="293:72">(<argument pos:start="293:41" pos:end="293:43"><expr pos:start="293:41" pos:end="293:43"><name pos:start="293:41" pos:end="293:43">fdt</name></expr></argument>, <argument pos:start="293:46" pos:end="293:53"><expr pos:start="293:46" pos:end="293:53"><name pos:start="293:46" pos:end="293:53">cpu_name</name></expr></argument>, <argument pos:start="293:56" pos:end="293:63"><expr pos:start="293:56" pos:end="293:63"><literal type="string" pos:start="293:56" pos:end="293:63">"status"</literal></expr></argument>, <argument pos:start="293:66" pos:end="293:71"><expr pos:start="293:66" pos:end="293:71"><literal type="string" pos:start="293:66" pos:end="293:71">"okay"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="301:5" pos:end="301:46"><expr pos:start="301:5" pos:end="301:45"><call pos:start="301:5" pos:end="301:45"><name pos:start="301:5" pos:end="301:28">qemu_devtree_add_subnode</name><argument_list pos:start="301:29" pos:end="301:45">(<argument pos:start="301:30" pos:end="301:32"><expr pos:start="301:30" pos:end="301:32"><name pos:start="301:30" pos:end="301:32">fdt</name></expr></argument>, <argument pos:start="301:35" pos:end="301:44"><expr pos:start="301:35" pos:end="301:44"><literal type="string" pos:start="301:35" pos:end="301:44">"/aliases"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="303:5" pos:end="303:65">/* XXX These should go into their respective devices' code */</comment>

    <expr_stmt pos:start="305:5" pos:end="305:66"><expr pos:start="305:5" pos:end="305:65"><call pos:start="305:5" pos:end="305:65"><name pos:start="305:5" pos:end="305:12">snprintf</name><argument_list pos:start="305:13" pos:end="305:65">(<argument pos:start="305:14" pos:end="305:16"><expr pos:start="305:14" pos:end="305:16"><name pos:start="305:14" pos:end="305:16">soc</name></expr></argument>, <argument pos:start="305:19" pos:end="305:29"><expr pos:start="305:19" pos:end="305:29"><sizeof pos:start="305:19" pos:end="305:29">sizeof<argument_list pos:start="305:25" pos:end="305:29">(<argument pos:start="305:26" pos:end="305:28"><expr pos:start="305:26" pos:end="305:28"><name pos:start="305:26" pos:end="305:28">soc</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="305:32" pos:end="305:42"><expr pos:start="305:32" pos:end="305:42"><literal type="string" pos:start="305:32" pos:end="305:42">"/soc@%llx"</literal></expr></argument>, <argument pos:start="305:45" pos:end="305:64"><expr pos:start="305:45" pos:end="305:64"><name pos:start="305:45" pos:end="305:64">MPC8544_CCSRBAR_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:39"><expr pos:start="307:5" pos:end="307:38"><call pos:start="307:5" pos:end="307:38"><name pos:start="307:5" pos:end="307:28">qemu_devtree_add_subnode</name><argument_list pos:start="307:29" pos:end="307:38">(<argument pos:start="307:30" pos:end="307:32"><expr pos:start="307:30" pos:end="307:32"><name pos:start="307:30" pos:end="307:32">fdt</name></expr></argument>, <argument pos:start="307:35" pos:end="307:37"><expr pos:start="307:35" pos:end="307:37"><name pos:start="307:35" pos:end="307:37">soc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:64"><expr pos:start="309:5" pos:end="309:63"><call pos:start="309:5" pos:end="309:63"><name pos:start="309:5" pos:end="309:31">qemu_devtree_setprop_string</name><argument_list pos:start="309:32" pos:end="309:63">(<argument pos:start="309:33" pos:end="309:35"><expr pos:start="309:33" pos:end="309:35"><name pos:start="309:33" pos:end="309:35">fdt</name></expr></argument>, <argument pos:start="309:38" pos:end="309:40"><expr pos:start="309:38" pos:end="309:40"><name pos:start="309:38" pos:end="309:40">soc</name></expr></argument>, <argument pos:start="309:43" pos:end="309:55"><expr pos:start="309:43" pos:end="309:55"><literal type="string" pos:start="309:43" pos:end="309:55">"device_type"</literal></expr></argument>, <argument pos:start="309:58" pos:end="309:62"><expr pos:start="309:58" pos:end="309:62"><literal type="string" pos:start="309:58" pos:end="309:62">"soc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="311:5" pos:end="313:48"><expr pos:start="311:5" pos:end="313:47"><call pos:start="311:5" pos:end="313:47"><name pos:start="311:5" pos:end="311:24">qemu_devtree_setprop</name><argument_list pos:start="311:25" pos:end="313:47">(<argument pos:start="311:26" pos:end="311:28"><expr pos:start="311:26" pos:end="311:28"><name pos:start="311:26" pos:end="311:28">fdt</name></expr></argument>, <argument pos:start="311:31" pos:end="311:33"><expr pos:start="311:31" pos:end="311:33"><name pos:start="311:31" pos:end="311:33">soc</name></expr></argument>, <argument pos:start="311:36" pos:end="311:47"><expr pos:start="311:36" pos:end="311:47"><literal type="string" pos:start="311:36" pos:end="311:47">"compatible"</literal></expr></argument>, <argument pos:start="311:50" pos:end="311:62"><expr pos:start="311:50" pos:end="311:62"><name pos:start="311:50" pos:end="311:62">compatible_sb</name></expr></argument>,

                         <argument pos:start="313:26" pos:end="313:46"><expr pos:start="313:26" pos:end="313:46"><sizeof pos:start="313:26" pos:end="313:46">sizeof<argument_list pos:start="313:32" pos:end="313:46">(<argument pos:start="313:33" pos:end="313:45"><expr pos:start="313:33" pos:end="313:45"><name pos:start="313:33" pos:end="313:45">compatible_sb</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:61"><expr pos:start="315:5" pos:end="315:60"><call pos:start="315:5" pos:end="315:60"><name pos:start="315:5" pos:end="315:29">qemu_devtree_setprop_cell</name><argument_list pos:start="315:30" pos:end="315:60">(<argument pos:start="315:31" pos:end="315:33"><expr pos:start="315:31" pos:end="315:33"><name pos:start="315:31" pos:end="315:33">fdt</name></expr></argument>, <argument pos:start="315:36" pos:end="315:38"><expr pos:start="315:36" pos:end="315:38"><name pos:start="315:36" pos:end="315:38">soc</name></expr></argument>, <argument pos:start="315:41" pos:end="315:56"><expr pos:start="315:41" pos:end="315:56"><literal type="string" pos:start="315:41" pos:end="315:56">"#address-cells"</literal></expr></argument>, <argument pos:start="315:59" pos:end="315:59"><expr pos:start="315:59" pos:end="315:59"><literal type="number" pos:start="315:59" pos:end="315:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="317:5" pos:end="317:58"><expr pos:start="317:5" pos:end="317:57"><call pos:start="317:5" pos:end="317:57"><name pos:start="317:5" pos:end="317:29">qemu_devtree_setprop_cell</name><argument_list pos:start="317:30" pos:end="317:57">(<argument pos:start="317:31" pos:end="317:33"><expr pos:start="317:31" pos:end="317:33"><name pos:start="317:31" pos:end="317:33">fdt</name></expr></argument>, <argument pos:start="317:36" pos:end="317:38"><expr pos:start="317:36" pos:end="317:38"><name pos:start="317:36" pos:end="317:38">soc</name></expr></argument>, <argument pos:start="317:41" pos:end="317:53"><expr pos:start="317:41" pos:end="317:53"><literal type="string" pos:start="317:41" pos:end="317:53">"#size-cells"</literal></expr></argument>, <argument pos:start="317:56" pos:end="317:56"><expr pos:start="317:56" pos:end="317:56"><literal type="number" pos:start="317:56" pos:end="317:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="319:5" pos:end="323:53"><expr pos:start="319:5" pos:end="323:52"><call pos:start="319:5" pos:end="323:52"><name pos:start="319:5" pos:end="319:30">qemu_devtree_setprop_cells</name><argument_list pos:start="319:31" pos:end="323:52">(<argument pos:start="319:32" pos:end="319:34"><expr pos:start="319:32" pos:end="319:34"><name pos:start="319:32" pos:end="319:34">fdt</name></expr></argument>, <argument pos:start="319:37" pos:end="319:39"><expr pos:start="319:37" pos:end="319:39"><name pos:start="319:37" pos:end="319:39">soc</name></expr></argument>, <argument pos:start="319:42" pos:end="319:49"><expr pos:start="319:42" pos:end="319:49"><literal type="string" pos:start="319:42" pos:end="319:49">"ranges"</literal></expr></argument>, <argument pos:start="319:52" pos:end="319:54"><expr pos:start="319:52" pos:end="319:54"><literal type="number" pos:start="319:52" pos:end="319:54">0x0</literal></expr></argument>,

                               <argument pos:start="321:32" pos:end="321:57"><expr pos:start="321:32" pos:end="321:57"><name pos:start="321:32" pos:end="321:51">MPC8544_CCSRBAR_BASE</name> <operator pos:start="321:53" pos:end="321:54">&gt;&gt;</operator> <literal type="number" pos:start="321:56" pos:end="321:57">32</literal></expr></argument>, <argument pos:start="321:60" pos:end="321:79"><expr pos:start="321:60" pos:end="321:79"><name pos:start="321:60" pos:end="321:79">MPC8544_CCSRBAR_BASE</name></expr></argument>,

                               <argument pos:start="323:32" pos:end="323:51"><expr pos:start="323:32" pos:end="323:51"><name pos:start="323:32" pos:end="323:51">MPC8544_CCSRBAR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="325:5" pos:end="325:47">/* XXX should contain a reasonable value */</comment>

    <expr_stmt pos:start="327:5" pos:end="327:60"><expr pos:start="327:5" pos:end="327:59"><call pos:start="327:5" pos:end="327:59"><name pos:start="327:5" pos:end="327:29">qemu_devtree_setprop_cell</name><argument_list pos:start="327:30" pos:end="327:59">(<argument pos:start="327:31" pos:end="327:33"><expr pos:start="327:31" pos:end="327:33"><name pos:start="327:31" pos:end="327:33">fdt</name></expr></argument>, <argument pos:start="327:36" pos:end="327:38"><expr pos:start="327:36" pos:end="327:38"><name pos:start="327:36" pos:end="327:38">soc</name></expr></argument>, <argument pos:start="327:41" pos:end="327:55"><expr pos:start="327:41" pos:end="327:55"><literal type="string" pos:start="327:41" pos:end="327:55">"bus-frequency"</literal></expr></argument>, <argument pos:start="327:58" pos:end="327:58"><expr pos:start="327:58" pos:end="327:58"><literal type="number" pos:start="327:58" pos:end="327:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="331:5" pos:end="331:79"><expr pos:start="331:5" pos:end="331:78"><call pos:start="331:5" pos:end="331:78"><name pos:start="331:5" pos:end="331:12">snprintf</name><argument_list pos:start="331:13" pos:end="331:78">(<argument pos:start="331:14" pos:end="331:17"><expr pos:start="331:14" pos:end="331:17"><name pos:start="331:14" pos:end="331:17">mpic</name></expr></argument>, <argument pos:start="331:20" pos:end="331:31"><expr pos:start="331:20" pos:end="331:31"><sizeof pos:start="331:20" pos:end="331:31">sizeof<argument_list pos:start="331:26" pos:end="331:31">(<argument pos:start="331:27" pos:end="331:30"><expr pos:start="331:27" pos:end="331:30"><name pos:start="331:27" pos:end="331:30">mpic</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="331:34" pos:end="331:46"><expr pos:start="331:34" pos:end="331:46"><literal type="string" pos:start="331:34" pos:end="331:46">"%s/pic@%llx"</literal></expr></argument>, <argument pos:start="331:49" pos:end="331:51"><expr pos:start="331:49" pos:end="331:51"><name pos:start="331:49" pos:end="331:51">soc</name></expr></argument>, <argument pos:start="331:54" pos:end="331:77"><expr pos:start="331:54" pos:end="331:77"><name pos:start="331:54" pos:end="331:77">MPC8544_MPIC_REGS_OFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="333:40"><expr pos:start="333:5" pos:end="333:39"><call pos:start="333:5" pos:end="333:39"><name pos:start="333:5" pos:end="333:28">qemu_devtree_add_subnode</name><argument_list pos:start="333:29" pos:end="333:39">(<argument pos:start="333:30" pos:end="333:32"><expr pos:start="333:30" pos:end="333:32"><name pos:start="333:30" pos:end="333:32">fdt</name></expr></argument>, <argument pos:start="333:35" pos:end="333:38"><expr pos:start="333:35" pos:end="333:38"><name pos:start="333:35" pos:end="333:38">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:70"><expr pos:start="335:5" pos:end="335:69"><call pos:start="335:5" pos:end="335:69"><name pos:start="335:5" pos:end="335:31">qemu_devtree_setprop_string</name><argument_list pos:start="335:32" pos:end="335:69">(<argument pos:start="335:33" pos:end="335:35"><expr pos:start="335:33" pos:end="335:35"><name pos:start="335:33" pos:end="335:35">fdt</name></expr></argument>, <argument pos:start="335:38" pos:end="335:41"><expr pos:start="335:38" pos:end="335:41"><name pos:start="335:38" pos:end="335:41">mpic</name></expr></argument>, <argument pos:start="335:44" pos:end="335:56"><expr pos:start="335:44" pos:end="335:56"><literal type="string" pos:start="335:44" pos:end="335:56">"device_type"</literal></expr></argument>, <argument pos:start="335:59" pos:end="335:68"><expr pos:start="335:59" pos:end="335:68"><literal type="string" pos:start="335:59" pos:end="335:68">"open-pic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="337:74"><expr pos:start="337:5" pos:end="337:73"><call pos:start="337:5" pos:end="337:73"><name pos:start="337:5" pos:end="337:31">qemu_devtree_setprop_string</name><argument_list pos:start="337:32" pos:end="337:73">(<argument pos:start="337:33" pos:end="337:35"><expr pos:start="337:33" pos:end="337:35"><name pos:start="337:33" pos:end="337:35">fdt</name></expr></argument>, <argument pos:start="337:38" pos:end="337:41"><expr pos:start="337:38" pos:end="337:41"><name pos:start="337:38" pos:end="337:41">mpic</name></expr></argument>, <argument pos:start="337:44" pos:end="337:55"><expr pos:start="337:44" pos:end="337:55"><literal type="string" pos:start="337:44" pos:end="337:55">"compatible"</literal></expr></argument>, <argument pos:start="337:58" pos:end="337:72"><expr pos:start="337:58" pos:end="337:72"><literal type="string" pos:start="337:58" pos:end="337:72">"chrp,open-pic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="341:40"><expr pos:start="339:5" pos:end="341:39"><call pos:start="339:5" pos:end="341:39"><name pos:start="339:5" pos:end="339:30">qemu_devtree_setprop_cells</name><argument_list pos:start="339:31" pos:end="341:39">(<argument pos:start="339:32" pos:end="339:34"><expr pos:start="339:32" pos:end="339:34"><name pos:start="339:32" pos:end="339:34">fdt</name></expr></argument>, <argument pos:start="339:37" pos:end="339:40"><expr pos:start="339:37" pos:end="339:40"><name pos:start="339:37" pos:end="339:40">mpic</name></expr></argument>, <argument pos:start="339:43" pos:end="339:47"><expr pos:start="339:43" pos:end="339:47"><literal type="string" pos:start="339:43" pos:end="339:47">"reg"</literal></expr></argument>, <argument pos:start="339:50" pos:end="339:73"><expr pos:start="339:50" pos:end="339:73"><name pos:start="339:50" pos:end="339:73">MPC8544_MPIC_REGS_OFFSET</name></expr></argument>,

                               <argument pos:start="341:32" pos:end="341:38"><expr pos:start="341:32" pos:end="341:38"><literal type="number" pos:start="341:32" pos:end="341:38">0x40000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="343:5" pos:end="343:62"><expr pos:start="343:5" pos:end="343:61"><call pos:start="343:5" pos:end="343:61"><name pos:start="343:5" pos:end="343:29">qemu_devtree_setprop_cell</name><argument_list pos:start="343:30" pos:end="343:61">(<argument pos:start="343:31" pos:end="343:33"><expr pos:start="343:31" pos:end="343:33"><name pos:start="343:31" pos:end="343:33">fdt</name></expr></argument>, <argument pos:start="343:36" pos:end="343:39"><expr pos:start="343:36" pos:end="343:39"><name pos:start="343:36" pos:end="343:39">mpic</name></expr></argument>, <argument pos:start="343:42" pos:end="343:57"><expr pos:start="343:42" pos:end="343:57"><literal type="string" pos:start="343:42" pos:end="343:57">"#address-cells"</literal></expr></argument>, <argument pos:start="343:60" pos:end="343:60"><expr pos:start="343:60" pos:end="343:60"><literal type="number" pos:start="343:60" pos:end="343:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:64"><expr pos:start="345:5" pos:end="345:63"><call pos:start="345:5" pos:end="345:63"><name pos:start="345:5" pos:end="345:29">qemu_devtree_setprop_cell</name><argument_list pos:start="345:30" pos:end="345:63">(<argument pos:start="345:31" pos:end="345:33"><expr pos:start="345:31" pos:end="345:33"><name pos:start="345:31" pos:end="345:33">fdt</name></expr></argument>, <argument pos:start="345:36" pos:end="345:39"><expr pos:start="345:36" pos:end="345:39"><name pos:start="345:36" pos:end="345:39">mpic</name></expr></argument>, <argument pos:start="345:42" pos:end="345:59"><expr pos:start="345:42" pos:end="345:59"><literal type="string" pos:start="345:42" pos:end="345:59">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="345:62" pos:end="345:62"><expr pos:start="345:62" pos:end="345:62"><literal type="number" pos:start="345:62" pos:end="345:62">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:46"><expr pos:start="347:5" pos:end="347:45"><name pos:start="347:5" pos:end="347:11">mpic_ph</name> <operator pos:start="347:13" pos:end="347:13">=</operator> <call pos:start="347:15" pos:end="347:45"><name pos:start="347:15" pos:end="347:40">qemu_devtree_alloc_phandle</name><argument_list pos:start="347:41" pos:end="347:45">(<argument pos:start="347:42" pos:end="347:44"><expr pos:start="347:42" pos:end="347:44"><name pos:start="347:42" pos:end="347:44">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="349:5" pos:end="349:61"><expr pos:start="349:5" pos:end="349:60"><call pos:start="349:5" pos:end="349:60"><name pos:start="349:5" pos:end="349:29">qemu_devtree_setprop_cell</name><argument_list pos:start="349:30" pos:end="349:60">(<argument pos:start="349:31" pos:end="349:33"><expr pos:start="349:31" pos:end="349:33"><name pos:start="349:31" pos:end="349:33">fdt</name></expr></argument>, <argument pos:start="349:36" pos:end="349:39"><expr pos:start="349:36" pos:end="349:39"><name pos:start="349:36" pos:end="349:39">mpic</name></expr></argument>, <argument pos:start="349:42" pos:end="349:50"><expr pos:start="349:42" pos:end="349:50"><literal type="string" pos:start="349:42" pos:end="349:50">"phandle"</literal></expr></argument>, <argument pos:start="349:53" pos:end="349:59"><expr pos:start="349:53" pos:end="349:59"><name pos:start="349:53" pos:end="349:59">mpic_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="351:5" pos:end="351:67"><expr pos:start="351:5" pos:end="351:66"><call pos:start="351:5" pos:end="351:66"><name pos:start="351:5" pos:end="351:29">qemu_devtree_setprop_cell</name><argument_list pos:start="351:30" pos:end="351:66">(<argument pos:start="351:31" pos:end="351:33"><expr pos:start="351:31" pos:end="351:33"><name pos:start="351:31" pos:end="351:33">fdt</name></expr></argument>, <argument pos:start="351:36" pos:end="351:39"><expr pos:start="351:36" pos:end="351:39"><name pos:start="351:36" pos:end="351:39">mpic</name></expr></argument>, <argument pos:start="351:42" pos:end="351:56"><expr pos:start="351:42" pos:end="351:56"><literal type="string" pos:start="351:42" pos:end="351:56">"linux,phandle"</literal></expr></argument>, <argument pos:start="351:59" pos:end="351:65"><expr pos:start="351:59" pos:end="351:65"><name pos:start="351:59" pos:end="351:65">mpic_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="353:5" pos:end="353:69"><expr pos:start="353:5" pos:end="353:68"><call pos:start="353:5" pos:end="353:68"><name pos:start="353:5" pos:end="353:24">qemu_devtree_setprop</name><argument_list pos:start="353:25" pos:end="353:68">(<argument pos:start="353:26" pos:end="353:28"><expr pos:start="353:26" pos:end="353:28"><name pos:start="353:26" pos:end="353:28">fdt</name></expr></argument>, <argument pos:start="353:31" pos:end="353:34"><expr pos:start="353:31" pos:end="353:34"><name pos:start="353:31" pos:end="353:34">mpic</name></expr></argument>, <argument pos:start="353:37" pos:end="353:58"><expr pos:start="353:37" pos:end="353:58"><literal type="string" pos:start="353:37" pos:end="353:58">"interrupt-controller"</literal></expr></argument>, <argument pos:start="353:61" pos:end="353:64"><expr pos:start="353:61" pos:end="353:64"><name pos:start="353:61" pos:end="353:64">NULL</name></expr></argument>, <argument pos:start="353:67" pos:end="353:67"><expr pos:start="353:67" pos:end="353:67"><literal type="number" pos:start="353:67" pos:end="353:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="357:5" pos:end="365:7">/*

     * We have to generate ser1 first, because Linux takes the first

     * device it finds in the dt as serial output device. And we generate

     * devices in reverse order to the dt.

     */</comment>

    <expr_stmt pos:start="367:5" pos:end="369:53"><expr pos:start="367:5" pos:end="369:52"><call pos:start="367:5" pos:end="369:52"><name pos:start="367:5" pos:end="367:20">dt_serial_create</name><argument_list pos:start="367:21" pos:end="369:52">(<argument pos:start="367:22" pos:end="367:24"><expr pos:start="367:22" pos:end="367:24"><name pos:start="367:22" pos:end="367:24">fdt</name></expr></argument>, <argument pos:start="367:27" pos:end="367:53"><expr pos:start="367:27" pos:end="367:53"><name pos:start="367:27" pos:end="367:53">MPC8544_SERIAL1_REGS_OFFSET</name></expr></argument>,

                     <argument pos:start="369:22" pos:end="369:24"><expr pos:start="369:22" pos:end="369:24"><name pos:start="369:22" pos:end="369:24">soc</name></expr></argument>, <argument pos:start="369:27" pos:end="369:30"><expr pos:start="369:27" pos:end="369:30"><name pos:start="369:27" pos:end="369:30">mpic</name></expr></argument>, <argument pos:start="369:33" pos:end="369:41"><expr pos:start="369:33" pos:end="369:41"><literal type="string" pos:start="369:33" pos:end="369:41">"serial1"</literal></expr></argument>, <argument pos:start="369:44" pos:end="369:44"><expr pos:start="369:44" pos:end="369:44"><literal type="number" pos:start="369:44" pos:end="369:44">1</literal></expr></argument>, <argument pos:start="369:47" pos:end="369:51"><expr pos:start="369:47" pos:end="369:51"><name pos:start="369:47" pos:end="369:51">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="371:5" pos:end="373:52"><expr pos:start="371:5" pos:end="373:51"><call pos:start="371:5" pos:end="373:51"><name pos:start="371:5" pos:end="371:20">dt_serial_create</name><argument_list pos:start="371:21" pos:end="373:51">(<argument pos:start="371:22" pos:end="371:24"><expr pos:start="371:22" pos:end="371:24"><name pos:start="371:22" pos:end="371:24">fdt</name></expr></argument>, <argument pos:start="371:27" pos:end="371:53"><expr pos:start="371:27" pos:end="371:53"><name pos:start="371:27" pos:end="371:53">MPC8544_SERIAL0_REGS_OFFSET</name></expr></argument>,

                     <argument pos:start="373:22" pos:end="373:24"><expr pos:start="373:22" pos:end="373:24"><name pos:start="373:22" pos:end="373:24">soc</name></expr></argument>, <argument pos:start="373:27" pos:end="373:30"><expr pos:start="373:27" pos:end="373:30"><name pos:start="373:27" pos:end="373:30">mpic</name></expr></argument>, <argument pos:start="373:33" pos:end="373:41"><expr pos:start="373:33" pos:end="373:41"><literal type="string" pos:start="373:33" pos:end="373:41">"serial0"</literal></expr></argument>, <argument pos:start="373:44" pos:end="373:44"><expr pos:start="373:44" pos:end="373:44"><literal type="number" pos:start="373:44" pos:end="373:44">0</literal></expr></argument>, <argument pos:start="373:47" pos:end="373:50"><expr pos:start="373:47" pos:end="373:50"><name pos:start="373:47" pos:end="373:50">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="377:5" pos:end="379:34"><expr pos:start="377:5" pos:end="379:33"><call pos:start="377:5" pos:end="379:33"><name pos:start="377:5" pos:end="377:12">snprintf</name><argument_list pos:start="377:13" pos:end="379:33">(<argument pos:start="377:14" pos:end="377:18"><expr pos:start="377:14" pos:end="377:18"><name pos:start="377:14" pos:end="377:18">gutil</name></expr></argument>, <argument pos:start="377:21" pos:end="377:33"><expr pos:start="377:21" pos:end="377:33"><sizeof pos:start="377:21" pos:end="377:33">sizeof<argument_list pos:start="377:27" pos:end="377:33">(<argument pos:start="377:28" pos:end="377:32"><expr pos:start="377:28" pos:end="377:32"><name pos:start="377:28" pos:end="377:32">gutil</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="377:36" pos:end="377:61"><expr pos:start="377:36" pos:end="377:61"><literal type="string" pos:start="377:36" pos:end="377:61">"%s/global-utilities@%llx"</literal></expr></argument>, <argument pos:start="377:64" pos:end="377:66"><expr pos:start="377:64" pos:end="377:66"><name pos:start="377:64" pos:end="377:66">soc</name></expr></argument>,

             <argument pos:start="379:14" pos:end="379:32"><expr pos:start="379:14" pos:end="379:32"><name pos:start="379:14" pos:end="379:32">MPC8544_UTIL_OFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="381:5" pos:end="381:41"><expr pos:start="381:5" pos:end="381:40"><call pos:start="381:5" pos:end="381:40"><name pos:start="381:5" pos:end="381:28">qemu_devtree_add_subnode</name><argument_list pos:start="381:29" pos:end="381:40">(<argument pos:start="381:30" pos:end="381:32"><expr pos:start="381:30" pos:end="381:32"><name pos:start="381:30" pos:end="381:32">fdt</name></expr></argument>, <argument pos:start="381:35" pos:end="381:39"><expr pos:start="381:35" pos:end="381:39"><name pos:start="381:35" pos:end="381:39">gutil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="383:5" pos:end="383:78"><expr pos:start="383:5" pos:end="383:77"><call pos:start="383:5" pos:end="383:77"><name pos:start="383:5" pos:end="383:31">qemu_devtree_setprop_string</name><argument_list pos:start="383:32" pos:end="383:77">(<argument pos:start="383:33" pos:end="383:35"><expr pos:start="383:33" pos:end="383:35"><name pos:start="383:33" pos:end="383:35">fdt</name></expr></argument>, <argument pos:start="383:38" pos:end="383:42"><expr pos:start="383:38" pos:end="383:42"><name pos:start="383:38" pos:end="383:42">gutil</name></expr></argument>, <argument pos:start="383:45" pos:end="383:56"><expr pos:start="383:45" pos:end="383:56"><literal type="string" pos:start="383:45" pos:end="383:56">"compatible"</literal></expr></argument>, <argument pos:start="383:59" pos:end="383:76"><expr pos:start="383:59" pos:end="383:76"><literal type="string" pos:start="383:59" pos:end="383:76">"fsl,mpc8544-guts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="385:5" pos:end="385:79"><expr pos:start="385:5" pos:end="385:78"><call pos:start="385:5" pos:end="385:78"><name pos:start="385:5" pos:end="385:30">qemu_devtree_setprop_cells</name><argument_list pos:start="385:31" pos:end="385:78">(<argument pos:start="385:32" pos:end="385:34"><expr pos:start="385:32" pos:end="385:34"><name pos:start="385:32" pos:end="385:34">fdt</name></expr></argument>, <argument pos:start="385:37" pos:end="385:41"><expr pos:start="385:37" pos:end="385:41"><name pos:start="385:37" pos:end="385:41">gutil</name></expr></argument>, <argument pos:start="385:44" pos:end="385:48"><expr pos:start="385:44" pos:end="385:48"><literal type="string" pos:start="385:44" pos:end="385:48">"reg"</literal></expr></argument>, <argument pos:start="385:51" pos:end="385:69"><expr pos:start="385:51" pos:end="385:69"><name pos:start="385:51" pos:end="385:69">MPC8544_UTIL_OFFSET</name></expr></argument>, <argument pos:start="385:72" pos:end="385:77"><expr pos:start="385:72" pos:end="385:77"><literal type="number" pos:start="385:72" pos:end="385:77">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="387:5" pos:end="387:63"><expr pos:start="387:5" pos:end="387:62"><call pos:start="387:5" pos:end="387:62"><name pos:start="387:5" pos:end="387:24">qemu_devtree_setprop</name><argument_list pos:start="387:25" pos:end="387:62">(<argument pos:start="387:26" pos:end="387:28"><expr pos:start="387:26" pos:end="387:28"><name pos:start="387:26" pos:end="387:28">fdt</name></expr></argument>, <argument pos:start="387:31" pos:end="387:35"><expr pos:start="387:31" pos:end="387:35"><name pos:start="387:31" pos:end="387:35">gutil</name></expr></argument>, <argument pos:start="387:38" pos:end="387:52"><expr pos:start="387:38" pos:end="387:52"><literal type="string" pos:start="387:38" pos:end="387:52">"fsl,has-rstcr"</literal></expr></argument>, <argument pos:start="387:55" pos:end="387:58"><expr pos:start="387:55" pos:end="387:58"><name pos:start="387:55" pos:end="387:58">NULL</name></expr></argument>, <argument pos:start="387:61" pos:end="387:61"><expr pos:start="387:61" pos:end="387:61"><literal type="number" pos:start="387:61" pos:end="387:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="391:5" pos:end="391:77"><expr pos:start="391:5" pos:end="391:76"><call pos:start="391:5" pos:end="391:76"><name pos:start="391:5" pos:end="391:12">snprintf</name><argument_list pos:start="391:13" pos:end="391:76">(<argument pos:start="391:14" pos:end="391:16"><expr pos:start="391:14" pos:end="391:16"><name pos:start="391:14" pos:end="391:16">msi</name></expr></argument>, <argument pos:start="391:19" pos:end="391:29"><expr pos:start="391:19" pos:end="391:29"><sizeof pos:start="391:19" pos:end="391:29">sizeof<argument_list pos:start="391:25" pos:end="391:29">(<argument pos:start="391:26" pos:end="391:28"><expr pos:start="391:26" pos:end="391:28"><name pos:start="391:26" pos:end="391:28">msi</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="391:32" pos:end="391:45"><expr pos:start="391:32" pos:end="391:45"><literal type="string" pos:start="391:32" pos:end="391:45">"/%s/msi@%llx"</literal></expr></argument>, <argument pos:start="391:48" pos:end="391:50"><expr pos:start="391:48" pos:end="391:50"><name pos:start="391:48" pos:end="391:50">soc</name></expr></argument>, <argument pos:start="391:53" pos:end="391:75"><expr pos:start="391:53" pos:end="391:75"><name pos:start="391:53" pos:end="391:75">MPC8544_MSI_REGS_OFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="393:5" pos:end="393:39"><expr pos:start="393:5" pos:end="393:38"><call pos:start="393:5" pos:end="393:38"><name pos:start="393:5" pos:end="393:28">qemu_devtree_add_subnode</name><argument_list pos:start="393:29" pos:end="393:38">(<argument pos:start="393:30" pos:end="393:32"><expr pos:start="393:30" pos:end="393:32"><name pos:start="393:30" pos:end="393:32">fdt</name></expr></argument>, <argument pos:start="393:35" pos:end="393:37"><expr pos:start="393:35" pos:end="393:37"><name pos:start="393:35" pos:end="393:37">msi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="395:5" pos:end="395:72"><expr pos:start="395:5" pos:end="395:71"><call pos:start="395:5" pos:end="395:71"><name pos:start="395:5" pos:end="395:31">qemu_devtree_setprop_string</name><argument_list pos:start="395:32" pos:end="395:71">(<argument pos:start="395:33" pos:end="395:35"><expr pos:start="395:33" pos:end="395:35"><name pos:start="395:33" pos:end="395:35">fdt</name></expr></argument>, <argument pos:start="395:38" pos:end="395:40"><expr pos:start="395:38" pos:end="395:40"><name pos:start="395:38" pos:end="395:40">msi</name></expr></argument>, <argument pos:start="395:43" pos:end="395:54"><expr pos:start="395:43" pos:end="395:54"><literal type="string" pos:start="395:43" pos:end="395:54">"compatible"</literal></expr></argument>, <argument pos:start="395:57" pos:end="395:70"><expr pos:start="395:57" pos:end="395:70"><literal type="string" pos:start="395:57" pos:end="395:70">"fsl,mpic-msi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="397:5" pos:end="397:80"><expr pos:start="397:5" pos:end="397:79"><call pos:start="397:5" pos:end="397:79"><name pos:start="397:5" pos:end="397:30">qemu_devtree_setprop_cells</name><argument_list pos:start="397:31" pos:end="397:79">(<argument pos:start="397:32" pos:end="397:34"><expr pos:start="397:32" pos:end="397:34"><name pos:start="397:32" pos:end="397:34">fdt</name></expr></argument>, <argument pos:start="397:37" pos:end="397:39"><expr pos:start="397:37" pos:end="397:39"><name pos:start="397:37" pos:end="397:39">msi</name></expr></argument>, <argument pos:start="397:42" pos:end="397:46"><expr pos:start="397:42" pos:end="397:46"><literal type="string" pos:start="397:42" pos:end="397:46">"reg"</literal></expr></argument>, <argument pos:start="397:49" pos:end="397:71"><expr pos:start="397:49" pos:end="397:71"><name pos:start="397:49" pos:end="397:71">MPC8544_MSI_REGS_OFFSET</name></expr></argument>, <argument pos:start="397:74" pos:end="397:78"><expr pos:start="397:74" pos:end="397:78"><literal type="number" pos:start="397:74" pos:end="397:78">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="399:5" pos:end="399:45"><expr pos:start="399:5" pos:end="399:44"><name pos:start="399:5" pos:end="399:10">msi_ph</name> <operator pos:start="399:12" pos:end="399:12">=</operator> <call pos:start="399:14" pos:end="399:44"><name pos:start="399:14" pos:end="399:39">qemu_devtree_alloc_phandle</name><argument_list pos:start="399:40" pos:end="399:44">(<argument pos:start="399:41" pos:end="399:43"><expr pos:start="399:41" pos:end="399:43"><name pos:start="399:41" pos:end="399:43">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="401:5" pos:end="401:77"><expr pos:start="401:5" pos:end="401:76"><call pos:start="401:5" pos:end="401:76"><name pos:start="401:5" pos:end="401:30">qemu_devtree_setprop_cells</name><argument_list pos:start="401:31" pos:end="401:76">(<argument pos:start="401:32" pos:end="401:34"><expr pos:start="401:32" pos:end="401:34"><name pos:start="401:32" pos:end="401:34">fdt</name></expr></argument>, <argument pos:start="401:37" pos:end="401:39"><expr pos:start="401:37" pos:end="401:39"><name pos:start="401:37" pos:end="401:39">msi</name></expr></argument>, <argument pos:start="401:42" pos:end="401:63"><expr pos:start="401:42" pos:end="401:63"><literal type="string" pos:start="401:42" pos:end="401:63">"msi-available-ranges"</literal></expr></argument>, <argument pos:start="401:66" pos:end="401:68"><expr pos:start="401:66" pos:end="401:68"><literal type="number" pos:start="401:66" pos:end="401:68">0x0</literal></expr></argument>, <argument pos:start="401:71" pos:end="401:75"><expr pos:start="401:71" pos:end="401:75"><literal type="number" pos:start="401:71" pos:end="401:75">0x100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="403:5" pos:end="403:69"><expr pos:start="403:5" pos:end="403:68"><call pos:start="403:5" pos:end="403:68"><name pos:start="403:5" pos:end="403:32">qemu_devtree_setprop_phandle</name><argument_list pos:start="403:33" pos:end="403:68">(<argument pos:start="403:34" pos:end="403:36"><expr pos:start="403:34" pos:end="403:36"><name pos:start="403:34" pos:end="403:36">fdt</name></expr></argument>, <argument pos:start="403:39" pos:end="403:41"><expr pos:start="403:39" pos:end="403:41"><name pos:start="403:39" pos:end="403:41">msi</name></expr></argument>, <argument pos:start="403:44" pos:end="403:61"><expr pos:start="403:44" pos:end="403:61"><literal type="string" pos:start="403:44" pos:end="403:61">"interrupt-parent"</literal></expr></argument>, <argument pos:start="403:64" pos:end="403:67"><expr pos:start="403:64" pos:end="403:67"><name pos:start="403:64" pos:end="403:67">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="405:5" pos:end="421:19"><expr pos:start="405:5" pos:end="421:18"><call pos:start="405:5" pos:end="421:18"><name pos:start="405:5" pos:end="405:30">qemu_devtree_setprop_cells</name><argument_list pos:start="405:31" pos:end="421:18">(<argument pos:start="405:32" pos:end="405:34"><expr pos:start="405:32" pos:end="405:34"><name pos:start="405:32" pos:end="405:34">fdt</name></expr></argument>, <argument pos:start="405:37" pos:end="405:39"><expr pos:start="405:37" pos:end="405:39"><name pos:start="405:37" pos:end="405:39">msi</name></expr></argument>, <argument pos:start="405:42" pos:end="405:53"><expr pos:start="405:42" pos:end="405:53"><literal type="string" pos:start="405:42" pos:end="405:53">"interrupts"</literal></expr></argument>,

        <argument pos:start="407:9" pos:end="407:12"><expr pos:start="407:9" pos:end="407:12"><literal type="number" pos:start="407:9" pos:end="407:12">0xe0</literal></expr></argument>, <argument pos:start="407:15" pos:end="407:17"><expr pos:start="407:15" pos:end="407:17"><literal type="number" pos:start="407:15" pos:end="407:17">0x0</literal></expr></argument>,

        <argument pos:start="409:9" pos:end="409:12"><expr pos:start="409:9" pos:end="409:12"><literal type="number" pos:start="409:9" pos:end="409:12">0xe1</literal></expr></argument>, <argument pos:start="409:15" pos:end="409:17"><expr pos:start="409:15" pos:end="409:17"><literal type="number" pos:start="409:15" pos:end="409:17">0x0</literal></expr></argument>,

        <argument pos:start="411:9" pos:end="411:12"><expr pos:start="411:9" pos:end="411:12"><literal type="number" pos:start="411:9" pos:end="411:12">0xe2</literal></expr></argument>, <argument pos:start="411:15" pos:end="411:17"><expr pos:start="411:15" pos:end="411:17"><literal type="number" pos:start="411:15" pos:end="411:17">0x0</literal></expr></argument>,

        <argument pos:start="413:9" pos:end="413:12"><expr pos:start="413:9" pos:end="413:12"><literal type="number" pos:start="413:9" pos:end="413:12">0xe3</literal></expr></argument>, <argument pos:start="413:15" pos:end="413:17"><expr pos:start="413:15" pos:end="413:17"><literal type="number" pos:start="413:15" pos:end="413:17">0x0</literal></expr></argument>,

        <argument pos:start="415:9" pos:end="415:12"><expr pos:start="415:9" pos:end="415:12"><literal type="number" pos:start="415:9" pos:end="415:12">0xe4</literal></expr></argument>, <argument pos:start="415:15" pos:end="415:17"><expr pos:start="415:15" pos:end="415:17"><literal type="number" pos:start="415:15" pos:end="415:17">0x0</literal></expr></argument>,

        <argument pos:start="417:9" pos:end="417:12"><expr pos:start="417:9" pos:end="417:12"><literal type="number" pos:start="417:9" pos:end="417:12">0xe5</literal></expr></argument>, <argument pos:start="417:15" pos:end="417:17"><expr pos:start="417:15" pos:end="417:17"><literal type="number" pos:start="417:15" pos:end="417:17">0x0</literal></expr></argument>,

        <argument pos:start="419:9" pos:end="419:12"><expr pos:start="419:9" pos:end="419:12"><literal type="number" pos:start="419:9" pos:end="419:12">0xe6</literal></expr></argument>, <argument pos:start="419:15" pos:end="419:17"><expr pos:start="419:15" pos:end="419:17"><literal type="number" pos:start="419:15" pos:end="419:17">0x0</literal></expr></argument>,

        <argument pos:start="421:9" pos:end="421:12"><expr pos:start="421:9" pos:end="421:12"><literal type="number" pos:start="421:9" pos:end="421:12">0xe7</literal></expr></argument>, <argument pos:start="421:15" pos:end="421:17"><expr pos:start="421:15" pos:end="421:17"><literal type="number" pos:start="421:15" pos:end="421:17">0x0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="423:5" pos:end="423:59"><expr pos:start="423:5" pos:end="423:58"><call pos:start="423:5" pos:end="423:58"><name pos:start="423:5" pos:end="423:29">qemu_devtree_setprop_cell</name><argument_list pos:start="423:30" pos:end="423:58">(<argument pos:start="423:31" pos:end="423:33"><expr pos:start="423:31" pos:end="423:33"><name pos:start="423:31" pos:end="423:33">fdt</name></expr></argument>, <argument pos:start="423:36" pos:end="423:38"><expr pos:start="423:36" pos:end="423:38"><name pos:start="423:36" pos:end="423:38">msi</name></expr></argument>, <argument pos:start="423:41" pos:end="423:49"><expr pos:start="423:41" pos:end="423:49"><literal type="string" pos:start="423:41" pos:end="423:49">"phandle"</literal></expr></argument>, <argument pos:start="423:52" pos:end="423:57"><expr pos:start="423:52" pos:end="423:57"><name pos:start="423:52" pos:end="423:57">msi_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="425:5" pos:end="425:65"><expr pos:start="425:5" pos:end="425:64"><call pos:start="425:5" pos:end="425:64"><name pos:start="425:5" pos:end="425:29">qemu_devtree_setprop_cell</name><argument_list pos:start="425:30" pos:end="425:64">(<argument pos:start="425:31" pos:end="425:33"><expr pos:start="425:31" pos:end="425:33"><name pos:start="425:31" pos:end="425:33">fdt</name></expr></argument>, <argument pos:start="425:36" pos:end="425:38"><expr pos:start="425:36" pos:end="425:38"><name pos:start="425:36" pos:end="425:38">msi</name></expr></argument>, <argument pos:start="425:41" pos:end="425:55"><expr pos:start="425:41" pos:end="425:55"><literal type="string" pos:start="425:41" pos:end="425:55">"linux,phandle"</literal></expr></argument>, <argument pos:start="425:58" pos:end="425:63"><expr pos:start="425:58" pos:end="425:63"><name pos:start="425:58" pos:end="425:63">msi_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="429:5" pos:end="429:67"><expr pos:start="429:5" pos:end="429:66"><call pos:start="429:5" pos:end="429:66"><name pos:start="429:5" pos:end="429:12">snprintf</name><argument_list pos:start="429:13" pos:end="429:66">(<argument pos:start="429:14" pos:end="429:16"><expr pos:start="429:14" pos:end="429:16"><name pos:start="429:14" pos:end="429:16">pci</name></expr></argument>, <argument pos:start="429:19" pos:end="429:29"><expr pos:start="429:19" pos:end="429:29"><sizeof pos:start="429:19" pos:end="429:29">sizeof<argument_list pos:start="429:25" pos:end="429:29">(<argument pos:start="429:26" pos:end="429:28"><expr pos:start="429:26" pos:end="429:28"><name pos:start="429:26" pos:end="429:28">pci</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="429:32" pos:end="429:42"><expr pos:start="429:32" pos:end="429:42"><literal type="string" pos:start="429:32" pos:end="429:42">"/pci@%llx"</literal></expr></argument>, <argument pos:start="429:45" pos:end="429:65"><expr pos:start="429:45" pos:end="429:65"><name pos:start="429:45" pos:end="429:65">MPC8544_PCI_REGS_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="431:5" pos:end="431:39"><expr pos:start="431:5" pos:end="431:38"><call pos:start="431:5" pos:end="431:38"><name pos:start="431:5" pos:end="431:28">qemu_devtree_add_subnode</name><argument_list pos:start="431:29" pos:end="431:38">(<argument pos:start="431:30" pos:end="431:32"><expr pos:start="431:30" pos:end="431:32"><name pos:start="431:30" pos:end="431:32">fdt</name></expr></argument>, <argument pos:start="431:35" pos:end="431:37"><expr pos:start="431:35" pos:end="431:37"><name pos:start="431:35" pos:end="431:37">pci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="433:5" pos:end="433:57"><expr pos:start="433:5" pos:end="433:56"><call pos:start="433:5" pos:end="433:56"><name pos:start="433:5" pos:end="433:29">qemu_devtree_setprop_cell</name><argument_list pos:start="433:30" pos:end="433:56">(<argument pos:start="433:31" pos:end="433:33"><expr pos:start="433:31" pos:end="433:33"><name pos:start="433:31" pos:end="433:33">fdt</name></expr></argument>, <argument pos:start="433:36" pos:end="433:38"><expr pos:start="433:36" pos:end="433:38"><name pos:start="433:36" pos:end="433:38">pci</name></expr></argument>, <argument pos:start="433:41" pos:end="433:52"><expr pos:start="433:41" pos:end="433:52"><literal type="string" pos:start="433:41" pos:end="433:52">"cell-index"</literal></expr></argument>, <argument pos:start="433:55" pos:end="433:55"><expr pos:start="433:55" pos:end="433:55"><literal type="number" pos:start="433:55" pos:end="433:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="435:5" pos:end="435:75"><expr pos:start="435:5" pos:end="435:74"><call pos:start="435:5" pos:end="435:74"><name pos:start="435:5" pos:end="435:31">qemu_devtree_setprop_string</name><argument_list pos:start="435:32" pos:end="435:74">(<argument pos:start="435:33" pos:end="435:35"><expr pos:start="435:33" pos:end="435:35"><name pos:start="435:33" pos:end="435:35">fdt</name></expr></argument>, <argument pos:start="435:38" pos:end="435:40"><expr pos:start="435:38" pos:end="435:40"><name pos:start="435:38" pos:end="435:40">pci</name></expr></argument>, <argument pos:start="435:43" pos:end="435:54"><expr pos:start="435:43" pos:end="435:54"><literal type="string" pos:start="435:43" pos:end="435:54">"compatible"</literal></expr></argument>, <argument pos:start="435:57" pos:end="435:73"><expr pos:start="435:57" pos:end="435:73"><literal type="string" pos:start="435:57" pos:end="435:73">"fsl,mpc8540-pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="437:5" pos:end="437:64"><expr pos:start="437:5" pos:end="437:63"><call pos:start="437:5" pos:end="437:63"><name pos:start="437:5" pos:end="437:31">qemu_devtree_setprop_string</name><argument_list pos:start="437:32" pos:end="437:63">(<argument pos:start="437:33" pos:end="437:35"><expr pos:start="437:33" pos:end="437:35"><name pos:start="437:33" pos:end="437:35">fdt</name></expr></argument>, <argument pos:start="437:38" pos:end="437:40"><expr pos:start="437:38" pos:end="437:40"><name pos:start="437:38" pos:end="437:40">pci</name></expr></argument>, <argument pos:start="437:43" pos:end="437:55"><expr pos:start="437:43" pos:end="437:55"><literal type="string" pos:start="437:43" pos:end="437:55">"device_type"</literal></expr></argument>, <argument pos:start="437:58" pos:end="437:62"><expr pos:start="437:58" pos:end="437:62"><literal type="string" pos:start="437:58" pos:end="437:62">"pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="439:5" pos:end="441:41"><expr pos:start="439:5" pos:end="441:40"><call pos:start="439:5" pos:end="441:40"><name pos:start="439:5" pos:end="439:30">qemu_devtree_setprop_cells</name><argument_list pos:start="439:31" pos:end="441:40">(<argument pos:start="439:32" pos:end="439:34"><expr pos:start="439:32" pos:end="439:34"><name pos:start="439:32" pos:end="439:34">fdt</name></expr></argument>, <argument pos:start="439:37" pos:end="439:39"><expr pos:start="439:37" pos:end="439:39"><name pos:start="439:37" pos:end="439:39">pci</name></expr></argument>, <argument pos:start="439:42" pos:end="439:61"><expr pos:start="439:42" pos:end="439:61"><literal type="string" pos:start="439:42" pos:end="439:61">"interrupt-map-mask"</literal></expr></argument>, <argument pos:start="439:64" pos:end="439:69"><expr pos:start="439:64" pos:end="439:69"><literal type="number" pos:start="439:64" pos:end="439:69">0xf800</literal></expr></argument>, <argument pos:start="439:72" pos:end="439:74"><expr pos:start="439:72" pos:end="439:74"><literal type="number" pos:start="439:72" pos:end="439:74">0x0</literal></expr></argument>,

                               <argument pos:start="441:32" pos:end="441:34"><expr pos:start="441:32" pos:end="441:34"><literal type="number" pos:start="441:32" pos:end="441:34">0x0</literal></expr></argument>, <argument pos:start="441:37" pos:end="441:39"><expr pos:start="441:37" pos:end="441:39"><literal type="number" pos:start="441:37" pos:end="441:39">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="443:5" pos:end="445:44"><expr pos:start="443:5" pos:end="445:43"><name pos:start="443:5" pos:end="443:11">pci_map</name> <operator pos:start="443:13" pos:end="443:13">=</operator> <call pos:start="443:15" pos:end="445:43"><name pos:start="443:15" pos:end="443:28">pci_map_create</name><argument_list pos:start="443:29" pos:end="445:43">(<argument pos:start="443:30" pos:end="443:32"><expr pos:start="443:30" pos:end="443:32"><name pos:start="443:30" pos:end="443:32">fdt</name></expr></argument>, <argument pos:start="443:35" pos:end="443:69"><expr pos:start="443:35" pos:end="443:69"><call pos:start="443:35" pos:end="443:69"><name pos:start="443:35" pos:end="443:58">qemu_devtree_get_phandle</name><argument_list pos:start="443:59" pos:end="443:69">(<argument pos:start="443:60" pos:end="443:62"><expr pos:start="443:60" pos:end="443:62"><name pos:start="443:60" pos:end="443:62">fdt</name></expr></argument>, <argument pos:start="443:65" pos:end="443:68"><expr pos:start="443:65" pos:end="443:68"><name pos:start="443:65" pos:end="443:68">mpic</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="445:30" pos:end="445:33"><expr pos:start="445:30" pos:end="445:33"><literal type="number" pos:start="445:30" pos:end="445:33">0x11</literal></expr></argument>, <argument pos:start="445:36" pos:end="445:36"><expr pos:start="445:36" pos:end="445:36"><literal type="number" pos:start="445:36" pos:end="445:36">2</literal></expr></argument>, <argument pos:start="445:39" pos:end="445:42"><expr pos:start="445:39" pos:end="445:42"><operator pos:start="445:39" pos:end="445:39">&amp;</operator><name pos:start="445:40" pos:end="445:42">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="447:5" pos:end="447:66"><expr pos:start="447:5" pos:end="447:65"><call pos:start="447:5" pos:end="447:65"><name pos:start="447:5" pos:end="447:24">qemu_devtree_setprop</name><argument_list pos:start="447:25" pos:end="447:65">(<argument pos:start="447:26" pos:end="447:28"><expr pos:start="447:26" pos:end="447:28"><name pos:start="447:26" pos:end="447:28">fdt</name></expr></argument>, <argument pos:start="447:31" pos:end="447:33"><expr pos:start="447:31" pos:end="447:33"><name pos:start="447:31" pos:end="447:33">pci</name></expr></argument>, <argument pos:start="447:36" pos:end="447:50"><expr pos:start="447:36" pos:end="447:50"><literal type="string" pos:start="447:36" pos:end="447:50">"interrupt-map"</literal></expr></argument>, <argument pos:start="447:53" pos:end="447:59"><expr pos:start="447:53" pos:end="447:59"><name pos:start="447:53" pos:end="447:59">pci_map</name></expr></argument>, <argument pos:start="447:62" pos:end="447:64"><expr pos:start="447:62" pos:end="447:64"><name pos:start="447:62" pos:end="447:64">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="449:5" pos:end="449:69"><expr pos:start="449:5" pos:end="449:68"><call pos:start="449:5" pos:end="449:68"><name pos:start="449:5" pos:end="449:32">qemu_devtree_setprop_phandle</name><argument_list pos:start="449:33" pos:end="449:68">(<argument pos:start="449:34" pos:end="449:36"><expr pos:start="449:34" pos:end="449:36"><name pos:start="449:34" pos:end="449:36">fdt</name></expr></argument>, <argument pos:start="449:39" pos:end="449:41"><expr pos:start="449:39" pos:end="449:41"><name pos:start="449:39" pos:end="449:41">pci</name></expr></argument>, <argument pos:start="449:44" pos:end="449:61"><expr pos:start="449:44" pos:end="449:61"><literal type="string" pos:start="449:44" pos:end="449:61">"interrupt-parent"</literal></expr></argument>, <argument pos:start="449:64" pos:end="449:67"><expr pos:start="449:64" pos:end="449:67"><name pos:start="449:64" pos:end="449:67">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="451:5" pos:end="451:62"><expr pos:start="451:5" pos:end="451:61"><call pos:start="451:5" pos:end="451:61"><name pos:start="451:5" pos:end="451:30">qemu_devtree_setprop_cells</name><argument_list pos:start="451:31" pos:end="451:61">(<argument pos:start="451:32" pos:end="451:34"><expr pos:start="451:32" pos:end="451:34"><name pos:start="451:32" pos:end="451:34">fdt</name></expr></argument>, <argument pos:start="451:37" pos:end="451:39"><expr pos:start="451:37" pos:end="451:39"><name pos:start="451:37" pos:end="451:39">pci</name></expr></argument>, <argument pos:start="451:42" pos:end="451:53"><expr pos:start="451:42" pos:end="451:53"><literal type="string" pos:start="451:42" pos:end="451:53">"interrupts"</literal></expr></argument>, <argument pos:start="451:56" pos:end="451:57"><expr pos:start="451:56" pos:end="451:57"><literal type="number" pos:start="451:56" pos:end="451:57">24</literal></expr></argument>, <argument pos:start="451:60" pos:end="451:60"><expr pos:start="451:60" pos:end="451:60"><literal type="number" pos:start="451:60" pos:end="451:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="453:5" pos:end="453:62"><expr pos:start="453:5" pos:end="453:61"><call pos:start="453:5" pos:end="453:61"><name pos:start="453:5" pos:end="453:30">qemu_devtree_setprop_cells</name><argument_list pos:start="453:31" pos:end="453:61">(<argument pos:start="453:32" pos:end="453:34"><expr pos:start="453:32" pos:end="453:34"><name pos:start="453:32" pos:end="453:34">fdt</name></expr></argument>, <argument pos:start="453:37" pos:end="453:39"><expr pos:start="453:37" pos:end="453:39"><name pos:start="453:37" pos:end="453:39">pci</name></expr></argument>, <argument pos:start="453:42" pos:end="453:52"><expr pos:start="453:42" pos:end="453:52"><literal type="string" pos:start="453:42" pos:end="453:52">"bus-range"</literal></expr></argument>, <argument pos:start="453:55" pos:end="453:55"><expr pos:start="453:55" pos:end="453:55"><literal type="number" pos:start="453:55" pos:end="453:55">0</literal></expr></argument>, <argument pos:start="453:58" pos:end="453:60"><expr pos:start="453:58" pos:end="453:60"><literal type="number" pos:start="453:58" pos:end="453:60">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="455:5" pos:end="459:5">for <control pos:start="455:9" pos:end="455:28">(<init pos:start="455:10" pos:end="455:15"><expr pos:start="455:10" pos:end="455:14"><name pos:start="455:10" pos:end="455:10">i</name> <operator pos:start="455:12" pos:end="455:12">=</operator> <literal type="number" pos:start="455:14" pos:end="455:14">0</literal></expr>;</init> <condition pos:start="455:17" pos:end="455:23"><expr pos:start="455:17" pos:end="455:22"><name pos:start="455:17" pos:end="455:17">i</name> <operator pos:start="455:19" pos:end="455:19">&lt;</operator> <literal type="number" pos:start="455:21" pos:end="455:22">14</literal></expr>;</condition> <incr pos:start="455:25" pos:end="455:27"><expr pos:start="455:25" pos:end="455:27"><name pos:start="455:25" pos:end="455:25">i</name><operator pos:start="455:26" pos:end="455:27">++</operator></expr></incr>)</control> <block pos:start="455:30" pos:end="459:5">{<block_content pos:start="457:9" pos:end="457:51">

        <expr_stmt pos:start="457:9" pos:end="457:51"><expr pos:start="457:9" pos:end="457:50"><name pos:start="457:9" pos:end="457:21"><name pos:start="457:9" pos:end="457:18">pci_ranges</name><index pos:start="457:19" pos:end="457:21">[<expr pos:start="457:20" pos:end="457:20"><name pos:start="457:20" pos:end="457:20">i</name></expr>]</index></name> <operator pos:start="457:23" pos:end="457:23">=</operator> <call pos:start="457:25" pos:end="457:50"><name pos:start="457:25" pos:end="457:35">cpu_to_be32</name><argument_list pos:start="457:36" pos:end="457:50">(<argument pos:start="457:37" pos:end="457:49"><expr pos:start="457:37" pos:end="457:49"><name pos:start="457:37" pos:end="457:49"><name pos:start="457:37" pos:end="457:46">pci_ranges</name><index pos:start="457:47" pos:end="457:49">[<expr pos:start="457:48" pos:end="457:48"><name pos:start="457:48" pos:end="457:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="461:5" pos:end="461:59"><expr pos:start="461:5" pos:end="461:58"><call pos:start="461:5" pos:end="461:58"><name pos:start="461:5" pos:end="461:29">qemu_devtree_setprop_cell</name><argument_list pos:start="461:30" pos:end="461:58">(<argument pos:start="461:31" pos:end="461:33"><expr pos:start="461:31" pos:end="461:33"><name pos:start="461:31" pos:end="461:33">fdt</name></expr></argument>, <argument pos:start="461:36" pos:end="461:38"><expr pos:start="461:36" pos:end="461:38"><name pos:start="461:36" pos:end="461:38">pci</name></expr></argument>, <argument pos:start="461:41" pos:end="461:49"><expr pos:start="461:41" pos:end="461:49"><literal type="string" pos:start="461:41" pos:end="461:49">"fsl,msi"</literal></expr></argument>, <argument pos:start="461:52" pos:end="461:57"><expr pos:start="461:52" pos:end="461:57"><name pos:start="461:52" pos:end="461:57">msi_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="463:5" pos:end="463:77"><expr pos:start="463:5" pos:end="463:76"><call pos:start="463:5" pos:end="463:76"><name pos:start="463:5" pos:end="463:24">qemu_devtree_setprop</name><argument_list pos:start="463:25" pos:end="463:76">(<argument pos:start="463:26" pos:end="463:28"><expr pos:start="463:26" pos:end="463:28"><name pos:start="463:26" pos:end="463:28">fdt</name></expr></argument>, <argument pos:start="463:31" pos:end="463:33"><expr pos:start="463:31" pos:end="463:33"><name pos:start="463:31" pos:end="463:33">pci</name></expr></argument>, <argument pos:start="463:36" pos:end="463:43"><expr pos:start="463:36" pos:end="463:43"><literal type="string" pos:start="463:36" pos:end="463:43">"ranges"</literal></expr></argument>, <argument pos:start="463:46" pos:end="463:55"><expr pos:start="463:46" pos:end="463:55"><name pos:start="463:46" pos:end="463:55">pci_ranges</name></expr></argument>, <argument pos:start="463:58" pos:end="463:75"><expr pos:start="463:58" pos:end="463:75"><sizeof pos:start="463:58" pos:end="463:75">sizeof<argument_list pos:start="463:64" pos:end="463:75">(<argument pos:start="463:65" pos:end="463:74"><expr pos:start="463:65" pos:end="463:74"><name pos:start="463:65" pos:end="463:74">pci_ranges</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="465:5" pos:end="467:65"><expr pos:start="465:5" pos:end="467:64"><call pos:start="465:5" pos:end="467:64"><name pos:start="465:5" pos:end="465:30">qemu_devtree_setprop_cells</name><argument_list pos:start="465:31" pos:end="467:64">(<argument pos:start="465:32" pos:end="465:34"><expr pos:start="465:32" pos:end="465:34"><name pos:start="465:32" pos:end="465:34">fdt</name></expr></argument>, <argument pos:start="465:37" pos:end="465:39"><expr pos:start="465:37" pos:end="465:39"><name pos:start="465:37" pos:end="465:39">pci</name></expr></argument>, <argument pos:start="465:42" pos:end="465:46"><expr pos:start="465:42" pos:end="465:46"><literal type="string" pos:start="465:42" pos:end="465:46">"reg"</literal></expr></argument>, <argument pos:start="465:49" pos:end="465:75"><expr pos:start="465:49" pos:end="465:75"><name pos:start="465:49" pos:end="465:69">MPC8544_PCI_REGS_BASE</name> <operator pos:start="465:71" pos:end="465:72">&gt;&gt;</operator> <literal type="number" pos:start="465:74" pos:end="465:75">32</literal></expr></argument>,

                               <argument pos:start="467:32" pos:end="467:52"><expr pos:start="467:32" pos:end="467:52"><name pos:start="467:32" pos:end="467:52">MPC8544_PCI_REGS_BASE</name></expr></argument>, <argument pos:start="467:55" pos:end="467:55"><expr pos:start="467:55" pos:end="467:55"><literal type="number" pos:start="467:55" pos:end="467:55">0</literal></expr></argument>, <argument pos:start="467:58" pos:end="467:63"><expr pos:start="467:58" pos:end="467:63"><literal type="number" pos:start="467:58" pos:end="467:63">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="469:5" pos:end="469:69"><expr pos:start="469:5" pos:end="469:68"><call pos:start="469:5" pos:end="469:68"><name pos:start="469:5" pos:end="469:29">qemu_devtree_setprop_cell</name><argument_list pos:start="469:30" pos:end="469:68">(<argument pos:start="469:31" pos:end="469:33"><expr pos:start="469:31" pos:end="469:33"><name pos:start="469:31" pos:end="469:33">fdt</name></expr></argument>, <argument pos:start="469:36" pos:end="469:38"><expr pos:start="469:36" pos:end="469:38"><name pos:start="469:36" pos:end="469:38">pci</name></expr></argument>, <argument pos:start="469:41" pos:end="469:57"><expr pos:start="469:41" pos:end="469:57"><literal type="string" pos:start="469:41" pos:end="469:57">"clock-frequency"</literal></expr></argument>, <argument pos:start="469:60" pos:end="469:67"><expr pos:start="469:60" pos:end="469:67"><literal type="number" pos:start="469:60" pos:end="469:67">66666666</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="471:5" pos:end="471:63"><expr pos:start="471:5" pos:end="471:62"><call pos:start="471:5" pos:end="471:62"><name pos:start="471:5" pos:end="471:29">qemu_devtree_setprop_cell</name><argument_list pos:start="471:30" pos:end="471:62">(<argument pos:start="471:31" pos:end="471:33"><expr pos:start="471:31" pos:end="471:33"><name pos:start="471:31" pos:end="471:33">fdt</name></expr></argument>, <argument pos:start="471:36" pos:end="471:38"><expr pos:start="471:36" pos:end="471:38"><name pos:start="471:36" pos:end="471:38">pci</name></expr></argument>, <argument pos:start="471:41" pos:end="471:58"><expr pos:start="471:41" pos:end="471:58"><literal type="string" pos:start="471:41" pos:end="471:58">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="471:61" pos:end="471:61"><expr pos:start="471:61" pos:end="471:61"><literal type="number" pos:start="471:61" pos:end="471:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="473:5" pos:end="473:58"><expr pos:start="473:5" pos:end="473:57"><call pos:start="473:5" pos:end="473:57"><name pos:start="473:5" pos:end="473:29">qemu_devtree_setprop_cell</name><argument_list pos:start="473:30" pos:end="473:57">(<argument pos:start="473:31" pos:end="473:33"><expr pos:start="473:31" pos:end="473:33"><name pos:start="473:31" pos:end="473:33">fdt</name></expr></argument>, <argument pos:start="473:36" pos:end="473:38"><expr pos:start="473:36" pos:end="473:38"><name pos:start="473:36" pos:end="473:38">pci</name></expr></argument>, <argument pos:start="473:41" pos:end="473:53"><expr pos:start="473:41" pos:end="473:53"><literal type="string" pos:start="473:41" pos:end="473:53">"#size-cells"</literal></expr></argument>, <argument pos:start="473:56" pos:end="473:56"><expr pos:start="473:56" pos:end="473:56"><literal type="number" pos:start="473:56" pos:end="473:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="475:5" pos:end="475:61"><expr pos:start="475:5" pos:end="475:60"><call pos:start="475:5" pos:end="475:60"><name pos:start="475:5" pos:end="475:29">qemu_devtree_setprop_cell</name><argument_list pos:start="475:30" pos:end="475:60">(<argument pos:start="475:31" pos:end="475:33"><expr pos:start="475:31" pos:end="475:33"><name pos:start="475:31" pos:end="475:33">fdt</name></expr></argument>, <argument pos:start="475:36" pos:end="475:38"><expr pos:start="475:36" pos:end="475:38"><name pos:start="475:36" pos:end="475:38">pci</name></expr></argument>, <argument pos:start="475:41" pos:end="475:56"><expr pos:start="475:41" pos:end="475:56"><literal type="string" pos:start="475:41" pos:end="475:56">"#address-cells"</literal></expr></argument>, <argument pos:start="475:59" pos:end="475:59"><expr pos:start="475:59" pos:end="475:59"><literal type="number" pos:start="475:59" pos:end="475:59">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="477:5" pos:end="477:62"><expr pos:start="477:5" pos:end="477:61"><call pos:start="477:5" pos:end="477:61"><name pos:start="477:5" pos:end="477:31">qemu_devtree_setprop_string</name><argument_list pos:start="477:32" pos:end="477:61">(<argument pos:start="477:33" pos:end="477:35"><expr pos:start="477:33" pos:end="477:35"><name pos:start="477:33" pos:end="477:35">fdt</name></expr></argument>, <argument pos:start="477:38" pos:end="477:47"><expr pos:start="477:38" pos:end="477:47"><literal type="string" pos:start="477:38" pos:end="477:47">"/aliases"</literal></expr></argument>, <argument pos:start="477:50" pos:end="477:55"><expr pos:start="477:50" pos:end="477:55"><literal type="string" pos:start="477:50" pos:end="477:55">"pci0"</literal></expr></argument>, <argument pos:start="477:58" pos:end="477:60"><expr pos:start="477:58" pos:end="477:60"><name pos:start="477:58" pos:end="477:60">pci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="481:5" pos:end="481:39"><expr pos:start="481:5" pos:end="481:38"><call pos:start="481:5" pos:end="481:38"><name pos:start="481:5" pos:end="481:25"><name pos:start="481:5" pos:end="481:10">params</name><operator pos:start="481:11" pos:end="481:12">-&gt;</operator><name pos:start="481:13" pos:end="481:25">fixup_devtree</name></name><argument_list pos:start="481:26" pos:end="481:38">(<argument pos:start="481:27" pos:end="481:32"><expr pos:start="481:27" pos:end="481:32"><name pos:start="481:27" pos:end="481:32">params</name></expr></argument>, <argument pos:start="481:35" pos:end="481:37"><expr pos:start="481:35" pos:end="481:37"><name pos:start="481:35" pos:end="481:37">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="485:5" pos:end="491:5"><if pos:start="485:5" pos:end="491:5">if <condition pos:start="485:8" pos:end="485:24">(<expr pos:start="485:9" pos:end="485:23"><name pos:start="485:9" pos:end="485:23">toplevel_compat</name></expr>)</condition> <block pos:start="485:26" pos:end="491:5">{<block_content pos:start="487:9" pos:end="489:58">

        <expr_stmt pos:start="487:9" pos:end="489:58"><expr pos:start="487:9" pos:end="489:57"><call pos:start="487:9" pos:end="489:57"><name pos:start="487:9" pos:end="487:28">qemu_devtree_setprop</name><argument_list pos:start="487:29" pos:end="489:57">(<argument pos:start="487:30" pos:end="487:32"><expr pos:start="487:30" pos:end="487:32"><name pos:start="487:30" pos:end="487:32">fdt</name></expr></argument>, <argument pos:start="487:35" pos:end="487:37"><expr pos:start="487:35" pos:end="487:37"><literal type="string" pos:start="487:35" pos:end="487:37">"/"</literal></expr></argument>, <argument pos:start="487:40" pos:end="487:51"><expr pos:start="487:40" pos:end="487:51"><literal type="string" pos:start="487:40" pos:end="487:51">"compatible"</literal></expr></argument>, <argument pos:start="487:54" pos:end="487:68"><expr pos:start="487:54" pos:end="487:68"><name pos:start="487:54" pos:end="487:68">toplevel_compat</name></expr></argument>,

                             <argument pos:start="489:30" pos:end="489:56"><expr pos:start="489:30" pos:end="489:56"><call pos:start="489:30" pos:end="489:52"><name pos:start="489:30" pos:end="489:35">strlen</name><argument_list pos:start="489:36" pos:end="489:52">(<argument pos:start="489:37" pos:end="489:51"><expr pos:start="489:37" pos:end="489:51"><name pos:start="489:37" pos:end="489:51">toplevel_compat</name></expr></argument>)</argument_list></call> <operator pos:start="489:54" pos:end="489:54">+</operator> <literal type="number" pos:start="489:56" pos:end="489:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="495:1" pos:end="495:5"><name pos:start="495:1" pos:end="495:4">done</name>:</label>

    <expr_stmt pos:start="497:5" pos:end="497:40"><expr pos:start="497:5" pos:end="497:39"><call pos:start="497:5" pos:end="497:39"><name pos:start="497:5" pos:end="497:24">qemu_devtree_dumpdtb</name><argument_list pos:start="497:25" pos:end="497:39">(<argument pos:start="497:26" pos:end="497:28"><expr pos:start="497:26" pos:end="497:28"><name pos:start="497:26" pos:end="497:28">fdt</name></expr></argument>, <argument pos:start="497:31" pos:end="497:38"><expr pos:start="497:31" pos:end="497:38"><name pos:start="497:31" pos:end="497:38">fdt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="499:5" pos:end="499:75"><expr pos:start="499:5" pos:end="499:74"><name pos:start="499:5" pos:end="499:7">ret</name> <operator pos:start="499:9" pos:end="499:9">=</operator> <call pos:start="499:11" pos:end="499:74"><name pos:start="499:11" pos:end="499:28">rom_add_blob_fixed</name><argument_list pos:start="499:29" pos:end="499:74">(<argument pos:start="499:30" pos:end="499:52"><expr pos:start="499:30" pos:end="499:52"><name pos:start="499:30" pos:end="499:52">BINARY_DEVICE_TREE_FILE</name></expr></argument>, <argument pos:start="499:55" pos:end="499:57"><expr pos:start="499:55" pos:end="499:57"><name pos:start="499:55" pos:end="499:57">fdt</name></expr></argument>, <argument pos:start="499:60" pos:end="499:67"><expr pos:start="499:60" pos:end="499:67"><name pos:start="499:60" pos:end="499:67">fdt_size</name></expr></argument>, <argument pos:start="499:70" pos:end="499:73"><expr pos:start="499:70" pos:end="499:73"><name pos:start="499:70" pos:end="499:73">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="501:5" pos:end="505:5"><if pos:start="501:5" pos:end="505:5">if <condition pos:start="501:8" pos:end="501:16">(<expr pos:start="501:9" pos:end="501:15"><name pos:start="501:9" pos:end="501:11">ret</name> <operator pos:start="501:13" pos:end="501:13">&lt;</operator> <literal type="number" pos:start="501:15" pos:end="501:15">0</literal></expr>)</condition> <block pos:start="501:18" pos:end="505:5">{<block_content pos:start="503:9" pos:end="503:17">

        <goto pos:start="503:9" pos:end="503:17">goto <name pos:start="503:14" pos:end="503:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="507:5" pos:end="507:16"><expr pos:start="507:5" pos:end="507:15"><call pos:start="507:5" pos:end="507:15"><name pos:start="507:5" pos:end="507:10">g_free</name><argument_list pos:start="507:11" pos:end="507:15">(<argument pos:start="507:12" pos:end="507:14"><expr pos:start="507:12" pos:end="507:14"><name pos:start="507:12" pos:end="507:14">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="509:5" pos:end="509:19"><expr pos:start="509:5" pos:end="509:18"><name pos:start="509:5" pos:end="509:7">ret</name> <operator pos:start="509:9" pos:end="509:9">=</operator> <name pos:start="509:11" pos:end="509:18">fdt_size</name></expr>;</expr_stmt>



<label pos:start="513:1" pos:end="513:4"><name pos:start="513:1" pos:end="513:3">out</name>:</label>

    <expr_stmt pos:start="515:5" pos:end="515:20"><expr pos:start="515:5" pos:end="515:19"><call pos:start="515:5" pos:end="515:19"><name pos:start="515:5" pos:end="515:10">g_free</name><argument_list pos:start="515:11" pos:end="515:19">(<argument pos:start="515:12" pos:end="515:18"><expr pos:start="515:12" pos:end="515:18"><name pos:start="515:12" pos:end="515:18">pci_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="519:5" pos:end="519:15">return <expr pos:start="519:12" pos:end="519:14"><name pos:start="519:12" pos:end="519:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
