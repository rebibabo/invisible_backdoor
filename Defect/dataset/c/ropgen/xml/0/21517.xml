<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21517.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">ObjectClass</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:38">object_class_dynamic_cast</name><parameter_list pos:start="1:39" pos:end="3:60">(<parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:57"><name pos:start="1:40" pos:end="1:50">ObjectClass</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">class</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:59"><decl pos:start="3:40" pos:end="3:59"><type pos:start="3:40" pos:end="3:59"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:49">char</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:59">typename</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:15">

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">TypeImpl</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:25">target_type</name> <init pos:start="7:27" pos:end="7:54">= <expr pos:start="7:29" pos:end="7:54"><call pos:start="7:29" pos:end="7:54"><name pos:start="7:29" pos:end="7:44">type_get_by_name</name><argument_list pos:start="7:45" pos:end="7:54">(<argument pos:start="7:46" pos:end="7:53"><expr pos:start="7:46" pos:end="7:53"><name pos:start="7:46" pos:end="7:53">typename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">TypeImpl</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">type</name> <init pos:start="9:20" pos:end="9:32">= <expr pos:start="9:22" pos:end="9:32"><name pos:start="9:22" pos:end="9:32"><name pos:start="9:22" pos:end="9:26">class</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:32">type</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">ObjectClass</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">ret</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="53:5"><if pos:start="15:5" pos:end="49:5">if <condition pos:start="15:8" pos:end="15:78">(<expr pos:start="15:9" pos:end="15:77"><name pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:12">type</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:28">num_interfaces</name></name> <operator pos:start="15:30" pos:end="15:31">&amp;&amp;</operator> <call pos:start="15:33" pos:end="15:77"><name pos:start="15:33" pos:end="15:48">type_is_ancestor</name><argument_list pos:start="15:49" pos:end="15:77">(<argument pos:start="15:50" pos:end="15:60"><expr pos:start="15:50" pos:end="15:60"><name pos:start="15:50" pos:end="15:60">target_type</name></expr></argument>, <argument pos:start="15:63" pos:end="15:76"><expr pos:start="15:63" pos:end="15:76"><name pos:start="15:63" pos:end="15:76">type_interface</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:80" pos:end="49:5">{<block_content pos:start="17:9" pos:end="47:9">

        <decl_stmt pos:start="17:9" pos:end="17:22"><decl pos:start="17:9" pos:end="17:21"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:17">found</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:18"><decl pos:start="19:9" pos:end="19:17"><type pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:14">GSList</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:17">i</name></decl>;</decl_stmt>



        <for pos:start="23:9" pos:end="37:10">for <control pos:start="23:13" pos:end="23:51">(<init pos:start="23:14" pos:end="23:35"><expr pos:start="23:14" pos:end="23:34"><name pos:start="23:14" pos:end="23:14">i</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:34"><name pos:start="23:18" pos:end="23:22">class</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:34">interfaces</name></name></expr>;</init> <condition pos:start="23:37" pos:end="23:38"><expr pos:start="23:37" pos:end="23:37"><name pos:start="23:37" pos:end="23:37">i</name></expr>;</condition> <incr pos:start="23:40" pos:end="23:50"><expr pos:start="23:40" pos:end="23:50"><name pos:start="23:40" pos:end="23:40">i</name> <operator pos:start="23:42" pos:end="23:42">=</operator> <name pos:start="23:44" pos:end="23:50"><name pos:start="23:44" pos:end="23:44">i</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:50">next</name></name></expr></incr>)</control> <block pos:start="23:53" pos:end="37:10">{<block_content pos:start="25:13" pos:end="35:13">

            <decl_stmt pos:start="25:13" pos:end="25:48"><decl pos:start="25:13" pos:end="25:47"><type pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:23">ObjectClass</name> <modifier pos:start="25:25" pos:end="25:25">*</modifier></type><name pos:start="25:26" pos:end="25:37">target_class</name> <init pos:start="25:39" pos:end="25:47">= <expr pos:start="25:41" pos:end="25:47"><name pos:start="25:41" pos:end="25:47"><name pos:start="25:41" pos:end="25:41">i</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:47">data</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="29:13" pos:end="35:13"><if pos:start="29:13" pos:end="35:13">if <condition pos:start="29:16" pos:end="29:66">(<expr pos:start="29:17" pos:end="29:65"><call pos:start="29:17" pos:end="29:65"><name pos:start="29:17" pos:end="29:32">type_is_ancestor</name><argument_list pos:start="29:33" pos:end="29:65">(<argument pos:start="29:34" pos:end="29:51"><expr pos:start="29:34" pos:end="29:51"><name pos:start="29:34" pos:end="29:51"><name pos:start="29:34" pos:end="29:45">target_class</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:51">type</name></name></expr></argument>, <argument pos:start="29:54" pos:end="29:64"><expr pos:start="29:54" pos:end="29:64"><name pos:start="29:54" pos:end="29:64">target_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:68" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:24">

                <expr_stmt pos:start="31:17" pos:end="31:35"><expr pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:19">ret</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:34">target_class</name></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:24"><expr pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:21">found</name><operator pos:start="33:22" pos:end="33:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

         </block_content>}</block></for>



        <comment type="block" pos:start="41:9" pos:end="41:57">/* The match was ambiguous, don't allow a cast */</comment>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:22">(<expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:17">found</name> <operator pos:start="43:19" pos:end="43:19">&gt;</operator> <literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>)</condition> <block pos:start="43:24" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:23">

            <expr_stmt pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:22">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="53:5">else if <condition pos:start="49:15" pos:end="49:51">(<expr pos:start="49:16" pos:end="49:50"><call pos:start="49:16" pos:end="49:50"><name pos:start="49:16" pos:end="49:31">type_is_ancestor</name><argument_list pos:start="49:32" pos:end="49:50">(<argument pos:start="49:33" pos:end="49:36"><expr pos:start="49:33" pos:end="49:36"><name pos:start="49:33" pos:end="49:36">type</name></expr></argument>, <argument pos:start="49:39" pos:end="49:49"><expr pos:start="49:39" pos:end="49:49"><name pos:start="49:39" pos:end="49:49">target_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:53" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:20">

        <expr_stmt pos:start="51:9" pos:end="51:20"><expr pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:19">class</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="57:5" pos:end="57:15">return <expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
