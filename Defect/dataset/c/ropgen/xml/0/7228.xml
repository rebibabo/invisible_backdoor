<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7228.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">gen_mtpr</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:27"><decl pos:start="1:22" pos:end="1:27"><type pos:start="1:22" pos:end="1:27"><name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:27">rb</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:38"><decl pos:start="1:30" pos:end="1:38"><type pos:start="1:30" pos:end="1:38"><name pos:start="1:30" pos:end="1:32">int</name></type> <name pos:start="1:34" pos:end="1:38">regno</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:12">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">data</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:10">rb</name> <operator pos:start="11:12" pos:end="11:13">==</operator> <literal type="number" pos:start="11:15" pos:end="11:16">31</literal></expr>)</condition> <block pos:start="11:19" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:31">

        <expr_stmt pos:start="13:9" pos:end="13:31"><expr pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:11">tmp</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:30"><name pos:start="13:15" pos:end="13:27">tcg_const_i64</name><argument_list pos:start="13:28" pos:end="13:30">(<argument pos:start="13:29" pos:end="13:29"><expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="19:5">else <block pos:start="15:12" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:25">

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:11">tmp</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:24"><name pos:start="17:15" pos:end="17:20">cpu_ir</name><index pos:start="17:21" pos:end="17:24">[<expr pos:start="17:22" pos:end="17:23"><name pos:start="17:22" pos:end="17:23">rb</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="25:39">/* The basic registers are data only, and unknown registers

       are read-zero, write-ignore.  */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:8">data</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:29"><name pos:start="27:12" pos:end="27:22">cpu_pr_data</name><argument_list pos:start="27:23" pos:end="27:29">(<argument pos:start="27:24" pos:end="27:28"><expr pos:start="27:24" pos:end="27:28"><name pos:start="27:24" pos:end="27:28">regno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="45:5"><if pos:start="29:5" pos:end="45:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:12">data</name> <operator pos:start="29:14" pos:end="29:15">!=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>)</condition> <block pos:start="29:20" pos:end="45:5">{<block_content pos:start="31:9" pos:end="43:9">

        <if_stmt pos:start="31:9" pos:end="43:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:27">(<expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:16">data</name> <operator pos:start="31:18" pos:end="31:18">&amp;</operator> <name pos:start="31:20" pos:end="31:26">PR_BYTE</name></expr>)</condition> <block pos:start="31:29" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:59">

            <expr_stmt pos:start="33:13" pos:end="33:59"><expr pos:start="33:13" pos:end="33:58"><call pos:start="33:13" pos:end="33:58"><name pos:start="33:13" pos:end="33:27">tcg_gen_st8_i64</name><argument_list pos:start="33:28" pos:end="33:58">(<argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:31">tmp</name></expr></argument>, <argument pos:start="33:34" pos:end="33:40"><expr pos:start="33:34" pos:end="33:40"><name pos:start="33:34" pos:end="33:40">cpu_env</name></expr></argument>, <argument pos:start="33:43" pos:end="33:57"><expr pos:start="33:43" pos:end="33:57"><name pos:start="33:43" pos:end="33:46">data</name> <operator pos:start="33:48" pos:end="33:48">&amp;</operator> <operator pos:start="33:50" pos:end="33:50">~</operator><name pos:start="33:51" pos:end="33:57">PR_BYTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="39:9">else if <condition pos:start="35:19" pos:end="35:34">(<expr pos:start="35:20" pos:end="35:33"><name pos:start="35:20" pos:end="35:23">data</name> <operator pos:start="35:25" pos:end="35:25">&amp;</operator> <name pos:start="35:27" pos:end="35:33">PR_LONG</name></expr>)</condition> <block pos:start="35:36" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:60">

            <expr_stmt pos:start="37:13" pos:end="37:60"><expr pos:start="37:13" pos:end="37:59"><call pos:start="37:13" pos:end="37:59"><name pos:start="37:13" pos:end="37:28">tcg_gen_st32_i64</name><argument_list pos:start="37:29" pos:end="37:59">(<argument pos:start="37:30" pos:end="37:32"><expr pos:start="37:30" pos:end="37:32"><name pos:start="37:30" pos:end="37:32">tmp</name></expr></argument>, <argument pos:start="37:35" pos:end="37:41"><expr pos:start="37:35" pos:end="37:41"><name pos:start="37:35" pos:end="37:41">cpu_env</name></expr></argument>, <argument pos:start="37:44" pos:end="37:58"><expr pos:start="37:44" pos:end="37:58"><name pos:start="37:44" pos:end="37:47">data</name> <operator pos:start="37:49" pos:end="37:49">&amp;</operator> <operator pos:start="37:51" pos:end="37:51">~</operator><name pos:start="37:52" pos:end="37:58">PR_LONG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="43:9">else <block pos:start="39:16" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:47">

            <expr_stmt pos:start="41:13" pos:end="41:47"><expr pos:start="41:13" pos:end="41:46"><call pos:start="41:13" pos:end="41:46"><name pos:start="41:13" pos:end="41:26">tcg_gen_st_i64</name><argument_list pos:start="41:27" pos:end="41:46">(<argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">tmp</name></expr></argument>, <argument pos:start="41:33" pos:end="41:39"><expr pos:start="41:33" pos:end="41:39"><name pos:start="41:33" pos:end="41:39">cpu_env</name></expr></argument>, <argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:45">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:17">(<expr pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:10">rb</name> <operator pos:start="49:12" pos:end="49:13">==</operator> <literal type="number" pos:start="49:15" pos:end="49:16">31</literal></expr>)</condition> <block pos:start="49:19" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:27">

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><call pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:21">tcg_temp_free</name><argument_list pos:start="51:22" pos:end="51:26">(<argument pos:start="51:23" pos:end="51:25"><expr pos:start="51:23" pos:end="51:25"><name pos:start="51:23" pos:end="51:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
