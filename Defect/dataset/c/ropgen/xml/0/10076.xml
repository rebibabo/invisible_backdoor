<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10076.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">SlirpState</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:31">slirp_lookup</name><parameter_list pos:start="1:32" pos:end="3:50">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:39">Monitor</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">mon</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">vlan</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:49"><decl pos:start="3:33" pos:end="3:49"><type pos:start="3:33" pos:end="3:49"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:42">char</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">stack</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:5">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">VLANClientState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">vc</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="43:5"><if pos:start="11:5" pos:end="31:5">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">vlan</name></expr>)</condition> <block pos:start="11:15" pos:end="31:5">{<block_content pos:start="13:9" pos:end="29:26">

        <expr_stmt pos:start="13:9" pos:end="13:78"><expr pos:start="13:9" pos:end="13:77"><name pos:start="13:9" pos:end="13:10">vc</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:77"><name pos:start="13:14" pos:end="13:42">qemu_find_vlan_client_by_name</name><argument_list pos:start="13:43" pos:end="13:77">(<argument pos:start="13:44" pos:end="13:46"><expr pos:start="13:44" pos:end="13:46"><name pos:start="13:44" pos:end="13:46">mon</name></expr></argument>, <argument pos:start="13:49" pos:end="13:69"><expr pos:start="13:49" pos:end="13:69"><call pos:start="13:49" pos:end="13:69"><name pos:start="13:49" pos:end="13:54">strtol</name><argument_list pos:start="13:55" pos:end="13:69">(<argument pos:start="13:56" pos:end="13:59"><expr pos:start="13:56" pos:end="13:59"><name pos:start="13:56" pos:end="13:59">vlan</name></expr></argument>, <argument pos:start="13:62" pos:end="13:65"><expr pos:start="13:62" pos:end="13:65"><name pos:start="13:62" pos:end="13:65">NULL</name></expr></argument>, <argument pos:start="13:68" pos:end="13:68"><expr pos:start="13:68" pos:end="13:68"><literal type="number" pos:start="13:68" pos:end="13:68">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:72" pos:end="13:76"><expr pos:start="13:72" pos:end="13:76"><name pos:start="13:72" pos:end="13:76">stack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:16">(<expr pos:start="15:13" pos:end="15:15"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:15">vc</name></expr>)</condition> <block pos:start="15:18" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:24">

            <return pos:start="17:13" pos:end="17:24">return <expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:38">(<expr pos:start="21:13" pos:end="21:37"><call pos:start="21:13" pos:end="21:37"><name pos:start="21:13" pos:end="21:18">strcmp</name><argument_list pos:start="21:19" pos:end="21:37">(<argument pos:start="21:20" pos:end="21:28"><expr pos:start="21:20" pos:end="21:28"><name pos:start="21:20" pos:end="21:28"><name pos:start="21:20" pos:end="21:21">vc</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:28">model</name></name></expr></argument>, <argument pos:start="21:31" pos:end="21:36"><expr pos:start="21:31" pos:end="21:36"><literal type="string" pos:start="21:31" pos:end="21:36">"user"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:40" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:24">

            <expr_stmt pos:start="23:13" pos:end="23:62"><expr pos:start="23:13" pos:end="23:61"><call pos:start="23:13" pos:end="23:61"><name pos:start="23:13" pos:end="23:26">monitor_printf</name><argument_list pos:start="23:27" pos:end="23:61">(<argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">mon</name></expr></argument>, <argument pos:start="23:33" pos:end="23:60"><expr pos:start="23:33" pos:end="23:60"><literal type="string" pos:start="23:33" pos:end="23:60">"invalid device specified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:24">return <expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="29:9" pos:end="29:26">return <expr pos:start="29:16" pos:end="29:25"><name pos:start="29:16" pos:end="29:25"><name pos:start="29:16" pos:end="29:17">vc</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:25">opaque</name></name></expr>;</return>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="43:5">else <block pos:start="31:12" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:42">

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:39">(<expr pos:start="33:13" pos:end="33:38"><call pos:start="33:13" pos:end="33:38"><name pos:start="33:13" pos:end="33:23">TAILQ_EMPTY</name><argument_list pos:start="33:24" pos:end="33:38">(<argument pos:start="33:25" pos:end="33:37"><expr pos:start="33:25" pos:end="33:37"><operator pos:start="33:25" pos:end="33:25">&amp;</operator><name pos:start="33:26" pos:end="33:37">slirp_stacks</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:41" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:24">

            <expr_stmt pos:start="35:13" pos:end="35:72"><expr pos:start="35:13" pos:end="35:71"><call pos:start="35:13" pos:end="35:71"><name pos:start="35:13" pos:end="35:26">monitor_printf</name><argument_list pos:start="35:27" pos:end="35:71">(<argument pos:start="35:28" pos:end="35:30"><expr pos:start="35:28" pos:end="35:30"><name pos:start="35:28" pos:end="35:30">mon</name></expr></argument>, <argument pos:start="35:33" pos:end="35:70"><expr pos:start="35:33" pos:end="35:70"><literal type="string" pos:start="35:33" pos:end="35:70">"user mode network stack not in use\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:24">return <expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="41:9" pos:end="41:42">return <expr pos:start="41:16" pos:end="41:41"><call pos:start="41:16" pos:end="41:41"><name pos:start="41:16" pos:end="41:26">TAILQ_FIRST</name><argument_list pos:start="41:27" pos:end="41:41">(<argument pos:start="41:28" pos:end="41:40"><expr pos:start="41:28" pos:end="41:40"><operator pos:start="41:28" pos:end="41:28">&amp;</operator><name pos:start="41:29" pos:end="41:40">slirp_stacks</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
