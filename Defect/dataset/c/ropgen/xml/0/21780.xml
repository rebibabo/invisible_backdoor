<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21780.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mov_write_udta_tag</name><parameter_list pos:start="1:30" pos:end="3:49">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:41">AVIOContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">pb</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:65"><name pos:start="1:48" pos:end="1:60">MOVMuxContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">mov</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:48"><decl pos:start="3:31" pos:end="3:48"><type pos:start="3:31" pos:end="3:48"><name pos:start="3:31" pos:end="3:45">AVFormatContext</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:13">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:23">pb_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name></decl>, <decl pos:start="9:17" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:20">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">buf</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="21:9">for <control pos:start="15:9" pos:end="15:39">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:34"><expr pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:33"><name pos:start="15:21" pos:end="15:21">s</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:33">nb_streams</name></name></expr>;</condition> <incr pos:start="15:36" pos:end="15:38"><expr pos:start="15:36" pos:end="15:38"><name pos:start="15:36" pos:end="15:36">i</name><operator pos:start="15:37" pos:end="15:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:9" pos:end="21:9"><block_content pos:start="17:9" pos:end="21:9">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:43">(<expr pos:start="17:13" pos:end="17:42"><name pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">flags</name></name> <operator pos:start="17:22" pos:end="17:22">&amp;</operator> <name pos:start="17:24" pos:end="17:42">AVFMT_FLAG_BITEXACT</name></expr>)</condition> <block pos:start="17:45" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:21">

            <return pos:start="19:13" pos:end="19:21">return <expr pos:start="19:20" pos:end="19:20"><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:36"><name pos:start="25:11" pos:end="25:27">avio_open_dyn_buf</name><argument_list pos:start="25:28" pos:end="25:36">(<argument pos:start="25:29" pos:end="25:35"><expr pos:start="25:29" pos:end="25:35"><operator pos:start="25:29" pos:end="25:29">&amp;</operator><name pos:start="25:30" pos:end="25:35">pb_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:19"><if pos:start="27:5" pos:end="29:19">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:19"><block_content pos:start="29:9" pos:end="29:19">

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="77:5"><if pos:start="33:5" pos:end="51:5">if <condition pos:start="33:8" pos:end="33:29">(<expr pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:11">mov</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:17">mode</name></name> <operator pos:start="33:19" pos:end="33:19">&amp;</operator> <name pos:start="33:21" pos:end="33:28">MODE_3GP</name></expr>)</condition> <block pos:start="33:31" pos:end="51:5">{<block_content pos:start="35:9" pos:end="49:58">

        <expr_stmt pos:start="35:9" pos:end="35:60"><expr pos:start="35:9" pos:end="35:59"><call pos:start="35:9" pos:end="35:59"><name pos:start="35:9" pos:end="35:30">mov_write_3gp_udta_tag</name><argument_list pos:start="35:31" pos:end="35:59">(<argument pos:start="35:32" pos:end="35:37"><expr pos:start="35:32" pos:end="35:37"><name pos:start="35:32" pos:end="35:37">pb_buf</name></expr></argument>, <argument pos:start="35:40" pos:end="35:40"><expr pos:start="35:40" pos:end="35:40"><name pos:start="35:40" pos:end="35:40">s</name></expr></argument>, <argument pos:start="35:43" pos:end="35:48"><expr pos:start="35:43" pos:end="35:48"><literal type="string" pos:start="35:43" pos:end="35:48">"perf"</literal></expr></argument>, <argument pos:start="35:51" pos:end="35:58"><expr pos:start="35:51" pos:end="35:58"><literal type="string" pos:start="35:51" pos:end="35:58">"artist"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><call pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:30">mov_write_3gp_udta_tag</name><argument_list pos:start="37:31" pos:end="37:58">(<argument pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37">pb_buf</name></expr></argument>, <argument pos:start="37:40" pos:end="37:40"><expr pos:start="37:40" pos:end="37:40"><name pos:start="37:40" pos:end="37:40">s</name></expr></argument>, <argument pos:start="37:43" pos:end="37:48"><expr pos:start="37:43" pos:end="37:48"><literal type="string" pos:start="37:43" pos:end="37:48">"titl"</literal></expr></argument>, <argument pos:start="37:51" pos:end="37:57"><expr pos:start="37:51" pos:end="37:57"><literal type="string" pos:start="37:51" pos:end="37:57">"title"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:60"><expr pos:start="39:9" pos:end="39:59"><call pos:start="39:9" pos:end="39:59"><name pos:start="39:9" pos:end="39:30">mov_write_3gp_udta_tag</name><argument_list pos:start="39:31" pos:end="39:59">(<argument pos:start="39:32" pos:end="39:37"><expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:37">pb_buf</name></expr></argument>, <argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><name pos:start="39:40" pos:end="39:40">s</name></expr></argument>, <argument pos:start="39:43" pos:end="39:48"><expr pos:start="39:43" pos:end="39:48"><literal type="string" pos:start="39:43" pos:end="39:48">"auth"</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:58"><expr pos:start="39:51" pos:end="39:58"><literal type="string" pos:start="39:51" pos:end="39:58">"author"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:59"><expr pos:start="41:9" pos:end="41:58"><call pos:start="41:9" pos:end="41:58"><name pos:start="41:9" pos:end="41:30">mov_write_3gp_udta_tag</name><argument_list pos:start="41:31" pos:end="41:58">(<argument pos:start="41:32" pos:end="41:37"><expr pos:start="41:32" pos:end="41:37"><name pos:start="41:32" pos:end="41:37">pb_buf</name></expr></argument>, <argument pos:start="41:40" pos:end="41:40"><expr pos:start="41:40" pos:end="41:40"><name pos:start="41:40" pos:end="41:40">s</name></expr></argument>, <argument pos:start="41:43" pos:end="41:48"><expr pos:start="41:43" pos:end="41:48"><literal type="string" pos:start="41:43" pos:end="41:48">"gnre"</literal></expr></argument>, <argument pos:start="41:51" pos:end="41:57"><expr pos:start="41:51" pos:end="41:57"><literal type="string" pos:start="41:51" pos:end="41:57">"genre"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:61"><expr pos:start="43:9" pos:end="43:60"><call pos:start="43:9" pos:end="43:60"><name pos:start="43:9" pos:end="43:30">mov_write_3gp_udta_tag</name><argument_list pos:start="43:31" pos:end="43:60">(<argument pos:start="43:32" pos:end="43:37"><expr pos:start="43:32" pos:end="43:37"><name pos:start="43:32" pos:end="43:37">pb_buf</name></expr></argument>, <argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><name pos:start="43:40" pos:end="43:40">s</name></expr></argument>, <argument pos:start="43:43" pos:end="43:48"><expr pos:start="43:43" pos:end="43:48"><literal type="string" pos:start="43:43" pos:end="43:48">"dscp"</literal></expr></argument>, <argument pos:start="43:51" pos:end="43:59"><expr pos:start="43:51" pos:end="43:59"><literal type="string" pos:start="43:51" pos:end="43:59">"comment"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:59"><expr pos:start="45:9" pos:end="45:58"><call pos:start="45:9" pos:end="45:58"><name pos:start="45:9" pos:end="45:30">mov_write_3gp_udta_tag</name><argument_list pos:start="45:31" pos:end="45:58">(<argument pos:start="45:32" pos:end="45:37"><expr pos:start="45:32" pos:end="45:37"><name pos:start="45:32" pos:end="45:37">pb_buf</name></expr></argument>, <argument pos:start="45:40" pos:end="45:40"><expr pos:start="45:40" pos:end="45:40"><name pos:start="45:40" pos:end="45:40">s</name></expr></argument>, <argument pos:start="45:43" pos:end="45:48"><expr pos:start="45:43" pos:end="45:48"><literal type="string" pos:start="45:43" pos:end="45:48">"albm"</literal></expr></argument>, <argument pos:start="45:51" pos:end="45:57"><expr pos:start="45:51" pos:end="45:57"><literal type="string" pos:start="45:51" pos:end="45:57">"album"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:63"><expr pos:start="47:9" pos:end="47:62"><call pos:start="47:9" pos:end="47:62"><name pos:start="47:9" pos:end="47:30">mov_write_3gp_udta_tag</name><argument_list pos:start="47:31" pos:end="47:62">(<argument pos:start="47:32" pos:end="47:37"><expr pos:start="47:32" pos:end="47:37"><name pos:start="47:32" pos:end="47:37">pb_buf</name></expr></argument>, <argument pos:start="47:40" pos:end="47:40"><expr pos:start="47:40" pos:end="47:40"><name pos:start="47:40" pos:end="47:40">s</name></expr></argument>, <argument pos:start="47:43" pos:end="47:48"><expr pos:start="47:43" pos:end="47:48"><literal type="string" pos:start="47:43" pos:end="47:48">"cprt"</literal></expr></argument>, <argument pos:start="47:51" pos:end="47:61"><expr pos:start="47:51" pos:end="47:61"><literal type="string" pos:start="47:51" pos:end="47:61">"copyright"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:58"><expr pos:start="49:9" pos:end="49:57"><call pos:start="49:9" pos:end="49:57"><name pos:start="49:9" pos:end="49:30">mov_write_3gp_udta_tag</name><argument_list pos:start="49:31" pos:end="49:57">(<argument pos:start="49:32" pos:end="49:37"><expr pos:start="49:32" pos:end="49:37"><name pos:start="49:32" pos:end="49:37">pb_buf</name></expr></argument>, <argument pos:start="49:40" pos:end="49:40"><expr pos:start="49:40" pos:end="49:40"><name pos:start="49:40" pos:end="49:40">s</name></expr></argument>, <argument pos:start="49:43" pos:end="49:48"><expr pos:start="49:43" pos:end="49:48"><literal type="string" pos:start="49:43" pos:end="49:48">"yrrc"</literal></expr></argument>, <argument pos:start="49:51" pos:end="49:56"><expr pos:start="49:51" pos:end="49:56"><literal type="string" pos:start="49:51" pos:end="49:56">"date"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="71:5">else if <condition pos:start="51:15" pos:end="51:37">(<expr pos:start="51:16" pos:end="51:36"><name pos:start="51:16" pos:end="51:24"><name pos:start="51:16" pos:end="51:18">mov</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:24">mode</name></name> <operator pos:start="51:26" pos:end="51:27">==</operator> <name pos:start="51:29" pos:end="51:36">MODE_MOV</name></expr>)</condition> <block pos:start="51:39" pos:end="71:5">{<block_content pos:start="53:9" pos:end="69:74"> <comment type="line" pos:start="51:41" pos:end="51:132">// the title field breaks gtkpod with mp4 and my suspicion is that stuff is not valid in mp4</comment>

        <expr_stmt pos:start="53:9" pos:end="53:74"><expr pos:start="53:9" pos:end="53:73"><call pos:start="53:9" pos:end="53:73"><name pos:start="53:9" pos:end="53:33">mov_write_string_metadata</name><argument_list pos:start="53:34" pos:end="53:73">(<argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><name pos:start="53:35" pos:end="53:35">s</name></expr></argument>, <argument pos:start="53:38" pos:end="53:43"><expr pos:start="53:38" pos:end="53:43"><name pos:start="53:38" pos:end="53:43">pb_buf</name></expr></argument>, <argument pos:start="53:46" pos:end="53:54"><expr pos:start="53:46" pos:end="53:54"><literal type="string" pos:start="53:46" pos:end="53:54">"\251ART"</literal></expr></argument>, <argument pos:start="53:57" pos:end="53:64"><expr pos:start="53:57" pos:end="53:64"><literal type="string" pos:start="53:57" pos:end="53:64">"artist"</literal></expr></argument>,      <argument pos:start="53:72" pos:end="53:72"><expr pos:start="53:72" pos:end="53:72"><literal type="number" pos:start="53:72" pos:end="53:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:74"><expr pos:start="55:9" pos:end="55:73"><call pos:start="55:9" pos:end="55:73"><name pos:start="55:9" pos:end="55:33">mov_write_string_metadata</name><argument_list pos:start="55:34" pos:end="55:73">(<argument pos:start="55:35" pos:end="55:35"><expr pos:start="55:35" pos:end="55:35"><name pos:start="55:35" pos:end="55:35">s</name></expr></argument>, <argument pos:start="55:38" pos:end="55:43"><expr pos:start="55:38" pos:end="55:43"><name pos:start="55:38" pos:end="55:43">pb_buf</name></expr></argument>, <argument pos:start="55:46" pos:end="55:54"><expr pos:start="55:46" pos:end="55:54"><literal type="string" pos:start="55:46" pos:end="55:54">"\251nam"</literal></expr></argument>, <argument pos:start="55:57" pos:end="55:63"><expr pos:start="55:57" pos:end="55:63"><literal type="string" pos:start="55:57" pos:end="55:63">"title"</literal></expr></argument>,       <argument pos:start="55:72" pos:end="55:72"><expr pos:start="55:72" pos:end="55:72"><literal type="number" pos:start="55:72" pos:end="55:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:74"><expr pos:start="57:9" pos:end="57:73"><call pos:start="57:9" pos:end="57:73"><name pos:start="57:9" pos:end="57:33">mov_write_string_metadata</name><argument_list pos:start="57:34" pos:end="57:73">(<argument pos:start="57:35" pos:end="57:35"><expr pos:start="57:35" pos:end="57:35"><name pos:start="57:35" pos:end="57:35">s</name></expr></argument>, <argument pos:start="57:38" pos:end="57:43"><expr pos:start="57:38" pos:end="57:43"><name pos:start="57:38" pos:end="57:43">pb_buf</name></expr></argument>, <argument pos:start="57:46" pos:end="57:54"><expr pos:start="57:46" pos:end="57:54"><literal type="string" pos:start="57:46" pos:end="57:54">"\251aut"</literal></expr></argument>, <argument pos:start="57:57" pos:end="57:64"><expr pos:start="57:57" pos:end="57:64"><literal type="string" pos:start="57:57" pos:end="57:64">"author"</literal></expr></argument>,      <argument pos:start="57:72" pos:end="57:72"><expr pos:start="57:72" pos:end="57:72"><literal type="number" pos:start="57:72" pos:end="57:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:74"><expr pos:start="59:9" pos:end="59:73"><call pos:start="59:9" pos:end="59:73"><name pos:start="59:9" pos:end="59:33">mov_write_string_metadata</name><argument_list pos:start="59:34" pos:end="59:73">(<argument pos:start="59:35" pos:end="59:35"><expr pos:start="59:35" pos:end="59:35"><name pos:start="59:35" pos:end="59:35">s</name></expr></argument>, <argument pos:start="59:38" pos:end="59:43"><expr pos:start="59:38" pos:end="59:43"><name pos:start="59:38" pos:end="59:43">pb_buf</name></expr></argument>, <argument pos:start="59:46" pos:end="59:54"><expr pos:start="59:46" pos:end="59:54"><literal type="string" pos:start="59:46" pos:end="59:54">"\251alb"</literal></expr></argument>, <argument pos:start="59:57" pos:end="59:63"><expr pos:start="59:57" pos:end="59:63"><literal type="string" pos:start="59:57" pos:end="59:63">"album"</literal></expr></argument>,       <argument pos:start="59:72" pos:end="59:72"><expr pos:start="59:72" pos:end="59:72"><literal type="number" pos:start="59:72" pos:end="59:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:74"><expr pos:start="61:9" pos:end="61:73"><call pos:start="61:9" pos:end="61:73"><name pos:start="61:9" pos:end="61:33">mov_write_string_metadata</name><argument_list pos:start="61:34" pos:end="61:73">(<argument pos:start="61:35" pos:end="61:35"><expr pos:start="61:35" pos:end="61:35"><name pos:start="61:35" pos:end="61:35">s</name></expr></argument>, <argument pos:start="61:38" pos:end="61:43"><expr pos:start="61:38" pos:end="61:43"><name pos:start="61:38" pos:end="61:43">pb_buf</name></expr></argument>, <argument pos:start="61:46" pos:end="61:54"><expr pos:start="61:46" pos:end="61:54"><literal type="string" pos:start="61:46" pos:end="61:54">"\251day"</literal></expr></argument>, <argument pos:start="61:57" pos:end="61:62"><expr pos:start="61:57" pos:end="61:62"><literal type="string" pos:start="61:57" pos:end="61:62">"date"</literal></expr></argument>,        <argument pos:start="61:72" pos:end="61:72"><expr pos:start="61:72" pos:end="61:72"><literal type="number" pos:start="61:72" pos:end="61:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:74"><expr pos:start="63:9" pos:end="63:73"><call pos:start="63:9" pos:end="63:73"><name pos:start="63:9" pos:end="63:33">mov_write_string_metadata</name><argument_list pos:start="63:34" pos:end="63:73">(<argument pos:start="63:35" pos:end="63:35"><expr pos:start="63:35" pos:end="63:35"><name pos:start="63:35" pos:end="63:35">s</name></expr></argument>, <argument pos:start="63:38" pos:end="63:43"><expr pos:start="63:38" pos:end="63:43"><name pos:start="63:38" pos:end="63:43">pb_buf</name></expr></argument>, <argument pos:start="63:46" pos:end="63:54"><expr pos:start="63:46" pos:end="63:54"><literal type="string" pos:start="63:46" pos:end="63:54">"\251swr"</literal></expr></argument>, <argument pos:start="63:57" pos:end="63:65"><expr pos:start="63:57" pos:end="63:65"><literal type="string" pos:start="63:57" pos:end="63:65">"encoder"</literal></expr></argument>,     <argument pos:start="63:72" pos:end="63:72"><expr pos:start="63:72" pos:end="63:72"><literal type="number" pos:start="63:72" pos:end="63:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:74"><expr pos:start="65:9" pos:end="65:73"><call pos:start="65:9" pos:end="65:73"><name pos:start="65:9" pos:end="65:33">mov_write_string_metadata</name><argument_list pos:start="65:34" pos:end="65:73">(<argument pos:start="65:35" pos:end="65:35"><expr pos:start="65:35" pos:end="65:35"><name pos:start="65:35" pos:end="65:35">s</name></expr></argument>, <argument pos:start="65:38" pos:end="65:43"><expr pos:start="65:38" pos:end="65:43"><name pos:start="65:38" pos:end="65:43">pb_buf</name></expr></argument>, <argument pos:start="65:46" pos:end="65:54"><expr pos:start="65:46" pos:end="65:54"><literal type="string" pos:start="65:46" pos:end="65:54">"\251des"</literal></expr></argument>, <argument pos:start="65:57" pos:end="65:65"><expr pos:start="65:57" pos:end="65:65"><literal type="string" pos:start="65:57" pos:end="65:65">"comment"</literal></expr></argument>,     <argument pos:start="65:72" pos:end="65:72"><expr pos:start="65:72" pos:end="65:72"><literal type="number" pos:start="65:72" pos:end="65:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:74"><expr pos:start="67:9" pos:end="67:73"><call pos:start="67:9" pos:end="67:73"><name pos:start="67:9" pos:end="67:33">mov_write_string_metadata</name><argument_list pos:start="67:34" pos:end="67:73">(<argument pos:start="67:35" pos:end="67:35"><expr pos:start="67:35" pos:end="67:35"><name pos:start="67:35" pos:end="67:35">s</name></expr></argument>, <argument pos:start="67:38" pos:end="67:43"><expr pos:start="67:38" pos:end="67:43"><name pos:start="67:38" pos:end="67:43">pb_buf</name></expr></argument>, <argument pos:start="67:46" pos:end="67:54"><expr pos:start="67:46" pos:end="67:54"><literal type="string" pos:start="67:46" pos:end="67:54">"\251gen"</literal></expr></argument>, <argument pos:start="67:57" pos:end="67:63"><expr pos:start="67:57" pos:end="67:63"><literal type="string" pos:start="67:57" pos:end="67:63">"genre"</literal></expr></argument>,       <argument pos:start="67:72" pos:end="67:72"><expr pos:start="67:72" pos:end="67:72"><literal type="number" pos:start="67:72" pos:end="67:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:74"><expr pos:start="69:9" pos:end="69:73"><call pos:start="69:9" pos:end="69:73"><name pos:start="69:9" pos:end="69:33">mov_write_string_metadata</name><argument_list pos:start="69:34" pos:end="69:73">(<argument pos:start="69:35" pos:end="69:35"><expr pos:start="69:35" pos:end="69:35"><name pos:start="69:35" pos:end="69:35">s</name></expr></argument>, <argument pos:start="69:38" pos:end="69:43"><expr pos:start="69:38" pos:end="69:43"><name pos:start="69:38" pos:end="69:43">pb_buf</name></expr></argument>, <argument pos:start="69:46" pos:end="69:54"><expr pos:start="69:46" pos:end="69:54"><literal type="string" pos:start="69:46" pos:end="69:54">"\251cpy"</literal></expr></argument>, <argument pos:start="69:57" pos:end="69:67"><expr pos:start="69:57" pos:end="69:67"><literal type="string" pos:start="69:57" pos:end="69:67">"copyright"</literal></expr></argument>,   <argument pos:start="69:72" pos:end="69:72"><expr pos:start="69:72" pos:end="69:72"><literal type="number" pos:start="69:72" pos:end="69:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="77:5">else <block pos:start="71:12" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:43">

        <comment type="block" pos:start="73:9" pos:end="73:30">/* iTunes meta data */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:43"><expr pos:start="75:9" pos:end="75:42"><call pos:start="75:9" pos:end="75:42"><name pos:start="75:9" pos:end="75:26">mov_write_meta_tag</name><argument_list pos:start="75:27" pos:end="75:42">(<argument pos:start="75:28" pos:end="75:33"><expr pos:start="75:28" pos:end="75:33"><name pos:start="75:28" pos:end="75:33">pb_buf</name></expr></argument>, <argument pos:start="75:36" pos:end="75:38"><expr pos:start="75:36" pos:end="75:38"><name pos:start="75:36" pos:end="75:38">mov</name></expr></argument>, <argument pos:start="75:41" pos:end="75:41"><expr pos:start="75:41" pos:end="75:41"><name pos:start="75:41" pos:end="75:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="81:5" pos:end="83:38"><if pos:start="81:5" pos:end="83:38">if <condition pos:start="81:8" pos:end="81:67">(<expr pos:start="81:9" pos:end="81:66"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:22">nb_chapters</name></name> <operator pos:start="81:24" pos:end="81:25">&amp;&amp;</operator> <operator pos:start="81:27" pos:end="81:27">!</operator><operator pos:start="81:28" pos:end="81:28">(</operator><name pos:start="81:29" pos:end="81:38"><name pos:start="81:29" pos:end="81:31">mov</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:38">flags</name></name> <operator pos:start="81:40" pos:end="81:40">&amp;</operator> <name pos:start="81:42" pos:end="81:65">FF_MOV_FLAG_DISABLE_CHPL</name><operator pos:start="81:66" pos:end="81:66">)</operator></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:38"><block_content pos:start="83:9" pos:end="83:38">

        <expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><call pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:26">mov_write_chpl_tag</name><argument_list pos:start="83:27" pos:end="83:37">(<argument pos:start="83:28" pos:end="83:33"><expr pos:start="83:28" pos:end="83:33"><name pos:start="83:28" pos:end="83:33">pb_buf</name></expr></argument>, <argument pos:start="83:36" pos:end="83:36"><expr pos:start="83:36" pos:end="83:36"><name pos:start="83:36" pos:end="83:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:54">(<expr pos:start="87:9" pos:end="87:53"><operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:13">size</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <call pos:start="87:17" pos:end="87:48"><name pos:start="87:17" pos:end="87:34">avio_close_dyn_buf</name><argument_list pos:start="87:35" pos:end="87:48">(<argument pos:start="87:36" pos:end="87:41"><expr pos:start="87:36" pos:end="87:41"><name pos:start="87:36" pos:end="87:41">pb_buf</name></expr></argument>, <argument pos:start="87:44" pos:end="87:47"><expr pos:start="87:44" pos:end="87:47"><operator pos:start="87:44" pos:end="87:44">&amp;</operator><name pos:start="87:45" pos:end="87:47">buf</name></expr></argument>)</argument_list></call><operator pos:start="87:49" pos:end="87:49">)</operator> <operator pos:start="87:51" pos:end="87:51">&gt;</operator> <literal type="number" pos:start="87:53" pos:end="87:53">0</literal></expr>)</condition> <block pos:start="87:56" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:34">

        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><call pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:17">avio_wb32</name><argument_list pos:start="89:18" pos:end="89:31">(<argument pos:start="89:19" pos:end="89:20"><expr pos:start="89:19" pos:end="89:20"><name pos:start="89:19" pos:end="89:20">pb</name></expr></argument>, <argument pos:start="89:23" pos:end="89:30"><expr pos:start="89:23" pos:end="89:30"><name pos:start="89:23" pos:end="89:26">size</name> <operator pos:start="89:28" pos:end="89:28">+</operator> <literal type="number" pos:start="89:30" pos:end="89:30">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:33"><expr pos:start="91:9" pos:end="91:32"><call pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:20">ffio_wfourcc</name><argument_list pos:start="91:21" pos:end="91:32">(<argument pos:start="91:22" pos:end="91:23"><expr pos:start="91:22" pos:end="91:23"><name pos:start="91:22" pos:end="91:23">pb</name></expr></argument>, <argument pos:start="91:26" pos:end="91:31"><expr pos:start="91:26" pos:end="91:31"><literal type="string" pos:start="91:26" pos:end="91:31">"udta"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:34"><expr pos:start="93:9" pos:end="93:33"><call pos:start="93:9" pos:end="93:33"><name pos:start="93:9" pos:end="93:18">avio_write</name><argument_list pos:start="93:19" pos:end="93:33">(<argument pos:start="93:20" pos:end="93:21"><expr pos:start="93:20" pos:end="93:21"><name pos:start="93:20" pos:end="93:21">pb</name></expr></argument>, <argument pos:start="93:24" pos:end="93:26"><expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">buf</name></expr></argument>, <argument pos:start="93:29" pos:end="93:32"><expr pos:start="93:29" pos:end="93:32"><name pos:start="93:29" pos:end="93:32">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:17"><expr pos:start="97:5" pos:end="97:16"><call pos:start="97:5" pos:end="97:16"><name pos:start="97:5" pos:end="97:11">av_free</name><argument_list pos:start="97:12" pos:end="97:16">(<argument pos:start="97:13" pos:end="97:15"><expr pos:start="97:13" pos:end="97:15"><name pos:start="97:13" pos:end="97:15">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
