<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1543.c" pos:tabs="8"><function pos:start="1:1" pos:end="477:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="5:40">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">got_frame</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:39"><decl pos:start="5:25" pos:end="5:39"><type pos:start="5:25" pos:end="5:39"><name pos:start="5:25" pos:end="5:32">AVPacket</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:39">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="477:1">{<block_content pos:start="9:5" pos:end="475:17">

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:17">PNGDecContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier><specifier pos:start="9:20" pos:end="9:24">const</specifier></type> <name pos:start="9:26" pos:end="9:26">s</name> <init pos:start="9:28" pos:end="9:45">= <expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">buf</name>     <init pos:start="11:28" pos:end="11:40">= <expr pos:start="11:30" pos:end="11:40"><name pos:start="11:30" pos:end="11:40"><name pos:start="11:30" pos:end="11:34">avpkt</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:40">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">buf_size</name>           <init pos:start="13:28" pos:end="13:40">= <expr pos:start="13:30" pos:end="13:40"><name pos:start="13:30" pos:end="13:40"><name pos:start="13:30" pos:end="13:34">avpkt</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:40">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:14">p</name>             <init pos:start="15:28" pos:end="15:33">= <expr pos:start="15:30" pos:end="15:33"><name pos:start="15:30" pos:end="15:33">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:26">crow_buf_base</name> <init pos:start="17:28" pos:end="17:33">= <expr pos:start="17:30" pos:end="17:33"><name pos:start="17:30" pos:end="17:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:16">tag</name></decl>, <decl pos:start="19:19" pos:end="19:24"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:19" pos:end="19:24">length</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:25">/* check signature */</comment>

    <if_stmt pos:start="27:5" pos:end="33:18"><if pos:start="27:5" pos:end="33:18">if <condition pos:start="27:8" pos:end="31:39">(<expr pos:start="27:9" pos:end="31:38"><name pos:start="27:9" pos:end="27:16">buf_size</name> <operator pos:start="27:18" pos:end="27:18">&lt;</operator> <literal type="number" pos:start="27:20" pos:end="27:20">8</literal> <operator pos:start="27:22" pos:end="27:23">||</operator>

        <call pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:14">memcmp</name><argument_list pos:start="29:15" pos:end="29:33">(<argument pos:start="29:16" pos:end="29:18"><expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">buf</name></expr></argument>, <argument pos:start="29:21" pos:end="29:29"><expr pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:29">ff_pngsig</name></expr></argument>, <argument pos:start="29:32" pos:end="29:32"><expr pos:start="29:32" pos:end="29:32"><literal type="number" pos:start="29:32" pos:end="29:32">8</literal></expr></argument>)</argument_list></call> <operator pos:start="29:35" pos:end="29:36">!=</operator> <literal type="number" pos:start="29:38" pos:end="29:38">0</literal> <operator pos:start="29:40" pos:end="29:41">&amp;&amp;</operator>

        <call pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:14">memcmp</name><argument_list pos:start="31:15" pos:end="31:33">(<argument pos:start="31:16" pos:end="31:18"><expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">buf</name></expr></argument>, <argument pos:start="31:21" pos:end="31:29"><expr pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:29">ff_mngsig</name></expr></argument>, <argument pos:start="31:32" pos:end="31:32"><expr pos:start="31:32" pos:end="31:32"><literal type="number" pos:start="31:32" pos:end="31:32">8</literal></expr></argument>)</argument_list></call> <operator pos:start="31:35" pos:end="31:36">!=</operator> <literal type="number" pos:start="31:38" pos:end="31:38">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:52"><expr pos:start="37:5" pos:end="37:51"><call pos:start="37:5" pos:end="37:51"><name pos:start="37:5" pos:end="37:20">bytestream2_init</name><argument_list pos:start="37:21" pos:end="37:51">(<argument pos:start="37:22" pos:end="37:27"><expr pos:start="37:22" pos:end="37:27"><operator pos:start="37:22" pos:end="37:22">&amp;</operator><name pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:27">gb</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:36"><expr pos:start="37:30" pos:end="37:36"><name pos:start="37:30" pos:end="37:32">buf</name> <operator pos:start="37:34" pos:end="37:34">+</operator> <literal type="number" pos:start="37:36" pos:end="37:36">8</literal></expr></argument>, <argument pos:start="37:39" pos:end="37:50"><expr pos:start="37:39" pos:end="37:50"><name pos:start="37:39" pos:end="37:46">buf_size</name> <operator pos:start="37:48" pos:end="37:48">-</operator> <literal type="number" pos:start="37:50" pos:end="37:50">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:8"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:8">y</name></name> <operator pos:start="39:10" pos:end="39:10">=</operator> <name pos:start="39:12" pos:end="39:19"><name pos:start="39:12" pos:end="39:12">s</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:19">state</name></name> <operator pos:start="39:21" pos:end="39:21">=</operator> <literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:23">/* init the zlib */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:14">zstream</name><operator pos:start="45:15" pos:end="45:15">.</operator><name pos:start="45:16" pos:end="45:21">zalloc</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:37">ff_png_zalloc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:37"><expr pos:start="47:5" pos:end="47:36"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:14">zstream</name><operator pos:start="47:15" pos:end="47:15">.</operator><name pos:start="47:16" pos:end="47:20">zfree</name></name>  <operator pos:start="47:23" pos:end="47:23">=</operator> <name pos:start="47:25" pos:end="47:36">ff_png_zfree</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:14">zstream</name><operator pos:start="49:15" pos:end="49:15">.</operator><name pos:start="49:16" pos:end="49:21">opaque</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:28">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:35"><expr pos:start="51:5" pos:end="51:34"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:34"><name pos:start="51:11" pos:end="51:21">inflateInit</name><argument_list pos:start="51:22" pos:end="51:34">(<argument pos:start="51:23" pos:end="51:33"><expr pos:start="51:23" pos:end="51:33"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:33"><name pos:start="51:24" pos:end="51:24">s</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:33">zstream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:18"><if pos:start="53:5" pos:end="55:18">if <condition pos:start="53:8" pos:end="53:20">(<expr pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:14">!=</operator> <name pos:start="53:16" pos:end="53:19">Z_OK</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:18"><block_content pos:start="55:9" pos:end="55:18">

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="57:5" pos:end="407:5">for <control pos:start="57:9" pos:end="57:12">(<init pos:start="57:10" pos:end="57:10">;</init><condition pos:start="57:11" pos:end="57:11">;</condition><incr/>)</control> <block pos:start="57:14" pos:end="407:5">{<block_content pos:start="59:9" pos:end="405:9">

        <if_stmt pos:start="59:9" pos:end="61:22"><if pos:start="59:9" pos:end="61:22">if <condition pos:start="59:12" pos:end="59:52">(<expr pos:start="59:13" pos:end="59:51"><call pos:start="59:13" pos:end="59:46"><name pos:start="59:13" pos:end="59:38">bytestream2_get_bytes_left</name><argument_list pos:start="59:39" pos:end="59:46">(<argument pos:start="59:40" pos:end="59:45"><expr pos:start="59:40" pos:end="59:45"><operator pos:start="59:40" pos:end="59:40">&amp;</operator><name pos:start="59:41" pos:end="59:45"><name pos:start="59:41" pos:end="59:41">s</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:45">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="59:48" pos:end="59:49">&lt;=</operator> <literal type="number" pos:start="59:51" pos:end="59:51">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:22"><block_content pos:start="61:13" pos:end="61:22">

            <goto pos:start="61:13" pos:end="61:22">goto <name pos:start="61:18" pos:end="61:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:46"><expr pos:start="63:9" pos:end="63:45"><name pos:start="63:9" pos:end="63:14">length</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:45"><name pos:start="63:18" pos:end="63:37">bytestream2_get_be32</name><argument_list pos:start="63:38" pos:end="63:45">(<argument pos:start="63:39" pos:end="63:44"><expr pos:start="63:39" pos:end="63:44"><operator pos:start="63:39" pos:end="63:39">&amp;</operator><name pos:start="63:40" pos:end="63:44"><name pos:start="63:40" pos:end="63:40">s</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:44">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:22"><if pos:start="65:9" pos:end="67:22">if <condition pos:start="65:12" pos:end="65:32">(<expr pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:18">length</name> <operator pos:start="65:20" pos:end="65:20">&gt;</operator> <literal type="number" pos:start="65:22" pos:end="65:31">0x7fffffff</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:22"><block_content pos:start="67:13" pos:end="67:22">

            <goto pos:start="67:13" pos:end="67:22">goto <name pos:start="67:18" pos:end="67:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:43"><expr pos:start="69:9" pos:end="69:42"><name pos:start="69:9" pos:end="69:11">tag</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:42"><name pos:start="69:15" pos:end="69:34">bytestream2_get_le32</name><argument_list pos:start="69:35" pos:end="69:42">(<argument pos:start="69:36" pos:end="69:41"><expr pos:start="69:36" pos:end="69:41"><operator pos:start="69:36" pos:end="69:36">&amp;</operator><name pos:start="69:37" pos:end="69:41"><name pos:start="69:37" pos:end="69:37">s</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="79:46"><expr pos:start="71:9" pos:end="79:45"><call pos:start="71:9" pos:end="79:45"><name pos:start="71:9" pos:end="71:15">av_dlog</name><argument_list pos:start="71:16" pos:end="79:45">(<argument pos:start="71:17" pos:end="71:21"><expr pos:start="71:17" pos:end="71:21"><name pos:start="71:17" pos:end="71:21">avctx</name></expr></argument>, <argument pos:start="71:24" pos:end="71:54"><expr pos:start="71:24" pos:end="71:54"><literal type="string" pos:start="71:24" pos:end="71:54">"png: tag=%c%c%c%c length=%u\n"</literal></expr></argument>,

                <argument pos:start="73:17" pos:end="73:28"><expr pos:start="73:17" pos:end="73:28"><operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:20">tag</name> <operator pos:start="73:22" pos:end="73:22">&amp;</operator> <literal type="number" pos:start="73:24" pos:end="73:27">0xff</literal><operator pos:start="73:28" pos:end="73:28">)</operator></expr></argument>,

                <argument pos:start="75:17" pos:end="75:35"><expr pos:start="75:17" pos:end="75:35"><operator pos:start="75:17" pos:end="75:17">(</operator><operator pos:start="75:18" pos:end="75:18">(</operator><name pos:start="75:19" pos:end="75:21">tag</name> <operator pos:start="75:23" pos:end="75:24">&gt;&gt;</operator> <literal type="number" pos:start="75:26" pos:end="75:26">8</literal><operator pos:start="75:27" pos:end="75:27">)</operator> <operator pos:start="75:29" pos:end="75:29">&amp;</operator> <literal type="number" pos:start="75:31" pos:end="75:34">0xff</literal><operator pos:start="75:35" pos:end="75:35">)</operator></expr></argument>,

                <argument pos:start="77:17" pos:end="77:36"><expr pos:start="77:17" pos:end="77:36"><operator pos:start="77:17" pos:end="77:17">(</operator><operator pos:start="77:18" pos:end="77:18">(</operator><name pos:start="77:19" pos:end="77:21">tag</name> <operator pos:start="77:23" pos:end="77:24">&gt;&gt;</operator> <literal type="number" pos:start="77:26" pos:end="77:27">16</literal><operator pos:start="77:28" pos:end="77:28">)</operator> <operator pos:start="77:30" pos:end="77:30">&amp;</operator> <literal type="number" pos:start="77:32" pos:end="77:35">0xff</literal><operator pos:start="77:36" pos:end="77:36">)</operator></expr></argument>,

                <argument pos:start="79:17" pos:end="79:36"><expr pos:start="79:17" pos:end="79:36"><operator pos:start="79:17" pos:end="79:17">(</operator><operator pos:start="79:18" pos:end="79:18">(</operator><name pos:start="79:19" pos:end="79:21">tag</name> <operator pos:start="79:23" pos:end="79:24">&gt;&gt;</operator> <literal type="number" pos:start="79:26" pos:end="79:27">24</literal><operator pos:start="79:28" pos:end="79:28">)</operator> <operator pos:start="79:30" pos:end="79:30">&amp;</operator> <literal type="number" pos:start="79:32" pos:end="79:35">0xff</literal><operator pos:start="79:36" pos:end="79:36">)</operator></expr></argument>, <argument pos:start="79:39" pos:end="79:44"><expr pos:start="79:39" pos:end="79:44"><name pos:start="79:39" pos:end="79:44">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="81:9" pos:end="405:9">switch <condition pos:start="81:16" pos:end="81:20">(<expr pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:19">tag</name></expr>)</condition> <block pos:start="81:22" pos:end="405:9">{<block_content pos:start="83:9" pos:end="403:18">

        <case pos:start="83:9" pos:end="83:39">case <expr pos:start="83:14" pos:end="83:38"><call pos:start="83:14" pos:end="83:38"><name pos:start="83:14" pos:end="83:18">MKTAG</name><argument_list pos:start="83:19" pos:end="83:38">(<argument pos:start="83:20" pos:end="83:22"><expr pos:start="83:20" pos:end="83:22"><literal type="char" pos:start="83:20" pos:end="83:22">'I'</literal></expr></argument>, <argument pos:start="83:25" pos:end="83:27"><expr pos:start="83:25" pos:end="83:27"><literal type="char" pos:start="83:25" pos:end="83:27">'H'</literal></expr></argument>, <argument pos:start="83:30" pos:end="83:32"><expr pos:start="83:30" pos:end="83:32"><literal type="char" pos:start="83:30" pos:end="83:32">'D'</literal></expr></argument>, <argument pos:start="83:35" pos:end="83:37"><expr pos:start="83:35" pos:end="83:37"><literal type="char" pos:start="83:35" pos:end="83:37">'R'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="85:13" pos:end="87:26"><if pos:start="85:13" pos:end="87:26">if <condition pos:start="85:16" pos:end="85:29">(<expr pos:start="85:17" pos:end="85:28"><name pos:start="85:17" pos:end="85:22">length</name> <operator pos:start="85:24" pos:end="85:25">!=</operator> <literal type="number" pos:start="85:27" pos:end="85:28">13</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:26"><block_content pos:start="87:17" pos:end="87:26">

                <goto pos:start="87:17" pos:end="87:26">goto <name pos:start="87:22" pos:end="87:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:53"><expr pos:start="89:13" pos:end="89:52"><name pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:20">width</name></name>  <operator pos:start="89:23" pos:end="89:23">=</operator> <call pos:start="89:25" pos:end="89:52"><name pos:start="89:25" pos:end="89:44">bytestream2_get_be32</name><argument_list pos:start="89:45" pos:end="89:52">(<argument pos:start="89:46" pos:end="89:51"><expr pos:start="89:46" pos:end="89:51"><operator pos:start="89:46" pos:end="89:46">&amp;</operator><name pos:start="89:47" pos:end="89:51"><name pos:start="89:47" pos:end="89:47">s</name><operator pos:start="89:48" pos:end="89:49">-&gt;</operator><name pos:start="89:50" pos:end="89:51">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:53"><expr pos:start="91:13" pos:end="91:52"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:21">height</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <call pos:start="91:25" pos:end="91:52"><name pos:start="91:25" pos:end="91:44">bytestream2_get_be32</name><argument_list pos:start="91:45" pos:end="91:52">(<argument pos:start="91:46" pos:end="91:51"><expr pos:start="91:46" pos:end="91:51"><operator pos:start="91:46" pos:end="91:46">&amp;</operator><name pos:start="91:47" pos:end="91:51"><name pos:start="91:47" pos:end="91:47">s</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:51">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="99:13"><if pos:start="93:13" pos:end="99:13">if <condition pos:start="93:16" pos:end="93:67">(<expr pos:start="93:17" pos:end="93:66"><call pos:start="93:17" pos:end="93:66"><name pos:start="93:17" pos:end="93:35">av_image_check_size</name><argument_list pos:start="93:36" pos:end="93:66">(<argument pos:start="93:37" pos:end="93:44"><expr pos:start="93:37" pos:end="93:44"><name pos:start="93:37" pos:end="93:44"><name pos:start="93:37" pos:end="93:37">s</name><operator pos:start="93:38" pos:end="93:39">-&gt;</operator><name pos:start="93:40" pos:end="93:44">width</name></name></expr></argument>, <argument pos:start="93:47" pos:end="93:55"><expr pos:start="93:47" pos:end="93:55"><name pos:start="93:47" pos:end="93:55"><name pos:start="93:47" pos:end="93:47">s</name><operator pos:start="93:48" pos:end="93:49">-&gt;</operator><name pos:start="93:50" pos:end="93:55">height</name></name></expr></argument>, <argument pos:start="93:58" pos:end="93:58"><expr pos:start="93:58" pos:end="93:58"><literal type="number" pos:start="93:58" pos:end="93:58">0</literal></expr></argument>, <argument pos:start="93:61" pos:end="93:65"><expr pos:start="93:61" pos:end="93:65"><name pos:start="93:61" pos:end="93:65">avctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:69" pos:end="99:13">{<block_content pos:start="95:17" pos:end="97:26">

                <expr_stmt pos:start="95:17" pos:end="95:41"><expr pos:start="95:17" pos:end="95:40"><name pos:start="95:17" pos:end="95:24"><name pos:start="95:17" pos:end="95:17">s</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:24">width</name></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:36"><name pos:start="95:28" pos:end="95:28">s</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:36">height</name></name> <operator pos:start="95:38" pos:end="95:38">=</operator> <literal type="number" pos:start="95:40" pos:end="95:40">0</literal></expr>;</expr_stmt>

                <goto pos:start="97:17" pos:end="97:26">goto <name pos:start="97:22" pos:end="97:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:63"><expr pos:start="101:13" pos:end="101:62"><name pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:24">bit_depth</name></name>        <operator pos:start="101:33" pos:end="101:33">=</operator> <call pos:start="101:35" pos:end="101:62"><name pos:start="101:35" pos:end="101:54">bytestream2_get_byte</name><argument_list pos:start="101:55" pos:end="101:62">(<argument pos:start="101:56" pos:end="101:61"><expr pos:start="101:56" pos:end="101:61"><operator pos:start="101:56" pos:end="101:56">&amp;</operator><name pos:start="101:57" pos:end="101:61"><name pos:start="101:57" pos:end="101:57">s</name><operator pos:start="101:58" pos:end="101:59">-&gt;</operator><name pos:start="101:60" pos:end="101:61">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:63"><expr pos:start="103:13" pos:end="103:62"><name pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:25">color_type</name></name>       <operator pos:start="103:33" pos:end="103:33">=</operator> <call pos:start="103:35" pos:end="103:62"><name pos:start="103:35" pos:end="103:54">bytestream2_get_byte</name><argument_list pos:start="103:55" pos:end="103:62">(<argument pos:start="103:56" pos:end="103:61"><expr pos:start="103:56" pos:end="103:61"><operator pos:start="103:56" pos:end="103:56">&amp;</operator><name pos:start="103:57" pos:end="103:61"><name pos:start="103:57" pos:end="103:57">s</name><operator pos:start="103:58" pos:end="103:59">-&gt;</operator><name pos:start="103:60" pos:end="103:61">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:63"><expr pos:start="105:13" pos:end="105:62"><name pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:31">compression_type</name></name> <operator pos:start="105:33" pos:end="105:33">=</operator> <call pos:start="105:35" pos:end="105:62"><name pos:start="105:35" pos:end="105:54">bytestream2_get_byte</name><argument_list pos:start="105:55" pos:end="105:62">(<argument pos:start="105:56" pos:end="105:61"><expr pos:start="105:56" pos:end="105:61"><operator pos:start="105:56" pos:end="105:56">&amp;</operator><name pos:start="105:57" pos:end="105:61"><name pos:start="105:57" pos:end="105:57">s</name><operator pos:start="105:58" pos:end="105:59">-&gt;</operator><name pos:start="105:60" pos:end="105:61">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:63"><expr pos:start="107:13" pos:end="107:62"><name pos:start="107:13" pos:end="107:26"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:26">filter_type</name></name>      <operator pos:start="107:33" pos:end="107:33">=</operator> <call pos:start="107:35" pos:end="107:62"><name pos:start="107:35" pos:end="107:54">bytestream2_get_byte</name><argument_list pos:start="107:55" pos:end="107:62">(<argument pos:start="107:56" pos:end="107:61"><expr pos:start="107:56" pos:end="107:61"><operator pos:start="107:56" pos:end="107:56">&amp;</operator><name pos:start="107:57" pos:end="107:61"><name pos:start="107:57" pos:end="107:57">s</name><operator pos:start="107:58" pos:end="107:59">-&gt;</operator><name pos:start="107:60" pos:end="107:61">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:63"><expr pos:start="109:13" pos:end="109:62"><name pos:start="109:13" pos:end="109:29"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:29">interlace_type</name></name>   <operator pos:start="109:33" pos:end="109:33">=</operator> <call pos:start="109:35" pos:end="109:62"><name pos:start="109:35" pos:end="109:54">bytestream2_get_byte</name><argument_list pos:start="109:55" pos:end="109:62">(<argument pos:start="109:56" pos:end="109:61"><expr pos:start="109:56" pos:end="109:61"><operator pos:start="109:56" pos:end="109:56">&amp;</operator><name pos:start="109:57" pos:end="109:61"><name pos:start="109:57" pos:end="109:57">s</name><operator pos:start="109:58" pos:end="109:59">-&gt;</operator><name pos:start="109:60" pos:end="109:61">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:40"><expr pos:start="111:13" pos:end="111:39"><call pos:start="111:13" pos:end="111:39"><name pos:start="111:13" pos:end="111:28">bytestream2_skip</name><argument_list pos:start="111:29" pos:end="111:39">(<argument pos:start="111:30" pos:end="111:35"><expr pos:start="111:30" pos:end="111:35"><operator pos:start="111:30" pos:end="111:30">&amp;</operator><name pos:start="111:31" pos:end="111:35"><name pos:start="111:31" pos:end="111:31">s</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:35">gb</name></name></expr></argument>, <argument pos:start="111:38" pos:end="111:38"><expr pos:start="111:38" pos:end="111:38"><literal type="number" pos:start="111:38" pos:end="111:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="111:42" pos:end="111:50">/* crc */</comment>

            <expr_stmt pos:start="113:13" pos:end="113:33"><expr pos:start="113:13" pos:end="113:32"><name pos:start="113:13" pos:end="113:20"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:20">state</name></name> <operator pos:start="113:22" pos:end="113:23">|=</operator> <name pos:start="113:25" pos:end="113:32">PNG_IHDR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="121:76"><expr pos:start="115:13" pos:end="121:75"><call pos:start="115:13" pos:end="121:75"><name pos:start="115:13" pos:end="115:19">av_dlog</name><argument_list pos:start="115:20" pos:end="121:75">(<argument pos:start="115:21" pos:end="115:25"><expr pos:start="115:21" pos:end="115:25"><name pos:start="115:21" pos:end="115:25">avctx</name></expr></argument>, <argument pos:start="115:28" pos:end="117:83"><expr pos:start="115:28" pos:end="117:83"><literal type="string" pos:start="115:28" pos:end="115:71">"width=%d height=%d depth=%d color_type=%d "</literal>

                           <literal type="string" pos:start="117:28" pos:end="117:83">"compression_type=%d filter_type=%d interlace_type=%d\n"</literal></expr></argument>,

                    <argument pos:start="119:21" pos:end="119:28"><expr pos:start="119:21" pos:end="119:28"><name pos:start="119:21" pos:end="119:28"><name pos:start="119:21" pos:end="119:21">s</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:28">width</name></name></expr></argument>, <argument pos:start="119:31" pos:end="119:39"><expr pos:start="119:31" pos:end="119:39"><name pos:start="119:31" pos:end="119:39"><name pos:start="119:31" pos:end="119:31">s</name><operator pos:start="119:32" pos:end="119:33">-&gt;</operator><name pos:start="119:34" pos:end="119:39">height</name></name></expr></argument>, <argument pos:start="119:42" pos:end="119:53"><expr pos:start="119:42" pos:end="119:53"><name pos:start="119:42" pos:end="119:53"><name pos:start="119:42" pos:end="119:42">s</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:53">bit_depth</name></name></expr></argument>, <argument pos:start="119:56" pos:end="119:68"><expr pos:start="119:56" pos:end="119:68"><name pos:start="119:56" pos:end="119:68"><name pos:start="119:56" pos:end="119:56">s</name><operator pos:start="119:57" pos:end="119:58">-&gt;</operator><name pos:start="119:59" pos:end="119:68">color_type</name></name></expr></argument>,

                    <argument pos:start="121:21" pos:end="121:39"><expr pos:start="121:21" pos:end="121:39"><name pos:start="121:21" pos:end="121:39"><name pos:start="121:21" pos:end="121:21">s</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:39">compression_type</name></name></expr></argument>, <argument pos:start="121:42" pos:end="121:55"><expr pos:start="121:42" pos:end="121:55"><name pos:start="121:42" pos:end="121:55"><name pos:start="121:42" pos:end="121:42">s</name><operator pos:start="121:43" pos:end="121:44">-&gt;</operator><name pos:start="121:45" pos:end="121:55">filter_type</name></name></expr></argument>, <argument pos:start="121:58" pos:end="121:74"><expr pos:start="121:58" pos:end="121:74"><name pos:start="121:58" pos:end="121:74"><name pos:start="121:58" pos:end="121:58">s</name><operator pos:start="121:59" pos:end="121:60">-&gt;</operator><name pos:start="121:61" pos:end="121:74">interlace_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        <case pos:start="125:9" pos:end="125:39">case <expr pos:start="125:14" pos:end="125:38"><call pos:start="125:14" pos:end="125:38"><name pos:start="125:14" pos:end="125:18">MKTAG</name><argument_list pos:start="125:19" pos:end="125:38">(<argument pos:start="125:20" pos:end="125:22"><expr pos:start="125:20" pos:end="125:22"><literal type="char" pos:start="125:20" pos:end="125:22">'I'</literal></expr></argument>, <argument pos:start="125:25" pos:end="125:27"><expr pos:start="125:25" pos:end="125:27"><literal type="char" pos:start="125:25" pos:end="125:27">'D'</literal></expr></argument>, <argument pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><literal type="char" pos:start="125:30" pos:end="125:32">'A'</literal></expr></argument>, <argument pos:start="125:35" pos:end="125:37"><expr pos:start="125:35" pos:end="125:37"><literal type="char" pos:start="125:35" pos:end="125:37">'T'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="127:13" pos:end="129:26"><if pos:start="127:13" pos:end="129:26">if <condition pos:start="127:16" pos:end="127:39">(<expr pos:start="127:17" pos:end="127:38"><operator pos:start="127:17" pos:end="127:17">!</operator><operator pos:start="127:18" pos:end="127:18">(</operator><name pos:start="127:19" pos:end="127:26"><name pos:start="127:19" pos:end="127:19">s</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:26">state</name></name> <operator pos:start="127:28" pos:end="127:28">&amp;</operator> <name pos:start="127:30" pos:end="127:37">PNG_IHDR</name><operator pos:start="127:38" pos:end="127:38">)</operator></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:26"><block_content pos:start="129:17" pos:end="129:26">

                <goto pos:start="129:17" pos:end="129:26">goto <name pos:start="129:22" pos:end="129:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="131:13" pos:end="301:13"><if pos:start="131:13" pos:end="301:13">if <condition pos:start="131:16" pos:end="131:39">(<expr pos:start="131:17" pos:end="131:38"><operator pos:start="131:17" pos:end="131:17">!</operator><operator pos:start="131:18" pos:end="131:18">(</operator><name pos:start="131:19" pos:end="131:26"><name pos:start="131:19" pos:end="131:19">s</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:26">state</name></name> <operator pos:start="131:28" pos:end="131:28">&amp;</operator> <name pos:start="131:30" pos:end="131:37">PNG_IDAT</name><operator pos:start="131:38" pos:end="131:38">)</operator></expr>)</condition> <block pos:start="131:41" pos:end="301:13">{<block_content pos:start="135:17" pos:end="299:51">

                <comment type="block" pos:start="133:17" pos:end="133:37">/* init image info */</comment>

                <expr_stmt pos:start="135:17" pos:end="135:41"><expr pos:start="135:17" pos:end="135:40"><name pos:start="135:17" pos:end="135:28"><name pos:start="135:17" pos:end="135:21">avctx</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:28">width</name></name>  <operator pos:start="135:31" pos:end="135:31">=</operator> <name pos:start="135:33" pos:end="135:40"><name pos:start="135:33" pos:end="135:33">s</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:40">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:42"><expr pos:start="137:17" pos:end="137:41"><name pos:start="137:17" pos:end="137:29"><name pos:start="137:17" pos:end="137:21">avctx</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:29">height</name></name> <operator pos:start="137:31" pos:end="137:31">=</operator> <name pos:start="137:33" pos:end="137:41"><name pos:start="137:33" pos:end="137:33">s</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:41">height</name></name></expr>;</expr_stmt>



                <expr_stmt pos:start="141:17" pos:end="141:74"><expr pos:start="141:17" pos:end="141:73"><name pos:start="141:17" pos:end="141:27"><name pos:start="141:17" pos:end="141:17">s</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:27">channels</name></name>       <operator pos:start="141:35" pos:end="141:35">=</operator> <call pos:start="141:37" pos:end="141:73"><name pos:start="141:37" pos:end="141:58">ff_png_get_nb_channels</name><argument_list pos:start="141:59" pos:end="141:73">(<argument pos:start="141:60" pos:end="141:72"><expr pos:start="141:60" pos:end="141:72"><name pos:start="141:60" pos:end="141:72"><name pos:start="141:60" pos:end="141:60">s</name><operator pos:start="141:61" pos:end="141:62">-&gt;</operator><name pos:start="141:63" pos:end="141:72">color_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:63"><expr pos:start="143:17" pos:end="143:62"><name pos:start="143:17" pos:end="143:33"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:33">bits_per_pixel</name></name> <operator pos:start="143:35" pos:end="143:35">=</operator> <name pos:start="143:37" pos:end="143:48"><name pos:start="143:37" pos:end="143:37">s</name><operator pos:start="143:38" pos:end="143:39">-&gt;</operator><name pos:start="143:40" pos:end="143:48">bit_depth</name></name> <operator pos:start="143:50" pos:end="143:50">*</operator> <name pos:start="143:52" pos:end="143:62"><name pos:start="143:52" pos:end="143:52">s</name><operator pos:start="143:53" pos:end="143:54">-&gt;</operator><name pos:start="143:55" pos:end="143:62">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:65"><expr pos:start="145:17" pos:end="145:64"><name pos:start="145:17" pos:end="145:22"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:22">bpp</name></name>            <operator pos:start="145:35" pos:end="145:35">=</operator> <operator pos:start="145:37" pos:end="145:37">(</operator><name pos:start="145:38" pos:end="145:54"><name pos:start="145:38" pos:end="145:38">s</name><operator pos:start="145:39" pos:end="145:40">-&gt;</operator><name pos:start="145:41" pos:end="145:54">bits_per_pixel</name></name> <operator pos:start="145:56" pos:end="145:56">+</operator> <literal type="number" pos:start="145:58" pos:end="145:58">7</literal><operator pos:start="145:59" pos:end="145:59">)</operator> <operator pos:start="145:61" pos:end="145:62">&gt;&gt;</operator> <literal type="number" pos:start="145:64" pos:end="145:64">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:80"><expr pos:start="147:17" pos:end="147:79"><name pos:start="147:17" pos:end="147:27"><name pos:start="147:17" pos:end="147:17">s</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:27">row_size</name></name>       <operator pos:start="147:35" pos:end="147:35">=</operator> <operator pos:start="147:37" pos:end="147:37">(</operator><name pos:start="147:38" pos:end="147:49"><name pos:start="147:38" pos:end="147:42">avctx</name><operator pos:start="147:43" pos:end="147:44">-&gt;</operator><name pos:start="147:45" pos:end="147:49">width</name></name> <operator pos:start="147:51" pos:end="147:51">*</operator> <name pos:start="147:53" pos:end="147:69"><name pos:start="147:53" pos:end="147:53">s</name><operator pos:start="147:54" pos:end="147:55">-&gt;</operator><name pos:start="147:56" pos:end="147:69">bits_per_pixel</name></name> <operator pos:start="147:71" pos:end="147:71">+</operator> <literal type="number" pos:start="147:73" pos:end="147:73">7</literal><operator pos:start="147:74" pos:end="147:74">)</operator> <operator pos:start="147:76" pos:end="147:77">&gt;&gt;</operator> <literal type="number" pos:start="147:79" pos:end="147:79">3</literal></expr>;</expr_stmt>



                <if_stmt pos:start="151:17" pos:end="209:17"><if pos:start="151:17" pos:end="157:17">if <condition pos:start="151:20" pos:end="153:56">(<expr pos:start="151:21" pos:end="153:55"><name pos:start="151:21" pos:end="151:32"><name pos:start="151:21" pos:end="151:21">s</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:32">bit_depth</name></name> <operator pos:start="151:34" pos:end="151:35">==</operator> <literal type="number" pos:start="151:37" pos:end="151:37">8</literal> <operator pos:start="151:39" pos:end="151:40">&amp;&amp;</operator>

                    <name pos:start="153:21" pos:end="153:33"><name pos:start="153:21" pos:end="153:21">s</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:33">color_type</name></name> <operator pos:start="153:35" pos:end="153:36">==</operator> <name pos:start="153:38" pos:end="153:55">PNG_COLOR_TYPE_RGB</name></expr>)</condition> <block pos:start="153:58" pos:end="157:17">{<block_content pos:start="155:21" pos:end="155:54">

                    <expr_stmt pos:start="155:21" pos:end="155:54"><expr pos:start="155:21" pos:end="155:53"><name pos:start="155:21" pos:end="155:34"><name pos:start="155:21" pos:end="155:25">avctx</name><operator pos:start="155:26" pos:end="155:27">-&gt;</operator><name pos:start="155:28" pos:end="155:34">pix_fmt</name></name> <operator pos:start="155:36" pos:end="155:36">=</operator> <name pos:start="155:38" pos:end="155:53">AV_PIX_FMT_RGB24</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="157:19" pos:end="163:17">else if <condition pos:start="157:27" pos:end="159:69">(<expr pos:start="157:28" pos:end="159:68"><name pos:start="157:28" pos:end="157:39"><name pos:start="157:28" pos:end="157:28">s</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:39">bit_depth</name></name> <operator pos:start="157:41" pos:end="157:42">==</operator> <literal type="number" pos:start="157:44" pos:end="157:44">8</literal> <operator pos:start="157:46" pos:end="157:47">&amp;&amp;</operator>

                           <name pos:start="159:28" pos:end="159:40"><name pos:start="159:28" pos:end="159:28">s</name><operator pos:start="159:29" pos:end="159:30">-&gt;</operator><name pos:start="159:31" pos:end="159:40">color_type</name></name> <operator pos:start="159:42" pos:end="159:43">==</operator> <name pos:start="159:45" pos:end="159:68">PNG_COLOR_TYPE_RGB_ALPHA</name></expr>)</condition> <block pos:start="159:71" pos:end="163:17">{<block_content pos:start="161:21" pos:end="161:54">

                    <expr_stmt pos:start="161:21" pos:end="161:54"><expr pos:start="161:21" pos:end="161:53"><name pos:start="161:21" pos:end="161:34"><name pos:start="161:21" pos:end="161:25">avctx</name><operator pos:start="161:26" pos:end="161:27">-&gt;</operator><name pos:start="161:28" pos:end="161:34">pix_fmt</name></name> <operator pos:start="161:36" pos:end="161:36">=</operator> <name pos:start="161:38" pos:end="161:53">AV_PIX_FMT_RGB32</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="163:19" pos:end="169:17">else if <condition pos:start="163:27" pos:end="165:64">(<expr pos:start="163:28" pos:end="165:63"><name pos:start="163:28" pos:end="163:39"><name pos:start="163:28" pos:end="163:28">s</name><operator pos:start="163:29" pos:end="163:30">-&gt;</operator><name pos:start="163:31" pos:end="163:39">bit_depth</name></name> <operator pos:start="163:41" pos:end="163:42">==</operator> <literal type="number" pos:start="163:44" pos:end="163:44">8</literal> <operator pos:start="163:46" pos:end="163:47">&amp;&amp;</operator>

                           <name pos:start="165:28" pos:end="165:40"><name pos:start="165:28" pos:end="165:28">s</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:40">color_type</name></name> <operator pos:start="165:42" pos:end="165:43">==</operator> <name pos:start="165:45" pos:end="165:63">PNG_COLOR_TYPE_GRAY</name></expr>)</condition> <block pos:start="165:66" pos:end="169:17">{<block_content pos:start="167:21" pos:end="167:54">

                    <expr_stmt pos:start="167:21" pos:end="167:54"><expr pos:start="167:21" pos:end="167:53"><name pos:start="167:21" pos:end="167:34"><name pos:start="167:21" pos:end="167:25">avctx</name><operator pos:start="167:26" pos:end="167:27">-&gt;</operator><name pos:start="167:28" pos:end="167:34">pix_fmt</name></name> <operator pos:start="167:36" pos:end="167:36">=</operator> <name pos:start="167:38" pos:end="167:53">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="169:19" pos:end="175:17">else if <condition pos:start="169:27" pos:end="171:64">(<expr pos:start="169:28" pos:end="171:63"><name pos:start="169:28" pos:end="169:39"><name pos:start="169:28" pos:end="169:28">s</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:39">bit_depth</name></name> <operator pos:start="169:41" pos:end="169:42">==</operator> <literal type="number" pos:start="169:44" pos:end="169:45">16</literal> <operator pos:start="169:47" pos:end="169:48">&amp;&amp;</operator>

                           <name pos:start="171:28" pos:end="171:40"><name pos:start="171:28" pos:end="171:28">s</name><operator pos:start="171:29" pos:end="171:30">-&gt;</operator><name pos:start="171:31" pos:end="171:40">color_type</name></name> <operator pos:start="171:42" pos:end="171:43">==</operator> <name pos:start="171:45" pos:end="171:63">PNG_COLOR_TYPE_GRAY</name></expr>)</condition> <block pos:start="171:66" pos:end="175:17">{<block_content pos:start="173:21" pos:end="173:57">

                    <expr_stmt pos:start="173:21" pos:end="173:57"><expr pos:start="173:21" pos:end="173:56"><name pos:start="173:21" pos:end="173:34"><name pos:start="173:21" pos:end="173:25">avctx</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:34">pix_fmt</name></name> <operator pos:start="173:36" pos:end="173:36">=</operator> <name pos:start="173:38" pos:end="173:56">AV_PIX_FMT_GRAY16BE</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="175:19" pos:end="181:17">else if <condition pos:start="175:27" pos:end="177:63">(<expr pos:start="175:28" pos:end="177:62"><name pos:start="175:28" pos:end="175:39"><name pos:start="175:28" pos:end="175:28">s</name><operator pos:start="175:29" pos:end="175:30">-&gt;</operator><name pos:start="175:31" pos:end="175:39">bit_depth</name></name> <operator pos:start="175:41" pos:end="175:42">==</operator> <literal type="number" pos:start="175:44" pos:end="175:45">16</literal> <operator pos:start="175:47" pos:end="175:48">&amp;&amp;</operator>

                           <name pos:start="177:28" pos:end="177:40"><name pos:start="177:28" pos:end="177:28">s</name><operator pos:start="177:29" pos:end="177:30">-&gt;</operator><name pos:start="177:31" pos:end="177:40">color_type</name></name> <operator pos:start="177:42" pos:end="177:43">==</operator> <name pos:start="177:45" pos:end="177:62">PNG_COLOR_TYPE_RGB</name></expr>)</condition> <block pos:start="177:65" pos:end="181:17">{<block_content pos:start="179:21" pos:end="179:56">

                    <expr_stmt pos:start="179:21" pos:end="179:56"><expr pos:start="179:21" pos:end="179:55"><name pos:start="179:21" pos:end="179:34"><name pos:start="179:21" pos:end="179:25">avctx</name><operator pos:start="179:26" pos:end="179:27">-&gt;</operator><name pos:start="179:28" pos:end="179:34">pix_fmt</name></name> <operator pos:start="179:36" pos:end="179:36">=</operator> <name pos:start="179:38" pos:end="179:55">AV_PIX_FMT_RGB48BE</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="181:19" pos:end="187:17">else if <condition pos:start="181:27" pos:end="183:64">(<expr pos:start="181:28" pos:end="183:63"><name pos:start="181:28" pos:end="181:39"><name pos:start="181:28" pos:end="181:28">s</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:39">bit_depth</name></name> <operator pos:start="181:41" pos:end="181:42">==</operator> <literal type="number" pos:start="181:44" pos:end="181:44">1</literal> <operator pos:start="181:46" pos:end="181:47">&amp;&amp;</operator>

                           <name pos:start="183:28" pos:end="183:40"><name pos:start="183:28" pos:end="183:28">s</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:40">color_type</name></name> <operator pos:start="183:42" pos:end="183:43">==</operator> <name pos:start="183:45" pos:end="183:63">PNG_COLOR_TYPE_GRAY</name></expr>)</condition> <block pos:start="183:66" pos:end="187:17">{<block_content pos:start="185:21" pos:end="185:58">

                    <expr_stmt pos:start="185:21" pos:end="185:58"><expr pos:start="185:21" pos:end="185:57"><name pos:start="185:21" pos:end="185:34"><name pos:start="185:21" pos:end="185:25">avctx</name><operator pos:start="185:26" pos:end="185:27">-&gt;</operator><name pos:start="185:28" pos:end="185:34">pix_fmt</name></name> <operator pos:start="185:36" pos:end="185:36">=</operator> <name pos:start="185:38" pos:end="185:57">AV_PIX_FMT_MONOBLACK</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="187:19" pos:end="193:17">else if <condition pos:start="187:27" pos:end="189:67">(<expr pos:start="187:28" pos:end="189:66"><name pos:start="187:28" pos:end="187:39"><name pos:start="187:28" pos:end="187:28">s</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:39">bit_depth</name></name> <operator pos:start="187:41" pos:end="187:42">==</operator> <literal type="number" pos:start="187:44" pos:end="187:44">8</literal> <operator pos:start="187:46" pos:end="187:47">&amp;&amp;</operator>

                           <name pos:start="189:28" pos:end="189:40"><name pos:start="189:28" pos:end="189:28">s</name><operator pos:start="189:29" pos:end="189:30">-&gt;</operator><name pos:start="189:31" pos:end="189:40">color_type</name></name> <operator pos:start="189:42" pos:end="189:43">==</operator> <name pos:start="189:45" pos:end="189:66">PNG_COLOR_TYPE_PALETTE</name></expr>)</condition> <block pos:start="189:69" pos:end="193:17">{<block_content pos:start="191:21" pos:end="191:53">

                    <expr_stmt pos:start="191:21" pos:end="191:53"><expr pos:start="191:21" pos:end="191:52"><name pos:start="191:21" pos:end="191:34"><name pos:start="191:21" pos:end="191:25">avctx</name><operator pos:start="191:26" pos:end="191:27">-&gt;</operator><name pos:start="191:28" pos:end="191:34">pix_fmt</name></name> <operator pos:start="191:36" pos:end="191:36">=</operator> <name pos:start="191:38" pos:end="191:52">AV_PIX_FMT_PAL8</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="193:19" pos:end="199:17">else if <condition pos:start="193:27" pos:end="195:70">(<expr pos:start="193:28" pos:end="195:69"><name pos:start="193:28" pos:end="193:39"><name pos:start="193:28" pos:end="193:28">s</name><operator pos:start="193:29" pos:end="193:30">-&gt;</operator><name pos:start="193:31" pos:end="193:39">bit_depth</name></name> <operator pos:start="193:41" pos:end="193:42">==</operator> <literal type="number" pos:start="193:44" pos:end="193:44">8</literal> <operator pos:start="193:46" pos:end="193:47">&amp;&amp;</operator>

                           <name pos:start="195:28" pos:end="195:40"><name pos:start="195:28" pos:end="195:28">s</name><operator pos:start="195:29" pos:end="195:30">-&gt;</operator><name pos:start="195:31" pos:end="195:40">color_type</name></name> <operator pos:start="195:42" pos:end="195:43">==</operator> <name pos:start="195:45" pos:end="195:69">PNG_COLOR_TYPE_GRAY_ALPHA</name></expr>)</condition> <block pos:start="195:72" pos:end="199:17">{<block_content pos:start="197:21" pos:end="197:52">

                    <expr_stmt pos:start="197:21" pos:end="197:52"><expr pos:start="197:21" pos:end="197:51"><name pos:start="197:21" pos:end="197:34"><name pos:start="197:21" pos:end="197:25">avctx</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:34">pix_fmt</name></name> <operator pos:start="197:36" pos:end="197:36">=</operator> <name pos:start="197:38" pos:end="197:51">AV_PIX_FMT_YA8</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="199:19" pos:end="205:17">else if <condition pos:start="199:27" pos:end="201:70">(<expr pos:start="199:28" pos:end="201:69"><name pos:start="199:28" pos:end="199:39"><name pos:start="199:28" pos:end="199:28">s</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:39">bit_depth</name></name> <operator pos:start="199:41" pos:end="199:42">==</operator> <literal type="number" pos:start="199:44" pos:end="199:45">16</literal> <operator pos:start="199:47" pos:end="199:48">&amp;&amp;</operator>

                           <name pos:start="201:28" pos:end="201:40"><name pos:start="201:28" pos:end="201:28">s</name><operator pos:start="201:29" pos:end="201:30">-&gt;</operator><name pos:start="201:31" pos:end="201:40">color_type</name></name> <operator pos:start="201:42" pos:end="201:43">==</operator> <name pos:start="201:45" pos:end="201:69">PNG_COLOR_TYPE_GRAY_ALPHA</name></expr>)</condition> <block pos:start="201:72" pos:end="205:17">{<block_content pos:start="203:21" pos:end="203:55">

                    <expr_stmt pos:start="203:21" pos:end="203:55"><expr pos:start="203:21" pos:end="203:54"><name pos:start="203:21" pos:end="203:34"><name pos:start="203:21" pos:end="203:25">avctx</name><operator pos:start="203:26" pos:end="203:27">-&gt;</operator><name pos:start="203:28" pos:end="203:34">pix_fmt</name></name> <operator pos:start="203:36" pos:end="203:36">=</operator> <name pos:start="203:38" pos:end="203:54">AV_PIX_FMT_YA16BE</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="205:19" pos:end="209:17">else <block pos:start="205:24" pos:end="209:17">{<block_content pos:start="207:21" pos:end="207:30">

                    <goto pos:start="207:21" pos:end="207:30">goto <name pos:start="207:26" pos:end="207:29">fail</name>;</goto>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="213:17" pos:end="219:17"><if pos:start="213:17" pos:end="219:17">if <condition pos:start="213:20" pos:end="213:72">(<expr pos:start="213:21" pos:end="213:71"><call pos:start="213:21" pos:end="213:67"><name pos:start="213:21" pos:end="213:33">ff_get_buffer</name><argument_list pos:start="213:34" pos:end="213:67">(<argument pos:start="213:35" pos:end="213:39"><expr pos:start="213:35" pos:end="213:39"><name pos:start="213:35" pos:end="213:39">avctx</name></expr></argument>, <argument pos:start="213:42" pos:end="213:42"><expr pos:start="213:42" pos:end="213:42"><name pos:start="213:42" pos:end="213:42">p</name></expr></argument>, <argument pos:start="213:45" pos:end="213:66"><expr pos:start="213:45" pos:end="213:66"><name pos:start="213:45" pos:end="213:66">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call> <operator pos:start="213:69" pos:end="213:69">&lt;</operator> <literal type="number" pos:start="213:71" pos:end="213:71">0</literal></expr>)</condition> <block pos:start="213:74" pos:end="219:17">{<block_content pos:start="215:21" pos:end="217:30">

                    <expr_stmt pos:start="215:21" pos:end="215:73"><expr pos:start="215:21" pos:end="215:72"><call pos:start="215:21" pos:end="215:72"><name pos:start="215:21" pos:end="215:26">av_log</name><argument_list pos:start="215:27" pos:end="215:72">(<argument pos:start="215:28" pos:end="215:32"><expr pos:start="215:28" pos:end="215:32"><name pos:start="215:28" pos:end="215:32">avctx</name></expr></argument>, <argument pos:start="215:35" pos:end="215:46"><expr pos:start="215:35" pos:end="215:46"><name pos:start="215:35" pos:end="215:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="215:49" pos:end="215:71"><expr pos:start="215:49" pos:end="215:71"><literal type="string" pos:start="215:49" pos:end="215:71">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="217:21" pos:end="217:30">goto <name pos:start="217:26" pos:end="217:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:56"><expr pos:start="221:17" pos:end="221:55"><name pos:start="221:17" pos:end="221:28"><name pos:start="221:17" pos:end="221:17">p</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:28">pict_type</name></name>        <operator pos:start="221:37" pos:end="221:37">=</operator> <name pos:start="221:39" pos:end="221:55">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:40"><expr pos:start="223:17" pos:end="223:39"><name pos:start="223:17" pos:end="223:28"><name pos:start="223:17" pos:end="223:17">p</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:28">key_frame</name></name>        <operator pos:start="223:37" pos:end="223:37">=</operator> <literal type="number" pos:start="223:39" pos:end="223:39">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:58"><expr pos:start="225:17" pos:end="225:57"><name pos:start="225:17" pos:end="225:35"><name pos:start="225:17" pos:end="225:17">p</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:35">interlaced_frame</name></name> <operator pos:start="225:37" pos:end="225:37">=</operator> <operator pos:start="225:39" pos:end="225:39">!</operator><operator pos:start="225:40" pos:end="225:40">!</operator><name pos:start="225:41" pos:end="225:57"><name pos:start="225:41" pos:end="225:41">s</name><operator pos:start="225:42" pos:end="225:43">-&gt;</operator><name pos:start="225:44" pos:end="225:57">interlace_type</name></name></expr>;</expr_stmt>



                <comment type="block" pos:start="229:17" pos:end="229:53">/* compute the compressed row size */</comment>

                <if_stmt pos:start="231:17" pos:end="247:17"><if pos:start="231:17" pos:end="235:17">if <condition pos:start="231:20" pos:end="231:39">(<expr pos:start="231:21" pos:end="231:38"><operator pos:start="231:21" pos:end="231:21">!</operator><name pos:start="231:22" pos:end="231:38"><name pos:start="231:22" pos:end="231:22">s</name><operator pos:start="231:23" pos:end="231:24">-&gt;</operator><name pos:start="231:25" pos:end="231:38">interlace_type</name></name></expr>)</condition> <block pos:start="231:41" pos:end="235:17">{<block_content pos:start="233:21" pos:end="233:51">

                    <expr_stmt pos:start="233:21" pos:end="233:51"><expr pos:start="233:21" pos:end="233:50"><name pos:start="233:21" pos:end="233:32"><name pos:start="233:21" pos:end="233:21">s</name><operator pos:start="233:22" pos:end="233:23">-&gt;</operator><name pos:start="233:24" pos:end="233:32">crow_size</name></name> <operator pos:start="233:34" pos:end="233:34">=</operator> <name pos:start="233:36" pos:end="233:46"><name pos:start="233:36" pos:end="233:36">s</name><operator pos:start="233:37" pos:end="233:38">-&gt;</operator><name pos:start="233:39" pos:end="233:46">row_size</name></name> <operator pos:start="233:48" pos:end="233:48">+</operator> <literal type="number" pos:start="233:50" pos:end="233:50">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="235:19" pos:end="247:17">else <block pos:start="235:24" pos:end="247:17">{<block_content pos:start="237:21" pos:end="245:56">

                    <expr_stmt pos:start="237:21" pos:end="237:41"><expr pos:start="237:21" pos:end="237:40"><name pos:start="237:21" pos:end="237:27"><name pos:start="237:21" pos:end="237:21">s</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:27">pass</name></name>          <operator pos:start="237:38" pos:end="237:38">=</operator> <literal type="number" pos:start="237:40" pos:end="237:40">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="239:21" pos:end="243:70"><expr pos:start="239:21" pos:end="243:69"><name pos:start="239:21" pos:end="239:36"><name pos:start="239:21" pos:end="239:21">s</name><operator pos:start="239:22" pos:end="239:23">-&gt;</operator><name pos:start="239:24" pos:end="239:36">pass_row_size</name></name> <operator pos:start="239:38" pos:end="239:38">=</operator> <call pos:start="239:40" pos:end="243:69"><name pos:start="239:40" pos:end="239:59">ff_png_pass_row_size</name><argument_list pos:start="239:60" pos:end="243:69">(<argument pos:start="239:61" pos:end="239:67"><expr pos:start="239:61" pos:end="239:67"><name pos:start="239:61" pos:end="239:67"><name pos:start="239:61" pos:end="239:61">s</name><operator pos:start="239:62" pos:end="239:63">-&gt;</operator><name pos:start="239:64" pos:end="239:67">pass</name></name></expr></argument>,

                                                            <argument pos:start="241:61" pos:end="241:77"><expr pos:start="241:61" pos:end="241:77"><name pos:start="241:61" pos:end="241:77"><name pos:start="241:61" pos:end="241:61">s</name><operator pos:start="241:62" pos:end="241:63">-&gt;</operator><name pos:start="241:64" pos:end="241:77">bits_per_pixel</name></name></expr></argument>,

                                                            <argument pos:start="243:61" pos:end="243:68"><expr pos:start="243:61" pos:end="243:68"><name pos:start="243:61" pos:end="243:68"><name pos:start="243:61" pos:end="243:61">s</name><operator pos:start="243:62" pos:end="243:63">-&gt;</operator><name pos:start="243:64" pos:end="243:68">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="245:21" pos:end="245:56"><expr pos:start="245:21" pos:end="245:55"><name pos:start="245:21" pos:end="245:32"><name pos:start="245:21" pos:end="245:21">s</name><operator pos:start="245:22" pos:end="245:23">-&gt;</operator><name pos:start="245:24" pos:end="245:32">crow_size</name></name> <operator pos:start="245:34" pos:end="245:34">=</operator> <name pos:start="245:36" pos:end="245:51"><name pos:start="245:36" pos:end="245:36">s</name><operator pos:start="245:37" pos:end="245:38">-&gt;</operator><name pos:start="245:39" pos:end="245:51">pass_row_size</name></name> <operator pos:start="245:53" pos:end="245:53">+</operator> <literal type="number" pos:start="245:55" pos:end="245:55">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="249:17" pos:end="251:51"><expr pos:start="249:17" pos:end="251:50"><call pos:start="249:17" pos:end="251:50"><name pos:start="249:17" pos:end="249:23">av_dlog</name><argument_list pos:start="249:24" pos:end="251:50">(<argument pos:start="249:25" pos:end="249:29"><expr pos:start="249:25" pos:end="249:29"><name pos:start="249:25" pos:end="249:29">avctx</name></expr></argument>, <argument pos:start="249:32" pos:end="249:60"><expr pos:start="249:32" pos:end="249:60"><literal type="string" pos:start="249:32" pos:end="249:60">"row_size=%d crow_size =%d\n"</literal></expr></argument>,

                        <argument pos:start="251:25" pos:end="251:35"><expr pos:start="251:25" pos:end="251:35"><name pos:start="251:25" pos:end="251:35"><name pos:start="251:25" pos:end="251:25">s</name><operator pos:start="251:26" pos:end="251:27">-&gt;</operator><name pos:start="251:28" pos:end="251:35">row_size</name></name></expr></argument>, <argument pos:start="251:38" pos:end="251:49"><expr pos:start="251:38" pos:end="251:49"><name pos:start="251:38" pos:end="251:49"><name pos:start="251:38" pos:end="251:38">s</name><operator pos:start="251:39" pos:end="251:40">-&gt;</operator><name pos:start="251:41" pos:end="251:49">crow_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:47"><expr pos:start="253:17" pos:end="253:46"><name pos:start="253:17" pos:end="253:28"><name pos:start="253:17" pos:end="253:17">s</name><operator pos:start="253:18" pos:end="253:19">-&gt;</operator><name pos:start="253:20" pos:end="253:28">image_buf</name></name>      <operator pos:start="253:35" pos:end="253:35">=</operator> <name pos:start="253:37" pos:end="253:46"><name pos:start="253:37" pos:end="253:37">p</name><operator pos:start="253:38" pos:end="253:39">-&gt;</operator><name pos:start="253:40" pos:end="253:43">data</name><index pos:start="253:44" pos:end="253:46">[<expr pos:start="253:45" pos:end="253:45"><literal type="number" pos:start="253:45" pos:end="253:45">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:51"><expr pos:start="255:17" pos:end="255:50"><name pos:start="255:17" pos:end="255:33"><name pos:start="255:17" pos:end="255:17">s</name><operator pos:start="255:18" pos:end="255:19">-&gt;</operator><name pos:start="255:20" pos:end="255:33">image_linesize</name></name> <operator pos:start="255:35" pos:end="255:35">=</operator> <name pos:start="255:37" pos:end="255:50"><name pos:start="255:37" pos:end="255:37">p</name><operator pos:start="255:38" pos:end="255:39">-&gt;</operator><name pos:start="255:40" pos:end="255:47">linesize</name><index pos:start="255:48" pos:end="255:50">[<expr pos:start="255:49" pos:end="255:49"><literal type="number" pos:start="255:49" pos:end="255:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <comment type="block" pos:start="257:17" pos:end="257:48">/* copy the palette if needed */</comment>

                <if_stmt pos:start="259:17" pos:end="261:75"><if pos:start="259:17" pos:end="261:75">if <condition pos:start="259:20" pos:end="259:60">(<expr pos:start="259:21" pos:end="259:59"><name pos:start="259:21" pos:end="259:33"><name pos:start="259:21" pos:end="259:21">s</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:33">color_type</name></name> <operator pos:start="259:35" pos:end="259:36">==</operator> <name pos:start="259:38" pos:end="259:59">PNG_COLOR_TYPE_PALETTE</name></expr>)</condition><block type="pseudo" pos:start="261:21" pos:end="261:75"><block_content pos:start="261:21" pos:end="261:75">

                    <expr_stmt pos:start="261:21" pos:end="261:75"><expr pos:start="261:21" pos:end="261:74"><call pos:start="261:21" pos:end="261:74"><name pos:start="261:21" pos:end="261:26">memcpy</name><argument_list pos:start="261:27" pos:end="261:74">(<argument pos:start="261:28" pos:end="261:37"><expr pos:start="261:28" pos:end="261:37"><name pos:start="261:28" pos:end="261:37"><name pos:start="261:28" pos:end="261:28">p</name><operator pos:start="261:29" pos:end="261:30">-&gt;</operator><name pos:start="261:31" pos:end="261:34">data</name><index pos:start="261:35" pos:end="261:37">[<expr pos:start="261:36" pos:end="261:36"><literal type="number" pos:start="261:36" pos:end="261:36">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="261:40" pos:end="261:49"><expr pos:start="261:40" pos:end="261:49"><name pos:start="261:40" pos:end="261:49"><name pos:start="261:40" pos:end="261:40">s</name><operator pos:start="261:41" pos:end="261:42">-&gt;</operator><name pos:start="261:43" pos:end="261:49">palette</name></name></expr></argument>, <argument pos:start="261:52" pos:end="261:73"><expr pos:start="261:52" pos:end="261:73"><literal type="number" pos:start="261:52" pos:end="261:54">256</literal> <operator pos:start="261:56" pos:end="261:56">*</operator> <sizeof pos:start="261:58" pos:end="261:73">sizeof<argument_list pos:start="261:64" pos:end="261:73">(<argument pos:start="261:65" pos:end="261:72"><expr pos:start="261:65" pos:end="261:72"><name pos:start="261:65" pos:end="261:72">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <comment type="block" pos:start="263:17" pos:end="263:72">/* empty row is used if differencing to the first row */</comment>

                <expr_stmt pos:start="265:17" pos:end="265:54"><expr pos:start="265:17" pos:end="265:53"><name pos:start="265:17" pos:end="265:27"><name pos:start="265:17" pos:end="265:17">s</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:27">last_row</name></name> <operator pos:start="265:29" pos:end="265:29">=</operator> <call pos:start="265:31" pos:end="265:53"><name pos:start="265:31" pos:end="265:40">av_mallocz</name><argument_list pos:start="265:41" pos:end="265:53">(<argument pos:start="265:42" pos:end="265:52"><expr pos:start="265:42" pos:end="265:52"><name pos:start="265:42" pos:end="265:52"><name pos:start="265:42" pos:end="265:42">s</name><operator pos:start="265:43" pos:end="265:44">-&gt;</operator><name pos:start="265:45" pos:end="265:52">row_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="267:17" pos:end="269:30"><if pos:start="267:17" pos:end="269:30">if <condition pos:start="267:20" pos:end="267:33">(<expr pos:start="267:21" pos:end="267:32"><operator pos:start="267:21" pos:end="267:21">!</operator><name pos:start="267:22" pos:end="267:32"><name pos:start="267:22" pos:end="267:22">s</name><operator pos:start="267:23" pos:end="267:24">-&gt;</operator><name pos:start="267:25" pos:end="267:32">last_row</name></name></expr>)</condition><block type="pseudo" pos:start="269:21" pos:end="269:30"><block_content pos:start="269:21" pos:end="269:30">

                    <goto pos:start="269:21" pos:end="269:30">goto <name pos:start="269:26" pos:end="269:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="271:17" pos:end="281:17"><if pos:start="271:17" pos:end="281:17">if <condition pos:start="271:20" pos:end="273:62">(<expr pos:start="271:21" pos:end="273:61"><name pos:start="271:21" pos:end="271:37"><name pos:start="271:21" pos:end="271:21">s</name><operator pos:start="271:22" pos:end="271:23">-&gt;</operator><name pos:start="271:24" pos:end="271:37">interlace_type</name></name> <operator pos:start="271:39" pos:end="271:40">||</operator>

                    <name pos:start="273:21" pos:end="273:33"><name pos:start="273:21" pos:end="273:21">s</name><operator pos:start="273:22" pos:end="273:23">-&gt;</operator><name pos:start="273:24" pos:end="273:33">color_type</name></name> <operator pos:start="273:35" pos:end="273:36">==</operator> <name pos:start="273:38" pos:end="273:61">PNG_COLOR_TYPE_RGB_ALPHA</name></expr>)</condition> <block pos:start="273:64" pos:end="281:17">{<block_content pos:start="275:21" pos:end="279:34">

                    <expr_stmt pos:start="275:21" pos:end="275:56"><expr pos:start="275:21" pos:end="275:55"><name pos:start="275:21" pos:end="275:30"><name pos:start="275:21" pos:end="275:21">s</name><operator pos:start="275:22" pos:end="275:23">-&gt;</operator><name pos:start="275:24" pos:end="275:30">tmp_row</name></name> <operator pos:start="275:32" pos:end="275:32">=</operator> <call pos:start="275:34" pos:end="275:55"><name pos:start="275:34" pos:end="275:42">av_malloc</name><argument_list pos:start="275:43" pos:end="275:55">(<argument pos:start="275:44" pos:end="275:54"><expr pos:start="275:44" pos:end="275:54"><name pos:start="275:44" pos:end="275:54"><name pos:start="275:44" pos:end="275:44">s</name><operator pos:start="275:45" pos:end="275:46">-&gt;</operator><name pos:start="275:47" pos:end="275:54">row_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="277:21" pos:end="279:34"><if pos:start="277:21" pos:end="279:34">if <condition pos:start="277:24" pos:end="277:36">(<expr pos:start="277:25" pos:end="277:35"><operator pos:start="277:25" pos:end="277:25">!</operator><name pos:start="277:26" pos:end="277:35"><name pos:start="277:26" pos:end="277:26">s</name><operator pos:start="277:27" pos:end="277:28">-&gt;</operator><name pos:start="277:29" pos:end="277:35">tmp_row</name></name></expr>)</condition><block type="pseudo" pos:start="279:25" pos:end="279:34"><block_content pos:start="279:25" pos:end="279:34">

                        <goto pos:start="279:25" pos:end="279:34">goto <name pos:start="279:30" pos:end="279:33">fail</name>;</goto></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="283:17" pos:end="283:36">/* compressed row */</comment>

                <expr_stmt pos:start="285:17" pos:end="285:60"><expr pos:start="285:17" pos:end="285:59"><name pos:start="285:17" pos:end="285:29">crow_buf_base</name> <operator pos:start="285:31" pos:end="285:31">=</operator> <call pos:start="285:33" pos:end="285:59"><name pos:start="285:33" pos:end="285:41">av_malloc</name><argument_list pos:start="285:42" pos:end="285:59">(<argument pos:start="285:43" pos:end="285:58"><expr pos:start="285:43" pos:end="285:58"><name pos:start="285:43" pos:end="285:53"><name pos:start="285:43" pos:end="285:43">s</name><operator pos:start="285:44" pos:end="285:45">-&gt;</operator><name pos:start="285:46" pos:end="285:53">row_size</name></name> <operator pos:start="285:55" pos:end="285:55">+</operator> <literal type="number" pos:start="285:57" pos:end="285:58">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="287:17" pos:end="289:30"><if pos:start="287:17" pos:end="289:30">if <condition pos:start="287:20" pos:end="287:35">(<expr pos:start="287:21" pos:end="287:34"><operator pos:start="287:21" pos:end="287:21">!</operator><name pos:start="287:22" pos:end="287:34">crow_buf_base</name></expr>)</condition><block type="pseudo" pos:start="289:21" pos:end="289:30"><block_content pos:start="289:21" pos:end="289:30">

                    <goto pos:start="289:21" pos:end="289:30">goto <name pos:start="289:26" pos:end="289:29">fail</name>;</goto></block_content></block></if></if_stmt>



                <comment type="block" pos:start="293:17" pos:end="293:62">/* we want crow_buf+1 to be 16-byte aligned */</comment>

                <expr_stmt pos:start="295:17" pos:end="295:58"><expr pos:start="295:17" pos:end="295:57"><name pos:start="295:17" pos:end="295:27"><name pos:start="295:17" pos:end="295:17">s</name><operator pos:start="295:18" pos:end="295:19">-&gt;</operator><name pos:start="295:20" pos:end="295:27">crow_buf</name></name>          <operator pos:start="295:38" pos:end="295:38">=</operator> <name pos:start="295:40" pos:end="295:52">crow_buf_base</name> <operator pos:start="295:54" pos:end="295:54">+</operator> <literal type="number" pos:start="295:56" pos:end="295:57">15</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="297:17" pos:end="297:52"><expr pos:start="297:17" pos:end="297:51"><name pos:start="297:17" pos:end="297:36"><name pos:start="297:17" pos:end="297:17">s</name><operator pos:start="297:18" pos:end="297:19">-&gt;</operator><name pos:start="297:20" pos:end="297:26">zstream</name><operator pos:start="297:27" pos:end="297:27">.</operator><name pos:start="297:28" pos:end="297:36">avail_out</name></name> <operator pos:start="297:38" pos:end="297:38">=</operator> <name pos:start="297:40" pos:end="297:51"><name pos:start="297:40" pos:end="297:40">s</name><operator pos:start="297:41" pos:end="297:42">-&gt;</operator><name pos:start="297:43" pos:end="297:51">crow_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="299:17" pos:end="299:51"><expr pos:start="299:17" pos:end="299:50"><name pos:start="299:17" pos:end="299:35"><name pos:start="299:17" pos:end="299:17">s</name><operator pos:start="299:18" pos:end="299:19">-&gt;</operator><name pos:start="299:20" pos:end="299:26">zstream</name><operator pos:start="299:27" pos:end="299:27">.</operator><name pos:start="299:28" pos:end="299:35">next_out</name></name>  <operator pos:start="299:38" pos:end="299:38">=</operator> <name pos:start="299:40" pos:end="299:50"><name pos:start="299:40" pos:end="299:40">s</name><operator pos:start="299:41" pos:end="299:42">-&gt;</operator><name pos:start="299:43" pos:end="299:50">crow_buf</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:33"><expr pos:start="303:13" pos:end="303:32"><name pos:start="303:13" pos:end="303:20"><name pos:start="303:13" pos:end="303:13">s</name><operator pos:start="303:14" pos:end="303:15">-&gt;</operator><name pos:start="303:16" pos:end="303:20">state</name></name> <operator pos:start="303:22" pos:end="303:23">|=</operator> <name pos:start="303:25" pos:end="303:32">PNG_IDAT</name></expr>;</expr_stmt>

            <if_stmt pos:start="305:13" pos:end="307:26"><if pos:start="305:13" pos:end="307:26">if <condition pos:start="305:16" pos:end="305:47">(<expr pos:start="305:17" pos:end="305:46"><call pos:start="305:17" pos:end="305:42"><name pos:start="305:17" pos:end="305:31">png_decode_idat</name><argument_list pos:start="305:32" pos:end="305:42">(<argument pos:start="305:33" pos:end="305:33"><expr pos:start="305:33" pos:end="305:33"><name pos:start="305:33" pos:end="305:33">s</name></expr></argument>, <argument pos:start="305:36" pos:end="305:41"><expr pos:start="305:36" pos:end="305:41"><name pos:start="305:36" pos:end="305:41">length</name></expr></argument>)</argument_list></call> <operator pos:start="305:44" pos:end="305:44">&lt;</operator> <literal type="number" pos:start="305:46" pos:end="305:46">0</literal></expr>)</condition><block type="pseudo" pos:start="307:17" pos:end="307:26"><block_content pos:start="307:17" pos:end="307:26">

                <goto pos:start="307:17" pos:end="307:26">goto <name pos:start="307:22" pos:end="307:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:40"><expr pos:start="309:13" pos:end="309:39"><call pos:start="309:13" pos:end="309:39"><name pos:start="309:13" pos:end="309:28">bytestream2_skip</name><argument_list pos:start="309:29" pos:end="309:39">(<argument pos:start="309:30" pos:end="309:35"><expr pos:start="309:30" pos:end="309:35"><operator pos:start="309:30" pos:end="309:30">&amp;</operator><name pos:start="309:31" pos:end="309:35"><name pos:start="309:31" pos:end="309:31">s</name><operator pos:start="309:32" pos:end="309:33">-&gt;</operator><name pos:start="309:34" pos:end="309:35">gb</name></name></expr></argument>, <argument pos:start="309:38" pos:end="309:38"><expr pos:start="309:38" pos:end="309:38"><literal type="number" pos:start="309:38" pos:end="309:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="309:42" pos:end="309:50">/* crc */</comment>

            <break pos:start="311:13" pos:end="311:18">break;</break>

        <case pos:start="313:9" pos:end="313:39">case <expr pos:start="313:14" pos:end="313:38"><call pos:start="313:14" pos:end="313:38"><name pos:start="313:14" pos:end="313:18">MKTAG</name><argument_list pos:start="313:19" pos:end="313:38">(<argument pos:start="313:20" pos:end="313:22"><expr pos:start="313:20" pos:end="313:22"><literal type="char" pos:start="313:20" pos:end="313:22">'P'</literal></expr></argument>, <argument pos:start="313:25" pos:end="313:27"><expr pos:start="313:25" pos:end="313:27"><literal type="char" pos:start="313:25" pos:end="313:27">'L'</literal></expr></argument>, <argument pos:start="313:30" pos:end="313:32"><expr pos:start="313:30" pos:end="313:32"><literal type="char" pos:start="313:30" pos:end="313:32">'T'</literal></expr></argument>, <argument pos:start="313:35" pos:end="313:37"><expr pos:start="313:35" pos:end="313:37"><literal type="char" pos:start="313:35" pos:end="313:37">'E'</literal></expr></argument>)</argument_list></call></expr>:</case>

        <block pos:start="315:9" pos:end="349:9">{<block_content pos:start="317:13" pos:end="347:40">

            <decl_stmt pos:start="317:13" pos:end="317:30"><decl pos:start="317:13" pos:end="317:17"><type pos:start="317:13" pos:end="317:15"><name pos:start="317:13" pos:end="317:15">int</name></type> <name pos:start="317:17" pos:end="317:17">n</name></decl>, <decl pos:start="317:20" pos:end="317:20"><type ref="prev" pos:start="317:13" pos:end="317:15"/><name pos:start="317:20" pos:end="317:20">i</name></decl>, <decl pos:start="317:23" pos:end="317:23"><type ref="prev" pos:start="317:13" pos:end="317:15"/><name pos:start="317:23" pos:end="317:23">r</name></decl>, <decl pos:start="317:26" pos:end="317:26"><type ref="prev" pos:start="317:13" pos:end="317:15"/><name pos:start="317:26" pos:end="317:26">g</name></decl>, <decl pos:start="317:29" pos:end="317:29"><type ref="prev" pos:start="317:13" pos:end="317:15"/><name pos:start="317:29" pos:end="317:29">b</name></decl>;</decl_stmt>



            <if_stmt pos:start="321:13" pos:end="323:30"><if pos:start="321:13" pos:end="323:30">if <condition pos:start="321:16" pos:end="321:54">(<expr pos:start="321:17" pos:end="321:53"><operator pos:start="321:17" pos:end="321:17">(</operator><name pos:start="321:18" pos:end="321:23">length</name> <operator pos:start="321:25" pos:end="321:25">%</operator> <literal type="number" pos:start="321:27" pos:end="321:27">3</literal><operator pos:start="321:28" pos:end="321:28">)</operator> <operator pos:start="321:30" pos:end="321:31">!=</operator> <literal type="number" pos:start="321:33" pos:end="321:33">0</literal> <operator pos:start="321:35" pos:end="321:36">||</operator> <name pos:start="321:38" pos:end="321:43">length</name> <operator pos:start="321:45" pos:end="321:45">&gt;</operator> <literal type="number" pos:start="321:47" pos:end="321:49">256</literal> <operator pos:start="321:51" pos:end="321:51">*</operator> <literal type="number" pos:start="321:53" pos:end="321:53">3</literal></expr>)</condition><block type="pseudo" pos:start="323:17" pos:end="323:30"><block_content pos:start="323:17" pos:end="323:30">

                <goto pos:start="323:17" pos:end="323:30">goto <name pos:start="323:22" pos:end="323:29">skip_tag</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="325:13" pos:end="325:34">/* read the palette */</comment>

            <expr_stmt pos:start="327:13" pos:end="327:27"><expr pos:start="327:13" pos:end="327:26"><name pos:start="327:13" pos:end="327:13">n</name> <operator pos:start="327:15" pos:end="327:15">=</operator> <name pos:start="327:17" pos:end="327:22">length</name> <operator pos:start="327:24" pos:end="327:24">/</operator> <literal type="number" pos:start="327:26" pos:end="327:26">3</literal></expr>;</expr_stmt>

            <for pos:start="329:13" pos:end="339:13">for <control pos:start="329:17" pos:end="329:35">(<init pos:start="329:18" pos:end="329:23"><expr pos:start="329:18" pos:end="329:22"><name pos:start="329:18" pos:end="329:18">i</name> <operator pos:start="329:20" pos:end="329:20">=</operator> <literal type="number" pos:start="329:22" pos:end="329:22">0</literal></expr>;</init> <condition pos:start="329:25" pos:end="329:30"><expr pos:start="329:25" pos:end="329:29"><name pos:start="329:25" pos:end="329:25">i</name> <operator pos:start="329:27" pos:end="329:27">&lt;</operator> <name pos:start="329:29" pos:end="329:29">n</name></expr>;</condition> <incr pos:start="329:32" pos:end="329:34"><expr pos:start="329:32" pos:end="329:34"><name pos:start="329:32" pos:end="329:32">i</name><operator pos:start="329:33" pos:end="329:34">++</operator></expr></incr>)</control> <block pos:start="329:37" pos:end="339:13">{<block_content pos:start="331:17" pos:end="337:72">

                <expr_stmt pos:start="331:17" pos:end="331:49"><expr pos:start="331:17" pos:end="331:48"><name pos:start="331:17" pos:end="331:17">r</name> <operator pos:start="331:19" pos:end="331:19">=</operator> <call pos:start="331:21" pos:end="331:48"><name pos:start="331:21" pos:end="331:40">bytestream2_get_byte</name><argument_list pos:start="331:41" pos:end="331:48">(<argument pos:start="331:42" pos:end="331:47"><expr pos:start="331:42" pos:end="331:47"><operator pos:start="331:42" pos:end="331:42">&amp;</operator><name pos:start="331:43" pos:end="331:47"><name pos:start="331:43" pos:end="331:43">s</name><operator pos:start="331:44" pos:end="331:45">-&gt;</operator><name pos:start="331:46" pos:end="331:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="333:17" pos:end="333:49"><expr pos:start="333:17" pos:end="333:48"><name pos:start="333:17" pos:end="333:17">g</name> <operator pos:start="333:19" pos:end="333:19">=</operator> <call pos:start="333:21" pos:end="333:48"><name pos:start="333:21" pos:end="333:40">bytestream2_get_byte</name><argument_list pos:start="333:41" pos:end="333:48">(<argument pos:start="333:42" pos:end="333:47"><expr pos:start="333:42" pos:end="333:47"><operator pos:start="333:42" pos:end="333:42">&amp;</operator><name pos:start="333:43" pos:end="333:47"><name pos:start="333:43" pos:end="333:43">s</name><operator pos:start="333:44" pos:end="333:45">-&gt;</operator><name pos:start="333:46" pos:end="333:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="335:17" pos:end="335:49"><expr pos:start="335:17" pos:end="335:48"><name pos:start="335:17" pos:end="335:17">b</name> <operator pos:start="335:19" pos:end="335:19">=</operator> <call pos:start="335:21" pos:end="335:48"><name pos:start="335:21" pos:end="335:40">bytestream2_get_byte</name><argument_list pos:start="335:41" pos:end="335:48">(<argument pos:start="335:42" pos:end="335:47"><expr pos:start="335:42" pos:end="335:47"><operator pos:start="335:42" pos:end="335:42">&amp;</operator><name pos:start="335:43" pos:end="335:47"><name pos:start="335:43" pos:end="335:43">s</name><operator pos:start="335:44" pos:end="335:45">-&gt;</operator><name pos:start="335:46" pos:end="335:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="337:17" pos:end="337:72"><expr pos:start="337:17" pos:end="337:71"><name pos:start="337:17" pos:end="337:29"><name pos:start="337:17" pos:end="337:17">s</name><operator pos:start="337:18" pos:end="337:19">-&gt;</operator><name pos:start="337:20" pos:end="337:26">palette</name><index pos:start="337:27" pos:end="337:29">[<expr pos:start="337:28" pos:end="337:28"><name pos:start="337:28" pos:end="337:28">i</name></expr>]</index></name> <operator pos:start="337:31" pos:end="337:31">=</operator> <operator pos:start="337:33" pos:end="337:33">(</operator><literal type="number" pos:start="337:34" pos:end="337:37">0xff</literal> <operator pos:start="337:39" pos:end="337:40">&lt;&lt;</operator> <literal type="number" pos:start="337:42" pos:end="337:43">24</literal><operator pos:start="337:44" pos:end="337:44">)</operator> <operator pos:start="337:46" pos:end="337:46">|</operator> <operator pos:start="337:48" pos:end="337:48">(</operator><name pos:start="337:49" pos:end="337:49">r</name> <operator pos:start="337:51" pos:end="337:52">&lt;&lt;</operator> <literal type="number" pos:start="337:54" pos:end="337:55">16</literal><operator pos:start="337:56" pos:end="337:56">)</operator> <operator pos:start="337:58" pos:end="337:58">|</operator> <operator pos:start="337:60" pos:end="337:60">(</operator><name pos:start="337:61" pos:end="337:61">g</name> <operator pos:start="337:63" pos:end="337:64">&lt;&lt;</operator> <literal type="number" pos:start="337:66" pos:end="337:66">8</literal><operator pos:start="337:67" pos:end="337:67">)</operator> <operator pos:start="337:69" pos:end="337:69">|</operator> <name pos:start="337:71" pos:end="337:71">b</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="341:13" pos:end="343:45">for <control pos:start="341:17" pos:end="341:32">(<init pos:start="341:18" pos:end="341:18">;</init> <condition pos:start="341:20" pos:end="341:27"><expr pos:start="341:20" pos:end="341:26"><name pos:start="341:20" pos:end="341:20">i</name> <operator pos:start="341:22" pos:end="341:22">&lt;</operator> <literal type="number" pos:start="341:24" pos:end="341:26">256</literal></expr>;</condition> <incr pos:start="341:29" pos:end="341:31"><expr pos:start="341:29" pos:end="341:31"><name pos:start="341:29" pos:end="341:29">i</name><operator pos:start="341:30" pos:end="341:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="343:17" pos:end="343:45"><block_content pos:start="343:17" pos:end="343:45">

                <expr_stmt pos:start="343:17" pos:end="343:45"><expr pos:start="343:17" pos:end="343:44"><name pos:start="343:17" pos:end="343:29"><name pos:start="343:17" pos:end="343:17">s</name><operator pos:start="343:18" pos:end="343:19">-&gt;</operator><name pos:start="343:20" pos:end="343:26">palette</name><index pos:start="343:27" pos:end="343:29">[<expr pos:start="343:28" pos:end="343:28"><name pos:start="343:28" pos:end="343:28">i</name></expr>]</index></name> <operator pos:start="343:31" pos:end="343:31">=</operator> <operator pos:start="343:33" pos:end="343:33">(</operator><literal type="number" pos:start="343:34" pos:end="343:37">0xff</literal> <operator pos:start="343:39" pos:end="343:40">&lt;&lt;</operator> <literal type="number" pos:start="343:42" pos:end="343:43">24</literal><operator pos:start="343:44" pos:end="343:44">)</operator></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="345:13" pos:end="345:33"><expr pos:start="345:13" pos:end="345:32"><name pos:start="345:13" pos:end="345:20"><name pos:start="345:13" pos:end="345:13">s</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:20">state</name></name> <operator pos:start="345:22" pos:end="345:23">|=</operator> <name pos:start="345:25" pos:end="345:32">PNG_PLTE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:40"><expr pos:start="347:13" pos:end="347:39"><call pos:start="347:13" pos:end="347:39"><name pos:start="347:13" pos:end="347:28">bytestream2_skip</name><argument_list pos:start="347:29" pos:end="347:39">(<argument pos:start="347:30" pos:end="347:35"><expr pos:start="347:30" pos:end="347:35"><operator pos:start="347:30" pos:end="347:30">&amp;</operator><name pos:start="347:31" pos:end="347:35"><name pos:start="347:31" pos:end="347:31">s</name><operator pos:start="347:32" pos:end="347:33">-&gt;</operator><name pos:start="347:34" pos:end="347:35">gb</name></name></expr></argument>, <argument pos:start="347:38" pos:end="347:38"><expr pos:start="347:38" pos:end="347:38"><literal type="number" pos:start="347:38" pos:end="347:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="347:46" pos:end="347:54">/* crc */</comment>

        </block_content>}</block>

        <break pos:start="351:9" pos:end="351:14">break;</break>

        <case pos:start="353:9" pos:end="353:39">case <expr pos:start="353:14" pos:end="353:38"><call pos:start="353:14" pos:end="353:38"><name pos:start="353:14" pos:end="353:18">MKTAG</name><argument_list pos:start="353:19" pos:end="353:38">(<argument pos:start="353:20" pos:end="353:22"><expr pos:start="353:20" pos:end="353:22"><literal type="char" pos:start="353:20" pos:end="353:22">'t'</literal></expr></argument>, <argument pos:start="353:25" pos:end="353:27"><expr pos:start="353:25" pos:end="353:27"><literal type="char" pos:start="353:25" pos:end="353:27">'R'</literal></expr></argument>, <argument pos:start="353:30" pos:end="353:32"><expr pos:start="353:30" pos:end="353:32"><literal type="char" pos:start="353:30" pos:end="353:32">'N'</literal></expr></argument>, <argument pos:start="353:35" pos:end="353:37"><expr pos:start="353:35" pos:end="353:37"><literal type="char" pos:start="353:35" pos:end="353:37">'S'</literal></expr></argument>)</argument_list></call></expr>:</case>

        <block pos:start="355:9" pos:end="381:9">{<block_content pos:start="357:13" pos:end="379:40">

            <decl_stmt pos:start="357:13" pos:end="357:21"><decl pos:start="357:13" pos:end="357:17"><type pos:start="357:13" pos:end="357:15"><name pos:start="357:13" pos:end="357:15">int</name></type> <name pos:start="357:17" pos:end="357:17">v</name></decl>, <decl pos:start="357:20" pos:end="357:20"><type ref="prev" pos:start="357:13" pos:end="357:15"/><name pos:start="357:20" pos:end="357:20">i</name></decl>;</decl_stmt>



            <comment type="block" pos:start="361:13" pos:end="361:73">/* read the transparency. XXX: Only palette mode supported */</comment>

            <if_stmt pos:start="363:13" pos:end="369:30"><if pos:start="363:13" pos:end="369:30">if <condition pos:start="363:16" pos:end="367:39">(<expr pos:start="363:17" pos:end="367:38"><name pos:start="363:17" pos:end="363:29"><name pos:start="363:17" pos:end="363:17">s</name><operator pos:start="363:18" pos:end="363:19">-&gt;</operator><name pos:start="363:20" pos:end="363:29">color_type</name></name> <operator pos:start="363:31" pos:end="363:32">!=</operator> <name pos:start="363:34" pos:end="363:55">PNG_COLOR_TYPE_PALETTE</name> <operator pos:start="363:57" pos:end="363:58">||</operator>

                <name pos:start="365:17" pos:end="365:22">length</name> <operator pos:start="365:24" pos:end="365:24">&gt;</operator> <literal type="number" pos:start="365:26" pos:end="365:28">256</literal> <operator pos:start="365:30" pos:end="365:31">||</operator>

                <operator pos:start="367:17" pos:end="367:17">!</operator><operator pos:start="367:18" pos:end="367:18">(</operator><name pos:start="367:19" pos:end="367:26"><name pos:start="367:19" pos:end="367:19">s</name><operator pos:start="367:20" pos:end="367:21">-&gt;</operator><name pos:start="367:22" pos:end="367:26">state</name></name> <operator pos:start="367:28" pos:end="367:28">&amp;</operator> <name pos:start="367:30" pos:end="367:37">PNG_PLTE</name><operator pos:start="367:38" pos:end="367:38">)</operator></expr>)</condition><block type="pseudo" pos:start="369:17" pos:end="369:30"><block_content pos:start="369:17" pos:end="369:30">

                <goto pos:start="369:17" pos:end="369:30">goto <name pos:start="369:22" pos:end="369:29">skip_tag</name>;</goto></block_content></block></if></if_stmt>

            <for pos:start="371:13" pos:end="377:13">for <control pos:start="371:17" pos:end="371:40">(<init pos:start="371:18" pos:end="371:23"><expr pos:start="371:18" pos:end="371:22"><name pos:start="371:18" pos:end="371:18">i</name> <operator pos:start="371:20" pos:end="371:20">=</operator> <literal type="number" pos:start="371:22" pos:end="371:22">0</literal></expr>;</init> <condition pos:start="371:25" pos:end="371:35"><expr pos:start="371:25" pos:end="371:34"><name pos:start="371:25" pos:end="371:25">i</name> <operator pos:start="371:27" pos:end="371:27">&lt;</operator> <name pos:start="371:29" pos:end="371:34">length</name></expr>;</condition> <incr pos:start="371:37" pos:end="371:39"><expr pos:start="371:37" pos:end="371:39"><name pos:start="371:37" pos:end="371:37">i</name><operator pos:start="371:38" pos:end="371:39">++</operator></expr></incr>)</control> <block pos:start="371:42" pos:end="377:13">{<block_content pos:start="373:17" pos:end="375:73">

                <expr_stmt pos:start="373:17" pos:end="373:49"><expr pos:start="373:17" pos:end="373:48"><name pos:start="373:17" pos:end="373:17">v</name> <operator pos:start="373:19" pos:end="373:19">=</operator> <call pos:start="373:21" pos:end="373:48"><name pos:start="373:21" pos:end="373:40">bytestream2_get_byte</name><argument_list pos:start="373:41" pos:end="373:48">(<argument pos:start="373:42" pos:end="373:47"><expr pos:start="373:42" pos:end="373:47"><operator pos:start="373:42" pos:end="373:42">&amp;</operator><name pos:start="373:43" pos:end="373:47"><name pos:start="373:43" pos:end="373:43">s</name><operator pos:start="373:44" pos:end="373:45">-&gt;</operator><name pos:start="373:46" pos:end="373:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="375:17" pos:end="375:73"><expr pos:start="375:17" pos:end="375:72"><name pos:start="375:17" pos:end="375:29"><name pos:start="375:17" pos:end="375:17">s</name><operator pos:start="375:18" pos:end="375:19">-&gt;</operator><name pos:start="375:20" pos:end="375:26">palette</name><index pos:start="375:27" pos:end="375:29">[<expr pos:start="375:28" pos:end="375:28"><name pos:start="375:28" pos:end="375:28">i</name></expr>]</index></name> <operator pos:start="375:31" pos:end="375:31">=</operator> <operator pos:start="375:33" pos:end="375:33">(</operator><name pos:start="375:34" pos:end="375:46"><name pos:start="375:34" pos:end="375:34">s</name><operator pos:start="375:35" pos:end="375:36">-&gt;</operator><name pos:start="375:37" pos:end="375:43">palette</name><index pos:start="375:44" pos:end="375:46">[<expr pos:start="375:45" pos:end="375:45"><name pos:start="375:45" pos:end="375:45">i</name></expr>]</index></name> <operator pos:start="375:48" pos:end="375:48">&amp;</operator> <literal type="number" pos:start="375:50" pos:end="375:59">0x00ffffff</literal><operator pos:start="375:60" pos:end="375:60">)</operator> <operator pos:start="375:62" pos:end="375:62">|</operator> <operator pos:start="375:64" pos:end="375:64">(</operator><name pos:start="375:65" pos:end="375:65">v</name> <operator pos:start="375:67" pos:end="375:68">&lt;&lt;</operator> <literal type="number" pos:start="375:70" pos:end="375:71">24</literal><operator pos:start="375:72" pos:end="375:72">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="379:13" pos:end="379:40"><expr pos:start="379:13" pos:end="379:39"><call pos:start="379:13" pos:end="379:39"><name pos:start="379:13" pos:end="379:28">bytestream2_skip</name><argument_list pos:start="379:29" pos:end="379:39">(<argument pos:start="379:30" pos:end="379:35"><expr pos:start="379:30" pos:end="379:35"><operator pos:start="379:30" pos:end="379:30">&amp;</operator><name pos:start="379:31" pos:end="379:35"><name pos:start="379:31" pos:end="379:31">s</name><operator pos:start="379:32" pos:end="379:33">-&gt;</operator><name pos:start="379:34" pos:end="379:35">gb</name></name></expr></argument>, <argument pos:start="379:38" pos:end="379:38"><expr pos:start="379:38" pos:end="379:38"><literal type="number" pos:start="379:38" pos:end="379:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="379:46" pos:end="379:54">/* crc */</comment>

        </block_content>}</block>

        <break pos:start="383:9" pos:end="383:14">break;</break>

        <case pos:start="385:9" pos:end="385:39">case <expr pos:start="385:14" pos:end="385:38"><call pos:start="385:14" pos:end="385:38"><name pos:start="385:14" pos:end="385:18">MKTAG</name><argument_list pos:start="385:19" pos:end="385:38">(<argument pos:start="385:20" pos:end="385:22"><expr pos:start="385:20" pos:end="385:22"><literal type="char" pos:start="385:20" pos:end="385:22">'I'</literal></expr></argument>, <argument pos:start="385:25" pos:end="385:27"><expr pos:start="385:25" pos:end="385:27"><literal type="char" pos:start="385:25" pos:end="385:27">'E'</literal></expr></argument>, <argument pos:start="385:30" pos:end="385:32"><expr pos:start="385:30" pos:end="385:32"><literal type="char" pos:start="385:30" pos:end="385:32">'N'</literal></expr></argument>, <argument pos:start="385:35" pos:end="385:37"><expr pos:start="385:35" pos:end="385:37"><literal type="char" pos:start="385:35" pos:end="385:37">'D'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="387:13" pos:end="389:26"><if pos:start="387:13" pos:end="389:26">if <condition pos:start="387:16" pos:end="387:43">(<expr pos:start="387:17" pos:end="387:42"><operator pos:start="387:17" pos:end="387:17">!</operator><operator pos:start="387:18" pos:end="387:18">(</operator><name pos:start="387:19" pos:end="387:26"><name pos:start="387:19" pos:end="387:19">s</name><operator pos:start="387:20" pos:end="387:21">-&gt;</operator><name pos:start="387:22" pos:end="387:26">state</name></name> <operator pos:start="387:28" pos:end="387:28">&amp;</operator> <name pos:start="387:30" pos:end="387:41">PNG_ALLIMAGE</name><operator pos:start="387:42" pos:end="387:42">)</operator></expr>)</condition><block type="pseudo" pos:start="389:17" pos:end="389:26"><block_content pos:start="389:17" pos:end="389:26">

                <goto pos:start="389:17" pos:end="389:26">goto <name pos:start="389:22" pos:end="389:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:40"><expr pos:start="391:13" pos:end="391:39"><call pos:start="391:13" pos:end="391:39"><name pos:start="391:13" pos:end="391:28">bytestream2_skip</name><argument_list pos:start="391:29" pos:end="391:39">(<argument pos:start="391:30" pos:end="391:35"><expr pos:start="391:30" pos:end="391:35"><operator pos:start="391:30" pos:end="391:30">&amp;</operator><name pos:start="391:31" pos:end="391:35"><name pos:start="391:31" pos:end="391:31">s</name><operator pos:start="391:32" pos:end="391:33">-&gt;</operator><name pos:start="391:34" pos:end="391:35">gb</name></name></expr></argument>, <argument pos:start="391:38" pos:end="391:38"><expr pos:start="391:38" pos:end="391:38"><literal type="number" pos:start="391:38" pos:end="391:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="391:42" pos:end="391:50">/* crc */</comment>

            <goto pos:start="393:13" pos:end="393:27">goto <name pos:start="393:18" pos:end="393:26">exit_loop</name>;</goto>

        <default pos:start="395:9" pos:end="395:16">default:</default>

            <comment type="block" pos:start="397:13" pos:end="397:26">/* skip tag */</comment>

<label pos:start="399:1" pos:end="399:9"><name pos:start="399:1" pos:end="399:8">skip_tag</name>:</label>

            <expr_stmt pos:start="401:13" pos:end="401:49"><expr pos:start="401:13" pos:end="401:48"><call pos:start="401:13" pos:end="401:48"><name pos:start="401:13" pos:end="401:28">bytestream2_skip</name><argument_list pos:start="401:29" pos:end="401:48">(<argument pos:start="401:30" pos:end="401:35"><expr pos:start="401:30" pos:end="401:35"><operator pos:start="401:30" pos:end="401:30">&amp;</operator><name pos:start="401:31" pos:end="401:35"><name pos:start="401:31" pos:end="401:31">s</name><operator pos:start="401:32" pos:end="401:33">-&gt;</operator><name pos:start="401:34" pos:end="401:35">gb</name></name></expr></argument>, <argument pos:start="401:38" pos:end="401:47"><expr pos:start="401:38" pos:end="401:47"><name pos:start="401:38" pos:end="401:43">length</name> <operator pos:start="401:45" pos:end="401:45">+</operator> <literal type="number" pos:start="401:47" pos:end="401:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="403:13" pos:end="403:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>

<label pos:start="409:1" pos:end="409:10"><name pos:start="409:1" pos:end="409:9">exit_loop</name>:</label>

    <comment type="block" pos:start="411:5" pos:end="411:66">/* handle p-frames only if a predecessor frame is available */</comment>

    <if_stmt pos:start="413:5" pos:end="439:5"><if pos:start="413:5" pos:end="439:5">if <condition pos:start="413:8" pos:end="413:25">(<expr pos:start="413:9" pos:end="413:24"><name pos:start="413:9" pos:end="413:24"><name pos:start="413:9" pos:end="413:9">s</name><operator pos:start="413:10" pos:end="413:11">-&gt;</operator><name pos:start="413:12" pos:end="413:15">prev</name><operator pos:start="413:16" pos:end="413:17">-&gt;</operator><name pos:start="413:18" pos:end="413:21">data</name><index pos:start="413:22" pos:end="413:24">[<expr pos:start="413:23" pos:end="413:23"><literal type="number" pos:start="413:23" pos:end="413:23">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="413:27" pos:end="439:5">{<block_content pos:start="415:9" pos:end="437:9">

        <if_stmt pos:start="415:9" pos:end="437:9"><if pos:start="415:9" pos:end="437:9">if <condition pos:start="415:12" pos:end="415:46">(<expr pos:start="415:13" pos:end="415:45"><operator pos:start="415:13" pos:end="415:13">!</operator><operator pos:start="415:14" pos:end="415:14">(</operator><name pos:start="415:15" pos:end="415:26"><name pos:start="415:15" pos:end="415:19">avpkt</name><operator pos:start="415:20" pos:end="415:21">-&gt;</operator><name pos:start="415:22" pos:end="415:26">flags</name></name> <operator pos:start="415:28" pos:end="415:28">&amp;</operator> <name pos:start="415:30" pos:end="415:44">AV_PKT_FLAG_KEY</name><operator pos:start="415:45" pos:end="415:45">)</operator></expr>)</condition> <block pos:start="415:48" pos:end="437:9">{<block_content pos:start="417:13" pos:end="435:13">

            <decl_stmt pos:start="417:13" pos:end="417:21"><decl pos:start="417:13" pos:end="417:17"><type pos:start="417:13" pos:end="417:15"><name pos:start="417:13" pos:end="417:15">int</name></type> <name pos:start="417:17" pos:end="417:17">i</name></decl>, <decl pos:start="417:20" pos:end="417:20"><type ref="prev" pos:start="417:13" pos:end="417:15"/><name pos:start="417:20" pos:end="417:20">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="419:13" pos:end="419:42"><decl pos:start="419:13" pos:end="419:41"><type pos:start="419:13" pos:end="419:21"><name pos:start="419:13" pos:end="419:19">uint8_t</name> <modifier pos:start="419:21" pos:end="419:21">*</modifier></type><name pos:start="419:22" pos:end="419:23">pd</name>      <init pos:start="419:30" pos:end="419:41">= <expr pos:start="419:32" pos:end="419:41"><name pos:start="419:32" pos:end="419:41"><name pos:start="419:32" pos:end="419:32">p</name><operator pos:start="419:33" pos:end="419:34">-&gt;</operator><name pos:start="419:35" pos:end="419:38">data</name><index pos:start="419:39" pos:end="419:41">[<expr pos:start="419:40" pos:end="419:40"><literal type="number" pos:start="419:40" pos:end="419:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="421:13" pos:end="421:48"><decl pos:start="421:13" pos:end="421:47"><type pos:start="421:13" pos:end="421:21"><name pos:start="421:13" pos:end="421:19">uint8_t</name> <modifier pos:start="421:21" pos:end="421:21">*</modifier></type><name pos:start="421:22" pos:end="421:28">pd_last</name> <init pos:start="421:30" pos:end="421:47">= <expr pos:start="421:32" pos:end="421:47"><name pos:start="421:32" pos:end="421:47"><name pos:start="421:32" pos:end="421:32">s</name><operator pos:start="421:33" pos:end="421:34">-&gt;</operator><name pos:start="421:35" pos:end="421:38">prev</name><operator pos:start="421:39" pos:end="421:40">-&gt;</operator><name pos:start="421:41" pos:end="421:44">data</name><index pos:start="421:45" pos:end="421:47">[<expr pos:start="421:46" pos:end="421:46"><literal type="number" pos:start="421:46" pos:end="421:46">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <for pos:start="425:13" pos:end="435:13">for <control pos:start="425:17" pos:end="425:43">(<init pos:start="425:18" pos:end="425:23"><expr pos:start="425:18" pos:end="425:22"><name pos:start="425:18" pos:end="425:18">j</name> <operator pos:start="425:20" pos:end="425:20">=</operator> <literal type="number" pos:start="425:22" pos:end="425:22">0</literal></expr>;</init> <condition pos:start="425:25" pos:end="425:38"><expr pos:start="425:25" pos:end="425:37"><name pos:start="425:25" pos:end="425:25">j</name> <operator pos:start="425:27" pos:end="425:27">&lt;</operator> <name pos:start="425:29" pos:end="425:37"><name pos:start="425:29" pos:end="425:29">s</name><operator pos:start="425:30" pos:end="425:31">-&gt;</operator><name pos:start="425:32" pos:end="425:37">height</name></name></expr>;</condition> <incr pos:start="425:40" pos:end="425:42"><expr pos:start="425:40" pos:end="425:42"><name pos:start="425:40" pos:end="425:40">j</name><operator pos:start="425:41" pos:end="425:42">++</operator></expr></incr>)</control> <block pos:start="425:45" pos:end="435:13">{<block_content pos:start="427:17" pos:end="433:45">

                <for pos:start="427:17" pos:end="429:40">for <control pos:start="427:21" pos:end="427:55">(<init pos:start="427:22" pos:end="427:27"><expr pos:start="427:22" pos:end="427:26"><name pos:start="427:22" pos:end="427:22">i</name> <operator pos:start="427:24" pos:end="427:24">=</operator> <literal type="number" pos:start="427:26" pos:end="427:26">0</literal></expr>;</init> <condition pos:start="427:29" pos:end="427:50"><expr pos:start="427:29" pos:end="427:49"><name pos:start="427:29" pos:end="427:29">i</name> <operator pos:start="427:31" pos:end="427:31">&lt;</operator> <name pos:start="427:33" pos:end="427:40"><name pos:start="427:33" pos:end="427:33">s</name><operator pos:start="427:34" pos:end="427:35">-&gt;</operator><name pos:start="427:36" pos:end="427:40">width</name></name> <operator pos:start="427:42" pos:end="427:42">*</operator> <name pos:start="427:44" pos:end="427:49"><name pos:start="427:44" pos:end="427:44">s</name><operator pos:start="427:45" pos:end="427:46">-&gt;</operator><name pos:start="427:47" pos:end="427:49">bpp</name></name></expr>;</condition> <incr pos:start="427:52" pos:end="427:54"><expr pos:start="427:52" pos:end="427:54"><name pos:start="427:52" pos:end="427:52">i</name><operator pos:start="427:53" pos:end="427:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="429:21" pos:end="429:40"><block_content pos:start="429:21" pos:end="429:40">

                    <expr_stmt pos:start="429:21" pos:end="429:40"><expr pos:start="429:21" pos:end="429:39"><name pos:start="429:21" pos:end="429:25"><name pos:start="429:21" pos:end="429:22">pd</name><index pos:start="429:23" pos:end="429:25">[<expr pos:start="429:24" pos:end="429:24"><name pos:start="429:24" pos:end="429:24">i</name></expr>]</index></name> <operator pos:start="429:27" pos:end="429:28">+=</operator> <name pos:start="429:30" pos:end="429:39"><name pos:start="429:30" pos:end="429:36">pd_last</name><index pos:start="429:37" pos:end="429:39">[<expr pos:start="429:38" pos:end="429:38"><name pos:start="429:38" pos:end="429:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="431:17" pos:end="431:45"><expr pos:start="431:17" pos:end="431:44"><name pos:start="431:17" pos:end="431:18">pd</name>      <operator pos:start="431:25" pos:end="431:26">+=</operator> <name pos:start="431:28" pos:end="431:44"><name pos:start="431:28" pos:end="431:28">s</name><operator pos:start="431:29" pos:end="431:30">-&gt;</operator><name pos:start="431:31" pos:end="431:44">image_linesize</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="433:17" pos:end="433:45"><expr pos:start="433:17" pos:end="433:44"><name pos:start="433:17" pos:end="433:23">pd_last</name> <operator pos:start="433:25" pos:end="433:26">+=</operator> <name pos:start="433:28" pos:end="433:44"><name pos:start="433:28" pos:end="433:28">s</name><operator pos:start="433:29" pos:end="433:30">-&gt;</operator><name pos:start="433:31" pos:end="433:44">image_linesize</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="443:5" pos:end="443:28"><expr pos:start="443:5" pos:end="443:27"><call pos:start="443:5" pos:end="443:27"><name pos:start="443:5" pos:end="443:18">av_frame_unref</name><argument_list pos:start="443:19" pos:end="443:27">(<argument pos:start="443:20" pos:end="443:26"><expr pos:start="443:20" pos:end="443:26"><name pos:start="443:20" pos:end="443:26"><name pos:start="443:20" pos:end="443:20">s</name><operator pos:start="443:21" pos:end="443:22">-&gt;</operator><name pos:start="443:23" pos:end="443:26">prev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="445:5" pos:end="447:18"><if pos:start="445:5" pos:end="447:18">if <condition pos:start="445:8" pos:end="445:45">(<expr pos:start="445:9" pos:end="445:44"><operator pos:start="445:9" pos:end="445:9">(</operator><name pos:start="445:10" pos:end="445:12">ret</name> <operator pos:start="445:14" pos:end="445:14">=</operator> <call pos:start="445:16" pos:end="445:39"><name pos:start="445:16" pos:end="445:27">av_frame_ref</name><argument_list pos:start="445:28" pos:end="445:39">(<argument pos:start="445:29" pos:end="445:35"><expr pos:start="445:29" pos:end="445:35"><name pos:start="445:29" pos:end="445:35"><name pos:start="445:29" pos:end="445:29">s</name><operator pos:start="445:30" pos:end="445:31">-&gt;</operator><name pos:start="445:32" pos:end="445:35">prev</name></name></expr></argument>, <argument pos:start="445:38" pos:end="445:38"><expr pos:start="445:38" pos:end="445:38"><name pos:start="445:38" pos:end="445:38">p</name></expr></argument>)</argument_list></call><operator pos:start="445:40" pos:end="445:40">)</operator> <operator pos:start="445:42" pos:end="445:42">&lt;</operator> <literal type="number" pos:start="445:44" pos:end="445:44">0</literal></expr>)</condition><block type="pseudo" pos:start="447:9" pos:end="447:18"><block_content pos:start="447:9" pos:end="447:18">

        <goto pos:start="447:9" pos:end="447:18">goto <name pos:start="447:14" pos:end="447:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="451:5" pos:end="451:19"><expr pos:start="451:5" pos:end="451:18"><operator pos:start="451:5" pos:end="451:5">*</operator><name pos:start="451:6" pos:end="451:14">got_frame</name> <operator pos:start="451:16" pos:end="451:16">=</operator> <literal type="number" pos:start="451:18" pos:end="451:18">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="455:5" pos:end="455:35"><expr pos:start="455:5" pos:end="455:34"><name pos:start="455:5" pos:end="455:7">ret</name> <operator pos:start="455:9" pos:end="455:9">=</operator> <call pos:start="455:11" pos:end="455:34"><name pos:start="455:11" pos:end="455:26">bytestream2_tell</name><argument_list pos:start="455:27" pos:end="455:34">(<argument pos:start="455:28" pos:end="455:33"><expr pos:start="455:28" pos:end="455:33"><operator pos:start="455:28" pos:end="455:28">&amp;</operator><name pos:start="455:29" pos:end="455:33"><name pos:start="455:29" pos:end="455:29">s</name><operator pos:start="455:30" pos:end="455:31">-&gt;</operator><name pos:start="455:32" pos:end="455:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="457:1" pos:end="457:8"><name pos:start="457:1" pos:end="457:7">the_end</name>:</label>

    <expr_stmt pos:start="459:5" pos:end="459:28"><expr pos:start="459:5" pos:end="459:27"><call pos:start="459:5" pos:end="459:27"><name pos:start="459:5" pos:end="459:14">inflateEnd</name><argument_list pos:start="459:15" pos:end="459:27">(<argument pos:start="459:16" pos:end="459:26"><expr pos:start="459:16" pos:end="459:26"><operator pos:start="459:16" pos:end="459:16">&amp;</operator><name pos:start="459:17" pos:end="459:26"><name pos:start="459:17" pos:end="459:17">s</name><operator pos:start="459:18" pos:end="459:19">-&gt;</operator><name pos:start="459:20" pos:end="459:26">zstream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="461:5" pos:end="461:27"><expr pos:start="461:5" pos:end="461:26"><call pos:start="461:5" pos:end="461:26"><name pos:start="461:5" pos:end="461:11">av_free</name><argument_list pos:start="461:12" pos:end="461:26">(<argument pos:start="461:13" pos:end="461:25"><expr pos:start="461:13" pos:end="461:25"><name pos:start="461:13" pos:end="461:25">crow_buf_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="463:5" pos:end="463:23"><expr pos:start="463:5" pos:end="463:22"><name pos:start="463:5" pos:end="463:15"><name pos:start="463:5" pos:end="463:5">s</name><operator pos:start="463:6" pos:end="463:7">-&gt;</operator><name pos:start="463:8" pos:end="463:15">crow_buf</name></name> <operator pos:start="463:17" pos:end="463:17">=</operator> <name pos:start="463:19" pos:end="463:22">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="465:5" pos:end="465:27"><expr pos:start="465:5" pos:end="465:26"><call pos:start="465:5" pos:end="465:26"><name pos:start="465:5" pos:end="465:12">av_freep</name><argument_list pos:start="465:13" pos:end="465:26">(<argument pos:start="465:14" pos:end="465:25"><expr pos:start="465:14" pos:end="465:25"><operator pos:start="465:14" pos:end="465:14">&amp;</operator><name pos:start="465:15" pos:end="465:25"><name pos:start="465:15" pos:end="465:15">s</name><operator pos:start="465:16" pos:end="465:17">-&gt;</operator><name pos:start="465:18" pos:end="465:25">last_row</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="467:5" pos:end="467:26"><expr pos:start="467:5" pos:end="467:25"><call pos:start="467:5" pos:end="467:25"><name pos:start="467:5" pos:end="467:12">av_freep</name><argument_list pos:start="467:13" pos:end="467:25">(<argument pos:start="467:14" pos:end="467:24"><expr pos:start="467:14" pos:end="467:24"><operator pos:start="467:14" pos:end="467:14">&amp;</operator><name pos:start="467:15" pos:end="467:24"><name pos:start="467:15" pos:end="467:15">s</name><operator pos:start="467:16" pos:end="467:17">-&gt;</operator><name pos:start="467:18" pos:end="467:24">tmp_row</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="469:5" pos:end="469:15">return <expr pos:start="469:12" pos:end="469:14"><name pos:start="469:12" pos:end="469:14">ret</name></expr>;</return>

<label pos:start="471:1" pos:end="471:5"><name pos:start="471:1" pos:end="471:4">fail</name>:</label>

    <expr_stmt pos:start="473:5" pos:end="473:13"><expr pos:start="473:5" pos:end="473:12"><name pos:start="473:5" pos:end="473:7">ret</name> <operator pos:start="473:9" pos:end="473:9">=</operator> <operator pos:start="473:11" pos:end="473:11">-</operator><literal type="number" pos:start="473:12" pos:end="473:12">1</literal></expr>;</expr_stmt>

    <goto pos:start="475:5" pos:end="475:17">goto <name pos:start="475:10" pos:end="475:16">the_end</name>;</goto>

</block_content>}</block></function>
</unit>
