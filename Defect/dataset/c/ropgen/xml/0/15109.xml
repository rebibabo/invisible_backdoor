<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15109.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">msvideo1_decode_8bit</name><parameter_list pos:start="1:33" pos:end="1:52">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:48">Msvideo1Context</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="203:1">{<block_content pos:start="5:5" pos:end="201:64">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">block_ptr</name></decl>, <decl pos:start="5:20" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:28">pixel_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:20">total_blocks</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">pixel_x</name></decl>, <decl pos:start="9:18" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:24">pixel_y</name></decl>;</decl_stmt>  <comment type="block" pos:start="9:28" pos:end="9:65">/* pixel width and height iterators */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">block_x</name></decl>, <decl pos:start="11:18" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:24">block_y</name></decl>;</decl_stmt>  <comment type="block" pos:start="11:28" pos:end="11:65">/* block width and height iterators */</comment>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">blocks_wide</name></decl>, <decl pos:start="13:22" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:32">blocks_high</name></decl>;</decl_stmt>  <comment type="block" pos:start="13:36" pos:end="13:71">/* width and height in 4x4 blocks */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">block_inc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">row_dec</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:29">/* decoding parameters */</comment>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:18">stream_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:33"><decl pos:start="25:5" pos:end="25:24"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:17">char</name></type> <name pos:start="25:19" pos:end="25:24">byte_a</name></decl>, <decl pos:start="25:27" pos:end="25:32"><type ref="prev" pos:start="25:5" pos:end="25:17"/><name pos:start="25:27" pos:end="25:32">byte_b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:25"><decl pos:start="27:5" pos:end="27:24"><type pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:12">unsigned</name> <name pos:start="27:14" pos:end="27:18">short</name></type> <name pos:start="27:20" pos:end="27:24">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:20"><decl pos:start="29:5" pos:end="29:19"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:19">skip_blocks</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:28"><decl pos:start="31:5" pos:end="31:27"><type pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:12">unsigned</name> <name pos:start="31:14" pos:end="31:17">char</name></type> <name pos:start="31:19" pos:end="31:27"><name pos:start="31:19" pos:end="31:24">colors</name><index pos:start="31:25" pos:end="31:27">[<expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:45"><decl pos:start="33:5" pos:end="33:44"><type pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:12">unsigned</name> <name pos:start="33:14" pos:end="33:17">char</name> <modifier pos:start="33:19" pos:end="33:19">*</modifier></type><name pos:start="33:20" pos:end="33:25">pixels</name> <init pos:start="33:27" pos:end="33:44">= <expr pos:start="33:29" pos:end="33:44"><name pos:start="33:29" pos:end="33:44"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:36">frame</name><operator pos:start="33:37" pos:end="33:37">.</operator><name pos:start="33:38" pos:end="33:41">data</name><index pos:start="33:42" pos:end="33:44">[<expr pos:start="33:43" pos:end="33:43"><literal type="number" pos:start="33:43" pos:end="33:43">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:55"><decl pos:start="35:5" pos:end="35:54"><type pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:12">unsigned</name> <name pos:start="35:14" pos:end="35:17">char</name> <modifier pos:start="35:19" pos:end="35:19">*</modifier></type><name pos:start="35:20" pos:end="35:30">prev_pixels</name> <init pos:start="35:32" pos:end="35:54">= <expr pos:start="35:34" pos:end="35:54"><name pos:start="35:34" pos:end="35:54"><name pos:start="35:34" pos:end="35:34">s</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:46">prev_frame</name><operator pos:start="35:47" pos:end="35:47">.</operator><name pos:start="35:48" pos:end="35:51">data</name><index pos:start="35:52" pos:end="35:54">[<expr pos:start="35:53" pos:end="35:53"><literal type="number" pos:start="35:53" pos:end="35:53">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:38"><decl pos:start="37:5" pos:end="37:37"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:14">stride</name> <init pos:start="37:16" pos:end="37:37">= <expr pos:start="37:18" pos:end="37:37"><name pos:start="37:18" pos:end="37:37"><name pos:start="37:18" pos:end="37:18">s</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:25">frame</name><operator pos:start="37:26" pos:end="37:26">.</operator><name pos:start="37:27" pos:end="37:34">linesize</name><index pos:start="37:35" pos:end="37:37">[<expr pos:start="37:36" pos:end="37:36"><literal type="number" pos:start="37:36" pos:end="37:36">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:14">stream_ptr</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:15">skip_blocks</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:15">blocks_wide</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:33"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:26">avctx</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:33">width</name></name> <operator pos:start="45:35" pos:end="45:35">/</operator> <literal type="number" pos:start="45:37" pos:end="45:37">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:15">blocks_high</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:34"><name pos:start="47:19" pos:end="47:19">s</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:26">avctx</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:34">height</name></name> <operator pos:start="47:36" pos:end="47:36">/</operator> <literal type="number" pos:start="47:38" pos:end="47:38">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:16">total_blocks</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:30">blocks_wide</name> <operator pos:start="49:32" pos:end="49:32">*</operator> <name pos:start="49:34" pos:end="49:44">blocks_high</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:18"><expr pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:13">block_inc</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <literal type="number" pos:start="51:17" pos:end="51:17">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:25"><expr pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:11">row_dec</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:20">stride</name> <operator pos:start="53:22" pos:end="53:22">+</operator> <literal type="number" pos:start="53:24" pos:end="53:24">4</literal></expr>;</expr_stmt>



    <for pos:start="57:5" pos:end="193:5">for <control pos:start="57:9" pos:end="57:55">(<init pos:start="57:10" pos:end="57:31"><expr pos:start="57:10" pos:end="57:30"><name pos:start="57:10" pos:end="57:16">block_y</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:30">blocks_high</name></expr>;</init> <condition pos:start="57:33" pos:end="57:44"><expr pos:start="57:33" pos:end="57:43"><name pos:start="57:33" pos:end="57:39">block_y</name> <operator pos:start="57:41" pos:end="57:41">&gt;</operator> <literal type="number" pos:start="57:43" pos:end="57:43">0</literal></expr>;</condition> <incr pos:start="57:46" pos:end="57:54"><expr pos:start="57:46" pos:end="57:54"><name pos:start="57:46" pos:end="57:52">block_y</name><operator pos:start="57:53" pos:end="57:54">--</operator></expr></incr>)</control> <block pos:start="57:57" pos:end="193:5">{<block_content pos:start="59:9" pos:end="191:9">

        <expr_stmt pos:start="59:9" pos:end="59:49"><expr pos:start="59:9" pos:end="59:48"><name pos:start="59:9" pos:end="59:17">block_ptr</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <operator pos:start="59:21" pos:end="59:21">(</operator><operator pos:start="59:22" pos:end="59:22">(</operator><name pos:start="59:23" pos:end="59:29">block_y</name> <operator pos:start="59:31" pos:end="59:31">*</operator> <literal type="number" pos:start="59:33" pos:end="59:33">4</literal><operator pos:start="59:34" pos:end="59:34">)</operator> <operator pos:start="59:36" pos:end="59:36">-</operator> <literal type="number" pos:start="59:38" pos:end="59:38">1</literal><operator pos:start="59:39" pos:end="59:39">)</operator> <operator pos:start="59:41" pos:end="59:41">*</operator> <name pos:start="59:43" pos:end="59:48">stride</name></expr>;</expr_stmt>

        <for pos:start="61:9" pos:end="191:9">for <control pos:start="61:13" pos:end="61:59">(<init pos:start="61:14" pos:end="61:35"><expr pos:start="61:14" pos:end="61:34"><name pos:start="61:14" pos:end="61:20">block_x</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:34">blocks_wide</name></expr>;</init> <condition pos:start="61:37" pos:end="61:48"><expr pos:start="61:37" pos:end="61:47"><name pos:start="61:37" pos:end="61:43">block_x</name> <operator pos:start="61:45" pos:end="61:45">&gt;</operator> <literal type="number" pos:start="61:47" pos:end="61:47">0</literal></expr>;</condition> <incr pos:start="61:50" pos:end="61:58"><expr pos:start="61:50" pos:end="61:58"><name pos:start="61:50" pos:end="61:56">block_x</name><operator pos:start="61:57" pos:end="61:58">--</operator></expr></incr>)</control> <block pos:start="61:61" pos:end="191:9">{<block_content pos:start="65:13" pos:end="189:27">

            <comment type="block" pos:start="63:13" pos:end="63:55">/* check if this block should be skipped */</comment>

            <if_stmt pos:start="65:13" pos:end="77:13"><if pos:start="65:13" pos:end="77:13">if <condition pos:start="65:16" pos:end="65:28">(<expr pos:start="65:17" pos:end="65:27"><name pos:start="65:17" pos:end="65:27">skip_blocks</name></expr>)</condition> <block pos:start="65:30" pos:end="77:13">{<block_content pos:start="67:17" pos:end="75:25">

                <expr_stmt pos:start="67:17" pos:end="67:34"><expr pos:start="67:17" pos:end="67:33"><call pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:31">COPY_PREV_BLOCK</name><argument_list pos:start="67:32" pos:end="67:33">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:39"><expr pos:start="69:17" pos:end="69:38"><name pos:start="69:17" pos:end="69:25">block_ptr</name> <operator pos:start="69:27" pos:end="69:28">+=</operator> <name pos:start="69:30" pos:end="69:38">block_inc</name></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:30"><expr pos:start="71:17" pos:end="71:29"><name pos:start="71:17" pos:end="71:27">skip_blocks</name><operator pos:start="71:28" pos:end="71:29">--</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:31"><expr pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:28">total_blocks</name><operator pos:start="73:29" pos:end="73:30">--</operator></expr>;</expr_stmt>

                <continue pos:start="75:17" pos:end="75:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:34"><expr pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:21">pixel_ptr</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <name pos:start="81:25" pos:end="81:33">block_ptr</name></expr>;</expr_stmt>



            <comment type="block" pos:start="85:13" pos:end="85:67">/* get the next two bytes in the encoded data stream */</comment>

            <expr_stmt pos:start="87:13" pos:end="87:32"><expr pos:start="87:13" pos:end="87:31"><call pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:28">CHECK_STREAM_PTR</name><argument_list pos:start="87:29" pos:end="87:31">(<argument pos:start="87:30" pos:end="87:30"><expr pos:start="87:30" pos:end="87:30"><literal type="number" pos:start="87:30" pos:end="87:30">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:42"><expr pos:start="89:13" pos:end="89:41"><name pos:start="89:13" pos:end="89:18">byte_a</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:41"><name pos:start="89:22" pos:end="89:22">s</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:27">buf</name><index pos:start="89:28" pos:end="89:41">[<expr pos:start="89:29" pos:end="89:40"><name pos:start="89:29" pos:end="89:38">stream_ptr</name><operator pos:start="89:39" pos:end="89:40">++</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:42"><expr pos:start="91:13" pos:end="91:41"><name pos:start="91:13" pos:end="91:18">byte_b</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:41"><name pos:start="91:22" pos:end="91:22">s</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:27">buf</name><index pos:start="91:28" pos:end="91:41">[<expr pos:start="91:29" pos:end="91:40"><name pos:start="91:29" pos:end="91:38">stream_ptr</name><operator pos:start="91:39" pos:end="91:40">++</operator></expr>]</index></name></expr>;</expr_stmt>



            <comment type="block" pos:start="95:13" pos:end="95:49">/* check if the decode is finished */</comment>

            <if_stmt pos:start="97:13" pos:end="183:13"><if pos:start="97:13" pos:end="99:23">if <condition pos:start="97:16" pos:end="97:70">(<expr pos:start="97:17" pos:end="97:69"><operator pos:start="97:17" pos:end="97:17">(</operator><name pos:start="97:18" pos:end="97:23">byte_a</name> <operator pos:start="97:25" pos:end="97:26">==</operator> <literal type="number" pos:start="97:28" pos:end="97:28">0</literal><operator pos:start="97:29" pos:end="97:29">)</operator> <operator pos:start="97:31" pos:end="97:32">&amp;&amp;</operator> <operator pos:start="97:34" pos:end="97:34">(</operator><name pos:start="97:35" pos:end="97:40">byte_b</name> <operator pos:start="97:42" pos:end="97:43">==</operator> <literal type="number" pos:start="97:45" pos:end="97:45">0</literal><operator pos:start="97:46" pos:end="97:46">)</operator> <operator pos:start="97:48" pos:end="97:49">&amp;&amp;</operator> <operator pos:start="97:51" pos:end="97:51">(</operator><name pos:start="97:52" pos:end="97:63">total_blocks</name> <operator pos:start="97:65" pos:end="97:66">==</operator> <literal type="number" pos:start="97:68" pos:end="97:68">0</literal><operator pos:start="97:69" pos:end="97:69">)</operator></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:23"><block_content pos:start="99:17" pos:end="99:23">

                <return pos:start="99:17" pos:end="99:23">return;</return></block_content></block></if>

            <if type="elseif" pos:start="101:13" pos:end="109:13">else if <condition pos:start="101:21" pos:end="101:45">(<expr pos:start="101:22" pos:end="101:44"><operator pos:start="101:22" pos:end="101:22">(</operator><name pos:start="101:23" pos:end="101:28">byte_b</name> <operator pos:start="101:30" pos:end="101:30">&amp;</operator> <literal type="number" pos:start="101:32" pos:end="101:35">0xFC</literal><operator pos:start="101:36" pos:end="101:36">)</operator> <operator pos:start="101:38" pos:end="101:39">==</operator> <literal type="number" pos:start="101:41" pos:end="101:44">0x84</literal></expr>)</condition> <block pos:start="101:47" pos:end="109:13">{<block_content pos:start="105:17" pos:end="107:34">

                <comment type="block" pos:start="103:17" pos:end="103:66">/* skip code, but don't count the current block */</comment>

                <expr_stmt pos:start="105:17" pos:end="105:66"><expr pos:start="105:17" pos:end="105:65"><name pos:start="105:17" pos:end="105:27">skip_blocks</name> <operator pos:start="105:29" pos:end="105:29">=</operator> <operator pos:start="105:31" pos:end="105:31">(</operator><operator pos:start="105:32" pos:end="105:32">(</operator><name pos:start="105:33" pos:end="105:38">byte_b</name> <operator pos:start="105:40" pos:end="105:40">-</operator> <literal type="number" pos:start="105:42" pos:end="105:45">0x84</literal><operator pos:start="105:46" pos:end="105:46">)</operator> <operator pos:start="105:48" pos:end="105:49">&lt;&lt;</operator> <literal type="number" pos:start="105:51" pos:end="105:51">8</literal><operator pos:start="105:52" pos:end="105:52">)</operator> <operator pos:start="105:54" pos:end="105:54">+</operator> <name pos:start="105:56" pos:end="105:61">byte_a</name> <operator pos:start="105:63" pos:end="105:63">-</operator> <literal type="number" pos:start="105:65" pos:end="105:65">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:34"><expr pos:start="107:17" pos:end="107:33"><call pos:start="107:17" pos:end="107:33"><name pos:start="107:17" pos:end="107:31">COPY_PREV_BLOCK</name><argument_list pos:start="107:32" pos:end="107:33">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="109:15" pos:end="135:13">else if <condition pos:start="109:23" pos:end="109:37">(<expr pos:start="109:24" pos:end="109:36"><name pos:start="109:24" pos:end="109:29">byte_b</name> <operator pos:start="109:31" pos:end="109:31">&lt;</operator> <literal type="number" pos:start="109:33" pos:end="109:36">0x80</literal></expr>)</condition> <block pos:start="109:39" pos:end="135:13">{<block_content pos:start="113:17" pos:end="133:17">

                <comment type="block" pos:start="111:17" pos:end="111:38">/* 2-color encoding */</comment>

                <expr_stmt pos:start="113:17" pos:end="113:47"><expr pos:start="113:17" pos:end="113:46"><name pos:start="113:17" pos:end="113:21">flags</name> <operator pos:start="113:23" pos:end="113:23">=</operator> <operator pos:start="113:25" pos:end="113:25">(</operator><name pos:start="113:26" pos:end="113:31">byte_b</name> <operator pos:start="113:33" pos:end="113:34">&lt;&lt;</operator> <literal type="number" pos:start="113:36" pos:end="113:36">8</literal><operator pos:start="113:37" pos:end="113:37">)</operator> <operator pos:start="113:39" pos:end="113:39">|</operator> <name pos:start="113:41" pos:end="113:46">byte_a</name></expr>;</expr_stmt>



                <expr_stmt pos:start="117:17" pos:end="117:36"><expr pos:start="117:17" pos:end="117:35"><call pos:start="117:17" pos:end="117:35"><name pos:start="117:17" pos:end="117:32">CHECK_STREAM_PTR</name><argument_list pos:start="117:33" pos:end="117:35">(<argument pos:start="117:34" pos:end="117:34"><expr pos:start="117:34" pos:end="117:34"><literal type="number" pos:start="117:34" pos:end="117:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:49"><expr pos:start="119:17" pos:end="119:48"><name pos:start="119:17" pos:end="119:25"><name pos:start="119:17" pos:end="119:22">colors</name><index pos:start="119:23" pos:end="119:25">[<expr pos:start="119:24" pos:end="119:24"><literal type="number" pos:start="119:24" pos:end="119:24">0</literal></expr>]</index></name> <operator pos:start="119:27" pos:end="119:27">=</operator> <name pos:start="119:29" pos:end="119:48"><name pos:start="119:29" pos:end="119:29">s</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:34">buf</name><index pos:start="119:35" pos:end="119:48">[<expr pos:start="119:36" pos:end="119:47"><name pos:start="119:36" pos:end="119:45">stream_ptr</name><operator pos:start="119:46" pos:end="119:47">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:49"><expr pos:start="121:17" pos:end="121:48"><name pos:start="121:17" pos:end="121:25"><name pos:start="121:17" pos:end="121:22">colors</name><index pos:start="121:23" pos:end="121:25">[<expr pos:start="121:24" pos:end="121:24"><literal type="number" pos:start="121:24" pos:end="121:24">1</literal></expr>]</index></name> <operator pos:start="121:27" pos:end="121:27">=</operator> <name pos:start="121:29" pos:end="121:48"><name pos:start="121:29" pos:end="121:29">s</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:34">buf</name><index pos:start="121:35" pos:end="121:48">[<expr pos:start="121:36" pos:end="121:47"><name pos:start="121:36" pos:end="121:45">stream_ptr</name><operator pos:start="121:46" pos:end="121:47">++</operator></expr>]</index></name></expr>;</expr_stmt>



                <for pos:start="125:17" pos:end="133:17">for <control pos:start="125:21" pos:end="125:57">(<init pos:start="125:22" pos:end="125:33"><expr pos:start="125:22" pos:end="125:32"><name pos:start="125:22" pos:end="125:28">pixel_y</name> <operator pos:start="125:30" pos:end="125:30">=</operator> <literal type="number" pos:start="125:32" pos:end="125:32">0</literal></expr>;</init> <condition pos:start="125:35" pos:end="125:46"><expr pos:start="125:35" pos:end="125:45"><name pos:start="125:35" pos:end="125:41">pixel_y</name> <operator pos:start="125:43" pos:end="125:43">&lt;</operator> <literal type="number" pos:start="125:45" pos:end="125:45">4</literal></expr>;</condition> <incr pos:start="125:48" pos:end="125:56"><expr pos:start="125:48" pos:end="125:56"><name pos:start="125:48" pos:end="125:54">pixel_y</name><operator pos:start="125:55" pos:end="125:56">++</operator></expr></incr>)</control> <block pos:start="125:59" pos:end="133:17">{<block_content pos:start="127:21" pos:end="131:41">

                    <for pos:start="127:21" pos:end="129:72">for <control pos:start="127:25" pos:end="127:74">(<init pos:start="127:26" pos:end="127:37"><expr pos:start="127:26" pos:end="127:36"><name pos:start="127:26" pos:end="127:32">pixel_x</name> <operator pos:start="127:34" pos:end="127:34">=</operator> <literal type="number" pos:start="127:36" pos:end="127:36">0</literal></expr>;</init> <condition pos:start="127:39" pos:end="127:50"><expr pos:start="127:39" pos:end="127:49"><name pos:start="127:39" pos:end="127:45">pixel_x</name> <operator pos:start="127:47" pos:end="127:47">&lt;</operator> <literal type="number" pos:start="127:49" pos:end="127:49">4</literal></expr>;</condition> <incr pos:start="127:52" pos:end="127:73"><expr pos:start="127:52" pos:end="127:60"><name pos:start="127:52" pos:end="127:58">pixel_x</name><operator pos:start="127:59" pos:end="127:60">++</operator></expr><operator pos:start="127:61" pos:end="127:61">,</operator> <expr pos:start="127:63" pos:end="127:73"><name pos:start="127:63" pos:end="127:67">flags</name> <operator pos:start="127:69" pos:end="127:71">&gt;&gt;=</operator> <literal type="number" pos:start="127:73" pos:end="127:73">1</literal></expr></incr>)</control><block type="pseudo" pos:start="129:25" pos:end="129:72"><block_content pos:start="129:25" pos:end="129:72">

                        <expr_stmt pos:start="129:25" pos:end="129:72"><expr pos:start="129:25" pos:end="129:71"><name pos:start="129:25" pos:end="129:43"><name pos:start="129:25" pos:end="129:30">pixels</name><index pos:start="129:31" pos:end="129:43">[<expr pos:start="129:32" pos:end="129:42"><name pos:start="129:32" pos:end="129:40">pixel_ptr</name><operator pos:start="129:41" pos:end="129:42">++</operator></expr>]</index></name> <operator pos:start="129:45" pos:end="129:45">=</operator> <name pos:start="129:47" pos:end="129:71"><name pos:start="129:47" pos:end="129:52">colors</name><index pos:start="129:53" pos:end="129:71">[<expr pos:start="129:54" pos:end="129:70"><operator pos:start="129:54" pos:end="129:54">(</operator><name pos:start="129:55" pos:end="129:59">flags</name> <operator pos:start="129:61" pos:end="129:61">&amp;</operator> <literal type="number" pos:start="129:63" pos:end="129:65">0x1</literal><operator pos:start="129:66" pos:end="129:66">)</operator> <operator pos:start="129:68" pos:end="129:68">^</operator> <literal type="number" pos:start="129:70" pos:end="129:70">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="131:21" pos:end="131:41"><expr pos:start="131:21" pos:end="131:40"><name pos:start="131:21" pos:end="131:29">pixel_ptr</name> <operator pos:start="131:31" pos:end="131:32">-=</operator> <name pos:start="131:34" pos:end="131:40">row_dec</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <if type="elseif" pos:start="135:15" pos:end="165:13">else if <condition pos:start="135:23" pos:end="135:38">(<expr pos:start="135:24" pos:end="135:37"><name pos:start="135:24" pos:end="135:29">byte_b</name> <operator pos:start="135:31" pos:end="135:32">&gt;=</operator> <literal type="number" pos:start="135:34" pos:end="135:37">0x90</literal></expr>)</condition> <block pos:start="135:40" pos:end="165:13">{<block_content pos:start="139:17" pos:end="163:17">

                <comment type="block" pos:start="137:17" pos:end="137:38">/* 8-color encoding */</comment>

                <expr_stmt pos:start="139:17" pos:end="139:47"><expr pos:start="139:17" pos:end="139:46"><name pos:start="139:17" pos:end="139:21">flags</name> <operator pos:start="139:23" pos:end="139:23">=</operator> <operator pos:start="139:25" pos:end="139:25">(</operator><name pos:start="139:26" pos:end="139:31">byte_b</name> <operator pos:start="139:33" pos:end="139:34">&lt;&lt;</operator> <literal type="number" pos:start="139:36" pos:end="139:36">8</literal><operator pos:start="139:37" pos:end="139:37">)</operator> <operator pos:start="139:39" pos:end="139:39">|</operator> <name pos:start="139:41" pos:end="139:46">byte_a</name></expr>;</expr_stmt>



                <expr_stmt pos:start="143:17" pos:end="143:36"><expr pos:start="143:17" pos:end="143:35"><call pos:start="143:17" pos:end="143:35"><name pos:start="143:17" pos:end="143:32">CHECK_STREAM_PTR</name><argument_list pos:start="143:33" pos:end="143:35">(<argument pos:start="143:34" pos:end="143:34"><expr pos:start="143:34" pos:end="143:34"><literal type="number" pos:start="143:34" pos:end="143:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:55"><expr pos:start="145:17" pos:end="145:54"><call pos:start="145:17" pos:end="145:54"><name pos:start="145:17" pos:end="145:22">memcpy</name><argument_list pos:start="145:23" pos:end="145:54">(<argument pos:start="145:24" pos:end="145:29"><expr pos:start="145:24" pos:end="145:29"><name pos:start="145:24" pos:end="145:29">colors</name></expr></argument>, <argument pos:start="145:32" pos:end="145:50"><expr pos:start="145:32" pos:end="145:50"><operator pos:start="145:32" pos:end="145:32">&amp;</operator><name pos:start="145:33" pos:end="145:50"><name pos:start="145:33" pos:end="145:33">s</name><operator pos:start="145:34" pos:end="145:35">-&gt;</operator><name pos:start="145:36" pos:end="145:38">buf</name><index pos:start="145:39" pos:end="145:50">[<expr pos:start="145:40" pos:end="145:49"><name pos:start="145:40" pos:end="145:49">stream_ptr</name></expr>]</index></name></expr></argument>, <argument pos:start="145:53" pos:end="145:53"><expr pos:start="145:53" pos:end="145:53"><literal type="number" pos:start="145:53" pos:end="145:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:32"><expr pos:start="147:17" pos:end="147:31"><name pos:start="147:17" pos:end="147:26">stream_ptr</name> <operator pos:start="147:28" pos:end="147:29">+=</operator> <literal type="number" pos:start="147:31" pos:end="147:31">8</literal></expr>;</expr_stmt>



                <for pos:start="151:17" pos:end="163:17">for <control pos:start="151:21" pos:end="151:57">(<init pos:start="151:22" pos:end="151:33"><expr pos:start="151:22" pos:end="151:32"><name pos:start="151:22" pos:end="151:28">pixel_y</name> <operator pos:start="151:30" pos:end="151:30">=</operator> <literal type="number" pos:start="151:32" pos:end="151:32">0</literal></expr>;</init> <condition pos:start="151:35" pos:end="151:46"><expr pos:start="151:35" pos:end="151:45"><name pos:start="151:35" pos:end="151:41">pixel_y</name> <operator pos:start="151:43" pos:end="151:43">&lt;</operator> <literal type="number" pos:start="151:45" pos:end="151:45">4</literal></expr>;</condition> <incr pos:start="151:48" pos:end="151:56"><expr pos:start="151:48" pos:end="151:56"><name pos:start="151:48" pos:end="151:54">pixel_y</name><operator pos:start="151:55" pos:end="151:56">++</operator></expr></incr>)</control> <block pos:start="151:59" pos:end="163:17">{<block_content pos:start="153:21" pos:end="161:41">

                    <for pos:start="153:21" pos:end="159:71">for <control pos:start="153:25" pos:end="153:74">(<init pos:start="153:26" pos:end="153:37"><expr pos:start="153:26" pos:end="153:36"><name pos:start="153:26" pos:end="153:32">pixel_x</name> <operator pos:start="153:34" pos:end="153:34">=</operator> <literal type="number" pos:start="153:36" pos:end="153:36">0</literal></expr>;</init> <condition pos:start="153:39" pos:end="153:50"><expr pos:start="153:39" pos:end="153:49"><name pos:start="153:39" pos:end="153:45">pixel_x</name> <operator pos:start="153:47" pos:end="153:47">&lt;</operator> <literal type="number" pos:start="153:49" pos:end="153:49">4</literal></expr>;</condition> <incr pos:start="153:52" pos:end="153:73"><expr pos:start="153:52" pos:end="153:60"><name pos:start="153:52" pos:end="153:58">pixel_x</name><operator pos:start="153:59" pos:end="153:60">++</operator></expr><operator pos:start="153:61" pos:end="153:61">,</operator> <expr pos:start="153:63" pos:end="153:73"><name pos:start="153:63" pos:end="153:67">flags</name> <operator pos:start="153:69" pos:end="153:71">&gt;&gt;=</operator> <literal type="number" pos:start="153:73" pos:end="153:73">1</literal></expr></incr>)</control><block type="pseudo" pos:start="155:25" pos:end="159:71"><block_content pos:start="155:25" pos:end="159:71">

                        <expr_stmt pos:start="155:25" pos:end="159:71"><expr pos:start="155:25" pos:end="159:70"><name pos:start="155:25" pos:end="155:43"><name pos:start="155:25" pos:end="155:30">pixels</name><index pos:start="155:31" pos:end="155:43">[<expr pos:start="155:32" pos:end="155:42"><name pos:start="155:32" pos:end="155:40">pixel_ptr</name><operator pos:start="155:41" pos:end="155:42">++</operator></expr>]</index></name> <operator pos:start="155:45" pos:end="155:45">=</operator> 

                            <name pos:start="157:29" pos:end="159:70"><name pos:start="157:29" pos:end="157:34">colors</name><index pos:start="157:35" pos:end="159:70">[<expr pos:start="157:36" pos:end="159:69"><operator pos:start="157:36" pos:end="157:36">(</operator><operator pos:start="157:37" pos:end="157:37">(</operator><name pos:start="157:38" pos:end="157:44">pixel_y</name> <operator pos:start="157:46" pos:end="157:46">&amp;</operator> <literal type="number" pos:start="157:48" pos:end="157:50">0x2</literal><operator pos:start="157:51" pos:end="157:51">)</operator> <operator pos:start="157:53" pos:end="157:54">&lt;&lt;</operator> <literal type="number" pos:start="157:56" pos:end="157:56">1</literal><operator pos:start="157:57" pos:end="157:57">)</operator> <operator pos:start="157:59" pos:end="157:59">+</operator> 

                                <operator pos:start="159:33" pos:end="159:33">(</operator><name pos:start="159:34" pos:end="159:40">pixel_x</name> <operator pos:start="159:42" pos:end="159:42">&amp;</operator> <literal type="number" pos:start="159:44" pos:end="159:46">0x2</literal><operator pos:start="159:47" pos:end="159:47">)</operator> <operator pos:start="159:49" pos:end="159:49">+</operator> <operator pos:start="159:51" pos:end="159:51">(</operator><operator pos:start="159:52" pos:end="159:52">(</operator><name pos:start="159:53" pos:end="159:57">flags</name> <operator pos:start="159:59" pos:end="159:59">&amp;</operator> <literal type="number" pos:start="159:61" pos:end="159:63">0x1</literal><operator pos:start="159:64" pos:end="159:64">)</operator> <operator pos:start="159:66" pos:end="159:66">^</operator> <literal type="number" pos:start="159:68" pos:end="159:68">1</literal><operator pos:start="159:69" pos:end="159:69">)</operator></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="161:21" pos:end="161:41"><expr pos:start="161:21" pos:end="161:40"><name pos:start="161:21" pos:end="161:29">pixel_ptr</name> <operator pos:start="161:31" pos:end="161:32">-=</operator> <name pos:start="161:34" pos:end="161:40">row_dec</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="165:15" pos:end="183:13">else <block pos:start="165:20" pos:end="183:13">{<block_content pos:start="169:17" pos:end="181:17">

                <comment type="block" pos:start="167:17" pos:end="167:38">/* 1-color encoding */</comment>

                <expr_stmt pos:start="169:17" pos:end="169:35"><expr pos:start="169:17" pos:end="169:34"><name pos:start="169:17" pos:end="169:25"><name pos:start="169:17" pos:end="169:22">colors</name><index pos:start="169:23" pos:end="169:25">[<expr pos:start="169:24" pos:end="169:24"><literal type="number" pos:start="169:24" pos:end="169:24">0</literal></expr>]</index></name> <operator pos:start="169:27" pos:end="169:27">=</operator> <name pos:start="169:29" pos:end="169:34">byte_a</name></expr>;</expr_stmt>



                <for pos:start="173:17" pos:end="181:17">for <control pos:start="173:21" pos:end="173:57">(<init pos:start="173:22" pos:end="173:33"><expr pos:start="173:22" pos:end="173:32"><name pos:start="173:22" pos:end="173:28">pixel_y</name> <operator pos:start="173:30" pos:end="173:30">=</operator> <literal type="number" pos:start="173:32" pos:end="173:32">0</literal></expr>;</init> <condition pos:start="173:35" pos:end="173:46"><expr pos:start="173:35" pos:end="173:45"><name pos:start="173:35" pos:end="173:41">pixel_y</name> <operator pos:start="173:43" pos:end="173:43">&lt;</operator> <literal type="number" pos:start="173:45" pos:end="173:45">4</literal></expr>;</condition> <incr pos:start="173:48" pos:end="173:56"><expr pos:start="173:48" pos:end="173:56"><name pos:start="173:48" pos:end="173:54">pixel_y</name><operator pos:start="173:55" pos:end="173:56">++</operator></expr></incr>)</control> <block pos:start="173:59" pos:end="181:17">{<block_content pos:start="175:21" pos:end="179:41">

                    <for pos:start="175:21" pos:end="177:56">for <control pos:start="175:25" pos:end="175:61">(<init pos:start="175:26" pos:end="175:37"><expr pos:start="175:26" pos:end="175:36"><name pos:start="175:26" pos:end="175:32">pixel_x</name> <operator pos:start="175:34" pos:end="175:34">=</operator> <literal type="number" pos:start="175:36" pos:end="175:36">0</literal></expr>;</init> <condition pos:start="175:39" pos:end="175:50"><expr pos:start="175:39" pos:end="175:49"><name pos:start="175:39" pos:end="175:45">pixel_x</name> <operator pos:start="175:47" pos:end="175:47">&lt;</operator> <literal type="number" pos:start="175:49" pos:end="175:49">4</literal></expr>;</condition> <incr pos:start="175:52" pos:end="175:60"><expr pos:start="175:52" pos:end="175:60"><name pos:start="175:52" pos:end="175:58">pixel_x</name><operator pos:start="175:59" pos:end="175:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="177:25" pos:end="177:56"><block_content pos:start="177:25" pos:end="177:56">

                        <expr_stmt pos:start="177:25" pos:end="177:56"><expr pos:start="177:25" pos:end="177:55"><name pos:start="177:25" pos:end="177:43"><name pos:start="177:25" pos:end="177:30">pixels</name><index pos:start="177:31" pos:end="177:43">[<expr pos:start="177:32" pos:end="177:42"><name pos:start="177:32" pos:end="177:40">pixel_ptr</name><operator pos:start="177:41" pos:end="177:42">++</operator></expr>]</index></name> <operator pos:start="177:45" pos:end="177:45">=</operator> <name pos:start="177:47" pos:end="177:55"><name pos:start="177:47" pos:end="177:52">colors</name><index pos:start="177:53" pos:end="177:55">[<expr pos:start="177:54" pos:end="177:54"><literal type="number" pos:start="177:54" pos:end="177:54">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="179:21" pos:end="179:41"><expr pos:start="179:21" pos:end="179:40"><name pos:start="179:21" pos:end="179:29">pixel_ptr</name> <operator pos:start="179:31" pos:end="179:32">-=</operator> <name pos:start="179:34" pos:end="179:40">row_dec</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="187:13" pos:end="187:35"><expr pos:start="187:13" pos:end="187:34"><name pos:start="187:13" pos:end="187:21">block_ptr</name> <operator pos:start="187:23" pos:end="187:24">+=</operator> <name pos:start="187:26" pos:end="187:34">block_inc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:27"><expr pos:start="189:13" pos:end="189:26"><name pos:start="189:13" pos:end="189:24">total_blocks</name><operator pos:start="189:25" pos:end="189:26">--</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="197:5" pos:end="197:51">/* make the palette available on the way out */</comment>

    <if_stmt pos:start="199:5" pos:end="201:64"><if pos:start="199:5" pos:end="201:64">if <condition pos:start="199:8" pos:end="199:42">(<expr pos:start="199:9" pos:end="199:41"><name pos:start="199:9" pos:end="199:25"><name pos:start="199:9" pos:end="199:9">s</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:16">avctx</name><operator pos:start="199:17" pos:end="199:18">-&gt;</operator><name pos:start="199:19" pos:end="199:25">pix_fmt</name></name> <operator pos:start="199:27" pos:end="199:28">==</operator> <name pos:start="199:30" pos:end="199:41">PIX_FMT_PAL8</name></expr>)</condition><block type="pseudo" pos:start="201:9" pos:end="201:64"><block_content pos:start="201:9" pos:end="201:64">

        <expr_stmt pos:start="201:9" pos:end="201:64"><expr pos:start="201:9" pos:end="201:63"><call pos:start="201:9" pos:end="201:63"><name pos:start="201:9" pos:end="201:14">memcpy</name><argument_list pos:start="201:15" pos:end="201:63">(<argument pos:start="201:16" pos:end="201:31"><expr pos:start="201:16" pos:end="201:31"><name pos:start="201:16" pos:end="201:31"><name pos:start="201:16" pos:end="201:16">s</name><operator pos:start="201:17" pos:end="201:18">-&gt;</operator><name pos:start="201:19" pos:end="201:23">frame</name><operator pos:start="201:24" pos:end="201:24">.</operator><name pos:start="201:25" pos:end="201:28">data</name><index pos:start="201:29" pos:end="201:31">[<expr pos:start="201:30" pos:end="201:30"><literal type="number" pos:start="201:30" pos:end="201:30">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="201:34" pos:end="201:43"><expr pos:start="201:34" pos:end="201:43"><name pos:start="201:34" pos:end="201:43"><name pos:start="201:34" pos:end="201:34">s</name><operator pos:start="201:35" pos:end="201:36">-&gt;</operator><name pos:start="201:37" pos:end="201:43">palette</name></name></expr></argument>, <argument pos:start="201:46" pos:end="201:62"><expr pos:start="201:46" pos:end="201:62"><name pos:start="201:46" pos:end="201:58">PALETTE_COUNT</name> <operator pos:start="201:60" pos:end="201:60">*</operator> <literal type="number" pos:start="201:62" pos:end="201:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
