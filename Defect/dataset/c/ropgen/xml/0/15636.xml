<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15636.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">unsigned</name> <name pos:start="1:17" pos:end="1:19">int</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type> <name pos:start="1:23" pos:end="1:39">create_elf_tables</name><parameter_list pos:start="1:40" pos:end="11:64">(<parameter pos:start="1:41" pos:end="1:47"><decl pos:start="1:41" pos:end="1:47"><type pos:start="1:41" pos:end="1:47"><name pos:start="1:41" pos:end="1:44">char</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">p</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:57"><decl pos:start="1:50" pos:end="1:57"><type pos:start="1:50" pos:end="1:57"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:57">argc</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:67"><decl pos:start="1:60" pos:end="1:67"><type pos:start="1:60" pos:end="1:67"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:67">envc</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:60"><decl pos:start="3:41" pos:end="3:60"><type pos:start="3:41" pos:end="3:60"><name pos:start="3:41" pos:end="3:53"><name pos:start="3:41" pos:end="3:46">struct</name> <name pos:start="3:48" pos:end="3:53">elfhdr</name></name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type> <name pos:start="3:57" pos:end="3:60">exec</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:63"><decl pos:start="5:41" pos:end="5:63"><type pos:start="5:41" pos:end="5:63"><name pos:start="5:41" pos:end="5:48">unsigned</name> <name pos:start="5:50" pos:end="5:53">long</name></type> <name pos:start="5:55" pos:end="5:63">load_addr</name></decl></parameter>,

                                        <parameter pos:start="7:41" pos:end="7:63"><decl pos:start="7:41" pos:end="7:63"><type pos:start="7:41" pos:end="7:63"><name pos:start="7:41" pos:end="7:48">unsigned</name> <name pos:start="7:50" pos:end="7:53">long</name></type> <name pos:start="7:55" pos:end="7:63">load_bias</name></decl></parameter>,

                                        <parameter pos:start="9:41" pos:end="9:70"><decl pos:start="9:41" pos:end="9:70"><type pos:start="9:41" pos:end="9:70"><name pos:start="9:41" pos:end="9:48">unsigned</name> <name pos:start="9:50" pos:end="9:53">long</name></type> <name pos:start="9:55" pos:end="9:70">interp_load_addr</name></decl></parameter>, <parameter pos:start="9:73" pos:end="9:80"><decl pos:start="9:73" pos:end="9:80"><type pos:start="9:73" pos:end="9:80"><name pos:start="9:73" pos:end="9:75">int</name></type> <name pos:start="9:77" pos:end="9:80">ibcs</name></decl></parameter>,

                                        <parameter pos:start="11:41" pos:end="11:63"><decl pos:start="11:41" pos:end="11:63"><type pos:start="11:41" pos:end="11:63"><name pos:start="11:41" pos:end="11:57"><name pos:start="11:41" pos:end="11:46">struct</name> <name pos:start="11:48" pos:end="11:57">image_info</name></name> <modifier pos:start="11:59" pos:end="11:59">*</modifier></type><name pos:start="11:60" pos:end="11:63">info</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="151:1">{<block_content pos:start="15:9" pos:end="149:18">

        <decl_stmt pos:start="15:9" pos:end="15:34"><decl pos:start="15:9" pos:end="15:26"><type pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:20">target_ulong</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:26">argv</name></decl>, <decl pos:start="15:29" pos:end="15:33"><type ref="prev" pos:start="15:9" pos:end="15:22"><modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:33">envp</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:31"><decl pos:start="17:9" pos:end="17:24"><type pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:20">target_ulong</name> <modifier pos:start="17:22" pos:end="17:22">*</modifier></type><name pos:start="17:23" pos:end="17:24">sp</name></decl>, <decl pos:start="17:27" pos:end="17:30"><type ref="prev" pos:start="17:9" pos:end="17:22"><modifier pos:start="17:27" pos:end="17:27">*</modifier></type><name pos:start="17:28" pos:end="17:30">csp</name></decl>;</decl_stmt>

        

	<comment type="block" pos:start="21:9" pos:end="25:11">/*

	 * Force 16 byte _final_ alignment here for generality.

	 */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:58"><expr pos:start="27:9" pos:end="27:57"><name pos:start="27:9" pos:end="27:10">sp</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <operator pos:start="27:14" pos:end="27:14">(</operator><name pos:start="27:15" pos:end="27:22">unsigned</name> <name pos:start="27:24" pos:end="27:26">int</name> <operator pos:start="27:28" pos:end="27:28">*</operator><operator pos:start="27:29" pos:end="27:29">)</operator> <operator pos:start="27:31" pos:end="27:31">(</operator><operator pos:start="27:32" pos:end="27:32">~</operator><literal type="number" pos:start="27:33" pos:end="27:36">15UL</literal> <operator pos:start="27:38" pos:end="27:38">&amp;</operator> <operator pos:start="27:40" pos:end="27:40">(</operator><name pos:start="27:41" pos:end="27:48">unsigned</name> <name pos:start="27:50" pos:end="27:53">long</name><operator pos:start="27:54" pos:end="27:54">)</operator> <name pos:start="27:56" pos:end="27:56">p</name><operator pos:start="27:57" pos:end="27:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:17"><expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:11">csp</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:16">sp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="34:0"><expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:11">csp</name> <operator pos:start="31:13" pos:end="31:14">-=</operator> <operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:28">DLINFO_ITEMS</name> <operator pos:start="31:30" pos:end="31:30">+</operator> <literal type="number" pos:start="31:32" pos:end="31:32">1</literal><operator pos:start="31:33" pos:end="31:33">)</operator> <operator pos:start="31:35" pos:end="31:35">*</operator> <literal type="number" pos:start="31:37" pos:end="31:37">2</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="33:1" pos:end="33:24">#<cpp:directive pos:start="33:2" pos:end="33:6">ifdef</cpp:directive> <name pos:start="33:8" pos:end="33:24">DLINFO_ARCH_ITEMS</name></cpp:ifdef>

	<expr_stmt pos:start="35:9" pos:end="38:0"><expr pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:11">csp</name> <operator pos:start="35:13" pos:end="35:14">-=</operator> <name pos:start="35:16" pos:end="35:32">DLINFO_ARCH_ITEMS</name><operator pos:start="35:33" pos:end="35:33">*</operator><literal type="number" pos:start="35:34" pos:end="35:34">2</literal></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:11">csp</name> <operator pos:start="39:13" pos:end="39:14">-=</operator> <name pos:start="39:16" pos:end="39:19">envc</name><operator pos:start="39:20" pos:end="39:20">+</operator><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">csp</name> <operator pos:start="41:13" pos:end="41:14">-=</operator> <name pos:start="41:16" pos:end="41:19">argc</name><operator pos:start="41:20" pos:end="41:20">+</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:11">csp</name> <operator pos:start="43:13" pos:end="43:14">-=</operator> <operator pos:start="43:16" pos:end="43:16">(</operator><ternary pos:start="43:17" pos:end="43:29"><condition pos:start="43:17" pos:end="43:23"><expr pos:start="43:17" pos:end="43:21"><operator pos:start="43:17" pos:end="43:17">!</operator><name pos:start="43:18" pos:end="43:21">ibcs</name></expr> ?</condition><then pos:start="43:25" pos:end="43:25"> <expr pos:start="43:25" pos:end="43:25"><literal type="number" pos:start="43:25" pos:end="43:25">3</literal></expr> </then><else pos:start="43:27" pos:end="43:29">: <expr pos:start="43:29" pos:end="43:29"><literal type="number" pos:start="43:29" pos:end="43:29">1</literal></expr></else></ternary><operator pos:start="43:30" pos:end="43:30">)</operator></expr>;</expr_stmt>	<comment type="block" pos:start="43:33" pos:end="43:49">/* argc itself */</comment>

        <if_stmt pos:start="45:9" pos:end="56:0"><if pos:start="45:9" pos:end="56:0">if <condition pos:start="45:12" pos:end="45:38">(<expr pos:start="45:13" pos:end="45:37"><operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:21">unsigned</name> <name pos:start="45:23" pos:end="45:26">long</name><operator pos:start="45:27" pos:end="45:27">)</operator><name pos:start="45:28" pos:end="45:30">csp</name> <operator pos:start="45:32" pos:end="45:32">&amp;</operator> <literal type="number" pos:start="45:34" pos:end="45:37">15UL</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="56:0"><block_content pos:start="47:13" pos:end="56:0">

            <expr_stmt pos:start="47:13" pos:end="56:0"><expr pos:start="47:13" pos:end="47:59"><name pos:start="47:13" pos:end="47:14">sp</name> <operator pos:start="47:16" pos:end="47:17">-=</operator> <operator pos:start="47:19" pos:end="47:19">(</operator><operator pos:start="47:20" pos:end="47:20">(</operator><name pos:start="47:21" pos:end="47:28">unsigned</name> <name pos:start="47:30" pos:end="47:33">long</name><operator pos:start="47:34" pos:end="47:34">)</operator><name pos:start="47:35" pos:end="47:37">csp</name> <operator pos:start="47:39" pos:end="47:39">&amp;</operator> <literal type="number" pos:start="47:41" pos:end="47:44">15UL</literal><operator pos:start="47:45" pos:end="47:45">)</operator> <operator pos:start="47:47" pos:end="47:47">/</operator> <sizeof pos:start="47:49" pos:end="47:59">sizeof<argument_list pos:start="47:55" pos:end="47:59">(<argument pos:start="47:56" pos:end="47:58"><expr pos:start="47:56" pos:end="47:58"><operator pos:start="47:56" pos:end="47:56">*</operator><name pos:start="47:57" pos:end="47:58">sp</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt></block_content></block></if></if_stmt>

        

<cpp:define pos:start="51:1" pos:end="55:51">#<cpp:directive pos:start="51:2" pos:end="51:7">define</cpp:directive> <cpp:macro pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:19">NEW_AUX_ENT</name><parameter_list pos:start="51:20" pos:end="51:32">(<parameter pos:start="51:21" pos:end="51:22"><type pos:start="51:21" pos:end="51:22"><name pos:start="51:21" pos:end="51:22">nr</name></type></parameter>, <parameter pos:start="51:25" pos:end="51:26"><type pos:start="51:25" pos:end="51:26"><name pos:start="51:25" pos:end="51:26">id</name></type></parameter>, <parameter pos:start="51:29" pos:end="51:31"><type pos:start="51:29" pos:end="51:31"><name pos:start="51:29" pos:end="51:31">val</name></type></parameter>)</parameter_list></cpp:macro> \

          <cpp:value pos:start="53:11" pos:end="55:51">put_user (tswapl(id), sp + (nr * 2)); \

          put_user (tswapl(val), sp + (nr * 2 + 1))</cpp:value></cpp:define>

        <expr_stmt pos:start="57:9" pos:end="57:16"><expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:10">sp</name> <operator pos:start="57:12" pos:end="57:13">-=</operator> <literal type="number" pos:start="57:15" pos:end="57:15">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:36"><expr pos:start="59:9" pos:end="59:35"><call pos:start="59:9" pos:end="59:35"><name pos:start="59:9" pos:end="59:19">NEW_AUX_ENT</name> <argument_list pos:start="59:21" pos:end="59:35">(<argument pos:start="59:22" pos:end="59:22"><expr pos:start="59:22" pos:end="59:22"><literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr></argument>, <argument pos:start="59:25" pos:end="59:31"><expr pos:start="59:25" pos:end="59:31"><name pos:start="59:25" pos:end="59:31">AT_NULL</name></expr></argument>, <argument pos:start="59:34" pos:end="59:34"><expr pos:start="59:34" pos:end="59:34"><literal type="number" pos:start="59:34" pos:end="59:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="63:9" pos:end="63:29"><expr pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:10">sp</name> <operator pos:start="63:12" pos:end="63:13">-=</operator> <name pos:start="63:15" pos:end="63:26">DLINFO_ITEMS</name><operator pos:start="63:27" pos:end="63:27">*</operator><literal type="number" pos:start="63:28" pos:end="63:28">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:76"><expr pos:start="65:9" pos:end="65:75"><call pos:start="65:9" pos:end="65:75"><name pos:start="65:9" pos:end="65:19">NEW_AUX_ENT</name><argument_list pos:start="65:20" pos:end="65:75">( <argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr></argument>, <argument pos:start="65:25" pos:end="65:31"><expr pos:start="65:25" pos:end="65:31"><name pos:start="65:25" pos:end="65:31">AT_PHDR</name></expr></argument>, <argument pos:start="65:34" pos:end="65:74"><expr pos:start="65:34" pos:end="65:74"><operator pos:start="65:34" pos:end="65:34">(</operator><name pos:start="65:35" pos:end="65:46">target_ulong</name><operator pos:start="65:47" pos:end="65:47">)</operator><operator pos:start="65:48" pos:end="65:48">(</operator><name pos:start="65:49" pos:end="65:57">load_addr</name> <operator pos:start="65:59" pos:end="65:59">+</operator> <name pos:start="65:61" pos:end="65:73"><name pos:start="65:61" pos:end="65:64">exec</name><operator pos:start="65:65" pos:end="65:66">-&gt;</operator><name pos:start="65:67" pos:end="65:73">e_phoff</name></name><operator pos:start="65:74" pos:end="65:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:76"><expr pos:start="67:9" pos:end="67:75"><call pos:start="67:9" pos:end="67:75"><name pos:start="67:9" pos:end="67:19">NEW_AUX_ENT</name><argument_list pos:start="67:20" pos:end="67:75">( <argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><literal type="number" pos:start="67:22" pos:end="67:22">1</literal></expr></argument>, <argument pos:start="67:25" pos:end="67:32"><expr pos:start="67:25" pos:end="67:32"><name pos:start="67:25" pos:end="67:32">AT_PHENT</name></expr></argument>, <argument pos:start="67:35" pos:end="67:74"><expr pos:start="67:35" pos:end="67:74"><operator pos:start="67:35" pos:end="67:35">(</operator><name pos:start="67:36" pos:end="67:47">target_ulong</name><operator pos:start="67:48" pos:end="67:48">)</operator><operator pos:start="67:49" pos:end="67:49">(</operator><sizeof pos:start="67:50" pos:end="67:73">sizeof <argument_list pos:start="67:57" pos:end="67:73">(<argument pos:start="67:58" pos:end="67:72"><expr pos:start="67:58" pos:end="67:72">struct <name pos:start="67:65" pos:end="67:72">elf_phdr</name></expr></argument>)</argument_list></sizeof><operator pos:start="67:74" pos:end="67:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:65"><expr pos:start="69:9" pos:end="69:64"><call pos:start="69:9" pos:end="69:64"><name pos:start="69:9" pos:end="69:19">NEW_AUX_ENT</name><argument_list pos:start="69:20" pos:end="69:64">( <argument pos:start="69:22" pos:end="69:22"><expr pos:start="69:22" pos:end="69:22"><literal type="number" pos:start="69:22" pos:end="69:22">2</literal></expr></argument>, <argument pos:start="69:25" pos:end="69:32"><expr pos:start="69:25" pos:end="69:32"><name pos:start="69:25" pos:end="69:32">AT_PHNUM</name></expr></argument>, <argument pos:start="69:35" pos:end="69:63"><expr pos:start="69:35" pos:end="69:63"><operator pos:start="69:35" pos:end="69:35">(</operator><name pos:start="69:36" pos:end="69:47">target_ulong</name><operator pos:start="69:48" pos:end="69:48">)</operator><operator pos:start="69:49" pos:end="69:49">(</operator><name pos:start="69:50" pos:end="69:62"><name pos:start="69:50" pos:end="69:53">exec</name><operator pos:start="69:54" pos:end="69:55">-&gt;</operator><name pos:start="69:56" pos:end="69:62">e_phnum</name></name><operator pos:start="69:63" pos:end="69:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:69"><expr pos:start="71:9" pos:end="71:68"><call pos:start="71:9" pos:end="71:68"><name pos:start="71:9" pos:end="71:19">NEW_AUX_ENT</name><argument_list pos:start="71:20" pos:end="71:68">( <argument pos:start="71:22" pos:end="71:22"><expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">3</literal></expr></argument>, <argument pos:start="71:25" pos:end="71:33"><expr pos:start="71:25" pos:end="71:33"><name pos:start="71:25" pos:end="71:33">AT_PAGESZ</name></expr></argument>, <argument pos:start="71:36" pos:end="71:67"><expr pos:start="71:36" pos:end="71:67"><operator pos:start="71:36" pos:end="71:36">(</operator><name pos:start="71:37" pos:end="71:48">target_ulong</name><operator pos:start="71:49" pos:end="71:49">)</operator><operator pos:start="71:50" pos:end="71:50">(</operator><name pos:start="71:51" pos:end="71:66">TARGET_PAGE_SIZE</name><operator pos:start="71:67" pos:end="71:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:67"><expr pos:start="73:9" pos:end="73:66"><call pos:start="73:9" pos:end="73:66"><name pos:start="73:9" pos:end="73:19">NEW_AUX_ENT</name><argument_list pos:start="73:20" pos:end="73:66">( <argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><literal type="number" pos:start="73:22" pos:end="73:22">4</literal></expr></argument>, <argument pos:start="73:25" pos:end="73:31"><expr pos:start="73:25" pos:end="73:31"><name pos:start="73:25" pos:end="73:31">AT_BASE</name></expr></argument>, <argument pos:start="73:34" pos:end="73:65"><expr pos:start="73:34" pos:end="73:65"><operator pos:start="73:34" pos:end="73:34">(</operator><name pos:start="73:35" pos:end="73:46">target_ulong</name><operator pos:start="73:47" pos:end="73:47">)</operator><operator pos:start="73:48" pos:end="73:48">(</operator><name pos:start="73:49" pos:end="73:64">interp_load_addr</name><operator pos:start="73:65" pos:end="73:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:51"><expr pos:start="75:9" pos:end="75:50"><call pos:start="75:9" pos:end="75:50"><name pos:start="75:9" pos:end="75:19">NEW_AUX_ENT</name><argument_list pos:start="75:20" pos:end="75:50">( <argument pos:start="75:22" pos:end="75:22"><expr pos:start="75:22" pos:end="75:22"><literal type="number" pos:start="75:22" pos:end="75:22">5</literal></expr></argument>, <argument pos:start="75:25" pos:end="75:32"><expr pos:start="75:25" pos:end="75:32"><name pos:start="75:25" pos:end="75:32">AT_FLAGS</name></expr></argument>, <argument pos:start="75:35" pos:end="75:49"><expr pos:start="75:35" pos:end="75:49"><operator pos:start="75:35" pos:end="75:35">(</operator><name pos:start="75:36" pos:end="75:47">target_ulong</name><operator pos:start="75:48" pos:end="75:48">)</operator><literal type="number" pos:start="75:49" pos:end="75:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:61"><expr pos:start="77:9" pos:end="77:60"><call pos:start="77:9" pos:end="77:60"><name pos:start="77:9" pos:end="77:19">NEW_AUX_ENT</name><argument_list pos:start="77:20" pos:end="77:60">( <argument pos:start="77:22" pos:end="77:22"><expr pos:start="77:22" pos:end="77:22"><literal type="number" pos:start="77:22" pos:end="77:22">6</literal></expr></argument>, <argument pos:start="77:25" pos:end="77:32"><expr pos:start="77:25" pos:end="77:32"><name pos:start="77:25" pos:end="77:32">AT_ENTRY</name></expr></argument>, <argument pos:start="77:35" pos:end="77:59"><expr pos:start="77:35" pos:end="77:59"><name pos:start="77:35" pos:end="77:43">load_bias</name> <operator pos:start="77:45" pos:end="77:45">+</operator> <name pos:start="77:47" pos:end="77:59"><name pos:start="77:47" pos:end="77:50">exec</name><operator pos:start="77:51" pos:end="77:52">-&gt;</operator><name pos:start="77:53" pos:end="77:59">e_entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:57"><expr pos:start="79:9" pos:end="79:56"><call pos:start="79:9" pos:end="79:56"><name pos:start="79:9" pos:end="79:19">NEW_AUX_ENT</name><argument_list pos:start="79:20" pos:end="79:56">( <argument pos:start="79:22" pos:end="79:22"><expr pos:start="79:22" pos:end="79:22"><literal type="number" pos:start="79:22" pos:end="79:22">7</literal></expr></argument>, <argument pos:start="79:25" pos:end="79:30"><expr pos:start="79:25" pos:end="79:30"><name pos:start="79:25" pos:end="79:30">AT_UID</name></expr></argument>, <argument pos:start="79:33" pos:end="79:55"><expr pos:start="79:33" pos:end="79:55"><operator pos:start="79:33" pos:end="79:33">(</operator><name pos:start="79:34" pos:end="79:45">target_ulong</name><operator pos:start="79:46" pos:end="79:46">)</operator> <call pos:start="79:48" pos:end="79:55"><name pos:start="79:48" pos:end="79:53">getuid</name><argument_list pos:start="79:54" pos:end="79:55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:59"><expr pos:start="81:9" pos:end="81:58"><call pos:start="81:9" pos:end="81:58"><name pos:start="81:9" pos:end="81:19">NEW_AUX_ENT</name><argument_list pos:start="81:20" pos:end="81:58">( <argument pos:start="81:22" pos:end="81:22"><expr pos:start="81:22" pos:end="81:22"><literal type="number" pos:start="81:22" pos:end="81:22">8</literal></expr></argument>, <argument pos:start="81:25" pos:end="81:31"><expr pos:start="81:25" pos:end="81:31"><name pos:start="81:25" pos:end="81:31">AT_EUID</name></expr></argument>, <argument pos:start="81:34" pos:end="81:57"><expr pos:start="81:34" pos:end="81:57"><operator pos:start="81:34" pos:end="81:34">(</operator><name pos:start="81:35" pos:end="81:46">target_ulong</name><operator pos:start="81:47" pos:end="81:47">)</operator> <call pos:start="81:49" pos:end="81:57"><name pos:start="81:49" pos:end="81:55">geteuid</name><argument_list pos:start="81:56" pos:end="81:57">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:57"><expr pos:start="83:9" pos:end="83:56"><call pos:start="83:9" pos:end="83:56"><name pos:start="83:9" pos:end="83:19">NEW_AUX_ENT</name><argument_list pos:start="83:20" pos:end="83:56">( <argument pos:start="83:22" pos:end="83:22"><expr pos:start="83:22" pos:end="83:22"><literal type="number" pos:start="83:22" pos:end="83:22">9</literal></expr></argument>, <argument pos:start="83:25" pos:end="83:30"><expr pos:start="83:25" pos:end="83:30"><name pos:start="83:25" pos:end="83:30">AT_GID</name></expr></argument>, <argument pos:start="83:33" pos:end="83:55"><expr pos:start="83:33" pos:end="83:55"><operator pos:start="83:33" pos:end="83:33">(</operator><name pos:start="83:34" pos:end="83:45">target_ulong</name><operator pos:start="83:46" pos:end="83:46">)</operator> <call pos:start="83:48" pos:end="83:55"><name pos:start="83:48" pos:end="83:53">getgid</name><argument_list pos:start="83:54" pos:end="83:55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="88:0"><expr pos:start="85:9" pos:end="85:58"><call pos:start="85:9" pos:end="85:58"><name pos:start="85:9" pos:end="85:19">NEW_AUX_ENT</name><argument_list pos:start="85:20" pos:end="85:58">(<argument pos:start="85:21" pos:end="85:22"><expr pos:start="85:21" pos:end="85:22"><literal type="number" pos:start="85:21" pos:end="85:22">11</literal></expr></argument>, <argument pos:start="85:25" pos:end="85:31"><expr pos:start="85:25" pos:end="85:31"><name pos:start="85:25" pos:end="85:31">AT_EGID</name></expr></argument>, <argument pos:start="85:34" pos:end="85:57"><expr pos:start="85:34" pos:end="85:57"><operator pos:start="85:34" pos:end="85:34">(</operator><name pos:start="85:35" pos:end="85:46">target_ulong</name><operator pos:start="85:47" pos:end="85:47">)</operator> <call pos:start="85:49" pos:end="85:57"><name pos:start="85:49" pos:end="85:55">getegid</name><argument_list pos:start="85:56" pos:end="85:57">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="87:1" pos:end="87:18">#<cpp:directive pos:start="87:2" pos:end="87:6">ifdef</cpp:directive> <name pos:start="87:8" pos:end="87:18">ARCH_DLINFO</name></cpp:ifdef>

	<comment type="block" pos:start="89:9" pos:end="95:11">/* 

	 * ARCH_DLINFO must come last so platform specific code can enforce

	 * special alignment requirements on the AUXV if necessary (eg. PPC).

	 */</comment>

        <expr_stmt pos:start="97:9" pos:end="102:0"><expr pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:19">ARCH_DLINFO</name></expr>;</expr_stmt>

<cpp:endif pos:start="99:1" pos:end="99:6">#<cpp:directive pos:start="99:2" pos:end="99:6">endif</cpp:directive></cpp:endif>

<cpp:undef pos:start="101:1" pos:end="101:18">#<cpp:directive pos:start="101:2" pos:end="101:6">undef</cpp:directive> <name pos:start="101:8" pos:end="101:18">NEW_AUX_ENT</name></cpp:undef>



        <expr_stmt pos:start="105:9" pos:end="105:21"><expr pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:10">sp</name> <operator pos:start="105:12" pos:end="105:13">-=</operator> <name pos:start="105:15" pos:end="105:18">envc</name><operator pos:start="105:19" pos:end="105:19">+</operator><literal type="number" pos:start="105:20" pos:end="105:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:18"><expr pos:start="107:9" pos:end="107:17"><name pos:start="107:9" pos:end="107:12">envp</name> <operator pos:start="107:14" pos:end="107:14">=</operator> <name pos:start="107:16" pos:end="107:17">sp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:21"><expr pos:start="109:9" pos:end="109:20"><name pos:start="109:9" pos:end="109:10">sp</name> <operator pos:start="109:12" pos:end="109:13">-=</operator> <name pos:start="109:15" pos:end="109:18">argc</name><operator pos:start="109:19" pos:end="109:19">+</operator><literal type="number" pos:start="109:20" pos:end="109:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:18"><expr pos:start="111:9" pos:end="111:17"><name pos:start="111:9" pos:end="111:12">argv</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <name pos:start="111:16" pos:end="111:17">sp</name></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="119:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:18">(<expr pos:start="113:13" pos:end="113:17"><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:17">ibcs</name></expr>)</condition> <block pos:start="113:20" pos:end="119:9">{<block_content pos:start="115:17" pos:end="117:58">

                <expr_stmt pos:start="115:17" pos:end="115:58"><expr pos:start="115:17" pos:end="115:57"><call pos:start="115:17" pos:end="115:57"><name pos:start="115:17" pos:end="115:24">put_user</name><argument_list pos:start="115:25" pos:end="115:57">(<argument pos:start="115:26" pos:end="115:51"><expr pos:start="115:26" pos:end="115:51"><call pos:start="115:26" pos:end="115:51"><name pos:start="115:26" pos:end="115:31">tswapl</name><argument_list pos:start="115:32" pos:end="115:51">(<argument pos:start="115:33" pos:end="115:50"><expr pos:start="115:33" pos:end="115:50"><operator pos:start="115:33" pos:end="115:33">(</operator><name pos:start="115:34" pos:end="115:45">target_ulong</name><operator pos:start="115:46" pos:end="115:46">)</operator><name pos:start="115:47" pos:end="115:50">envp</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="115:53" pos:end="115:56"><expr pos:start="115:53" pos:end="115:56"><operator pos:start="115:53" pos:end="115:54">--</operator><name pos:start="115:55" pos:end="115:56">sp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:58"><expr pos:start="117:17" pos:end="117:57"><call pos:start="117:17" pos:end="117:57"><name pos:start="117:17" pos:end="117:24">put_user</name><argument_list pos:start="117:25" pos:end="117:57">(<argument pos:start="117:26" pos:end="117:51"><expr pos:start="117:26" pos:end="117:51"><call pos:start="117:26" pos:end="117:51"><name pos:start="117:26" pos:end="117:31">tswapl</name><argument_list pos:start="117:32" pos:end="117:51">(<argument pos:start="117:33" pos:end="117:50"><expr pos:start="117:33" pos:end="117:50"><operator pos:start="117:33" pos:end="117:33">(</operator><name pos:start="117:34" pos:end="117:45">target_ulong</name><operator pos:start="117:46" pos:end="117:46">)</operator><name pos:start="117:47" pos:end="117:50">argv</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="117:53" pos:end="117:56"><expr pos:start="117:53" pos:end="117:56"><operator pos:start="117:53" pos:end="117:54">--</operator><name pos:start="117:55" pos:end="117:56">sp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:36"><expr pos:start="121:9" pos:end="121:35"><call pos:start="121:9" pos:end="121:35"><name pos:start="121:9" pos:end="121:16">put_user</name><argument_list pos:start="121:17" pos:end="121:35">(<argument pos:start="121:18" pos:end="121:29"><expr pos:start="121:18" pos:end="121:29"><call pos:start="121:18" pos:end="121:29"><name pos:start="121:18" pos:end="121:23">tswapl</name><argument_list pos:start="121:24" pos:end="121:29">(<argument pos:start="121:25" pos:end="121:28"><expr pos:start="121:25" pos:end="121:28"><name pos:start="121:25" pos:end="121:28">argc</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="121:31" pos:end="121:34"><expr pos:start="121:31" pos:end="121:34"><operator pos:start="121:31" pos:end="121:32">--</operator><name pos:start="121:33" pos:end="121:34">sp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:72"><expr pos:start="123:9" pos:end="123:71"><name pos:start="123:9" pos:end="123:23"><name pos:start="123:9" pos:end="123:12">info</name><operator pos:start="123:13" pos:end="123:14">-&gt;</operator><name pos:start="123:15" pos:end="123:23">arg_start</name></name> <operator pos:start="123:25" pos:end="123:25">=</operator> <operator pos:start="123:27" pos:end="123:27">(</operator><name pos:start="123:28" pos:end="123:35">unsigned</name> <name pos:start="123:37" pos:end="123:39">int</name><operator pos:start="123:40" pos:end="123:40">)</operator><operator pos:start="123:41" pos:end="123:41">(</operator><operator pos:start="123:42" pos:end="123:42">(</operator><name pos:start="123:43" pos:end="123:50">unsigned</name> <name pos:start="123:52" pos:end="123:55">long</name><operator pos:start="123:56" pos:end="123:56">)</operator><name pos:start="123:57" pos:end="123:57">p</name> <operator pos:start="123:59" pos:end="123:59">&amp;</operator> <literal type="number" pos:start="123:61" pos:end="123:70">0xffffffff</literal><operator pos:start="123:71" pos:end="123:71">)</operator></expr>;</expr_stmt>

        <while pos:start="125:9" pos:end="131:9">while <condition pos:start="125:15" pos:end="125:24">(<expr pos:start="125:16" pos:end="125:23"><name pos:start="125:16" pos:end="125:19">argc</name><operator pos:start="125:20" pos:end="125:21">--</operator><operator pos:start="125:22" pos:end="125:22">&gt;</operator><literal type="number" pos:start="125:23" pos:end="125:23">0</literal></expr>)</condition> <block pos:start="125:26" pos:end="131:9">{<block_content pos:start="127:17" pos:end="129:53">

                <expr_stmt pos:start="127:17" pos:end="127:57"><expr pos:start="127:17" pos:end="127:56"><call pos:start="127:17" pos:end="127:56"><name pos:start="127:17" pos:end="127:24">put_user</name><argument_list pos:start="127:25" pos:end="127:56">(<argument pos:start="127:26" pos:end="127:48"><expr pos:start="127:26" pos:end="127:48"><call pos:start="127:26" pos:end="127:48"><name pos:start="127:26" pos:end="127:31">tswapl</name><argument_list pos:start="127:32" pos:end="127:48">(<argument pos:start="127:33" pos:end="127:47"><expr pos:start="127:33" pos:end="127:47"><operator pos:start="127:33" pos:end="127:33">(</operator><name pos:start="127:34" pos:end="127:45">target_ulong</name><operator pos:start="127:46" pos:end="127:46">)</operator><name pos:start="127:47" pos:end="127:47">p</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="127:50" pos:end="127:55"><expr pos:start="127:50" pos:end="127:55"><name pos:start="127:50" pos:end="127:53">argv</name><operator pos:start="127:54" pos:end="127:55">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="129:17" pos:end="129:53">while <condition pos:start="129:23" pos:end="129:37">(<expr pos:start="129:24" pos:end="129:36"><call pos:start="129:24" pos:end="129:36"><name pos:start="129:24" pos:end="129:31">get_user</name><argument_list pos:start="129:32" pos:end="129:36">(<argument pos:start="129:33" pos:end="129:35"><expr pos:start="129:33" pos:end="129:35"><name pos:start="129:33" pos:end="129:33">p</name><operator pos:start="129:34" pos:end="129:35">++</operator></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="129:53" pos:end="129:53"><block_content pos:start="129:53" pos:end="129:53"> <comment type="block" pos:start="129:39" pos:end="129:51">/* nothing */</comment> <empty_stmt pos:start="129:53" pos:end="129:53">;</empty_stmt></block_content></block></while>

        </block_content>}</block></while>

        <expr_stmt pos:start="133:9" pos:end="133:25"><expr pos:start="133:9" pos:end="133:24"><call pos:start="133:9" pos:end="133:24"><name pos:start="133:9" pos:end="133:16">put_user</name><argument_list pos:start="133:17" pos:end="133:24">(<argument pos:start="133:18" pos:end="133:18"><expr pos:start="133:18" pos:end="133:18"><literal type="number" pos:start="133:18" pos:end="133:18">0</literal></expr></argument>,<argument pos:start="133:20" pos:end="133:23"><expr pos:start="133:20" pos:end="133:23"><name pos:start="133:20" pos:end="133:23">argv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:88"><expr pos:start="135:9" pos:end="135:87"><name pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:12">info</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:21">arg_end</name></name> <operator pos:start="135:23" pos:end="135:23">=</operator> <name pos:start="135:25" pos:end="135:39"><name pos:start="135:25" pos:end="135:28">info</name><operator pos:start="135:29" pos:end="135:30">-&gt;</operator><name pos:start="135:31" pos:end="135:39">env_start</name></name> <operator pos:start="135:41" pos:end="135:41">=</operator> <operator pos:start="135:43" pos:end="135:43">(</operator><name pos:start="135:44" pos:end="135:51">unsigned</name> <name pos:start="135:53" pos:end="135:55">int</name><operator pos:start="135:56" pos:end="135:56">)</operator><operator pos:start="135:57" pos:end="135:57">(</operator><operator pos:start="135:58" pos:end="135:58">(</operator><name pos:start="135:59" pos:end="135:66">unsigned</name> <name pos:start="135:68" pos:end="135:71">long</name><operator pos:start="135:72" pos:end="135:72">)</operator><name pos:start="135:73" pos:end="135:73">p</name> <operator pos:start="135:75" pos:end="135:75">&amp;</operator> <literal type="number" pos:start="135:77" pos:end="135:86">0xffffffff</literal><operator pos:start="135:87" pos:end="135:87">)</operator></expr>;</expr_stmt>

        <while pos:start="137:9" pos:end="143:9">while <condition pos:start="137:15" pos:end="137:24">(<expr pos:start="137:16" pos:end="137:23"><name pos:start="137:16" pos:end="137:19">envc</name><operator pos:start="137:20" pos:end="137:21">--</operator><operator pos:start="137:22" pos:end="137:22">&gt;</operator><literal type="number" pos:start="137:23" pos:end="137:23">0</literal></expr>)</condition> <block pos:start="137:26" pos:end="143:9">{<block_content pos:start="139:17" pos:end="141:53">

                <expr_stmt pos:start="139:17" pos:end="139:57"><expr pos:start="139:17" pos:end="139:56"><call pos:start="139:17" pos:end="139:56"><name pos:start="139:17" pos:end="139:24">put_user</name><argument_list pos:start="139:25" pos:end="139:56">(<argument pos:start="139:26" pos:end="139:48"><expr pos:start="139:26" pos:end="139:48"><call pos:start="139:26" pos:end="139:48"><name pos:start="139:26" pos:end="139:31">tswapl</name><argument_list pos:start="139:32" pos:end="139:48">(<argument pos:start="139:33" pos:end="139:47"><expr pos:start="139:33" pos:end="139:47"><operator pos:start="139:33" pos:end="139:33">(</operator><name pos:start="139:34" pos:end="139:45">target_ulong</name><operator pos:start="139:46" pos:end="139:46">)</operator><name pos:start="139:47" pos:end="139:47">p</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="139:50" pos:end="139:55"><expr pos:start="139:50" pos:end="139:55"><name pos:start="139:50" pos:end="139:53">envp</name><operator pos:start="139:54" pos:end="139:55">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="141:17" pos:end="141:53">while <condition pos:start="141:23" pos:end="141:37">(<expr pos:start="141:24" pos:end="141:36"><call pos:start="141:24" pos:end="141:36"><name pos:start="141:24" pos:end="141:31">get_user</name><argument_list pos:start="141:32" pos:end="141:36">(<argument pos:start="141:33" pos:end="141:35"><expr pos:start="141:33" pos:end="141:35"><name pos:start="141:33" pos:end="141:33">p</name><operator pos:start="141:34" pos:end="141:35">++</operator></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="141:53" pos:end="141:53"><block_content pos:start="141:53" pos:end="141:53"> <comment type="block" pos:start="141:39" pos:end="141:51">/* nothing */</comment> <empty_stmt pos:start="141:53" pos:end="141:53">;</empty_stmt></block_content></block></while>

        </block_content>}</block></while>

        <expr_stmt pos:start="145:9" pos:end="145:25"><expr pos:start="145:9" pos:end="145:24"><call pos:start="145:9" pos:end="145:24"><name pos:start="145:9" pos:end="145:16">put_user</name><argument_list pos:start="145:17" pos:end="145:24">(<argument pos:start="145:18" pos:end="145:18"><expr pos:start="145:18" pos:end="145:18"><literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr></argument>,<argument pos:start="145:20" pos:end="145:23"><expr pos:start="145:20" pos:end="145:23"><name pos:start="145:20" pos:end="145:23">envp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:70"><expr pos:start="147:9" pos:end="147:69"><name pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:12">info</name><operator pos:start="147:13" pos:end="147:14">-&gt;</operator><name pos:start="147:15" pos:end="147:21">env_end</name></name> <operator pos:start="147:23" pos:end="147:23">=</operator> <operator pos:start="147:25" pos:end="147:25">(</operator><name pos:start="147:26" pos:end="147:33">unsigned</name> <name pos:start="147:35" pos:end="147:37">int</name><operator pos:start="147:38" pos:end="147:38">)</operator><operator pos:start="147:39" pos:end="147:39">(</operator><operator pos:start="147:40" pos:end="147:40">(</operator><name pos:start="147:41" pos:end="147:48">unsigned</name> <name pos:start="147:50" pos:end="147:53">long</name><operator pos:start="147:54" pos:end="147:54">)</operator><name pos:start="147:55" pos:end="147:55">p</name> <operator pos:start="147:57" pos:end="147:57">&amp;</operator> <literal type="number" pos:start="147:59" pos:end="147:68">0xffffffff</literal><operator pos:start="147:69" pos:end="147:69">)</operator></expr>;</expr_stmt>

        <return pos:start="149:9" pos:end="149:18">return <expr pos:start="149:16" pos:end="149:17"><name pos:start="149:16" pos:end="149:17">sp</name></expr>;</return>

</block_content>}</block></function>
</unit>
