<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5330.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:33">uyvyToY</name>)<parameter_list pos:start="1:35" pos:end="1:98">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:42">uint8_t</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dst</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:67"><decl pos:start="1:50" pos:end="1:67"><type pos:start="1:50" pos:end="1:67"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:62">uint8_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">src</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:79"><decl pos:start="1:70" pos:end="1:79"><type pos:start="1:70" pos:end="1:79"><name pos:start="1:70" pos:end="1:73">long</name></type> <name pos:start="1:75" pos:end="1:79">width</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:97"><decl pos:start="1:82" pos:end="1:97"><type pos:start="1:82" pos:end="1:97"><name pos:start="1:82" pos:end="1:89">uint32_t</name> <modifier pos:start="1:91" pos:end="1:91">*</modifier></type><name pos:start="1:92" pos:end="1:97">unused</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="44:0">

<cpp:if pos:start="5:1" pos:end="5:24">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <asm pos:start="7:5" pos:end="36:0">__asm__ <specifier pos:start="7:13" pos:end="7:20">volatile</specifier>(

        "mov                  %0, %%"REG_a"         \n\t"

        "1:                                         \n\t"

        "movq  (%1, %%"REG_a",2), %%mm0             \n\t"

        "movq 8(%1, %%"REG_a",2), %%mm1             \n\t"

        "psrlw                $8, %%mm0             \n\t"

        "psrlw                $8, %%mm1             \n\t"

        "packuswb          %%mm1, %%mm0             \n\t"

        "movq              %%mm0, (%2, %%"REG_a")   \n\t"

        "add                  $8, %%"REG_a"         \n\t"

        " js                  1b                    \n\t"

        : : "g" ((x86_reg)-width), "r" (src+width*2), "r" (dst+width)

        : "%"REG_a

    );</asm>

<cpp:else pos:start="35:1" pos:end="35:5">#<cpp:directive pos:start="35:2" pos:end="35:5">else</cpp:directive></cpp:else>

    <decl_stmt pos:start="37:5" pos:end="37:10"><decl pos:start="37:5" pos:end="37:9"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:9">i</name></decl>;</decl_stmt>

    <for pos:start="39:5" pos:end="44:0">for <control pos:start="39:9" pos:end="39:27">(<init pos:start="39:10" pos:end="39:13"><expr pos:start="39:10" pos:end="39:12"><name pos:start="39:10" pos:end="39:10">i</name><operator pos:start="39:11" pos:end="39:11">=</operator><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</init> <condition pos:start="39:15" pos:end="39:22"><expr pos:start="39:15" pos:end="39:21"><name pos:start="39:15" pos:end="39:15">i</name><operator pos:start="39:16" pos:end="39:16">&lt;</operator><name pos:start="39:17" pos:end="39:21">width</name></expr>;</condition> <incr pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:24">i</name><operator pos:start="39:25" pos:end="39:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="41:9" pos:end="44:0"><block_content pos:start="41:9" pos:end="44:0">

        <expr_stmt pos:start="41:9" pos:end="44:0"><expr pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:11">dst</name><index pos:start="41:12" pos:end="41:14">[<expr pos:start="41:13" pos:end="41:13"><name pos:start="41:13" pos:end="41:13">i</name></expr>]</index></name><operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:19">src</name><index pos:start="41:20" pos:end="41:26">[<expr pos:start="41:21" pos:end="41:25"><literal type="number" pos:start="41:21" pos:end="41:21">2</literal><operator pos:start="41:22" pos:end="41:22">*</operator><name pos:start="41:23" pos:end="41:23">i</name><operator pos:start="41:24" pos:end="41:24">+</operator><literal type="number" pos:start="41:25" pos:end="41:25">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
