<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25320.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">scsi_realize</name><parameter_list pos:start="1:25" pos:end="1:55">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:40"><name pos:start="1:26" pos:end="1:35">SCSIDevice</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:47">Error</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier><modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:42">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SCSIDiskState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:58">= <expr pos:start="5:24" pos:end="5:58"><call pos:start="5:24" pos:end="5:58"><name pos:start="5:24" pos:end="5:32">DO_UPCAST</name><argument_list pos:start="5:33" pos:end="5:58">(<argument pos:start="5:34" pos:end="5:46"><expr pos:start="5:34" pos:end="5:46"><name pos:start="5:34" pos:end="5:46">SCSIDiskState</name></expr></argument>, <argument pos:start="5:49" pos:end="5:52"><expr pos:start="5:49" pos:end="5:52"><name pos:start="5:49" pos:end="5:52">qdev</name></expr></argument>, <argument pos:start="5:55" pos:end="5:57"><expr pos:start="5:55" pos:end="5:57"><name pos:start="5:55" pos:end="5:57">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:25">(<expr pos:start="11:9" pos:end="11:24"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:24"><name pos:start="11:10" pos:end="11:10">s</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:16">qdev</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:21">conf</name><operator pos:start="11:22" pos:end="11:22">.</operator><name pos:start="11:23" pos:end="11:24">bs</name></name></expr>)</condition> <block pos:start="11:27" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:51"><expr pos:start="13:9" pos:end="13:50"><call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:18">error_setg</name><argument_list pos:start="13:19" pos:end="13:50">(<argument pos:start="13:20" pos:end="13:23"><expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">errp</name></expr></argument>, <argument pos:start="13:26" pos:end="13:49"><expr pos:start="13:26" pos:end="13:49"><literal type="string" pos:start="13:26" pos:end="13:49">"drive property not set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="23:43">(<expr pos:start="21:9" pos:end="23:42"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:21"><name pos:start="21:11" pos:end="21:11">s</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:21">features</name></name> <operator pos:start="21:23" pos:end="21:23">&amp;</operator> <operator pos:start="21:25" pos:end="21:25">(</operator><literal type="number" pos:start="21:26" pos:end="21:26">1</literal> <operator pos:start="21:28" pos:end="21:29">&lt;&lt;</operator> <name pos:start="21:31" pos:end="21:51">SCSI_DISK_F_REMOVABLE</name><operator pos:start="21:52" pos:end="21:52">)</operator><operator pos:start="21:53" pos:end="21:53">)</operator> <operator pos:start="21:55" pos:end="21:56">&amp;&amp;</operator>

        <operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:42"><name pos:start="23:10" pos:end="23:25">bdrv_is_inserted</name><argument_list pos:start="23:26" pos:end="23:42">(<argument pos:start="23:27" pos:end="23:41"><expr pos:start="23:27" pos:end="23:41"><name pos:start="23:27" pos:end="23:41"><name pos:start="23:27" pos:end="23:27">s</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:33">qdev</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:38">conf</name><operator pos:start="23:39" pos:end="23:39">.</operator><name pos:start="23:40" pos:end="23:41">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:45" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:15">

        <expr_stmt pos:start="25:9" pos:end="25:67"><expr pos:start="25:9" pos:end="25:66"><call pos:start="25:9" pos:end="25:66"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="25:66">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="25:65"><expr pos:start="25:26" pos:end="25:65"><literal type="string" pos:start="25:26" pos:end="25:65">"Device needs media, but drive is empty"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><call pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:18">blkconf_serial</name><argument_list pos:start="33:19" pos:end="33:45">(<argument pos:start="33:20" pos:end="33:32"><expr pos:start="33:20" pos:end="33:32"><operator pos:start="33:20" pos:end="33:20">&amp;</operator><name pos:start="33:21" pos:end="33:32"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:27">qdev</name><operator pos:start="33:28" pos:end="33:28">.</operator><name pos:start="33:29" pos:end="33:32">conf</name></name></expr></argument>, <argument pos:start="33:35" pos:end="33:44"><expr pos:start="33:35" pos:end="33:44"><operator pos:start="33:35" pos:end="33:35">&amp;</operator><name pos:start="33:36" pos:end="33:44"><name pos:start="33:36" pos:end="33:36">s</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:44">serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="35:31">(<expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:11">dev</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:17">type</name></name> <operator pos:start="35:19" pos:end="35:20">==</operator> <name pos:start="35:22" pos:end="35:30">TYPE_DISK</name></expr>)</condition> <block pos:start="35:33" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:9">

        <expr_stmt pos:start="37:9" pos:end="37:66"><expr pos:start="37:9" pos:end="37:65"><call pos:start="37:9" pos:end="37:65"><name pos:start="37:9" pos:end="37:24">blkconf_geometry</name><argument_list pos:start="37:25" pos:end="37:65">(<argument pos:start="37:26" pos:end="37:35"><expr pos:start="37:26" pos:end="37:35"><operator pos:start="37:26" pos:end="37:26">&amp;</operator><name pos:start="37:27" pos:end="37:35"><name pos:start="37:27" pos:end="37:29">dev</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:35">conf</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:41"><expr pos:start="37:38" pos:end="37:41"><name pos:start="37:38" pos:end="37:41">NULL</name></expr></argument>, <argument pos:start="37:44" pos:end="37:48"><expr pos:start="37:44" pos:end="37:48"><literal type="number" pos:start="37:44" pos:end="37:48">65535</literal></expr></argument>, <argument pos:start="37:51" pos:end="37:53"><expr pos:start="37:51" pos:end="37:53"><literal type="number" pos:start="37:51" pos:end="37:53">255</literal></expr></argument>, <argument pos:start="37:56" pos:end="37:58"><expr pos:start="37:56" pos:end="37:58"><literal type="number" pos:start="37:56" pos:end="37:58">255</literal></expr></argument>, <argument pos:start="37:61" pos:end="37:64"><expr pos:start="37:61" pos:end="37:64"><operator pos:start="37:61" pos:end="37:61">&amp;</operator><name pos:start="37:62" pos:end="37:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:16">(<expr pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">err</name></expr>)</condition> <block pos:start="39:18" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:19">

            <expr_stmt pos:start="41:13" pos:end="41:39"><expr pos:start="41:13" pos:end="41:38"><call pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:27">error_propagate</name><argument_list pos:start="41:28" pos:end="41:38">(<argument pos:start="41:29" pos:end="41:32"><expr pos:start="41:29" pos:end="41:32"><name pos:start="41:29" pos:end="41:32">errp</name></expr></argument>, <argument pos:start="41:35" pos:end="41:37"><expr pos:start="41:35" pos:end="41:37"><name pos:start="41:35" pos:end="41:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:47">(<expr pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:15">qdev</name><operator pos:start="51:16" pos:end="51:16">.</operator><name pos:start="51:17" pos:end="51:20">conf</name><operator pos:start="51:21" pos:end="51:21">.</operator><name pos:start="51:22" pos:end="51:40">discard_granularity</name></name> <operator pos:start="51:42" pos:end="51:43">==</operator> <operator pos:start="51:45" pos:end="51:45">-</operator><literal type="number" pos:start="51:46" pos:end="51:46">1</literal></expr>)</condition> <block pos:start="51:49" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:78">

        <expr_stmt pos:start="53:9" pos:end="55:78"><expr pos:start="53:9" pos:end="55:77"><name pos:start="53:9" pos:end="53:40"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:15">qdev</name><operator pos:start="53:16" pos:end="53:16">.</operator><name pos:start="53:17" pos:end="53:20">conf</name><operator pos:start="53:21" pos:end="53:21">.</operator><name pos:start="53:22" pos:end="53:40">discard_granularity</name></name> <operator pos:start="53:42" pos:end="53:42">=</operator>

            <call pos:start="55:13" pos:end="55:77"><name pos:start="55:13" pos:end="55:15">MAX</name><argument_list pos:start="55:16" pos:end="55:77">(<argument pos:start="55:17" pos:end="55:47"><expr pos:start="55:17" pos:end="55:47"><name pos:start="55:17" pos:end="55:47"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:23">qdev</name><operator pos:start="55:24" pos:end="55:24">.</operator><name pos:start="55:25" pos:end="55:28">conf</name><operator pos:start="55:29" pos:end="55:29">.</operator><name pos:start="55:30" pos:end="55:47">logical_block_size</name></name></expr></argument>, <argument pos:start="55:50" pos:end="55:76"><expr pos:start="55:50" pos:end="55:76"><name pos:start="55:50" pos:end="55:76">DEFAULT_DISCARD_GRANULARITY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:20">(<expr pos:start="61:9" pos:end="61:19"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:19"><name pos:start="61:10" pos:end="61:10">s</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:19">version</name></name></expr>)</condition> <block pos:start="61:22" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:50">

        <expr_stmt pos:start="63:9" pos:end="63:50"><expr pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:18">version</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:49"><name pos:start="63:22" pos:end="63:29">g_strdup</name><argument_list pos:start="63:30" pos:end="63:49">(<argument pos:start="63:31" pos:end="63:48"><expr pos:start="63:31" pos:end="63:48"><call pos:start="63:31" pos:end="63:48"><name pos:start="63:31" pos:end="63:46">qemu_get_version</name><argument_list pos:start="63:47" pos:end="63:48">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:19">(<expr pos:start="67:9" pos:end="67:18"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:18"><name pos:start="67:10" pos:end="67:10">s</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:18">vendor</name></name></expr>)</condition> <block pos:start="67:21" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:37">

        <expr_stmt pos:start="69:9" pos:end="69:37"><expr pos:start="69:9" pos:end="69:36"><name pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:17">vendor</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="69:36"><name pos:start="69:21" pos:end="69:28">g_strdup</name><argument_list pos:start="69:29" pos:end="69:36">(<argument pos:start="69:30" pos:end="69:35"><expr pos:start="69:30" pos:end="69:35"><literal type="string" pos:start="69:30" pos:end="69:35">"QEMU"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:36">(<expr pos:start="75:9" pos:end="75:35"><call pos:start="75:9" pos:end="75:35"><name pos:start="75:9" pos:end="75:18">bdrv_is_sg</name><argument_list pos:start="75:19" pos:end="75:35">(<argument pos:start="75:20" pos:end="75:34"><expr pos:start="75:20" pos:end="75:34"><name pos:start="75:20" pos:end="75:34"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:26">qdev</name><operator pos:start="75:27" pos:end="75:27">.</operator><name pos:start="75:28" pos:end="75:31">conf</name><operator pos:start="75:32" pos:end="75:32">.</operator><name pos:start="75:33" pos:end="75:34">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:38" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:15">

        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><call pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:18">error_setg</name><argument_list pos:start="77:19" pos:end="77:45">(<argument pos:start="77:20" pos:end="77:23"><expr pos:start="77:20" pos:end="77:23"><name pos:start="77:20" pos:end="77:23">errp</name></expr></argument>, <argument pos:start="77:26" pos:end="77:44"><expr pos:start="77:26" pos:end="77:44"><literal type="string" pos:start="77:26" pos:end="77:44">"unwanted /dev/sg*"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="95:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="87:68">(<expr pos:start="85:9" pos:end="87:67"><operator pos:start="85:9" pos:end="85:9">(</operator><name pos:start="85:10" pos:end="85:20"><name pos:start="85:10" pos:end="85:10">s</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:20">features</name></name> <operator pos:start="85:22" pos:end="85:22">&amp;</operator> <operator pos:start="85:24" pos:end="85:24">(</operator><literal type="number" pos:start="85:25" pos:end="85:25">1</literal> <operator pos:start="85:27" pos:end="85:28">&lt;&lt;</operator> <name pos:start="85:30" pos:end="85:50">SCSI_DISK_F_REMOVABLE</name><operator pos:start="85:51" pos:end="85:51">)</operator><operator pos:start="85:52" pos:end="85:52">)</operator> <operator pos:start="85:54" pos:end="85:55">&amp;&amp;</operator>

            <operator pos:start="87:13" pos:end="87:13">!</operator><operator pos:start="87:14" pos:end="87:14">(</operator><name pos:start="87:15" pos:end="87:25"><name pos:start="87:15" pos:end="87:15">s</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:25">features</name></name> <operator pos:start="87:27" pos:end="87:27">&amp;</operator> <operator pos:start="87:29" pos:end="87:29">(</operator><literal type="number" pos:start="87:30" pos:end="87:30">1</literal> <operator pos:start="87:32" pos:end="87:33">&lt;&lt;</operator> <name pos:start="87:35" pos:end="87:65">SCSI_DISK_F_NO_REMOVABLE_DEVOPS</name><operator pos:start="87:66" pos:end="87:66">)</operator><operator pos:start="87:67" pos:end="87:67">)</operator></expr>)</condition> <block pos:start="87:70" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:77">

        <expr_stmt pos:start="89:9" pos:end="89:77"><expr pos:start="89:9" pos:end="89:76"><call pos:start="89:9" pos:end="89:76"><name pos:start="89:9" pos:end="89:24">bdrv_set_dev_ops</name><argument_list pos:start="89:25" pos:end="89:76">(<argument pos:start="89:26" pos:end="89:40"><expr pos:start="89:26" pos:end="89:40"><name pos:start="89:26" pos:end="89:40"><name pos:start="89:26" pos:end="89:26">s</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:32">qdev</name><operator pos:start="89:33" pos:end="89:33">.</operator><name pos:start="89:34" pos:end="89:37">conf</name><operator pos:start="89:38" pos:end="89:38">.</operator><name pos:start="89:39" pos:end="89:40">bs</name></name></expr></argument>, <argument pos:start="89:43" pos:end="89:72"><expr pos:start="89:43" pos:end="89:72"><operator pos:start="89:43" pos:end="89:43">&amp;</operator><name pos:start="89:44" pos:end="89:72">scsi_disk_removable_block_ops</name></expr></argument>, <argument pos:start="89:75" pos:end="89:75"><expr pos:start="89:75" pos:end="89:75"><name pos:start="89:75" pos:end="89:75">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="95:5">else <block pos:start="91:12" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:67">

        <expr_stmt pos:start="93:9" pos:end="93:67"><expr pos:start="93:9" pos:end="93:66"><call pos:start="93:9" pos:end="93:66"><name pos:start="93:9" pos:end="93:24">bdrv_set_dev_ops</name><argument_list pos:start="93:25" pos:end="93:66">(<argument pos:start="93:26" pos:end="93:40"><expr pos:start="93:26" pos:end="93:40"><name pos:start="93:26" pos:end="93:40"><name pos:start="93:26" pos:end="93:26">s</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:32">qdev</name><operator pos:start="93:33" pos:end="93:33">.</operator><name pos:start="93:34" pos:end="93:37">conf</name><operator pos:start="93:38" pos:end="93:38">.</operator><name pos:start="93:39" pos:end="93:40">bs</name></name></expr></argument>, <argument pos:start="93:43" pos:end="93:62"><expr pos:start="93:43" pos:end="93:62"><operator pos:start="93:43" pos:end="93:43">&amp;</operator><name pos:start="93:44" pos:end="93:62">scsi_disk_block_ops</name></expr></argument>, <argument pos:start="93:65" pos:end="93:65"><expr pos:start="93:65" pos:end="93:65"><name pos:start="93:65" pos:end="93:65">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:66"><expr pos:start="97:5" pos:end="97:65"><call pos:start="97:5" pos:end="97:65"><name pos:start="97:5" pos:end="97:29">bdrv_set_guest_block_size</name><argument_list pos:start="97:30" pos:end="97:65">(<argument pos:start="97:31" pos:end="97:45"><expr pos:start="97:31" pos:end="97:45"><name pos:start="97:31" pos:end="97:45"><name pos:start="97:31" pos:end="97:31">s</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:37">qdev</name><operator pos:start="97:38" pos:end="97:38">.</operator><name pos:start="97:39" pos:end="97:42">conf</name><operator pos:start="97:43" pos:end="97:43">.</operator><name pos:start="97:44" pos:end="97:45">bs</name></name></expr></argument>, <argument pos:start="97:48" pos:end="97:64"><expr pos:start="97:48" pos:end="97:64"><name pos:start="97:48" pos:end="97:64"><name pos:start="97:48" pos:end="97:48">s</name><operator pos:start="97:49" pos:end="97:50">-&gt;</operator><name pos:start="97:51" pos:end="97:54">qdev</name><operator pos:start="97:55" pos:end="97:55">.</operator><name pos:start="97:56" pos:end="97:64">blocksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:42"><expr pos:start="101:5" pos:end="101:41"><call pos:start="101:5" pos:end="101:41"><name pos:start="101:5" pos:end="101:24">bdrv_iostatus_enable</name><argument_list pos:start="101:25" pos:end="101:41">(<argument pos:start="101:26" pos:end="101:40"><expr pos:start="101:26" pos:end="101:40"><name pos:start="101:26" pos:end="101:40"><name pos:start="101:26" pos:end="101:26">s</name><operator pos:start="101:27" pos:end="101:28">-&gt;</operator><name pos:start="101:29" pos:end="101:32">qdev</name><operator pos:start="101:33" pos:end="101:33">.</operator><name pos:start="101:34" pos:end="101:37">conf</name><operator pos:start="101:38" pos:end="101:38">.</operator><name pos:start="101:39" pos:end="101:40">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
