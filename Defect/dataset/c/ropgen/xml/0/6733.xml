<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6733.c" pos:tabs="8"><function pos:start="1:1" pos:end="655:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_h263_decode_frame</name><parameter_list pos:start="1:25" pos:end="3:41">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:58"><decl pos:start="1:49" pos:end="1:58"><type pos:start="1:49" pos:end="1:58"><name pos:start="1:49" pos:end="1:52">void</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">data</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:74"><decl pos:start="1:61" pos:end="1:74"><type pos:start="1:61" pos:end="1:74"><name pos:start="1:61" pos:end="1:63">int</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:74">got_frame</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:40"><decl pos:start="3:26" pos:end="3:40"><type pos:start="3:26" pos:end="3:40"><name pos:start="3:26" pos:end="3:33">AVPacket</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:40">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="655:1">{<block_content pos:start="7:5" pos:end="653:47">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">MpegEncContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name>  <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">slice_ret</name> <init pos:start="15:19" pos:end="15:21">= <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">pict</name> <init pos:start="17:19" pos:end="17:24">= <expr pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:24">data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">flags</name></name>  <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:21">avctx</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:28">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:13">flags2</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:29"><name pos:start="23:17" pos:end="23:21">avctx</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:29">flags2</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="29:5" pos:end="51:5"><if pos:start="29:5" pos:end="51:5">if <condition pos:start="29:8" pos:end="29:22">(<expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:16">buf_size</name> <operator pos:start="29:18" pos:end="29:19">==</operator> <literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr>)</condition> <block pos:start="29:24" pos:end="51:5">{<block_content pos:start="33:9" pos:end="49:17">

        <comment type="block" pos:start="31:9" pos:end="31:43">/* special case for last picture */</comment>

        <if_stmt pos:start="33:9" pos:end="45:9"><if pos:start="33:9" pos:end="45:9">if <condition pos:start="33:12" pos:end="33:53">(<expr pos:start="33:13" pos:end="33:52"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:24">low_delay</name></name> <operator pos:start="33:26" pos:end="33:27">==</operator> <literal type="number" pos:start="33:29" pos:end="33:29">0</literal> <operator pos:start="33:31" pos:end="33:32">&amp;&amp;</operator> <name pos:start="33:34" pos:end="33:52"><name pos:start="33:34" pos:end="33:34">s</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:52">next_picture_ptr</name></name></expr>)</condition> <block pos:start="33:55" pos:end="45:9">{<block_content pos:start="35:13" pos:end="43:27">

            <if_stmt pos:start="35:13" pos:end="37:27"><if pos:start="35:13" pos:end="37:27">if <condition pos:start="35:16" pos:end="35:72">(<expr pos:start="35:17" pos:end="35:71"><operator pos:start="35:17" pos:end="35:17">(</operator><name pos:start="35:18" pos:end="35:20">ret</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <call pos:start="35:24" pos:end="35:66"><name pos:start="35:24" pos:end="35:35">av_frame_ref</name><argument_list pos:start="35:36" pos:end="35:66">(<argument pos:start="35:37" pos:end="35:40"><expr pos:start="35:37" pos:end="35:40"><name pos:start="35:37" pos:end="35:40">pict</name></expr></argument>, <argument pos:start="35:43" pos:end="35:65"><expr pos:start="35:43" pos:end="35:65"><operator pos:start="35:43" pos:end="35:43">&amp;</operator><name pos:start="35:44" pos:end="35:65"><name pos:start="35:44" pos:end="35:44">s</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:62">next_picture_ptr</name><operator pos:start="35:63" pos:end="35:64">-&gt;</operator><name pos:start="35:65" pos:end="35:65">f</name></name></expr></argument>)</argument_list></call><operator pos:start="35:67" pos:end="35:67">)</operator> <operator pos:start="35:69" pos:end="35:69">&lt;</operator> <literal type="number" pos:start="35:71" pos:end="35:71">0</literal></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:27"><block_content pos:start="37:17" pos:end="37:27">

                <return pos:start="37:17" pos:end="37:27">return <expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:39"><expr pos:start="39:13" pos:end="39:38"><name pos:start="39:13" pos:end="39:31"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:31">next_picture_ptr</name></name> <operator pos:start="39:33" pos:end="39:33">=</operator> <name pos:start="39:35" pos:end="39:38">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="43:13" pos:end="43:27"><expr pos:start="43:13" pos:end="43:26"><operator pos:start="43:13" pos:end="43:13">*</operator><name pos:start="43:14" pos:end="43:22">got_frame</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <literal type="number" pos:start="43:26" pos:end="43:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="91:5"><if pos:start="55:5" pos:end="91:5">if <condition pos:start="55:8" pos:end="55:40">(<expr pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">flags</name></name> <operator pos:start="55:18" pos:end="55:18">&amp;</operator> <name pos:start="55:20" pos:end="55:39">CODEC_FLAG_TRUNCATED</name></expr>)</condition> <block pos:start="55:42" pos:end="91:5">{<block_content pos:start="57:9" pos:end="89:28">

        <decl_stmt pos:start="57:9" pos:end="57:17"><decl pos:start="57:9" pos:end="57:16"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:16">next</name></decl>;</decl_stmt>



        <if_stmt pos:start="61:9" pos:end="81:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:69">(<expr pos:start="61:13" pos:end="61:68"><name pos:start="61:13" pos:end="61:32">CONFIG_MPEG4_DECODER</name> <operator pos:start="61:34" pos:end="61:35">&amp;&amp;</operator> <name pos:start="61:37" pos:end="61:47"><name pos:start="61:37" pos:end="61:37">s</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:47">codec_id</name></name> <operator pos:start="61:49" pos:end="61:50">==</operator> <name pos:start="61:52" pos:end="61:68">AV_CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="61:71" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:77">

            <expr_stmt pos:start="63:13" pos:end="63:77"><expr pos:start="63:13" pos:end="63:76"><name pos:start="63:13" pos:end="63:16">next</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:76"><name pos:start="63:20" pos:end="63:42">ff_mpeg4_find_frame_end</name><argument_list pos:start="63:43" pos:end="63:76">(<argument pos:start="63:44" pos:end="63:60"><expr pos:start="63:44" pos:end="63:60"><operator pos:start="63:44" pos:end="63:44">&amp;</operator><name pos:start="63:45" pos:end="63:60"><name pos:start="63:45" pos:end="63:45">s</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:60">parse_context</name></name></expr></argument>, <argument pos:start="63:63" pos:end="63:65"><expr pos:start="63:63" pos:end="63:65"><name pos:start="63:63" pos:end="63:65">buf</name></expr></argument>, <argument pos:start="63:68" pos:end="63:75"><expr pos:start="63:68" pos:end="63:75"><name pos:start="63:68" pos:end="63:75">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="65:11" pos:end="69:9">else if <condition pos:start="65:19" pos:end="65:74">(<expr pos:start="65:20" pos:end="65:73"><name pos:start="65:20" pos:end="65:38">CONFIG_H263_DECODER</name> <operator pos:start="65:40" pos:end="65:41">&amp;&amp;</operator> <name pos:start="65:43" pos:end="65:53"><name pos:start="65:43" pos:end="65:43">s</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:53">codec_id</name></name> <operator pos:start="65:55" pos:end="65:56">==</operator> <name pos:start="65:58" pos:end="65:73">AV_CODEC_ID_H263</name></expr>)</condition> <block pos:start="65:76" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:76">

            <expr_stmt pos:start="67:13" pos:end="67:76"><expr pos:start="67:13" pos:end="67:75"><name pos:start="67:13" pos:end="67:16">next</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:75"><name pos:start="67:20" pos:end="67:41">ff_h263_find_frame_end</name><argument_list pos:start="67:42" pos:end="67:75">(<argument pos:start="67:43" pos:end="67:59"><expr pos:start="67:43" pos:end="67:59"><operator pos:start="67:43" pos:end="67:43">&amp;</operator><name pos:start="67:44" pos:end="67:59"><name pos:start="67:44" pos:end="67:44">s</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:59">parse_context</name></name></expr></argument>, <argument pos:start="67:62" pos:end="67:64"><expr pos:start="67:62" pos:end="67:64"><name pos:start="67:62" pos:end="67:64">buf</name></expr></argument>, <argument pos:start="67:67" pos:end="67:74"><expr pos:start="67:67" pos:end="67:74"><name pos:start="67:67" pos:end="67:74">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="69:11" pos:end="73:9">else if <condition pos:start="69:19" pos:end="69:76">(<expr pos:start="69:20" pos:end="69:75"><name pos:start="69:20" pos:end="69:39">CONFIG_H263P_DECODER</name> <operator pos:start="69:41" pos:end="69:42">&amp;&amp;</operator> <name pos:start="69:44" pos:end="69:54"><name pos:start="69:44" pos:end="69:44">s</name><operator pos:start="69:45" pos:end="69:46">-&gt;</operator><name pos:start="69:47" pos:end="69:54">codec_id</name></name> <operator pos:start="69:56" pos:end="69:57">==</operator> <name pos:start="69:59" pos:end="69:75">AV_CODEC_ID_H263P</name></expr>)</condition> <block pos:start="69:78" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:76">

            <expr_stmt pos:start="71:13" pos:end="71:76"><expr pos:start="71:13" pos:end="71:75"><name pos:start="71:13" pos:end="71:16">next</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="71:75"><name pos:start="71:20" pos:end="71:41">ff_h263_find_frame_end</name><argument_list pos:start="71:42" pos:end="71:75">(<argument pos:start="71:43" pos:end="71:59"><expr pos:start="71:43" pos:end="71:59"><operator pos:start="71:43" pos:end="71:43">&amp;</operator><name pos:start="71:44" pos:end="71:59"><name pos:start="71:44" pos:end="71:44">s</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:59">parse_context</name></name></expr></argument>, <argument pos:start="71:62" pos:end="71:64"><expr pos:start="71:62" pos:end="71:64"><name pos:start="71:62" pos:end="71:64">buf</name></expr></argument>, <argument pos:start="71:67" pos:end="71:74"><expr pos:start="71:67" pos:end="71:74"><name pos:start="71:67" pos:end="71:74">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="81:9">else <block pos:start="73:16" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:35">

            <expr_stmt pos:start="75:13" pos:end="77:73"><expr pos:start="75:13" pos:end="77:72"><call pos:start="75:13" pos:end="77:72"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="77:72">(<argument pos:start="75:20" pos:end="75:27"><expr pos:start="75:20" pos:end="75:27"><name pos:start="75:20" pos:end="75:27"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:27">avctx</name></name></expr></argument>, <argument pos:start="75:30" pos:end="75:41"><expr pos:start="75:30" pos:end="75:41"><name pos:start="75:30" pos:end="75:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="77:20" pos:end="77:71"><expr pos:start="77:20" pos:end="77:71"><literal type="string" pos:start="77:20" pos:end="77:71">"this codec does not support truncated bitstreams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:35">return <expr pos:start="79:20" pos:end="79:34"><call pos:start="79:20" pos:end="79:34"><name pos:start="79:20" pos:end="79:26">AVERROR</name><argument_list pos:start="79:27" pos:end="79:34">(<argument pos:start="79:28" pos:end="79:33"><expr pos:start="79:28" pos:end="79:33"><name pos:start="79:28" pos:end="79:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="85:9" pos:end="89:28"><if pos:start="85:9" pos:end="89:28">if <condition pos:start="85:12" pos:end="87:44">(<expr pos:start="85:13" pos:end="87:43"><call pos:start="85:13" pos:end="87:39"><name pos:start="85:13" pos:end="85:28">ff_combine_frame</name><argument_list pos:start="85:29" pos:end="87:39">(<argument pos:start="85:30" pos:end="85:46"><expr pos:start="85:30" pos:end="85:46"><operator pos:start="85:30" pos:end="85:30">&amp;</operator><name pos:start="85:31" pos:end="85:46"><name pos:start="85:31" pos:end="85:31">s</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:46">parse_context</name></name></expr></argument>, <argument pos:start="85:49" pos:end="85:52"><expr pos:start="85:49" pos:end="85:52"><name pos:start="85:49" pos:end="85:52">next</name></expr></argument>, <argument pos:start="85:55" pos:end="85:76"><expr pos:start="85:55" pos:end="85:76"><operator pos:start="85:55" pos:end="85:55">(</operator><specifier pos:start="85:56" pos:end="85:60">const</specifier> <name pos:start="85:62" pos:end="85:68">uint8_t</name> <operator pos:start="85:70" pos:end="85:70">*</operator><operator pos:start="85:71" pos:end="85:71">*</operator><operator pos:start="85:72" pos:end="85:72">)</operator><operator pos:start="85:73" pos:end="85:73">&amp;</operator><name pos:start="85:74" pos:end="85:76">buf</name></expr></argument>,

                             <argument pos:start="87:30" pos:end="87:38"><expr pos:start="87:30" pos:end="87:38"><operator pos:start="87:30" pos:end="87:30">&amp;</operator><name pos:start="87:31" pos:end="87:38">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="87:41" pos:end="87:41">&lt;</operator> <literal type="number" pos:start="87:43" pos:end="87:43">0</literal></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:28"><block_content pos:start="89:13" pos:end="89:28">

            <return pos:start="89:13" pos:end="89:28">return <expr pos:start="89:20" pos:end="89:27"><name pos:start="89:20" pos:end="89:27">buf_size</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="95:1" pos:end="95:6"><name pos:start="95:1" pos:end="95:5">retry</name>:</label>

    <if_stmt pos:start="97:5" pos:end="119:5"><if pos:start="97:5" pos:end="119:5">if <condition pos:start="97:8" pos:end="97:51">(<expr pos:start="97:9" pos:end="97:50"><name pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:22">divx_packed</name></name> <operator pos:start="97:24" pos:end="97:25">&amp;&amp;</operator> <name pos:start="97:27" pos:end="97:50"><name pos:start="97:27" pos:end="97:27">s</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:50">bitstream_buffer_size</name></name></expr>)</condition> <block pos:start="97:53" pos:end="119:5">{<block_content pos:start="99:9" pos:end="117:9">

        <decl_stmt pos:start="99:9" pos:end="99:14"><decl pos:start="99:9" pos:end="99:13"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:13">i</name></decl>;</decl_stmt>

        <for pos:start="101:9" pos:end="117:9">for<control pos:start="101:12" pos:end="101:37">(<init pos:start="101:13" pos:end="101:16"><expr pos:start="101:13" pos:end="101:15"><name pos:start="101:13" pos:end="101:13">i</name><operator pos:start="101:14" pos:end="101:14">=</operator><literal type="number" pos:start="101:15" pos:end="101:15">0</literal></expr>;</init> <condition pos:start="101:18" pos:end="101:32"><expr pos:start="101:18" pos:end="101:31"><name pos:start="101:18" pos:end="101:18">i</name> <operator pos:start="101:20" pos:end="101:20">&lt;</operator> <name pos:start="101:22" pos:end="101:29">buf_size</name><operator pos:start="101:30" pos:end="101:30">-</operator><literal type="number" pos:start="101:31" pos:end="101:31">3</literal></expr>;</condition> <incr pos:start="101:34" pos:end="101:36"><expr pos:start="101:34" pos:end="101:36"><name pos:start="101:34" pos:end="101:34">i</name><operator pos:start="101:35" pos:end="101:36">++</operator></expr></incr>)</control> <block pos:start="101:39" pos:end="117:9">{<block_content pos:start="103:13" pos:end="115:13">

            <if_stmt pos:start="103:13" pos:end="115:13"><if pos:start="103:13" pos:end="115:13">if <condition pos:start="103:16" pos:end="103:56">(<expr pos:start="103:17" pos:end="103:55"><name pos:start="103:17" pos:end="103:22"><name pos:start="103:17" pos:end="103:19">buf</name><index pos:start="103:20" pos:end="103:22">[<expr pos:start="103:21" pos:end="103:21"><name pos:start="103:21" pos:end="103:21">i</name></expr>]</index></name><operator pos:start="103:23" pos:end="103:24">==</operator><literal type="number" pos:start="103:25" pos:end="103:25">0</literal> <operator pos:start="103:27" pos:end="103:28">&amp;&amp;</operator> <name pos:start="103:30" pos:end="103:37"><name pos:start="103:30" pos:end="103:32">buf</name><index pos:start="103:33" pos:end="103:37">[<expr pos:start="103:34" pos:end="103:36"><name pos:start="103:34" pos:end="103:34">i</name><operator pos:start="103:35" pos:end="103:35">+</operator><literal type="number" pos:start="103:36" pos:end="103:36">1</literal></expr>]</index></name><operator pos:start="103:38" pos:end="103:39">==</operator><literal type="number" pos:start="103:40" pos:end="103:40">0</literal> <operator pos:start="103:42" pos:end="103:43">&amp;&amp;</operator> <name pos:start="103:45" pos:end="103:52"><name pos:start="103:45" pos:end="103:47">buf</name><index pos:start="103:48" pos:end="103:52">[<expr pos:start="103:49" pos:end="103:51"><name pos:start="103:49" pos:end="103:49">i</name><operator pos:start="103:50" pos:end="103:50">+</operator><literal type="number" pos:start="103:51" pos:end="103:51">2</literal></expr>]</index></name><operator pos:start="103:53" pos:end="103:54">==</operator><literal type="number" pos:start="103:55" pos:end="103:55">1</literal></expr>)</condition> <block pos:start="103:58" pos:end="115:13">{<block_content pos:start="105:17" pos:end="113:22">

                <if_stmt pos:start="105:17" pos:end="111:17"><if pos:start="105:17" pos:end="111:17">if <condition pos:start="105:20" pos:end="105:35">(<expr pos:start="105:21" pos:end="105:34"><name pos:start="105:21" pos:end="105:28"><name pos:start="105:21" pos:end="105:23">buf</name><index pos:start="105:24" pos:end="105:28">[<expr pos:start="105:25" pos:end="105:27"><name pos:start="105:25" pos:end="105:25">i</name><operator pos:start="105:26" pos:end="105:26">+</operator><literal type="number" pos:start="105:27" pos:end="105:27">3</literal></expr>]</index></name><operator pos:start="105:29" pos:end="105:30">==</operator><literal type="number" pos:start="105:31" pos:end="105:34">0xB0</literal></expr>)</condition> <block pos:start="105:37" pos:end="111:17">{<block_content pos:start="107:21" pos:end="109:49">

                    <expr_stmt pos:start="107:21" pos:end="107:104"><expr pos:start="107:21" pos:end="107:103"><call pos:start="107:21" pos:end="107:103"><name pos:start="107:21" pos:end="107:26">av_log</name><argument_list pos:start="107:27" pos:end="107:103">(<argument pos:start="107:28" pos:end="107:35"><expr pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:35"><name pos:start="107:28" pos:end="107:28">s</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:35">avctx</name></name></expr></argument>, <argument pos:start="107:38" pos:end="107:51"><expr pos:start="107:38" pos:end="107:51"><name pos:start="107:38" pos:end="107:51">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="107:54" pos:end="107:102"><expr pos:start="107:54" pos:end="107:102"><literal type="string" pos:start="107:54" pos:end="107:102">"Discarding excessive bitstream in packed xvid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:49"><expr pos:start="109:21" pos:end="109:48"><name pos:start="109:21" pos:end="109:44"><name pos:start="109:21" pos:end="109:21">s</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:44">bitstream_buffer_size</name></name> <operator pos:start="109:46" pos:end="109:46">=</operator> <literal type="number" pos:start="109:48" pos:end="109:48">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="113:17" pos:end="113:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="131:52"><if pos:start="123:5" pos:end="127:55">if <condition pos:start="123:8" pos:end="123:70">(<expr pos:start="123:9" pos:end="123:69"><name pos:start="123:9" pos:end="123:32"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:32">bitstream_buffer_size</name></name> <operator pos:start="123:34" pos:end="123:35">&amp;&amp;</operator> <operator pos:start="123:37" pos:end="123:37">(</operator><name pos:start="123:38" pos:end="123:51"><name pos:start="123:38" pos:end="123:38">s</name><operator pos:start="123:39" pos:end="123:40">-&gt;</operator><name pos:start="123:41" pos:end="123:51">divx_packed</name></name> <operator pos:start="123:53" pos:end="123:54">||</operator> <name pos:start="123:56" pos:end="123:63">buf_size</name> <operator pos:start="123:65" pos:end="123:65">&lt;</operator> <literal type="number" pos:start="123:67" pos:end="123:68">20</literal><operator pos:start="123:69" pos:end="123:69">)</operator></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="127:55"><block_content pos:start="125:9" pos:end="127:55"> <comment type="line" pos:start="123:72" pos:end="123:103">// divx 5.01+/xvid frame reorder</comment>

        <expr_stmt pos:start="125:9" pos:end="127:55"><expr pos:start="125:9" pos:end="127:54"><name pos:start="125:9" pos:end="125:11">ret</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <call pos:start="125:15" pos:end="127:54"><name pos:start="125:15" pos:end="125:28">init_get_bits8</name><argument_list pos:start="125:29" pos:end="127:54">(<argument pos:start="125:30" pos:end="125:35"><expr pos:start="125:30" pos:end="125:35"><operator pos:start="125:30" pos:end="125:30">&amp;</operator><name pos:start="125:31" pos:end="125:35"><name pos:start="125:31" pos:end="125:31">s</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:35">gb</name></name></expr></argument>, <argument pos:start="125:38" pos:end="125:56"><expr pos:start="125:38" pos:end="125:56"><name pos:start="125:38" pos:end="125:56"><name pos:start="125:38" pos:end="125:38">s</name><operator pos:start="125:39" pos:end="125:40">-&gt;</operator><name pos:start="125:41" pos:end="125:56">bitstream_buffer</name></name></expr></argument>,

                             <argument pos:start="127:30" pos:end="127:53"><expr pos:start="127:30" pos:end="127:53"><name pos:start="127:30" pos:end="127:53"><name pos:start="127:30" pos:end="127:30">s</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:53">bitstream_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="129:5" pos:end="131:52">else<block type="pseudo" pos:start="131:9" pos:end="131:52"><block_content pos:start="131:9" pos:end="131:52">

        <expr_stmt pos:start="131:9" pos:end="131:52"><expr pos:start="131:9" pos:end="131:51"><name pos:start="131:9" pos:end="131:11">ret</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <call pos:start="131:15" pos:end="131:51"><name pos:start="131:15" pos:end="131:28">init_get_bits8</name><argument_list pos:start="131:29" pos:end="131:51">(<argument pos:start="131:30" pos:end="131:35"><expr pos:start="131:30" pos:end="131:35"><operator pos:start="131:30" pos:end="131:30">&amp;</operator><name pos:start="131:31" pos:end="131:35"><name pos:start="131:31" pos:end="131:31">s</name><operator pos:start="131:32" pos:end="131:33">-&gt;</operator><name pos:start="131:34" pos:end="131:35">gb</name></name></expr></argument>, <argument pos:start="131:38" pos:end="131:40"><expr pos:start="131:38" pos:end="131:40"><name pos:start="131:38" pos:end="131:40">buf</name></expr></argument>, <argument pos:start="131:43" pos:end="131:50"><expr pos:start="131:43" pos:end="131:50"><name pos:start="131:43" pos:end="131:50">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:33"><expr pos:start="135:5" pos:end="135:32"><name pos:start="135:5" pos:end="135:28"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:28">bitstream_buffer_size</name></name> <operator pos:start="135:30" pos:end="135:30">=</operator> <literal type="number" pos:start="135:32" pos:end="135:32">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="139:19"><if pos:start="137:5" pos:end="139:19">if <condition pos:start="137:8" pos:end="137:16">(<expr pos:start="137:9" pos:end="137:15"><name pos:start="137:9" pos:end="137:11">ret</name> <operator pos:start="137:13" pos:end="137:13">&lt;</operator> <literal type="number" pos:start="137:15" pos:end="137:15">0</literal></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:19"><block_content pos:start="139:9" pos:end="139:19">

        <return pos:start="139:9" pos:end="139:19">return <expr pos:start="139:16" pos:end="139:18"><name pos:start="139:16" pos:end="139:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="149:23"><if pos:start="143:5" pos:end="149:23">if <condition pos:start="143:8" pos:end="143:32">(<expr pos:start="143:9" pos:end="143:31"><operator pos:start="143:9" pos:end="143:9">!</operator><name pos:start="143:10" pos:end="143:31"><name pos:start="143:10" pos:end="143:10">s</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:31">context_initialized</name></name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="149:23"><block_content pos:start="147:9" pos:end="149:23">

        <comment type="line" pos:start="145:9" pos:end="145:66">// we need the idct permutaton for reading a custom matrix</comment>

        <if_stmt pos:start="147:9" pos:end="149:23"><if pos:start="147:9" pos:end="149:23">if <condition pos:start="147:12" pos:end="147:46">(<expr pos:start="147:13" pos:end="147:45"><operator pos:start="147:13" pos:end="147:13">(</operator><name pos:start="147:14" pos:end="147:16">ret</name> <operator pos:start="147:18" pos:end="147:18">=</operator> <call pos:start="147:20" pos:end="147:40"><name pos:start="147:20" pos:end="147:37">ff_MPV_common_init</name><argument_list pos:start="147:38" pos:end="147:40">(<argument pos:start="147:39" pos:end="147:39"><expr pos:start="147:39" pos:end="147:39"><name pos:start="147:39" pos:end="147:39">s</name></expr></argument>)</argument_list></call><operator pos:start="147:41" pos:end="147:41">)</operator> <operator pos:start="147:43" pos:end="147:43">&lt;</operator> <literal type="number" pos:start="147:45" pos:end="147:45">0</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:23"><block_content pos:start="149:13" pos:end="149:23">

            <return pos:start="149:13" pos:end="149:23">return <expr pos:start="149:20" pos:end="149:22"><name pos:start="149:20" pos:end="149:22">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="153:5" pos:end="155:52">/* We need to set current_picture_ptr before reading the header,

     * otherwise we cannot store anyting in there */</comment>

    <if_stmt pos:start="157:5" pos:end="167:5"><if pos:start="157:5" pos:end="167:5">if <condition pos:start="157:8" pos:end="157:76">(<expr pos:start="157:9" pos:end="157:75"><name pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:30">current_picture_ptr</name></name> <operator pos:start="157:32" pos:end="157:33">==</operator> <name pos:start="157:35" pos:end="157:38">NULL</name> <operator pos:start="157:40" pos:end="157:41">||</operator> <name pos:start="157:43" pos:end="157:75"><name pos:start="157:43" pos:end="157:43">s</name><operator pos:start="157:44" pos:end="157:45">-&gt;</operator><name pos:start="157:46" pos:end="157:64">current_picture_ptr</name><operator pos:start="157:65" pos:end="157:66">-&gt;</operator><name pos:start="157:67" pos:end="157:67">f</name><operator pos:start="157:68" pos:end="157:68">.</operator><name pos:start="157:69" pos:end="157:72">data</name><index pos:start="157:73" pos:end="157:75">[<expr pos:start="157:74" pos:end="157:74"><literal type="number" pos:start="157:74" pos:end="157:74">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="157:78" pos:end="167:5">{<block_content pos:start="159:9" pos:end="165:48">

        <decl_stmt pos:start="159:9" pos:end="159:45"><decl pos:start="159:9" pos:end="159:44"><type pos:start="159:9" pos:end="159:11"><name pos:start="159:9" pos:end="159:11">int</name></type> <name pos:start="159:13" pos:end="159:13">i</name> <init pos:start="159:15" pos:end="159:44">= <expr pos:start="159:17" pos:end="159:44"><call pos:start="159:17" pos:end="159:44"><name pos:start="159:17" pos:end="159:38">ff_find_unused_picture</name><argument_list pos:start="159:39" pos:end="159:44">(<argument pos:start="159:40" pos:end="159:40"><expr pos:start="159:40" pos:end="159:40"><name pos:start="159:40" pos:end="159:40">s</name></expr></argument>, <argument pos:start="159:43" pos:end="159:43"><expr pos:start="159:43" pos:end="159:43"><literal type="number" pos:start="159:43" pos:end="159:43">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="161:9" pos:end="163:21"><if pos:start="161:9" pos:end="163:21">if <condition pos:start="161:12" pos:end="161:18">(<expr pos:start="161:13" pos:end="161:17"><name pos:start="161:13" pos:end="161:13">i</name> <operator pos:start="161:15" pos:end="161:15">&lt;</operator> <literal type="number" pos:start="161:17" pos:end="161:17">0</literal></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:21"><block_content pos:start="163:13" pos:end="163:21">

            <return pos:start="163:13" pos:end="163:21">return <expr pos:start="163:20" pos:end="163:20"><name pos:start="163:20" pos:end="163:20">i</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:48"><expr pos:start="165:9" pos:end="165:47"><name pos:start="165:9" pos:end="165:30"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:30">current_picture_ptr</name></name> <operator pos:start="165:32" pos:end="165:32">=</operator> <operator pos:start="165:34" pos:end="165:34">&amp;</operator><name pos:start="165:35" pos:end="165:47"><name pos:start="165:35" pos:end="165:35">s</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:44">picture</name><index pos:start="165:45" pos:end="165:47">[<expr pos:start="165:46" pos:end="165:46"><name pos:start="165:46" pos:end="165:46">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="171:5" pos:end="171:22">/* let's go :-) */</comment>

    <if_stmt pos:start="173:5" pos:end="209:5"><if pos:start="173:5" pos:end="177:5">if <condition pos:start="173:8" pos:end="173:55">(<expr pos:start="173:9" pos:end="173:54"><name pos:start="173:9" pos:end="173:27">CONFIG_WMV2_DECODER</name> <operator pos:start="173:29" pos:end="173:30">&amp;&amp;</operator> <name pos:start="173:32" pos:end="173:49"><name pos:start="173:32" pos:end="173:32">s</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:49">msmpeg4_version</name></name> <operator pos:start="173:51" pos:end="173:52">==</operator> <literal type="number" pos:start="173:54" pos:end="173:54">5</literal></expr>)</condition> <block pos:start="173:57" pos:end="177:5">{<block_content pos:start="175:9" pos:end="175:47">

        <expr_stmt pos:start="175:9" pos:end="175:47"><expr pos:start="175:9" pos:end="175:46"><name pos:start="175:9" pos:end="175:11">ret</name> <operator pos:start="175:13" pos:end="175:13">=</operator> <call pos:start="175:15" pos:end="175:46"><name pos:start="175:15" pos:end="175:43">ff_wmv2_decode_picture_header</name><argument_list pos:start="175:44" pos:end="175:46">(<argument pos:start="175:45" pos:end="175:45"><expr pos:start="175:45" pos:end="175:45"><name pos:start="175:45" pos:end="175:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="177:7" pos:end="181:5">else if <condition pos:start="177:15" pos:end="177:60">(<expr pos:start="177:16" pos:end="177:59"><name pos:start="177:16" pos:end="177:37">CONFIG_MSMPEG4_DECODER</name> <operator pos:start="177:39" pos:end="177:40">&amp;&amp;</operator> <name pos:start="177:42" pos:end="177:59"><name pos:start="177:42" pos:end="177:42">s</name><operator pos:start="177:43" pos:end="177:44">-&gt;</operator><name pos:start="177:45" pos:end="177:59">msmpeg4_version</name></name></expr>)</condition> <block pos:start="177:62" pos:end="181:5">{<block_content pos:start="179:9" pos:end="179:50">

        <expr_stmt pos:start="179:9" pos:end="179:50"><expr pos:start="179:9" pos:end="179:49"><name pos:start="179:9" pos:end="179:11">ret</name> <operator pos:start="179:13" pos:end="179:13">=</operator> <call pos:start="179:15" pos:end="179:49"><name pos:start="179:15" pos:end="179:46">ff_msmpeg4_decode_picture_header</name><argument_list pos:start="179:47" pos:end="179:49">(<argument pos:start="179:48" pos:end="179:48"><expr pos:start="179:48" pos:end="179:48"><name pos:start="179:48" pos:end="179:48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="181:7" pos:end="197:5">else if <condition pos:start="181:15" pos:end="181:76">(<expr pos:start="181:16" pos:end="181:75"><name pos:start="181:16" pos:end="181:35">CONFIG_MPEG4_DECODER</name> <operator pos:start="181:37" pos:end="181:38">&amp;&amp;</operator> <name pos:start="181:40" pos:end="181:54"><name pos:start="181:40" pos:end="181:44">avctx</name><operator pos:start="181:45" pos:end="181:46">-&gt;</operator><name pos:start="181:47" pos:end="181:54">codec_id</name></name> <operator pos:start="181:56" pos:end="181:57">==</operator> <name pos:start="181:59" pos:end="181:75">AV_CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="181:78" pos:end="197:5">{<block_content pos:start="183:9" pos:end="195:71">

        <if_stmt pos:start="183:9" pos:end="193:9"><if pos:start="183:9" pos:end="193:9">if <condition pos:start="183:12" pos:end="183:63">(<expr pos:start="183:13" pos:end="183:62"><name pos:start="183:13" pos:end="183:36"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:20">avctx</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:36">extradata_size</name></name> <operator pos:start="183:38" pos:end="183:39">&amp;&amp;</operator> <name pos:start="183:41" pos:end="183:57"><name pos:start="183:41" pos:end="183:41">s</name><operator pos:start="183:42" pos:end="183:43">-&gt;</operator><name pos:start="183:44" pos:end="183:57">picture_number</name></name> <operator pos:start="183:59" pos:end="183:60">==</operator> <literal type="number" pos:start="183:62" pos:end="183:62">0</literal></expr>)</condition> <block pos:start="183:65" pos:end="193:9">{<block_content pos:start="185:13" pos:end="191:70">

            <decl_stmt pos:start="185:13" pos:end="185:29"><decl pos:start="185:13" pos:end="185:28"><type pos:start="185:13" pos:end="185:25"><name pos:start="185:13" pos:end="185:25">GetBitContext</name></type> <name pos:start="185:27" pos:end="185:28">gb</name></decl>;</decl_stmt>



            <if_stmt pos:start="189:13" pos:end="191:70"><if pos:start="189:13" pos:end="191:70">if <condition pos:start="189:16" pos:end="189:89">(<expr pos:start="189:17" pos:end="189:87"><call pos:start="189:17" pos:end="189:82"><name pos:start="189:17" pos:end="189:30">init_get_bits8</name><argument_list pos:start="189:31" pos:end="189:82">(<argument pos:start="189:32" pos:end="189:34"><expr pos:start="189:32" pos:end="189:34"><operator pos:start="189:32" pos:end="189:32">&amp;</operator><name pos:start="189:33" pos:end="189:34">gb</name></expr></argument>, <argument pos:start="189:37" pos:end="189:55"><expr pos:start="189:37" pos:end="189:55"><name pos:start="189:37" pos:end="189:55"><name pos:start="189:37" pos:end="189:37">s</name><operator pos:start="189:38" pos:end="189:39">-&gt;</operator><name pos:start="189:40" pos:end="189:44">avctx</name><operator pos:start="189:45" pos:end="189:46">-&gt;</operator><name pos:start="189:47" pos:end="189:55">extradata</name></name></expr></argument>, <argument pos:start="189:58" pos:end="189:81"><expr pos:start="189:58" pos:end="189:81"><name pos:start="189:58" pos:end="189:81"><name pos:start="189:58" pos:end="189:58">s</name><operator pos:start="189:59" pos:end="189:60">-&gt;</operator><name pos:start="189:61" pos:end="189:65">avctx</name><operator pos:start="189:66" pos:end="189:67">-&gt;</operator><name pos:start="189:68" pos:end="189:81">extradata_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="189:84" pos:end="189:85">&gt;=</operator> <literal type="number" pos:start="189:87" pos:end="189:87">0</literal></expr> )</condition><block type="pseudo" pos:start="191:17" pos:end="191:70"><block_content pos:start="191:17" pos:end="191:70">

                <expr_stmt pos:start="191:17" pos:end="191:70"><expr pos:start="191:17" pos:end="191:69"><call pos:start="191:17" pos:end="191:69"><name pos:start="191:17" pos:end="191:46">ff_mpeg4_decode_picture_header</name><argument_list pos:start="191:47" pos:end="191:69">(<argument pos:start="191:48" pos:end="191:63"><expr pos:start="191:48" pos:end="191:63"><name pos:start="191:48" pos:end="191:63"><name pos:start="191:48" pos:end="191:52">avctx</name><operator pos:start="191:53" pos:end="191:54">-&gt;</operator><name pos:start="191:55" pos:end="191:63">priv_data</name></name></expr></argument>, <argument pos:start="191:66" pos:end="191:68"><expr pos:start="191:66" pos:end="191:68"><operator pos:start="191:66" pos:end="191:66">&amp;</operator><name pos:start="191:67" pos:end="191:68">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:71"><expr pos:start="195:9" pos:end="195:70"><name pos:start="195:9" pos:end="195:11">ret</name> <operator pos:start="195:13" pos:end="195:13">=</operator> <call pos:start="195:15" pos:end="195:70"><name pos:start="195:15" pos:end="195:44">ff_mpeg4_decode_picture_header</name><argument_list pos:start="195:45" pos:end="195:70">(<argument pos:start="195:46" pos:end="195:61"><expr pos:start="195:46" pos:end="195:61"><name pos:start="195:46" pos:end="195:61"><name pos:start="195:46" pos:end="195:50">avctx</name><operator pos:start="195:51" pos:end="195:52">-&gt;</operator><name pos:start="195:53" pos:end="195:61">priv_data</name></name></expr></argument>, <argument pos:start="195:64" pos:end="195:69"><expr pos:start="195:64" pos:end="195:69"><operator pos:start="195:64" pos:end="195:64">&amp;</operator><name pos:start="195:65" pos:end="195:69"><name pos:start="195:65" pos:end="195:65">s</name><operator pos:start="195:66" pos:end="195:67">-&gt;</operator><name pos:start="195:68" pos:end="195:69">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="197:7" pos:end="201:5">else if <condition pos:start="197:15" pos:end="197:72">(<expr pos:start="197:16" pos:end="197:71"><name pos:start="197:16" pos:end="197:35">CONFIG_H263I_DECODER</name> <operator pos:start="197:37" pos:end="197:38">&amp;&amp;</operator> <name pos:start="197:40" pos:end="197:50"><name pos:start="197:40" pos:end="197:40">s</name><operator pos:start="197:41" pos:end="197:42">-&gt;</operator><name pos:start="197:43" pos:end="197:50">codec_id</name></name> <operator pos:start="197:52" pos:end="197:53">==</operator> <name pos:start="197:55" pos:end="197:71">AV_CODEC_ID_H263I</name></expr>)</condition> <block pos:start="197:74" pos:end="201:5">{<block_content pos:start="199:9" pos:end="199:53">

        <expr_stmt pos:start="199:9" pos:end="199:53"><expr pos:start="199:9" pos:end="199:52"><name pos:start="199:9" pos:end="199:11">ret</name> <operator pos:start="199:13" pos:end="199:13">=</operator> <call pos:start="199:15" pos:end="199:52"><name pos:start="199:15" pos:end="199:49">ff_intel_h263_decode_picture_header</name><argument_list pos:start="199:50" pos:end="199:52">(<argument pos:start="199:51" pos:end="199:51"><expr pos:start="199:51" pos:end="199:51"><name pos:start="199:51" pos:end="199:51">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="201:7" pos:end="205:5">else if <condition pos:start="201:15" pos:end="201:49">(<expr pos:start="201:16" pos:end="201:48"><name pos:start="201:16" pos:end="201:33">CONFIG_FLV_DECODER</name> <operator pos:start="201:35" pos:end="201:36">&amp;&amp;</operator> <name pos:start="201:38" pos:end="201:48"><name pos:start="201:38" pos:end="201:38">s</name><operator pos:start="201:39" pos:end="201:40">-&gt;</operator><name pos:start="201:41" pos:end="201:48">h263_flv</name></name></expr>)</condition> <block pos:start="201:51" pos:end="205:5">{<block_content pos:start="203:9" pos:end="203:46">

        <expr_stmt pos:start="203:9" pos:end="203:46"><expr pos:start="203:9" pos:end="203:45"><name pos:start="203:9" pos:end="203:11">ret</name> <operator pos:start="203:13" pos:end="203:13">=</operator> <call pos:start="203:15" pos:end="203:45"><name pos:start="203:15" pos:end="203:42">ff_flv_decode_picture_header</name><argument_list pos:start="203:43" pos:end="203:45">(<argument pos:start="203:44" pos:end="203:44"><expr pos:start="203:44" pos:end="203:44"><name pos:start="203:44" pos:end="203:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="205:7" pos:end="209:5">else <block pos:start="205:12" pos:end="209:5">{<block_content pos:start="207:9" pos:end="207:47">

        <expr_stmt pos:start="207:9" pos:end="207:47"><expr pos:start="207:9" pos:end="207:46"><name pos:start="207:9" pos:end="207:11">ret</name> <operator pos:start="207:13" pos:end="207:13">=</operator> <call pos:start="207:15" pos:end="207:46"><name pos:start="207:15" pos:end="207:43">ff_h263_decode_picture_header</name><argument_list pos:start="207:44" pos:end="207:46">(<argument pos:start="207:45" pos:end="207:45"><expr pos:start="207:45" pos:end="207:45"><name pos:start="207:45" pos:end="207:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="213:5" pos:end="227:5"><if pos:start="213:5" pos:end="227:5">if <condition pos:start="213:8" pos:end="213:40">(<expr pos:start="213:9" pos:end="213:39"><name pos:start="213:9" pos:end="213:11">ret</name> <operator pos:start="213:13" pos:end="213:13">&lt;</operator> <literal type="number" pos:start="213:15" pos:end="213:15">0</literal> <operator pos:start="213:17" pos:end="213:18">||</operator> <name pos:start="213:20" pos:end="213:22">ret</name> <operator pos:start="213:24" pos:end="213:25">==</operator> <name pos:start="213:27" pos:end="213:39">FRAME_SKIPPED</name></expr>)</condition> <block pos:start="213:42" pos:end="227:5">{<block_content pos:start="215:9" pos:end="225:9">

        <if_stmt pos:start="215:9" pos:end="225:9"><if pos:start="215:9" pos:end="225:9">if <condition pos:start="215:12" pos:end="217:48">(   <expr pos:start="215:16" pos:end="217:47"><name pos:start="215:16" pos:end="215:23"><name pos:start="215:16" pos:end="215:16">s</name><operator pos:start="215:17" pos:end="215:18">-&gt;</operator><name pos:start="215:19" pos:end="215:23">width</name></name>  <operator pos:start="215:26" pos:end="215:27">!=</operator> <name pos:start="215:29" pos:end="215:46"><name pos:start="215:29" pos:end="215:33">avctx</name><operator pos:start="215:34" pos:end="215:35">-&gt;</operator><name pos:start="215:36" pos:end="215:46">coded_width</name></name>

            <operator pos:start="217:13" pos:end="217:14">||</operator> <name pos:start="217:16" pos:end="217:24"><name pos:start="217:16" pos:end="217:16">s</name><operator pos:start="217:17" pos:end="217:18">-&gt;</operator><name pos:start="217:19" pos:end="217:24">height</name></name> <operator pos:start="217:26" pos:end="217:27">!=</operator> <name pos:start="217:29" pos:end="217:47"><name pos:start="217:29" pos:end="217:33">avctx</name><operator pos:start="217:34" pos:end="217:35">-&gt;</operator><name pos:start="217:36" pos:end="217:47">coded_height</name></name></expr>)</condition> <block pos:start="217:50" pos:end="225:9">{<block_content pos:start="219:17" pos:end="223:47">

                <expr_stmt pos:start="219:17" pos:end="219:121"><expr pos:start="219:17" pos:end="219:120"><call pos:start="219:17" pos:end="219:120"><name pos:start="219:17" pos:end="219:22">av_log</name><argument_list pos:start="219:23" pos:end="219:120">(<argument pos:start="219:24" pos:end="219:31"><expr pos:start="219:24" pos:end="219:31"><name pos:start="219:24" pos:end="219:31"><name pos:start="219:24" pos:end="219:24">s</name><operator pos:start="219:25" pos:end="219:26">-&gt;</operator><name pos:start="219:27" pos:end="219:31">avctx</name></name></expr></argument>, <argument pos:start="219:34" pos:end="219:47"><expr pos:start="219:34" pos:end="219:47"><name pos:start="219:34" pos:end="219:47">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="219:50" pos:end="219:119"><expr pos:start="219:50" pos:end="219:119"><literal type="string" pos:start="219:50" pos:end="219:119">"Reverting picture dimensions change due to header decoding failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:46"><expr pos:start="221:17" pos:end="221:45"><name pos:start="221:17" pos:end="221:24"><name pos:start="221:17" pos:end="221:17">s</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:24">width</name></name> <operator pos:start="221:26" pos:end="221:26">=</operator> <name pos:start="221:28" pos:end="221:45"><name pos:start="221:28" pos:end="221:32">avctx</name><operator pos:start="221:33" pos:end="221:34">-&gt;</operator><name pos:start="221:35" pos:end="221:45">coded_width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:47"><expr pos:start="223:17" pos:end="223:46"><name pos:start="223:17" pos:end="223:25"><name pos:start="223:17" pos:end="223:17">s</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:25">height</name></name><operator pos:start="223:26" pos:end="223:26">=</operator> <name pos:start="223:28" pos:end="223:46"><name pos:start="223:28" pos:end="223:32">avctx</name><operator pos:start="223:33" pos:end="223:34">-&gt;</operator><name pos:start="223:35" pos:end="223:46">coded_height</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="229:5" pos:end="231:47"><if pos:start="229:5" pos:end="231:47">if <condition pos:start="229:8" pos:end="229:29">(<expr pos:start="229:9" pos:end="229:28"><name pos:start="229:9" pos:end="229:11">ret</name> <operator pos:start="229:13" pos:end="229:14">==</operator> <name pos:start="229:16" pos:end="229:28">FRAME_SKIPPED</name></expr>)</condition><block type="pseudo" pos:start="231:9" pos:end="231:47"><block_content pos:start="231:9" pos:end="231:47">

        <return pos:start="231:9" pos:end="231:47">return <expr pos:start="231:16" pos:end="231:46"><call pos:start="231:16" pos:end="231:46"><name pos:start="231:16" pos:end="231:33">get_consumed_bytes</name><argument_list pos:start="231:34" pos:end="231:46">(<argument pos:start="231:35" pos:end="231:35"><expr pos:start="231:35" pos:end="231:35"><name pos:start="231:35" pos:end="231:35">s</name></expr></argument>, <argument pos:start="231:38" pos:end="231:45"><expr pos:start="231:38" pos:end="231:45"><name pos:start="231:38" pos:end="231:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="235:5" pos:end="235:41">/* skip if the header was thrashed */</comment>

    <if_stmt pos:start="237:5" pos:end="243:5"><if pos:start="237:5" pos:end="243:5">if <condition pos:start="237:8" pos:end="237:16">(<expr pos:start="237:9" pos:end="237:15"><name pos:start="237:9" pos:end="237:11">ret</name> <operator pos:start="237:13" pos:end="237:13">&lt;</operator> <literal type="number" pos:start="237:15" pos:end="237:15">0</literal></expr>)</condition> <block pos:start="237:18" pos:end="243:5">{<block_content pos:start="239:9" pos:end="241:19">

        <expr_stmt pos:start="239:9" pos:end="239:59"><expr pos:start="239:9" pos:end="239:58"><call pos:start="239:9" pos:end="239:58"><name pos:start="239:9" pos:end="239:14">av_log</name><argument_list pos:start="239:15" pos:end="239:58">(<argument pos:start="239:16" pos:end="239:23"><expr pos:start="239:16" pos:end="239:23"><name pos:start="239:16" pos:end="239:23"><name pos:start="239:16" pos:end="239:16">s</name><operator pos:start="239:17" pos:end="239:18">-&gt;</operator><name pos:start="239:19" pos:end="239:23">avctx</name></name></expr></argument>, <argument pos:start="239:26" pos:end="239:37"><expr pos:start="239:26" pos:end="239:37"><name pos:start="239:26" pos:end="239:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="239:40" pos:end="239:57"><expr pos:start="239:40" pos:end="239:57"><literal type="string" pos:start="239:40" pos:end="239:57">"header damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="241:9" pos:end="241:19">return <expr pos:start="241:16" pos:end="241:18"><name pos:start="241:16" pos:end="241:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="247:5" pos:end="247:40"><expr pos:start="247:5" pos:end="247:39"><name pos:start="247:5" pos:end="247:23"><name pos:start="247:5" pos:end="247:9">avctx</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:23">has_b_frames</name></name> <operator pos:start="247:25" pos:end="247:25">=</operator> <operator pos:start="247:27" pos:end="247:27">!</operator><name pos:start="247:28" pos:end="247:39"><name pos:start="247:28" pos:end="247:28">s</name><operator pos:start="247:29" pos:end="247:30">-&gt;</operator><name pos:start="247:31" pos:end="247:39">low_delay</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="251:5" pos:end="253:19"><if pos:start="251:5" pos:end="253:19">if <condition pos:start="251:8" pos:end="251:45">(<expr pos:start="251:9" pos:end="251:44"><call pos:start="251:9" pos:end="251:39"><name pos:start="251:9" pos:end="251:32">ff_mpeg4_workaround_bugs</name><argument_list pos:start="251:33" pos:end="251:39">(<argument pos:start="251:34" pos:end="251:38"><expr pos:start="251:34" pos:end="251:38"><name pos:start="251:34" pos:end="251:38">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="251:41" pos:end="251:42">==</operator> <literal type="number" pos:start="251:44" pos:end="251:44">1</literal></expr>)</condition><block type="pseudo" pos:start="253:9" pos:end="253:19"><block_content pos:start="253:9" pos:end="253:19">

        <goto pos:start="253:9" pos:end="253:19">goto <name pos:start="253:14" pos:end="253:18">retry</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="257:5" pos:end="263:27">/* After H263 &amp; mpeg4 header decode we have the height, width,

     * and other parameters. So then we could init the picture.

     * FIXME: By the way H263 decoder is evolving it should have

     * an H263EncContext */</comment>

    <if_stmt pos:start="265:5" pos:end="289:5"><if pos:start="265:5" pos:end="289:5">if <condition pos:start="265:8" pos:end="269:26">(<expr pos:start="265:9" pos:end="269:25"><name pos:start="265:9" pos:end="265:16"><name pos:start="265:9" pos:end="265:9">s</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:16">width</name></name>  <operator pos:start="265:19" pos:end="265:20">!=</operator> <name pos:start="265:22" pos:end="265:39"><name pos:start="265:22" pos:end="265:26">avctx</name><operator pos:start="265:27" pos:end="265:28">-&gt;</operator><name pos:start="265:29" pos:end="265:39">coded_width</name></name>  <operator pos:start="265:42" pos:end="265:43">||</operator>

        <name pos:start="267:9" pos:end="267:17"><name pos:start="267:9" pos:end="267:9">s</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:17">height</name></name> <operator pos:start="267:19" pos:end="267:20">!=</operator> <name pos:start="267:22" pos:end="267:40"><name pos:start="267:22" pos:end="267:26">avctx</name><operator pos:start="267:27" pos:end="267:28">-&gt;</operator><name pos:start="267:29" pos:end="267:40">coded_height</name></name> <operator pos:start="267:42" pos:end="267:43">||</operator>

        <name pos:start="269:9" pos:end="269:25"><name pos:start="269:9" pos:end="269:9">s</name><operator pos:start="269:10" pos:end="269:11">-&gt;</operator><name pos:start="269:12" pos:end="269:25">context_reinit</name></name></expr>)</condition> <block pos:start="269:28" pos:end="289:5">{<block_content pos:start="273:9" pos:end="287:23">

        <comment type="block" pos:start="271:9" pos:end="271:54">/* H.263 could change picture size any time */</comment>

        <expr_stmt pos:start="273:9" pos:end="273:30"><expr pos:start="273:9" pos:end="273:29"><name pos:start="273:9" pos:end="273:25"><name pos:start="273:9" pos:end="273:9">s</name><operator pos:start="273:10" pos:end="273:11">-&gt;</operator><name pos:start="273:12" pos:end="273:25">context_reinit</name></name> <operator pos:start="273:27" pos:end="273:27">=</operator> <literal type="number" pos:start="273:29" pos:end="273:29">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="277:9" pos:end="277:60"><expr pos:start="277:9" pos:end="277:59"><name pos:start="277:9" pos:end="277:11">ret</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <call pos:start="277:15" pos:end="277:59"><name pos:start="277:15" pos:end="277:31">ff_set_dimensions</name><argument_list pos:start="277:32" pos:end="277:59">(<argument pos:start="277:33" pos:end="277:37"><expr pos:start="277:33" pos:end="277:37"><name pos:start="277:33" pos:end="277:37">avctx</name></expr></argument>, <argument pos:start="277:40" pos:end="277:47"><expr pos:start="277:40" pos:end="277:47"><name pos:start="277:40" pos:end="277:47"><name pos:start="277:40" pos:end="277:40">s</name><operator pos:start="277:41" pos:end="277:42">-&gt;</operator><name pos:start="277:43" pos:end="277:47">width</name></name></expr></argument>, <argument pos:start="277:50" pos:end="277:58"><expr pos:start="277:50" pos:end="277:58"><name pos:start="277:50" pos:end="277:58"><name pos:start="277:50" pos:end="277:50">s</name><operator pos:start="277:51" pos:end="277:52">-&gt;</operator><name pos:start="277:53" pos:end="277:58">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="279:9" pos:end="281:23"><if pos:start="279:9" pos:end="281:23">if <condition pos:start="279:12" pos:end="279:20">(<expr pos:start="279:13" pos:end="279:19"><name pos:start="279:13" pos:end="279:15">ret</name> <operator pos:start="279:17" pos:end="279:17">&lt;</operator> <literal type="number" pos:start="279:19" pos:end="279:19">0</literal></expr>)</condition><block type="pseudo" pos:start="281:13" pos:end="281:23"><block_content pos:start="281:13" pos:end="281:23">

            <return pos:start="281:13" pos:end="281:23">return <expr pos:start="281:20" pos:end="281:22"><name pos:start="281:20" pos:end="281:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="285:9" pos:end="287:23"><if pos:start="285:9" pos:end="287:23">if <condition pos:start="285:12" pos:end="285:55">(<expr pos:start="285:13" pos:end="285:54"><operator pos:start="285:13" pos:end="285:13">(</operator><name pos:start="285:14" pos:end="285:16">ret</name> <operator pos:start="285:18" pos:end="285:18">=</operator> <call pos:start="285:20" pos:end="285:53"><name pos:start="285:20" pos:end="285:50">ff_MPV_common_frame_size_change</name><argument_list pos:start="285:51" pos:end="285:53">(<argument pos:start="285:52" pos:end="285:52"><expr pos:start="285:52" pos:end="285:52"><name pos:start="285:52" pos:end="285:52">s</name></expr></argument>)</argument_list></call><operator pos:start="285:54" pos:end="285:54">)</operator></expr>)</condition><block type="pseudo" pos:start="287:13" pos:end="287:23"><block_content pos:start="287:13" pos:end="287:23">

            <return pos:start="287:13" pos:end="287:23">return <expr pos:start="287:20" pos:end="287:22"><name pos:start="287:20" pos:end="287:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="293:5" pos:end="299:49"><if pos:start="293:5" pos:end="299:49">if <condition pos:start="293:8" pos:end="297:41">(<expr pos:start="293:9" pos:end="297:40"><name pos:start="293:9" pos:end="293:19"><name pos:start="293:9" pos:end="293:9">s</name><operator pos:start="293:10" pos:end="293:11">-&gt;</operator><name pos:start="293:12" pos:end="293:19">codec_id</name></name> <operator pos:start="293:21" pos:end="293:22">==</operator> <name pos:start="293:24" pos:end="293:39">AV_CODEC_ID_H263</name>  <operator pos:start="293:42" pos:end="293:43">||</operator>

        <name pos:start="295:9" pos:end="295:19"><name pos:start="295:9" pos:end="295:9">s</name><operator pos:start="295:10" pos:end="295:11">-&gt;</operator><name pos:start="295:12" pos:end="295:19">codec_id</name></name> <operator pos:start="295:21" pos:end="295:22">==</operator> <name pos:start="295:24" pos:end="295:40">AV_CODEC_ID_H263P</name> <operator pos:start="295:42" pos:end="295:43">||</operator>

        <name pos:start="297:9" pos:end="297:19"><name pos:start="297:9" pos:end="297:9">s</name><operator pos:start="297:10" pos:end="297:11">-&gt;</operator><name pos:start="297:12" pos:end="297:19">codec_id</name></name> <operator pos:start="297:21" pos:end="297:22">==</operator> <name pos:start="297:24" pos:end="297:40">AV_CODEC_ID_H263I</name></expr>)</condition><block type="pseudo" pos:start="299:9" pos:end="299:49"><block_content pos:start="299:9" pos:end="299:49">

        <expr_stmt pos:start="299:9" pos:end="299:49"><expr pos:start="299:9" pos:end="299:48"><name pos:start="299:9" pos:end="299:20"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:20">gob_index</name></name> <operator pos:start="299:22" pos:end="299:22">=</operator> <call pos:start="299:24" pos:end="299:48"><name pos:start="299:24" pos:end="299:45">ff_h263_get_gob_height</name><argument_list pos:start="299:46" pos:end="299:48">(<argument pos:start="299:47" pos:end="299:47"><expr pos:start="299:47" pos:end="299:47"><name pos:start="299:47" pos:end="299:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="303:5" pos:end="303:29">// for skipping the frame</comment>

    <expr_stmt pos:start="305:5" pos:end="305:50"><expr pos:start="305:5" pos:end="305:49"><name pos:start="305:5" pos:end="305:34"><name pos:start="305:5" pos:end="305:5">s</name><operator pos:start="305:6" pos:end="305:7">-&gt;</operator><name pos:start="305:8" pos:end="305:22">current_picture</name><operator pos:start="305:23" pos:end="305:23">.</operator><name pos:start="305:24" pos:end="305:24">f</name><operator pos:start="305:25" pos:end="305:25">.</operator><name pos:start="305:26" pos:end="305:34">pict_type</name></name> <operator pos:start="305:36" pos:end="305:36">=</operator> <name pos:start="305:38" pos:end="305:49"><name pos:start="305:38" pos:end="305:38">s</name><operator pos:start="305:39" pos:end="305:40">-&gt;</operator><name pos:start="305:41" pos:end="305:49">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:71"><expr pos:start="307:5" pos:end="307:70"><name pos:start="307:5" pos:end="307:34"><name pos:start="307:5" pos:end="307:5">s</name><operator pos:start="307:6" pos:end="307:7">-&gt;</operator><name pos:start="307:8" pos:end="307:22">current_picture</name><operator pos:start="307:23" pos:end="307:23">.</operator><name pos:start="307:24" pos:end="307:24">f</name><operator pos:start="307:25" pos:end="307:25">.</operator><name pos:start="307:26" pos:end="307:34">key_frame</name></name> <operator pos:start="307:36" pos:end="307:36">=</operator> <name pos:start="307:38" pos:end="307:49"><name pos:start="307:38" pos:end="307:38">s</name><operator pos:start="307:39" pos:end="307:40">-&gt;</operator><name pos:start="307:41" pos:end="307:49">pict_type</name></name> <operator pos:start="307:51" pos:end="307:52">==</operator> <name pos:start="307:54" pos:end="307:70">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>



    <comment type="block" pos:start="311:5" pos:end="311:57">/* skip B-frames if we don't have reference frames */</comment>

    <if_stmt pos:start="313:5" pos:end="317:47"><if pos:start="313:5" pos:end="317:47">if <condition pos:start="313:8" pos:end="315:60">(<expr pos:start="313:9" pos:end="315:59"><name pos:start="313:9" pos:end="313:27"><name pos:start="313:9" pos:end="313:9">s</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:27">last_picture_ptr</name></name> <operator pos:start="313:29" pos:end="313:30">==</operator> <name pos:start="313:32" pos:end="313:35">NULL</name> <operator pos:start="313:37" pos:end="313:38">&amp;&amp;</operator>

        <operator pos:start="315:9" pos:end="315:9">(</operator><name pos:start="315:10" pos:end="315:21"><name pos:start="315:10" pos:end="315:10">s</name><operator pos:start="315:11" pos:end="315:12">-&gt;</operator><name pos:start="315:13" pos:end="315:21">pict_type</name></name> <operator pos:start="315:23" pos:end="315:24">==</operator> <name pos:start="315:26" pos:end="315:42">AV_PICTURE_TYPE_B</name> <operator pos:start="315:44" pos:end="315:45">||</operator> <name pos:start="315:47" pos:end="315:58"><name pos:start="315:47" pos:end="315:47">s</name><operator pos:start="315:48" pos:end="315:49">-&gt;</operator><name pos:start="315:50" pos:end="315:58">droppable</name></name><operator pos:start="315:59" pos:end="315:59">)</operator></expr>)</condition><block type="pseudo" pos:start="317:9" pos:end="317:47"><block_content pos:start="317:9" pos:end="317:47">

        <return pos:start="317:9" pos:end="317:47">return <expr pos:start="317:16" pos:end="317:46"><call pos:start="317:16" pos:end="317:46"><name pos:start="317:16" pos:end="317:33">get_consumed_bytes</name><argument_list pos:start="317:34" pos:end="317:46">(<argument pos:start="317:35" pos:end="317:35"><expr pos:start="317:35" pos:end="317:35"><name pos:start="317:35" pos:end="317:35">s</name></expr></argument>, <argument pos:start="317:38" pos:end="317:45"><expr pos:start="317:38" pos:end="317:45"><name pos:start="317:38" pos:end="317:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="319:5" pos:end="329:47"><if pos:start="319:5" pos:end="329:47">if <condition pos:start="319:8" pos:end="327:43">(<expr pos:start="319:9" pos:end="327:42"><operator pos:start="319:9" pos:end="319:9">(</operator><name pos:start="319:10" pos:end="319:26"><name pos:start="319:10" pos:end="319:14">avctx</name><operator pos:start="319:15" pos:end="319:16">-&gt;</operator><name pos:start="319:17" pos:end="319:26">skip_frame</name></name> <operator pos:start="319:28" pos:end="319:29">&gt;=</operator> <name pos:start="319:31" pos:end="319:46">AVDISCARD_NONREF</name> <operator pos:start="319:48" pos:end="319:49">&amp;&amp;</operator>

         <name pos:start="321:10" pos:end="321:21"><name pos:start="321:10" pos:end="321:10">s</name><operator pos:start="321:11" pos:end="321:12">-&gt;</operator><name pos:start="321:13" pos:end="321:21">pict_type</name></name> <operator pos:start="321:23" pos:end="321:24">==</operator> <name pos:start="321:26" pos:end="321:42">AV_PICTURE_TYPE_B</name><operator pos:start="321:43" pos:end="321:43">)</operator>    <operator pos:start="321:48" pos:end="321:49">||</operator>

        <operator pos:start="323:9" pos:end="323:9">(</operator><name pos:start="323:10" pos:end="323:26"><name pos:start="323:10" pos:end="323:14">avctx</name><operator pos:start="323:15" pos:end="323:16">-&gt;</operator><name pos:start="323:17" pos:end="323:26">skip_frame</name></name> <operator pos:start="323:28" pos:end="323:29">&gt;=</operator> <name pos:start="323:31" pos:end="323:46">AVDISCARD_NONKEY</name> <operator pos:start="323:48" pos:end="323:49">&amp;&amp;</operator>

         <name pos:start="325:10" pos:end="325:21"><name pos:start="325:10" pos:end="325:10">s</name><operator pos:start="325:11" pos:end="325:12">-&gt;</operator><name pos:start="325:13" pos:end="325:21">pict_type</name></name> <operator pos:start="325:23" pos:end="325:24">!=</operator> <name pos:start="325:26" pos:end="325:42">AV_PICTURE_TYPE_I</name><operator pos:start="325:43" pos:end="325:43">)</operator>    <operator pos:start="325:48" pos:end="325:49">||</operator>

        <name pos:start="327:9" pos:end="327:25"><name pos:start="327:9" pos:end="327:13">avctx</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:25">skip_frame</name></name> <operator pos:start="327:27" pos:end="327:28">&gt;=</operator> <name pos:start="327:30" pos:end="327:42">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="329:9" pos:end="329:47"><block_content pos:start="329:9" pos:end="329:47">

        <return pos:start="329:9" pos:end="329:47">return <expr pos:start="329:16" pos:end="329:46"><call pos:start="329:16" pos:end="329:46"><name pos:start="329:16" pos:end="329:33">get_consumed_bytes</name><argument_list pos:start="329:34" pos:end="329:46">(<argument pos:start="329:35" pos:end="329:35"><expr pos:start="329:35" pos:end="329:35"><name pos:start="329:35" pos:end="329:35">s</name></expr></argument>, <argument pos:start="329:38" pos:end="329:45"><expr pos:start="329:38" pos:end="329:45"><name pos:start="329:38" pos:end="329:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="333:5" pos:end="343:5"><if pos:start="333:5" pos:end="343:5">if <condition pos:start="333:8" pos:end="333:32">(<expr pos:start="333:9" pos:end="333:31"><name pos:start="333:9" pos:end="333:31"><name pos:start="333:9" pos:end="333:9">s</name><operator pos:start="333:10" pos:end="333:11">-&gt;</operator><name pos:start="333:12" pos:end="333:31">next_p_frame_damaged</name></name></expr>)</condition> <block pos:start="333:34" pos:end="343:5">{<block_content pos:start="335:9" pos:end="341:40">

        <if_stmt pos:start="335:9" pos:end="341:40"><if pos:start="335:9" pos:end="337:51">if <condition pos:start="335:12" pos:end="335:46">(<expr pos:start="335:13" pos:end="335:45"><name pos:start="335:13" pos:end="335:24"><name pos:start="335:13" pos:end="335:13">s</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:24">pict_type</name></name> <operator pos:start="335:26" pos:end="335:27">==</operator> <name pos:start="335:29" pos:end="335:45">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="337:13" pos:end="337:51"><block_content pos:start="337:13" pos:end="337:51">

            <return pos:start="337:13" pos:end="337:51">return <expr pos:start="337:20" pos:end="337:50"><call pos:start="337:20" pos:end="337:50"><name pos:start="337:20" pos:end="337:37">get_consumed_bytes</name><argument_list pos:start="337:38" pos:end="337:50">(<argument pos:start="337:39" pos:end="337:39"><expr pos:start="337:39" pos:end="337:39"><name pos:start="337:39" pos:end="337:39">s</name></expr></argument>, <argument pos:start="337:42" pos:end="337:49"><expr pos:start="337:42" pos:end="337:49"><name pos:start="337:42" pos:end="337:49">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

        <else pos:start="339:9" pos:end="341:40">else<block type="pseudo" pos:start="341:13" pos:end="341:40"><block_content pos:start="341:13" pos:end="341:40">

            <expr_stmt pos:start="341:13" pos:end="341:40"><expr pos:start="341:13" pos:end="341:39"><name pos:start="341:13" pos:end="341:35"><name pos:start="341:13" pos:end="341:13">s</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:35">next_p_frame_damaged</name></name> <operator pos:start="341:37" pos:end="341:37">=</operator> <literal type="number" pos:start="341:39" pos:end="341:39">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="347:5" pos:end="359:5"><if pos:start="347:5" pos:end="353:5">if <condition pos:start="347:8" pos:end="347:63">(<expr pos:start="347:9" pos:end="347:62"><operator pos:start="347:9" pos:end="347:9">(</operator><operator pos:start="347:10" pos:end="347:10">!</operator><name pos:start="347:11" pos:end="347:24"><name pos:start="347:11" pos:end="347:11">s</name><operator pos:start="347:12" pos:end="347:13">-&gt;</operator><name pos:start="347:14" pos:end="347:24">no_rounding</name></name><operator pos:start="347:25" pos:end="347:25">)</operator> <operator pos:start="347:27" pos:end="347:28">||</operator> <name pos:start="347:30" pos:end="347:41"><name pos:start="347:30" pos:end="347:30">s</name><operator pos:start="347:31" pos:end="347:32">-&gt;</operator><name pos:start="347:33" pos:end="347:41">pict_type</name></name> <operator pos:start="347:43" pos:end="347:44">==</operator> <name pos:start="347:46" pos:end="347:62">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="347:65" pos:end="353:5">{<block_content pos:start="349:9" pos:end="351:52">

        <expr_stmt pos:start="349:9" pos:end="349:52"><expr pos:start="349:9" pos:end="349:51"><name pos:start="349:9" pos:end="349:22"><name pos:start="349:9" pos:end="349:9">s</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:13">me</name><operator pos:start="349:14" pos:end="349:14">.</operator><name pos:start="349:15" pos:end="349:22">qpel_put</name></name> <operator pos:start="349:24" pos:end="349:24">=</operator> <name pos:start="349:26" pos:end="349:51"><name pos:start="349:26" pos:end="349:26">s</name><operator pos:start="349:27" pos:end="349:28">-&gt;</operator><name pos:start="349:29" pos:end="349:31">dsp</name><operator pos:start="349:32" pos:end="349:32">.</operator><name pos:start="349:33" pos:end="349:51">put_qpel_pixels_tab</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:52"><expr pos:start="351:9" pos:end="351:51"><name pos:start="351:9" pos:end="351:22"><name pos:start="351:9" pos:end="351:9">s</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:13">me</name><operator pos:start="351:14" pos:end="351:14">.</operator><name pos:start="351:15" pos:end="351:22">qpel_avg</name></name> <operator pos:start="351:24" pos:end="351:24">=</operator> <name pos:start="351:26" pos:end="351:51"><name pos:start="351:26" pos:end="351:26">s</name><operator pos:start="351:27" pos:end="351:28">-&gt;</operator><name pos:start="351:29" pos:end="351:31">dsp</name><operator pos:start="351:32" pos:end="351:32">.</operator><name pos:start="351:33" pos:end="351:51">avg_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="353:7" pos:end="359:5">else <block pos:start="353:12" pos:end="359:5">{<block_content pos:start="355:9" pos:end="357:52">

        <expr_stmt pos:start="355:9" pos:end="355:59"><expr pos:start="355:9" pos:end="355:58"><name pos:start="355:9" pos:end="355:22"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:13">me</name><operator pos:start="355:14" pos:end="355:14">.</operator><name pos:start="355:15" pos:end="355:22">qpel_put</name></name> <operator pos:start="355:24" pos:end="355:24">=</operator> <name pos:start="355:26" pos:end="355:58"><name pos:start="355:26" pos:end="355:26">s</name><operator pos:start="355:27" pos:end="355:28">-&gt;</operator><name pos:start="355:29" pos:end="355:31">dsp</name><operator pos:start="355:32" pos:end="355:32">.</operator><name pos:start="355:33" pos:end="355:58">put_no_rnd_qpel_pixels_tab</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:52"><expr pos:start="357:9" pos:end="357:51"><name pos:start="357:9" pos:end="357:22"><name pos:start="357:9" pos:end="357:9">s</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:13">me</name><operator pos:start="357:14" pos:end="357:14">.</operator><name pos:start="357:15" pos:end="357:22">qpel_avg</name></name> <operator pos:start="357:24" pos:end="357:24">=</operator> <name pos:start="357:26" pos:end="357:51"><name pos:start="357:26" pos:end="357:26">s</name><operator pos:start="357:27" pos:end="357:28">-&gt;</operator><name pos:start="357:29" pos:end="357:31">dsp</name><operator pos:start="357:32" pos:end="357:32">.</operator><name pos:start="357:33" pos:end="357:51">avg_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="363:5" pos:end="365:19"><if pos:start="363:5" pos:end="365:19">if <condition pos:start="363:8" pos:end="363:49">(<expr pos:start="363:9" pos:end="363:48"><operator pos:start="363:9" pos:end="363:9">(</operator><name pos:start="363:10" pos:end="363:12">ret</name> <operator pos:start="363:14" pos:end="363:14">=</operator> <call pos:start="363:16" pos:end="363:43"><name pos:start="363:16" pos:end="363:33">ff_MPV_frame_start</name><argument_list pos:start="363:34" pos:end="363:43">(<argument pos:start="363:35" pos:end="363:35"><expr pos:start="363:35" pos:end="363:35"><name pos:start="363:35" pos:end="363:35">s</name></expr></argument>, <argument pos:start="363:38" pos:end="363:42"><expr pos:start="363:38" pos:end="363:42"><name pos:start="363:38" pos:end="363:42">avctx</name></expr></argument>)</argument_list></call><operator pos:start="363:44" pos:end="363:44">)</operator> <operator pos:start="363:46" pos:end="363:46">&lt;</operator> <literal type="number" pos:start="363:48" pos:end="363:48">0</literal></expr>)</condition><block type="pseudo" pos:start="365:9" pos:end="365:19"><block_content pos:start="365:9" pos:end="365:19">

        <return pos:start="365:9" pos:end="365:19">return <expr pos:start="365:16" pos:end="365:18"><name pos:start="365:16" pos:end="365:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="369:5" pos:end="371:38"><if pos:start="369:5" pos:end="371:38">if <condition pos:start="369:8" pos:end="369:43">(<expr pos:start="369:9" pos:end="369:42"><operator pos:start="369:9" pos:end="369:9">!</operator><name pos:start="369:10" pos:end="369:23"><name pos:start="369:10" pos:end="369:10">s</name><operator pos:start="369:11" pos:end="369:12">-&gt;</operator><name pos:start="369:13" pos:end="369:23">divx_packed</name></name> <operator pos:start="369:25" pos:end="369:26">&amp;&amp;</operator> <operator pos:start="369:28" pos:end="369:28">!</operator><name pos:start="369:29" pos:end="369:42"><name pos:start="369:29" pos:end="369:33">avctx</name><operator pos:start="369:34" pos:end="369:35">-&gt;</operator><name pos:start="369:36" pos:end="369:42">hwaccel</name></name></expr>)</condition><block type="pseudo" pos:start="371:9" pos:end="371:38"><block_content pos:start="371:9" pos:end="371:38">

        <expr_stmt pos:start="371:9" pos:end="371:38"><expr pos:start="371:9" pos:end="371:37"><call pos:start="371:9" pos:end="371:37"><name pos:start="371:9" pos:end="371:30">ff_thread_finish_setup</name><argument_list pos:start="371:31" pos:end="371:37">(<argument pos:start="371:32" pos:end="371:36"><expr pos:start="371:32" pos:end="371:36"><name pos:start="371:32" pos:end="371:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="375:5" pos:end="381:5"><if pos:start="375:5" pos:end="381:5">if <condition pos:start="375:8" pos:end="375:96">(<expr pos:start="375:9" pos:end="375:95"><name pos:start="375:9" pos:end="375:34">CONFIG_MPEG4_VDPAU_DECODER</name> <operator pos:start="375:36" pos:end="375:37">&amp;&amp;</operator> <operator pos:start="375:39" pos:end="375:39">(</operator><name pos:start="375:40" pos:end="375:68"><name pos:start="375:40" pos:end="375:40">s</name><operator pos:start="375:41" pos:end="375:42">-&gt;</operator><name pos:start="375:43" pos:end="375:47">avctx</name><operator pos:start="375:48" pos:end="375:49">-&gt;</operator><name pos:start="375:50" pos:end="375:54">codec</name><operator pos:start="375:55" pos:end="375:56">-&gt;</operator><name pos:start="375:57" pos:end="375:68">capabilities</name></name> <operator pos:start="375:70" pos:end="375:70">&amp;</operator> <name pos:start="375:72" pos:end="375:94">CODEC_CAP_HWACCEL_VDPAU</name><operator pos:start="375:95" pos:end="375:95">)</operator></expr>)</condition> <block pos:start="375:98" pos:end="381:5">{<block_content pos:start="377:9" pos:end="379:23">

        <expr_stmt pos:start="377:9" pos:end="377:88"><expr pos:start="377:9" pos:end="377:87"><call pos:start="377:9" pos:end="377:87"><name pos:start="377:9" pos:end="377:37">ff_vdpau_mpeg4_decode_picture</name><argument_list pos:start="377:38" pos:end="377:87">(<argument pos:start="377:39" pos:end="377:39"><expr pos:start="377:39" pos:end="377:39"><name pos:start="377:39" pos:end="377:39">s</name></expr></argument>, <argument pos:start="377:42" pos:end="377:53"><expr pos:start="377:42" pos:end="377:53"><name pos:start="377:42" pos:end="377:53"><name pos:start="377:42" pos:end="377:42">s</name><operator pos:start="377:43" pos:end="377:44">-&gt;</operator><name pos:start="377:45" pos:end="377:46">gb</name><operator pos:start="377:47" pos:end="377:47">.</operator><name pos:start="377:48" pos:end="377:53">buffer</name></name></expr></argument>, <argument pos:start="377:56" pos:end="377:86"><expr pos:start="377:56" pos:end="377:86"><name pos:start="377:56" pos:end="377:71"><name pos:start="377:56" pos:end="377:56">s</name><operator pos:start="377:57" pos:end="377:58">-&gt;</operator><name pos:start="377:59" pos:end="377:60">gb</name><operator pos:start="377:61" pos:end="377:61">.</operator><name pos:start="377:62" pos:end="377:71">buffer_end</name></name> <operator pos:start="377:73" pos:end="377:73">-</operator> <name pos:start="377:75" pos:end="377:86"><name pos:start="377:75" pos:end="377:75">s</name><operator pos:start="377:76" pos:end="377:77">-&gt;</operator><name pos:start="377:78" pos:end="377:79">gb</name><operator pos:start="377:80" pos:end="377:80">.</operator><name pos:start="377:81" pos:end="377:86">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="379:9" pos:end="379:23">goto <name pos:start="379:14" pos:end="379:22">frame_end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="385:5" pos:end="395:5"><if pos:start="385:5" pos:end="395:5">if <condition pos:start="385:8" pos:end="385:23">(<expr pos:start="385:9" pos:end="385:22"><name pos:start="385:9" pos:end="385:22"><name pos:start="385:9" pos:end="385:13">avctx</name><operator pos:start="385:14" pos:end="385:15">-&gt;</operator><name pos:start="385:16" pos:end="385:22">hwaccel</name></name></expr>)</condition> <block pos:start="385:25" pos:end="395:5">{<block_content pos:start="387:9" pos:end="393:23">

        <expr_stmt pos:start="387:9" pos:end="389:75"><expr pos:start="387:9" pos:end="389:74"><name pos:start="387:9" pos:end="387:11">ret</name> <operator pos:start="387:13" pos:end="387:13">=</operator> <call pos:start="387:15" pos:end="389:74"><name pos:start="387:15" pos:end="387:41"><name pos:start="387:15" pos:end="387:19">avctx</name><operator pos:start="387:20" pos:end="387:21">-&gt;</operator><name pos:start="387:22" pos:end="387:28">hwaccel</name><operator pos:start="387:29" pos:end="387:30">-&gt;</operator><name pos:start="387:31" pos:end="387:41">start_frame</name></name><argument_list pos:start="387:42" pos:end="389:74">(<argument pos:start="387:43" pos:end="387:47"><expr pos:start="387:43" pos:end="387:47"><name pos:start="387:43" pos:end="387:47">avctx</name></expr></argument>, <argument pos:start="387:50" pos:end="387:61"><expr pos:start="387:50" pos:end="387:61"><name pos:start="387:50" pos:end="387:61"><name pos:start="387:50" pos:end="387:50">s</name><operator pos:start="387:51" pos:end="387:52">-&gt;</operator><name pos:start="387:53" pos:end="387:54">gb</name><operator pos:start="387:55" pos:end="387:55">.</operator><name pos:start="387:56" pos:end="387:61">buffer</name></name></expr></argument>,

                                          <argument pos:start="389:43" pos:end="389:73"><expr pos:start="389:43" pos:end="389:73"><name pos:start="389:43" pos:end="389:58"><name pos:start="389:43" pos:end="389:43">s</name><operator pos:start="389:44" pos:end="389:45">-&gt;</operator><name pos:start="389:46" pos:end="389:47">gb</name><operator pos:start="389:48" pos:end="389:48">.</operator><name pos:start="389:49" pos:end="389:58">buffer_end</name></name> <operator pos:start="389:60" pos:end="389:60">-</operator> <name pos:start="389:62" pos:end="389:73"><name pos:start="389:62" pos:end="389:62">s</name><operator pos:start="389:63" pos:end="389:64">-&gt;</operator><name pos:start="389:65" pos:end="389:66">gb</name><operator pos:start="389:67" pos:end="389:67">.</operator><name pos:start="389:68" pos:end="389:73">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="391:9" pos:end="393:23"><if pos:start="391:9" pos:end="393:23">if <condition pos:start="391:12" pos:end="391:21">(<expr pos:start="391:13" pos:end="391:19"><name pos:start="391:13" pos:end="391:15">ret</name> <operator pos:start="391:17" pos:end="391:17">&lt;</operator> <literal type="number" pos:start="391:19" pos:end="391:19">0</literal></expr> )</condition><block type="pseudo" pos:start="393:13" pos:end="393:23"><block_content pos:start="393:13" pos:end="393:23">

            <return pos:start="393:13" pos:end="393:23">return <expr pos:start="393:20" pos:end="393:22"><name pos:start="393:20" pos:end="393:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="399:5" pos:end="399:30"><expr pos:start="399:5" pos:end="399:29"><call pos:start="399:5" pos:end="399:29"><name pos:start="399:5" pos:end="399:26">ff_mpeg_er_frame_start</name><argument_list pos:start="399:27" pos:end="399:29">(<argument pos:start="399:28" pos:end="399:28"><expr pos:start="399:28" pos:end="399:28"><name pos:start="399:28" pos:end="399:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="403:5" pos:end="407:30">/* the second part of the wmv2 header contains the MB skip bits which

     * are stored in current_picture-&gt;mb_type which is not available before

     * ff_MPV_frame_start() */</comment>

    <if_stmt pos:start="409:5" pos:end="421:5"><if pos:start="409:5" pos:end="421:5">if <condition pos:start="409:8" pos:end="409:55">(<expr pos:start="409:9" pos:end="409:54"><name pos:start="409:9" pos:end="409:27">CONFIG_WMV2_DECODER</name> <operator pos:start="409:29" pos:end="409:30">&amp;&amp;</operator> <name pos:start="409:32" pos:end="409:49"><name pos:start="409:32" pos:end="409:32">s</name><operator pos:start="409:33" pos:end="409:34">-&gt;</operator><name pos:start="409:35" pos:end="409:49">msmpeg4_version</name></name> <operator pos:start="409:51" pos:end="409:52">==</operator> <literal type="number" pos:start="409:54" pos:end="409:54">5</literal></expr>)</condition> <block pos:start="409:57" pos:end="421:5">{<block_content pos:start="411:9" pos:end="419:27">

        <expr_stmt pos:start="411:9" pos:end="411:57"><expr pos:start="411:9" pos:end="411:56"><name pos:start="411:9" pos:end="411:11">ret</name> <operator pos:start="411:13" pos:end="411:13">=</operator> <call pos:start="411:15" pos:end="411:56"><name pos:start="411:15" pos:end="411:53">ff_wmv2_decode_secondary_picture_header</name><argument_list pos:start="411:54" pos:end="411:56">(<argument pos:start="411:55" pos:end="411:55"><expr pos:start="411:55" pos:end="411:55"><name pos:start="411:55" pos:end="411:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="413:9" pos:end="415:23"><if pos:start="413:9" pos:end="415:23">if <condition pos:start="413:12" pos:end="413:20">(<expr pos:start="413:13" pos:end="413:19"><name pos:start="413:13" pos:end="413:15">ret</name> <operator pos:start="413:17" pos:end="413:17">&lt;</operator> <literal type="number" pos:start="413:19" pos:end="413:19">0</literal></expr>)</condition><block type="pseudo" pos:start="415:13" pos:end="415:23"><block_content pos:start="415:13" pos:end="415:23">

            <return pos:start="415:13" pos:end="415:23">return <expr pos:start="415:20" pos:end="415:22"><name pos:start="415:20" pos:end="415:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="417:9" pos:end="419:27"><if pos:start="417:9" pos:end="419:27">if <condition pos:start="417:12" pos:end="417:21">(<expr pos:start="417:13" pos:end="417:20"><name pos:start="417:13" pos:end="417:15">ret</name> <operator pos:start="417:17" pos:end="417:18">==</operator> <literal type="number" pos:start="417:20" pos:end="417:20">1</literal></expr>)</condition><block type="pseudo" pos:start="419:13" pos:end="419:27"><block_content pos:start="419:13" pos:end="419:27">

            <goto pos:start="419:13" pos:end="419:27">goto <name pos:start="419:18" pos:end="419:26">frame_end</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="425:5" pos:end="425:32">/* decode each macroblock */</comment>

    <expr_stmt pos:start="427:5" pos:end="427:16"><expr pos:start="427:5" pos:end="427:15"><name pos:start="427:5" pos:end="427:11"><name pos:start="427:5" pos:end="427:5">s</name><operator pos:start="427:6" pos:end="427:7">-&gt;</operator><name pos:start="427:8" pos:end="427:11">mb_x</name></name> <operator pos:start="427:13" pos:end="427:13">=</operator> <literal type="number" pos:start="427:15" pos:end="427:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="429:5" pos:end="429:16"><expr pos:start="429:5" pos:end="429:15"><name pos:start="429:5" pos:end="429:11"><name pos:start="429:5" pos:end="429:5">s</name><operator pos:start="429:6" pos:end="429:7">-&gt;</operator><name pos:start="429:8" pos:end="429:11">mb_y</name></name> <operator pos:start="429:13" pos:end="429:13">=</operator> <literal type="number" pos:start="429:15" pos:end="429:15">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="433:5" pos:end="433:32"><expr pos:start="433:5" pos:end="433:31"><name pos:start="433:5" pos:end="433:13">slice_ret</name> <operator pos:start="433:15" pos:end="433:15">=</operator> <call pos:start="433:17" pos:end="433:31"><name pos:start="433:17" pos:end="433:28">decode_slice</name><argument_list pos:start="433:29" pos:end="433:31">(<argument pos:start="433:30" pos:end="433:30"><expr pos:start="433:30" pos:end="433:30"><name pos:start="433:30" pos:end="433:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="435:5" pos:end="471:5">while <condition pos:start="435:11" pos:end="435:34">(<expr pos:start="435:12" pos:end="435:33"><name pos:start="435:12" pos:end="435:18"><name pos:start="435:12" pos:end="435:12">s</name><operator pos:start="435:13" pos:end="435:14">-&gt;</operator><name pos:start="435:15" pos:end="435:18">mb_y</name></name> <operator pos:start="435:20" pos:end="435:20">&lt;</operator> <name pos:start="435:22" pos:end="435:33"><name pos:start="435:22" pos:end="435:22">s</name><operator pos:start="435:23" pos:end="435:24">-&gt;</operator><name pos:start="435:25" pos:end="435:33">mb_height</name></name></expr>)</condition> <block pos:start="435:36" pos:end="471:5">{<block_content pos:start="437:9" pos:end="469:44">

        <if_stmt pos:start="437:9" pos:end="457:9"><if pos:start="437:9" pos:end="445:9">if <condition pos:start="437:12" pos:end="437:31">(<expr pos:start="437:13" pos:end="437:30"><name pos:start="437:13" pos:end="437:30"><name pos:start="437:13" pos:end="437:13">s</name><operator pos:start="437:14" pos:end="437:15">-&gt;</operator><name pos:start="437:16" pos:end="437:30">msmpeg4_version</name></name></expr>)</condition> <block pos:start="437:33" pos:end="445:9">{<block_content pos:start="439:13" pos:end="443:22">

            <if_stmt pos:start="439:13" pos:end="443:22"><if pos:start="439:13" pos:end="443:22">if <condition pos:start="439:16" pos:end="441:78">(<expr pos:start="439:17" pos:end="441:77"><name pos:start="439:17" pos:end="439:31"><name pos:start="439:17" pos:end="439:17">s</name><operator pos:start="439:18" pos:end="439:19">-&gt;</operator><name pos:start="439:20" pos:end="439:31">slice_height</name></name> <operator pos:start="439:33" pos:end="439:34">==</operator> <literal type="number" pos:start="439:36" pos:end="439:36">0</literal> <operator pos:start="439:38" pos:end="439:39">||</operator> <name pos:start="439:41" pos:end="439:47"><name pos:start="439:41" pos:end="439:41">s</name><operator pos:start="439:42" pos:end="439:43">-&gt;</operator><name pos:start="439:44" pos:end="439:47">mb_x</name></name> <operator pos:start="439:49" pos:end="439:50">!=</operator> <literal type="number" pos:start="439:52" pos:end="439:52">0</literal> <operator pos:start="439:54" pos:end="439:55">||</operator>

                <operator pos:start="441:17" pos:end="441:17">(</operator><name pos:start="441:18" pos:end="441:24"><name pos:start="441:18" pos:end="441:18">s</name><operator pos:start="441:19" pos:end="441:20">-&gt;</operator><name pos:start="441:21" pos:end="441:24">mb_y</name></name> <operator pos:start="441:26" pos:end="441:26">%</operator> <name pos:start="441:28" pos:end="441:42"><name pos:start="441:28" pos:end="441:28">s</name><operator pos:start="441:29" pos:end="441:30">-&gt;</operator><name pos:start="441:31" pos:end="441:42">slice_height</name></name><operator pos:start="441:43" pos:end="441:43">)</operator> <operator pos:start="441:45" pos:end="441:46">!=</operator> <literal type="number" pos:start="441:48" pos:end="441:48">0</literal> <operator pos:start="441:50" pos:end="441:51">||</operator> <call pos:start="441:53" pos:end="441:73"><name pos:start="441:53" pos:end="441:65">get_bits_left</name><argument_list pos:start="441:66" pos:end="441:73">(<argument pos:start="441:67" pos:end="441:72"><expr pos:start="441:67" pos:end="441:72"><operator pos:start="441:67" pos:end="441:67">&amp;</operator><name pos:start="441:68" pos:end="441:72"><name pos:start="441:68" pos:end="441:68">s</name><operator pos:start="441:69" pos:end="441:70">-&gt;</operator><name pos:start="441:71" pos:end="441:72">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="441:75" pos:end="441:75">&lt;</operator> <literal type="number" pos:start="441:77" pos:end="441:77">0</literal></expr>)</condition><block type="pseudo" pos:start="443:17" pos:end="443:22"><block_content pos:start="443:17" pos:end="443:22">

                <break pos:start="443:17" pos:end="443:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="445:11" pos:end="457:9">else <block pos:start="445:16" pos:end="457:9">{<block_content pos:start="447:13" pos:end="455:41">

            <decl_stmt pos:start="447:13" pos:end="447:51"><decl pos:start="447:13" pos:end="447:32"><type pos:start="447:13" pos:end="447:15"><name pos:start="447:13" pos:end="447:15">int</name></type> <name pos:start="447:17" pos:end="447:22">prev_x</name> <init pos:start="447:24" pos:end="447:32">= <expr pos:start="447:26" pos:end="447:32"><name pos:start="447:26" pos:end="447:32"><name pos:start="447:26" pos:end="447:26">s</name><operator pos:start="447:27" pos:end="447:28">-&gt;</operator><name pos:start="447:29" pos:end="447:32">mb_x</name></name></expr></init></decl>, <decl pos:start="447:35" pos:end="447:50"><type ref="prev" pos:start="447:13" pos:end="447:15"/><name pos:start="447:35" pos:end="447:40">prev_y</name> <init pos:start="447:42" pos:end="447:50">= <expr pos:start="447:44" pos:end="447:50"><name pos:start="447:44" pos:end="447:50"><name pos:start="447:44" pos:end="447:44">s</name><operator pos:start="447:45" pos:end="447:46">-&gt;</operator><name pos:start="447:47" pos:end="447:50">mb_y</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="449:13" pos:end="451:22"><if pos:start="449:13" pos:end="451:22">if <condition pos:start="449:16" pos:end="449:38">(<expr pos:start="449:17" pos:end="449:37"><call pos:start="449:17" pos:end="449:33"><name pos:start="449:17" pos:end="449:30">ff_h263_resync</name><argument_list pos:start="449:31" pos:end="449:33">(<argument pos:start="449:32" pos:end="449:32"><expr pos:start="449:32" pos:end="449:32"><name pos:start="449:32" pos:end="449:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="449:35" pos:end="449:35">&lt;</operator> <literal type="number" pos:start="449:37" pos:end="449:37">0</literal></expr>)</condition><block type="pseudo" pos:start="451:17" pos:end="451:22"><block_content pos:start="451:17" pos:end="451:22">

                <break pos:start="451:17" pos:end="451:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="453:13" pos:end="455:41"><if pos:start="453:13" pos:end="455:41">if <condition pos:start="453:16" pos:end="453:80">(<expr pos:start="453:17" pos:end="453:79"><name pos:start="453:17" pos:end="453:22">prev_y</name> <operator pos:start="453:24" pos:end="453:24">*</operator> <name pos:start="453:26" pos:end="453:36"><name pos:start="453:26" pos:end="453:26">s</name><operator pos:start="453:27" pos:end="453:28">-&gt;</operator><name pos:start="453:29" pos:end="453:36">mb_width</name></name> <operator pos:start="453:38" pos:end="453:38">+</operator> <name pos:start="453:40" pos:end="453:45">prev_x</name> <operator pos:start="453:47" pos:end="453:47">&lt;</operator> <name pos:start="453:49" pos:end="453:55"><name pos:start="453:49" pos:end="453:49">s</name><operator pos:start="453:50" pos:end="453:51">-&gt;</operator><name pos:start="453:52" pos:end="453:55">mb_y</name></name> <operator pos:start="453:57" pos:end="453:57">*</operator> <name pos:start="453:59" pos:end="453:69"><name pos:start="453:59" pos:end="453:59">s</name><operator pos:start="453:60" pos:end="453:61">-&gt;</operator><name pos:start="453:62" pos:end="453:69">mb_width</name></name> <operator pos:start="453:71" pos:end="453:71">+</operator> <name pos:start="453:73" pos:end="453:79"><name pos:start="453:73" pos:end="453:73">s</name><operator pos:start="453:74" pos:end="453:75">-&gt;</operator><name pos:start="453:76" pos:end="453:79">mb_x</name></name></expr>)</condition><block type="pseudo" pos:start="455:17" pos:end="455:41"><block_content pos:start="455:17" pos:end="455:41">

                <expr_stmt pos:start="455:17" pos:end="455:41"><expr pos:start="455:17" pos:end="455:40"><name pos:start="455:17" pos:end="455:36"><name pos:start="455:17" pos:end="455:17">s</name><operator pos:start="455:18" pos:end="455:19">-&gt;</operator><name pos:start="455:20" pos:end="455:21">er</name><operator pos:start="455:22" pos:end="455:22">.</operator><name pos:start="455:23" pos:end="455:36">error_occurred</name></name> <operator pos:start="455:38" pos:end="455:38">=</operator> <literal type="number" pos:start="455:40" pos:end="455:40">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="461:9" pos:end="463:38"><if pos:start="461:9" pos:end="463:38">if <condition pos:start="461:12" pos:end="461:51">(<expr pos:start="461:13" pos:end="461:50"><name pos:start="461:13" pos:end="461:30"><name pos:start="461:13" pos:end="461:13">s</name><operator pos:start="461:14" pos:end="461:15">-&gt;</operator><name pos:start="461:16" pos:end="461:30">msmpeg4_version</name></name> <operator pos:start="461:32" pos:end="461:32">&lt;</operator> <literal type="number" pos:start="461:34" pos:end="461:34">4</literal> <operator pos:start="461:36" pos:end="461:37">&amp;&amp;</operator> <name pos:start="461:39" pos:end="461:50"><name pos:start="461:39" pos:end="461:39">s</name><operator pos:start="461:40" pos:end="461:41">-&gt;</operator><name pos:start="461:42" pos:end="461:50">h263_pred</name></name></expr>)</condition><block type="pseudo" pos:start="463:13" pos:end="463:38"><block_content pos:start="463:13" pos:end="463:38">

            <expr_stmt pos:start="463:13" pos:end="463:38"><expr pos:start="463:13" pos:end="463:37"><call pos:start="463:13" pos:end="463:37"><name pos:start="463:13" pos:end="463:34">ff_mpeg4_clean_buffers</name><argument_list pos:start="463:35" pos:end="463:37">(<argument pos:start="463:36" pos:end="463:36"><expr pos:start="463:36" pos:end="463:36"><name pos:start="463:36" pos:end="463:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="467:9" pos:end="469:44"><if pos:start="467:9" pos:end="469:44">if <condition pos:start="467:12" pos:end="467:32">(<expr pos:start="467:13" pos:end="467:31"><call pos:start="467:13" pos:end="467:27"><name pos:start="467:13" pos:end="467:24">decode_slice</name><argument_list pos:start="467:25" pos:end="467:27">(<argument pos:start="467:26" pos:end="467:26"><expr pos:start="467:26" pos:end="467:26"><name pos:start="467:26" pos:end="467:26">s</name></expr></argument>)</argument_list></call> <operator pos:start="467:29" pos:end="467:29">&lt;</operator> <literal type="number" pos:start="467:31" pos:end="467:31">0</literal></expr>)</condition><block type="pseudo" pos:start="469:13" pos:end="469:44"><block_content pos:start="469:13" pos:end="469:44">

            <expr_stmt pos:start="469:13" pos:end="469:44"><expr pos:start="469:13" pos:end="469:43"><name pos:start="469:13" pos:end="469:21">slice_ret</name> <operator pos:start="469:23" pos:end="469:23">=</operator> <name pos:start="469:25" pos:end="469:43">AVERROR_INVALIDDATA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="475:5" pos:end="483:66"><if pos:start="475:5" pos:end="483:66">if <condition pos:start="475:8" pos:end="477:42">(<expr pos:start="475:9" pos:end="477:41"><name pos:start="475:9" pos:end="475:26"><name pos:start="475:9" pos:end="475:9">s</name><operator pos:start="475:10" pos:end="475:11">-&gt;</operator><name pos:start="475:12" pos:end="475:26">msmpeg4_version</name></name> <operator pos:start="475:28" pos:end="475:29">&amp;&amp;</operator> <name pos:start="475:31" pos:end="475:48"><name pos:start="475:31" pos:end="475:31">s</name><operator pos:start="475:32" pos:end="475:33">-&gt;</operator><name pos:start="475:34" pos:end="475:48">msmpeg4_version</name></name> <operator pos:start="475:50" pos:end="475:50">&lt;</operator> <literal type="number" pos:start="475:52" pos:end="475:52">4</literal> <operator pos:start="475:54" pos:end="475:55">&amp;&amp;</operator>

        <name pos:start="477:9" pos:end="477:20"><name pos:start="477:9" pos:end="477:9">s</name><operator pos:start="477:10" pos:end="477:11">-&gt;</operator><name pos:start="477:12" pos:end="477:20">pict_type</name></name> <operator pos:start="477:22" pos:end="477:23">==</operator> <name pos:start="477:25" pos:end="477:41">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="479:9" pos:end="483:66"><block_content pos:start="479:9" pos:end="483:66">

        <if_stmt pos:start="479:9" pos:end="483:66"><if pos:start="479:9" pos:end="483:66">if <condition pos:start="479:12" pos:end="481:58">(<expr pos:start="479:13" pos:end="481:57"><operator pos:start="479:13" pos:end="479:13">!</operator><name pos:start="479:14" pos:end="479:35">CONFIG_MSMPEG4_DECODER</name> <operator pos:start="479:37" pos:end="479:38">||</operator>

            <call pos:start="481:13" pos:end="481:53"><name pos:start="481:13" pos:end="481:40">ff_msmpeg4_decode_ext_header</name><argument_list pos:start="481:41" pos:end="481:53">(<argument pos:start="481:42" pos:end="481:42"><expr pos:start="481:42" pos:end="481:42"><name pos:start="481:42" pos:end="481:42">s</name></expr></argument>, <argument pos:start="481:45" pos:end="481:52"><expr pos:start="481:45" pos:end="481:52"><name pos:start="481:45" pos:end="481:52">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="481:55" pos:end="481:55">&lt;</operator> <literal type="number" pos:start="481:57" pos:end="481:57">0</literal></expr>)</condition><block type="pseudo" pos:start="483:13" pos:end="483:66"><block_content pos:start="483:13" pos:end="483:66">

            <expr_stmt pos:start="483:13" pos:end="483:66"><expr pos:start="483:13" pos:end="483:65"><name pos:start="483:13" pos:end="483:51"><name pos:start="483:13" pos:end="483:13">s</name><operator pos:start="483:14" pos:end="483:15">-&gt;</operator><name pos:start="483:16" pos:end="483:17">er</name><operator pos:start="483:18" pos:end="483:18">.</operator><name pos:start="483:19" pos:end="483:36">error_status_table</name><index pos:start="483:37" pos:end="483:51">[<expr pos:start="483:38" pos:end="483:50"><name pos:start="483:38" pos:end="483:46"><name pos:start="483:38" pos:end="483:38">s</name><operator pos:start="483:39" pos:end="483:40">-&gt;</operator><name pos:start="483:41" pos:end="483:46">mb_num</name></name> <operator pos:start="483:48" pos:end="483:48">-</operator> <literal type="number" pos:start="483:50" pos:end="483:50">1</literal></expr>]</index></name> <operator pos:start="483:53" pos:end="483:53">=</operator> <name pos:start="483:55" pos:end="483:65">ER_MB_ERROR</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="487:5" pos:end="487:46"><expr pos:start="487:5" pos:end="487:45"><call pos:start="487:5" pos:end="487:45"><name pos:start="487:5" pos:end="487:14">av_assert1</name><argument_list pos:start="487:15" pos:end="487:45">(<argument pos:start="487:16" pos:end="487:44"><expr pos:start="487:16" pos:end="487:44"><name pos:start="487:16" pos:end="487:39"><name pos:start="487:16" pos:end="487:16">s</name><operator pos:start="487:17" pos:end="487:18">-&gt;</operator><name pos:start="487:19" pos:end="487:39">bitstream_buffer_size</name></name> <operator pos:start="487:41" pos:end="487:42">==</operator> <literal type="number" pos:start="487:44" pos:end="487:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="489:1" pos:end="489:10"><name pos:start="489:1" pos:end="489:9">frame_end</name>:</label>

    <expr_stmt pos:start="491:5" pos:end="491:28"><expr pos:start="491:5" pos:end="491:27"><call pos:start="491:5" pos:end="491:27"><name pos:start="491:5" pos:end="491:19">ff_er_frame_end</name><argument_list pos:start="491:20" pos:end="491:27">(<argument pos:start="491:21" pos:end="491:26"><expr pos:start="491:21" pos:end="491:26"><operator pos:start="491:21" pos:end="491:21">&amp;</operator><name pos:start="491:22" pos:end="491:26"><name pos:start="491:22" pos:end="491:22">s</name><operator pos:start="491:23" pos:end="491:24">-&gt;</operator><name pos:start="491:25" pos:end="491:26">er</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="495:5" pos:end="503:5"><if pos:start="495:5" pos:end="503:5">if <condition pos:start="495:8" pos:end="495:23">(<expr pos:start="495:9" pos:end="495:22"><name pos:start="495:9" pos:end="495:22"><name pos:start="495:9" pos:end="495:13">avctx</name><operator pos:start="495:14" pos:end="495:15">-&gt;</operator><name pos:start="495:16" pos:end="495:22">hwaccel</name></name></expr>)</condition> <block pos:start="495:25" pos:end="503:5">{<block_content pos:start="497:9" pos:end="501:23">

        <expr_stmt pos:start="497:9" pos:end="497:47"><expr pos:start="497:9" pos:end="497:46"><name pos:start="497:9" pos:end="497:11">ret</name> <operator pos:start="497:13" pos:end="497:13">=</operator> <call pos:start="497:15" pos:end="497:46"><name pos:start="497:15" pos:end="497:39"><name pos:start="497:15" pos:end="497:19">avctx</name><operator pos:start="497:20" pos:end="497:21">-&gt;</operator><name pos:start="497:22" pos:end="497:28">hwaccel</name><operator pos:start="497:29" pos:end="497:30">-&gt;</operator><name pos:start="497:31" pos:end="497:39">end_frame</name></name><argument_list pos:start="497:40" pos:end="497:46">(<argument pos:start="497:41" pos:end="497:45"><expr pos:start="497:41" pos:end="497:45"><name pos:start="497:41" pos:end="497:45">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="499:9" pos:end="501:23"><if pos:start="499:9" pos:end="501:23">if <condition pos:start="499:12" pos:end="499:20">(<expr pos:start="499:13" pos:end="499:19"><name pos:start="499:13" pos:end="499:15">ret</name> <operator pos:start="499:17" pos:end="499:17">&lt;</operator> <literal type="number" pos:start="499:19" pos:end="499:19">0</literal></expr>)</condition><block type="pseudo" pos:start="501:13" pos:end="501:23"><block_content pos:start="501:13" pos:end="501:23">

            <return pos:start="501:13" pos:end="501:23">return <expr pos:start="501:20" pos:end="501:22"><name pos:start="501:20" pos:end="501:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="507:5" pos:end="507:24"><expr pos:start="507:5" pos:end="507:23"><call pos:start="507:5" pos:end="507:23"><name pos:start="507:5" pos:end="507:20">ff_MPV_frame_end</name><argument_list pos:start="507:21" pos:end="507:23">(<argument pos:start="507:22" pos:end="507:22"><expr pos:start="507:22" pos:end="507:22"><name pos:start="507:22" pos:end="507:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="511:5" pos:end="511:44">/* divx 5.01+ bitstream reorder stuff */</comment>

    <comment type="block" pos:start="513:5" pos:end="515:74">/* Since this clobbers the input buffer and hwaccel codecs still need the

     * data during hwaccel-&gt;end_frame we should not do this any earlier */</comment>

    <if_stmt pos:start="517:5" pos:end="571:5"><if pos:start="517:5" pos:end="571:5">if <condition pos:start="517:8" pos:end="517:59">(<expr pos:start="517:9" pos:end="517:58"><name pos:start="517:9" pos:end="517:19"><name pos:start="517:9" pos:end="517:9">s</name><operator pos:start="517:10" pos:end="517:11">-&gt;</operator><name pos:start="517:12" pos:end="517:19">codec_id</name></name> <operator pos:start="517:21" pos:end="517:22">==</operator> <name pos:start="517:24" pos:end="517:40">AV_CODEC_ID_MPEG4</name> <operator pos:start="517:42" pos:end="517:43">&amp;&amp;</operator> <name pos:start="517:45" pos:end="517:58"><name pos:start="517:45" pos:end="517:45">s</name><operator pos:start="517:46" pos:end="517:47">-&gt;</operator><name pos:start="517:48" pos:end="517:58">divx_packed</name></name></expr>)</condition> <block pos:start="517:61" pos:end="571:5">{<block_content pos:start="519:9" pos:end="569:9">

        <decl_stmt pos:start="519:9" pos:end="519:102"><decl pos:start="519:9" pos:end="519:101"><type pos:start="519:9" pos:end="519:11"><name pos:start="519:9" pos:end="519:11">int</name></type> <name pos:start="519:13" pos:end="519:23">current_pos</name>     <init pos:start="519:29" pos:end="519:101">= <expr pos:start="519:31" pos:end="519:101"><ternary pos:start="519:31" pos:end="519:101"><condition pos:start="519:31" pos:end="519:67"><expr pos:start="519:31" pos:end="519:65"><name pos:start="519:31" pos:end="519:42"><name pos:start="519:31" pos:end="519:31">s</name><operator pos:start="519:32" pos:end="519:33">-&gt;</operator><name pos:start="519:34" pos:end="519:35">gb</name><operator pos:start="519:36" pos:end="519:36">.</operator><name pos:start="519:37" pos:end="519:42">buffer</name></name> <operator pos:start="519:44" pos:end="519:45">==</operator> <name pos:start="519:47" pos:end="519:65"><name pos:start="519:47" pos:end="519:47">s</name><operator pos:start="519:48" pos:end="519:49">-&gt;</operator><name pos:start="519:50" pos:end="519:65">bitstream_buffer</name></name></expr> ?</condition><then pos:start="519:69" pos:end="519:69"> <expr pos:start="519:69" pos:end="519:69"><literal type="number" pos:start="519:69" pos:end="519:69">0</literal></expr> </then><else pos:start="519:71" pos:end="519:101">: <expr pos:start="519:73" pos:end="519:101"><operator pos:start="519:73" pos:end="519:73">(</operator><call pos:start="519:74" pos:end="519:95"><name pos:start="519:74" pos:end="519:87">get_bits_count</name><argument_list pos:start="519:88" pos:end="519:95">(<argument pos:start="519:89" pos:end="519:94"><expr pos:start="519:89" pos:end="519:94"><operator pos:start="519:89" pos:end="519:89">&amp;</operator><name pos:start="519:90" pos:end="519:94"><name pos:start="519:90" pos:end="519:90">s</name><operator pos:start="519:91" pos:end="519:92">-&gt;</operator><name pos:start="519:93" pos:end="519:94">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="519:97" pos:end="519:98">&gt;&gt;</operator> <literal type="number" pos:start="519:100" pos:end="519:100">3</literal><operator pos:start="519:101" pos:end="519:101">)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="521:9" pos:end="521:32"><decl pos:start="521:9" pos:end="521:31"><type pos:start="521:9" pos:end="521:11"><name pos:start="521:9" pos:end="521:11">int</name></type> <name pos:start="521:13" pos:end="521:27">startcode_found</name> <init pos:start="521:29" pos:end="521:31">= <expr pos:start="521:31" pos:end="521:31"><literal type="number" pos:start="521:31" pos:end="521:31">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="525:9" pos:end="545:9"><if pos:start="525:9" pos:end="545:9">if <condition pos:start="525:12" pos:end="525:39">(<expr pos:start="525:13" pos:end="525:38"><name pos:start="525:13" pos:end="525:20">buf_size</name> <operator pos:start="525:22" pos:end="525:22">-</operator> <name pos:start="525:24" pos:end="525:34">current_pos</name> <operator pos:start="525:36" pos:end="525:36">&gt;</operator> <literal type="number" pos:start="525:38" pos:end="525:38">7</literal></expr>)</condition> <block pos:start="525:41" pos:end="545:9">{<block_content pos:start="527:13" pos:end="543:17">

            <decl_stmt pos:start="527:13" pos:end="527:18"><decl pos:start="527:13" pos:end="527:17"><type pos:start="527:13" pos:end="527:15"><name pos:start="527:13" pos:end="527:15">int</name></type> <name pos:start="527:17" pos:end="527:17">i</name></decl>;</decl_stmt>

            <for pos:start="529:13" pos:end="543:17">for <control pos:start="529:17" pos:end="529:56">(<init pos:start="529:18" pos:end="529:33"><expr pos:start="529:18" pos:end="529:32"><name pos:start="529:18" pos:end="529:18">i</name> <operator pos:start="529:20" pos:end="529:20">=</operator> <name pos:start="529:22" pos:end="529:32">current_pos</name></expr>;</init> <condition pos:start="529:35" pos:end="529:51"><expr pos:start="529:35" pos:end="529:50"><name pos:start="529:35" pos:end="529:35">i</name> <operator pos:start="529:37" pos:end="529:37">&lt;</operator> <name pos:start="529:39" pos:end="529:46">buf_size</name> <operator pos:start="529:48" pos:end="529:48">-</operator> <literal type="number" pos:start="529:50" pos:end="529:50">4</literal></expr>;</condition> <incr pos:start="529:53" pos:end="529:55"><expr pos:start="529:53" pos:end="529:55"><name pos:start="529:53" pos:end="529:53">i</name><operator pos:start="529:54" pos:end="529:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="531:17" pos:end="543:17"><block_content pos:start="531:17" pos:end="543:17">

                <if_stmt pos:start="531:17" pos:end="543:17"><if pos:start="531:17" pos:end="543:17">if <condition pos:start="531:20" pos:end="537:39">(<expr pos:start="531:21" pos:end="537:38"><name pos:start="531:21" pos:end="531:26"><name pos:start="531:21" pos:end="531:23">buf</name><index pos:start="531:24" pos:end="531:26">[<expr pos:start="531:25" pos:end="531:25"><name pos:start="531:25" pos:end="531:25">i</name></expr>]</index></name>     <operator pos:start="531:32" pos:end="531:33">==</operator> <literal type="number" pos:start="531:35" pos:end="531:35">0</literal> <operator pos:start="531:37" pos:end="531:38">&amp;&amp;</operator>

                    <name pos:start="533:21" pos:end="533:30"><name pos:start="533:21" pos:end="533:23">buf</name><index pos:start="533:24" pos:end="533:30">[<expr pos:start="533:25" pos:end="533:29"><name pos:start="533:25" pos:end="533:25">i</name> <operator pos:start="533:27" pos:end="533:27">+</operator> <literal type="number" pos:start="533:29" pos:end="533:29">1</literal></expr>]</index></name> <operator pos:start="533:32" pos:end="533:33">==</operator> <literal type="number" pos:start="533:35" pos:end="533:35">0</literal> <operator pos:start="533:37" pos:end="533:38">&amp;&amp;</operator>

                    <name pos:start="535:21" pos:end="535:30"><name pos:start="535:21" pos:end="535:23">buf</name><index pos:start="535:24" pos:end="535:30">[<expr pos:start="535:25" pos:end="535:29"><name pos:start="535:25" pos:end="535:25">i</name> <operator pos:start="535:27" pos:end="535:27">+</operator> <literal type="number" pos:start="535:29" pos:end="535:29">2</literal></expr>]</index></name> <operator pos:start="535:32" pos:end="535:33">==</operator> <literal type="number" pos:start="535:35" pos:end="535:35">1</literal> <operator pos:start="535:37" pos:end="535:38">&amp;&amp;</operator>

                    <name pos:start="537:21" pos:end="537:30"><name pos:start="537:21" pos:end="537:23">buf</name><index pos:start="537:24" pos:end="537:30">[<expr pos:start="537:25" pos:end="537:29"><name pos:start="537:25" pos:end="537:25">i</name> <operator pos:start="537:27" pos:end="537:27">+</operator> <literal type="number" pos:start="537:29" pos:end="537:29">3</literal></expr>]</index></name> <operator pos:start="537:32" pos:end="537:33">==</operator> <literal type="number" pos:start="537:35" pos:end="537:38">0xB6</literal></expr>)</condition> <block pos:start="537:41" pos:end="543:17">{<block_content pos:start="539:21" pos:end="541:26">

                    <expr_stmt pos:start="539:21" pos:end="539:59"><expr pos:start="539:21" pos:end="539:58"><name pos:start="539:21" pos:end="539:35">startcode_found</name> <operator pos:start="539:37" pos:end="539:37">=</operator> <operator pos:start="539:39" pos:end="539:39">!</operator><operator pos:start="539:40" pos:end="539:40">(</operator><name pos:start="539:41" pos:end="539:50"><name pos:start="539:41" pos:end="539:43">buf</name><index pos:start="539:44" pos:end="539:50">[<expr pos:start="539:45" pos:end="539:49"><name pos:start="539:45" pos:end="539:45">i</name> <operator pos:start="539:47" pos:end="539:47">+</operator> <literal type="number" pos:start="539:49" pos:end="539:49">4</literal></expr>]</index></name> <operator pos:start="539:52" pos:end="539:52">&amp;</operator> <literal type="number" pos:start="539:54" pos:end="539:57">0x40</literal><operator pos:start="539:58" pos:end="539:58">)</operator></expr>;</expr_stmt>

                    <break pos:start="541:21" pos:end="541:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="549:9" pos:end="569:9"><if pos:start="549:9" pos:end="569:9">if <condition pos:start="549:12" pos:end="549:28">(<expr pos:start="549:13" pos:end="549:27"><name pos:start="549:13" pos:end="549:27">startcode_found</name></expr>)</condition> <block pos:start="549:30" pos:end="569:9">{<block_content pos:start="551:13" pos:end="567:62">

            <expr_stmt pos:start="551:13" pos:end="557:57"><expr pos:start="551:13" pos:end="557:56"><call pos:start="551:13" pos:end="557:56"><name pos:start="551:13" pos:end="551:26">av_fast_malloc</name><argument_list pos:start="551:27" pos:end="557:56">(<argument pos:start="551:28" pos:end="551:47"><expr pos:start="551:28" pos:end="551:47"><operator pos:start="551:28" pos:end="551:28">&amp;</operator><name pos:start="551:29" pos:end="551:47"><name pos:start="551:29" pos:end="551:29">s</name><operator pos:start="551:30" pos:end="551:31">-&gt;</operator><name pos:start="551:32" pos:end="551:47">bitstream_buffer</name></name></expr></argument>,

                           <argument pos:start="553:28" pos:end="553:62"><expr pos:start="553:28" pos:end="553:62"><operator pos:start="553:28" pos:end="553:28">&amp;</operator><name pos:start="553:29" pos:end="553:62"><name pos:start="553:29" pos:end="553:29">s</name><operator pos:start="553:30" pos:end="553:31">-&gt;</operator><name pos:start="553:32" pos:end="553:62">allocated_bitstream_buffer_size</name></name></expr></argument>,

                           <argument pos:start="555:28" pos:end="557:55"><expr pos:start="555:28" pos:end="557:55"><name pos:start="555:28" pos:end="555:35">buf_size</name> <operator pos:start="555:37" pos:end="555:37">-</operator> <name pos:start="555:39" pos:end="555:49">current_pos</name> <operator pos:start="555:51" pos:end="555:51">+</operator>

                           <name pos:start="557:28" pos:end="557:55">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="559:13" pos:end="561:39"><if pos:start="559:13" pos:end="561:39">if <condition pos:start="559:16" pos:end="559:37">(<expr pos:start="559:17" pos:end="559:36"><operator pos:start="559:17" pos:end="559:17">!</operator><name pos:start="559:18" pos:end="559:36"><name pos:start="559:18" pos:end="559:18">s</name><operator pos:start="559:19" pos:end="559:20">-&gt;</operator><name pos:start="559:21" pos:end="559:36">bitstream_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="561:17" pos:end="561:39"><block_content pos:start="561:17" pos:end="561:39">

                <return pos:start="561:17" pos:end="561:39">return <expr pos:start="561:24" pos:end="561:38"><call pos:start="561:24" pos:end="561:38"><name pos:start="561:24" pos:end="561:30">AVERROR</name><argument_list pos:start="561:31" pos:end="561:38">(<argument pos:start="561:32" pos:end="561:37"><expr pos:start="561:32" pos:end="561:37"><name pos:start="561:32" pos:end="561:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="563:13" pos:end="565:43"><expr pos:start="563:13" pos:end="565:42"><call pos:start="563:13" pos:end="565:42"><name pos:start="563:13" pos:end="563:18">memcpy</name><argument_list pos:start="563:19" pos:end="565:42">(<argument pos:start="563:20" pos:end="563:38"><expr pos:start="563:20" pos:end="563:38"><name pos:start="563:20" pos:end="563:38"><name pos:start="563:20" pos:end="563:20">s</name><operator pos:start="563:21" pos:end="563:22">-&gt;</operator><name pos:start="563:23" pos:end="563:38">bitstream_buffer</name></name></expr></argument>, <argument pos:start="563:41" pos:end="563:57"><expr pos:start="563:41" pos:end="563:57"><name pos:start="563:41" pos:end="563:43">buf</name> <operator pos:start="563:45" pos:end="563:45">+</operator> <name pos:start="563:47" pos:end="563:57">current_pos</name></expr></argument>,

                   <argument pos:start="565:20" pos:end="565:41"><expr pos:start="565:20" pos:end="565:41"><name pos:start="565:20" pos:end="565:27">buf_size</name> <operator pos:start="565:29" pos:end="565:29">-</operator> <name pos:start="565:31" pos:end="565:41">current_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="567:13" pos:end="567:62"><expr pos:start="567:13" pos:end="567:61"><name pos:start="567:13" pos:end="567:36"><name pos:start="567:13" pos:end="567:13">s</name><operator pos:start="567:14" pos:end="567:15">-&gt;</operator><name pos:start="567:16" pos:end="567:36">bitstream_buffer_size</name></name> <operator pos:start="567:38" pos:end="567:38">=</operator> <name pos:start="567:40" pos:end="567:47">buf_size</name> <operator pos:start="567:49" pos:end="567:49">-</operator> <name pos:start="567:51" pos:end="567:61">current_pos</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="575:5" pos:end="577:38"><if pos:start="575:5" pos:end="577:38">if <condition pos:start="575:8" pos:end="575:42">(<expr pos:start="575:9" pos:end="575:41"><operator pos:start="575:9" pos:end="575:9">!</operator><name pos:start="575:10" pos:end="575:23"><name pos:start="575:10" pos:end="575:10">s</name><operator pos:start="575:11" pos:end="575:12">-&gt;</operator><name pos:start="575:13" pos:end="575:23">divx_packed</name></name> <operator pos:start="575:25" pos:end="575:26">&amp;&amp;</operator> <name pos:start="575:28" pos:end="575:41"><name pos:start="575:28" pos:end="575:32">avctx</name><operator pos:start="575:33" pos:end="575:34">-&gt;</operator><name pos:start="575:35" pos:end="575:41">hwaccel</name></name></expr>)</condition><block type="pseudo" pos:start="577:9" pos:end="577:38"><block_content pos:start="577:9" pos:end="577:38">

        <expr_stmt pos:start="577:9" pos:end="577:38"><expr pos:start="577:9" pos:end="577:37"><call pos:start="577:9" pos:end="577:37"><name pos:start="577:9" pos:end="577:30">ff_thread_finish_setup</name><argument_list pos:start="577:31" pos:end="577:37">(<argument pos:start="577:32" pos:end="577:36"><expr pos:start="577:32" pos:end="577:36"><name pos:start="577:32" pos:end="577:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="581:5" pos:end="581:86"><expr pos:start="581:5" pos:end="581:85"><call pos:start="581:5" pos:end="581:85"><name pos:start="581:5" pos:end="581:14">av_assert1</name><argument_list pos:start="581:15" pos:end="581:85">(<argument pos:start="581:16" pos:end="581:84"><expr pos:start="581:16" pos:end="581:84"><name pos:start="581:16" pos:end="581:45"><name pos:start="581:16" pos:end="581:16">s</name><operator pos:start="581:17" pos:end="581:18">-&gt;</operator><name pos:start="581:19" pos:end="581:33">current_picture</name><operator pos:start="581:34" pos:end="581:34">.</operator><name pos:start="581:35" pos:end="581:35">f</name><operator pos:start="581:36" pos:end="581:36">.</operator><name pos:start="581:37" pos:end="581:45">pict_type</name></name> <operator pos:start="581:47" pos:end="581:48">==</operator> <name pos:start="581:50" pos:end="581:84"><name pos:start="581:50" pos:end="581:50">s</name><operator pos:start="581:51" pos:end="581:52">-&gt;</operator><name pos:start="581:53" pos:end="581:71">current_picture_ptr</name><operator pos:start="581:72" pos:end="581:73">-&gt;</operator><name pos:start="581:74" pos:end="581:74">f</name><operator pos:start="581:75" pos:end="581:75">.</operator><name pos:start="581:76" pos:end="581:84">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="583:5" pos:end="583:63"><expr pos:start="583:5" pos:end="583:62"><call pos:start="583:5" pos:end="583:62"><name pos:start="583:5" pos:end="583:14">av_assert1</name><argument_list pos:start="583:15" pos:end="583:62">(<argument pos:start="583:16" pos:end="583:61"><expr pos:start="583:16" pos:end="583:61"><name pos:start="583:16" pos:end="583:45"><name pos:start="583:16" pos:end="583:16">s</name><operator pos:start="583:17" pos:end="583:18">-&gt;</operator><name pos:start="583:19" pos:end="583:33">current_picture</name><operator pos:start="583:34" pos:end="583:34">.</operator><name pos:start="583:35" pos:end="583:35">f</name><operator pos:start="583:36" pos:end="583:36">.</operator><name pos:start="583:37" pos:end="583:45">pict_type</name></name> <operator pos:start="583:47" pos:end="583:48">==</operator> <name pos:start="583:50" pos:end="583:61"><name pos:start="583:50" pos:end="583:50">s</name><operator pos:start="583:51" pos:end="583:52">-&gt;</operator><name pos:start="583:53" pos:end="583:61">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="585:5" pos:end="605:5"><if pos:start="585:5" pos:end="595:5">if <condition pos:start="585:8" pos:end="585:58">(<expr pos:start="585:9" pos:end="585:57"><name pos:start="585:9" pos:end="585:20"><name pos:start="585:9" pos:end="585:9">s</name><operator pos:start="585:10" pos:end="585:11">-&gt;</operator><name pos:start="585:12" pos:end="585:20">pict_type</name></name> <operator pos:start="585:22" pos:end="585:23">==</operator> <name pos:start="585:25" pos:end="585:41">AV_PICTURE_TYPE_B</name> <operator pos:start="585:43" pos:end="585:44">||</operator> <name pos:start="585:46" pos:end="585:57"><name pos:start="585:46" pos:end="585:46">s</name><operator pos:start="585:47" pos:end="585:48">-&gt;</operator><name pos:start="585:49" pos:end="585:57">low_delay</name></name></expr>)</condition> <block pos:start="585:60" pos:end="595:5">{<block_content pos:start="587:9" pos:end="593:86">

        <if_stmt pos:start="587:9" pos:end="589:23"><if pos:start="587:9" pos:end="589:23">if <condition pos:start="587:12" pos:end="587:71">(<expr pos:start="587:13" pos:end="587:70"><operator pos:start="587:13" pos:end="587:13">(</operator><name pos:start="587:14" pos:end="587:16">ret</name> <operator pos:start="587:18" pos:end="587:18">=</operator> <call pos:start="587:20" pos:end="587:65"><name pos:start="587:20" pos:end="587:31">av_frame_ref</name><argument_list pos:start="587:32" pos:end="587:65">(<argument pos:start="587:33" pos:end="587:36"><expr pos:start="587:33" pos:end="587:36"><name pos:start="587:33" pos:end="587:36">pict</name></expr></argument>, <argument pos:start="587:39" pos:end="587:64"><expr pos:start="587:39" pos:end="587:64"><operator pos:start="587:39" pos:end="587:39">&amp;</operator><name pos:start="587:40" pos:end="587:64"><name pos:start="587:40" pos:end="587:40">s</name><operator pos:start="587:41" pos:end="587:42">-&gt;</operator><name pos:start="587:43" pos:end="587:61">current_picture_ptr</name><operator pos:start="587:62" pos:end="587:63">-&gt;</operator><name pos:start="587:64" pos:end="587:64">f</name></name></expr></argument>)</argument_list></call><operator pos:start="587:66" pos:end="587:66">)</operator> <operator pos:start="587:68" pos:end="587:68">&lt;</operator> <literal type="number" pos:start="587:70" pos:end="587:70">0</literal></expr>)</condition><block type="pseudo" pos:start="589:13" pos:end="589:23"><block_content pos:start="589:13" pos:end="589:23">

            <return pos:start="589:13" pos:end="589:23">return <expr pos:start="589:20" pos:end="589:22"><name pos:start="589:20" pos:end="589:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="591:9" pos:end="591:61"><expr pos:start="591:9" pos:end="591:60"><call pos:start="591:9" pos:end="591:60"><name pos:start="591:9" pos:end="591:27">ff_print_debug_info</name><argument_list pos:start="591:28" pos:end="591:60">(<argument pos:start="591:29" pos:end="591:29"><expr pos:start="591:29" pos:end="591:29"><name pos:start="591:29" pos:end="591:29">s</name></expr></argument>, <argument pos:start="591:32" pos:end="591:53"><expr pos:start="591:32" pos:end="591:53"><name pos:start="591:32" pos:end="591:53"><name pos:start="591:32" pos:end="591:32">s</name><operator pos:start="591:33" pos:end="591:34">-&gt;</operator><name pos:start="591:35" pos:end="591:53">current_picture_ptr</name></name></expr></argument>, <argument pos:start="591:56" pos:end="591:59"><expr pos:start="591:56" pos:end="591:59"><name pos:start="591:56" pos:end="591:59">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="593:9" pos:end="593:86"><expr pos:start="593:9" pos:end="593:85"><call pos:start="593:9" pos:end="593:85"><name pos:start="593:9" pos:end="593:30">ff_mpv_export_qp_table</name><argument_list pos:start="593:31" pos:end="593:85">(<argument pos:start="593:32" pos:end="593:32"><expr pos:start="593:32" pos:end="593:32"><name pos:start="593:32" pos:end="593:32">s</name></expr></argument>, <argument pos:start="593:35" pos:end="593:38"><expr pos:start="593:35" pos:end="593:38"><name pos:start="593:35" pos:end="593:38">pict</name></expr></argument>, <argument pos:start="593:41" pos:end="593:62"><expr pos:start="593:41" pos:end="593:62"><name pos:start="593:41" pos:end="593:62"><name pos:start="593:41" pos:end="593:41">s</name><operator pos:start="593:42" pos:end="593:43">-&gt;</operator><name pos:start="593:44" pos:end="593:62">current_picture_ptr</name></name></expr></argument>, <argument pos:start="593:65" pos:end="593:84"><expr pos:start="593:65" pos:end="593:84"><name pos:start="593:65" pos:end="593:84">FF_QSCALE_TYPE_MPEG1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="595:7" pos:end="605:5">else if <condition pos:start="595:15" pos:end="595:43">(<expr pos:start="595:16" pos:end="595:42"><name pos:start="595:16" pos:end="595:34"><name pos:start="595:16" pos:end="595:16">s</name><operator pos:start="595:17" pos:end="595:18">-&gt;</operator><name pos:start="595:19" pos:end="595:34">last_picture_ptr</name></name> <operator pos:start="595:36" pos:end="595:37">!=</operator> <name pos:start="595:39" pos:end="595:42">NULL</name></expr>)</condition> <block pos:start="595:45" pos:end="605:5">{<block_content pos:start="597:9" pos:end="603:83">

        <if_stmt pos:start="597:9" pos:end="599:23"><if pos:start="597:9" pos:end="599:23">if <condition pos:start="597:12" pos:end="597:68">(<expr pos:start="597:13" pos:end="597:67"><operator pos:start="597:13" pos:end="597:13">(</operator><name pos:start="597:14" pos:end="597:16">ret</name> <operator pos:start="597:18" pos:end="597:18">=</operator> <call pos:start="597:20" pos:end="597:62"><name pos:start="597:20" pos:end="597:31">av_frame_ref</name><argument_list pos:start="597:32" pos:end="597:62">(<argument pos:start="597:33" pos:end="597:36"><expr pos:start="597:33" pos:end="597:36"><name pos:start="597:33" pos:end="597:36">pict</name></expr></argument>, <argument pos:start="597:39" pos:end="597:61"><expr pos:start="597:39" pos:end="597:61"><operator pos:start="597:39" pos:end="597:39">&amp;</operator><name pos:start="597:40" pos:end="597:61"><name pos:start="597:40" pos:end="597:40">s</name><operator pos:start="597:41" pos:end="597:42">-&gt;</operator><name pos:start="597:43" pos:end="597:58">last_picture_ptr</name><operator pos:start="597:59" pos:end="597:60">-&gt;</operator><name pos:start="597:61" pos:end="597:61">f</name></name></expr></argument>)</argument_list></call><operator pos:start="597:63" pos:end="597:63">)</operator> <operator pos:start="597:65" pos:end="597:65">&lt;</operator> <literal type="number" pos:start="597:67" pos:end="597:67">0</literal></expr>)</condition><block type="pseudo" pos:start="599:13" pos:end="599:23"><block_content pos:start="599:13" pos:end="599:23">

            <return pos:start="599:13" pos:end="599:23">return <expr pos:start="599:20" pos:end="599:22"><name pos:start="599:20" pos:end="599:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="601:9" pos:end="601:58"><expr pos:start="601:9" pos:end="601:57"><call pos:start="601:9" pos:end="601:57"><name pos:start="601:9" pos:end="601:27">ff_print_debug_info</name><argument_list pos:start="601:28" pos:end="601:57">(<argument pos:start="601:29" pos:end="601:29"><expr pos:start="601:29" pos:end="601:29"><name pos:start="601:29" pos:end="601:29">s</name></expr></argument>, <argument pos:start="601:32" pos:end="601:50"><expr pos:start="601:32" pos:end="601:50"><name pos:start="601:32" pos:end="601:50"><name pos:start="601:32" pos:end="601:32">s</name><operator pos:start="601:33" pos:end="601:34">-&gt;</operator><name pos:start="601:35" pos:end="601:50">last_picture_ptr</name></name></expr></argument>, <argument pos:start="601:53" pos:end="601:56"><expr pos:start="601:53" pos:end="601:56"><name pos:start="601:53" pos:end="601:56">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="603:9" pos:end="603:83"><expr pos:start="603:9" pos:end="603:82"><call pos:start="603:9" pos:end="603:82"><name pos:start="603:9" pos:end="603:30">ff_mpv_export_qp_table</name><argument_list pos:start="603:31" pos:end="603:82">(<argument pos:start="603:32" pos:end="603:32"><expr pos:start="603:32" pos:end="603:32"><name pos:start="603:32" pos:end="603:32">s</name></expr></argument>, <argument pos:start="603:35" pos:end="603:38"><expr pos:start="603:35" pos:end="603:38"><name pos:start="603:35" pos:end="603:38">pict</name></expr></argument>, <argument pos:start="603:41" pos:end="603:59"><expr pos:start="603:41" pos:end="603:59"><name pos:start="603:41" pos:end="603:59"><name pos:start="603:41" pos:end="603:41">s</name><operator pos:start="603:42" pos:end="603:43">-&gt;</operator><name pos:start="603:44" pos:end="603:59">last_picture_ptr</name></name></expr></argument>, <argument pos:start="603:62" pos:end="603:81"><expr pos:start="603:62" pos:end="603:81"><name pos:start="603:62" pos:end="603:81">FF_QSCALE_TYPE_MPEG1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="609:5" pos:end="643:5"><if pos:start="609:5" pos:end="643:5">if <condition pos:start="609:8" pos:end="609:44">(<expr pos:start="609:9" pos:end="609:43"><name pos:start="609:9" pos:end="609:27"><name pos:start="609:9" pos:end="609:9">s</name><operator pos:start="609:10" pos:end="609:11">-&gt;</operator><name pos:start="609:12" pos:end="609:27">last_picture_ptr</name></name> <operator pos:start="609:29" pos:end="609:30">||</operator> <name pos:start="609:32" pos:end="609:43"><name pos:start="609:32" pos:end="609:32">s</name><operator pos:start="609:33" pos:end="609:34">-&gt;</operator><name pos:start="609:35" pos:end="609:43">low_delay</name></name></expr>)</condition> <block pos:start="609:46" pos:end="643:5">{<block_content pos:start="611:9" pos:end="641:23">

        <if_stmt pos:start="611:9" pos:end="639:9"><if pos:start="611:9" pos:end="639:9">if <condition pos:start="611:12" pos:end="613:84">(   <expr pos:start="611:16" pos:end="613:83"><name pos:start="611:16" pos:end="611:27"><name pos:start="611:16" pos:end="611:19">pict</name><operator pos:start="611:20" pos:end="611:21">-&gt;</operator><name pos:start="611:22" pos:end="611:27">format</name></name> <operator pos:start="611:29" pos:end="611:30">==</operator> <name pos:start="611:32" pos:end="611:49">AV_PIX_FMT_YUV420P</name>

            <operator pos:start="613:13" pos:end="613:14">&amp;&amp;</operator> <operator pos:start="613:16" pos:end="613:16">(</operator><name pos:start="613:17" pos:end="613:28"><name pos:start="613:17" pos:end="613:17">s</name><operator pos:start="613:18" pos:end="613:19">-&gt;</operator><name pos:start="613:20" pos:end="613:28">codec_tag</name></name> <operator pos:start="613:30" pos:end="613:31">==</operator> <call pos:start="613:33" pos:end="613:47"><name pos:start="613:33" pos:end="613:39">AV_RL32</name><argument_list pos:start="613:40" pos:end="613:47">(<argument pos:start="613:41" pos:end="613:46"><expr pos:start="613:41" pos:end="613:46"><literal type="string" pos:start="613:41" pos:end="613:46">"GEOV"</literal></expr></argument>)</argument_list></call> <operator pos:start="613:49" pos:end="613:50">||</operator> <name pos:start="613:52" pos:end="613:63"><name pos:start="613:52" pos:end="613:52">s</name><operator pos:start="613:53" pos:end="613:54">-&gt;</operator><name pos:start="613:55" pos:end="613:63">codec_tag</name></name> <operator pos:start="613:65" pos:end="613:66">==</operator> <call pos:start="613:68" pos:end="613:82"><name pos:start="613:68" pos:end="613:74">AV_RL32</name><argument_list pos:start="613:75" pos:end="613:82">(<argument pos:start="613:76" pos:end="613:81"><expr pos:start="613:76" pos:end="613:81"><literal type="string" pos:start="613:76" pos:end="613:81">"GEOX"</literal></expr></argument>)</argument_list></call><operator pos:start="613:83" pos:end="613:83">)</operator></expr>)</condition> <block pos:start="613:86" pos:end="639:9">{<block_content pos:start="615:13" pos:end="637:13">

            <decl_stmt pos:start="615:13" pos:end="615:24"><decl pos:start="615:13" pos:end="615:17"><type pos:start="615:13" pos:end="615:15"><name pos:start="615:13" pos:end="615:15">int</name></type> <name pos:start="615:17" pos:end="615:17">x</name></decl>, <decl pos:start="615:20" pos:end="615:20"><type ref="prev" pos:start="615:13" pos:end="615:15"/><name pos:start="615:20" pos:end="615:20">y</name></decl>, <decl pos:start="615:23" pos:end="615:23"><type ref="prev" pos:start="615:13" pos:end="615:15"/><name pos:start="615:23" pos:end="615:23">p</name></decl>;</decl_stmt>

            <expr_stmt pos:start="617:13" pos:end="617:41"><expr pos:start="617:13" pos:end="617:40"><call pos:start="617:13" pos:end="617:40"><name pos:start="617:13" pos:end="617:34">av_frame_make_writable</name><argument_list pos:start="617:35" pos:end="617:40">(<argument pos:start="617:36" pos:end="617:39"><expr pos:start="617:36" pos:end="617:39"><name pos:start="617:36" pos:end="617:39">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="619:13" pos:end="637:13">for <control pos:start="619:17" pos:end="619:31">(<init pos:start="619:18" pos:end="619:21"><expr pos:start="619:18" pos:end="619:20"><name pos:start="619:18" pos:end="619:18">p</name><operator pos:start="619:19" pos:end="619:19">=</operator><literal type="number" pos:start="619:20" pos:end="619:20">0</literal></expr>;</init> <condition pos:start="619:23" pos:end="619:26"><expr pos:start="619:23" pos:end="619:25"><name pos:start="619:23" pos:end="619:23">p</name><operator pos:start="619:24" pos:end="619:24">&lt;</operator><literal type="number" pos:start="619:25" pos:end="619:25">3</literal></expr>;</condition> <incr pos:start="619:28" pos:end="619:30"><expr pos:start="619:28" pos:end="619:30"><name pos:start="619:28" pos:end="619:28">p</name><operator pos:start="619:29" pos:end="619:30">++</operator></expr></incr>)</control> <block pos:start="619:33" pos:end="637:13">{<block_content pos:start="621:17" pos:end="635:68">

                <decl_stmt pos:start="621:17" pos:end="621:58"><decl pos:start="621:17" pos:end="621:57"><type pos:start="621:17" pos:end="621:19"><name pos:start="621:17" pos:end="621:19">int</name></type> <name pos:start="621:21" pos:end="621:21">w</name> <init pos:start="621:23" pos:end="621:57">= <expr pos:start="621:25" pos:end="621:57"><call pos:start="621:25" pos:end="621:57"><name pos:start="621:25" pos:end="621:38">FF_CEIL_RSHIFT</name><argument_list pos:start="621:39" pos:end="621:57">(<argument pos:start="621:40" pos:end="621:51"><expr pos:start="621:40" pos:end="621:51"><name pos:start="621:40" pos:end="621:51"><name pos:start="621:40" pos:end="621:43">pict</name><operator pos:start="621:44" pos:end="621:45">-&gt;</operator> <name pos:start="621:47" pos:end="621:51">width</name></name></expr></argument>, <argument pos:start="621:54" pos:end="621:56"><expr pos:start="621:54" pos:end="621:56"><operator pos:start="621:54" pos:end="621:54">!</operator><operator pos:start="621:55" pos:end="621:55">!</operator><name pos:start="621:56" pos:end="621:56">p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="623:17" pos:end="623:58"><decl pos:start="623:17" pos:end="623:57"><type pos:start="623:17" pos:end="623:19"><name pos:start="623:17" pos:end="623:19">int</name></type> <name pos:start="623:21" pos:end="623:21">h</name> <init pos:start="623:23" pos:end="623:57">= <expr pos:start="623:25" pos:end="623:57"><call pos:start="623:25" pos:end="623:57"><name pos:start="623:25" pos:end="623:38">FF_CEIL_RSHIFT</name><argument_list pos:start="623:39" pos:end="623:57">(<argument pos:start="623:40" pos:end="623:51"><expr pos:start="623:40" pos:end="623:51"><name pos:start="623:40" pos:end="623:51"><name pos:start="623:40" pos:end="623:43">pict</name><operator pos:start="623:44" pos:end="623:45">-&gt;</operator><name pos:start="623:46" pos:end="623:51">height</name></name></expr></argument>, <argument pos:start="623:54" pos:end="623:56"><expr pos:start="623:54" pos:end="623:56"><operator pos:start="623:54" pos:end="623:54">!</operator><operator pos:start="623:55" pos:end="623:55">!</operator><name pos:start="623:56" pos:end="623:56">p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="625:17" pos:end="625:49"><decl pos:start="625:17" pos:end="625:48"><type pos:start="625:17" pos:end="625:19"><name pos:start="625:17" pos:end="625:19">int</name></type> <name pos:start="625:21" pos:end="625:28">linesize</name> <init pos:start="625:30" pos:end="625:48">= <expr pos:start="625:32" pos:end="625:48"><name pos:start="625:32" pos:end="625:48"><name pos:start="625:32" pos:end="625:35">pict</name><operator pos:start="625:36" pos:end="625:37">-&gt;</operator><name pos:start="625:38" pos:end="625:45">linesize</name><index pos:start="625:46" pos:end="625:48">[<expr pos:start="625:47" pos:end="625:47"><name pos:start="625:47" pos:end="625:47">p</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <for pos:start="627:17" pos:end="635:68">for <control pos:start="627:21" pos:end="627:40">(<init pos:start="627:22" pos:end="627:25"><expr pos:start="627:22" pos:end="627:24"><name pos:start="627:22" pos:end="627:22">y</name><operator pos:start="627:23" pos:end="627:23">=</operator><literal type="number" pos:start="627:24" pos:end="627:24">0</literal></expr>;</init> <condition pos:start="627:27" pos:end="627:35"><expr pos:start="627:27" pos:end="627:34"><name pos:start="627:27" pos:end="627:27">y</name><operator pos:start="627:28" pos:end="627:28">&lt;</operator><operator pos:start="627:29" pos:end="627:29">(</operator><name pos:start="627:30" pos:end="627:30">h</name><operator pos:start="627:31" pos:end="627:32">&gt;&gt;</operator><literal type="number" pos:start="627:33" pos:end="627:33">1</literal><operator pos:start="627:34" pos:end="627:34">)</operator></expr>;</condition> <incr pos:start="627:37" pos:end="627:39"><expr pos:start="627:37" pos:end="627:39"><name pos:start="627:37" pos:end="627:37">y</name><operator pos:start="627:38" pos:end="627:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="629:21" pos:end="635:68"><block_content pos:start="629:21" pos:end="635:68">

                    <for pos:start="629:21" pos:end="635:68">for <control pos:start="629:25" pos:end="629:39">(<init pos:start="629:26" pos:end="629:29"><expr pos:start="629:26" pos:end="629:28"><name pos:start="629:26" pos:end="629:26">x</name><operator pos:start="629:27" pos:end="629:27">=</operator><literal type="number" pos:start="629:28" pos:end="629:28">0</literal></expr>;</init> <condition pos:start="629:31" pos:end="629:34"><expr pos:start="629:31" pos:end="629:33"><name pos:start="629:31" pos:end="629:31">x</name><operator pos:start="629:32" pos:end="629:32">&lt;</operator><name pos:start="629:33" pos:end="629:33">w</name></expr>;</condition> <incr pos:start="629:36" pos:end="629:38"><expr pos:start="629:36" pos:end="629:38"><name pos:start="629:36" pos:end="629:36">x</name><operator pos:start="629:37" pos:end="629:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="631:25" pos:end="635:68"><block_content pos:start="631:25" pos:end="635:68">

                        <expr_stmt pos:start="631:25" pos:end="635:68"><expr pos:start="631:25" pos:end="635:67"><call pos:start="631:25" pos:end="635:67"><name pos:start="631:25" pos:end="631:30">FFSWAP</name><argument_list pos:start="631:31" pos:end="635:67">(<argument pos:start="631:32" pos:end="631:34"><expr pos:start="631:32" pos:end="631:34"><name pos:start="631:32" pos:end="631:34">int</name></expr></argument>,

                               <argument pos:start="633:32" pos:end="633:60"><expr pos:start="633:32" pos:end="633:60"><name pos:start="633:32" pos:end="633:60"><name pos:start="633:32" pos:end="633:35">pict</name><operator pos:start="633:36" pos:end="633:37">-&gt;</operator><name pos:start="633:38" pos:end="633:41">data</name><index pos:start="633:42" pos:end="633:44">[<expr pos:start="633:43" pos:end="633:43"><name pos:start="633:43" pos:end="633:43">p</name></expr>]</index><index pos:start="633:45" pos:end="633:60">[<expr pos:start="633:46" pos:end="633:59"><name pos:start="633:46" pos:end="633:46">x</name> <operator pos:start="633:48" pos:end="633:48">+</operator> <name pos:start="633:50" pos:end="633:50">y</name><operator pos:start="633:51" pos:end="633:51">*</operator><name pos:start="633:52" pos:end="633:59">linesize</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="635:32" pos:end="635:66"><expr pos:start="635:32" pos:end="635:66"><name pos:start="635:32" pos:end="635:66"><name pos:start="635:32" pos:end="635:35">pict</name><operator pos:start="635:36" pos:end="635:37">-&gt;</operator><name pos:start="635:38" pos:end="635:41">data</name><index pos:start="635:42" pos:end="635:44">[<expr pos:start="635:43" pos:end="635:43"><name pos:start="635:43" pos:end="635:43">p</name></expr>]</index><index pos:start="635:45" pos:end="635:66">[<expr pos:start="635:46" pos:end="635:65"><name pos:start="635:46" pos:end="635:46">x</name> <operator pos:start="635:48" pos:end="635:48">+</operator> <operator pos:start="635:50" pos:end="635:50">(</operator><name pos:start="635:51" pos:end="635:51">h</name><operator pos:start="635:52" pos:end="635:52">-</operator><literal type="number" pos:start="635:53" pos:end="635:54">1</literal><operator pos:start="635:54" pos:end="635:54">-</operator><name pos:start="635:55" pos:end="635:55">y</name><operator pos:start="635:56" pos:end="635:56">)</operator><operator pos:start="635:57" pos:end="635:57">*</operator><name pos:start="635:58" pos:end="635:65">linesize</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="641:9" pos:end="641:23"><expr pos:start="641:9" pos:end="641:22"><operator pos:start="641:9" pos:end="641:9">*</operator><name pos:start="641:10" pos:end="641:18">got_frame</name> <operator pos:start="641:20" pos:end="641:20">=</operator> <literal type="number" pos:start="641:22" pos:end="641:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="647:5" pos:end="653:47"><if pos:start="647:5" pos:end="649:19">if <condition pos:start="647:8" pos:end="647:66">(<expr pos:start="647:9" pos:end="647:65"><name pos:start="647:9" pos:end="647:17">slice_ret</name> <operator pos:start="647:19" pos:end="647:19">&lt;</operator> <literal type="number" pos:start="647:21" pos:end="647:21">0</literal> <operator pos:start="647:23" pos:end="647:24">&amp;&amp;</operator> <operator pos:start="647:26" pos:end="647:26">(</operator><name pos:start="647:27" pos:end="647:48"><name pos:start="647:27" pos:end="647:31">avctx</name><operator pos:start="647:32" pos:end="647:33">-&gt;</operator><name pos:start="647:34" pos:end="647:48">err_recognition</name></name> <operator pos:start="647:50" pos:end="647:50">&amp;</operator> <name pos:start="647:52" pos:end="647:64">AV_EF_EXPLODE</name><operator pos:start="647:65" pos:end="647:65">)</operator></expr>)</condition><block type="pseudo" pos:start="649:9" pos:end="649:19"><block_content pos:start="649:9" pos:end="649:19">

        <return pos:start="649:9" pos:end="649:19">return <expr pos:start="649:16" pos:end="649:18"><name pos:start="649:16" pos:end="649:18">ret</name></expr>;</return></block_content></block></if>

    <else pos:start="651:5" pos:end="653:47">else<block type="pseudo" pos:start="653:9" pos:end="653:47"><block_content pos:start="653:9" pos:end="653:47">

        <return pos:start="653:9" pos:end="653:47">return <expr pos:start="653:16" pos:end="653:46"><call pos:start="653:16" pos:end="653:46"><name pos:start="653:16" pos:end="653:33">get_consumed_bytes</name><argument_list pos:start="653:34" pos:end="653:46">(<argument pos:start="653:35" pos:end="653:35"><expr pos:start="653:35" pos:end="653:35"><name pos:start="653:35" pos:end="653:35">s</name></expr></argument>, <argument pos:start="653:38" pos:end="653:45"><expr pos:start="653:38" pos:end="653:45"><name pos:start="653:38" pos:end="653:45">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
