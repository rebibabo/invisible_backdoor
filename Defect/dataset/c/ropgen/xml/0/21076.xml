<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21076.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:36"><name pos:start="1:1" pos:end="1:16">dshow_read_close</name><argument_list pos:start="1:17" pos:end="1:36">(<argument pos:start="1:18" pos:end="1:35">AVFormatContext *s</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">dshow_ctx</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">ctx</name> <init pos:start="5:27" pos:end="5:40">= <expr pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVPacketList</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">pktl</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:21">(<expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:11">ctx</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:20">control</name></name></expr>)</condition> <block pos:start="11:23" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:44">

        <expr_stmt pos:start="13:9" pos:end="13:41"><expr pos:start="13:9" pos:end="13:40"><call pos:start="13:9" pos:end="13:40"><name pos:start="13:9" pos:end="13:26">IMediaControl_Stop</name><argument_list pos:start="13:27" pos:end="13:40">(<argument pos:start="13:28" pos:end="13:39"><expr pos:start="13:28" pos:end="13:39"><name pos:start="13:28" pos:end="13:39"><name pos:start="13:28" pos:end="13:30">ctx</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:39">control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:44"><expr pos:start="15:9" pos:end="15:43"><call pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:29">IMediaControl_Release</name><argument_list pos:start="15:30" pos:end="15:43">(<argument pos:start="15:31" pos:end="15:42"><expr pos:start="15:31" pos:end="15:42"><name pos:start="15:31" pos:end="15:42"><name pos:start="15:31" pos:end="15:33">ctx</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:42">control</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="53:5"><if pos:start="21:5" pos:end="53:5">if <condition pos:start="21:8" pos:end="21:19">(<expr pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:11">ctx</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">graph</name></name></expr>)</condition> <block pos:start="21:21" pos:end="53:5">{<block_content pos:start="23:9" pos:end="51:42">

        <decl_stmt pos:start="23:9" pos:end="23:28"><decl pos:start="23:9" pos:end="23:27"><type pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:20">IEnumFilters</name> <modifier pos:start="23:22" pos:end="23:22">*</modifier></type><name pos:start="23:23" pos:end="23:27">fenum</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:14"><decl pos:start="25:9" pos:end="25:13"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">r</name></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:58"><expr pos:start="27:9" pos:end="27:57"><name pos:start="27:9" pos:end="27:9">r</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:57"><name pos:start="27:13" pos:end="27:37">IGraphBuilder_EnumFilters</name><argument_list pos:start="27:38" pos:end="27:57">(<argument pos:start="27:39" pos:end="27:48"><expr pos:start="27:39" pos:end="27:48"><name pos:start="27:39" pos:end="27:48"><name pos:start="27:39" pos:end="27:41">ctx</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:48">graph</name></name></expr></argument>, <argument pos:start="27:51" pos:end="27:56"><expr pos:start="27:51" pos:end="27:56"><operator pos:start="27:51" pos:end="27:51">&amp;</operator><name pos:start="27:52" pos:end="27:56">fenum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="49:9"><if pos:start="29:9" pos:end="49:9">if <condition pos:start="29:12" pos:end="29:22">(<expr pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:13">r</name> <operator pos:start="29:15" pos:end="29:16">==</operator> <name pos:start="29:18" pos:end="29:21">S_OK</name></expr>)</condition> <block pos:start="29:24" pos:end="49:9">{<block_content pos:start="31:13" pos:end="47:40">

            <decl_stmt pos:start="31:13" pos:end="31:27"><decl pos:start="31:13" pos:end="31:26"><type pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:23">IBaseFilter</name> <modifier pos:start="31:25" pos:end="31:25">*</modifier></type><name pos:start="31:26" pos:end="31:26">f</name></decl>;</decl_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:38"><expr pos:start="33:13" pos:end="33:37"><call pos:start="33:13" pos:end="33:37"><name pos:start="33:13" pos:end="33:30">IEnumFilters_Reset</name><argument_list pos:start="33:31" pos:end="33:37">(<argument pos:start="33:32" pos:end="33:36"><expr pos:start="33:32" pos:end="33:36"><name pos:start="33:32" pos:end="33:36">fenum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <while pos:start="35:13" pos:end="45:13">while <condition pos:start="35:19" pos:end="35:65">(<expr pos:start="35:20" pos:end="35:64"><call pos:start="35:20" pos:end="35:56"><name pos:start="35:20" pos:end="35:36">IEnumFilters_Next</name><argument_list pos:start="35:37" pos:end="35:56">(<argument pos:start="35:38" pos:end="35:42"><expr pos:start="35:38" pos:end="35:42"><name pos:start="35:38" pos:end="35:42">fenum</name></expr></argument>, <argument pos:start="35:45" pos:end="35:45"><expr pos:start="35:45" pos:end="35:45"><literal type="number" pos:start="35:45" pos:end="35:45">1</literal></expr></argument>, <argument pos:start="35:48" pos:end="35:49"><expr pos:start="35:48" pos:end="35:49"><operator pos:start="35:48" pos:end="35:48">&amp;</operator><name pos:start="35:49" pos:end="35:49">f</name></expr></argument>, <argument pos:start="35:52" pos:end="35:55"><expr pos:start="35:52" pos:end="35:55"><name pos:start="35:52" pos:end="35:55">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="35:58" pos:end="35:59">==</operator> <name pos:start="35:61" pos:end="35:64">S_OK</name></expr>)</condition> <block pos:start="35:67" pos:end="45:13">{<block_content pos:start="37:17" pos:end="43:39">

                <if_stmt pos:start="37:17" pos:end="39:46"><if pos:start="37:17" pos:end="39:46">if <condition pos:start="37:20" pos:end="37:70">(<expr pos:start="37:21" pos:end="37:69"><call pos:start="37:21" pos:end="37:61"><name pos:start="37:21" pos:end="37:46">IGraphBuilder_RemoveFilter</name><argument_list pos:start="37:47" pos:end="37:61">(<argument pos:start="37:48" pos:end="37:57"><expr pos:start="37:48" pos:end="37:57"><name pos:start="37:48" pos:end="37:57"><name pos:start="37:48" pos:end="37:50">ctx</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:57">graph</name></name></expr></argument>, <argument pos:start="37:60" pos:end="37:60"><expr pos:start="37:60" pos:end="37:60"><name pos:start="37:60" pos:end="37:60">f</name></expr></argument>)</argument_list></call> <operator pos:start="37:63" pos:end="37:64">==</operator> <name pos:start="37:66" pos:end="37:69">S_OK</name></expr>)</condition><block type="pseudo" pos:start="39:21" pos:end="39:46"><block_content pos:start="39:21" pos:end="39:46">

                    <expr_stmt pos:start="39:21" pos:end="39:46"><expr pos:start="39:21" pos:end="39:45"><call pos:start="39:21" pos:end="39:45"><name pos:start="39:21" pos:end="39:38">IEnumFilters_Reset</name><argument_list pos:start="39:39" pos:end="39:45">(<argument pos:start="39:40" pos:end="39:44"><expr pos:start="39:40" pos:end="39:44"><name pos:start="39:40" pos:end="39:44">fenum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="39:48" pos:end="41:76">/* When a filter is removed,

                                                * the list must be reset. */</comment>

                <expr_stmt pos:start="43:17" pos:end="43:39"><expr pos:start="43:17" pos:end="43:38"><call pos:start="43:17" pos:end="43:38"><name pos:start="43:17" pos:end="43:35">IBaseFilter_Release</name><argument_list pos:start="43:36" pos:end="43:38">(<argument pos:start="43:37" pos:end="43:37"><expr pos:start="43:37" pos:end="43:37"><name pos:start="43:37" pos:end="43:37">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="47:13" pos:end="47:40"><expr pos:start="47:13" pos:end="47:39"><call pos:start="47:13" pos:end="47:39"><name pos:start="47:13" pos:end="47:32">IEnumFilters_Release</name><argument_list pos:start="47:33" pos:end="47:39">(<argument pos:start="47:34" pos:end="47:38"><expr pos:start="47:34" pos:end="47:38"><name pos:start="47:34" pos:end="47:38">fenum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:42"><expr pos:start="51:9" pos:end="51:41"><call pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:29">IGraphBuilder_Release</name><argument_list pos:start="51:30" pos:end="51:41">(<argument pos:start="51:31" pos:end="51:40"><expr pos:start="51:31" pos:end="51:40"><name pos:start="51:31" pos:end="51:40"><name pos:start="51:31" pos:end="51:33">ctx</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:40">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="59:56"><if pos:start="57:5" pos:end="59:56">if <condition pos:start="57:8" pos:end="57:38">(<expr pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:11">ctx</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:24">capture_pin</name><index pos:start="57:25" pos:end="57:37">[<expr pos:start="57:26" pos:end="57:36"><name pos:start="57:26" pos:end="57:36">VideoDevice</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:56"><block_content pos:start="59:9" pos:end="59:56">

        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><call pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:24">libAVPin_Release</name><argument_list pos:start="59:25" pos:end="59:55">(<argument pos:start="59:26" pos:end="59:54"><expr pos:start="59:26" pos:end="59:54"><name pos:start="59:26" pos:end="59:54"><name pos:start="59:26" pos:end="59:28">ctx</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:41">capture_pin</name><index pos:start="59:42" pos:end="59:54">[<expr pos:start="59:43" pos:end="59:53"><name pos:start="59:43" pos:end="59:53">VideoDevice</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="63:56"><if pos:start="61:5" pos:end="63:56">if <condition pos:start="61:8" pos:end="61:38">(<expr pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:11">ctx</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:24">capture_pin</name><index pos:start="61:25" pos:end="61:37">[<expr pos:start="61:26" pos:end="61:36"><name pos:start="61:26" pos:end="61:36">AudioDevice</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:56"><block_content pos:start="63:9" pos:end="63:56">

        <expr_stmt pos:start="63:9" pos:end="63:56"><expr pos:start="63:9" pos:end="63:55"><call pos:start="63:9" pos:end="63:55"><name pos:start="63:9" pos:end="63:24">libAVPin_Release</name><argument_list pos:start="63:25" pos:end="63:55">(<argument pos:start="63:26" pos:end="63:54"><expr pos:start="63:26" pos:end="63:54"><name pos:start="63:26" pos:end="63:54"><name pos:start="63:26" pos:end="63:28">ctx</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:41">capture_pin</name><index pos:start="63:42" pos:end="63:54">[<expr pos:start="63:43" pos:end="63:53"><name pos:start="63:43" pos:end="63:53">AudioDevice</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="67:62"><if pos:start="65:5" pos:end="67:62">if <condition pos:start="65:8" pos:end="65:41">(<expr pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:11">ctx</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:27">capture_filter</name><index pos:start="65:28" pos:end="65:40">[<expr pos:start="65:29" pos:end="65:39"><name pos:start="65:29" pos:end="65:39">VideoDevice</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:62"><block_content pos:start="67:9" pos:end="67:62">

        <expr_stmt pos:start="67:9" pos:end="67:62"><expr pos:start="67:9" pos:end="67:61"><call pos:start="67:9" pos:end="67:61"><name pos:start="67:9" pos:end="67:27">libAVFilter_Release</name><argument_list pos:start="67:28" pos:end="67:61">(<argument pos:start="67:29" pos:end="67:60"><expr pos:start="67:29" pos:end="67:60"><name pos:start="67:29" pos:end="67:60"><name pos:start="67:29" pos:end="67:31">ctx</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:47">capture_filter</name><index pos:start="67:48" pos:end="67:60">[<expr pos:start="67:49" pos:end="67:59"><name pos:start="67:49" pos:end="67:59">VideoDevice</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="71:62"><if pos:start="69:5" pos:end="71:62">if <condition pos:start="69:8" pos:end="69:41">(<expr pos:start="69:9" pos:end="69:40"><name pos:start="69:9" pos:end="69:40"><name pos:start="69:9" pos:end="69:11">ctx</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:27">capture_filter</name><index pos:start="69:28" pos:end="69:40">[<expr pos:start="69:29" pos:end="69:39"><name pos:start="69:29" pos:end="69:39">AudioDevice</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:62"><block_content pos:start="71:9" pos:end="71:62">

        <expr_stmt pos:start="71:9" pos:end="71:62"><expr pos:start="71:9" pos:end="71:61"><call pos:start="71:9" pos:end="71:61"><name pos:start="71:9" pos:end="71:27">libAVFilter_Release</name><argument_list pos:start="71:28" pos:end="71:61">(<argument pos:start="71:29" pos:end="71:60"><expr pos:start="71:29" pos:end="71:60"><name pos:start="71:29" pos:end="71:60"><name pos:start="71:29" pos:end="71:31">ctx</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:47">capture_filter</name><index pos:start="71:48" pos:end="71:60">[<expr pos:start="71:49" pos:end="71:59"><name pos:start="71:49" pos:end="71:59">AudioDevice</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="77:51"><if pos:start="75:5" pos:end="77:51">if <condition pos:start="75:8" pos:end="75:37">(<expr pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:11">ctx</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:23">device_pin</name><index pos:start="75:24" pos:end="75:36">[<expr pos:start="75:25" pos:end="75:35"><name pos:start="75:25" pos:end="75:35">VideoDevice</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:51"><block_content pos:start="77:9" pos:end="77:51">

        <expr_stmt pos:start="77:9" pos:end="77:51"><expr pos:start="77:9" pos:end="77:50"><call pos:start="77:9" pos:end="77:50"><name pos:start="77:9" pos:end="77:20">IPin_Release</name><argument_list pos:start="77:21" pos:end="77:50">(<argument pos:start="77:22" pos:end="77:49"><expr pos:start="77:22" pos:end="77:49"><name pos:start="77:22" pos:end="77:49"><name pos:start="77:22" pos:end="77:24">ctx</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:36">device_pin</name><index pos:start="77:37" pos:end="77:49">[<expr pos:start="77:38" pos:end="77:48"><name pos:start="77:38" pos:end="77:48">VideoDevice</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="79:5" pos:end="81:51"><if pos:start="79:5" pos:end="81:51">if <condition pos:start="79:8" pos:end="79:37">(<expr pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:11">ctx</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:23">device_pin</name><index pos:start="79:24" pos:end="79:36">[<expr pos:start="79:25" pos:end="79:35"><name pos:start="79:25" pos:end="79:35">AudioDevice</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:51"><block_content pos:start="81:9" pos:end="81:51">

        <expr_stmt pos:start="81:9" pos:end="81:51"><expr pos:start="81:9" pos:end="81:50"><call pos:start="81:9" pos:end="81:50"><name pos:start="81:9" pos:end="81:20">IPin_Release</name><argument_list pos:start="81:21" pos:end="81:50">(<argument pos:start="81:22" pos:end="81:49"><expr pos:start="81:22" pos:end="81:49"><name pos:start="81:22" pos:end="81:49"><name pos:start="81:22" pos:end="81:24">ctx</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:36">device_pin</name><index pos:start="81:37" pos:end="81:49">[<expr pos:start="81:38" pos:end="81:48"><name pos:start="81:38" pos:end="81:48">AudioDevice</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="85:61"><if pos:start="83:5" pos:end="85:61">if <condition pos:start="83:8" pos:end="83:40">(<expr pos:start="83:9" pos:end="83:39"><name pos:start="83:9" pos:end="83:39"><name pos:start="83:9" pos:end="83:11">ctx</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:26">device_filter</name><index pos:start="83:27" pos:end="83:39">[<expr pos:start="83:28" pos:end="83:38"><name pos:start="83:28" pos:end="83:38">VideoDevice</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:61"><block_content pos:start="85:9" pos:end="85:61">

        <expr_stmt pos:start="85:9" pos:end="85:61"><expr pos:start="85:9" pos:end="85:60"><call pos:start="85:9" pos:end="85:60"><name pos:start="85:9" pos:end="85:27">IBaseFilter_Release</name><argument_list pos:start="85:28" pos:end="85:60">(<argument pos:start="85:29" pos:end="85:59"><expr pos:start="85:29" pos:end="85:59"><name pos:start="85:29" pos:end="85:59"><name pos:start="85:29" pos:end="85:31">ctx</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:46">device_filter</name><index pos:start="85:47" pos:end="85:59">[<expr pos:start="85:48" pos:end="85:58"><name pos:start="85:48" pos:end="85:58">VideoDevice</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="89:61"><if pos:start="87:5" pos:end="89:61">if <condition pos:start="87:8" pos:end="87:40">(<expr pos:start="87:9" pos:end="87:39"><name pos:start="87:9" pos:end="87:39"><name pos:start="87:9" pos:end="87:11">ctx</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:26">device_filter</name><index pos:start="87:27" pos:end="87:39">[<expr pos:start="87:28" pos:end="87:38"><name pos:start="87:28" pos:end="87:38">AudioDevice</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:61"><block_content pos:start="89:9" pos:end="89:61">

        <expr_stmt pos:start="89:9" pos:end="89:61"><expr pos:start="89:9" pos:end="89:60"><call pos:start="89:9" pos:end="89:60"><name pos:start="89:9" pos:end="89:27">IBaseFilter_Release</name><argument_list pos:start="89:28" pos:end="89:60">(<argument pos:start="89:29" pos:end="89:59"><expr pos:start="89:29" pos:end="89:59"><name pos:start="89:29" pos:end="89:59"><name pos:start="89:29" pos:end="89:31">ctx</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:46">device_filter</name><index pos:start="89:47" pos:end="89:59">[<expr pos:start="89:48" pos:end="89:58"><name pos:start="89:48" pos:end="89:58">AudioDevice</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="95:37"><if pos:start="93:5" pos:end="95:37">if <condition pos:start="93:8" pos:end="93:28">(<expr pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:11">ctx</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:24">device_name</name><index pos:start="93:25" pos:end="93:27">[<expr pos:start="93:26" pos:end="93:26"><literal type="number" pos:start="93:26" pos:end="93:26">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:37"><block_content pos:start="95:9" pos:end="95:37">

        <expr_stmt pos:start="95:9" pos:end="95:37"><expr pos:start="95:9" pos:end="95:36"><call pos:start="95:9" pos:end="95:36"><name pos:start="95:9" pos:end="95:15">av_free</name><argument_list pos:start="95:16" pos:end="95:36">(<argument pos:start="95:17" pos:end="95:35"><expr pos:start="95:17" pos:end="95:35"><name pos:start="95:17" pos:end="95:35"><name pos:start="95:17" pos:end="95:19">ctx</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:32">device_name</name><index pos:start="95:33" pos:end="95:35">[<expr pos:start="95:34" pos:end="95:34"><literal type="number" pos:start="95:34" pos:end="95:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="99:37"><if pos:start="97:5" pos:end="99:37">if <condition pos:start="97:8" pos:end="97:28">(<expr pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:11">ctx</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:24">device_name</name><index pos:start="97:25" pos:end="97:27">[<expr pos:start="97:26" pos:end="97:26"><literal type="number" pos:start="97:26" pos:end="97:26">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:37"><block_content pos:start="99:9" pos:end="99:37">

        <expr_stmt pos:start="99:9" pos:end="99:37"><expr pos:start="99:9" pos:end="99:36"><call pos:start="99:9" pos:end="99:36"><name pos:start="99:9" pos:end="99:15">av_free</name><argument_list pos:start="99:16" pos:end="99:36">(<argument pos:start="99:17" pos:end="99:35"><expr pos:start="99:17" pos:end="99:35"><name pos:start="99:17" pos:end="99:35"><name pos:start="99:17" pos:end="99:19">ctx</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:32">device_name</name><index pos:start="99:33" pos:end="99:35">[<expr pos:start="99:34" pos:end="99:34"><literal type="number" pos:start="99:34" pos:end="99:34">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="105:32"><if pos:start="103:5" pos:end="105:32">if<condition pos:start="103:7" pos:end="103:18">(<expr pos:start="103:8" pos:end="103:17"><name pos:start="103:8" pos:end="103:17"><name pos:start="103:8" pos:end="103:10">ctx</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:17">mutex</name></name></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:32"><block_content pos:start="105:9" pos:end="105:32">

        <expr_stmt pos:start="105:9" pos:end="105:32"><expr pos:start="105:9" pos:end="105:31"><call pos:start="105:9" pos:end="105:31"><name pos:start="105:9" pos:end="105:19">CloseHandle</name><argument_list pos:start="105:20" pos:end="105:31">(<argument pos:start="105:21" pos:end="105:30"><expr pos:start="105:21" pos:end="105:30"><name pos:start="105:21" pos:end="105:30"><name pos:start="105:21" pos:end="105:23">ctx</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:30">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="109:32"><if pos:start="107:5" pos:end="109:32">if<condition pos:start="107:7" pos:end="107:18">(<expr pos:start="107:8" pos:end="107:17"><name pos:start="107:8" pos:end="107:17"><name pos:start="107:8" pos:end="107:10">ctx</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:17">event</name></name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:32"><block_content pos:start="109:9" pos:end="109:32">

        <expr_stmt pos:start="109:9" pos:end="109:32"><expr pos:start="109:9" pos:end="109:31"><call pos:start="109:9" pos:end="109:31"><name pos:start="109:9" pos:end="109:19">CloseHandle</name><argument_list pos:start="109:20" pos:end="109:31">(<argument pos:start="109:21" pos:end="109:30"><expr pos:start="109:21" pos:end="109:30"><name pos:start="109:21" pos:end="109:30"><name pos:start="109:21" pos:end="109:23">ctx</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:30">event</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:21"><expr pos:start="113:5" pos:end="113:20"><name pos:start="113:5" pos:end="113:8">pktl</name> <operator pos:start="113:10" pos:end="113:10">=</operator> <name pos:start="113:12" pos:end="113:20"><name pos:start="113:12" pos:end="113:14">ctx</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:20">pktl</name></name></expr>;</expr_stmt>

    <while pos:start="115:5" pos:end="125:5">while <condition pos:start="115:11" pos:end="115:16">(<expr pos:start="115:12" pos:end="115:15"><name pos:start="115:12" pos:end="115:15">pktl</name></expr>)</condition> <block pos:start="115:18" pos:end="125:5">{<block_content pos:start="117:9" pos:end="123:20">

        <decl_stmt pos:start="117:9" pos:end="117:40"><decl pos:start="117:9" pos:end="117:39"><type pos:start="117:9" pos:end="117:22"><name pos:start="117:9" pos:end="117:20">AVPacketList</name> <modifier pos:start="117:22" pos:end="117:22">*</modifier></type><name pos:start="117:23" pos:end="117:26">next</name> <init pos:start="117:28" pos:end="117:39">= <expr pos:start="117:30" pos:end="117:39"><name pos:start="117:30" pos:end="117:39"><name pos:start="117:30" pos:end="117:33">pktl</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:39">next</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:39"><expr pos:start="119:9" pos:end="119:38"><call pos:start="119:9" pos:end="119:38"><name pos:start="119:9" pos:end="119:26">av_destruct_packet</name><argument_list pos:start="119:27" pos:end="119:38">(<argument pos:start="119:28" pos:end="119:37"><expr pos:start="119:28" pos:end="119:37"><operator pos:start="119:28" pos:end="119:28">&amp;</operator><name pos:start="119:29" pos:end="119:37"><name pos:start="119:29" pos:end="119:32">pktl</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:37">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:22"><expr pos:start="121:9" pos:end="121:21"><call pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:15">av_free</name><argument_list pos:start="121:16" pos:end="121:21">(<argument pos:start="121:17" pos:end="121:20"><expr pos:start="121:17" pos:end="121:20"><name pos:start="121:17" pos:end="121:20">pktl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:20"><expr pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:12">pktl</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <name pos:start="123:16" pos:end="123:19">next</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>

</block_content>}</block>
</unit>
