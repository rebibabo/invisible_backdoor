<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/454.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">read_sl_header</name><parameter_list pos:start="1:26" pos:end="1:95">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:36">PESContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">pes</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:56">SLConfigDescr</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">sl</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:80"><decl pos:start="1:63" pos:end="1:80"><type pos:start="1:63" pos:end="1:80"><specifier pos:start="1:63" pos:end="1:67">const</specifier> <name pos:start="1:69" pos:end="1:75">uint8_t</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:80">buf</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:94"><decl pos:start="1:83" pos:end="1:94"><type pos:start="1:83" pos:end="1:94"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:94">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:42">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">GetBitContext</name></type> <name pos:start="5:19" pos:end="5:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:72"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:21">au_start_flag</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>, <decl pos:start="7:28" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:38">au_end_flag</name> <init pos:start="7:40" pos:end="7:42">= <expr pos:start="7:42" pos:end="7:42"><literal type="number" pos:start="7:42" pos:end="7:42">0</literal></expr></init></decl>, <decl pos:start="7:45" pos:end="7:56"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:45" pos:end="7:52">ocr_flag</name> <init pos:start="7:54" pos:end="7:56">= <expr pos:start="7:56" pos:end="7:56"><literal type="number" pos:start="7:56" pos:end="7:56">0</literal></expr></init></decl>, <decl pos:start="7:59" pos:end="7:71"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:59" pos:end="7:67">idle_flag</name> <init pos:start="7:69" pos:end="7:71">= <expr pos:start="7:71" pos:end="7:71"><literal type="number" pos:start="7:71" pos:end="7:71">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:20">padding_flag</name> <init pos:start="9:22" pos:end="9:24">= <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></init></decl>, <decl pos:start="9:27" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:38">padding_bits</name> <init pos:start="9:40" pos:end="9:42">= <expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr></init></decl>, <decl pos:start="9:45" pos:end="9:65"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:45" pos:end="9:61">inst_bitrate_flag</name> <init pos:start="9:63" pos:end="9:65">= <expr pos:start="9:65" pos:end="9:65"><literal type="number" pos:start="9:65" pos:end="9:65">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">dts_flag</name> <init pos:start="11:18" pos:end="11:21">= <expr pos:start="11:20" pos:end="11:21"><operator pos:start="11:20" pos:end="11:20">-</operator><literal type="number" pos:start="11:21" pos:end="11:21">1</literal></expr></init></decl>, <decl pos:start="11:24" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:24" pos:end="11:31">cts_flag</name> <init pos:start="11:33" pos:end="11:36">= <expr pos:start="11:35" pos:end="11:36"><operator pos:start="11:35" pos:end="11:35">-</operator><literal type="number" pos:start="11:36" pos:end="11:36">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">dts</name> <init pos:start="13:17" pos:end="13:32">= <expr pos:start="13:19" pos:end="13:32"><name pos:start="13:19" pos:end="13:32">AV_NOPTS_VALUE</name></expr></init></decl>, <decl pos:start="13:35" pos:end="13:54"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:35" pos:end="13:37">cts</name> <init pos:start="13:39" pos:end="13:54">= <expr pos:start="13:41" pos:end="13:54"><name pos:start="13:41" pos:end="13:54">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><call pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:17">init_get_bits</name><argument_list pos:start="15:18" pos:end="15:39">(<argument pos:start="15:19" pos:end="15:21"><expr pos:start="15:19" pos:end="15:21"><operator pos:start="15:19" pos:end="15:19">&amp;</operator><name pos:start="15:20" pos:end="15:21">gb</name></expr></argument>, <argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:26">buf</name></expr></argument>, <argument pos:start="15:29" pos:end="15:38"><expr pos:start="15:29" pos:end="15:38"><name pos:start="15:29" pos:end="15:36">buf_size</name><operator pos:start="15:37" pos:end="15:37">*</operator><literal type="number" pos:start="15:38" pos:end="15:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:39"><if pos:start="19:5" pos:end="21:39">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:10">sl</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:24">use_au_start</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:39"><block_content pos:start="21:9" pos:end="21:39">

        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:21">au_start_flag</name> <operator pos:start="21:23" pos:end="21:23">=</operator> <call pos:start="21:25" pos:end="21:38"><name pos:start="21:25" pos:end="21:33">get_bits1</name><argument_list pos:start="21:34" pos:end="21:38">(<argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><operator pos:start="21:35" pos:end="21:35">&amp;</operator><name pos:start="21:36" pos:end="21:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:37"><if pos:start="23:5" pos:end="25:37">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:10">sl</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:22">use_au_end</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:37"><block_content pos:start="25:9" pos:end="25:37">

        <expr_stmt pos:start="25:9" pos:end="25:37"><expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:19">au_end_flag</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="25:36"><name pos:start="25:23" pos:end="25:31">get_bits1</name><argument_list pos:start="25:32" pos:end="25:36">(<argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><operator pos:start="25:33" pos:end="25:33">&amp;</operator><name pos:start="25:34" pos:end="25:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="29:40"><if pos:start="27:5" pos:end="29:40">if <condition pos:start="27:8" pos:end="27:45">(<expr pos:start="27:9" pos:end="27:44"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:25"><name pos:start="27:10" pos:end="27:11">sl</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:25">use_au_start</name></name> <operator pos:start="27:27" pos:end="27:28">&amp;&amp;</operator> <operator pos:start="27:30" pos:end="27:30">!</operator><name pos:start="27:31" pos:end="27:44"><name pos:start="27:31" pos:end="27:32">sl</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:44">use_au_end</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:40"><block_content pos:start="29:9" pos:end="29:40">

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:21">au_start_flag</name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:35">au_end_flag</name> <operator pos:start="29:37" pos:end="29:37">=</operator> <literal type="number" pos:start="29:39" pos:end="29:39">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="33:34"><if pos:start="31:5" pos:end="33:34">if <condition pos:start="31:8" pos:end="31:24">(<expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:10">sl</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:19">ocr_len</name></name> <operator pos:start="31:21" pos:end="31:21">&gt;</operator> <literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:34"><block_content pos:start="33:9" pos:end="33:34">

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:16">ocr_flag</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:33"><name pos:start="33:20" pos:end="33:28">get_bits1</name><argument_list pos:start="33:29" pos:end="33:33">(<argument pos:start="33:30" pos:end="33:32"><expr pos:start="33:30" pos:end="33:32"><operator pos:start="33:30" pos:end="33:30">&amp;</operator><name pos:start="33:31" pos:end="33:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="37:35"><if pos:start="35:5" pos:end="37:35">if <condition pos:start="35:8" pos:end="35:21">(<expr pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:10">sl</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:20">use_idle</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:35"><block_content pos:start="37:9" pos:end="37:35">

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:17">idle_flag</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:34"><name pos:start="37:21" pos:end="37:29">get_bits1</name><argument_list pos:start="37:30" pos:end="37:34">(<argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><operator pos:start="37:31" pos:end="37:31">&amp;</operator><name pos:start="37:32" pos:end="37:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:38"><if pos:start="39:5" pos:end="41:38">if <condition pos:start="39:8" pos:end="39:24">(<expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:10">sl</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:23">use_padding</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:38"><block_content pos:start="41:9" pos:end="41:38">

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:20">padding_flag</name> <operator pos:start="41:22" pos:end="41:22">=</operator> <call pos:start="41:24" pos:end="41:37"><name pos:start="41:24" pos:end="41:32">get_bits1</name><argument_list pos:start="41:33" pos:end="41:37">(<argument pos:start="41:34" pos:end="41:36"><expr pos:start="41:34" pos:end="41:36"><operator pos:start="41:34" pos:end="41:34">&amp;</operator><name pos:start="41:35" pos:end="41:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="45:40"><if pos:start="43:5" pos:end="45:40">if <condition pos:start="43:8" pos:end="43:21">(<expr pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:20">padding_flag</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:40"><block_content pos:start="45:9" pos:end="45:40">

        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:20">padding_bits</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:39"><name pos:start="45:24" pos:end="45:31">get_bits</name><argument_list pos:start="45:32" pos:end="45:39">(<argument pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><operator pos:start="45:33" pos:end="45:33">&amp;</operator><name pos:start="45:34" pos:end="45:35">gb</name></expr></argument>, <argument pos:start="45:38" pos:end="45:38"><expr pos:start="45:38" pos:end="45:38"><literal type="number" pos:start="45:38" pos:end="45:38">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="105:5"><if pos:start="49:5" pos:end="105:5">if <condition pos:start="49:8" pos:end="49:59">(<expr pos:start="49:9" pos:end="49:58"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:18">idle_flag</name> <operator pos:start="49:20" pos:end="49:21">&amp;&amp;</operator> <operator pos:start="49:23" pos:end="49:23">(</operator><operator pos:start="49:24" pos:end="49:24">!</operator><name pos:start="49:25" pos:end="49:36">padding_flag</name> <operator pos:start="49:38" pos:end="49:39">||</operator> <name pos:start="49:41" pos:end="49:52">padding_bits</name> <operator pos:start="49:54" pos:end="49:55">!=</operator> <literal type="number" pos:start="49:57" pos:end="49:57">0</literal><operator pos:start="49:58" pos:end="49:58">)</operator></expr>)</condition> <block pos:start="49:61" pos:end="105:5">{<block_content pos:start="51:9" pos:end="103:54">

        <if_stmt pos:start="51:9" pos:end="53:56"><if pos:start="51:9" pos:end="53:56">if <condition pos:start="51:12" pos:end="51:35">(<expr pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:14">sl</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:34">packet_seq_num_len</name></name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:56"><block_content pos:start="53:13" pos:end="53:56">

            <expr_stmt pos:start="53:13" pos:end="53:56"><expr pos:start="53:13" pos:end="53:55"><call pos:start="53:13" pos:end="53:55"><name pos:start="53:13" pos:end="53:26">skip_bits_long</name><argument_list pos:start="53:27" pos:end="53:55">(<argument pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><operator pos:start="53:28" pos:end="53:28">&amp;</operator><name pos:start="53:29" pos:end="53:30">gb</name></expr></argument>, <argument pos:start="53:33" pos:end="53:54"><expr pos:start="53:33" pos:end="53:54"><name pos:start="53:33" pos:end="53:54"><name pos:start="53:33" pos:end="53:34">sl</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:54">packet_seq_num_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="59:51"><if pos:start="55:9" pos:end="59:51">if <condition pos:start="55:12" pos:end="55:31">(<expr pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:14">sl</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:30">degr_prior_len</name></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="59:51"><block_content pos:start="57:13" pos:end="59:51">

            <if_stmt pos:start="57:13" pos:end="59:51"><if pos:start="57:13" pos:end="59:51">if <condition pos:start="57:16" pos:end="57:31">(<expr pos:start="57:17" pos:end="57:30"><call pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:25">get_bits1</name><argument_list pos:start="57:26" pos:end="57:30">(<argument pos:start="57:27" pos:end="57:29"><expr pos:start="57:27" pos:end="57:29"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:29">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:51"><block_content pos:start="59:17" pos:end="59:51">

                <expr_stmt pos:start="59:17" pos:end="59:51"><expr pos:start="59:17" pos:end="59:50"><call pos:start="59:17" pos:end="59:50"><name pos:start="59:17" pos:end="59:25">skip_bits</name><argument_list pos:start="59:26" pos:end="59:50">(<argument pos:start="59:27" pos:end="59:29"><expr pos:start="59:27" pos:end="59:29"><operator pos:start="59:27" pos:end="59:27">&amp;</operator><name pos:start="59:28" pos:end="59:29">gb</name></expr></argument>, <argument pos:start="59:32" pos:end="59:49"><expr pos:start="59:32" pos:end="59:49"><name pos:start="59:32" pos:end="59:49"><name pos:start="59:32" pos:end="59:33">sl</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:49">degr_prior_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="63:45"><if pos:start="61:9" pos:end="63:45">if <condition pos:start="61:12" pos:end="61:21">(<expr pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:20">ocr_flag</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:45"><block_content pos:start="63:13" pos:end="63:45">

            <expr_stmt pos:start="63:13" pos:end="63:45"><expr pos:start="63:13" pos:end="63:44"><call pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:26">skip_bits_long</name><argument_list pos:start="63:27" pos:end="63:44">(<argument pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><operator pos:start="63:28" pos:end="63:28">&amp;</operator><name pos:start="63:29" pos:end="63:30">gb</name></expr></argument>, <argument pos:start="63:33" pos:end="63:43"><expr pos:start="63:33" pos:end="63:43"><name pos:start="63:33" pos:end="63:43"><name pos:start="63:33" pos:end="63:34">sl</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:43">ocr_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="83:9"><if pos:start="65:9" pos:end="83:9">if <condition pos:start="65:12" pos:end="65:26">(<expr pos:start="65:13" pos:end="65:25"><name pos:start="65:13" pos:end="65:25">au_start_flag</name></expr>)</condition> <block pos:start="65:28" pos:end="83:9">{<block_content pos:start="67:13" pos:end="81:13">

            <if_stmt pos:start="67:13" pos:end="69:31"><if pos:start="67:13" pos:end="69:31">if <condition pos:start="67:16" pos:end="67:36">(<expr pos:start="67:17" pos:end="67:35"><name pos:start="67:17" pos:end="67:35"><name pos:start="67:17" pos:end="67:18">sl</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:35">use_rand_acc_pt</name></name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:31"><block_content pos:start="69:17" pos:end="69:31">

                <expr_stmt pos:start="69:17" pos:end="69:31"><expr pos:start="69:17" pos:end="69:30"><call pos:start="69:17" pos:end="69:30"><name pos:start="69:17" pos:end="69:25">get_bits1</name><argument_list pos:start="69:26" pos:end="69:30">(<argument pos:start="69:27" pos:end="69:29"><expr pos:start="69:27" pos:end="69:29"><operator pos:start="69:27" pos:end="69:27">&amp;</operator><name pos:start="69:28" pos:end="69:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="71:13" pos:end="73:56"><if pos:start="71:13" pos:end="73:56">if <condition pos:start="71:16" pos:end="71:39">(<expr pos:start="71:17" pos:end="71:38"><name pos:start="71:17" pos:end="71:34"><name pos:start="71:17" pos:end="71:18">sl</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:34">au_seq_num_len</name></name> <operator pos:start="71:36" pos:end="71:36">&gt;</operator> <literal type="number" pos:start="71:38" pos:end="71:38">0</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:56"><block_content pos:start="73:17" pos:end="73:56">

                <expr_stmt pos:start="73:17" pos:end="73:56"><expr pos:start="73:17" pos:end="73:55"><call pos:start="73:17" pos:end="73:55"><name pos:start="73:17" pos:end="73:30">skip_bits_long</name><argument_list pos:start="73:31" pos:end="73:55">(<argument pos:start="73:32" pos:end="73:34"><expr pos:start="73:32" pos:end="73:34"><operator pos:start="73:32" pos:end="73:32">&amp;</operator><name pos:start="73:33" pos:end="73:34">gb</name></expr></argument>, <argument pos:start="73:37" pos:end="73:54"><expr pos:start="73:37" pos:end="73:54"><name pos:start="73:37" pos:end="73:54"><name pos:start="73:37" pos:end="73:38">sl</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:54">au_seq_num_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="75:13" pos:end="81:13"><if pos:start="75:13" pos:end="81:13">if <condition pos:start="75:16" pos:end="75:35">(<expr pos:start="75:17" pos:end="75:34"><name pos:start="75:17" pos:end="75:34"><name pos:start="75:17" pos:end="75:18">sl</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:34">use_timestamps</name></name></expr>)</condition> <block pos:start="75:37" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:42">

                <expr_stmt pos:start="77:17" pos:end="77:42"><expr pos:start="77:17" pos:end="77:41"><name pos:start="77:17" pos:end="77:24">dts_flag</name> <operator pos:start="77:26" pos:end="77:26">=</operator> <call pos:start="77:28" pos:end="77:41"><name pos:start="77:28" pos:end="77:36">get_bits1</name><argument_list pos:start="77:37" pos:end="77:41">(<argument pos:start="77:38" pos:end="77:40"><expr pos:start="77:38" pos:end="77:40"><operator pos:start="77:38" pos:end="77:38">&amp;</operator><name pos:start="77:39" pos:end="77:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:42"><expr pos:start="79:17" pos:end="79:41"><name pos:start="79:17" pos:end="79:24">cts_flag</name> <operator pos:start="79:26" pos:end="79:26">=</operator> <call pos:start="79:28" pos:end="79:41"><name pos:start="79:28" pos:end="79:36">get_bits1</name><argument_list pos:start="79:37" pos:end="79:41">(<argument pos:start="79:38" pos:end="79:40"><expr pos:start="79:38" pos:end="79:40"><operator pos:start="79:38" pos:end="79:38">&amp;</operator><name pos:start="79:39" pos:end="79:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="85:9" pos:end="87:47"><if pos:start="85:9" pos:end="87:47">if <condition pos:start="85:12" pos:end="85:33">(<expr pos:start="85:13" pos:end="85:32"><name pos:start="85:13" pos:end="85:32"><name pos:start="85:13" pos:end="85:14">sl</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:32">inst_bitrate_len</name></name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:47"><block_content pos:start="87:13" pos:end="87:47">

            <expr_stmt pos:start="87:13" pos:end="87:47"><expr pos:start="87:13" pos:end="87:46"><name pos:start="87:13" pos:end="87:29">inst_bitrate_flag</name> <operator pos:start="87:31" pos:end="87:31">=</operator> <call pos:start="87:33" pos:end="87:46"><name pos:start="87:33" pos:end="87:41">get_bits1</name><argument_list pos:start="87:42" pos:end="87:46">(<argument pos:start="87:43" pos:end="87:45"><expr pos:start="87:43" pos:end="87:45"><operator pos:start="87:43" pos:end="87:43">&amp;</operator><name pos:start="87:44" pos:end="87:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="91:53"><if pos:start="89:9" pos:end="91:53">if <condition pos:start="89:12" pos:end="89:26">(<expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:20">dts_flag</name> <operator pos:start="89:22" pos:end="89:23">==</operator> <literal type="number" pos:start="89:25" pos:end="89:25">1</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:53"><block_content pos:start="91:13" pos:end="91:53">

            <expr_stmt pos:start="91:13" pos:end="91:53"><expr pos:start="91:13" pos:end="91:52"><name pos:start="91:13" pos:end="91:15">dts</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:52"><name pos:start="91:19" pos:end="91:28">get_bits64</name><argument_list pos:start="91:29" pos:end="91:52">(<argument pos:start="91:30" pos:end="91:32"><expr pos:start="91:30" pos:end="91:32"><operator pos:start="91:30" pos:end="91:30">&amp;</operator><name pos:start="91:31" pos:end="91:32">gb</name></expr></argument>, <argument pos:start="91:35" pos:end="91:51"><expr pos:start="91:35" pos:end="91:51"><name pos:start="91:35" pos:end="91:51"><name pos:start="91:35" pos:end="91:36">sl</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:51">timestamp_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="93:9" pos:end="95:53"><if pos:start="93:9" pos:end="95:53">if <condition pos:start="93:12" pos:end="93:26">(<expr pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:20">cts_flag</name> <operator pos:start="93:22" pos:end="93:23">==</operator> <literal type="number" pos:start="93:25" pos:end="93:25">1</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:53"><block_content pos:start="95:13" pos:end="95:53">

            <expr_stmt pos:start="95:13" pos:end="95:53"><expr pos:start="95:13" pos:end="95:52"><name pos:start="95:13" pos:end="95:15">cts</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:52"><name pos:start="95:19" pos:end="95:28">get_bits64</name><argument_list pos:start="95:29" pos:end="95:52">(<argument pos:start="95:30" pos:end="95:32"><expr pos:start="95:30" pos:end="95:32"><operator pos:start="95:30" pos:end="95:30">&amp;</operator><name pos:start="95:31" pos:end="95:32">gb</name></expr></argument>, <argument pos:start="95:35" pos:end="95:51"><expr pos:start="95:35" pos:end="95:51"><name pos:start="95:35" pos:end="95:51"><name pos:start="95:35" pos:end="95:36">sl</name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:51">timestamp_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="97:9" pos:end="99:44"><if pos:start="97:9" pos:end="99:44">if <condition pos:start="97:12" pos:end="97:27">(<expr pos:start="97:13" pos:end="97:26"><name pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:14">sl</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:22">au_len</name></name> <operator pos:start="97:24" pos:end="97:24">&gt;</operator> <literal type="number" pos:start="97:26" pos:end="97:26">0</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:44"><block_content pos:start="99:13" pos:end="99:44">

            <expr_stmt pos:start="99:13" pos:end="99:44"><expr pos:start="99:13" pos:end="99:43"><call pos:start="99:13" pos:end="99:43"><name pos:start="99:13" pos:end="99:26">skip_bits_long</name><argument_list pos:start="99:27" pos:end="99:43">(<argument pos:start="99:28" pos:end="99:30"><expr pos:start="99:28" pos:end="99:30"><operator pos:start="99:28" pos:end="99:28">&amp;</operator><name pos:start="99:29" pos:end="99:30">gb</name></expr></argument>, <argument pos:start="99:33" pos:end="99:42"><expr pos:start="99:33" pos:end="99:42"><name pos:start="99:33" pos:end="99:42"><name pos:start="99:33" pos:end="99:34">sl</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:42">au_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="101:9" pos:end="103:54"><if pos:start="101:9" pos:end="103:54">if <condition pos:start="101:12" pos:end="101:30">(<expr pos:start="101:13" pos:end="101:29"><name pos:start="101:13" pos:end="101:29">inst_bitrate_flag</name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:54"><block_content pos:start="103:13" pos:end="103:54">

            <expr_stmt pos:start="103:13" pos:end="103:54"><expr pos:start="103:13" pos:end="103:53"><call pos:start="103:13" pos:end="103:53"><name pos:start="103:13" pos:end="103:26">skip_bits_long</name><argument_list pos:start="103:27" pos:end="103:53">(<argument pos:start="103:28" pos:end="103:30"><expr pos:start="103:28" pos:end="103:30"><operator pos:start="103:28" pos:end="103:28">&amp;</operator><name pos:start="103:29" pos:end="103:30">gb</name></expr></argument>, <argument pos:start="103:33" pos:end="103:52"><expr pos:start="103:33" pos:end="103:52"><name pos:start="103:33" pos:end="103:52"><name pos:start="103:33" pos:end="103:34">sl</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:52">inst_bitrate_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="111:23"><if pos:start="109:5" pos:end="111:23">if <condition pos:start="109:8" pos:end="109:30">(<expr pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:11">dts</name> <operator pos:start="109:13" pos:end="109:14">!=</operator> <name pos:start="109:16" pos:end="109:29">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:23"><block_content pos:start="111:9" pos:end="111:23">

        <expr_stmt pos:start="111:9" pos:end="111:23"><expr pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:16"><name pos:start="111:9" pos:end="111:11">pes</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:16">dts</name></name> <operator pos:start="111:18" pos:end="111:18">=</operator> <name pos:start="111:20" pos:end="111:22">dts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="113:5" pos:end="115:23"><if pos:start="113:5" pos:end="115:23">if <condition pos:start="113:8" pos:end="113:30">(<expr pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:11">cts</name> <operator pos:start="113:13" pos:end="113:14">!=</operator> <name pos:start="113:16" pos:end="113:29">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:23"><block_content pos:start="115:9" pos:end="115:23">

        <expr_stmt pos:start="115:9" pos:end="115:23"><expr pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:11">pes</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:16">pts</name></name> <operator pos:start="115:18" pos:end="115:18">=</operator> <name pos:start="115:20" pos:end="115:22">cts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:74"><expr pos:start="119:5" pos:end="119:73"><call pos:start="119:5" pos:end="119:73"><name pos:start="119:5" pos:end="119:23">avpriv_set_pts_info</name><argument_list pos:start="119:24" pos:end="119:73">(<argument pos:start="119:25" pos:end="119:31"><expr pos:start="119:25" pos:end="119:31"><name pos:start="119:25" pos:end="119:31"><name pos:start="119:25" pos:end="119:27">pes</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:31">st</name></name></expr></argument>, <argument pos:start="119:34" pos:end="119:50"><expr pos:start="119:34" pos:end="119:50"><name pos:start="119:34" pos:end="119:50"><name pos:start="119:34" pos:end="119:35">sl</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:50">timestamp_len</name></name></expr></argument>, <argument pos:start="119:53" pos:end="119:53"><expr pos:start="119:53" pos:end="119:53"><literal type="number" pos:start="119:53" pos:end="119:53">1</literal></expr></argument>, <argument pos:start="119:56" pos:end="119:72"><expr pos:start="119:56" pos:end="119:72"><name pos:start="119:56" pos:end="119:72"><name pos:start="119:56" pos:end="119:57">sl</name><operator pos:start="119:58" pos:end="119:59">-&gt;</operator><name pos:start="119:60" pos:end="119:72">timestamp_res</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="123:5" pos:end="123:42">return <expr pos:start="123:12" pos:end="123:41"><operator pos:start="123:12" pos:end="123:12">(</operator><call pos:start="123:13" pos:end="123:31"><name pos:start="123:13" pos:end="123:26">get_bits_count</name><argument_list pos:start="123:27" pos:end="123:31">(<argument pos:start="123:28" pos:end="123:30"><expr pos:start="123:28" pos:end="123:30"><operator pos:start="123:28" pos:end="123:28">&amp;</operator><name pos:start="123:29" pos:end="123:30">gb</name></expr></argument>)</argument_list></call> <operator pos:start="123:33" pos:end="123:33">+</operator> <literal type="number" pos:start="123:35" pos:end="123:35">7</literal><operator pos:start="123:36" pos:end="123:36">)</operator> <operator pos:start="123:38" pos:end="123:39">&gt;&gt;</operator> <literal type="number" pos:start="123:41" pos:end="123:41">3</literal></expr>;</return>

</block_content>}</block></function>
</unit>
