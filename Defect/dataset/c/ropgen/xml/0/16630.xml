<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16630.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">cpu_inject_ext</name><parameter_list pos:start="1:20" pos:end="3:37">(<parameter pos:start="1:21" pos:end="1:32"><decl pos:start="1:21" pos:end="1:32"><type pos:start="1:21" pos:end="1:32"><name pos:start="1:21" pos:end="1:27">S390CPU</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">cpu</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:42">uint32_t</name></type> <name pos:start="1:44" pos:end="1:47">code</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:57">uint32_t</name></type> <name pos:start="1:59" pos:end="1:63">param</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:36"><decl pos:start="3:21" pos:end="3:36"><type pos:start="3:21" pos:end="3:36"><name pos:start="3:21" pos:end="3:28">uint64_t</name></type> <name pos:start="3:30" pos:end="3:36">param64</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:48">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">CPUS390XState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">env</name> <init pos:start="7:24" pos:end="7:34">= <expr pos:start="7:26" pos:end="7:34"><operator pos:start="7:26" pos:end="7:26">&amp;</operator><name pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:29">cpu</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:34">env</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:44">(<expr pos:start="11:9" pos:end="11:43"><name pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:11">env</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:22">ext_index</name></name> <operator pos:start="11:24" pos:end="11:25">==</operator> <name pos:start="11:27" pos:end="11:39">MAX_EXT_QUEUE</name> <operator pos:start="11:41" pos:end="11:41">-</operator> <literal type="number" pos:start="11:43" pos:end="11:43">1</literal></expr>)</condition> <block pos:start="11:46" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <comment type="block" pos:start="13:9" pos:end="13:52">/* ugh - can't queue anymore. Let's drop. */</comment>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:7">env</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:18">ext_index</name></name><operator pos:start="21:19" pos:end="21:20">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:43"><expr pos:start="23:5" pos:end="23:42"><call pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:42">(<argument pos:start="23:12" pos:end="23:41"><expr pos:start="23:12" pos:end="23:41"><name pos:start="23:12" pos:end="23:25"><name pos:start="23:12" pos:end="23:14">env</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:25">ext_index</name></name> <operator pos:start="23:27" pos:end="23:27">&lt;</operator> <name pos:start="23:29" pos:end="23:41">MAX_EXT_QUEUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:7">env</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:18">ext_queue</name><index pos:start="27:19" pos:end="27:34">[<expr pos:start="27:20" pos:end="27:33"><name pos:start="27:20" pos:end="27:33"><name pos:start="27:20" pos:end="27:22">env</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:33">ext_index</name></name></expr>]</index></name><operator pos:start="27:35" pos:end="27:35">.</operator><name pos:start="27:36" pos:end="27:39">code</name> <operator pos:start="27:41" pos:end="27:41">=</operator> <name pos:start="27:43" pos:end="27:46">code</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:49"><expr pos:start="29:5" pos:end="29:48"><name pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:7">env</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:18">ext_queue</name><index pos:start="29:19" pos:end="29:34">[<expr pos:start="29:20" pos:end="29:33"><name pos:start="29:20" pos:end="29:33"><name pos:start="29:20" pos:end="29:22">env</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:33">ext_index</name></name></expr>]</index></name><operator pos:start="29:35" pos:end="29:35">.</operator><name pos:start="29:36" pos:end="29:40">param</name> <operator pos:start="29:42" pos:end="29:42">=</operator> <name pos:start="29:44" pos:end="29:48">param</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:53"><expr pos:start="31:5" pos:end="31:52"><name pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:18">ext_queue</name><index pos:start="31:19" pos:end="31:34">[<expr pos:start="31:20" pos:end="31:33"><name pos:start="31:20" pos:end="31:33"><name pos:start="31:20" pos:end="31:22">env</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:33">ext_index</name></name></expr>]</index></name><operator pos:start="31:35" pos:end="31:35">.</operator><name pos:start="31:36" pos:end="31:42">param64</name> <operator pos:start="31:44" pos:end="31:44">=</operator> <name pos:start="31:46" pos:end="31:52">param64</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:7">env</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:20">pending_int</name></name> <operator pos:start="35:22" pos:end="35:23">|=</operator> <name pos:start="35:25" pos:end="35:37">INTERRUPT_EXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:48"><expr pos:start="37:5" pos:end="37:47"><call pos:start="37:5" pos:end="37:47"><name pos:start="37:5" pos:end="37:17">cpu_interrupt</name><argument_list pos:start="37:18" pos:end="37:47">(<argument pos:start="37:19" pos:end="37:26"><expr pos:start="37:19" pos:end="37:26"><call pos:start="37:19" pos:end="37:26"><name pos:start="37:19" pos:end="37:21">CPU</name><argument_list pos:start="37:22" pos:end="37:26">(<argument pos:start="37:23" pos:end="37:25"><expr pos:start="37:23" pos:end="37:25"><name pos:start="37:23" pos:end="37:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:29" pos:end="37:46"><expr pos:start="37:29" pos:end="37:46"><name pos:start="37:29" pos:end="37:46">CPU_INTERRUPT_HARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
