<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24073.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">flv_data_packet</name><parameter_list pos:start="1:27" pos:end="3:53">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:38"><decl pos:start="3:28" pos:end="3:38"><type pos:start="3:28" pos:end="3:38"><name pos:start="3:28" pos:end="3:34">int64_t</name></type> <name pos:start="3:36" pos:end="3:38">dts</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:52"><decl pos:start="3:41" pos:end="3:52"><type pos:start="3:41" pos:end="3:52"><name pos:start="3:41" pos:end="3:47">int64_t</name></type> <name pos:start="3:49" pos:end="3:52">next</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="125:1">{<block_content pos:start="7:5" pos:end="123:15">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name>    <init pos:start="9:21" pos:end="9:26">= <expr pos:start="9:23" pos:end="9:26"><name pos:start="9:23" pos:end="9:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:16"><name pos:start="11:10" pos:end="11:12">buf</name><index pos:start="11:13" pos:end="11:16">[<expr pos:start="11:14" pos:end="11:15"><literal type="number" pos:start="11:14" pos:end="11:15">20</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:33">= <expr pos:start="13:15" pos:end="13:33"><name pos:start="13:15" pos:end="13:33">AVERROR_INVALIDDATA</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:17">length</name> <init pos:start="15:19" pos:end="15:22">= <expr pos:start="15:21" pos:end="15:22"><operator pos:start="15:21" pos:end="15:21">-</operator><literal type="number" pos:start="15:22" pos:end="15:22">1</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="19:5" pos:end="33:5">switch <condition pos:start="19:12" pos:end="19:24">(<expr pos:start="19:13" pos:end="19:23"><call pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:19">avio_r8</name><argument_list pos:start="19:20" pos:end="19:23">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:26" pos:end="33:5">{<block_content pos:start="21:5" pos:end="31:18">

    <case pos:start="21:5" pos:end="21:34">case <expr pos:start="21:10" pos:end="21:33"><name pos:start="21:10" pos:end="21:33">AMF_DATA_TYPE_MIXEDARRAY</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:17">avio_seek</name><argument_list pos:start="23:18" pos:end="23:34">(<argument pos:start="23:19" pos:end="23:20"><expr pos:start="23:19" pos:end="23:20"><name pos:start="23:19" pos:end="23:20">pb</name></expr></argument>, <argument pos:start="23:23" pos:end="23:23"><expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">4</literal></expr></argument>, <argument pos:start="23:26" pos:end="23:33"><expr pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:33">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="25:5" pos:end="25:30">case <expr pos:start="25:10" pos:end="25:29"><name pos:start="25:10" pos:end="25:29">AMF_DATA_TYPE_OBJECT</name></expr>:</case>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <default pos:start="29:5" pos:end="29:12">default:</default>

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">skip</name>;</goto>

    </block_content>}</block></switch>



    <while pos:start="37:5" pos:end="63:5">while <condition pos:start="37:11" pos:end="37:60">(<expr pos:start="37:12" pos:end="37:59"><operator pos:start="37:12" pos:end="37:12">(</operator><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:54"><name pos:start="37:19" pos:end="37:32">amf_get_string</name><argument_list pos:start="37:33" pos:end="37:54">(<argument pos:start="37:34" pos:end="37:35"><expr pos:start="37:34" pos:end="37:35"><name pos:start="37:34" pos:end="37:35">pb</name></expr></argument>, <argument pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><name pos:start="37:38" pos:end="37:40">buf</name></expr></argument>, <argument pos:start="37:43" pos:end="37:53"><expr pos:start="37:43" pos:end="37:53"><sizeof pos:start="37:43" pos:end="37:53">sizeof<argument_list pos:start="37:49" pos:end="37:53">(<argument pos:start="37:50" pos:end="37:52"><expr pos:start="37:50" pos:end="37:52"><name pos:start="37:50" pos:end="37:52">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="37:55" pos:end="37:55">)</operator> <operator pos:start="37:57" pos:end="37:57">&gt;</operator> <literal type="number" pos:start="37:59" pos:end="37:59">0</literal></expr>)</condition> <block pos:start="37:62" pos:end="63:5">{<block_content pos:start="39:9" pos:end="61:9">

        <decl_stmt pos:start="39:9" pos:end="39:39"><decl pos:start="39:9" pos:end="39:38"><type pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:19">AMFDataType</name></type> <name pos:start="39:21" pos:end="39:24">type</name> <init pos:start="39:26" pos:end="39:38">= <expr pos:start="39:28" pos:end="39:38"><call pos:start="39:28" pos:end="39:38"><name pos:start="39:28" pos:end="39:34">avio_r8</name><argument_list pos:start="39:35" pos:end="39:38">(<argument pos:start="39:36" pos:end="39:37"><expr pos:start="39:36" pos:end="39:37"><name pos:start="39:36" pos:end="39:37">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="41:9" pos:end="61:9"><if pos:start="41:9" pos:end="55:9">if <condition pos:start="41:12" pos:end="41:65">(<expr pos:start="41:13" pos:end="41:64"><name pos:start="41:13" pos:end="41:16">type</name> <operator pos:start="41:18" pos:end="41:19">==</operator> <name pos:start="41:21" pos:end="41:40">AMF_DATA_TYPE_STRING</name> <operator pos:start="41:42" pos:end="41:43">&amp;&amp;</operator> <operator pos:start="41:45" pos:end="41:45">!</operator><call pos:start="41:46" pos:end="41:64"><name pos:start="41:46" pos:end="41:51">strcmp</name><argument_list pos:start="41:52" pos:end="41:64">(<argument pos:start="41:53" pos:end="41:55"><expr pos:start="41:53" pos:end="41:55"><name pos:start="41:53" pos:end="41:55">buf</name></expr></argument>, <argument pos:start="41:58" pos:end="41:63"><expr pos:start="41:58" pos:end="41:63"><literal type="string" pos:start="41:58" pos:end="41:63">"text"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:67" pos:end="55:9">{<block_content pos:start="43:13" pos:end="53:22">

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:18">length</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <call pos:start="43:22" pos:end="43:34"><name pos:start="43:22" pos:end="43:30">avio_rb16</name><argument_list pos:start="43:31" pos:end="43:34">(<argument pos:start="43:32" pos:end="43:33"><expr pos:start="43:32" pos:end="43:33"><name pos:start="43:32" pos:end="43:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:52"><expr pos:start="45:13" pos:end="45:51"><name pos:start="45:13" pos:end="45:15">ret</name>    <operator pos:start="45:20" pos:end="45:20">=</operator> <call pos:start="45:22" pos:end="45:51"><name pos:start="45:22" pos:end="45:34">av_get_packet</name><argument_list pos:start="45:35" pos:end="45:51">(<argument pos:start="45:36" pos:end="45:37"><expr pos:start="45:36" pos:end="45:37"><name pos:start="45:36" pos:end="45:37">pb</name></expr></argument>, <argument pos:start="45:40" pos:end="45:42"><expr pos:start="45:40" pos:end="45:42"><name pos:start="45:40" pos:end="45:42">pkt</name></expr></argument>, <argument pos:start="45:45" pos:end="45:50"><expr pos:start="45:45" pos:end="45:50"><name pos:start="45:45" pos:end="45:50">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="53:22"><if pos:start="47:13" pos:end="49:26">if <condition pos:start="47:16" pos:end="47:24">(<expr pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:19">ret</name> <operator pos:start="47:21" pos:end="47:21">&lt;</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:26"><block_content pos:start="49:17" pos:end="49:26">

                <goto pos:start="49:17" pos:end="49:26">goto <name pos:start="49:22" pos:end="49:25">skip</name>;</goto></block_content></block></if>

            <else pos:start="51:13" pos:end="53:22">else<block type="pseudo" pos:start="53:17" pos:end="53:22"><block_content pos:start="53:17" pos:end="53:22">

                <break pos:start="53:17" pos:end="53:22">break;</break></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="61:9">else <block pos:start="55:16" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:26">

            <if_stmt pos:start="57:13" pos:end="59:26"><if pos:start="57:13" pos:end="59:26">if <condition pos:start="57:16" pos:end="57:51">(<expr pos:start="57:17" pos:end="57:50"><operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:20">ret</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <call pos:start="57:24" pos:end="57:45"><name pos:start="57:24" pos:end="57:35">amf_skip_tag</name><argument_list pos:start="57:36" pos:end="57:45">(<argument pos:start="57:37" pos:end="57:38"><expr pos:start="57:37" pos:end="57:38"><name pos:start="57:37" pos:end="57:38">pb</name></expr></argument>, <argument pos:start="57:41" pos:end="57:44"><expr pos:start="57:41" pos:end="57:44"><name pos:start="57:41" pos:end="57:44">type</name></expr></argument>)</argument_list></call><operator pos:start="57:46" pos:end="57:46">)</operator> <operator pos:start="57:48" pos:end="57:48">&lt;</operator> <literal type="number" pos:start="57:50" pos:end="57:50">0</literal></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:26"><block_content pos:start="59:17" pos:end="59:26">

                <goto pos:start="59:17" pos:end="59:26">goto <name pos:start="59:22" pos:end="59:25">skip</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:19">(<expr pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:14">length</name> <operator pos:start="67:16" pos:end="67:16">&lt;</operator> <literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>)</condition> <block pos:start="67:21" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:18">

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <name pos:start="69:15" pos:end="69:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:18">goto <name pos:start="71:14" pos:end="71:17">skip</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="77:5" pos:end="85:5">for <control pos:start="77:9" pos:end="77:39">(<init pos:start="77:10" pos:end="77:15"><expr pos:start="77:10" pos:end="77:14"><name pos:start="77:10" pos:end="77:10">i</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>;</init> <condition pos:start="77:17" pos:end="77:34"><expr pos:start="77:17" pos:end="77:33"><name pos:start="77:17" pos:end="77:17">i</name> <operator pos:start="77:19" pos:end="77:19">&lt;</operator> <name pos:start="77:21" pos:end="77:33"><name pos:start="77:21" pos:end="77:21">s</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:33">nb_streams</name></name></expr>;</condition> <incr pos:start="77:36" pos:end="77:38"><expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:36">i</name><operator pos:start="77:37" pos:end="77:38">++</operator></expr></incr>)</control> <block pos:start="77:41" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:18">

        <expr_stmt pos:start="79:9" pos:end="79:27"><expr pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:10">st</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <name pos:start="79:14" pos:end="79:26"><name pos:start="79:14" pos:end="79:14">s</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:23">streams</name><index pos:start="79:24" pos:end="79:26">[<expr pos:start="79:25" pos:end="79:25"><name pos:start="79:25" pos:end="79:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="83:18"><if pos:start="81:9" pos:end="83:18">if <condition pos:start="81:12" pos:end="81:55">(<expr pos:start="81:13" pos:end="81:54"><name pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:14">st</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:21">codec</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:33">codec_type</name></name> <operator pos:start="81:35" pos:end="81:36">==</operator> <name pos:start="81:38" pos:end="81:54">AVMEDIA_TYPE_DATA</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:18"><block_content pos:start="83:13" pos:end="83:18">

            <break pos:start="83:13" pos:end="83:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="89:5" pos:end="99:5"><if pos:start="89:5" pos:end="99:5">if <condition pos:start="89:8" pos:end="89:27">(<expr pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:9">i</name> <operator pos:start="89:11" pos:end="89:12">==</operator> <name pos:start="89:14" pos:end="89:26"><name pos:start="89:14" pos:end="89:14">s</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:26">nb_streams</name></name></expr>)</condition> <block pos:start="89:29" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:47">

        <expr_stmt pos:start="91:9" pos:end="91:49"><expr pos:start="91:9" pos:end="91:48"><name pos:start="91:9" pos:end="91:10">st</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="91:48"><name pos:start="91:14" pos:end="91:26">create_stream</name><argument_list pos:start="91:27" pos:end="91:48">(<argument pos:start="91:28" pos:end="91:28"><expr pos:start="91:28" pos:end="91:28"><name pos:start="91:28" pos:end="91:28">s</name></expr></argument>, <argument pos:start="91:31" pos:end="91:47"><expr pos:start="91:31" pos:end="91:47"><name pos:start="91:31" pos:end="91:47">AVMEDIA_TYPE_DATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="95:39"><if pos:start="93:9" pos:end="95:39">if <condition pos:start="93:12" pos:end="93:16">(<expr pos:start="93:13" pos:end="93:15"><operator pos:start="93:13" pos:end="93:13">!</operator><name pos:start="93:14" pos:end="93:15">st</name></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:39"><block_content pos:start="95:13" pos:end="95:39">

            <return pos:start="95:13" pos:end="95:39">return <expr pos:start="95:20" pos:end="95:38"><name pos:start="95:20" pos:end="95:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:47"><expr pos:start="97:9" pos:end="97:46"><name pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:10">st</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:17">codec</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:27">codec_id</name></name> <operator pos:start="97:29" pos:end="97:29">=</operator> <name pos:start="97:31" pos:end="97:46">AV_CODEC_ID_TEXT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:20"><expr pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:12"><name pos:start="103:5" pos:end="103:7">pkt</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:12">dts</name></name>  <operator pos:start="103:15" pos:end="103:15">=</operator> <name pos:start="103:17" pos:end="103:19">dts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:20"><expr pos:start="105:5" pos:end="105:19"><name pos:start="105:5" pos:end="105:12"><name pos:start="105:5" pos:end="105:7">pkt</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:12">pts</name></name>  <operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:19">dts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:20"><expr pos:start="107:5" pos:end="107:19"><name pos:start="107:5" pos:end="107:13"><name pos:start="107:5" pos:end="107:7">pkt</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:13">size</name></name> <operator pos:start="107:15" pos:end="107:15">=</operator> <name pos:start="107:17" pos:end="107:19">ret</name></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:34"><expr pos:start="111:5" pos:end="111:33"><name pos:start="111:5" pos:end="111:21"><name pos:start="111:5" pos:end="111:7">pkt</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:21">stream_index</name></name> <operator pos:start="111:23" pos:end="111:23">=</operator> <name pos:start="111:25" pos:end="111:33"><name pos:start="111:25" pos:end="111:26">st</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:33">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:40"><expr pos:start="113:5" pos:end="113:39"><name pos:start="113:5" pos:end="113:14"><name pos:start="113:5" pos:end="113:7">pkt</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:14">flags</name></name>       <operator pos:start="113:22" pos:end="113:23">|=</operator> <name pos:start="113:25" pos:end="113:39">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>



<label pos:start="117:1" pos:end="117:5"><name pos:start="117:1" pos:end="117:4">skip</name>:</label>

    <expr_stmt pos:start="119:5" pos:end="119:41"><expr pos:start="119:5" pos:end="119:40"><call pos:start="119:5" pos:end="119:40"><name pos:start="119:5" pos:end="119:13">avio_seek</name><argument_list pos:start="119:14" pos:end="119:40">(<argument pos:start="119:15" pos:end="119:19"><expr pos:start="119:15" pos:end="119:19"><name pos:start="119:15" pos:end="119:19"><name pos:start="119:15" pos:end="119:15">s</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:19">pb</name></name></expr></argument>, <argument pos:start="119:22" pos:end="119:29"><expr pos:start="119:22" pos:end="119:29"><name pos:start="119:22" pos:end="119:25">next</name> <operator pos:start="119:27" pos:end="119:27">+</operator> <literal type="number" pos:start="119:29" pos:end="119:29">4</literal></expr></argument>, <argument pos:start="119:32" pos:end="119:39"><expr pos:start="119:32" pos:end="119:39"><name pos:start="119:32" pos:end="119:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="123:5" pos:end="123:15">return <expr pos:start="123:12" pos:end="123:14"><name pos:start="123:12" pos:end="123:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
