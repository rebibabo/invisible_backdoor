<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16333.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">v4l2_read_header</name><parameter_list pos:start="1:28" pos:end="1:72">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:47"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">s1</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:71"><decl pos:start="1:50" pos:end="1:71"><type pos:start="1:50" pos:end="1:71"><name pos:start="1:50" pos:end="1:67">AVFormatParameters</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:71">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">video_data</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:40">= <expr pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:29">s1</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">width</name></decl>, <decl pos:start="9:16" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:21">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">res</name></decl>, <decl pos:start="11:14" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:23">frame_rate</name></decl>, <decl pos:start="11:26" pos:end="11:40"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:26" pos:end="11:40">frame_rate_base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:27">desired_format</name></decl>, <decl pos:start="13:30" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:30" pos:end="13:41">capabilities</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:28">video_device</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:75">(<expr pos:start="19:9" pos:end="19:74"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:11">ap</name> <operator pos:start="19:13" pos:end="19:14">||</operator> <name pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:17">ap</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:24">width</name></name> <operator pos:start="19:26" pos:end="19:27">&lt;=</operator> <literal type="number" pos:start="19:29" pos:end="19:29">0</literal> <operator pos:start="19:31" pos:end="19:32">||</operator> <name pos:start="19:34" pos:end="19:43"><name pos:start="19:34" pos:end="19:35">ap</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:43">height</name></name> <operator pos:start="19:45" pos:end="19:46">&lt;=</operator> <literal type="number" pos:start="19:48" pos:end="19:48">0</literal> <operator pos:start="19:50" pos:end="19:51">||</operator> <name pos:start="19:53" pos:end="19:69"><name pos:start="19:53" pos:end="19:54">ap</name><operator pos:start="19:55" pos:end="19:56">-&gt;</operator><name pos:start="19:57" pos:end="19:65">time_base</name><operator pos:start="19:66" pos:end="19:66">.</operator><name pos:start="19:67" pos:end="19:69">den</name></name> <operator pos:start="19:71" pos:end="19:72">&lt;=</operator> <literal type="number" pos:start="19:74" pos:end="19:74">0</literal></expr>)</condition> <block pos:start="19:77" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:18">

        <expr_stmt pos:start="21:9" pos:end="21:63"><expr pos:start="21:9" pos:end="21:62"><call pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:62">(<argument pos:start="21:16" pos:end="21:17"><expr pos:start="21:16" pos:end="21:17"><name pos:start="21:16" pos:end="21:17">s1</name></expr></argument>, <argument pos:start="21:20" pos:end="21:31"><expr pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:34" pos:end="21:61"><expr pos:start="21:34" pos:end="21:61"><literal type="string" pos:start="21:34" pos:end="21:61">"Missing/Wrong parameters\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:9">width</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:14">ap</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:21">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:10">height</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:23"><name pos:start="33:14" pos:end="33:15">ap</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:23">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:14">frame_rate</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:34"><name pos:start="35:18" pos:end="35:19">ap</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:30">time_base</name><operator pos:start="35:31" pos:end="35:31">.</operator><name pos:start="35:32" pos:end="35:34">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:19">frame_rate_base</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:39"><name pos:start="37:23" pos:end="37:24">ap</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:35">time_base</name><operator pos:start="37:36" pos:end="37:36">.</operator><name pos:start="37:37" pos:end="37:39">num</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if<condition pos:start="41:7" pos:end="41:59">(<expr pos:start="41:8" pos:end="41:58"><operator pos:start="41:8" pos:end="41:8">(</operator><name pos:start="41:9" pos:end="41:16">unsigned</name><operator pos:start="41:17" pos:end="41:17">)</operator><name pos:start="41:18" pos:end="41:22">width</name> <operator pos:start="41:24" pos:end="41:24">&gt;</operator> <literal type="number" pos:start="41:26" pos:end="41:30">32767</literal> <operator pos:start="41:32" pos:end="41:33">||</operator> <operator pos:start="41:35" pos:end="41:35">(</operator><name pos:start="41:36" pos:end="41:43">unsigned</name><operator pos:start="41:44" pos:end="41:44">)</operator><name pos:start="41:45" pos:end="41:50">height</name> <operator pos:start="41:52" pos:end="41:52">&gt;</operator> <literal type="number" pos:start="41:54" pos:end="41:58">32767</literal></expr>)</condition> <block pos:start="41:61" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:18">

        <expr_stmt pos:start="43:9" pos:end="43:70"><expr pos:start="43:9" pos:end="43:69"><call pos:start="43:9" pos:end="43:69"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:69">(<argument pos:start="43:16" pos:end="43:17"><expr pos:start="43:16" pos:end="43:17"><name pos:start="43:16" pos:end="43:17">s1</name></expr></argument>, <argument pos:start="43:20" pos:end="43:31"><expr pos:start="43:20" pos:end="43:31"><name pos:start="43:20" pos:end="43:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:34" pos:end="43:53"><expr pos:start="43:34" pos:end="43:53"><literal type="string" pos:start="43:34" pos:end="43:53">"Wrong size %dx%d\n"</literal></expr></argument>, <argument pos:start="43:56" pos:end="43:60"><expr pos:start="43:56" pos:end="43:60"><name pos:start="43:56" pos:end="43:60">width</name></expr></argument>, <argument pos:start="43:63" pos:end="43:68"><expr pos:start="43:63" pos:end="43:68"><name pos:start="43:63" pos:end="43:68">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:30"><expr pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:6">st</name> <operator pos:start="53:8" pos:end="53:8">=</operator> <call pos:start="53:10" pos:end="53:29"><name pos:start="53:10" pos:end="53:22">av_new_stream</name><argument_list pos:start="53:23" pos:end="53:29">(<argument pos:start="53:24" pos:end="53:25"><expr pos:start="53:24" pos:end="53:25"><name pos:start="53:24" pos:end="53:25">s1</name></expr></argument>, <argument pos:start="53:28" pos:end="53:28"><expr pos:start="53:28" pos:end="53:28"><literal type="number" pos:start="53:28" pos:end="53:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:12">(<expr pos:start="55:9" pos:end="55:11"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:11">st</name></expr>)</condition> <block pos:start="55:14" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:23">

        <return pos:start="57:9" pos:end="57:23">return <expr pos:start="57:16" pos:end="57:22"><operator pos:start="57:16" pos:end="57:16">-</operator><name pos:start="57:17" pos:end="57:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:40"><expr pos:start="61:5" pos:end="61:39"><call pos:start="61:5" pos:end="61:39"><name pos:start="61:5" pos:end="61:19">av_set_pts_info</name><argument_list pos:start="61:20" pos:end="61:39">(<argument pos:start="61:21" pos:end="61:22"><expr pos:start="61:21" pos:end="61:22"><name pos:start="61:21" pos:end="61:22">st</name></expr></argument>, <argument pos:start="61:25" pos:end="61:26"><expr pos:start="61:25" pos:end="61:26"><literal type="number" pos:start="61:25" pos:end="61:26">64</literal></expr></argument>, <argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">1</literal></expr></argument>, <argument pos:start="61:32" pos:end="61:38"><expr pos:start="61:32" pos:end="61:38"><literal type="number" pos:start="61:32" pos:end="61:38">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:42" pos:end="61:64">/* 64 bits pts in us */</comment>



    <expr_stmt pos:start="65:5" pos:end="65:21"><expr pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:12"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:12">width</name></name> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:20">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:23"><expr pos:start="67:5" pos:end="67:22"><name pos:start="67:5" pos:end="67:13"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:13">height</name></name> <operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:22">height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:36"><expr pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:17">frame_rate</name></name>      <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:35">frame_rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:41"><expr pos:start="71:5" pos:end="71:40"><name pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:22">frame_rate_base</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <name pos:start="71:26" pos:end="71:40">frame_rate_base</name></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:30"><expr pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:16">video_device</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:29"><name pos:start="75:20" pos:end="75:21">ap</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:29">device</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:22">(<expr pos:start="77:9" pos:end="77:21"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:21">video_device</name></expr>)</condition> <block pos:start="77:24" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:36">

        <expr_stmt pos:start="79:9" pos:end="79:36"><expr pos:start="79:9" pos:end="79:35"><name pos:start="79:9" pos:end="79:20">video_device</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <literal type="string" pos:start="79:24" pos:end="79:35">"/dev/video"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:21"><expr pos:start="83:5" pos:end="83:20"><name pos:start="83:5" pos:end="83:16">capabilities</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <literal type="number" pos:start="83:20" pos:end="83:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:53"><expr pos:start="85:5" pos:end="85:52"><name pos:start="85:5" pos:end="85:9"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:9">fd</name></name> <operator pos:start="85:11" pos:end="85:11">=</operator> <call pos:start="85:13" pos:end="85:52"><name pos:start="85:13" pos:end="85:23">device_open</name><argument_list pos:start="85:24" pos:end="85:52">(<argument pos:start="85:25" pos:end="85:36"><expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:36">video_device</name></expr></argument>, <argument pos:start="85:39" pos:end="85:51"><expr pos:start="85:39" pos:end="85:51"><operator pos:start="85:39" pos:end="85:39">&amp;</operator><name pos:start="85:40" pos:end="85:51">capabilities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:18">(<expr pos:start="87:9" pos:end="87:17"><name pos:start="87:9" pos:end="87:13"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:13">fd</name></name> <operator pos:start="87:15" pos:end="87:15">&lt;</operator> <literal type="number" pos:start="87:17" pos:end="87:17">0</literal></expr>)</condition> <block pos:start="87:20" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:26">

        <expr_stmt pos:start="89:9" pos:end="89:20"><expr pos:start="89:9" pos:end="89:19"><call pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:15">av_free</name><argument_list pos:start="89:16" pos:end="89:19">(<argument pos:start="89:17" pos:end="89:18"><expr pos:start="89:17" pos:end="89:18"><name pos:start="89:17" pos:end="89:18">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="93:9" pos:end="93:26">return <expr pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:25">AVERROR_IO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:76"><expr pos:start="97:5" pos:end="97:75"><call pos:start="97:5" pos:end="97:75"><name pos:start="97:5" pos:end="97:10">av_log</name><argument_list pos:start="97:11" pos:end="97:75">(<argument pos:start="97:12" pos:end="97:13"><expr pos:start="97:12" pos:end="97:13"><name pos:start="97:12" pos:end="97:13">s1</name></expr></argument>, <argument pos:start="97:16" pos:end="97:27"><expr pos:start="97:16" pos:end="97:27"><name pos:start="97:16" pos:end="97:27">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:30" pos:end="97:53"><expr pos:start="97:30" pos:end="97:53"><literal type="string" pos:start="97:30" pos:end="97:53">"[%d]Capabilities: %x\n"</literal></expr></argument>, <argument pos:start="97:56" pos:end="97:60"><expr pos:start="97:56" pos:end="97:60"><name pos:start="97:56" pos:end="97:60"><name pos:start="97:56" pos:end="97:56">s</name><operator pos:start="97:57" pos:end="97:58">-&gt;</operator><name pos:start="97:59" pos:end="97:60">fd</name></name></expr></argument>, <argument pos:start="97:63" pos:end="97:74"><expr pos:start="97:63" pos:end="97:74"><name pos:start="97:63" pos:end="97:74">capabilities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:45"><expr pos:start="101:5" pos:end="101:44"><name pos:start="101:5" pos:end="101:18">desired_format</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <call pos:start="101:22" pos:end="101:44"><name pos:start="101:22" pos:end="101:31">fmt_ff2v4l</name><argument_list pos:start="101:32" pos:end="101:44">(<argument pos:start="101:33" pos:end="101:43"><expr pos:start="101:33" pos:end="101:43"><name pos:start="101:33" pos:end="101:43"><name pos:start="101:33" pos:end="101:34">ap</name><operator pos:start="101:35" pos:end="101:36">-&gt;</operator><name pos:start="101:37" pos:end="101:43">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="135:5"><if pos:start="103:5" pos:end="135:5">if <condition pos:start="103:8" pos:end="103:89">(<expr pos:start="103:9" pos:end="103:88"><name pos:start="103:9" pos:end="103:22">desired_format</name> <operator pos:start="103:24" pos:end="103:25">==</operator> <literal type="number" pos:start="103:27" pos:end="103:27">0</literal> <operator pos:start="103:29" pos:end="103:30">||</operator> <operator pos:start="103:32" pos:end="103:32">(</operator><call pos:start="103:33" pos:end="103:83"><name pos:start="103:33" pos:end="103:43">device_init</name><argument_list pos:start="103:44" pos:end="103:83">(<argument pos:start="103:45" pos:end="103:49"><expr pos:start="103:45" pos:end="103:49"><name pos:start="103:45" pos:end="103:49"><name pos:start="103:45" pos:end="103:45">s</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:49">fd</name></name></expr></argument>, <argument pos:start="103:52" pos:end="103:57"><expr pos:start="103:52" pos:end="103:57"><operator pos:start="103:52" pos:end="103:52">&amp;</operator><name pos:start="103:53" pos:end="103:57">width</name></expr></argument>, <argument pos:start="103:60" pos:end="103:66"><expr pos:start="103:60" pos:end="103:66"><operator pos:start="103:60" pos:end="103:60">&amp;</operator><name pos:start="103:61" pos:end="103:66">height</name></expr></argument>, <argument pos:start="103:69" pos:end="103:82"><expr pos:start="103:69" pos:end="103:82"><name pos:start="103:69" pos:end="103:82">desired_format</name></expr></argument>)</argument_list></call> <operator pos:start="103:85" pos:end="103:85">&lt;</operator> <literal type="number" pos:start="103:87" pos:end="103:87">0</literal><operator pos:start="103:88" pos:end="103:88">)</operator></expr>)</condition> <block pos:start="103:91" pos:end="135:5">{<block_content pos:start="105:9" pos:end="133:9">

        <decl_stmt pos:start="105:9" pos:end="105:20"><decl pos:start="105:9" pos:end="105:13"><type pos:start="105:9" pos:end="105:11"><name pos:start="105:9" pos:end="105:11">int</name></type> <name pos:start="105:13" pos:end="105:13">i</name></decl>, <decl pos:start="105:16" pos:end="105:19"><type ref="prev" pos:start="105:9" pos:end="105:11"/><name pos:start="105:16" pos:end="105:19">done</name></decl>;</decl_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:17"><expr pos:start="109:9" pos:end="109:16"><name pos:start="109:9" pos:end="109:12">done</name> <operator pos:start="109:14" pos:end="109:14">=</operator> <literal type="number" pos:start="109:16" pos:end="109:16">0</literal></expr>;</expr_stmt> <expr_stmt pos:start="109:19" pos:end="109:24"><expr pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:19">i</name> <operator pos:start="109:21" pos:end="109:21">=</operator> <literal type="number" pos:start="109:23" pos:end="109:23">0</literal></expr>;</expr_stmt>

        <while pos:start="111:9" pos:end="133:9">while <condition pos:start="111:15" pos:end="111:21">(<expr pos:start="111:16" pos:end="111:20"><operator pos:start="111:16" pos:end="111:16">!</operator><name pos:start="111:17" pos:end="111:20">done</name></expr>)</condition> <block pos:start="111:23" pos:end="133:9">{<block_content pos:start="113:13" pos:end="131:13">

            <expr_stmt pos:start="113:13" pos:end="113:62"><expr pos:start="113:13" pos:end="113:61"><name pos:start="113:13" pos:end="113:26">desired_format</name> <operator pos:start="113:28" pos:end="113:28">=</operator> <name pos:start="113:30" pos:end="113:52"><name pos:start="113:30" pos:end="113:49">fmt_conversion_table</name><index pos:start="113:50" pos:end="113:52">[<expr pos:start="113:51" pos:end="113:51"><name pos:start="113:51" pos:end="113:51">i</name></expr>]</index></name><operator pos:start="113:53" pos:end="113:53">.</operator><name pos:start="113:54" pos:end="113:61">v4l2_fmt</name></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="125:13"><if pos:start="115:13" pos:end="121:13">if <condition pos:start="115:16" pos:end="115:72">(<expr pos:start="115:17" pos:end="115:71"><call pos:start="115:17" pos:end="115:67"><name pos:start="115:17" pos:end="115:27">device_init</name><argument_list pos:start="115:28" pos:end="115:67">(<argument pos:start="115:29" pos:end="115:33"><expr pos:start="115:29" pos:end="115:33"><name pos:start="115:29" pos:end="115:33"><name pos:start="115:29" pos:end="115:29">s</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:33">fd</name></name></expr></argument>, <argument pos:start="115:36" pos:end="115:41"><expr pos:start="115:36" pos:end="115:41"><operator pos:start="115:36" pos:end="115:36">&amp;</operator><name pos:start="115:37" pos:end="115:41">width</name></expr></argument>, <argument pos:start="115:44" pos:end="115:50"><expr pos:start="115:44" pos:end="115:50"><operator pos:start="115:44" pos:end="115:44">&amp;</operator><name pos:start="115:45" pos:end="115:50">height</name></expr></argument>, <argument pos:start="115:53" pos:end="115:66"><expr pos:start="115:53" pos:end="115:66"><name pos:start="115:53" pos:end="115:66">desired_format</name></expr></argument>)</argument_list></call> <operator pos:start="115:69" pos:end="115:69">&lt;</operator> <literal type="number" pos:start="115:71" pos:end="115:71">0</literal></expr>)</condition> <block pos:start="115:74" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:20">

                <expr_stmt pos:start="117:17" pos:end="117:35"><expr pos:start="117:17" pos:end="117:34"><name pos:start="117:17" pos:end="117:30">desired_format</name> <operator pos:start="117:32" pos:end="117:32">=</operator> <literal type="number" pos:start="117:34" pos:end="117:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:20"><expr pos:start="119:17" pos:end="119:19"><name pos:start="119:17" pos:end="119:17">i</name><operator pos:start="119:18" pos:end="119:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="121:15" pos:end="125:13">else <block pos:start="121:20" pos:end="125:13">{<block_content pos:start="123:16" pos:end="123:24">

               <expr_stmt pos:start="123:16" pos:end="123:24"><expr pos:start="123:16" pos:end="123:23"><name pos:start="123:16" pos:end="123:19">done</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <literal type="number" pos:start="123:23" pos:end="123:23">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="127:13" pos:end="131:13"><if pos:start="127:13" pos:end="131:13">if <condition pos:start="127:16" pos:end="127:75">(<expr pos:start="127:17" pos:end="127:74"><name pos:start="127:17" pos:end="127:17">i</name> <operator pos:start="127:19" pos:end="127:20">==</operator> <sizeof pos:start="127:22" pos:end="127:49">sizeof<argument_list pos:start="127:28" pos:end="127:49">(<argument pos:start="127:29" pos:end="127:48"><expr pos:start="127:29" pos:end="127:48"><name pos:start="127:29" pos:end="127:48">fmt_conversion_table</name></expr></argument>)</argument_list></sizeof> <operator pos:start="127:51" pos:end="127:51">/</operator> <sizeof pos:start="127:53" pos:end="127:74">sizeof<argument_list pos:start="127:59" pos:end="127:74">(<argument pos:start="127:60" pos:end="127:73"><expr pos:start="127:60" pos:end="127:73">struct <name pos:start="127:67" pos:end="127:73">fmt_map</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="127:77" pos:end="131:13">{<block_content pos:start="129:16" pos:end="129:24">

               <expr_stmt pos:start="129:16" pos:end="129:24"><expr pos:start="129:16" pos:end="129:23"><name pos:start="129:16" pos:end="129:19">done</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <literal type="number" pos:start="129:23" pos:end="129:23">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="137:5" pos:end="149:5"><if pos:start="137:5" pos:end="149:5">if <condition pos:start="137:8" pos:end="137:28">(<expr pos:start="137:9" pos:end="137:27"><name pos:start="137:9" pos:end="137:22">desired_format</name> <operator pos:start="137:24" pos:end="137:25">==</operator> <literal type="number" pos:start="137:27" pos:end="137:27">0</literal></expr>)</condition> <block pos:start="137:30" pos:end="149:5">{<block_content pos:start="139:9" pos:end="147:26">

        <expr_stmt pos:start="139:9" pos:end="139:67"><expr pos:start="139:9" pos:end="139:66"><call pos:start="139:9" pos:end="139:66"><name pos:start="139:9" pos:end="139:14">av_log</name><argument_list pos:start="139:15" pos:end="139:66">(<argument pos:start="139:16" pos:end="139:17"><expr pos:start="139:16" pos:end="139:17"><name pos:start="139:16" pos:end="139:17">s1</name></expr></argument>, <argument pos:start="139:20" pos:end="139:31"><expr pos:start="139:20" pos:end="139:31"><name pos:start="139:20" pos:end="139:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:34" pos:end="139:65"><expr pos:start="139:34" pos:end="139:65"><literal type="string" pos:start="139:34" pos:end="139:65">"Cannot find a proper format.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:21"><expr pos:start="141:9" pos:end="141:20"><call pos:start="141:9" pos:end="141:20"><name pos:start="141:9" pos:end="141:13">close</name><argument_list pos:start="141:14" pos:end="141:20">(<argument pos:start="141:15" pos:end="141:19"><expr pos:start="141:15" pos:end="141:19"><name pos:start="141:15" pos:end="141:19"><name pos:start="141:15" pos:end="141:15">s</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:20"><expr pos:start="143:9" pos:end="143:19"><call pos:start="143:9" pos:end="143:19"><name pos:start="143:9" pos:end="143:15">av_free</name><argument_list pos:start="143:16" pos:end="143:19">(<argument pos:start="143:17" pos:end="143:18"><expr pos:start="143:17" pos:end="143:18"><name pos:start="143:17" pos:end="143:18">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="147:9" pos:end="147:26">return <expr pos:start="147:16" pos:end="147:25"><name pos:start="147:16" pos:end="147:25">AVERROR_IO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:37"><expr pos:start="151:5" pos:end="151:36"><name pos:start="151:5" pos:end="151:19"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:19">frame_format</name></name> <operator pos:start="151:21" pos:end="151:21">=</operator> <name pos:start="151:23" pos:end="151:36">desired_format</name></expr>;</expr_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:52"><expr pos:start="155:5" pos:end="155:51"><name pos:start="155:5" pos:end="155:22"><name pos:start="155:5" pos:end="155:6">st</name><operator pos:start="155:7" pos:end="155:8">-&gt;</operator><name pos:start="155:9" pos:end="155:13">codec</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:22">pix_fmt</name></name> <operator pos:start="155:24" pos:end="155:24">=</operator> <call pos:start="155:26" pos:end="155:51"><name pos:start="155:26" pos:end="155:35">fmt_v4l2ff</name><argument_list pos:start="155:36" pos:end="155:51">(<argument pos:start="155:37" pos:end="155:50"><expr pos:start="155:37" pos:end="155:50"><name pos:start="155:37" pos:end="155:50">desired_format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:74"><expr pos:start="157:5" pos:end="157:73"><name pos:start="157:5" pos:end="157:17"><name pos:start="157:5" pos:end="157:5">s</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:17">frame_size</name></name> <operator pos:start="157:19" pos:end="157:19">=</operator> <call pos:start="157:21" pos:end="157:73"><name pos:start="157:21" pos:end="157:38">avpicture_get_size</name><argument_list pos:start="157:39" pos:end="157:73">(<argument pos:start="157:40" pos:end="157:57"><expr pos:start="157:40" pos:end="157:57"><name pos:start="157:40" pos:end="157:57"><name pos:start="157:40" pos:end="157:41">st</name><operator pos:start="157:42" pos:end="157:43">-&gt;</operator><name pos:start="157:44" pos:end="157:48">codec</name><operator pos:start="157:49" pos:end="157:50">-&gt;</operator><name pos:start="157:51" pos:end="157:57">pix_fmt</name></name></expr></argument>, <argument pos:start="157:60" pos:end="157:64"><expr pos:start="157:60" pos:end="157:64"><name pos:start="157:60" pos:end="157:64">width</name></expr></argument>, <argument pos:start="157:67" pos:end="157:72"><expr pos:start="157:67" pos:end="157:72"><name pos:start="157:67" pos:end="157:72">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="159:5" pos:end="173:5"><if pos:start="159:5" pos:end="167:5">if <condition pos:start="159:8" pos:end="159:42">(<expr pos:start="159:9" pos:end="159:41"><name pos:start="159:9" pos:end="159:20">capabilities</name> <operator pos:start="159:22" pos:end="159:22">&amp;</operator> <name pos:start="159:24" pos:end="159:41">V4L2_CAP_STREAMING</name></expr>)</condition> <block pos:start="159:44" pos:end="167:5">{<block_content pos:start="161:9" pos:end="165:28">

        <expr_stmt pos:start="161:9" pos:end="161:31"><expr pos:start="161:9" pos:end="161:30"><name pos:start="161:9" pos:end="161:20"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:20">io_method</name></name> <operator pos:start="161:22" pos:end="161:22">=</operator> <name pos:start="161:24" pos:end="161:30">io_mmap</name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:27"><expr pos:start="163:9" pos:end="163:26"><name pos:start="163:9" pos:end="163:11">res</name> <operator pos:start="163:13" pos:end="163:13">=</operator> <call pos:start="163:15" pos:end="163:26"><name pos:start="163:15" pos:end="163:23">mmap_init</name><argument_list pos:start="163:24" pos:end="163:26">(<argument pos:start="163:25" pos:end="163:25"><expr pos:start="163:25" pos:end="163:25"><name pos:start="163:25" pos:end="163:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:28"><expr pos:start="165:9" pos:end="165:27"><name pos:start="165:9" pos:end="165:11">res</name> <operator pos:start="165:13" pos:end="165:13">=</operator> <call pos:start="165:15" pos:end="165:27"><name pos:start="165:15" pos:end="165:24">mmap_start</name><argument_list pos:start="165:25" pos:end="165:27">(<argument pos:start="165:26" pos:end="165:26"><expr pos:start="165:26" pos:end="165:26"><name pos:start="165:26" pos:end="165:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="173:5">else <block pos:start="167:12" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:27">

        <expr_stmt pos:start="169:9" pos:end="169:31"><expr pos:start="169:9" pos:end="169:30"><name pos:start="169:9" pos:end="169:20"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:20">io_method</name></name> <operator pos:start="169:22" pos:end="169:22">=</operator> <name pos:start="169:24" pos:end="169:30">io_read</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:27"><expr pos:start="171:9" pos:end="171:26"><name pos:start="171:9" pos:end="171:11">res</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <call pos:start="171:15" pos:end="171:26"><name pos:start="171:15" pos:end="171:23">read_init</name><argument_list pos:start="171:24" pos:end="171:26">(<argument pos:start="171:25" pos:end="171:25"><expr pos:start="171:25" pos:end="171:25"><name pos:start="171:25" pos:end="171:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="175:5" pos:end="185:5"><if pos:start="175:5" pos:end="185:5">if <condition pos:start="175:8" pos:end="175:16">(<expr pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:11">res</name> <operator pos:start="175:13" pos:end="175:13">&lt;</operator> <literal type="number" pos:start="175:15" pos:end="175:15">0</literal></expr>)</condition> <block pos:start="175:18" pos:end="185:5">{<block_content pos:start="177:9" pos:end="183:26">

        <expr_stmt pos:start="177:9" pos:end="177:21"><expr pos:start="177:9" pos:end="177:20"><call pos:start="177:9" pos:end="177:20"><name pos:start="177:9" pos:end="177:13">close</name><argument_list pos:start="177:14" pos:end="177:20">(<argument pos:start="177:15" pos:end="177:19"><expr pos:start="177:15" pos:end="177:19"><name pos:start="177:15" pos:end="177:19"><name pos:start="177:15" pos:end="177:15">s</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:20"><expr pos:start="179:9" pos:end="179:19"><call pos:start="179:9" pos:end="179:19"><name pos:start="179:9" pos:end="179:15">av_free</name><argument_list pos:start="179:16" pos:end="179:19">(<argument pos:start="179:17" pos:end="179:18"><expr pos:start="179:17" pos:end="179:18"><name pos:start="179:17" pos:end="179:18">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="183:9" pos:end="183:26">return <expr pos:start="183:16" pos:end="183:25"><name pos:start="183:16" pos:end="183:25">AVERROR_IO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:44"><expr pos:start="187:5" pos:end="187:43"><name pos:start="187:5" pos:end="187:22"><name pos:start="187:5" pos:end="187:5">s</name><operator pos:start="187:6" pos:end="187:7">-&gt;</operator><name pos:start="187:8" pos:end="187:22">top_field_first</name></name> <operator pos:start="187:24" pos:end="187:24">=</operator> <call pos:start="187:26" pos:end="187:43"><name pos:start="187:26" pos:end="187:36">first_field</name><argument_list pos:start="187:37" pos:end="187:43">(<argument pos:start="187:38" pos:end="187:42"><expr pos:start="187:38" pos:end="187:42"><name pos:start="187:38" pos:end="187:42"><name pos:start="187:38" pos:end="187:38">s</name><operator pos:start="187:39" pos:end="187:40">-&gt;</operator><name pos:start="187:41" pos:end="187:42">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:45"><expr pos:start="191:5" pos:end="191:44"><name pos:start="191:5" pos:end="191:25"><name pos:start="191:5" pos:end="191:6">st</name><operator pos:start="191:7" pos:end="191:8">-&gt;</operator><name pos:start="191:9" pos:end="191:13">codec</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:25">codec_type</name></name> <operator pos:start="191:27" pos:end="191:27">=</operator> <name pos:start="191:29" pos:end="191:44">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:44"><expr pos:start="193:5" pos:end="193:43"><name pos:start="193:5" pos:end="193:23"><name pos:start="193:5" pos:end="193:6">st</name><operator pos:start="193:7" pos:end="193:8">-&gt;</operator><name pos:start="193:9" pos:end="193:13">codec</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:23">codec_id</name></name> <operator pos:start="193:25" pos:end="193:25">=</operator> <name pos:start="193:27" pos:end="193:43">CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:29"><expr pos:start="195:5" pos:end="195:28"><name pos:start="195:5" pos:end="195:20"><name pos:start="195:5" pos:end="195:6">st</name><operator pos:start="195:7" pos:end="195:8">-&gt;</operator><name pos:start="195:9" pos:end="195:13">codec</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:20">width</name></name> <operator pos:start="195:22" pos:end="195:22">=</operator> <name pos:start="195:24" pos:end="195:28">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:31"><expr pos:start="197:5" pos:end="197:30"><name pos:start="197:5" pos:end="197:21"><name pos:start="197:5" pos:end="197:6">st</name><operator pos:start="197:7" pos:end="197:8">-&gt;</operator><name pos:start="197:9" pos:end="197:13">codec</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:21">height</name></name> <operator pos:start="197:23" pos:end="197:23">=</operator> <name pos:start="197:25" pos:end="197:30">height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:42"><expr pos:start="199:5" pos:end="199:41"><name pos:start="199:5" pos:end="199:28"><name pos:start="199:5" pos:end="199:6">st</name><operator pos:start="199:7" pos:end="199:8">-&gt;</operator><name pos:start="199:9" pos:end="199:13">codec</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:24">time_base</name><operator pos:start="199:25" pos:end="199:25">.</operator><name pos:start="199:26" pos:end="199:28">den</name></name> <operator pos:start="199:30" pos:end="199:30">=</operator> <name pos:start="199:32" pos:end="199:41">frame_rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:47"><expr pos:start="201:5" pos:end="201:46"><name pos:start="201:5" pos:end="201:28"><name pos:start="201:5" pos:end="201:6">st</name><operator pos:start="201:7" pos:end="201:8">-&gt;</operator><name pos:start="201:9" pos:end="201:13">codec</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:24">time_base</name><operator pos:start="201:25" pos:end="201:25">.</operator><name pos:start="201:26" pos:end="201:28">num</name></name> <operator pos:start="201:30" pos:end="201:30">=</operator> <name pos:start="201:32" pos:end="201:46">frame_rate_base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:77"><expr pos:start="203:5" pos:end="203:76"><name pos:start="203:5" pos:end="203:23"><name pos:start="203:5" pos:end="203:6">st</name><operator pos:start="203:7" pos:end="203:8">-&gt;</operator><name pos:start="203:9" pos:end="203:13">codec</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:23">bit_rate</name></name> <operator pos:start="203:25" pos:end="203:25">=</operator> <name pos:start="203:27" pos:end="203:39"><name pos:start="203:27" pos:end="203:27">s</name><operator pos:start="203:28" pos:end="203:29">-&gt;</operator><name pos:start="203:30" pos:end="203:39">frame_size</name></name> <operator pos:start="203:41" pos:end="203:41">*</operator> <literal type="number" pos:start="203:43" pos:end="203:43">1</literal><operator pos:start="203:44" pos:end="203:44">/</operator><call pos:start="203:45" pos:end="203:72"><name pos:start="203:45" pos:end="203:50">av_q2d</name><argument_list pos:start="203:51" pos:end="203:72">(<argument pos:start="203:52" pos:end="203:71"><expr pos:start="203:52" pos:end="203:71"><name pos:start="203:52" pos:end="203:71"><name pos:start="203:52" pos:end="203:53">st</name><operator pos:start="203:54" pos:end="203:55">-&gt;</operator><name pos:start="203:56" pos:end="203:60">codec</name><operator pos:start="203:61" pos:end="203:62">-&gt;</operator><name pos:start="203:63" pos:end="203:71">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="203:74" pos:end="203:74">*</operator> <literal type="number" pos:start="203:76" pos:end="203:76">8</literal></expr>;</expr_stmt>



    <return pos:start="207:5" pos:end="207:13">return <expr pos:start="207:12" pos:end="207:12"><literal type="number" pos:start="207:12" pos:end="207:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
