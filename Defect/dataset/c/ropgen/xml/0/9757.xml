<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9757.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:20">cpu_get_tsc</name><parameter_list pos:start="1:21" pos:end="1:38">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">CPUX86State</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="13:5" pos:end="25:5">

    <comment type="block" pos:start="5:5" pos:end="9:29">/* Note: when using kqemu, it is more logical to return the host TSC

       because kqemu does not trap the RDTSC instruction for

       performance reasons */</comment>

<cpp:ifdef pos:start="11:1" pos:end="11:19">#<cpp:directive pos:start="11:2" pos:end="11:6">ifdef</cpp:directive> <name pos:start="11:8" pos:end="11:19">CONFIG_KQEMU</name></cpp:ifdef>

    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:11">env</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:26">kqemu_enabled</name></name></expr>)</condition> <block pos:start="13:29" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:36">

        <return pos:start="15:9" pos:end="15:36">return <expr pos:start="15:16" pos:end="15:35"><call pos:start="15:16" pos:end="15:35"><name pos:start="15:16" pos:end="15:33">cpu_get_real_ticks</name><argument_list pos:start="15:34" pos:end="15:35">()</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="25:5">else

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

    <block pos:start="21:5" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:28">cpu_get_ticks</name><argument_list pos:start="23:29" pos:end="23:30">()</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
