<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25109.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:29">nbd_send_reply</name><parameter_list pos:start="1:30" pos:end="1:65">(<parameter pos:start="1:31" pos:end="1:39"><decl pos:start="1:31" pos:end="1:39"><type pos:start="1:31" pos:end="1:39"><name pos:start="1:31" pos:end="1:33">int</name></type> <name pos:start="1:35" pos:end="1:39">csock</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:57"><name pos:start="1:42" pos:end="1:47">struct</name> <name pos:start="1:49" pos:end="1:57">nbd_reply</name></name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:64">reply</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:13">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:26"><name pos:start="5:13" pos:end="5:15">buf</name><index pos:start="5:16" pos:end="5:26">[<expr pos:start="5:17" pos:end="5:25"><literal type="number" pos:start="5:17" pos:end="5:19">4</literal> <operator pos:start="5:19" pos:end="5:19">+</operator> <literal type="number" pos:start="5:21" pos:end="5:23">4</literal> <operator pos:start="5:23" pos:end="5:23">+</operator> <literal type="number" pos:start="5:25" pos:end="5:25">8</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="17:7">/* Reply

       [ 0 ..  3]    magic   (NBD_REPLY_MAGIC)

       [ 4 ..  7]    error   (0 == no error)

       [ 7 .. 15]    handle

     */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><call pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:16">cpu_to_be32w</name><argument_list pos:start="19:17" pos:end="19:49">(<argument pos:start="19:18" pos:end="19:31"><expr pos:start="19:18" pos:end="19:31"><operator pos:start="19:18" pos:end="19:18">(</operator><name pos:start="19:19" pos:end="19:26">uint32_t</name><operator pos:start="19:27" pos:end="19:27">*</operator><operator pos:start="19:28" pos:end="19:28">)</operator><name pos:start="19:29" pos:end="19:31">buf</name></expr></argument>, <argument pos:start="19:34" pos:end="19:48"><expr pos:start="19:34" pos:end="19:48"><name pos:start="19:34" pos:end="19:48">NBD_REPLY_MAGIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><call pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:16">cpu_to_be32w</name><argument_list pos:start="21:17" pos:end="21:52">(<argument pos:start="21:18" pos:end="21:37"><expr pos:start="21:18" pos:end="21:37"><operator pos:start="21:18" pos:end="21:18">(</operator><name pos:start="21:19" pos:end="21:26">uint32_t</name><operator pos:start="21:27" pos:end="21:27">*</operator><operator pos:start="21:28" pos:end="21:28">)</operator><operator pos:start="21:29" pos:end="21:29">(</operator><name pos:start="21:30" pos:end="21:32">buf</name> <operator pos:start="21:34" pos:end="21:34">+</operator> <literal type="number" pos:start="21:36" pos:end="21:36">4</literal><operator pos:start="21:37" pos:end="21:37">)</operator></expr></argument>, <argument pos:start="21:40" pos:end="21:51"><expr pos:start="21:40" pos:end="21:51"><name pos:start="21:40" pos:end="21:51"><name pos:start="21:40" pos:end="21:44">reply</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:51">error</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><call pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:16">cpu_to_be64w</name><argument_list pos:start="23:17" pos:end="23:53">(<argument pos:start="23:18" pos:end="23:37"><expr pos:start="23:18" pos:end="23:37"><operator pos:start="23:18" pos:end="23:18">(</operator><name pos:start="23:19" pos:end="23:26">uint64_t</name><operator pos:start="23:27" pos:end="23:27">*</operator><operator pos:start="23:28" pos:end="23:28">)</operator><operator pos:start="23:29" pos:end="23:29">(</operator><name pos:start="23:30" pos:end="23:32">buf</name> <operator pos:start="23:34" pos:end="23:34">+</operator> <literal type="number" pos:start="23:36" pos:end="23:36">8</literal><operator pos:start="23:37" pos:end="23:37">)</operator></expr></argument>, <argument pos:start="23:40" pos:end="23:52"><expr pos:start="23:40" pos:end="23:52"><name pos:start="23:40" pos:end="23:52"><name pos:start="23:40" pos:end="23:44">reply</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:52">handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><call pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:9">TRACE</name><argument_list pos:start="27:10" pos:end="27:39">(<argument pos:start="27:11" pos:end="27:38"><expr pos:start="27:11" pos:end="27:38"><literal type="string" pos:start="27:11" pos:end="27:38">"Sending response to client"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:59">(<expr pos:start="31:9" pos:end="31:58"><call pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:18">write_sync</name><argument_list pos:start="31:19" pos:end="31:43">(<argument pos:start="31:20" pos:end="31:24"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">csock</name></expr></argument>, <argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">buf</name></expr></argument>, <argument pos:start="31:32" pos:end="31:42"><expr pos:start="31:32" pos:end="31:42"><sizeof pos:start="31:32" pos:end="31:42">sizeof<argument_list pos:start="31:38" pos:end="31:42">(<argument pos:start="31:39" pos:end="31:41"><expr pos:start="31:39" pos:end="31:41"><name pos:start="31:39" pos:end="31:41">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="31:45" pos:end="31:46">!=</operator> <sizeof pos:start="31:48" pos:end="31:58">sizeof<argument_list pos:start="31:54" pos:end="31:58">(<argument pos:start="31:55" pos:end="31:57"><expr pos:start="31:55" pos:end="31:57"><name pos:start="31:55" pos:end="31:57">buf</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="31:61" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:18">

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><call pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:11">LOG</name><argument_list pos:start="33:12" pos:end="33:39">(<argument pos:start="33:13" pos:end="33:38"><expr pos:start="33:13" pos:end="33:38"><literal type="string" pos:start="33:13" pos:end="33:38">"writing to socket failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:13">errno</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:22">EINVAL</name></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
