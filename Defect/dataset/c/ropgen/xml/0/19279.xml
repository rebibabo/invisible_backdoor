<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19279.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><name pos:start="1:1" pos:end="1:4">main</name> <parameter_list pos:start="1:6" pos:end="1:11">(<parameter pos:start="1:7" pos:end="1:10"><decl pos:start="1:7" pos:end="1:10"><type pos:start="1:7" pos:end="1:10"><name pos:start="1:7" pos:end="1:10">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:3" pos:end="59:11">

  <decl_stmt pos:start="5:3" pos:end="5:30"><decl pos:start="5:3" pos:end="5:29"><type pos:start="5:3" pos:end="5:16"><name pos:start="5:3" pos:end="5:16"><name pos:start="5:3" pos:end="5:8">struct</name> <name pos:start="5:10" pos:end="5:16">timeval</name></name></type> <name pos:start="5:18" pos:end="5:20">t_m</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><block pos:start="5:24" pos:end="5:29">{<expr pos:start="5:25" pos:end="5:25"><literal type="number" pos:start="5:25" pos:end="5:25">0</literal></expr>, <expr pos:start="5:28" pos:end="5:28"><literal type="number" pos:start="5:28" pos:end="5:28">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="7:3" pos:end="7:31"><decl pos:start="7:3" pos:end="7:30"><type pos:start="7:3" pos:end="7:17"><name pos:start="7:3" pos:end="7:17"><name pos:start="7:3" pos:end="7:8">struct</name> <name pos:start="7:10" pos:end="7:17">timezone</name></name></type> <name pos:start="7:19" pos:end="7:21">t_z</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><block pos:start="7:25" pos:end="7:30">{<expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr>, <expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="9:3" pos:end="9:31"><decl pos:start="9:3" pos:end="9:30"><type pos:start="9:3" pos:end="9:16"><name pos:start="9:3" pos:end="9:16"><name pos:start="9:3" pos:end="9:8">struct</name> <name pos:start="9:10" pos:end="9:16">timeval</name></name></type> <name pos:start="9:18" pos:end="9:21">t_m1</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><block pos:start="9:25" pos:end="9:30">{<expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr>, <expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

  <decl_stmt pos:start="11:3" pos:end="11:8"><decl pos:start="11:3" pos:end="11:7"><type pos:start="11:3" pos:end="11:5"><name pos:start="11:3" pos:end="11:5">int</name></type> <name pos:start="11:7" pos:end="11:7">i</name></decl>;</decl_stmt>



  <if_stmt pos:start="15:3" pos:end="17:25"><if pos:start="15:3" pos:end="17:25">if <condition pos:start="15:6" pos:end="15:37">(<expr pos:start="15:7" pos:end="15:36"><call pos:start="15:7" pos:end="15:31"><name pos:start="15:7" pos:end="15:18">gettimeofday</name> <argument_list pos:start="15:20" pos:end="15:31">(<argument pos:start="15:21" pos:end="15:24"><expr pos:start="15:21" pos:end="15:24"><operator pos:start="15:21" pos:end="15:21">&amp;</operator><name pos:start="15:22" pos:end="15:24">t_m</name></expr></argument>, <argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:30">t_z</name></expr></argument>)</argument_list></call> <operator pos:start="15:33" pos:end="15:34">!=</operator> <literal type="number" pos:start="15:36" pos:end="15:36">0</literal></expr>)</condition><block type="pseudo" pos:start="17:5" pos:end="17:25"><block_content pos:start="17:5" pos:end="17:25">

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><call pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:7">err</name> <argument_list pos:start="17:9" pos:end="17:24">(<argument pos:start="17:10" pos:end="17:23"><expr pos:start="17:10" pos:end="17:23"><literal type="string" pos:start="17:10" pos:end="17:23">"gettimeofday"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



  <for pos:start="21:3" pos:end="41:9">for <control pos:start="21:7" pos:end="21:29">(<init pos:start="21:8" pos:end="21:13"><expr pos:start="21:8" pos:end="21:12"><name pos:start="21:8" pos:end="21:8">i</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <literal type="number" pos:start="21:12" pos:end="21:12">1</literal></expr>;</init> <condition pos:start="21:15" pos:end="21:24"><expr pos:start="21:15" pos:end="21:23"><name pos:start="21:15" pos:end="21:15">i</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:23">10000</literal></expr>;</condition> <incr pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:26">i</name><operator pos:start="21:27" pos:end="21:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:5" pos:end="41:9"><block_content pos:start="23:5" pos:end="41:9">

    <if_stmt pos:start="23:5" pos:end="41:9"><if pos:start="23:5" pos:end="25:29">if <condition pos:start="23:8" pos:end="23:40">(<expr pos:start="23:9" pos:end="23:39"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:20">gettimeofday</name> <argument_list pos:start="23:22" pos:end="23:34">(<argument pos:start="23:23" pos:end="23:27"><expr pos:start="23:23" pos:end="23:27"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:27">t_m1</name></expr></argument>, <argument pos:start="23:30" pos:end="23:33"><expr pos:start="23:30" pos:end="23:33"><name pos:start="23:30" pos:end="23:33">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="23:36" pos:end="23:37">!=</operator> <literal type="number" pos:start="23:39" pos:end="23:39">0</literal></expr>)</condition><block type="pseudo" pos:start="25:7" pos:end="25:29"><block_content pos:start="25:7" pos:end="25:29">

      <expr_stmt pos:start="25:7" pos:end="25:29"><expr pos:start="25:7" pos:end="25:28"><call pos:start="25:7" pos:end="25:28"><name pos:start="25:7" pos:end="25:9">err</name> <argument_list pos:start="25:11" pos:end="25:28">(<argument pos:start="25:12" pos:end="25:27"><expr pos:start="25:12" pos:end="25:27"><literal type="string" pos:start="25:12" pos:end="25:27">"gettimeofday 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="27:5" pos:end="41:9">else

      if <condition pos:start="29:10" pos:end="31:61">(<expr pos:start="29:11" pos:end="31:60"><name pos:start="29:11" pos:end="29:21"><name pos:start="29:11" pos:end="29:14">t_m1</name><operator pos:start="29:15" pos:end="29:15">.</operator><name pos:start="29:16" pos:end="29:21">tv_sec</name></name> <operator pos:start="29:23" pos:end="29:23">*</operator> <literal type="number" pos:start="29:25" pos:end="29:33">1000000</literal> <operator pos:start="29:33" pos:end="29:33">+</operator> <name pos:start="29:35" pos:end="29:46"><name pos:start="29:35" pos:end="29:38">t_m1</name><operator pos:start="29:39" pos:end="29:39">.</operator><name pos:start="29:40" pos:end="29:46">tv_usec</name></name>

	  <operator pos:start="31:11" pos:end="31:12">!=</operator> <operator pos:start="31:14" pos:end="31:14">(</operator><name pos:start="31:15" pos:end="31:24"><name pos:start="31:15" pos:end="31:17">t_m</name><operator pos:start="31:18" pos:end="31:18">.</operator><name pos:start="31:19" pos:end="31:24">tv_sec</name></name> <operator pos:start="31:26" pos:end="31:26">*</operator> <literal type="number" pos:start="31:28" pos:end="31:36">1000000</literal> <operator pos:start="31:36" pos:end="31:36">+</operator> <name pos:start="31:38" pos:end="31:48"><name pos:start="31:38" pos:end="31:40">t_m</name><operator pos:start="31:41" pos:end="31:41">.</operator><name pos:start="31:42" pos:end="31:48">tv_usec</name></name> <operator pos:start="31:50" pos:end="31:50">+</operator> <name pos:start="31:52" pos:end="31:52">i</name> <operator pos:start="31:54" pos:end="31:54">*</operator> <literal type="number" pos:start="31:56" pos:end="31:59">1000</literal><operator pos:start="31:60" pos:end="31:60">)</operator></expr>)</condition>

	<block pos:start="33:9" pos:end="41:9">{<block_content pos:start="35:11" pos:end="39:19">

	  <expr_stmt pos:start="35:11" pos:end="37:74"><expr pos:start="35:11" pos:end="37:73"><call pos:start="35:11" pos:end="37:73"><name pos:start="35:11" pos:end="35:17">fprintf</name> <argument_list pos:start="35:19" pos:end="37:73">(<argument pos:start="35:20" pos:end="35:25"><expr pos:start="35:20" pos:end="35:25"><name pos:start="35:20" pos:end="35:25">stderr</name></expr></argument>, <argument pos:start="35:28" pos:end="35:65"><expr pos:start="35:28" pos:end="35:65"><literal type="string" pos:start="35:28" pos:end="35:65">"t0 (%ld, %ld), i %d, t1 (%ld, %ld)\n"</literal></expr></argument>,

		   <argument pos:start="37:20" pos:end="37:29"><expr pos:start="37:20" pos:end="37:29"><name pos:start="37:20" pos:end="37:29"><name pos:start="37:20" pos:end="37:22">t_m</name><operator pos:start="37:23" pos:end="37:23">.</operator><name pos:start="37:24" pos:end="37:29">tv_sec</name></name></expr></argument>, <argument pos:start="37:32" pos:end="37:42"><expr pos:start="37:32" pos:end="37:42"><name pos:start="37:32" pos:end="37:42"><name pos:start="37:32" pos:end="37:34">t_m</name><operator pos:start="37:35" pos:end="37:35">.</operator><name pos:start="37:36" pos:end="37:42">tv_usec</name></name></expr></argument>, <argument pos:start="37:45" pos:end="37:45"><expr pos:start="37:45" pos:end="37:45"><name pos:start="37:45" pos:end="37:45">i</name></expr></argument>, <argument pos:start="37:48" pos:end="37:58"><expr pos:start="37:48" pos:end="37:58"><name pos:start="37:48" pos:end="37:58"><name pos:start="37:48" pos:end="37:51">t_m1</name><operator pos:start="37:52" pos:end="37:52">.</operator><name pos:start="37:53" pos:end="37:58">tv_sec</name></name></expr></argument>, <argument pos:start="37:61" pos:end="37:72"><expr pos:start="37:61" pos:end="37:72"><name pos:start="37:61" pos:end="37:72"><name pos:start="37:61" pos:end="37:64">t_m1</name><operator pos:start="37:65" pos:end="37:65">.</operator><name pos:start="37:66" pos:end="37:72">tv_usec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	  <expr_stmt pos:start="39:11" pos:end="39:19"><expr pos:start="39:11" pos:end="39:18"><call pos:start="39:11" pos:end="39:18"><name pos:start="39:11" pos:end="39:15">abort</name> <argument_list pos:start="39:17" pos:end="39:18">()</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt></block_content></block></for>



  <if_stmt pos:start="45:3" pos:end="53:5"><if pos:start="45:3" pos:end="53:5">if <condition pos:start="45:6" pos:end="45:33">(<expr pos:start="45:7" pos:end="45:32"><call pos:start="45:7" pos:end="45:17"><name pos:start="45:7" pos:end="45:10">time</name> <argument_list pos:start="45:12" pos:end="45:17">(<argument pos:start="45:13" pos:end="45:16"><expr pos:start="45:13" pos:end="45:16"><name pos:start="45:13" pos:end="45:16">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="45:19" pos:end="45:20">!=</operator> <name pos:start="45:22" pos:end="45:32"><name pos:start="45:22" pos:end="45:25">t_m1</name><operator pos:start="45:26" pos:end="45:26">.</operator><name pos:start="45:27" pos:end="45:32">tv_sec</name></name></expr>)</condition>

    <block pos:start="47:5" pos:end="53:5">{<block_content pos:start="49:7" pos:end="51:15">

      <expr_stmt pos:start="49:7" pos:end="49:43"><expr pos:start="49:7" pos:end="49:42"><call pos:start="49:7" pos:end="49:42"><name pos:start="49:7" pos:end="49:13">fprintf</name> <argument_list pos:start="49:15" pos:end="49:42">(<argument pos:start="49:16" pos:end="49:21"><expr pos:start="49:16" pos:end="49:21"><name pos:start="49:16" pos:end="49:21">stderr</name></expr></argument>, <argument pos:start="49:24" pos:end="49:41"><expr pos:start="49:24" pos:end="49:41"><literal type="string" pos:start="49:24" pos:end="49:41">"time != gettod\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="51:7" pos:end="51:15"><expr pos:start="51:7" pos:end="51:14"><call pos:start="51:7" pos:end="51:14"><name pos:start="51:7" pos:end="51:11">abort</name> <argument_list pos:start="51:13" pos:end="51:14">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="57:3" pos:end="57:20"><expr pos:start="57:3" pos:end="57:19"><call pos:start="57:3" pos:end="57:19"><name pos:start="57:3" pos:end="57:8">printf</name> <argument_list pos:start="57:10" pos:end="57:19">(<argument pos:start="57:11" pos:end="57:18"><expr pos:start="57:11" pos:end="57:18"><literal type="string" pos:start="57:11" pos:end="57:18">"pass\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt pos:start="59:3" pos:end="59:11"><expr pos:start="59:3" pos:end="59:10"><call pos:start="59:3" pos:end="59:10"><name pos:start="59:3" pos:end="59:6">exit</name> <argument_list pos:start="59:8" pos:end="59:10">(<argument pos:start="59:9" pos:end="59:9"><expr pos:start="59:9" pos:end="59:9"><literal type="number" pos:start="59:9" pos:end="59:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
