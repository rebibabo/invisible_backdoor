<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/598.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">spapr_memory_unplug_request</name><parameter_list pos:start="1:40" pos:end="3:71">(<parameter pos:start="1:41" pos:end="1:67"><decl pos:start="1:41" pos:end="1:67"><type pos:start="1:41" pos:end="1:67"><name pos:start="1:41" pos:end="1:54">HotplugHandler</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:67">hotplug_dev</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:56"><decl pos:start="3:41" pos:end="3:56"><type pos:start="3:41" pos:end="3:56"><name pos:start="3:41" pos:end="3:51">DeviceState</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:56">dev</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:70"><decl pos:start="3:59" pos:end="3:70"><type pos:start="3:59" pos:end="3:70"><name pos:start="3:59" pos:end="3:63">Error</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier><modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:70">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:37">

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">sPAPRMachineState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:28">spapr</name> <init pos:start="7:30" pos:end="7:57">= <expr pos:start="7:32" pos:end="7:57"><call pos:start="7:32" pos:end="7:57"><name pos:start="7:32" pos:end="7:44">SPAPR_MACHINE</name><argument_list pos:start="7:45" pos:end="7:57">(<argument pos:start="7:46" pos:end="7:56"><expr pos:start="7:46" pos:end="7:56"><name pos:start="7:46" pos:end="7:56">hotplug_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">PCDIMMDevice</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">dimm</name> <init pos:start="11:24" pos:end="11:37">= <expr pos:start="11:26" pos:end="11:37"><call pos:start="11:26" pos:end="11:37"><name pos:start="11:26" pos:end="11:32">PC_DIMM</name><argument_list pos:start="11:33" pos:end="11:37">(<argument pos:start="11:34" pos:end="11:36"><expr pos:start="11:34" pos:end="11:36"><name pos:start="11:34" pos:end="11:36">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:53"><decl pos:start="13:5" pos:end="13:52"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21">PCDIMMDeviceClass</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:26">ddc</name> <init pos:start="13:28" pos:end="13:52">= <expr pos:start="13:30" pos:end="13:52"><call pos:start="13:30" pos:end="13:52"><name pos:start="13:30" pos:end="13:46">PC_DIMM_GET_CLASS</name><argument_list pos:start="13:47" pos:end="13:52">(<argument pos:start="13:48" pos:end="13:51"><expr pos:start="13:48" pos:end="13:51"><name pos:start="13:48" pos:end="13:51">dimm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:52"><decl pos:start="15:5" pos:end="15:51"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">MemoryRegion</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:20">mr</name> <init pos:start="15:22" pos:end="15:51">= <expr pos:start="15:24" pos:end="15:51"><call pos:start="15:24" pos:end="15:51"><name pos:start="15:24" pos:end="15:45"><name pos:start="15:24" pos:end="15:26">ddc</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:45">get_memory_region</name></name><argument_list pos:start="15:46" pos:end="15:51">(<argument pos:start="15:47" pos:end="15:50"><expr pos:start="15:47" pos:end="15:50"><name pos:start="15:47" pos:end="15:50">dimm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:17">size</name> <init pos:start="17:19" pos:end="17:42">= <expr pos:start="17:21" pos:end="17:42"><call pos:start="17:21" pos:end="17:42"><name pos:start="17:21" pos:end="17:38">memory_region_size</name><argument_list pos:start="17:39" pos:end="17:42">(<argument pos:start="17:40" pos:end="17:41"><expr pos:start="17:40" pos:end="17:41"><name pos:start="17:40" pos:end="17:41">mr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:54"><decl pos:start="19:5" pos:end="19:53"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:20">nr_lmbs</name> <init pos:start="19:22" pos:end="19:53">= <expr pos:start="19:24" pos:end="19:53"><name pos:start="19:24" pos:end="19:27">size</name> <operator pos:start="19:29" pos:end="19:29">/</operator> <name pos:start="19:31" pos:end="19:53">SPAPR_MEMORY_BLOCK_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:30"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint64_t</name></type> <name pos:start="21:14" pos:end="21:23">addr_start</name></decl>, <decl pos:start="21:26" pos:end="21:29"><type ref="prev" pos:start="21:5" pos:end="21:12"/><name pos:start="21:26" pos:end="21:29">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:26"><decl pos:start="25:5" pos:end="25:25"><type pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:20">sPAPRDRConnector</name> <modifier pos:start="25:22" pos:end="25:22">*</modifier></type><name pos:start="25:23" pos:end="25:25">drc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:32"><decl pos:start="27:5" pos:end="27:31"><type pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:25">sPAPRDRConnectorClass</name> <modifier pos:start="27:27" pos:end="27:27">*</modifier></type><name pos:start="27:28" pos:end="27:31">drck</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:23"><decl pos:start="29:5" pos:end="29:22"><type pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:18">sPAPRDIMMState</name> <modifier pos:start="29:20" pos:end="29:20">*</modifier></type><name pos:start="29:21" pos:end="29:22">ds</name></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:53"><expr pos:start="33:5" pos:end="35:52"><name pos:start="33:5" pos:end="33:14">addr_start</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="35:52"><name pos:start="33:18" pos:end="33:40">object_property_get_int</name><argument_list pos:start="33:41" pos:end="35:52">(<argument pos:start="33:42" pos:end="33:53"><expr pos:start="33:42" pos:end="33:53"><call pos:start="33:42" pos:end="33:53"><name pos:start="33:42" pos:end="33:47">OBJECT</name><argument_list pos:start="33:48" pos:end="33:53">(<argument pos:start="33:49" pos:end="33:52"><expr pos:start="33:49" pos:end="33:52"><name pos:start="33:49" pos:end="33:52">dimm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:56" pos:end="33:72"><expr pos:start="33:56" pos:end="33:72"><name pos:start="33:56" pos:end="33:72">PC_DIMM_ADDR_PROP</name></expr></argument>,

                                         <argument pos:start="35:42" pos:end="35:51"><expr pos:start="35:42" pos:end="35:51"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:51">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:18">(<expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:17">local_err</name></expr>)</condition> <block pos:start="37:20" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:17">

        <goto pos:start="39:9" pos:end="39:17">goto <name pos:start="39:14" pos:end="39:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:6">ds</name> <operator pos:start="45:8" pos:end="45:8">=</operator> <call pos:start="45:10" pos:end="45:42"><name pos:start="45:10" pos:end="45:18">g_malloc0</name><argument_list pos:start="45:19" pos:end="45:42">(<argument pos:start="45:20" pos:end="45:41"><expr pos:start="45:20" pos:end="45:41"><sizeof pos:start="45:20" pos:end="45:41">sizeof<argument_list pos:start="45:26" pos:end="45:41">(<argument pos:start="45:27" pos:end="45:40"><expr pos:start="45:27" pos:end="45:40"><name pos:start="45:27" pos:end="45:40">sPAPRDIMMState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:26"><expr pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:6">ds</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:15">nr_lmbs</name></name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:25">nr_lmbs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:6">ds</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:12">dimm</name></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <name pos:start="49:16" pos:end="49:19">dimm</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><call pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:34">spapr_pending_dimm_unplugs_add</name><argument_list pos:start="51:35" pos:end="51:45">(<argument pos:start="51:36" pos:end="51:40"><expr pos:start="51:36" pos:end="51:40"><name pos:start="51:36" pos:end="51:40">spapr</name></expr></argument>, <argument pos:start="51:43" pos:end="51:44"><expr pos:start="51:43" pos:end="51:44"><name pos:start="51:43" pos:end="51:44">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:22"><expr pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:8">addr</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <name pos:start="55:12" pos:end="55:21">addr_start</name></expr>;</expr_stmt>

    <for pos:start="57:5" pos:end="73:5">for <control pos:start="57:9" pos:end="57:33">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:28"><expr pos:start="57:17" pos:end="57:27"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <name pos:start="57:21" pos:end="57:27">nr_lmbs</name></expr>;</condition> <incr pos:start="57:30" pos:end="57:32"><expr pos:start="57:30" pos:end="57:32"><name pos:start="57:30" pos:end="57:30">i</name><operator pos:start="57:31" pos:end="57:32">++</operator></expr></incr>)</control> <block pos:start="57:35" pos:end="73:5">{<block_content pos:start="59:9" pos:end="71:40">

        <expr_stmt pos:start="59:9" pos:end="61:48"><expr pos:start="59:9" pos:end="61:47"><name pos:start="59:9" pos:end="59:11">drc</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="61:47"><name pos:start="59:15" pos:end="59:38">spapr_dr_connector_by_id</name><argument_list pos:start="59:39" pos:end="61:47">(<argument pos:start="59:40" pos:end="59:66"><expr pos:start="59:40" pos:end="59:66"><name pos:start="59:40" pos:end="59:66">SPAPR_DR_CONNECTOR_TYPE_LMB</name></expr></argument>,

                <argument pos:start="61:17" pos:end="61:46"><expr pos:start="61:17" pos:end="61:46"><name pos:start="61:17" pos:end="61:20">addr</name> <operator pos:start="61:22" pos:end="61:22">/</operator> <name pos:start="61:24" pos:end="61:46">SPAPR_MEMORY_BLOCK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:22"><expr pos:start="63:9" pos:end="63:21"><call pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:16">g_assert</name><argument_list pos:start="63:17" pos:end="63:21">(<argument pos:start="63:18" pos:end="63:20"><expr pos:start="63:18" pos:end="63:20"><name pos:start="63:18" pos:end="63:20">drc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:49"><expr pos:start="67:9" pos:end="67:48"><name pos:start="67:9" pos:end="67:12">drck</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <call pos:start="67:16" pos:end="67:48"><name pos:start="67:16" pos:end="67:43">SPAPR_DR_CONNECTOR_GET_CLASS</name><argument_list pos:start="67:44" pos:end="67:48">(<argument pos:start="67:45" pos:end="67:47"><expr pos:start="67:45" pos:end="67:47"><name pos:start="67:45" pos:end="67:47">drc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:62"><expr pos:start="69:9" pos:end="69:61"><call pos:start="69:9" pos:end="69:61"><name pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:12">drck</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:20">detach</name></name><argument_list pos:start="69:21" pos:end="69:61">(<argument pos:start="69:22" pos:end="69:24"><expr pos:start="69:22" pos:end="69:24"><name pos:start="69:22" pos:end="69:24">drc</name></expr></argument>, <argument pos:start="69:27" pos:end="69:29"><expr pos:start="69:27" pos:end="69:29"><name pos:start="69:27" pos:end="69:29">dev</name></expr></argument>, <argument pos:start="69:32" pos:end="69:48"><expr pos:start="69:32" pos:end="69:48"><name pos:start="69:32" pos:end="69:48">spapr_lmb_release</name></expr></argument>, <argument pos:start="69:51" pos:end="69:54"><expr pos:start="69:51" pos:end="69:54"><name pos:start="69:51" pos:end="69:54">NULL</name></expr></argument>, <argument pos:start="69:57" pos:end="69:60"><expr pos:start="69:57" pos:end="69:60"><name pos:start="69:57" pos:end="69:60">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:40"><expr pos:start="71:9" pos:end="71:39"><name pos:start="71:9" pos:end="71:12">addr</name> <operator pos:start="71:14" pos:end="71:15">+=</operator> <name pos:start="71:17" pos:end="71:39">SPAPR_MEMORY_BLOCK_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="77:5" pos:end="79:73"><expr pos:start="77:5" pos:end="79:72"><name pos:start="77:5" pos:end="77:7">drc</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="79:72"><name pos:start="77:11" pos:end="77:34">spapr_dr_connector_by_id</name><argument_list pos:start="77:35" pos:end="79:72">(<argument pos:start="77:36" pos:end="77:62"><expr pos:start="77:36" pos:end="77:62"><name pos:start="77:36" pos:end="77:62">SPAPR_DR_CONNECTOR_TYPE_LMB</name></expr></argument>,

                                   <argument pos:start="79:36" pos:end="79:71"><expr pos:start="79:36" pos:end="79:71"><name pos:start="79:36" pos:end="79:45">addr_start</name> <operator pos:start="79:47" pos:end="79:47">/</operator> <name pos:start="79:49" pos:end="79:71">SPAPR_MEMORY_BLOCK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:45"><expr pos:start="81:5" pos:end="81:44"><name pos:start="81:5" pos:end="81:8">drck</name> <operator pos:start="81:10" pos:end="81:10">=</operator> <call pos:start="81:12" pos:end="81:44"><name pos:start="81:12" pos:end="81:39">SPAPR_DR_CONNECTOR_GET_CLASS</name><argument_list pos:start="81:40" pos:end="81:44">(<argument pos:start="81:41" pos:end="81:43"><expr pos:start="81:41" pos:end="81:43"><name pos:start="81:41" pos:end="81:43">drc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="87:68"><expr pos:start="83:5" pos:end="87:67"><call pos:start="83:5" pos:end="87:67"><name pos:start="83:5" pos:end="83:45">spapr_hotplug_req_remove_by_count_indexed</name><argument_list pos:start="83:46" pos:end="87:67">(<argument pos:start="83:47" pos:end="83:73"><expr pos:start="83:47" pos:end="83:73"><name pos:start="83:47" pos:end="83:73">SPAPR_DR_CONNECTOR_TYPE_LMB</name></expr></argument>,

                                              <argument pos:start="85:47" pos:end="85:53"><expr pos:start="85:47" pos:end="85:53"><name pos:start="85:47" pos:end="85:53">nr_lmbs</name></expr></argument>,

                                              <argument pos:start="87:47" pos:end="87:66"><expr pos:start="87:47" pos:end="87:66"><call pos:start="87:47" pos:end="87:66"><name pos:start="87:47" pos:end="87:61"><name pos:start="87:47" pos:end="87:50">drck</name><operator pos:start="87:51" pos:end="87:52">-&gt;</operator><name pos:start="87:53" pos:end="87:61">get_index</name></name><argument_list pos:start="87:62" pos:end="87:66">(<argument pos:start="87:63" pos:end="87:65"><expr pos:start="87:63" pos:end="87:65"><name pos:start="87:63" pos:end="87:65">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="89:1" pos:end="89:4"><name pos:start="89:1" pos:end="89:3">out</name>:</label>

    <expr_stmt pos:start="91:5" pos:end="91:37"><expr pos:start="91:5" pos:end="91:36"><call pos:start="91:5" pos:end="91:36"><name pos:start="91:5" pos:end="91:19">error_propagate</name><argument_list pos:start="91:20" pos:end="91:36">(<argument pos:start="91:21" pos:end="91:24"><expr pos:start="91:21" pos:end="91:24"><name pos:start="91:21" pos:end="91:24">errp</name></expr></argument>, <argument pos:start="91:27" pos:end="91:35"><expr pos:start="91:27" pos:end="91:35"><name pos:start="91:27" pos:end="91:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
