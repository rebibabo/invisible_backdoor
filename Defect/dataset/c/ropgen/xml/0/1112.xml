<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1112.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">debugcon_parse</name><parameter_list pos:start="1:26" pos:end="1:46">(<parameter pos:start="1:27" pos:end="1:45"><decl pos:start="1:27" pos:end="1:45"><type pos:start="1:27" pos:end="1:38"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:45">devname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QemuOpts</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">opts</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:49">(<expr pos:start="9:9" pos:end="9:48"><operator pos:start="9:9" pos:end="9:9">!</operator><call pos:start="9:10" pos:end="9:48"><name pos:start="9:10" pos:end="9:21">qemu_chr_new</name><argument_list pos:start="9:22" pos:end="9:48">(<argument pos:start="9:23" pos:end="9:32"><expr pos:start="9:23" pos:end="9:32"><literal type="string" pos:start="9:23" pos:end="9:32">"debugcon"</literal></expr></argument>, <argument pos:start="9:35" pos:end="9:41"><expr pos:start="9:35" pos:end="9:41"><name pos:start="9:35" pos:end="9:41">devname</name></expr></argument>, <argument pos:start="9:44" pos:end="9:47"><expr pos:start="9:44" pos:end="9:47"><name pos:start="9:44" pos:end="9:47">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:51" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:16">

        <expr_stmt pos:start="11:9" pos:end="11:16"><expr pos:start="11:9" pos:end="11:15"><call pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:12">exit</name><argument_list pos:start="11:13" pos:end="11:15">(<argument pos:start="11:14" pos:end="11:14"><expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:75"><expr pos:start="15:5" pos:end="15:74"><name pos:start="15:5" pos:end="15:8">opts</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:74"><name pos:start="15:12" pos:end="15:27">qemu_opts_create</name><argument_list pos:start="15:28" pos:end="15:74">(<argument pos:start="15:29" pos:end="15:52"><expr pos:start="15:29" pos:end="15:52"><call pos:start="15:29" pos:end="15:52"><name pos:start="15:29" pos:end="15:42">qemu_find_opts</name><argument_list pos:start="15:43" pos:end="15:52">(<argument pos:start="15:44" pos:end="15:51"><expr pos:start="15:44" pos:end="15:51"><literal type="string" pos:start="15:44" pos:end="15:51">"device"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:55" pos:end="15:64"><expr pos:start="15:55" pos:end="15:64"><literal type="string" pos:start="15:55" pos:end="15:64">"debugcon"</literal></expr></argument>, <argument pos:start="15:67" pos:end="15:67"><expr pos:start="15:67" pos:end="15:67"><literal type="number" pos:start="15:67" pos:end="15:67">1</literal></expr></argument>, <argument pos:start="15:70" pos:end="15:73"><expr pos:start="15:70" pos:end="15:73"><name pos:start="15:70" pos:end="15:73">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:14">(<expr pos:start="17:9" pos:end="17:13"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:13">opts</name></expr>)</condition> <block pos:start="17:16" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:16">

        <expr_stmt pos:start="19:9" pos:end="19:66"><expr pos:start="19:9" pos:end="19:65"><call pos:start="19:9" pos:end="19:65"><name pos:start="19:9" pos:end="19:15">fprintf</name><argument_list pos:start="19:16" pos:end="19:65">(<argument pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22">stderr</name></expr></argument>, <argument pos:start="19:25" pos:end="19:64"><expr pos:start="19:25" pos:end="19:64"><literal type="string" pos:start="19:25" pos:end="19:64">"qemu: already have a debugcon device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><call pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:12">exit</name><argument_list pos:start="21:13" pos:end="21:15">(<argument pos:start="21:14" pos:end="21:14"><expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:63"><expr pos:start="25:5" pos:end="25:62"><call pos:start="25:5" pos:end="25:62"><name pos:start="25:5" pos:end="25:16">qemu_opt_set</name><argument_list pos:start="25:17" pos:end="25:62">(<argument pos:start="25:18" pos:end="25:21"><expr pos:start="25:18" pos:end="25:21"><name pos:start="25:18" pos:end="25:21">opts</name></expr></argument>, <argument pos:start="25:24" pos:end="25:31"><expr pos:start="25:24" pos:end="25:31"><literal type="string" pos:start="25:24" pos:end="25:31">"driver"</literal></expr></argument>, <argument pos:start="25:34" pos:end="25:47"><expr pos:start="25:34" pos:end="25:47"><literal type="string" pos:start="25:34" pos:end="25:47">"isa-debugcon"</literal></expr></argument>, <argument pos:start="25:50" pos:end="25:61"><expr pos:start="25:50" pos:end="25:61"><operator pos:start="25:50" pos:end="25:50">&amp;</operator><name pos:start="25:51" pos:end="25:61">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:60"><expr pos:start="27:5" pos:end="27:59"><call pos:start="27:5" pos:end="27:59"><name pos:start="27:5" pos:end="27:16">qemu_opt_set</name><argument_list pos:start="27:17" pos:end="27:59">(<argument pos:start="27:18" pos:end="27:21"><expr pos:start="27:18" pos:end="27:21"><name pos:start="27:18" pos:end="27:21">opts</name></expr></argument>, <argument pos:start="27:24" pos:end="27:32"><expr pos:start="27:24" pos:end="27:32"><literal type="string" pos:start="27:24" pos:end="27:32">"chardev"</literal></expr></argument>, <argument pos:start="27:35" pos:end="27:44"><expr pos:start="27:35" pos:end="27:44"><literal type="string" pos:start="27:35" pos:end="27:44">"debugcon"</literal></expr></argument>, <argument pos:start="27:47" pos:end="27:58"><expr pos:start="27:47" pos:end="27:58"><operator pos:start="27:47" pos:end="27:47">&amp;</operator><name pos:start="27:48" pos:end="27:58">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
