<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1488.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">vhost_dev_init</name><parameter_list pos:start="1:19" pos:end="3:49">(<parameter pos:start="1:20" pos:end="1:41"><decl pos:start="1:20" pos:end="1:41"><type pos:start="1:20" pos:end="1:41"><name pos:start="1:20" pos:end="1:35"><name pos:start="1:20" pos:end="1:25">struct</name> <name pos:start="1:27" pos:end="1:35">vhost_dev</name></name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">hdev</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:47">void</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:55">opaque</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:48"><decl pos:start="3:20" pos:end="3:48"><type pos:start="3:20" pos:end="3:48"><name pos:start="3:20" pos:end="3:35">VhostBackendType</name></type> <name pos:start="3:37" pos:end="3:48">backend_type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="147:1">{<block_content pos:start="7:5" pos:end="145:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:21">features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">r</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:55">(<expr pos:start="13:9" pos:end="13:54"><call pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:30">vhost_set_backend_type</name><argument_list pos:start="13:31" pos:end="13:50">(<argument pos:start="13:32" pos:end="13:35"><expr pos:start="13:32" pos:end="13:35"><name pos:start="13:32" pos:end="13:35">hdev</name></expr></argument>, <argument pos:start="13:38" pos:end="13:49"><expr pos:start="13:38" pos:end="13:49"><name pos:start="13:38" pos:end="13:49">backend_type</name></expr></argument>)</argument_list></call> <operator pos:start="13:52" pos:end="13:52">&lt;</operator> <literal type="number" pos:start="13:54" pos:end="13:54">0</literal></expr>)</condition> <block pos:start="13:57" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:18">

        <expr_stmt pos:start="15:9" pos:end="15:33"><expr pos:start="15:9" pos:end="15:32"><call pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:13">close</name><argument_list pos:start="15:14" pos:end="15:32">(<argument pos:start="15:15" pos:end="15:31"><expr pos:start="15:15" pos:end="15:31"><operator pos:start="15:15" pos:end="15:15">(</operator><name pos:start="15:16" pos:end="15:24">uintptr_t</name><operator pos:start="15:25" pos:end="15:25">)</operator><name pos:start="15:26" pos:end="15:31">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:62">(<expr pos:start="23:9" pos:end="23:61"><call pos:start="23:9" pos:end="23:57"><name pos:start="23:9" pos:end="23:43"><name pos:start="23:9" pos:end="23:12">hdev</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:23">vhost_ops</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:43">vhost_backend_init</name></name><argument_list pos:start="23:44" pos:end="23:57">(<argument pos:start="23:45" pos:end="23:48"><expr pos:start="23:45" pos:end="23:48"><name pos:start="23:45" pos:end="23:48">hdev</name></expr></argument>, <argument pos:start="23:51" pos:end="23:56"><expr pos:start="23:51" pos:end="23:56"><name pos:start="23:51" pos:end="23:56">opaque</name></expr></argument>)</argument_list></call> <operator pos:start="23:59" pos:end="23:59">&lt;</operator> <literal type="number" pos:start="23:61" pos:end="23:61">0</literal></expr>)</condition> <block pos:start="23:64" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:22">

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><call pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:13">close</name><argument_list pos:start="25:14" pos:end="25:32">(<argument pos:start="25:15" pos:end="25:31"><expr pos:start="25:15" pos:end="25:31"><operator pos:start="25:15" pos:end="25:15">(</operator><name pos:start="25:16" pos:end="25:24">uintptr_t</name><operator pos:start="25:25" pos:end="25:25">)</operator><name pos:start="25:26" pos:end="25:31">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:22">return <expr pos:start="27:16" pos:end="27:21"><operator pos:start="27:16" pos:end="27:16">-</operator><name pos:start="27:17" pos:end="27:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:65"><expr pos:start="33:5" pos:end="33:64"><name pos:start="33:5" pos:end="33:5">r</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:35"><name pos:start="33:9" pos:end="33:12">hdev</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:23">vhost_ops</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:35">vhost_call</name></name><argument_list pos:start="33:36" pos:end="33:64">(<argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">hdev</name></expr></argument>, <argument pos:start="33:43" pos:end="33:57"><expr pos:start="33:43" pos:end="33:57"><name pos:start="33:43" pos:end="33:57">VHOST_SET_OWNER</name></expr></argument>, <argument pos:start="33:60" pos:end="33:63"><expr pos:start="33:60" pos:end="33:63"><name pos:start="33:60" pos:end="33:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:14">(<expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">r</name> <operator pos:start="35:11" pos:end="35:11">&lt;</operator> <literal type="number" pos:start="35:13" pos:end="35:13">0</literal></expr>)</condition> <block pos:start="35:16" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:18">

        <goto pos:start="37:9" pos:end="37:18">goto <name pos:start="37:14" pos:end="37:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:73"><expr pos:start="43:5" pos:end="43:72"><name pos:start="43:5" pos:end="43:5">r</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:72"><name pos:start="43:9" pos:end="43:35"><name pos:start="43:9" pos:end="43:12">hdev</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:23">vhost_ops</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:35">vhost_call</name></name><argument_list pos:start="43:36" pos:end="43:72">(<argument pos:start="43:37" pos:end="43:40"><expr pos:start="43:37" pos:end="43:40"><name pos:start="43:37" pos:end="43:40">hdev</name></expr></argument>, <argument pos:start="43:43" pos:end="43:60"><expr pos:start="43:43" pos:end="43:60"><name pos:start="43:43" pos:end="43:60">VHOST_GET_FEATURES</name></expr></argument>, <argument pos:start="43:63" pos:end="43:71"><expr pos:start="43:63" pos:end="43:71"><operator pos:start="43:63" pos:end="43:63">&amp;</operator><name pos:start="43:64" pos:end="43:71">features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:14">(<expr pos:start="45:9" pos:end="45:13"><name pos:start="45:9" pos:end="45:9">r</name> <operator pos:start="45:11" pos:end="45:11">&lt;</operator> <literal type="number" pos:start="45:13" pos:end="45:13">0</literal></expr>)</condition> <block pos:start="45:16" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:18">

        <goto pos:start="47:9" pos:end="47:18">goto <name pos:start="47:14" pos:end="47:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="53:5" pos:end="63:5">for <control pos:start="53:9" pos:end="53:36">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:31"><expr pos:start="53:17" pos:end="53:30"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:30"><name pos:start="53:21" pos:end="53:24">hdev</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:30">nvqs</name></name></expr>;</condition> <incr pos:start="53:33" pos:end="53:35"><expr pos:start="53:33" pos:end="53:35"><operator pos:start="53:33" pos:end="53:34">++</operator><name pos:start="53:35" pos:end="53:35">i</name></expr></incr>)</control> <block pos:start="53:38" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:9">

        <expr_stmt pos:start="55:9" pos:end="55:57"><expr pos:start="55:9" pos:end="55:56"><name pos:start="55:9" pos:end="55:9">r</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <call pos:start="55:13" pos:end="55:56"><name pos:start="55:13" pos:end="55:32">vhost_virtqueue_init</name><argument_list pos:start="55:33" pos:end="55:56">(<argument pos:start="55:34" pos:end="55:37"><expr pos:start="55:34" pos:end="55:37"><name pos:start="55:34" pos:end="55:37">hdev</name></expr></argument>, <argument pos:start="55:40" pos:end="55:52"><expr pos:start="55:40" pos:end="55:52"><name pos:start="55:40" pos:end="55:48"><name pos:start="55:40" pos:end="55:43">hdev</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:48">vqs</name></name> <operator pos:start="55:50" pos:end="55:50">+</operator> <name pos:start="55:52" pos:end="55:52">i</name></expr></argument>, <argument pos:start="55:55" pos:end="55:55"><expr pos:start="55:55" pos:end="55:55"><name pos:start="55:55" pos:end="55:55">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:18">(<expr pos:start="57:13" pos:end="57:17"><name pos:start="57:13" pos:end="57:13">r</name> <operator pos:start="57:15" pos:end="57:15">&lt;</operator> <literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr>)</condition> <block pos:start="57:20" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:25">

            <goto pos:start="59:13" pos:end="59:25">goto <name pos:start="59:18" pos:end="59:24">fail_vq</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="65:5" pos:end="65:30"><expr pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:8">hdev</name><operator pos:start="65:9" pos:end="65:10">-&gt;</operator><name pos:start="65:11" pos:end="65:18">features</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:29">features</name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="97:6"><expr pos:start="69:5" pos:end="97:5"><name pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:8">hdev</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:25">memory_listener</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <operator pos:start="69:29" pos:end="69:29">(</operator><name pos:start="69:30" pos:end="69:43">MemoryListener</name><operator pos:start="69:44" pos:end="69:44">)</operator> <block pos:start="69:46" pos:end="97:5">{

        <expr pos:start="71:9" pos:end="71:28"><operator pos:start="71:9" pos:end="71:9">.</operator><name pos:start="71:10" pos:end="71:14">begin</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:28">vhost_begin</name></expr>,

        <expr pos:start="73:9" pos:end="73:30"><operator pos:start="73:9" pos:end="73:9">.</operator><name pos:start="73:10" pos:end="73:15">commit</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:30">vhost_commit</name></expr>,

        <expr pos:start="75:9" pos:end="75:38"><operator pos:start="75:9" pos:end="75:9">.</operator><name pos:start="75:10" pos:end="75:19">region_add</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:38">vhost_region_add</name></expr>,

        <expr pos:start="77:9" pos:end="77:38"><operator pos:start="77:9" pos:end="77:9">.</operator><name pos:start="77:10" pos:end="77:19">region_del</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <name pos:start="77:23" pos:end="77:38">vhost_region_del</name></expr>,

        <expr pos:start="79:9" pos:end="79:38"><operator pos:start="79:9" pos:end="79:9">.</operator><name pos:start="79:10" pos:end="79:19">region_nop</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <name pos:start="79:23" pos:end="79:38">vhost_region_nop</name></expr>,

        <expr pos:start="81:9" pos:end="81:36"><operator pos:start="81:9" pos:end="81:9">.</operator><name pos:start="81:10" pos:end="81:18">log_start</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:36">vhost_log_start</name></expr>,

        <expr pos:start="83:9" pos:end="83:34"><operator pos:start="83:9" pos:end="83:9">.</operator><name pos:start="83:10" pos:end="83:17">log_stop</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <name pos:start="83:21" pos:end="83:34">vhost_log_stop</name></expr>,

        <expr pos:start="85:9" pos:end="85:34"><operator pos:start="85:9" pos:end="85:9">.</operator><name pos:start="85:10" pos:end="85:17">log_sync</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:34">vhost_log_sync</name></expr>,

        <expr pos:start="87:9" pos:end="87:50"><operator pos:start="87:9" pos:end="87:9">.</operator><name pos:start="87:10" pos:end="87:25">log_global_start</name> <operator pos:start="87:27" pos:end="87:27">=</operator> <name pos:start="87:29" pos:end="87:50">vhost_log_global_start</name></expr>,

        <expr pos:start="89:9" pos:end="89:48"><operator pos:start="89:9" pos:end="89:9">.</operator><name pos:start="89:10" pos:end="89:24">log_global_stop</name> <operator pos:start="89:26" pos:end="89:26">=</operator> <name pos:start="89:28" pos:end="89:48">vhost_log_global_stop</name></expr>,

        <expr pos:start="91:9" pos:end="91:40"><operator pos:start="91:9" pos:end="91:9">.</operator><name pos:start="91:10" pos:end="91:20">eventfd_add</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <name pos:start="91:24" pos:end="91:40">vhost_eventfd_add</name></expr>,

        <expr pos:start="93:9" pos:end="93:40"><operator pos:start="93:9" pos:end="93:9">.</operator><name pos:start="93:10" pos:end="93:20">eventfd_del</name> <operator pos:start="93:22" pos:end="93:22">=</operator> <name pos:start="93:24" pos:end="93:40">vhost_eventfd_del</name></expr>,

        <expr pos:start="95:9" pos:end="95:22"><operator pos:start="95:9" pos:end="95:9">.</operator><name pos:start="95:10" pos:end="95:17">priority</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <literal type="number" pos:start="95:21" pos:end="95:22">10</literal></expr>

    }</block></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:35"><expr pos:start="99:5" pos:end="99:34"><name pos:start="99:5" pos:end="99:27"><name pos:start="99:5" pos:end="99:8">hdev</name><operator pos:start="99:9" pos:end="99:10">-&gt;</operator><name pos:start="99:11" pos:end="99:27">migration_blocker</name></name> <operator pos:start="99:29" pos:end="99:29">=</operator> <name pos:start="99:31" pos:end="99:34">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="109:5"><if pos:start="101:5" pos:end="109:5">if <condition pos:start="101:8" pos:end="101:56">(<expr pos:start="101:9" pos:end="101:55"><operator pos:start="101:9" pos:end="101:9">!</operator><operator pos:start="101:10" pos:end="101:10">(</operator><name pos:start="101:11" pos:end="101:24"><name pos:start="101:11" pos:end="101:14">hdev</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:24">features</name></name> <operator pos:start="101:26" pos:end="101:26">&amp;</operator> <operator pos:start="101:28" pos:end="101:28">(</operator><literal type="number" pos:start="101:29" pos:end="101:34">0x1ULL</literal> <operator pos:start="101:36" pos:end="101:37">&lt;&lt;</operator> <name pos:start="101:39" pos:end="101:53">VHOST_F_LOG_ALL</name><operator pos:start="101:54" pos:end="101:54">)</operator><operator pos:start="101:55" pos:end="101:55">)</operator></expr>)</condition> <block pos:start="101:58" pos:end="109:5">{<block_content pos:start="103:9" pos:end="107:53">

        <expr_stmt pos:start="103:9" pos:end="105:79"><expr pos:start="103:9" pos:end="105:78"><call pos:start="103:9" pos:end="105:78"><name pos:start="103:9" pos:end="103:18">error_setg</name><argument_list pos:start="103:19" pos:end="105:78">(<argument pos:start="103:20" pos:end="103:43"><expr pos:start="103:20" pos:end="103:43"><operator pos:start="103:20" pos:end="103:20">&amp;</operator><name pos:start="103:21" pos:end="103:43"><name pos:start="103:21" pos:end="103:24">hdev</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:43">migration_blocker</name></name></expr></argument>,

                   <argument pos:start="105:20" pos:end="105:77"><expr pos:start="105:20" pos:end="105:77"><literal type="string" pos:start="105:20" pos:end="105:77">"Migration disabled: vhost lacks VHOST_F_LOG_ALL feature."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:53"><expr pos:start="107:9" pos:end="107:52"><call pos:start="107:9" pos:end="107:52"><name pos:start="107:9" pos:end="107:27">migrate_add_blocker</name><argument_list pos:start="107:28" pos:end="107:52">(<argument pos:start="107:29" pos:end="107:51"><expr pos:start="107:29" pos:end="107:51"><name pos:start="107:29" pos:end="107:51"><name pos:start="107:29" pos:end="107:32">hdev</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:51">migration_blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:66"><expr pos:start="111:5" pos:end="111:65"><name pos:start="111:5" pos:end="111:13"><name pos:start="111:5" pos:end="111:8">hdev</name><operator pos:start="111:9" pos:end="111:10">-&gt;</operator><name pos:start="111:11" pos:end="111:13">mem</name></name> <operator pos:start="111:15" pos:end="111:15">=</operator> <call pos:start="111:17" pos:end="111:65"><name pos:start="111:17" pos:end="111:25">g_malloc0</name><argument_list pos:start="111:26" pos:end="111:65">(<argument pos:start="111:27" pos:end="111:64"><expr pos:start="111:27" pos:end="111:64"><call pos:start="111:27" pos:end="111:64"><name pos:start="111:27" pos:end="111:34">offsetof</name><argument_list pos:start="111:35" pos:end="111:64">(<argument pos:start="111:36" pos:end="111:54"><expr pos:start="111:36" pos:end="111:54">struct <name pos:start="111:43" pos:end="111:54">vhost_memory</name></expr></argument>, <argument pos:start="111:57" pos:end="111:63"><expr pos:start="111:57" pos:end="111:63"><name pos:start="111:57" pos:end="111:63">regions</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:29"><expr pos:start="113:5" pos:end="113:28"><name pos:start="113:5" pos:end="113:24"><name pos:start="113:5" pos:end="113:8">hdev</name><operator pos:start="113:9" pos:end="113:10">-&gt;</operator><name pos:start="113:11" pos:end="113:24">n_mem_sections</name></name> <operator pos:start="113:26" pos:end="113:26">=</operator> <literal type="number" pos:start="113:28" pos:end="113:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:30"><expr pos:start="115:5" pos:end="115:29"><name pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:8">hdev</name><operator pos:start="115:9" pos:end="115:10">-&gt;</operator><name pos:start="115:11" pos:end="115:22">mem_sections</name></name> <operator pos:start="115:24" pos:end="115:24">=</operator> <name pos:start="115:26" pos:end="115:29">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:21"><expr pos:start="117:5" pos:end="117:20"><name pos:start="117:5" pos:end="117:13"><name pos:start="117:5" pos:end="117:8">hdev</name><operator pos:start="117:9" pos:end="117:10">-&gt;</operator><name pos:start="117:11" pos:end="117:13">log</name></name> <operator pos:start="117:15" pos:end="117:15">=</operator> <name pos:start="117:17" pos:end="117:20">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:23"><expr pos:start="119:5" pos:end="119:22"><name pos:start="119:5" pos:end="119:18"><name pos:start="119:5" pos:end="119:8">hdev</name><operator pos:start="119:9" pos:end="119:10">-&gt;</operator><name pos:start="119:11" pos:end="119:18">log_size</name></name> <operator pos:start="119:20" pos:end="119:20">=</operator> <literal type="number" pos:start="119:22" pos:end="119:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:30"><expr pos:start="121:5" pos:end="121:29"><name pos:start="121:5" pos:end="121:21"><name pos:start="121:5" pos:end="121:8">hdev</name><operator pos:start="121:9" pos:end="121:10">-&gt;</operator><name pos:start="121:11" pos:end="121:21">log_enabled</name></name> <operator pos:start="121:23" pos:end="121:23">=</operator> <name pos:start="121:25" pos:end="121:29">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:26"><expr pos:start="123:5" pos:end="123:25"><name pos:start="123:5" pos:end="123:17"><name pos:start="123:5" pos:end="123:8">hdev</name><operator pos:start="123:9" pos:end="123:10">-&gt;</operator><name pos:start="123:11" pos:end="123:17">started</name></name> <operator pos:start="123:19" pos:end="123:19">=</operator> <name pos:start="123:21" pos:end="123:25">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:33"><expr pos:start="125:5" pos:end="125:32"><name pos:start="125:5" pos:end="125:24"><name pos:start="125:5" pos:end="125:8">hdev</name><operator pos:start="125:9" pos:end="125:10">-&gt;</operator><name pos:start="125:11" pos:end="125:24">memory_changed</name></name> <operator pos:start="125:26" pos:end="125:26">=</operator> <name pos:start="125:28" pos:end="125:32">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:76"><expr pos:start="127:5" pos:end="127:75"><call pos:start="127:5" pos:end="127:75"><name pos:start="127:5" pos:end="127:28">memory_listener_register</name><argument_list pos:start="127:29" pos:end="127:75">(<argument pos:start="127:30" pos:end="127:51"><expr pos:start="127:30" pos:end="127:51"><operator pos:start="127:30" pos:end="127:30">&amp;</operator><name pos:start="127:31" pos:end="127:51"><name pos:start="127:31" pos:end="127:34">hdev</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:51">memory_listener</name></name></expr></argument>, <argument pos:start="127:54" pos:end="127:74"><expr pos:start="127:54" pos:end="127:74"><operator pos:start="127:54" pos:end="127:54">&amp;</operator><name pos:start="127:55" pos:end="127:74">address_space_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>

<label pos:start="131:1" pos:end="131:8"><name pos:start="131:1" pos:end="131:7">fail_vq</name>:</label>

    <while pos:start="133:5" pos:end="137:5">while <condition pos:start="133:11" pos:end="133:20">(<expr pos:start="133:12" pos:end="133:19"><operator pos:start="133:12" pos:end="133:13">--</operator><name pos:start="133:14" pos:end="133:14">i</name> <operator pos:start="133:16" pos:end="133:17">&gt;=</operator> <literal type="number" pos:start="133:19" pos:end="133:19">0</literal></expr>)</condition> <block pos:start="133:22" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:47">

        <expr_stmt pos:start="135:9" pos:end="135:47"><expr pos:start="135:9" pos:end="135:46"><call pos:start="135:9" pos:end="135:46"><name pos:start="135:9" pos:end="135:31">vhost_virtqueue_cleanup</name><argument_list pos:start="135:32" pos:end="135:46">(<argument pos:start="135:33" pos:end="135:45"><expr pos:start="135:33" pos:end="135:45"><name pos:start="135:33" pos:end="135:41"><name pos:start="135:33" pos:end="135:36">hdev</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:41">vqs</name></name> <operator pos:start="135:43" pos:end="135:43">+</operator> <name pos:start="135:45" pos:end="135:45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

<label pos:start="139:1" pos:end="139:5"><name pos:start="139:1" pos:end="139:4">fail</name>:</label>

    <expr_stmt pos:start="141:5" pos:end="141:15"><expr pos:start="141:5" pos:end="141:14"><name pos:start="141:5" pos:end="141:5">r</name> <operator pos:start="141:7" pos:end="141:7">=</operator> <operator pos:start="141:9" pos:end="141:9">-</operator><name pos:start="141:10" pos:end="141:14">errno</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:49"><expr pos:start="143:5" pos:end="143:48"><call pos:start="143:5" pos:end="143:48"><name pos:start="143:5" pos:end="143:42"><name pos:start="143:5" pos:end="143:8">hdev</name><operator pos:start="143:9" pos:end="143:10">-&gt;</operator><name pos:start="143:11" pos:end="143:19">vhost_ops</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:42">vhost_backend_cleanup</name></name><argument_list pos:start="143:43" pos:end="143:48">(<argument pos:start="143:44" pos:end="143:47"><expr pos:start="143:44" pos:end="143:47"><name pos:start="143:44" pos:end="143:47">hdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="145:5" pos:end="145:13">return <expr pos:start="145:12" pos:end="145:12"><name pos:start="145:12" pos:end="145:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
