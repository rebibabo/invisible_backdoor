<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4272.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">GenericList</name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type><name pos:start="1:21" pos:end="1:39">qmp_input_next_list</name><parameter_list pos:start="1:40" pos:end="3:52">(<parameter pos:start="1:41" pos:end="1:50"><decl pos:start="1:41" pos:end="1:50"><type pos:start="1:41" pos:end="1:50"><name pos:start="1:41" pos:end="1:47">Visitor</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">v</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><name pos:start="1:53" pos:end="1:63">GenericList</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier><modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">list</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:51"><decl pos:start="3:41" pos:end="3:51"><type pos:start="3:41" pos:end="3:51"><name pos:start="3:41" pos:end="3:46">size_t</name></type> <name pos:start="3:48" pos:end="3:51">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:17">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">QmpInputVisitor</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">qiv</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><call pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:33">to_qiv</name><argument_list pos:start="7:34" pos:end="7:36">(<argument pos:start="7:35" pos:end="7:35"><expr pos:start="7:35" pos:end="7:35"><name pos:start="7:35" pos:end="7:35">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">GenericList</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:22">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">StackObject</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">so</name> <init pos:start="11:21" pos:end="11:52">= <expr pos:start="11:23" pos:end="11:52"><operator pos:start="11:23" pos:end="11:23">&amp;</operator><name pos:start="11:24" pos:end="11:52"><name pos:start="11:24" pos:end="11:26">qiv</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:33">stack</name><index pos:start="11:34" pos:end="11:52">[<expr pos:start="11:35" pos:end="11:51"><name pos:start="11:35" pos:end="11:47"><name pos:start="11:35" pos:end="11:37">qiv</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:47">nb_stack</name></name> <operator pos:start="11:49" pos:end="11:49">-</operator> <literal type="number" pos:start="11:51" pos:end="11:51">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:19">(<expr pos:start="15:9" pos:end="15:18"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:18"><name pos:start="15:10" pos:end="15:11">so</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:18">entry</name></name></expr>)</condition> <block pos:start="15:21" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:9">entry</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:21">g_malloc0</name><argument_list pos:start="23:22" pos:end="23:27">(<argument pos:start="23:23" pos:end="23:26"><expr pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:18">(<expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:10">so</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:17">first</name></name></expr>)</condition> <block pos:start="25:20" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:26">

        <expr_stmt pos:start="27:9" pos:end="27:22"><expr pos:start="27:9" pos:end="27:21"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:13">list</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:21">entry</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:10">so</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:17">first</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:25">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="35:5">else <block pos:start="31:12" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:30">

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:21"><operator pos:start="33:9" pos:end="33:9">(</operator><operator pos:start="33:10" pos:end="33:10">*</operator><name pos:start="33:11" pos:end="33:14">list</name><operator pos:start="33:15" pos:end="33:15">)</operator><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:21">next</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:29">entry</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="39:5" pos:end="39:17">return <expr pos:start="39:12" pos:end="39:16"><name pos:start="39:12" pos:end="39:16">entry</name></expr>;</return>

</block_content>}</block></function>
</unit>
