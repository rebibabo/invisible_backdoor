<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23880.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:39">decode_hrd_parameters</name><parameter_list pos:start="1:40" pos:end="1:65">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:51">H264Context</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">h</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:64"><decl pos:start="1:57" pos:end="1:64"><type pos:start="1:57" pos:end="1:64"><name pos:start="1:57" pos:end="1:59">SPS</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">sps</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">cpb_count</name></decl>, <decl pos:start="5:20" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:20">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:45"><expr pos:start="7:5" pos:end="7:44"><name pos:start="7:5" pos:end="7:13">cpb_count</name> <operator pos:start="7:15" pos:end="7:15">=</operator> <call pos:start="7:17" pos:end="7:40"><name pos:start="7:17" pos:end="7:32">get_ue_golomb_31</name><argument_list pos:start="7:33" pos:end="7:40">(<argument pos:start="7:34" pos:end="7:39"><expr pos:start="7:34" pos:end="7:39"><operator pos:start="7:34" pos:end="7:34">&amp;</operator><name pos:start="7:35" pos:end="7:39"><name pos:start="7:35" pos:end="7:35">h</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:39">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="7:42" pos:end="7:42">+</operator> <literal type="number" pos:start="7:44" pos:end="7:44">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:17">cpb_count</name> <operator pos:start="11:19" pos:end="11:19">&gt;</operator> <literal type="number" pos:start="11:21" pos:end="11:23">32U</literal></expr>)</condition> <block pos:start="11:26" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:35">

        <expr_stmt pos:start="13:9" pos:end="13:76"><expr pos:start="13:9" pos:end="13:75"><call pos:start="13:9" pos:end="13:75"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:75">(<argument pos:start="13:16" pos:end="13:23"><expr pos:start="13:16" pos:end="13:23"><name pos:start="13:16" pos:end="13:23"><name pos:start="13:16" pos:end="13:16">h</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:23">avctx</name></name></expr></argument>, <argument pos:start="13:26" pos:end="13:37"><expr pos:start="13:26" pos:end="13:37"><name pos:start="13:26" pos:end="13:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:40" pos:end="13:63"><expr pos:start="13:40" pos:end="13:63"><literal type="string" pos:start="13:40" pos:end="13:63">"cpb_count %d invalid\n"</literal></expr></argument>, <argument pos:start="13:66" pos:end="13:74"><expr pos:start="13:66" pos:end="13:74"><name pos:start="13:66" pos:end="13:74">cpb_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:35">return <expr pos:start="15:16" pos:end="15:34"><name pos:start="15:16" pos:end="15:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><call pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:12">get_bits</name><argument_list pos:start="21:13" pos:end="21:23">(<argument pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:19"><operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:19"><name pos:start="21:15" pos:end="21:15">h</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:19">gb</name></name></expr></argument>, <argument pos:start="21:22" pos:end="21:22"><expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:26" pos:end="21:45">/* bit_rate_scale */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><call pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:12">get_bits</name><argument_list pos:start="23:13" pos:end="23:23">(<argument pos:start="23:14" pos:end="23:19"><expr pos:start="23:14" pos:end="23:19"><operator pos:start="23:14" pos:end="23:14">&amp;</operator><name pos:start="23:15" pos:end="23:19"><name pos:start="23:15" pos:end="23:15">h</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:19">gb</name></name></expr></argument>, <argument pos:start="23:22" pos:end="23:22"><expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:26" pos:end="23:45">/* cpb_size_scale */</comment>

    <for pos:start="25:5" pos:end="33:5">for <control pos:start="25:9" pos:end="25:35">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:30"><expr pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:29">cpb_count</name></expr>;</condition> <incr pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><name pos:start="25:32" pos:end="25:32">i</name><operator pos:start="25:33" pos:end="25:34">++</operator></expr></incr>)</control> <block pos:start="25:37" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:26">

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><call pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:26">get_ue_golomb_long</name><argument_list pos:start="27:27" pos:end="27:34">(<argument pos:start="27:28" pos:end="27:33"><expr pos:start="27:28" pos:end="27:33"><operator pos:start="27:28" pos:end="27:28">&amp;</operator><name pos:start="27:29" pos:end="27:33"><name pos:start="27:29" pos:end="27:29">h</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:37" pos:end="27:63">/* bit_rate_value_minus1 */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><call pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:26">get_ue_golomb_long</name><argument_list pos:start="29:27" pos:end="29:34">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><operator pos:start="29:28" pos:end="29:28">&amp;</operator><name pos:start="29:29" pos:end="29:33"><name pos:start="29:29" pos:end="29:29">h</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:37" pos:end="29:63">/* cpb_size_value_minus1 */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><call pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:17">get_bits1</name><argument_list pos:start="31:18" pos:end="31:25">(<argument pos:start="31:19" pos:end="31:24"><expr pos:start="31:19" pos:end="31:24"><operator pos:start="31:19" pos:end="31:19">&amp;</operator><name pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:20">h</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:24">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="block" pos:start="31:37" pos:end="31:50">/* cbr_flag */</comment>

    </block_content>}</block></for>

    <expr_stmt pos:start="35:5" pos:end="35:68"><expr pos:start="35:5" pos:end="35:67"><name pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:7">sps</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:41">initial_cpb_removal_delay_length</name></name> <operator pos:start="35:43" pos:end="35:43">=</operator> <call pos:start="35:45" pos:end="35:63"><name pos:start="35:45" pos:end="35:52">get_bits</name><argument_list pos:start="35:53" pos:end="35:63">(<argument pos:start="35:54" pos:end="35:59"><expr pos:start="35:54" pos:end="35:59"><operator pos:start="35:54" pos:end="35:54">&amp;</operator><name pos:start="35:55" pos:end="35:59"><name pos:start="35:55" pos:end="35:55">h</name><operator pos:start="35:56" pos:end="35:57">-&gt;</operator><name pos:start="35:58" pos:end="35:59">gb</name></name></expr></argument>, <argument pos:start="35:62" pos:end="35:62"><expr pos:start="35:62" pos:end="35:62"><literal type="number" pos:start="35:62" pos:end="35:62">5</literal></expr></argument>)</argument_list></call> <operator pos:start="35:65" pos:end="35:65">+</operator> <literal type="number" pos:start="35:67" pos:end="35:67">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:68"><expr pos:start="37:5" pos:end="37:67"><name pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:7">sps</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:33">cpb_removal_delay_length</name></name>         <operator pos:start="37:43" pos:end="37:43">=</operator> <call pos:start="37:45" pos:end="37:63"><name pos:start="37:45" pos:end="37:52">get_bits</name><argument_list pos:start="37:53" pos:end="37:63">(<argument pos:start="37:54" pos:end="37:59"><expr pos:start="37:54" pos:end="37:59"><operator pos:start="37:54" pos:end="37:54">&amp;</operator><name pos:start="37:55" pos:end="37:59"><name pos:start="37:55" pos:end="37:55">h</name><operator pos:start="37:56" pos:end="37:57">-&gt;</operator><name pos:start="37:58" pos:end="37:59">gb</name></name></expr></argument>, <argument pos:start="37:62" pos:end="37:62"><expr pos:start="37:62" pos:end="37:62"><literal type="number" pos:start="37:62" pos:end="37:62">5</literal></expr></argument>)</argument_list></call> <operator pos:start="37:65" pos:end="37:65">+</operator> <literal type="number" pos:start="37:67" pos:end="37:67">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:68"><expr pos:start="39:5" pos:end="39:67"><name pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:7">sps</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:32">dpb_output_delay_length</name></name>          <operator pos:start="39:43" pos:end="39:43">=</operator> <call pos:start="39:45" pos:end="39:63"><name pos:start="39:45" pos:end="39:52">get_bits</name><argument_list pos:start="39:53" pos:end="39:63">(<argument pos:start="39:54" pos:end="39:59"><expr pos:start="39:54" pos:end="39:59"><operator pos:start="39:54" pos:end="39:54">&amp;</operator><name pos:start="39:55" pos:end="39:59"><name pos:start="39:55" pos:end="39:55">h</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:59">gb</name></name></expr></argument>, <argument pos:start="39:62" pos:end="39:62"><expr pos:start="39:62" pos:end="39:62"><literal type="number" pos:start="39:62" pos:end="39:62">5</literal></expr></argument>)</argument_list></call> <operator pos:start="39:65" pos:end="39:65">+</operator> <literal type="number" pos:start="39:67" pos:end="39:67">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:64"><expr pos:start="41:5" pos:end="41:63"><name pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:7">sps</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:27">time_offset_length</name></name>               <operator pos:start="41:43" pos:end="41:43">=</operator> <call pos:start="41:45" pos:end="41:63"><name pos:start="41:45" pos:end="41:52">get_bits</name><argument_list pos:start="41:53" pos:end="41:63">(<argument pos:start="41:54" pos:end="41:59"><expr pos:start="41:54" pos:end="41:59"><operator pos:start="41:54" pos:end="41:54">&amp;</operator><name pos:start="41:55" pos:end="41:59"><name pos:start="41:55" pos:end="41:55">h</name><operator pos:start="41:56" pos:end="41:57">-&gt;</operator><name pos:start="41:58" pos:end="41:59">gb</name></name></expr></argument>, <argument pos:start="41:62" pos:end="41:62"><expr pos:start="41:62" pos:end="41:62"><literal type="number" pos:start="41:62" pos:end="41:62">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:54"><expr pos:start="43:5" pos:end="43:53"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:7">sps</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:16">cpb_cnt</name></name>                          <operator pos:start="43:43" pos:end="43:43">=</operator> <name pos:start="43:45" pos:end="43:53">cpb_count</name></expr>;</expr_stmt>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
