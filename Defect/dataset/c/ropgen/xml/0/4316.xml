<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4316.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">sd_blk_read</name><parameter_list pos:start="1:24" pos:end="1:65">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:31">SDState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">sd</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">uint64_t</name></type> <name pos:start="1:47" pos:end="1:50">addr</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:60">uint32_t</name></type> <name pos:start="1:62" pos:end="1:64">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:54">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:16">end</name> <init pos:start="5:18" pos:end="5:29">= <expr pos:start="5:20" pos:end="5:29"><name pos:start="5:20" pos:end="5:23">addr</name> <operator pos:start="5:25" pos:end="5:25">+</operator> <name pos:start="5:27" pos:end="5:29">len</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="11:44"><expr pos:start="9:5" pos:end="11:43"><call pos:start="9:5" pos:end="11:43"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="11:43">(<argument pos:start="9:13" pos:end="9:54"><expr pos:start="9:13" pos:end="9:54"><literal type="string" pos:start="9:13" pos:end="9:54">"sd_blk_read: addr = 0x%08llx, len = %d\n"</literal></expr></argument>,

            <argument pos:start="11:13" pos:end="11:37"><expr pos:start="11:13" pos:end="11:37"><operator pos:start="11:13" pos:end="11:13">(</operator><name pos:start="11:14" pos:end="11:21">unsigned</name> <name pos:start="11:23" pos:end="11:26">long</name> <name pos:start="11:28" pos:end="11:31">long</name><operator pos:start="11:32" pos:end="11:32">)</operator> <name pos:start="11:34" pos:end="11:37">addr</name></expr></argument>, <argument pos:start="11:40" pos:end="11:42"><expr pos:start="11:40" pos:end="11:42"><name pos:start="11:40" pos:end="11:42">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:68">(<expr pos:start="13:9" pos:end="13:67"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:17"><name pos:start="13:10" pos:end="13:11">sd</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:17">bdrv</name></name> <operator pos:start="13:19" pos:end="13:20">||</operator> <call pos:start="13:22" pos:end="13:63"><name pos:start="13:22" pos:end="13:30">bdrv_read</name><argument_list pos:start="13:31" pos:end="13:63">(<argument pos:start="13:32" pos:end="13:39"><expr pos:start="13:32" pos:end="13:39"><name pos:start="13:32" pos:end="13:39"><name pos:start="13:32" pos:end="13:33">sd</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:39">bdrv</name></name></expr></argument>, <argument pos:start="13:42" pos:end="13:50"><expr pos:start="13:42" pos:end="13:50"><name pos:start="13:42" pos:end="13:45">addr</name> <operator pos:start="13:47" pos:end="13:48">&gt;&gt;</operator> <literal type="number" pos:start="13:50" pos:end="13:50">9</literal></expr></argument>, <argument pos:start="13:53" pos:end="13:59"><expr pos:start="13:53" pos:end="13:59"><name pos:start="13:53" pos:end="13:59"><name pos:start="13:53" pos:end="13:54">sd</name><operator pos:start="13:55" pos:end="13:56">-&gt;</operator><name pos:start="13:57" pos:end="13:59">buf</name></name></expr></argument>, <argument pos:start="13:62" pos:end="13:62"><expr pos:start="13:62" pos:end="13:62"><literal type="number" pos:start="13:62" pos:end="13:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="13:65" pos:end="13:65">&lt;</operator> <literal type="number" pos:start="13:67" pos:end="13:67">0</literal></expr>)</condition> <block pos:start="13:70" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:66"><expr pos:start="15:9" pos:end="15:65"><call pos:start="15:9" pos:end="15:65"><name pos:start="15:9" pos:end="15:15">fprintf</name><argument_list pos:start="15:16" pos:end="15:65">(<argument pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22">stderr</name></expr></argument>, <argument pos:start="15:25" pos:end="15:64"><expr pos:start="15:25" pos:end="15:64"><literal type="string" pos:start="15:25" pos:end="15:64">"sd_blk_read: read error on host side\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="41:54"><if pos:start="23:5" pos:end="39:5">if <condition pos:start="23:8" pos:end="23:34">(<expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:11">end</name> <operator pos:start="23:13" pos:end="23:13">&gt;</operator> <operator pos:start="23:15" pos:end="23:15">(</operator><name pos:start="23:16" pos:end="23:19">addr</name> <operator pos:start="23:21" pos:end="23:21">&amp;</operator> <operator pos:start="23:23" pos:end="23:23">~</operator><literal type="number" pos:start="23:24" pos:end="23:26">511</literal><operator pos:start="23:27" pos:end="23:27">)</operator> <operator pos:start="23:29" pos:end="23:29">+</operator> <literal type="number" pos:start="23:31" pos:end="23:33">512</literal></expr>)</condition> <block pos:start="23:36" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:66">

        <expr_stmt pos:start="25:9" pos:end="25:69"><expr pos:start="25:9" pos:end="25:68"><call pos:start="25:9" pos:end="25:68"><name pos:start="25:9" pos:end="25:14">memcpy</name><argument_list pos:start="25:15" pos:end="25:68">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:17">sd</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:23">data</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:47"><expr pos:start="25:26" pos:end="25:47"><name pos:start="25:26" pos:end="25:32"><name pos:start="25:26" pos:end="25:27">sd</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:32">buf</name></name> <operator pos:start="25:34" pos:end="25:34">+</operator> <operator pos:start="25:36" pos:end="25:36">(</operator><name pos:start="25:37" pos:end="25:40">addr</name> <operator pos:start="25:42" pos:end="25:42">&amp;</operator> <literal type="number" pos:start="25:44" pos:end="25:46">511</literal><operator pos:start="25:47" pos:end="25:47">)</operator></expr></argument>, <argument pos:start="25:50" pos:end="25:67"><expr pos:start="25:50" pos:end="25:67"><literal type="number" pos:start="25:50" pos:end="25:54">512</literal> <operator pos:start="25:54" pos:end="25:54">-</operator> <operator pos:start="25:56" pos:end="25:56">(</operator><name pos:start="25:57" pos:end="25:60">addr</name> <operator pos:start="25:62" pos:end="25:62">&amp;</operator> <literal type="number" pos:start="25:64" pos:end="25:66">511</literal><operator pos:start="25:67" pos:end="25:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:58">(<expr pos:start="29:13" pos:end="29:57"><call pos:start="29:13" pos:end="29:53"><name pos:start="29:13" pos:end="29:21">bdrv_read</name><argument_list pos:start="29:22" pos:end="29:53">(<argument pos:start="29:23" pos:end="29:30"><expr pos:start="29:23" pos:end="29:30"><name pos:start="29:23" pos:end="29:30"><name pos:start="29:23" pos:end="29:24">sd</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:30">bdrv</name></name></expr></argument>, <argument pos:start="29:33" pos:end="29:40"><expr pos:start="29:33" pos:end="29:40"><name pos:start="29:33" pos:end="29:35">end</name> <operator pos:start="29:37" pos:end="29:38">&gt;&gt;</operator> <literal type="number" pos:start="29:40" pos:end="29:40">9</literal></expr></argument>, <argument pos:start="29:43" pos:end="29:49"><expr pos:start="29:43" pos:end="29:49"><name pos:start="29:43" pos:end="29:49"><name pos:start="29:43" pos:end="29:44">sd</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:49">buf</name></name></expr></argument>, <argument pos:start="29:52" pos:end="29:52"><expr pos:start="29:52" pos:end="29:52"><literal type="number" pos:start="29:52" pos:end="29:52">1</literal></expr></argument>)</argument_list></call> <operator pos:start="29:55" pos:end="29:55">&lt;</operator> <literal type="number" pos:start="29:57" pos:end="29:57">0</literal></expr>)</condition> <block pos:start="29:60" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:19">

            <expr_stmt pos:start="31:13" pos:end="31:70"><expr pos:start="31:13" pos:end="31:69"><call pos:start="31:13" pos:end="31:69"><name pos:start="31:13" pos:end="31:19">fprintf</name><argument_list pos:start="31:20" pos:end="31:69">(<argument pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:26"><name pos:start="31:21" pos:end="31:26">stderr</name></expr></argument>, <argument pos:start="31:29" pos:end="31:68"><expr pos:start="31:29" pos:end="31:68"><literal type="string" pos:start="31:29" pos:end="31:68">"sd_blk_read: read error on host side\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:66"><expr pos:start="37:9" pos:end="37:65"><call pos:start="37:9" pos:end="37:65"><name pos:start="37:9" pos:end="37:14">memcpy</name><argument_list pos:start="37:15" pos:end="37:65">(<argument pos:start="37:16" pos:end="37:44"><expr pos:start="37:16" pos:end="37:44"><name pos:start="37:16" pos:end="37:23"><name pos:start="37:16" pos:end="37:17">sd</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:23">data</name></name> <operator pos:start="37:25" pos:end="37:25">+</operator> <literal type="number" pos:start="37:27" pos:end="37:31">512</literal> <operator pos:start="37:31" pos:end="37:31">-</operator> <operator pos:start="37:33" pos:end="37:33">(</operator><name pos:start="37:34" pos:end="37:37">addr</name> <operator pos:start="37:39" pos:end="37:39">&amp;</operator> <literal type="number" pos:start="37:41" pos:end="37:43">511</literal><operator pos:start="37:44" pos:end="37:44">)</operator></expr></argument>, <argument pos:start="37:47" pos:end="37:53"><expr pos:start="37:47" pos:end="37:53"><name pos:start="37:47" pos:end="37:53"><name pos:start="37:47" pos:end="37:48">sd</name><operator pos:start="37:49" pos:end="37:50">-&gt;</operator><name pos:start="37:51" pos:end="37:53">buf</name></name></expr></argument>, <argument pos:start="37:56" pos:end="37:64"><expr pos:start="37:56" pos:end="37:64"><name pos:start="37:56" pos:end="37:58">end</name> <operator pos:start="37:60" pos:end="37:60">&amp;</operator> <literal type="number" pos:start="37:62" pos:end="37:64">511</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="41:54">else<block type="pseudo" pos:start="41:9" pos:end="41:54"><block_content pos:start="41:9" pos:end="41:54">

        <expr_stmt pos:start="41:9" pos:end="41:54"><expr pos:start="41:9" pos:end="41:53"><call pos:start="41:9" pos:end="41:53"><name pos:start="41:9" pos:end="41:14">memcpy</name><argument_list pos:start="41:15" pos:end="41:53">(<argument pos:start="41:16" pos:end="41:23"><expr pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:17">sd</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:23">data</name></name></expr></argument>, <argument pos:start="41:26" pos:end="41:47"><expr pos:start="41:26" pos:end="41:47"><name pos:start="41:26" pos:end="41:32"><name pos:start="41:26" pos:end="41:27">sd</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:32">buf</name></name> <operator pos:start="41:34" pos:end="41:34">+</operator> <operator pos:start="41:36" pos:end="41:36">(</operator><name pos:start="41:37" pos:end="41:40">addr</name> <operator pos:start="41:42" pos:end="41:42">&amp;</operator> <literal type="number" pos:start="41:44" pos:end="41:46">511</literal><operator pos:start="41:47" pos:end="41:47">)</operator></expr></argument>, <argument pos:start="41:50" pos:end="41:52"><expr pos:start="41:50" pos:end="41:52"><name pos:start="41:50" pos:end="41:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
