<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19763.c" pos:tabs="8"><function pos:start="1:1" pos:end="403:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_MPV_encode_picture</name><parameter_list pos:start="1:26" pos:end="3:60">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><name pos:start="1:27" pos:end="1:40">AVCodecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">avctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:57">AVPacket</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">pkt</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:42"><decl pos:start="3:27" pos:end="3:42"><type pos:start="3:27" pos:end="3:42"><name pos:start="3:27" pos:end="3:33">AVFrame</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:42">pic_arg</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:59"><decl pos:start="3:45" pos:end="3:59"><type pos:start="3:45" pos:end="3:59"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:59">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="403:1">{<block_content pos:start="7:5" pos:end="401:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:25">stuffing_count</name></decl>, <decl pos:start="9:28" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:30">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:21">context_count</name> <init pos:start="11:23" pos:end="11:46">= <expr pos:start="11:25" pos:end="11:46"><name pos:start="11:25" pos:end="11:46"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:46">slice_context_count</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:28">picture_in_gop_number</name></name><operator pos:start="15:29" pos:end="15:30">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:43">(<expr pos:start="19:9" pos:end="19:42"><call pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:26">load_input_picture</name><argument_list pos:start="19:27" pos:end="19:38">(<argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><name pos:start="19:28" pos:end="19:28">s</name></expr></argument>, <argument pos:start="19:31" pos:end="19:37"><expr pos:start="19:31" pos:end="19:37"><name pos:start="19:31" pos:end="19:37">pic_arg</name></expr></argument>)</argument_list></call> <operator pos:start="19:40" pos:end="19:40">&lt;</operator> <literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:36">(<expr pos:start="25:9" pos:end="25:35"><call pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:28">select_input_picture</name><argument_list pos:start="25:29" pos:end="25:31">(<argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">s</name></expr></argument>)</argument_list></call> <operator pos:start="25:33" pos:end="25:33">&lt;</operator> <literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr>)</condition> <block pos:start="25:38" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:17">/* output? */</comment>

    <if_stmt pos:start="35:5" pos:end="391:5"><if pos:start="35:5" pos:end="387:5">if <condition pos:start="35:8" pos:end="35:33">(<expr pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:22">new_picture</name><operator pos:start="35:23" pos:end="35:23">.</operator><name pos:start="35:24" pos:end="35:24">f</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:29">data</name><index pos:start="35:30" pos:end="35:32">[<expr pos:start="35:31" pos:end="35:31"><literal type="number" pos:start="35:31" pos:end="35:31">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="35:35" pos:end="387:5">{<block_content pos:start="37:9" pos:end="385:87">

        <if_stmt pos:start="37:9" pos:end="39:23"><if pos:start="37:9" pos:end="39:23">if <condition pos:start="37:12" pos:end="37:104">(<expr pos:start="37:13" pos:end="37:103"><operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:16">ret</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:98"><name pos:start="37:20" pos:end="37:35">ff_alloc_packet2</name><argument_list pos:start="37:36" pos:end="37:98">(<argument pos:start="37:37" pos:end="37:41"><expr pos:start="37:37" pos:end="37:41"><name pos:start="37:37" pos:end="37:41">avctx</name></expr></argument>, <argument pos:start="37:44" pos:end="37:46"><expr pos:start="37:44" pos:end="37:46"><name pos:start="37:44" pos:end="37:46">pkt</name></expr></argument>, <argument pos:start="37:49" pos:end="37:97"><expr pos:start="37:49" pos:end="37:97"><name pos:start="37:49" pos:end="37:59"><name pos:start="37:49" pos:end="37:49">s</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:59">mb_width</name></name><operator pos:start="37:60" pos:end="37:60">*</operator><name pos:start="37:61" pos:end="37:72"><name pos:start="37:61" pos:end="37:61">s</name><operator pos:start="37:62" pos:end="37:63">-&gt;</operator><name pos:start="37:64" pos:end="37:72">mb_height</name></name><operator pos:start="37:73" pos:end="37:73">*</operator><operator pos:start="37:74" pos:end="37:74">(</operator><name pos:start="37:75" pos:end="37:86">MAX_MB_BYTES</name><operator pos:start="37:87" pos:end="37:87">+</operator><literal type="number" pos:start="37:88" pos:end="37:90">100</literal><operator pos:start="37:91" pos:end="37:91">)</operator><operator pos:start="37:92" pos:end="37:92">+</operator><literal type="number" pos:start="37:93" pos:end="37:97">10000</literal></expr></argument>)</argument_list></call><operator pos:start="37:99" pos:end="37:99">)</operator> <operator pos:start="37:101" pos:end="37:101">&lt;</operator> <literal type="number" pos:start="37:103" pos:end="37:103">0</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:23"><block_content pos:start="39:13" pos:end="39:23">

            <return pos:start="39:13" pos:end="39:23">return <expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="51:9"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:23">(<expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:22">mb_info</name></name></expr>)</condition> <block pos:start="41:25" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:68">

            <expr_stmt pos:start="43:13" pos:end="47:62"><expr pos:start="43:13" pos:end="47:61"><name pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:26">mb_info_ptr</name></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <call pos:start="43:30" pos:end="47:61"><name pos:start="43:30" pos:end="43:52">av_packet_new_side_data</name><argument_list pos:start="43:53" pos:end="47:61">(<argument pos:start="43:54" pos:end="43:56"><expr pos:start="43:54" pos:end="43:56"><name pos:start="43:54" pos:end="43:56">pkt</name></expr></argument>,

                                 <argument pos:start="45:34" pos:end="45:57"><expr pos:start="45:34" pos:end="45:57"><name pos:start="45:34" pos:end="45:57">AV_PKT_DATA_H263_MB_INFO</name></expr></argument>,

                                 <argument pos:start="47:34" pos:end="47:60"><expr pos:start="47:34" pos:end="47:60"><name pos:start="47:34" pos:end="47:44"><name pos:start="47:34" pos:end="47:34">s</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:44">mb_width</name></name><operator pos:start="47:45" pos:end="47:45">*</operator><name pos:start="47:46" pos:end="47:57"><name pos:start="47:46" pos:end="47:46">s</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:57">mb_height</name></name><operator pos:start="47:58" pos:end="47:58">*</operator><literal type="number" pos:start="47:59" pos:end="47:60">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:68"><expr pos:start="49:13" pos:end="49:67"><name pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:27">prev_mb_info</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <name pos:start="49:31" pos:end="49:45"><name pos:start="49:31" pos:end="49:31">s</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:45">last_mb_info</name></name> <operator pos:start="49:47" pos:end="49:47">=</operator> <name pos:start="49:49" pos:end="49:63"><name pos:start="49:49" pos:end="49:49">s</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:63">mb_info_size</name></name> <operator pos:start="49:65" pos:end="49:65">=</operator> <literal type="number" pos:start="49:67" pos:end="49:67">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="55:9" pos:end="71:9">for <control pos:start="55:13" pos:end="55:43">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:38"><expr pos:start="55:21" pos:end="55:37"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:37">context_count</name></expr>;</condition> <incr pos:start="55:40" pos:end="55:42"><expr pos:start="55:40" pos:end="55:42"><name pos:start="55:40" pos:end="55:40">i</name><operator pos:start="55:41" pos:end="55:42">++</operator></expr></incr>)</control> <block pos:start="55:45" pos:end="71:9">{<block_content pos:start="57:13" pos:end="69:73">

            <decl_stmt pos:start="57:13" pos:end="57:59"><decl pos:start="57:13" pos:end="57:58"><type pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">int</name></type> <name pos:start="57:17" pos:end="57:23">start_y</name> <init pos:start="57:25" pos:end="57:58">= <expr pos:start="57:27" pos:end="57:58"><name pos:start="57:27" pos:end="57:46"><name pos:start="57:27" pos:end="57:27">s</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:43">thread_context</name><index pos:start="57:44" pos:end="57:46">[<expr pos:start="57:45" pos:end="57:45"><name pos:start="57:45" pos:end="57:45">i</name></expr>]</index></name><operator pos:start="57:47" pos:end="57:48">-&gt;</operator><name pos:start="57:49" pos:end="57:58">start_mb_y</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="59:13" pos:end="59:59"><decl pos:start="59:13" pos:end="59:58"><type pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">int</name></type>   <name pos:start="59:19" pos:end="59:23">end_y</name> <init pos:start="59:25" pos:end="59:58">= <expr pos:start="59:27" pos:end="59:58"><name pos:start="59:27" pos:end="59:46"><name pos:start="59:27" pos:end="59:27">s</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:43">thread_context</name><index pos:start="59:44" pos:end="59:46">[<expr pos:start="59:45" pos:end="59:45"><name pos:start="59:45" pos:end="59:45">i</name></expr>]</index></name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator>  <name pos:start="59:51" pos:end="59:58">end_mb_y</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="61:13" pos:end="61:39"><decl pos:start="61:13" pos:end="61:38"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:17">h</name>       <init pos:start="61:25" pos:end="61:38">= <expr pos:start="61:27" pos:end="61:38"><name pos:start="61:27" pos:end="61:38"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:38">mb_height</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="63:13" pos:end="63:87"><decl pos:start="63:13" pos:end="63:86"><type pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:19">uint8_t</name> <modifier pos:start="63:21" pos:end="63:21">*</modifier></type><name pos:start="63:22" pos:end="63:26">start</name> <init pos:start="63:28" pos:end="63:86">= <expr pos:start="63:30" pos:end="63:86"><name pos:start="63:30" pos:end="63:38"><name pos:start="63:30" pos:end="63:32">pkt</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:38">data</name></name> <operator pos:start="63:40" pos:end="63:40">+</operator> <operator pos:start="63:42" pos:end="63:42">(</operator><name pos:start="63:43" pos:end="63:48">size_t</name><operator pos:start="63:49" pos:end="63:49">)</operator><operator pos:start="63:50" pos:end="63:50">(</operator><operator pos:start="63:51" pos:end="63:51">(</operator><operator pos:start="63:52" pos:end="63:52">(</operator><name pos:start="63:53" pos:end="63:59">int64_t</name><operator pos:start="63:60" pos:end="63:60">)</operator> <name pos:start="63:62" pos:end="63:70"><name pos:start="63:62" pos:end="63:64">pkt</name><operator pos:start="63:65" pos:end="63:66">-&gt;</operator><name pos:start="63:67" pos:end="63:70">size</name></name><operator pos:start="63:71" pos:end="63:71">)</operator> <operator pos:start="63:73" pos:end="63:73">*</operator> <name pos:start="63:75" pos:end="63:81">start_y</name> <operator pos:start="63:83" pos:end="63:83">/</operator> <name pos:start="63:85" pos:end="63:85">h</name><operator pos:start="63:86" pos:end="63:86">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="65:13" pos:end="65:87"><decl pos:start="65:13" pos:end="65:86"><type pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:19">uint8_t</name> <modifier pos:start="65:21" pos:end="65:21">*</modifier></type><name pos:start="65:22" pos:end="65:24">end</name>   <init pos:start="65:28" pos:end="65:86">= <expr pos:start="65:30" pos:end="65:86"><name pos:start="65:30" pos:end="65:38"><name pos:start="65:30" pos:end="65:32">pkt</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:38">data</name></name> <operator pos:start="65:40" pos:end="65:40">+</operator> <operator pos:start="65:42" pos:end="65:42">(</operator><name pos:start="65:43" pos:end="65:48">size_t</name><operator pos:start="65:49" pos:end="65:49">)</operator><operator pos:start="65:50" pos:end="65:50">(</operator><operator pos:start="65:51" pos:end="65:51">(</operator><operator pos:start="65:52" pos:end="65:52">(</operator><name pos:start="65:53" pos:end="65:59">int64_t</name><operator pos:start="65:60" pos:end="65:60">)</operator> <name pos:start="65:62" pos:end="65:70"><name pos:start="65:62" pos:end="65:64">pkt</name><operator pos:start="65:65" pos:end="65:66">-&gt;</operator><name pos:start="65:67" pos:end="65:70">size</name></name><operator pos:start="65:71" pos:end="65:71">)</operator> <operator pos:start="65:73" pos:end="65:73">*</operator>   <name pos:start="65:77" pos:end="65:81">end_y</name> <operator pos:start="65:83" pos:end="65:83">/</operator> <name pos:start="65:85" pos:end="65:85">h</name><operator pos:start="65:86" pos:end="65:86">)</operator></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="69:13" pos:end="69:73"><expr pos:start="69:13" pos:end="69:72"><call pos:start="69:13" pos:end="69:72"><name pos:start="69:13" pos:end="69:25">init_put_bits</name><argument_list pos:start="69:26" pos:end="69:72">(<argument pos:start="69:27" pos:end="69:51"><expr pos:start="69:27" pos:end="69:51"><operator pos:start="69:27" pos:end="69:27">&amp;</operator><name pos:start="69:28" pos:end="69:47"><name pos:start="69:28" pos:end="69:28">s</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:44">thread_context</name><index pos:start="69:45" pos:end="69:47">[<expr pos:start="69:46" pos:end="69:46"><name pos:start="69:46" pos:end="69:46">i</name></expr>]</index></name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:51">pb</name></expr></argument>, <argument pos:start="69:54" pos:end="69:58"><expr pos:start="69:54" pos:end="69:58"><name pos:start="69:54" pos:end="69:58">start</name></expr></argument>, <argument pos:start="69:61" pos:end="69:71"><expr pos:start="69:61" pos:end="69:71"><name pos:start="69:61" pos:end="69:63">end</name> <operator pos:start="69:65" pos:end="69:65">-</operator> <name pos:start="69:67" pos:end="69:71">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="75:9" pos:end="75:50"><expr pos:start="75:9" pos:end="75:49"><name pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:20">pict_type</name></name> <operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:49"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:37">new_picture</name><operator pos:start="75:38" pos:end="75:38">.</operator><name pos:start="75:39" pos:end="75:39">f</name><operator pos:start="75:40" pos:end="75:40">.</operator><name pos:start="75:41" pos:end="75:49">pict_type</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="77:9" pos:end="77:19">//emms_c();</comment>

        <expr_stmt pos:start="79:9" pos:end="79:37"><expr pos:start="79:9" pos:end="79:36"><call pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:26">ff_MPV_frame_start</name><argument_list pos:start="79:27" pos:end="79:36">(<argument pos:start="79:28" pos:end="79:28"><expr pos:start="79:28" pos:end="79:28"><name pos:start="79:28" pos:end="79:28">s</name></expr></argument>, <argument pos:start="79:31" pos:end="79:35"><expr pos:start="79:31" pos:end="79:35"><name pos:start="79:31" pos:end="79:35">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="81:1" pos:end="81:10"><name pos:start="81:1" pos:end="81:9">vbv_retry</name>:</label>

        <if_stmt pos:start="83:9" pos:end="85:22"><if pos:start="83:9" pos:end="85:22">if <condition pos:start="83:12" pos:end="83:53">(<expr pos:start="83:13" pos:end="83:52"><call pos:start="83:13" pos:end="83:48"><name pos:start="83:13" pos:end="83:26">encode_picture</name><argument_list pos:start="83:27" pos:end="83:48">(<argument pos:start="83:28" pos:end="83:28"><expr pos:start="83:28" pos:end="83:28"><name pos:start="83:28" pos:end="83:28">s</name></expr></argument>, <argument pos:start="83:31" pos:end="83:47"><expr pos:start="83:31" pos:end="83:47"><name pos:start="83:31" pos:end="83:47"><name pos:start="83:31" pos:end="83:31">s</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:47">picture_number</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:50" pos:end="83:50">&lt;</operator> <literal type="number" pos:start="83:52" pos:end="83:52">0</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:22"><block_content pos:start="85:13" pos:end="85:22">

            <return pos:start="85:13" pos:end="85:22">return <expr pos:start="85:20" pos:end="85:21"><operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:44"><expr pos:start="89:9" pos:end="89:43"><name pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:13">avctx</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:26">header_bits</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:43"><name pos:start="89:30" pos:end="89:30">s</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:43">header_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:13">avctx</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:22">mv_bits</name></name>     <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:39"><name pos:start="91:30" pos:end="91:30">s</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:39">mv_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:42"><expr pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:13">avctx</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:24">misc_bits</name></name>   <operator pos:start="93:28" pos:end="93:28">=</operator> <name pos:start="93:30" pos:end="93:41"><name pos:start="93:30" pos:end="93:30">s</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:41">misc_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:43"><expr pos:start="95:9" pos:end="95:42"><name pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:13">avctx</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:25">i_tex_bits</name></name>  <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:42"><name pos:start="95:30" pos:end="95:30">s</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:42">i_tex_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:43"><expr pos:start="97:9" pos:end="97:42"><name pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:13">avctx</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:25">p_tex_bits</name></name>  <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:42"><name pos:start="97:30" pos:end="97:30">s</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:42">p_tex_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:40"><expr pos:start="99:9" pos:end="99:39"><name pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:13">avctx</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:22">i_count</name></name>     <operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:39"><name pos:start="99:30" pos:end="99:30">s</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:39">i_count</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="101:9" pos:end="101:35">// FIXME f/b_count in avctx</comment>

        <expr_stmt pos:start="103:9" pos:end="103:68"><expr pos:start="103:9" pos:end="103:67"><name pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:13">avctx</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:22">p_count</name></name>     <operator pos:start="103:28" pos:end="103:28">=</operator> <name pos:start="103:30" pos:end="103:38"><name pos:start="103:30" pos:end="103:30">s</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:38">mb_num</name></name> <operator pos:start="103:40" pos:end="103:40">-</operator> <name pos:start="103:42" pos:end="103:51"><name pos:start="103:42" pos:end="103:42">s</name><operator pos:start="103:43" pos:end="103:44">-&gt;</operator><name pos:start="103:45" pos:end="103:51">i_count</name></name> <operator pos:start="103:53" pos:end="103:53">-</operator> <name pos:start="103:55" pos:end="103:67"><name pos:start="103:55" pos:end="103:55">s</name><operator pos:start="103:56" pos:end="103:57">-&gt;</operator><name pos:start="103:58" pos:end="103:67">skip_count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:43"><expr pos:start="105:9" pos:end="105:42"><name pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:13">avctx</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:25">skip_count</name></name>  <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:42"><name pos:start="105:30" pos:end="105:30">s</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:42">skip_count</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:28"><expr pos:start="109:9" pos:end="109:27"><call pos:start="109:9" pos:end="109:27"><name pos:start="109:9" pos:end="109:24">ff_MPV_frame_end</name><argument_list pos:start="109:25" pos:end="109:27">(<argument pos:start="109:26" pos:end="109:26"><expr pos:start="109:26" pos:end="109:26"><name pos:start="109:26" pos:end="109:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="113:9" pos:end="115:47"><if pos:start="113:9" pos:end="115:47">if <condition pos:start="113:12" pos:end="113:63">(<expr pos:start="113:13" pos:end="113:62"><name pos:start="113:13" pos:end="113:32">CONFIG_MJPEG_ENCODER</name> <operator pos:start="113:34" pos:end="113:35">&amp;&amp;</operator> <name pos:start="113:37" pos:end="113:49"><name pos:start="113:37" pos:end="113:37">s</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:49">out_format</name></name> <operator pos:start="113:51" pos:end="113:52">==</operator> <name pos:start="113:54" pos:end="113:62">FMT_MJPEG</name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:47"><block_content pos:start="115:13" pos:end="115:47">

            <expr_stmt pos:start="115:13" pos:end="115:47"><expr pos:start="115:13" pos:end="115:46"><call pos:start="115:13" pos:end="115:46"><name pos:start="115:13" pos:end="115:43">ff_mjpeg_encode_picture_trailer</name><argument_list pos:start="115:44" pos:end="115:46">(<argument pos:start="115:45" pos:end="115:45"><expr pos:start="115:45" pos:end="115:45"><name pos:start="115:45" pos:end="115:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="119:9" pos:end="191:9"><if pos:start="119:9" pos:end="191:9">if <condition pos:start="119:12" pos:end="119:34">(<expr pos:start="119:13" pos:end="119:33"><name pos:start="119:13" pos:end="119:33"><name pos:start="119:13" pos:end="119:17">avctx</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:33">rc_buffer_size</name></name></expr>)</condition> <block pos:start="119:36" pos:end="191:9">{<block_content pos:start="121:13" pos:end="189:42">

            <decl_stmt pos:start="121:13" pos:end="121:53"><decl pos:start="121:13" pos:end="121:52"><type pos:start="121:13" pos:end="121:32"><name pos:start="121:13" pos:end="121:30">RateControlContext</name> <modifier pos:start="121:32" pos:end="121:32">*</modifier></type><name pos:start="121:33" pos:end="121:35">rcc</name> <init pos:start="121:37" pos:end="121:52">= <expr pos:start="121:39" pos:end="121:52"><operator pos:start="121:39" pos:end="121:39">&amp;</operator><name pos:start="121:40" pos:end="121:52"><name pos:start="121:40" pos:end="121:40">s</name><operator pos:start="121:41" pos:end="121:42">-&gt;</operator><name pos:start="121:43" pos:end="121:52">rc_context</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="123:13" pos:end="123:79"><decl pos:start="123:13" pos:end="123:78"><type pos:start="123:13" pos:end="123:15"><name pos:start="123:13" pos:end="123:15">int</name></type> <name pos:start="123:17" pos:end="123:24">max_size</name> <init pos:start="123:26" pos:end="123:78">= <expr pos:start="123:28" pos:end="123:78"><name pos:start="123:28" pos:end="123:44"><name pos:start="123:28" pos:end="123:30">rcc</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:44">buffer_index</name></name> <operator pos:start="123:46" pos:end="123:46">*</operator> <name pos:start="123:48" pos:end="123:78"><name pos:start="123:48" pos:end="123:52">avctx</name><operator pos:start="123:53" pos:end="123:54">-&gt;</operator><name pos:start="123:55" pos:end="123:78">rc_max_available_vbv_use</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="127:13" pos:end="185:13"><if pos:start="127:13" pos:end="185:13">if <condition pos:start="127:16" pos:end="129:43">(<expr pos:start="127:17" pos:end="129:42"><call pos:start="127:17" pos:end="127:38"><name pos:start="127:17" pos:end="127:30">put_bits_count</name><argument_list pos:start="127:31" pos:end="127:38">(<argument pos:start="127:32" pos:end="127:37"><expr pos:start="127:32" pos:end="127:37"><operator pos:start="127:32" pos:end="127:32">&amp;</operator><name pos:start="127:33" pos:end="127:37"><name pos:start="127:33" pos:end="127:33">s</name><operator pos:start="127:34" pos:end="127:35">-&gt;</operator><name pos:start="127:36" pos:end="127:37">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="127:40" pos:end="127:40">&gt;</operator> <name pos:start="127:42" pos:end="127:49">max_size</name> <operator pos:start="127:51" pos:end="127:52">&amp;&amp;</operator>

                <name pos:start="129:17" pos:end="129:25"><name pos:start="129:17" pos:end="129:17">s</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:25">lambda</name></name> <operator pos:start="129:27" pos:end="129:27">&lt;</operator> <name pos:start="129:29" pos:end="129:42"><name pos:start="129:29" pos:end="129:29">s</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:36">avctx</name><operator pos:start="129:37" pos:end="129:38">-&gt;</operator><name pos:start="129:39" pos:end="129:42">lmax</name></name></expr>)</condition> <block pos:start="129:45" pos:end="185:13">{<block_content pos:start="131:17" pos:end="183:31">

                <expr_stmt pos:start="131:17" pos:end="133:68"><expr pos:start="131:17" pos:end="133:67"><name pos:start="131:17" pos:end="131:30"><name pos:start="131:17" pos:end="131:17">s</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:30">next_lambda</name></name> <operator pos:start="131:32" pos:end="131:32">=</operator> <call pos:start="131:34" pos:end="133:67"><name pos:start="131:34" pos:end="131:38">FFMAX</name><argument_list pos:start="131:39" pos:end="133:67">(<argument pos:start="131:40" pos:end="131:52"><expr pos:start="131:40" pos:end="131:52"><name pos:start="131:40" pos:end="131:48"><name pos:start="131:40" pos:end="131:40">s</name><operator pos:start="131:41" pos:end="131:42">-&gt;</operator><name pos:start="131:43" pos:end="131:48">lambda</name></name> <operator pos:start="131:50" pos:end="131:50">+</operator> <literal type="number" pos:start="131:52" pos:end="131:52">1</literal></expr></argument>, <argument pos:start="131:55" pos:end="133:66"><expr pos:start="131:55" pos:end="133:66"><name pos:start="131:55" pos:end="131:63"><name pos:start="131:55" pos:end="131:55">s</name><operator pos:start="131:56" pos:end="131:57">-&gt;</operator><name pos:start="131:58" pos:end="131:63">lambda</name></name> <operator pos:start="131:65" pos:end="131:65">*</operator>

                                       <operator pos:start="133:40" pos:end="133:40">(</operator><name pos:start="133:41" pos:end="133:49"><name pos:start="133:41" pos:end="133:41">s</name><operator pos:start="133:42" pos:end="133:43">-&gt;</operator><name pos:start="133:44" pos:end="133:49">qscale</name></name> <operator pos:start="133:51" pos:end="133:51">+</operator> <literal type="number" pos:start="133:53" pos:end="133:53">1</literal><operator pos:start="133:54" pos:end="133:54">)</operator> <operator pos:start="133:56" pos:end="133:56">/</operator> <name pos:start="133:58" pos:end="133:66"><name pos:start="133:58" pos:end="133:58">s</name><operator pos:start="133:59" pos:end="133:60">-&gt;</operator><name pos:start="133:61" pos:end="133:66">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="135:17" pos:end="149:17"><if pos:start="135:17" pos:end="149:17">if <condition pos:start="135:20" pos:end="135:38">(<expr pos:start="135:21" pos:end="135:37"><name pos:start="135:21" pos:end="135:37"><name pos:start="135:21" pos:end="135:21">s</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:37">adaptive_quant</name></name></expr>)</condition> <block pos:start="135:40" pos:end="149:17">{<block_content pos:start="137:21" pos:end="147:45">

                    <decl_stmt pos:start="137:21" pos:end="137:26"><decl pos:start="137:21" pos:end="137:25"><type pos:start="137:21" pos:end="137:23"><name pos:start="137:21" pos:end="137:23">int</name></type> <name pos:start="137:25" pos:end="137:25">i</name></decl>;</decl_stmt>

                    <for pos:start="139:21" pos:end="147:45">for <control pos:start="139:25" pos:end="139:69">(<init pos:start="139:26" pos:end="139:31"><expr pos:start="139:26" pos:end="139:30"><name pos:start="139:26" pos:end="139:26">i</name> <operator pos:start="139:28" pos:end="139:28">=</operator> <literal type="number" pos:start="139:30" pos:end="139:30">0</literal></expr>;</init> <condition pos:start="139:33" pos:end="139:64"><expr pos:start="139:33" pos:end="139:63"><name pos:start="139:33" pos:end="139:33">i</name> <operator pos:start="139:35" pos:end="139:35">&lt;</operator> <name pos:start="139:37" pos:end="139:48"><name pos:start="139:37" pos:end="139:37">s</name><operator pos:start="139:38" pos:end="139:39">-&gt;</operator><name pos:start="139:40" pos:end="139:48">mb_height</name></name> <operator pos:start="139:50" pos:end="139:50">*</operator> <name pos:start="139:52" pos:end="139:63"><name pos:start="139:52" pos:end="139:52">s</name><operator pos:start="139:53" pos:end="139:54">-&gt;</operator><name pos:start="139:55" pos:end="139:63">mb_stride</name></name></expr>;</condition> <incr pos:start="139:66" pos:end="139:68"><expr pos:start="139:66" pos:end="139:68"><name pos:start="139:66" pos:end="139:66">i</name><operator pos:start="139:67" pos:end="139:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="141:25" pos:end="147:45"><block_content pos:start="141:25" pos:end="147:45">

                        <expr_stmt pos:start="141:25" pos:end="147:45"><expr pos:start="141:25" pos:end="147:44"><name pos:start="141:25" pos:end="141:42"><name pos:start="141:25" pos:end="141:25">s</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:39">lambda_table</name><index pos:start="141:40" pos:end="141:42">[<expr pos:start="141:41" pos:end="141:41"><name pos:start="141:41" pos:end="141:41">i</name></expr>]</index></name> <operator pos:start="141:44" pos:end="141:44">=</operator>

                            <call pos:start="143:29" pos:end="147:44"><name pos:start="143:29" pos:end="143:33">FFMAX</name><argument_list pos:start="143:34" pos:end="147:44">(<argument pos:start="143:35" pos:end="143:56"><expr pos:start="143:35" pos:end="143:56"><name pos:start="143:35" pos:end="143:52"><name pos:start="143:35" pos:end="143:35">s</name><operator pos:start="143:36" pos:end="143:37">-&gt;</operator><name pos:start="143:38" pos:end="143:49">lambda_table</name><index pos:start="143:50" pos:end="143:52">[<expr pos:start="143:51" pos:end="143:51"><name pos:start="143:51" pos:end="143:51">i</name></expr>]</index></name> <operator pos:start="143:54" pos:end="143:54">+</operator> <literal type="number" pos:start="143:56" pos:end="143:56">1</literal></expr></argument>,

                                  <argument pos:start="145:35" pos:end="147:43"><expr pos:start="145:35" pos:end="147:43"><name pos:start="145:35" pos:end="145:52"><name pos:start="145:35" pos:end="145:35">s</name><operator pos:start="145:36" pos:end="145:37">-&gt;</operator><name pos:start="145:38" pos:end="145:49">lambda_table</name><index pos:start="145:50" pos:end="145:52">[<expr pos:start="145:51" pos:end="145:51"><name pos:start="145:51" pos:end="145:51">i</name></expr>]</index></name> <operator pos:start="145:54" pos:end="145:54">*</operator> <operator pos:start="145:56" pos:end="145:56">(</operator><name pos:start="145:57" pos:end="145:65"><name pos:start="145:57" pos:end="145:57">s</name><operator pos:start="145:58" pos:end="145:59">-&gt;</operator><name pos:start="145:60" pos:end="145:65">qscale</name></name> <operator pos:start="145:67" pos:end="145:67">+</operator> <literal type="number" pos:start="145:69" pos:end="145:69">1</literal><operator pos:start="145:70" pos:end="145:70">)</operator> <operator pos:start="145:72" pos:end="145:72">/</operator>

                                  <name pos:start="147:35" pos:end="147:43"><name pos:start="147:35" pos:end="147:35">s</name><operator pos:start="147:36" pos:end="147:37">-&gt;</operator><name pos:start="147:38" pos:end="147:43">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:34"><expr pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:29"><name pos:start="151:17" pos:end="151:17">s</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:29">mb_skipped</name></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <literal type="number" pos:start="151:33" pos:end="151:33">0</literal></expr>;</expr_stmt>        <comment type="line" pos:start="151:43" pos:end="151:70">// done in MPV_frame_start()</comment>

                <comment type="line" pos:start="153:17" pos:end="153:62">// done in encode_picture() so we must undo it</comment>

                <if_stmt pos:start="155:17" pos:end="165:17"><if pos:start="155:17" pos:end="165:17">if <condition pos:start="155:20" pos:end="155:54">(<expr pos:start="155:21" pos:end="155:53"><name pos:start="155:21" pos:end="155:32"><name pos:start="155:21" pos:end="155:21">s</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:32">pict_type</name></name> <operator pos:start="155:34" pos:end="155:35">==</operator> <name pos:start="155:37" pos:end="155:53">AV_PICTURE_TYPE_P</name></expr>)</condition> <block pos:start="155:56" pos:end="165:17">{<block_content pos:start="157:21" pos:end="163:44">

                    <if_stmt pos:start="157:21" pos:end="163:44"><if pos:start="157:21" pos:end="163:44">if <condition pos:start="157:24" pos:end="161:57">(<expr pos:start="157:25" pos:end="161:56"><name pos:start="157:25" pos:end="157:44"><name pos:start="157:25" pos:end="157:25">s</name><operator pos:start="157:26" pos:end="157:27">-&gt;</operator><name pos:start="157:28" pos:end="157:44">flipflop_rounding</name></name>          <operator pos:start="157:55" pos:end="157:56">||</operator>

                        <name pos:start="159:25" pos:end="159:35"><name pos:start="159:25" pos:end="159:25">s</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:35">codec_id</name></name> <operator pos:start="159:37" pos:end="159:38">==</operator> <name pos:start="159:40" pos:end="159:56">AV_CODEC_ID_H263P</name> <operator pos:start="159:58" pos:end="159:59">||</operator>

                        <name pos:start="161:25" pos:end="161:35"><name pos:start="161:25" pos:end="161:25">s</name><operator pos:start="161:26" pos:end="161:27">-&gt;</operator><name pos:start="161:28" pos:end="161:35">codec_id</name></name> <operator pos:start="161:37" pos:end="161:38">==</operator> <name pos:start="161:40" pos:end="161:56">AV_CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="163:25" pos:end="163:44"><block_content pos:start="163:25" pos:end="163:44">

                        <expr_stmt pos:start="163:25" pos:end="163:44"><expr pos:start="163:25" pos:end="163:43"><name pos:start="163:25" pos:end="163:38"><name pos:start="163:25" pos:end="163:25">s</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:38">no_rounding</name></name> <operator pos:start="163:40" pos:end="163:41">^=</operator> <literal type="number" pos:start="163:43" pos:end="163:43">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="167:17" pos:end="173:17"><if pos:start="167:17" pos:end="173:17">if <condition pos:start="167:20" pos:end="167:54">(<expr pos:start="167:21" pos:end="167:53"><name pos:start="167:21" pos:end="167:32"><name pos:start="167:21" pos:end="167:21">s</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:32">pict_type</name></name> <operator pos:start="167:34" pos:end="167:35">!=</operator> <name pos:start="167:37" pos:end="167:53">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="167:56" pos:end="173:17">{<block_content pos:start="169:21" pos:end="171:62">

                    <expr_stmt pos:start="169:21" pos:end="169:59"><expr pos:start="169:21" pos:end="169:58"><name pos:start="169:21" pos:end="169:32"><name pos:start="169:21" pos:end="169:21">s</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:32">time_base</name></name>       <operator pos:start="169:40" pos:end="169:40">=</operator> <name pos:start="169:42" pos:end="169:58"><name pos:start="169:42" pos:end="169:42">s</name><operator pos:start="169:43" pos:end="169:44">-&gt;</operator><name pos:start="169:45" pos:end="169:58">last_time_base</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="171:21" pos:end="171:62"><expr pos:start="171:21" pos:end="171:61"><name pos:start="171:21" pos:end="171:38"><name pos:start="171:21" pos:end="171:21">s</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:38">last_non_b_time</name></name> <operator pos:start="171:40" pos:end="171:40">=</operator> <name pos:start="171:42" pos:end="171:48"><name pos:start="171:42" pos:end="171:42">s</name><operator pos:start="171:43" pos:end="171:44">-&gt;</operator><name pos:start="171:45" pos:end="171:48">time</name></name> <operator pos:start="171:50" pos:end="171:50">-</operator> <name pos:start="171:52" pos:end="171:61"><name pos:start="171:52" pos:end="171:52">s</name><operator pos:start="171:53" pos:end="171:54">-&gt;</operator><name pos:start="171:55" pos:end="171:61">pp_time</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <for pos:start="175:17" pos:end="181:17">for <control pos:start="175:21" pos:end="175:51">(<init pos:start="175:22" pos:end="175:27"><expr pos:start="175:22" pos:end="175:26"><name pos:start="175:22" pos:end="175:22">i</name> <operator pos:start="175:24" pos:end="175:24">=</operator> <literal type="number" pos:start="175:26" pos:end="175:26">0</literal></expr>;</init> <condition pos:start="175:29" pos:end="175:46"><expr pos:start="175:29" pos:end="175:45"><name pos:start="175:29" pos:end="175:29">i</name> <operator pos:start="175:31" pos:end="175:31">&lt;</operator> <name pos:start="175:33" pos:end="175:45">context_count</name></expr>;</condition> <incr pos:start="175:48" pos:end="175:50"><expr pos:start="175:48" pos:end="175:50"><name pos:start="175:48" pos:end="175:48">i</name><operator pos:start="175:49" pos:end="175:50">++</operator></expr></incr>)</control> <block pos:start="175:53" pos:end="181:17">{<block_content pos:start="177:21" pos:end="179:70">

                    <decl_stmt pos:start="177:21" pos:end="177:66"><decl pos:start="177:21" pos:end="177:65"><type pos:start="177:21" pos:end="177:35"><name pos:start="177:21" pos:end="177:33">PutBitContext</name> <modifier pos:start="177:35" pos:end="177:35">*</modifier></type><name pos:start="177:36" pos:end="177:37">pb</name> <init pos:start="177:39" pos:end="177:65">= <expr pos:start="177:41" pos:end="177:65"><operator pos:start="177:41" pos:end="177:41">&amp;</operator><name pos:start="177:42" pos:end="177:61"><name pos:start="177:42" pos:end="177:42">s</name><operator pos:start="177:43" pos:end="177:44">-&gt;</operator><name pos:start="177:45" pos:end="177:58">thread_context</name><index pos:start="177:59" pos:end="177:61">[<expr pos:start="177:60" pos:end="177:60"><name pos:start="177:60" pos:end="177:60">i</name></expr>]</index></name><operator pos:start="177:62" pos:end="177:63">-&gt;</operator><name pos:start="177:64" pos:end="177:65">pb</name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="179:21" pos:end="179:70"><expr pos:start="179:21" pos:end="179:69"><call pos:start="179:21" pos:end="179:69"><name pos:start="179:21" pos:end="179:33">init_put_bits</name><argument_list pos:start="179:34" pos:end="179:69">(<argument pos:start="179:35" pos:end="179:36"><expr pos:start="179:35" pos:end="179:36"><name pos:start="179:35" pos:end="179:36">pb</name></expr></argument>, <argument pos:start="179:39" pos:end="179:45"><expr pos:start="179:39" pos:end="179:45"><name pos:start="179:39" pos:end="179:45"><name pos:start="179:39" pos:end="179:40">pb</name><operator pos:start="179:41" pos:end="179:42">-&gt;</operator><name pos:start="179:43" pos:end="179:45">buf</name></name></expr></argument>, <argument pos:start="179:48" pos:end="179:68"><expr pos:start="179:48" pos:end="179:68"><name pos:start="179:48" pos:end="179:58"><name pos:start="179:48" pos:end="179:49">pb</name><operator pos:start="179:50" pos:end="179:51">-&gt;</operator><name pos:start="179:52" pos:end="179:58">buf_end</name></name> <operator pos:start="179:60" pos:end="179:60">-</operator> <name pos:start="179:62" pos:end="179:68"><name pos:start="179:62" pos:end="179:63">pb</name><operator pos:start="179:64" pos:end="179:65">-&gt;</operator><name pos:start="179:66" pos:end="179:68">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <goto pos:start="183:17" pos:end="183:31">goto <name pos:start="183:22" pos:end="183:30">vbv_retry</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="189:13" pos:end="189:42"><expr pos:start="189:13" pos:end="189:41"><call pos:start="189:13" pos:end="189:41"><name pos:start="189:13" pos:end="189:18">assert</name><argument_list pos:start="189:19" pos:end="189:41">(<argument pos:start="189:20" pos:end="189:40"><expr pos:start="189:20" pos:end="189:40"><name pos:start="189:20" pos:end="189:40"><name pos:start="189:20" pos:end="189:20">s</name><operator pos:start="189:21" pos:end="189:22">-&gt;</operator><name pos:start="189:23" pos:end="189:27">avctx</name><operator pos:start="189:28" pos:end="189:29">-&gt;</operator><name pos:start="189:30" pos:end="189:40">rc_max_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="195:9" pos:end="197:36"><if pos:start="195:9" pos:end="197:36">if <condition pos:start="195:12" pos:end="195:40">(<expr pos:start="195:13" pos:end="195:39"><name pos:start="195:13" pos:end="195:20"><name pos:start="195:13" pos:end="195:13">s</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:20">flags</name></name> <operator pos:start="195:22" pos:end="195:22">&amp;</operator> <name pos:start="195:24" pos:end="195:39">CODEC_FLAG_PASS1</name></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="197:36"><block_content pos:start="197:13" pos:end="197:36">

            <expr_stmt pos:start="197:13" pos:end="197:36"><expr pos:start="197:13" pos:end="197:35"><call pos:start="197:13" pos:end="197:35"><name pos:start="197:13" pos:end="197:32">ff_write_pass1_stats</name><argument_list pos:start="197:33" pos:end="197:35">(<argument pos:start="197:34" pos:end="197:34"><expr pos:start="197:34" pos:end="197:34"><name pos:start="197:34" pos:end="197:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="201:9" pos:end="207:9">for <control pos:start="201:13" pos:end="201:31">(<init pos:start="201:14" pos:end="201:19"><expr pos:start="201:14" pos:end="201:18"><name pos:start="201:14" pos:end="201:14">i</name> <operator pos:start="201:16" pos:end="201:16">=</operator> <literal type="number" pos:start="201:18" pos:end="201:18">0</literal></expr>;</init> <condition pos:start="201:21" pos:end="201:26"><expr pos:start="201:21" pos:end="201:25"><name pos:start="201:21" pos:end="201:21">i</name> <operator pos:start="201:23" pos:end="201:23">&lt;</operator> <literal type="number" pos:start="201:25" pos:end="201:25">4</literal></expr>;</condition> <incr pos:start="201:28" pos:end="201:30"><expr pos:start="201:28" pos:end="201:30"><name pos:start="201:28" pos:end="201:28">i</name><operator pos:start="201:29" pos:end="201:30">++</operator></expr></incr>)</control> <block pos:start="201:33" pos:end="207:9">{<block_content pos:start="203:13" pos:end="205:66">

            <expr_stmt pos:start="203:13" pos:end="203:79"><expr pos:start="203:13" pos:end="203:78"><name pos:start="203:13" pos:end="203:46"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:34">current_picture_ptr</name><operator pos:start="203:35" pos:end="203:36">-&gt;</operator><name pos:start="203:37" pos:end="203:37">f</name><operator pos:start="203:38" pos:end="203:38">.</operator><name pos:start="203:39" pos:end="203:43">error</name><index pos:start="203:44" pos:end="203:46">[<expr pos:start="203:45" pos:end="203:45"><name pos:start="203:45" pos:end="203:45">i</name></expr>]</index></name> <operator pos:start="203:48" pos:end="203:48">=</operator> <name pos:start="203:50" pos:end="203:78"><name pos:start="203:50" pos:end="203:50">s</name><operator pos:start="203:51" pos:end="203:52">-&gt;</operator><name pos:start="203:53" pos:end="203:67">current_picture</name><operator pos:start="203:68" pos:end="203:68">.</operator><name pos:start="203:69" pos:end="203:69">f</name><operator pos:start="203:70" pos:end="203:70">.</operator><name pos:start="203:71" pos:end="203:75">error</name><index pos:start="203:76" pos:end="203:78">[<expr pos:start="203:77" pos:end="203:77"><name pos:start="203:77" pos:end="203:77">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:66"><expr pos:start="205:13" pos:end="205:65"><name pos:start="205:13" pos:end="205:27"><name pos:start="205:13" pos:end="205:17">avctx</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:24">error</name><index pos:start="205:25" pos:end="205:27">[<expr pos:start="205:26" pos:end="205:26"><name pos:start="205:26" pos:end="205:26">i</name></expr>]</index></name> <operator pos:start="205:29" pos:end="205:30">+=</operator> <name pos:start="205:32" pos:end="205:65"><name pos:start="205:32" pos:end="205:32">s</name><operator pos:start="205:33" pos:end="205:34">-&gt;</operator><name pos:start="205:35" pos:end="205:53">current_picture_ptr</name><operator pos:start="205:54" pos:end="205:55">-&gt;</operator><name pos:start="205:56" pos:end="205:56">f</name><operator pos:start="205:57" pos:end="205:57">.</operator><name pos:start="205:58" pos:end="205:62">error</name><index pos:start="205:63" pos:end="205:65">[<expr pos:start="205:64" pos:end="205:64"><name pos:start="205:64" pos:end="205:64">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="211:9" pos:end="217:47"><if pos:start="211:9" pos:end="217:47">if <condition pos:start="211:12" pos:end="211:40">(<expr pos:start="211:13" pos:end="211:39"><name pos:start="211:13" pos:end="211:20"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:20">flags</name></name> <operator pos:start="211:22" pos:end="211:22">&amp;</operator> <name pos:start="211:24" pos:end="211:39">CODEC_FLAG_PASS1</name></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="217:47"><block_content pos:start="213:13" pos:end="217:47">

            <expr_stmt pos:start="213:13" pos:end="217:47"><expr pos:start="213:13" pos:end="217:46"><call pos:start="213:13" pos:end="217:46"><name pos:start="213:13" pos:end="213:18">assert</name><argument_list pos:start="213:19" pos:end="217:46">(<argument pos:start="213:20" pos:end="217:45"><expr pos:start="213:20" pos:end="217:45"><name pos:start="213:20" pos:end="213:37"><name pos:start="213:20" pos:end="213:24">avctx</name><operator pos:start="213:25" pos:end="213:26">-&gt;</operator><name pos:start="213:27" pos:end="213:37">header_bits</name></name> <operator pos:start="213:39" pos:end="213:39">+</operator> <name pos:start="213:41" pos:end="213:54"><name pos:start="213:41" pos:end="213:45">avctx</name><operator pos:start="213:46" pos:end="213:47">-&gt;</operator><name pos:start="213:48" pos:end="213:54">mv_bits</name></name> <operator pos:start="213:56" pos:end="213:56">+</operator> <name pos:start="213:58" pos:end="213:73"><name pos:start="213:58" pos:end="213:62">avctx</name><operator pos:start="213:63" pos:end="213:64">-&gt;</operator><name pos:start="213:65" pos:end="213:73">misc_bits</name></name> <operator pos:start="213:75" pos:end="213:75">+</operator>

                   <name pos:start="215:20" pos:end="215:36"><name pos:start="215:20" pos:end="215:24">avctx</name><operator pos:start="215:25" pos:end="215:26">-&gt;</operator><name pos:start="215:27" pos:end="215:36">i_tex_bits</name></name> <operator pos:start="215:38" pos:end="215:38">+</operator> <name pos:start="215:40" pos:end="215:56"><name pos:start="215:40" pos:end="215:44">avctx</name><operator pos:start="215:45" pos:end="215:46">-&gt;</operator><name pos:start="215:47" pos:end="215:56">p_tex_bits</name></name> <operator pos:start="215:58" pos:end="215:59">==</operator>

                       <call pos:start="217:24" pos:end="217:45"><name pos:start="217:24" pos:end="217:37">put_bits_count</name><argument_list pos:start="217:38" pos:end="217:45">(<argument pos:start="217:39" pos:end="217:44"><expr pos:start="217:39" pos:end="217:44"><operator pos:start="217:39" pos:end="217:39">&amp;</operator><name pos:start="217:40" pos:end="217:44"><name pos:start="217:40" pos:end="217:40">s</name><operator pos:start="217:41" pos:end="217:42">-&gt;</operator><name pos:start="217:43" pos:end="217:44">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:31"><expr pos:start="219:9" pos:end="219:30"><call pos:start="219:9" pos:end="219:30"><name pos:start="219:9" pos:end="219:22">flush_put_bits</name><argument_list pos:start="219:23" pos:end="219:30">(<argument pos:start="219:24" pos:end="219:29"><expr pos:start="219:24" pos:end="219:29"><operator pos:start="219:24" pos:end="219:24">&amp;</operator><name pos:start="219:25" pos:end="219:29"><name pos:start="219:25" pos:end="219:25">s</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:48"><expr pos:start="221:9" pos:end="221:47"><name pos:start="221:9" pos:end="221:21"><name pos:start="221:9" pos:end="221:9">s</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:21">frame_bits</name></name>  <operator pos:start="221:24" pos:end="221:24">=</operator> <call pos:start="221:26" pos:end="221:47"><name pos:start="221:26" pos:end="221:39">put_bits_count</name><argument_list pos:start="221:40" pos:end="221:47">(<argument pos:start="221:41" pos:end="221:46"><expr pos:start="221:41" pos:end="221:46"><operator pos:start="221:41" pos:end="221:41">&amp;</operator><name pos:start="221:42" pos:end="221:46"><name pos:start="221:42" pos:end="221:42">s</name><operator pos:start="221:43" pos:end="221:44">-&gt;</operator><name pos:start="221:45" pos:end="221:46">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="225:9" pos:end="225:57"><expr pos:start="225:9" pos:end="225:56"><name pos:start="225:9" pos:end="225:22">stuffing_count</name> <operator pos:start="225:24" pos:end="225:24">=</operator> <call pos:start="225:26" pos:end="225:56"><name pos:start="225:26" pos:end="225:38">ff_vbv_update</name><argument_list pos:start="225:39" pos:end="225:56">(<argument pos:start="225:40" pos:end="225:40"><expr pos:start="225:40" pos:end="225:40"><name pos:start="225:40" pos:end="225:40">s</name></expr></argument>, <argument pos:start="225:43" pos:end="225:55"><expr pos:start="225:43" pos:end="225:55"><name pos:start="225:43" pos:end="225:55"><name pos:start="225:43" pos:end="225:43">s</name><operator pos:start="225:44" pos:end="225:45">-&gt;</operator><name pos:start="225:46" pos:end="225:55">frame_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:44"><expr pos:start="227:9" pos:end="227:43"><name pos:start="227:9" pos:end="227:24"><name pos:start="227:9" pos:end="227:9">s</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:24">stuffing_bits</name></name> <operator pos:start="227:26" pos:end="227:26">=</operator> <literal type="number" pos:start="227:28" pos:end="227:28">8</literal><operator pos:start="227:29" pos:end="227:29">*</operator><name pos:start="227:30" pos:end="227:43">stuffing_count</name></expr>;</expr_stmt>

        <if_stmt pos:start="229:9" pos:end="283:9"><if pos:start="229:9" pos:end="283:9">if <condition pos:start="229:12" pos:end="229:27">(<expr pos:start="229:13" pos:end="229:26"><name pos:start="229:13" pos:end="229:26">stuffing_count</name></expr>)</condition> <block pos:start="229:29" pos:end="283:9">{<block_content pos:start="231:13" pos:end="281:52">

            <if_stmt pos:start="231:13" pos:end="239:13"><if pos:start="231:13" pos:end="239:13">if <condition pos:start="231:16" pos:end="233:40">(<expr pos:start="231:17" pos:end="233:39"><name pos:start="231:17" pos:end="231:29"><name pos:start="231:17" pos:end="231:17">s</name><operator pos:start="231:18" pos:end="231:19">-&gt;</operator><name pos:start="231:20" pos:end="231:21">pb</name><operator pos:start="231:22" pos:end="231:22">.</operator><name pos:start="231:23" pos:end="231:29">buf_end</name></name> <operator pos:start="231:31" pos:end="231:31">-</operator> <name pos:start="231:33" pos:end="231:41"><name pos:start="231:33" pos:end="231:33">s</name><operator pos:start="231:34" pos:end="231:35">-&gt;</operator><name pos:start="231:36" pos:end="231:37">pb</name><operator pos:start="231:38" pos:end="231:38">.</operator><name pos:start="231:39" pos:end="231:41">buf</name></name> <operator pos:start="231:43" pos:end="231:43">-</operator> <operator pos:start="231:45" pos:end="231:45">(</operator><call pos:start="231:46" pos:end="231:67"><name pos:start="231:46" pos:end="231:59">put_bits_count</name><argument_list pos:start="231:60" pos:end="231:67">(<argument pos:start="231:61" pos:end="231:66"><expr pos:start="231:61" pos:end="231:66"><operator pos:start="231:61" pos:end="231:61">&amp;</operator><name pos:start="231:62" pos:end="231:66"><name pos:start="231:62" pos:end="231:62">s</name><operator pos:start="231:63" pos:end="231:64">-&gt;</operator><name pos:start="231:65" pos:end="231:66">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="231:69" pos:end="231:70">&gt;&gt;</operator> <literal type="number" pos:start="231:72" pos:end="231:72">3</literal><operator pos:start="231:73" pos:end="231:73">)</operator> <operator pos:start="231:75" pos:end="231:75">&lt;</operator>

                    <name pos:start="233:21" pos:end="233:34">stuffing_count</name> <operator pos:start="233:36" pos:end="233:36">+</operator> <literal type="number" pos:start="233:38" pos:end="233:39">50</literal></expr>)</condition> <block pos:start="233:42" pos:end="239:13">{<block_content pos:start="235:17" pos:end="237:26">

                <expr_stmt pos:start="235:17" pos:end="235:71"><expr pos:start="235:17" pos:end="235:70"><call pos:start="235:17" pos:end="235:70"><name pos:start="235:17" pos:end="235:22">av_log</name><argument_list pos:start="235:23" pos:end="235:70">(<argument pos:start="235:24" pos:end="235:31"><expr pos:start="235:24" pos:end="235:31"><name pos:start="235:24" pos:end="235:31"><name pos:start="235:24" pos:end="235:24">s</name><operator pos:start="235:25" pos:end="235:26">-&gt;</operator><name pos:start="235:27" pos:end="235:31">avctx</name></name></expr></argument>, <argument pos:start="235:34" pos:end="235:45"><expr pos:start="235:34" pos:end="235:45"><name pos:start="235:34" pos:end="235:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="235:48" pos:end="235:69"><expr pos:start="235:48" pos:end="235:69"><literal type="string" pos:start="235:48" pos:end="235:69">"stuffing too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="237:17" pos:end="237:26">return <expr pos:start="237:24" pos:end="237:25"><operator pos:start="237:24" pos:end="237:24">-</operator><literal type="number" pos:start="237:25" pos:end="237:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="243:13" pos:end="277:13">switch <condition pos:start="243:20" pos:end="243:32">(<expr pos:start="243:21" pos:end="243:31"><name pos:start="243:21" pos:end="243:31"><name pos:start="243:21" pos:end="243:21">s</name><operator pos:start="243:22" pos:end="243:23">-&gt;</operator><name pos:start="243:24" pos:end="243:31">codec_id</name></name></expr>)</condition> <block pos:start="243:34" pos:end="277:13">{<block_content pos:start="245:13" pos:end="275:72">

            <case pos:start="245:13" pos:end="245:40">case <expr pos:start="245:18" pos:end="245:39"><name pos:start="245:18" pos:end="245:39">AV_CODEC_ID_MPEG1VIDEO</name></expr>:</case>

            <case pos:start="247:13" pos:end="247:40">case <expr pos:start="247:18" pos:end="247:39"><name pos:start="247:18" pos:end="247:39">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

                <while pos:start="249:17" pos:end="253:17">while <condition pos:start="249:23" pos:end="249:40">(<expr pos:start="249:24" pos:end="249:39"><name pos:start="249:24" pos:end="249:37">stuffing_count</name><operator pos:start="249:38" pos:end="249:39">--</operator></expr>)</condition> <block pos:start="249:42" pos:end="253:17">{<block_content pos:start="251:21" pos:end="251:43">

                    <expr_stmt pos:start="251:21" pos:end="251:43"><expr pos:start="251:21" pos:end="251:42"><call pos:start="251:21" pos:end="251:42"><name pos:start="251:21" pos:end="251:28">put_bits</name><argument_list pos:start="251:29" pos:end="251:42">(<argument pos:start="251:30" pos:end="251:35"><expr pos:start="251:30" pos:end="251:35"><operator pos:start="251:30" pos:end="251:30">&amp;</operator><name pos:start="251:31" pos:end="251:35"><name pos:start="251:31" pos:end="251:31">s</name><operator pos:start="251:32" pos:end="251:33">-&gt;</operator><name pos:start="251:34" pos:end="251:35">pb</name></name></expr></argument>, <argument pos:start="251:38" pos:end="251:38"><expr pos:start="251:38" pos:end="251:38"><literal type="number" pos:start="251:38" pos:end="251:38">8</literal></expr></argument>, <argument pos:start="251:41" pos:end="251:41"><expr pos:start="251:41" pos:end="251:41"><literal type="number" pos:start="251:41" pos:end="251:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></while>

            <break pos:start="255:13" pos:end="255:18">break;</break>

            <case pos:start="257:13" pos:end="257:35">case <expr pos:start="257:18" pos:end="257:34"><name pos:start="257:18" pos:end="257:34">AV_CODEC_ID_MPEG4</name></expr>:</case>

                <expr_stmt pos:start="259:17" pos:end="259:40"><expr pos:start="259:17" pos:end="259:39"><call pos:start="259:17" pos:end="259:39"><name pos:start="259:17" pos:end="259:24">put_bits</name><argument_list pos:start="259:25" pos:end="259:39">(<argument pos:start="259:26" pos:end="259:31"><expr pos:start="259:26" pos:end="259:31"><operator pos:start="259:26" pos:end="259:26">&amp;</operator><name pos:start="259:27" pos:end="259:31"><name pos:start="259:27" pos:end="259:27">s</name><operator pos:start="259:28" pos:end="259:29">-&gt;</operator><name pos:start="259:30" pos:end="259:31">pb</name></name></expr></argument>, <argument pos:start="259:34" pos:end="259:35"><expr pos:start="259:34" pos:end="259:35"><literal type="number" pos:start="259:34" pos:end="259:35">16</literal></expr></argument>, <argument pos:start="259:38" pos:end="259:38"><expr pos:start="259:38" pos:end="259:38"><literal type="number" pos:start="259:38" pos:end="259:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="261:17" pos:end="261:44"><expr pos:start="261:17" pos:end="261:43"><call pos:start="261:17" pos:end="261:43"><name pos:start="261:17" pos:end="261:24">put_bits</name><argument_list pos:start="261:25" pos:end="261:43">(<argument pos:start="261:26" pos:end="261:31"><expr pos:start="261:26" pos:end="261:31"><operator pos:start="261:26" pos:end="261:26">&amp;</operator><name pos:start="261:27" pos:end="261:31"><name pos:start="261:27" pos:end="261:27">s</name><operator pos:start="261:28" pos:end="261:29">-&gt;</operator><name pos:start="261:30" pos:end="261:31">pb</name></name></expr></argument>, <argument pos:start="261:34" pos:end="261:35"><expr pos:start="261:34" pos:end="261:35"><literal type="number" pos:start="261:34" pos:end="261:35">16</literal></expr></argument>, <argument pos:start="261:38" pos:end="261:42"><expr pos:start="261:38" pos:end="261:42"><literal type="number" pos:start="261:38" pos:end="261:42">0x1C3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="263:17" pos:end="263:36"><expr pos:start="263:17" pos:end="263:35"><name pos:start="263:17" pos:end="263:30">stuffing_count</name> <operator pos:start="263:32" pos:end="263:33">-=</operator> <literal type="number" pos:start="263:35" pos:end="263:35">4</literal></expr>;</expr_stmt>

                <while pos:start="265:17" pos:end="269:17">while <condition pos:start="265:23" pos:end="265:40">(<expr pos:start="265:24" pos:end="265:39"><name pos:start="265:24" pos:end="265:37">stuffing_count</name><operator pos:start="265:38" pos:end="265:39">--</operator></expr>)</condition> <block pos:start="265:42" pos:end="269:17">{<block_content pos:start="267:21" pos:end="267:46">

                    <expr_stmt pos:start="267:21" pos:end="267:46"><expr pos:start="267:21" pos:end="267:45"><call pos:start="267:21" pos:end="267:45"><name pos:start="267:21" pos:end="267:28">put_bits</name><argument_list pos:start="267:29" pos:end="267:45">(<argument pos:start="267:30" pos:end="267:35"><expr pos:start="267:30" pos:end="267:35"><operator pos:start="267:30" pos:end="267:30">&amp;</operator><name pos:start="267:31" pos:end="267:35"><name pos:start="267:31" pos:end="267:31">s</name><operator pos:start="267:32" pos:end="267:33">-&gt;</operator><name pos:start="267:34" pos:end="267:35">pb</name></name></expr></argument>, <argument pos:start="267:38" pos:end="267:38"><expr pos:start="267:38" pos:end="267:38"><literal type="number" pos:start="267:38" pos:end="267:38">8</literal></expr></argument>, <argument pos:start="267:41" pos:end="267:44"><expr pos:start="267:41" pos:end="267:44"><literal type="number" pos:start="267:41" pos:end="267:44">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></while>

            <break pos:start="271:13" pos:end="271:18">break;</break>

            <default pos:start="273:13" pos:end="273:20">default:</default>

                <expr_stmt pos:start="275:17" pos:end="275:72"><expr pos:start="275:17" pos:end="275:71"><call pos:start="275:17" pos:end="275:71"><name pos:start="275:17" pos:end="275:22">av_log</name><argument_list pos:start="275:23" pos:end="275:71">(<argument pos:start="275:24" pos:end="275:31"><expr pos:start="275:24" pos:end="275:31"><name pos:start="275:24" pos:end="275:31"><name pos:start="275:24" pos:end="275:24">s</name><operator pos:start="275:25" pos:end="275:26">-&gt;</operator><name pos:start="275:27" pos:end="275:31">avctx</name></name></expr></argument>, <argument pos:start="275:34" pos:end="275:45"><expr pos:start="275:34" pos:end="275:45"><name pos:start="275:34" pos:end="275:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="275:48" pos:end="275:70"><expr pos:start="275:48" pos:end="275:70"><literal type="string" pos:start="275:48" pos:end="275:70">"vbv buffer overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <expr_stmt pos:start="279:13" pos:end="279:35"><expr pos:start="279:13" pos:end="279:34"><call pos:start="279:13" pos:end="279:34"><name pos:start="279:13" pos:end="279:26">flush_put_bits</name><argument_list pos:start="279:27" pos:end="279:34">(<argument pos:start="279:28" pos:end="279:33"><expr pos:start="279:28" pos:end="279:33"><operator pos:start="279:28" pos:end="279:28">&amp;</operator><name pos:start="279:29" pos:end="279:33"><name pos:start="279:29" pos:end="279:29">s</name><operator pos:start="279:30" pos:end="279:31">-&gt;</operator><name pos:start="279:32" pos:end="279:33">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:52"><expr pos:start="281:13" pos:end="281:51"><name pos:start="281:13" pos:end="281:25"><name pos:start="281:13" pos:end="281:13">s</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:25">frame_bits</name></name>  <operator pos:start="281:28" pos:end="281:28">=</operator> <call pos:start="281:30" pos:end="281:51"><name pos:start="281:30" pos:end="281:43">put_bits_count</name><argument_list pos:start="281:44" pos:end="281:51">(<argument pos:start="281:45" pos:end="281:50"><expr pos:start="281:45" pos:end="281:50"><operator pos:start="281:45" pos:end="281:45">&amp;</operator><name pos:start="281:46" pos:end="281:50"><name pos:start="281:46" pos:end="281:46">s</name><operator pos:start="281:47" pos:end="281:48">-&gt;</operator><name pos:start="281:49" pos:end="281:50">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="287:9" pos:end="287:46">/* update mpeg1/2 vbv_delay for CBR */</comment>

        <if_stmt pos:start="289:9" pos:end="353:9"><if pos:start="289:9" pos:end="353:9">if <condition pos:start="289:12" pos:end="297:49">(<expr pos:start="289:13" pos:end="297:48"><name pos:start="289:13" pos:end="289:33"><name pos:start="289:13" pos:end="289:13">s</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:20">avctx</name><operator pos:start="289:21" pos:end="289:22">-&gt;</operator><name pos:start="289:23" pos:end="289:33">rc_max_rate</name></name>                          <operator pos:start="289:60" pos:end="289:61">&amp;&amp;</operator>

            <name pos:start="291:13" pos:end="291:33"><name pos:start="291:13" pos:end="291:13">s</name><operator pos:start="291:14" pos:end="291:15">-&gt;</operator><name pos:start="291:16" pos:end="291:20">avctx</name><operator pos:start="291:21" pos:end="291:22">-&gt;</operator><name pos:start="291:23" pos:end="291:33">rc_min_rate</name></name> <operator pos:start="291:35" pos:end="291:36">==</operator> <name pos:start="291:38" pos:end="291:58"><name pos:start="291:38" pos:end="291:38">s</name><operator pos:start="291:39" pos:end="291:40">-&gt;</operator><name pos:start="291:41" pos:end="291:45">avctx</name><operator pos:start="291:46" pos:end="291:47">-&gt;</operator><name pos:start="291:48" pos:end="291:58">rc_max_rate</name></name> <operator pos:start="291:60" pos:end="291:61">&amp;&amp;</operator>

            <name pos:start="293:13" pos:end="293:25"><name pos:start="293:13" pos:end="293:13">s</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:25">out_format</name></name> <operator pos:start="293:27" pos:end="293:28">==</operator> <name pos:start="293:30" pos:end="293:38">FMT_MPEG1</name>                     <operator pos:start="293:60" pos:end="293:61">&amp;&amp;</operator>

            <literal type="number" pos:start="295:13" pos:end="295:19">90000LL</literal> <operator pos:start="295:21" pos:end="295:21">*</operator> <operator pos:start="295:23" pos:end="295:23">(</operator><name pos:start="295:24" pos:end="295:44"><name pos:start="295:24" pos:end="295:28">avctx</name><operator pos:start="295:29" pos:end="295:30">-&gt;</operator><name pos:start="295:31" pos:end="295:44">rc_buffer_size</name></name> <operator pos:start="295:46" pos:end="295:46">-</operator> <literal type="number" pos:start="295:48" pos:end="295:48">1</literal><operator pos:start="295:49" pos:end="295:49">)</operator> <operator pos:start="295:51" pos:end="295:52">&lt;=</operator>

                <name pos:start="297:17" pos:end="297:37"><name pos:start="297:17" pos:end="297:17">s</name><operator pos:start="297:18" pos:end="297:19">-&gt;</operator><name pos:start="297:20" pos:end="297:24">avctx</name><operator pos:start="297:25" pos:end="297:26">-&gt;</operator><name pos:start="297:27" pos:end="297:37">rc_max_rate</name></name> <operator pos:start="297:39" pos:end="297:39">*</operator> <literal type="number" pos:start="297:41" pos:end="297:48">0xFFFFLL</literal></expr>)</condition> <block pos:start="297:51" pos:end="353:9">{<block_content pos:start="299:13" pos:end="351:51">

            <decl_stmt pos:start="299:13" pos:end="299:37"><decl pos:start="299:13" pos:end="299:25"><type pos:start="299:13" pos:end="299:15"><name pos:start="299:13" pos:end="299:15">int</name></type> <name pos:start="299:17" pos:end="299:25">vbv_delay</name></decl>, <decl pos:start="299:28" pos:end="299:36"><type ref="prev" pos:start="299:13" pos:end="299:15"/><name pos:start="299:28" pos:end="299:36">min_delay</name></decl>;</decl_stmt>

            <decl_stmt pos:start="301:13" pos:end="303:57"><decl pos:start="301:13" pos:end="303:56"><type pos:start="301:13" pos:end="301:18"><name pos:start="301:13" pos:end="301:18">double</name></type> <name pos:start="301:20" pos:end="301:25">inbits</name>  <init pos:start="301:28" pos:end="303:56">= <expr pos:start="301:30" pos:end="303:56"><name pos:start="301:30" pos:end="301:50"><name pos:start="301:30" pos:end="301:30">s</name><operator pos:start="301:31" pos:end="301:32">-&gt;</operator><name pos:start="301:33" pos:end="301:37">avctx</name><operator pos:start="301:38" pos:end="301:39">-&gt;</operator><name pos:start="301:40" pos:end="301:50">rc_max_rate</name></name> <operator pos:start="301:52" pos:end="301:52">*</operator>

                             <call pos:start="303:30" pos:end="303:56"><name pos:start="303:30" pos:end="303:35">av_q2d</name><argument_list pos:start="303:36" pos:end="303:56">(<argument pos:start="303:37" pos:end="303:55"><expr pos:start="303:37" pos:end="303:55"><name pos:start="303:37" pos:end="303:55"><name pos:start="303:37" pos:end="303:37">s</name><operator pos:start="303:38" pos:end="303:39">-&gt;</operator><name pos:start="303:40" pos:end="303:44">avctx</name><operator pos:start="303:45" pos:end="303:46">-&gt;</operator><name pos:start="303:47" pos:end="303:55">time_base</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="305:13" pos:end="307:64"><decl pos:start="305:13" pos:end="307:63"><type pos:start="305:13" pos:end="305:15"><name pos:start="305:13" pos:end="305:15">int</name></type>    <name pos:start="305:20" pos:end="305:26">minbits</name> <init pos:start="305:28" pos:end="307:63">= <expr pos:start="305:30" pos:end="307:63"><name pos:start="305:30" pos:end="305:42"><name pos:start="305:30" pos:end="305:30">s</name><operator pos:start="305:31" pos:end="305:32">-&gt;</operator><name pos:start="305:33" pos:end="305:42">frame_bits</name></name> <operator pos:start="305:44" pos:end="305:44">-</operator> <literal type="number" pos:start="305:46" pos:end="305:46">8</literal> <operator pos:start="305:48" pos:end="305:48">*</operator>

                             <operator pos:start="307:30" pos:end="307:30">(</operator><name pos:start="307:31" pos:end="307:46"><name pos:start="307:31" pos:end="307:31">s</name><operator pos:start="307:32" pos:end="307:33">-&gt;</operator><name pos:start="307:34" pos:end="307:46">vbv_delay_ptr</name></name> <operator pos:start="307:48" pos:end="307:48">-</operator> <name pos:start="307:50" pos:end="307:58"><name pos:start="307:50" pos:end="307:50">s</name><operator pos:start="307:51" pos:end="307:52">-&gt;</operator><name pos:start="307:53" pos:end="307:54">pb</name><operator pos:start="307:55" pos:end="307:55">.</operator><name pos:start="307:56" pos:end="307:58">buf</name></name> <operator pos:start="307:60" pos:end="307:60">-</operator> <literal type="number" pos:start="307:62" pos:end="307:62">1</literal><operator pos:start="307:63" pos:end="307:63">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="309:13" pos:end="309:75"><decl pos:start="309:13" pos:end="309:74"><type pos:start="309:13" pos:end="309:18"><name pos:start="309:13" pos:end="309:18">double</name></type> <name pos:start="309:20" pos:end="309:23">bits</name>    <init pos:start="309:28" pos:end="309:74">= <expr pos:start="309:30" pos:end="309:74"><name pos:start="309:30" pos:end="309:55"><name pos:start="309:30" pos:end="309:30">s</name><operator pos:start="309:31" pos:end="309:32">-&gt;</operator><name pos:start="309:33" pos:end="309:42">rc_context</name><operator pos:start="309:43" pos:end="309:43">.</operator><name pos:start="309:44" pos:end="309:55">buffer_index</name></name> <operator pos:start="309:57" pos:end="309:57">+</operator> <name pos:start="309:59" pos:end="309:65">minbits</name> <operator pos:start="309:67" pos:end="309:67">-</operator> <name pos:start="309:69" pos:end="309:74">inbits</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="313:13" pos:end="317:58"><if pos:start="313:13" pos:end="317:58">if <condition pos:start="313:16" pos:end="313:25">(<expr pos:start="313:17" pos:end="313:24"><name pos:start="313:17" pos:end="313:20">bits</name> <operator pos:start="313:22" pos:end="313:22">&lt;</operator> <literal type="number" pos:start="313:24" pos:end="313:24">0</literal></expr>)</condition><block type="pseudo" pos:start="315:17" pos:end="317:58"><block_content pos:start="315:17" pos:end="317:58">

                <expr_stmt pos:start="315:17" pos:end="317:58"><expr pos:start="315:17" pos:end="317:57"><call pos:start="315:17" pos:end="317:57"><name pos:start="315:17" pos:end="315:22">av_log</name><argument_list pos:start="315:23" pos:end="317:57">(<argument pos:start="315:24" pos:end="315:31"><expr pos:start="315:24" pos:end="315:31"><name pos:start="315:24" pos:end="315:31"><name pos:start="315:24" pos:end="315:24">s</name><operator pos:start="315:25" pos:end="315:26">-&gt;</operator><name pos:start="315:27" pos:end="315:31">avctx</name></name></expr></argument>, <argument pos:start="315:34" pos:end="315:45"><expr pos:start="315:34" pos:end="315:45"><name pos:start="315:34" pos:end="315:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="317:24" pos:end="317:56"><expr pos:start="317:24" pos:end="317:56"><literal type="string" pos:start="317:24" pos:end="317:56">"Internal error, negative bits\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="321:13" pos:end="321:47"><expr pos:start="321:13" pos:end="321:46"><call pos:start="321:13" pos:end="321:46"><name pos:start="321:13" pos:end="321:18">assert</name><argument_list pos:start="321:19" pos:end="321:46">(<argument pos:start="321:20" pos:end="321:45"><expr pos:start="321:20" pos:end="321:45"><name pos:start="321:20" pos:end="321:40"><name pos:start="321:20" pos:end="321:20">s</name><operator pos:start="321:21" pos:end="321:22">-&gt;</operator><name pos:start="321:23" pos:end="321:40">repeat_first_field</name></name> <operator pos:start="321:42" pos:end="321:43">==</operator> <literal type="number" pos:start="321:45" pos:end="321:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="325:13" pos:end="325:61"><expr pos:start="325:13" pos:end="325:60"><name pos:start="325:13" pos:end="325:21">vbv_delay</name> <operator pos:start="325:23" pos:end="325:23">=</operator> <name pos:start="325:25" pos:end="325:28">bits</name> <operator pos:start="325:30" pos:end="325:30">*</operator> <literal type="number" pos:start="325:32" pos:end="325:36">90000</literal> <operator pos:start="325:38" pos:end="325:38">/</operator> <name pos:start="325:40" pos:end="325:60"><name pos:start="325:40" pos:end="325:40">s</name><operator pos:start="325:41" pos:end="325:42">-&gt;</operator><name pos:start="325:43" pos:end="325:47">avctx</name><operator pos:start="325:48" pos:end="325:49">-&gt;</operator><name pos:start="325:50" pos:end="325:60">rc_max_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="329:46"><expr pos:start="327:13" pos:end="329:45"><name pos:start="327:13" pos:end="327:21">min_delay</name> <operator pos:start="327:23" pos:end="327:23">=</operator> <operator pos:start="327:25" pos:end="327:25">(</operator><name pos:start="327:26" pos:end="327:32">minbits</name> <operator pos:start="327:34" pos:end="327:34">*</operator> <literal type="number" pos:start="327:36" pos:end="327:44">90000LL</literal> <operator pos:start="327:44" pos:end="327:44">+</operator> <name pos:start="327:46" pos:end="327:66"><name pos:start="327:46" pos:end="327:46">s</name><operator pos:start="327:47" pos:end="327:48">-&gt;</operator><name pos:start="327:49" pos:end="327:53">avctx</name><operator pos:start="327:54" pos:end="327:55">-&gt;</operator><name pos:start="327:56" pos:end="327:66">rc_max_rate</name></name> <operator pos:start="327:68" pos:end="327:68">-</operator> <literal type="number" pos:start="327:70" pos:end="327:70">1</literal><operator pos:start="327:71" pos:end="327:71">)</operator> <operator pos:start="327:73" pos:end="327:73">/</operator>

                        <name pos:start="329:25" pos:end="329:45"><name pos:start="329:25" pos:end="329:25">s</name><operator pos:start="329:26" pos:end="329:27">-&gt;</operator><name pos:start="329:28" pos:end="329:32">avctx</name><operator pos:start="329:33" pos:end="329:34">-&gt;</operator><name pos:start="329:35" pos:end="329:45">rc_max_rate</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="333:13" pos:end="333:52"><expr pos:start="333:13" pos:end="333:51"><name pos:start="333:13" pos:end="333:21">vbv_delay</name> <operator pos:start="333:23" pos:end="333:23">=</operator> <call pos:start="333:25" pos:end="333:51"><name pos:start="333:25" pos:end="333:29">FFMAX</name><argument_list pos:start="333:30" pos:end="333:51">(<argument pos:start="333:31" pos:end="333:39"><expr pos:start="333:31" pos:end="333:39"><name pos:start="333:31" pos:end="333:39">vbv_delay</name></expr></argument>, <argument pos:start="333:42" pos:end="333:50"><expr pos:start="333:42" pos:end="333:50"><name pos:start="333:42" pos:end="333:50">min_delay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="337:13" pos:end="337:43"><expr pos:start="337:13" pos:end="337:42"><call pos:start="337:13" pos:end="337:42"><name pos:start="337:13" pos:end="337:22">av_assert0</name><argument_list pos:start="337:23" pos:end="337:42">(<argument pos:start="337:24" pos:end="337:41"><expr pos:start="337:24" pos:end="337:41"><name pos:start="337:24" pos:end="337:32">vbv_delay</name> <operator pos:start="337:34" pos:end="337:34">&lt;</operator> <literal type="number" pos:start="337:36" pos:end="337:41">0xFFFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="341:13" pos:end="341:40"><expr pos:start="341:13" pos:end="341:39"><name pos:start="341:13" pos:end="341:31"><name pos:start="341:13" pos:end="341:13">s</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:28">vbv_delay_ptr</name><index pos:start="341:29" pos:end="341:31">[<expr pos:start="341:30" pos:end="341:30"><literal type="number" pos:start="341:30" pos:end="341:30">0</literal></expr>]</index></name> <operator pos:start="341:33" pos:end="341:34">&amp;=</operator> <literal type="number" pos:start="341:36" pos:end="341:39">0xF8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:51"><expr pos:start="343:13" pos:end="343:50"><name pos:start="343:13" pos:end="343:31"><name pos:start="343:13" pos:end="343:13">s</name><operator pos:start="343:14" pos:end="343:15">-&gt;</operator><name pos:start="343:16" pos:end="343:28">vbv_delay_ptr</name><index pos:start="343:29" pos:end="343:31">[<expr pos:start="343:30" pos:end="343:30"><literal type="number" pos:start="343:30" pos:end="343:30">0</literal></expr>]</index></name> <operator pos:start="343:33" pos:end="343:34">|=</operator> <name pos:start="343:36" pos:end="343:44">vbv_delay</name> <operator pos:start="343:46" pos:end="343:47">&gt;&gt;</operator> <literal type="number" pos:start="343:49" pos:end="343:50">13</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:50"><expr pos:start="345:13" pos:end="345:49"><name pos:start="345:13" pos:end="345:31"><name pos:start="345:13" pos:end="345:13">s</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:28">vbv_delay_ptr</name><index pos:start="345:29" pos:end="345:31">[<expr pos:start="345:30" pos:end="345:30"><literal type="number" pos:start="345:30" pos:end="345:30">1</literal></expr>]</index></name>  <operator pos:start="345:34" pos:end="345:34">=</operator> <name pos:start="345:36" pos:end="345:44">vbv_delay</name> <operator pos:start="345:46" pos:end="345:47">&gt;&gt;</operator> <literal type="number" pos:start="345:49" pos:end="345:49">5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:40"><expr pos:start="347:13" pos:end="347:39"><name pos:start="347:13" pos:end="347:31"><name pos:start="347:13" pos:end="347:13">s</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:28">vbv_delay_ptr</name><index pos:start="347:29" pos:end="347:31">[<expr pos:start="347:30" pos:end="347:30"><literal type="number" pos:start="347:30" pos:end="347:30">2</literal></expr>]</index></name> <operator pos:start="347:33" pos:end="347:34">&amp;=</operator> <literal type="number" pos:start="347:36" pos:end="347:39">0x07</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:50"><expr pos:start="349:13" pos:end="349:49"><name pos:start="349:13" pos:end="349:31"><name pos:start="349:13" pos:end="349:13">s</name><operator pos:start="349:14" pos:end="349:15">-&gt;</operator><name pos:start="349:16" pos:end="349:28">vbv_delay_ptr</name><index pos:start="349:29" pos:end="349:31">[<expr pos:start="349:30" pos:end="349:30"><literal type="number" pos:start="349:30" pos:end="349:30">2</literal></expr>]</index></name> <operator pos:start="349:33" pos:end="349:34">|=</operator> <name pos:start="349:36" pos:end="349:44">vbv_delay</name> <operator pos:start="349:46" pos:end="349:47">&lt;&lt;</operator> <literal type="number" pos:start="349:49" pos:end="349:49">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:51"><expr pos:start="351:13" pos:end="351:50"><name pos:start="351:13" pos:end="351:28"><name pos:start="351:13" pos:end="351:17">avctx</name><operator pos:start="351:18" pos:end="351:19">-&gt;</operator><name pos:start="351:20" pos:end="351:28">vbv_delay</name></name>     <operator pos:start="351:34" pos:end="351:34">=</operator> <name pos:start="351:36" pos:end="351:44">vbv_delay</name> <operator pos:start="351:46" pos:end="351:46">*</operator> <literal type="number" pos:start="351:48" pos:end="351:50">300</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:43"><expr pos:start="355:9" pos:end="355:42"><name pos:start="355:9" pos:end="355:21"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:21">total_bits</name></name>     <operator pos:start="355:27" pos:end="355:28">+=</operator> <name pos:start="355:30" pos:end="355:42"><name pos:start="355:30" pos:end="355:30">s</name><operator pos:start="355:31" pos:end="355:32">-&gt;</operator><name pos:start="355:33" pos:end="355:42">frame_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:43"><expr pos:start="357:9" pos:end="357:42"><name pos:start="357:9" pos:end="357:25"><name pos:start="357:9" pos:end="357:13">avctx</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:25">frame_bits</name></name>  <operator pos:start="357:28" pos:end="357:28">=</operator> <name pos:start="357:30" pos:end="357:42"><name pos:start="357:30" pos:end="357:30">s</name><operator pos:start="357:31" pos:end="357:32">-&gt;</operator><name pos:start="357:33" pos:end="357:42">frame_bits</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="361:9" pos:end="361:44"><expr pos:start="361:9" pos:end="361:43"><name pos:start="361:9" pos:end="361:16"><name pos:start="361:9" pos:end="361:11">pkt</name><operator pos:start="361:12" pos:end="361:13">-&gt;</operator><name pos:start="361:14" pos:end="361:16">pts</name></name> <operator pos:start="361:18" pos:end="361:18">=</operator> <name pos:start="361:20" pos:end="361:43"><name pos:start="361:20" pos:end="361:20">s</name><operator pos:start="361:21" pos:end="361:22">-&gt;</operator><name pos:start="361:23" pos:end="361:37">current_picture</name><operator pos:start="361:38" pos:end="361:38">.</operator><name pos:start="361:39" pos:end="361:39">f</name><operator pos:start="361:40" pos:end="361:40">.</operator><name pos:start="361:41" pos:end="361:43">pts</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="363:9" pos:end="377:32"><if pos:start="363:9" pos:end="375:9">if <condition pos:start="363:12" pos:end="363:63">(<expr pos:start="363:13" pos:end="363:62"><operator pos:start="363:13" pos:end="363:13">!</operator><name pos:start="363:14" pos:end="363:25"><name pos:start="363:14" pos:end="363:14">s</name><operator pos:start="363:15" pos:end="363:16">-&gt;</operator><name pos:start="363:17" pos:end="363:25">low_delay</name></name> <operator pos:start="363:27" pos:end="363:28">&amp;&amp;</operator> <name pos:start="363:30" pos:end="363:41"><name pos:start="363:30" pos:end="363:30">s</name><operator pos:start="363:31" pos:end="363:32">-&gt;</operator><name pos:start="363:33" pos:end="363:41">pict_type</name></name> <operator pos:start="363:43" pos:end="363:44">!=</operator> <name pos:start="363:46" pos:end="363:62">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="363:65" pos:end="375:9">{<block_content pos:start="365:13" pos:end="373:40">

            <if_stmt pos:start="365:13" pos:end="371:44"><if pos:start="365:13" pos:end="367:51">if <condition pos:start="365:16" pos:end="365:59">(<expr pos:start="365:17" pos:end="365:58"><operator pos:start="365:17" pos:end="365:17">!</operator><name pos:start="365:18" pos:end="365:58"><name pos:start="365:18" pos:end="365:18">s</name><operator pos:start="365:19" pos:end="365:20">-&gt;</operator><name pos:start="365:21" pos:end="365:35">current_picture</name><operator pos:start="365:36" pos:end="365:36">.</operator><name pos:start="365:37" pos:end="365:37">f</name><operator pos:start="365:38" pos:end="365:38">.</operator><name pos:start="365:39" pos:end="365:58">coded_picture_number</name></name></expr>)</condition><block type="pseudo" pos:start="367:17" pos:end="367:51"><block_content pos:start="367:17" pos:end="367:51">

                <expr_stmt pos:start="367:17" pos:end="367:51"><expr pos:start="367:17" pos:end="367:50"><name pos:start="367:17" pos:end="367:24"><name pos:start="367:17" pos:end="367:19">pkt</name><operator pos:start="367:20" pos:end="367:21">-&gt;</operator><name pos:start="367:22" pos:end="367:24">dts</name></name> <operator pos:start="367:26" pos:end="367:26">=</operator> <name pos:start="367:28" pos:end="367:35"><name pos:start="367:28" pos:end="367:30">pkt</name><operator pos:start="367:31" pos:end="367:32">-&gt;</operator><name pos:start="367:33" pos:end="367:35">pts</name></name> <operator pos:start="367:37" pos:end="367:37">-</operator> <name pos:start="367:39" pos:end="367:50"><name pos:start="367:39" pos:end="367:39">s</name><operator pos:start="367:40" pos:end="367:41">-&gt;</operator><name pos:start="367:42" pos:end="367:50">dts_delta</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="369:13" pos:end="371:44">else<block type="pseudo" pos:start="371:17" pos:end="371:44"><block_content pos:start="371:17" pos:end="371:44">

                <expr_stmt pos:start="371:17" pos:end="371:44"><expr pos:start="371:17" pos:end="371:43"><name pos:start="371:17" pos:end="371:24"><name pos:start="371:17" pos:end="371:19">pkt</name><operator pos:start="371:20" pos:end="371:21">-&gt;</operator><name pos:start="371:22" pos:end="371:24">dts</name></name> <operator pos:start="371:26" pos:end="371:26">=</operator> <name pos:start="371:28" pos:end="371:43"><name pos:start="371:28" pos:end="371:28">s</name><operator pos:start="371:29" pos:end="371:30">-&gt;</operator><name pos:start="371:31" pos:end="371:43">reordered_pts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:40"><expr pos:start="373:13" pos:end="373:39"><name pos:start="373:13" pos:end="373:28"><name pos:start="373:13" pos:end="373:13">s</name><operator pos:start="373:14" pos:end="373:15">-&gt;</operator><name pos:start="373:16" pos:end="373:28">reordered_pts</name></name> <operator pos:start="373:30" pos:end="373:30">=</operator> <name pos:start="373:32" pos:end="373:39"><name pos:start="373:32" pos:end="373:34">pkt</name><operator pos:start="373:35" pos:end="373:36">-&gt;</operator><name pos:start="373:37" pos:end="373:39">pts</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="375:11" pos:end="377:32">else<block type="pseudo" pos:start="377:13" pos:end="377:32"><block_content pos:start="377:13" pos:end="377:32">

            <expr_stmt pos:start="377:13" pos:end="377:32"><expr pos:start="377:13" pos:end="377:31"><name pos:start="377:13" pos:end="377:20"><name pos:start="377:13" pos:end="377:15">pkt</name><operator pos:start="377:16" pos:end="377:17">-&gt;</operator><name pos:start="377:18" pos:end="377:20">dts</name></name> <operator pos:start="377:22" pos:end="377:22">=</operator> <name pos:start="377:24" pos:end="377:31"><name pos:start="377:24" pos:end="377:26">pkt</name><operator pos:start="377:27" pos:end="377:28">-&gt;</operator><name pos:start="377:29" pos:end="377:31">pts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="379:9" pos:end="381:42"><if pos:start="379:9" pos:end="381:42">if <condition pos:start="379:12" pos:end="379:43">(<expr pos:start="379:13" pos:end="379:42"><name pos:start="379:13" pos:end="379:42"><name pos:start="379:13" pos:end="379:13">s</name><operator pos:start="379:14" pos:end="379:15">-&gt;</operator><name pos:start="379:16" pos:end="379:30">current_picture</name><operator pos:start="379:31" pos:end="379:31">.</operator><name pos:start="379:32" pos:end="379:32">f</name><operator pos:start="379:33" pos:end="379:33">.</operator><name pos:start="379:34" pos:end="379:42">key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="381:13" pos:end="381:42"><block_content pos:start="381:13" pos:end="381:42">

            <expr_stmt pos:start="381:13" pos:end="381:42"><expr pos:start="381:13" pos:end="381:41"><name pos:start="381:13" pos:end="381:22"><name pos:start="381:13" pos:end="381:15">pkt</name><operator pos:start="381:16" pos:end="381:17">-&gt;</operator><name pos:start="381:18" pos:end="381:22">flags</name></name> <operator pos:start="381:24" pos:end="381:25">|=</operator> <name pos:start="381:27" pos:end="381:41">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="383:9" pos:end="385:87"><if pos:start="383:9" pos:end="385:87">if <condition pos:start="383:12" pos:end="383:23">(<expr pos:start="383:13" pos:end="383:22"><name pos:start="383:13" pos:end="383:22"><name pos:start="383:13" pos:end="383:13">s</name><operator pos:start="383:14" pos:end="383:15">-&gt;</operator><name pos:start="383:16" pos:end="383:22">mb_info</name></name></expr>)</condition><block type="pseudo" pos:start="385:13" pos:end="385:87"><block_content pos:start="385:13" pos:end="385:87">

            <expr_stmt pos:start="385:13" pos:end="385:87"><expr pos:start="385:13" pos:end="385:86"><call pos:start="385:13" pos:end="385:86"><name pos:start="385:13" pos:end="385:38">av_packet_shrink_side_data</name><argument_list pos:start="385:39" pos:end="385:86">(<argument pos:start="385:40" pos:end="385:42"><expr pos:start="385:40" pos:end="385:42"><name pos:start="385:40" pos:end="385:42">pkt</name></expr></argument>, <argument pos:start="385:45" pos:end="385:68"><expr pos:start="385:45" pos:end="385:68"><name pos:start="385:45" pos:end="385:68">AV_PKT_DATA_H263_MB_INFO</name></expr></argument>, <argument pos:start="385:71" pos:end="385:85"><expr pos:start="385:71" pos:end="385:85"><name pos:start="385:71" pos:end="385:85"><name pos:start="385:71" pos:end="385:71">s</name><operator pos:start="385:72" pos:end="385:73">-&gt;</operator><name pos:start="385:74" pos:end="385:85">mb_info_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="387:7" pos:end="391:5">else <block pos:start="387:12" pos:end="391:5">{<block_content pos:start="389:9" pos:end="389:26">

        <expr_stmt pos:start="389:9" pos:end="389:26"><expr pos:start="389:9" pos:end="389:25"><name pos:start="389:9" pos:end="389:21"><name pos:start="389:9" pos:end="389:9">s</name><operator pos:start="389:10" pos:end="389:11">-&gt;</operator><name pos:start="389:12" pos:end="389:21">frame_bits</name></name> <operator pos:start="389:23" pos:end="389:23">=</operator> <literal type="number" pos:start="389:25" pos:end="389:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="393:5" pos:end="393:37"><expr pos:start="393:5" pos:end="393:36"><call pos:start="393:5" pos:end="393:36"><name pos:start="393:5" pos:end="393:10">assert</name><argument_list pos:start="393:11" pos:end="393:36">(<argument pos:start="393:12" pos:end="393:35"><expr pos:start="393:12" pos:end="393:35"><operator pos:start="393:12" pos:end="393:12">(</operator><name pos:start="393:13" pos:end="393:25"><name pos:start="393:13" pos:end="393:13">s</name><operator pos:start="393:14" pos:end="393:15">-&gt;</operator><name pos:start="393:16" pos:end="393:25">frame_bits</name></name> <operator pos:start="393:27" pos:end="393:27">&amp;</operator> <literal type="number" pos:start="393:29" pos:end="393:29">7</literal><operator pos:start="393:30" pos:end="393:30">)</operator> <operator pos:start="393:32" pos:end="393:33">==</operator> <literal type="number" pos:start="393:35" pos:end="393:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="397:5" pos:end="397:34"><expr pos:start="397:5" pos:end="397:33"><name pos:start="397:5" pos:end="397:13"><name pos:start="397:5" pos:end="397:7">pkt</name><operator pos:start="397:8" pos:end="397:9">-&gt;</operator><name pos:start="397:10" pos:end="397:13">size</name></name> <operator pos:start="397:15" pos:end="397:15">=</operator> <name pos:start="397:17" pos:end="397:29"><name pos:start="397:17" pos:end="397:17">s</name><operator pos:start="397:18" pos:end="397:19">-&gt;</operator><name pos:start="397:20" pos:end="397:29">frame_bits</name></name> <operator pos:start="397:31" pos:end="397:31">/</operator> <literal type="number" pos:start="397:33" pos:end="397:33">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="399:5" pos:end="399:30"><expr pos:start="399:5" pos:end="399:29"><operator pos:start="399:5" pos:end="399:5">*</operator><name pos:start="399:6" pos:end="399:15">got_packet</name> <operator pos:start="399:17" pos:end="399:17">=</operator> <operator pos:start="399:19" pos:end="399:19">!</operator><operator pos:start="399:20" pos:end="399:20">!</operator><name pos:start="399:21" pos:end="399:29"><name pos:start="399:21" pos:end="399:23">pkt</name><operator pos:start="399:24" pos:end="399:25">-&gt;</operator><name pos:start="399:26" pos:end="399:29">size</name></name></expr>;</expr_stmt>

    <return pos:start="401:5" pos:end="401:13">return <expr pos:start="401:12" pos:end="401:12"><literal type="number" pos:start="401:12" pos:end="401:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
