<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14545.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">qemu_del_polling_cb</name><parameter_list pos:start="1:25" pos:end="1:57">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:36">PollingFunc</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">func</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:48">void</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:56">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:16">PollingEntry</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier><modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">ppe</name></decl>, <decl pos:start="5:25" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:27">pe</name></decl>;</decl_stmt>

    <for pos:start="7:5" pos:end="21:5">for<control pos:start="7:8" pos:end="7:70">(<init pos:start="7:9" pos:end="7:35"><expr pos:start="7:9" pos:end="7:34"><name pos:start="7:9" pos:end="7:11">ppe</name> <operator pos:start="7:13" pos:end="7:13">=</operator> <operator pos:start="7:15" pos:end="7:15">&amp;</operator><name pos:start="7:16" pos:end="7:34">first_polling_entry</name></expr>;</init> <condition pos:start="7:37" pos:end="7:49"><expr pos:start="7:37" pos:end="7:48"><operator pos:start="7:37" pos:end="7:37">*</operator><name pos:start="7:38" pos:end="7:40">ppe</name> <operator pos:start="7:42" pos:end="7:43">!=</operator> <name pos:start="7:45" pos:end="7:48">NULL</name></expr>;</condition> <incr pos:start="7:51" pos:end="7:69"><expr pos:start="7:51" pos:end="7:69"><name pos:start="7:51" pos:end="7:53">ppe</name> <operator pos:start="7:55" pos:end="7:55">=</operator> <operator pos:start="7:57" pos:end="7:57">&amp;</operator><name pos:start="7:58" pos:end="7:69"><operator pos:start="7:58" pos:end="7:58">(</operator><operator pos:start="7:59" pos:end="7:59">*</operator><name pos:start="7:60" pos:end="7:62">ppe</name><operator pos:start="7:63" pos:end="7:63">)</operator><operator pos:start="7:64" pos:end="7:65">-&gt;</operator><name pos:start="7:66" pos:end="7:69">next</name></name></expr></incr>)</control> <block pos:start="7:72" pos:end="21:5">{<block_content pos:start="9:9" pos:end="19:9">

        <expr_stmt pos:start="9:9" pos:end="9:18"><expr pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:10">pe</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <operator pos:start="9:14" pos:end="9:14">*</operator><name pos:start="9:15" pos:end="9:17">ppe</name></expr>;</expr_stmt>

        <if_stmt pos:start="11:9" pos:end="19:9"><if pos:start="11:9" pos:end="19:9">if <condition pos:start="11:12" pos:end="11:53">(<expr pos:start="11:13" pos:end="11:52"><name pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:14">pe</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:20">func</name></name> <operator pos:start="11:22" pos:end="11:23">==</operator> <name pos:start="11:25" pos:end="11:28">func</name> <operator pos:start="11:30" pos:end="11:31">&amp;&amp;</operator> <name pos:start="11:33" pos:end="11:42"><name pos:start="11:33" pos:end="11:34">pe</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:42">opaque</name></name> <operator pos:start="11:44" pos:end="11:45">==</operator> <name pos:start="11:47" pos:end="11:52">opaque</name></expr>)</condition> <block pos:start="11:55" pos:end="19:9">{<block_content pos:start="13:13" pos:end="17:18">

            <expr_stmt pos:start="13:13" pos:end="13:28"><expr pos:start="13:13" pos:end="13:27"><operator pos:start="13:13" pos:end="13:13">*</operator><name pos:start="13:14" pos:end="13:16">ppe</name> <operator pos:start="13:18" pos:end="13:18">=</operator> <name pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:21">pe</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:27">next</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="15:13" pos:end="15:23"><expr pos:start="15:13" pos:end="15:22"><call pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:18">g_free</name><argument_list pos:start="15:19" pos:end="15:22">(<argument pos:start="15:20" pos:end="15:21"><expr pos:start="15:20" pos:end="15:21"><name pos:start="15:20" pos:end="15:21">pe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="17:13" pos:end="17:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
