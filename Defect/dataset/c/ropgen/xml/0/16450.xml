<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16450.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">cook_decode_close</name><parameter_list pos:start="1:29" pos:end="1:51">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">COOKContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">q</name> <init pos:start="7:20" pos:end="7:37">= <expr pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:26">avctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:56"><expr pos:start="9:5" pos:end="9:55"><call pos:start="9:5" pos:end="9:55"><name pos:start="9:5" pos:end="9:10">av_log</name><argument_list pos:start="9:11" pos:end="9:55">(<argument pos:start="9:12" pos:end="9:15"><expr pos:start="9:12" pos:end="9:15"><name pos:start="9:12" pos:end="9:15">NULL</name></expr></argument>,<argument pos:start="9:17" pos:end="9:28"><expr pos:start="9:17" pos:end="9:28"><name pos:start="9:17" pos:end="9:28">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="9:31" pos:end="9:54"><expr pos:start="9:31" pos:end="9:54"><literal type="string" pos:start="9:31" pos:end="9:54">"Deallocating memory.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:40">/* Free allocated memory buffers. */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><call pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:11">av_free</name><argument_list pos:start="15:12" pos:end="15:26">(<argument pos:start="15:13" pos:end="15:25"><expr pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:13">q</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:25">mlt_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><call pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:11">av_free</name><argument_list pos:start="17:12" pos:end="17:26">(<argument pos:start="17:13" pos:end="17:25"><expr pos:start="17:13" pos:end="17:25"><name pos:start="17:13" pos:end="17:25"><name pos:start="17:13" pos:end="17:13">q</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">mlt_precos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><call pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:11">av_free</name><argument_list pos:start="19:12" pos:end="19:26">(<argument pos:start="19:13" pos:end="19:25"><expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:13">q</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:25">mlt_presin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><call pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:11">av_free</name><argument_list pos:start="21:12" pos:end="21:27">(<argument pos:start="21:13" pos:end="21:26"><expr pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:13">q</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:26">mlt_postcos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:11">av_free</name><argument_list pos:start="23:12" pos:end="23:35">(<argument pos:start="23:13" pos:end="23:34"><expr pos:start="23:13" pos:end="23:34"><name pos:start="23:13" pos:end="23:34"><name pos:start="23:13" pos:end="23:13">q</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:34">frame_reorder_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><call pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:11">av_free</name><argument_list pos:start="25:12" pos:end="25:36">(<argument pos:start="25:13" pos:end="25:35"><expr pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:35"><name pos:start="25:13" pos:end="25:13">q</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:35">frame_reorder_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><call pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:11">av_free</name><argument_list pos:start="27:12" pos:end="27:36">(<argument pos:start="27:13" pos:end="27:35"><expr pos:start="27:13" pos:end="27:35"><name pos:start="27:13" pos:end="27:35"><name pos:start="27:13" pos:end="27:13">q</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:35">decoded_bytes_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:29">/* Free the transform. */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><call pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:14">ff_fft_end</name><argument_list pos:start="33:15" pos:end="33:27">(<argument pos:start="33:16" pos:end="33:26"><expr pos:start="33:16" pos:end="33:26"><operator pos:start="33:16" pos:end="33:16">&amp;</operator><name pos:start="33:17" pos:end="33:26"><name pos:start="33:17" pos:end="33:17">q</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:26">fft_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:30">/* Free the VLC tables. */</comment>

    <for pos:start="39:5" pos:end="43:5">for <control pos:start="39:9" pos:end="39:26">(<init pos:start="39:10" pos:end="39:14"><expr pos:start="39:10" pos:end="39:12"><name pos:start="39:10" pos:end="39:10">i</name><operator pos:start="39:11" pos:end="39:11">=</operator><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr> ;</init> <condition pos:start="39:16" pos:end="39:21"><expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:16">i</name><operator pos:start="39:17" pos:end="39:17">&lt;</operator><literal type="number" pos:start="39:18" pos:end="39:19">13</literal></expr> ;</condition> <incr pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><name pos:start="39:23" pos:end="39:23">i</name><operator pos:start="39:24" pos:end="39:25">++</operator></expr></incr>)</control> <block pos:start="39:28" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:46">

        <expr_stmt pos:start="41:9" pos:end="41:46"><expr pos:start="41:9" pos:end="41:45"><call pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:16">free_vlc</name><argument_list pos:start="41:17" pos:end="41:45">(<argument pos:start="41:18" pos:end="41:44"><expr pos:start="41:18" pos:end="41:44"><operator pos:start="41:18" pos:end="41:18">&amp;</operator><name pos:start="41:19" pos:end="41:44"><name pos:start="41:19" pos:end="41:19">q</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:41">envelope_quant_index</name><index pos:start="41:42" pos:end="41:44">[<expr pos:start="41:43" pos:end="41:43"><name pos:start="41:43" pos:end="41:43">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="45:5" pos:end="49:5">for <control pos:start="45:9" pos:end="45:25">(<init pos:start="45:10" pos:end="45:14"><expr pos:start="45:10" pos:end="45:12"><name pos:start="45:10" pos:end="45:10">i</name><operator pos:start="45:11" pos:end="45:11">=</operator><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr> ;</init> <condition pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:16">i</name><operator pos:start="45:17" pos:end="45:17">&lt;</operator><literal type="number" pos:start="45:18" pos:end="45:18">7</literal></expr> ;</condition> <incr pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><name pos:start="45:22" pos:end="45:22">i</name><operator pos:start="45:23" pos:end="45:24">++</operator></expr></incr>)</control> <block pos:start="45:27" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:30">

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><call pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:16">free_vlc</name><argument_list pos:start="47:17" pos:end="47:29">(<argument pos:start="47:18" pos:end="47:28"><expr pos:start="47:18" pos:end="47:28"><operator pos:start="47:18" pos:end="47:18">&amp;</operator><name pos:start="47:19" pos:end="47:28"><name pos:start="47:19" pos:end="47:19">q</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:25">sqvh</name><index pos:start="47:26" pos:end="47:28">[<expr pos:start="47:27" pos:end="47:27"><name pos:start="47:27" pos:end="47:27">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if<condition pos:start="51:7" pos:end="51:48">(<expr pos:start="51:8" pos:end="51:46"><name pos:start="51:8" pos:end="51:21"><name pos:start="51:8" pos:end="51:8">q</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:21">nb_channels</name></name><operator pos:start="51:22" pos:end="51:23">==</operator><literal type="number" pos:start="51:24" pos:end="51:24">2</literal> <operator pos:start="51:26" pos:end="51:27">&amp;&amp;</operator> <name pos:start="51:29" pos:end="51:43"><name pos:start="51:29" pos:end="51:29">q</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:43">joint_stereo</name></name><operator pos:start="51:44" pos:end="51:45">==</operator><literal type="number" pos:start="51:46" pos:end="51:46">1</literal></expr> )</condition><block pos:start="51:49" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:27">

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><call pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:16">free_vlc</name><argument_list pos:start="53:17" pos:end="53:26">(<argument pos:start="53:18" pos:end="53:25"><expr pos:start="53:18" pos:end="53:25"><operator pos:start="53:18" pos:end="53:18">&amp;</operator><name pos:start="53:19" pos:end="53:25"><name pos:start="53:19" pos:end="53:19">q</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:25">ccpl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:54"><expr pos:start="59:5" pos:end="59:53"><call pos:start="59:5" pos:end="59:53"><name pos:start="59:5" pos:end="59:10">av_log</name><argument_list pos:start="59:11" pos:end="59:53">(<argument pos:start="59:12" pos:end="59:15"><expr pos:start="59:12" pos:end="59:15"><name pos:start="59:12" pos:end="59:15">NULL</name></expr></argument>,<argument pos:start="59:17" pos:end="59:28"><expr pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:28">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="59:30" pos:end="59:52"><expr pos:start="59:30" pos:end="59:52"><literal type="string" pos:start="59:30" pos:end="59:52">"Memory deallocated.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
