<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11971.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">helper_memalign</name><parameter_list pos:start="1:21" pos:end="1:76">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:29">uint32_t</name></type> <name pos:start="1:31" pos:end="1:34">addr</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:44">uint32_t</name></type> <name pos:start="1:46" pos:end="1:47">dr</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:60"><decl pos:start="1:50" pos:end="1:60"><type pos:start="1:50" pos:end="1:60"><name pos:start="1:50" pos:end="1:57">uint32_t</name></type> <name pos:start="1:59" pos:end="1:60">wr</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:75"><decl pos:start="1:63" pos:end="1:75"><type pos:start="1:63" pos:end="1:75"><name pos:start="1:63" pos:end="1:70">uint32_t</name></type> <name pos:start="1:72" pos:end="1:75">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">mask</name></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="19:5">switch <condition pos:start="9:12" pos:end="9:17">(<expr pos:start="9:13" pos:end="9:16"><name pos:start="9:13" pos:end="9:16">size</name></expr>)</condition> <block pos:start="9:19" pos:end="19:5">{<block_content pos:start="11:9" pos:end="17:32">

        <case pos:start="11:9" pos:end="11:15">case <expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">4</literal></expr>:</case> <expr_stmt pos:start="11:17" pos:end="11:25"><expr pos:start="11:17" pos:end="11:24"><name pos:start="11:17" pos:end="11:20">mask</name> <operator pos:start="11:22" pos:end="11:22">=</operator> <literal type="number" pos:start="11:24" pos:end="11:24">3</literal></expr>;</expr_stmt> <break pos:start="11:27" pos:end="11:32">break;</break>

        <case pos:start="13:9" pos:end="13:15">case <expr pos:start="13:14" pos:end="13:14"><literal type="number" pos:start="13:14" pos:end="13:14">2</literal></expr>:</case> <expr_stmt pos:start="13:17" pos:end="13:25"><expr pos:start="13:17" pos:end="13:24"><name pos:start="13:17" pos:end="13:20">mask</name> <operator pos:start="13:22" pos:end="13:22">=</operator> <literal type="number" pos:start="13:24" pos:end="13:24">1</literal></expr>;</expr_stmt> <break pos:start="13:27" pos:end="13:32">break;</break>

        <default pos:start="15:9" pos:end="15:16">default:</default>

        <case pos:start="17:9" pos:end="17:15">case <expr pos:start="17:14" pos:end="17:14"><literal type="number" pos:start="17:14" pos:end="17:14">1</literal></expr>:</case> <expr_stmt pos:start="17:17" pos:end="17:25"><expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:20">mask</name> <operator pos:start="17:22" pos:end="17:22">=</operator> <literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr>;</expr_stmt> <break pos:start="17:27" pos:end="17:32">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="23:5" pos:end="49:5"><if pos:start="23:5" pos:end="49:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:12">addr</name> <operator pos:start="23:14" pos:end="23:14">&amp;</operator> <name pos:start="23:16" pos:end="23:19">mask</name></expr>)</condition> <block pos:start="23:22" pos:end="49:5">{<block_content pos:start="25:13" pos:end="47:49">

            <expr_stmt pos:start="25:13" pos:end="27:37"><expr pos:start="25:13" pos:end="27:36"><call pos:start="25:13" pos:end="27:36"><name pos:start="25:13" pos:end="25:20">qemu_log</name><argument_list pos:start="25:21" pos:end="27:36">(<argument pos:start="25:22" pos:end="25:64"><expr pos:start="25:22" pos:end="25:64"><literal type="string" pos:start="25:22" pos:end="25:64">"unaligned access addr=%x size=%d, wr=%d\n"</literal></expr></argument>,

                     <argument pos:start="27:22" pos:end="27:25"><expr pos:start="27:22" pos:end="27:25"><name pos:start="27:22" pos:end="27:25">addr</name></expr></argument>, <argument pos:start="27:28" pos:end="27:31"><expr pos:start="27:28" pos:end="27:31"><name pos:start="27:28" pos:end="27:31">size</name></expr></argument>, <argument pos:start="27:34" pos:end="27:35"><expr pos:start="27:34" pos:end="27:35"><name pos:start="27:34" pos:end="27:35">wr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="33:13"><if pos:start="29:13" pos:end="33:13">if <condition pos:start="29:16" pos:end="29:47">(<expr pos:start="29:17" pos:end="29:46"><operator pos:start="29:17" pos:end="29:17">!</operator><operator pos:start="29:18" pos:end="29:18">(</operator><name pos:start="29:19" pos:end="29:36"><name pos:start="29:19" pos:end="29:21">env</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:28">sregs</name><index pos:start="29:29" pos:end="29:36">[<expr pos:start="29:30" pos:end="29:35"><name pos:start="29:30" pos:end="29:35">SR_MSR</name></expr>]</index></name> <operator pos:start="29:38" pos:end="29:38">&amp;</operator> <name pos:start="29:40" pos:end="29:45">MSR_EE</name><operator pos:start="29:46" pos:end="29:46">)</operator></expr>)</condition> <block pos:start="29:49" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:23">

                <return pos:start="31:17" pos:end="31:23">return;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="37:13" pos:end="39:50"><expr pos:start="37:13" pos:end="39:49"><name pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:15">env</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:22">sregs</name><index pos:start="37:23" pos:end="37:30">[<expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">SR_ESR</name></expr>]</index></name> <operator pos:start="37:32" pos:end="37:32">=</operator> <name pos:start="37:34" pos:end="37:54">ESR_EC_UNALIGNED_DATA</name> <operator pos:start="37:56" pos:end="37:56">|</operator> <operator pos:start="37:58" pos:end="37:58">(</operator><name pos:start="37:59" pos:end="37:60">wr</name> <operator pos:start="37:62" pos:end="37:63">&lt;&lt;</operator> <literal type="number" pos:start="37:65" pos:end="37:66">10</literal><operator pos:start="37:67" pos:end="37:67">)</operator> \

                                 <operator pos:start="39:34" pos:end="39:34">|</operator> <operator pos:start="39:36" pos:end="39:36">(</operator><name pos:start="39:37" pos:end="39:38">dr</name> <operator pos:start="39:40" pos:end="39:40">&amp;</operator> <literal type="number" pos:start="39:42" pos:end="39:43">31</literal><operator pos:start="39:44" pos:end="39:44">)</operator> <operator pos:start="39:46" pos:end="39:47">&lt;&lt;</operator> <literal type="number" pos:start="39:49" pos:end="39:49">5</literal></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="45:13"><if pos:start="41:13" pos:end="45:13">if <condition pos:start="41:16" pos:end="41:26">(<expr pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:20">size</name> <operator pos:start="41:22" pos:end="41:23">==</operator> <literal type="number" pos:start="41:25" pos:end="41:25">4</literal></expr>)</condition> <block pos:start="41:28" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:46">

                <expr_stmt pos:start="43:17" pos:end="43:46"><expr pos:start="43:17" pos:end="43:45"><name pos:start="43:17" pos:end="43:34"><name pos:start="43:17" pos:end="43:19">env</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:26">sregs</name><index pos:start="43:27" pos:end="43:34">[<expr pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:33">SR_ESR</name></expr>]</index></name> <operator pos:start="43:36" pos:end="43:37">|=</operator> <literal type="number" pos:start="43:39" pos:end="43:39">1</literal> <operator pos:start="43:41" pos:end="43:42">&lt;&lt;</operator> <literal type="number" pos:start="43:44" pos:end="43:45">11</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:49"><expr pos:start="47:13" pos:end="47:48"><call pos:start="47:13" pos:end="47:48"><name pos:start="47:13" pos:end="47:34">helper_raise_exception</name><argument_list pos:start="47:35" pos:end="47:48">(<argument pos:start="47:36" pos:end="47:47"><expr pos:start="47:36" pos:end="47:47"><name pos:start="47:36" pos:end="47:47">EXCP_HW_EXCP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
