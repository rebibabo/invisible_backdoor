<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1581.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">copy_picture_field</name><parameter_list pos:start="1:24" pos:end="11:34">(<parameter pos:start="1:25" pos:end="1:53"><decl pos:start="1:25" pos:end="1:53"><type pos:start="1:25" pos:end="1:53"><name pos:start="1:25" pos:end="1:41">TInterlaceContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:53">tinterlace</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:39"><decl pos:start="3:25" pos:end="3:39"><type pos:start="3:25" pos:end="3:36"><name pos:start="3:25" pos:end="3:31">uint8_t</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:39"><name pos:start="3:34" pos:end="3:36">dst</name><index pos:start="3:37" pos:end="3:39">[<expr pos:start="3:38" pos:end="3:38"><literal type="number" pos:start="3:38" pos:end="3:38">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:60"><decl pos:start="3:42" pos:end="3:60"><type pos:start="3:42" pos:end="3:57"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:57">dst_linesize</name><index pos:start="3:58" pos:end="3:60">[<expr pos:start="3:59" pos:end="3:59"><literal type="number" pos:start="3:59" pos:end="3:59">4</literal></expr>]</index></name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:45"><decl pos:start="5:25" pos:end="5:45"><type pos:start="5:25" pos:end="5:42"><specifier pos:start="5:25" pos:end="5:29">const</specifier> <name pos:start="5:31" pos:end="5:37">uint8_t</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:45"><name pos:start="5:40" pos:end="5:42">src</name><index pos:start="5:43" pos:end="5:45">[<expr pos:start="5:44" pos:end="5:44"><literal type="number" pos:start="5:44" pos:end="5:44">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:66"><decl pos:start="5:48" pos:end="5:66"><type pos:start="5:48" pos:end="5:63"><name pos:start="5:48" pos:end="5:50">int</name></type> <name pos:start="5:52" pos:end="5:66"><name pos:start="5:52" pos:end="5:63">src_linesize</name><index pos:start="5:64" pos:end="5:66">[<expr pos:start="5:65" pos:end="5:65"><literal type="number" pos:start="5:65" pos:end="5:65">4</literal></expr>]</index></name></decl></parameter>,

                        <parameter pos:start="7:25" pos:end="7:49"><decl pos:start="7:25" pos:end="7:49"><type pos:start="7:25" pos:end="7:49"><name pos:start="7:25" pos:end="7:42"><name pos:start="7:25" pos:end="7:28">enum</name> <name pos:start="7:30" pos:end="7:42">AVPixelFormat</name></name></type> <name pos:start="7:44" pos:end="7:49">format</name></decl></parameter>, <parameter pos:start="7:52" pos:end="7:56"><decl pos:start="7:52" pos:end="7:56"><type pos:start="7:52" pos:end="7:56"><name pos:start="7:52" pos:end="7:54">int</name></type> <name pos:start="7:56" pos:end="7:56">w</name></decl></parameter>, <parameter pos:start="7:59" pos:end="7:67"><decl pos:start="7:59" pos:end="7:67"><type pos:start="7:59" pos:end="7:67"><name pos:start="7:59" pos:end="7:61">int</name></type> <name pos:start="7:63" pos:end="7:67">src_h</name></decl></parameter>,

                        <parameter pos:start="9:25" pos:end="9:37"><decl pos:start="9:25" pos:end="9:37"><type pos:start="9:25" pos:end="9:37"><name pos:start="9:25" pos:end="9:27">int</name></type> <name pos:start="9:29" pos:end="9:37">src_field</name></decl></parameter>, <parameter pos:start="9:40" pos:end="9:53"><decl pos:start="9:40" pos:end="9:53"><type pos:start="9:40" pos:end="9:53"><name pos:start="9:40" pos:end="9:42">int</name></type> <name pos:start="9:44" pos:end="9:53">interleave</name></decl></parameter>, <parameter pos:start="9:56" pos:end="9:68"><decl pos:start="9:56" pos:end="9:68"><type pos:start="9:56" pos:end="9:68"><name pos:start="9:56" pos:end="9:58">int</name></type> <name pos:start="9:60" pos:end="9:68">dst_field</name></decl></parameter>,

                        <parameter pos:start="11:25" pos:end="11:33"><decl pos:start="11:25" pos:end="11:33"><type pos:start="11:25" pos:end="11:33"><name pos:start="11:25" pos:end="11:27">int</name></type> <name pos:start="11:29" pos:end="11:33">flags</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="95:1">{<block_content pos:start="15:5" pos:end="93:5">

    <decl_stmt pos:start="15:5" pos:end="15:65"><decl pos:start="15:5" pos:end="15:64"><type pos:start="15:5" pos:end="15:30"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:28">AVPixFmtDescriptor</name> <modifier pos:start="15:30" pos:end="15:30">*</modifier></type><name pos:start="15:31" pos:end="15:34">desc</name> <init pos:start="15:36" pos:end="15:64">= <expr pos:start="15:38" pos:end="15:64"><call pos:start="15:38" pos:end="15:64"><name pos:start="15:38" pos:end="15:56">av_pix_fmt_desc_get</name><argument_list pos:start="15:57" pos:end="15:64">(<argument pos:start="15:58" pos:end="15:63"><expr pos:start="15:58" pos:end="15:63"><name pos:start="15:58" pos:end="15:63">format</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">hsub</name> <init pos:start="17:14" pos:end="17:34">= <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:19">desc</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:34">log2_chroma_w</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">plane</name></decl>, <decl pos:start="19:16" pos:end="19:41"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:16" pos:end="19:19">vsub</name> <init pos:start="19:21" pos:end="19:41">= <expr pos:start="19:23" pos:end="19:41"><name pos:start="19:23" pos:end="19:41"><name pos:start="19:23" pos:end="19:26">desc</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:41">log2_chroma_h</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:55"><decl pos:start="21:5" pos:end="21:54"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">k</name> <init pos:start="21:11" pos:end="21:54">= <expr pos:start="21:13" pos:end="21:54"><ternary pos:start="21:13" pos:end="21:54"><condition pos:start="21:13" pos:end="21:48"><expr pos:start="21:13" pos:end="21:46"><name pos:start="21:13" pos:end="21:21">src_field</name> <operator pos:start="21:23" pos:end="21:24">==</operator> <name pos:start="21:26" pos:end="21:46">FIELD_UPPER_AND_LOWER</name></expr> ?</condition><then pos:start="21:50" pos:end="21:50"> <expr pos:start="21:50" pos:end="21:50"><literal type="number" pos:start="21:50" pos:end="21:50">1</literal></expr> </then><else pos:start="21:52" pos:end="21:54">: <expr pos:start="21:54" pos:end="21:54"><literal type="number" pos:start="21:54" pos:end="21:54">2</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">h</name></decl>;</decl_stmt>



    <for pos:start="27:5" pos:end="93:5">for <control pos:start="27:9" pos:end="27:57">(<init pos:start="27:10" pos:end="27:19"><expr pos:start="27:10" pos:end="27:18"><name pos:start="27:10" pos:end="27:14">plane</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:48"><expr pos:start="27:21" pos:end="27:47"><name pos:start="27:21" pos:end="27:25">plane</name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <name pos:start="27:29" pos:end="27:47"><name pos:start="27:29" pos:end="27:32">desc</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:47">nb_components</name></name></expr>;</condition> <incr pos:start="27:50" pos:end="27:56"><expr pos:start="27:50" pos:end="27:56"><name pos:start="27:50" pos:end="27:54">plane</name><operator pos:start="27:55" pos:end="27:56">++</operator></expr></incr>)</control> <block pos:start="27:59" pos:end="93:5">{<block_content pos:start="29:9" pos:end="91:9">

        <decl_stmt pos:start="29:9" pos:end="29:83"><decl pos:start="29:9" pos:end="29:82"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:17">lines</name> <init pos:start="29:19" pos:end="29:82">= <expr pos:start="29:21" pos:end="29:82"><ternary pos:start="29:21" pos:end="29:82"><condition pos:start="29:21" pos:end="29:46"><expr pos:start="29:21" pos:end="29:44"><name pos:start="29:21" pos:end="29:25">plane</name> <operator pos:start="29:27" pos:end="29:28">==</operator> <literal type="number" pos:start="29:30" pos:end="29:30">1</literal> <operator pos:start="29:32" pos:end="29:33">||</operator> <name pos:start="29:35" pos:end="29:39">plane</name> <operator pos:start="29:41" pos:end="29:42">==</operator> <literal type="number" pos:start="29:44" pos:end="29:44">2</literal></expr> ?</condition><then pos:start="29:48" pos:end="29:74"> <expr pos:start="29:48" pos:end="29:74"><call pos:start="29:48" pos:end="29:74"><name pos:start="29:48" pos:end="29:61">AV_CEIL_RSHIFT</name><argument_list pos:start="29:62" pos:end="29:74">(<argument pos:start="29:63" pos:end="29:67"><expr pos:start="29:63" pos:end="29:67"><name pos:start="29:63" pos:end="29:67">src_h</name></expr></argument>, <argument pos:start="29:70" pos:end="29:73"><expr pos:start="29:70" pos:end="29:73"><name pos:start="29:70" pos:end="29:73">vsub</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="29:76" pos:end="29:82">: <expr pos:start="29:78" pos:end="29:82"><name pos:start="29:78" pos:end="29:82">src_h</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:79"><decl pos:start="31:9" pos:end="31:78"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:16">cols</name>  <init pos:start="31:19" pos:end="31:78">= <expr pos:start="31:21" pos:end="31:78"><ternary pos:start="31:21" pos:end="31:78"><condition pos:start="31:21" pos:end="31:46"><expr pos:start="31:21" pos:end="31:44"><name pos:start="31:21" pos:end="31:25">plane</name> <operator pos:start="31:27" pos:end="31:28">==</operator> <literal type="number" pos:start="31:30" pos:end="31:30">1</literal> <operator pos:start="31:32" pos:end="31:33">||</operator> <name pos:start="31:35" pos:end="31:39">plane</name> <operator pos:start="31:41" pos:end="31:42">==</operator> <literal type="number" pos:start="31:44" pos:end="31:44">2</literal></expr> ?</condition><then pos:start="31:48" pos:end="31:74"> <expr pos:start="31:48" pos:end="31:74"><call pos:start="31:48" pos:end="31:74"><name pos:start="31:48" pos:end="31:61">AV_CEIL_RSHIFT</name><argument_list pos:start="31:62" pos:end="31:74">(    <argument pos:start="31:67" pos:end="31:67"><expr pos:start="31:67" pos:end="31:67"><name pos:start="31:67" pos:end="31:67">w</name></expr></argument>, <argument pos:start="31:70" pos:end="31:73"><expr pos:start="31:70" pos:end="31:73"><name pos:start="31:70" pos:end="31:73">hsub</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="31:76" pos:end="31:78">: <expr pos:start="31:78" pos:end="31:78"><name pos:start="31:78" pos:end="31:78">w</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:35"><decl pos:start="33:9" pos:end="33:34"><type pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:15">uint8_t</name> <modifier pos:start="33:17" pos:end="33:17">*</modifier></type><name pos:start="33:18" pos:end="33:21">dstp</name> <init pos:start="33:23" pos:end="33:34">= <expr pos:start="33:25" pos:end="33:34"><name pos:start="33:25" pos:end="33:34"><name pos:start="33:25" pos:end="33:27">dst</name><index pos:start="33:28" pos:end="33:34">[<expr pos:start="33:29" pos:end="33:33"><name pos:start="33:29" pos:end="33:33">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:41"><decl pos:start="35:9" pos:end="35:40"><type pos:start="35:9" pos:end="35:23"><specifier pos:start="35:9" pos:end="35:13">const</specifier> <name pos:start="35:15" pos:end="35:21">uint8_t</name> <modifier pos:start="35:23" pos:end="35:23">*</modifier></type><name pos:start="35:24" pos:end="35:27">srcp</name> <init pos:start="35:29" pos:end="35:40">= <expr pos:start="35:31" pos:end="35:40"><name pos:start="35:31" pos:end="35:40"><name pos:start="35:31" pos:end="35:33">src</name><index pos:start="35:34" pos:end="35:40">[<expr pos:start="35:35" pos:end="35:39"><name pos:start="35:35" pos:end="35:39">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:52"><decl pos:start="37:9" pos:end="37:51"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:25">srcp_linesize</name> <init pos:start="37:27" pos:end="37:51">= <expr pos:start="37:29" pos:end="37:51"><name pos:start="37:29" pos:end="37:47"><name pos:start="37:29" pos:end="37:40">src_linesize</name><index pos:start="37:41" pos:end="37:47">[<expr pos:start="37:42" pos:end="37:46"><name pos:start="37:42" pos:end="37:46">plane</name></expr>]</index></name> <operator pos:start="37:49" pos:end="37:49">*</operator> <name pos:start="37:51" pos:end="37:51">k</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:71"><decl pos:start="39:9" pos:end="39:70"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:25">dstp_linesize</name> <init pos:start="39:27" pos:end="39:70">= <expr pos:start="39:29" pos:end="39:70"><name pos:start="39:29" pos:end="39:47"><name pos:start="39:29" pos:end="39:40">dst_linesize</name><index pos:start="39:41" pos:end="39:47">[<expr pos:start="39:42" pos:end="39:46"><name pos:start="39:42" pos:end="39:46">plane</name></expr>]</index></name> <operator pos:start="39:49" pos:end="39:49">*</operator> <operator pos:start="39:51" pos:end="39:51">(</operator><ternary pos:start="39:52" pos:end="39:69"><condition pos:start="39:52" pos:end="39:63"><expr pos:start="39:52" pos:end="39:61"><name pos:start="39:52" pos:end="39:61">interleave</name></expr> ?</condition><then pos:start="39:65" pos:end="39:65"> <expr pos:start="39:65" pos:end="39:65"><literal type="number" pos:start="39:65" pos:end="39:65">2</literal></expr> </then><else pos:start="39:67" pos:end="39:69">: <expr pos:start="39:69" pos:end="39:69"><literal type="number" pos:start="39:69" pos:end="39:69">1</literal></expr></else></ternary><operator pos:start="39:70" pos:end="39:70">)</operator></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:57"><expr pos:start="43:9" pos:end="43:56"><name pos:start="43:9" pos:end="43:13">lines</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <operator pos:start="43:17" pos:end="43:17">(</operator><name pos:start="43:18" pos:end="43:22">lines</name> <operator pos:start="43:24" pos:end="43:24">+</operator> <operator pos:start="43:26" pos:end="43:26">(</operator><name pos:start="43:27" pos:end="43:35">src_field</name> <operator pos:start="43:37" pos:end="43:38">==</operator> <name pos:start="43:40" pos:end="43:50">FIELD_UPPER</name><operator pos:start="43:51" pos:end="43:51">)</operator><operator pos:start="43:52" pos:end="43:52">)</operator> <operator pos:start="43:54" pos:end="43:54">/</operator> <name pos:start="43:56" pos:end="43:56">k</name></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:40"><if pos:start="45:9" pos:end="47:40">if <condition pos:start="45:12" pos:end="45:37">(<expr pos:start="45:13" pos:end="45:36"><name pos:start="45:13" pos:end="45:21">src_field</name> <operator pos:start="45:23" pos:end="45:24">==</operator> <name pos:start="45:26" pos:end="45:36">FIELD_LOWER</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:40"><block_content pos:start="47:13" pos:end="47:40">

            <expr_stmt pos:start="47:13" pos:end="47:40"><expr pos:start="47:13" pos:end="47:39"><name pos:start="47:13" pos:end="47:16">srcp</name> <operator pos:start="47:18" pos:end="47:19">+=</operator> <name pos:start="47:21" pos:end="47:39"><name pos:start="47:21" pos:end="47:32">src_linesize</name><index pos:start="47:33" pos:end="47:39">[<expr pos:start="47:34" pos:end="47:38"><name pos:start="47:34" pos:end="47:38">plane</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="51:40"><if pos:start="49:9" pos:end="51:40">if <condition pos:start="49:12" pos:end="49:51">(<expr pos:start="49:13" pos:end="49:50"><name pos:start="49:13" pos:end="49:22">interleave</name> <operator pos:start="49:24" pos:end="49:25">&amp;&amp;</operator> <name pos:start="49:27" pos:end="49:35">dst_field</name> <operator pos:start="49:37" pos:end="49:38">==</operator> <name pos:start="49:40" pos:end="49:50">FIELD_LOWER</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:40"><block_content pos:start="51:13" pos:end="51:40">

            <expr_stmt pos:start="51:13" pos:end="51:40"><expr pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:16">dstp</name> <operator pos:start="51:18" pos:end="51:19">+=</operator> <name pos:start="51:21" pos:end="51:39"><name pos:start="51:21" pos:end="51:32">dst_linesize</name><index pos:start="51:33" pos:end="51:39">[<expr pos:start="51:34" pos:end="51:38"><name pos:start="51:34" pos:end="51:38">plane</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="line" pos:start="53:9" pos:end="53:86">// Low-pass filtering is required when creating an interlaced destination from</comment>

        <comment type="line" pos:start="55:9" pos:end="55:78">// a progressive source which contains high-frequency vertical detail.</comment>

        <comment type="line" pos:start="57:9" pos:end="57:74">// Filtering will reduce interlace 'twitter' and Moire patterning.</comment>

        <if_stmt pos:start="59:9" pos:end="91:9"><if pos:start="59:9" pos:end="87:9">if <condition pos:start="59:12" pos:end="59:74">(<expr pos:start="59:13" pos:end="59:73"><name pos:start="59:13" pos:end="59:17">flags</name> <operator pos:start="59:19" pos:end="59:19">&amp;</operator> <name pos:start="59:21" pos:end="59:40">TINTERLACE_FLAG_VLPF</name> <operator pos:start="59:42" pos:end="59:43">||</operator> <name pos:start="59:45" pos:end="59:49">flags</name> <operator pos:start="59:51" pos:end="59:51">&amp;</operator> <name pos:start="59:53" pos:end="59:73">TINTERLACE_FLAG_CVLPF</name></expr>)</condition> <block pos:start="59:76" pos:end="87:9">{<block_content pos:start="61:13" pos:end="85:13">

            <decl_stmt pos:start="61:13" pos:end="61:22"><decl pos:start="61:13" pos:end="61:21"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:17">x</name> <init pos:start="61:19" pos:end="61:21">= <expr pos:start="61:21" pos:end="61:21"><literal type="number" pos:start="61:21" pos:end="61:21">0</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="63:13" pos:end="65:22"><if pos:start="63:13" pos:end="65:22">if <condition pos:start="63:16" pos:end="63:46">(<expr pos:start="63:17" pos:end="63:45"><name pos:start="63:17" pos:end="63:21">flags</name> <operator pos:start="63:23" pos:end="63:23">&amp;</operator> <name pos:start="63:25" pos:end="63:45">TINTERLACE_FLAG_CVLPF</name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:22"><block_content pos:start="65:17" pos:end="65:22">

                <expr_stmt pos:start="65:17" pos:end="65:22"><expr pos:start="65:17" pos:end="65:21"><name pos:start="65:17" pos:end="65:17">x</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <for pos:start="67:13" pos:end="85:13">for <control pos:start="67:17" pos:end="67:39">(<init pos:start="67:18" pos:end="67:27"><expr pos:start="67:18" pos:end="67:26"><name pos:start="67:18" pos:end="67:18">h</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <name pos:start="67:22" pos:end="67:26">lines</name></expr>;</init> <condition pos:start="67:29" pos:end="67:34"><expr pos:start="67:29" pos:end="67:33"><name pos:start="67:29" pos:end="67:29">h</name> <operator pos:start="67:31" pos:end="67:31">&gt;</operator> <literal type="number" pos:start="67:33" pos:end="67:33">0</literal></expr>;</condition> <incr pos:start="67:36" pos:end="67:38"><expr pos:start="67:36" pos:end="67:38"><name pos:start="67:36" pos:end="67:36">h</name><operator pos:start="67:37" pos:end="67:38">--</operator></expr></incr>)</control> <block pos:start="67:41" pos:end="85:13">{<block_content pos:start="69:17" pos:end="83:38">

                <decl_stmt pos:start="69:17" pos:end="69:53"><decl pos:start="69:17" pos:end="69:52"><type pos:start="69:17" pos:end="69:25"><name pos:start="69:17" pos:end="69:25">ptrdiff_t</name></type> <name pos:start="69:27" pos:end="69:30">pref</name> <init pos:start="69:32" pos:end="69:52">= <expr pos:start="69:34" pos:end="69:52"><name pos:start="69:34" pos:end="69:52"><name pos:start="69:34" pos:end="69:45">src_linesize</name><index pos:start="69:46" pos:end="69:52">[<expr pos:start="69:47" pos:end="69:51"><name pos:start="69:47" pos:end="69:51">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="71:17" pos:end="71:39"><decl pos:start="71:17" pos:end="71:38"><type pos:start="71:17" pos:end="71:25"><name pos:start="71:17" pos:end="71:25">ptrdiff_t</name></type> <name pos:start="71:27" pos:end="71:30">mref</name> <init pos:start="71:32" pos:end="71:38">= <expr pos:start="71:34" pos:end="71:38"><operator pos:start="71:34" pos:end="71:34">-</operator><name pos:start="71:35" pos:end="71:38">pref</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="73:17" pos:end="75:48"><if pos:start="73:17" pos:end="73:48">if <condition pos:start="73:20" pos:end="73:37">(<expr pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:21">h</name> <operator pos:start="73:23" pos:end="73:24">&gt;=</operator> <operator pos:start="73:26" pos:end="73:26">(</operator><name pos:start="73:27" pos:end="73:31">lines</name> <operator pos:start="73:33" pos:end="73:33">-</operator> <name pos:start="73:35" pos:end="73:35">x</name><operator pos:start="73:36" pos:end="73:36">)</operator></expr>)</condition><block type="pseudo" pos:start="73:40" pos:end="73:48"><block_content pos:start="73:40" pos:end="73:48">  <expr_stmt pos:start="73:40" pos:end="73:48"><expr pos:start="73:40" pos:end="73:47"><name pos:start="73:40" pos:end="73:43">mref</name> <operator pos:start="73:45" pos:end="73:45">=</operator> <literal type="number" pos:start="73:47" pos:end="73:47">0</literal></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="73:50" pos:end="73:74">// there is no line above</comment>

                <if type="elseif" pos:start="75:17" pos:end="75:48">else if <condition pos:start="75:25" pos:end="75:38">(<expr pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:26">h</name> <operator pos:start="75:28" pos:end="75:29">&lt;=</operator> <operator pos:start="75:31" pos:end="75:31">(</operator><literal type="number" pos:start="75:32" pos:end="75:34">1</literal> <operator pos:start="75:34" pos:end="75:34">+</operator> <name pos:start="75:36" pos:end="75:36">x</name><operator pos:start="75:37" pos:end="75:37">)</operator></expr>)</condition><block type="pseudo" pos:start="75:40" pos:end="75:48"><block_content pos:start="75:40" pos:end="75:48"> <expr_stmt pos:start="75:40" pos:end="75:48"><expr pos:start="75:40" pos:end="75:47"><name pos:start="75:40" pos:end="75:43">pref</name> <operator pos:start="75:45" pos:end="75:45">=</operator> <literal type="number" pos:start="75:47" pos:end="75:47">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="75:50" pos:end="75:74">// there is no line below</comment>



                <expr_stmt pos:start="79:17" pos:end="79:71"><expr pos:start="79:17" pos:end="79:70"><call pos:start="79:17" pos:end="79:70"><name pos:start="79:17" pos:end="79:40"><name pos:start="79:17" pos:end="79:26">tinterlace</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:40">lowpass_line</name></name><argument_list pos:start="79:41" pos:end="79:70">(<argument pos:start="79:42" pos:end="79:45"><expr pos:start="79:42" pos:end="79:45"><name pos:start="79:42" pos:end="79:45">dstp</name></expr></argument>, <argument pos:start="79:48" pos:end="79:51"><expr pos:start="79:48" pos:end="79:51"><name pos:start="79:48" pos:end="79:51">cols</name></expr></argument>, <argument pos:start="79:54" pos:end="79:57"><expr pos:start="79:54" pos:end="79:57"><name pos:start="79:54" pos:end="79:57">srcp</name></expr></argument>, <argument pos:start="79:60" pos:end="79:63"><expr pos:start="79:60" pos:end="79:63"><name pos:start="79:60" pos:end="79:63">mref</name></expr></argument>, <argument pos:start="79:66" pos:end="79:69"><expr pos:start="79:66" pos:end="79:69"><name pos:start="79:66" pos:end="79:69">pref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:38"><expr pos:start="81:17" pos:end="81:37"><name pos:start="81:17" pos:end="81:20">dstp</name> <operator pos:start="81:22" pos:end="81:23">+=</operator> <name pos:start="81:25" pos:end="81:37">dstp_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:38"><expr pos:start="83:17" pos:end="83:37"><name pos:start="83:17" pos:end="83:20">srcp</name> <operator pos:start="83:22" pos:end="83:23">+=</operator> <name pos:start="83:25" pos:end="83:37">srcp_linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="87:11" pos:end="91:9">else <block pos:start="87:16" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:87">

            <expr_stmt pos:start="89:13" pos:end="89:87"><expr pos:start="89:13" pos:end="89:86"><call pos:start="89:13" pos:end="89:86"><name pos:start="89:13" pos:end="89:31">av_image_copy_plane</name><argument_list pos:start="89:32" pos:end="89:86">(<argument pos:start="89:33" pos:end="89:36"><expr pos:start="89:33" pos:end="89:36"><name pos:start="89:33" pos:end="89:36">dstp</name></expr></argument>, <argument pos:start="89:39" pos:end="89:51"><expr pos:start="89:39" pos:end="89:51"><name pos:start="89:39" pos:end="89:51">dstp_linesize</name></expr></argument>, <argument pos:start="89:54" pos:end="89:57"><expr pos:start="89:54" pos:end="89:57"><name pos:start="89:54" pos:end="89:57">srcp</name></expr></argument>, <argument pos:start="89:60" pos:end="89:72"><expr pos:start="89:60" pos:end="89:72"><name pos:start="89:60" pos:end="89:72">srcp_linesize</name></expr></argument>, <argument pos:start="89:75" pos:end="89:78"><expr pos:start="89:75" pos:end="89:78"><name pos:start="89:75" pos:end="89:78">cols</name></expr></argument>, <argument pos:start="89:81" pos:end="89:85"><expr pos:start="89:81" pos:end="89:85"><name pos:start="89:81" pos:end="89:85">lines</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
