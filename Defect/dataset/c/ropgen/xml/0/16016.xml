<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16016.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">do_write_compressed</name><parameter_list pos:start="1:31" pos:end="3:61">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:43">BlockBackend</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">blk</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:59"><decl pos:start="1:51" pos:end="1:59"><type pos:start="1:51" pos:end="1:59"><name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">buf</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:75"><decl pos:start="1:62" pos:end="1:75"><type pos:start="1:62" pos:end="1:75"><name pos:start="1:62" pos:end="1:68">int64_t</name></type> <name pos:start="1:70" pos:end="1:75">offset</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:44"><decl pos:start="3:32" pos:end="3:44"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:38">int64_t</name></type> <name pos:start="3:40" pos:end="3:44">count</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:60"><decl pos:start="3:47" pos:end="3:60"><type pos:start="3:47" pos:end="3:60"><name pos:start="3:47" pos:end="3:53">int64_t</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">total</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="29:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:29">(<expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:13">count</name> <operator pos:start="11:15" pos:end="11:16">&gt;&gt;</operator> <literal type="number" pos:start="11:18" pos:end="11:18">9</literal> <operator pos:start="11:20" pos:end="11:20">&gt;</operator> <name pos:start="11:22" pos:end="11:28">INT_MAX</name></expr>)</condition> <block pos:start="11:31" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:23">

        <return pos:start="13:9" pos:end="13:23">return <expr pos:start="13:16" pos:end="13:22"><operator pos:start="13:16" pos:end="13:16">-</operator><name pos:start="13:17" pos:end="13:22">ERANGE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:77"><expr pos:start="19:5" pos:end="19:76"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:76"><name pos:start="19:11" pos:end="19:30">blk_write_compressed</name><argument_list pos:start="19:31" pos:end="19:76">(<argument pos:start="19:32" pos:end="19:34"><expr pos:start="19:32" pos:end="19:34"><name pos:start="19:32" pos:end="19:34">blk</name></expr></argument>, <argument pos:start="19:37" pos:end="19:47"><expr pos:start="19:37" pos:end="19:47"><name pos:start="19:37" pos:end="19:42">offset</name> <operator pos:start="19:44" pos:end="19:45">&gt;&gt;</operator> <literal type="number" pos:start="19:47" pos:end="19:47">9</literal></expr></argument>, <argument pos:start="19:50" pos:end="19:63"><expr pos:start="19:50" pos:end="19:63"><operator pos:start="19:50" pos:end="19:50">(</operator><name pos:start="19:51" pos:end="19:57">uint8_t</name> <operator pos:start="19:59" pos:end="19:59">*</operator><operator pos:start="19:60" pos:end="19:60">)</operator><name pos:start="19:61" pos:end="19:63">buf</name></expr></argument>, <argument pos:start="19:66" pos:end="19:75"><expr pos:start="19:66" pos:end="19:75"><name pos:start="19:66" pos:end="19:70">count</name> <operator pos:start="19:72" pos:end="19:73">&gt;&gt;</operator> <literal type="number" pos:start="19:75" pos:end="19:75">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition> <block pos:start="21:18" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:19"><expr pos:start="27:5" pos:end="27:18"><operator pos:start="27:5" pos:end="27:5">*</operator><name pos:start="27:6" pos:end="27:10">total</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:18">count</name></expr>;</expr_stmt>

    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
