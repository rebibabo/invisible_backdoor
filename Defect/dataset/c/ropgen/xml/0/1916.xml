<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1916.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">vhost_virtqueue_start</name><parameter_list pos:start="1:33" pos:end="7:45">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:49">vhost_dev</name></name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">dev</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:57"><decl pos:start="3:33" pos:end="3:57"><type pos:start="3:33" pos:end="3:57"><name pos:start="3:33" pos:end="3:51"><name pos:start="3:33" pos:end="3:38">struct</name> <name pos:start="3:40" pos:end="3:51">VirtIODevice</name></name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:57">vdev</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:58"><decl pos:start="5:33" pos:end="5:58"><type pos:start="5:33" pos:end="5:58"><name pos:start="5:33" pos:end="5:54"><name pos:start="5:33" pos:end="5:38">struct</name> <name pos:start="5:40" pos:end="5:54">vhost_virtqueue</name></name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:58">vq</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:44"><decl pos:start="7:33" pos:end="7:44"><type pos:start="7:33" pos:end="7:44"><name pos:start="7:33" pos:end="7:40">unsigned</name></type> <name pos:start="7:42" pos:end="7:44">idx</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="207:1">{<block_content pos:start="11:5" pos:end="205:13">

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">hwaddr</name></type> <name pos:start="11:12" pos:end="11:12">s</name></decl>, <decl pos:start="11:15" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:10"/><name pos:start="11:15" pos:end="11:15">l</name></decl>, <decl pos:start="11:18" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:10"/><name pos:start="11:18" pos:end="11:18">a</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:45"><decl pos:start="15:5" pos:end="15:44"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:22">vhost_vq_index</name> <init pos:start="15:24" pos:end="15:44">= <expr pos:start="15:26" pos:end="15:44"><name pos:start="15:26" pos:end="15:28">idx</name> <operator pos:start="15:30" pos:end="15:30">-</operator> <name pos:start="15:32" pos:end="15:44"><name pos:start="15:32" pos:end="15:34">dev</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:44">vq_index</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="21:6"><decl pos:start="17:5" pos:end="21:5"><type pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:27">vhost_vring_file</name></name></type> <name pos:start="17:29" pos:end="17:32">file</name> <init pos:start="17:34" pos:end="21:5">= <expr pos:start="17:36" pos:end="21:5"><block pos:start="17:36" pos:end="21:5">{

        <expr pos:start="19:9" pos:end="19:31"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:14">index</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:31">vhost_vq_index</name></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="27:6"><decl pos:start="23:5" pos:end="27:5"><type pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:10">struct</name> <name pos:start="23:12" pos:end="23:28">vhost_vring_state</name></name></type> <name pos:start="23:30" pos:end="23:34">state</name> <init pos:start="23:36" pos:end="27:5">= <expr pos:start="23:38" pos:end="27:5"><block pos:start="23:38" pos:end="27:5">{

        <expr pos:start="25:9" pos:end="25:31"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:14">index</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:31">vhost_vq_index</name></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:56"><decl pos:start="29:5" pos:end="29:55"><type pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:10">struct</name> <name pos:start="29:12" pos:end="29:20">VirtQueue</name></name> <modifier pos:start="29:22" pos:end="29:22">*</modifier></type><name pos:start="29:23" pos:end="29:25">vvq</name> <init pos:start="29:27" pos:end="29:55">= <expr pos:start="29:29" pos:end="29:55"><call pos:start="29:29" pos:end="29:55"><name pos:start="29:29" pos:end="29:44">virtio_get_queue</name><argument_list pos:start="29:45" pos:end="29:55">(<argument pos:start="29:46" pos:end="29:49"><expr pos:start="29:46" pos:end="29:49"><name pos:start="29:46" pos:end="29:49">vdev</name></expr></argument>, <argument pos:start="29:52" pos:end="29:54"><expr pos:start="29:52" pos:end="29:54"><name pos:start="29:52" pos:end="29:54">idx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:68"><expr pos:start="33:5" pos:end="33:67"><call pos:start="33:5" pos:end="33:67"><name pos:start="33:5" pos:end="33:10">assert</name><argument_list pos:start="33:11" pos:end="33:67">(<argument pos:start="33:12" pos:end="33:66"><expr pos:start="33:12" pos:end="33:66"><name pos:start="33:12" pos:end="33:14">idx</name> <operator pos:start="33:16" pos:end="33:17">&gt;=</operator> <name pos:start="33:19" pos:end="33:31"><name pos:start="33:19" pos:end="33:21">dev</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:31">vq_index</name></name> <operator pos:start="33:33" pos:end="33:34">&amp;&amp;</operator> <name pos:start="33:36" pos:end="33:38">idx</name> <operator pos:start="33:40" pos:end="33:40">&lt;</operator> <name pos:start="33:42" pos:end="33:54"><name pos:start="33:42" pos:end="33:44">dev</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:54">vq_index</name></name> <operator pos:start="33:56" pos:end="33:56">+</operator> <name pos:start="33:58" pos:end="33:66"><name pos:start="33:58" pos:end="33:60">dev</name><operator pos:start="33:61" pos:end="33:62">-&gt;</operator><name pos:start="33:63" pos:end="33:66">nvqs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:58"><expr pos:start="37:5" pos:end="37:57"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:6">vq</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:11">num</name></name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:23"><name pos:start="37:15" pos:end="37:19">state</name><operator pos:start="37:20" pos:end="37:20">.</operator><name pos:start="37:21" pos:end="37:23">num</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:57"><name pos:start="37:27" pos:end="37:46">virtio_queue_get_num</name><argument_list pos:start="37:47" pos:end="37:57">(<argument pos:start="37:48" pos:end="37:51"><expr pos:start="37:48" pos:end="37:51"><name pos:start="37:48" pos:end="37:51">vdev</name></expr></argument>, <argument pos:start="37:54" pos:end="37:56"><expr pos:start="37:54" pos:end="37:56"><name pos:start="37:54" pos:end="37:56">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:69"><expr pos:start="39:5" pos:end="39:68"><name pos:start="39:5" pos:end="39:5">r</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <call pos:start="39:9" pos:end="39:68"><name pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:11">dev</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:22">vhost_ops</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:34">vhost_call</name></name><argument_list pos:start="39:35" pos:end="39:68">(<argument pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:38">dev</name></expr></argument>, <argument pos:start="39:41" pos:end="39:59"><expr pos:start="39:41" pos:end="39:59"><name pos:start="39:41" pos:end="39:59">VHOST_SET_VRING_NUM</name></expr></argument>, <argument pos:start="39:62" pos:end="39:67"><expr pos:start="39:62" pos:end="39:67"><operator pos:start="39:62" pos:end="39:62">&amp;</operator><name pos:start="39:63" pos:end="39:67">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:10">(<expr pos:start="41:9" pos:end="41:9"><name pos:start="41:9" pos:end="41:9">r</name></expr>)</condition> <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:22">

        <return pos:start="43:9" pos:end="43:22">return <expr pos:start="43:16" pos:end="43:21"><operator pos:start="43:16" pos:end="43:16">-</operator><name pos:start="43:17" pos:end="43:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:59"><expr pos:start="49:5" pos:end="49:58"><name pos:start="49:5" pos:end="49:13"><name pos:start="49:5" pos:end="49:9">state</name><operator pos:start="49:10" pos:end="49:10">.</operator><name pos:start="49:11" pos:end="49:13">num</name></name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:58"><name pos:start="49:17" pos:end="49:47">virtio_queue_get_last_avail_idx</name><argument_list pos:start="49:48" pos:end="49:58">(<argument pos:start="49:49" pos:end="49:52"><expr pos:start="49:49" pos:end="49:52"><name pos:start="49:49" pos:end="49:52">vdev</name></expr></argument>, <argument pos:start="49:55" pos:end="49:57"><expr pos:start="49:55" pos:end="49:57"><name pos:start="49:55" pos:end="49:57">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:70"><expr pos:start="51:5" pos:end="51:69"><name pos:start="51:5" pos:end="51:5">r</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <call pos:start="51:9" pos:end="51:69"><name pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:11">dev</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:22">vhost_ops</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:34">vhost_call</name></name><argument_list pos:start="51:35" pos:end="51:69">(<argument pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><name pos:start="51:36" pos:end="51:38">dev</name></expr></argument>, <argument pos:start="51:41" pos:end="51:60"><expr pos:start="51:41" pos:end="51:60"><name pos:start="51:41" pos:end="51:60">VHOST_SET_VRING_BASE</name></expr></argument>, <argument pos:start="51:63" pos:end="51:68"><expr pos:start="51:63" pos:end="51:68"><operator pos:start="51:63" pos:end="51:63">&amp;</operator><name pos:start="51:64" pos:end="51:68">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:10">(<expr pos:start="53:9" pos:end="53:9"><name pos:start="53:9" pos:end="53:9">r</name></expr>)</condition> <block pos:start="53:12" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:22">

        <return pos:start="55:9" pos:end="55:22">return <expr pos:start="55:16" pos:end="55:21"><operator pos:start="55:16" pos:end="55:16">-</operator><name pos:start="55:17" pos:end="55:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="77:5"><if pos:start="61:5" pos:end="77:5">if <condition pos:start="61:8" pos:end="63:44">(<expr pos:start="61:9" pos:end="63:43"><operator pos:start="61:9" pos:end="61:9">!</operator><call pos:start="61:10" pos:end="61:53"><name pos:start="61:10" pos:end="61:27">virtio_has_feature</name><argument_list pos:start="61:28" pos:end="61:53">(<argument pos:start="61:29" pos:end="61:32"><expr pos:start="61:29" pos:end="61:32"><name pos:start="61:29" pos:end="61:32">vdev</name></expr></argument>, <argument pos:start="61:35" pos:end="61:52"><expr pos:start="61:35" pos:end="61:52"><name pos:start="61:35" pos:end="61:52">VIRTIO_F_VERSION_1</name></expr></argument>)</argument_list></call> <operator pos:start="61:55" pos:end="61:56">&amp;&amp;</operator>

        <call pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:37">virtio_legacy_is_cross_endian</name><argument_list pos:start="63:38" pos:end="63:43">(<argument pos:start="63:39" pos:end="63:42"><expr pos:start="63:39" pos:end="63:42"><name pos:start="63:39" pos:end="63:42">vdev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:46" pos:end="77:5">{<block_content pos:start="65:9" pos:end="75:9">

        <expr_stmt pos:start="65:9" pos:end="69:68"><expr pos:start="65:9" pos:end="69:67"><name pos:start="65:9" pos:end="65:9">r</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <call pos:start="65:13" pos:end="69:67"><name pos:start="65:13" pos:end="65:51">vhost_virtqueue_set_vring_endian_legacy</name><argument_list pos:start="65:52" pos:end="69:67">(<argument pos:start="65:53" pos:end="65:55"><expr pos:start="65:53" pos:end="65:55"><name pos:start="65:53" pos:end="65:55">dev</name></expr></argument>,

                                                    <argument pos:start="67:53" pos:end="67:78"><expr pos:start="67:53" pos:end="67:78"><call pos:start="67:53" pos:end="67:78"><name pos:start="67:53" pos:end="67:72">virtio_is_big_endian</name><argument_list pos:start="67:73" pos:end="67:78">(<argument pos:start="67:74" pos:end="67:77"><expr pos:start="67:74" pos:end="67:77"><name pos:start="67:74" pos:end="67:77">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                                                    <argument pos:start="69:53" pos:end="69:66"><expr pos:start="69:53" pos:end="69:66"><name pos:start="69:53" pos:end="69:66">vhost_vq_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="75:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:14">(<expr pos:start="71:13" pos:end="71:13"><name pos:start="71:13" pos:end="71:13">r</name></expr>)</condition> <block pos:start="71:16" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:26">

            <return pos:start="73:13" pos:end="73:26">return <expr pos:start="73:20" pos:end="73:25"><operator pos:start="73:20" pos:end="73:20">-</operator><name pos:start="73:21" pos:end="73:25">errno</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:50"><expr pos:start="81:5" pos:end="81:49"><name pos:start="81:5" pos:end="81:5">s</name> <operator pos:start="81:7" pos:end="81:7">=</operator> <name pos:start="81:9" pos:end="81:9">l</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <call pos:start="81:13" pos:end="81:49"><name pos:start="81:13" pos:end="81:38">virtio_queue_get_desc_size</name><argument_list pos:start="81:39" pos:end="81:49">(<argument pos:start="81:40" pos:end="81:43"><expr pos:start="81:40" pos:end="81:43"><name pos:start="81:40" pos:end="81:43">vdev</name></expr></argument>, <argument pos:start="81:46" pos:end="81:48"><expr pos:start="81:46" pos:end="81:48"><name pos:start="81:46" pos:end="81:48">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:46"><expr pos:start="83:5" pos:end="83:45"><name pos:start="83:5" pos:end="83:5">a</name> <operator pos:start="83:7" pos:end="83:7">=</operator> <call pos:start="83:9" pos:end="83:45"><name pos:start="83:9" pos:end="83:34">virtio_queue_get_desc_addr</name><argument_list pos:start="83:35" pos:end="83:45">(<argument pos:start="83:36" pos:end="83:39"><expr pos:start="83:36" pos:end="83:39"><name pos:start="83:36" pos:end="83:39">vdev</name></expr></argument>, <argument pos:start="83:42" pos:end="83:44"><expr pos:start="83:42" pos:end="83:44"><name pos:start="83:42" pos:end="83:44">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:49"><expr pos:start="85:5" pos:end="85:48"><name pos:start="85:5" pos:end="85:12"><name pos:start="85:5" pos:end="85:6">vq</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:12">desc</name></name> <operator pos:start="85:14" pos:end="85:14">=</operator> <call pos:start="85:16" pos:end="85:48"><name pos:start="85:16" pos:end="85:38">cpu_physical_memory_map</name><argument_list pos:start="85:39" pos:end="85:48">(<argument pos:start="85:40" pos:end="85:40"><expr pos:start="85:40" pos:end="85:40"><name pos:start="85:40" pos:end="85:40">a</name></expr></argument>, <argument pos:start="85:43" pos:end="85:44"><expr pos:start="85:43" pos:end="85:44"><operator pos:start="85:43" pos:end="85:43">&amp;</operator><name pos:start="85:44" pos:end="85:44">l</name></expr></argument>, <argument pos:start="85:47" pos:end="85:47"><expr pos:start="85:47" pos:end="85:47"><literal type="number" pos:start="85:47" pos:end="85:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:28">(<expr pos:start="87:9" pos:end="87:27"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:17"><name pos:start="87:10" pos:end="87:11">vq</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:17">desc</name></name> <operator pos:start="87:19" pos:end="87:20">||</operator> <name pos:start="87:22" pos:end="87:22">l</name> <operator pos:start="87:24" pos:end="87:25">!=</operator> <name pos:start="87:27" pos:end="87:27">s</name></expr>)</condition> <block pos:start="87:30" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:29">

        <expr_stmt pos:start="89:9" pos:end="89:20"><expr pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:9">r</name> <operator pos:start="89:11" pos:end="89:11">=</operator> <operator pos:start="89:13" pos:end="89:13">-</operator><name pos:start="89:14" pos:end="89:19">ENOMEM</name></expr>;</expr_stmt>

        <goto pos:start="91:9" pos:end="91:29">goto <name pos:start="91:14" pos:end="91:28">fail_alloc_desc</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:51"><expr pos:start="95:5" pos:end="95:50"><name pos:start="95:5" pos:end="95:5">s</name> <operator pos:start="95:7" pos:end="95:7">=</operator> <name pos:start="95:9" pos:end="95:9">l</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <call pos:start="95:13" pos:end="95:50"><name pos:start="95:13" pos:end="95:39">virtio_queue_get_avail_size</name><argument_list pos:start="95:40" pos:end="95:50">(<argument pos:start="95:41" pos:end="95:44"><expr pos:start="95:41" pos:end="95:44"><name pos:start="95:41" pos:end="95:44">vdev</name></expr></argument>, <argument pos:start="95:47" pos:end="95:49"><expr pos:start="95:47" pos:end="95:49"><name pos:start="95:47" pos:end="95:49">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:47"><expr pos:start="97:5" pos:end="97:46"><name pos:start="97:5" pos:end="97:5">a</name> <operator pos:start="97:7" pos:end="97:7">=</operator> <call pos:start="97:9" pos:end="97:46"><name pos:start="97:9" pos:end="97:35">virtio_queue_get_avail_addr</name><argument_list pos:start="97:36" pos:end="97:46">(<argument pos:start="97:37" pos:end="97:40"><expr pos:start="97:37" pos:end="97:40"><name pos:start="97:37" pos:end="97:40">vdev</name></expr></argument>, <argument pos:start="97:43" pos:end="97:45"><expr pos:start="97:43" pos:end="97:45"><name pos:start="97:43" pos:end="97:45">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:50"><expr pos:start="99:5" pos:end="99:49"><name pos:start="99:5" pos:end="99:13"><name pos:start="99:5" pos:end="99:6">vq</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:13">avail</name></name> <operator pos:start="99:15" pos:end="99:15">=</operator> <call pos:start="99:17" pos:end="99:49"><name pos:start="99:17" pos:end="99:39">cpu_physical_memory_map</name><argument_list pos:start="99:40" pos:end="99:49">(<argument pos:start="99:41" pos:end="99:41"><expr pos:start="99:41" pos:end="99:41"><name pos:start="99:41" pos:end="99:41">a</name></expr></argument>, <argument pos:start="99:44" pos:end="99:45"><expr pos:start="99:44" pos:end="99:45"><operator pos:start="99:44" pos:end="99:44">&amp;</operator><name pos:start="99:45" pos:end="99:45">l</name></expr></argument>, <argument pos:start="99:48" pos:end="99:48"><expr pos:start="99:48" pos:end="99:48"><literal type="number" pos:start="99:48" pos:end="99:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:29">(<expr pos:start="101:9" pos:end="101:28"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:18"><name pos:start="101:10" pos:end="101:11">vq</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:18">avail</name></name> <operator pos:start="101:20" pos:end="101:21">||</operator> <name pos:start="101:23" pos:end="101:23">l</name> <operator pos:start="101:25" pos:end="101:26">!=</operator> <name pos:start="101:28" pos:end="101:28">s</name></expr>)</condition> <block pos:start="101:31" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:30">

        <expr_stmt pos:start="103:9" pos:end="103:20"><expr pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:9">r</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <operator pos:start="103:13" pos:end="103:13">-</operator><name pos:start="103:14" pos:end="103:19">ENOMEM</name></expr>;</expr_stmt>

        <goto pos:start="105:9" pos:end="105:30">goto <name pos:start="105:14" pos:end="105:29">fail_alloc_avail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:66"><expr pos:start="109:5" pos:end="109:65"><name pos:start="109:5" pos:end="109:17"><name pos:start="109:5" pos:end="109:6">vq</name><operator pos:start="109:7" pos:end="109:8">-&gt;</operator><name pos:start="109:9" pos:end="109:17">used_size</name></name> <operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:21">s</name> <operator pos:start="109:23" pos:end="109:23">=</operator> <name pos:start="109:25" pos:end="109:25">l</name> <operator pos:start="109:27" pos:end="109:27">=</operator> <call pos:start="109:29" pos:end="109:65"><name pos:start="109:29" pos:end="109:54">virtio_queue_get_used_size</name><argument_list pos:start="109:55" pos:end="109:65">(<argument pos:start="109:56" pos:end="109:59"><expr pos:start="109:56" pos:end="109:59"><name pos:start="109:56" pos:end="109:59">vdev</name></expr></argument>, <argument pos:start="109:62" pos:end="109:64"><expr pos:start="109:62" pos:end="109:64"><name pos:start="109:62" pos:end="109:64">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:62"><expr pos:start="111:5" pos:end="111:61"><name pos:start="111:5" pos:end="111:17"><name pos:start="111:5" pos:end="111:6">vq</name><operator pos:start="111:7" pos:end="111:8">-&gt;</operator><name pos:start="111:9" pos:end="111:17">used_phys</name></name> <operator pos:start="111:19" pos:end="111:19">=</operator> <name pos:start="111:21" pos:end="111:21">a</name> <operator pos:start="111:23" pos:end="111:23">=</operator> <call pos:start="111:25" pos:end="111:61"><name pos:start="111:25" pos:end="111:50">virtio_queue_get_used_addr</name><argument_list pos:start="111:51" pos:end="111:61">(<argument pos:start="111:52" pos:end="111:55"><expr pos:start="111:52" pos:end="111:55"><name pos:start="111:52" pos:end="111:55">vdev</name></expr></argument>, <argument pos:start="111:58" pos:end="111:60"><expr pos:start="111:58" pos:end="111:60"><name pos:start="111:58" pos:end="111:60">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:49"><expr pos:start="113:5" pos:end="113:48"><name pos:start="113:5" pos:end="113:12"><name pos:start="113:5" pos:end="113:6">vq</name><operator pos:start="113:7" pos:end="113:8">-&gt;</operator><name pos:start="113:9" pos:end="113:12">used</name></name> <operator pos:start="113:14" pos:end="113:14">=</operator> <call pos:start="113:16" pos:end="113:48"><name pos:start="113:16" pos:end="113:38">cpu_physical_memory_map</name><argument_list pos:start="113:39" pos:end="113:48">(<argument pos:start="113:40" pos:end="113:40"><expr pos:start="113:40" pos:end="113:40"><name pos:start="113:40" pos:end="113:40">a</name></expr></argument>, <argument pos:start="113:43" pos:end="113:44"><expr pos:start="113:43" pos:end="113:44"><operator pos:start="113:43" pos:end="113:43">&amp;</operator><name pos:start="113:44" pos:end="113:44">l</name></expr></argument>, <argument pos:start="113:47" pos:end="113:47"><expr pos:start="113:47" pos:end="113:47"><literal type="number" pos:start="113:47" pos:end="113:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:28">(<expr pos:start="115:9" pos:end="115:27"><operator pos:start="115:9" pos:end="115:9">!</operator><name pos:start="115:10" pos:end="115:17"><name pos:start="115:10" pos:end="115:11">vq</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:17">used</name></name> <operator pos:start="115:19" pos:end="115:20">||</operator> <name pos:start="115:22" pos:end="115:22">l</name> <operator pos:start="115:24" pos:end="115:25">!=</operator> <name pos:start="115:27" pos:end="115:27">s</name></expr>)</condition> <block pos:start="115:30" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:29">

        <expr_stmt pos:start="117:9" pos:end="117:20"><expr pos:start="117:9" pos:end="117:19"><name pos:start="117:9" pos:end="117:9">r</name> <operator pos:start="117:11" pos:end="117:11">=</operator> <operator pos:start="117:13" pos:end="117:13">-</operator><name pos:start="117:14" pos:end="117:19">ENOMEM</name></expr>;</expr_stmt>

        <goto pos:start="119:9" pos:end="119:29">goto <name pos:start="119:14" pos:end="119:28">fail_alloc_used</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:66"><expr pos:start="125:5" pos:end="125:65"><name pos:start="125:5" pos:end="125:17"><name pos:start="125:5" pos:end="125:6">vq</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:17">ring_size</name></name> <operator pos:start="125:19" pos:end="125:19">=</operator> <name pos:start="125:21" pos:end="125:21">s</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:25">l</name> <operator pos:start="125:27" pos:end="125:27">=</operator> <call pos:start="125:29" pos:end="125:65"><name pos:start="125:29" pos:end="125:54">virtio_queue_get_ring_size</name><argument_list pos:start="125:55" pos:end="125:65">(<argument pos:start="125:56" pos:end="125:59"><expr pos:start="125:56" pos:end="125:59"><name pos:start="125:56" pos:end="125:59">vdev</name></expr></argument>, <argument pos:start="125:62" pos:end="125:64"><expr pos:start="125:62" pos:end="125:64"><name pos:start="125:62" pos:end="125:64">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:62"><expr pos:start="127:5" pos:end="127:61"><name pos:start="127:5" pos:end="127:17"><name pos:start="127:5" pos:end="127:6">vq</name><operator pos:start="127:7" pos:end="127:8">-&gt;</operator><name pos:start="127:9" pos:end="127:17">ring_phys</name></name> <operator pos:start="127:19" pos:end="127:19">=</operator> <name pos:start="127:21" pos:end="127:21">a</name> <operator pos:start="127:23" pos:end="127:23">=</operator> <call pos:start="127:25" pos:end="127:61"><name pos:start="127:25" pos:end="127:50">virtio_queue_get_ring_addr</name><argument_list pos:start="127:51" pos:end="127:61">(<argument pos:start="127:52" pos:end="127:55"><expr pos:start="127:52" pos:end="127:55"><name pos:start="127:52" pos:end="127:55">vdev</name></expr></argument>, <argument pos:start="127:58" pos:end="127:60"><expr pos:start="127:58" pos:end="127:60"><name pos:start="127:58" pos:end="127:60">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:49"><expr pos:start="129:5" pos:end="129:48"><name pos:start="129:5" pos:end="129:12"><name pos:start="129:5" pos:end="129:6">vq</name><operator pos:start="129:7" pos:end="129:8">-&gt;</operator><name pos:start="129:9" pos:end="129:12">ring</name></name> <operator pos:start="129:14" pos:end="129:14">=</operator> <call pos:start="129:16" pos:end="129:48"><name pos:start="129:16" pos:end="129:38">cpu_physical_memory_map</name><argument_list pos:start="129:39" pos:end="129:48">(<argument pos:start="129:40" pos:end="129:40"><expr pos:start="129:40" pos:end="129:40"><name pos:start="129:40" pos:end="129:40">a</name></expr></argument>, <argument pos:start="129:43" pos:end="129:44"><expr pos:start="129:43" pos:end="129:44"><operator pos:start="129:43" pos:end="129:43">&amp;</operator><name pos:start="129:44" pos:end="129:44">l</name></expr></argument>, <argument pos:start="129:47" pos:end="129:47"><expr pos:start="129:47" pos:end="129:47"><literal type="number" pos:start="129:47" pos:end="129:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="137:5"><if pos:start="131:5" pos:end="137:5">if <condition pos:start="131:8" pos:end="131:28">(<expr pos:start="131:9" pos:end="131:27"><operator pos:start="131:9" pos:end="131:9">!</operator><name pos:start="131:10" pos:end="131:17"><name pos:start="131:10" pos:end="131:11">vq</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:17">ring</name></name> <operator pos:start="131:19" pos:end="131:20">||</operator> <name pos:start="131:22" pos:end="131:22">l</name> <operator pos:start="131:24" pos:end="131:25">!=</operator> <name pos:start="131:27" pos:end="131:27">s</name></expr>)</condition> <block pos:start="131:30" pos:end="137:5">{<block_content pos:start="133:9" pos:end="135:29">

        <expr_stmt pos:start="133:9" pos:end="133:20"><expr pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:9">r</name> <operator pos:start="133:11" pos:end="133:11">=</operator> <operator pos:start="133:13" pos:end="133:13">-</operator><name pos:start="133:14" pos:end="133:19">ENOMEM</name></expr>;</expr_stmt>

        <goto pos:start="135:9" pos:end="135:29">goto <name pos:start="135:14" pos:end="135:28">fail_alloc_ring</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:76"><expr pos:start="141:5" pos:end="141:75"><name pos:start="141:5" pos:end="141:5">r</name> <operator pos:start="141:7" pos:end="141:7">=</operator> <call pos:start="141:9" pos:end="141:75"><name pos:start="141:9" pos:end="141:32">vhost_virtqueue_set_addr</name><argument_list pos:start="141:33" pos:end="141:75">(<argument pos:start="141:34" pos:end="141:36"><expr pos:start="141:34" pos:end="141:36"><name pos:start="141:34" pos:end="141:36">dev</name></expr></argument>, <argument pos:start="141:39" pos:end="141:40"><expr pos:start="141:39" pos:end="141:40"><name pos:start="141:39" pos:end="141:40">vq</name></expr></argument>, <argument pos:start="141:43" pos:end="141:56"><expr pos:start="141:43" pos:end="141:56"><name pos:start="141:43" pos:end="141:56">vhost_vq_index</name></expr></argument>, <argument pos:start="141:59" pos:end="141:74"><expr pos:start="141:59" pos:end="141:74"><name pos:start="141:59" pos:end="141:74"><name pos:start="141:59" pos:end="141:61">dev</name><operator pos:start="141:62" pos:end="141:63">-&gt;</operator><name pos:start="141:64" pos:end="141:74">log_enabled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="143:5" pos:end="149:5"><if pos:start="143:5" pos:end="149:5">if <condition pos:start="143:8" pos:end="143:14">(<expr pos:start="143:9" pos:end="143:13"><name pos:start="143:9" pos:end="143:9">r</name> <operator pos:start="143:11" pos:end="143:11">&lt;</operator> <literal type="number" pos:start="143:13" pos:end="143:13">0</literal></expr>)</condition> <block pos:start="143:16" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:24">

        <expr_stmt pos:start="145:9" pos:end="145:19"><expr pos:start="145:9" pos:end="145:18"><name pos:start="145:9" pos:end="145:9">r</name> <operator pos:start="145:11" pos:end="145:11">=</operator> <operator pos:start="145:13" pos:end="145:13">-</operator><name pos:start="145:14" pos:end="145:18">errno</name></expr>;</expr_stmt>

        <goto pos:start="147:9" pos:end="147:24">goto <name pos:start="147:14" pos:end="147:23">fail_alloc</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:73"><expr pos:start="153:5" pos:end="153:72"><name pos:start="153:5" pos:end="153:11"><name pos:start="153:5" pos:end="153:8">file</name><operator pos:start="153:9" pos:end="153:9">.</operator><name pos:start="153:10" pos:end="153:11">fd</name></name> <operator pos:start="153:13" pos:end="153:13">=</operator> <call pos:start="153:15" pos:end="153:72"><name pos:start="153:15" pos:end="153:35">event_notifier_get_fd</name><argument_list pos:start="153:36" pos:end="153:72">(<argument pos:start="153:37" pos:end="153:71"><expr pos:start="153:37" pos:end="153:71"><call pos:start="153:37" pos:end="153:71"><name pos:start="153:37" pos:end="153:66">virtio_queue_get_host_notifier</name><argument_list pos:start="153:67" pos:end="153:71">(<argument pos:start="153:68" pos:end="153:70"><expr pos:start="153:68" pos:end="153:70"><name pos:start="153:68" pos:end="153:70">vvq</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:69"><expr pos:start="155:5" pos:end="155:68"><name pos:start="155:5" pos:end="155:5">r</name> <operator pos:start="155:7" pos:end="155:7">=</operator> <call pos:start="155:9" pos:end="155:68"><name pos:start="155:9" pos:end="155:34"><name pos:start="155:9" pos:end="155:11">dev</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:22">vhost_ops</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:34">vhost_call</name></name><argument_list pos:start="155:35" pos:end="155:68">(<argument pos:start="155:36" pos:end="155:38"><expr pos:start="155:36" pos:end="155:38"><name pos:start="155:36" pos:end="155:38">dev</name></expr></argument>, <argument pos:start="155:41" pos:end="155:60"><expr pos:start="155:41" pos:end="155:60"><name pos:start="155:41" pos:end="155:60">VHOST_SET_VRING_KICK</name></expr></argument>, <argument pos:start="155:63" pos:end="155:67"><expr pos:start="155:63" pos:end="155:67"><operator pos:start="155:63" pos:end="155:63">&amp;</operator><name pos:start="155:64" pos:end="155:67">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="163:5"><if pos:start="157:5" pos:end="163:5">if <condition pos:start="157:8" pos:end="157:10">(<expr pos:start="157:9" pos:end="157:9"><name pos:start="157:9" pos:end="157:9">r</name></expr>)</condition> <block pos:start="157:12" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:23">

        <expr_stmt pos:start="159:9" pos:end="159:19"><expr pos:start="159:9" pos:end="159:18"><name pos:start="159:9" pos:end="159:9">r</name> <operator pos:start="159:11" pos:end="159:11">=</operator> <operator pos:start="159:13" pos:end="159:13">-</operator><name pos:start="159:14" pos:end="159:18">errno</name></expr>;</expr_stmt>

        <goto pos:start="161:9" pos:end="161:23">goto <name pos:start="161:14" pos:end="161:22">fail_kick</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="167:5" pos:end="167:51">/* Clear and discard previous events if any. */</comment>

    <expr_stmt pos:start="169:5" pos:end="169:56"><expr pos:start="169:5" pos:end="169:55"><call pos:start="169:5" pos:end="169:55"><name pos:start="169:5" pos:end="169:33">event_notifier_test_and_clear</name><argument_list pos:start="169:34" pos:end="169:55">(<argument pos:start="169:35" pos:end="169:54"><expr pos:start="169:35" pos:end="169:54"><operator pos:start="169:35" pos:end="169:35">&amp;</operator><name pos:start="169:36" pos:end="169:54"><name pos:start="169:36" pos:end="169:37">vq</name><operator pos:start="169:38" pos:end="169:39">-&gt;</operator><name pos:start="169:40" pos:end="169:54">masked_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="173:5" pos:end="173:13">return <expr pos:start="173:12" pos:end="173:12"><literal type="number" pos:start="173:12" pos:end="173:12">0</literal></expr>;</return>



<label pos:start="177:1" pos:end="177:10"><name pos:start="177:1" pos:end="177:9">fail_kick</name>:</label>

<label pos:start="179:1" pos:end="179:11"><name pos:start="179:1" pos:end="179:10">fail_alloc</name>:</label>

    <expr_stmt pos:start="181:5" pos:end="183:36"><expr pos:start="181:5" pos:end="183:35"><call pos:start="181:5" pos:end="183:35"><name pos:start="181:5" pos:end="181:29">cpu_physical_memory_unmap</name><argument_list pos:start="181:30" pos:end="183:35">(<argument pos:start="181:31" pos:end="181:38"><expr pos:start="181:31" pos:end="181:38"><name pos:start="181:31" pos:end="181:38"><name pos:start="181:31" pos:end="181:32">vq</name><operator pos:start="181:33" pos:end="181:34">-&gt;</operator><name pos:start="181:35" pos:end="181:38">ring</name></name></expr></argument>, <argument pos:start="181:41" pos:end="181:77"><expr pos:start="181:41" pos:end="181:77"><call pos:start="181:41" pos:end="181:77"><name pos:start="181:41" pos:end="181:66">virtio_queue_get_ring_size</name><argument_list pos:start="181:67" pos:end="181:77">(<argument pos:start="181:68" pos:end="181:71"><expr pos:start="181:68" pos:end="181:71"><name pos:start="181:68" pos:end="181:71">vdev</name></expr></argument>, <argument pos:start="181:74" pos:end="181:76"><expr pos:start="181:74" pos:end="181:76"><name pos:start="181:74" pos:end="181:76">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="183:31" pos:end="183:31"><expr pos:start="183:31" pos:end="183:31"><literal type="number" pos:start="183:31" pos:end="183:31">0</literal></expr></argument>, <argument pos:start="183:34" pos:end="183:34"><expr pos:start="183:34" pos:end="183:34"><literal type="number" pos:start="183:34" pos:end="183:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="185:1" pos:end="185:16"><name pos:start="185:1" pos:end="185:15">fail_alloc_ring</name>:</label>

    <expr_stmt pos:start="187:5" pos:end="189:36"><expr pos:start="187:5" pos:end="189:35"><call pos:start="187:5" pos:end="189:35"><name pos:start="187:5" pos:end="187:29">cpu_physical_memory_unmap</name><argument_list pos:start="187:30" pos:end="189:35">(<argument pos:start="187:31" pos:end="187:38"><expr pos:start="187:31" pos:end="187:38"><name pos:start="187:31" pos:end="187:38"><name pos:start="187:31" pos:end="187:32">vq</name><operator pos:start="187:33" pos:end="187:34">-&gt;</operator><name pos:start="187:35" pos:end="187:38">used</name></name></expr></argument>, <argument pos:start="187:41" pos:end="187:77"><expr pos:start="187:41" pos:end="187:77"><call pos:start="187:41" pos:end="187:77"><name pos:start="187:41" pos:end="187:66">virtio_queue_get_used_size</name><argument_list pos:start="187:67" pos:end="187:77">(<argument pos:start="187:68" pos:end="187:71"><expr pos:start="187:68" pos:end="187:71"><name pos:start="187:68" pos:end="187:71">vdev</name></expr></argument>, <argument pos:start="187:74" pos:end="187:76"><expr pos:start="187:74" pos:end="187:76"><name pos:start="187:74" pos:end="187:76">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="189:31" pos:end="189:31"><expr pos:start="189:31" pos:end="189:31"><literal type="number" pos:start="189:31" pos:end="189:31">0</literal></expr></argument>, <argument pos:start="189:34" pos:end="189:34"><expr pos:start="189:34" pos:end="189:34"><literal type="number" pos:start="189:34" pos:end="189:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="191:1" pos:end="191:16"><name pos:start="191:1" pos:end="191:15">fail_alloc_used</name>:</label>

    <expr_stmt pos:start="193:5" pos:end="195:36"><expr pos:start="193:5" pos:end="195:35"><call pos:start="193:5" pos:end="195:35"><name pos:start="193:5" pos:end="193:29">cpu_physical_memory_unmap</name><argument_list pos:start="193:30" pos:end="195:35">(<argument pos:start="193:31" pos:end="193:39"><expr pos:start="193:31" pos:end="193:39"><name pos:start="193:31" pos:end="193:39"><name pos:start="193:31" pos:end="193:32">vq</name><operator pos:start="193:33" pos:end="193:34">-&gt;</operator><name pos:start="193:35" pos:end="193:39">avail</name></name></expr></argument>, <argument pos:start="193:42" pos:end="193:79"><expr pos:start="193:42" pos:end="193:79"><call pos:start="193:42" pos:end="193:79"><name pos:start="193:42" pos:end="193:68">virtio_queue_get_avail_size</name><argument_list pos:start="193:69" pos:end="193:79">(<argument pos:start="193:70" pos:end="193:73"><expr pos:start="193:70" pos:end="193:73"><name pos:start="193:70" pos:end="193:73">vdev</name></expr></argument>, <argument pos:start="193:76" pos:end="193:78"><expr pos:start="193:76" pos:end="193:78"><name pos:start="193:76" pos:end="193:78">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="195:31" pos:end="195:31"><expr pos:start="195:31" pos:end="195:31"><literal type="number" pos:start="195:31" pos:end="195:31">0</literal></expr></argument>, <argument pos:start="195:34" pos:end="195:34"><expr pos:start="195:34" pos:end="195:34"><literal type="number" pos:start="195:34" pos:end="195:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="197:1" pos:end="197:17"><name pos:start="197:1" pos:end="197:16">fail_alloc_avail</name>:</label>

    <expr_stmt pos:start="199:5" pos:end="201:36"><expr pos:start="199:5" pos:end="201:35"><call pos:start="199:5" pos:end="201:35"><name pos:start="199:5" pos:end="199:29">cpu_physical_memory_unmap</name><argument_list pos:start="199:30" pos:end="201:35">(<argument pos:start="199:31" pos:end="199:38"><expr pos:start="199:31" pos:end="199:38"><name pos:start="199:31" pos:end="199:38"><name pos:start="199:31" pos:end="199:32">vq</name><operator pos:start="199:33" pos:end="199:34">-&gt;</operator><name pos:start="199:35" pos:end="199:38">desc</name></name></expr></argument>, <argument pos:start="199:41" pos:end="199:77"><expr pos:start="199:41" pos:end="199:77"><call pos:start="199:41" pos:end="199:77"><name pos:start="199:41" pos:end="199:66">virtio_queue_get_desc_size</name><argument_list pos:start="199:67" pos:end="199:77">(<argument pos:start="199:68" pos:end="199:71"><expr pos:start="199:68" pos:end="199:71"><name pos:start="199:68" pos:end="199:71">vdev</name></expr></argument>, <argument pos:start="199:74" pos:end="199:76"><expr pos:start="199:74" pos:end="199:76"><name pos:start="199:74" pos:end="199:76">idx</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="201:31" pos:end="201:31"><expr pos:start="201:31" pos:end="201:31"><literal type="number" pos:start="201:31" pos:end="201:31">0</literal></expr></argument>, <argument pos:start="201:34" pos:end="201:34"><expr pos:start="201:34" pos:end="201:34"><literal type="number" pos:start="201:34" pos:end="201:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="203:1" pos:end="203:16"><name pos:start="203:1" pos:end="203:15">fail_alloc_desc</name>:</label>

    <return pos:start="205:5" pos:end="205:13">return <expr pos:start="205:12" pos:end="205:12"><name pos:start="205:12" pos:end="205:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
