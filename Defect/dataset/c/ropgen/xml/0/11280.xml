<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11280.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:26">rm_read_dts</name><parameter_list pos:start="1:27" pos:end="3:64">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:63">stream_index</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:44"><decl pos:start="3:32" pos:end="3:44"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:38">int64_t</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">ppos</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:63"><decl pos:start="3:47" pos:end="3:63"><type pos:start="3:47" pos:end="3:63"><name pos:start="3:47" pos:end="3:53">int64_t</name></type> <name pos:start="3:55" pos:end="3:63">pos_limit</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:15">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">RMDemuxContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">rm</name> <init pos:start="7:24" pos:end="7:37">= <expr pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">pos</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:18" pos:end="9:20">dts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:21">stream_index2</name></decl>, <decl pos:start="11:24" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:24" pos:end="11:28">flags</name></decl>, <decl pos:start="11:31" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:31" pos:end="11:33">len</name></decl>, <decl pos:start="11:36" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:36" pos:end="11:36">h</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:7">pos</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">*</operator><name pos:start="15:12" pos:end="15:15">ppos</name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:30"><if pos:start="19:5" pos:end="21:30">if<condition pos:start="19:7" pos:end="19:22">(<expr pos:start="19:8" pos:end="19:21"><name pos:start="19:8" pos:end="19:21"><name pos:start="19:8" pos:end="19:9">rm</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:21">old_format</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:30"><block_content pos:start="21:9" pos:end="21:30">

        <return pos:start="21:9" pos:end="21:30">return <expr pos:start="21:16" pos:end="21:29"><name pos:start="21:16" pos:end="21:29">AV_NOPTS_VALUE</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><call pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:13">avio_seek</name><argument_list pos:start="25:14" pos:end="25:35">(<argument pos:start="25:15" pos:end="25:19"><expr pos:start="25:15" pos:end="25:19"><name pos:start="25:15" pos:end="25:19"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:19">pb</name></name></expr></argument>, <argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">pos</name></expr></argument>, <argument pos:start="25:27" pos:end="25:34"><expr pos:start="25:27" pos:end="25:34"><name pos:start="25:27" pos:end="25:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:6">rm</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:21">remaining_len</name></name><operator pos:start="27:22" pos:end="27:22">=</operator><literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr>;</expr_stmt>

    <for pos:start="29:5" pos:end="77:5">for<control pos:start="29:8" pos:end="29:11">(<init pos:start="29:9" pos:end="29:9">;</init><condition pos:start="29:10" pos:end="29:10">;</condition><incr/>)</control><block pos:start="29:12" pos:end="77:5">{<block_content pos:start="31:9" pos:end="75:30">

        <decl_stmt pos:start="31:9" pos:end="31:18"><decl pos:start="31:9" pos:end="31:17"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:15">seq</name><init pos:start="31:16" pos:end="31:17">=<expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:21"><decl pos:start="33:9" pos:end="33:20"><type pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:16">AVStream</name> <modifier pos:start="33:18" pos:end="33:18">*</modifier></type><name pos:start="33:19" pos:end="33:20">st</name></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:56"><expr pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:11">len</name><operator pos:start="37:12" pos:end="37:12">=</operator><call pos:start="37:13" pos:end="37:55"><name pos:start="37:13" pos:end="37:16">sync</name><argument_list pos:start="37:17" pos:end="37:55">(<argument pos:start="37:18" pos:end="37:18"><expr pos:start="37:18" pos:end="37:18"><name pos:start="37:18" pos:end="37:18">s</name></expr></argument>, <argument pos:start="37:21" pos:end="37:24"><expr pos:start="37:21" pos:end="37:24"><operator pos:start="37:21" pos:end="37:21">&amp;</operator><name pos:start="37:22" pos:end="37:24">dts</name></expr></argument>, <argument pos:start="37:27" pos:end="37:32"><expr pos:start="37:27" pos:end="37:32"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:32">flags</name></expr></argument>, <argument pos:start="37:35" pos:end="37:48"><expr pos:start="37:35" pos:end="37:48"><operator pos:start="37:35" pos:end="37:35">&amp;</operator><name pos:start="37:36" pos:end="37:48">stream_index2</name></expr></argument>, <argument pos:start="37:51" pos:end="37:54"><expr pos:start="37:51" pos:end="37:54"><operator pos:start="37:51" pos:end="37:51">&amp;</operator><name pos:start="37:52" pos:end="37:54">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:34"><if pos:start="39:9" pos:end="41:34">if<condition pos:start="39:11" pos:end="39:17">(<expr pos:start="39:12" pos:end="39:16"><name pos:start="39:12" pos:end="39:14">len</name><operator pos:start="39:15" pos:end="39:15">&lt;</operator><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:34"><block_content pos:start="41:13" pos:end="41:34">

            <return pos:start="41:13" pos:end="41:34">return <expr pos:start="41:20" pos:end="41:33"><name pos:start="41:20" pos:end="41:33">AV_NOPTS_VALUE</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:39"><expr pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:10">st</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:38"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:23">streams</name><index pos:start="45:24" pos:end="45:38">[<expr pos:start="45:25" pos:end="45:37"><name pos:start="45:25" pos:end="45:37">stream_index2</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="57:9"><if pos:start="47:9" pos:end="57:9">if <condition pos:start="47:12" pos:end="47:56">(<expr pos:start="47:13" pos:end="47:55"><name pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:14">st</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:21">codec</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:33">codec_type</name></name> <operator pos:start="47:35" pos:end="47:36">==</operator> <name pos:start="47:38" pos:end="47:55">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="47:58" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:13">

            <expr_stmt pos:start="49:13" pos:end="49:30"><expr pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:13">h</name><operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:29"><name pos:start="49:16" pos:end="49:22">avio_r8</name><argument_list pos:start="49:23" pos:end="49:29">(<argument pos:start="49:24" pos:end="49:28"><expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:24">s</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:28">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="49:32" pos:end="49:37"><expr pos:start="49:32" pos:end="49:36"><name pos:start="49:32" pos:end="49:34">len</name><operator pos:start="49:35" pos:end="49:36">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="55:13"><if pos:start="51:13" pos:end="55:13">if<condition pos:start="51:15" pos:end="51:27">(<expr pos:start="51:16" pos:end="51:26"><operator pos:start="51:16" pos:end="51:16">!</operator><operator pos:start="51:17" pos:end="51:17">(</operator><name pos:start="51:18" pos:end="51:18">h</name> <operator pos:start="51:20" pos:end="51:20">&amp;</operator> <literal type="number" pos:start="51:22" pos:end="51:25">0x40</literal><operator pos:start="51:26" pos:end="51:26">)</operator></expr>)</condition><block pos:start="51:28" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:44">

                <expr_stmt pos:start="53:17" pos:end="53:37"><expr pos:start="53:17" pos:end="53:36"><name pos:start="53:17" pos:end="53:19">seq</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:36"><name pos:start="53:23" pos:end="53:29">avio_r8</name><argument_list pos:start="53:30" pos:end="53:36">(<argument pos:start="53:31" pos:end="53:35"><expr pos:start="53:31" pos:end="53:35"><name pos:start="53:31" pos:end="53:35"><name pos:start="53:31" pos:end="53:31">s</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:35">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="53:39" pos:end="53:44"><expr pos:start="53:39" pos:end="53:43"><name pos:start="53:39" pos:end="53:41">len</name><operator pos:start="53:42" pos:end="53:43">--</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="61:9" pos:end="71:9"><if pos:start="61:9" pos:end="71:9">if<condition pos:start="61:11" pos:end="61:40">(<expr pos:start="61:12" pos:end="61:39"><operator pos:start="61:12" pos:end="61:12">(</operator><name pos:start="61:13" pos:end="61:17">flags</name><operator pos:start="61:18" pos:end="61:18">&amp;</operator><literal type="number" pos:start="61:19" pos:end="61:19">2</literal><operator pos:start="61:20" pos:end="61:20">)</operator> <operator pos:start="61:22" pos:end="61:23">&amp;&amp;</operator> <operator pos:start="61:25" pos:end="61:25">(</operator><name pos:start="61:26" pos:end="61:28">seq</name><operator pos:start="61:29" pos:end="61:29">&amp;</operator><literal type="number" pos:start="61:30" pos:end="61:33">0x7F</literal><operator pos:start="61:34" pos:end="61:34">)</operator> <operator pos:start="61:36" pos:end="61:37">==</operator> <literal type="number" pos:start="61:39" pos:end="61:39">1</literal></expr>)</condition><block pos:start="61:41" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:22">

<comment type="line" pos:start="63:1" pos:end="63:111">//            av_log(s, AV_LOG_DEBUG, "%d %d-%d %"PRId64" %d\n", flags, stream_index2, stream_index, dts, seq);</comment>

            <expr_stmt pos:start="65:13" pos:end="65:69"><expr pos:start="65:13" pos:end="65:68"><call pos:start="65:13" pos:end="65:68"><name pos:start="65:13" pos:end="65:30">av_add_index_entry</name><argument_list pos:start="65:31" pos:end="65:68">(<argument pos:start="65:32" pos:end="65:33"><expr pos:start="65:32" pos:end="65:33"><name pos:start="65:32" pos:end="65:33">st</name></expr></argument>, <argument pos:start="65:36" pos:end="65:38"><expr pos:start="65:36" pos:end="65:38"><name pos:start="65:36" pos:end="65:38">pos</name></expr></argument>, <argument pos:start="65:41" pos:end="65:43"><expr pos:start="65:41" pos:end="65:43"><name pos:start="65:41" pos:end="65:43">dts</name></expr></argument>, <argument pos:start="65:46" pos:end="65:46"><expr pos:start="65:46" pos:end="65:46"><literal type="number" pos:start="65:46" pos:end="65:46">0</literal></expr></argument>, <argument pos:start="65:49" pos:end="65:49"><expr pos:start="65:49" pos:end="65:49"><literal type="number" pos:start="65:49" pos:end="65:49">0</literal></expr></argument>, <argument pos:start="65:52" pos:end="65:67"><expr pos:start="65:52" pos:end="65:67"><name pos:start="65:52" pos:end="65:67">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="69:22"><if pos:start="67:13" pos:end="69:22">if<condition pos:start="67:15" pos:end="67:45">(<expr pos:start="67:16" pos:end="67:44"><name pos:start="67:16" pos:end="67:28">stream_index2</name> <operator pos:start="67:30" pos:end="67:31">==</operator> <name pos:start="67:33" pos:end="67:44">stream_index</name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:22"><block_content pos:start="69:17" pos:end="69:22">

                <break pos:start="69:17" pos:end="69:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><call pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:17">avio_skip</name><argument_list pos:start="75:18" pos:end="75:29">(<argument pos:start="75:19" pos:end="75:23"><expr pos:start="75:19" pos:end="75:23"><name pos:start="75:19" pos:end="75:23"><name pos:start="75:19" pos:end="75:19">s</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:23">pb</name></name></expr></argument>, <argument pos:start="75:26" pos:end="75:28"><expr pos:start="75:26" pos:end="75:28"><name pos:start="75:26" pos:end="75:28">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="79:5" pos:end="79:16"><expr pos:start="79:5" pos:end="79:15"><operator pos:start="79:5" pos:end="79:5">*</operator><name pos:start="79:6" pos:end="79:9">ppos</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <name pos:start="79:13" pos:end="79:15">pos</name></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:15">return <expr pos:start="81:12" pos:end="81:14"><name pos:start="81:12" pos:end="81:14">dts</name></expr>;</return>

</block_content>}</block></function>
</unit>
