<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5563.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">win_chr_pipe_init</name><parameter_list pos:start="1:29" pos:end="3:42">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:44">CharDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">chr</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:71"><decl pos:start="1:52" pos:end="1:71"><type pos:start="1:52" pos:end="1:71"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:61">char</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:71">filename</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:34">Error</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier><modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="123:1">{<block_content pos:start="7:5" pos:end="121:14">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">WinCharState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:33">= <expr pos:start="7:23" pos:end="7:33"><name pos:start="7:23" pos:end="7:33"><name pos:start="7:23" pos:end="7:25">chr</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">OVERLAPPED</name></type> <name pos:start="9:16" pos:end="9:17">ov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">DWORD</name></type> <name pos:start="13:11" pos:end="13:14">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:40"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:40"><name pos:start="15:10" pos:end="15:17">openname</name><index pos:start="15:18" pos:end="15:40">[<expr pos:start="15:19" pos:end="15:39"><name pos:start="15:19" pos:end="15:39">CHR_MAX_FILENAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:12">fpipe</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:19">TRUE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:12">hsend</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:51"><name pos:start="23:16" pos:end="23:26">CreateEvent</name><argument_list pos:start="23:27" pos:end="23:51">(<argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">NULL</name></expr></argument>, <argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><name pos:start="23:34" pos:end="23:37">TRUE</name></expr></argument>, <argument pos:start="23:40" pos:end="23:44"><expr pos:start="23:40" pos:end="23:44"><name pos:start="23:40" pos:end="23:44">FALSE</name></expr></argument>, <argument pos:start="23:47" pos:end="23:50"><expr pos:start="23:47" pos:end="23:50"><name pos:start="23:47" pos:end="23:50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:18">(<expr pos:start="25:9" pos:end="25:17"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:17"><name pos:start="25:10" pos:end="25:10">s</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:17">hsend</name></name></expr>)</condition> <block pos:start="25:20" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><call pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:18">error_setg</name><argument_list pos:start="27:19" pos:end="27:46">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">errp</name></expr></argument>, <argument pos:start="27:26" pos:end="27:45"><expr pos:start="27:26" pos:end="27:45"><literal type="string" pos:start="27:26" pos:end="27:45">"Failed CreateEvent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:18">goto <name pos:start="29:14" pos:end="29:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:52"><expr pos:start="33:5" pos:end="33:51"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:12">hrecv</name></name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:51"><name pos:start="33:16" pos:end="33:26">CreateEvent</name><argument_list pos:start="33:27" pos:end="33:51">(<argument pos:start="33:28" pos:end="33:31"><expr pos:start="33:28" pos:end="33:31"><name pos:start="33:28" pos:end="33:31">NULL</name></expr></argument>, <argument pos:start="33:34" pos:end="33:37"><expr pos:start="33:34" pos:end="33:37"><name pos:start="33:34" pos:end="33:37">TRUE</name></expr></argument>, <argument pos:start="33:40" pos:end="33:44"><expr pos:start="33:40" pos:end="33:44"><name pos:start="33:40" pos:end="33:44">FALSE</name></expr></argument>, <argument pos:start="33:47" pos:end="33:50"><expr pos:start="33:47" pos:end="33:50"><name pos:start="33:47" pos:end="33:50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:18">(<expr pos:start="35:9" pos:end="35:17"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:17"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:17">hrecv</name></name></expr>)</condition> <block pos:start="35:20" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><call pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:18">error_setg</name><argument_list pos:start="37:19" pos:end="37:46">(<argument pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">errp</name></expr></argument>, <argument pos:start="37:26" pos:end="37:45"><expr pos:start="37:26" pos:end="37:45"><literal type="string" pos:start="37:26" pos:end="37:45">"Failed CreateEvent"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:70"><expr pos:start="45:5" pos:end="45:69"><call pos:start="45:5" pos:end="45:69"><name pos:start="45:5" pos:end="45:12">snprintf</name><argument_list pos:start="45:13" pos:end="45:69">(<argument pos:start="45:14" pos:end="45:21"><expr pos:start="45:14" pos:end="45:21"><name pos:start="45:14" pos:end="45:21">openname</name></expr></argument>, <argument pos:start="45:24" pos:end="45:39"><expr pos:start="45:24" pos:end="45:39"><sizeof pos:start="45:24" pos:end="45:39">sizeof<argument_list pos:start="45:30" pos:end="45:39">(<argument pos:start="45:31" pos:end="45:38"><expr pos:start="45:31" pos:end="45:38"><name pos:start="45:31" pos:end="45:38">openname</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:42" pos:end="45:58"><expr pos:start="45:42" pos:end="45:58"><literal type="string" pos:start="45:42" pos:end="45:58">"\\\\.\\pipe\\%s"</literal></expr></argument>, <argument pos:start="45:61" pos:end="45:68"><expr pos:start="45:61" pos:end="45:68"><name pos:start="45:61" pos:end="45:68">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="53:78"><expr pos:start="47:5" pos:end="53:77"><name pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:11">hcom</name></name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="53:77"><name pos:start="47:15" pos:end="47:29">CreateNamedPipe</name><argument_list pos:start="47:30" pos:end="53:77">(<argument pos:start="47:31" pos:end="47:38"><expr pos:start="47:31" pos:end="47:38"><name pos:start="47:31" pos:end="47:38">openname</name></expr></argument>, <argument pos:start="47:41" pos:end="47:81"><expr pos:start="47:41" pos:end="47:81"><name pos:start="47:41" pos:end="47:58">PIPE_ACCESS_DUPLEX</name> <operator pos:start="47:60" pos:end="47:60">|</operator> <name pos:start="47:62" pos:end="47:81">FILE_FLAG_OVERLAPPED</name></expr></argument>,

                              <argument pos:start="49:31" pos:end="51:39"><expr pos:start="49:31" pos:end="51:39"><name pos:start="49:31" pos:end="49:44">PIPE_TYPE_BYTE</name> <operator pos:start="49:46" pos:end="49:46">|</operator> <name pos:start="49:48" pos:end="49:65">PIPE_READMODE_BYTE</name> <operator pos:start="49:67" pos:end="49:67">|</operator>

                              <name pos:start="51:31" pos:end="51:39">PIPE_WAIT</name></expr></argument>,

                              <argument pos:start="53:31" pos:end="53:40"><expr pos:start="53:31" pos:end="53:40"><name pos:start="53:31" pos:end="53:40">MAXCONNECT</name></expr></argument>, <argument pos:start="53:43" pos:end="53:50"><expr pos:start="53:43" pos:end="53:50"><name pos:start="53:43" pos:end="53:50">NSENDBUF</name></expr></argument>, <argument pos:start="53:53" pos:end="53:60"><expr pos:start="53:53" pos:end="53:60"><name pos:start="53:53" pos:end="53:60">NRECVBUF</name></expr></argument>, <argument pos:start="53:63" pos:end="53:70"><expr pos:start="53:63" pos:end="53:70"><name pos:start="53:63" pos:end="53:70">NTIMEOUT</name></expr></argument>, <argument pos:start="53:73" pos:end="53:76"><expr pos:start="53:73" pos:end="53:76"><name pos:start="53:73" pos:end="53:76">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:40">(<expr pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:15">hcom</name></name> <operator pos:start="55:17" pos:end="55:18">==</operator> <name pos:start="55:20" pos:end="55:39">INVALID_HANDLE_VALUE</name></expr>)</condition> <block pos:start="55:42" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:18">

        <expr_stmt pos:start="57:9" pos:end="57:73"><expr pos:start="57:9" pos:end="57:72"><call pos:start="57:9" pos:end="57:72"><name pos:start="57:9" pos:end="57:18">error_setg</name><argument_list pos:start="57:19" pos:end="57:72">(<argument pos:start="57:20" pos:end="57:23"><expr pos:start="57:20" pos:end="57:23"><name pos:start="57:20" pos:end="57:23">errp</name></expr></argument>, <argument pos:start="57:26" pos:end="57:55"><expr pos:start="57:26" pos:end="57:55"><literal type="string" pos:start="57:26" pos:end="57:55">"Failed CreateNamedPipe (%lu)"</literal></expr></argument>, <argument pos:start="57:58" pos:end="57:71"><expr pos:start="57:58" pos:end="57:71"><call pos:start="57:58" pos:end="57:71"><name pos:start="57:58" pos:end="57:69">GetLastError</name><argument_list pos:start="57:70" pos:end="57:71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:23"><expr pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:15">hcom</name></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:22">NULL</name></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:18">goto <name pos:start="61:14" pos:end="61:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:32"><expr pos:start="67:5" pos:end="67:31"><call pos:start="67:5" pos:end="67:31"><name pos:start="67:5" pos:end="67:14">ZeroMemory</name><argument_list pos:start="67:15" pos:end="67:31">(<argument pos:start="67:16" pos:end="67:18"><expr pos:start="67:16" pos:end="67:18"><operator pos:start="67:16" pos:end="67:16">&amp;</operator><name pos:start="67:17" pos:end="67:18">ov</name></expr></argument>, <argument pos:start="67:21" pos:end="67:30"><expr pos:start="67:21" pos:end="67:30"><sizeof pos:start="67:21" pos:end="67:30">sizeof<argument_list pos:start="67:27" pos:end="67:30">(<argument pos:start="67:28" pos:end="67:29"><expr pos:start="67:28" pos:end="67:29"><name pos:start="67:28" pos:end="67:29">ov</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:53"><expr pos:start="69:5" pos:end="69:52"><name pos:start="69:5" pos:end="69:13"><name pos:start="69:5" pos:end="69:6">ov</name><operator pos:start="69:7" pos:end="69:7">.</operator><name pos:start="69:8" pos:end="69:13">hEvent</name></name> <operator pos:start="69:15" pos:end="69:15">=</operator> <call pos:start="69:17" pos:end="69:52"><name pos:start="69:17" pos:end="69:27">CreateEvent</name><argument_list pos:start="69:28" pos:end="69:52">(<argument pos:start="69:29" pos:end="69:32"><expr pos:start="69:29" pos:end="69:32"><name pos:start="69:29" pos:end="69:32">NULL</name></expr></argument>, <argument pos:start="69:35" pos:end="69:38"><expr pos:start="69:35" pos:end="69:38"><name pos:start="69:35" pos:end="69:38">TRUE</name></expr></argument>, <argument pos:start="69:41" pos:end="69:45"><expr pos:start="69:41" pos:end="69:45"><name pos:start="69:41" pos:end="69:45">FALSE</name></expr></argument>, <argument pos:start="69:48" pos:end="69:51"><expr pos:start="69:48" pos:end="69:51"><name pos:start="69:48" pos:end="69:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:41"><expr pos:start="71:5" pos:end="71:40"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:40"><name pos:start="71:11" pos:end="71:26">ConnectNamedPipe</name><argument_list pos:start="71:27" pos:end="71:40">(<argument pos:start="71:28" pos:end="71:34"><expr pos:start="71:28" pos:end="71:34"><name pos:start="71:28" pos:end="71:34"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:34">hcom</name></name></expr></argument>, <argument pos:start="71:37" pos:end="71:39"><expr pos:start="71:37" pos:end="71:39"><operator pos:start="71:37" pos:end="71:37">&amp;</operator><name pos:start="71:38" pos:end="71:39">ov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:12">(<expr pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">ret</name></expr>)</condition> <block pos:start="73:14" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:18">

        <expr_stmt pos:start="75:9" pos:end="75:52"><expr pos:start="75:9" pos:end="75:51"><call pos:start="75:9" pos:end="75:51"><name pos:start="75:9" pos:end="75:18">error_setg</name><argument_list pos:start="75:19" pos:end="75:51">(<argument pos:start="75:20" pos:end="75:23"><expr pos:start="75:20" pos:end="75:23"><name pos:start="75:20" pos:end="75:23">errp</name></expr></argument>, <argument pos:start="75:26" pos:end="75:50"><expr pos:start="75:26" pos:end="75:50"><literal type="string" pos:start="75:26" pos:end="75:50">"Failed ConnectNamedPipe"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:18">goto <name pos:start="77:14" pos:end="77:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:57"><expr pos:start="83:5" pos:end="83:56"><name pos:start="83:5" pos:end="83:7">ret</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <call pos:start="83:11" pos:end="83:56"><name pos:start="83:11" pos:end="83:29">GetOverlappedResult</name><argument_list pos:start="83:30" pos:end="83:56">(<argument pos:start="83:31" pos:end="83:37"><expr pos:start="83:31" pos:end="83:37"><name pos:start="83:31" pos:end="83:37"><name pos:start="83:31" pos:end="83:31">s</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:37">hcom</name></name></expr></argument>, <argument pos:start="83:40" pos:end="83:42"><expr pos:start="83:40" pos:end="83:42"><operator pos:start="83:40" pos:end="83:40">&amp;</operator><name pos:start="83:41" pos:end="83:42">ov</name></expr></argument>, <argument pos:start="83:45" pos:end="83:49"><expr pos:start="83:45" pos:end="83:49"><operator pos:start="83:45" pos:end="83:45">&amp;</operator><name pos:start="83:46" pos:end="83:49">size</name></expr></argument>, <argument pos:start="83:52" pos:end="83:55"><expr pos:start="83:52" pos:end="83:55"><name pos:start="83:52" pos:end="83:55">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="99:5"><if pos:start="85:5" pos:end="99:5">if <condition pos:start="85:8" pos:end="85:13">(<expr pos:start="85:9" pos:end="85:12"><operator pos:start="85:9" pos:end="85:9">!</operator><name pos:start="85:10" pos:end="85:12">ret</name></expr>)</condition> <block pos:start="85:15" pos:end="99:5">{<block_content pos:start="87:9" pos:end="97:18">

        <expr_stmt pos:start="87:9" pos:end="87:55"><expr pos:start="87:9" pos:end="87:54"><call pos:start="87:9" pos:end="87:54"><name pos:start="87:9" pos:end="87:18">error_setg</name><argument_list pos:start="87:19" pos:end="87:54">(<argument pos:start="87:20" pos:end="87:23"><expr pos:start="87:20" pos:end="87:23"><name pos:start="87:20" pos:end="87:23">errp</name></expr></argument>, <argument pos:start="87:26" pos:end="87:53"><expr pos:start="87:26" pos:end="87:53"><literal type="string" pos:start="87:26" pos:end="87:53">"Failed GetOverlappedResult"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:22">(<expr pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:14">ov</name><operator pos:start="89:15" pos:end="89:15">.</operator><name pos:start="89:16" pos:end="89:21">hEvent</name></name></expr>)</condition> <block pos:start="89:24" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:29">

            <expr_stmt pos:start="91:13" pos:end="91:35"><expr pos:start="91:13" pos:end="91:34"><call pos:start="91:13" pos:end="91:34"><name pos:start="91:13" pos:end="91:23">CloseHandle</name><argument_list pos:start="91:24" pos:end="91:34">(<argument pos:start="91:25" pos:end="91:33"><expr pos:start="91:25" pos:end="91:33"><name pos:start="91:25" pos:end="91:33"><name pos:start="91:25" pos:end="91:26">ov</name><operator pos:start="91:27" pos:end="91:27">.</operator><name pos:start="91:28" pos:end="91:33">hEvent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:29"><expr pos:start="93:13" pos:end="93:28"><name pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:14">ov</name><operator pos:start="93:15" pos:end="93:15">.</operator><name pos:start="93:16" pos:end="93:21">hEvent</name></name> <operator pos:start="93:23" pos:end="93:23">=</operator> <name pos:start="93:25" pos:end="93:28">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="97:9" pos:end="97:18">goto <name pos:start="97:14" pos:end="97:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:18">(<expr pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:10">ov</name><operator pos:start="103:11" pos:end="103:11">.</operator><name pos:start="103:12" pos:end="103:17">hEvent</name></name></expr>)</condition> <block pos:start="103:20" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:25">

        <expr_stmt pos:start="105:9" pos:end="105:31"><expr pos:start="105:9" pos:end="105:30"><call pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:19">CloseHandle</name><argument_list pos:start="105:20" pos:end="105:30">(<argument pos:start="105:21" pos:end="105:29"><expr pos:start="105:21" pos:end="105:29"><name pos:start="105:21" pos:end="105:29"><name pos:start="105:21" pos:end="105:22">ov</name><operator pos:start="105:23" pos:end="105:23">.</operator><name pos:start="105:24" pos:end="105:29">hEvent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:25"><expr pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:17"><name pos:start="107:9" pos:end="107:10">ov</name><operator pos:start="107:11" pos:end="107:11">.</operator><name pos:start="107:12" pos:end="107:17">hEvent</name></name> <operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:24">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:48"><expr pos:start="111:5" pos:end="111:47"><call pos:start="111:5" pos:end="111:47"><name pos:start="111:5" pos:end="111:23">qemu_add_polling_cb</name><argument_list pos:start="111:24" pos:end="111:47">(<argument pos:start="111:25" pos:end="111:41"><expr pos:start="111:25" pos:end="111:41"><name pos:start="111:25" pos:end="111:41">win_chr_pipe_poll</name></expr></argument>, <argument pos:start="111:44" pos:end="111:46"><expr pos:start="111:44" pos:end="111:46"><name pos:start="111:44" pos:end="111:46">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return>



 <label pos:start="117:2" pos:end="117:6"><name pos:start="117:2" pos:end="117:5">fail</name>:</label>

    <expr_stmt pos:start="119:5" pos:end="119:23"><expr pos:start="119:5" pos:end="119:22"><call pos:start="119:5" pos:end="119:22"><name pos:start="119:5" pos:end="119:17">win_chr_close</name><argument_list pos:start="119:18" pos:end="119:22">(<argument pos:start="119:19" pos:end="119:21"><expr pos:start="119:19" pos:end="119:21"><name pos:start="119:19" pos:end="119:21">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="121:5" pos:end="121:14">return <expr pos:start="121:12" pos:end="121:13"><operator pos:start="121:12" pos:end="121:12">-</operator><literal type="number" pos:start="121:13" pos:end="121:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
