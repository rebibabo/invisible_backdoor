<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13583.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:44">commit_bitstream_and_slice_buffer</name><parameter_list pos:start="1:45" pos:end="5:69">(<parameter pos:start="1:46" pos:end="1:66"><decl pos:start="1:46" pos:end="1:66"><type pos:start="1:46" pos:end="1:66"><name pos:start="1:46" pos:end="1:59">AVCodecContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">avctx</name></decl></parameter>,

                                             <parameter pos:start="3:46" pos:end="3:68"><decl pos:start="3:46" pos:end="3:68"><type pos:start="3:46" pos:end="3:68"><name pos:start="3:46" pos:end="3:64">DECODER_BUFFER_DESC</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:68">bs</name></decl></parameter>,

                                             <parameter pos:start="5:46" pos:end="5:68"><decl pos:start="5:46" pos:end="5:68"><type pos:start="5:46" pos:end="5:68"><name pos:start="5:46" pos:end="5:64">DECODER_BUFFER_DESC</name> <modifier pos:start="5:66" pos:end="5:66">*</modifier></type><name pos:start="5:67" pos:end="5:68">sc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="203:1">{<block_content pos:start="9:5" pos:end="201:44">

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:33"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:31"><name pos:start="9:11" pos:end="9:16">struct</name> <name pos:start="9:18" pos:end="9:31">MpegEncContext</name></name> <modifier pos:start="9:33" pos:end="9:33">*</modifier></type><name pos:start="9:34" pos:end="9:34">s</name> <init pos:start="9:36" pos:end="9:53">= <expr pos:start="9:38" pos:end="9:53"><name pos:start="9:38" pos:end="9:53"><name pos:start="9:38" pos:end="9:42">avctx</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:53">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">AVDXVAContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">ctx</name> <init pos:start="11:24" pos:end="11:47">= <expr pos:start="11:26" pos:end="11:47"><name pos:start="11:26" pos:end="11:47"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:47">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="15:56"><decl pos:start="13:5" pos:end="15:55"><type pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:32">dxva2_picture_context</name></name> <modifier pos:start="13:34" pos:end="13:34">*</modifier></type><name pos:start="13:35" pos:end="13:41">ctx_pic</name> <init pos:start="13:43" pos:end="15:55">=

        <expr pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:30">current_picture_ptr</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:55">hwaccel_picture_private</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:60"><decl pos:start="17:5" pos:end="17:59"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:22">is_field</name> <init pos:start="17:24" pos:end="17:59">= <expr pos:start="17:26" pos:end="17:59"><name pos:start="17:26" pos:end="17:45"><name pos:start="17:26" pos:end="17:26">s</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:45">picture_structure</name></name> <operator pos:start="17:47" pos:end="17:48">!=</operator> <name pos:start="17:50" pos:end="17:59">PICT_FRAME</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:71"><decl pos:start="19:5" pos:end="19:70"><type pos:start="19:5" pos:end="19:18"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:18">unsigned</name></type> <name pos:start="19:20" pos:end="19:27">mb_count</name> <init pos:start="19:29" pos:end="19:70">= <expr pos:start="19:31" pos:end="19:70"><name pos:start="19:31" pos:end="19:41"><name pos:start="19:31" pos:end="19:31">s</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:41">mb_width</name></name> <operator pos:start="19:43" pos:end="19:43">*</operator> <operator pos:start="19:45" pos:end="19:45">(</operator><name pos:start="19:46" pos:end="19:57"><name pos:start="19:46" pos:end="19:46">s</name><operator pos:start="19:47" pos:end="19:48">-&gt;</operator><name pos:start="19:49" pos:end="19:57">mb_height</name></name> <operator pos:start="19:59" pos:end="19:60">&gt;&gt;</operator> <name pos:start="19:62" pos:end="19:69">is_field</name><operator pos:start="19:70" pos:end="19:70">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:8">void</name>     <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:27">dxva_data_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:40"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:11">uint8_t</name>  <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:23">dxva_data</name></decl>, <decl pos:start="23:26" pos:end="23:33"><type ref="prev" pos:start="23:5" pos:end="23:14"><modifier pos:start="23:26" pos:end="23:26">*</modifier></type><name pos:start="23:27" pos:end="23:33">current</name></decl>, <decl pos:start="23:36" pos:end="23:39"><type ref="prev" pos:start="23:5" pos:end="23:14"><modifier pos:start="23:36" pos:end="23:36">*</modifier></type><name pos:start="23:37" pos:end="23:39">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:23"><decl pos:start="25:5" pos:end="25:22"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">unsigned</name></type> <name pos:start="25:14" pos:end="25:22">dxva_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:15"><decl pos:start="27:5" pos:end="27:14"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">unsigned</name></type> <name pos:start="27:14" pos:end="27:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="34:0"><decl pos:start="29:5" pos:end="29:17"><type pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:12">unsigned</name></type> <name pos:start="29:14" pos:end="29:17">type</name></decl>;</decl_stmt>



<cpp:if pos:start="33:1" pos:end="33:18">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="35:5" pos:end="54:0"><if pos:start="35:5" pos:end="54:0">if <condition pos:start="35:8" pos:end="35:49">(<expr pos:start="35:9" pos:end="35:48"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:22">pix_fmt</name></name> <operator pos:start="35:24" pos:end="35:25">==</operator> <name pos:start="35:27" pos:end="35:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition> <block pos:start="35:51" pos:end="54:0">{<block_content pos:start="37:9" pos:end="47:22">

        <expr_stmt pos:start="37:9" pos:end="37:52"><expr pos:start="37:9" pos:end="37:51"><name pos:start="37:9" pos:end="37:12">type</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:51">D3D11_VIDEO_DECODER_BUFFER_BITSTREAM</name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="47:22"><if pos:start="39:9" pos:end="47:22">if <condition pos:start="39:12" pos:end="45:84">(<expr pos:start="39:13" pos:end="45:83"><call pos:start="39:13" pos:end="45:83"><name pos:start="39:13" pos:end="39:18">FAILED</name><argument_list pos:start="39:19" pos:end="45:83">(<argument pos:start="39:20" pos:end="45:82"><expr pos:start="39:20" pos:end="45:82"><call pos:start="39:20" pos:end="45:82"><name pos:start="39:20" pos:end="39:54">ID3D11VideoContext_GetDecoderBuffer</name><argument_list pos:start="39:55" pos:end="45:82">(<argument pos:start="39:56" pos:end="39:90"><expr pos:start="39:56" pos:end="39:90"><call pos:start="39:56" pos:end="39:75"><name pos:start="39:56" pos:end="39:70">D3D11VA_CONTEXT</name><argument_list pos:start="39:71" pos:end="39:75">(<argument pos:start="39:72" pos:end="39:74"><expr pos:start="39:72" pos:end="39:74"><name pos:start="39:72" pos:end="39:74">ctx</name></expr></argument>)</argument_list></call><operator pos:start="39:76" pos:end="39:77">-&gt;</operator><name pos:start="39:78" pos:end="39:90">video_context</name></expr></argument>,

                                                       <argument pos:start="41:56" pos:end="41:84"><expr pos:start="41:56" pos:end="41:84"><call pos:start="41:56" pos:end="41:75"><name pos:start="41:56" pos:end="41:70">D3D11VA_CONTEXT</name><argument_list pos:start="41:71" pos:end="41:75">(<argument pos:start="41:72" pos:end="41:74"><expr pos:start="41:72" pos:end="41:74"><name pos:start="41:72" pos:end="41:74">ctx</name></expr></argument>)</argument_list></call><operator pos:start="41:76" pos:end="41:77">-&gt;</operator><name pos:start="41:78" pos:end="41:84">decoder</name></expr></argument>,

                                                       <argument pos:start="43:56" pos:end="43:59"><expr pos:start="43:56" pos:end="43:59"><name pos:start="43:56" pos:end="43:59">type</name></expr></argument>,

                                                       <argument pos:start="45:56" pos:end="45:65"><expr pos:start="45:56" pos:end="45:65"><operator pos:start="45:56" pos:end="45:56">&amp;</operator><name pos:start="45:57" pos:end="45:65">dxva_size</name></expr></argument>, <argument pos:start="45:68" pos:end="45:81"><expr pos:start="45:68" pos:end="45:81"><operator pos:start="45:68" pos:end="45:68">&amp;</operator><name pos:start="45:69" pos:end="45:81">dxva_data_ptr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:22"><block_content pos:start="47:13" pos:end="47:22">

            <return pos:start="47:13" pos:end="47:22">return <expr pos:start="47:20" pos:end="47:21"><operator pos:start="47:20" pos:end="47:20">-</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="53:1" pos:end="53:16">#<cpp:directive pos:start="53:2" pos:end="53:3">if</cpp:directive> <expr pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="55:5" pos:end="70:0"><if pos:start="55:5" pos:end="70:0">if <condition pos:start="55:8" pos:end="55:47">(<expr pos:start="55:9" pos:end="55:46"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:13">avctx</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:22">pix_fmt</name></name> <operator pos:start="55:24" pos:end="55:25">==</operator> <name pos:start="55:27" pos:end="55:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition> <block pos:start="55:49" pos:end="70:0">{<block_content pos:start="57:9" pos:end="65:22">

        <expr_stmt pos:start="57:9" pos:end="57:45"><expr pos:start="57:9" pos:end="57:44"><name pos:start="57:9" pos:end="57:12">type</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:44">DXVA2_BitStreamDateBufferType</name></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="65:22"><if pos:start="59:9" pos:end="65:22">if <condition pos:start="59:12" pos:end="63:79">(<expr pos:start="59:13" pos:end="63:78"><call pos:start="59:13" pos:end="63:78"><name pos:start="59:13" pos:end="59:18">FAILED</name><argument_list pos:start="59:19" pos:end="63:78">(<argument pos:start="59:20" pos:end="63:77"><expr pos:start="59:20" pos:end="63:77"><call pos:start="59:20" pos:end="63:77"><name pos:start="59:20" pos:end="59:49">IDirectXVideoDecoder_GetBuffer</name><argument_list pos:start="59:50" pos:end="63:77">(<argument pos:start="59:51" pos:end="59:77"><expr pos:start="59:51" pos:end="59:77"><call pos:start="59:51" pos:end="59:68"><name pos:start="59:51" pos:end="59:63">DXVA2_CONTEXT</name><argument_list pos:start="59:64" pos:end="59:68">(<argument pos:start="59:65" pos:end="59:67"><expr pos:start="59:65" pos:end="59:67"><name pos:start="59:65" pos:end="59:67">ctx</name></expr></argument>)</argument_list></call><operator pos:start="59:69" pos:end="59:70">-&gt;</operator><name pos:start="59:71" pos:end="59:77">decoder</name></expr></argument>,

                                                  <argument pos:start="61:51" pos:end="61:54"><expr pos:start="61:51" pos:end="61:54"><name pos:start="61:51" pos:end="61:54">type</name></expr></argument>,

                                                  <argument pos:start="63:51" pos:end="63:64"><expr pos:start="63:51" pos:end="63:64"><operator pos:start="63:51" pos:end="63:51">&amp;</operator><name pos:start="63:52" pos:end="63:64">dxva_data_ptr</name></expr></argument>, <argument pos:start="63:67" pos:end="63:76"><expr pos:start="63:67" pos:end="63:76"><operator pos:start="63:67" pos:end="63:67">&amp;</operator><name pos:start="63:68" pos:end="63:76">dxva_size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:22"><block_content pos:start="65:13" pos:end="65:22">

            <return pos:start="65:13" pos:end="65:22">return <expr pos:start="65:20" pos:end="65:21"><operator pos:start="65:20" pos:end="65:20">-</operator><literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="69:1" pos:end="69:6">#<cpp:directive pos:start="69:2" pos:end="69:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="73:5" pos:end="73:30"><expr pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:13">dxva_data</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:29">dxva_data_ptr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:24"><expr pos:start="75:5" pos:end="75:23"><name pos:start="75:5" pos:end="75:11">current</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:23">dxva_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:32"><expr pos:start="77:5" pos:end="77:31"><name pos:start="77:5" pos:end="77:7">end</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <name pos:start="77:11" pos:end="77:19">dxva_data</name> <operator pos:start="77:21" pos:end="77:21">+</operator> <name pos:start="77:23" pos:end="77:31">dxva_size</name></expr>;</expr_stmt>



    <for pos:start="81:5" pos:end="122:0">for <control pos:start="81:9" pos:end="81:46">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:41"><expr pos:start="81:17" pos:end="81:40"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <name pos:start="81:21" pos:end="81:40"><name pos:start="81:21" pos:end="81:27">ctx_pic</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:40">slice_count</name></name></expr>;</condition> <incr pos:start="81:43" pos:end="81:45"><expr pos:start="81:43" pos:end="81:45"><name pos:start="81:43" pos:end="81:43">i</name><operator pos:start="81:44" pos:end="81:45">++</operator></expr></incr>)</control> <block pos:start="81:48" pos:end="122:0">{<block_content pos:start="83:9" pos:end="117:24">

        <decl_stmt pos:start="83:9" pos:end="83:51"><decl pos:start="83:9" pos:end="83:50"><type pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:22">DXVA_SliceInfo</name> <modifier pos:start="83:24" pos:end="83:24">*</modifier></type><name pos:start="83:25" pos:end="83:29">slice</name> <init pos:start="83:31" pos:end="83:50">= <expr pos:start="83:33" pos:end="83:50"><operator pos:start="83:33" pos:end="83:33">&amp;</operator><name pos:start="83:34" pos:end="83:50"><name pos:start="83:34" pos:end="83:40">ctx_pic</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:47">slice</name><index pos:start="83:48" pos:end="83:50">[<expr pos:start="83:49" pos:end="83:49"><name pos:start="83:49" pos:end="83:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:55"><decl pos:start="85:9" pos:end="85:54"><type pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:16">unsigned</name></type> <name pos:start="85:18" pos:end="85:25">position</name> <init pos:start="85:27" pos:end="85:54">= <expr pos:start="85:29" pos:end="85:54"><name pos:start="85:29" pos:end="85:54"><name pos:start="85:29" pos:end="85:33">slice</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:54">dwSliceDataLocation</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="87:9" pos:end="87:59"><decl pos:start="87:9" pos:end="87:58"><type pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:16">unsigned</name></type> <name pos:start="87:18" pos:end="87:21">size</name>     <init pos:start="87:27" pos:end="87:58">= <expr pos:start="87:29" pos:end="87:58"><name pos:start="87:29" pos:end="87:54"><name pos:start="87:29" pos:end="87:33">slice</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:54">dwSliceBitsInBuffer</name></name> <operator pos:start="87:56" pos:end="87:56">/</operator> <literal type="number" pos:start="87:58" pos:end="87:58">8</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:33">(<expr pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:16">size</name> <operator pos:start="89:18" pos:end="89:18">&gt;</operator> <name pos:start="89:20" pos:end="89:22">end</name> <operator pos:start="89:24" pos:end="89:24">-</operator> <name pos:start="89:26" pos:end="89:32">current</name></expr>)</condition> <block pos:start="89:35" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:18">

            <expr_stmt pos:start="91:13" pos:end="91:69"><expr pos:start="91:13" pos:end="91:68"><call pos:start="91:13" pos:end="91:68"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="91:68">(<argument pos:start="91:20" pos:end="91:24"><expr pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:24">avctx</name></expr></argument>, <argument pos:start="91:27" pos:end="91:38"><expr pos:start="91:27" pos:end="91:38"><name pos:start="91:27" pos:end="91:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:41" pos:end="91:67"><expr pos:start="91:41" pos:end="91:67"><literal type="string" pos:start="91:41" pos:end="91:67">"Failed to build bitstream"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:57"><expr pos:start="97:9" pos:end="97:56"><name pos:start="97:9" pos:end="97:34"><name pos:start="97:9" pos:end="97:13">slice</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:34">dwSliceDataLocation</name></name> <operator pos:start="97:36" pos:end="97:36">=</operator> <name pos:start="97:38" pos:end="97:44">current</name> <operator pos:start="97:46" pos:end="97:46">-</operator> <name pos:start="97:48" pos:end="97:56">dxva_data</name></expr>;</expr_stmt>



        <if_stmt pos:start="101:9" pos:end="111:54"><if pos:start="101:9" pos:end="105:72">if <condition pos:start="101:12" pos:end="101:41">(<expr pos:start="101:13" pos:end="101:40"><name pos:start="101:13" pos:end="101:13">i</name> <operator pos:start="101:15" pos:end="101:15">&lt;</operator> <name pos:start="101:17" pos:end="101:36"><name pos:start="101:17" pos:end="101:23">ctx_pic</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:36">slice_count</name></name> <operator pos:start="101:38" pos:end="101:38">-</operator> <literal type="number" pos:start="101:40" pos:end="101:40">1</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="105:72"><block_content pos:start="103:13" pos:end="105:72">

            <expr_stmt pos:start="103:13" pos:end="105:72"><expr pos:start="103:13" pos:end="105:71"><name pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:17">slice</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:36">wNumberMBsInSlice</name></name> <operator pos:start="103:38" pos:end="103:38">=</operator>

                <name pos:start="105:17" pos:end="105:24"><name pos:start="105:17" pos:end="105:21">slice</name><index pos:start="105:22" pos:end="105:24">[<expr pos:start="105:23" pos:end="105:23"><literal type="number" pos:start="105:23" pos:end="105:23">1</literal></expr>]</index></name><operator pos:start="105:25" pos:end="105:25">.</operator><name pos:start="105:26" pos:end="105:42">wNumberMBsInSlice</name> <operator pos:start="105:44" pos:end="105:44">-</operator> <name pos:start="105:46" pos:end="105:53"><name pos:start="105:46" pos:end="105:50">slice</name><index pos:start="105:51" pos:end="105:53">[<expr pos:start="105:52" pos:end="105:52"><literal type="number" pos:start="105:52" pos:end="105:52">0</literal></expr>]</index></name><operator pos:start="105:54" pos:end="105:54">.</operator><name pos:start="105:55" pos:end="105:71">wNumberMBsInSlice</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="107:9" pos:end="111:54">else<block type="pseudo" pos:start="109:13" pos:end="111:54"><block_content pos:start="109:13" pos:end="111:54">

            <expr_stmt pos:start="109:13" pos:end="111:54"><expr pos:start="109:13" pos:end="111:53"><name pos:start="109:13" pos:end="109:36"><name pos:start="109:13" pos:end="109:17">slice</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:36">wNumberMBsInSlice</name></name> <operator pos:start="109:38" pos:end="109:38">=</operator>

                <name pos:start="111:17" pos:end="111:24">mb_count</name> <operator pos:start="111:26" pos:end="111:26">-</operator> <name pos:start="111:28" pos:end="111:35"><name pos:start="111:28" pos:end="111:32">slice</name><index pos:start="111:33" pos:end="111:35">[<expr pos:start="111:34" pos:end="111:34"><literal type="number" pos:start="111:34" pos:end="111:34">0</literal></expr>]</index></name><operator pos:start="111:36" pos:end="111:36">.</operator><name pos:start="111:37" pos:end="111:53">wNumberMBsInSlice</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:61"><expr pos:start="115:9" pos:end="115:60"><call pos:start="115:9" pos:end="115:60"><name pos:start="115:9" pos:end="115:14">memcpy</name><argument_list pos:start="115:15" pos:end="115:60">(<argument pos:start="115:16" pos:end="115:22"><expr pos:start="115:16" pos:end="115:22"><name pos:start="115:16" pos:end="115:22">current</name></expr></argument>, <argument pos:start="115:25" pos:end="115:53"><expr pos:start="115:25" pos:end="115:53"><operator pos:start="115:25" pos:end="115:25">&amp;</operator><name pos:start="115:26" pos:end="115:53"><name pos:start="115:26" pos:end="115:32">ctx_pic</name><operator pos:start="115:33" pos:end="115:34">-&gt;</operator><name pos:start="115:35" pos:end="115:43">bitstream</name><index pos:start="115:44" pos:end="115:53">[<expr pos:start="115:45" pos:end="115:52"><name pos:start="115:45" pos:end="115:52">position</name></expr>]</index></name></expr></argument>, <argument pos:start="115:56" pos:end="115:59"><expr pos:start="115:56" pos:end="115:59"><name pos:start="115:56" pos:end="115:59">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:24"><expr pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:15">current</name> <operator pos:start="117:17" pos:end="117:18">+=</operator> <name pos:start="117:20" pos:end="117:23">size</name></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:if pos:start="121:1" pos:end="121:18">#<cpp:directive pos:start="121:2" pos:end="121:3">if</cpp:directive> <expr pos:start="121:5" pos:end="121:18"><name pos:start="121:5" pos:end="121:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="123:5" pos:end="132:0"><if pos:start="123:5" pos:end="132:0">if <condition pos:start="123:8" pos:end="123:49">(<expr pos:start="123:9" pos:end="123:48"><name pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:13">avctx</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:22">pix_fmt</name></name> <operator pos:start="123:24" pos:end="123:25">==</operator> <name pos:start="123:27" pos:end="123:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="132:0"><block_content pos:start="125:9" pos:end="132:0">

        <if_stmt pos:start="125:9" pos:end="132:0"><if pos:start="125:9" pos:end="132:0">if <condition pos:start="125:12" pos:end="125:134">(<expr pos:start="125:13" pos:end="125:133"><call pos:start="125:13" pos:end="125:133"><name pos:start="125:13" pos:end="125:18">FAILED</name><argument_list pos:start="125:19" pos:end="125:133">(<argument pos:start="125:20" pos:end="125:132"><expr pos:start="125:20" pos:end="125:132"><call pos:start="125:20" pos:end="125:132"><name pos:start="125:20" pos:end="125:58">ID3D11VideoContext_ReleaseDecoderBuffer</name><argument_list pos:start="125:59" pos:end="125:132">(<argument pos:start="125:60" pos:end="125:94"><expr pos:start="125:60" pos:end="125:94"><call pos:start="125:60" pos:end="125:79"><name pos:start="125:60" pos:end="125:74">D3D11VA_CONTEXT</name><argument_list pos:start="125:75" pos:end="125:79">(<argument pos:start="125:76" pos:end="125:78"><expr pos:start="125:76" pos:end="125:78"><name pos:start="125:76" pos:end="125:78">ctx</name></expr></argument>)</argument_list></call><operator pos:start="125:80" pos:end="125:81">-&gt;</operator><name pos:start="125:82" pos:end="125:94">video_context</name></expr></argument>, <argument pos:start="125:97" pos:end="125:125"><expr pos:start="125:97" pos:end="125:125"><call pos:start="125:97" pos:end="125:116"><name pos:start="125:97" pos:end="125:111">D3D11VA_CONTEXT</name><argument_list pos:start="125:112" pos:end="125:116">(<argument pos:start="125:113" pos:end="125:115"><expr pos:start="125:113" pos:end="125:115"><name pos:start="125:113" pos:end="125:115">ctx</name></expr></argument>)</argument_list></call><operator pos:start="125:117" pos:end="125:118">-&gt;</operator><name pos:start="125:119" pos:end="125:125">decoder</name></expr></argument>, <argument pos:start="125:128" pos:end="125:131"><expr pos:start="125:128" pos:end="125:131"><name pos:start="125:128" pos:end="125:131">type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="132:0"><block_content pos:start="127:13" pos:end="132:0">

            <return pos:start="127:13" pos:end="132:0">return <expr pos:start="127:20" pos:end="127:21"><operator pos:start="127:20" pos:end="127:20">-</operator><literal type="number" pos:start="127:21" pos:end="127:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="131:1" pos:end="131:16">#<cpp:directive pos:start="131:2" pos:end="131:3">if</cpp:directive> <expr pos:start="131:5" pos:end="131:16"><name pos:start="131:5" pos:end="131:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="133:5" pos:end="140:0"><if pos:start="133:5" pos:end="140:0">if <condition pos:start="133:8" pos:end="133:47">(<expr pos:start="133:9" pos:end="133:46"><name pos:start="133:9" pos:end="133:22"><name pos:start="133:9" pos:end="133:13">avctx</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:22">pix_fmt</name></name> <operator pos:start="133:24" pos:end="133:25">==</operator> <name pos:start="133:27" pos:end="133:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="140:0"><block_content pos:start="135:9" pos:end="140:0">

        <if_stmt pos:start="135:9" pos:end="140:0"><if pos:start="135:9" pos:end="140:0">if <condition pos:start="135:12" pos:end="135:90">(<expr pos:start="135:13" pos:end="135:89"><call pos:start="135:13" pos:end="135:89"><name pos:start="135:13" pos:end="135:18">FAILED</name><argument_list pos:start="135:19" pos:end="135:89">(<argument pos:start="135:20" pos:end="135:88"><expr pos:start="135:20" pos:end="135:88"><call pos:start="135:20" pos:end="135:88"><name pos:start="135:20" pos:end="135:53">IDirectXVideoDecoder_ReleaseBuffer</name><argument_list pos:start="135:54" pos:end="135:88">(<argument pos:start="135:55" pos:end="135:81"><expr pos:start="135:55" pos:end="135:81"><call pos:start="135:55" pos:end="135:72"><name pos:start="135:55" pos:end="135:67">DXVA2_CONTEXT</name><argument_list pos:start="135:68" pos:end="135:72">(<argument pos:start="135:69" pos:end="135:71"><expr pos:start="135:69" pos:end="135:71"><name pos:start="135:69" pos:end="135:71">ctx</name></expr></argument>)</argument_list></call><operator pos:start="135:73" pos:end="135:74">-&gt;</operator><name pos:start="135:75" pos:end="135:81">decoder</name></expr></argument>, <argument pos:start="135:84" pos:end="135:87"><expr pos:start="135:84" pos:end="135:87"><name pos:start="135:84" pos:end="135:87">type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="140:0"><block_content pos:start="137:13" pos:end="140:0">

            <return pos:start="137:13" pos:end="140:0">return <expr pos:start="137:20" pos:end="137:21"><operator pos:start="137:20" pos:end="137:20">-</operator><literal type="number" pos:start="137:21" pos:end="137:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="139:1" pos:end="139:6">#<cpp:directive pos:start="139:2" pos:end="139:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="141:5" pos:end="148:0"><if pos:start="141:5" pos:end="148:0">if <condition pos:start="141:8" pos:end="141:33">(<expr pos:start="141:9" pos:end="141:32"><name pos:start="141:9" pos:end="141:9">i</name> <operator pos:start="141:11" pos:end="141:11">&lt;</operator> <name pos:start="141:13" pos:end="141:32"><name pos:start="141:13" pos:end="141:19">ctx_pic</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:32">slice_count</name></name></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="148:0"><block_content pos:start="143:9" pos:end="148:0">

        <return pos:start="143:9" pos:end="148:0">return <expr pos:start="143:16" pos:end="143:17"><operator pos:start="143:16" pos:end="143:16">-</operator><literal type="number" pos:start="143:17" pos:end="143:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="147:1" pos:end="147:18">#<cpp:directive pos:start="147:2" pos:end="147:3">if</cpp:directive> <expr pos:start="147:5" pos:end="147:18"><name pos:start="147:5" pos:end="147:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="149:5" pos:end="170:0"><if pos:start="149:5" pos:end="170:0">if <condition pos:start="149:8" pos:end="149:49">(<expr pos:start="149:9" pos:end="149:48"><name pos:start="149:9" pos:end="149:22"><name pos:start="149:9" pos:end="149:13">avctx</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:22">pix_fmt</name></name> <operator pos:start="149:24" pos:end="149:25">==</operator> <name pos:start="149:27" pos:end="149:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition> <block pos:start="149:51" pos:end="170:0">{<block_content pos:start="151:9" pos:end="163:56">

        <decl_stmt pos:start="151:9" pos:end="151:52"><decl pos:start="151:9" pos:end="151:51"><type pos:start="151:9" pos:end="151:41"><name pos:start="151:9" pos:end="151:39">D3D11_VIDEO_DECODER_BUFFER_DESC</name> <modifier pos:start="151:41" pos:end="151:41">*</modifier></type><name pos:start="151:42" pos:end="151:46">dsc11</name> <init pos:start="151:48" pos:end="151:51">= <expr pos:start="151:50" pos:end="151:51"><name pos:start="151:50" pos:end="151:51">bs</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:41"><expr pos:start="153:9" pos:end="153:40"><call pos:start="153:9" pos:end="153:40"><name pos:start="153:9" pos:end="153:14">memset</name><argument_list pos:start="153:15" pos:end="153:40">(<argument pos:start="153:16" pos:end="153:20"><expr pos:start="153:16" pos:end="153:20"><name pos:start="153:16" pos:end="153:20">dsc11</name></expr></argument>, <argument pos:start="153:23" pos:end="153:23"><expr pos:start="153:23" pos:end="153:23"><literal type="number" pos:start="153:23" pos:end="153:23">0</literal></expr></argument>, <argument pos:start="153:26" pos:end="153:39"><expr pos:start="153:26" pos:end="153:39"><sizeof pos:start="153:26" pos:end="153:39">sizeof<argument_list pos:start="153:32" pos:end="153:39">(<argument pos:start="153:33" pos:end="153:38"><expr pos:start="153:33" pos:end="153:38"><operator pos:start="153:33" pos:end="153:33">*</operator><name pos:start="153:34" pos:end="153:38">dsc11</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:43"><expr pos:start="155:9" pos:end="155:42"><name pos:start="155:9" pos:end="155:25"><name pos:start="155:9" pos:end="155:13">dsc11</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:25">BufferType</name></name>           <operator pos:start="155:37" pos:end="155:37">=</operator> <name pos:start="155:39" pos:end="155:42">type</name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:58"><expr pos:start="157:9" pos:end="157:57"><name pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:13">dsc11</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:23">DataSize</name></name>             <operator pos:start="157:37" pos:end="157:37">=</operator> <name pos:start="157:39" pos:end="157:45">current</name> <operator pos:start="157:47" pos:end="157:47">-</operator> <name pos:start="157:49" pos:end="157:57">dxva_data</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:47"><expr pos:start="159:9" pos:end="159:46"><name pos:start="159:9" pos:end="159:29"><name pos:start="159:9" pos:end="159:13">dsc11</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:29">NumMBsInBuffer</name></name>       <operator pos:start="159:37" pos:end="159:37">=</operator> <name pos:start="159:39" pos:end="159:46">mb_count</name></expr>;</expr_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:56"><expr pos:start="163:9" pos:end="163:55"><name pos:start="163:9" pos:end="163:12">type</name> <operator pos:start="163:14" pos:end="163:14">=</operator> <name pos:start="163:16" pos:end="163:55">D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="167:1" pos:end="167:6">#<cpp:directive pos:start="167:2" pos:end="167:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="169:1" pos:end="169:16">#<cpp:directive pos:start="169:2" pos:end="169:3">if</cpp:directive> <expr pos:start="169:5" pos:end="169:16"><name pos:start="169:5" pos:end="169:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="171:5" pos:end="190:0"><if pos:start="171:5" pos:end="190:0">if <condition pos:start="171:8" pos:end="171:47">(<expr pos:start="171:9" pos:end="171:46"><name pos:start="171:9" pos:end="171:22"><name pos:start="171:9" pos:end="171:13">avctx</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:22">pix_fmt</name></name> <operator pos:start="171:24" pos:end="171:25">==</operator> <name pos:start="171:27" pos:end="171:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition> <block pos:start="171:49" pos:end="190:0">{<block_content pos:start="173:9" pos:end="185:44">

        <decl_stmt pos:start="173:9" pos:end="173:42"><decl pos:start="173:9" pos:end="173:41"><type pos:start="173:9" pos:end="173:32"><name pos:start="173:9" pos:end="173:30">DXVA2_DecodeBufferDesc</name> <modifier pos:start="173:32" pos:end="173:32">*</modifier></type><name pos:start="173:33" pos:end="173:36">dsc2</name> <init pos:start="173:38" pos:end="173:41">= <expr pos:start="173:40" pos:end="173:41"><name pos:start="173:40" pos:end="173:41">bs</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:39"><expr pos:start="175:9" pos:end="175:38"><call pos:start="175:9" pos:end="175:38"><name pos:start="175:9" pos:end="175:14">memset</name><argument_list pos:start="175:15" pos:end="175:38">(<argument pos:start="175:16" pos:end="175:19"><expr pos:start="175:16" pos:end="175:19"><name pos:start="175:16" pos:end="175:19">dsc2</name></expr></argument>, <argument pos:start="175:22" pos:end="175:22"><expr pos:start="175:22" pos:end="175:22"><literal type="number" pos:start="175:22" pos:end="175:22">0</literal></expr></argument>, <argument pos:start="175:25" pos:end="175:37"><expr pos:start="175:25" pos:end="175:37"><sizeof pos:start="175:25" pos:end="175:37">sizeof<argument_list pos:start="175:31" pos:end="175:37">(<argument pos:start="175:32" pos:end="175:36"><expr pos:start="175:32" pos:end="175:36"><operator pos:start="175:32" pos:end="175:32">*</operator><name pos:start="175:33" pos:end="175:36">dsc2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:42"><expr pos:start="177:9" pos:end="177:41"><name pos:start="177:9" pos:end="177:34"><name pos:start="177:9" pos:end="177:12">dsc2</name><operator pos:start="177:13" pos:end="177:14">-&gt;</operator><name pos:start="177:15" pos:end="177:34">CompressedBufferType</name></name> <operator pos:start="177:36" pos:end="177:36">=</operator> <name pos:start="177:38" pos:end="177:41">type</name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:57"><expr pos:start="179:9" pos:end="179:56"><name pos:start="179:9" pos:end="179:22"><name pos:start="179:9" pos:end="179:12">dsc2</name><operator pos:start="179:13" pos:end="179:14">-&gt;</operator><name pos:start="179:15" pos:end="179:22">DataSize</name></name>             <operator pos:start="179:36" pos:end="179:36">=</operator> <name pos:start="179:38" pos:end="179:44">current</name> <operator pos:start="179:46" pos:end="179:46">-</operator> <name pos:start="179:48" pos:end="179:56">dxva_data</name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:46"><expr pos:start="181:9" pos:end="181:45"><name pos:start="181:9" pos:end="181:28"><name pos:start="181:9" pos:end="181:12">dsc2</name><operator pos:start="181:13" pos:end="181:14">-&gt;</operator><name pos:start="181:15" pos:end="181:28">NumMBsInBuffer</name></name>       <operator pos:start="181:36" pos:end="181:36">=</operator> <name pos:start="181:38" pos:end="181:45">mb_count</name></expr>;</expr_stmt>



        <expr_stmt pos:start="185:9" pos:end="185:44"><expr pos:start="185:9" pos:end="185:43"><name pos:start="185:9" pos:end="185:12">type</name> <operator pos:start="185:14" pos:end="185:14">=</operator> <name pos:start="185:16" pos:end="185:43">DXVA2_SliceControlBufferType</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="189:1" pos:end="189:6">#<cpp:directive pos:start="189:2" pos:end="189:6">endif</cpp:directive></cpp:endif>



    <return pos:start="193:5" pos:end="201:44">return <expr pos:start="193:12" pos:end="201:43"><call pos:start="193:12" pos:end="201:43"><name pos:start="193:12" pos:end="193:33">ff_dxva2_commit_buffer</name><argument_list pos:start="193:34" pos:end="201:43">(<argument pos:start="193:35" pos:end="193:39"><expr pos:start="193:35" pos:end="193:39"><name pos:start="193:35" pos:end="193:39">avctx</name></expr></argument>, <argument pos:start="193:42" pos:end="193:44"><expr pos:start="193:42" pos:end="193:44"><name pos:start="193:42" pos:end="193:44">ctx</name></expr></argument>, <argument pos:start="193:47" pos:end="193:48"><expr pos:start="193:47" pos:end="193:48"><name pos:start="193:47" pos:end="193:48">sc</name></expr></argument>,

                                  <argument pos:start="195:35" pos:end="195:38"><expr pos:start="195:35" pos:end="195:38"><name pos:start="195:35" pos:end="195:38">type</name></expr></argument>,

                                  <argument pos:start="197:35" pos:end="197:48"><expr pos:start="197:35" pos:end="197:48"><name pos:start="197:35" pos:end="197:48"><name pos:start="197:35" pos:end="197:41">ctx_pic</name><operator pos:start="197:42" pos:end="197:43">-&gt;</operator><name pos:start="197:44" pos:end="197:48">slice</name></name></expr></argument>,

                                  <argument pos:start="199:35" pos:end="199:80"><expr pos:start="199:35" pos:end="199:80"><name pos:start="199:35" pos:end="199:54"><name pos:start="199:35" pos:end="199:41">ctx_pic</name><operator pos:start="199:42" pos:end="199:43">-&gt;</operator><name pos:start="199:44" pos:end="199:54">slice_count</name></name> <operator pos:start="199:56" pos:end="199:56">*</operator> <sizeof pos:start="199:58" pos:end="199:80">sizeof<argument_list pos:start="199:64" pos:end="199:80">(<argument pos:start="199:65" pos:end="199:79"><expr pos:start="199:65" pos:end="199:79"><operator pos:start="199:65" pos:end="199:65">*</operator><name pos:start="199:66" pos:end="199:79"><name pos:start="199:66" pos:end="199:72">ctx_pic</name><operator pos:start="199:73" pos:end="199:74">-&gt;</operator><name pos:start="199:75" pos:end="199:79">slice</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                  <argument pos:start="201:35" pos:end="201:42"><expr pos:start="201:35" pos:end="201:42"><name pos:start="201:35" pos:end="201:42">mb_count</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
