<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5639.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:28">softusb_read</name><parameter_list pos:start="1:29" pos:end="3:43">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:61">target_phys_addr_t</name></type> <name pos:start="1:63" pos:end="1:66">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:42"><decl pos:start="3:30" pos:end="3:42"><type pos:start="3:30" pos:end="3:42"><name pos:start="3:30" pos:end="3:37">unsigned</name></type> <name pos:start="3:39" pos:end="3:42">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:13">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">MilkymistSoftUsbState</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:28">s</name> <init pos:start="7:30" pos:end="7:37">= <expr pos:start="7:32" pos:end="7:37"><name pos:start="7:32" pos:end="7:37">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">r</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:15"><expr pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:8">addr</name> <operator pos:start="13:10" pos:end="13:12">&gt;&gt;=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="33:5">switch <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">addr</name></expr>)</condition> <block pos:start="15:19" pos:end="33:5">{<block_content pos:start="17:5" pos:end="31:14">

    <case pos:start="17:5" pos:end="17:16">case <expr pos:start="17:10" pos:end="17:15"><name pos:start="17:10" pos:end="17:15">R_CTRL</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:9">r</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:19">regs</name><index pos:start="19:20" pos:end="19:25">[<expr pos:start="19:21" pos:end="19:24"><name pos:start="19:21" pos:end="19:24">addr</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>



    <default pos:start="25:5" pos:end="25:12">default:</default>

        <expr_stmt pos:start="27:9" pos:end="29:43"><expr pos:start="27:9" pos:end="29:42"><call pos:start="27:9" pos:end="29:42"><name pos:start="27:9" pos:end="27:20">error_report</name><argument_list pos:start="27:21" pos:end="29:42">(<argument pos:start="27:22" pos:end="29:30"><expr pos:start="27:22" pos:end="29:30"><literal type="string" pos:start="27:22" pos:end="27:76">"milkymist_softusb: read access to unknown register 0x"</literal>

                <name pos:start="29:17" pos:end="29:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="29:33" pos:end="29:41"><expr pos:start="29:33" pos:end="29:41"><name pos:start="29:33" pos:end="29:36">addr</name> <operator pos:start="29:38" pos:end="29:39">&lt;&lt;</operator> <literal type="number" pos:start="29:41" pos:end="29:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="37:5" pos:end="37:54"><expr pos:start="37:5" pos:end="37:53"><call pos:start="37:5" pos:end="37:53"><name pos:start="37:5" pos:end="37:39">trace_milkymist_softusb_memory_read</name><argument_list pos:start="37:40" pos:end="37:53">(<argument pos:start="37:41" pos:end="37:49"><expr pos:start="37:41" pos:end="37:49"><name pos:start="37:41" pos:end="37:44">addr</name> <operator pos:start="37:46" pos:end="37:47">&lt;&lt;</operator> <literal type="number" pos:start="37:49" pos:end="37:49">2</literal></expr></argument>, <argument pos:start="37:52" pos:end="37:52"><expr pos:start="37:52" pos:end="37:52"><name pos:start="37:52" pos:end="37:52">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><name pos:start="41:12" pos:end="41:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
