<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20982.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">imx_timerp_write</name><parameter_list pos:start="1:29" pos:end="3:59">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:68"><decl pos:start="1:44" pos:end="1:68"><type pos:start="1:44" pos:end="1:68"><name pos:start="1:44" pos:end="1:61">target_phys_addr_t</name></type> <name pos:start="1:63" pos:end="1:68">offset</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:43">value</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">unsigned</name></type> <name pos:start="3:55" pos:end="3:58">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:5">

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">IMXTimerPState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:48">= <expr pos:start="7:25" pos:end="7:48"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:39">IMXTimerPState</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator><name pos:start="7:43" pos:end="7:48">opaque</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="11:33"><expr pos:start="9:5" pos:end="11:32"><call pos:start="9:5" pos:end="11:32"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="11:32">(<argument pos:start="9:13" pos:end="9:46"><expr pos:start="9:13" pos:end="9:46"><literal type="string" pos:start="9:13" pos:end="9:46">"p-write(offset=%x, value = %x)\n"</literal></expr></argument>, <argument pos:start="9:49" pos:end="9:73"><expr pos:start="9:49" pos:end="9:73"><operator pos:start="9:49" pos:end="9:49">(</operator><name pos:start="9:50" pos:end="9:57">unsigned</name> <name pos:start="9:59" pos:end="9:61">int</name><operator pos:start="9:62" pos:end="9:62">)</operator><name pos:start="9:63" pos:end="9:68">offset</name> <operator pos:start="9:70" pos:end="9:71">&gt;&gt;</operator> <literal type="number" pos:start="9:73" pos:end="9:73">2</literal></expr></argument>,

            <argument pos:start="11:13" pos:end="11:31"><expr pos:start="11:13" pos:end="11:31"><operator pos:start="11:13" pos:end="11:13">(</operator><name pos:start="11:14" pos:end="11:21">unsigned</name> <name pos:start="11:23" pos:end="11:25">int</name><operator pos:start="11:26" pos:end="11:26">)</operator><name pos:start="11:27" pos:end="11:31">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="15:5" pos:end="97:5">switch <condition pos:start="15:12" pos:end="15:24">(<expr pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:18">offset</name> <operator pos:start="15:20" pos:end="15:21">&gt;&gt;</operator> <literal type="number" pos:start="15:23" pos:end="15:23">2</literal></expr>)</condition> <block pos:start="15:26" pos:end="97:5">{<block_content pos:start="17:5" pos:end="95:37">

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal></expr>:</case> <comment type="block" pos:start="17:13" pos:end="17:20">/* CR */</comment>

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:27">(<expr pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:17">value</name> <operator pos:start="19:19" pos:end="19:19">&amp;</operator> <name pos:start="19:21" pos:end="19:26">CR_SWR</name></expr>)</condition> <block pos:start="19:29" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:29">

            <expr_stmt pos:start="21:13" pos:end="21:46"><expr pos:start="21:13" pos:end="21:45"><call pos:start="21:13" pos:end="21:45"><name pos:start="21:13" pos:end="21:28">imx_timerp_reset</name><argument_list pos:start="21:29" pos:end="21:45">(<argument pos:start="21:30" pos:end="21:44"><expr pos:start="21:30" pos:end="21:44"><operator pos:start="21:30" pos:end="21:30">&amp;</operator><name pos:start="21:31" pos:end="21:44"><name pos:start="21:31" pos:end="21:31">s</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:39">busdev</name><operator pos:start="21:40" pos:end="21:40">.</operator><name pos:start="21:41" pos:end="21:44">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:29"><expr pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:17">value</name> <operator pos:start="23:19" pos:end="23:20">&amp;=</operator> <operator pos:start="23:22" pos:end="23:22">~</operator><name pos:start="23:23" pos:end="23:28">CR_SWR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:13">cr</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:21">value</name> <operator pos:start="27:23" pos:end="27:23">&amp;</operator> <literal type="number" pos:start="27:25" pos:end="27:34">0x03ffffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><call pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:23">set_timerp_freq</name><argument_list pos:start="29:24" pos:end="29:26">(<argument pos:start="29:25" pos:end="29:25"><expr pos:start="29:25" pos:end="29:25"><name pos:start="29:25" pos:end="29:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="47:9"><if pos:start="33:9" pos:end="43:9">if <condition pos:start="33:12" pos:end="33:39">(<expr pos:start="33:13" pos:end="33:38"><name pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:19">freq</name></name> <operator pos:start="33:21" pos:end="33:22">&amp;&amp;</operator> <operator pos:start="33:24" pos:end="33:24">(</operator><name pos:start="33:25" pos:end="33:29"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:29">cr</name></name> <operator pos:start="33:31" pos:end="33:31">&amp;</operator> <name pos:start="33:33" pos:end="33:37">CR_EN</name><operator pos:start="33:38" pos:end="33:38">)</operator></expr>)</condition> <block pos:start="33:41" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:36">

            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:36">(<expr pos:start="35:17" pos:end="35:35"><operator pos:start="35:17" pos:end="35:17">!</operator><operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:23"><name pos:start="35:19" pos:end="35:19">s</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:23">cr</name></name> <operator pos:start="35:25" pos:end="35:25">&amp;</operator> <name pos:start="35:27" pos:end="35:34">CR_ENMOD</name><operator pos:start="35:35" pos:end="35:35">)</operator></expr>)</condition> <block pos:start="35:38" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:50">

                <expr_stmt pos:start="37:17" pos:end="37:50"><expr pos:start="37:17" pos:end="37:49"><call pos:start="37:17" pos:end="37:49"><name pos:start="37:17" pos:end="37:32">ptimer_set_count</name><argument_list pos:start="37:33" pos:end="37:49">(<argument pos:start="37:34" pos:end="37:41"><expr pos:start="37:34" pos:end="37:41"><name pos:start="37:34" pos:end="37:41"><name pos:start="37:34" pos:end="37:34">s</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:41">timer</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:48"><expr pos:start="37:44" pos:end="37:48"><name pos:start="37:44" pos:end="37:48"><name pos:start="37:44" pos:end="37:44">s</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:48">lr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:36"><expr pos:start="41:13" pos:end="41:35"><call pos:start="41:13" pos:end="41:35"><name pos:start="41:13" pos:end="41:22">ptimer_run</name><argument_list pos:start="41:23" pos:end="41:35">(<argument pos:start="41:24" pos:end="41:31"><expr pos:start="41:24" pos:end="41:31"><name pos:start="41:24" pos:end="41:31"><name pos:start="41:24" pos:end="41:24">s</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:31">timer</name></name></expr></argument>, <argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><literal type="number" pos:start="41:34" pos:end="41:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="47:9">else <block pos:start="43:16" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:34">

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><call pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:23">ptimer_stop</name><argument_list pos:start="45:24" pos:end="45:33">(<argument pos:start="45:25" pos:end="45:32"><expr pos:start="45:25" pos:end="45:32"><name pos:start="45:25" pos:end="45:32"><name pos:start="45:25" pos:end="45:25">s</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:32">timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>



    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">1</literal></expr>:</case> <comment type="block" pos:start="53:13" pos:end="53:25">/* SR - ACK*/</comment>

        <expr_stmt pos:start="55:9" pos:end="55:25"><expr pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:20">int_level</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><call pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:25">imx_timerp_update</name><argument_list pos:start="57:26" pos:end="57:28">(<argument pos:start="57:27" pos:end="57:27"><expr pos:start="57:27" pos:end="57:27"><name pos:start="57:27" pos:end="57:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>



    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">2</literal></expr>:</case> <comment type="block" pos:start="63:13" pos:end="63:32">/* LR - set ticks */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:22"><expr pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:13">lr</name></name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:21">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:63"><expr pos:start="67:9" pos:end="67:62"><call pos:start="67:9" pos:end="67:62"><name pos:start="67:9" pos:end="67:24">ptimer_set_limit</name><argument_list pos:start="67:25" pos:end="67:62">(<argument pos:start="67:26" pos:end="67:33"><expr pos:start="67:26" pos:end="67:33"><name pos:start="67:26" pos:end="67:33"><name pos:start="67:26" pos:end="67:26">s</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:33">timer</name></name></expr></argument>, <argument pos:start="67:36" pos:end="67:40"><expr pos:start="67:36" pos:end="67:40"><name pos:start="67:36" pos:end="67:40">value</name></expr></argument>, <argument pos:start="67:43" pos:end="67:61"><expr pos:start="67:43" pos:end="67:61"><operator pos:start="67:43" pos:end="67:43">!</operator><operator pos:start="67:44" pos:end="67:44">!</operator><operator pos:start="67:45" pos:end="67:45">(</operator><name pos:start="67:46" pos:end="67:50"><name pos:start="67:46" pos:end="67:46">s</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:50">cr</name></name> <operator pos:start="67:52" pos:end="67:52">&amp;</operator> <name pos:start="67:54" pos:end="67:60">CR_IOVW</name><operator pos:start="67:61" pos:end="67:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>



    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">3</literal></expr>:</case> <comment type="block" pos:start="73:13" pos:end="73:21">/* CMP */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:23"><expr pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:14">cmp</name></name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:22">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="85:9"><if pos:start="77:9" pos:end="85:9">if <condition pos:start="77:12" pos:end="77:18">(<expr pos:start="77:13" pos:end="77:17"><name pos:start="77:13" pos:end="77:17">value</name></expr>)</condition> <block pos:start="77:20" pos:end="85:9">{<block_content pos:start="79:13" pos:end="83:14">

            <expr_stmt pos:start="79:13" pos:end="83:14"><expr pos:start="79:13" pos:end="83:13"><call pos:start="79:13" pos:end="83:13"><name pos:start="79:13" pos:end="79:19">IPRINTF</name><argument_list pos:start="79:20" pos:end="83:13">(

                <argument pos:start="81:17" pos:end="81:76"><expr pos:start="81:17" pos:end="81:76"><literal type="string" pos:start="81:17" pos:end="81:76">"Values for EPIT comparison other than zero not supported\n"</literal></expr></argument>

            )</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>



    <default pos:start="91:5" pos:end="91:12">default:</default>

        <expr_stmt pos:start="93:9" pos:end="95:37"><expr pos:start="93:9" pos:end="95:36"><call pos:start="93:9" pos:end="95:36"><name pos:start="93:9" pos:end="93:15">IPRINTF</name><argument_list pos:start="93:16" pos:end="95:36">(<argument pos:start="93:17" pos:end="93:51"><expr pos:start="93:17" pos:end="93:51"><literal type="string" pos:start="93:17" pos:end="93:51">"imx_timerp_write: Bad offset %x\n"</literal></expr></argument>,

                   <argument pos:start="95:20" pos:end="95:35"><expr pos:start="95:20" pos:end="95:35"><operator pos:start="95:20" pos:end="95:20">(</operator><name pos:start="95:21" pos:end="95:23">int</name><operator pos:start="95:24" pos:end="95:24">)</operator><name pos:start="95:25" pos:end="95:30">offset</name> <operator pos:start="95:32" pos:end="95:33">&gt;&gt;</operator> <literal type="number" pos:start="95:35" pos:end="95:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
