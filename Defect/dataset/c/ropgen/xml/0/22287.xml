<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22287.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">qemu_irq</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:22">openpic_init</name> <parameter_list pos:start="1:24" pos:end="3:58">(<parameter pos:start="1:25" pos:end="1:43"><decl pos:start="1:25" pos:end="1:43"><type pos:start="1:25" pos:end="1:43"><name pos:start="1:25" pos:end="1:36">MemoryRegion</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">pmem</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:56">nb_cpus</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:39"><decl pos:start="3:25" pos:end="3:39"><type pos:start="3:25" pos:end="3:39"><name pos:start="3:25" pos:end="3:32">qemu_irq</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier><modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">irqs</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:57"><decl pos:start="3:42" pos:end="3:57"><type pos:start="3:42" pos:end="3:57"><name pos:start="3:42" pos:end="3:49">qemu_irq</name></type> <name pos:start="3:51" pos:end="3:57">irq_out</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="135:1">{<block_content pos:start="7:5" pos:end="133:66">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">openpic_t</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">opp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">m</name></decl>;</decl_stmt>

    <struct pos:start="11:5" pos:end="31:6">struct <block pos:start="11:12" pos:end="21:5">{

        <decl_stmt pos:start="13:9" pos:end="13:37"><decl pos:start="13:9" pos:end="13:36"><type pos:start="13:9" pos:end="13:32"><specifier pos:start="13:9" pos:end="13:13">const</specifier> <name pos:start="13:15" pos:end="13:18">char</name>             <modifier pos:start="13:32" pos:end="13:32">*</modifier></type><name pos:start="13:33" pos:end="13:36">name</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:36"><decl pos:start="15:9" pos:end="15:35"><type pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:23">MemoryRegionOps</name> <specifier pos:start="15:25" pos:end="15:29">const</specifier>  <modifier pos:start="15:32" pos:end="15:32">*</modifier></type><name pos:start="15:33" pos:end="15:35">ops</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:31"><decl pos:start="17:9" pos:end="17:30"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">hwaddr</name></type>      <name pos:start="17:21" pos:end="17:30">start_addr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:37"><decl pos:start="19:9" pos:end="19:36"><type pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:18">ram_addr_t</name></type>              <name pos:start="19:33" pos:end="19:36">size</name></decl>;</decl_stmt>

    }</block> <decl pos:start="21:7" pos:end="31:5">const <name pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:16">list</name><index pos:start="21:17" pos:end="21:18">[]</index></name> <init pos:start="21:20" pos:end="31:5">= <expr pos:start="21:22" pos:end="31:5"><block pos:start="21:22" pos:end="31:5">{

        <expr pos:start="23:9" pos:end="23:78"><block pos:start="23:9" pos:end="23:78">{<expr pos:start="23:10" pos:end="23:14"><literal type="string" pos:start="23:10" pos:end="23:14">"glb"</literal></expr>, <expr pos:start="23:17" pos:end="23:32"><operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:32">openpic_glb_ops</name></expr>, <expr pos:start="23:35" pos:end="23:55"><name pos:start="23:35" pos:end="23:55">OPENPIC_GLB_REG_START</name></expr>, <expr pos:start="23:58" pos:end="23:77"><name pos:start="23:58" pos:end="23:77">OPENPIC_GLB_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="25:9" pos:end="25:78"><block pos:start="25:9" pos:end="25:78">{<expr pos:start="25:10" pos:end="25:14"><literal type="string" pos:start="25:10" pos:end="25:14">"tmr"</literal></expr>, <expr pos:start="25:17" pos:end="25:32"><operator pos:start="25:17" pos:end="25:17">&amp;</operator><name pos:start="25:18" pos:end="25:32">openpic_tmr_ops</name></expr>, <expr pos:start="25:35" pos:end="25:55"><name pos:start="25:35" pos:end="25:55">OPENPIC_TMR_REG_START</name></expr>, <expr pos:start="25:58" pos:end="25:77"><name pos:start="25:58" pos:end="25:77">OPENPIC_TMR_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="27:9" pos:end="27:78"><block pos:start="27:9" pos:end="27:78">{<expr pos:start="27:10" pos:end="27:14"><literal type="string" pos:start="27:10" pos:end="27:14">"src"</literal></expr>, <expr pos:start="27:17" pos:end="27:32"><operator pos:start="27:17" pos:end="27:17">&amp;</operator><name pos:start="27:18" pos:end="27:32">openpic_src_ops</name></expr>, <expr pos:start="27:35" pos:end="27:55"><name pos:start="27:35" pos:end="27:55">OPENPIC_SRC_REG_START</name></expr>, <expr pos:start="27:58" pos:end="27:77"><name pos:start="27:58" pos:end="27:77">OPENPIC_SRC_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="29:9" pos:end="29:78"><block pos:start="29:9" pos:end="29:78">{<expr pos:start="29:10" pos:end="29:14"><literal type="string" pos:start="29:10" pos:end="29:14">"cpu"</literal></expr>, <expr pos:start="29:17" pos:end="29:32"><operator pos:start="29:17" pos:end="29:17">&amp;</operator><name pos:start="29:18" pos:end="29:32">openpic_cpu_ops</name></expr>, <expr pos:start="29:35" pos:end="29:55"><name pos:start="29:35" pos:end="29:55">OPENPIC_CPU_REG_START</name></expr>, <expr pos:start="29:58" pos:end="29:77"><name pos:start="29:58" pos:end="29:77">OPENPIC_CPU_REG_SIZE</name></expr>}</block></expr>,

    }</block></expr></init></decl>;</struct>



    <comment type="block" pos:start="35:5" pos:end="35:49">/* XXX: for now, only one CPU is supported */</comment>

    <if_stmt pos:start="37:5" pos:end="39:20"><if pos:start="37:5" pos:end="39:20">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:15">nb_cpus</name> <operator pos:start="37:17" pos:end="37:18">!=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">1</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:20"><block_content pos:start="39:9" pos:end="39:20">

        <return pos:start="39:9" pos:end="39:20">return <expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:39"><expr pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:7">opp</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:38"><name pos:start="41:11" pos:end="41:19">g_malloc0</name><argument_list pos:start="41:20" pos:end="41:38">(<argument pos:start="41:21" pos:end="41:37"><expr pos:start="41:21" pos:end="41:37"><sizeof pos:start="41:21" pos:end="41:37">sizeof<argument_list pos:start="41:27" pos:end="41:37">(<argument pos:start="41:28" pos:end="41:36"><expr pos:start="41:28" pos:end="41:36"><name pos:start="41:28" pos:end="41:36">openpic_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:54"><expr pos:start="45:5" pos:end="45:53"><call pos:start="45:5" pos:end="45:53"><name pos:start="45:5" pos:end="45:22">memory_region_init</name><argument_list pos:start="45:23" pos:end="45:53">(<argument pos:start="45:24" pos:end="45:32"><expr pos:start="45:24" pos:end="45:32"><operator pos:start="45:24" pos:end="45:24">&amp;</operator><name pos:start="45:25" pos:end="45:32"><name pos:start="45:25" pos:end="45:27">opp</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:32">mem</name></name></expr></argument>, <argument pos:start="45:35" pos:end="45:43"><expr pos:start="45:35" pos:end="45:43"><literal type="string" pos:start="45:35" pos:end="45:43">"openpic"</literal></expr></argument>, <argument pos:start="45:46" pos:end="45:52"><expr pos:start="45:46" pos:end="45:52"><literal type="number" pos:start="45:46" pos:end="45:52">0x40000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="49:5" pos:end="63:5">for <control pos:start="49:9" pos:end="49:42">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:37"><expr pos:start="49:17" pos:end="49:36"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <call pos:start="49:21" pos:end="49:36"><name pos:start="49:21" pos:end="49:30">ARRAY_SIZE</name><argument_list pos:start="49:31" pos:end="49:36">(<argument pos:start="49:32" pos:end="49:35"><expr pos:start="49:32" pos:end="49:35"><name pos:start="49:32" pos:end="49:35">list</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="49:39" pos:end="49:41"><expr pos:start="49:39" pos:end="49:41"><name pos:start="49:39" pos:end="49:39">i</name><operator pos:start="49:40" pos:end="49:41">++</operator></expr></incr>)</control> <block pos:start="49:44" pos:end="63:5">{<block_content pos:start="53:9" pos:end="61:57">



        <expr_stmt pos:start="53:9" pos:end="55:58"><expr pos:start="53:9" pos:end="55:57"><call pos:start="53:9" pos:end="55:57"><name pos:start="53:9" pos:end="53:29">memory_region_init_io</name><argument_list pos:start="53:30" pos:end="55:57">(<argument pos:start="53:31" pos:end="53:49"><expr pos:start="53:31" pos:end="53:49"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:49"><name pos:start="53:32" pos:end="53:34">opp</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:46">sub_io_mem</name><index pos:start="53:47" pos:end="53:49">[<expr pos:start="53:48" pos:end="53:48"><name pos:start="53:48" pos:end="53:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="53:52" pos:end="53:62"><expr pos:start="53:52" pos:end="53:62"><name pos:start="53:52" pos:end="53:58"><name pos:start="53:52" pos:end="53:55">list</name><index pos:start="53:56" pos:end="53:58">[<expr pos:start="53:57" pos:end="53:57"><name pos:start="53:57" pos:end="53:57">i</name></expr>]</index></name><operator pos:start="53:59" pos:end="53:59">.</operator><name pos:start="53:60" pos:end="53:62">ops</name></expr></argument>, <argument pos:start="53:65" pos:end="53:67"><expr pos:start="53:65" pos:end="53:67"><name pos:start="53:65" pos:end="53:67">opp</name></expr></argument>,

                              <argument pos:start="55:31" pos:end="55:42"><expr pos:start="55:31" pos:end="55:42"><name pos:start="55:31" pos:end="55:37"><name pos:start="55:31" pos:end="55:34">list</name><index pos:start="55:35" pos:end="55:37">[<expr pos:start="55:36" pos:end="55:36"><name pos:start="55:36" pos:end="55:36">i</name></expr>]</index></name><operator pos:start="55:38" pos:end="55:38">.</operator><name pos:start="55:39" pos:end="55:42">name</name></expr></argument>, <argument pos:start="55:45" pos:end="55:56"><expr pos:start="55:45" pos:end="55:56"><name pos:start="55:45" pos:end="55:51"><name pos:start="55:45" pos:end="55:48">list</name><index pos:start="55:49" pos:end="55:51">[<expr pos:start="55:50" pos:end="55:50"><name pos:start="55:50" pos:end="55:50">i</name></expr>]</index></name><operator pos:start="55:52" pos:end="55:52">.</operator><name pos:start="55:53" pos:end="55:56">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="61:57"><expr pos:start="59:9" pos:end="61:56"><call pos:start="59:9" pos:end="61:56"><name pos:start="59:9" pos:end="59:35">memory_region_add_subregion</name><argument_list pos:start="59:36" pos:end="61:56">(<argument pos:start="59:37" pos:end="59:45"><expr pos:start="59:37" pos:end="59:45"><operator pos:start="59:37" pos:end="59:37">&amp;</operator><name pos:start="59:38" pos:end="59:45"><name pos:start="59:38" pos:end="59:40">opp</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:45">mem</name></name></expr></argument>, <argument pos:start="59:48" pos:end="59:65"><expr pos:start="59:48" pos:end="59:65"><name pos:start="59:48" pos:end="59:54"><name pos:start="59:48" pos:end="59:51">list</name><index pos:start="59:52" pos:end="59:54">[<expr pos:start="59:53" pos:end="59:53"><name pos:start="59:53" pos:end="59:53">i</name></expr>]</index></name><operator pos:start="59:55" pos:end="59:55">.</operator><name pos:start="59:56" pos:end="59:65">start_addr</name></expr></argument>,

                                    <argument pos:start="61:37" pos:end="61:55"><expr pos:start="61:37" pos:end="61:55"><operator pos:start="61:37" pos:end="61:37">&amp;</operator><name pos:start="61:38" pos:end="61:55"><name pos:start="61:38" pos:end="61:40">opp</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:52">sub_io_mem</name><index pos:start="61:53" pos:end="61:55">[<expr pos:start="61:54" pos:end="61:54"><name pos:start="61:54" pos:end="61:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="67:5" pos:end="67:33">//    isu_base &amp;= 0xFFFC0000;</comment>

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:7">opp</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:16">nb_cpus</name></name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:26">nb_cpus</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:35"><expr pos:start="71:5" pos:end="71:34"><name pos:start="71:5" pos:end="71:16"><name pos:start="71:5" pos:end="71:7">opp</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:16">max_irq</name></name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:34">OPENPIC_MAX_IRQ</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:37"><expr pos:start="73:5" pos:end="73:36"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:7">opp</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:17">irq_ipi0</name></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:36">OPENPIC_IRQ_IPI0</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:37"><expr pos:start="75:5" pos:end="75:36"><name pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:7">opp</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:17">irq_tim0</name></name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:36">OPENPIC_IRQ_TIM0</name></expr>;</expr_stmt>

    <comment type="block" pos:start="77:5" pos:end="77:23">/* Set IRQ types */</comment>

    <for pos:start="79:5" pos:end="83:5">for <control pos:start="79:9" pos:end="79:41">(<init pos:start="79:10" pos:end="79:15"><expr pos:start="79:10" pos:end="79:14"><name pos:start="79:10" pos:end="79:10">i</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>;</init> <condition pos:start="79:17" pos:end="79:36"><expr pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">&lt;</operator> <name pos:start="79:21" pos:end="79:35">OPENPIC_EXT_IRQ</name></expr>;</condition> <incr pos:start="79:38" pos:end="79:40"><expr pos:start="79:38" pos:end="79:40"><name pos:start="79:38" pos:end="79:38">i</name><operator pos:start="79:39" pos:end="79:40">++</operator></expr></incr>)</control> <block pos:start="79:43" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:40">

        <expr_stmt pos:start="81:9" pos:end="81:40"><expr pos:start="81:9" pos:end="81:39"><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:11">opp</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:16">src</name><index pos:start="81:17" pos:end="81:19">[<expr pos:start="81:18" pos:end="81:18"><name pos:start="81:18" pos:end="81:18">i</name></expr>]</index></name><operator pos:start="81:20" pos:end="81:20">.</operator><name pos:start="81:21" pos:end="81:24">type</name> <operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:39">IRQ_EXTERNAL</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="85:5" pos:end="89:5">for <control pos:start="85:9" pos:end="85:37">(<init pos:start="85:10" pos:end="85:10">;</init> <condition pos:start="85:12" pos:end="85:32"><expr pos:start="85:12" pos:end="85:31"><name pos:start="85:12" pos:end="85:12">i</name> <operator pos:start="85:14" pos:end="85:14">&lt;</operator> <name pos:start="85:16" pos:end="85:31">OPENPIC_IRQ_TIM0</name></expr>;</condition> <incr pos:start="85:34" pos:end="85:36"><expr pos:start="85:34" pos:end="85:36"><name pos:start="85:34" pos:end="85:34">i</name><operator pos:start="85:35" pos:end="85:36">++</operator></expr></incr>)</control> <block pos:start="85:39" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:39">

        <expr_stmt pos:start="87:9" pos:end="87:39"><expr pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:11">opp</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:16">src</name><index pos:start="87:17" pos:end="87:19">[<expr pos:start="87:18" pos:end="87:18"><name pos:start="87:18" pos:end="87:18">i</name></expr>]</index></name><operator pos:start="87:20" pos:end="87:20">.</operator><name pos:start="87:21" pos:end="87:24">type</name> <operator pos:start="87:26" pos:end="87:26">=</operator> <name pos:start="87:28" pos:end="87:38">IRQ_SPECIAL</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="91:5" pos:end="91:25"><expr pos:start="91:5" pos:end="91:24"><name pos:start="91:5" pos:end="91:5">m</name> <operator pos:start="91:7" pos:end="91:7">=</operator> <name pos:start="91:9" pos:end="91:24">OPENPIC_IRQ_IPI0</name></expr>;</expr_stmt>

    <for pos:start="93:5" pos:end="97:5">for <control pos:start="93:9" pos:end="93:22">(<init pos:start="93:10" pos:end="93:10">;</init> <condition pos:start="93:12" pos:end="93:17"><expr pos:start="93:12" pos:end="93:16"><name pos:start="93:12" pos:end="93:12">i</name> <operator pos:start="93:14" pos:end="93:14">&lt;</operator> <name pos:start="93:16" pos:end="93:16">m</name></expr>;</condition> <incr pos:start="93:19" pos:end="93:21"><expr pos:start="93:19" pos:end="93:21"><name pos:start="93:19" pos:end="93:19">i</name><operator pos:start="93:20" pos:end="93:21">++</operator></expr></incr>)</control> <block pos:start="93:24" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:37">

        <expr_stmt pos:start="95:9" pos:end="95:37"><expr pos:start="95:9" pos:end="95:36"><name pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:11">opp</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:16">src</name><index pos:start="95:17" pos:end="95:19">[<expr pos:start="95:18" pos:end="95:18"><name pos:start="95:18" pos:end="95:18">i</name></expr>]</index></name><operator pos:start="95:20" pos:end="95:20">.</operator><name pos:start="95:21" pos:end="95:24">type</name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:36">IRQ_TIMER</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="99:5" pos:end="103:5">for <control pos:start="99:9" pos:end="99:36">(<init pos:start="99:10" pos:end="99:10">;</init> <condition pos:start="99:12" pos:end="99:31"><expr pos:start="99:12" pos:end="99:30"><name pos:start="99:12" pos:end="99:12">i</name> <operator pos:start="99:14" pos:end="99:14">&lt;</operator> <name pos:start="99:16" pos:end="99:30">OPENPIC_MAX_IRQ</name></expr>;</condition> <incr pos:start="99:33" pos:end="99:35"><expr pos:start="99:33" pos:end="99:35"><name pos:start="99:33" pos:end="99:33">i</name><operator pos:start="99:34" pos:end="99:35">++</operator></expr></incr>)</control> <block pos:start="99:38" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:40">

        <expr_stmt pos:start="101:9" pos:end="101:40"><expr pos:start="101:9" pos:end="101:39"><name pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:11">opp</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:16">src</name><index pos:start="101:17" pos:end="101:19">[<expr pos:start="101:18" pos:end="101:18"><name pos:start="101:18" pos:end="101:18">i</name></expr>]</index></name><operator pos:start="101:20" pos:end="101:20">.</operator><name pos:start="101:21" pos:end="101:24">type</name> <operator pos:start="101:26" pos:end="101:26">=</operator> <name pos:start="101:28" pos:end="101:39">IRQ_INTERNAL</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="105:5" pos:end="107:35">for <control pos:start="105:9" pos:end="105:33">(<init pos:start="105:10" pos:end="105:15"><expr pos:start="105:10" pos:end="105:14"><name pos:start="105:10" pos:end="105:10">i</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <literal type="number" pos:start="105:14" pos:end="105:14">0</literal></expr>;</init> <condition pos:start="105:17" pos:end="105:28"><expr pos:start="105:17" pos:end="105:27"><name pos:start="105:17" pos:end="105:17">i</name> <operator pos:start="105:19" pos:end="105:19">&lt;</operator> <name pos:start="105:21" pos:end="105:27">nb_cpus</name></expr>;</condition> <incr pos:start="105:30" pos:end="105:32"><expr pos:start="105:30" pos:end="105:32"><name pos:start="105:30" pos:end="105:30">i</name><operator pos:start="105:31" pos:end="105:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:9" pos:end="107:35"><block_content pos:start="107:9" pos:end="107:35">

        <expr_stmt pos:start="107:9" pos:end="107:35"><expr pos:start="107:9" pos:end="107:34"><name pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:11">opp</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:16">dst</name><index pos:start="107:17" pos:end="107:19">[<expr pos:start="107:18" pos:end="107:18"><name pos:start="107:18" pos:end="107:18">i</name></expr>]</index></name><operator pos:start="107:20" pos:end="107:20">.</operator><name pos:start="107:21" pos:end="107:24">irqs</name> <operator pos:start="107:26" pos:end="107:26">=</operator> <name pos:start="107:28" pos:end="107:34"><name pos:start="107:28" pos:end="107:31">irqs</name><index pos:start="107:32" pos:end="107:34">[<expr pos:start="107:33" pos:end="107:33"><name pos:start="107:33" pos:end="107:33">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="109:5" pos:end="109:27"><expr pos:start="109:5" pos:end="109:26"><name pos:start="109:5" pos:end="109:16"><name pos:start="109:5" pos:end="109:7">opp</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:16">irq_out</name></name> <operator pos:start="109:18" pos:end="109:18">=</operator> <name pos:start="109:20" pos:end="109:26">irq_out</name></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="115:53"><expr pos:start="113:5" pos:end="115:52"><call pos:start="113:5" pos:end="115:52"><name pos:start="113:5" pos:end="113:19">register_savevm</name><argument_list pos:start="113:20" pos:end="115:52">(<argument pos:start="113:21" pos:end="113:38"><expr pos:start="113:21" pos:end="113:38"><operator pos:start="113:21" pos:end="113:21">&amp;</operator><name pos:start="113:22" pos:end="113:38"><name pos:start="113:22" pos:end="113:24">opp</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:33">pci_dev</name><operator pos:start="113:34" pos:end="113:34">.</operator><name pos:start="113:35" pos:end="113:38">qdev</name></name></expr></argument>, <argument pos:start="113:41" pos:end="113:49"><expr pos:start="113:41" pos:end="113:49"><literal type="string" pos:start="113:41" pos:end="113:49">"openpic"</literal></expr></argument>, <argument pos:start="113:52" pos:end="113:52"><expr pos:start="113:52" pos:end="113:52"><literal type="number" pos:start="113:52" pos:end="113:52">0</literal></expr></argument>, <argument pos:start="113:55" pos:end="113:55"><expr pos:start="113:55" pos:end="113:55"><literal type="number" pos:start="113:55" pos:end="113:55">2</literal></expr></argument>,

                    <argument pos:start="115:21" pos:end="115:32"><expr pos:start="115:21" pos:end="115:32"><name pos:start="115:21" pos:end="115:32">openpic_save</name></expr></argument>, <argument pos:start="115:35" pos:end="115:46"><expr pos:start="115:35" pos:end="115:46"><name pos:start="115:35" pos:end="115:46">openpic_load</name></expr></argument>, <argument pos:start="115:49" pos:end="115:51"><expr pos:start="115:49" pos:end="115:51"><name pos:start="115:49" pos:end="115:51">opp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:44"><expr pos:start="117:5" pos:end="117:43"><call pos:start="117:5" pos:end="117:43"><name pos:start="117:5" pos:end="117:23">qemu_register_reset</name><argument_list pos:start="117:24" pos:end="117:43">(<argument pos:start="117:25" pos:end="117:37"><expr pos:start="117:25" pos:end="117:37"><name pos:start="117:25" pos:end="117:37">openpic_reset</name></expr></argument>, <argument pos:start="117:40" pos:end="117:42"><expr pos:start="117:40" pos:end="117:42"><name pos:start="117:40" pos:end="117:42">opp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:39"><expr pos:start="121:5" pos:end="121:38"><name pos:start="121:5" pos:end="121:18"><name pos:start="121:5" pos:end="121:7">opp</name><operator pos:start="121:8" pos:end="121:9">-&gt;</operator><name pos:start="121:10" pos:end="121:18">irq_raise</name></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <name pos:start="121:22" pos:end="121:38">openpic_irq_raise</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:31"><expr pos:start="123:5" pos:end="123:30"><name pos:start="123:5" pos:end="123:14"><name pos:start="123:5" pos:end="123:7">opp</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:14">reset</name></name> <operator pos:start="123:16" pos:end="123:16">=</operator> <name pos:start="123:18" pos:end="123:30">openpic_reset</name></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="129:26"><if pos:start="127:5" pos:end="129:26">if <condition pos:start="127:8" pos:end="127:13">(<expr pos:start="127:9" pos:end="127:12"><name pos:start="127:9" pos:end="127:12">pmem</name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:26"><block_content pos:start="129:9" pos:end="129:26">

        <expr_stmt pos:start="129:9" pos:end="129:26"><expr pos:start="129:9" pos:end="129:25"><operator pos:start="129:9" pos:end="129:9">*</operator><name pos:start="129:10" pos:end="129:13">pmem</name> <operator pos:start="129:15" pos:end="129:15">=</operator> <operator pos:start="129:17" pos:end="129:17">&amp;</operator><name pos:start="129:18" pos:end="129:25"><name pos:start="129:18" pos:end="129:20">opp</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:25">mem</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="133:5" pos:end="133:66">return <expr pos:start="133:12" pos:end="133:65"><call pos:start="133:12" pos:end="133:65"><name pos:start="133:12" pos:end="133:29">qemu_allocate_irqs</name><argument_list pos:start="133:30" pos:end="133:65">(<argument pos:start="133:31" pos:end="133:45"><expr pos:start="133:31" pos:end="133:45"><name pos:start="133:31" pos:end="133:45">openpic_set_irq</name></expr></argument>, <argument pos:start="133:48" pos:end="133:50"><expr pos:start="133:48" pos:end="133:50"><name pos:start="133:48" pos:end="133:50">opp</name></expr></argument>, <argument pos:start="133:53" pos:end="133:64"><expr pos:start="133:53" pos:end="133:64"><name pos:start="133:53" pos:end="133:64"><name pos:start="133:53" pos:end="133:55">opp</name><operator pos:start="133:56" pos:end="133:57">-&gt;</operator><name pos:start="133:58" pos:end="133:64">max_irq</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
