<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11913.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">copy_chapters</name><parameter_list pos:start="1:25" pos:end="1:80">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:34">InputFile</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:41">ifile</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:53">OutputFile</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">ofile</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:79"><decl pos:start="1:63" pos:end="1:79"><type pos:start="1:63" pos:end="1:79"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:79">copy_metadata</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">is</name> <init pos:start="5:25" pos:end="5:36">= <expr pos:start="5:27" pos:end="5:36"><name pos:start="5:27" pos:end="5:36"><name pos:start="5:27" pos:end="5:31">ifile</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:36">ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">os</name> <init pos:start="7:25" pos:end="7:36">= <expr pos:start="7:27" pos:end="7:36"><name pos:start="7:27" pos:end="7:36"><name pos:start="7:27" pos:end="7:31">ofile</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:36">ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:13">AVChapter</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier><modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:96"><expr pos:start="15:5" pos:end="15:95"><name pos:start="15:5" pos:end="15:7">tmp</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:95"><name pos:start="15:11" pos:end="15:20">av_realloc</name><argument_list pos:start="15:21" pos:end="15:95">(<argument pos:start="15:22" pos:end="15:33"><expr pos:start="15:22" pos:end="15:33"><name pos:start="15:22" pos:end="15:33"><name pos:start="15:22" pos:end="15:23">os</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:33">chapters</name></name></expr></argument>, <argument pos:start="15:36" pos:end="15:94"><expr pos:start="15:36" pos:end="15:94"><sizeof pos:start="15:36" pos:end="15:56">sizeof<argument_list pos:start="15:42" pos:end="15:56">(<argument pos:start="15:43" pos:end="15:55"><expr pos:start="15:43" pos:end="15:55"><operator pos:start="15:43" pos:end="15:43">*</operator><name pos:start="15:44" pos:end="15:55"><name pos:start="15:44" pos:end="15:45">os</name><operator pos:start="15:46" pos:end="15:47">-&gt;</operator><name pos:start="15:48" pos:end="15:55">chapters</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="15:58" pos:end="15:58">*</operator> <operator pos:start="15:60" pos:end="15:60">(</operator><name pos:start="15:61" pos:end="15:75"><name pos:start="15:61" pos:end="15:62">is</name><operator pos:start="15:63" pos:end="15:64">-&gt;</operator><name pos:start="15:65" pos:end="15:75">nb_chapters</name></name> <operator pos:start="15:77" pos:end="15:77">+</operator> <name pos:start="15:79" pos:end="15:93"><name pos:start="15:79" pos:end="15:80">os</name><operator pos:start="15:81" pos:end="15:82">-&gt;</operator><name pos:start="15:83" pos:end="15:93">nb_chapters</name></name><operator pos:start="15:94" pos:end="15:94">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:12">tmp</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:6">os</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:16">chapters</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:22">tmp</name></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="77:5">for <control pos:start="25:9" pos:end="25:41">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:36"><expr pos:start="25:17" pos:end="25:35"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:35"><name pos:start="25:21" pos:end="25:22">is</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:35">nb_chapters</name></name></expr>;</condition> <incr pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:38">i</name><operator pos:start="25:39" pos:end="25:40">++</operator></expr></incr>)</control> <block pos:start="25:43" pos:end="77:5">{<block_content pos:start="27:9" pos:end="75:49">

        <decl_stmt pos:start="27:9" pos:end="27:52"><decl pos:start="27:9" pos:end="27:42"><type pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:17">AVChapter</name> <modifier pos:start="27:19" pos:end="27:19">*</modifier></type><name pos:start="27:20" pos:end="27:24">in_ch</name> <init pos:start="27:26" pos:end="27:42">= <expr pos:start="27:28" pos:end="27:42"><name pos:start="27:28" pos:end="27:42"><name pos:start="27:28" pos:end="27:29">is</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:39">chapters</name><index pos:start="27:40" pos:end="27:42">[<expr pos:start="27:41" pos:end="27:41"><name pos:start="27:41" pos:end="27:41">i</name></expr>]</index></name></expr></init></decl>, <decl pos:start="27:45" pos:end="27:51"><type ref="prev" pos:start="27:9" pos:end="27:19"><modifier pos:start="27:45" pos:end="27:45">*</modifier></type><name pos:start="27:46" pos:end="27:51">out_ch</name></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="31:73"><decl pos:start="29:9" pos:end="31:72"><type pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:15">int64_t</name></type> <name pos:start="29:17" pos:end="29:22">ts_off</name>   <init pos:start="29:26" pos:end="31:72">= <expr pos:start="29:28" pos:end="31:72"><call pos:start="29:28" pos:end="31:72"><name pos:start="29:28" pos:end="29:39">av_rescale_q</name><argument_list pos:start="29:40" pos:end="31:72">(<argument pos:start="29:41" pos:end="29:76"><expr pos:start="29:41" pos:end="29:76"><name pos:start="29:41" pos:end="29:57"><name pos:start="29:41" pos:end="29:45">ofile</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:57">start_time</name></name> <operator pos:start="29:59" pos:end="29:59">-</operator> <name pos:start="29:61" pos:end="29:76"><name pos:start="29:61" pos:end="29:65">ifile</name><operator pos:start="29:66" pos:end="29:67">-&gt;</operator><name pos:start="29:68" pos:end="29:76">ts_offset</name></name></expr></argument>,

                                       <argument pos:start="31:40" pos:end="31:53"><expr pos:start="31:40" pos:end="31:53"><name pos:start="31:40" pos:end="31:53">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="31:56" pos:end="31:71"><expr pos:start="31:56" pos:end="31:71"><name pos:start="31:56" pos:end="31:71"><name pos:start="31:56" pos:end="31:60">in_ch</name><operator pos:start="31:61" pos:end="31:62">-&gt;</operator><name pos:start="31:63" pos:end="31:71">time_base</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="35:97"><decl pos:start="33:9" pos:end="35:96"><type pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:15">int64_t</name></type> <name pos:start="33:17" pos:end="33:18">rt</name>       <init pos:start="33:26" pos:end="35:96">= <expr pos:start="33:28" pos:end="35:96"><ternary pos:start="33:28" pos:end="35:96"><condition pos:start="33:28" pos:end="33:65"><expr pos:start="33:28" pos:end="33:63"><operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:49"><name pos:start="33:29" pos:end="33:33">ofile</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:49">recording_time</name></name> <operator pos:start="33:51" pos:end="33:52">==</operator> <name pos:start="33:54" pos:end="33:62">INT64_MAX</name><operator pos:start="33:63" pos:end="33:63">)</operator></expr> ?</condition><then pos:start="33:67" pos:end="33:75"> <expr pos:start="33:67" pos:end="33:75"><name pos:start="33:67" pos:end="33:75">INT64_MAX</name></expr> </then><else pos:start="33:77" pos:end="35:96">:

                           <expr pos:start="35:28" pos:end="35:96"><call pos:start="35:28" pos:end="35:96"><name pos:start="35:28" pos:end="35:39">av_rescale_q</name><argument_list pos:start="35:40" pos:end="35:96">(<argument pos:start="35:41" pos:end="35:61"><expr pos:start="35:41" pos:end="35:61"><name pos:start="35:41" pos:end="35:61"><name pos:start="35:41" pos:end="35:45">ofile</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:61">recording_time</name></name></expr></argument>, <argument pos:start="35:64" pos:end="35:77"><expr pos:start="35:64" pos:end="35:77"><name pos:start="35:64" pos:end="35:77">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="35:80" pos:end="35:95"><expr pos:start="35:80" pos:end="35:95"><name pos:start="35:80" pos:end="35:95"><name pos:start="35:80" pos:end="35:84">in_ch</name><operator pos:start="35:85" pos:end="35:86">-&gt;</operator><name pos:start="35:87" pos:end="35:95">time_base</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>





        <if_stmt pos:start="41:9" pos:end="43:21"><if pos:start="41:9" pos:end="43:21">if <condition pos:start="41:12" pos:end="41:32">(<expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:17">in_ch</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:22">end</name></name> <operator pos:start="41:24" pos:end="41:24">&lt;</operator> <name pos:start="41:26" pos:end="41:31">ts_off</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:21"><block_content pos:start="43:13" pos:end="43:21">

            <continue pos:start="43:13" pos:end="43:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="47:18"><if pos:start="45:9" pos:end="47:18">if <condition pos:start="45:12" pos:end="45:58">(<expr pos:start="45:13" pos:end="45:57"><name pos:start="45:13" pos:end="45:14">rt</name> <operator pos:start="45:16" pos:end="45:17">!=</operator> <name pos:start="45:19" pos:end="45:27">INT64_MAX</name> <operator pos:start="45:29" pos:end="45:30">&amp;&amp;</operator> <name pos:start="45:32" pos:end="45:43"><name pos:start="45:32" pos:end="45:36">in_ch</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:43">start</name></name> <operator pos:start="45:45" pos:end="45:45">&gt;</operator> <name pos:start="45:47" pos:end="45:48">rt</name> <operator pos:start="45:50" pos:end="45:50">+</operator> <name pos:start="45:52" pos:end="45:57">ts_off</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:18"><block_content pos:start="47:13" pos:end="47:18">

            <break pos:start="47:13" pos:end="47:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:47"><expr pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:14">out_ch</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:46"><name pos:start="51:18" pos:end="51:27">av_mallocz</name><argument_list pos:start="51:28" pos:end="51:46">(<argument pos:start="51:29" pos:end="51:45"><expr pos:start="51:29" pos:end="51:45"><sizeof pos:start="51:29" pos:end="51:45">sizeof<argument_list pos:start="51:35" pos:end="51:45">(<argument pos:start="51:36" pos:end="51:44"><expr pos:start="51:36" pos:end="51:44"><name pos:start="51:36" pos:end="51:44">AVChapter</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:35"><if pos:start="53:9" pos:end="55:35">if <condition pos:start="53:12" pos:end="53:20">(<expr pos:start="53:13" pos:end="53:19"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:19">out_ch</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:35"><block_content pos:start="55:13" pos:end="55:35">

            <return pos:start="55:13" pos:end="55:35">return <expr pos:start="55:20" pos:end="55:34"><call pos:start="55:20" pos:end="55:34"><name pos:start="55:20" pos:end="55:26">AVERROR</name><argument_list pos:start="55:27" pos:end="55:34">(<argument pos:start="55:28" pos:end="55:33"><expr pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:14">out_ch</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:18">id</name></name>        <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:37"><name pos:start="59:29" pos:end="59:33">in_ch</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:37">id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:14">out_ch</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:25">time_base</name></name> <operator pos:start="61:27" pos:end="61:27">=</operator> <name pos:start="61:29" pos:end="61:44"><name pos:start="61:29" pos:end="61:33">in_ch</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:44">time_base</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:61"><expr pos:start="63:9" pos:end="63:60"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:14">out_ch</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:21">start</name></name>     <operator pos:start="63:27" pos:end="63:27">=</operator> <call pos:start="63:29" pos:end="63:60"><name pos:start="63:29" pos:end="63:33">FFMAX</name><argument_list pos:start="63:34" pos:end="63:60">(<argument pos:start="63:35" pos:end="63:35"><expr pos:start="63:35" pos:end="63:35"><literal type="number" pos:start="63:35" pos:end="63:35">0</literal></expr></argument>,  <argument pos:start="63:39" pos:end="63:59"><expr pos:start="63:39" pos:end="63:59"><name pos:start="63:39" pos:end="63:50"><name pos:start="63:39" pos:end="63:43">in_ch</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:50">start</name></name> <operator pos:start="63:52" pos:end="63:52">-</operator> <name pos:start="63:54" pos:end="63:59">ts_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:61"><expr pos:start="65:9" pos:end="65:60"><name pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:14">out_ch</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:19">end</name></name>       <operator pos:start="65:27" pos:end="65:27">=</operator> <call pos:start="65:29" pos:end="65:60"><name pos:start="65:29" pos:end="65:33">FFMIN</name><argument_list pos:start="65:34" pos:end="65:60">(<argument pos:start="65:35" pos:end="65:36"><expr pos:start="65:35" pos:end="65:36"><name pos:start="65:35" pos:end="65:36">rt</name></expr></argument>, <argument pos:start="65:39" pos:end="65:59"><expr pos:start="65:39" pos:end="65:59"><name pos:start="65:39" pos:end="65:48"><name pos:start="65:39" pos:end="65:43">in_ch</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:48">end</name></name>   <operator pos:start="65:52" pos:end="65:52">-</operator> <name pos:start="65:54" pos:end="65:59">ts_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="69:9" pos:end="71:64"><if pos:start="69:9" pos:end="71:64">if <condition pos:start="69:12" pos:end="69:26">(<expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:25">copy_metadata</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:64"><block_content pos:start="71:13" pos:end="71:64">

            <expr_stmt pos:start="71:13" pos:end="71:64"><expr pos:start="71:13" pos:end="71:63"><call pos:start="71:13" pos:end="71:63"><name pos:start="71:13" pos:end="71:24">av_dict_copy</name><argument_list pos:start="71:25" pos:end="71:63">(<argument pos:start="71:26" pos:end="71:42"><expr pos:start="71:26" pos:end="71:42"><operator pos:start="71:26" pos:end="71:26">&amp;</operator><name pos:start="71:27" pos:end="71:42"><name pos:start="71:27" pos:end="71:32">out_ch</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:42">metadata</name></name></expr></argument>, <argument pos:start="71:45" pos:end="71:59"><expr pos:start="71:45" pos:end="71:59"><name pos:start="71:45" pos:end="71:59"><name pos:start="71:45" pos:end="71:49">in_ch</name><operator pos:start="71:50" pos:end="71:51">-&gt;</operator><name pos:start="71:52" pos:end="71:59">metadata</name></name></expr></argument>, <argument pos:start="71:62" pos:end="71:62"><expr pos:start="71:62" pos:end="71:62"><literal type="number" pos:start="71:62" pos:end="71:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:39"><name pos:start="75:9" pos:end="75:10">os</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:20">chapters</name><index pos:start="75:21" pos:end="75:39">[<expr pos:start="75:22" pos:end="75:38"><name pos:start="75:22" pos:end="75:36"><name pos:start="75:22" pos:end="75:23">os</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:36">nb_chapters</name></name><operator pos:start="75:37" pos:end="75:38">++</operator></expr>]</index></name> <operator pos:start="75:41" pos:end="75:41">=</operator> <name pos:start="75:43" pos:end="75:48">out_ch</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
