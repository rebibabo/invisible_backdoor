<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/128.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_trun</name><parameter_list pos:start="1:25" pos:end="1:75">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><name pos:start="1:60" pos:end="1:69">MOV_atom_t</name></type> <name pos:start="1:71" pos:end="1:74">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">MOVFragment</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">frag</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:26">c</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:36">fragment</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:51">= <expr pos:start="7:20" pos:end="7:51"><name pos:start="7:20" pos:end="7:51"><name pos:start="7:20" pos:end="7:20">c</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:24">fc</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:33">streams</name><index pos:start="7:34" pos:end="7:51">[<expr pos:start="7:35" pos:end="7:50"><name pos:start="7:35" pos:end="7:48"><name pos:start="7:35" pos:end="7:38">frag</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:48">track_id</name></name><operator pos:start="7:49" pos:end="7:49">-</operator><literal type="number" pos:start="7:50" pos:end="7:50">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MOVStreamContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">sc</name> <init pos:start="9:26" pos:end="9:40">= <expr pos:start="9:28" pos:end="9:40"><name pos:start="9:28" pos:end="9:40"><name pos:start="9:28" pos:end="9:29">st</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">dts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">data_offset</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:55"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">unsigned</name></type> <name pos:start="17:14" pos:end="17:20">entries</name></decl>, <decl pos:start="17:23" pos:end="17:54"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:23" pos:end="17:40">first_sample_flags</name> <init pos:start="17:42" pos:end="17:54">= <expr pos:start="17:44" pos:end="17:54"><name pos:start="17:44" pos:end="17:54"><name pos:start="17:44" pos:end="17:47">frag</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:54">flags</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">flags</name></decl>, <decl pos:start="19:16" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:16" pos:end="19:23">distance</name></decl>, <decl pos:start="19:26" pos:end="19:26"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:26" pos:end="19:26">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:17"><if pos:start="23:5" pos:end="25:17">if <condition pos:start="23:8" pos:end="23:48">(<expr pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:10">sc</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:28">pseudo_stream_id</name></name><operator pos:start="23:29" pos:end="23:29">+</operator><literal type="number" pos:start="23:30" pos:end="23:30">1</literal> <operator pos:start="23:32" pos:end="23:33">!=</operator> <name pos:start="23:35" pos:end="23:47"><name pos:start="23:35" pos:end="23:38">frag</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:47">stsd_id</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:17"><block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:30">(<expr pos:start="27:9" pos:end="27:29"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:29"><name pos:start="27:10" pos:end="27:11">st</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:29">nb_index_entries</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><call pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:12">get_byte</name><argument_list pos:start="31:13" pos:end="31:16">(<argument pos:start="31:14" pos:end="31:15"><expr pos:start="31:14" pos:end="31:15"><name pos:start="31:14" pos:end="31:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:19" pos:end="31:31">/* version */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:9">flags</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <call pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:20">get_be24</name><argument_list pos:start="33:21" pos:end="33:24">(<argument pos:start="33:22" pos:end="33:23"><expr pos:start="33:22" pos:end="33:23"><name pos:start="33:22" pos:end="33:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:11">entries</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:26"><name pos:start="35:15" pos:end="35:22">get_be32</name><argument_list pos:start="35:23" pos:end="35:26">(<argument pos:start="35:24" pos:end="35:25"><expr pos:start="35:24" pos:end="35:25"><name pos:start="35:24" pos:end="35:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:62"><expr pos:start="37:5" pos:end="37:61"><call pos:start="37:5" pos:end="37:61"><name pos:start="37:5" pos:end="37:11">dprintf</name><argument_list pos:start="37:12" pos:end="37:61">(<argument pos:start="37:13" pos:end="37:17"><expr pos:start="37:13" pos:end="37:17"><name pos:start="37:13" pos:end="37:17"><name pos:start="37:13" pos:end="37:13">c</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:17">fc</name></name></expr></argument>, <argument pos:start="37:20" pos:end="37:44"><expr pos:start="37:20" pos:end="37:44"><literal type="string" pos:start="37:20" pos:end="37:44">"flags 0x%x entries %d\n"</literal></expr></argument>, <argument pos:start="37:47" pos:end="37:51"><expr pos:start="37:47" pos:end="37:51"><name pos:start="37:47" pos:end="37:51">flags</name></expr></argument>, <argument pos:start="37:54" pos:end="37:60"><expr pos:start="37:54" pos:end="37:60"><name pos:start="37:54" pos:end="37:60">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="39:57"><if pos:start="39:5" pos:end="39:57">if <condition pos:start="39:8" pos:end="39:22">(<expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:13">flags</name> <operator pos:start="39:15" pos:end="39:15">&amp;</operator> <literal type="number" pos:start="39:17" pos:end="39:21">0x001</literal></expr>)</condition><block type="pseudo" pos:start="39:24" pos:end="39:57"><block_content pos:start="39:24" pos:end="39:57"> <expr_stmt pos:start="39:24" pos:end="39:57"><expr pos:start="39:24" pos:end="39:56"><name pos:start="39:24" pos:end="39:34">data_offset</name>        <operator pos:start="39:43" pos:end="39:43">=</operator> <call pos:start="39:45" pos:end="39:56"><name pos:start="39:45" pos:end="39:52">get_be32</name><argument_list pos:start="39:53" pos:end="39:56">(<argument pos:start="39:54" pos:end="39:55"><expr pos:start="39:54" pos:end="39:55"><name pos:start="39:54" pos:end="39:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="41:57"><if pos:start="41:5" pos:end="41:57">if <condition pos:start="41:8" pos:end="41:22">(<expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:13">flags</name> <operator pos:start="41:15" pos:end="41:15">&amp;</operator> <literal type="number" pos:start="41:17" pos:end="41:21">0x004</literal></expr>)</condition><block type="pseudo" pos:start="41:24" pos:end="41:57"><block_content pos:start="41:24" pos:end="41:57"> <expr_stmt pos:start="41:24" pos:end="41:57"><expr pos:start="41:24" pos:end="41:56"><name pos:start="41:24" pos:end="41:41">first_sample_flags</name> <operator pos:start="41:43" pos:end="41:43">=</operator> <call pos:start="41:45" pos:end="41:56"><name pos:start="41:45" pos:end="41:52">get_be32</name><argument_list pos:start="41:53" pos:end="41:56">(<argument pos:start="41:54" pos:end="41:55"><expr pos:start="41:54" pos:end="41:55"><name pos:start="41:54" pos:end="41:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="57:5"><if pos:start="43:5" pos:end="57:5">if <condition pos:start="43:8" pos:end="43:22">(<expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:13">flags</name> <operator pos:start="43:15" pos:end="43:15">&amp;</operator> <literal type="number" pos:start="43:17" pos:end="43:21">0x800</literal></expr>)</condition> <block pos:start="43:24" pos:end="57:5">{<block_content pos:start="45:9" pos:end="55:35">

        <if_stmt pos:start="45:9" pos:end="47:22"><if pos:start="45:9" pos:end="47:22">if <condition pos:start="45:12" pos:end="45:80">(<expr pos:start="45:13" pos:end="45:79"><operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:21">uint64_t</name><operator pos:start="45:22" pos:end="45:22">)</operator><name pos:start="45:23" pos:end="45:29">entries</name><operator pos:start="45:30" pos:end="45:30">+</operator><name pos:start="45:31" pos:end="45:44"><name pos:start="45:31" pos:end="45:32">sc</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:44">ctts_count</name></name> <operator pos:start="45:46" pos:end="45:47">&gt;=</operator> <name pos:start="45:49" pos:end="45:56">UINT_MAX</name><operator pos:start="45:57" pos:end="45:57">/</operator><sizeof pos:start="45:58" pos:end="45:79">sizeof<argument_list pos:start="45:64" pos:end="45:79">(<argument pos:start="45:65" pos:end="45:78"><expr pos:start="45:65" pos:end="45:78"><operator pos:start="45:65" pos:end="45:65">*</operator><name pos:start="45:66" pos:end="45:78"><name pos:start="45:66" pos:end="45:67">sc</name><operator pos:start="45:68" pos:end="45:69">-&gt;</operator><name pos:start="45:70" pos:end="45:78">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:22"><block_content pos:start="47:13" pos:end="47:22">

            <return pos:start="47:13" pos:end="47:22">return <expr pos:start="47:20" pos:end="47:21"><operator pos:start="47:20" pos:end="47:20">-</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="51:84"><expr pos:start="49:9" pos:end="51:83"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:10">sc</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:21">ctts_data</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <call pos:start="49:25" pos:end="51:83"><name pos:start="49:25" pos:end="49:34">av_realloc</name><argument_list pos:start="49:35" pos:end="51:83">(<argument pos:start="49:36" pos:end="49:48"><expr pos:start="49:36" pos:end="49:48"><name pos:start="49:36" pos:end="49:48"><name pos:start="49:36" pos:end="49:37">sc</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:48">ctts_data</name></name></expr></argument>,

                                   <argument pos:start="51:36" pos:end="51:82"><expr pos:start="51:36" pos:end="51:82"><operator pos:start="51:36" pos:end="51:36">(</operator><name pos:start="51:37" pos:end="51:43">entries</name><operator pos:start="51:44" pos:end="51:44">+</operator><name pos:start="51:45" pos:end="51:58"><name pos:start="51:45" pos:end="51:46">sc</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:58">ctts_count</name></name><operator pos:start="51:59" pos:end="51:59">)</operator><operator pos:start="51:60" pos:end="51:60">*</operator><sizeof pos:start="51:61" pos:end="51:82">sizeof<argument_list pos:start="51:67" pos:end="51:82">(<argument pos:start="51:68" pos:end="51:81"><expr pos:start="51:68" pos:end="51:81"><operator pos:start="51:68" pos:end="51:68">*</operator><name pos:start="51:69" pos:end="51:81"><name pos:start="51:69" pos:end="51:70">sc</name><operator pos:start="51:71" pos:end="51:72">-&gt;</operator><name pos:start="51:73" pos:end="51:81">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:35"><if pos:start="53:9" pos:end="55:35">if <condition pos:start="53:12" pos:end="53:27">(<expr pos:start="53:13" pos:end="53:26"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:26"><name pos:start="53:14" pos:end="53:15">sc</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:26">ctts_data</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:35"><block_content pos:start="55:13" pos:end="55:35">

            <return pos:start="55:13" pos:end="55:35">return <expr pos:start="55:20" pos:end="55:34"><call pos:start="55:20" pos:end="55:34"><name pos:start="55:20" pos:end="55:26">AVERROR</name><argument_list pos:start="55:27" pos:end="55:34">(<argument pos:start="55:28" pos:end="55:33"><expr pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:7">dts</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <name pos:start="59:11" pos:end="59:22"><name pos:start="59:11" pos:end="59:12">st</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:22">duration</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:50"><expr pos:start="61:5" pos:end="61:49"><name pos:start="61:5" pos:end="61:10">offset</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <name pos:start="61:14" pos:end="61:35"><name pos:start="61:14" pos:end="61:17">frag</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:35">base_data_offset</name></name> <operator pos:start="61:37" pos:end="61:37">+</operator> <name pos:start="61:39" pos:end="61:49">data_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:17"><expr pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:12">distance</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <literal type="number" pos:start="63:16" pos:end="63:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:68"><expr pos:start="65:5" pos:end="65:67"><call pos:start="65:5" pos:end="65:67"><name pos:start="65:5" pos:end="65:11">dprintf</name><argument_list pos:start="65:12" pos:end="65:67">(<argument pos:start="65:13" pos:end="65:17"><expr pos:start="65:13" pos:end="65:17"><name pos:start="65:13" pos:end="65:17"><name pos:start="65:13" pos:end="65:13">c</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:17">fc</name></name></expr></argument>, <argument pos:start="65:20" pos:end="65:46"><expr pos:start="65:20" pos:end="65:46"><literal type="string" pos:start="65:20" pos:end="65:46">"first sample flags 0x%x\n"</literal></expr></argument>, <argument pos:start="65:49" pos:end="65:66"><expr pos:start="65:49" pos:end="65:66"><name pos:start="65:49" pos:end="65:66">first_sample_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="119:5">for <control pos:start="67:9" pos:end="67:33">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:28"><expr pos:start="67:17" pos:end="67:27"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <name pos:start="67:21" pos:end="67:27">entries</name></expr>;</condition> <incr pos:start="67:30" pos:end="67:32"><expr pos:start="67:30" pos:end="67:32"><name pos:start="67:30" pos:end="67:30">i</name><operator pos:start="67:31" pos:end="67:32">++</operator></expr></incr>)</control> <block pos:start="67:35" pos:end="119:5">{<block_content pos:start="69:9" pos:end="117:30">

        <decl_stmt pos:start="69:9" pos:end="69:42"><decl pos:start="69:9" pos:end="69:41"><type pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:16">unsigned</name></type> <name pos:start="69:18" pos:end="69:28">sample_size</name> <init pos:start="69:30" pos:end="69:41">= <expr pos:start="69:32" pos:end="69:41"><name pos:start="69:32" pos:end="69:41"><name pos:start="69:32" pos:end="69:35">frag</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:41">size</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:64"><decl pos:start="71:9" pos:end="71:63"><type pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:11">int</name></type> <name pos:start="71:13" pos:end="71:24">sample_flags</name> <init pos:start="71:26" pos:end="71:63">= <expr pos:start="71:28" pos:end="71:63"><ternary pos:start="71:28" pos:end="71:63"><condition pos:start="71:28" pos:end="71:30"><expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">i</name></expr> ?</condition><then pos:start="71:32" pos:end="71:42"> <expr pos:start="71:32" pos:end="71:42"><name pos:start="71:32" pos:end="71:42"><name pos:start="71:32" pos:end="71:35">frag</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:42">flags</name></name></expr> </then><else pos:start="71:44" pos:end="71:63">: <expr pos:start="71:46" pos:end="71:63"><name pos:start="71:46" pos:end="71:63">first_sample_flags</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:50"><decl pos:start="73:9" pos:end="73:49"><type pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:16">unsigned</name></type> <name pos:start="73:18" pos:end="73:32">sample_duration</name> <init pos:start="73:34" pos:end="73:49">= <expr pos:start="73:36" pos:end="73:49"><name pos:start="73:36" pos:end="73:49"><name pos:start="73:36" pos:end="73:39">frag</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:49">duration</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="75:9" pos:end="75:21"><decl pos:start="75:9" pos:end="75:20"><type pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:11">int</name></type> <name pos:start="75:13" pos:end="75:20">keyframe</name></decl>;</decl_stmt>



        <if_stmt pos:start="79:9" pos:end="79:58"><if pos:start="79:9" pos:end="79:58">if <condition pos:start="79:12" pos:end="79:26">(<expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:17">flags</name> <operator pos:start="79:19" pos:end="79:19">&amp;</operator> <literal type="number" pos:start="79:21" pos:end="79:25">0x100</literal></expr>)</condition><block type="pseudo" pos:start="79:28" pos:end="79:58"><block_content pos:start="79:28" pos:end="79:58"> <expr_stmt pos:start="79:28" pos:end="79:58"><expr pos:start="79:28" pos:end="79:57"><name pos:start="79:28" pos:end="79:42">sample_duration</name> <operator pos:start="79:44" pos:end="79:44">=</operator> <call pos:start="79:46" pos:end="79:57"><name pos:start="79:46" pos:end="79:53">get_be32</name><argument_list pos:start="79:54" pos:end="79:57">(<argument pos:start="79:55" pos:end="79:56"><expr pos:start="79:55" pos:end="79:56"><name pos:start="79:55" pos:end="79:56">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="81:9" pos:end="81:58"><if pos:start="81:9" pos:end="81:58">if <condition pos:start="81:12" pos:end="81:26">(<expr pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:17">flags</name> <operator pos:start="81:19" pos:end="81:19">&amp;</operator> <literal type="number" pos:start="81:21" pos:end="81:25">0x200</literal></expr>)</condition><block type="pseudo" pos:start="81:28" pos:end="81:58"><block_content pos:start="81:28" pos:end="81:58"> <expr_stmt pos:start="81:28" pos:end="81:58"><expr pos:start="81:28" pos:end="81:57"><name pos:start="81:28" pos:end="81:38">sample_size</name>     <operator pos:start="81:44" pos:end="81:44">=</operator> <call pos:start="81:46" pos:end="81:57"><name pos:start="81:46" pos:end="81:53">get_be32</name><argument_list pos:start="81:54" pos:end="81:57">(<argument pos:start="81:55" pos:end="81:56"><expr pos:start="81:55" pos:end="81:56"><name pos:start="81:55" pos:end="81:56">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="83:58"><if pos:start="83:9" pos:end="83:58">if <condition pos:start="83:12" pos:end="83:26">(<expr pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:17">flags</name> <operator pos:start="83:19" pos:end="83:19">&amp;</operator> <literal type="number" pos:start="83:21" pos:end="83:25">0x400</literal></expr>)</condition><block type="pseudo" pos:start="83:28" pos:end="83:58"><block_content pos:start="83:28" pos:end="83:58"> <expr_stmt pos:start="83:28" pos:end="83:58"><expr pos:start="83:28" pos:end="83:57"><name pos:start="83:28" pos:end="83:39">sample_flags</name>    <operator pos:start="83:44" pos:end="83:44">=</operator> <call pos:start="83:46" pos:end="83:57"><name pos:start="83:46" pos:end="83:53">get_be32</name><argument_list pos:start="83:54" pos:end="83:57">(<argument pos:start="83:55" pos:end="83:56"><expr pos:start="83:55" pos:end="83:56"><name pos:start="83:55" pos:end="83:56">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="85:9" pos:end="93:9"><if pos:start="85:9" pos:end="93:9">if <condition pos:start="85:12" pos:end="85:26">(<expr pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:17">flags</name> <operator pos:start="85:19" pos:end="85:19">&amp;</operator> <literal type="number" pos:start="85:21" pos:end="85:25">0x800</literal></expr>)</condition> <block pos:start="85:28" pos:end="93:9">{<block_content pos:start="87:13" pos:end="91:29">

            <expr_stmt pos:start="87:13" pos:end="87:52"><expr pos:start="87:13" pos:end="87:51"><name pos:start="87:13" pos:end="87:41"><name pos:start="87:13" pos:end="87:14">sc</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:25">ctts_data</name><index pos:start="87:26" pos:end="87:41">[<expr pos:start="87:27" pos:end="87:40"><name pos:start="87:27" pos:end="87:40"><name pos:start="87:27" pos:end="87:28">sc</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:40">ctts_count</name></name></expr>]</index></name><operator pos:start="87:42" pos:end="87:42">.</operator><name pos:start="87:43" pos:end="87:47">count</name> <operator pos:start="87:49" pos:end="87:49">=</operator> <literal type="number" pos:start="87:51" pos:end="87:51">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:66"><expr pos:start="89:13" pos:end="89:65"><name pos:start="89:13" pos:end="89:41"><name pos:start="89:13" pos:end="89:14">sc</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:25">ctts_data</name><index pos:start="89:26" pos:end="89:41">[<expr pos:start="89:27" pos:end="89:40"><name pos:start="89:27" pos:end="89:40"><name pos:start="89:27" pos:end="89:28">sc</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:40">ctts_count</name></name></expr>]</index></name><operator pos:start="89:42" pos:end="89:42">.</operator><name pos:start="89:43" pos:end="89:50">duration</name> <operator pos:start="89:52" pos:end="89:52">=</operator> <call pos:start="89:54" pos:end="89:65"><name pos:start="89:54" pos:end="89:61">get_be32</name><argument_list pos:start="89:62" pos:end="89:65">(<argument pos:start="89:63" pos:end="89:64"><expr pos:start="89:63" pos:end="89:64"><name pos:start="89:63" pos:end="89:64">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:29"><expr pos:start="91:13" pos:end="91:28"><name pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:14">sc</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:26">ctts_count</name></name><operator pos:start="91:27" pos:end="91:28">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="95:9" pos:end="99:25"><if pos:start="95:9" pos:end="99:25">if <condition pos:start="95:12" pos:end="97:81">(<expr pos:start="95:13" pos:end="97:80"><operator pos:start="95:13" pos:end="95:13">(</operator><name pos:start="95:14" pos:end="95:21">keyframe</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <name pos:start="95:25" pos:end="95:45"><name pos:start="95:25" pos:end="95:26">st</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:33">codec</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:45">codec_type</name></name> <operator pos:start="95:47" pos:end="95:48">==</operator> <name pos:start="95:50" pos:end="95:65">CODEC_TYPE_AUDIO</name> <operator pos:start="95:67" pos:end="95:68">||</operator>

             <operator pos:start="97:14" pos:end="97:14">(</operator><name pos:start="97:15" pos:end="97:19">flags</name> <operator pos:start="97:21" pos:end="97:21">&amp;</operator> <literal type="number" pos:start="97:23" pos:end="97:27">0x004</literal> <operator pos:start="97:29" pos:end="97:30">&amp;&amp;</operator> <operator pos:start="97:32" pos:end="97:32">!</operator><name pos:start="97:33" pos:end="97:33">i</name> <operator pos:start="97:35" pos:end="97:36">&amp;&amp;</operator> <operator pos:start="97:38" pos:end="97:38">!</operator><name pos:start="97:39" pos:end="97:50">sample_flags</name><operator pos:start="97:51" pos:end="97:51">)</operator> <operator pos:start="97:53" pos:end="97:54">||</operator> <name pos:start="97:56" pos:end="97:67">sample_flags</name> <operator pos:start="97:69" pos:end="97:69">&amp;</operator> <literal type="number" pos:start="97:71" pos:end="97:79">0x2000000</literal><operator pos:start="97:80" pos:end="97:80">)</operator></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:25"><block_content pos:start="99:13" pos:end="99:25">

            <expr_stmt pos:start="99:13" pos:end="99:25"><expr pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:20">distance</name> <operator pos:start="99:22" pos:end="99:22">=</operator> <literal type="number" pos:start="99:24" pos:end="99:24">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="103:60"><expr pos:start="101:9" pos:end="103:59"><call pos:start="101:9" pos:end="103:59"><name pos:start="101:9" pos:end="101:26">av_add_index_entry</name><argument_list pos:start="101:27" pos:end="103:59">(<argument pos:start="101:28" pos:end="101:29"><expr pos:start="101:28" pos:end="101:29"><name pos:start="101:28" pos:end="101:29">st</name></expr></argument>, <argument pos:start="101:32" pos:end="101:37"><expr pos:start="101:32" pos:end="101:37"><name pos:start="101:32" pos:end="101:37">offset</name></expr></argument>, <argument pos:start="101:40" pos:end="101:42"><expr pos:start="101:40" pos:end="101:42"><name pos:start="101:40" pos:end="101:42">dts</name></expr></argument>, <argument pos:start="101:45" pos:end="101:55"><expr pos:start="101:45" pos:end="101:55"><name pos:start="101:45" pos:end="101:55">sample_size</name></expr></argument>, <argument pos:start="101:58" pos:end="101:65"><expr pos:start="101:58" pos:end="101:65"><name pos:start="101:58" pos:end="101:65">distance</name></expr></argument>,

                           <argument pos:start="103:28" pos:end="103:58"><expr pos:start="103:28" pos:end="103:58"><ternary pos:start="103:28" pos:end="103:58"><condition pos:start="103:28" pos:end="103:37"><expr pos:start="103:28" pos:end="103:35"><name pos:start="103:28" pos:end="103:35">keyframe</name></expr> ?</condition><then pos:start="103:39" pos:end="103:54"> <expr pos:start="103:39" pos:end="103:54"><name pos:start="103:39" pos:end="103:54">AVINDEX_KEYFRAME</name></expr> </then><else pos:start="103:56" pos:end="103:58">: <expr pos:start="103:58" pos:end="103:58"><literal type="number" pos:start="103:58" pos:end="103:58">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="109:62"><expr pos:start="105:9" pos:end="109:61"><call pos:start="105:9" pos:end="109:61"><name pos:start="105:9" pos:end="105:15">dprintf</name><argument_list pos:start="105:16" pos:end="109:61">(<argument pos:start="105:17" pos:end="105:21"><expr pos:start="105:17" pos:end="105:21"><name pos:start="105:17" pos:end="105:21"><name pos:start="105:17" pos:end="105:17">c</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:21">fc</name></name></expr></argument>, <argument pos:start="105:24" pos:end="107:53"><expr pos:start="105:24" pos:end="107:53"><literal type="string" pos:start="105:24" pos:end="105:63">"AVIndex stream %d, sample %d, offset %"</literal><name pos:start="105:64" pos:end="105:69">PRIx64</name><literal type="string" pos:start="105:70" pos:end="105:78">", dts %"</literal><name pos:start="105:79" pos:end="105:84">PRId64</name><literal type="string" pos:start="105:85" pos:end="105:88">", "</literal>

                <literal type="string" pos:start="107:17" pos:end="107:53">"size %d, distance %d, keyframe %d\n"</literal></expr></argument>, <argument pos:start="107:56" pos:end="107:64"><expr pos:start="107:56" pos:end="107:64"><name pos:start="107:56" pos:end="107:64"><name pos:start="107:56" pos:end="107:57">st</name><operator pos:start="107:58" pos:end="107:59">-&gt;</operator><name pos:start="107:60" pos:end="107:64">index</name></name></expr></argument>, <argument pos:start="107:67" pos:end="107:84"><expr pos:start="107:67" pos:end="107:84"><name pos:start="107:67" pos:end="107:82"><name pos:start="107:67" pos:end="107:68">sc</name><operator pos:start="107:69" pos:end="107:70">-&gt;</operator><name pos:start="107:71" pos:end="107:82">sample_count</name></name><operator pos:start="107:83" pos:end="107:83">+</operator><name pos:start="107:84" pos:end="107:84">i</name></expr></argument>,

                <argument pos:start="109:17" pos:end="109:22"><expr pos:start="109:17" pos:end="109:22"><name pos:start="109:17" pos:end="109:22">offset</name></expr></argument>, <argument pos:start="109:25" pos:end="109:27"><expr pos:start="109:25" pos:end="109:27"><name pos:start="109:25" pos:end="109:27">dts</name></expr></argument>, <argument pos:start="109:30" pos:end="109:40"><expr pos:start="109:30" pos:end="109:40"><name pos:start="109:30" pos:end="109:40">sample_size</name></expr></argument>, <argument pos:start="109:43" pos:end="109:50"><expr pos:start="109:43" pos:end="109:50"><name pos:start="109:43" pos:end="109:50">distance</name></expr></argument>, <argument pos:start="109:53" pos:end="109:60"><expr pos:start="109:53" pos:end="109:60"><name pos:start="109:53" pos:end="109:60">keyframe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:19"><expr pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:16">distance</name><operator pos:start="111:17" pos:end="111:18">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:53"><expr pos:start="113:9" pos:end="113:52"><call pos:start="113:9" pos:end="113:52"><name pos:start="113:9" pos:end="113:14">assert</name><argument_list pos:start="113:15" pos:end="113:52">(<argument pos:start="113:16" pos:end="113:51"><expr pos:start="113:16" pos:end="113:51"><name pos:start="113:16" pos:end="113:30">sample_duration</name> <operator pos:start="113:32" pos:end="113:32">%</operator> <name pos:start="113:34" pos:end="113:46"><name pos:start="113:34" pos:end="113:35">sc</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:46">time_rate</name></name> <operator pos:start="113:48" pos:end="113:49">==</operator> <literal type="number" pos:start="113:51" pos:end="113:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:47"><expr pos:start="115:9" pos:end="115:46"><name pos:start="115:9" pos:end="115:11">dts</name> <operator pos:start="115:13" pos:end="115:14">+=</operator> <name pos:start="115:16" pos:end="115:30">sample_duration</name> <operator pos:start="115:32" pos:end="115:32">/</operator> <name pos:start="115:34" pos:end="115:46"><name pos:start="115:34" pos:end="115:35">sc</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:46">time_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:30"><expr pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:14">offset</name> <operator pos:start="117:16" pos:end="117:17">+=</operator> <name pos:start="117:19" pos:end="117:29">sample_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="121:5" pos:end="121:31"><expr pos:start="121:5" pos:end="121:30"><name pos:start="121:5" pos:end="121:21"><name pos:start="121:5" pos:end="121:8">frag</name><operator pos:start="121:9" pos:end="121:10">-&gt;</operator><name pos:start="121:11" pos:end="121:21">moof_offset</name></name> <operator pos:start="121:23" pos:end="121:23">=</operator> <name pos:start="121:25" pos:end="121:30">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:44"><expr pos:start="123:5" pos:end="123:43"><name pos:start="123:5" pos:end="123:20"><name pos:start="123:5" pos:end="123:6">sc</name><operator pos:start="123:7" pos:end="123:8">-&gt;</operator><name pos:start="123:9" pos:end="123:20">sample_count</name></name> <operator pos:start="123:22" pos:end="123:22">=</operator> <name pos:start="123:24" pos:end="123:43"><name pos:start="123:24" pos:end="123:25">st</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:43">nb_index_entries</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:23"><expr pos:start="125:5" pos:end="125:22"><name pos:start="125:5" pos:end="125:16"><name pos:start="125:5" pos:end="125:6">st</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:16">duration</name></name> <operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:22">dts</name></expr>;</expr_stmt>

    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
