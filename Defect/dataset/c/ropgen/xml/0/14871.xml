<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14871.c" pos:tabs="8"><function pos:start="1:1" pos:end="229:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">draw_mandelbrot</name><parameter_list pos:start="1:28" pos:end="1:93">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:43">AVFilterContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:58">uint32_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:65">color</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:79"><decl pos:start="1:68" pos:end="1:79"><type pos:start="1:68" pos:end="1:79"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:79">linesize</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:92"><decl pos:start="1:82" pos:end="1:92"><type pos:start="1:82" pos:end="1:92"><name pos:start="1:82" pos:end="1:88">int64_t</name></type> <name pos:start="1:90" pos:end="1:92">pts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="229:1">{<block_content pos:start="5:5" pos:end="227:67">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">MBContext</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">mb</name> <init pos:start="5:19" pos:end="5:29">= <expr pos:start="5:21" pos:end="5:29"><name pos:start="5:21" pos:end="5:29"><name pos:start="5:21" pos:end="5:23">ctx</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:29">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>,<decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">y</name></decl>,<decl pos:start="7:13" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:13">i</name></decl>, <decl pos:start="7:16" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:22">in_cidx</name><init pos:start="7:23" pos:end="7:24">=<expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>, <decl pos:start="7:27" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:35">next_cidx</name><init pos:start="7:36" pos:end="7:37">=<expr pos:start="7:37" pos:end="7:37"><literal type="number" pos:start="7:37" pos:end="7:37">0</literal></expr></init></decl>, <decl pos:start="7:40" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:40" pos:end="7:47">tmp_cidx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:86"><decl pos:start="9:5" pos:end="9:85"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type> <name pos:start="9:12" pos:end="9:16">scale</name><init pos:start="9:17" pos:end="9:85">= <expr pos:start="9:19" pos:end="9:85"><name pos:start="9:19" pos:end="9:33"><name pos:start="9:19" pos:end="9:20">mb</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:33">start_scale</name></name><operator pos:start="9:34" pos:end="9:34">*</operator><call pos:start="9:35" pos:end="9:85"><name pos:start="9:35" pos:end="9:37">pow</name><argument_list pos:start="9:38" pos:end="9:85">(<argument pos:start="9:39" pos:end="9:67"><expr pos:start="9:39" pos:end="9:67"><name pos:start="9:39" pos:end="9:51"><name pos:start="9:39" pos:end="9:40">mb</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:51">end_scale</name></name><operator pos:start="9:52" pos:end="9:52">/</operator><name pos:start="9:53" pos:end="9:67"><name pos:start="9:53" pos:end="9:54">mb</name><operator pos:start="9:55" pos:end="9:56">-&gt;</operator><name pos:start="9:57" pos:end="9:67">start_scale</name></name></expr></argument>, <argument pos:start="9:70" pos:end="9:84"><expr pos:start="9:70" pos:end="9:84"><name pos:start="9:70" pos:end="9:72">pts</name><operator pos:start="9:73" pos:end="9:73">/</operator><name pos:start="9:74" pos:end="9:84"><name pos:start="9:74" pos:end="9:75">mb</name><operator pos:start="9:76" pos:end="9:77">-&gt;</operator><name pos:start="9:78" pos:end="9:84">end_pts</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">use_zyklus</name><init pos:start="11:19" pos:end="11:20">=<expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:88"><expr pos:start="13:5" pos:end="13:87"><call pos:start="13:5" pos:end="13:87"><name pos:start="13:5" pos:end="13:19">fill_from_cache</name><argument_list pos:start="13:20" pos:end="13:87">(<argument pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:23">ctx</name></expr></argument>, <argument pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">NULL</name></expr></argument>, <argument pos:start="13:32" pos:end="13:39"><expr pos:start="13:32" pos:end="13:39"><operator pos:start="13:32" pos:end="13:32">&amp;</operator><name pos:start="13:33" pos:end="13:39">in_cidx</name></expr></argument>, <argument pos:start="13:42" pos:end="13:45"><expr pos:start="13:42" pos:end="13:45"><name pos:start="13:42" pos:end="13:45">NULL</name></expr></argument>, <argument pos:start="13:48" pos:end="13:79"><expr pos:start="13:48" pos:end="13:79"><name pos:start="13:48" pos:end="13:58"><name pos:start="13:48" pos:end="13:49">mb</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:58">start_y</name></name><operator pos:start="13:59" pos:end="13:59">+</operator><name pos:start="13:60" pos:end="13:64">scale</name><operator pos:start="13:65" pos:end="13:65">*</operator><operator pos:start="13:66" pos:end="13:66">(</operator><operator pos:start="13:67" pos:end="13:67">-</operator><name pos:start="13:68" pos:end="13:72"><name pos:start="13:68" pos:end="13:69">mb</name><operator pos:start="13:70" pos:end="13:71">-&gt;</operator><name pos:start="13:72" pos:end="13:72">h</name></name><operator pos:start="13:73" pos:end="13:73">/</operator><literal type="number" pos:start="13:74" pos:end="13:75">2</literal><operator pos:start="13:75" pos:end="13:75">-</operator><literal type="number" pos:start="13:76" pos:end="13:78">0.5</literal><operator pos:start="13:79" pos:end="13:79">)</operator></expr></argument>, <argument pos:start="13:82" pos:end="13:86"><expr pos:start="13:82" pos:end="13:86"><name pos:start="13:82" pos:end="13:86">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="219:5">for<control pos:start="15:8" pos:end="15:26">(<init pos:start="15:9" pos:end="15:12"><expr pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:9">y</name><operator pos:start="15:10" pos:end="15:10">=</operator><literal type="number" pos:start="15:11" pos:end="15:11">0</literal></expr>;</init> <condition pos:start="15:14" pos:end="15:21"><expr pos:start="15:14" pos:end="15:20"><name pos:start="15:14" pos:end="15:14">y</name><operator pos:start="15:15" pos:end="15:15">&lt;</operator><name pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:17">mb</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:20">h</name></name></expr>;</condition> <incr pos:start="15:23" pos:end="15:25"><expr pos:start="15:23" pos:end="15:25"><name pos:start="15:23" pos:end="15:23">y</name><operator pos:start="15:24" pos:end="15:25">++</operator></expr></incr>)</control><block pos:start="15:27" pos:end="219:5">{<block_content pos:start="17:9" pos:end="217:78">

        <decl_stmt pos:start="17:9" pos:end="17:54"><decl pos:start="17:9" pos:end="17:53"><type pos:start="17:9" pos:end="17:20"><specifier pos:start="17:9" pos:end="17:13">const</specifier> <name pos:start="17:15" pos:end="17:20">double</name></type> <name pos:start="17:22" pos:end="17:23">ci</name><init pos:start="17:24" pos:end="17:53">=<expr pos:start="17:25" pos:end="17:53"><name pos:start="17:25" pos:end="17:35"><name pos:start="17:25" pos:end="17:26">mb</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:35">start_y</name></name><operator pos:start="17:36" pos:end="17:36">+</operator><name pos:start="17:37" pos:end="17:41">scale</name><operator pos:start="17:42" pos:end="17:42">*</operator><operator pos:start="17:43" pos:end="17:43">(</operator><name pos:start="17:44" pos:end="17:44">y</name><operator pos:start="17:45" pos:end="17:45">-</operator><name pos:start="17:46" pos:end="17:50"><name pos:start="17:46" pos:end="17:47">mb</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:50">h</name></name><operator pos:start="17:51" pos:end="17:51">/</operator><literal type="number" pos:start="17:52" pos:end="17:52">2</literal><operator pos:start="17:53" pos:end="17:53">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:58"><expr pos:start="19:9" pos:end="19:57"><call pos:start="19:9" pos:end="19:57"><name pos:start="19:9" pos:end="19:14">memset</name><argument_list pos:start="19:15" pos:end="19:57">(<argument pos:start="19:16" pos:end="19:31"><expr pos:start="19:16" pos:end="19:31"><name pos:start="19:16" pos:end="19:20">color</name><operator pos:start="19:21" pos:end="19:21">+</operator><name pos:start="19:22" pos:end="19:29">linesize</name><operator pos:start="19:30" pos:end="19:30">*</operator><name pos:start="19:31" pos:end="19:31">y</name></expr></argument>, <argument pos:start="19:34" pos:end="19:34"><expr pos:start="19:34" pos:end="19:34"><literal type="number" pos:start="19:34" pos:end="19:34">0</literal></expr></argument>, <argument pos:start="19:37" pos:end="19:56"><expr pos:start="19:37" pos:end="19:56"><sizeof pos:start="19:37" pos:end="19:50">sizeof<argument_list pos:start="19:43" pos:end="19:50">(<argument pos:start="19:44" pos:end="19:49"><expr pos:start="19:44" pos:end="19:49"><operator pos:start="19:44" pos:end="19:44">*</operator><name pos:start="19:45" pos:end="19:49">color</name></expr></argument>)</argument_list></sizeof><operator pos:start="19:51" pos:end="19:51">*</operator><name pos:start="19:52" pos:end="19:56"><name pos:start="19:52" pos:end="19:53">mb</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:56">w</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:80"><expr pos:start="21:9" pos:end="21:79"><call pos:start="21:9" pos:end="21:79"><name pos:start="21:9" pos:end="21:23">fill_from_cache</name><argument_list pos:start="21:24" pos:end="21:79">(<argument pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">ctx</name></expr></argument>, <argument pos:start="21:30" pos:end="21:45"><expr pos:start="21:30" pos:end="21:45"><name pos:start="21:30" pos:end="21:34">color</name><operator pos:start="21:35" pos:end="21:35">+</operator><name pos:start="21:36" pos:end="21:43">linesize</name><operator pos:start="21:44" pos:end="21:44">*</operator><name pos:start="21:45" pos:end="21:45">y</name></expr></argument>, <argument pos:start="21:48" pos:end="21:55"><expr pos:start="21:48" pos:end="21:55"><operator pos:start="21:48" pos:end="21:48">&amp;</operator><name pos:start="21:49" pos:end="21:55">in_cidx</name></expr></argument>, <argument pos:start="21:58" pos:end="21:67"><expr pos:start="21:58" pos:end="21:67"><operator pos:start="21:58" pos:end="21:58">&amp;</operator><name pos:start="21:59" pos:end="21:67">next_cidx</name></expr></argument>, <argument pos:start="21:70" pos:end="21:71"><expr pos:start="21:70" pos:end="21:71"><name pos:start="21:70" pos:end="21:71">ci</name></expr></argument>, <argument pos:start="21:74" pos:end="21:78"><expr pos:start="21:74" pos:end="21:78"><name pos:start="21:74" pos:end="21:78">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:16">tmp_cidx</name><operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:25">in_cidx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:85"><expr pos:start="25:9" pos:end="25:84"><call pos:start="25:9" pos:end="25:84"><name pos:start="25:9" pos:end="25:23">fill_from_cache</name><argument_list pos:start="25:24" pos:end="25:84">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">ctx</name></expr></argument>, <argument pos:start="25:30" pos:end="25:45"><expr pos:start="25:30" pos:end="25:45"><name pos:start="25:30" pos:end="25:34">color</name><operator pos:start="25:35" pos:end="25:35">+</operator><name pos:start="25:36" pos:end="25:43">linesize</name><operator pos:start="25:44" pos:end="25:44">*</operator><name pos:start="25:45" pos:end="25:45">y</name></expr></argument>, <argument pos:start="25:48" pos:end="25:56"><expr pos:start="25:48" pos:end="25:56"><operator pos:start="25:48" pos:end="25:48">&amp;</operator><name pos:start="25:49" pos:end="25:56">tmp_cidx</name></expr></argument>, <argument pos:start="25:59" pos:end="25:62"><expr pos:start="25:59" pos:end="25:62"><name pos:start="25:59" pos:end="25:62">NULL</name></expr></argument>, <argument pos:start="25:65" pos:end="25:76"><expr pos:start="25:65" pos:end="25:76"><name pos:start="25:65" pos:end="25:66">ci</name> <operator pos:start="25:68" pos:end="25:68">+</operator> <name pos:start="25:70" pos:end="25:74">scale</name><operator pos:start="25:75" pos:end="25:75">/</operator><literal type="number" pos:start="25:76" pos:end="25:76">2</literal></expr></argument>, <argument pos:start="25:79" pos:end="25:83"><expr pos:start="25:79" pos:end="25:83"><name pos:start="25:79" pos:end="25:83">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="29:9" pos:end="215:9">for<control pos:start="29:12" pos:end="29:30">(<init pos:start="29:13" pos:end="29:16"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:13">x</name><operator pos:start="29:14" pos:end="29:14">=</operator><literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr>;</init> <condition pos:start="29:18" pos:end="29:25"><expr pos:start="29:18" pos:end="29:24"><name pos:start="29:18" pos:end="29:18">x</name><operator pos:start="29:19" pos:end="29:19">&lt;</operator><name pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:21">mb</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:24">w</name></name></expr>;</condition> <incr pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:27">x</name><operator pos:start="29:28" pos:end="29:29">++</operator></expr></incr>)</control><block pos:start="29:31" pos:end="215:9">{<block_content pos:start="31:13" pos:end="213:13">

            <decl_stmt pos:start="31:13" pos:end="31:58"><decl pos:start="31:13" pos:end="31:57"><type pos:start="31:13" pos:end="31:24"><specifier pos:start="31:13" pos:end="31:17">const</specifier> <name pos:start="31:19" pos:end="31:24">double</name></type> <name pos:start="31:26" pos:end="31:27">cr</name><init pos:start="31:28" pos:end="31:57">=<expr pos:start="31:29" pos:end="31:57"><name pos:start="31:29" pos:end="31:39"><name pos:start="31:29" pos:end="31:30">mb</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:39">start_x</name></name><operator pos:start="31:40" pos:end="31:40">+</operator><name pos:start="31:41" pos:end="31:45">scale</name><operator pos:start="31:46" pos:end="31:46">*</operator><operator pos:start="31:47" pos:end="31:47">(</operator><name pos:start="31:48" pos:end="31:48">x</name><operator pos:start="31:49" pos:end="31:49">-</operator><name pos:start="31:50" pos:end="31:54"><name pos:start="31:50" pos:end="31:51">mb</name><operator pos:start="31:52" pos:end="31:53">-&gt;</operator><name pos:start="31:54" pos:end="31:54">w</name></name><operator pos:start="31:55" pos:end="31:55">/</operator><literal type="number" pos:start="31:56" pos:end="31:56">2</literal><operator pos:start="31:57" pos:end="31:57">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:25"><decl pos:start="33:13" pos:end="33:24"><type pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:18">double</name></type> <name pos:start="33:20" pos:end="33:21">zr</name><init pos:start="33:22" pos:end="33:24">=<expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">cr</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:25"><decl pos:start="35:13" pos:end="35:24"><type pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:18">double</name></type> <name pos:start="35:20" pos:end="35:21">zi</name><init pos:start="35:22" pos:end="35:24">=<expr pos:start="35:23" pos:end="35:24"><name pos:start="35:23" pos:end="35:24">ci</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:25"><decl pos:start="37:13" pos:end="37:24"><type pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:20">uint32_t</name></type> <name pos:start="37:22" pos:end="37:22">c</name><init pos:start="37:23" pos:end="37:24">=<expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:54"><decl pos:start="39:13" pos:end="39:53"><type pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:18">double</name></type> <name pos:start="39:20" pos:end="39:21">dv</name><init pos:start="39:22" pos:end="39:53">= <expr pos:start="39:24" pos:end="39:53"><name pos:start="39:24" pos:end="39:33"><name pos:start="39:24" pos:end="39:25">mb</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:33">dither</name></name> <operator pos:start="39:35" pos:end="39:35">/</operator> <operator pos:start="39:37" pos:end="39:37">(</operator><name pos:start="39:38" pos:end="39:43">double</name><operator pos:start="39:44" pos:end="39:44">)</operator><operator pos:start="39:45" pos:end="39:45">(</operator><literal type="number" pos:start="39:46" pos:end="39:48">1LL</literal><operator pos:start="39:49" pos:end="39:50">&lt;&lt;</operator><literal type="number" pos:start="39:51" pos:end="39:52">32</literal><operator pos:start="39:53" pos:end="39:53">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:54"><expr pos:start="41:13" pos:end="41:53"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:14">mb</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:22">dither</name></name><operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:34"><name pos:start="41:25" pos:end="41:26">mb</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:34">dither</name></name><operator pos:start="41:35" pos:end="41:35">*</operator><literal type="number" pos:start="41:36" pos:end="41:43">1664525</literal><operator pos:start="41:43" pos:end="41:43">+</operator><literal type="number" pos:start="41:44" pos:end="41:53">1013904223</literal></expr>;</expr_stmt>



            <if_stmt pos:start="45:13" pos:end="47:25"><if pos:start="45:13" pos:end="47:25">if<condition pos:start="45:15" pos:end="45:50">(<expr pos:start="45:16" pos:end="45:49"><name pos:start="45:16" pos:end="45:36"><name pos:start="45:16" pos:end="45:20">color</name><index pos:start="45:21" pos:end="45:36">[<expr pos:start="45:22" pos:end="45:35"><name pos:start="45:22" pos:end="45:22">x</name> <operator pos:start="45:24" pos:end="45:24">+</operator> <name pos:start="45:26" pos:end="45:26">y</name><operator pos:start="45:27" pos:end="45:27">*</operator><name pos:start="45:28" pos:end="45:35">linesize</name></expr>]</index></name> <operator pos:start="45:38" pos:end="45:38">&amp;</operator> <literal type="number" pos:start="45:40" pos:end="45:49">0xFF000000</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:25"><block_content pos:start="47:17" pos:end="47:25">

                <continue pos:start="47:17" pos:end="47:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="51:13" pos:end="78:0"><expr pos:start="51:13" pos:end="51:90"><name pos:start="51:13" pos:end="51:22">use_zyklus</name><operator pos:start="51:23" pos:end="51:23">=</operator> <operator pos:start="51:25" pos:end="51:25">(</operator><name pos:start="51:26" pos:end="51:26">x</name><operator pos:start="51:27" pos:end="51:28">==</operator><literal type="number" pos:start="51:29" pos:end="51:29">0</literal> <operator pos:start="51:31" pos:end="51:32">||</operator> <name pos:start="51:34" pos:end="51:42"><name pos:start="51:34" pos:end="51:35">mb</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:42">inner</name></name><operator pos:start="51:43" pos:end="51:44">!=</operator><name pos:start="51:45" pos:end="51:49">BLACK</name> <operator pos:start="51:51" pos:end="51:52">||</operator><name pos:start="51:53" pos:end="51:75"><name pos:start="51:53" pos:end="51:57">color</name><index pos:start="51:58" pos:end="51:75">[<expr pos:start="51:59" pos:end="51:74"><name pos:start="51:59" pos:end="51:59">x</name><operator pos:start="51:60" pos:end="51:60">-</operator><literal type="number" pos:start="51:61" pos:end="51:63">1</literal> <operator pos:start="51:63" pos:end="51:63">+</operator> <name pos:start="51:65" pos:end="51:65">y</name><operator pos:start="51:66" pos:end="51:66">*</operator><name pos:start="51:67" pos:end="51:74">linesize</name></expr>]</index></name> <operator pos:start="51:77" pos:end="51:78">==</operator> <literal type="number" pos:start="51:80" pos:end="51:89">0xFF000000</literal><operator pos:start="51:90" pos:end="51:90">)</operator></expr>;</expr_stmt>



<cpp:define pos:start="55:1" pos:end="59:33">#<cpp:directive pos:start="55:2" pos:end="55:7">define</cpp:directive> <cpp:macro pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:14">Z_Z2_C</name><parameter_list pos:start="55:15" pos:end="55:33">(<parameter pos:start="55:16" pos:end="55:19"><type pos:start="55:16" pos:end="55:19"><name pos:start="55:16" pos:end="55:19">outr</name></type></parameter>,<parameter pos:start="55:21" pos:end="55:24"><type pos:start="55:21" pos:end="55:24"><name pos:start="55:21" pos:end="55:24">outi</name></type></parameter>,<parameter pos:start="55:26" pos:end="55:28"><type pos:start="55:26" pos:end="55:28"><name pos:start="55:26" pos:end="55:28">inr</name></type></parameter>,<parameter pos:start="55:30" pos:end="55:32"><type pos:start="55:30" pos:end="55:32"><name pos:start="55:30" pos:end="55:32">ini</name></type></parameter>)</parameter_list></cpp:macro>\

            <cpp:value pos:start="57:13" pos:end="59:33">outr= inr*inr - ini*ini + cr;\

            outi= 2*inr*ini + ci;</cpp:value></cpp:define>



<cpp:define pos:start="63:1" pos:end="77:13">#<cpp:directive pos:start="63:2" pos:end="63:7">define</cpp:directive> <cpp:macro pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:21">Z_Z2_C_ZYKLUS</name><parameter_list pos:start="63:22" pos:end="63:43">(<parameter pos:start="63:23" pos:end="63:26"><type pos:start="63:23" pos:end="63:26"><name pos:start="63:23" pos:end="63:26">outr</name></type></parameter>,<parameter pos:start="63:28" pos:end="63:31"><type pos:start="63:28" pos:end="63:31"><name pos:start="63:28" pos:end="63:31">outi</name></type></parameter>,<parameter pos:start="63:33" pos:end="63:35"><type pos:start="63:33" pos:end="63:35"><name pos:start="63:33" pos:end="63:35">inr</name></type></parameter>,<parameter pos:start="63:37" pos:end="63:39"><type pos:start="63:37" pos:end="63:39"><name pos:start="63:37" pos:end="63:39">ini</name></type></parameter>, <parameter pos:start="63:42" pos:end="63:42"><type pos:start="63:42" pos:end="63:42"><name pos:start="63:42" pos:end="63:42">Z</name></type></parameter>)</parameter_list></cpp:macro>\

            <cpp:value pos:start="65:13" pos:end="77:13">Z_Z2_C(outr,outi,inr,ini)\

            if(use_zyklus){\

                if(Z &amp;&amp; mb-&gt;zyklus[i&gt;&gt;1][0]==outr &amp;&amp; mb-&gt;zyklus[i&gt;&gt;1][1]==outi)\

                    break;\

                mb-&gt;zyklus[i][0]= outr;\

                mb-&gt;zyklus[i][1]= outi;\

            }</cpp:value></cpp:define>





            <for pos:start="83:13" pos:end="149:13">for<control pos:start="83:16" pos:end="83:42">(<init pos:start="83:17" pos:end="83:20"><expr pos:start="83:17" pos:end="83:19"><name pos:start="83:17" pos:end="83:17">i</name><operator pos:start="83:18" pos:end="83:18">=</operator><literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr>;</init> <condition pos:start="83:22" pos:end="83:37"><expr pos:start="83:22" pos:end="83:36"><name pos:start="83:22" pos:end="83:22">i</name><operator pos:start="83:23" pos:end="83:23">&lt;</operator><name pos:start="83:24" pos:end="83:34"><name pos:start="83:24" pos:end="83:25">mb</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:34">maxiter</name></name><operator pos:start="83:35" pos:end="83:35">-</operator><literal type="number" pos:start="83:36" pos:end="83:36">8</literal></expr>;</condition> <incr pos:start="83:39" pos:end="83:41"><expr pos:start="83:39" pos:end="83:41"><name pos:start="83:39" pos:end="83:39">i</name><operator pos:start="83:40" pos:end="83:41">++</operator></expr></incr>)</control><block pos:start="83:43" pos:end="149:13">{<block_content pos:start="85:17" pos:end="147:17">

                <decl_stmt pos:start="85:17" pos:end="85:25"><decl pos:start="85:17" pos:end="85:24"><type pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:22">double</name></type> <name pos:start="85:24" pos:end="85:24">t</name></decl>;</decl_stmt>

                <macro pos:start="87:17" pos:end="87:47"><name pos:start="87:17" pos:end="87:29">Z_Z2_C_ZYKLUS</name><argument_list pos:start="87:30" pos:end="87:47">(<argument pos:start="87:31" pos:end="87:31">t</argument>, <argument pos:start="87:34" pos:end="87:35">zi</argument>, <argument pos:start="87:38" pos:end="87:39">zr</argument>, <argument pos:start="87:42" pos:end="87:43">zi</argument>, <argument pos:start="87:46" pos:end="87:46"><literal type="number" pos:start="87:46" pos:end="87:46">0</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="89:17" pos:end="89:20"><expr pos:start="89:17" pos:end="89:19"><name pos:start="89:17" pos:end="89:17">i</name><operator pos:start="89:18" pos:end="89:19">++</operator></expr>;</expr_stmt>

                <macro pos:start="91:17" pos:end="91:47"><name pos:start="91:17" pos:end="91:29">Z_Z2_C_ZYKLUS</name><argument_list pos:start="91:30" pos:end="91:47">(<argument pos:start="91:31" pos:end="91:32">zr</argument>, <argument pos:start="91:35" pos:end="91:36">zi</argument>, <argument pos:start="91:39" pos:end="91:39">t</argument>, <argument pos:start="91:42" pos:end="91:43">zi</argument>, <argument pos:start="91:46" pos:end="91:46"><literal type="number" pos:start="91:46" pos:end="91:46">1</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="93:17" pos:end="93:20"><expr pos:start="93:17" pos:end="93:19"><name pos:start="93:17" pos:end="93:17">i</name><operator pos:start="93:18" pos:end="93:19">++</operator></expr>;</expr_stmt>

                <macro pos:start="95:17" pos:end="95:47"><name pos:start="95:17" pos:end="95:29">Z_Z2_C_ZYKLUS</name><argument_list pos:start="95:30" pos:end="95:47">(<argument pos:start="95:31" pos:end="95:31">t</argument>, <argument pos:start="95:34" pos:end="95:35">zi</argument>, <argument pos:start="95:38" pos:end="95:39">zr</argument>, <argument pos:start="95:42" pos:end="95:43">zi</argument>, <argument pos:start="95:46" pos:end="95:46"><literal type="number" pos:start="95:46" pos:end="95:46">0</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="97:17" pos:end="97:20"><expr pos:start="97:17" pos:end="97:19"><name pos:start="97:17" pos:end="97:17">i</name><operator pos:start="97:18" pos:end="97:19">++</operator></expr>;</expr_stmt>

                <macro pos:start="99:17" pos:end="99:47"><name pos:start="99:17" pos:end="99:29">Z_Z2_C_ZYKLUS</name><argument_list pos:start="99:30" pos:end="99:47">(<argument pos:start="99:31" pos:end="99:32">zr</argument>, <argument pos:start="99:35" pos:end="99:36">zi</argument>, <argument pos:start="99:39" pos:end="99:39">t</argument>, <argument pos:start="99:42" pos:end="99:43">zi</argument>, <argument pos:start="99:46" pos:end="99:46"><literal type="number" pos:start="99:46" pos:end="99:46">1</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="101:17" pos:end="101:20"><expr pos:start="101:17" pos:end="101:19"><name pos:start="101:17" pos:end="101:17">i</name><operator pos:start="101:18" pos:end="101:19">++</operator></expr>;</expr_stmt>

                <macro pos:start="103:17" pos:end="103:47"><name pos:start="103:17" pos:end="103:29">Z_Z2_C_ZYKLUS</name><argument_list pos:start="103:30" pos:end="103:47">(<argument pos:start="103:31" pos:end="103:31">t</argument>, <argument pos:start="103:34" pos:end="103:35">zi</argument>, <argument pos:start="103:38" pos:end="103:39">zr</argument>, <argument pos:start="103:42" pos:end="103:43">zi</argument>, <argument pos:start="103:46" pos:end="103:46"><literal type="number" pos:start="103:46" pos:end="103:46">0</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="105:17" pos:end="105:20"><expr pos:start="105:17" pos:end="105:19"><name pos:start="105:17" pos:end="105:17">i</name><operator pos:start="105:18" pos:end="105:19">++</operator></expr>;</expr_stmt>

                <macro pos:start="107:17" pos:end="107:47"><name pos:start="107:17" pos:end="107:29">Z_Z2_C_ZYKLUS</name><argument_list pos:start="107:30" pos:end="107:47">(<argument pos:start="107:31" pos:end="107:32">zr</argument>, <argument pos:start="107:35" pos:end="107:36">zi</argument>, <argument pos:start="107:39" pos:end="107:39">t</argument>, <argument pos:start="107:42" pos:end="107:43">zi</argument>, <argument pos:start="107:46" pos:end="107:46"><literal type="number" pos:start="107:46" pos:end="107:46">1</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="109:17" pos:end="109:20"><expr pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:17">i</name><operator pos:start="109:18" pos:end="109:19">++</operator></expr>;</expr_stmt>

                <macro pos:start="111:17" pos:end="111:47"><name pos:start="111:17" pos:end="111:29">Z_Z2_C_ZYKLUS</name><argument_list pos:start="111:30" pos:end="111:47">(<argument pos:start="111:31" pos:end="111:31">t</argument>, <argument pos:start="111:34" pos:end="111:35">zi</argument>, <argument pos:start="111:38" pos:end="111:39">zr</argument>, <argument pos:start="111:42" pos:end="111:43">zi</argument>, <argument pos:start="111:46" pos:end="111:46"><literal type="number" pos:start="111:46" pos:end="111:46">0</literal></argument>)</argument_list></macro>

                <expr_stmt pos:start="113:17" pos:end="113:20"><expr pos:start="113:17" pos:end="113:19"><name pos:start="113:17" pos:end="113:17">i</name><operator pos:start="113:18" pos:end="113:19">++</operator></expr>;</expr_stmt>

                <macro pos:start="115:17" pos:end="115:47"><name pos:start="115:17" pos:end="115:29">Z_Z2_C_ZYKLUS</name><argument_list pos:start="115:30" pos:end="115:47">(<argument pos:start="115:31" pos:end="115:32">zr</argument>, <argument pos:start="115:35" pos:end="115:36">zi</argument>, <argument pos:start="115:39" pos:end="115:39">t</argument>, <argument pos:start="115:42" pos:end="115:43">zi</argument>, <argument pos:start="115:46" pos:end="115:46"><literal type="number" pos:start="115:46" pos:end="115:46">1</literal></argument>)</argument_list></macro>

                <if_stmt pos:start="117:17" pos:end="147:17"><if pos:start="117:17" pos:end="147:17">if<condition pos:start="117:19" pos:end="117:47">(<expr pos:start="117:20" pos:end="117:46"><name pos:start="117:20" pos:end="117:21">zr</name><operator pos:start="117:22" pos:end="117:22">*</operator><name pos:start="117:23" pos:end="117:24">zr</name> <operator pos:start="117:26" pos:end="117:26">+</operator> <name pos:start="117:28" pos:end="117:29">zi</name><operator pos:start="117:30" pos:end="117:30">*</operator><name pos:start="117:31" pos:end="117:32">zi</name> <operator pos:start="117:34" pos:end="117:34">&gt;</operator> <name pos:start="117:36" pos:end="117:46"><name pos:start="117:36" pos:end="117:37">mb</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:46">bailout</name></name></expr>)</condition><block pos:start="117:48" pos:end="147:17">{<block_content pos:start="119:21" pos:end="145:26">

                    <expr_stmt pos:start="119:21" pos:end="119:36"><expr pos:start="119:21" pos:end="119:35"><name pos:start="119:21" pos:end="119:21">i</name><operator pos:start="119:22" pos:end="119:23">-=</operator> <call pos:start="119:25" pos:end="119:35"><name pos:start="119:25" pos:end="119:29">FFMIN</name><argument_list pos:start="119:30" pos:end="119:35">(<argument pos:start="119:31" pos:end="119:31"><expr pos:start="119:31" pos:end="119:31"><literal type="number" pos:start="119:31" pos:end="119:31">7</literal></expr></argument>, <argument pos:start="119:34" pos:end="119:34"><expr pos:start="119:34" pos:end="119:34"><name pos:start="119:34" pos:end="119:34">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="121:21" pos:end="143:21">for<control pos:start="121:24" pos:end="121:45">(<init pos:start="121:25" pos:end="121:25">;</init> <condition pos:start="121:27" pos:end="121:40"><expr pos:start="121:27" pos:end="121:39"><name pos:start="121:27" pos:end="121:27">i</name><operator pos:start="121:28" pos:end="121:28">&lt;</operator><name pos:start="121:29" pos:end="121:39"><name pos:start="121:29" pos:end="121:30">mb</name><operator pos:start="121:31" pos:end="121:32">-&gt;</operator><name pos:start="121:33" pos:end="121:39">maxiter</name></name></expr>;</condition> <incr pos:start="121:42" pos:end="121:44"><expr pos:start="121:42" pos:end="121:44"><name pos:start="121:42" pos:end="121:42">i</name><operator pos:start="121:43" pos:end="121:44">++</operator></expr></incr>)</control><block pos:start="121:46" pos:end="143:21">{<block_content pos:start="123:25" pos:end="141:25">

                        <expr_stmt pos:start="123:25" pos:end="123:45"><expr pos:start="123:25" pos:end="123:44"><name pos:start="123:25" pos:end="123:26">zr</name><operator pos:start="123:27" pos:end="123:27">=</operator> <name pos:start="123:29" pos:end="123:44"><name pos:start="123:29" pos:end="123:30">mb</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:38">zyklus</name><index pos:start="123:39" pos:end="123:41">[<expr pos:start="123:40" pos:end="123:40"><name pos:start="123:40" pos:end="123:40">i</name></expr>]</index><index pos:start="123:42" pos:end="123:44">[<expr pos:start="123:43" pos:end="123:43"><literal type="number" pos:start="123:43" pos:end="123:43">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="125:25" pos:end="125:45"><expr pos:start="125:25" pos:end="125:44"><name pos:start="125:25" pos:end="125:26">zi</name><operator pos:start="125:27" pos:end="125:27">=</operator> <name pos:start="125:29" pos:end="125:44"><name pos:start="125:29" pos:end="125:30">mb</name><operator pos:start="125:31" pos:end="125:32">-&gt;</operator><name pos:start="125:33" pos:end="125:38">zyklus</name><index pos:start="125:39" pos:end="125:41">[<expr pos:start="125:40" pos:end="125:40"><name pos:start="125:40" pos:end="125:40">i</name></expr>]</index><index pos:start="125:42" pos:end="125:44">[<expr pos:start="125:43" pos:end="125:43"><literal type="number" pos:start="125:43" pos:end="125:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

                        <if_stmt pos:start="127:25" pos:end="141:25"><if pos:start="127:25" pos:end="141:25">if<condition pos:start="127:27" pos:end="127:55">(<expr pos:start="127:28" pos:end="127:54"><name pos:start="127:28" pos:end="127:29">zr</name><operator pos:start="127:30" pos:end="127:30">*</operator><name pos:start="127:31" pos:end="127:32">zr</name> <operator pos:start="127:34" pos:end="127:34">+</operator> <name pos:start="127:36" pos:end="127:37">zi</name><operator pos:start="127:38" pos:end="127:38">*</operator><name pos:start="127:39" pos:end="127:40">zi</name> <operator pos:start="127:42" pos:end="127:42">&gt;</operator> <name pos:start="127:44" pos:end="127:54"><name pos:start="127:44" pos:end="127:45">mb</name><operator pos:start="127:46" pos:end="127:47">-&gt;</operator><name pos:start="127:48" pos:end="127:54">bailout</name></name></expr>)</condition><block pos:start="127:56" pos:end="141:25">{<block_content pos:start="129:29" pos:end="139:34">

                            <switch pos:start="129:29" pos:end="135:29">switch<condition pos:start="129:35" pos:end="129:45">(<expr pos:start="129:36" pos:end="129:44"><name pos:start="129:36" pos:end="129:44"><name pos:start="129:36" pos:end="129:37">mb</name><operator pos:start="129:38" pos:end="129:39">-&gt;</operator><name pos:start="129:40" pos:end="129:44">outer</name></name></expr>)</condition><block pos:start="129:46" pos:end="135:29">{<block_content pos:start="131:29" pos:end="133:120">

                            <case pos:start="131:29" pos:end="131:60">case            <expr pos:start="131:45" pos:end="131:59"><name pos:start="131:45" pos:end="131:59">ITERATION_COUNT</name></expr>:</case> <expr_stmt pos:start="131:62" pos:end="131:68"><expr pos:start="131:62" pos:end="131:67"><name pos:start="131:62" pos:end="131:63">zr</name> <operator pos:start="131:65" pos:end="131:65">=</operator> <name pos:start="131:67" pos:end="131:67">i</name></expr>;</expr_stmt> <break pos:start="131:70" pos:end="131:75">break;</break>

                            <case pos:start="133:29" pos:end="133:60">case <expr pos:start="133:34" pos:end="133:59"><name pos:start="133:34" pos:end="133:59">NORMALIZED_ITERATION_COUNT</name></expr>:</case> <expr_stmt pos:start="133:62" pos:end="133:113"><expr pos:start="133:62" pos:end="133:112"><name pos:start="133:62" pos:end="133:63">zr</name><operator pos:start="133:64" pos:end="133:64">=</operator> <name pos:start="133:66" pos:end="133:66">i</name> <operator pos:start="133:68" pos:end="133:68">+</operator> <call pos:start="133:70" pos:end="133:112"><name pos:start="133:70" pos:end="133:73">log2</name><argument_list pos:start="133:74" pos:end="133:112">(<argument pos:start="133:75" pos:end="133:111"><expr pos:start="133:75" pos:end="133:111"><call pos:start="133:75" pos:end="133:90"><name pos:start="133:75" pos:end="133:77">log</name><argument_list pos:start="133:78" pos:end="133:90">(<argument pos:start="133:79" pos:end="133:89"><expr pos:start="133:79" pos:end="133:89"><name pos:start="133:79" pos:end="133:89"><name pos:start="133:79" pos:end="133:80">mb</name><operator pos:start="133:81" pos:end="133:82">-&gt;</operator><name pos:start="133:83" pos:end="133:89">bailout</name></name></expr></argument>)</argument_list></call> <operator pos:start="133:92" pos:end="133:92">/</operator> <call pos:start="133:94" pos:end="133:111"><name pos:start="133:94" pos:end="133:96">log</name><argument_list pos:start="133:97" pos:end="133:111">(<argument pos:start="133:98" pos:end="133:110"><expr pos:start="133:98" pos:end="133:110"><name pos:start="133:98" pos:end="133:99">zr</name><operator pos:start="133:100" pos:end="133:100">*</operator><name pos:start="133:101" pos:end="133:102">zr</name> <operator pos:start="133:104" pos:end="133:104">+</operator> <name pos:start="133:106" pos:end="133:107">zi</name><operator pos:start="133:108" pos:end="133:108">*</operator><name pos:start="133:109" pos:end="133:110">zi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="133:115" pos:end="133:120">break;</break>

                            </block_content>}</block></switch>

                            <expr_stmt pos:start="137:29" pos:end="137:129"><expr pos:start="137:29" pos:end="137:128"><name pos:start="137:29" pos:end="137:29">c</name><operator pos:start="137:30" pos:end="137:30">=</operator> <call pos:start="137:32" pos:end="137:54"><name pos:start="137:32" pos:end="137:37">lrintf</name><argument_list pos:start="137:38" pos:end="137:54">(<argument pos:start="137:39" pos:end="137:53"><expr pos:start="137:39" pos:end="137:53"><operator pos:start="137:39" pos:end="137:39">(</operator><call pos:start="137:40" pos:end="137:46"><name pos:start="137:40" pos:end="137:42">sin</name><argument_list pos:start="137:43" pos:end="137:46">(<argument pos:start="137:44" pos:end="137:45"><expr pos:start="137:44" pos:end="137:45"><name pos:start="137:44" pos:end="137:45">zr</name></expr></argument>)</argument_list></call><operator pos:start="137:47" pos:end="137:47">+</operator><literal type="number" pos:start="137:48" pos:end="137:48">1</literal><operator pos:start="137:49" pos:end="137:49">)</operator><operator pos:start="137:50" pos:end="137:50">*</operator><literal type="number" pos:start="137:51" pos:end="137:53">127</literal></expr></argument>)</argument_list></call> <operator pos:start="137:56" pos:end="137:56">+</operator> <call pos:start="137:58" pos:end="137:86"><name pos:start="137:58" pos:end="137:63">lrintf</name><argument_list pos:start="137:64" pos:end="137:86">(<argument pos:start="137:65" pos:end="137:85"><expr pos:start="137:65" pos:end="137:85"><operator pos:start="137:65" pos:end="137:65">(</operator><call pos:start="137:66" pos:end="137:78"><name pos:start="137:66" pos:end="137:68">sin</name><argument_list pos:start="137:69" pos:end="137:78">(<argument pos:start="137:70" pos:end="137:77"><expr pos:start="137:70" pos:end="137:77"><name pos:start="137:70" pos:end="137:71">zr</name><operator pos:start="137:72" pos:end="137:72">/</operator><literal type="number" pos:start="137:73" pos:end="137:77">1.234</literal></expr></argument>)</argument_list></call><operator pos:start="137:79" pos:end="137:79">+</operator><literal type="number" pos:start="137:80" pos:end="137:80">1</literal><operator pos:start="137:81" pos:end="137:81">)</operator><operator pos:start="137:82" pos:end="137:82">*</operator><literal type="number" pos:start="137:83" pos:end="137:85">127</literal></expr></argument>)</argument_list></call><operator pos:start="137:87" pos:end="137:87">*</operator><literal type="number" pos:start="137:88" pos:end="137:90">256</literal><operator pos:start="137:91" pos:end="137:91">*</operator><literal type="number" pos:start="137:92" pos:end="137:96">256</literal> <operator pos:start="137:96" pos:end="137:96">+</operator> <call pos:start="137:98" pos:end="137:124"><name pos:start="137:98" pos:end="137:103">lrintf</name><argument_list pos:start="137:104" pos:end="137:124">(<argument pos:start="137:105" pos:end="137:123"><expr pos:start="137:105" pos:end="137:123"><operator pos:start="137:105" pos:end="137:105">(</operator><call pos:start="137:106" pos:end="137:116"><name pos:start="137:106" pos:end="137:108">sin</name><argument_list pos:start="137:109" pos:end="137:116">(<argument pos:start="137:110" pos:end="137:115"><expr pos:start="137:110" pos:end="137:115"><name pos:start="137:110" pos:end="137:111">zr</name><operator pos:start="137:112" pos:end="137:112">/</operator><literal type="number" pos:start="137:113" pos:end="137:115">100</literal></expr></argument>)</argument_list></call><operator pos:start="137:117" pos:end="137:117">+</operator><literal type="number" pos:start="137:118" pos:end="137:118">1</literal><operator pos:start="137:119" pos:end="137:119">)</operator><operator pos:start="137:120" pos:end="137:120">*</operator><literal type="number" pos:start="137:121" pos:end="137:123">127</literal></expr></argument>)</argument_list></call><operator pos:start="137:125" pos:end="137:125">*</operator><literal type="number" pos:start="137:126" pos:end="137:128">256</literal></expr>;</expr_stmt>

                            <break pos:start="139:29" pos:end="139:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                    <break pos:start="145:21" pos:end="145:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="151:13" pos:end="199:13"><if pos:start="151:13" pos:end="199:13">if<condition pos:start="151:15" pos:end="151:18">(<expr pos:start="151:16" pos:end="151:17"><operator pos:start="151:16" pos:end="151:16">!</operator><name pos:start="151:17" pos:end="151:17">c</name></expr>)</condition><block pos:start="151:19" pos:end="199:13">{<block_content pos:start="153:17" pos:end="197:17">

                <if_stmt pos:start="153:17" pos:end="197:17"><if pos:start="153:17" pos:end="171:17">if<condition pos:start="153:19" pos:end="153:37">(<expr pos:start="153:20" pos:end="153:36"><name pos:start="153:20" pos:end="153:28"><name pos:start="153:20" pos:end="153:21">mb</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:28">inner</name></name><operator pos:start="153:29" pos:end="153:30">==</operator><name pos:start="153:31" pos:end="153:36">PERIOD</name></expr>)</condition><block pos:start="153:38" pos:end="171:17">{<block_content pos:start="155:17" pos:end="169:17">

                <decl_stmt pos:start="155:17" pos:end="155:22"><decl pos:start="155:17" pos:end="155:21"><type pos:start="155:17" pos:end="155:19"><name pos:start="155:17" pos:end="155:19">int</name></type> <name pos:start="155:21" pos:end="155:21">j</name></decl>;</decl_stmt>

                <for pos:start="157:17" pos:end="161:30">for<control pos:start="157:20" pos:end="157:34">(<init pos:start="157:21" pos:end="157:26"><expr pos:start="157:21" pos:end="157:25"><name pos:start="157:21" pos:end="157:21">j</name><operator pos:start="157:22" pos:end="157:22">=</operator><name pos:start="157:23" pos:end="157:23">i</name><operator pos:start="157:24" pos:end="157:24">-</operator><literal type="number" pos:start="157:25" pos:end="157:25">1</literal></expr>;</init> <condition pos:start="157:28" pos:end="157:29"><expr pos:start="157:28" pos:end="157:28"><name pos:start="157:28" pos:end="157:28">j</name></expr>;</condition> <incr pos:start="157:31" pos:end="157:33"><expr pos:start="157:31" pos:end="157:33"><name pos:start="157:31" pos:end="157:31">j</name><operator pos:start="157:32" pos:end="157:33">--</operator></expr></incr>)</control><block type="pseudo" pos:start="159:21" pos:end="161:30"><block_content pos:start="159:21" pos:end="161:30">

                    <if_stmt pos:start="159:21" pos:end="161:30"><if pos:start="159:21" pos:end="161:30">if<condition pos:start="159:23" pos:end="159:96">(<expr pos:start="159:24" pos:end="159:95"><call pos:start="159:24" pos:end="159:47"><name pos:start="159:24" pos:end="159:26">SQR</name><argument_list pos:start="159:27" pos:end="159:47">(<argument pos:start="159:28" pos:end="159:46"><expr pos:start="159:28" pos:end="159:46"><name pos:start="159:28" pos:end="159:43"><name pos:start="159:28" pos:end="159:29">mb</name><operator pos:start="159:30" pos:end="159:31">-&gt;</operator><name pos:start="159:32" pos:end="159:37">zyklus</name><index pos:start="159:38" pos:end="159:40">[<expr pos:start="159:39" pos:end="159:39"><name pos:start="159:39" pos:end="159:39">j</name></expr>]</index><index pos:start="159:41" pos:end="159:43">[<expr pos:start="159:42" pos:end="159:42"><literal type="number" pos:start="159:42" pos:end="159:42">0</literal></expr>]</index></name><operator pos:start="159:44" pos:end="159:44">-</operator><name pos:start="159:45" pos:end="159:46">zr</name></expr></argument>)</argument_list></call> <operator pos:start="159:49" pos:end="159:49">+</operator> <call pos:start="159:51" pos:end="159:74"><name pos:start="159:51" pos:end="159:53">SQR</name><argument_list pos:start="159:54" pos:end="159:74">(<argument pos:start="159:55" pos:end="159:73"><expr pos:start="159:55" pos:end="159:73"><name pos:start="159:55" pos:end="159:70"><name pos:start="159:55" pos:end="159:56">mb</name><operator pos:start="159:57" pos:end="159:58">-&gt;</operator><name pos:start="159:59" pos:end="159:64">zyklus</name><index pos:start="159:65" pos:end="159:67">[<expr pos:start="159:66" pos:end="159:66"><name pos:start="159:66" pos:end="159:66">j</name></expr>]</index><index pos:start="159:68" pos:end="159:70">[<expr pos:start="159:69" pos:end="159:69"><literal type="number" pos:start="159:69" pos:end="159:69">1</literal></expr>]</index></name><operator pos:start="159:71" pos:end="159:71">-</operator><name pos:start="159:72" pos:end="159:73">zi</name></expr></argument>)</argument_list></call> <operator pos:start="159:76" pos:end="159:76">&lt;</operator> <literal type="number" pos:start="159:78" pos:end="159:95">0.0000000000000001</literal></expr>)</condition><block type="pseudo" pos:start="161:25" pos:end="161:30"><block_content pos:start="161:25" pos:end="161:30">

                        <break pos:start="161:25" pos:end="161:30">break;</break></block_content></block></if></if_stmt></block_content></block></for>

                <if_stmt pos:start="163:17" pos:end="169:17"><if pos:start="163:17" pos:end="169:17">if<condition pos:start="163:19" pos:end="163:21">(<expr pos:start="163:20" pos:end="163:20"><name pos:start="163:20" pos:end="163:20">j</name></expr>)</condition><block pos:start="163:22" pos:end="169:17">{<block_content pos:start="165:21" pos:end="167:77">

                    <expr_stmt pos:start="165:21" pos:end="165:27"><expr pos:start="165:21" pos:end="165:26"><name pos:start="165:21" pos:end="165:21">c</name><operator pos:start="165:22" pos:end="165:22">=</operator> <name pos:start="165:24" pos:end="165:24">i</name><operator pos:start="165:25" pos:end="165:25">-</operator><name pos:start="165:26" pos:end="165:26">j</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:77"><expr pos:start="167:21" pos:end="167:76"><name pos:start="167:21" pos:end="167:21">c</name><operator pos:start="167:22" pos:end="167:22">=</operator> <operator pos:start="167:24" pos:end="167:24">(</operator><operator pos:start="167:25" pos:end="167:25">(</operator><name pos:start="167:26" pos:end="167:26">c</name><operator pos:start="167:27" pos:end="167:28">&lt;&lt;</operator><literal type="number" pos:start="167:29" pos:end="167:29">5</literal><operator pos:start="167:30" pos:end="167:30">)</operator><operator pos:start="167:31" pos:end="167:31">&amp;</operator><literal type="number" pos:start="167:32" pos:end="167:35">0xE0</literal><operator pos:start="167:36" pos:end="167:36">)</operator> <operator pos:start="167:38" pos:end="167:38">+</operator> <operator pos:start="167:40" pos:end="167:40">(</operator><operator pos:start="167:41" pos:end="167:41">(</operator><name pos:start="167:42" pos:end="167:42">c</name><operator pos:start="167:43" pos:end="167:44">&lt;&lt;</operator><literal type="number" pos:start="167:45" pos:end="167:46">16</literal><operator pos:start="167:47" pos:end="167:47">)</operator><operator pos:start="167:48" pos:end="167:48">&amp;</operator><literal type="number" pos:start="167:49" pos:end="167:54">0xE000</literal><operator pos:start="167:55" pos:end="167:55">)</operator> <operator pos:start="167:57" pos:end="167:57">+</operator> <operator pos:start="167:59" pos:end="167:59">(</operator><operator pos:start="167:60" pos:end="167:60">(</operator><name pos:start="167:61" pos:end="167:61">c</name><operator pos:start="167:62" pos:end="167:63">&lt;&lt;</operator><literal type="number" pos:start="167:64" pos:end="167:65">27</literal><operator pos:start="167:66" pos:end="167:66">)</operator><operator pos:start="167:67" pos:end="167:67">&amp;</operator><literal type="number" pos:start="167:68" pos:end="167:75">0xE00000</literal><operator pos:start="167:76" pos:end="167:76">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                </block_content>}</block></if><if type="elseif" pos:start="171:18" pos:end="175:17">else if<condition pos:start="171:25" pos:end="171:45">(<expr pos:start="171:26" pos:end="171:44"><name pos:start="171:26" pos:end="171:34"><name pos:start="171:26" pos:end="171:27">mb</name><operator pos:start="171:28" pos:end="171:29">-&gt;</operator><name pos:start="171:30" pos:end="171:34">inner</name></name><operator pos:start="171:35" pos:end="171:36">==</operator><name pos:start="171:37" pos:end="171:44">CONVTIME</name></expr>)</condition><block pos:start="171:46" pos:end="175:17">{<block_content pos:start="173:21" pos:end="173:62">

                    <expr_stmt pos:start="173:21" pos:end="173:62"><expr pos:start="173:21" pos:end="173:61"><name pos:start="173:21" pos:end="173:21">c</name><operator pos:start="173:22" pos:end="173:22">=</operator> <call pos:start="173:24" pos:end="173:52"><name pos:start="173:24" pos:end="173:28">floor</name><argument_list pos:start="173:29" pos:end="173:52">(<argument pos:start="173:30" pos:end="173:51"><expr pos:start="173:30" pos:end="173:51"><name pos:start="173:30" pos:end="173:30">i</name><operator pos:start="173:31" pos:end="173:31">*</operator><literal type="number" pos:start="173:32" pos:end="173:36">255.0</literal><operator pos:start="173:37" pos:end="173:37">/</operator><name pos:start="173:38" pos:end="173:48"><name pos:start="173:38" pos:end="173:39">mb</name><operator pos:start="173:40" pos:end="173:41">-&gt;</operator><name pos:start="173:42" pos:end="173:48">maxiter</name></name><operator pos:start="173:49" pos:end="173:49">+</operator><name pos:start="173:50" pos:end="173:51">dv</name></expr></argument>)</argument_list></call><operator pos:start="173:53" pos:end="173:53">*</operator><literal type="number" pos:start="173:54" pos:end="173:61">0x010101</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="175:19" pos:end="197:17">else if<condition pos:start="175:26" pos:end="175:44">(<expr pos:start="175:27" pos:end="175:43"><name pos:start="175:27" pos:end="175:35"><name pos:start="175:27" pos:end="175:28">mb</name><operator pos:start="175:29" pos:end="175:30">-&gt;</operator><name pos:start="175:31" pos:end="175:35">inner</name></name><operator pos:start="175:36" pos:end="175:37">==</operator><name pos:start="175:38" pos:end="175:43">MINCOL</name></expr>)</condition><block pos:start="175:45" pos:end="197:17">{<block_content pos:start="177:21" pos:end="195:141">

                    <decl_stmt pos:start="177:21" pos:end="177:26"><decl pos:start="177:21" pos:end="177:25"><type pos:start="177:21" pos:end="177:23"><name pos:start="177:21" pos:end="177:23">int</name></type> <name pos:start="177:25" pos:end="177:25">j</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="179:21" pos:end="179:40"><decl pos:start="179:21" pos:end="179:39"><type pos:start="179:21" pos:end="179:26"><name pos:start="179:21" pos:end="179:26">double</name></type> <name pos:start="179:28" pos:end="179:34">closest</name><init pos:start="179:35" pos:end="179:39">=<expr pos:start="179:36" pos:end="179:39"><literal type="number" pos:start="179:36" pos:end="179:39">9999</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="181:21" pos:end="181:40"><decl pos:start="181:21" pos:end="181:39"><type pos:start="181:21" pos:end="181:23"><name pos:start="181:21" pos:end="181:23">int</name></type> <name pos:start="181:25" pos:end="181:37">closest_index</name><init pos:start="181:38" pos:end="181:39">=<expr pos:start="181:39" pos:end="181:39"><literal type="number" pos:start="181:39" pos:end="181:39">0</literal></expr></init></decl>;</decl_stmt>

                    <for pos:start="183:21" pos:end="191:25">for<control pos:start="183:24" pos:end="183:41">(<init pos:start="183:25" pos:end="183:30"><expr pos:start="183:25" pos:end="183:29"><name pos:start="183:25" pos:end="183:25">j</name><operator pos:start="183:26" pos:end="183:26">=</operator><name pos:start="183:27" pos:end="183:27">i</name><operator pos:start="183:28" pos:end="183:28">-</operator><literal type="number" pos:start="183:29" pos:end="183:29">1</literal></expr>;</init> <condition pos:start="183:32" pos:end="183:36"><expr pos:start="183:32" pos:end="183:35"><name pos:start="183:32" pos:end="183:32">j</name><operator pos:start="183:33" pos:end="183:34">&gt;=</operator><literal type="number" pos:start="183:35" pos:end="183:35">0</literal></expr>;</condition> <incr pos:start="183:38" pos:end="183:40"><expr pos:start="183:38" pos:end="183:40"><name pos:start="183:38" pos:end="183:38">j</name><operator pos:start="183:39" pos:end="183:40">--</operator></expr></incr>)</control><block type="pseudo" pos:start="185:25" pos:end="191:25"><block_content pos:start="185:25" pos:end="191:25">

                        <if_stmt pos:start="185:25" pos:end="191:25"><if pos:start="185:25" pos:end="191:25">if<condition pos:start="185:27" pos:end="185:83">(<expr pos:start="185:28" pos:end="185:82"><call pos:start="185:28" pos:end="185:48"><name pos:start="185:28" pos:end="185:30">SQR</name><argument_list pos:start="185:31" pos:end="185:48">(<argument pos:start="185:32" pos:end="185:47"><expr pos:start="185:32" pos:end="185:47"><name pos:start="185:32" pos:end="185:47"><name pos:start="185:32" pos:end="185:33">mb</name><operator pos:start="185:34" pos:end="185:35">-&gt;</operator><name pos:start="185:36" pos:end="185:41">zyklus</name><index pos:start="185:42" pos:end="185:44">[<expr pos:start="185:43" pos:end="185:43"><name pos:start="185:43" pos:end="185:43">j</name></expr>]</index><index pos:start="185:45" pos:end="185:47">[<expr pos:start="185:46" pos:end="185:46"><literal type="number" pos:start="185:46" pos:end="185:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="185:50" pos:end="185:50">+</operator> <call pos:start="185:52" pos:end="185:72"><name pos:start="185:52" pos:end="185:54">SQR</name><argument_list pos:start="185:55" pos:end="185:72">(<argument pos:start="185:56" pos:end="185:71"><expr pos:start="185:56" pos:end="185:71"><name pos:start="185:56" pos:end="185:71"><name pos:start="185:56" pos:end="185:57">mb</name><operator pos:start="185:58" pos:end="185:59">-&gt;</operator><name pos:start="185:60" pos:end="185:65">zyklus</name><index pos:start="185:66" pos:end="185:68">[<expr pos:start="185:67" pos:end="185:67"><name pos:start="185:67" pos:end="185:67">j</name></expr>]</index><index pos:start="185:69" pos:end="185:71">[<expr pos:start="185:70" pos:end="185:70"><literal type="number" pos:start="185:70" pos:end="185:70">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="185:74" pos:end="185:74">&lt;</operator> <name pos:start="185:76" pos:end="185:82">closest</name></expr>)</condition><block pos:start="185:84" pos:end="191:25">{<block_content pos:start="187:29" pos:end="189:45">

                            <expr_stmt pos:start="187:29" pos:end="187:83"><expr pos:start="187:29" pos:end="187:82"><name pos:start="187:29" pos:end="187:35">closest</name><operator pos:start="187:36" pos:end="187:36">=</operator> <call pos:start="187:38" pos:end="187:58"><name pos:start="187:38" pos:end="187:40">SQR</name><argument_list pos:start="187:41" pos:end="187:58">(<argument pos:start="187:42" pos:end="187:57"><expr pos:start="187:42" pos:end="187:57"><name pos:start="187:42" pos:end="187:57"><name pos:start="187:42" pos:end="187:43">mb</name><operator pos:start="187:44" pos:end="187:45">-&gt;</operator><name pos:start="187:46" pos:end="187:51">zyklus</name><index pos:start="187:52" pos:end="187:54">[<expr pos:start="187:53" pos:end="187:53"><name pos:start="187:53" pos:end="187:53">j</name></expr>]</index><index pos:start="187:55" pos:end="187:57">[<expr pos:start="187:56" pos:end="187:56"><literal type="number" pos:start="187:56" pos:end="187:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="187:60" pos:end="187:60">+</operator> <call pos:start="187:62" pos:end="187:82"><name pos:start="187:62" pos:end="187:64">SQR</name><argument_list pos:start="187:65" pos:end="187:82">(<argument pos:start="187:66" pos:end="187:81"><expr pos:start="187:66" pos:end="187:81"><name pos:start="187:66" pos:end="187:81"><name pos:start="187:66" pos:end="187:67">mb</name><operator pos:start="187:68" pos:end="187:69">-&gt;</operator><name pos:start="187:70" pos:end="187:75">zyklus</name><index pos:start="187:76" pos:end="187:78">[<expr pos:start="187:77" pos:end="187:77"><name pos:start="187:77" pos:end="187:77">j</name></expr>]</index><index pos:start="187:79" pos:end="187:81">[<expr pos:start="187:80" pos:end="187:80"><literal type="number" pos:start="187:80" pos:end="187:80">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="189:29" pos:end="189:45"><expr pos:start="189:29" pos:end="189:44"><name pos:start="189:29" pos:end="189:41">closest_index</name><operator pos:start="189:42" pos:end="189:42">=</operator> <name pos:start="189:44" pos:end="189:44">j</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt></block_content></block></for>

                    <expr_stmt pos:start="193:21" pos:end="193:44"><expr pos:start="193:21" pos:end="193:43"><name pos:start="193:21" pos:end="193:27">closest</name> <operator pos:start="193:29" pos:end="193:29">=</operator> <call pos:start="193:31" pos:end="193:43"><name pos:start="193:31" pos:end="193:34">sqrt</name><argument_list pos:start="193:35" pos:end="193:43">(<argument pos:start="193:36" pos:end="193:42"><expr pos:start="193:36" pos:end="193:42"><name pos:start="193:36" pos:end="193:42">closest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:141"><expr pos:start="195:21" pos:end="195:140"><name pos:start="195:21" pos:end="195:21">c</name><operator pos:start="195:22" pos:end="195:22">=</operator> <call pos:start="195:24" pos:end="195:78"><name pos:start="195:24" pos:end="195:29">lrintf</name><argument_list pos:start="195:30" pos:end="195:78">(<argument pos:start="195:31" pos:end="195:77"><expr pos:start="195:31" pos:end="195:77"><operator pos:start="195:31" pos:end="195:31">(</operator><name pos:start="195:32" pos:end="195:59"><name pos:start="195:32" pos:end="195:33">mb</name><operator pos:start="195:34" pos:end="195:35">-&gt;</operator><name pos:start="195:36" pos:end="195:41">zyklus</name><index pos:start="195:42" pos:end="195:56">[<expr pos:start="195:43" pos:end="195:55"><name pos:start="195:43" pos:end="195:55">closest_index</name></expr>]</index><index pos:start="195:57" pos:end="195:59">[<expr pos:start="195:58" pos:end="195:58"><literal type="number" pos:start="195:58" pos:end="195:58">0</literal></expr>]</index></name><operator pos:start="195:60" pos:end="195:60">/</operator><name pos:start="195:61" pos:end="195:67">closest</name><operator pos:start="195:68" pos:end="195:68">+</operator><literal type="number" pos:start="195:69" pos:end="195:69">1</literal><operator pos:start="195:70" pos:end="195:70">)</operator><operator pos:start="195:71" pos:end="195:71">*</operator><literal type="number" pos:start="195:72" pos:end="195:75">127</literal><operator pos:start="195:75" pos:end="195:75">+</operator><name pos:start="195:76" pos:end="195:77">dv</name></expr></argument>)</argument_list></call> <operator pos:start="195:80" pos:end="195:80">+</operator> <call pos:start="195:82" pos:end="195:136"><name pos:start="195:82" pos:end="195:87">lrintf</name><argument_list pos:start="195:88" pos:end="195:136">(<argument pos:start="195:89" pos:end="195:135"><expr pos:start="195:89" pos:end="195:135"><operator pos:start="195:89" pos:end="195:89">(</operator><name pos:start="195:90" pos:end="195:117"><name pos:start="195:90" pos:end="195:91">mb</name><operator pos:start="195:92" pos:end="195:93">-&gt;</operator><name pos:start="195:94" pos:end="195:99">zyklus</name><index pos:start="195:100" pos:end="195:114">[<expr pos:start="195:101" pos:end="195:113"><name pos:start="195:101" pos:end="195:113">closest_index</name></expr>]</index><index pos:start="195:115" pos:end="195:117">[<expr pos:start="195:116" pos:end="195:116"><literal type="number" pos:start="195:116" pos:end="195:116">1</literal></expr>]</index></name><operator pos:start="195:118" pos:end="195:118">/</operator><name pos:start="195:119" pos:end="195:125">closest</name><operator pos:start="195:126" pos:end="195:126">+</operator><literal type="number" pos:start="195:127" pos:end="195:127">1</literal><operator pos:start="195:128" pos:end="195:128">)</operator><operator pos:start="195:129" pos:end="195:129">*</operator><literal type="number" pos:start="195:130" pos:end="195:133">127</literal><operator pos:start="195:133" pos:end="195:133">+</operator><name pos:start="195:134" pos:end="195:135">dv</name></expr></argument>)</argument_list></call><operator pos:start="195:137" pos:end="195:137">*</operator><literal type="number" pos:start="195:138" pos:end="195:140">256</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:28"><expr pos:start="201:13" pos:end="201:27"><name pos:start="201:13" pos:end="201:13">c</name> <operator pos:start="201:15" pos:end="201:16">|=</operator> <literal type="number" pos:start="201:18" pos:end="201:27">0xFF000000</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:37"><expr pos:start="203:13" pos:end="203:36"><name pos:start="203:13" pos:end="203:33"><name pos:start="203:13" pos:end="203:17">color</name><index pos:start="203:18" pos:end="203:33">[<expr pos:start="203:19" pos:end="203:32"><name pos:start="203:19" pos:end="203:19">x</name> <operator pos:start="203:21" pos:end="203:21">+</operator> <name pos:start="203:23" pos:end="203:23">y</name><operator pos:start="203:24" pos:end="203:24">*</operator><name pos:start="203:25" pos:end="203:32">linesize</name></expr>]</index></name><operator pos:start="203:34" pos:end="203:34">=</operator> <name pos:start="203:36" pos:end="203:36">c</name></expr>;</expr_stmt>

            <if_stmt pos:start="205:13" pos:end="213:13"><if pos:start="205:13" pos:end="213:13">if<condition pos:start="205:15" pos:end="205:47">(<expr pos:start="205:16" pos:end="205:46"><name pos:start="205:16" pos:end="205:24">next_cidx</name> <operator pos:start="205:26" pos:end="205:26">&lt;</operator> <name pos:start="205:28" pos:end="205:46"><name pos:start="205:28" pos:end="205:29">mb</name><operator pos:start="205:30" pos:end="205:31">-&gt;</operator><name pos:start="205:32" pos:end="205:46">cache_allocated</name></name></expr>)</condition><block pos:start="205:48" pos:end="213:13">{<block_content pos:start="207:17" pos:end="211:52">

                <expr_stmt pos:start="207:17" pos:end="207:53"><expr pos:start="207:17" pos:end="207:52"><name pos:start="207:17" pos:end="207:43"><name pos:start="207:17" pos:end="207:18">mb</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:30">next_cache</name><index pos:start="207:31" pos:end="207:43">[<expr pos:start="207:32" pos:end="207:40"><name pos:start="207:32" pos:end="207:40">next_cidx</name></expr>  ]</index></name><operator pos:start="207:44" pos:end="207:44">.</operator><name pos:start="207:45" pos:end="207:48"><name pos:start="207:45" pos:end="207:45">p</name><index pos:start="207:46" pos:end="207:48">[<expr pos:start="207:47" pos:end="207:47"><literal type="number" pos:start="207:47" pos:end="207:47">0</literal></expr>]</index></name><operator pos:start="207:49" pos:end="207:49">=</operator> <name pos:start="207:51" pos:end="207:52">cr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:53"><expr pos:start="209:17" pos:end="209:52"><name pos:start="209:17" pos:end="209:43"><name pos:start="209:17" pos:end="209:18">mb</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:30">next_cache</name><index pos:start="209:31" pos:end="209:43">[<expr pos:start="209:32" pos:end="209:40"><name pos:start="209:32" pos:end="209:40">next_cidx</name></expr>  ]</index></name><operator pos:start="209:44" pos:end="209:44">.</operator><name pos:start="209:45" pos:end="209:48"><name pos:start="209:45" pos:end="209:45">p</name><index pos:start="209:46" pos:end="209:48">[<expr pos:start="209:47" pos:end="209:47"><literal type="number" pos:start="209:47" pos:end="209:47">1</literal></expr>]</index></name><operator pos:start="209:49" pos:end="209:49">=</operator> <name pos:start="209:51" pos:end="209:52">ci</name></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:52"><expr pos:start="211:17" pos:end="211:51"><name pos:start="211:17" pos:end="211:43"><name pos:start="211:17" pos:end="211:18">mb</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:30">next_cache</name><index pos:start="211:31" pos:end="211:43">[<expr pos:start="211:32" pos:end="211:42"><name pos:start="211:32" pos:end="211:40">next_cidx</name><operator pos:start="211:41" pos:end="211:42">++</operator></expr>]</index></name><operator pos:start="211:44" pos:end="211:44">.</operator><name pos:start="211:45" pos:end="211:47">val</name> <operator pos:start="211:49" pos:end="211:49">=</operator> <name pos:start="211:51" pos:end="211:51">c</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="217:9" pos:end="217:78"><expr pos:start="217:9" pos:end="217:77"><call pos:start="217:9" pos:end="217:77"><name pos:start="217:9" pos:end="217:23">fill_from_cache</name><argument_list pos:start="217:24" pos:end="217:77">(<argument pos:start="217:25" pos:end="217:27"><expr pos:start="217:25" pos:end="217:27"><name pos:start="217:25" pos:end="217:27">ctx</name></expr></argument>, <argument pos:start="217:30" pos:end="217:33"><expr pos:start="217:30" pos:end="217:33"><name pos:start="217:30" pos:end="217:33">NULL</name></expr></argument>, <argument pos:start="217:36" pos:end="217:43"><expr pos:start="217:36" pos:end="217:43"><operator pos:start="217:36" pos:end="217:36">&amp;</operator><name pos:start="217:37" pos:end="217:43">in_cidx</name></expr></argument>, <argument pos:start="217:46" pos:end="217:55"><expr pos:start="217:46" pos:end="217:55"><operator pos:start="217:46" pos:end="217:46">&amp;</operator><name pos:start="217:47" pos:end="217:55">next_cidx</name></expr></argument>, <argument pos:start="217:58" pos:end="217:69"><expr pos:start="217:58" pos:end="217:69"><name pos:start="217:58" pos:end="217:59">ci</name> <operator pos:start="217:61" pos:end="217:61">+</operator> <name pos:start="217:63" pos:end="217:67">scale</name><operator pos:start="217:68" pos:end="217:68">/</operator><literal type="number" pos:start="217:69" pos:end="217:69">2</literal></expr></argument>, <argument pos:start="217:72" pos:end="217:76"><expr pos:start="217:72" pos:end="217:76"><name pos:start="217:72" pos:end="217:76">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="221:5" pos:end="221:51"><expr pos:start="221:5" pos:end="221:50"><call pos:start="221:5" pos:end="221:50"><name pos:start="221:5" pos:end="221:10">FFSWAP</name><argument_list pos:start="221:11" pos:end="221:50">(<argument pos:start="221:12" pos:end="221:16"><expr pos:start="221:12" pos:end="221:16"><name pos:start="221:12" pos:end="221:15">void</name><operator pos:start="221:16" pos:end="221:16">*</operator></expr></argument>, <argument pos:start="221:19" pos:end="221:32"><expr pos:start="221:19" pos:end="221:32"><name pos:start="221:19" pos:end="221:32"><name pos:start="221:19" pos:end="221:20">mb</name><operator pos:start="221:21" pos:end="221:22">-&gt;</operator><name pos:start="221:23" pos:end="221:32">next_cache</name></name></expr></argument>, <argument pos:start="221:35" pos:end="221:49"><expr pos:start="221:35" pos:end="221:49"><name pos:start="221:35" pos:end="221:49"><name pos:start="221:35" pos:end="221:36">mb</name><operator pos:start="221:37" pos:end="221:38">-&gt;</operator><name pos:start="221:39" pos:end="221:49">point_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:31"><expr pos:start="223:5" pos:end="223:30"><name pos:start="223:5" pos:end="223:18"><name pos:start="223:5" pos:end="223:6">mb</name><operator pos:start="223:7" pos:end="223:8">-&gt;</operator><name pos:start="223:9" pos:end="223:18">cache_used</name></name> <operator pos:start="223:20" pos:end="223:20">=</operator> <name pos:start="223:22" pos:end="223:30">next_cidx</name></expr>;</expr_stmt>

    <if_stmt pos:start="225:5" pos:end="227:67"><if pos:start="225:5" pos:end="227:67">if<condition pos:start="225:7" pos:end="225:45">(<expr pos:start="225:8" pos:end="225:44"><name pos:start="225:8" pos:end="225:21"><name pos:start="225:8" pos:end="225:9">mb</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:21">cache_used</name></name> <operator pos:start="225:23" pos:end="225:24">==</operator> <name pos:start="225:26" pos:end="225:44"><name pos:start="225:26" pos:end="225:27">mb</name><operator pos:start="225:28" pos:end="225:29">-&gt;</operator><name pos:start="225:30" pos:end="225:44">cache_allocated</name></name></expr>)</condition><block type="pseudo" pos:start="227:9" pos:end="227:67"><block_content pos:start="227:9" pos:end="227:67">

        <expr_stmt pos:start="227:9" pos:end="227:67"><expr pos:start="227:9" pos:end="227:66"><call pos:start="227:9" pos:end="227:66"><name pos:start="227:9" pos:end="227:14">av_log</name><argument_list pos:start="227:15" pos:end="227:66">(<argument pos:start="227:16" pos:end="227:16"><expr pos:start="227:16" pos:end="227:16"><literal type="number" pos:start="227:16" pos:end="227:16">0</literal></expr></argument>, <argument pos:start="227:19" pos:end="227:29"><expr pos:start="227:19" pos:end="227:29"><name pos:start="227:19" pos:end="227:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="227:32" pos:end="227:65"><expr pos:start="227:32" pos:end="227:65"><literal type="string" pos:start="227:32" pos:end="227:65">"Mandelbrot cache is too small!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
