<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6096.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">megasas_dcmd_ld_get_list</name><parameter_list pos:start="1:36" pos:end="1:69">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><name pos:start="1:37" pos:end="1:48">MegasasState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:63">MegasasCmd</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:23">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:22">mfi_ld_list</name></name></type> <name pos:start="5:24" pos:end="5:27">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:20">dcmd_size</name> <init pos:start="7:22" pos:end="7:35">= <expr pos:start="7:24" pos:end="7:35"><sizeof pos:start="7:24" pos:end="7:35">sizeof<argument_list pos:start="7:30" pos:end="7:35">(<argument pos:start="7:31" pos:end="7:34"><expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">info</name></expr></argument>)</argument_list></sizeof></expr></init></decl>, <decl pos:start="7:38" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:38" pos:end="7:42">resid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:25">num_ld_disks</name> <init pos:start="9:27" pos:end="9:29">= <expr pos:start="9:29" pos:end="9:29"><literal type="number" pos:start="9:29" pos:end="9:29">0</literal></expr></init></decl>, <decl pos:start="9:32" pos:end="9:56"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:32" pos:end="9:43">max_ld_disks</name> <init pos:start="9:45" pos:end="9:56">= <expr pos:start="9:47" pos:end="9:56"><name pos:start="9:47" pos:end="9:56"><name pos:start="9:47" pos:end="9:47">s</name><operator pos:start="9:48" pos:end="9:49">-&gt;</operator><name pos:start="9:50" pos:end="9:56">fw_luns</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:20">ld_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">BusChild</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:17">kid</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><call pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:31">(<argument pos:start="17:12" pos:end="17:16"><expr pos:start="17:12" pos:end="17:16"><operator pos:start="17:12" pos:end="17:12">&amp;</operator><name pos:start="17:13" pos:end="17:16">info</name></expr></argument>, <argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr></argument>, <argument pos:start="17:22" pos:end="17:30"><expr pos:start="17:22" pos:end="17:30"><name pos:start="17:22" pos:end="17:30">dcmd_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:34">(<expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:11">cmd</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:21">iov_size</name></name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:33">dcmd_size</name></expr>)</condition> <block pos:start="19:36" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:42">

        <expr_stmt pos:start="21:9" pos:end="23:55"><expr pos:start="21:9" pos:end="23:54"><call pos:start="21:9" pos:end="23:54"><name pos:start="21:9" pos:end="21:43">trace_megasas_dcmd_invalid_xfer_len</name><argument_list pos:start="21:44" pos:end="23:54">(<argument pos:start="21:45" pos:end="21:54"><expr pos:start="21:45" pos:end="21:54"><name pos:start="21:45" pos:end="21:54"><name pos:start="21:45" pos:end="21:47">cmd</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:54">index</name></name></expr></argument>, <argument pos:start="21:57" pos:end="21:69"><expr pos:start="21:57" pos:end="21:69"><name pos:start="21:57" pos:end="21:69"><name pos:start="21:57" pos:end="21:59">cmd</name><operator pos:start="21:60" pos:end="21:61">-&gt;</operator><name pos:start="21:62" pos:end="21:69">iov_size</name></name></expr></argument>,

                                            <argument pos:start="23:45" pos:end="23:53"><expr pos:start="23:45" pos:end="23:53"><name pos:start="23:45" pos:end="23:53">dcmd_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:42">return <expr pos:start="25:16" pos:end="25:41"><name pos:start="25:16" pos:end="25:41">MFI_STAT_INVALID_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:27">(<expr pos:start="31:9" pos:end="31:26"><call pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:23">megasas_is_jbod</name><argument_list pos:start="31:24" pos:end="31:26">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:29" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:25">

        <expr_stmt pos:start="33:9" pos:end="33:25"><expr pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:20">max_ld_disks</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <macro pos:start="37:5" pos:end="37:55"><name pos:start="37:5" pos:end="37:18">QTAILQ_FOREACH</name><argument_list pos:start="37:19" pos:end="37:55">(<argument pos:start="37:20" pos:end="37:22">kid</argument>, <argument pos:start="37:25" pos:end="37:45">&amp;s-&gt;bus.qbus.children</argument>, <argument pos:start="37:48" pos:end="37:54">sibling</argument>)</argument_list></macro> <block pos:start="37:57" pos:end="65:5">{<block_content pos:start="39:9" pos:end="63:23">

        <decl_stmt pos:start="39:9" pos:end="39:67"><decl pos:start="39:9" pos:end="39:66"><type pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:18">SCSIDevice</name> <modifier pos:start="39:20" pos:end="39:20">*</modifier></type><name pos:start="39:21" pos:end="39:24">sdev</name> <init pos:start="39:26" pos:end="39:66">= <expr pos:start="39:28" pos:end="39:66"><call pos:start="39:28" pos:end="39:66"><name pos:start="39:28" pos:end="39:36">DO_UPCAST</name><argument_list pos:start="39:37" pos:end="39:66">(<argument pos:start="39:38" pos:end="39:47"><expr pos:start="39:38" pos:end="39:47"><name pos:start="39:38" pos:end="39:47">SCSIDevice</name></expr></argument>, <argument pos:start="39:50" pos:end="39:53"><expr pos:start="39:50" pos:end="39:53"><name pos:start="39:50" pos:end="39:53">qdev</name></expr></argument>, <argument pos:start="39:56" pos:end="39:65"><expr pos:start="39:56" pos:end="39:65"><name pos:start="39:56" pos:end="39:65"><name pos:start="39:56" pos:end="39:58">kid</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:65">child</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:38"><decl pos:start="41:9" pos:end="41:37"><type pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:17">BlockConf</name> <modifier pos:start="41:19" pos:end="41:19">*</modifier></type><name pos:start="41:20" pos:end="41:23">conf</name> <init pos:start="41:25" pos:end="41:37">= <expr pos:start="41:27" pos:end="41:37"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:37"><name pos:start="41:28" pos:end="41:31">sdev</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:37">conf</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:41">(<expr pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:24">num_ld_disks</name> <operator pos:start="45:26" pos:end="45:27">&gt;=</operator> <name pos:start="45:29" pos:end="45:40">max_ld_disks</name></expr>)</condition> <block pos:start="45:43" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:18">

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="51:9" pos:end="51:46">/* Logical device size is in blocks */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:46"><expr pos:start="53:9" pos:end="53:45"><call pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:25">bdrv_get_geometry</name><argument_list pos:start="53:26" pos:end="53:45">(<argument pos:start="53:27" pos:end="53:34"><expr pos:start="53:27" pos:end="53:34"><name pos:start="53:27" pos:end="53:34"><name pos:start="53:27" pos:end="53:30">conf</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:34">bs</name></name></expr></argument>, <argument pos:start="53:37" pos:end="53:44"><expr pos:start="53:37" pos:end="53:44"><operator pos:start="53:37" pos:end="53:37">&amp;</operator><name pos:start="53:38" pos:end="53:44">ld_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:61"><expr pos:start="55:9" pos:end="55:60"><name pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:12">info</name><operator pos:start="55:13" pos:end="55:13">.</operator><name pos:start="55:14" pos:end="55:20">ld_list</name><index pos:start="55:21" pos:end="55:34">[<expr pos:start="55:22" pos:end="55:33"><name pos:start="55:22" pos:end="55:33">num_ld_disks</name></expr>]</index></name><operator pos:start="55:35" pos:end="55:35">.</operator><name pos:start="55:36" pos:end="55:49"><name pos:start="55:36" pos:end="55:37">ld</name><operator pos:start="55:38" pos:end="55:38">.</operator><name pos:start="55:39" pos:end="55:39">v</name><operator pos:start="55:40" pos:end="55:40">.</operator><name pos:start="55:41" pos:end="55:49">target_id</name></name> <operator pos:start="55:51" pos:end="55:51">=</operator> <name pos:start="55:53" pos:end="55:60"><name pos:start="55:53" pos:end="55:56">sdev</name><operator pos:start="55:57" pos:end="55:58">-&gt;</operator><name pos:start="55:59" pos:end="55:60">id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:59"><expr pos:start="57:9" pos:end="57:58"><name pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:12">info</name><operator pos:start="57:13" pos:end="57:13">.</operator><name pos:start="57:14" pos:end="57:20">ld_list</name><index pos:start="57:21" pos:end="57:34">[<expr pos:start="57:22" pos:end="57:33"><name pos:start="57:22" pos:end="57:33">num_ld_disks</name></expr>]</index></name><operator pos:start="57:35" pos:end="57:35">.</operator><name pos:start="57:36" pos:end="57:46"><name pos:start="57:36" pos:end="57:37">ld</name><operator pos:start="57:38" pos:end="57:38">.</operator><name pos:start="57:39" pos:end="57:39">v</name><operator pos:start="57:40" pos:end="57:40">.</operator><name pos:start="57:41" pos:end="57:46">lun_id</name></name> <operator pos:start="57:48" pos:end="57:48">=</operator> <name pos:start="57:50" pos:end="57:58"><name pos:start="57:50" pos:end="57:53">sdev</name><operator pos:start="57:54" pos:end="57:55">-&gt;</operator><name pos:start="57:56" pos:end="57:58">lun</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:64"><expr pos:start="59:9" pos:end="59:63"><name pos:start="59:9" pos:end="59:34"><name pos:start="59:9" pos:end="59:12">info</name><operator pos:start="59:13" pos:end="59:13">.</operator><name pos:start="59:14" pos:end="59:20">ld_list</name><index pos:start="59:21" pos:end="59:34">[<expr pos:start="59:22" pos:end="59:33"><name pos:start="59:22" pos:end="59:33">num_ld_disks</name></expr>]</index></name><operator pos:start="59:35" pos:end="59:35">.</operator><name pos:start="59:36" pos:end="59:40">state</name> <operator pos:start="59:42" pos:end="59:42">=</operator> <name pos:start="59:44" pos:end="59:63">MFI_LD_STATE_OPTIMAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:63"><expr pos:start="61:9" pos:end="61:62"><name pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:12">info</name><operator pos:start="61:13" pos:end="61:13">.</operator><name pos:start="61:14" pos:end="61:20">ld_list</name><index pos:start="61:21" pos:end="61:34">[<expr pos:start="61:22" pos:end="61:33"><name pos:start="61:22" pos:end="61:33">num_ld_disks</name></expr>]</index></name><operator pos:start="61:35" pos:end="61:35">.</operator><name pos:start="61:36" pos:end="61:39">size</name> <operator pos:start="61:41" pos:end="61:41">=</operator> <call pos:start="61:43" pos:end="61:62"><name pos:start="61:43" pos:end="61:53">cpu_to_le64</name><argument_list pos:start="61:54" pos:end="61:62">(<argument pos:start="61:55" pos:end="61:61"><expr pos:start="61:55" pos:end="61:61"><name pos:start="61:55" pos:end="61:61">ld_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:23"><expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:20">num_ld_disks</name><operator pos:start="63:21" pos:end="63:22">++</operator></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="67:5" pos:end="67:46"><expr pos:start="67:5" pos:end="67:45"><name pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:8">info</name><operator pos:start="67:9" pos:end="67:9">.</operator><name pos:start="67:10" pos:end="67:17">ld_count</name></name> <operator pos:start="67:19" pos:end="67:19">=</operator> <call pos:start="67:21" pos:end="67:45"><name pos:start="67:21" pos:end="67:31">cpu_to_le32</name><argument_list pos:start="67:32" pos:end="67:45">(<argument pos:start="67:33" pos:end="67:44"><expr pos:start="67:33" pos:end="67:44"><name pos:start="67:33" pos:end="67:44">num_ld_disks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:75"><expr pos:start="69:5" pos:end="69:74"><call pos:start="69:5" pos:end="69:74"><name pos:start="69:5" pos:end="69:34">trace_megasas_dcmd_ld_get_list</name><argument_list pos:start="69:35" pos:end="69:74">(<argument pos:start="69:36" pos:end="69:45"><expr pos:start="69:36" pos:end="69:45"><name pos:start="69:36" pos:end="69:45"><name pos:start="69:36" pos:end="69:38">cmd</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:45">index</name></name></expr></argument>, <argument pos:start="69:48" pos:end="69:59"><expr pos:start="69:48" pos:end="69:59"><name pos:start="69:48" pos:end="69:59">num_ld_disks</name></expr></argument>, <argument pos:start="69:62" pos:end="69:73"><expr pos:start="69:62" pos:end="69:73"><name pos:start="69:62" pos:end="69:73">max_ld_disks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:65"><expr pos:start="73:5" pos:end="73:64"><name pos:start="73:5" pos:end="73:9">resid</name> <operator pos:start="73:11" pos:end="73:11">=</operator> <call pos:start="73:13" pos:end="73:64"><name pos:start="73:13" pos:end="73:24">dma_buf_read</name><argument_list pos:start="73:25" pos:end="73:64">(<argument pos:start="73:26" pos:end="73:41"><expr pos:start="73:26" pos:end="73:41"><operator pos:start="73:26" pos:end="73:26">(</operator><name pos:start="73:27" pos:end="73:33">uint8_t</name> <operator pos:start="73:35" pos:end="73:35">*</operator><operator pos:start="73:36" pos:end="73:36">)</operator><operator pos:start="73:37" pos:end="73:37">&amp;</operator><name pos:start="73:38" pos:end="73:41">info</name></expr></argument>, <argument pos:start="73:44" pos:end="73:52"><expr pos:start="73:44" pos:end="73:52"><name pos:start="73:44" pos:end="73:52">dcmd_size</name></expr></argument>, <argument pos:start="73:55" pos:end="73:63"><expr pos:start="73:55" pos:end="73:63"><operator pos:start="73:55" pos:end="73:55">&amp;</operator><name pos:start="73:56" pos:end="73:63"><name pos:start="73:56" pos:end="73:58">cmd</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:63">qsg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:38"><expr pos:start="75:5" pos:end="75:37"><name pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:7">cmd</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:17">iov_size</name></name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:29">dcmd_size</name> <operator pos:start="75:31" pos:end="75:31">-</operator> <name pos:start="75:33" pos:end="75:37">resid</name></expr>;</expr_stmt>

    <return pos:start="77:5" pos:end="77:23">return <expr pos:start="77:12" pos:end="77:22"><name pos:start="77:12" pos:end="77:22">MFI_STAT_OK</name></expr>;</return>

</block_content>}</block></function>
</unit>
