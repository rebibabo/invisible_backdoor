<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19163.c" pos:tabs="8"><function pos:start="1:1" pos:end="211:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:6">PCIBus</name> <modifier pos:start="1:8" pos:end="1:8">*</modifier></type><name pos:start="1:9" pos:end="1:19">i440fx_init</name><parameter_list pos:start="1:20" pos:end="21:45">(<parameter pos:start="1:21" pos:end="1:50"><decl pos:start="1:21" pos:end="1:50"><type pos:start="1:21" pos:end="1:50"><name pos:start="1:21" pos:end="1:34">PCII440FXState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier><modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:50">pi440fx_state</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:36"><decl pos:start="3:21" pos:end="3:36"><type pos:start="3:21" pos:end="3:36"><name pos:start="3:21" pos:end="3:23">int</name> <modifier pos:start="3:25" pos:end="3:25">*</modifier></type><name pos:start="3:26" pos:end="3:36">piix3_devfn</name></decl></parameter>,

                    <parameter pos:start="5:21" pos:end="5:36"><decl pos:start="5:21" pos:end="5:36"><type pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:26">ISABus</name> <modifier pos:start="5:28" pos:end="5:28">*</modifier><modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:36">isa_bus</name></decl></parameter>, <parameter pos:start="5:39" pos:end="5:51"><decl pos:start="5:39" pos:end="5:51"><type pos:start="5:39" pos:end="5:51"><name pos:start="5:39" pos:end="5:46">qemu_irq</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:51">pic</name></decl></parameter>,

                    <parameter pos:start="7:21" pos:end="7:51"><decl pos:start="7:21" pos:end="7:51"><type pos:start="7:21" pos:end="7:51"><name pos:start="7:21" pos:end="7:32">MemoryRegion</name> <modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:51">address_space_mem</name></decl></parameter>,

                    <parameter pos:start="9:21" pos:end="9:50"><decl pos:start="9:21" pos:end="9:50"><type pos:start="9:21" pos:end="9:50"><name pos:start="9:21" pos:end="9:32">MemoryRegion</name> <modifier pos:start="9:34" pos:end="9:34">*</modifier></type><name pos:start="9:35" pos:end="9:50">address_space_io</name></decl></parameter>,

                    <parameter pos:start="11:21" pos:end="11:39"><decl pos:start="11:21" pos:end="11:39"><type pos:start="11:21" pos:end="11:39"><name pos:start="11:21" pos:end="11:30">ram_addr_t</name></type> <name pos:start="11:32" pos:end="11:39">ram_size</name></decl></parameter>,

                    <parameter pos:start="13:21" pos:end="13:41"><decl pos:start="13:21" pos:end="13:41"><type pos:start="13:21" pos:end="13:41"><name pos:start="13:21" pos:end="13:26">hwaddr</name></type> <name pos:start="13:28" pos:end="13:41">pci_hole_start</name></decl></parameter>,

                    <parameter pos:start="15:21" pos:end="15:40"><decl pos:start="15:21" pos:end="15:40"><type pos:start="15:21" pos:end="15:40"><name pos:start="15:21" pos:end="15:26">hwaddr</name></type> <name pos:start="15:28" pos:end="15:40">pci_hole_size</name></decl></parameter>,

                    <parameter pos:start="17:21" pos:end="17:48"><decl pos:start="17:21" pos:end="17:48"><type pos:start="17:21" pos:end="17:48"><name pos:start="17:21" pos:end="17:30">ram_addr_t</name></type> <name pos:start="17:32" pos:end="17:48">above_4g_mem_size</name></decl></parameter>,

                    <parameter pos:start="19:21" pos:end="19:51"><decl pos:start="19:21" pos:end="19:51"><type pos:start="19:21" pos:end="19:51"><name pos:start="19:21" pos:end="19:32">MemoryRegion</name> <modifier pos:start="19:34" pos:end="19:34">*</modifier></type><name pos:start="19:35" pos:end="19:51">pci_address_space</name></decl></parameter>,

                    <parameter pos:start="21:21" pos:end="21:44"><decl pos:start="21:21" pos:end="21:44"><type pos:start="21:21" pos:end="21:44"><name pos:start="21:21" pos:end="21:32">MemoryRegion</name> <modifier pos:start="21:34" pos:end="21:34">*</modifier></type><name pos:start="21:35" pos:end="21:44">ram_memory</name></decl></parameter>)</parameter_list>

<block pos:start="23:1" pos:end="211:1">{<block_content pos:start="25:5" pos:end="209:13">

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:15">DeviceState</name> <modifier pos:start="25:17" pos:end="25:17">*</modifier></type><name pos:start="25:18" pos:end="25:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:14"><decl pos:start="27:5" pos:end="27:13"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:10">PCIBus</name> <modifier pos:start="27:12" pos:end="27:12">*</modifier></type><name pos:start="27:13" pos:end="27:13">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:17"><decl pos:start="29:5" pos:end="29:16"><type pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:13">PCIDevice</name> <modifier pos:start="29:15" pos:end="29:15">*</modifier></type><name pos:start="29:16" pos:end="29:16">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:20"><decl pos:start="31:5" pos:end="31:19"><type pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:16">PCIHostState</name> <modifier pos:start="31:18" pos:end="31:18">*</modifier></type><name pos:start="31:19" pos:end="31:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:22"><decl pos:start="33:5" pos:end="33:21"><type pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:14">PIIX3State</name> <modifier pos:start="33:16" pos:end="33:16">*</modifier></type><name pos:start="33:17" pos:end="33:21">piix3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:22"><decl pos:start="35:5" pos:end="35:21"><type pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:18">PCII440FXState</name> <modifier pos:start="35:20" pos:end="35:20">*</modifier></type><name pos:start="35:21" pos:end="35:21">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:15"><decl pos:start="37:5" pos:end="37:14"><type pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:12">unsigned</name></type> <name pos:start="37:14" pos:end="37:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:24"><decl pos:start="39:5" pos:end="39:23"><type pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:15">I440FXState</name> <modifier pos:start="39:17" pos:end="39:17">*</modifier></type><name pos:start="39:18" pos:end="39:23">i440fx</name></decl>;</decl_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:7">dev</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:56"><name pos:start="43:11" pos:end="43:21">qdev_create</name><argument_list pos:start="43:22" pos:end="43:56">(<argument pos:start="43:23" pos:end="43:26"><expr pos:start="43:23" pos:end="43:26"><name pos:start="43:23" pos:end="43:26">NULL</name></expr></argument>, <argument pos:start="43:29" pos:end="43:55"><expr pos:start="43:29" pos:end="43:55"><name pos:start="43:29" pos:end="43:55">TYPE_I440FX_PCI_HOST_BRIDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:5">s</name> <operator pos:start="45:7" pos:end="45:7">=</operator> <call pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:23">PCI_HOST_BRIDGE</name><argument_list pos:start="45:24" pos:end="45:28">(<argument pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:27">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="49:55"><expr pos:start="47:5" pos:end="49:54"><name pos:start="47:5" pos:end="47:5">b</name> <operator pos:start="47:7" pos:end="47:7">=</operator> <call pos:start="47:9" pos:end="49:54"><name pos:start="47:9" pos:end="47:19">pci_bus_new</name><argument_list pos:start="47:20" pos:end="49:54">(<argument pos:start="47:21" pos:end="47:23"><expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">dev</name></expr></argument>, <argument pos:start="47:26" pos:end="47:29"><expr pos:start="47:26" pos:end="47:29"><name pos:start="47:26" pos:end="47:29">NULL</name></expr></argument>, <argument pos:start="47:32" pos:end="47:48"><expr pos:start="47:32" pos:end="47:48"><name pos:start="47:32" pos:end="47:48">pci_address_space</name></expr></argument>,

                    <argument pos:start="49:21" pos:end="49:36"><expr pos:start="49:21" pos:end="49:36"><name pos:start="49:21" pos:end="49:36">address_space_io</name></expr></argument>, <argument pos:start="49:39" pos:end="49:39"><expr pos:start="49:39" pos:end="49:39"><literal type="number" pos:start="49:39" pos:end="49:39">0</literal></expr></argument>, <argument pos:start="49:42" pos:end="49:53"><expr pos:start="49:42" pos:end="49:53"><name pos:start="49:42" pos:end="49:53">TYPE_PCI_BUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:15"><expr pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:10"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:10">bus</name></name> <operator pos:start="51:12" pos:end="51:12">=</operator> <name pos:start="51:14" pos:end="51:14">b</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:79"><expr pos:start="53:5" pos:end="53:78"><call pos:start="53:5" pos:end="53:78"><name pos:start="53:5" pos:end="53:29">object_property_add_child</name><argument_list pos:start="53:30" pos:end="53:78">(<argument pos:start="53:31" pos:end="53:48"><expr pos:start="53:31" pos:end="53:48"><call pos:start="53:31" pos:end="53:48"><name pos:start="53:31" pos:end="53:46">qdev_get_machine</name><argument_list pos:start="53:47" pos:end="53:48">()</argument_list></call></expr></argument>, <argument pos:start="53:51" pos:end="53:58"><expr pos:start="53:51" pos:end="53:58"><literal type="string" pos:start="53:51" pos:end="53:58">"i440fx"</literal></expr></argument>, <argument pos:start="53:61" pos:end="53:71"><expr pos:start="53:61" pos:end="53:71"><call pos:start="53:61" pos:end="53:71"><name pos:start="53:61" pos:end="53:66">OBJECT</name><argument_list pos:start="53:67" pos:end="53:71">(<argument pos:start="53:68" pos:end="53:70"><expr pos:start="53:68" pos:end="53:70"><name pos:start="53:68" pos:end="53:70">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:74" pos:end="53:77"><expr pos:start="53:74" pos:end="53:77"><name pos:start="53:74" pos:end="53:77">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><call pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:20">qdev_init_nofail</name><argument_list pos:start="55:21" pos:end="55:25">(<argument pos:start="55:22" pos:end="55:24"><expr pos:start="55:22" pos:end="55:24"><name pos:start="55:22" pos:end="55:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:56"><expr pos:start="59:5" pos:end="59:55"><name pos:start="59:5" pos:end="59:5">d</name> <operator pos:start="59:7" pos:end="59:7">=</operator> <call pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:25">pci_create_simple</name><argument_list pos:start="59:26" pos:end="59:55">(<argument pos:start="59:27" pos:end="59:27"><expr pos:start="59:27" pos:end="59:27"><name pos:start="59:27" pos:end="59:27">b</name></expr></argument>, <argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><literal type="number" pos:start="59:30" pos:end="59:30">0</literal></expr></argument>, <argument pos:start="59:33" pos:end="59:54"><expr pos:start="59:33" pos:end="59:54"><name pos:start="59:33" pos:end="59:54">TYPE_I440FX_PCI_DEVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:42"><expr pos:start="61:5" pos:end="61:41"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:18">pi440fx_state</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <call pos:start="61:22" pos:end="61:41"><name pos:start="61:22" pos:end="61:38">I440FX_PCI_DEVICE</name><argument_list pos:start="61:39" pos:end="61:41">(<argument pos:start="61:40" pos:end="61:40"><expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:23"><expr pos:start="63:5" pos:end="63:22"><name pos:start="63:5" pos:end="63:5">f</name> <operator pos:start="63:7" pos:end="63:7">=</operator> <operator pos:start="63:9" pos:end="63:9">*</operator><name pos:start="63:10" pos:end="63:22">pi440fx_state</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:41"><expr pos:start="65:5" pos:end="65:40"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:5">f</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:20">system_memory</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:40">address_space_mem</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:45"><expr pos:start="67:5" pos:end="67:44"><name pos:start="67:5" pos:end="67:24"><name pos:start="67:5" pos:end="67:5">f</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:24">pci_address_space</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:44">pci_address_space</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:5">f</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:17">ram_memory</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:30">ram_memory</name></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:41"><expr pos:start="73:5" pos:end="73:40"><name pos:start="73:5" pos:end="73:10">i440fx</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <call pos:start="73:14" pos:end="73:40"><name pos:start="73:14" pos:end="73:35">I440FX_PCI_HOST_BRIDGE</name><argument_list pos:start="73:36" pos:end="73:40">(<argument pos:start="73:37" pos:end="73:39"><expr pos:start="73:37" pos:end="73:39"><name pos:start="73:37" pos:end="73:39">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="75:5" pos:end="75:65">/* Set PCI window size the way seabios has always done it. */</comment>

    <comment type="block" pos:start="77:5" pos:end="77:60">/* Power of 2 so bios can cover it with a single MTRR */</comment>

    <if_stmt pos:start="79:5" pos:end="91:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:31">(<expr pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:16">ram_size</name> <operator pos:start="79:18" pos:end="79:19">&lt;=</operator> <literal type="number" pos:start="79:21" pos:end="79:30">0x80000000</literal></expr>)</condition> <block pos:start="79:33" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:48">

        <expr_stmt pos:start="81:9" pos:end="81:48"><expr pos:start="81:9" pos:end="81:47"><name pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:14">i440fx</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:24">pci_info</name><operator pos:start="81:25" pos:end="81:25">.</operator><name pos:start="81:26" pos:end="81:28">w32</name><operator pos:start="81:29" pos:end="81:29">.</operator><name pos:start="81:30" pos:end="81:34">begin</name></name> <operator pos:start="81:36" pos:end="81:36">=</operator> <literal type="number" pos:start="81:38" pos:end="81:47">0x80000000</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="83:7" pos:end="87:5">else if <condition pos:start="83:15" pos:end="83:38">(<expr pos:start="83:16" pos:end="83:37"><name pos:start="83:16" pos:end="83:23">ram_size</name> <operator pos:start="83:25" pos:end="83:26">&lt;=</operator> <literal type="number" pos:start="83:28" pos:end="83:37">0xc0000000</literal></expr>)</condition> <block pos:start="83:40" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:48">

        <expr_stmt pos:start="85:9" pos:end="85:48"><expr pos:start="85:9" pos:end="85:47"><name pos:start="85:9" pos:end="85:34"><name pos:start="85:9" pos:end="85:14">i440fx</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:24">pci_info</name><operator pos:start="85:25" pos:end="85:25">.</operator><name pos:start="85:26" pos:end="85:28">w32</name><operator pos:start="85:29" pos:end="85:29">.</operator><name pos:start="85:30" pos:end="85:34">begin</name></name> <operator pos:start="85:36" pos:end="85:36">=</operator> <literal type="number" pos:start="85:38" pos:end="85:47">0xc0000000</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="91:5">else <block pos:start="87:12" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:48">

        <expr_stmt pos:start="89:9" pos:end="89:48"><expr pos:start="89:9" pos:end="89:47"><name pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:14">i440fx</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:24">pci_info</name><operator pos:start="89:25" pos:end="89:25">.</operator><name pos:start="89:26" pos:end="89:28">w32</name><operator pos:start="89:29" pos:end="89:29">.</operator><name pos:start="89:30" pos:end="89:34">begin</name></name> <operator pos:start="89:36" pos:end="89:36">=</operator> <literal type="number" pos:start="89:38" pos:end="89:47">0xe0000000</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="97:60"><expr pos:start="95:5" pos:end="97:59"><call pos:start="95:5" pos:end="97:59"><name pos:start="95:5" pos:end="95:28">memory_region_init_alias</name><argument_list pos:start="95:29" pos:end="97:59">(<argument pos:start="95:30" pos:end="95:41"><expr pos:start="95:30" pos:end="95:41"><operator pos:start="95:30" pos:end="95:30">&amp;</operator><name pos:start="95:31" pos:end="95:41"><name pos:start="95:31" pos:end="95:31">f</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:41">pci_hole</name></name></expr></argument>, <argument pos:start="95:44" pos:end="95:52"><expr pos:start="95:44" pos:end="95:52"><call pos:start="95:44" pos:end="95:52"><name pos:start="95:44" pos:end="95:49">OBJECT</name><argument_list pos:start="95:50" pos:end="95:52">(<argument pos:start="95:51" pos:end="95:51"><expr pos:start="95:51" pos:end="95:51"><name pos:start="95:51" pos:end="95:51">d</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:55" pos:end="95:64"><expr pos:start="95:55" pos:end="95:64"><literal type="string" pos:start="95:55" pos:end="95:64">"pci-hole"</literal></expr></argument>, <argument pos:start="95:67" pos:end="95:86"><expr pos:start="95:67" pos:end="95:86"><name pos:start="95:67" pos:end="95:86"><name pos:start="95:67" pos:end="95:67">f</name><operator pos:start="95:68" pos:end="95:69">-&gt;</operator><name pos:start="95:70" pos:end="95:86">pci_address_space</name></name></expr></argument>,

                             <argument pos:start="97:30" pos:end="97:43"><expr pos:start="97:30" pos:end="97:43"><name pos:start="97:30" pos:end="97:43">pci_hole_start</name></expr></argument>, <argument pos:start="97:46" pos:end="97:58"><expr pos:start="97:46" pos:end="97:58"><name pos:start="97:46" pos:end="97:58">pci_hole_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:80"><expr pos:start="99:5" pos:end="99:79"><call pos:start="99:5" pos:end="99:79"><name pos:start="99:5" pos:end="99:31">memory_region_add_subregion</name><argument_list pos:start="99:32" pos:end="99:79">(<argument pos:start="99:33" pos:end="99:48"><expr pos:start="99:33" pos:end="99:48"><name pos:start="99:33" pos:end="99:48"><name pos:start="99:33" pos:end="99:33">f</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:48">system_memory</name></name></expr></argument>, <argument pos:start="99:51" pos:end="99:64"><expr pos:start="99:51" pos:end="99:64"><name pos:start="99:51" pos:end="99:64">pci_hole_start</name></expr></argument>, <argument pos:start="99:67" pos:end="99:78"><expr pos:start="99:67" pos:end="99:78"><operator pos:start="99:67" pos:end="99:67">&amp;</operator><name pos:start="99:68" pos:end="99:78"><name pos:start="99:68" pos:end="99:68">f</name><operator pos:start="99:69" pos:end="99:70">-&gt;</operator><name pos:start="99:71" pos:end="99:78">pci_hole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="105:48"><expr pos:start="103:5" pos:end="105:47"><call pos:start="103:5" pos:end="105:47"><name pos:start="103:5" pos:end="103:22">pc_init_pci64_hole</name><argument_list pos:start="103:23" pos:end="105:47">(<argument pos:start="103:24" pos:end="103:40"><expr pos:start="103:24" pos:end="103:40"><operator pos:start="103:24" pos:end="103:24">&amp;</operator><name pos:start="103:25" pos:end="103:40"><name pos:start="103:25" pos:end="103:30">i440fx</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:40">pci_info</name></name></expr></argument>, <argument pos:start="103:43" pos:end="103:76"><expr pos:start="103:43" pos:end="103:76"><literal type="number" pos:start="103:43" pos:end="103:58">0x100000000ULL</literal> <operator pos:start="103:58" pos:end="103:58">+</operator> <name pos:start="103:60" pos:end="103:76">above_4g_mem_size</name></expr></argument>,

                       <argument pos:start="105:24" pos:end="105:46"><expr pos:start="105:24" pos:end="105:46"><name pos:start="105:24" pos:end="105:46"><name pos:start="105:24" pos:end="105:29">i440fx</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:46">pci_hole64_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="113:54"><expr pos:start="107:5" pos:end="113:53"><call pos:start="107:5" pos:end="113:53"><name pos:start="107:5" pos:end="107:28">memory_region_init_alias</name><argument_list pos:start="107:29" pos:end="113:53">(<argument pos:start="107:30" pos:end="107:47"><expr pos:start="107:30" pos:end="107:47"><operator pos:start="107:30" pos:end="107:30">&amp;</operator><name pos:start="107:31" pos:end="107:47"><name pos:start="107:31" pos:end="107:31">f</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:47">pci_hole_64bit</name></name></expr></argument>, <argument pos:start="107:50" pos:end="107:58"><expr pos:start="107:50" pos:end="107:58"><call pos:start="107:50" pos:end="107:58"><name pos:start="107:50" pos:end="107:55">OBJECT</name><argument_list pos:start="107:56" pos:end="107:58">(<argument pos:start="107:57" pos:end="107:57"><expr pos:start="107:57" pos:end="107:57"><name pos:start="107:57" pos:end="107:57">d</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:61" pos:end="107:72"><expr pos:start="107:61" pos:end="107:72"><literal type="string" pos:start="107:61" pos:end="107:72">"pci-hole64"</literal></expr></argument>,

                             <argument pos:start="109:30" pos:end="109:49"><expr pos:start="109:30" pos:end="109:49"><name pos:start="109:30" pos:end="109:49"><name pos:start="109:30" pos:end="109:30">f</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:49">pci_address_space</name></name></expr></argument>,

                             <argument pos:start="111:30" pos:end="111:55"><expr pos:start="111:30" pos:end="111:55"><name pos:start="111:30" pos:end="111:55"><name pos:start="111:30" pos:end="111:35">i440fx</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:45">pci_info</name><operator pos:start="111:46" pos:end="111:46">.</operator><name pos:start="111:47" pos:end="111:49">w64</name><operator pos:start="111:50" pos:end="111:50">.</operator><name pos:start="111:51" pos:end="111:55">begin</name></name></expr></argument>,

                             <argument pos:start="113:30" pos:end="113:52"><expr pos:start="113:30" pos:end="113:52"><name pos:start="113:30" pos:end="113:52"><name pos:start="113:30" pos:end="113:35">i440fx</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:52">pci_hole64_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="123:5"><if pos:start="115:5" pos:end="123:5">if <condition pos:start="115:8" pos:end="115:32">(<expr pos:start="115:9" pos:end="115:31"><name pos:start="115:9" pos:end="115:31"><name pos:start="115:9" pos:end="115:14">i440fx</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:31">pci_hole64_size</name></name></expr>)</condition> <block pos:start="115:34" pos:end="123:5">{<block_content pos:start="117:9" pos:end="121:56">

        <expr_stmt pos:start="117:9" pos:end="121:56"><expr pos:start="117:9" pos:end="121:55"><call pos:start="117:9" pos:end="121:55"><name pos:start="117:9" pos:end="117:35">memory_region_add_subregion</name><argument_list pos:start="117:36" pos:end="121:55">(<argument pos:start="117:37" pos:end="117:52"><expr pos:start="117:37" pos:end="117:52"><name pos:start="117:37" pos:end="117:52"><name pos:start="117:37" pos:end="117:37">f</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:52">system_memory</name></name></expr></argument>,

                                    <argument pos:start="119:37" pos:end="119:62"><expr pos:start="119:37" pos:end="119:62"><name pos:start="119:37" pos:end="119:62"><name pos:start="119:37" pos:end="119:42">i440fx</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:52">pci_info</name><operator pos:start="119:53" pos:end="119:53">.</operator><name pos:start="119:54" pos:end="119:56">w64</name><operator pos:start="119:57" pos:end="119:57">.</operator><name pos:start="119:58" pos:end="119:62">begin</name></name></expr></argument>,

                                    <argument pos:start="121:37" pos:end="121:54"><expr pos:start="121:37" pos:end="121:54"><operator pos:start="121:37" pos:end="121:37">&amp;</operator><name pos:start="121:38" pos:end="121:54"><name pos:start="121:38" pos:end="121:38">f</name><operator pos:start="121:39" pos:end="121:40">-&gt;</operator><name pos:start="121:41" pos:end="121:54">pci_hole_64bit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="125:5" pos:end="127:69"><expr pos:start="125:5" pos:end="127:68"><call pos:start="125:5" pos:end="127:68"><name pos:start="125:5" pos:end="125:28">memory_region_init_alias</name><argument_list pos:start="125:29" pos:end="127:68">(<argument pos:start="125:30" pos:end="125:45"><expr pos:start="125:30" pos:end="125:45"><operator pos:start="125:30" pos:end="125:30">&amp;</operator><name pos:start="125:31" pos:end="125:45"><name pos:start="125:31" pos:end="125:31">f</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:45">smram_region</name></name></expr></argument>, <argument pos:start="125:48" pos:end="125:56"><expr pos:start="125:48" pos:end="125:56"><call pos:start="125:48" pos:end="125:56"><name pos:start="125:48" pos:end="125:53">OBJECT</name><argument_list pos:start="125:54" pos:end="125:56">(<argument pos:start="125:55" pos:end="125:55"><expr pos:start="125:55" pos:end="125:55"><name pos:start="125:55" pos:end="125:55">d</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="125:59" pos:end="125:72"><expr pos:start="125:59" pos:end="125:72"><literal type="string" pos:start="125:59" pos:end="125:72">"smram-region"</literal></expr></argument>,

                             <argument pos:start="127:30" pos:end="127:49"><expr pos:start="127:30" pos:end="127:49"><name pos:start="127:30" pos:end="127:49"><name pos:start="127:30" pos:end="127:30">f</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:49">pci_address_space</name></name></expr></argument>, <argument pos:start="127:52" pos:end="127:58"><expr pos:start="127:52" pos:end="127:58"><literal type="number" pos:start="127:52" pos:end="127:58">0xa0000</literal></expr></argument>, <argument pos:start="127:61" pos:end="127:67"><expr pos:start="127:61" pos:end="127:67"><literal type="number" pos:start="127:61" pos:end="127:67">0x20000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="131:61"><expr pos:start="129:5" pos:end="131:60"><call pos:start="129:5" pos:end="131:60"><name pos:start="129:5" pos:end="129:39">memory_region_add_subregion_overlap</name><argument_list pos:start="129:40" pos:end="131:60">(<argument pos:start="129:41" pos:end="129:56"><expr pos:start="129:41" pos:end="129:56"><name pos:start="129:41" pos:end="129:56"><name pos:start="129:41" pos:end="129:41">f</name><operator pos:start="129:42" pos:end="129:43">-&gt;</operator><name pos:start="129:44" pos:end="129:56">system_memory</name></name></expr></argument>, <argument pos:start="129:59" pos:end="129:65"><expr pos:start="129:59" pos:end="129:65"><literal type="number" pos:start="129:59" pos:end="129:65">0xa0000</literal></expr></argument>,

                                        <argument pos:start="131:41" pos:end="131:56"><expr pos:start="131:41" pos:end="131:56"><operator pos:start="131:41" pos:end="131:41">&amp;</operator><name pos:start="131:42" pos:end="131:56"><name pos:start="131:42" pos:end="131:42">f</name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:56">smram_region</name></name></expr></argument>, <argument pos:start="131:59" pos:end="131:59"><expr pos:start="131:59" pos:end="131:59"><literal type="number" pos:start="131:59" pos:end="131:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:55"><expr pos:start="133:5" pos:end="133:54"><call pos:start="133:5" pos:end="133:54"><name pos:start="133:5" pos:end="133:29">memory_region_set_enabled</name><argument_list pos:start="133:30" pos:end="133:54">(<argument pos:start="133:31" pos:end="133:46"><expr pos:start="133:31" pos:end="133:46"><operator pos:start="133:31" pos:end="133:31">&amp;</operator><name pos:start="133:32" pos:end="133:46"><name pos:start="133:32" pos:end="133:32">f</name><operator pos:start="133:33" pos:end="133:34">-&gt;</operator><name pos:start="133:35" pos:end="133:46">smram_region</name></name></expr></argument>, <argument pos:start="133:49" pos:end="133:53"><expr pos:start="133:49" pos:end="133:53"><name pos:start="133:49" pos:end="133:53">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="137:63"><expr pos:start="135:5" pos:end="137:62"><call pos:start="135:5" pos:end="137:62"><name pos:start="135:5" pos:end="135:12">init_pam</name><argument_list pos:start="135:13" pos:end="137:62">(<argument pos:start="135:14" pos:end="135:16"><expr pos:start="135:14" pos:end="135:16"><name pos:start="135:14" pos:end="135:16">dev</name></expr></argument>, <argument pos:start="135:19" pos:end="135:31"><expr pos:start="135:19" pos:end="135:31"><name pos:start="135:19" pos:end="135:31"><name pos:start="135:19" pos:end="135:19">f</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:31">ram_memory</name></name></expr></argument>, <argument pos:start="135:34" pos:end="135:49"><expr pos:start="135:34" pos:end="135:49"><name pos:start="135:34" pos:end="135:49"><name pos:start="135:34" pos:end="135:34">f</name><operator pos:start="135:35" pos:end="135:36">-&gt;</operator><name pos:start="135:37" pos:end="135:49">system_memory</name></name></expr></argument>, <argument pos:start="135:52" pos:end="135:71"><expr pos:start="135:52" pos:end="135:71"><name pos:start="135:52" pos:end="135:71"><name pos:start="135:52" pos:end="135:52">f</name><operator pos:start="135:53" pos:end="135:54">-&gt;</operator><name pos:start="135:55" pos:end="135:71">pci_address_space</name></name></expr></argument>,

             <argument pos:start="137:14" pos:end="137:31"><expr pos:start="137:14" pos:end="137:31"><operator pos:start="137:14" pos:end="137:14">&amp;</operator><name pos:start="137:15" pos:end="137:31"><name pos:start="137:15" pos:end="137:15">f</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:28">pam_regions</name><index pos:start="137:29" pos:end="137:31">[<expr pos:start="137:30" pos:end="137:30"><literal type="number" pos:start="137:30" pos:end="137:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="137:34" pos:end="137:46"><expr pos:start="137:34" pos:end="137:46"><name pos:start="137:34" pos:end="137:46">PAM_BIOS_BASE</name></expr></argument>, <argument pos:start="137:49" pos:end="137:61"><expr pos:start="137:49" pos:end="137:61"><name pos:start="137:49" pos:end="137:61">PAM_BIOS_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="139:5" pos:end="147:5">for <control pos:start="139:9" pos:end="139:28">(<init pos:start="139:10" pos:end="139:15"><expr pos:start="139:10" pos:end="139:14"><name pos:start="139:10" pos:end="139:10">i</name> <operator pos:start="139:12" pos:end="139:12">=</operator> <literal type="number" pos:start="139:14" pos:end="139:14">0</literal></expr>;</init> <condition pos:start="139:17" pos:end="139:23"><expr pos:start="139:17" pos:end="139:22"><name pos:start="139:17" pos:end="139:17">i</name> <operator pos:start="139:19" pos:end="139:19">&lt;</operator> <literal type="number" pos:start="139:21" pos:end="139:22">12</literal></expr>;</condition> <incr pos:start="139:25" pos:end="139:27"><expr pos:start="139:25" pos:end="139:27"><operator pos:start="139:25" pos:end="139:26">++</operator><name pos:start="139:27" pos:end="139:27">i</name></expr></incr>)</control> <block pos:start="139:30" pos:end="147:5">{<block_content pos:start="141:9" pos:end="145:33">

        <expr_stmt pos:start="141:9" pos:end="145:33"><expr pos:start="141:9" pos:end="145:32"><call pos:start="141:9" pos:end="145:32"><name pos:start="141:9" pos:end="141:16">init_pam</name><argument_list pos:start="141:17" pos:end="145:32">(<argument pos:start="141:18" pos:end="141:20"><expr pos:start="141:18" pos:end="141:20"><name pos:start="141:18" pos:end="141:20">dev</name></expr></argument>, <argument pos:start="141:23" pos:end="141:35"><expr pos:start="141:23" pos:end="141:35"><name pos:start="141:23" pos:end="141:35"><name pos:start="141:23" pos:end="141:23">f</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:35">ram_memory</name></name></expr></argument>, <argument pos:start="141:38" pos:end="141:53"><expr pos:start="141:38" pos:end="141:53"><name pos:start="141:38" pos:end="141:53"><name pos:start="141:38" pos:end="141:38">f</name><operator pos:start="141:39" pos:end="141:40">-&gt;</operator><name pos:start="141:41" pos:end="141:53">system_memory</name></name></expr></argument>, <argument pos:start="141:56" pos:end="141:75"><expr pos:start="141:56" pos:end="141:75"><name pos:start="141:56" pos:end="141:75"><name pos:start="141:56" pos:end="141:56">f</name><operator pos:start="141:57" pos:end="141:58">-&gt;</operator><name pos:start="141:59" pos:end="141:75">pci_address_space</name></name></expr></argument>,

                 <argument pos:start="143:18" pos:end="143:37"><expr pos:start="143:18" pos:end="143:37"><operator pos:start="143:18" pos:end="143:18">&amp;</operator><name pos:start="143:19" pos:end="143:37"><name pos:start="143:19" pos:end="143:19">f</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:32">pam_regions</name><index pos:start="143:33" pos:end="143:37">[<expr pos:start="143:34" pos:end="143:36"><name pos:start="143:34" pos:end="143:34">i</name><operator pos:start="143:35" pos:end="143:35">+</operator><literal type="number" pos:start="143:36" pos:end="143:36">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="143:40" pos:end="143:74"><expr pos:start="143:40" pos:end="143:74"><name pos:start="143:40" pos:end="143:53">PAM_EXPAN_BASE</name> <operator pos:start="143:55" pos:end="143:55">+</operator> <name pos:start="143:57" pos:end="143:57">i</name> <operator pos:start="143:59" pos:end="143:59">*</operator> <name pos:start="143:61" pos:end="143:74">PAM_EXPAN_SIZE</name></expr></argument>,

                 <argument pos:start="145:18" pos:end="145:31"><expr pos:start="145:18" pos:end="145:31"><name pos:start="145:18" pos:end="145:31">PAM_EXPAN_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="151:5" pos:end="157:65">/* Xen supports additional interrupt routes from the PCI devices to

     * the IOAPIC: the four pins of each PCI device on the bus are also

     * connected to the IOAPIC directly.

     * These additional routes can be discovered through ACPI. */</comment>

    <if_stmt pos:start="159:5" pos:end="181:5"><if pos:start="159:5" pos:end="169:5">if <condition pos:start="159:8" pos:end="159:22">(<expr pos:start="159:9" pos:end="159:21"><call pos:start="159:9" pos:end="159:21"><name pos:start="159:9" pos:end="159:19">xen_enabled</name><argument_list pos:start="159:20" pos:end="159:21">()</argument_list></call></expr>)</condition> <block pos:start="159:24" pos:end="169:5">{<block_content pos:start="161:9" pos:end="167:43">

        <expr_stmt pos:start="161:9" pos:end="163:75"><expr pos:start="161:9" pos:end="163:74"><name pos:start="161:9" pos:end="161:13">piix3</name> <operator pos:start="161:15" pos:end="161:15">=</operator> <call pos:start="161:17" pos:end="163:74"><name pos:start="161:17" pos:end="161:25">DO_UPCAST</name><argument_list pos:start="161:26" pos:end="163:74">(<argument pos:start="161:27" pos:end="161:36"><expr pos:start="161:27" pos:end="161:36"><name pos:start="161:27" pos:end="161:36">PIIX3State</name></expr></argument>, <argument pos:start="161:39" pos:end="161:41"><expr pos:start="161:39" pos:end="161:41"><name pos:start="161:39" pos:end="161:41">dev</name></expr></argument>,

                <argument pos:start="163:17" pos:end="163:73"><expr pos:start="163:17" pos:end="163:73"><call pos:start="163:17" pos:end="163:73"><name pos:start="163:17" pos:end="163:47">pci_create_simple_multifunction</name><argument_list pos:start="163:48" pos:end="163:73">(<argument pos:start="163:49" pos:end="163:49"><expr pos:start="163:49" pos:end="163:49"><name pos:start="163:49" pos:end="163:49">b</name></expr></argument>, <argument pos:start="163:52" pos:end="163:53"><expr pos:start="163:52" pos:end="163:53"><operator pos:start="163:52" pos:end="163:52">-</operator><literal type="number" pos:start="163:53" pos:end="163:53">1</literal></expr></argument>, <argument pos:start="163:56" pos:end="163:59"><expr pos:start="163:56" pos:end="163:59"><name pos:start="163:56" pos:end="163:59">true</name></expr></argument>, <argument pos:start="163:62" pos:end="163:72"><expr pos:start="163:62" pos:end="163:72"><literal type="string" pos:start="163:62" pos:end="163:72">"PIIX3-xen"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="167:43"><expr pos:start="165:9" pos:end="167:42"><call pos:start="165:9" pos:end="167:42"><name pos:start="165:9" pos:end="165:20">pci_bus_irqs</name><argument_list pos:start="165:21" pos:end="167:42">(<argument pos:start="165:22" pos:end="165:22"><expr pos:start="165:22" pos:end="165:22"><name pos:start="165:22" pos:end="165:22">b</name></expr></argument>, <argument pos:start="165:25" pos:end="165:41"><expr pos:start="165:25" pos:end="165:41"><name pos:start="165:25" pos:end="165:41">xen_piix3_set_irq</name></expr></argument>, <argument pos:start="165:44" pos:end="165:64"><expr pos:start="165:44" pos:end="165:64"><name pos:start="165:44" pos:end="165:64">xen_pci_slot_get_pirq</name></expr></argument>,

                <argument pos:start="167:17" pos:end="167:21"><expr pos:start="167:17" pos:end="167:21"><name pos:start="167:17" pos:end="167:21">piix3</name></expr></argument>, <argument pos:start="167:24" pos:end="167:41"><expr pos:start="167:24" pos:end="167:41"><name pos:start="167:24" pos:end="167:41">XEN_PIIX_NUM_PIRQS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="169:7" pos:end="181:5">else <block pos:start="169:12" pos:end="181:5">{<block_content pos:start="171:9" pos:end="179:65">

        <expr_stmt pos:start="171:9" pos:end="173:71"><expr pos:start="171:9" pos:end="173:70"><name pos:start="171:9" pos:end="171:13">piix3</name> <operator pos:start="171:15" pos:end="171:15">=</operator> <call pos:start="171:17" pos:end="173:70"><name pos:start="171:17" pos:end="171:25">DO_UPCAST</name><argument_list pos:start="171:26" pos:end="173:70">(<argument pos:start="171:27" pos:end="171:36"><expr pos:start="171:27" pos:end="171:36"><name pos:start="171:27" pos:end="171:36">PIIX3State</name></expr></argument>, <argument pos:start="171:39" pos:end="171:41"><expr pos:start="171:39" pos:end="171:41"><name pos:start="171:39" pos:end="171:41">dev</name></expr></argument>,

                <argument pos:start="173:17" pos:end="173:69"><expr pos:start="173:17" pos:end="173:69"><call pos:start="173:17" pos:end="173:69"><name pos:start="173:17" pos:end="173:47">pci_create_simple_multifunction</name><argument_list pos:start="173:48" pos:end="173:69">(<argument pos:start="173:49" pos:end="173:49"><expr pos:start="173:49" pos:end="173:49"><name pos:start="173:49" pos:end="173:49">b</name></expr></argument>, <argument pos:start="173:52" pos:end="173:53"><expr pos:start="173:52" pos:end="173:53"><operator pos:start="173:52" pos:end="173:52">-</operator><literal type="number" pos:start="173:53" pos:end="173:53">1</literal></expr></argument>, <argument pos:start="173:56" pos:end="173:59"><expr pos:start="173:56" pos:end="173:59"><name pos:start="173:56" pos:end="173:59">true</name></expr></argument>, <argument pos:start="173:62" pos:end="173:68"><expr pos:start="173:62" pos:end="173:68"><literal type="string" pos:start="173:62" pos:end="173:68">"PIIX3"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="177:32"><expr pos:start="175:9" pos:end="177:31"><call pos:start="175:9" pos:end="177:31"><name pos:start="175:9" pos:end="175:20">pci_bus_irqs</name><argument_list pos:start="175:21" pos:end="177:31">(<argument pos:start="175:22" pos:end="175:22"><expr pos:start="175:22" pos:end="175:22"><name pos:start="175:22" pos:end="175:22">b</name></expr></argument>, <argument pos:start="175:25" pos:end="175:37"><expr pos:start="175:25" pos:end="175:37"><name pos:start="175:25" pos:end="175:37">piix3_set_irq</name></expr></argument>, <argument pos:start="175:40" pos:end="175:56"><expr pos:start="175:40" pos:end="175:56"><name pos:start="175:40" pos:end="175:56">pci_slot_get_pirq</name></expr></argument>, <argument pos:start="175:59" pos:end="175:63"><expr pos:start="175:59" pos:end="175:63"><name pos:start="175:59" pos:end="175:63">piix3</name></expr></argument>,

                <argument pos:start="177:17" pos:end="177:30"><expr pos:start="177:17" pos:end="177:30"><name pos:start="177:17" pos:end="177:30">PIIX_NUM_PIRQS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:65"><expr pos:start="179:9" pos:end="179:64"><call pos:start="179:9" pos:end="179:64"><name pos:start="179:9" pos:end="179:32">pci_bus_set_route_irq_fn</name><argument_list pos:start="179:33" pos:end="179:64">(<argument pos:start="179:34" pos:end="179:34"><expr pos:start="179:34" pos:end="179:34"><name pos:start="179:34" pos:end="179:34">b</name></expr></argument>, <argument pos:start="179:37" pos:end="179:63"><expr pos:start="179:37" pos:end="179:63"><name pos:start="179:37" pos:end="179:63">piix3_route_intx_pin_to_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:21"><expr pos:start="183:5" pos:end="183:20"><name pos:start="183:5" pos:end="183:14"><name pos:start="183:5" pos:end="183:9">piix3</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:14">pic</name></name> <operator pos:start="183:16" pos:end="183:16">=</operator> <name pos:start="183:18" pos:end="183:20">pic</name></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:67"><expr pos:start="185:5" pos:end="185:66"><operator pos:start="185:5" pos:end="185:5">*</operator><name pos:start="185:6" pos:end="185:12">isa_bus</name> <operator pos:start="185:14" pos:end="185:14">=</operator> <call pos:start="185:16" pos:end="185:66"><name pos:start="185:16" pos:end="185:22">ISA_BUS</name><argument_list pos:start="185:23" pos:end="185:66">(<argument pos:start="185:24" pos:end="185:65"><expr pos:start="185:24" pos:end="185:65"><call pos:start="185:24" pos:end="185:65"><name pos:start="185:24" pos:end="185:41">qdev_get_child_bus</name><argument_list pos:start="185:42" pos:end="185:65">(<argument pos:start="185:43" pos:end="185:55"><expr pos:start="185:43" pos:end="185:55"><call pos:start="185:43" pos:end="185:55"><name pos:start="185:43" pos:end="185:48">DEVICE</name><argument_list pos:start="185:49" pos:end="185:55">(<argument pos:start="185:50" pos:end="185:54"><expr pos:start="185:50" pos:end="185:54"><name pos:start="185:50" pos:end="185:54">piix3</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="185:58" pos:end="185:64"><expr pos:start="185:58" pos:end="185:64"><literal type="string" pos:start="185:58" pos:end="185:64">"isa.0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:36"><expr pos:start="189:5" pos:end="189:35"><operator pos:start="189:5" pos:end="189:5">*</operator><name pos:start="189:6" pos:end="189:16">piix3_devfn</name> <operator pos:start="189:18" pos:end="189:18">=</operator> <name pos:start="189:20" pos:end="189:35"><name pos:start="189:20" pos:end="189:24">piix3</name><operator pos:start="189:25" pos:end="189:26">-&gt;</operator><name pos:start="189:27" pos:end="189:29">dev</name><operator pos:start="189:30" pos:end="189:30">.</operator><name pos:start="189:31" pos:end="189:35">devfn</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:42"><expr pos:start="193:5" pos:end="193:41"><name pos:start="193:5" pos:end="193:12">ram_size</name> <operator pos:start="193:14" pos:end="193:14">=</operator> <name pos:start="193:16" pos:end="193:23">ram_size</name> <operator pos:start="193:25" pos:end="193:25">/</operator> <literal type="number" pos:start="193:27" pos:end="193:27">8</literal> <operator pos:start="193:29" pos:end="193:29">/</operator> <literal type="number" pos:start="193:31" pos:end="193:34">1024</literal> <operator pos:start="193:36" pos:end="193:36">/</operator> <literal type="number" pos:start="193:38" pos:end="193:41">1024</literal></expr>;</expr_stmt>

    <if_stmt pos:start="195:5" pos:end="199:5"><if pos:start="195:5" pos:end="199:5">if <condition pos:start="195:8" pos:end="195:23">(<expr pos:start="195:9" pos:end="195:22"><name pos:start="195:9" pos:end="195:16">ram_size</name> <operator pos:start="195:18" pos:end="195:18">&gt;</operator> <literal type="number" pos:start="195:20" pos:end="195:22">255</literal></expr>)</condition> <block pos:start="195:25" pos:end="199:5">{<block_content pos:start="197:9" pos:end="197:23">

        <expr_stmt pos:start="197:9" pos:end="197:23"><expr pos:start="197:9" pos:end="197:22"><name pos:start="197:9" pos:end="197:16">ram_size</name> <operator pos:start="197:18" pos:end="197:18">=</operator> <literal type="number" pos:start="197:20" pos:end="197:22">255</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:31"><expr pos:start="201:5" pos:end="201:30"><name pos:start="201:5" pos:end="201:19"><name pos:start="201:5" pos:end="201:5">d</name><operator pos:start="201:6" pos:end="201:7">-&gt;</operator><name pos:start="201:8" pos:end="201:13">config</name><index pos:start="201:14" pos:end="201:19">[<expr pos:start="201:15" pos:end="201:18"><literal type="number" pos:start="201:15" pos:end="201:18">0x57</literal></expr>]</index></name> <operator pos:start="201:21" pos:end="201:21">=</operator> <name pos:start="201:23" pos:end="201:30">ram_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:37"><expr pos:start="205:5" pos:end="205:36"><call pos:start="205:5" pos:end="205:36"><name pos:start="205:5" pos:end="205:33">i440fx_update_memory_mappings</name><argument_list pos:start="205:34" pos:end="205:36">(<argument pos:start="205:35" pos:end="205:35"><expr pos:start="205:35" pos:end="205:35"><name pos:start="205:35" pos:end="205:35">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="209:5" pos:end="209:13">return <expr pos:start="209:12" pos:end="209:12"><name pos:start="209:12" pos:end="209:12">b</name></expr>;</return>

</block_content>}</block></function>
</unit>
