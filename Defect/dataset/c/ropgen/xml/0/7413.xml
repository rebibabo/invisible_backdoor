<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7413.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:24">direntry_t</name><modifier pos:start="1:25" pos:end="1:25">*</modifier></type> <name pos:start="1:27" pos:end="1:52">create_short_and_long_name</name><parameter_list pos:start="1:53" pos:end="3:71">(<parameter pos:start="1:54" pos:end="1:70"><decl pos:start="1:54" pos:end="1:70"><type pos:start="1:54" pos:end="1:70"><name pos:start="1:54" pos:end="1:67">BDRVVVFATState</name><modifier pos:start="1:68" pos:end="1:68">*</modifier></type> <name pos:start="1:70" pos:end="1:70">s</name></decl></parameter>,

	<parameter pos:start="3:9" pos:end="3:36"><decl pos:start="3:9" pos:end="3:36"><type pos:start="3:9" pos:end="3:36"><name pos:start="3:9" pos:end="3:16">unsigned</name> <name pos:start="3:18" pos:end="3:20">int</name></type> <name pos:start="3:22" pos:end="3:36">directory_start</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:58"><decl pos:start="3:39" pos:end="3:58"><type pos:start="3:39" pos:end="3:58"><specifier pos:start="3:39" pos:end="3:43">const</specifier> <name pos:start="3:45" pos:end="3:48">char</name><modifier pos:start="3:49" pos:end="3:49">*</modifier></type> <name pos:start="3:51" pos:end="3:58">filename</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:70"><decl pos:start="3:61" pos:end="3:70"><type pos:start="3:61" pos:end="3:70"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:70">is_dot</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="167:1">{<block_content pos:start="7:5" pos:end="165:17">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>,<decl pos:start="7:11" pos:end="7:11"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:11" pos:end="7:11">j</name></decl>,<decl pos:start="7:13" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:22">long_index</name><init pos:start="7:23" pos:end="7:40">=<expr pos:start="7:24" pos:end="7:40"><name pos:start="7:24" pos:end="7:40"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:35">directory</name><operator pos:start="7:36" pos:end="7:36">.</operator><name pos:start="7:37" pos:end="7:40">next</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:14">direntry_t</name><modifier pos:start="9:15" pos:end="9:15">*</modifier></type> <name pos:start="9:17" pos:end="9:21">entry</name> <init pos:start="9:23" pos:end="9:28">= <expr pos:start="9:25" pos:end="9:28"><name pos:start="9:25" pos:end="9:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:14">direntry_t</name><modifier pos:start="11:15" pos:end="11:15">*</modifier></type> <name pos:start="11:17" pos:end="11:26">entry_long</name> <init pos:start="11:28" pos:end="11:33">= <expr pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:33">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="25:5">if<condition pos:start="15:7" pos:end="15:14">(<expr pos:start="15:8" pos:end="15:13"><name pos:start="15:8" pos:end="15:13">is_dot</name></expr>)</condition> <block pos:start="15:16" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:21">

	<expr_stmt pos:start="17:9" pos:end="17:46"><expr pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:13">entry</name><operator pos:start="17:14" pos:end="17:14">=</operator><call pos:start="17:15" pos:end="17:45"><name pos:start="17:15" pos:end="17:28">array_get_next</name><argument_list pos:start="17:29" pos:end="17:45">(<argument pos:start="17:30" pos:end="17:44"><expr pos:start="17:30" pos:end="17:44"><operator pos:start="17:30" pos:end="17:30">&amp;</operator><operator pos:start="17:31" pos:end="17:31">(</operator><name pos:start="17:32" pos:end="17:43"><name pos:start="17:32" pos:end="17:32">s</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:43">directory</name></name><operator pos:start="17:44" pos:end="17:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><call pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:14">memset</name><argument_list pos:start="19:15" pos:end="19:35">(<argument pos:start="19:16" pos:end="19:26"><expr pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:20">entry</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:26">name</name></name></expr></argument>,<argument pos:start="19:28" pos:end="19:31"><expr pos:start="19:28" pos:end="19:31"><literal type="number" pos:start="19:28" pos:end="19:31">0x20</literal></expr></argument>,<argument pos:start="19:33" pos:end="19:34"><expr pos:start="19:33" pos:end="19:34"><literal type="number" pos:start="19:33" pos:end="19:34">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="21:9" pos:end="21:54"><expr pos:start="21:9" pos:end="21:53"><call pos:start="21:9" pos:end="21:53"><name pos:start="21:9" pos:end="21:14">memcpy</name><argument_list pos:start="21:15" pos:end="21:53">(<argument pos:start="21:16" pos:end="21:26"><expr pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:20">entry</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:26">name</name></name></expr></argument>,<argument pos:start="21:28" pos:end="21:35"><expr pos:start="21:28" pos:end="21:35"><name pos:start="21:28" pos:end="21:35">filename</name></expr></argument>,<argument pos:start="21:37" pos:end="21:52"><expr pos:start="21:37" pos:end="21:52"><call pos:start="21:37" pos:end="21:52"><name pos:start="21:37" pos:end="21:42">strlen</name><argument_list pos:start="21:43" pos:end="21:52">(<argument pos:start="21:44" pos:end="21:51"><expr pos:start="21:44" pos:end="21:51"><name pos:start="21:44" pos:end="21:51">filename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="23:9" pos:end="23:21">return <expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">entry</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:48"><expr pos:start="29:5" pos:end="29:47"><name pos:start="29:5" pos:end="29:14">entry_long</name><operator pos:start="29:15" pos:end="29:15">=</operator><call pos:start="29:16" pos:end="29:47"><name pos:start="29:16" pos:end="29:35">create_long_filename</name><argument_list pos:start="29:36" pos:end="29:47">(<argument pos:start="29:37" pos:end="29:37"><expr pos:start="29:37" pos:end="29:37"><name pos:start="29:37" pos:end="29:37">s</name></expr></argument>,<argument pos:start="29:39" pos:end="29:46"><expr pos:start="29:39" pos:end="29:46"><name pos:start="29:39" pos:end="29:46">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:5">i</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:14">strlen</name><argument_list pos:start="33:15" pos:end="33:24">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="35:49">for<control pos:start="35:8" pos:end="35:48">(<init pos:start="35:9" pos:end="35:18"><expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:9">j</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <name pos:start="35:13" pos:end="35:13">i</name> <operator pos:start="35:15" pos:end="35:15">-</operator> <literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</init> <condition pos:start="35:20" pos:end="35:44"><expr pos:start="35:20" pos:end="35:43"><name pos:start="35:20" pos:end="35:20">j</name><operator pos:start="35:21" pos:end="35:21">&gt;</operator><literal type="number" pos:start="35:22" pos:end="35:22">0</literal>  <operator pos:start="35:25" pos:end="35:26">&amp;&amp;</operator> <name pos:start="35:28" pos:end="35:38"><name pos:start="35:28" pos:end="35:35">filename</name><index pos:start="35:36" pos:end="35:38">[<expr pos:start="35:37" pos:end="35:37"><name pos:start="35:37" pos:end="35:37">j</name></expr>]</index></name><operator pos:start="35:39" pos:end="35:40">!=</operator><literal type="char" pos:start="35:41" pos:end="35:43">'.'</literal></expr>;</condition><incr pos:start="35:45" pos:end="35:47"><expr pos:start="35:45" pos:end="35:47"><name pos:start="35:45" pos:end="35:45">j</name><operator pos:start="35:46" pos:end="35:47">--</operator></expr></incr>)</control><block type="pseudo" pos:start="35:49" pos:end="35:49"><block_content pos:start="35:49" pos:end="35:49"><empty_stmt pos:start="35:49" pos:end="35:49">;</empty_stmt></block_content></block></for>

    <if_stmt pos:start="37:5" pos:end="43:14"><if pos:start="37:5" pos:end="39:28">if <condition pos:start="37:8" pos:end="37:14">(<expr pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:9">j</name> <operator pos:start="37:11" pos:end="37:11">&gt;</operator> <literal type="number" pos:start="37:13" pos:end="37:13">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:28"><block_content pos:start="39:9" pos:end="39:28">

	<expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:9">i</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <operator pos:start="39:13" pos:end="39:13">(</operator><ternary pos:start="39:14" pos:end="39:26"><condition pos:start="39:14" pos:end="39:20"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">j</name> <operator pos:start="39:16" pos:end="39:16">&gt;</operator> <literal type="number" pos:start="39:18" pos:end="39:18">8</literal></expr> ?</condition><then pos:start="39:22" pos:end="39:22"> <expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">8</literal></expr> </then><else pos:start="39:24" pos:end="39:26">: <expr pos:start="39:26" pos:end="39:26"><name pos:start="39:26" pos:end="39:26">j</name></expr></else></ternary><operator pos:start="39:27" pos:end="39:27">)</operator></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="41:5" pos:end="43:14">else if <condition pos:start="41:13" pos:end="41:19">(<expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name> <operator pos:start="41:16" pos:end="41:16">&gt;</operator> <literal type="number" pos:start="41:18" pos:end="41:18">8</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:14"><block_content pos:start="43:9" pos:end="43:14">

	<expr_stmt pos:start="43:9" pos:end="43:14"><expr pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:9">i</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <literal type="number" pos:start="43:13" pos:end="43:13">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:42"><expr pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:9">entry</name><operator pos:start="47:10" pos:end="47:10">=</operator><call pos:start="47:11" pos:end="47:41"><name pos:start="47:11" pos:end="47:24">array_get_next</name><argument_list pos:start="47:25" pos:end="47:41">(<argument pos:start="47:26" pos:end="47:40"><expr pos:start="47:26" pos:end="47:40"><operator pos:start="47:26" pos:end="47:26">&amp;</operator><operator pos:start="47:27" pos:end="47:27">(</operator><name pos:start="47:28" pos:end="47:39"><name pos:start="47:28" pos:end="47:28">s</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:39">directory</name></name><operator pos:start="47:40" pos:end="47:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:32"><expr pos:start="49:5" pos:end="49:31"><call pos:start="49:5" pos:end="49:31"><name pos:start="49:5" pos:end="49:10">memset</name><argument_list pos:start="49:11" pos:end="49:31">(<argument pos:start="49:12" pos:end="49:22"><expr pos:start="49:12" pos:end="49:22"><name pos:start="49:12" pos:end="49:22"><name pos:start="49:12" pos:end="49:16">entry</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:22">name</name></name></expr></argument>,<argument pos:start="49:24" pos:end="49:27"><expr pos:start="49:24" pos:end="49:27"><literal type="number" pos:start="49:24" pos:end="49:27">0x20</literal></expr></argument>,<argument pos:start="49:29" pos:end="49:30"><expr pos:start="49:29" pos:end="49:30"><literal type="number" pos:start="49:29" pos:end="49:30">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><call pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:10">memcpy</name><argument_list pos:start="51:11" pos:end="51:36">(<argument pos:start="51:12" pos:end="51:22"><expr pos:start="51:12" pos:end="51:22"><name pos:start="51:12" pos:end="51:22"><name pos:start="51:12" pos:end="51:16">entry</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:22">name</name></name></expr></argument>, <argument pos:start="51:25" pos:end="51:32"><expr pos:start="51:25" pos:end="51:32"><name pos:start="51:25" pos:end="51:32">filename</name></expr></argument>, <argument pos:start="51:35" pos:end="51:35"><expr pos:start="51:35" pos:end="51:35"><name pos:start="51:35" pos:end="51:35">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="59:50"><if pos:start="55:5" pos:end="59:50">if<condition pos:start="55:7" pos:end="55:13">(<expr pos:start="55:8" pos:end="55:12"><name pos:start="55:8" pos:end="55:8">j</name> <operator pos:start="55:10" pos:end="55:10">&gt;</operator> <literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="59:50"><block_content pos:start="57:9" pos:end="59:50">

	<for pos:start="57:9" pos:end="59:50">for <control pos:start="57:13" pos:end="57:50">(<init pos:start="57:14" pos:end="57:19"><expr pos:start="57:14" pos:end="57:18"><name pos:start="57:14" pos:end="57:14">i</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</init> <condition pos:start="57:21" pos:end="57:45"><expr pos:start="57:21" pos:end="57:44"><name pos:start="57:21" pos:end="57:21">i</name> <operator pos:start="57:23" pos:end="57:23">&lt;</operator> <literal type="number" pos:start="57:25" pos:end="57:25">3</literal> <operator pos:start="57:27" pos:end="57:28">&amp;&amp;</operator> <name pos:start="57:30" pos:end="57:44"><name pos:start="57:30" pos:end="57:37">filename</name><index pos:start="57:38" pos:end="57:44">[<expr pos:start="57:39" pos:end="57:43"><name pos:start="57:39" pos:end="57:39">j</name><operator pos:start="57:40" pos:end="57:40">+</operator><literal type="number" pos:start="57:41" pos:end="57:42">1</literal><operator pos:start="57:42" pos:end="57:42">+</operator><name pos:start="57:43" pos:end="57:43">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="57:47" pos:end="57:49"><expr pos:start="57:47" pos:end="57:49"><name pos:start="57:47" pos:end="57:47">i</name><operator pos:start="57:48" pos:end="57:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:13" pos:end="59:50"><block_content pos:start="59:13" pos:end="59:50">

	    <expr_stmt pos:start="59:13" pos:end="59:50"><expr pos:start="59:13" pos:end="59:49"><name pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:17">entry</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:28">extension</name><index pos:start="59:29" pos:end="59:31">[<expr pos:start="59:30" pos:end="59:30"><name pos:start="59:30" pos:end="59:30">i</name></expr>]</index></name> <operator pos:start="59:33" pos:end="59:33">=</operator> <name pos:start="59:35" pos:end="59:49"><name pos:start="59:35" pos:end="59:42">filename</name><index pos:start="59:43" pos:end="59:49">[<expr pos:start="59:44" pos:end="59:48"><name pos:start="59:44" pos:end="59:44">j</name><operator pos:start="59:45" pos:end="59:45">+</operator><literal type="number" pos:start="59:46" pos:end="59:47">1</literal><operator pos:start="59:47" pos:end="59:47">+</operator><name pos:start="59:48" pos:end="59:48">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:45">/* upcase &amp; remove unwanted characters */</comment>

    <for pos:start="65:5" pos:end="79:5">for<control pos:start="65:8" pos:end="65:22">(<init pos:start="65:9" pos:end="65:13"><expr pos:start="65:9" pos:end="65:12"><name pos:start="65:9" pos:end="65:9">i</name><operator pos:start="65:10" pos:end="65:10">=</operator><literal type="number" pos:start="65:11" pos:end="65:12">10</literal></expr>;</init><condition pos:start="65:14" pos:end="65:18"><expr pos:start="65:14" pos:end="65:17"><name pos:start="65:14" pos:end="65:14">i</name><operator pos:start="65:15" pos:end="65:16">&gt;=</operator><literal type="number" pos:start="65:17" pos:end="65:17">0</literal></expr>;</condition><incr pos:start="65:19" pos:end="65:21"><expr pos:start="65:19" pos:end="65:21"><name pos:start="65:19" pos:end="65:19">i</name><operator pos:start="65:20" pos:end="65:21">--</operator></expr></incr>)</control> <block pos:start="65:24" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:36">

	<if_stmt pos:start="67:9" pos:end="67:63"><if pos:start="67:9" pos:end="67:63">if<condition pos:start="67:11" pos:end="67:25">(<expr pos:start="67:12" pos:end="67:24"><name pos:start="67:12" pos:end="67:12">i</name><operator pos:start="67:13" pos:end="67:14">==</operator><literal type="number" pos:start="67:15" pos:end="67:16">10</literal> <operator pos:start="67:18" pos:end="67:19">||</operator> <name pos:start="67:21" pos:end="67:21">i</name><operator pos:start="67:22" pos:end="67:23">==</operator><literal type="number" pos:start="67:24" pos:end="67:24">7</literal></expr>)</condition><block type="pseudo" pos:start="67:27" pos:end="67:63"><block_content pos:start="67:27" pos:end="67:63"> <for pos:start="67:27" pos:end="67:63">for<control pos:start="67:30" pos:end="67:62">(<init pos:start="67:31" pos:end="67:31">;</init><condition pos:start="67:32" pos:end="67:58"><expr pos:start="67:32" pos:end="67:57"><name pos:start="67:32" pos:end="67:32">i</name><operator pos:start="67:33" pos:end="67:33">&gt;</operator><literal type="number" pos:start="67:34" pos:end="67:34">0</literal> <operator pos:start="67:36" pos:end="67:37">&amp;&amp;</operator> <name pos:start="67:39" pos:end="67:52"><name pos:start="67:39" pos:end="67:43">entry</name><operator pos:start="67:44" pos:end="67:45">-&gt;</operator><name pos:start="67:46" pos:end="67:49">name</name><index pos:start="67:50" pos:end="67:52">[<expr pos:start="67:51" pos:end="67:51"><name pos:start="67:51" pos:end="67:51">i</name></expr>]</index></name><operator pos:start="67:53" pos:end="67:54">==</operator><literal type="char" pos:start="67:55" pos:end="67:57">' '</literal></expr>;</condition><incr pos:start="67:59" pos:end="67:61"><expr pos:start="67:59" pos:end="67:61"><name pos:start="67:59" pos:end="67:59">i</name><operator pos:start="67:60" pos:end="67:61">--</operator></expr></incr>)</control><block type="pseudo" pos:start="67:63" pos:end="67:63"><block_content pos:start="67:63" pos:end="67:63"><empty_stmt pos:start="67:63" pos:end="67:63">;</empty_stmt></block_content></block></for></block_content></block></if></if_stmt>

	<if_stmt pos:start="69:9" pos:end="77:36"><if pos:start="69:9" pos:end="73:31">if<condition pos:start="69:11" pos:end="71:64">(<expr pos:start="69:12" pos:end="71:63"><name pos:start="69:12" pos:end="69:25"><name pos:start="69:12" pos:end="69:16">entry</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:22">name</name><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">i</name></expr>]</index></name><operator pos:start="69:26" pos:end="69:27">&lt;=</operator><literal type="char" pos:start="69:28" pos:end="69:30">' '</literal> <operator pos:start="69:32" pos:end="69:33">||</operator> <name pos:start="69:35" pos:end="69:48"><name pos:start="69:35" pos:end="69:39">entry</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:45">name</name><index pos:start="69:46" pos:end="69:48">[<expr pos:start="69:47" pos:end="69:47"><name pos:start="69:47" pos:end="69:47">i</name></expr>]</index></name><operator pos:start="69:49" pos:end="69:49">&gt;</operator><literal type="number" pos:start="69:50" pos:end="69:53">0x7f</literal>

		<operator pos:start="71:17" pos:end="71:18">||</operator> <call pos:start="71:20" pos:end="71:63"><name pos:start="71:20" pos:end="71:25">strchr</name><argument_list pos:start="71:26" pos:end="71:63">(<argument pos:start="71:27" pos:end="71:47"><expr pos:start="71:27" pos:end="71:47"><literal type="string" pos:start="71:27" pos:end="71:47">".*?&lt;&gt;|\":/\\[];,+='"</literal></expr></argument>,<argument pos:start="71:49" pos:end="71:62"><expr pos:start="71:49" pos:end="71:62"><name pos:start="71:49" pos:end="71:62"><name pos:start="71:49" pos:end="71:53">entry</name><operator pos:start="71:54" pos:end="71:55">-&gt;</operator><name pos:start="71:56" pos:end="71:59">name</name><index pos:start="71:60" pos:end="71:62">[<expr pos:start="71:61" pos:end="71:61"><name pos:start="71:61" pos:end="71:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:31"><block_content pos:start="73:13" pos:end="73:31">

	    <expr_stmt pos:start="73:13" pos:end="73:31"><expr pos:start="73:13" pos:end="73:30"><name pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:17">entry</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:23">name</name><index pos:start="73:24" pos:end="73:26">[<expr pos:start="73:25" pos:end="73:25"><name pos:start="73:25" pos:end="73:25">i</name></expr>]</index></name><operator pos:start="73:27" pos:end="73:27">=</operator><literal type="char" pos:start="73:28" pos:end="73:30">'_'</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="75:9" pos:end="77:36">else if<condition pos:start="75:16" pos:end="75:59">(<expr pos:start="75:17" pos:end="75:58"><name pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:21">entry</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:27">name</name><index pos:start="75:28" pos:end="75:30">[<expr pos:start="75:29" pos:end="75:29"><name pos:start="75:29" pos:end="75:29">i</name></expr>]</index></name><operator pos:start="75:31" pos:end="75:32">&gt;=</operator><literal type="char" pos:start="75:33" pos:end="75:35">'a'</literal> <operator pos:start="75:37" pos:end="75:38">&amp;&amp;</operator> <name pos:start="75:40" pos:end="75:53"><name pos:start="75:40" pos:end="75:44">entry</name><operator pos:start="75:45" pos:end="75:46">-&gt;</operator><name pos:start="75:47" pos:end="75:50">name</name><index pos:start="75:51" pos:end="75:53">[<expr pos:start="75:52" pos:end="75:52"><name pos:start="75:52" pos:end="75:52">i</name></expr>]</index></name><operator pos:start="75:54" pos:end="75:55">&lt;=</operator><literal type="char" pos:start="75:56" pos:end="75:58">'z'</literal></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:36"><block_content pos:start="77:13" pos:end="77:36">

            <expr_stmt pos:start="77:13" pos:end="77:36"><expr pos:start="77:13" pos:end="77:35"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:17">entry</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:23">name</name><index pos:start="77:24" pos:end="77:26">[<expr pos:start="77:25" pos:end="77:25"><name pos:start="77:25" pos:end="77:25">i</name></expr>]</index></name><operator pos:start="77:27" pos:end="77:28">+=</operator><literal type="char" pos:start="77:29" pos:end="77:31">'A'</literal><operator pos:start="77:32" pos:end="77:32">-</operator><literal type="char" pos:start="77:33" pos:end="77:35">'a'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="83:5" pos:end="83:27">/* mangle duplicates */</comment>

    <while pos:start="85:5" pos:end="137:5">while<condition pos:start="85:10" pos:end="85:12">(<expr pos:start="85:11" pos:end="85:11"><literal type="number" pos:start="85:11" pos:end="85:11">1</literal></expr>)</condition> <block pos:start="85:14" pos:end="137:5">{<block_content pos:start="87:9" pos:end="135:9">

	<decl_stmt pos:start="87:9" pos:end="87:70"><decl pos:start="87:9" pos:end="87:69"><type pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:18">direntry_t</name><modifier pos:start="87:19" pos:end="87:19">*</modifier></type> <name pos:start="87:21" pos:end="87:26">entry1</name><init pos:start="87:27" pos:end="87:69">=<expr pos:start="87:28" pos:end="87:69"><call pos:start="87:28" pos:end="87:69"><name pos:start="87:28" pos:end="87:36">array_get</name><argument_list pos:start="87:37" pos:end="87:69">(<argument pos:start="87:38" pos:end="87:52"><expr pos:start="87:38" pos:end="87:52"><operator pos:start="87:38" pos:end="87:38">&amp;</operator><operator pos:start="87:39" pos:end="87:39">(</operator><name pos:start="87:40" pos:end="87:51"><name pos:start="87:40" pos:end="87:40">s</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:51">directory</name></name><operator pos:start="87:52" pos:end="87:52">)</operator></expr></argument>,<argument pos:start="87:54" pos:end="87:68"><expr pos:start="87:54" pos:end="87:68"><name pos:start="87:54" pos:end="87:68">directory_start</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="89:9" pos:end="89:14"><decl pos:start="89:9" pos:end="89:13"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:13">j</name></decl>;</decl_stmt>



	<for pos:start="93:9" pos:end="97:22">for<control pos:start="93:12" pos:end="93:35">(<init pos:start="93:13" pos:end="93:13">;</init><condition pos:start="93:14" pos:end="93:26"><expr pos:start="93:14" pos:end="93:25"><name pos:start="93:14" pos:end="93:19">entry1</name><operator pos:start="93:20" pos:end="93:20">&lt;</operator><name pos:start="93:21" pos:end="93:25">entry</name></expr>;</condition><incr pos:start="93:27" pos:end="93:34"><expr pos:start="93:27" pos:end="93:34"><name pos:start="93:27" pos:end="93:32">entry1</name><operator pos:start="93:33" pos:end="93:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="95:13" pos:end="97:22"><block_content pos:start="95:13" pos:end="97:22">

	    <if_stmt pos:start="95:13" pos:end="97:22"><if pos:start="95:13" pos:end="97:22">if<condition pos:start="95:15" pos:end="95:77">(<expr pos:start="95:16" pos:end="95:76"><operator pos:start="95:16" pos:end="95:16">!</operator><call pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:28">is_long_name</name><argument_list pos:start="95:29" pos:end="95:36">(<argument pos:start="95:30" pos:end="95:35"><expr pos:start="95:30" pos:end="95:35"><name pos:start="95:30" pos:end="95:35">entry1</name></expr></argument>)</argument_list></call> <operator pos:start="95:38" pos:end="95:39">&amp;&amp;</operator> <operator pos:start="95:41" pos:end="95:41">!</operator><call pos:start="95:42" pos:end="95:76"><name pos:start="95:42" pos:end="95:47">memcmp</name><argument_list pos:start="95:48" pos:end="95:76">(<argument pos:start="95:49" pos:end="95:60"><expr pos:start="95:49" pos:end="95:60"><name pos:start="95:49" pos:end="95:60"><name pos:start="95:49" pos:end="95:54">entry1</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:60">name</name></name></expr></argument>,<argument pos:start="95:62" pos:end="95:72"><expr pos:start="95:62" pos:end="95:72"><name pos:start="95:62" pos:end="95:72"><name pos:start="95:62" pos:end="95:66">entry</name><operator pos:start="95:67" pos:end="95:68">-&gt;</operator><name pos:start="95:69" pos:end="95:72">name</name></name></expr></argument>,<argument pos:start="95:74" pos:end="95:75"><expr pos:start="95:74" pos:end="95:75"><literal type="number" pos:start="95:74" pos:end="95:75">11</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:22"><block_content pos:start="97:17" pos:end="97:22">

		<break pos:start="97:17" pos:end="97:22">break;</break></block_content></block></if></if_stmt></block_content></block></for> <comment type="block" pos:start="97:24" pos:end="97:39">/* found dupe */</comment>

	<if_stmt pos:start="99:9" pos:end="101:18"><if pos:start="99:9" pos:end="101:18">if<condition pos:start="99:11" pos:end="99:25">(<expr pos:start="99:12" pos:end="99:24"><name pos:start="99:12" pos:end="99:17">entry1</name><operator pos:start="99:18" pos:end="99:19">==</operator><name pos:start="99:20" pos:end="99:24">entry</name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:18"><block_content pos:start="101:13" pos:end="101:18"> <comment type="block" pos:start="99:27" pos:end="99:45">/* no dupe found */</comment>

	    <break pos:start="101:13" pos:end="101:18">break;</break></block_content></block></if></if_stmt>



	<comment type="block" pos:start="105:9" pos:end="105:42">/* use all 8 characters of name */</comment>

	<if_stmt pos:start="107:9" pos:end="115:9"><if pos:start="107:9" pos:end="115:9">if<condition pos:start="107:11" pos:end="107:31">(<expr pos:start="107:12" pos:end="107:30"><name pos:start="107:12" pos:end="107:25"><name pos:start="107:12" pos:end="107:16">entry</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:22">name</name><index pos:start="107:23" pos:end="107:25">[<expr pos:start="107:24" pos:end="107:24"><literal type="number" pos:start="107:24" pos:end="107:24">7</literal></expr>]</index></name><operator pos:start="107:26" pos:end="107:27">==</operator><literal type="char" pos:start="107:28" pos:end="107:30">' '</literal></expr>)</condition> <block pos:start="107:33" pos:end="115:9">{<block_content pos:start="109:13" pos:end="113:35">

	    <decl_stmt pos:start="109:13" pos:end="109:18"><decl pos:start="109:13" pos:end="109:17"><type pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:15">int</name></type> <name pos:start="109:17" pos:end="109:17">j</name></decl>;</decl_stmt>

	    <for pos:start="111:13" pos:end="113:35">for<control pos:start="111:16" pos:end="111:51">(<init pos:start="111:17" pos:end="111:20"><expr pos:start="111:17" pos:end="111:19"><name pos:start="111:17" pos:end="111:17">j</name><operator pos:start="111:18" pos:end="111:18">=</operator><literal type="number" pos:start="111:19" pos:end="111:19">6</literal></expr>;</init><condition pos:start="111:21" pos:end="111:47"><expr pos:start="111:21" pos:end="111:46"><name pos:start="111:21" pos:end="111:21">j</name><operator pos:start="111:22" pos:end="111:22">&gt;</operator><literal type="number" pos:start="111:23" pos:end="111:23">0</literal> <operator pos:start="111:25" pos:end="111:26">&amp;&amp;</operator> <name pos:start="111:28" pos:end="111:41"><name pos:start="111:28" pos:end="111:32">entry</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:38">name</name><index pos:start="111:39" pos:end="111:41">[<expr pos:start="111:40" pos:end="111:40"><name pos:start="111:40" pos:end="111:40">j</name></expr>]</index></name><operator pos:start="111:42" pos:end="111:43">==</operator><literal type="char" pos:start="111:44" pos:end="111:46">' '</literal></expr>;</condition><incr pos:start="111:48" pos:end="111:50"><expr pos:start="111:48" pos:end="111:50"><name pos:start="111:48" pos:end="111:48">j</name><operator pos:start="111:49" pos:end="111:50">--</operator></expr></incr>)</control><block type="pseudo" pos:start="113:17" pos:end="113:35"><block_content pos:start="113:17" pos:end="113:35">

		<expr_stmt pos:start="113:17" pos:end="113:35"><expr pos:start="113:17" pos:end="113:34"><name pos:start="113:17" pos:end="113:30"><name pos:start="113:17" pos:end="113:21">entry</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:27">name</name><index pos:start="113:28" pos:end="113:30">[<expr pos:start="113:29" pos:end="113:29"><name pos:start="113:29" pos:end="113:29">j</name></expr>]</index></name><operator pos:start="113:31" pos:end="113:31">=</operator><literal type="char" pos:start="113:32" pos:end="113:34">'~'</literal></expr>;</expr_stmt></block_content></block></for>

	</block_content>}</block></if></if_stmt>



	<comment type="block" pos:start="119:9" pos:end="119:30">/* increment number */</comment>

	<for pos:start="121:9" pos:end="123:31">for<control pos:start="121:12" pos:end="121:47">(<init pos:start="121:13" pos:end="121:16"><expr pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:13">j</name><operator pos:start="121:14" pos:end="121:14">=</operator><literal type="number" pos:start="121:15" pos:end="121:15">7</literal></expr>;</init><condition pos:start="121:17" pos:end="121:43"><expr pos:start="121:17" pos:end="121:42"><name pos:start="121:17" pos:end="121:17">j</name><operator pos:start="121:18" pos:end="121:18">&gt;</operator><literal type="number" pos:start="121:19" pos:end="121:19">0</literal> <operator pos:start="121:21" pos:end="121:22">&amp;&amp;</operator> <name pos:start="121:24" pos:end="121:37"><name pos:start="121:24" pos:end="121:28">entry</name><operator pos:start="121:29" pos:end="121:30">-&gt;</operator><name pos:start="121:31" pos:end="121:34">name</name><index pos:start="121:35" pos:end="121:37">[<expr pos:start="121:36" pos:end="121:36"><name pos:start="121:36" pos:end="121:36">j</name></expr>]</index></name><operator pos:start="121:38" pos:end="121:39">==</operator><literal type="char" pos:start="121:40" pos:end="121:42">'9'</literal></expr>;</condition><incr pos:start="121:44" pos:end="121:46"><expr pos:start="121:44" pos:end="121:46"><name pos:start="121:44" pos:end="121:44">j</name><operator pos:start="121:45" pos:end="121:46">--</operator></expr></incr>)</control><block type="pseudo" pos:start="123:13" pos:end="123:31"><block_content pos:start="123:13" pos:end="123:31">

	    <expr_stmt pos:start="123:13" pos:end="123:31"><expr pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:26"><name pos:start="123:13" pos:end="123:17">entry</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:23">name</name><index pos:start="123:24" pos:end="123:26">[<expr pos:start="123:25" pos:end="123:25"><name pos:start="123:25" pos:end="123:25">j</name></expr>]</index></name><operator pos:start="123:27" pos:end="123:27">=</operator><literal type="char" pos:start="123:28" pos:end="123:30">'0'</literal></expr>;</expr_stmt></block_content></block></for>

	<if_stmt pos:start="125:9" pos:end="135:9"><if pos:start="125:9" pos:end="135:9">if<condition pos:start="125:11" pos:end="125:15">(<expr pos:start="125:12" pos:end="125:14"><name pos:start="125:12" pos:end="125:12">j</name><operator pos:start="125:13" pos:end="125:13">&gt;</operator><literal type="number" pos:start="125:14" pos:end="125:14">0</literal></expr>)</condition> <block pos:start="125:17" pos:end="135:9">{<block_content pos:start="127:13" pos:end="133:33">

	    <if_stmt pos:start="127:13" pos:end="133:33"><if pos:start="127:13" pos:end="129:35">if<condition pos:start="127:15" pos:end="127:56">(<expr pos:start="127:16" pos:end="127:55"><name pos:start="127:16" pos:end="127:29"><name pos:start="127:16" pos:end="127:20">entry</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:26">name</name><index pos:start="127:27" pos:end="127:29">[<expr pos:start="127:28" pos:end="127:28"><name pos:start="127:28" pos:end="127:28">j</name></expr>]</index></name><operator pos:start="127:30" pos:end="127:30">&lt;</operator><literal type="char" pos:start="127:31" pos:end="127:33">'0'</literal> <operator pos:start="127:35" pos:end="127:36">||</operator> <name pos:start="127:38" pos:end="127:51"><name pos:start="127:38" pos:end="127:42">entry</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:48">name</name><index pos:start="127:49" pos:end="127:51">[<expr pos:start="127:50" pos:end="127:50"><name pos:start="127:50" pos:end="127:50">j</name></expr>]</index></name><operator pos:start="127:52" pos:end="127:52">&gt;</operator><literal type="char" pos:start="127:53" pos:end="127:55">'9'</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:35"><block_content pos:start="129:17" pos:end="129:35">

	        <expr_stmt pos:start="129:17" pos:end="129:35"><expr pos:start="129:17" pos:end="129:34"><name pos:start="129:17" pos:end="129:30"><name pos:start="129:17" pos:end="129:21">entry</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:27">name</name><index pos:start="129:28" pos:end="129:30">[<expr pos:start="129:29" pos:end="129:29"><name pos:start="129:29" pos:end="129:29">j</name></expr>]</index></name><operator pos:start="129:31" pos:end="129:31">=</operator><literal type="char" pos:start="129:32" pos:end="129:34">'0'</literal></expr>;</expr_stmt></block_content></block></if>

	    <else pos:start="131:13" pos:end="133:33">else<block type="pseudo" pos:start="133:17" pos:end="133:33"><block_content pos:start="133:17" pos:end="133:33">

	        <expr_stmt pos:start="133:17" pos:end="133:33"><expr pos:start="133:17" pos:end="133:32"><name pos:start="133:17" pos:end="133:30"><name pos:start="133:17" pos:end="133:21">entry</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:27">name</name><index pos:start="133:28" pos:end="133:30">[<expr pos:start="133:29" pos:end="133:29"><name pos:start="133:29" pos:end="133:29">j</name></expr>]</index></name><operator pos:start="133:31" pos:end="133:32">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="141:5" pos:end="141:52">/* calculate checksum; propagate to long name */</comment>

    <if_stmt pos:start="143:5" pos:end="161:5"><if pos:start="143:5" pos:end="161:5">if<condition pos:start="143:7" pos:end="143:18">(<expr pos:start="143:8" pos:end="143:17"><name pos:start="143:8" pos:end="143:17">entry_long</name></expr>)</condition> <block pos:start="143:20" pos:end="161:5">{<block_content pos:start="145:9" pos:end="159:9">

        <decl_stmt pos:start="145:9" pos:end="145:41"><decl pos:start="145:9" pos:end="145:40"><type pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:15">uint8_t</name></type> <name pos:start="145:17" pos:end="145:22">chksum</name><init pos:start="145:23" pos:end="145:40">=<expr pos:start="145:24" pos:end="145:40"><call pos:start="145:24" pos:end="145:40"><name pos:start="145:24" pos:end="145:33">fat_chksum</name><argument_list pos:start="145:34" pos:end="145:40">(<argument pos:start="145:35" pos:end="145:39"><expr pos:start="145:35" pos:end="145:39"><name pos:start="145:35" pos:end="145:39">entry</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<comment type="block" pos:start="149:9" pos:end="149:68">/* calculate anew, because realloc could have taken place */</comment>

	<expr_stmt pos:start="151:9" pos:end="151:57"><expr pos:start="151:9" pos:end="151:56"><name pos:start="151:9" pos:end="151:18">entry_long</name><operator pos:start="151:19" pos:end="151:19">=</operator><call pos:start="151:20" pos:end="151:56"><name pos:start="151:20" pos:end="151:28">array_get</name><argument_list pos:start="151:29" pos:end="151:56">(<argument pos:start="151:30" pos:end="151:44"><expr pos:start="151:30" pos:end="151:44"><operator pos:start="151:30" pos:end="151:30">&amp;</operator><operator pos:start="151:31" pos:end="151:31">(</operator><name pos:start="151:32" pos:end="151:43"><name pos:start="151:32" pos:end="151:32">s</name><operator pos:start="151:33" pos:end="151:34">-&gt;</operator><name pos:start="151:35" pos:end="151:43">directory</name></name><operator pos:start="151:44" pos:end="151:44">)</operator></expr></argument>,<argument pos:start="151:46" pos:end="151:55"><expr pos:start="151:46" pos:end="151:55"><name pos:start="151:46" pos:end="151:55">long_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<while pos:start="153:9" pos:end="159:9">while<condition pos:start="153:14" pos:end="153:59">(<expr pos:start="153:15" pos:end="153:58"><name pos:start="153:15" pos:end="153:24">entry_long</name><operator pos:start="153:25" pos:end="153:25">&lt;</operator><name pos:start="153:26" pos:end="153:30">entry</name> <operator pos:start="153:32" pos:end="153:33">&amp;&amp;</operator> <call pos:start="153:35" pos:end="153:58"><name pos:start="153:35" pos:end="153:46">is_long_name</name><argument_list pos:start="153:47" pos:end="153:58">(<argument pos:start="153:48" pos:end="153:57"><expr pos:start="153:48" pos:end="153:57"><name pos:start="153:48" pos:end="153:57">entry_long</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="153:61" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:25">

	    <expr_stmt pos:start="155:13" pos:end="155:43"><expr pos:start="155:13" pos:end="155:42"><name pos:start="155:13" pos:end="155:35"><name pos:start="155:13" pos:end="155:22">entry_long</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:32">reserved</name><index pos:start="155:33" pos:end="155:35">[<expr pos:start="155:34" pos:end="155:34"><literal type="number" pos:start="155:34" pos:end="155:34">1</literal></expr>]</index></name><operator pos:start="155:36" pos:end="155:36">=</operator><name pos:start="155:37" pos:end="155:42">chksum</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="157:13" pos:end="157:25"><expr pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:22">entry_long</name><operator pos:start="157:23" pos:end="157:24">++</operator></expr>;</expr_stmt>

	</block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <return pos:start="165:5" pos:end="165:17">return <expr pos:start="165:12" pos:end="165:16"><name pos:start="165:12" pos:end="165:16">entry</name></expr>;</return>

</block_content>}</block></function>
</unit>
