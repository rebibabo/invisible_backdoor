<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5194.c" pos:tabs="8"><function pos:start="1:1" pos:end="419:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">MPV_common_init</name><parameter_list pos:start="1:20" pos:end="1:38">(<parameter pos:start="1:21" pos:end="1:37"><decl pos:start="1:21" pos:end="1:37"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:34">MpegEncContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="419:1">{<block_content pos:start="5:5" pos:end="417:14">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">c_size</name></decl>, <decl pos:start="5:17" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:17">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">UINT8</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:15">pict</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:26">dct_unquantize_h263</name></name> <operator pos:start="11:28" pos:end="11:28">=</operator> <name pos:start="11:30" pos:end="11:50">dct_unquantize_h263_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:27">dct_unquantize_mpeg1</name></name> <operator pos:start="13:29" pos:end="13:29">=</operator> <name pos:start="13:31" pos:end="13:52">dct_unquantize_mpeg1_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="20:0"><expr pos:start="15:5" pos:end="15:52"><name pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:27">dct_unquantize_mpeg2</name></name> <operator pos:start="15:29" pos:end="15:29">=</operator> <name pos:start="15:31" pos:end="15:52">dct_unquantize_mpeg2_c</name></expr>;</expr_stmt>

        

<cpp:ifdef pos:start="19:1" pos:end="19:15">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:15">HAVE_MMX</name></cpp:ifdef>

    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:26"><call pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:23">MPV_common_init_mmx</name><argument_list pos:start="21:24" pos:end="21:26">(<argument pos:start="21:25" pos:end="21:25"><expr pos:start="21:25" pos:end="21:25"><name pos:start="21:25" pos:end="21:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    <comment type="line" pos:start="25:5" pos:end="25:62">//setup default unquantizers (mpeg4 might change it later)</comment>

    <if_stmt pos:start="27:5" pos:end="33:52"><if pos:start="27:5" pos:end="29:51">if<condition pos:start="27:7" pos:end="27:33">(<expr pos:start="27:8" pos:end="27:32"><name pos:start="27:8" pos:end="27:20"><name pos:start="27:8" pos:end="27:8">s</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:20">out_format</name></name> <operator pos:start="27:22" pos:end="27:23">==</operator> <name pos:start="27:25" pos:end="27:32">FMT_H263</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:51"><block_content pos:start="29:9" pos:end="29:51">

        <expr_stmt pos:start="29:9" pos:end="29:51"><expr pos:start="29:9" pos:end="29:50"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:25">dct_unquantize</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:50"><name pos:start="29:29" pos:end="29:29">s</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:50">dct_unquantize_h263</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="31:5" pos:end="33:52">else<block type="pseudo" pos:start="33:9" pos:end="33:52"><block_content pos:start="33:9" pos:end="33:52">

        <expr_stmt pos:start="33:9" pos:end="33:52"><expr pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:25">dct_unquantize</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <name pos:start="33:29" pos:end="33:51"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:51">dct_unquantize_mpeg1</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    

    <expr_stmt pos:start="37:5" pos:end="37:39"><expr pos:start="37:5" pos:end="37:38"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:15">mb_width</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <operator pos:start="37:19" pos:end="37:19">(</operator><name pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">width</name></name> <operator pos:start="37:29" pos:end="37:29">+</operator> <literal type="number" pos:start="37:31" pos:end="37:32">15</literal><operator pos:start="37:33" pos:end="37:33">)</operator> <operator pos:start="37:35" pos:end="37:35">/</operator> <literal type="number" pos:start="37:37" pos:end="37:38">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:41"><expr pos:start="39:5" pos:end="39:40"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:16">mb_height</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <operator pos:start="39:20" pos:end="39:20">(</operator><name pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:29">height</name></name> <operator pos:start="39:31" pos:end="39:31">+</operator> <literal type="number" pos:start="39:33" pos:end="39:34">15</literal><operator pos:start="39:35" pos:end="39:35">)</operator> <operator pos:start="39:37" pos:end="39:37">/</operator> <literal type="number" pos:start="39:39" pos:end="39:40">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:43"><expr pos:start="41:5" pos:end="41:42"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:13">mb_num</name></name> <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:27">mb_width</name></name> <operator pos:start="41:29" pos:end="41:29">*</operator> <name pos:start="41:31" pos:end="41:42"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:42">mb_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:52"><expr pos:start="43:5" pos:end="43:51"><name pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:15">linesize</name></name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:29"><name pos:start="43:19" pos:end="43:19">s</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:29">mb_width</name></name> <operator pos:start="43:31" pos:end="43:31">*</operator> <literal type="number" pos:start="43:33" pos:end="43:36">16</literal> <operator pos:start="43:36" pos:end="43:36">+</operator> <literal type="number" pos:start="43:38" pos:end="43:38">2</literal> <operator pos:start="43:40" pos:end="43:40">*</operator> <name pos:start="43:42" pos:end="43:51">EDGE_WIDTH</name></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="107:5">for<control pos:start="47:8" pos:end="47:20">(<init pos:start="47:9" pos:end="47:12"><expr pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:9">i</name><operator pos:start="47:10" pos:end="47:10">=</operator><literal type="number" pos:start="47:11" pos:end="47:11">0</literal></expr>;</init><condition pos:start="47:13" pos:end="47:16"><expr pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:13">i</name><operator pos:start="47:14" pos:end="47:14">&lt;</operator><literal type="number" pos:start="47:15" pos:end="47:15">3</literal></expr>;</condition><incr pos:start="47:17" pos:end="47:19"><expr pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:17">i</name><operator pos:start="47:18" pos:end="47:19">++</operator></expr></incr>)</control> <block pos:start="47:22" pos:end="107:5">{<block_content pos:start="49:9" pos:end="105:9">

        <decl_stmt pos:start="49:9" pos:end="49:36"><decl pos:start="49:9" pos:end="49:13"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:13">w</name></decl>, <decl pos:start="49:16" pos:end="49:16"><type ref="prev" pos:start="49:9" pos:end="49:11"/><name pos:start="49:16" pos:end="49:16">h</name></decl>, <decl pos:start="49:19" pos:end="49:23"><type ref="prev" pos:start="49:9" pos:end="49:11"/><name pos:start="49:19" pos:end="49:23">shift</name></decl>, <decl pos:start="49:26" pos:end="49:35"><type ref="prev" pos:start="49:9" pos:end="49:11"/><name pos:start="49:26" pos:end="49:35">pict_start</name></decl>;</decl_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:24"><expr pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:9">w</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <name pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:23">linesize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:47"><expr pos:start="55:9" pos:end="55:46"><name pos:start="55:9" pos:end="55:9">h</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:24">mb_height</name></name> <operator pos:start="55:26" pos:end="55:26">*</operator> <literal type="number" pos:start="55:28" pos:end="55:31">16</literal> <operator pos:start="55:31" pos:end="55:31">+</operator> <literal type="number" pos:start="55:33" pos:end="55:33">2</literal> <operator pos:start="55:35" pos:end="55:35">*</operator> <name pos:start="55:37" pos:end="55:46">EDGE_WIDTH</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:13">shift</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <ternary pos:start="57:17" pos:end="57:32"><condition pos:start="57:17" pos:end="57:26"><expr pos:start="57:17" pos:end="57:24"><operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:18">i</name> <operator pos:start="57:20" pos:end="57:21">==</operator> <literal type="number" pos:start="57:23" pos:end="57:23">0</literal><operator pos:start="57:24" pos:end="57:24">)</operator></expr> ?</condition><then pos:start="57:28" pos:end="57:28"> <expr pos:start="57:28" pos:end="57:28"><literal type="number" pos:start="57:28" pos:end="57:28">0</literal></expr> </then><else pos:start="57:30" pos:end="57:32">: <expr pos:start="57:32" pos:end="57:32"><literal type="number" pos:start="57:32" pos:end="57:32">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:45"><expr pos:start="59:9" pos:end="59:44"><name pos:start="59:9" pos:end="59:14">c_size</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <operator pos:start="59:18" pos:end="59:18">(</operator><name pos:start="59:19" pos:end="59:19">w</name> <operator pos:start="59:21" pos:end="59:22">&gt;&gt;</operator> <name pos:start="59:24" pos:end="59:28">shift</name><operator pos:start="59:29" pos:end="59:29">)</operator> <operator pos:start="59:31" pos:end="59:31">*</operator> <operator pos:start="59:33" pos:end="59:33">(</operator><name pos:start="59:34" pos:end="59:34">h</name> <operator pos:start="59:36" pos:end="59:37">&gt;&gt;</operator> <name pos:start="59:39" pos:end="59:43">shift</name><operator pos:start="59:44" pos:end="59:44">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:82"><expr pos:start="61:9" pos:end="61:81"><name pos:start="61:9" pos:end="61:18">pict_start</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <operator pos:start="61:22" pos:end="61:22">(</operator><name pos:start="61:23" pos:end="61:23">w</name> <operator pos:start="61:25" pos:end="61:26">&gt;&gt;</operator> <name pos:start="61:28" pos:end="61:32">shift</name><operator pos:start="61:33" pos:end="61:33">)</operator> <operator pos:start="61:35" pos:end="61:35">*</operator> <operator pos:start="61:37" pos:end="61:37">(</operator><name pos:start="61:38" pos:end="61:47">EDGE_WIDTH</name> <operator pos:start="61:49" pos:end="61:50">&gt;&gt;</operator> <name pos:start="61:52" pos:end="61:56">shift</name><operator pos:start="61:57" pos:end="61:57">)</operator> <operator pos:start="61:59" pos:end="61:59">+</operator> <operator pos:start="61:61" pos:end="61:61">(</operator><name pos:start="61:62" pos:end="61:71">EDGE_WIDTH</name> <operator pos:start="61:73" pos:end="61:74">&gt;&gt;</operator> <name pos:start="61:76" pos:end="61:80">shift</name><operator pos:start="61:81" pos:end="61:81">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:34"><expr pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:12">pict</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:33"><name pos:start="65:16" pos:end="65:25">av_mallocz</name><argument_list pos:start="65:26" pos:end="65:33">(<argument pos:start="65:27" pos:end="65:32"><expr pos:start="65:27" pos:end="65:32"><name pos:start="65:27" pos:end="65:32">c_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:22"><if pos:start="67:9" pos:end="69:22">if <condition pos:start="67:12" pos:end="67:25">(<expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:16">pict</name> <operator pos:start="67:18" pos:end="67:19">==</operator> <name pos:start="67:21" pos:end="67:24">NULL</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:22"><block_content pos:start="69:13" pos:end="69:22">

            <goto pos:start="69:13" pos:end="69:22">goto <name pos:start="69:18" pos:end="69:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:39"><expr pos:start="71:9" pos:end="71:38"><name pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:28">last_picture_base</name><index pos:start="71:29" pos:end="71:31">[<expr pos:start="71:30" pos:end="71:30"><name pos:start="71:30" pos:end="71:30">i</name></expr>]</index></name> <operator pos:start="71:33" pos:end="71:33">=</operator> <name pos:start="71:35" pos:end="71:38">pict</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:47"><expr pos:start="73:9" pos:end="73:46"><name pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:23">last_picture</name><index pos:start="73:24" pos:end="73:26">[<expr pos:start="73:25" pos:end="73:25"><name pos:start="73:25" pos:end="73:25">i</name></expr>]</index></name> <operator pos:start="73:28" pos:end="73:28">=</operator> <name pos:start="73:30" pos:end="73:33">pict</name> <operator pos:start="73:35" pos:end="73:35">+</operator> <name pos:start="73:37" pos:end="73:46">pict_start</name></expr>;</expr_stmt>

    

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:12">pict</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <call pos:start="77:16" pos:end="77:33"><name pos:start="77:16" pos:end="77:25">av_mallocz</name><argument_list pos:start="77:26" pos:end="77:33">(<argument pos:start="77:27" pos:end="77:32"><expr pos:start="77:27" pos:end="77:32"><name pos:start="77:27" pos:end="77:32">c_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:22"><if pos:start="79:9" pos:end="81:22">if <condition pos:start="79:12" pos:end="79:25">(<expr pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:16">pict</name> <operator pos:start="79:18" pos:end="79:19">==</operator> <name pos:start="79:21" pos:end="79:24">NULL</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:22"><block_content pos:start="81:13" pos:end="81:22">

            <goto pos:start="81:13" pos:end="81:22">goto <name pos:start="81:18" pos:end="81:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:39"><expr pos:start="83:9" pos:end="83:38"><name pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:28">next_picture_base</name><index pos:start="83:29" pos:end="83:31">[<expr pos:start="83:30" pos:end="83:30"><name pos:start="83:30" pos:end="83:30">i</name></expr>]</index></name> <operator pos:start="83:33" pos:end="83:33">=</operator> <name pos:start="83:35" pos:end="83:38">pict</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:47"><expr pos:start="85:9" pos:end="85:46"><name pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:23">next_picture</name><index pos:start="85:24" pos:end="85:26">[<expr pos:start="85:25" pos:end="85:25"><name pos:start="85:25" pos:end="85:25">i</name></expr>]</index></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:33">pict</name> <operator pos:start="85:35" pos:end="85:35">+</operator> <name pos:start="85:37" pos:end="85:46">pict_start</name></expr>;</expr_stmt>

        

        <if_stmt pos:start="89:9" pos:end="105:9"><if pos:start="89:9" pos:end="105:9">if <condition pos:start="89:12" pos:end="89:59">(<expr pos:start="89:13" pos:end="89:58"><name pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:27">has_b_frames</name></name> <operator pos:start="89:29" pos:end="89:30">||</operator> <name pos:start="89:32" pos:end="89:42"><name pos:start="89:32" pos:end="89:32">s</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:42">codec_id</name></name><operator pos:start="89:43" pos:end="89:44">==</operator><name pos:start="89:45" pos:end="89:58">CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="89:61" pos:end="105:9">{<block_content pos:start="95:13" pos:end="103:50">

        <comment type="block" pos:start="91:9" pos:end="93:117">/* Note the MPEG4 stuff is here cuz of buggy encoders which dont set the low_delay flag but 

           do low-delay encoding, so we cant allways distinguish b-frame containing streams from low_delay streams */</comment>

            <expr_stmt pos:start="95:13" pos:end="95:38"><expr pos:start="95:13" pos:end="95:37"><name pos:start="95:13" pos:end="95:16">pict</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <call pos:start="95:20" pos:end="95:37"><name pos:start="95:20" pos:end="95:29">av_mallocz</name><argument_list pos:start="95:30" pos:end="95:37">(<argument pos:start="95:31" pos:end="95:36"><expr pos:start="95:31" pos:end="95:36"><name pos:start="95:31" pos:end="95:36">c_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="99:26"><if pos:start="97:13" pos:end="99:26">if <condition pos:start="97:16" pos:end="97:29">(<expr pos:start="97:17" pos:end="97:28"><name pos:start="97:17" pos:end="97:20">pict</name> <operator pos:start="97:22" pos:end="97:23">==</operator> <name pos:start="97:25" pos:end="97:28">NULL</name></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:26"><block_content pos:start="99:17" pos:end="99:26"> 

                <goto pos:start="99:17" pos:end="99:26">goto <name pos:start="99:22" pos:end="99:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:42"><expr pos:start="101:13" pos:end="101:41"><name pos:start="101:13" pos:end="101:34"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:31">aux_picture_base</name><index pos:start="101:32" pos:end="101:34">[<expr pos:start="101:33" pos:end="101:33"><name pos:start="101:33" pos:end="101:33">i</name></expr>]</index></name> <operator pos:start="101:36" pos:end="101:36">=</operator> <name pos:start="101:38" pos:end="101:41">pict</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:50"><expr pos:start="103:13" pos:end="103:49"><name pos:start="103:13" pos:end="103:29"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:26">aux_picture</name><index pos:start="103:27" pos:end="103:29">[<expr pos:start="103:28" pos:end="103:28"><name pos:start="103:28" pos:end="103:28">i</name></expr>]</index></name> <operator pos:start="103:31" pos:end="103:31">=</operator> <name pos:start="103:33" pos:end="103:36">pict</name> <operator pos:start="103:38" pos:end="103:38">+</operator> <name pos:start="103:40" pos:end="103:49">pict_start</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    

    <if_stmt pos:start="111:5" pos:end="287:5"><if pos:start="111:5" pos:end="287:5">if <condition pos:start="111:8" pos:end="111:20">(<expr pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:19">encoding</name></name></expr>)</condition> <block pos:start="111:22" pos:end="287:5">{<block_content pos:start="113:9" pos:end="285:9">

        <decl_stmt pos:start="113:9" pos:end="113:14"><decl pos:start="113:9" pos:end="113:13"><type pos:start="113:9" pos:end="113:11"><name pos:start="113:9" pos:end="113:11">int</name></type> <name pos:start="113:13" pos:end="113:13">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="115:9" pos:end="115:60"><decl pos:start="115:9" pos:end="115:59"><type pos:start="115:9" pos:end="115:11"><name pos:start="115:9" pos:end="115:11">int</name></type> <name pos:start="115:13" pos:end="115:25">mv_table_size</name><init pos:start="115:26" pos:end="115:59">= <expr pos:start="115:28" pos:end="115:59"><operator pos:start="115:28" pos:end="115:28">(</operator><name pos:start="115:29" pos:end="115:39"><name pos:start="115:29" pos:end="115:29">s</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:39">mb_width</name></name><operator pos:start="115:40" pos:end="115:40">+</operator><literal type="number" pos:start="115:41" pos:end="115:41">2</literal><operator pos:start="115:42" pos:end="115:42">)</operator><operator pos:start="115:43" pos:end="115:43">*</operator><operator pos:start="115:44" pos:end="115:44">(</operator><name pos:start="115:45" pos:end="115:56"><name pos:start="115:45" pos:end="115:45">s</name><operator pos:start="115:46" pos:end="115:47">-&gt;</operator><name pos:start="115:48" pos:end="115:56">mb_height</name></name><operator pos:start="115:57" pos:end="115:57">+</operator><literal type="number" pos:start="115:58" pos:end="115:58">2</literal><operator pos:start="115:59" pos:end="115:59">)</operator></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="119:9" pos:end="119:36">/* Allocate MB type table */</comment>

        <expr_stmt pos:start="121:9" pos:end="121:58"><expr pos:start="121:9" pos:end="121:57"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:18">mb_type</name></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <call pos:start="121:22" pos:end="121:57"><name pos:start="121:22" pos:end="121:31">av_mallocz</name><argument_list pos:start="121:32" pos:end="121:57">(<argument pos:start="121:33" pos:end="121:56"><expr pos:start="121:33" pos:end="121:56"><name pos:start="121:33" pos:end="121:41"><name pos:start="121:33" pos:end="121:33">s</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:41">mb_num</name></name> <operator pos:start="121:43" pos:end="121:43">*</operator> <sizeof pos:start="121:45" pos:end="121:56">sizeof<argument_list pos:start="121:51" pos:end="121:56">(<argument pos:start="121:52" pos:end="121:55"><expr pos:start="121:52" pos:end="121:55"><name pos:start="121:52" pos:end="121:55">char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:31">(<expr pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:22">mb_type</name></name> <operator pos:start="123:24" pos:end="123:25">==</operator> <name pos:start="123:27" pos:end="123:30">NULL</name></expr>)</condition> <block pos:start="123:33" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:22">

            <expr_stmt pos:start="125:13" pos:end="125:29"><expr pos:start="125:13" pos:end="125:28"><call pos:start="125:13" pos:end="125:28"><name pos:start="125:13" pos:end="125:18">perror</name><argument_list pos:start="125:19" pos:end="125:28">(<argument pos:start="125:20" pos:end="125:27"><expr pos:start="125:20" pos:end="125:27"><literal type="string" pos:start="125:20" pos:end="125:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="127:13" pos:end="127:22">goto <name pos:start="127:18" pos:end="127:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        

        <expr_stmt pos:start="133:9" pos:end="133:58"><expr pos:start="133:9" pos:end="133:57"><name pos:start="133:9" pos:end="133:17"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:17">mb_var</name></name> <operator pos:start="133:19" pos:end="133:19">=</operator> <call pos:start="133:21" pos:end="133:57"><name pos:start="133:21" pos:end="133:30">av_mallocz</name><argument_list pos:start="133:31" pos:end="133:57">(<argument pos:start="133:32" pos:end="133:56"><expr pos:start="133:32" pos:end="133:56"><name pos:start="133:32" pos:end="133:40"><name pos:start="133:32" pos:end="133:32">s</name><operator pos:start="133:33" pos:end="133:34">-&gt;</operator><name pos:start="133:35" pos:end="133:40">mb_num</name></name> <operator pos:start="133:42" pos:end="133:42">*</operator> <sizeof pos:start="133:44" pos:end="133:56">sizeof<argument_list pos:start="133:50" pos:end="133:56">(<argument pos:start="133:51" pos:end="133:55"><expr pos:start="133:51" pos:end="133:55"><name pos:start="133:51" pos:end="133:55">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="141:9"><if pos:start="135:9" pos:end="141:9">if <condition pos:start="135:12" pos:end="135:30">(<expr pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:21"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:21">mb_var</name></name> <operator pos:start="135:23" pos:end="135:24">==</operator> <name pos:start="135:26" pos:end="135:29">NULL</name></expr>)</condition> <block pos:start="135:32" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:22">

            <expr_stmt pos:start="137:13" pos:end="137:29"><expr pos:start="137:13" pos:end="137:28"><call pos:start="137:13" pos:end="137:28"><name pos:start="137:13" pos:end="137:18">perror</name><argument_list pos:start="137:19" pos:end="137:28">(<argument pos:start="137:20" pos:end="137:27"><expr pos:start="137:20" pos:end="137:27"><literal type="string" pos:start="137:20" pos:end="137:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="139:13" pos:end="139:22">goto <name pos:start="139:18" pos:end="139:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="145:9" pos:end="145:32">/* Allocate MV tables */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:70"><expr pos:start="147:9" pos:end="147:69"><name pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:21">p_mv_table</name></name> <operator pos:start="147:23" pos:end="147:23">=</operator> <call pos:start="147:25" pos:end="147:69"><name pos:start="147:25" pos:end="147:34">av_mallocz</name><argument_list pos:start="147:35" pos:end="147:69">(<argument pos:start="147:36" pos:end="147:68"><expr pos:start="147:36" pos:end="147:68"><name pos:start="147:36" pos:end="147:48">mv_table_size</name> <operator pos:start="147:50" pos:end="147:50">*</operator> <literal type="number" pos:start="147:52" pos:end="147:52">2</literal> <operator pos:start="147:54" pos:end="147:54">*</operator> <sizeof pos:start="147:56" pos:end="147:68">sizeof<argument_list pos:start="147:62" pos:end="147:68">(<argument pos:start="147:63" pos:end="147:67"><expr pos:start="147:63" pos:end="147:67"><name pos:start="147:63" pos:end="147:67">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="155:9"><if pos:start="149:9" pos:end="155:9">if <condition pos:start="149:12" pos:end="149:34">(<expr pos:start="149:13" pos:end="149:33"><name pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:25">p_mv_table</name></name> <operator pos:start="149:27" pos:end="149:28">==</operator> <name pos:start="149:30" pos:end="149:33">NULL</name></expr>)</condition> <block pos:start="149:36" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:22">

            <expr_stmt pos:start="151:13" pos:end="151:29"><expr pos:start="151:13" pos:end="151:28"><call pos:start="151:13" pos:end="151:28"><name pos:start="151:13" pos:end="151:18">perror</name><argument_list pos:start="151:19" pos:end="151:28">(<argument pos:start="151:20" pos:end="151:27"><expr pos:start="151:20" pos:end="151:27"><literal type="string" pos:start="151:20" pos:end="151:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="153:13" pos:end="153:22">goto <name pos:start="153:18" pos:end="153:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:75"><expr pos:start="157:9" pos:end="157:74"><name pos:start="157:9" pos:end="157:26"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:26">last_p_mv_table</name></name> <operator pos:start="157:28" pos:end="157:28">=</operator> <call pos:start="157:30" pos:end="157:74"><name pos:start="157:30" pos:end="157:39">av_mallocz</name><argument_list pos:start="157:40" pos:end="157:74">(<argument pos:start="157:41" pos:end="157:73"><expr pos:start="157:41" pos:end="157:73"><name pos:start="157:41" pos:end="157:53">mv_table_size</name> <operator pos:start="157:55" pos:end="157:55">*</operator> <literal type="number" pos:start="157:57" pos:end="157:57">2</literal> <operator pos:start="157:59" pos:end="157:59">*</operator> <sizeof pos:start="157:61" pos:end="157:73">sizeof<argument_list pos:start="157:67" pos:end="157:73">(<argument pos:start="157:68" pos:end="157:72"><expr pos:start="157:68" pos:end="157:72"><name pos:start="157:68" pos:end="157:72">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="165:9"><if pos:start="159:9" pos:end="165:9">if <condition pos:start="159:12" pos:end="159:39">(<expr pos:start="159:13" pos:end="159:38"><name pos:start="159:13" pos:end="159:30"><name pos:start="159:13" pos:end="159:13">s</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:30">last_p_mv_table</name></name> <operator pos:start="159:32" pos:end="159:33">==</operator> <name pos:start="159:35" pos:end="159:38">NULL</name></expr>)</condition> <block pos:start="159:41" pos:end="165:9">{<block_content pos:start="161:13" pos:end="163:22">

            <expr_stmt pos:start="161:13" pos:end="161:29"><expr pos:start="161:13" pos:end="161:28"><call pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:18">perror</name><argument_list pos:start="161:19" pos:end="161:28">(<argument pos:start="161:20" pos:end="161:27"><expr pos:start="161:20" pos:end="161:27"><literal type="string" pos:start="161:20" pos:end="161:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="163:13" pos:end="163:22">goto <name pos:start="163:18" pos:end="163:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:75"><expr pos:start="167:9" pos:end="167:74"><name pos:start="167:9" pos:end="167:26"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:26">b_forw_mv_table</name></name> <operator pos:start="167:28" pos:end="167:28">=</operator> <call pos:start="167:30" pos:end="167:74"><name pos:start="167:30" pos:end="167:39">av_mallocz</name><argument_list pos:start="167:40" pos:end="167:74">(<argument pos:start="167:41" pos:end="167:73"><expr pos:start="167:41" pos:end="167:73"><name pos:start="167:41" pos:end="167:53">mv_table_size</name> <operator pos:start="167:55" pos:end="167:55">*</operator> <literal type="number" pos:start="167:57" pos:end="167:57">2</literal> <operator pos:start="167:59" pos:end="167:59">*</operator> <sizeof pos:start="167:61" pos:end="167:73">sizeof<argument_list pos:start="167:67" pos:end="167:73">(<argument pos:start="167:68" pos:end="167:72"><expr pos:start="167:68" pos:end="167:72"><name pos:start="167:68" pos:end="167:72">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="175:9"><if pos:start="169:9" pos:end="175:9">if <condition pos:start="169:12" pos:end="169:39">(<expr pos:start="169:13" pos:end="169:38"><name pos:start="169:13" pos:end="169:30"><name pos:start="169:13" pos:end="169:13">s</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:30">b_forw_mv_table</name></name> <operator pos:start="169:32" pos:end="169:33">==</operator> <name pos:start="169:35" pos:end="169:38">NULL</name></expr>)</condition> <block pos:start="169:41" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:22">

            <expr_stmt pos:start="171:13" pos:end="171:29"><expr pos:start="171:13" pos:end="171:28"><call pos:start="171:13" pos:end="171:28"><name pos:start="171:13" pos:end="171:18">perror</name><argument_list pos:start="171:19" pos:end="171:28">(<argument pos:start="171:20" pos:end="171:27"><expr pos:start="171:20" pos:end="171:27"><literal type="string" pos:start="171:20" pos:end="171:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="173:13" pos:end="173:22">goto <name pos:start="173:18" pos:end="173:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:75"><expr pos:start="177:9" pos:end="177:74"><name pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:9">s</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:26">b_back_mv_table</name></name> <operator pos:start="177:28" pos:end="177:28">=</operator> <call pos:start="177:30" pos:end="177:74"><name pos:start="177:30" pos:end="177:39">av_mallocz</name><argument_list pos:start="177:40" pos:end="177:74">(<argument pos:start="177:41" pos:end="177:73"><expr pos:start="177:41" pos:end="177:73"><name pos:start="177:41" pos:end="177:53">mv_table_size</name> <operator pos:start="177:55" pos:end="177:55">*</operator> <literal type="number" pos:start="177:57" pos:end="177:57">2</literal> <operator pos:start="177:59" pos:end="177:59">*</operator> <sizeof pos:start="177:61" pos:end="177:73">sizeof<argument_list pos:start="177:67" pos:end="177:73">(<argument pos:start="177:68" pos:end="177:72"><expr pos:start="177:68" pos:end="177:72"><name pos:start="177:68" pos:end="177:72">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="185:9"><if pos:start="179:9" pos:end="185:9">if <condition pos:start="179:12" pos:end="179:39">(<expr pos:start="179:13" pos:end="179:38"><name pos:start="179:13" pos:end="179:30"><name pos:start="179:13" pos:end="179:13">s</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:30">b_back_mv_table</name></name> <operator pos:start="179:32" pos:end="179:33">==</operator> <name pos:start="179:35" pos:end="179:38">NULL</name></expr>)</condition> <block pos:start="179:41" pos:end="185:9">{<block_content pos:start="181:13" pos:end="183:22">

            <expr_stmt pos:start="181:13" pos:end="181:29"><expr pos:start="181:13" pos:end="181:28"><call pos:start="181:13" pos:end="181:28"><name pos:start="181:13" pos:end="181:18">perror</name><argument_list pos:start="181:19" pos:end="181:28">(<argument pos:start="181:20" pos:end="181:27"><expr pos:start="181:20" pos:end="181:27"><literal type="string" pos:start="181:20" pos:end="181:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="183:13" pos:end="183:22">goto <name pos:start="183:18" pos:end="183:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:81"><expr pos:start="187:9" pos:end="187:80"><name pos:start="187:9" pos:end="187:32"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:32">b_bidir_forw_mv_table</name></name> <operator pos:start="187:34" pos:end="187:34">=</operator> <call pos:start="187:36" pos:end="187:80"><name pos:start="187:36" pos:end="187:45">av_mallocz</name><argument_list pos:start="187:46" pos:end="187:80">(<argument pos:start="187:47" pos:end="187:79"><expr pos:start="187:47" pos:end="187:79"><name pos:start="187:47" pos:end="187:59">mv_table_size</name> <operator pos:start="187:61" pos:end="187:61">*</operator> <literal type="number" pos:start="187:63" pos:end="187:63">2</literal> <operator pos:start="187:65" pos:end="187:65">*</operator> <sizeof pos:start="187:67" pos:end="187:79">sizeof<argument_list pos:start="187:73" pos:end="187:79">(<argument pos:start="187:74" pos:end="187:78"><expr pos:start="187:74" pos:end="187:78"><name pos:start="187:74" pos:end="187:78">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="189:9" pos:end="195:9"><if pos:start="189:9" pos:end="195:9">if <condition pos:start="189:12" pos:end="189:45">(<expr pos:start="189:13" pos:end="189:44"><name pos:start="189:13" pos:end="189:36"><name pos:start="189:13" pos:end="189:13">s</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:36">b_bidir_forw_mv_table</name></name> <operator pos:start="189:38" pos:end="189:39">==</operator> <name pos:start="189:41" pos:end="189:44">NULL</name></expr>)</condition> <block pos:start="189:47" pos:end="195:9">{<block_content pos:start="191:13" pos:end="193:22">

            <expr_stmt pos:start="191:13" pos:end="191:29"><expr pos:start="191:13" pos:end="191:28"><call pos:start="191:13" pos:end="191:28"><name pos:start="191:13" pos:end="191:18">perror</name><argument_list pos:start="191:19" pos:end="191:28">(<argument pos:start="191:20" pos:end="191:27"><expr pos:start="191:20" pos:end="191:27"><literal type="string" pos:start="191:20" pos:end="191:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="193:13" pos:end="193:22">goto <name pos:start="193:18" pos:end="193:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:81"><expr pos:start="197:9" pos:end="197:80"><name pos:start="197:9" pos:end="197:32"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:32">b_bidir_back_mv_table</name></name> <operator pos:start="197:34" pos:end="197:34">=</operator> <call pos:start="197:36" pos:end="197:80"><name pos:start="197:36" pos:end="197:45">av_mallocz</name><argument_list pos:start="197:46" pos:end="197:80">(<argument pos:start="197:47" pos:end="197:79"><expr pos:start="197:47" pos:end="197:79"><name pos:start="197:47" pos:end="197:59">mv_table_size</name> <operator pos:start="197:61" pos:end="197:61">*</operator> <literal type="number" pos:start="197:63" pos:end="197:63">2</literal> <operator pos:start="197:65" pos:end="197:65">*</operator> <sizeof pos:start="197:67" pos:end="197:79">sizeof<argument_list pos:start="197:73" pos:end="197:79">(<argument pos:start="197:74" pos:end="197:78"><expr pos:start="197:74" pos:end="197:78"><name pos:start="197:74" pos:end="197:78">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="199:9" pos:end="205:9"><if pos:start="199:9" pos:end="205:9">if <condition pos:start="199:12" pos:end="199:45">(<expr pos:start="199:13" pos:end="199:44"><name pos:start="199:13" pos:end="199:36"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:36">b_bidir_back_mv_table</name></name> <operator pos:start="199:38" pos:end="199:39">==</operator> <name pos:start="199:41" pos:end="199:44">NULL</name></expr>)</condition> <block pos:start="199:47" pos:end="205:9">{<block_content pos:start="201:13" pos:end="203:22">

            <expr_stmt pos:start="201:13" pos:end="201:29"><expr pos:start="201:13" pos:end="201:28"><call pos:start="201:13" pos:end="201:28"><name pos:start="201:13" pos:end="201:18">perror</name><argument_list pos:start="201:19" pos:end="201:28">(<argument pos:start="201:20" pos:end="201:27"><expr pos:start="201:20" pos:end="201:27"><literal type="string" pos:start="201:20" pos:end="201:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="203:13" pos:end="203:22">goto <name pos:start="203:18" pos:end="203:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:82"><expr pos:start="207:9" pos:end="207:81"><name pos:start="207:9" pos:end="207:33"><name pos:start="207:9" pos:end="207:9">s</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:33">b_direct_forw_mv_table</name></name> <operator pos:start="207:35" pos:end="207:35">=</operator> <call pos:start="207:37" pos:end="207:81"><name pos:start="207:37" pos:end="207:46">av_mallocz</name><argument_list pos:start="207:47" pos:end="207:81">(<argument pos:start="207:48" pos:end="207:80"><expr pos:start="207:48" pos:end="207:80"><name pos:start="207:48" pos:end="207:60">mv_table_size</name> <operator pos:start="207:62" pos:end="207:62">*</operator> <literal type="number" pos:start="207:64" pos:end="207:64">2</literal> <operator pos:start="207:66" pos:end="207:66">*</operator> <sizeof pos:start="207:68" pos:end="207:80">sizeof<argument_list pos:start="207:74" pos:end="207:80">(<argument pos:start="207:75" pos:end="207:79"><expr pos:start="207:75" pos:end="207:79"><name pos:start="207:75" pos:end="207:79">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="209:9" pos:end="215:9"><if pos:start="209:9" pos:end="215:9">if <condition pos:start="209:12" pos:end="209:46">(<expr pos:start="209:13" pos:end="209:45"><name pos:start="209:13" pos:end="209:37"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:37">b_direct_forw_mv_table</name></name> <operator pos:start="209:39" pos:end="209:40">==</operator> <name pos:start="209:42" pos:end="209:45">NULL</name></expr>)</condition> <block pos:start="209:48" pos:end="215:9">{<block_content pos:start="211:13" pos:end="213:22">

            <expr_stmt pos:start="211:13" pos:end="211:29"><expr pos:start="211:13" pos:end="211:28"><call pos:start="211:13" pos:end="211:28"><name pos:start="211:13" pos:end="211:18">perror</name><argument_list pos:start="211:19" pos:end="211:28">(<argument pos:start="211:20" pos:end="211:27"><expr pos:start="211:20" pos:end="211:27"><literal type="string" pos:start="211:20" pos:end="211:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="213:13" pos:end="213:22">goto <name pos:start="213:18" pos:end="213:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:82"><expr pos:start="217:9" pos:end="217:81"><name pos:start="217:9" pos:end="217:33"><name pos:start="217:9" pos:end="217:9">s</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:33">b_direct_back_mv_table</name></name> <operator pos:start="217:35" pos:end="217:35">=</operator> <call pos:start="217:37" pos:end="217:81"><name pos:start="217:37" pos:end="217:46">av_mallocz</name><argument_list pos:start="217:47" pos:end="217:81">(<argument pos:start="217:48" pos:end="217:80"><expr pos:start="217:48" pos:end="217:80"><name pos:start="217:48" pos:end="217:60">mv_table_size</name> <operator pos:start="217:62" pos:end="217:62">*</operator> <literal type="number" pos:start="217:64" pos:end="217:64">2</literal> <operator pos:start="217:66" pos:end="217:66">*</operator> <sizeof pos:start="217:68" pos:end="217:80">sizeof<argument_list pos:start="217:74" pos:end="217:80">(<argument pos:start="217:75" pos:end="217:79"><expr pos:start="217:75" pos:end="217:79"><name pos:start="217:75" pos:end="217:79">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="219:9" pos:end="225:9"><if pos:start="219:9" pos:end="225:9">if <condition pos:start="219:12" pos:end="219:46">(<expr pos:start="219:13" pos:end="219:45"><name pos:start="219:13" pos:end="219:37"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:37">b_direct_back_mv_table</name></name> <operator pos:start="219:39" pos:end="219:40">==</operator> <name pos:start="219:42" pos:end="219:45">NULL</name></expr>)</condition> <block pos:start="219:48" pos:end="225:9">{<block_content pos:start="221:13" pos:end="223:22">

            <expr_stmt pos:start="221:13" pos:end="221:29"><expr pos:start="221:13" pos:end="221:28"><call pos:start="221:13" pos:end="221:28"><name pos:start="221:13" pos:end="221:18">perror</name><argument_list pos:start="221:19" pos:end="221:28">(<argument pos:start="221:20" pos:end="221:27"><expr pos:start="221:20" pos:end="221:27"><literal type="string" pos:start="221:20" pos:end="221:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="223:13" pos:end="223:22">goto <name pos:start="223:18" pos:end="223:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:77"><expr pos:start="227:9" pos:end="227:76"><name pos:start="227:9" pos:end="227:28"><name pos:start="227:9" pos:end="227:9">s</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:28">b_direct_mv_table</name></name> <operator pos:start="227:30" pos:end="227:30">=</operator> <call pos:start="227:32" pos:end="227:76"><name pos:start="227:32" pos:end="227:41">av_mallocz</name><argument_list pos:start="227:42" pos:end="227:76">(<argument pos:start="227:43" pos:end="227:75"><expr pos:start="227:43" pos:end="227:75"><name pos:start="227:43" pos:end="227:55">mv_table_size</name> <operator pos:start="227:57" pos:end="227:57">*</operator> <literal type="number" pos:start="227:59" pos:end="227:59">2</literal> <operator pos:start="227:61" pos:end="227:61">*</operator> <sizeof pos:start="227:63" pos:end="227:75">sizeof<argument_list pos:start="227:69" pos:end="227:75">(<argument pos:start="227:70" pos:end="227:74"><expr pos:start="227:70" pos:end="227:74"><name pos:start="227:70" pos:end="227:74">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="229:9" pos:end="235:9"><if pos:start="229:9" pos:end="235:9">if <condition pos:start="229:12" pos:end="229:41">(<expr pos:start="229:13" pos:end="229:40"><name pos:start="229:13" pos:end="229:32"><name pos:start="229:13" pos:end="229:13">s</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:32">b_direct_mv_table</name></name> <operator pos:start="229:34" pos:end="229:35">==</operator> <name pos:start="229:37" pos:end="229:40">NULL</name></expr>)</condition> <block pos:start="229:43" pos:end="235:9">{<block_content pos:start="231:13" pos:end="233:22">

            <expr_stmt pos:start="231:13" pos:end="231:29"><expr pos:start="231:13" pos:end="231:28"><call pos:start="231:13" pos:end="231:28"><name pos:start="231:13" pos:end="231:18">perror</name><argument_list pos:start="231:19" pos:end="231:28">(<argument pos:start="231:20" pos:end="231:27"><expr pos:start="231:20" pos:end="231:27"><literal type="string" pos:start="231:20" pos:end="231:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="233:13" pos:end="233:22">goto <name pos:start="233:18" pos:end="233:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="239:9" pos:end="239:73"><expr pos:start="239:9" pos:end="239:72"><name pos:start="239:9" pos:end="239:24"><name pos:start="239:9" pos:end="239:9">s</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:24">me_scratchpad</name></name> <operator pos:start="239:26" pos:end="239:26">=</operator> <call pos:start="239:28" pos:end="239:72"><name pos:start="239:28" pos:end="239:37">av_mallocz</name><argument_list pos:start="239:38" pos:end="239:72">( <argument pos:start="239:40" pos:end="239:71"><expr pos:start="239:40" pos:end="239:71"><name pos:start="239:40" pos:end="239:50"><name pos:start="239:40" pos:end="239:40">s</name><operator pos:start="239:41" pos:end="239:42">-&gt;</operator><name pos:start="239:43" pos:end="239:50">linesize</name></name><operator pos:start="239:51" pos:end="239:51">*</operator><literal type="number" pos:start="239:52" pos:end="239:53">16</literal><operator pos:start="239:54" pos:end="239:54">*</operator><literal type="number" pos:start="239:55" pos:end="239:55">3</literal><operator pos:start="239:56" pos:end="239:56">*</operator><sizeof pos:start="239:57" pos:end="239:71">sizeof<argument_list pos:start="239:63" pos:end="239:71">(<argument pos:start="239:64" pos:end="239:70"><expr pos:start="239:64" pos:end="239:70"><name pos:start="239:64" pos:end="239:70">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="241:9" pos:end="247:9"><if pos:start="241:9" pos:end="247:9">if <condition pos:start="241:12" pos:end="241:37">(<expr pos:start="241:13" pos:end="241:36"><name pos:start="241:13" pos:end="241:28"><name pos:start="241:13" pos:end="241:13">s</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:28">me_scratchpad</name></name> <operator pos:start="241:30" pos:end="241:31">==</operator> <name pos:start="241:33" pos:end="241:36">NULL</name></expr>)</condition> <block pos:start="241:39" pos:end="247:9">{<block_content pos:start="243:13" pos:end="245:22">

            <expr_stmt pos:start="243:13" pos:end="243:29"><expr pos:start="243:13" pos:end="243:28"><call pos:start="243:13" pos:end="243:28"><name pos:start="243:13" pos:end="243:18">perror</name><argument_list pos:start="243:19" pos:end="243:28">(<argument pos:start="243:20" pos:end="243:27"><expr pos:start="243:20" pos:end="243:27"><literal type="string" pos:start="243:20" pos:end="243:27">"malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="245:13" pos:end="245:22">goto <name pos:start="245:18" pos:end="245:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="251:9" pos:end="285:9"><if pos:start="251:9" pos:end="285:9">if<condition pos:start="251:11" pos:end="251:27">(<expr pos:start="251:12" pos:end="251:26"><name pos:start="251:12" pos:end="251:26"><name pos:start="251:12" pos:end="251:12">s</name><operator pos:start="251:13" pos:end="251:14">-&gt;</operator><name pos:start="251:15" pos:end="251:26">max_b_frames</name></name></expr>)</condition><block pos:start="251:28" pos:end="285:9">{<block_content pos:start="253:13" pos:end="283:13">

            <for pos:start="253:13" pos:end="283:13">for<control pos:start="253:16" pos:end="253:48">(<init pos:start="253:17" pos:end="253:20"><expr pos:start="253:17" pos:end="253:19"><name pos:start="253:17" pos:end="253:17">j</name><operator pos:start="253:18" pos:end="253:18">=</operator><literal type="number" pos:start="253:19" pos:end="253:19">0</literal></expr>;</init> <condition pos:start="253:22" pos:end="253:43"><expr pos:start="253:22" pos:end="253:42"><name pos:start="253:22" pos:end="253:22">j</name><operator pos:start="253:23" pos:end="253:23">&lt;</operator><name pos:start="253:24" pos:end="253:42">REORDER_BUFFER_SIZE</name></expr>;</condition> <incr pos:start="253:45" pos:end="253:47"><expr pos:start="253:45" pos:end="253:47"><name pos:start="253:45" pos:end="253:45">j</name><operator pos:start="253:46" pos:end="253:47">++</operator></expr></incr>)</control><block pos:start="253:49" pos:end="283:13">{<block_content pos:start="255:17" pos:end="281:17">

                <decl_stmt pos:start="255:17" pos:end="255:22"><decl pos:start="255:17" pos:end="255:21"><type pos:start="255:17" pos:end="255:19"><name pos:start="255:17" pos:end="255:19">int</name></type> <name pos:start="255:21" pos:end="255:21">i</name></decl>;</decl_stmt>

                <for pos:start="257:17" pos:end="281:17">for<control pos:start="257:20" pos:end="257:32">(<init pos:start="257:21" pos:end="257:24"><expr pos:start="257:21" pos:end="257:23"><name pos:start="257:21" pos:end="257:21">i</name><operator pos:start="257:22" pos:end="257:22">=</operator><literal type="number" pos:start="257:23" pos:end="257:23">0</literal></expr>;</init><condition pos:start="257:25" pos:end="257:28"><expr pos:start="257:25" pos:end="257:27"><name pos:start="257:25" pos:end="257:25">i</name><operator pos:start="257:26" pos:end="257:26">&lt;</operator><literal type="number" pos:start="257:27" pos:end="257:27">3</literal></expr>;</condition><incr pos:start="257:29" pos:end="257:31"><expr pos:start="257:29" pos:end="257:31"><name pos:start="257:29" pos:end="257:29">i</name><operator pos:start="257:30" pos:end="257:31">++</operator></expr></incr>)</control> <block pos:start="257:34" pos:end="281:17">{<block_content pos:start="259:21" pos:end="279:51">

                    <decl_stmt pos:start="259:21" pos:end="259:36"><decl pos:start="259:21" pos:end="259:25"><type pos:start="259:21" pos:end="259:23"><name pos:start="259:21" pos:end="259:23">int</name></type> <name pos:start="259:25" pos:end="259:25">w</name></decl>, <decl pos:start="259:28" pos:end="259:28"><type ref="prev" pos:start="259:21" pos:end="259:23"/><name pos:start="259:28" pos:end="259:28">h</name></decl>, <decl pos:start="259:31" pos:end="259:35"><type ref="prev" pos:start="259:21" pos:end="259:23"/><name pos:start="259:31" pos:end="259:35">shift</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="263:21" pos:end="263:36"><expr pos:start="263:21" pos:end="263:35"><name pos:start="263:21" pos:end="263:21">w</name> <operator pos:start="263:23" pos:end="263:23">=</operator> <name pos:start="263:25" pos:end="263:35"><name pos:start="263:25" pos:end="263:25">s</name><operator pos:start="263:26" pos:end="263:27">-&gt;</operator><name pos:start="263:28" pos:end="263:35">linesize</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="265:21" pos:end="265:42"><expr pos:start="265:21" pos:end="265:41"><name pos:start="265:21" pos:end="265:21">h</name> <operator pos:start="265:23" pos:end="265:23">=</operator> <name pos:start="265:25" pos:end="265:36"><name pos:start="265:25" pos:end="265:25">s</name><operator pos:start="265:26" pos:end="265:27">-&gt;</operator><name pos:start="265:28" pos:end="265:36">mb_height</name></name> <operator pos:start="265:38" pos:end="265:38">*</operator> <literal type="number" pos:start="265:40" pos:end="265:41">16</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="267:21" pos:end="267:45"><expr pos:start="267:21" pos:end="267:44"><name pos:start="267:21" pos:end="267:25">shift</name> <operator pos:start="267:27" pos:end="267:27">=</operator> <ternary pos:start="267:29" pos:end="267:44"><condition pos:start="267:29" pos:end="267:38"><expr pos:start="267:29" pos:end="267:36"><operator pos:start="267:29" pos:end="267:29">(</operator><name pos:start="267:30" pos:end="267:30">i</name> <operator pos:start="267:32" pos:end="267:33">==</operator> <literal type="number" pos:start="267:35" pos:end="267:35">0</literal><operator pos:start="267:36" pos:end="267:36">)</operator></expr> ?</condition><then pos:start="267:40" pos:end="267:40"> <expr pos:start="267:40" pos:end="267:40"><literal type="number" pos:start="267:40" pos:end="267:40">0</literal></expr> </then><else pos:start="267:42" pos:end="267:44">: <expr pos:start="267:44" pos:end="267:44"><literal type="number" pos:start="267:44" pos:end="267:44">1</literal></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="269:21" pos:end="269:57"><expr pos:start="269:21" pos:end="269:56"><name pos:start="269:21" pos:end="269:26">c_size</name> <operator pos:start="269:28" pos:end="269:28">=</operator> <operator pos:start="269:30" pos:end="269:30">(</operator><name pos:start="269:31" pos:end="269:31">w</name> <operator pos:start="269:33" pos:end="269:34">&gt;&gt;</operator> <name pos:start="269:36" pos:end="269:40">shift</name><operator pos:start="269:41" pos:end="269:41">)</operator> <operator pos:start="269:43" pos:end="269:43">*</operator> <operator pos:start="269:45" pos:end="269:45">(</operator><name pos:start="269:46" pos:end="269:46">h</name> <operator pos:start="269:48" pos:end="269:49">&gt;&gt;</operator> <name pos:start="269:51" pos:end="269:55">shift</name><operator pos:start="269:56" pos:end="269:56">)</operator></expr>;</expr_stmt>



                    <expr_stmt pos:start="273:21" pos:end="273:46"><expr pos:start="273:21" pos:end="273:45"><name pos:start="273:21" pos:end="273:24">pict</name> <operator pos:start="273:26" pos:end="273:26">=</operator> <call pos:start="273:28" pos:end="273:45"><name pos:start="273:28" pos:end="273:37">av_mallocz</name><argument_list pos:start="273:38" pos:end="273:45">(<argument pos:start="273:39" pos:end="273:44"><expr pos:start="273:39" pos:end="273:44"><name pos:start="273:39" pos:end="273:44">c_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="275:21" pos:end="277:34"><if pos:start="275:21" pos:end="277:34">if <condition pos:start="275:24" pos:end="275:37">(<expr pos:start="275:25" pos:end="275:36"><name pos:start="275:25" pos:end="275:28">pict</name> <operator pos:start="275:30" pos:end="275:31">==</operator> <name pos:start="275:33" pos:end="275:36">NULL</name></expr>)</condition><block type="pseudo" pos:start="277:25" pos:end="277:34"><block_content pos:start="277:25" pos:end="277:34">

                        <goto pos:start="277:25" pos:end="277:34">goto <name pos:start="277:30" pos:end="277:33">fail</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="279:21" pos:end="279:51"><expr pos:start="279:21" pos:end="279:50"><name pos:start="279:21" pos:end="279:43"><name pos:start="279:21" pos:end="279:21">s</name><operator pos:start="279:22" pos:end="279:23">-&gt;</operator><name pos:start="279:24" pos:end="279:37">picture_buffer</name><index pos:start="279:38" pos:end="279:40">[<expr pos:start="279:39" pos:end="279:39"><name pos:start="279:39" pos:end="279:39">j</name></expr>]</index><index pos:start="279:41" pos:end="279:43">[<expr pos:start="279:42" pos:end="279:42"><name pos:start="279:42" pos:end="279:42">i</name></expr>]</index></name> <operator pos:start="279:45" pos:end="279:45">=</operator> <name pos:start="279:47" pos:end="279:50">pict</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="291:5" pos:end="307:5"><if pos:start="291:5" pos:end="307:5">if <condition pos:start="291:8" pos:end="291:49">(<expr pos:start="291:9" pos:end="291:48"><name pos:start="291:9" pos:end="291:21"><name pos:start="291:9" pos:end="291:9">s</name><operator pos:start="291:10" pos:end="291:11">-&gt;</operator><name pos:start="291:12" pos:end="291:21">out_format</name></name> <operator pos:start="291:23" pos:end="291:24">==</operator> <name pos:start="291:26" pos:end="291:33">FMT_H263</name> <operator pos:start="291:35" pos:end="291:36">||</operator> <name pos:start="291:38" pos:end="291:48"><name pos:start="291:38" pos:end="291:38">s</name><operator pos:start="291:39" pos:end="291:40">-&gt;</operator><name pos:start="291:41" pos:end="291:48">encoding</name></name></expr>)</condition> <block pos:start="291:51" pos:end="307:5">{<block_content pos:start="293:9" pos:end="305:59">

        <decl_stmt pos:start="293:9" pos:end="293:17"><decl pos:start="293:9" pos:end="293:16"><type pos:start="293:9" pos:end="293:11"><name pos:start="293:9" pos:end="293:11">int</name></type> <name pos:start="293:13" pos:end="293:16">size</name></decl>;</decl_stmt>

        <comment type="block" pos:start="295:9" pos:end="295:27">/* MV prediction */</comment>

        <expr_stmt pos:start="297:9" pos:end="297:62"><expr pos:start="297:9" pos:end="297:61"><name pos:start="297:9" pos:end="297:12">size</name> <operator pos:start="297:14" pos:end="297:14">=</operator> <operator pos:start="297:16" pos:end="297:16">(</operator><literal type="number" pos:start="297:17" pos:end="297:17">2</literal> <operator pos:start="297:19" pos:end="297:19">*</operator> <name pos:start="297:21" pos:end="297:31"><name pos:start="297:21" pos:end="297:21">s</name><operator pos:start="297:22" pos:end="297:23">-&gt;</operator><name pos:start="297:24" pos:end="297:31">mb_width</name></name> <operator pos:start="297:33" pos:end="297:33">+</operator> <literal type="number" pos:start="297:35" pos:end="297:35">2</literal><operator pos:start="297:36" pos:end="297:36">)</operator> <operator pos:start="297:38" pos:end="297:38">*</operator> <operator pos:start="297:40" pos:end="297:40">(</operator><literal type="number" pos:start="297:41" pos:end="297:41">2</literal> <operator pos:start="297:43" pos:end="297:43">*</operator> <name pos:start="297:45" pos:end="297:56"><name pos:start="297:45" pos:end="297:45">s</name><operator pos:start="297:46" pos:end="297:47">-&gt;</operator><name pos:start="297:48" pos:end="297:56">mb_height</name></name> <operator pos:start="297:58" pos:end="297:58">+</operator> <literal type="number" pos:start="297:60" pos:end="297:60">2</literal><operator pos:start="297:61" pos:end="297:61">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:60"><expr pos:start="299:9" pos:end="299:59"><name pos:start="299:9" pos:end="299:21"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:21">motion_val</name></name> <operator pos:start="299:23" pos:end="299:23">=</operator> <call pos:start="299:25" pos:end="299:59"><name pos:start="299:25" pos:end="299:33">av_malloc</name><argument_list pos:start="299:34" pos:end="299:59">(<argument pos:start="299:35" pos:end="299:58"><expr pos:start="299:35" pos:end="299:58"><name pos:start="299:35" pos:end="299:38">size</name> <operator pos:start="299:40" pos:end="299:40">*</operator> <literal type="number" pos:start="299:42" pos:end="299:42">2</literal> <operator pos:start="299:44" pos:end="299:44">*</operator> <sizeof pos:start="299:46" pos:end="299:58">sizeof<argument_list pos:start="299:52" pos:end="299:58">(<argument pos:start="299:53" pos:end="299:57"><expr pos:start="299:53" pos:end="299:57"><name pos:start="299:53" pos:end="299:57">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="301:9" pos:end="303:22"><if pos:start="301:9" pos:end="303:22">if <condition pos:start="301:12" pos:end="301:34">(<expr pos:start="301:13" pos:end="301:33"><name pos:start="301:13" pos:end="301:25"><name pos:start="301:13" pos:end="301:13">s</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:25">motion_val</name></name> <operator pos:start="301:27" pos:end="301:28">==</operator> <name pos:start="301:30" pos:end="301:33">NULL</name></expr>)</condition><block type="pseudo" pos:start="303:13" pos:end="303:22"><block_content pos:start="303:13" pos:end="303:22">

            <goto pos:start="303:13" pos:end="303:22">goto <name pos:start="303:18" pos:end="303:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:59"><expr pos:start="305:9" pos:end="305:58"><call pos:start="305:9" pos:end="305:58"><name pos:start="305:9" pos:end="305:14">memset</name><argument_list pos:start="305:15" pos:end="305:58">(<argument pos:start="305:16" pos:end="305:28"><expr pos:start="305:16" pos:end="305:28"><name pos:start="305:16" pos:end="305:28"><name pos:start="305:16" pos:end="305:16">s</name><operator pos:start="305:17" pos:end="305:18">-&gt;</operator><name pos:start="305:19" pos:end="305:28">motion_val</name></name></expr></argument>, <argument pos:start="305:31" pos:end="305:31"><expr pos:start="305:31" pos:end="305:31"><literal type="number" pos:start="305:31" pos:end="305:31">0</literal></expr></argument>, <argument pos:start="305:34" pos:end="305:57"><expr pos:start="305:34" pos:end="305:57"><name pos:start="305:34" pos:end="305:37">size</name> <operator pos:start="305:39" pos:end="305:39">*</operator> <literal type="number" pos:start="305:41" pos:end="305:41">2</literal> <operator pos:start="305:43" pos:end="305:43">*</operator> <sizeof pos:start="305:45" pos:end="305:57">sizeof<argument_list pos:start="305:51" pos:end="305:57">(<argument pos:start="305:52" pos:end="305:56"><expr pos:start="305:52" pos:end="305:56"><name pos:start="305:52" pos:end="305:56">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="311:5" pos:end="387:5"><if pos:start="311:5" pos:end="387:5">if <condition pos:start="311:8" pos:end="311:37">(<expr pos:start="311:9" pos:end="311:36"><name pos:start="311:9" pos:end="311:20"><name pos:start="311:9" pos:end="311:9">s</name><operator pos:start="311:10" pos:end="311:11">-&gt;</operator><name pos:start="311:12" pos:end="311:20">h263_pred</name></name> <operator pos:start="311:22" pos:end="311:23">||</operator> <name pos:start="311:25" pos:end="311:36"><name pos:start="311:25" pos:end="311:25">s</name><operator pos:start="311:26" pos:end="311:27">-&gt;</operator><name pos:start="311:28" pos:end="311:36">h263_plus</name></name></expr>)</condition> <block pos:start="311:39" pos:end="387:5">{<block_content pos:start="313:9" pos:end="385:22">

        <decl_stmt pos:start="313:9" pos:end="313:36"><decl pos:start="313:9" pos:end="313:18"><type pos:start="313:9" pos:end="313:11"><name pos:start="313:9" pos:end="313:11">int</name></type> <name pos:start="313:13" pos:end="313:18">y_size</name></decl>, <decl pos:start="313:21" pos:end="313:26"><type ref="prev" pos:start="313:9" pos:end="313:11"/><name pos:start="313:21" pos:end="313:26">c_size</name></decl>, <decl pos:start="313:29" pos:end="313:29"><type ref="prev" pos:start="313:9" pos:end="313:11"/><name pos:start="313:29" pos:end="313:29">i</name></decl>, <decl pos:start="313:32" pos:end="313:35"><type ref="prev" pos:start="313:9" pos:end="313:11"/><name pos:start="313:32" pos:end="313:35">size</name></decl>;</decl_stmt>

        

        <comment type="block" pos:start="317:9" pos:end="317:23">/* dc values */</comment>



        <expr_stmt pos:start="321:9" pos:end="321:64"><expr pos:start="321:9" pos:end="321:63"><name pos:start="321:9" pos:end="321:14">y_size</name> <operator pos:start="321:16" pos:end="321:16">=</operator> <operator pos:start="321:18" pos:end="321:18">(</operator><literal type="number" pos:start="321:19" pos:end="321:19">2</literal> <operator pos:start="321:21" pos:end="321:21">*</operator> <name pos:start="321:23" pos:end="321:33"><name pos:start="321:23" pos:end="321:23">s</name><operator pos:start="321:24" pos:end="321:25">-&gt;</operator><name pos:start="321:26" pos:end="321:33">mb_width</name></name> <operator pos:start="321:35" pos:end="321:35">+</operator> <literal type="number" pos:start="321:37" pos:end="321:37">2</literal><operator pos:start="321:38" pos:end="321:38">)</operator> <operator pos:start="321:40" pos:end="321:40">*</operator> <operator pos:start="321:42" pos:end="321:42">(</operator><literal type="number" pos:start="321:43" pos:end="321:43">2</literal> <operator pos:start="321:45" pos:end="321:45">*</operator> <name pos:start="321:47" pos:end="321:58"><name pos:start="321:47" pos:end="321:47">s</name><operator pos:start="321:48" pos:end="321:49">-&gt;</operator><name pos:start="321:50" pos:end="321:58">mb_height</name></name> <operator pos:start="321:60" pos:end="321:60">+</operator> <literal type="number" pos:start="321:62" pos:end="321:62">2</literal><operator pos:start="321:63" pos:end="321:63">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:56"><expr pos:start="323:9" pos:end="323:55"><name pos:start="323:9" pos:end="323:14">c_size</name> <operator pos:start="323:16" pos:end="323:16">=</operator> <operator pos:start="323:18" pos:end="323:18">(</operator><name pos:start="323:19" pos:end="323:29"><name pos:start="323:19" pos:end="323:19">s</name><operator pos:start="323:20" pos:end="323:21">-&gt;</operator><name pos:start="323:22" pos:end="323:29">mb_width</name></name> <operator pos:start="323:31" pos:end="323:31">+</operator> <literal type="number" pos:start="323:33" pos:end="323:33">2</literal><operator pos:start="323:34" pos:end="323:34">)</operator> <operator pos:start="323:36" pos:end="323:36">*</operator> <operator pos:start="323:38" pos:end="323:38">(</operator><name pos:start="323:39" pos:end="323:50"><name pos:start="323:39" pos:end="323:39">s</name><operator pos:start="323:40" pos:end="323:41">-&gt;</operator><name pos:start="323:42" pos:end="323:50">mb_height</name></name> <operator pos:start="323:52" pos:end="323:52">+</operator> <literal type="number" pos:start="323:54" pos:end="323:54">2</literal><operator pos:start="323:55" pos:end="323:55">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:35"><expr pos:start="325:9" pos:end="325:34"><name pos:start="325:9" pos:end="325:12">size</name> <operator pos:start="325:14" pos:end="325:14">=</operator> <name pos:start="325:16" pos:end="325:21">y_size</name> <operator pos:start="325:23" pos:end="325:23">+</operator> <literal type="number" pos:start="325:25" pos:end="325:25">2</literal> <operator pos:start="325:27" pos:end="325:27">*</operator> <name pos:start="325:29" pos:end="325:34">c_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="327:9" pos:end="327:55"><expr pos:start="327:9" pos:end="327:54"><name pos:start="327:9" pos:end="327:20"><name pos:start="327:9" pos:end="327:9">s</name><operator pos:start="327:10" pos:end="327:11">-&gt;</operator><name pos:start="327:12" pos:end="327:17">dc_val</name><index pos:start="327:18" pos:end="327:20">[<expr pos:start="327:19" pos:end="327:19"><literal type="number" pos:start="327:19" pos:end="327:19">0</literal></expr>]</index></name> <operator pos:start="327:22" pos:end="327:22">=</operator> <call pos:start="327:24" pos:end="327:54"><name pos:start="327:24" pos:end="327:32">av_malloc</name><argument_list pos:start="327:33" pos:end="327:54">(<argument pos:start="327:34" pos:end="327:53"><expr pos:start="327:34" pos:end="327:53"><name pos:start="327:34" pos:end="327:37">size</name> <operator pos:start="327:39" pos:end="327:39">*</operator> <sizeof pos:start="327:41" pos:end="327:53">sizeof<argument_list pos:start="327:47" pos:end="327:53">(<argument pos:start="327:48" pos:end="327:52"><expr pos:start="327:48" pos:end="327:52"><name pos:start="327:48" pos:end="327:52">INT16</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="329:9" pos:end="331:22"><if pos:start="329:9" pos:end="331:22">if <condition pos:start="329:12" pos:end="329:33">(<expr pos:start="329:13" pos:end="329:32"><name pos:start="329:13" pos:end="329:24"><name pos:start="329:13" pos:end="329:13">s</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:21">dc_val</name><index pos:start="329:22" pos:end="329:24">[<expr pos:start="329:23" pos:end="329:23"><literal type="number" pos:start="329:23" pos:end="329:23">0</literal></expr>]</index></name> <operator pos:start="329:26" pos:end="329:27">==</operator> <name pos:start="329:29" pos:end="329:32">NULL</name></expr>)</condition><block type="pseudo" pos:start="331:13" pos:end="331:22"><block_content pos:start="331:13" pos:end="331:22">

            <goto pos:start="331:13" pos:end="331:22">goto <name pos:start="331:18" pos:end="331:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:45"><expr pos:start="333:9" pos:end="333:44"><name pos:start="333:9" pos:end="333:20"><name pos:start="333:9" pos:end="333:9">s</name><operator pos:start="333:10" pos:end="333:11">-&gt;</operator><name pos:start="333:12" pos:end="333:17">dc_val</name><index pos:start="333:18" pos:end="333:20">[<expr pos:start="333:19" pos:end="333:19"><literal type="number" pos:start="333:19" pos:end="333:19">1</literal></expr>]</index></name> <operator pos:start="333:22" pos:end="333:22">=</operator> <name pos:start="333:24" pos:end="333:35"><name pos:start="333:24" pos:end="333:24">s</name><operator pos:start="333:25" pos:end="333:26">-&gt;</operator><name pos:start="333:27" pos:end="333:32">dc_val</name><index pos:start="333:33" pos:end="333:35">[<expr pos:start="333:34" pos:end="333:34"><literal type="number" pos:start="333:34" pos:end="333:34">0</literal></expr>]</index></name> <operator pos:start="333:37" pos:end="333:37">+</operator> <name pos:start="333:39" pos:end="333:44">y_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:45"><expr pos:start="335:9" pos:end="335:44"><name pos:start="335:9" pos:end="335:20"><name pos:start="335:9" pos:end="335:9">s</name><operator pos:start="335:10" pos:end="335:11">-&gt;</operator><name pos:start="335:12" pos:end="335:17">dc_val</name><index pos:start="335:18" pos:end="335:20">[<expr pos:start="335:19" pos:end="335:19"><literal type="number" pos:start="335:19" pos:end="335:19">2</literal></expr>]</index></name> <operator pos:start="335:22" pos:end="335:22">=</operator> <name pos:start="335:24" pos:end="335:35"><name pos:start="335:24" pos:end="335:24">s</name><operator pos:start="335:25" pos:end="335:26">-&gt;</operator><name pos:start="335:27" pos:end="335:32">dc_val</name><index pos:start="335:33" pos:end="335:35">[<expr pos:start="335:34" pos:end="335:34"><literal type="number" pos:start="335:34" pos:end="335:34">1</literal></expr>]</index></name> <operator pos:start="335:37" pos:end="335:37">+</operator> <name pos:start="335:39" pos:end="335:44">c_size</name></expr>;</expr_stmt>

        <for pos:start="337:9" pos:end="339:35">for<control pos:start="337:12" pos:end="337:27">(<init pos:start="337:13" pos:end="337:16"><expr pos:start="337:13" pos:end="337:15"><name pos:start="337:13" pos:end="337:13">i</name><operator pos:start="337:14" pos:end="337:14">=</operator><literal type="number" pos:start="337:15" pos:end="337:15">0</literal></expr>;</init><condition pos:start="337:17" pos:end="337:23"><expr pos:start="337:17" pos:end="337:22"><name pos:start="337:17" pos:end="337:17">i</name><operator pos:start="337:18" pos:end="337:18">&lt;</operator><name pos:start="337:19" pos:end="337:22">size</name></expr>;</condition><incr pos:start="337:24" pos:end="337:26"><expr pos:start="337:24" pos:end="337:26"><name pos:start="337:24" pos:end="337:24">i</name><operator pos:start="337:25" pos:end="337:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="339:13" pos:end="339:35"><block_content pos:start="339:13" pos:end="339:35">

            <expr_stmt pos:start="339:13" pos:end="339:35"><expr pos:start="339:13" pos:end="339:34"><name pos:start="339:13" pos:end="339:27"><name pos:start="339:13" pos:end="339:13">s</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:21">dc_val</name><index pos:start="339:22" pos:end="339:24">[<expr pos:start="339:23" pos:end="339:23"><literal type="number" pos:start="339:23" pos:end="339:23">0</literal></expr>]</index><index pos:start="339:25" pos:end="339:27">[<expr pos:start="339:26" pos:end="339:26"><name pos:start="339:26" pos:end="339:26">i</name></expr>]</index></name> <operator pos:start="339:29" pos:end="339:29">=</operator> <literal type="number" pos:start="339:31" pos:end="339:34">1024</literal></expr>;</expr_stmt></block_content></block></for>



        <comment type="block" pos:start="343:9" pos:end="343:23">/* ac values */</comment>

        <expr_stmt pos:start="345:9" pos:end="345:61"><expr pos:start="345:9" pos:end="345:60"><name pos:start="345:9" pos:end="345:20"><name pos:start="345:9" pos:end="345:9">s</name><operator pos:start="345:10" pos:end="345:11">-&gt;</operator><name pos:start="345:12" pos:end="345:17">ac_val</name><index pos:start="345:18" pos:end="345:20">[<expr pos:start="345:19" pos:end="345:19"><literal type="number" pos:start="345:19" pos:end="345:19">0</literal></expr>]</index></name> <operator pos:start="345:22" pos:end="345:22">=</operator> <call pos:start="345:24" pos:end="345:60"><name pos:start="345:24" pos:end="345:33">av_mallocz</name><argument_list pos:start="345:34" pos:end="345:60">(<argument pos:start="345:35" pos:end="345:59"><expr pos:start="345:35" pos:end="345:59"><name pos:start="345:35" pos:end="345:38">size</name> <operator pos:start="345:40" pos:end="345:40">*</operator> <sizeof pos:start="345:42" pos:end="345:54">sizeof<argument_list pos:start="345:48" pos:end="345:54">(<argument pos:start="345:49" pos:end="345:53"><expr pos:start="345:49" pos:end="345:53"><name pos:start="345:49" pos:end="345:53">INT16</name></expr></argument>)</argument_list></sizeof> <operator pos:start="345:56" pos:end="345:56">*</operator> <literal type="number" pos:start="345:58" pos:end="345:59">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="347:9" pos:end="349:22"><if pos:start="347:9" pos:end="349:22">if <condition pos:start="347:12" pos:end="347:33">(<expr pos:start="347:13" pos:end="347:32"><name pos:start="347:13" pos:end="347:24"><name pos:start="347:13" pos:end="347:13">s</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:21">ac_val</name><index pos:start="347:22" pos:end="347:24">[<expr pos:start="347:23" pos:end="347:23"><literal type="number" pos:start="347:23" pos:end="347:23">0</literal></expr>]</index></name> <operator pos:start="347:26" pos:end="347:27">==</operator> <name pos:start="347:29" pos:end="347:32">NULL</name></expr>)</condition><block type="pseudo" pos:start="349:13" pos:end="349:22"><block_content pos:start="349:13" pos:end="349:22">

            <goto pos:start="349:13" pos:end="349:22">goto <name pos:start="349:18" pos:end="349:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:45"><expr pos:start="351:9" pos:end="351:44"><name pos:start="351:9" pos:end="351:20"><name pos:start="351:9" pos:end="351:9">s</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:17">ac_val</name><index pos:start="351:18" pos:end="351:20">[<expr pos:start="351:19" pos:end="351:19"><literal type="number" pos:start="351:19" pos:end="351:19">1</literal></expr>]</index></name> <operator pos:start="351:22" pos:end="351:22">=</operator> <name pos:start="351:24" pos:end="351:35"><name pos:start="351:24" pos:end="351:24">s</name><operator pos:start="351:25" pos:end="351:26">-&gt;</operator><name pos:start="351:27" pos:end="351:32">ac_val</name><index pos:start="351:33" pos:end="351:35">[<expr pos:start="351:34" pos:end="351:34"><literal type="number" pos:start="351:34" pos:end="351:34">0</literal></expr>]</index></name> <operator pos:start="351:37" pos:end="351:37">+</operator> <name pos:start="351:39" pos:end="351:44">y_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="353:45"><expr pos:start="353:9" pos:end="353:44"><name pos:start="353:9" pos:end="353:20"><name pos:start="353:9" pos:end="353:9">s</name><operator pos:start="353:10" pos:end="353:11">-&gt;</operator><name pos:start="353:12" pos:end="353:17">ac_val</name><index pos:start="353:18" pos:end="353:20">[<expr pos:start="353:19" pos:end="353:19"><literal type="number" pos:start="353:19" pos:end="353:19">2</literal></expr>]</index></name> <operator pos:start="353:22" pos:end="353:22">=</operator> <name pos:start="353:24" pos:end="353:35"><name pos:start="353:24" pos:end="353:24">s</name><operator pos:start="353:25" pos:end="353:26">-&gt;</operator><name pos:start="353:27" pos:end="353:32">ac_val</name><index pos:start="353:33" pos:end="353:35">[<expr pos:start="353:34" pos:end="353:34"><literal type="number" pos:start="353:34" pos:end="353:34">1</literal></expr>]</index></name> <operator pos:start="353:37" pos:end="353:37">+</operator> <name pos:start="353:39" pos:end="353:44">c_size</name></expr>;</expr_stmt>

        

        <comment type="block" pos:start="357:9" pos:end="357:24">/* cbp values */</comment>

        <expr_stmt pos:start="359:9" pos:end="359:44"><expr pos:start="359:9" pos:end="359:43"><name pos:start="359:9" pos:end="359:22"><name pos:start="359:9" pos:end="359:9">s</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:22">coded_block</name></name> <operator pos:start="359:24" pos:end="359:24">=</operator> <call pos:start="359:26" pos:end="359:43"><name pos:start="359:26" pos:end="359:35">av_mallocz</name><argument_list pos:start="359:36" pos:end="359:43">(<argument pos:start="359:37" pos:end="359:42"><expr pos:start="359:37" pos:end="359:42"><name pos:start="359:37" pos:end="359:42">y_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="361:9" pos:end="363:22"><if pos:start="361:9" pos:end="363:22">if <condition pos:start="361:12" pos:end="361:28">(<expr pos:start="361:13" pos:end="361:27"><operator pos:start="361:13" pos:end="361:13">!</operator><name pos:start="361:14" pos:end="361:27"><name pos:start="361:14" pos:end="361:14">s</name><operator pos:start="361:15" pos:end="361:16">-&gt;</operator><name pos:start="361:17" pos:end="361:27">coded_block</name></name></expr>)</condition><block type="pseudo" pos:start="363:13" pos:end="363:22"><block_content pos:start="363:13" pos:end="363:22">

            <goto pos:start="363:13" pos:end="363:22">goto <name pos:start="363:18" pos:end="363:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <comment type="block" pos:start="367:9" pos:end="367:39">/* which mb is a intra block */</comment>

        <expr_stmt pos:start="369:9" pos:end="369:49"><expr pos:start="369:9" pos:end="369:48"><name pos:start="369:9" pos:end="369:24"><name pos:start="369:9" pos:end="369:9">s</name><operator pos:start="369:10" pos:end="369:11">-&gt;</operator><name pos:start="369:12" pos:end="369:24">mbintra_table</name></name> <operator pos:start="369:26" pos:end="369:26">=</operator> <call pos:start="369:28" pos:end="369:48"><name pos:start="369:28" pos:end="369:37">av_mallocz</name><argument_list pos:start="369:38" pos:end="369:48">(<argument pos:start="369:39" pos:end="369:47"><expr pos:start="369:39" pos:end="369:47"><name pos:start="369:39" pos:end="369:47"><name pos:start="369:39" pos:end="369:39">s</name><operator pos:start="369:40" pos:end="369:41">-&gt;</operator><name pos:start="369:42" pos:end="369:47">mb_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="371:9" pos:end="373:22"><if pos:start="371:9" pos:end="373:22">if <condition pos:start="371:12" pos:end="371:30">(<expr pos:start="371:13" pos:end="371:29"><operator pos:start="371:13" pos:end="371:13">!</operator><name pos:start="371:14" pos:end="371:29"><name pos:start="371:14" pos:end="371:14">s</name><operator pos:start="371:15" pos:end="371:16">-&gt;</operator><name pos:start="371:17" pos:end="371:29">mbintra_table</name></name></expr>)</condition><block type="pseudo" pos:start="373:13" pos:end="373:22"><block_content pos:start="373:13" pos:end="373:22">

            <goto pos:start="373:13" pos:end="373:22">goto <name pos:start="373:18" pos:end="373:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:47"><expr pos:start="375:9" pos:end="375:46"><call pos:start="375:9" pos:end="375:46"><name pos:start="375:9" pos:end="375:14">memset</name><argument_list pos:start="375:15" pos:end="375:46">(<argument pos:start="375:16" pos:end="375:31"><expr pos:start="375:16" pos:end="375:31"><name pos:start="375:16" pos:end="375:31"><name pos:start="375:16" pos:end="375:16">s</name><operator pos:start="375:17" pos:end="375:18">-&gt;</operator><name pos:start="375:19" pos:end="375:31">mbintra_table</name></name></expr></argument>, <argument pos:start="375:34" pos:end="375:34"><expr pos:start="375:34" pos:end="375:34"><literal type="number" pos:start="375:34" pos:end="375:34">1</literal></expr></argument>, <argument pos:start="375:37" pos:end="375:45"><expr pos:start="375:37" pos:end="375:45"><name pos:start="375:37" pos:end="375:45"><name pos:start="375:37" pos:end="375:37">s</name><operator pos:start="375:38" pos:end="375:39">-&gt;</operator><name pos:start="375:40" pos:end="375:45">mb_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <comment type="block" pos:start="379:9" pos:end="379:46">/* divx501 bitstream reorder buffer */</comment>

        <expr_stmt pos:start="381:9" pos:end="381:63"><expr pos:start="381:9" pos:end="381:62"><name pos:start="381:9" pos:end="381:27"><name pos:start="381:9" pos:end="381:9">s</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:27">bitstream_buffer</name></name><operator pos:start="381:28" pos:end="381:28">=</operator> <call pos:start="381:30" pos:end="381:62"><name pos:start="381:30" pos:end="381:39">av_mallocz</name><argument_list pos:start="381:40" pos:end="381:62">(<argument pos:start="381:41" pos:end="381:61"><expr pos:start="381:41" pos:end="381:61"><name pos:start="381:41" pos:end="381:61">BITSTREAM_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="383:9" pos:end="385:22"><if pos:start="383:9" pos:end="385:22">if <condition pos:start="383:12" pos:end="383:33">(<expr pos:start="383:13" pos:end="383:32"><operator pos:start="383:13" pos:end="383:13">!</operator><name pos:start="383:14" pos:end="383:32"><name pos:start="383:14" pos:end="383:14">s</name><operator pos:start="383:15" pos:end="383:16">-&gt;</operator><name pos:start="383:17" pos:end="383:32">bitstream_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="385:13" pos:end="385:22"><block_content pos:start="385:13" pos:end="385:22">

            <goto pos:start="385:13" pos:end="385:22">goto <name pos:start="385:18" pos:end="385:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="389:5" pos:end="389:36">/* default structure is frame */</comment>

    <expr_stmt pos:start="391:5" pos:end="391:38"><expr pos:start="391:5" pos:end="391:37"><name pos:start="391:5" pos:end="391:24"><name pos:start="391:5" pos:end="391:5">s</name><operator pos:start="391:6" pos:end="391:7">-&gt;</operator><name pos:start="391:8" pos:end="391:24">picture_structure</name></name> <operator pos:start="391:26" pos:end="391:26">=</operator> <name pos:start="391:28" pos:end="391:37">PICT_FRAME</name></expr>;</expr_stmt>



    <comment type="block" pos:start="395:5" pos:end="395:36">/* init macroblock skip table */</comment>

    <expr_stmt pos:start="397:5" pos:end="397:44"><expr pos:start="397:5" pos:end="397:43"><name pos:start="397:5" pos:end="397:19"><name pos:start="397:5" pos:end="397:5">s</name><operator pos:start="397:6" pos:end="397:7">-&gt;</operator><name pos:start="397:8" pos:end="397:19">mbskip_table</name></name> <operator pos:start="397:21" pos:end="397:21">=</operator> <call pos:start="397:23" pos:end="397:43"><name pos:start="397:23" pos:end="397:32">av_mallocz</name><argument_list pos:start="397:33" pos:end="397:43">(<argument pos:start="397:34" pos:end="397:42"><expr pos:start="397:34" pos:end="397:42"><name pos:start="397:34" pos:end="397:42"><name pos:start="397:34" pos:end="397:34">s</name><operator pos:start="397:35" pos:end="397:36">-&gt;</operator><name pos:start="397:37" pos:end="397:42">mb_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="399:5" pos:end="401:18"><if pos:start="399:5" pos:end="401:18">if <condition pos:start="399:8" pos:end="399:25">(<expr pos:start="399:9" pos:end="399:24"><operator pos:start="399:9" pos:end="399:9">!</operator><name pos:start="399:10" pos:end="399:24"><name pos:start="399:10" pos:end="399:10">s</name><operator pos:start="399:11" pos:end="399:12">-&gt;</operator><name pos:start="399:13" pos:end="399:24">mbskip_table</name></name></expr>)</condition><block type="pseudo" pos:start="401:9" pos:end="401:18"><block_content pos:start="401:9" pos:end="401:18">

        <goto pos:start="401:9" pos:end="401:18">goto <name pos:start="401:14" pos:end="401:17">fail</name>;</goto></block_content></block></if></if_stmt>

    

    <expr_stmt pos:start="405:5" pos:end="405:27"><expr pos:start="405:5" pos:end="405:26"><name pos:start="405:5" pos:end="405:12"><name pos:start="405:5" pos:end="405:5">s</name><operator pos:start="405:6" pos:end="405:7">-&gt;</operator><name pos:start="405:8" pos:end="405:12">block</name></name><operator pos:start="405:13" pos:end="405:13">=</operator> <name pos:start="405:15" pos:end="405:26"><name pos:start="405:15" pos:end="405:15">s</name><operator pos:start="405:16" pos:end="405:17">-&gt;</operator><name pos:start="405:18" pos:end="405:23">blocks</name><index pos:start="405:24" pos:end="405:26">[<expr pos:start="405:25" pos:end="405:25"><literal type="number" pos:start="405:25" pos:end="405:25">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="409:5" pos:end="409:31"><expr pos:start="409:5" pos:end="409:30"><name pos:start="409:5" pos:end="409:26"><name pos:start="409:5" pos:end="409:5">s</name><operator pos:start="409:6" pos:end="409:7">-&gt;</operator><name pos:start="409:8" pos:end="409:26">context_initialized</name></name> <operator pos:start="409:28" pos:end="409:28">=</operator> <literal type="number" pos:start="409:30" pos:end="409:30">1</literal></expr>;</expr_stmt>

    <return pos:start="411:5" pos:end="411:13">return <expr pos:start="411:12" pos:end="411:12"><literal type="number" pos:start="411:12" pos:end="411:12">0</literal></expr>;</return>

 <label pos:start="413:2" pos:end="413:6"><name pos:start="413:2" pos:end="413:5">fail</name>:</label>

    <expr_stmt pos:start="415:5" pos:end="415:22"><expr pos:start="415:5" pos:end="415:21"><call pos:start="415:5" pos:end="415:21"><name pos:start="415:5" pos:end="415:18">MPV_common_end</name><argument_list pos:start="415:19" pos:end="415:21">(<argument pos:start="415:20" pos:end="415:20"><expr pos:start="415:20" pos:end="415:20"><name pos:start="415:20" pos:end="415:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="417:5" pos:end="417:14">return <expr pos:start="417:12" pos:end="417:13"><operator pos:start="417:12" pos:end="417:12">-</operator><literal type="number" pos:start="417:13" pos:end="417:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
