<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4486.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">virtio_pci_ioeventfd_assign</name><parameter_list pos:start="1:39" pos:end="3:58">(<parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:50">DeviceState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">d</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:78"><decl pos:start="1:56" pos:end="1:78"><type pos:start="1:56" pos:end="1:78"><name pos:start="1:56" pos:end="1:68">EventNotifier</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:78">notifier</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:44"><decl pos:start="3:40" pos:end="3:44"><type pos:start="3:40" pos:end="3:44"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:44">n</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:57"><decl pos:start="3:47" pos:end="3:57"><type pos:start="3:47" pos:end="3:57"><name pos:start="3:47" pos:end="3:50">bool</name></type> <name pos:start="3:52" pos:end="3:57">assign</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="111:1">{<block_content pos:start="7:5" pos:end="109:13">

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtIOPCIProxy</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">proxy</name> <init pos:start="7:27" pos:end="7:50">= <expr pos:start="7:29" pos:end="7:50"><call pos:start="7:29" pos:end="7:50"><name pos:start="7:29" pos:end="7:47">to_virtio_pci_proxy</name><argument_list pos:start="7:48" pos:end="7:50">(<argument pos:start="7:49" pos:end="7:49"><expr pos:start="7:49" pos:end="7:49"><name pos:start="7:49" pos:end="7:49">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">VirtIODevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">vdev</name> <init pos:start="9:24" pos:end="9:59">= <expr pos:start="9:26" pos:end="9:59"><call pos:start="9:26" pos:end="9:59"><name pos:start="9:26" pos:end="9:46">virtio_bus_get_device</name><argument_list pos:start="9:47" pos:end="9:59">(<argument pos:start="9:48" pos:end="9:58"><expr pos:start="9:48" pos:end="9:58"><operator pos:start="9:48" pos:end="9:48">&amp;</operator><name pos:start="9:49" pos:end="9:58"><name pos:start="9:49" pos:end="9:53">proxy</name><operator pos:start="9:54" pos:end="9:55">-&gt;</operator><name pos:start="9:56" pos:end="9:58">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">VirtQueue</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:17">vq</name> <init pos:start="11:19" pos:end="11:45">= <expr pos:start="11:21" pos:end="11:45"><call pos:start="11:21" pos:end="11:45"><name pos:start="11:21" pos:end="11:36">virtio_get_queue</name><argument_list pos:start="11:37" pos:end="11:45">(<argument pos:start="11:38" pos:end="11:41"><expr pos:start="11:38" pos:end="11:41"><name pos:start="11:38" pos:end="11:41">vdev</name></expr></argument>, <argument pos:start="11:44" pos:end="11:44"><expr pos:start="11:44" pos:end="11:44"><name pos:start="11:44" pos:end="11:44">n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:67"><decl pos:start="13:5" pos:end="13:66"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:15">legacy</name> <init pos:start="13:17" pos:end="13:66">= <expr pos:start="13:19" pos:end="13:66"><operator pos:start="13:19" pos:end="13:19">!</operator><operator pos:start="13:20" pos:end="13:20">(</operator><name pos:start="13:21" pos:end="13:32"><name pos:start="13:21" pos:end="13:25">proxy</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:32">flags</name></name> <operator pos:start="13:34" pos:end="13:34">&amp;</operator> <name pos:start="13:36" pos:end="13:65">VIRTIO_PCI_FLAG_DISABLE_LEGACY</name><operator pos:start="13:66" pos:end="13:66">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:67"><decl pos:start="15:5" pos:end="15:66"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:15">modern</name> <init pos:start="15:17" pos:end="15:66">= <expr pos:start="15:19" pos:end="15:66"><operator pos:start="15:19" pos:end="15:19">!</operator><operator pos:start="15:20" pos:end="15:20">(</operator><name pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:25">proxy</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:32">flags</name></name> <operator pos:start="15:34" pos:end="15:34">&amp;</operator> <name pos:start="15:36" pos:end="15:65">VIRTIO_PCI_FLAG_DISABLE_MODERN</name><operator pos:start="15:66" pos:end="15:66">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:56"><decl pos:start="17:5" pos:end="17:55"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">bool</name></type> <name pos:start="17:10" pos:end="17:18">fast_mmio</name> <init pos:start="17:20" pos:end="17:55">= <expr pos:start="17:22" pos:end="17:55"><call pos:start="17:22" pos:end="17:55"><name pos:start="17:22" pos:end="17:53">kvm_ioeventfd_any_length_enabled</name><argument_list pos:start="17:54" pos:end="17:55">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:71"><decl pos:start="19:5" pos:end="19:70"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">bool</name></type> <name pos:start="19:10" pos:end="19:19">modern_pio</name> <init pos:start="19:21" pos:end="19:70">= <expr pos:start="19:23" pos:end="19:70"><name pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:27">proxy</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:34">flags</name></name> <operator pos:start="19:36" pos:end="19:36">&amp;</operator> <name pos:start="19:38" pos:end="19:70">VIRTIO_PCI_FLAG_MODERN_PIO_NOTIFY</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:48"><decl pos:start="21:5" pos:end="21:47"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">MemoryRegion</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:27">modern_mr</name> <init pos:start="21:29" pos:end="21:47">= <expr pos:start="21:31" pos:end="21:47"><operator pos:start="21:31" pos:end="21:31">&amp;</operator><name pos:start="21:32" pos:end="21:47"><name pos:start="21:32" pos:end="21:36">proxy</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:44">notify</name><operator pos:start="21:45" pos:end="21:45">.</operator><name pos:start="21:46" pos:end="21:47">mr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:59"><decl pos:start="23:5" pos:end="23:58"><type pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:16">MemoryRegion</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:34">modern_notify_mr</name> <init pos:start="23:36" pos:end="23:58">= <expr pos:start="23:38" pos:end="23:58"><operator pos:start="23:38" pos:end="23:38">&amp;</operator><name pos:start="23:39" pos:end="23:58"><name pos:start="23:39" pos:end="23:43">proxy</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:55">notify_pio</name><operator pos:start="23:56" pos:end="23:56">.</operator><name pos:start="23:57" pos:end="23:58">mr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:42"><decl pos:start="25:5" pos:end="25:41"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:16">MemoryRegion</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:27">legacy_mr</name> <init pos:start="25:29" pos:end="25:41">= <expr pos:start="25:31" pos:end="25:41"><operator pos:start="25:31" pos:end="25:31">&amp;</operator><name pos:start="25:32" pos:end="25:41"><name pos:start="25:32" pos:end="25:36">proxy</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:41">bar</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="29:52"><decl pos:start="27:5" pos:end="29:51"><type pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:10">hwaddr</name></type> <name pos:start="27:12" pos:end="27:22">modern_addr</name> <init pos:start="27:24" pos:end="29:51">= <expr pos:start="27:26" pos:end="29:51"><name pos:start="27:26" pos:end="27:55">QEMU_VIRTIO_PCI_QUEUE_MEM_MULT</name> <operator pos:start="27:57" pos:end="27:57">*</operator>

                         <call pos:start="29:26" pos:end="29:51"><name pos:start="29:26" pos:end="29:47">virtio_get_queue_index</name><argument_list pos:start="29:48" pos:end="29:51">(<argument pos:start="29:49" pos:end="29:50"><expr pos:start="29:49" pos:end="29:50"><name pos:start="29:49" pos:end="29:50">vq</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:49"><decl pos:start="31:5" pos:end="31:48"><type pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:10">hwaddr</name></type> <name pos:start="31:12" pos:end="31:22">legacy_addr</name> <init pos:start="31:24" pos:end="31:48">= <expr pos:start="31:26" pos:end="31:48"><name pos:start="31:26" pos:end="31:48">VIRTIO_PCI_QUEUE_NOTIFY</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="107:5"><if pos:start="35:5" pos:end="71:5">if <condition pos:start="35:8" pos:end="35:15">(<expr pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:14">assign</name></expr>)</condition> <block pos:start="35:17" pos:end="71:5">{<block_content pos:start="37:9" pos:end="69:9">

        <if_stmt pos:start="37:9" pos:end="61:9"><if pos:start="37:9" pos:end="61:9">if <condition pos:start="37:12" pos:end="37:19">(<expr pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:18">modern</name></expr>)</condition> <block pos:start="37:21" pos:end="61:9">{<block_content pos:start="39:13" pos:end="59:13">

            <if_stmt pos:start="39:13" pos:end="51:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:26">(<expr pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:25">fast_mmio</name></expr>)</condition> <block pos:start="39:28" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:62">

                <expr_stmt pos:start="41:17" pos:end="43:62"><expr pos:start="41:17" pos:end="43:61"><call pos:start="41:17" pos:end="43:61"><name pos:start="41:17" pos:end="41:41">memory_region_add_eventfd</name><argument_list pos:start="41:42" pos:end="43:61">(<argument pos:start="41:43" pos:end="41:51"><expr pos:start="41:43" pos:end="41:51"><name pos:start="41:43" pos:end="41:51">modern_mr</name></expr></argument>, <argument pos:start="41:54" pos:end="41:64"><expr pos:start="41:54" pos:end="41:64"><name pos:start="41:54" pos:end="41:64">modern_addr</name></expr></argument>, <argument pos:start="41:67" pos:end="41:67"><expr pos:start="41:67" pos:end="41:67"><literal type="number" pos:start="41:67" pos:end="41:67">0</literal></expr></argument>,

                                          <argument pos:start="43:43" pos:end="43:47"><expr pos:start="43:43" pos:end="43:47"><name pos:start="43:43" pos:end="43:47">false</name></expr></argument>, <argument pos:start="43:50" pos:end="43:50"><expr pos:start="43:50" pos:end="43:50"><name pos:start="43:50" pos:end="43:50">n</name></expr></argument>, <argument pos:start="43:53" pos:end="43:60"><expr pos:start="43:53" pos:end="43:60"><name pos:start="43:53" pos:end="43:60">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="45:15" pos:end="51:13">else <block pos:start="45:20" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:62">

                <expr_stmt pos:start="47:17" pos:end="49:62"><expr pos:start="47:17" pos:end="49:61"><call pos:start="47:17" pos:end="49:61"><name pos:start="47:17" pos:end="47:41">memory_region_add_eventfd</name><argument_list pos:start="47:42" pos:end="49:61">(<argument pos:start="47:43" pos:end="47:51"><expr pos:start="47:43" pos:end="47:51"><name pos:start="47:43" pos:end="47:51">modern_mr</name></expr></argument>, <argument pos:start="47:54" pos:end="47:64"><expr pos:start="47:54" pos:end="47:64"><name pos:start="47:54" pos:end="47:64">modern_addr</name></expr></argument>, <argument pos:start="47:67" pos:end="47:67"><expr pos:start="47:67" pos:end="47:67"><literal type="number" pos:start="47:67" pos:end="47:67">2</literal></expr></argument>,

                                          <argument pos:start="49:43" pos:end="49:47"><expr pos:start="49:43" pos:end="49:47"><name pos:start="49:43" pos:end="49:47">false</name></expr></argument>, <argument pos:start="49:50" pos:end="49:50"><expr pos:start="49:50" pos:end="49:50"><name pos:start="49:50" pos:end="49:50">n</name></expr></argument>, <argument pos:start="49:53" pos:end="49:60"><expr pos:start="49:53" pos:end="49:60"><name pos:start="49:53" pos:end="49:60">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="53:13" pos:end="59:13"><if pos:start="53:13" pos:end="59:13">if <condition pos:start="53:16" pos:end="53:27">(<expr pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:26">modern_pio</name></expr>)</condition> <block pos:start="53:29" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:65">

                <expr_stmt pos:start="55:17" pos:end="57:65"><expr pos:start="55:17" pos:end="57:64"><call pos:start="55:17" pos:end="57:64"><name pos:start="55:17" pos:end="55:41">memory_region_add_eventfd</name><argument_list pos:start="55:42" pos:end="57:64">(<argument pos:start="55:43" pos:end="55:58"><expr pos:start="55:43" pos:end="55:58"><name pos:start="55:43" pos:end="55:58">modern_notify_mr</name></expr></argument>, <argument pos:start="55:61" pos:end="55:61"><expr pos:start="55:61" pos:end="55:61"><literal type="number" pos:start="55:61" pos:end="55:61">0</literal></expr></argument>, <argument pos:start="55:64" pos:end="55:64"><expr pos:start="55:64" pos:end="55:64"><literal type="number" pos:start="55:64" pos:end="55:64">2</literal></expr></argument>,

                                              <argument pos:start="57:47" pos:end="57:50"><expr pos:start="57:47" pos:end="57:50"><name pos:start="57:47" pos:end="57:50">true</name></expr></argument>, <argument pos:start="57:53" pos:end="57:53"><expr pos:start="57:53" pos:end="57:53"><name pos:start="57:53" pos:end="57:53">n</name></expr></argument>, <argument pos:start="57:56" pos:end="57:63"><expr pos:start="57:56" pos:end="57:63"><name pos:start="57:56" pos:end="57:63">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:19">(<expr pos:start="63:13" pos:end="63:18"><name pos:start="63:13" pos:end="63:18">legacy</name></expr>)</condition> <block pos:start="63:21" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:57">

            <expr_stmt pos:start="65:13" pos:end="67:57"><expr pos:start="65:13" pos:end="67:56"><call pos:start="65:13" pos:end="67:56"><name pos:start="65:13" pos:end="65:37">memory_region_add_eventfd</name><argument_list pos:start="65:38" pos:end="67:56">(<argument pos:start="65:39" pos:end="65:47"><expr pos:start="65:39" pos:end="65:47"><name pos:start="65:39" pos:end="65:47">legacy_mr</name></expr></argument>, <argument pos:start="65:50" pos:end="65:60"><expr pos:start="65:50" pos:end="65:60"><name pos:start="65:50" pos:end="65:60">legacy_addr</name></expr></argument>, <argument pos:start="65:63" pos:end="65:63"><expr pos:start="65:63" pos:end="65:63"><literal type="number" pos:start="65:63" pos:end="65:63">2</literal></expr></argument>,

                                      <argument pos:start="67:39" pos:end="67:42"><expr pos:start="67:39" pos:end="67:42"><name pos:start="67:39" pos:end="67:42">true</name></expr></argument>, <argument pos:start="67:45" pos:end="67:45"><expr pos:start="67:45" pos:end="67:45"><name pos:start="67:45" pos:end="67:45">n</name></expr></argument>, <argument pos:start="67:48" pos:end="67:55"><expr pos:start="67:48" pos:end="67:55"><name pos:start="67:48" pos:end="67:55">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="107:5">else <block pos:start="71:12" pos:end="107:5">{<block_content pos:start="73:9" pos:end="105:9">

        <if_stmt pos:start="73:9" pos:end="97:9"><if pos:start="73:9" pos:end="97:9">if <condition pos:start="73:12" pos:end="73:19">(<expr pos:start="73:13" pos:end="73:18"><name pos:start="73:13" pos:end="73:18">modern</name></expr>)</condition> <block pos:start="73:21" pos:end="97:9">{<block_content pos:start="75:13" pos:end="95:13">

            <if_stmt pos:start="75:13" pos:end="87:13"><if pos:start="75:13" pos:end="81:13">if <condition pos:start="75:16" pos:end="75:26">(<expr pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:25">fast_mmio</name></expr>)</condition> <block pos:start="75:28" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:62">

                <expr_stmt pos:start="77:17" pos:end="79:62"><expr pos:start="77:17" pos:end="79:61"><call pos:start="77:17" pos:end="79:61"><name pos:start="77:17" pos:end="77:41">memory_region_del_eventfd</name><argument_list pos:start="77:42" pos:end="79:61">(<argument pos:start="77:43" pos:end="77:51"><expr pos:start="77:43" pos:end="77:51"><name pos:start="77:43" pos:end="77:51">modern_mr</name></expr></argument>, <argument pos:start="77:54" pos:end="77:64"><expr pos:start="77:54" pos:end="77:64"><name pos:start="77:54" pos:end="77:64">modern_addr</name></expr></argument>, <argument pos:start="77:67" pos:end="77:67"><expr pos:start="77:67" pos:end="77:67"><literal type="number" pos:start="77:67" pos:end="77:67">0</literal></expr></argument>,

                                          <argument pos:start="79:43" pos:end="79:47"><expr pos:start="79:43" pos:end="79:47"><name pos:start="79:43" pos:end="79:47">false</name></expr></argument>, <argument pos:start="79:50" pos:end="79:50"><expr pos:start="79:50" pos:end="79:50"><name pos:start="79:50" pos:end="79:50">n</name></expr></argument>, <argument pos:start="79:53" pos:end="79:60"><expr pos:start="79:53" pos:end="79:60"><name pos:start="79:53" pos:end="79:60">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="81:15" pos:end="87:13">else <block pos:start="81:20" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:62">

                <expr_stmt pos:start="83:17" pos:end="85:62"><expr pos:start="83:17" pos:end="85:61"><call pos:start="83:17" pos:end="85:61"><name pos:start="83:17" pos:end="83:41">memory_region_del_eventfd</name><argument_list pos:start="83:42" pos:end="85:61">(<argument pos:start="83:43" pos:end="83:51"><expr pos:start="83:43" pos:end="83:51"><name pos:start="83:43" pos:end="83:51">modern_mr</name></expr></argument>, <argument pos:start="83:54" pos:end="83:64"><expr pos:start="83:54" pos:end="83:64"><name pos:start="83:54" pos:end="83:64">modern_addr</name></expr></argument>, <argument pos:start="83:67" pos:end="83:67"><expr pos:start="83:67" pos:end="83:67"><literal type="number" pos:start="83:67" pos:end="83:67">2</literal></expr></argument>,

                                          <argument pos:start="85:43" pos:end="85:47"><expr pos:start="85:43" pos:end="85:47"><name pos:start="85:43" pos:end="85:47">false</name></expr></argument>, <argument pos:start="85:50" pos:end="85:50"><expr pos:start="85:50" pos:end="85:50"><name pos:start="85:50" pos:end="85:50">n</name></expr></argument>, <argument pos:start="85:53" pos:end="85:60"><expr pos:start="85:53" pos:end="85:60"><name pos:start="85:53" pos:end="85:60">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="89:13" pos:end="95:13"><if pos:start="89:13" pos:end="95:13">if <condition pos:start="89:16" pos:end="89:27">(<expr pos:start="89:17" pos:end="89:26"><name pos:start="89:17" pos:end="89:26">modern_pio</name></expr>)</condition> <block pos:start="89:29" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:61">

                <expr_stmt pos:start="91:17" pos:end="93:61"><expr pos:start="91:17" pos:end="93:60"><call pos:start="91:17" pos:end="93:60"><name pos:start="91:17" pos:end="91:41">memory_region_del_eventfd</name><argument_list pos:start="91:42" pos:end="93:60">(<argument pos:start="91:43" pos:end="91:58"><expr pos:start="91:43" pos:end="91:58"><name pos:start="91:43" pos:end="91:58">modern_notify_mr</name></expr></argument>, <argument pos:start="91:61" pos:end="91:61"><expr pos:start="91:61" pos:end="91:61"><literal type="number" pos:start="91:61" pos:end="91:61">0</literal></expr></argument>, <argument pos:start="91:64" pos:end="91:64"><expr pos:start="91:64" pos:end="91:64"><literal type="number" pos:start="91:64" pos:end="91:64">2</literal></expr></argument>,

                                          <argument pos:start="93:43" pos:end="93:46"><expr pos:start="93:43" pos:end="93:46"><name pos:start="93:43" pos:end="93:46">true</name></expr></argument>, <argument pos:start="93:49" pos:end="93:49"><expr pos:start="93:49" pos:end="93:49"><name pos:start="93:49" pos:end="93:49">n</name></expr></argument>, <argument pos:start="93:52" pos:end="93:59"><expr pos:start="93:52" pos:end="93:59"><name pos:start="93:52" pos:end="93:59">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:19">(<expr pos:start="99:13" pos:end="99:18"><name pos:start="99:13" pos:end="99:18">legacy</name></expr>)</condition> <block pos:start="99:21" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:57">

            <expr_stmt pos:start="101:13" pos:end="103:57"><expr pos:start="101:13" pos:end="103:56"><call pos:start="101:13" pos:end="103:56"><name pos:start="101:13" pos:end="101:37">memory_region_del_eventfd</name><argument_list pos:start="101:38" pos:end="103:56">(<argument pos:start="101:39" pos:end="101:47"><expr pos:start="101:39" pos:end="101:47"><name pos:start="101:39" pos:end="101:47">legacy_mr</name></expr></argument>, <argument pos:start="101:50" pos:end="101:60"><expr pos:start="101:50" pos:end="101:60"><name pos:start="101:50" pos:end="101:60">legacy_addr</name></expr></argument>, <argument pos:start="101:63" pos:end="101:63"><expr pos:start="101:63" pos:end="101:63"><literal type="number" pos:start="101:63" pos:end="101:63">2</literal></expr></argument>,

                                      <argument pos:start="103:39" pos:end="103:42"><expr pos:start="103:39" pos:end="103:42"><name pos:start="103:39" pos:end="103:42">true</name></expr></argument>, <argument pos:start="103:45" pos:end="103:45"><expr pos:start="103:45" pos:end="103:45"><name pos:start="103:45" pos:end="103:45">n</name></expr></argument>, <argument pos:start="103:48" pos:end="103:55"><expr pos:start="103:48" pos:end="103:55"><name pos:start="103:48" pos:end="103:55">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
