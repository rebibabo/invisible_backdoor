<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7431.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">nvdimm_build_device_dsm</name><parameter_list pos:start="1:36" pos:end="1:45">(<parameter pos:start="1:37" pos:end="1:44"><decl pos:start="1:37" pos:end="1:44"><type pos:start="1:37" pos:end="1:41"><name pos:start="1:37" pos:end="1:39">Aml</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:28">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">Aml</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:15">method</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:54"><expr pos:start="9:5" pos:end="9:53"><name pos:start="9:5" pos:end="9:10">method</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <call pos:start="9:14" pos:end="9:53"><name pos:start="9:14" pos:end="9:23">aml_method</name><argument_list pos:start="9:24" pos:end="9:53">(<argument pos:start="9:25" pos:end="9:30"><expr pos:start="9:25" pos:end="9:30"><literal type="string" pos:start="9:25" pos:end="9:30">"_DSM"</literal></expr></argument>, <argument pos:start="9:33" pos:end="9:33"><expr pos:start="9:33" pos:end="9:33"><literal type="number" pos:start="9:33" pos:end="9:33">4</literal></expr></argument>, <argument pos:start="9:36" pos:end="9:52"><expr pos:start="9:36" pos:end="9:52"><name pos:start="9:36" pos:end="9:52">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="13:72"><expr pos:start="11:5" pos:end="13:71"><call pos:start="11:5" pos:end="13:71"><name pos:start="11:5" pos:end="11:14">aml_append</name><argument_list pos:start="11:15" pos:end="13:71">(<argument pos:start="11:16" pos:end="11:21"><expr pos:start="11:16" pos:end="11:21"><name pos:start="11:16" pos:end="11:21">method</name></expr></argument>, <argument pos:start="11:24" pos:end="13:70"><expr pos:start="11:24" pos:end="13:70"><call pos:start="11:24" pos:end="13:70"><name pos:start="11:24" pos:end="11:33">aml_return</name><argument_list pos:start="11:34" pos:end="13:70">(<argument pos:start="11:35" pos:end="13:69"><expr pos:start="11:35" pos:end="13:69"><call pos:start="11:35" pos:end="13:69"><name pos:start="11:35" pos:end="11:43">aml_call4</name><argument_list pos:start="11:44" pos:end="13:69">(<argument pos:start="11:45" pos:end="11:61"><expr pos:start="11:45" pos:end="11:61"><name pos:start="11:45" pos:end="11:61">NVDIMM_COMMON_DSM</name></expr></argument>, <argument pos:start="11:64" pos:end="11:73"><expr pos:start="11:64" pos:end="11:73"><call pos:start="11:64" pos:end="11:73"><name pos:start="11:64" pos:end="11:70">aml_arg</name><argument_list pos:start="11:71" pos:end="11:73">(<argument pos:start="11:72" pos:end="11:72"><expr pos:start="11:72" pos:end="11:72"><literal type="number" pos:start="11:72" pos:end="11:72">0</literal></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="13:35" pos:end="13:44"><expr pos:start="13:35" pos:end="13:44"><call pos:start="13:35" pos:end="13:44"><name pos:start="13:35" pos:end="13:41">aml_arg</name><argument_list pos:start="13:42" pos:end="13:44">(<argument pos:start="13:43" pos:end="13:43"><expr pos:start="13:43" pos:end="13:43"><literal type="number" pos:start="13:43" pos:end="13:43">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:47" pos:end="13:56"><expr pos:start="13:47" pos:end="13:56"><call pos:start="13:47" pos:end="13:56"><name pos:start="13:47" pos:end="13:53">aml_arg</name><argument_list pos:start="13:54" pos:end="13:56">(<argument pos:start="13:55" pos:end="13:55"><expr pos:start="13:55" pos:end="13:55"><literal type="number" pos:start="13:55" pos:end="13:55">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:59" pos:end="13:68"><expr pos:start="13:59" pos:end="13:68"><call pos:start="13:59" pos:end="13:68"><name pos:start="13:59" pos:end="13:65">aml_arg</name><argument_list pos:start="13:66" pos:end="13:68">(<argument pos:start="13:67" pos:end="13:67"><expr pos:start="13:67" pos:end="13:67"><literal type="number" pos:start="13:67" pos:end="13:67">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><call pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:14">aml_append</name><argument_list pos:start="15:15" pos:end="15:27">(<argument pos:start="15:16" pos:end="15:18"><expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">dev</name></expr></argument>, <argument pos:start="15:21" pos:end="15:26"><expr pos:start="15:21" pos:end="15:26"><name pos:start="15:21" pos:end="15:26">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
