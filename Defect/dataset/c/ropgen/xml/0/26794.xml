<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26794.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">disas_fp_csel</name><parameter_list pos:start="1:26" pos:end="1:57">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:38">DisasContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:51">uint32_t</name></type> <name pos:start="1:53" pos:end="1:56">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:20">mos</name></decl>, <decl pos:start="5:23" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:23" pos:end="5:26">type</name></decl>, <decl pos:start="5:29" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:29" pos:end="5:30">rm</name></decl>, <decl pos:start="5:33" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:33" pos:end="5:36">cond</name></decl>, <decl pos:start="5:39" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:39" pos:end="5:40">rn</name></decl>, <decl pos:start="5:43" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:43" pos:end="5:44">rd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">label_continue</name> <init pos:start="7:24" pos:end="7:27">= <expr pos:start="7:26" pos:end="7:27"><operator pos:start="7:26" pos:end="7:26">-</operator><literal type="number" pos:start="7:27" pos:end="7:27">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:7">mos</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:32"><name pos:start="11:11" pos:end="11:19">extract32</name><argument_list pos:start="11:20" pos:end="11:32">(<argument pos:start="11:21" pos:end="11:24"><expr pos:start="11:21" pos:end="11:24"><name pos:start="11:21" pos:end="11:24">insn</name></expr></argument>, <argument pos:start="11:27" pos:end="11:28"><expr pos:start="11:27" pos:end="11:28"><literal type="number" pos:start="11:27" pos:end="11:28">29</literal></expr></argument>, <argument pos:start="11:31" pos:end="11:31"><expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:8">type</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:33"><name pos:start="13:12" pos:end="13:20">extract32</name><argument_list pos:start="13:21" pos:end="13:33">(<argument pos:start="13:22" pos:end="13:25"><expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">insn</name></expr></argument>, <argument pos:start="13:28" pos:end="13:29"><expr pos:start="13:28" pos:end="13:29"><literal type="number" pos:start="13:28" pos:end="13:29">22</literal></expr></argument>, <argument pos:start="13:32" pos:end="13:32"><expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="13:36" pos:end="13:63">/* 0 = single, 1 = double */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:6">rm</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:31"><name pos:start="15:10" pos:end="15:18">extract32</name><argument_list pos:start="15:19" pos:end="15:31">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">insn</name></expr></argument>, <argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><literal type="number" pos:start="15:26" pos:end="15:27">16</literal></expr></argument>, <argument pos:start="15:30" pos:end="15:30"><expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:8">cond</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:33"><name pos:start="17:12" pos:end="17:20">extract32</name><argument_list pos:start="17:21" pos:end="17:33">(<argument pos:start="17:22" pos:end="17:25"><expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">insn</name></expr></argument>, <argument pos:start="17:28" pos:end="17:29"><expr pos:start="17:28" pos:end="17:29"><literal type="number" pos:start="17:28" pos:end="17:29">12</literal></expr></argument>, <argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><literal type="number" pos:start="17:32" pos:end="17:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:6">rn</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:30"><name pos:start="19:10" pos:end="19:18">extract32</name><argument_list pos:start="19:19" pos:end="19:30">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">insn</name></expr></argument>, <argument pos:start="19:26" pos:end="19:26"><expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">5</literal></expr></argument>, <argument pos:start="19:29" pos:end="19:29"><expr pos:start="19:29" pos:end="19:29"><literal type="number" pos:start="19:29" pos:end="19:29">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:6">rd</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:30"><name pos:start="21:10" pos:end="21:18">extract32</name><argument_list pos:start="21:19" pos:end="21:30">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">insn</name></expr></argument>, <argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr></argument>, <argument pos:start="21:29" pos:end="21:29"><expr pos:start="21:29" pos:end="21:29"><literal type="number" pos:start="21:29" pos:end="21:29">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:24">(<expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:11">mos</name> <operator pos:start="25:13" pos:end="25:14">||</operator> <name pos:start="25:16" pos:end="25:19">type</name> <operator pos:start="25:21" pos:end="25:21">&gt;</operator> <literal type="number" pos:start="25:23" pos:end="25:23">1</literal></expr>)</condition> <block pos:start="25:26" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:15">

        <expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><call pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:28">unallocated_encoding</name><argument_list pos:start="27:29" pos:end="27:31">(<argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><name pos:start="27:30" pos:end="27:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:28">(<expr pos:start="35:9" pos:end="35:27"><operator pos:start="35:9" pos:end="35:9">!</operator><call pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:24">fp_access_check</name><argument_list pos:start="35:25" pos:end="35:27">(<argument pos:start="35:26" pos:end="35:26"><expr pos:start="35:26" pos:end="35:26"><name pos:start="35:26" pos:end="35:26">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:30" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:15">

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="59:5"><if pos:start="43:5" pos:end="59:5">if <condition pos:start="43:8" pos:end="43:20">(<expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:12">cond</name> <operator pos:start="43:14" pos:end="43:14">&lt;</operator> <literal type="number" pos:start="43:16" pos:end="43:19">0x0e</literal></expr>)</condition> <block pos:start="43:22" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:35"> <comment type="block" pos:start="43:24" pos:end="43:39">/* not always */</comment>

        <decl_stmt pos:start="45:9" pos:end="45:42"><decl pos:start="45:9" pos:end="45:41"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:23">label_match</name> <init pos:start="45:25" pos:end="45:41">= <expr pos:start="45:27" pos:end="45:41"><call pos:start="45:27" pos:end="45:41"><name pos:start="45:27" pos:end="45:39">gen_new_label</name><argument_list pos:start="45:40" pos:end="45:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:41"><expr pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:22">label_continue</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:40"><name pos:start="47:26" pos:end="47:38">gen_new_label</name><argument_list pos:start="47:39" pos:end="47:40">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:43"><expr pos:start="49:9" pos:end="49:42"><call pos:start="49:9" pos:end="49:42"><name pos:start="49:9" pos:end="49:23">arm_gen_test_cc</name><argument_list pos:start="49:24" pos:end="49:42">(<argument pos:start="49:25" pos:end="49:28"><expr pos:start="49:25" pos:end="49:28"><name pos:start="49:25" pos:end="49:28">cond</name></expr></argument>, <argument pos:start="49:31" pos:end="49:41"><expr pos:start="49:31" pos:end="49:41"><name pos:start="49:31" pos:end="49:41">label_match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="51:9" pos:end="51:22">/* nomatch: */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><call pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:21">gen_mov_fp2fp</name><argument_list pos:start="53:22" pos:end="53:38">(<argument pos:start="53:23" pos:end="53:23"><expr pos:start="53:23" pos:end="53:23"><name pos:start="53:23" pos:end="53:23">s</name></expr></argument>, <argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><name pos:start="53:26" pos:end="53:29">type</name></expr></argument>, <argument pos:start="53:32" pos:end="53:33"><expr pos:start="53:32" pos:end="53:33"><name pos:start="53:32" pos:end="53:33">rd</name></expr></argument>, <argument pos:start="53:36" pos:end="53:37"><expr pos:start="53:36" pos:end="53:37"><name pos:start="53:36" pos:end="53:37">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><call pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:18">tcg_gen_br</name><argument_list pos:start="55:19" pos:end="55:34">(<argument pos:start="55:20" pos:end="55:33"><expr pos:start="55:20" pos:end="55:33"><name pos:start="55:20" pos:end="55:33">label_continue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:35"><expr pos:start="57:9" pos:end="57:34"><call pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:21">gen_set_label</name><argument_list pos:start="57:22" pos:end="57:34">(<argument pos:start="57:23" pos:end="57:33"><expr pos:start="57:23" pos:end="57:33"><name pos:start="57:23" pos:end="57:33">label_match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><call pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:17">gen_mov_fp2fp</name><argument_list pos:start="63:18" pos:end="63:34">(<argument pos:start="63:19" pos:end="63:19"><expr pos:start="63:19" pos:end="63:19"><name pos:start="63:19" pos:end="63:19">s</name></expr></argument>, <argument pos:start="63:22" pos:end="63:25"><expr pos:start="63:22" pos:end="63:25"><name pos:start="63:22" pos:end="63:25">type</name></expr></argument>, <argument pos:start="63:28" pos:end="63:29"><expr pos:start="63:28" pos:end="63:29"><name pos:start="63:28" pos:end="63:29">rd</name></expr></argument>, <argument pos:start="63:32" pos:end="63:33"><expr pos:start="63:32" pos:end="63:33"><name pos:start="63:32" pos:end="63:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:20">(<expr pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:12">cond</name> <operator pos:start="67:14" pos:end="67:14">&lt;</operator> <literal type="number" pos:start="67:16" pos:end="67:19">0x0e</literal></expr>)</condition> <block pos:start="67:22" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:38"> <comment type="block" pos:start="67:24" pos:end="67:37">/* continue */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:38"><expr pos:start="69:9" pos:end="69:37"><call pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:21">gen_set_label</name><argument_list pos:start="69:22" pos:end="69:37">(<argument pos:start="69:23" pos:end="69:36"><expr pos:start="69:23" pos:end="69:36"><name pos:start="69:23" pos:end="69:36">label_continue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
