<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1498.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">block_dirty_bitmap_add_prepare</name><parameter_list pos:start="1:43" pos:end="3:56">(<parameter pos:start="1:44" pos:end="1:65"><decl pos:start="1:44" pos:end="1:65"><type pos:start="1:44" pos:end="1:65"><name pos:start="1:44" pos:end="1:57">BlkActionState</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">common</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:55"><decl pos:start="3:44" pos:end="3:55"><type pos:start="3:44" pos:end="3:55"><name pos:start="3:44" pos:end="3:48">Error</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier><modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:5">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:20">local_err</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">BlockDirtyBitmapAdd</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:31">action</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="13:61"><decl pos:start="11:5" pos:end="13:60"><type pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:25">BlockDirtyBitmapState</name> <modifier pos:start="11:27" pos:end="11:27">*</modifier></type><name pos:start="11:28" pos:end="11:32">state</name> <init pos:start="11:34" pos:end="13:60">= <expr pos:start="11:36" pos:end="13:60"><call pos:start="11:36" pos:end="13:60"><name pos:start="11:36" pos:end="11:44">DO_UPCAST</name><argument_list pos:start="11:45" pos:end="13:60">(<argument pos:start="11:46" pos:end="11:66"><expr pos:start="11:46" pos:end="11:66"><name pos:start="11:46" pos:end="11:66">BlockDirtyBitmapState</name></expr></argument>,

                                             <argument pos:start="13:46" pos:end="13:51"><expr pos:start="13:46" pos:end="13:51"><name pos:start="13:46" pos:end="13:51">common</name></expr></argument>, <argument pos:start="13:54" pos:end="13:59"><expr pos:start="13:54" pos:end="13:59"><name pos:start="13:54" pos:end="13:59">common</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:55">(<expr pos:start="17:9" pos:end="17:54"><call pos:start="17:9" pos:end="17:50"><name pos:start="17:9" pos:end="17:36">action_check_completion_mode</name><argument_list pos:start="17:37" pos:end="17:50">(<argument pos:start="17:38" pos:end="17:43"><expr pos:start="17:38" pos:end="17:43"><name pos:start="17:38" pos:end="17:43">common</name></expr></argument>, <argument pos:start="17:46" pos:end="17:49"><expr pos:start="17:46" pos:end="17:49"><name pos:start="17:46" pos:end="17:49">errp</name></expr></argument>)</argument_list></call> <operator pos:start="17:52" pos:end="17:52">&lt;</operator> <literal type="number" pos:start="17:54" pos:end="17:54">0</literal></expr>)</condition> <block pos:start="17:57" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:10">action</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:53"><name pos:start="25:14" pos:end="25:19">common</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:27">action</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:30">u</name><operator pos:start="25:31" pos:end="25:31">.</operator><name pos:start="25:32" pos:end="25:53">block_dirty_bitmap_add</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:74">/* AIO context taken and released within qmp_block_dirty_bitmap_add */</comment>

    <expr_stmt pos:start="29:5" pos:end="33:43"><expr pos:start="29:5" pos:end="33:42"><call pos:start="29:5" pos:end="33:42"><name pos:start="29:5" pos:end="29:30">qmp_block_dirty_bitmap_add</name><argument_list pos:start="29:31" pos:end="33:42">(<argument pos:start="29:32" pos:end="29:43"><expr pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:37">action</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:43">node</name></name></expr></argument>, <argument pos:start="29:46" pos:end="29:57"><expr pos:start="29:46" pos:end="29:57"><name pos:start="29:46" pos:end="29:57"><name pos:start="29:46" pos:end="29:51">action</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:57">name</name></name></expr></argument>,

                               <argument pos:start="31:32" pos:end="31:54"><expr pos:start="31:32" pos:end="31:54"><name pos:start="31:32" pos:end="31:54"><name pos:start="31:32" pos:end="31:37">action</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:54">has_granularity</name></name></expr></argument>, <argument pos:start="31:57" pos:end="31:75"><expr pos:start="31:57" pos:end="31:75"><name pos:start="31:57" pos:end="31:75"><name pos:start="31:57" pos:end="31:62">action</name><operator pos:start="31:63" pos:end="31:64">-&gt;</operator><name pos:start="31:65" pos:end="31:75">granularity</name></name></expr></argument>,

                               <argument pos:start="33:32" pos:end="33:41"><expr pos:start="33:32" pos:end="33:41"><operator pos:start="33:32" pos:end="33:32">&amp;</operator><name pos:start="33:33" pos:end="33:41">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:18">local_err</name></expr>)</condition> <block pos:start="37:21" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:31">

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:13">state</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:23">prepared</name></name> <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:30">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:41">

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:23">error_propagate</name><argument_list pos:start="43:24" pos:end="43:40">(<argument pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><name pos:start="43:25" pos:end="43:28">errp</name></expr></argument>, <argument pos:start="43:31" pos:end="43:39"><expr pos:start="43:31" pos:end="43:39"><name pos:start="43:31" pos:end="43:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
