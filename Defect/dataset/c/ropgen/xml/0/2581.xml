<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2581.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">csrhci_in_packet</name><parameter_list pos:start="1:29" pos:end="1:62">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:35">struct</name> <name pos:start="1:37" pos:end="1:44">csrhci_s</name></name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="143:1">{<block_content pos:start="5:5" pos:end="141:24">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">rpkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">opc</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="137:5">switch <condition pos:start="11:12" pos:end="11:20">(<expr pos:start="11:13" pos:end="11:19"><operator pos:start="11:13" pos:end="11:13">*</operator><name pos:start="11:14" pos:end="11:16">pkt</name> <operator pos:start="11:18" pos:end="11:19">++</operator></expr>)</condition> <block pos:start="11:22" pos:end="137:5">{<block_content pos:start="13:5" pos:end="135:14">

    <case pos:start="13:5" pos:end="13:20">case <expr pos:start="13:10" pos:end="13:19"><name pos:start="13:10" pos:end="13:19">H4_CMD_PKT</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:68"><expr pos:start="15:9" pos:end="15:67"><name pos:start="15:9" pos:end="15:11">opc</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:67"><name pos:start="15:15" pos:end="15:25">le16_to_cpu</name><argument_list pos:start="15:26" pos:end="15:67">(<argument pos:start="15:27" pos:end="15:66"><expr pos:start="15:27" pos:end="15:66"><operator pos:start="15:27" pos:end="15:27">(</operator><operator pos:start="15:28" pos:end="15:28">(</operator>struct <name pos:start="15:36" pos:end="15:50">hci_command_hdr</name> <operator pos:start="15:52" pos:end="15:52">*</operator><operator pos:start="15:53" pos:end="15:53">)</operator> <name pos:start="15:55" pos:end="15:57">pkt</name><operator pos:start="15:58" pos:end="15:58">)</operator><operator pos:start="15:59" pos:end="15:60">-&gt;</operator><name pos:start="15:61" pos:end="15:66">opcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="27:9">if <condition pos:start="17:12" pos:end="17:50">(<expr pos:start="17:13" pos:end="17:49"><call pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:26">cmd_opcode_ogf</name><argument_list pos:start="17:27" pos:end="17:31">(<argument pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:30">opc</name></expr></argument>)</argument_list></call> <operator pos:start="17:33" pos:end="17:34">==</operator> <name pos:start="17:36" pos:end="17:49">OGF_VENDOR_CMD</name></expr>)</condition> <block pos:start="17:52" pos:end="27:9">{<block_content pos:start="19:13" pos:end="25:19">

            <expr_stmt pos:start="19:13" pos:end="23:76"><expr pos:start="19:13" pos:end="23:75"><call pos:start="19:13" pos:end="23:75"><name pos:start="19:13" pos:end="19:35">csrhci_in_packet_vendor</name><argument_list pos:start="19:36" pos:end="23:75">(<argument pos:start="19:37" pos:end="19:37"><expr pos:start="19:37" pos:end="19:37"><name pos:start="19:37" pos:end="19:37">s</name></expr></argument>, <argument pos:start="19:40" pos:end="19:58"><expr pos:start="19:40" pos:end="19:58"><call pos:start="19:40" pos:end="19:58"><name pos:start="19:40" pos:end="19:53">cmd_opcode_ocf</name><argument_list pos:start="19:54" pos:end="19:58">(<argument pos:start="19:55" pos:end="19:57"><expr pos:start="19:55" pos:end="19:57"><name pos:start="19:55" pos:end="19:57">opc</name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="21:29" pos:end="21:64"><expr pos:start="21:29" pos:end="21:64"><name pos:start="21:29" pos:end="21:31">pkt</name> <operator pos:start="21:33" pos:end="21:33">+</operator> <sizeof pos:start="21:35" pos:end="21:64">sizeof<argument_list pos:start="21:41" pos:end="21:64">(<argument pos:start="21:42" pos:end="21:63"><expr pos:start="21:42" pos:end="21:63">struct <name pos:start="21:49" pos:end="21:63">hci_command_hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                            <argument pos:start="23:29" pos:end="23:74"><expr pos:start="23:29" pos:end="23:74"><name pos:start="23:29" pos:end="23:37"><name pos:start="23:29" pos:end="23:29">s</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:37">in_len</name></name> <operator pos:start="23:39" pos:end="23:39">-</operator> <sizeof pos:start="23:41" pos:end="23:70">sizeof<argument_list pos:start="23:47" pos:end="23:70">(<argument pos:start="23:48" pos:end="23:69"><expr pos:start="23:48" pos:end="23:69">struct <name pos:start="23:55" pos:end="23:69">hci_command_hdr</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:72" pos:end="23:72">-</operator> <literal type="number" pos:start="23:74" pos:end="23:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="31:9" pos:end="39:39">/* TODO: if the command is OCF_READ_LOCAL_COMMANDS or the likes,

         * we need to send it to the HCI layer and then add our supported

         * commands to the returned mask (such as OGF_VENDOR_CMD).  With

         * bt-hci.c we could just have hooks for this kind of commands but

         * we can't with bt-host.c.  */</comment>



        <expr_stmt pos:start="43:9" pos:end="43:53"><expr pos:start="43:9" pos:end="43:52"><call pos:start="43:9" pos:end="43:52"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:14">hci</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:24">cmd_send</name></name><argument_list pos:start="43:25" pos:end="43:52">(<argument pos:start="43:26" pos:end="43:31"><expr pos:start="43:26" pos:end="43:31"><name pos:start="43:26" pos:end="43:31"><name pos:start="43:26" pos:end="43:26">s</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:31">hci</name></name></expr></argument>, <argument pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><name pos:start="43:34" pos:end="43:36">pkt</name></expr></argument>, <argument pos:start="43:39" pos:end="43:51"><expr pos:start="43:39" pos:end="43:51"><name pos:start="43:39" pos:end="43:47"><name pos:start="43:39" pos:end="43:39">s</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:47">in_len</name></name> <operator pos:start="43:49" pos:end="43:49">-</operator> <literal type="number" pos:start="43:51" pos:end="43:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>



    <case pos:start="49:5" pos:end="49:20">case <expr pos:start="49:10" pos:end="49:19"><name pos:start="49:10" pos:end="49:19">H4_EVT_PKT</name></expr>:</case>

        <goto pos:start="51:9" pos:end="51:21">goto <name pos:start="51:14" pos:end="51:20">bad_pkt</name>;</goto>



    <case pos:start="55:5" pos:end="55:20">case <expr pos:start="55:10" pos:end="55:19"><name pos:start="55:10" pos:end="55:19">H4_ACL_PKT</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:53"><expr pos:start="57:9" pos:end="57:52"><call pos:start="57:9" pos:end="57:52"><name pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:14">hci</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:24">acl_send</name></name><argument_list pos:start="57:25" pos:end="57:52">(<argument pos:start="57:26" pos:end="57:31"><expr pos:start="57:26" pos:end="57:31"><name pos:start="57:26" pos:end="57:31"><name pos:start="57:26" pos:end="57:26">s</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:31">hci</name></name></expr></argument>, <argument pos:start="57:34" pos:end="57:36"><expr pos:start="57:34" pos:end="57:36"><name pos:start="57:34" pos:end="57:36">pkt</name></expr></argument>, <argument pos:start="57:39" pos:end="57:51"><expr pos:start="57:39" pos:end="57:51"><name pos:start="57:39" pos:end="57:47"><name pos:start="57:39" pos:end="57:39">s</name><operator pos:start="57:40" pos:end="57:41">-&gt;</operator><name pos:start="57:42" pos:end="57:47">in_len</name></name> <operator pos:start="57:49" pos:end="57:49">-</operator> <literal type="number" pos:start="57:51" pos:end="57:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>



    <case pos:start="63:5" pos:end="63:20">case <expr pos:start="63:10" pos:end="63:19"><name pos:start="63:10" pos:end="63:19">H4_SCO_PKT</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:53"><expr pos:start="65:9" pos:end="65:52"><call pos:start="65:9" pos:end="65:52"><name pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:14">hci</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:24">sco_send</name></name><argument_list pos:start="65:25" pos:end="65:52">(<argument pos:start="65:26" pos:end="65:31"><expr pos:start="65:26" pos:end="65:31"><name pos:start="65:26" pos:end="65:31"><name pos:start="65:26" pos:end="65:26">s</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:31">hci</name></name></expr></argument>, <argument pos:start="65:34" pos:end="65:36"><expr pos:start="65:34" pos:end="65:36"><name pos:start="65:34" pos:end="65:36">pkt</name></expr></argument>, <argument pos:start="65:39" pos:end="65:51"><expr pos:start="65:39" pos:end="65:51"><name pos:start="65:39" pos:end="65:47"><name pos:start="65:39" pos:end="65:39">s</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:47">in_len</name></name> <operator pos:start="65:49" pos:end="65:49">-</operator> <literal type="number" pos:start="65:51" pos:end="65:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>



    <case pos:start="71:5" pos:end="71:20">case <expr pos:start="71:10" pos:end="71:19"><name pos:start="71:10" pos:end="71:19">H4_NEG_PKT</name></expr>:</case>

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="75:70">(<expr pos:start="73:13" pos:end="75:69"><name pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:21">in_hdr</name></name> <operator pos:start="73:23" pos:end="73:24">!=</operator> <sizeof pos:start="73:26" pos:end="73:50">sizeof<argument_list pos:start="73:32" pos:end="73:50">(<argument pos:start="73:33" pos:end="73:49"><expr pos:start="73:33" pos:end="73:49"><name pos:start="73:33" pos:end="73:49">csrhci_neg_packet</name></expr></argument>)</argument_list></sizeof> <operator pos:start="73:52" pos:end="73:53">||</operator>

                        <call pos:start="75:25" pos:end="75:69"><name pos:start="75:25" pos:end="75:30">memcmp</name><argument_list pos:start="75:31" pos:end="75:69">(<argument pos:start="75:32" pos:end="75:38"><expr pos:start="75:32" pos:end="75:38"><name pos:start="75:32" pos:end="75:34">pkt</name> <operator pos:start="75:36" pos:end="75:36">-</operator> <literal type="number" pos:start="75:38" pos:end="75:38">1</literal></expr></argument>, <argument pos:start="75:41" pos:end="75:57"><expr pos:start="75:41" pos:end="75:57"><name pos:start="75:41" pos:end="75:57">csrhci_neg_packet</name></expr></argument>, <argument pos:start="75:60" pos:end="75:68"><expr pos:start="75:60" pos:end="75:68"><name pos:start="75:60" pos:end="75:68"><name pos:start="75:60" pos:end="75:60">s</name><operator pos:start="75:61" pos:end="75:62">-&gt;</operator><name pos:start="75:63" pos:end="75:68">in_hdr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:72" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:19">

            <expr_stmt pos:start="77:13" pos:end="77:68"><expr pos:start="77:13" pos:end="77:67"><call pos:start="77:13" pos:end="77:67"><name pos:start="77:13" pos:end="77:19">fprintf</name><argument_list pos:start="77:20" pos:end="77:67">(<argument pos:start="77:21" pos:end="77:26"><expr pos:start="77:21" pos:end="77:26"><name pos:start="77:21" pos:end="77:26">stderr</name></expr></argument>, <argument pos:start="77:29" pos:end="77:56"><expr pos:start="77:29" pos:end="77:56"><literal type="string" pos:start="77:29" pos:end="77:56">"%s: got a bad NEG packet\n"</literal></expr></argument>, <argument pos:start="77:59" pos:end="77:66"><expr pos:start="77:59" pos:end="77:66"><name pos:start="77:59" pos:end="77:66">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:17"><expr pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:11">pkt</name> <operator pos:start="83:13" pos:end="83:14">+=</operator> <literal type="number" pos:start="83:16" pos:end="83:16">2</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:56"><expr pos:start="87:9" pos:end="87:55"><name pos:start="87:9" pos:end="87:12">rpkt</name> <operator pos:start="87:14" pos:end="87:14">=</operator> <call pos:start="87:16" pos:end="87:55"><name pos:start="87:16" pos:end="87:36">csrhci_out_packet_csr</name><argument_list pos:start="87:37" pos:end="87:55">(<argument pos:start="87:38" pos:end="87:38"><expr pos:start="87:38" pos:end="87:38"><name pos:start="87:38" pos:end="87:38">s</name></expr></argument>, <argument pos:start="87:41" pos:end="87:50"><expr pos:start="87:41" pos:end="87:50"><name pos:start="87:41" pos:end="87:50">H4_NEG_PKT</name></expr></argument>, <argument pos:start="87:53" pos:end="87:54"><expr pos:start="87:53" pos:end="87:54"><literal type="number" pos:start="87:53" pos:end="87:54">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:24"><expr pos:start="91:9" pos:end="91:23"><operator pos:start="91:9" pos:end="91:9">*</operator><name pos:start="91:10" pos:end="91:13">rpkt</name> <operator pos:start="91:15" pos:end="91:16">++</operator> <operator pos:start="91:18" pos:end="91:18">=</operator> <literal type="number" pos:start="91:20" pos:end="91:23">0x20</literal></expr>;</expr_stmt>	<comment type="block" pos:start="91:33" pos:end="91:73">/* Operational settings negotiation Ok */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><call pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:14">memcpy</name><argument_list pos:start="93:15" pos:end="93:28">(<argument pos:start="93:16" pos:end="93:19"><expr pos:start="93:16" pos:end="93:19"><name pos:start="93:16" pos:end="93:19">rpkt</name></expr></argument>, <argument pos:start="93:22" pos:end="93:24"><expr pos:start="93:22" pos:end="93:24"><name pos:start="93:22" pos:end="93:24">pkt</name></expr></argument>, <argument pos:start="93:27" pos:end="93:27"><expr pos:start="93:27" pos:end="93:27"><literal type="number" pos:start="93:27" pos:end="93:27">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="93:31" pos:end="93:40"><expr pos:start="93:31" pos:end="93:39"><name pos:start="93:31" pos:end="93:34">rpkt</name> <operator pos:start="93:36" pos:end="93:37">+=</operator> <literal type="number" pos:start="93:39" pos:end="93:39">7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:24"><expr pos:start="95:9" pos:end="95:23"><operator pos:start="95:9" pos:end="95:9">*</operator><name pos:start="95:10" pos:end="95:13">rpkt</name> <operator pos:start="95:15" pos:end="95:16">++</operator> <operator pos:start="95:18" pos:end="95:18">=</operator> <literal type="number" pos:start="95:20" pos:end="95:23">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:21"><expr pos:start="97:9" pos:end="97:20"><operator pos:start="97:9" pos:end="97:9">*</operator><name pos:start="97:10" pos:end="97:13">rpkt</name> <operator pos:start="97:15" pos:end="97:15">=</operator> <literal type="number" pos:start="97:17" pos:end="97:20">0xff</literal></expr>;</expr_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>



    <case pos:start="103:5" pos:end="103:22">case <expr pos:start="103:10" pos:end="103:21"><name pos:start="103:10" pos:end="103:21">H4_ALIVE_PKT</name></expr>:</case>

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:63">(<expr pos:start="105:13" pos:end="105:62"><name pos:start="105:13" pos:end="105:21"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:21">in_hdr</name></name> <operator pos:start="105:23" pos:end="105:24">!=</operator> <literal type="number" pos:start="105:26" pos:end="105:26">4</literal> <operator pos:start="105:28" pos:end="105:29">||</operator> <name pos:start="105:31" pos:end="105:36"><name pos:start="105:31" pos:end="105:33">pkt</name><index pos:start="105:34" pos:end="105:36">[<expr pos:start="105:35" pos:end="105:35"><literal type="number" pos:start="105:35" pos:end="105:35">1</literal></expr>]</index></name> <operator pos:start="105:38" pos:end="105:39">!=</operator> <literal type="number" pos:start="105:41" pos:end="105:44">0x55</literal> <operator pos:start="105:46" pos:end="105:47">||</operator> <name pos:start="105:49" pos:end="105:54"><name pos:start="105:49" pos:end="105:51">pkt</name><index pos:start="105:52" pos:end="105:54">[<expr pos:start="105:53" pos:end="105:53"><literal type="number" pos:start="105:53" pos:end="105:53">2</literal></expr>]</index></name> <operator pos:start="105:56" pos:end="105:57">!=</operator> <literal type="number" pos:start="105:59" pos:end="105:62">0x00</literal></expr>)</condition> <block pos:start="105:65" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:19">

            <expr_stmt pos:start="107:13" pos:end="107:70"><expr pos:start="107:13" pos:end="107:69"><call pos:start="107:13" pos:end="107:69"><name pos:start="107:13" pos:end="107:19">fprintf</name><argument_list pos:start="107:20" pos:end="107:69">(<argument pos:start="107:21" pos:end="107:26"><expr pos:start="107:21" pos:end="107:26"><name pos:start="107:21" pos:end="107:26">stderr</name></expr></argument>, <argument pos:start="107:29" pos:end="107:58"><expr pos:start="107:29" pos:end="107:58"><literal type="string" pos:start="107:29" pos:end="107:58">"%s: got a bad ALIVE packet\n"</literal></expr></argument>, <argument pos:start="107:61" pos:end="107:68"><expr pos:start="107:61" pos:end="107:68"><name pos:start="107:61" pos:end="107:68">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:57"><expr pos:start="115:9" pos:end="115:56"><name pos:start="115:9" pos:end="115:12">rpkt</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <call pos:start="115:16" pos:end="115:56"><name pos:start="115:16" pos:end="115:36">csrhci_out_packet_csr</name><argument_list pos:start="115:37" pos:end="115:56">(<argument pos:start="115:38" pos:end="115:38"><expr pos:start="115:38" pos:end="115:38"><name pos:start="115:38" pos:end="115:38">s</name></expr></argument>, <argument pos:start="115:41" pos:end="115:52"><expr pos:start="115:41" pos:end="115:52"><name pos:start="115:41" pos:end="115:52">H4_ALIVE_PKT</name></expr></argument>, <argument pos:start="115:55" pos:end="115:55"><expr pos:start="115:55" pos:end="115:55"><literal type="number" pos:start="115:55" pos:end="115:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:24"><expr pos:start="119:9" pos:end="119:23"><operator pos:start="119:9" pos:end="119:9">*</operator><name pos:start="119:10" pos:end="119:13">rpkt</name> <operator pos:start="119:15" pos:end="119:16">++</operator> <operator pos:start="119:18" pos:end="119:18">=</operator> <literal type="number" pos:start="119:20" pos:end="119:23">0xcc</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:21"><expr pos:start="121:9" pos:end="121:20"><operator pos:start="121:9" pos:end="121:9">*</operator><name pos:start="121:10" pos:end="121:13">rpkt</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <literal type="number" pos:start="121:17" pos:end="121:20">0x00</literal></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>



    <default pos:start="127:5" pos:end="127:12">default:</default>

    <label pos:start="129:5" pos:end="129:12"><name pos:start="129:5" pos:end="129:11">bad_pkt</name>:</label>

        <comment type="block" pos:start="131:9" pos:end="131:29">/* TODO: error out */</comment>

        <expr_stmt pos:start="133:9" pos:end="133:60"><expr pos:start="133:9" pos:end="133:59"><call pos:start="133:9" pos:end="133:59"><name pos:start="133:9" pos:end="133:15">fprintf</name><argument_list pos:start="133:16" pos:end="133:59">(<argument pos:start="133:17" pos:end="133:22"><expr pos:start="133:17" pos:end="133:22"><name pos:start="133:17" pos:end="133:22">stderr</name></expr></argument>, <argument pos:start="133:25" pos:end="133:48"><expr pos:start="133:25" pos:end="133:48"><literal type="string" pos:start="133:25" pos:end="133:48">"%s: got a bad packet\n"</literal></expr></argument>, <argument pos:start="133:51" pos:end="133:58"><expr pos:start="133:51" pos:end="133:58"><name pos:start="133:51" pos:end="133:58">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="141:5" pos:end="141:24"><expr pos:start="141:5" pos:end="141:23"><call pos:start="141:5" pos:end="141:23"><name pos:start="141:5" pos:end="141:20">csrhci_fifo_wake</name><argument_list pos:start="141:21" pos:end="141:23">(<argument pos:start="141:22" pos:end="141:22"><expr pos:start="141:22" pos:end="141:22"><name pos:start="141:22" pos:end="141:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
