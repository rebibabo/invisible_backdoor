<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25200.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:16">help</name><parameter_list pos:start="1:17" pos:end="1:30">(<parameter pos:start="1:18" pos:end="1:29"><decl pos:start="1:18" pos:end="1:29"><type pos:start="1:18" pos:end="1:20"><name pos:start="1:18" pos:end="1:20">int</name></type> <name pos:start="1:22" pos:end="1:29">exitcode</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:19">

    <decl_stmt pos:start="5:5" pos:end="11:9"><decl pos:start="5:5" pos:end="10:0"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:28">options_help</name> <init pos:start="5:30" pos:end="10:0">=</init></decl>

<cpp:define pos:start="7:1" pos:end="7:34">#<cpp:directive pos:start="7:2" pos:end="7:7">define</cpp:directive> <cpp:macro pos:start="7:9" pos:end="7:34"><name pos:start="7:9" pos:end="7:34">QEMU_OPTIONS_GENERATE_HELP</name></cpp:macro></cpp:define>

<cpp:include pos:start="9:1" pos:end="9:33">#<cpp:directive pos:start="9:2" pos:end="9:8">include</cpp:directive> <cpp:file pos:start="9:10" pos:end="9:33">"qemu-options-wrapper.h"</cpp:file></cpp:include>

        ;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:14"><expr pos:start="13:5" pos:end="13:13"><call pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">version</name><argument_list pos:start="13:12" pos:end="13:13">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="39:25"><expr pos:start="15:5" pos:end="39:24"><call pos:start="15:5" pos:end="39:24"><name pos:start="15:5" pos:end="15:10">printf</name><argument_list pos:start="15:11" pos:end="39:24">(<argument pos:start="15:12" pos:end="35:72"><expr pos:start="15:12" pos:end="35:72"><literal type="string" pos:start="15:12" pos:end="15:47">"usage: %s [options] [disk_image]\n"</literal>

           <literal type="string" pos:start="17:12" pos:end="17:15">"\n"</literal>

           <literal type="string" pos:start="19:12" pos:end="19:72">"'disk_image' is a raw hard disk image for IDE hard disk 0\n"</literal>

           <literal type="string" pos:start="21:12" pos:end="21:15">"\n"</literal>

           <literal type="string" pos:start="23:12" pos:end="23:17">"%s\n"</literal>

           <literal type="string" pos:start="25:12" pos:end="25:63">"During emulation, the following keys are useful:\n"</literal>

           <literal type="string" pos:start="27:12" pos:end="27:49">"ctrl-alt-f      toggle full screen\n"</literal>

           <literal type="string" pos:start="29:12" pos:end="29:60">"ctrl-alt-n      switch to virtual console 'n'\n"</literal>

           <literal type="string" pos:start="31:12" pos:end="31:61">"ctrl-alt        toggle mouse and keyboard grab\n"</literal>

           <literal type="string" pos:start="33:12" pos:end="33:15">"\n"</literal>

           <literal type="string" pos:start="35:12" pos:end="35:72">"When using -nographic, press 'ctrl-a h' to get some help.\n"</literal></expr></argument>,

           <argument pos:start="37:12" pos:end="37:31"><expr pos:start="37:12" pos:end="37:31"><call pos:start="37:12" pos:end="37:31"><name pos:start="37:12" pos:end="37:29">error_get_progname</name><argument_list pos:start="37:30" pos:end="37:31">()</argument_list></call></expr></argument>,

           <argument pos:start="39:12" pos:end="39:23"><expr pos:start="39:12" pos:end="39:23"><name pos:start="39:12" pos:end="39:23">options_help</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><call pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:8">exit</name><argument_list pos:start="41:9" pos:end="41:18">(<argument pos:start="41:10" pos:end="41:17"><expr pos:start="41:10" pos:end="41:17"><name pos:start="41:10" pos:end="41:17">exitcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
