<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/459.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">nbd_accept</name><parameter_list pos:start="1:23" pos:end="1:36">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:29"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">server_fd</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:30">uintptr_t</name><operator pos:start="5:31" pos:end="5:31">)</operator> <name pos:start="5:33" pos:end="5:38">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">sockaddr_in</name></name></type> <name pos:start="7:24" pos:end="7:27">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">socklen_t</name></type> <name pos:start="9:15" pos:end="9:22">addr_len</name> <init pos:start="9:24" pos:end="9:37">= <expr pos:start="9:26" pos:end="9:37"><sizeof pos:start="9:26" pos:end="9:37">sizeof<argument_list pos:start="9:32" pos:end="9:37">(<argument pos:start="9:33" pos:end="9:36"><expr pos:start="9:33" pos:end="9:36"><name pos:start="9:33" pos:end="9:36">addr</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:68"><decl pos:start="13:5" pos:end="13:67"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">fd</name> <init pos:start="13:12" pos:end="13:67">= <expr pos:start="13:14" pos:end="13:67"><call pos:start="13:14" pos:end="13:67"><name pos:start="13:14" pos:end="13:19">accept</name><argument_list pos:start="13:20" pos:end="13:67">(<argument pos:start="13:21" pos:end="13:29"><expr pos:start="13:21" pos:end="13:29"><name pos:start="13:21" pos:end="13:29">server_fd</name></expr></argument>, <argument pos:start="13:32" pos:end="13:55"><expr pos:start="13:32" pos:end="13:55"><operator pos:start="13:32" pos:end="13:32">(</operator>struct <name pos:start="13:40" pos:end="13:47">sockaddr</name> <operator pos:start="13:49" pos:end="13:49">*</operator><operator pos:start="13:50" pos:end="13:50">)</operator><operator pos:start="13:51" pos:end="13:51">&amp;</operator><name pos:start="13:52" pos:end="13:55">addr</name></expr></argument>, <argument pos:start="13:58" pos:end="13:66"><expr pos:start="13:58" pos:end="13:66"><operator pos:start="13:58" pos:end="13:58">&amp;</operator><name pos:start="13:59" pos:end="13:66">addr_len</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:15">nbd_started</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:22">true</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:62">(<expr pos:start="17:9" pos:end="17:61"><name pos:start="17:9" pos:end="17:10">fd</name> <operator pos:start="17:12" pos:end="17:13">&gt;=</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal> <operator pos:start="17:17" pos:end="17:18">&amp;&amp;</operator> <call pos:start="17:20" pos:end="17:61"><name pos:start="17:20" pos:end="17:33">nbd_client_new</name><argument_list pos:start="17:34" pos:end="17:61">(<argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">exp</name></expr></argument>, <argument pos:start="17:40" pos:end="17:41"><expr pos:start="17:40" pos:end="17:41"><name pos:start="17:40" pos:end="17:41">fd</name></expr></argument>, <argument pos:start="17:44" pos:end="17:60"><expr pos:start="17:44" pos:end="17:60"><name pos:start="17:44" pos:end="17:60">nbd_client_closed</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:64" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <expr_stmt pos:start="19:9" pos:end="19:17"><expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:14">nb_fds</name><operator pos:start="19:15" pos:end="19:16">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
