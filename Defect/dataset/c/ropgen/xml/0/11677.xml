<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11677.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">predictor_decode_stereo</name><parameter_list pos:start="1:36" pos:end="1:63">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><name pos:start="1:37" pos:end="1:46">APEContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">ctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:62"><decl pos:start="1:54" pos:end="1:62"><type pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:62">count</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">APEPredictor</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">p</name> <init pos:start="5:21" pos:end="5:37">= <expr pos:start="5:23" pos:end="5:37"><operator pos:start="5:23" pos:end="5:23">&amp;</operator><name pos:start="5:24" pos:end="5:37"><name pos:start="5:24" pos:end="5:26">ctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">predictor</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">int32_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:21">decoded0</name> <init pos:start="7:23" pos:end="7:39">= <expr pos:start="7:25" pos:end="7:39"><name pos:start="7:25" pos:end="7:39"><name pos:start="7:25" pos:end="7:27">ctx</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:36">decoded</name><index pos:start="7:37" pos:end="7:39">[<expr pos:start="7:38" pos:end="7:38"><literal type="number" pos:start="7:38" pos:end="7:38">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int32_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:21">decoded1</name> <init pos:start="9:23" pos:end="9:39">= <expr pos:start="9:25" pos:end="9:39"><name pos:start="9:25" pos:end="9:39"><name pos:start="9:25" pos:end="9:27">ctx</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:36">decoded</name><index pos:start="9:37" pos:end="9:39">[<expr pos:start="9:38" pos:end="9:38"><literal type="number" pos:start="9:38" pos:end="9:38">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="49:5">while <condition pos:start="13:11" pos:end="13:19">(<expr pos:start="13:12" pos:end="13:18"><name pos:start="13:12" pos:end="13:16">count</name><operator pos:start="13:17" pos:end="13:18">--</operator></expr>)</condition> <block pos:start="13:21" pos:end="49:5">{<block_content pos:start="17:9" pos:end="47:9">

        <comment type="block" pos:start="15:9" pos:end="15:25">/* Predictor Y */</comment>

        <expr_stmt pos:start="17:9" pos:end="19:74"><expr pos:start="17:9" pos:end="19:73"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:17">decoded0</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="19:73"><name pos:start="17:21" pos:end="17:43">predictor_update_filter</name><argument_list pos:start="17:44" pos:end="19:73">(<argument pos:start="17:45" pos:end="17:45"><expr pos:start="17:45" pos:end="17:45"><name pos:start="17:45" pos:end="17:45">p</name></expr></argument>, <argument pos:start="17:48" pos:end="17:56"><expr pos:start="17:48" pos:end="17:56"><operator pos:start="17:48" pos:end="17:48">*</operator><name pos:start="17:49" pos:end="17:56">decoded0</name></expr></argument>, <argument pos:start="17:59" pos:end="17:59"><expr pos:start="17:59" pos:end="17:59"><literal type="number" pos:start="17:59" pos:end="17:59">0</literal></expr></argument>, <argument pos:start="17:62" pos:end="17:68"><expr pos:start="17:62" pos:end="17:68"><name pos:start="17:62" pos:end="17:68">YDELAYA</name></expr></argument>, <argument pos:start="17:71" pos:end="17:77"><expr pos:start="17:71" pos:end="17:77"><name pos:start="17:71" pos:end="17:77">YDELAYB</name></expr></argument>,

                                            <argument pos:start="19:45" pos:end="19:57"><expr pos:start="19:45" pos:end="19:57"><name pos:start="19:45" pos:end="19:57">YADAPTCOEFFSA</name></expr></argument>, <argument pos:start="19:60" pos:end="19:72"><expr pos:start="19:60" pos:end="19:72"><name pos:start="19:60" pos:end="19:72">YADAPTCOEFFSB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:19"><expr pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:16">decoded0</name><operator pos:start="21:17" pos:end="21:18">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="25:74"><expr pos:start="23:9" pos:end="25:73"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:17">decoded1</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="25:73"><name pos:start="23:21" pos:end="23:43">predictor_update_filter</name><argument_list pos:start="23:44" pos:end="25:73">(<argument pos:start="23:45" pos:end="23:45"><expr pos:start="23:45" pos:end="23:45"><name pos:start="23:45" pos:end="23:45">p</name></expr></argument>, <argument pos:start="23:48" pos:end="23:56"><expr pos:start="23:48" pos:end="23:56"><operator pos:start="23:48" pos:end="23:48">*</operator><name pos:start="23:49" pos:end="23:56">decoded1</name></expr></argument>, <argument pos:start="23:59" pos:end="23:59"><expr pos:start="23:59" pos:end="23:59"><literal type="number" pos:start="23:59" pos:end="23:59">1</literal></expr></argument>, <argument pos:start="23:62" pos:end="23:68"><expr pos:start="23:62" pos:end="23:68"><name pos:start="23:62" pos:end="23:68">XDELAYA</name></expr></argument>, <argument pos:start="23:71" pos:end="23:77"><expr pos:start="23:71" pos:end="23:77"><name pos:start="23:71" pos:end="23:77">XDELAYB</name></expr></argument>,

                                            <argument pos:start="25:45" pos:end="25:57"><expr pos:start="25:45" pos:end="25:57"><name pos:start="25:45" pos:end="25:57">XADAPTCOEFFSA</name></expr></argument>, <argument pos:start="25:60" pos:end="25:72"><expr pos:start="25:60" pos:end="25:72"><name pos:start="25:60" pos:end="25:72">XADAPTCOEFFSB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:19"><expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:16">decoded1</name><operator pos:start="27:17" pos:end="27:18">++</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="31:9" pos:end="31:22">/* Combined */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:17"><expr pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:9">p</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:14">buf</name></name><operator pos:start="33:15" pos:end="33:16">++</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="37:9" pos:end="37:48">/* Have we filled the history buffer? */</comment>

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:54">(<expr pos:start="39:13" pos:end="39:53"><name pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:13">p</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:18">buf</name></name> <operator pos:start="39:20" pos:end="39:21">==</operator> <name pos:start="39:23" pos:end="39:38"><name pos:start="39:23" pos:end="39:23">p</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:38">historybuffer</name></name> <operator pos:start="39:40" pos:end="39:40">+</operator> <name pos:start="39:42" pos:end="39:53">HISTORY_SIZE</name></expr>)</condition> <block pos:start="39:56" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:38">

            <expr_stmt pos:start="41:13" pos:end="43:64"><expr pos:start="41:13" pos:end="43:63"><call pos:start="41:13" pos:end="43:63"><name pos:start="41:13" pos:end="41:19">memmove</name><argument_list pos:start="41:20" pos:end="43:63">(<argument pos:start="41:21" pos:end="41:36"><expr pos:start="41:21" pos:end="41:36"><name pos:start="41:21" pos:end="41:36"><name pos:start="41:21" pos:end="41:21">p</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:36">historybuffer</name></name></expr></argument>, <argument pos:start="41:39" pos:end="41:44"><expr pos:start="41:39" pos:end="41:44"><name pos:start="41:39" pos:end="41:44"><name pos:start="41:39" pos:end="41:39">p</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:44">buf</name></name></expr></argument>,

                    <argument pos:start="43:21" pos:end="43:62"><expr pos:start="43:21" pos:end="43:62"><name pos:start="43:21" pos:end="43:34">PREDICTOR_SIZE</name> <operator pos:start="43:36" pos:end="43:36">*</operator> <sizeof pos:start="43:38" pos:end="43:62">sizeof<argument_list pos:start="43:44" pos:end="43:62">(<argument pos:start="43:45" pos:end="43:61"><expr pos:start="43:45" pos:end="43:61"><operator pos:start="43:45" pos:end="43:45">*</operator><name pos:start="43:46" pos:end="43:61"><name pos:start="43:46" pos:end="43:46">p</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:61">historybuffer</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:38"><expr pos:start="45:13" pos:end="45:37"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:13">p</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:18">buf</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:37"><name pos:start="45:22" pos:end="45:22">p</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:37">historybuffer</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
