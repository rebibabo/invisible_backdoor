<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8559.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">net_init_dump</name><parameter_list pos:start="1:18" pos:end="3:53">(<parameter pos:start="1:19" pos:end="1:46"><decl pos:start="1:19" pos:end="1:46"><type pos:start="1:19" pos:end="1:46"><specifier pos:start="1:19" pos:end="1:23">const</specifier> <name pos:start="1:25" pos:end="1:40">NetClientOptions</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">opts</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">name</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:38"><decl pos:start="3:19" pos:end="3:38"><type pos:start="3:19" pos:end="3:38"><name pos:start="3:19" pos:end="3:32">NetClientState</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">peer</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:52"><decl pos:start="3:41" pos:end="3:52"><type pos:start="3:41" pos:end="3:52"><name pos:start="3:41" pos:end="3:45">Error</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier><modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="97:1">{<block_content pos:start="7:5" pos:end="95:14">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:15">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">file</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:22"><name pos:start="11:10" pos:end="11:17">def_file</name><index pos:start="11:18" pos:end="11:22">[<expr pos:start="11:19" pos:end="11:21"><literal type="number" pos:start="11:19" pos:end="11:21">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:29"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:27">NetdevDumpOptions</name> <modifier pos:start="13:29" pos:end="13:29">*</modifier></type><name pos:start="13:30" pos:end="13:33">dump</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">NetClientState</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:22">nc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">DumpNetClient</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:22">dnc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><call pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:54">(<argument pos:start="21:12" pos:end="21:53"><expr pos:start="21:12" pos:end="21:53"><name pos:start="21:12" pos:end="21:21"><name pos:start="21:12" pos:end="21:15">opts</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:21">type</name></name> <operator pos:start="21:23" pos:end="21:24">==</operator> <name pos:start="21:26" pos:end="21:53">NET_CLIENT_OPTIONS_KIND_DUMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:8">dump</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:23"><name pos:start="23:12" pos:end="23:15">opts</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:18">u</name><operator pos:start="23:19" pos:end="23:19">.</operator><name pos:start="23:20" pos:end="23:23">dump</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:17"><expr pos:start="27:5" pos:end="27:16"><call pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:10">assert</name><argument_list pos:start="27:11" pos:end="27:16">(<argument pos:start="27:12" pos:end="27:15"><expr pos:start="27:12" pos:end="27:15"><name pos:start="27:12" pos:end="27:15">peer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="53:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:23">(<expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:12">dump</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:22">has_file</name></name></expr>)</condition> <block pos:start="31:25" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:26">

        <expr_stmt pos:start="33:9" pos:end="33:26"><expr pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:12">file</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:19">dump</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:25">file</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="53:5">else <block pos:start="35:12" pos:end="53:5">{<block_content pos:start="37:9" pos:end="51:24">

        <decl_stmt pos:start="37:9" pos:end="37:15"><decl pos:start="37:9" pos:end="37:14"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:14">id</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:16"><decl pos:start="39:9" pos:end="39:15"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:15">ret</name></decl>;</decl_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:47"><expr pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:46"><name pos:start="43:15" pos:end="43:35">net_hub_id_for_client</name><argument_list pos:start="43:36" pos:end="43:46">(<argument pos:start="43:37" pos:end="43:40"><expr pos:start="43:37" pos:end="43:40"><name pos:start="43:37" pos:end="43:40">peer</name></expr></argument>, <argument pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><operator pos:start="43:43" pos:end="43:43">&amp;</operator><name pos:start="43:44" pos:end="43:45">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><call pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:14">assert</name><argument_list pos:start="45:15" pos:end="45:24">(<argument pos:start="45:16" pos:end="45:23"><expr pos:start="45:16" pos:end="45:23"><name pos:start="45:16" pos:end="45:18">ret</name> <operator pos:start="45:20" pos:end="45:21">==</operator> <literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:27" pos:end="45:53">/* peer must be on a hub */</comment>



        <expr_stmt pos:start="49:9" pos:end="49:69"><expr pos:start="49:9" pos:end="49:68"><call pos:start="49:9" pos:end="49:68"><name pos:start="49:9" pos:end="49:16">snprintf</name><argument_list pos:start="49:17" pos:end="49:68">(<argument pos:start="49:18" pos:end="49:25"><expr pos:start="49:18" pos:end="49:25"><name pos:start="49:18" pos:end="49:25">def_file</name></expr></argument>, <argument pos:start="49:28" pos:end="49:43"><expr pos:start="49:28" pos:end="49:43"><sizeof pos:start="49:28" pos:end="49:43">sizeof<argument_list pos:start="49:34" pos:end="49:43">(<argument pos:start="49:35" pos:end="49:42"><expr pos:start="49:35" pos:end="49:42"><name pos:start="49:35" pos:end="49:42">def_file</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:46" pos:end="49:63"><expr pos:start="49:46" pos:end="49:63"><literal type="string" pos:start="49:46" pos:end="49:63">"qemu-vlan%d.pcap"</literal></expr></argument>, <argument pos:start="49:66" pos:end="49:67"><expr pos:start="49:66" pos:end="49:67"><name pos:start="49:66" pos:end="49:67">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:24"><expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:12">file</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:23">def_file</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="57:5" pos:end="73:5"><if pos:start="57:5" pos:end="69:5">if <condition pos:start="57:8" pos:end="57:22">(<expr pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:12">dump</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:21">has_len</name></name></expr>)</condition> <block pos:start="57:24" pos:end="69:5">{<block_content pos:start="59:9" pos:end="67:24">

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:32">(<expr pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:16">dump</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:21">len</name></name> <operator pos:start="59:23" pos:end="59:23">&gt;</operator> <name pos:start="59:25" pos:end="59:31">INT_MAX</name></expr>)</condition> <block pos:start="59:34" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:22">

            <expr_stmt pos:start="61:13" pos:end="61:67"><expr pos:start="61:13" pos:end="61:66"><call pos:start="61:13" pos:end="61:66"><name pos:start="61:13" pos:end="61:22">error_setg</name><argument_list pos:start="61:23" pos:end="61:66">(<argument pos:start="61:24" pos:end="61:27"><expr pos:start="61:24" pos:end="61:27"><name pos:start="61:24" pos:end="61:27">errp</name></expr></argument>, <argument pos:start="61:30" pos:end="61:54"><expr pos:start="61:30" pos:end="61:54"><literal type="string" pos:start="61:30" pos:end="61:48">"invalid length: %"</literal><name pos:start="61:49" pos:end="61:54">PRIu64</name></expr></argument>, <argument pos:start="61:57" pos:end="61:65"><expr pos:start="61:57" pos:end="61:65"><name pos:start="61:57" pos:end="61:65"><name pos:start="61:57" pos:end="61:60">dump</name><operator pos:start="61:61" pos:end="61:62">-&gt;</operator><name pos:start="61:63" pos:end="61:65">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="63:13" pos:end="63:22">return <expr pos:start="63:20" pos:end="63:21"><operator pos:start="63:20" pos:end="63:20">-</operator><literal type="number" pos:start="63:21" pos:end="63:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:24"><expr pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:11">len</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:23"><name pos:start="67:15" pos:end="67:18">dump</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:23">len</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="73:5">else <block pos:start="69:12" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:20">

        <expr_stmt pos:start="71:9" pos:end="71:20"><expr pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:11">len</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <literal type="number" pos:start="71:15" pos:end="71:19">65536</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:65"><expr pos:start="77:5" pos:end="77:64"><name pos:start="77:5" pos:end="77:6">nc</name> <operator pos:start="77:8" pos:end="77:8">=</operator> <call pos:start="77:10" pos:end="77:64"><name pos:start="77:10" pos:end="77:28">qemu_new_net_client</name><argument_list pos:start="77:29" pos:end="77:64">(<argument pos:start="77:30" pos:end="77:43"><expr pos:start="77:30" pos:end="77:43"><operator pos:start="77:30" pos:end="77:30">&amp;</operator><name pos:start="77:31" pos:end="77:43">net_dump_info</name></expr></argument>, <argument pos:start="77:46" pos:end="77:49"><expr pos:start="77:46" pos:end="77:49"><name pos:start="77:46" pos:end="77:49">peer</name></expr></argument>, <argument pos:start="77:52" pos:end="77:57"><expr pos:start="77:52" pos:end="77:57"><literal type="string" pos:start="77:52" pos:end="77:57">"dump"</literal></expr></argument>, <argument pos:start="77:60" pos:end="77:63"><expr pos:start="77:60" pos:end="77:63"><name pos:start="77:60" pos:end="77:63">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="81:47"><expr pos:start="79:5" pos:end="81:46"><call pos:start="79:5" pos:end="81:46"><name pos:start="79:5" pos:end="79:12">snprintf</name><argument_list pos:start="79:13" pos:end="81:46">(<argument pos:start="79:14" pos:end="79:25"><expr pos:start="79:14" pos:end="79:25"><name pos:start="79:14" pos:end="79:25"><name pos:start="79:14" pos:end="79:15">nc</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:25">info_str</name></name></expr></argument>, <argument pos:start="79:28" pos:end="79:47"><expr pos:start="79:28" pos:end="79:47"><sizeof pos:start="79:28" pos:end="79:47">sizeof<argument_list pos:start="79:34" pos:end="79:47">(<argument pos:start="79:35" pos:end="79:46"><expr pos:start="79:35" pos:end="79:46"><name pos:start="79:35" pos:end="79:46"><name pos:start="79:35" pos:end="79:36">nc</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:46">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

             <argument pos:start="81:14" pos:end="81:34"><expr pos:start="81:14" pos:end="81:34"><literal type="string" pos:start="81:14" pos:end="81:34">"dump to %s (len=%d)"</literal></expr></argument>, <argument pos:start="81:37" pos:end="81:40"><expr pos:start="81:37" pos:end="81:40"><name pos:start="81:37" pos:end="81:40">file</name></expr></argument>, <argument pos:start="81:43" pos:end="81:45"><expr pos:start="81:43" pos:end="81:45"><name pos:start="81:43" pos:end="81:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:43"><expr pos:start="85:5" pos:end="85:42"><name pos:start="85:5" pos:end="85:7">dnc</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <call pos:start="85:11" pos:end="85:42"><name pos:start="85:11" pos:end="85:19">DO_UPCAST</name><argument_list pos:start="85:20" pos:end="85:42">(<argument pos:start="85:21" pos:end="85:33"><expr pos:start="85:21" pos:end="85:33"><name pos:start="85:21" pos:end="85:33">DumpNetClient</name></expr></argument>, <argument pos:start="85:36" pos:end="85:37"><expr pos:start="85:36" pos:end="85:37"><name pos:start="85:36" pos:end="85:37">nc</name></expr></argument>, <argument pos:start="85:40" pos:end="85:41"><expr pos:start="85:40" pos:end="85:41"><name pos:start="85:40" pos:end="85:41">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:56"><expr pos:start="87:5" pos:end="87:55"><name pos:start="87:5" pos:end="87:6">rc</name> <operator pos:start="87:8" pos:end="87:8">=</operator> <call pos:start="87:10" pos:end="87:55"><name pos:start="87:10" pos:end="87:28">net_dump_state_init</name><argument_list pos:start="87:29" pos:end="87:55">(<argument pos:start="87:30" pos:end="87:37"><expr pos:start="87:30" pos:end="87:37"><operator pos:start="87:30" pos:end="87:30">&amp;</operator><name pos:start="87:31" pos:end="87:37"><name pos:start="87:31" pos:end="87:33">dnc</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:37">ds</name></name></expr></argument>, <argument pos:start="87:40" pos:end="87:43"><expr pos:start="87:40" pos:end="87:43"><name pos:start="87:40" pos:end="87:43">file</name></expr></argument>, <argument pos:start="87:46" pos:end="87:48"><expr pos:start="87:46" pos:end="87:48"><name pos:start="87:46" pos:end="87:48">len</name></expr></argument>, <argument pos:start="87:51" pos:end="87:54"><expr pos:start="87:51" pos:end="87:54"><name pos:start="87:51" pos:end="87:54">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:11">(<expr pos:start="89:9" pos:end="89:10"><name pos:start="89:9" pos:end="89:10">rc</name></expr>)</condition> <block pos:start="89:13" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:32">

        <expr_stmt pos:start="91:9" pos:end="91:32"><expr pos:start="91:9" pos:end="91:31"><call pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:27">qemu_del_net_client</name><argument_list pos:start="91:28" pos:end="91:31">(<argument pos:start="91:29" pos:end="91:30"><expr pos:start="91:29" pos:end="91:30"><name pos:start="91:29" pos:end="91:30">nc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="95:5" pos:end="95:14">return <expr pos:start="95:12" pos:end="95:13"><name pos:start="95:12" pos:end="95:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
