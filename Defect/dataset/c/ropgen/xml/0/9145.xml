<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9145.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">inet_aton</name> <parameter_list pos:start="1:15" pos:end="1:54">(<parameter pos:start="1:16" pos:end="1:31"><decl pos:start="1:16" pos:end="1:31"><type pos:start="1:16" pos:end="1:31"><specifier pos:start="1:16" pos:end="1:20">const</specifier> <name pos:start="1:22" pos:end="1:25">char</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type> <name pos:start="1:29" pos:end="1:31">str</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:47">in_addr</name></name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type> <name pos:start="1:51" pos:end="1:53">add</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:13">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type> <name pos:start="5:18" pos:end="5:20">pch</name> <init pos:start="5:22" pos:end="5:26">= <expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">str</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:21">add1</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>, <decl pos:start="7:28" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:28" pos:end="7:31">add2</name> <init pos:start="7:33" pos:end="7:35">= <expr pos:start="7:35" pos:end="7:35"><literal type="number" pos:start="7:35" pos:end="7:35">0</literal></expr></init></decl>, <decl pos:start="7:38" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:38" pos:end="7:41">add3</name> <init pos:start="7:43" pos:end="7:45">= <expr pos:start="7:45" pos:end="7:45"><literal type="number" pos:start="7:45" pos:end="7:45">0</literal></expr></init></decl>, <decl pos:start="7:48" pos:end="7:55"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:48" pos:end="7:51">add4</name> <init pos:start="7:53" pos:end="7:55">= <expr pos:start="7:55" pos:end="7:55"><literal type="number" pos:start="7:55" pos:end="7:55">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:8">add1</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:20"><name pos:start="11:12" pos:end="11:15">atoi</name><argument_list pos:start="11:16" pos:end="11:20">(<argument pos:start="11:17" pos:end="11:19"><expr pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">pch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">pch</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:26"><name pos:start="13:11" pos:end="13:17">strpbrk</name><argument_list pos:start="13:18" pos:end="13:26">(<argument pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><name pos:start="13:19" pos:end="13:21">pch</name></expr></argument>,<argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><literal type="string" pos:start="13:23" pos:end="13:25">"."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="15:41"><if pos:start="15:5" pos:end="15:41">if <condition pos:start="15:8" pos:end="15:31">(<expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:11">pch</name> <operator pos:start="15:13" pos:end="15:14">==</operator> <literal type="number" pos:start="15:16" pos:end="15:16">0</literal> <operator pos:start="15:18" pos:end="15:19">||</operator> <operator pos:start="15:21" pos:end="15:22">++</operator><name pos:start="15:23" pos:end="15:25">pch</name> <operator pos:start="15:27" pos:end="15:28">==</operator> <literal type="number" pos:start="15:30" pos:end="15:30">0</literal></expr>)</condition><block type="pseudo" pos:start="15:33" pos:end="15:41"><block_content pos:start="15:33" pos:end="15:41"> <return pos:start="15:33" pos:end="15:41">return <expr pos:start="15:40" pos:end="15:40"><literal type="number" pos:start="15:40" pos:end="15:40">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:8">add2</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:20"><name pos:start="17:12" pos:end="17:15">atoi</name><argument_list pos:start="17:16" pos:end="17:20">(<argument pos:start="17:17" pos:end="17:19"><expr pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:19">pch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:7">pch</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:26"><name pos:start="19:11" pos:end="19:17">strpbrk</name><argument_list pos:start="19:18" pos:end="19:26">(<argument pos:start="19:19" pos:end="19:21"><expr pos:start="19:19" pos:end="19:21"><name pos:start="19:19" pos:end="19:21">pch</name></expr></argument>,<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><literal type="string" pos:start="19:23" pos:end="19:25">"."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="21:41"><if pos:start="21:5" pos:end="21:41">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:11">pch</name> <operator pos:start="21:13" pos:end="21:14">==</operator> <literal type="number" pos:start="21:16" pos:end="21:16">0</literal> <operator pos:start="21:18" pos:end="21:19">||</operator> <operator pos:start="21:21" pos:end="21:22">++</operator><name pos:start="21:23" pos:end="21:25">pch</name> <operator pos:start="21:27" pos:end="21:28">==</operator> <literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr>)</condition><block type="pseudo" pos:start="21:33" pos:end="21:41"><block_content pos:start="21:33" pos:end="21:41"> <return pos:start="21:33" pos:end="21:41">return <expr pos:start="21:40" pos:end="21:40"><literal type="number" pos:start="21:40" pos:end="21:40">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:8">add3</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:20"><name pos:start="23:12" pos:end="23:15">atoi</name><argument_list pos:start="23:16" pos:end="23:20">(<argument pos:start="23:17" pos:end="23:19"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:19">pch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:7">pch</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:26"><name pos:start="25:11" pos:end="25:17">strpbrk</name><argument_list pos:start="25:18" pos:end="25:26">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">pch</name></expr></argument>,<argument pos:start="25:23" pos:end="25:25"><expr pos:start="25:23" pos:end="25:25"><literal type="string" pos:start="25:23" pos:end="25:25">"."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="27:41"><if pos:start="27:5" pos:end="27:41">if <condition pos:start="27:8" pos:end="27:31">(<expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:11">pch</name> <operator pos:start="27:13" pos:end="27:14">==</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal> <operator pos:start="27:18" pos:end="27:19">||</operator> <operator pos:start="27:21" pos:end="27:22">++</operator><name pos:start="27:23" pos:end="27:25">pch</name> <operator pos:start="27:27" pos:end="27:28">==</operator> <literal type="number" pos:start="27:30" pos:end="27:30">0</literal></expr>)</condition><block type="pseudo" pos:start="27:33" pos:end="27:41"><block_content pos:start="27:33" pos:end="27:41"> <return pos:start="27:33" pos:end="27:41">return <expr pos:start="27:40" pos:end="27:40"><literal type="number" pos:start="27:40" pos:end="27:40">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:8">add4</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:20"><name pos:start="29:12" pos:end="29:15">atoi</name><argument_list pos:start="29:16" pos:end="29:20">(<argument pos:start="29:17" pos:end="29:19"><expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:19">pch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="33:55"><if pos:start="33:5" pos:end="33:55">if <condition pos:start="33:8" pos:end="33:45">(<expr pos:start="33:9" pos:end="33:44"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:13">add1</name> <operator pos:start="33:15" pos:end="33:16">||</operator> <operator pos:start="33:18" pos:end="33:18">(</operator><name pos:start="33:19" pos:end="33:22">add1</name><operator pos:start="33:23" pos:end="33:23">|</operator><name pos:start="33:24" pos:end="33:27">add2</name><operator pos:start="33:28" pos:end="33:28">|</operator><name pos:start="33:29" pos:end="33:32">add3</name><operator pos:start="33:33" pos:end="33:33">|</operator><name pos:start="33:34" pos:end="33:37">add4</name><operator pos:start="33:38" pos:end="33:38">)</operator> <operator pos:start="33:40" pos:end="33:40">&gt;</operator> <literal type="number" pos:start="33:42" pos:end="33:44">255</literal></expr>)</condition><block type="pseudo" pos:start="33:47" pos:end="33:55"><block_content pos:start="33:47" pos:end="33:55"> <return pos:start="33:47" pos:end="33:55">return <expr pos:start="33:54" pos:end="33:54"><literal type="number" pos:start="33:54" pos:end="33:54">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:7">add</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:15">s_addr</name></name><operator pos:start="37:16" pos:end="37:16">=</operator><operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:21">add4</name><operator pos:start="37:22" pos:end="37:23">&lt;&lt;</operator><literal type="number" pos:start="37:24" pos:end="37:25">24</literal><operator pos:start="37:26" pos:end="37:26">)</operator><operator pos:start="37:27" pos:end="37:27">+</operator><operator pos:start="37:28" pos:end="37:28">(</operator><name pos:start="37:29" pos:end="37:32">add3</name><operator pos:start="37:33" pos:end="37:34">&lt;&lt;</operator><literal type="number" pos:start="37:35" pos:end="37:36">16</literal><operator pos:start="37:37" pos:end="37:37">)</operator><operator pos:start="37:38" pos:end="37:38">+</operator><operator pos:start="37:39" pos:end="37:39">(</operator><name pos:start="37:40" pos:end="37:43">add2</name><operator pos:start="37:44" pos:end="37:45">&lt;&lt;</operator><literal type="number" pos:start="37:46" pos:end="37:46">8</literal><operator pos:start="37:47" pos:end="37:47">)</operator><operator pos:start="37:48" pos:end="37:48">+</operator><name pos:start="37:49" pos:end="37:52">add1</name></expr>;</expr_stmt>



    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
