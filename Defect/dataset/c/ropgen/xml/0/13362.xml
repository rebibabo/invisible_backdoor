<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13362.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">find_pte64</name><parameter_list pos:start="1:22" pos:end="3:61">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:33">CPUPPCState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:66"><decl pos:start="1:41" pos:end="1:66"><type pos:start="1:41" pos:end="1:66"><name pos:start="1:41" pos:end="1:61"><name pos:start="1:41" pos:end="1:46">struct</name> <name pos:start="1:48" pos:end="1:61">mmu_ctx_hash64</name></name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">ctx</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:73"><decl pos:start="1:69" pos:end="1:73"><type pos:start="1:69" pos:end="1:73"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:73">h</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:28"><decl pos:start="3:23" pos:end="3:28"><type pos:start="3:23" pos:end="3:28"><name pos:start="3:23" pos:end="3:25">int</name></type> <name pos:start="3:27" pos:end="3:28">rw</name></decl></parameter>, <parameter pos:start="3:31" pos:end="3:38"><decl pos:start="3:31" pos:end="3:38"><type pos:start="3:31" pos:end="3:38"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:38">type</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:60"><decl pos:start="3:41" pos:end="3:60"><type pos:start="3:41" pos:end="3:60"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:60">target_page_bits</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="123:1">{<block_content pos:start="7:5" pos:end="121:15">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">hwaddr</name></type> <name pos:start="7:12" pos:end="7:19">pteg_off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:21">pte0</name></decl>, <decl pos:start="9:24" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:24" pos:end="9:27">pte1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:15">good</name> <init pos:start="11:17" pos:end="11:20">= <expr pos:start="11:19" pos:end="11:20"><operator pos:start="11:19" pos:end="11:19">-</operator><literal type="number" pos:start="11:20" pos:end="11:20">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:13"><expr pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <operator pos:start="17:11" pos:end="17:11">-</operator><literal type="number" pos:start="17:12" pos:end="17:12">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="17:15" pos:end="17:34">/* No entry found */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:67"><expr pos:start="19:5" pos:end="19:66"><name pos:start="19:5" pos:end="19:12">pteg_off</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <operator pos:start="19:16" pos:end="19:16">(</operator><name pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:19">ctx</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:25">hash</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">h</name></expr>]</index></name> <operator pos:start="19:30" pos:end="19:30">*</operator> <name pos:start="19:32" pos:end="19:48">HASH_PTEG_SIZE_64</name><operator pos:start="19:49" pos:end="19:49">)</operator> <operator pos:start="19:51" pos:end="19:51">&amp;</operator> <name pos:start="19:53" pos:end="19:66"><name pos:start="19:53" pos:end="19:55">env</name><operator pos:start="19:56" pos:end="19:57">-&gt;</operator><name pos:start="19:58" pos:end="19:66">htab_mask</name></name></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="85:5">for <control pos:start="21:9" pos:end="21:41">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:36"><expr pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:35">HPTES_PER_GROUP</name></expr>;</condition> <incr pos:start="21:38" pos:end="21:40"><expr pos:start="21:38" pos:end="21:40"><name pos:start="21:38" pos:end="21:38">i</name><operator pos:start="21:39" pos:end="21:40">++</operator></expr></incr>)</control> <block pos:start="21:43" pos:end="85:5">{<block_content pos:start="23:9" pos:end="83:9">

        <expr_stmt pos:start="23:9" pos:end="23:73"><expr pos:start="23:9" pos:end="23:72"><name pos:start="23:9" pos:end="23:12">pte0</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:72"><name pos:start="23:16" pos:end="23:36">ppc_hash64_load_hpte0</name><argument_list pos:start="23:37" pos:end="23:72">(<argument pos:start="23:38" pos:end="23:40"><expr pos:start="23:38" pos:end="23:40"><name pos:start="23:38" pos:end="23:40">env</name></expr></argument>, <argument pos:start="23:43" pos:end="23:71"><expr pos:start="23:43" pos:end="23:71"><name pos:start="23:43" pos:end="23:50">pteg_off</name> <operator pos:start="23:52" pos:end="23:52">+</operator> <name pos:start="23:54" pos:end="23:54">i</name><operator pos:start="23:55" pos:end="23:55">*</operator><name pos:start="23:56" pos:end="23:71">HASH_PTE_SIZE_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:73"><expr pos:start="25:9" pos:end="25:72"><name pos:start="25:9" pos:end="25:12">pte1</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:72"><name pos:start="25:16" pos:end="25:36">ppc_hash64_load_hpte1</name><argument_list pos:start="25:37" pos:end="25:72">(<argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">env</name></expr></argument>, <argument pos:start="25:43" pos:end="25:71"><expr pos:start="25:43" pos:end="25:71"><name pos:start="25:43" pos:end="25:50">pteg_off</name> <operator pos:start="25:52" pos:end="25:52">+</operator> <name pos:start="25:54" pos:end="25:54">i</name><operator pos:start="25:55" pos:end="25:55">*</operator><name pos:start="25:56" pos:end="25:71">HASH_PTE_SIZE_64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:54"><expr pos:start="29:9" pos:end="29:53"><name pos:start="29:9" pos:end="29:9">r</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:53"><name pos:start="29:13" pos:end="29:23">pte64_check</name><argument_list pos:start="29:24" pos:end="29:53">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">ctx</name></expr></argument>, <argument pos:start="29:30" pos:end="29:33"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">pte0</name></expr></argument>, <argument pos:start="29:36" pos:end="29:39"><expr pos:start="29:36" pos:end="29:39"><name pos:start="29:36" pos:end="29:39">pte1</name></expr></argument>, <argument pos:start="29:42" pos:end="29:42"><expr pos:start="29:42" pos:end="29:42"><name pos:start="29:42" pos:end="29:42">h</name></expr></argument>, <argument pos:start="29:45" pos:end="29:46"><expr pos:start="29:45" pos:end="29:46"><name pos:start="29:45" pos:end="29:46">rw</name></expr></argument>, <argument pos:start="29:49" pos:end="29:52"><expr pos:start="29:49" pos:end="29:52"><name pos:start="29:49" pos:end="29:52">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="37:51"><expr pos:start="31:9" pos:end="37:50"><call pos:start="31:9" pos:end="37:50"><name pos:start="31:9" pos:end="31:15">LOG_MMU</name><argument_list pos:start="31:16" pos:end="37:50">(<argument pos:start="31:17" pos:end="33:61"><expr pos:start="31:17" pos:end="33:61"><literal type="string" pos:start="31:17" pos:end="31:36">"Load pte from %016"</literal> <name pos:start="31:38" pos:end="31:48">HWADDR_PRIx</name> <literal type="string" pos:start="31:50" pos:end="31:55">" =&gt; "</literal> <name pos:start="31:57" pos:end="31:69">TARGET_FMT_lx</name> <literal type="string" pos:start="31:71" pos:end="31:73">" "</literal>

                <name pos:start="33:17" pos:end="33:29">TARGET_FMT_lx</name> <literal type="string" pos:start="33:31" pos:end="33:42">" %d %d %d "</literal> <name pos:start="33:44" pos:end="33:56">TARGET_FMT_lx</name> <literal type="string" pos:start="33:58" pos:end="33:61">"\n"</literal></expr></argument>,

                <argument pos:start="35:17" pos:end="35:35"><expr pos:start="35:17" pos:end="35:35"><name pos:start="35:17" pos:end="35:24">pteg_off</name> <operator pos:start="35:26" pos:end="35:26">+</operator> <operator pos:start="35:28" pos:end="35:28">(</operator><name pos:start="35:29" pos:end="35:29">i</name> <operator pos:start="35:31" pos:end="35:31">*</operator> <literal type="number" pos:start="35:33" pos:end="35:34">16</literal><operator pos:start="35:35" pos:end="35:35">)</operator></expr></argument>, <argument pos:start="35:38" pos:end="35:41"><expr pos:start="35:38" pos:end="35:41"><name pos:start="35:38" pos:end="35:41">pte0</name></expr></argument>, <argument pos:start="35:44" pos:end="35:47"><expr pos:start="35:44" pos:end="35:47"><name pos:start="35:44" pos:end="35:47">pte1</name></expr></argument>, <argument pos:start="35:50" pos:end="35:64"><expr pos:start="35:50" pos:end="35:64"><operator pos:start="35:50" pos:end="35:50">(</operator><name pos:start="35:51" pos:end="35:53">int</name><operator pos:start="35:54" pos:end="35:54">)</operator><operator pos:start="35:55" pos:end="35:55">(</operator><name pos:start="35:56" pos:end="35:59">pte0</name> <operator pos:start="35:61" pos:end="35:61">&amp;</operator> <literal type="number" pos:start="35:63" pos:end="35:63">1</literal><operator pos:start="35:64" pos:end="35:64">)</operator></expr></argument>, <argument pos:start="35:67" pos:end="35:67"><expr pos:start="35:67" pos:end="35:67"><name pos:start="35:67" pos:end="35:67">h</name></expr></argument>,

                <argument pos:start="37:17" pos:end="37:38"><expr pos:start="37:17" pos:end="37:38"><operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:20">int</name><operator pos:start="37:21" pos:end="37:21">)</operator><operator pos:start="37:22" pos:end="37:22">(</operator><operator pos:start="37:23" pos:end="37:23">(</operator><name pos:start="37:24" pos:end="37:27">pte0</name> <operator pos:start="37:29" pos:end="37:30">&gt;&gt;</operator> <literal type="number" pos:start="37:32" pos:end="37:32">1</literal><operator pos:start="37:33" pos:end="37:33">)</operator> <operator pos:start="37:35" pos:end="37:35">&amp;</operator> <literal type="number" pos:start="37:37" pos:end="37:37">1</literal><operator pos:start="37:38" pos:end="37:38">)</operator></expr></argument>, <argument pos:start="37:41" pos:end="37:49"><expr pos:start="37:41" pos:end="37:49"><name pos:start="37:41" pos:end="37:49"><name pos:start="37:41" pos:end="37:43">ctx</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:49">ptem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="39:9" pos:end="83:9">switch <condition pos:start="39:16" pos:end="39:18">(<expr pos:start="39:17" pos:end="39:17"><name pos:start="39:17" pos:end="39:17">r</name></expr>)</condition> <block pos:start="39:20" pos:end="83:9">{<block_content pos:start="41:9" pos:end="81:22">

        <case pos:start="41:9" pos:end="41:16">case <expr pos:start="41:14" pos:end="41:15"><operator pos:start="41:14" pos:end="41:14">-</operator><literal type="number" pos:start="41:15" pos:end="41:15">3</literal></expr>:</case>

            <comment type="block" pos:start="43:13" pos:end="43:35">/* PTE inconsistency */</comment>

            <return pos:start="45:13" pos:end="45:22">return <expr pos:start="45:20" pos:end="45:21"><operator pos:start="45:20" pos:end="45:20">-</operator><literal type="number" pos:start="45:21" pos:end="45:21">1</literal></expr>;</return>

        <case pos:start="47:9" pos:end="47:16">case <expr pos:start="47:14" pos:end="47:15"><operator pos:start="47:14" pos:end="47:14">-</operator><literal type="number" pos:start="47:15" pos:end="47:15">2</literal></expr>:</case>

            <comment type="block" pos:start="49:13" pos:end="49:34">/* Access violation */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:21"><expr pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <operator pos:start="51:19" pos:end="51:19">-</operator><literal type="number" pos:start="51:20" pos:end="51:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:21"><expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:16">good</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:20">i</name></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <case pos:start="57:9" pos:end="57:16">case <expr pos:start="57:14" pos:end="57:15"><operator pos:start="57:14" pos:end="57:14">-</operator><literal type="number" pos:start="57:15" pos:end="57:15">1</literal></expr>:</case>

        <default pos:start="59:9" pos:end="59:16">default:</default>

            <comment type="block" pos:start="61:13" pos:end="61:30">/* No PTE match */</comment>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:15">case <expr pos:start="65:14" pos:end="65:14"><literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>:</case>

            <comment type="block" pos:start="67:13" pos:end="67:32">/* access granted */</comment>

            <comment type="block" pos:start="69:13" pos:end="75:15">/* XXX: we should go on looping to check all PTEs consistency

             *      but if we can speed-up the whole thing as the

             *      result would be undefined if PTEs are not consistent.

             */</comment>

            <expr_stmt pos:start="77:13" pos:end="77:20"><expr pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:21"><expr pos:start="79:13" pos:end="79:20"><name pos:start="79:13" pos:end="79:16">good</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <name pos:start="79:20" pos:end="79:20">i</name></expr>;</expr_stmt>

            <goto pos:start="81:13" pos:end="81:22">goto <name pos:start="81:18" pos:end="81:21">done</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></for>

    <if_stmt pos:start="87:5" pos:end="105:5"><if pos:start="87:5" pos:end="105:5">if <condition pos:start="87:8" pos:end="87:19">(<expr pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:12">good</name> <operator pos:start="87:14" pos:end="87:15">!=</operator> <operator pos:start="87:17" pos:end="87:17">-</operator><literal type="number" pos:start="87:18" pos:end="87:18">1</literal></expr>)</condition> <block pos:start="87:21" pos:end="105:5">{<block_content pos:start="89:5" pos:end="103:9">

    <label pos:start="89:5" pos:end="89:9"><name pos:start="89:5" pos:end="89:8">done</name>:</label>

        <expr_stmt pos:start="91:9" pos:end="93:44"><expr pos:start="91:9" pos:end="93:43"><call pos:start="91:9" pos:end="93:43"><name pos:start="91:9" pos:end="91:15">LOG_MMU</name><argument_list pos:start="91:16" pos:end="93:43">(<argument pos:start="91:17" pos:end="91:73"><expr pos:start="91:17" pos:end="91:73"><literal type="string" pos:start="91:17" pos:end="91:39">"found PTE at addr %08"</literal> <name pos:start="91:41" pos:end="91:51">HWADDR_PRIx</name> <literal type="string" pos:start="91:53" pos:end="91:73">" prot=%01x ret=%d\n"</literal></expr></argument>,

                <argument pos:start="93:17" pos:end="93:26"><expr pos:start="93:17" pos:end="93:26"><name pos:start="93:17" pos:end="93:26"><name pos:start="93:17" pos:end="93:19">ctx</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:26">raddr</name></name></expr></argument>, <argument pos:start="93:29" pos:end="93:37"><expr pos:start="93:29" pos:end="93:37"><name pos:start="93:29" pos:end="93:37"><name pos:start="93:29" pos:end="93:31">ctx</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:37">prot</name></name></expr></argument>, <argument pos:start="93:40" pos:end="93:42"><expr pos:start="93:40" pos:end="93:42"><name pos:start="93:40" pos:end="93:42">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="95:9" pos:end="95:31">/* Update page flags */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:26"><expr pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:12">pte1</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <name pos:start="97:16" pos:end="97:25"><name pos:start="97:16" pos:end="97:18">ctx</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:25">raddr</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="103:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:66">(<expr pos:start="99:13" pos:end="99:65"><call pos:start="99:13" pos:end="99:60"><name pos:start="99:13" pos:end="99:39">ppc_hash64_pte_update_flags</name><argument_list pos:start="99:40" pos:end="99:60">(<argument pos:start="99:41" pos:end="99:43"><expr pos:start="99:41" pos:end="99:43"><name pos:start="99:41" pos:end="99:43">ctx</name></expr></argument>, <argument pos:start="99:46" pos:end="99:50"><expr pos:start="99:46" pos:end="99:50"><operator pos:start="99:46" pos:end="99:46">&amp;</operator><name pos:start="99:47" pos:end="99:50">pte1</name></expr></argument>, <argument pos:start="99:53" pos:end="99:55"><expr pos:start="99:53" pos:end="99:55"><name pos:start="99:53" pos:end="99:55">ret</name></expr></argument>, <argument pos:start="99:58" pos:end="99:59"><expr pos:start="99:58" pos:end="99:59"><name pos:start="99:58" pos:end="99:59">rw</name></expr></argument>)</argument_list></call> <operator pos:start="99:62" pos:end="99:63">==</operator> <literal type="number" pos:start="99:65" pos:end="99:65">1</literal></expr>)</condition> <block pos:start="99:68" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:82">

            <expr_stmt pos:start="101:13" pos:end="101:82"><expr pos:start="101:13" pos:end="101:81"><call pos:start="101:13" pos:end="101:81"><name pos:start="101:13" pos:end="101:34">ppc_hash64_store_hpte1</name><argument_list pos:start="101:35" pos:end="101:81">(<argument pos:start="101:36" pos:end="101:38"><expr pos:start="101:36" pos:end="101:38"><name pos:start="101:36" pos:end="101:38">env</name></expr></argument>, <argument pos:start="101:41" pos:end="101:74"><expr pos:start="101:41" pos:end="101:74"><name pos:start="101:41" pos:end="101:48">pteg_off</name> <operator pos:start="101:50" pos:end="101:50">+</operator> <name pos:start="101:52" pos:end="101:55">good</name> <operator pos:start="101:57" pos:end="101:57">*</operator> <name pos:start="101:59" pos:end="101:74">HASH_PTE_SIZE_64</name></expr></argument>, <argument pos:start="101:77" pos:end="101:80"><expr pos:start="101:77" pos:end="101:80"><name pos:start="101:77" pos:end="101:80">pte1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="109:5" pos:end="111:40">/* We have a TLB that saves 4K pages, so let's

     * split a huge page to 4k chunks */</comment>

    <if_stmt pos:start="113:5" pos:end="119:5"><if pos:start="113:5" pos:end="119:5">if <condition pos:start="113:8" pos:end="113:45">(<expr pos:start="113:9" pos:end="113:44"><name pos:start="113:9" pos:end="113:24">target_page_bits</name> <operator pos:start="113:26" pos:end="113:27">!=</operator> <name pos:start="113:29" pos:end="113:44">TARGET_PAGE_BITS</name></expr>)</condition> <block pos:start="113:47" pos:end="119:5">{<block_content pos:start="115:9" pos:end="117:41">

        <expr_stmt pos:start="115:9" pos:end="117:41"><expr pos:start="115:9" pos:end="117:40"><name pos:start="115:9" pos:end="115:18"><name pos:start="115:9" pos:end="115:11">ctx</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:18">raddr</name></name> <operator pos:start="115:20" pos:end="115:21">|=</operator> <operator pos:start="115:23" pos:end="115:23">(</operator><name pos:start="115:24" pos:end="115:33"><name pos:start="115:24" pos:end="115:26">ctx</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:33">eaddr</name></name> <operator pos:start="115:35" pos:end="115:35">&amp;</operator> <operator pos:start="115:37" pos:end="115:37">(</operator><operator pos:start="115:38" pos:end="115:38">(</operator><literal type="number" pos:start="115:39" pos:end="115:39">1</literal> <operator pos:start="115:41" pos:end="115:42">&lt;&lt;</operator> <name pos:start="115:44" pos:end="115:59">target_page_bits</name><operator pos:start="115:60" pos:end="115:60">)</operator> <operator pos:start="115:62" pos:end="115:62">-</operator> <literal type="number" pos:start="115:64" pos:end="115:64">1</literal><operator pos:start="115:65" pos:end="115:65">)</operator><operator pos:start="115:66" pos:end="115:66">)</operator>

                      <operator pos:start="117:23" pos:end="117:23">&amp;</operator> <name pos:start="117:25" pos:end="117:40">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="121:5" pos:end="121:15">return <expr pos:start="121:12" pos:end="121:14"><name pos:start="121:12" pos:end="121:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
