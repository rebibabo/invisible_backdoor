<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23497.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">AioContext</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:27">aio_context_new</name><parameter_list pos:start="1:28" pos:end="1:41">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:36"><name pos:start="1:29" pos:end="1:33">Error</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier><modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:40">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:16">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">AioContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">ctx</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:77"><expr pos:start="11:5" pos:end="11:76"><name pos:start="11:5" pos:end="11:7">ctx</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <operator pos:start="11:11" pos:end="11:11">(</operator><name pos:start="11:12" pos:end="11:21">AioContext</name> <operator pos:start="11:23" pos:end="11:23">*</operator><operator pos:start="11:24" pos:end="11:24">)</operator> <call pos:start="11:26" pos:end="11:76"><name pos:start="11:26" pos:end="11:37">g_source_new</name><argument_list pos:start="11:38" pos:end="11:76">(<argument pos:start="11:39" pos:end="11:55"><expr pos:start="11:39" pos:end="11:55"><operator pos:start="11:39" pos:end="11:39">&amp;</operator><name pos:start="11:40" pos:end="11:55">aio_source_funcs</name></expr></argument>, <argument pos:start="11:58" pos:end="11:75"><expr pos:start="11:58" pos:end="11:75"><sizeof pos:start="11:58" pos:end="11:75">sizeof<argument_list pos:start="11:64" pos:end="11:75">(<argument pos:start="11:65" pos:end="11:74"><expr pos:start="11:65" pos:end="11:74"><name pos:start="11:65" pos:end="11:74">AioContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><call pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:21">aio_context_setup</name><argument_list pos:start="13:22" pos:end="13:26">(<argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:52"><name pos:start="17:11" pos:end="17:29">event_notifier_init</name><argument_list pos:start="17:30" pos:end="17:52">(<argument pos:start="17:31" pos:end="17:44"><expr pos:start="17:31" pos:end="17:44"><operator pos:start="17:31" pos:end="17:31">&amp;</operator><name pos:start="17:32" pos:end="17:44"><name pos:start="17:32" pos:end="17:34">ctx</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:44">notifier</name></name></expr></argument>, <argument pos:start="17:47" pos:end="17:51"><expr pos:start="17:47" pos:end="17:51"><name pos:start="17:47" pos:end="17:51">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:76"><expr pos:start="21:9" pos:end="21:75"><call pos:start="21:9" pos:end="21:75"><name pos:start="21:9" pos:end="21:24">error_setg_errno</name><argument_list pos:start="21:25" pos:end="21:75">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">errp</name></expr></argument>, <argument pos:start="21:32" pos:end="21:35"><expr pos:start="21:32" pos:end="21:35"><operator pos:start="21:32" pos:end="21:32">-</operator><name pos:start="21:33" pos:end="21:35">ret</name></expr></argument>, <argument pos:start="21:38" pos:end="21:74"><expr pos:start="21:38" pos:end="21:74"><literal type="string" pos:start="21:38" pos:end="21:74">"Failed to initialize event notifier"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><call pos:start="27:5" pos:end="27:48"><name pos:start="27:5" pos:end="27:28">g_source_set_can_recurse</name><argument_list pos:start="27:29" pos:end="27:48">(<argument pos:start="27:30" pos:end="27:41"><expr pos:start="27:30" pos:end="27:41"><operator pos:start="27:30" pos:end="27:30">&amp;</operator><name pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:33">ctx</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:41">source</name></name></expr></argument>, <argument pos:start="27:44" pos:end="27:47"><expr pos:start="27:44" pos:end="27:47"><name pos:start="27:44" pos:end="27:47">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><call pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:21">qemu_lockcnt_init</name><argument_list pos:start="29:22" pos:end="29:38">(<argument pos:start="29:23" pos:end="29:37"><expr pos:start="29:23" pos:end="29:37"><operator pos:start="29:23" pos:end="29:23">&amp;</operator><name pos:start="29:24" pos:end="29:37"><name pos:start="29:24" pos:end="29:26">ctx</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:37">list_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="42:0"><expr pos:start="31:5" pos:end="39:47"><call pos:start="31:5" pos:end="39:47"><name pos:start="31:5" pos:end="31:26">aio_set_event_notifier</name><argument_list pos:start="31:27" pos:end="39:47">(<argument pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:30">ctx</name></expr></argument>, <argument pos:start="31:33" pos:end="31:46"><expr pos:start="31:33" pos:end="31:46"><operator pos:start="31:33" pos:end="31:33">&amp;</operator><name pos:start="31:34" pos:end="31:46"><name pos:start="31:34" pos:end="31:36">ctx</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:46">notifier</name></name></expr></argument>,

                           <argument pos:start="33:28" pos:end="33:32"><expr pos:start="33:28" pos:end="33:32"><name pos:start="33:28" pos:end="33:32">false</name></expr></argument>,

                           <argument pos:start="35:28" pos:end="37:50"><expr pos:start="35:28" pos:end="37:50"><operator pos:start="35:28" pos:end="35:28">(</operator><name pos:start="35:29" pos:end="35:48">EventNotifierHandler</name> <operator pos:start="35:50" pos:end="35:50">*</operator><operator pos:start="35:51" pos:end="35:51">)</operator>

                           <name pos:start="37:28" pos:end="37:50">event_notifier_dummy_cb</name></expr></argument>,

                           <argument pos:start="39:28" pos:end="39:46"><expr pos:start="39:28" pos:end="39:46"><name pos:start="39:28" pos:end="39:46">event_notifier_poll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="41:1" pos:end="41:23">#<cpp:directive pos:start="41:2" pos:end="41:6">ifdef</cpp:directive> <name pos:start="41:8" pos:end="41:23">CONFIG_LINUX_AIO</name></cpp:ifdef>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:7">ctx</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:18">linux_aio</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:25">NULL</name></expr>;</expr_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="47:5" pos:end="47:28"><expr pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:7">ctx</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:20">thread_pool</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:27">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><call pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:23">qemu_rec_mutex_init</name><argument_list pos:start="49:24" pos:end="49:35">(<argument pos:start="49:25" pos:end="49:34"><expr pos:start="49:25" pos:end="49:34"><operator pos:start="49:25" pos:end="49:25">&amp;</operator><name pos:start="49:26" pos:end="49:34"><name pos:start="49:26" pos:end="49:28">ctx</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:34">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:62"><expr pos:start="51:5" pos:end="51:61"><call pos:start="51:5" pos:end="51:61"><name pos:start="51:5" pos:end="51:23">timerlistgroup_init</name><argument_list pos:start="51:24" pos:end="51:61">(<argument pos:start="51:25" pos:end="51:33"><expr pos:start="51:25" pos:end="51:33"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:33"><name pos:start="51:26" pos:end="51:28">ctx</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:33">tlg</name></name></expr></argument>, <argument pos:start="51:36" pos:end="51:55"><expr pos:start="51:36" pos:end="51:55"><name pos:start="51:36" pos:end="51:55">aio_timerlist_notify</name></expr></argument>, <argument pos:start="51:58" pos:end="51:60"><expr pos:start="51:58" pos:end="51:60"><name pos:start="51:58" pos:end="51:60">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:21"><expr pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:7">ctx</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:16">poll_ns</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <literal type="number" pos:start="55:20" pos:end="55:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:25"><expr pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:7">ctx</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:20">poll_max_ns</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <literal type="number" pos:start="57:24" pos:end="57:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:7">ctx</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:18">poll_grow</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:7">ctx</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:20">poll_shrink</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr>;</expr_stmt>



    <return pos:start="65:5" pos:end="65:15">return <expr pos:start="65:12" pos:end="65:14"><name pos:start="65:12" pos:end="65:14">ctx</name></expr>;</return>

<label pos:start="67:1" pos:end="67:5"><name pos:start="67:1" pos:end="67:4">fail</name>:</label>

    <expr_stmt pos:start="69:5" pos:end="69:35"><expr pos:start="69:5" pos:end="69:34"><call pos:start="69:5" pos:end="69:34"><name pos:start="69:5" pos:end="69:20">g_source_destroy</name><argument_list pos:start="69:21" pos:end="69:34">(<argument pos:start="69:22" pos:end="69:33"><expr pos:start="69:22" pos:end="69:33"><operator pos:start="69:22" pos:end="69:22">&amp;</operator><name pos:start="69:23" pos:end="69:33"><name pos:start="69:23" pos:end="69:25">ctx</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:33">source</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="71:5" pos:end="71:16">return <expr pos:start="71:12" pos:end="71:15"><name pos:start="71:12" pos:end="71:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
