<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20488.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">load_image_gzipped</name><parameter_list pos:start="1:23" pos:end="1:74">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:43">filename</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:56"><decl pos:start="1:46" pos:end="1:56"><type pos:start="1:46" pos:end="1:56"><name pos:start="1:46" pos:end="1:51">hwaddr</name></type> <name pos:start="1:53" pos:end="1:56">addr</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:73"><decl pos:start="1:59" pos:end="1:73"><type pos:start="1:59" pos:end="1:73"><name pos:start="1:59" pos:end="1:66">uint64_t</name></type> <name pos:start="1:68" pos:end="1:73">max_sz</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:15">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:28">compressed_data</name> <init pos:start="5:30" pos:end="5:35">= <expr pos:start="5:32" pos:end="5:35"><name pos:start="5:32" pos:end="5:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">data</name> <init pos:start="7:19" pos:end="7:24">= <expr pos:start="7:21" pos:end="7:24"><name pos:start="7:21" pos:end="7:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">gsize</name></type> <name pos:start="9:11" pos:end="9:13">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">ssize_t</name></type> <name pos:start="11:13" pos:end="11:17">bytes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:16">= <expr pos:start="13:15" pos:end="13:16"><operator pos:start="13:15" pos:end="13:15">-</operator><literal type="number" pos:start="13:16" pos:end="13:16">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="19:35">(<expr pos:start="17:9" pos:end="19:34"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="19:34"><name pos:start="17:10" pos:end="17:28">g_file_get_contents</name><argument_list pos:start="17:29" pos:end="19:34">(<argument pos:start="17:30" pos:end="17:37"><expr pos:start="17:30" pos:end="17:37"><name pos:start="17:30" pos:end="17:37">filename</name></expr></argument>, <argument pos:start="17:40" pos:end="17:65"><expr pos:start="17:40" pos:end="17:65"><operator pos:start="17:40" pos:end="17:40">(</operator><name pos:start="17:41" pos:end="17:44">char</name> <operator pos:start="17:46" pos:end="17:46">*</operator><operator pos:start="17:47" pos:end="17:47">*</operator><operator pos:start="17:48" pos:end="17:48">)</operator> <operator pos:start="17:50" pos:end="17:50">&amp;</operator><name pos:start="17:51" pos:end="17:65">compressed_data</name></expr></argument>, <argument pos:start="17:68" pos:end="17:71"><expr pos:start="17:68" pos:end="17:71"><operator pos:start="17:68" pos:end="17:68">&amp;</operator><name pos:start="17:69" pos:end="17:71">len</name></expr></argument>,

                             <argument pos:start="19:30" pos:end="19:33"><expr pos:start="19:30" pos:end="19:33"><name pos:start="19:30" pos:end="19:33">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:37" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:39">/* Is it a gzip-compressed file? */</comment>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="33:35">(<expr pos:start="29:9" pos:end="33:34"><name pos:start="29:9" pos:end="29:11">len</name> <operator pos:start="29:13" pos:end="29:13">&lt;</operator> <literal type="number" pos:start="29:15" pos:end="29:15">2</literal> <operator pos:start="29:17" pos:end="29:18">||</operator>

        <name pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:23">compressed_data</name><index pos:start="31:24" pos:end="31:26">[<expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr>]</index></name> <operator pos:start="31:28" pos:end="31:29">!=</operator> <literal type="number" pos:start="31:31" pos:end="31:34">0x1f</literal> <operator pos:start="31:36" pos:end="31:37">||</operator>

        <name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:23">compressed_data</name><index pos:start="33:24" pos:end="33:26">[<expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr>]</index></name> <operator pos:start="33:28" pos:end="33:29">!=</operator> <literal type="number" pos:start="33:31" pos:end="33:34">0x8b</literal></expr>)</condition> <block pos:start="33:37" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:17">

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:45">(<expr pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:14">max_sz</name> <operator pos:start="41:16" pos:end="41:16">&gt;</operator> <name pos:start="41:18" pos:end="41:44">LOAD_IMAGE_MAX_GUNZIP_BYTES</name></expr>)</condition> <block pos:start="41:47" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:45">

        <expr_stmt pos:start="43:9" pos:end="43:45"><expr pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:14">max_sz</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:44">LOAD_IMAGE_MAX_GUNZIP_BYTES</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:28"><expr pos:start="49:5" pos:end="49:27"><name pos:start="49:5" pos:end="49:8">data</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <call pos:start="49:12" pos:end="49:27"><name pos:start="49:12" pos:end="49:19">g_malloc</name><argument_list pos:start="49:20" pos:end="49:27">(<argument pos:start="49:21" pos:end="49:26"><expr pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:26">max_sz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:55"><expr pos:start="51:5" pos:end="51:54"><name pos:start="51:5" pos:end="51:9">bytes</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:54"><name pos:start="51:13" pos:end="51:18">gunzip</name><argument_list pos:start="51:19" pos:end="51:54">(<argument pos:start="51:20" pos:end="51:23"><expr pos:start="51:20" pos:end="51:23"><name pos:start="51:20" pos:end="51:23">data</name></expr></argument>, <argument pos:start="51:26" pos:end="51:31"><expr pos:start="51:26" pos:end="51:31"><name pos:start="51:26" pos:end="51:31">max_sz</name></expr></argument>, <argument pos:start="51:34" pos:end="51:48"><expr pos:start="51:34" pos:end="51:48"><name pos:start="51:34" pos:end="51:48">compressed_data</name></expr></argument>, <argument pos:start="51:51" pos:end="51:53"><expr pos:start="51:51" pos:end="51:53"><name pos:start="51:51" pos:end="51:53">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="61:5">if <condition pos:start="53:8" pos:end="53:18">(<expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:13">bytes</name> <operator pos:start="53:15" pos:end="53:15">&lt;</operator> <literal type="number" pos:start="53:17" pos:end="53:17">0</literal></expr>)</condition> <block pos:start="53:20" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:17">

        <expr_stmt pos:start="55:9" pos:end="57:26"><expr pos:start="55:9" pos:end="57:25"><call pos:start="55:9" pos:end="57:25"><name pos:start="55:9" pos:end="55:15">fprintf</name><argument_list pos:start="55:16" pos:end="57:25">(<argument pos:start="55:17" pos:end="55:22"><expr pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:22">stderr</name></expr></argument>, <argument pos:start="55:25" pos:end="55:72"><expr pos:start="55:25" pos:end="55:72"><literal type="string" pos:start="55:25" pos:end="55:72">"%s: unable to decompress gzipped kernel file\n"</literal></expr></argument>,

                <argument pos:start="57:17" pos:end="57:24"><expr pos:start="57:17" pos:end="57:24"><name pos:start="57:17" pos:end="57:24">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:17">goto <name pos:start="59:14" pos:end="59:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:52"><expr pos:start="65:5" pos:end="65:51"><call pos:start="65:5" pos:end="65:51"><name pos:start="65:5" pos:end="65:22">rom_add_blob_fixed</name><argument_list pos:start="65:23" pos:end="65:51">(<argument pos:start="65:24" pos:end="65:31"><expr pos:start="65:24" pos:end="65:31"><name pos:start="65:24" pos:end="65:31">filename</name></expr></argument>, <argument pos:start="65:34" pos:end="65:37"><expr pos:start="65:34" pos:end="65:37"><name pos:start="65:34" pos:end="65:37">data</name></expr></argument>, <argument pos:start="65:40" pos:end="65:44"><expr pos:start="65:40" pos:end="65:44"><name pos:start="65:40" pos:end="65:44">bytes</name></expr></argument>, <argument pos:start="65:47" pos:end="65:50"><expr pos:start="65:47" pos:end="65:50"><name pos:start="65:47" pos:end="65:50">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:16"><expr pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:7">ret</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <name pos:start="67:11" pos:end="67:15">bytes</name></expr>;</expr_stmt>



 <label pos:start="71:2" pos:end="71:5"><name pos:start="71:2" pos:end="71:4">out</name>:</label>

    <expr_stmt pos:start="73:5" pos:end="73:28"><expr pos:start="73:5" pos:end="73:27"><call pos:start="73:5" pos:end="73:27"><name pos:start="73:5" pos:end="73:10">g_free</name><argument_list pos:start="73:11" pos:end="73:27">(<argument pos:start="73:12" pos:end="73:26"><expr pos:start="73:12" pos:end="73:26"><name pos:start="73:12" pos:end="73:26">compressed_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:17"><expr pos:start="75:5" pos:end="75:16"><call pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:10">g_free</name><argument_list pos:start="75:11" pos:end="75:16">(<argument pos:start="75:12" pos:end="75:15"><expr pos:start="75:12" pos:end="75:15"><name pos:start="75:12" pos:end="75:15">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="77:5" pos:end="77:15">return <expr pos:start="77:12" pos:end="77:14"><name pos:start="77:12" pos:end="77:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
