<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20092.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ehci_process_itd</name><parameter_list pos:start="1:28" pos:end="5:42">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:37">EHCIState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">ehci</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:35">EHCIitd</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">itd</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:41"><decl pos:start="5:29" pos:end="5:41"><type pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:36">uint32_t</name></type> <name pos:start="5:38" pos:end="5:41">addr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="199:1">{<block_content pos:start="9:5" pos:end="197:13">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">USBDevice</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">USBEndpoint</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">ep</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:14">i</name></decl>, <decl pos:start="13:17" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:17" pos:end="13:19">len</name></decl>, <decl pos:start="13:22" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:22" pos:end="13:24">pid</name></decl>, <decl pos:start="13:27" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:27" pos:end="13:29">dir</name></decl>, <decl pos:start="13:32" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:32" pos:end="13:38">devaddr</name></decl>, <decl pos:start="13:41" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:41" pos:end="13:44">endp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:15">pg</name></decl>, <decl pos:start="15:18" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:18" pos:end="15:20">off</name></decl>, <decl pos:start="15:23" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:23" pos:end="15:26">ptr1</name></decl>, <decl pos:start="15:29" pos:end="15:32"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:29" pos:end="15:32">ptr2</name></decl>, <decl pos:start="15:35" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:35" pos:end="15:37">max</name></decl>, <decl pos:start="15:40" pos:end="15:43"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:40" pos:end="15:43">mult</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:8">ehci</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:31">periodic_sched_active</name></name> <operator pos:start="19:33" pos:end="19:33">=</operator> <name pos:start="19:35" pos:end="19:49">PERIODIC_ACTIVE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:49"><expr pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:7">dir</name> <operator pos:start="23:9" pos:end="23:9">=</operator><operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:24"><name pos:start="23:11" pos:end="23:13">itd</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:21">bufptr</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">1</literal></expr>]</index></name> <operator pos:start="23:26" pos:end="23:26">&amp;</operator> <name pos:start="23:28" pos:end="23:47">ITD_BUFPTR_DIRECTION</name><operator pos:start="23:48" pos:end="23:48">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:60"><expr pos:start="25:5" pos:end="25:59"><name pos:start="25:5" pos:end="25:11">devaddr</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:59"><name pos:start="25:15" pos:end="25:23">get_field</name><argument_list pos:start="25:24" pos:end="25:59">(<argument pos:start="25:25" pos:end="25:38"><expr pos:start="25:25" pos:end="25:38"><name pos:start="25:25" pos:end="25:38"><name pos:start="25:25" pos:end="25:27">itd</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:35">bufptr</name><index pos:start="25:36" pos:end="25:38">[<expr pos:start="25:37" pos:end="25:37"><literal type="number" pos:start="25:37" pos:end="25:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:41" pos:end="25:58"><expr pos:start="25:41" pos:end="25:58"><name pos:start="25:41" pos:end="25:58">ITD_BUFPTR_DEVADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:52"><expr pos:start="27:5" pos:end="27:51"><name pos:start="27:5" pos:end="27:8">endp</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:51"><name pos:start="27:12" pos:end="27:20">get_field</name><argument_list pos:start="27:21" pos:end="27:51">(<argument pos:start="27:22" pos:end="27:35"><expr pos:start="27:22" pos:end="27:35"><name pos:start="27:22" pos:end="27:35"><name pos:start="27:22" pos:end="27:24">itd</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:32">bufptr</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:38" pos:end="27:50"><expr pos:start="27:38" pos:end="27:50"><name pos:start="27:38" pos:end="27:50">ITD_BUFPTR_EP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:55"><expr pos:start="29:5" pos:end="29:54"><name pos:start="29:5" pos:end="29:7">max</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:54"><name pos:start="29:11" pos:end="29:19">get_field</name><argument_list pos:start="29:20" pos:end="29:54">(<argument pos:start="29:21" pos:end="29:34"><expr pos:start="29:21" pos:end="29:34"><name pos:start="29:21" pos:end="29:34"><name pos:start="29:21" pos:end="29:23">itd</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:31">bufptr</name><index pos:start="29:32" pos:end="29:34">[<expr pos:start="29:33" pos:end="29:33"><literal type="number" pos:start="29:33" pos:end="29:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:37" pos:end="29:53"><expr pos:start="29:37" pos:end="29:53"><name pos:start="29:37" pos:end="29:53">ITD_BUFPTR_MAXPKT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:8">mult</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:53"><name pos:start="31:12" pos:end="31:20">get_field</name><argument_list pos:start="31:21" pos:end="31:53">(<argument pos:start="31:22" pos:end="31:35"><expr pos:start="31:22" pos:end="31:35"><name pos:start="31:22" pos:end="31:35"><name pos:start="31:22" pos:end="31:24">itd</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:32">bufptr</name><index pos:start="31:33" pos:end="31:35">[<expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:38" pos:end="31:52"><expr pos:start="31:38" pos:end="31:52"><name pos:start="31:38" pos:end="31:52">ITD_BUFPTR_MULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="195:5">for<control pos:start="35:8" pos:end="35:26">(<init pos:start="35:9" pos:end="35:14"><expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">i</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <literal type="number" pos:start="35:13" pos:end="35:13">0</literal></expr>;</init> <condition pos:start="35:16" pos:end="35:21"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:16">i</name> <operator pos:start="35:18" pos:end="35:18">&lt;</operator> <literal type="number" pos:start="35:20" pos:end="35:20">8</literal></expr>;</condition> <incr pos:start="35:23" pos:end="35:25"><expr pos:start="35:23" pos:end="35:25"><name pos:start="35:23" pos:end="35:23">i</name><operator pos:start="35:24" pos:end="35:25">++</operator></expr></incr>)</control> <block pos:start="35:28" pos:end="195:5">{<block_content pos:start="37:9" pos:end="193:9">

        <if_stmt pos:start="37:9" pos:end="193:9"><if pos:start="37:9" pos:end="193:9">if <condition pos:start="37:12" pos:end="37:47">(<expr pos:start="37:13" pos:end="37:46"><name pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:15">itd</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:25">transact</name><index pos:start="37:26" pos:end="37:28">[<expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">i</name></expr>]</index></name> <operator pos:start="37:30" pos:end="37:30">&amp;</operator> <name pos:start="37:32" pos:end="37:46">ITD_XACT_ACTIVE</name></expr>)</condition> <block pos:start="37:49" pos:end="193:9">{<block_content pos:start="39:13" pos:end="191:49">

            <expr_stmt pos:start="39:13" pos:end="39:63"><expr pos:start="39:13" pos:end="39:62"><name pos:start="39:13" pos:end="39:14">pg</name>   <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:62"><name pos:start="39:20" pos:end="39:28">get_field</name><argument_list pos:start="39:29" pos:end="39:62">(<argument pos:start="39:30" pos:end="39:45"><expr pos:start="39:30" pos:end="39:45"><name pos:start="39:30" pos:end="39:45"><name pos:start="39:30" pos:end="39:32">itd</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:42">transact</name><index pos:start="39:43" pos:end="39:45">[<expr pos:start="39:44" pos:end="39:44"><name pos:start="39:44" pos:end="39:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="39:48" pos:end="39:61"><expr pos:start="39:48" pos:end="39:61"><name pos:start="39:48" pos:end="39:61">ITD_XACT_PGSEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:59"><expr pos:start="41:13" pos:end="41:58"><name pos:start="41:13" pos:end="41:15">off</name>  <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:35"><name pos:start="41:20" pos:end="41:22">itd</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:32">transact</name><index pos:start="41:33" pos:end="41:35">[<expr pos:start="41:34" pos:end="41:34"><name pos:start="41:34" pos:end="41:34">i</name></expr>]</index></name> <operator pos:start="41:37" pos:end="41:37">&amp;</operator> <name pos:start="41:39" pos:end="41:58">ITD_XACT_OFFSET_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:55"><expr pos:start="43:13" pos:end="43:54"><name pos:start="43:13" pos:end="43:16">ptr1</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <operator pos:start="43:20" pos:end="43:20">(</operator><name pos:start="43:21" pos:end="43:35"><name pos:start="43:21" pos:end="43:23">itd</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:31">bufptr</name><index pos:start="43:32" pos:end="43:35">[<expr pos:start="43:33" pos:end="43:34"><name pos:start="43:33" pos:end="43:34">pg</name></expr>]</index></name> <operator pos:start="43:37" pos:end="43:37">&amp;</operator> <name pos:start="43:39" pos:end="43:53">ITD_BUFPTR_MASK</name><operator pos:start="43:54" pos:end="43:54">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:57"><expr pos:start="45:13" pos:end="45:56"><name pos:start="45:13" pos:end="45:16">ptr2</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:37"><name pos:start="45:21" pos:end="45:23">itd</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:31">bufptr</name><index pos:start="45:32" pos:end="45:37">[<expr pos:start="45:33" pos:end="45:36"><name pos:start="45:33" pos:end="45:34">pg</name><operator pos:start="45:35" pos:end="45:35">+</operator><literal type="number" pos:start="45:36" pos:end="45:36">1</literal></expr>]</index></name> <operator pos:start="45:39" pos:end="45:39">&amp;</operator> <name pos:start="45:41" pos:end="45:55">ITD_BUFPTR_MASK</name><operator pos:start="45:56" pos:end="45:56">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:64"><expr pos:start="47:13" pos:end="47:63"><name pos:start="47:13" pos:end="47:15">len</name>  <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:63"><name pos:start="47:20" pos:end="47:28">get_field</name><argument_list pos:start="47:29" pos:end="47:63">(<argument pos:start="47:30" pos:end="47:45"><expr pos:start="47:30" pos:end="47:45"><name pos:start="47:30" pos:end="47:45"><name pos:start="47:30" pos:end="47:32">itd</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:42">transact</name><index pos:start="47:43" pos:end="47:45">[<expr pos:start="47:44" pos:end="47:44"><name pos:start="47:44" pos:end="47:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="47:48" pos:end="47:62"><expr pos:start="47:48" pos:end="47:62"><name pos:start="47:48" pos:end="47:62">ITD_XACT_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="51:13" pos:end="55:13"><if pos:start="51:13" pos:end="55:13">if <condition pos:start="51:16" pos:end="51:33">(<expr pos:start="51:17" pos:end="51:32"><name pos:start="51:17" pos:end="51:19">len</name> <operator pos:start="51:21" pos:end="51:21">&gt;</operator> <name pos:start="51:23" pos:end="51:25">max</name> <operator pos:start="51:27" pos:end="51:27">*</operator> <name pos:start="51:29" pos:end="51:32">mult</name></expr>)</condition> <block pos:start="51:35" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:33">

                <expr_stmt pos:start="53:17" pos:end="53:33"><expr pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:19">len</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:25">max</name> <operator pos:start="53:27" pos:end="53:27">*</operator> <name pos:start="53:29" pos:end="53:32">mult</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="59:13" pos:end="63:13"><if pos:start="59:13" pos:end="63:13">if <condition pos:start="59:16" pos:end="59:32">(<expr pos:start="59:17" pos:end="59:31"><name pos:start="59:17" pos:end="59:19">len</name> <operator pos:start="59:21" pos:end="59:21">&gt;</operator> <name pos:start="59:23" pos:end="59:31">BUFF_SIZE</name></expr>)</condition> <block pos:start="59:34" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:26">

                <return pos:start="61:17" pos:end="61:26">return <expr pos:start="61:24" pos:end="61:25"><operator pos:start="61:24" pos:end="61:24">-</operator><literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="67:13" pos:end="67:69"><expr pos:start="67:13" pos:end="67:68"><call pos:start="67:13" pos:end="67:68"><name pos:start="67:13" pos:end="67:28">qemu_sglist_init</name><argument_list pos:start="67:29" pos:end="67:68">(<argument pos:start="67:30" pos:end="67:40"><expr pos:start="67:30" pos:end="67:40"><operator pos:start="67:30" pos:end="67:30">&amp;</operator><name pos:start="67:31" pos:end="67:40"><name pos:start="67:31" pos:end="67:34">ehci</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:40">isgl</name></name></expr></argument>, <argument pos:start="67:43" pos:end="67:54"><expr pos:start="67:43" pos:end="67:54"><call pos:start="67:43" pos:end="67:54"><name pos:start="67:43" pos:end="67:48">DEVICE</name><argument_list pos:start="67:49" pos:end="67:54">(<argument pos:start="67:50" pos:end="67:53"><expr pos:start="67:50" pos:end="67:53"><name pos:start="67:50" pos:end="67:53">ehci</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="67:57" pos:end="67:57"><expr pos:start="67:57" pos:end="67:57"><literal type="number" pos:start="67:57" pos:end="67:57">2</literal></expr></argument>, <argument pos:start="67:60" pos:end="67:67"><expr pos:start="67:60" pos:end="67:67"><name pos:start="67:60" pos:end="67:67"><name pos:start="67:60" pos:end="67:63">ehci</name><operator pos:start="67:64" pos:end="67:65">-&gt;</operator><name pos:start="67:66" pos:end="67:67">as</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="69:13" pos:end="85:13"><if pos:start="69:13" pos:end="81:13">if <condition pos:start="69:16" pos:end="69:33">(<expr pos:start="69:17" pos:end="69:32"><name pos:start="69:17" pos:end="69:19">off</name> <operator pos:start="69:21" pos:end="69:21">+</operator> <name pos:start="69:23" pos:end="69:25">len</name> <operator pos:start="69:27" pos:end="69:27">&gt;</operator> <literal type="number" pos:start="69:29" pos:end="69:32">4096</literal></expr>)</condition> <block pos:start="69:35" pos:end="81:13">{<block_content pos:start="73:17" pos:end="79:57">

                <comment type="block" pos:start="71:17" pos:end="71:50">/* transfer crosses page border */</comment>

                <decl_stmt pos:start="73:17" pos:end="73:49"><decl pos:start="73:17" pos:end="73:48"><type pos:start="73:17" pos:end="73:24"><name pos:start="73:17" pos:end="73:24">uint32_t</name></type> <name pos:start="73:26" pos:end="73:29">len2</name> <init pos:start="73:31" pos:end="73:48">= <expr pos:start="73:33" pos:end="73:48"><name pos:start="73:33" pos:end="73:35">off</name> <operator pos:start="73:37" pos:end="73:37">+</operator> <name pos:start="73:39" pos:end="73:41">len</name> <operator pos:start="73:43" pos:end="73:43">-</operator> <literal type="number" pos:start="73:45" pos:end="73:48">4096</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="75:17" pos:end="75:43"><decl pos:start="75:17" pos:end="75:42"><type pos:start="75:17" pos:end="75:24"><name pos:start="75:17" pos:end="75:24">uint32_t</name></type> <name pos:start="75:26" pos:end="75:29">len1</name> <init pos:start="75:31" pos:end="75:42">= <expr pos:start="75:33" pos:end="75:42"><name pos:start="75:33" pos:end="75:35">len</name> <operator pos:start="75:37" pos:end="75:37">-</operator> <name pos:start="75:39" pos:end="75:42">len2</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:63"><expr pos:start="77:17" pos:end="77:62"><call pos:start="77:17" pos:end="77:62"><name pos:start="77:17" pos:end="77:31">qemu_sglist_add</name><argument_list pos:start="77:32" pos:end="77:62">(<argument pos:start="77:33" pos:end="77:43"><expr pos:start="77:33" pos:end="77:43"><operator pos:start="77:33" pos:end="77:33">&amp;</operator><name pos:start="77:34" pos:end="77:43"><name pos:start="77:34" pos:end="77:37">ehci</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:43">isgl</name></name></expr></argument>, <argument pos:start="77:46" pos:end="77:55"><expr pos:start="77:46" pos:end="77:55"><name pos:start="77:46" pos:end="77:49">ptr1</name> <operator pos:start="77:51" pos:end="77:51">+</operator> <name pos:start="77:53" pos:end="77:55">off</name></expr></argument>, <argument pos:start="77:58" pos:end="77:61"><expr pos:start="77:58" pos:end="77:61"><name pos:start="77:58" pos:end="77:61">len1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:57"><expr pos:start="79:17" pos:end="79:56"><call pos:start="79:17" pos:end="79:56"><name pos:start="79:17" pos:end="79:31">qemu_sglist_add</name><argument_list pos:start="79:32" pos:end="79:56">(<argument pos:start="79:33" pos:end="79:43"><expr pos:start="79:33" pos:end="79:43"><operator pos:start="79:33" pos:end="79:33">&amp;</operator><name pos:start="79:34" pos:end="79:43"><name pos:start="79:34" pos:end="79:37">ehci</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:43">isgl</name></name></expr></argument>, <argument pos:start="79:46" pos:end="79:49"><expr pos:start="79:46" pos:end="79:49"><name pos:start="79:46" pos:end="79:49">ptr2</name></expr></argument>, <argument pos:start="79:52" pos:end="79:55"><expr pos:start="79:52" pos:end="79:55"><name pos:start="79:52" pos:end="79:55">len2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="81:15" pos:end="85:13">else <block pos:start="81:20" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:62">

                <expr_stmt pos:start="83:17" pos:end="83:62"><expr pos:start="83:17" pos:end="83:61"><call pos:start="83:17" pos:end="83:61"><name pos:start="83:17" pos:end="83:31">qemu_sglist_add</name><argument_list pos:start="83:32" pos:end="83:61">(<argument pos:start="83:33" pos:end="83:43"><expr pos:start="83:33" pos:end="83:43"><operator pos:start="83:33" pos:end="83:33">&amp;</operator><name pos:start="83:34" pos:end="83:43"><name pos:start="83:34" pos:end="83:37">ehci</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:43">isgl</name></name></expr></argument>, <argument pos:start="83:46" pos:end="83:55"><expr pos:start="83:46" pos:end="83:55"><name pos:start="83:46" pos:end="83:49">ptr1</name> <operator pos:start="83:51" pos:end="83:51">+</operator> <name pos:start="83:53" pos:end="83:55">off</name></expr></argument>, <argument pos:start="83:58" pos:end="83:60"><expr pos:start="83:58" pos:end="83:60"><name pos:start="83:58" pos:end="83:60">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:53"><expr pos:start="89:13" pos:end="89:52"><name pos:start="89:13" pos:end="89:15">pid</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <ternary pos:start="89:19" pos:end="89:52"><condition pos:start="89:19" pos:end="89:23"><expr pos:start="89:19" pos:end="89:21"><name pos:start="89:19" pos:end="89:21">dir</name></expr> ?</condition><then pos:start="89:25" pos:end="89:36"> <expr pos:start="89:25" pos:end="89:36"><name pos:start="89:25" pos:end="89:36">USB_TOKEN_IN</name></expr> </then><else pos:start="89:38" pos:end="89:52">: <expr pos:start="89:40" pos:end="89:52"><name pos:start="89:40" pos:end="89:52">USB_TOKEN_OUT</name></expr></else></ternary></expr>;</expr_stmt>



            <expr_stmt pos:start="93:13" pos:end="93:50"><expr pos:start="93:13" pos:end="93:49"><name pos:start="93:13" pos:end="93:15">dev</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="93:49"><name pos:start="93:19" pos:end="93:34">ehci_find_device</name><argument_list pos:start="93:35" pos:end="93:49">(<argument pos:start="93:36" pos:end="93:39"><expr pos:start="93:36" pos:end="93:39"><name pos:start="93:36" pos:end="93:39">ehci</name></expr></argument>, <argument pos:start="93:42" pos:end="93:48"><expr pos:start="93:42" pos:end="93:48"><name pos:start="93:42" pos:end="93:48">devaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:44"><expr pos:start="95:13" pos:end="95:43"><name pos:start="95:13" pos:end="95:14">ep</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <call pos:start="95:18" pos:end="95:43"><name pos:start="95:18" pos:end="95:27">usb_ep_get</name><argument_list pos:start="95:28" pos:end="95:43">(<argument pos:start="95:29" pos:end="95:31"><expr pos:start="95:29" pos:end="95:31"><name pos:start="95:29" pos:end="95:31">dev</name></expr></argument>, <argument pos:start="95:34" pos:end="95:36"><expr pos:start="95:34" pos:end="95:36"><name pos:start="95:34" pos:end="95:36">pid</name></expr></argument>, <argument pos:start="95:39" pos:end="95:42"><expr pos:start="95:39" pos:end="95:42"><name pos:start="95:39" pos:end="95:42">endp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="117:13"><if pos:start="97:13" pos:end="109:13">if <condition pos:start="97:16" pos:end="97:57">(<expr pos:start="97:17" pos:end="97:56"><name pos:start="97:17" pos:end="97:18">ep</name> <operator pos:start="97:20" pos:end="97:21">&amp;&amp;</operator> <name pos:start="97:23" pos:end="97:30"><name pos:start="97:23" pos:end="97:24">ep</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:30">type</name></name> <operator pos:start="97:32" pos:end="97:33">==</operator> <name pos:start="97:35" pos:end="97:56">USB_ENDPOINT_XFER_ISOC</name></expr>)</condition> <block pos:start="97:59" pos:end="109:13">{<block_content pos:start="99:17" pos:end="107:62">

                <expr_stmt pos:start="99:17" pos:end="101:73"><expr pos:start="99:17" pos:end="101:72"><call pos:start="99:17" pos:end="101:72"><name pos:start="99:17" pos:end="99:32">usb_packet_setup</name><argument_list pos:start="99:33" pos:end="101:72">(<argument pos:start="99:34" pos:end="99:47"><expr pos:start="99:34" pos:end="99:47"><operator pos:start="99:34" pos:end="99:34">&amp;</operator><name pos:start="99:35" pos:end="99:47"><name pos:start="99:35" pos:end="99:38">ehci</name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:47">ipacket</name></name></expr></argument>, <argument pos:start="99:50" pos:end="99:52"><expr pos:start="99:50" pos:end="99:52"><name pos:start="99:50" pos:end="99:52">pid</name></expr></argument>, <argument pos:start="99:55" pos:end="99:56"><expr pos:start="99:55" pos:end="99:56"><name pos:start="99:55" pos:end="99:56">ep</name></expr></argument>, <argument pos:start="99:59" pos:end="99:59"><expr pos:start="99:59" pos:end="99:59"><literal type="number" pos:start="99:59" pos:end="99:59">0</literal></expr></argument>, <argument pos:start="99:62" pos:end="99:65"><expr pos:start="99:62" pos:end="99:65"><name pos:start="99:62" pos:end="99:65">addr</name></expr></argument>, <argument pos:start="99:68" pos:end="99:72"><expr pos:start="99:68" pos:end="99:72"><name pos:start="99:68" pos:end="99:72">false</name></expr></argument>,

                                 <argument pos:start="101:34" pos:end="101:71"><expr pos:start="101:34" pos:end="101:71"><operator pos:start="101:34" pos:end="101:34">(</operator><name pos:start="101:35" pos:end="101:50"><name pos:start="101:35" pos:end="101:37">itd</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:47">transact</name><index pos:start="101:48" pos:end="101:50">[<expr pos:start="101:49" pos:end="101:49"><name pos:start="101:49" pos:end="101:49">i</name></expr>]</index></name> <operator pos:start="101:52" pos:end="101:52">&amp;</operator> <name pos:start="101:54" pos:end="101:65">ITD_XACT_IOC</name><operator pos:start="101:66" pos:end="101:66">)</operator> <operator pos:start="101:68" pos:end="101:69">!=</operator> <literal type="number" pos:start="101:71" pos:end="101:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:60"><expr pos:start="103:17" pos:end="103:59"><call pos:start="103:17" pos:end="103:59"><name pos:start="103:17" pos:end="103:30">usb_packet_map</name><argument_list pos:start="103:31" pos:end="103:59">(<argument pos:start="103:32" pos:end="103:45"><expr pos:start="103:32" pos:end="103:45"><operator pos:start="103:32" pos:end="103:32">&amp;</operator><name pos:start="103:33" pos:end="103:45"><name pos:start="103:33" pos:end="103:36">ehci</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:45">ipacket</name></name></expr></argument>, <argument pos:start="103:48" pos:end="103:58"><expr pos:start="103:48" pos:end="103:58"><operator pos:start="103:48" pos:end="103:48">&amp;</operator><name pos:start="103:49" pos:end="103:58"><name pos:start="103:49" pos:end="103:52">ehci</name><operator pos:start="103:53" pos:end="103:54">-&gt;</operator><name pos:start="103:55" pos:end="103:58">isgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:55"><expr pos:start="105:17" pos:end="105:54"><call pos:start="105:17" pos:end="105:54"><name pos:start="105:17" pos:end="105:33">usb_handle_packet</name><argument_list pos:start="105:34" pos:end="105:54">(<argument pos:start="105:35" pos:end="105:37"><expr pos:start="105:35" pos:end="105:37"><name pos:start="105:35" pos:end="105:37">dev</name></expr></argument>, <argument pos:start="105:40" pos:end="105:53"><expr pos:start="105:40" pos:end="105:53"><operator pos:start="105:40" pos:end="105:40">&amp;</operator><name pos:start="105:41" pos:end="105:53"><name pos:start="105:41" pos:end="105:44">ehci</name><operator pos:start="105:45" pos:end="105:46">-&gt;</operator><name pos:start="105:47" pos:end="105:53">ipacket</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:62"><expr pos:start="107:17" pos:end="107:61"><call pos:start="107:17" pos:end="107:61"><name pos:start="107:17" pos:end="107:32">usb_packet_unmap</name><argument_list pos:start="107:33" pos:end="107:61">(<argument pos:start="107:34" pos:end="107:47"><expr pos:start="107:34" pos:end="107:47"><operator pos:start="107:34" pos:end="107:34">&amp;</operator><name pos:start="107:35" pos:end="107:47"><name pos:start="107:35" pos:end="107:38">ehci</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:47">ipacket</name></name></expr></argument>, <argument pos:start="107:50" pos:end="107:60"><expr pos:start="107:50" pos:end="107:60"><operator pos:start="107:50" pos:end="107:50">&amp;</operator><name pos:start="107:51" pos:end="107:60"><name pos:start="107:51" pos:end="107:54">ehci</name><operator pos:start="107:55" pos:end="107:56">-&gt;</operator><name pos:start="107:57" pos:end="107:60">isgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="109:15" pos:end="117:13">else <block pos:start="109:20" pos:end="117:13">{<block_content pos:start="111:17" pos:end="115:48">

                <expr_stmt pos:start="111:17" pos:end="111:71"><expr pos:start="111:17" pos:end="111:70"><call pos:start="111:17" pos:end="111:70"><name pos:start="111:17" pos:end="111:23">DPRINTF</name><argument_list pos:start="111:24" pos:end="111:70">(<argument pos:start="111:25" pos:end="111:69"><expr pos:start="111:25" pos:end="111:69"><literal type="string" pos:start="111:25" pos:end="111:69">"ISOCH: attempt to addess non-iso endpoint\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:51"><expr pos:start="113:17" pos:end="113:50"><name pos:start="113:17" pos:end="113:36"><name pos:start="113:17" pos:end="113:20">ehci</name><operator pos:start="113:21" pos:end="113:22">-&gt;</operator><name pos:start="113:23" pos:end="113:29">ipacket</name><operator pos:start="113:30" pos:end="113:30">.</operator><name pos:start="113:31" pos:end="113:36">status</name></name> <operator pos:start="113:38" pos:end="113:38">=</operator> <name pos:start="113:40" pos:end="113:50">USB_RET_NAK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:48"><expr pos:start="115:17" pos:end="115:47"><name pos:start="115:17" pos:end="115:43"><name pos:start="115:17" pos:end="115:20">ehci</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:29">ipacket</name><operator pos:start="115:30" pos:end="115:30">.</operator><name pos:start="115:31" pos:end="115:43">actual_length</name></name> <operator pos:start="115:45" pos:end="115:45">=</operator> <literal type="number" pos:start="115:47" pos:end="115:47">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:45"><expr pos:start="119:13" pos:end="119:44"><call pos:start="119:13" pos:end="119:44"><name pos:start="119:13" pos:end="119:31">qemu_sglist_destroy</name><argument_list pos:start="119:32" pos:end="119:44">(<argument pos:start="119:33" pos:end="119:43"><expr pos:start="119:33" pos:end="119:43"><operator pos:start="119:33" pos:end="119:33">&amp;</operator><name pos:start="119:34" pos:end="119:43"><name pos:start="119:34" pos:end="119:37">ehci</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:43">isgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <switch pos:start="123:13" pos:end="169:13">switch <condition pos:start="123:20" pos:end="123:41">(<expr pos:start="123:21" pos:end="123:40"><name pos:start="123:21" pos:end="123:40"><name pos:start="123:21" pos:end="123:24">ehci</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:33">ipacket</name><operator pos:start="123:34" pos:end="123:34">.</operator><name pos:start="123:35" pos:end="123:40">status</name></name></expr>)</condition> <block pos:start="123:43" pos:end="169:13">{<block_content pos:start="125:13" pos:end="167:22">

            <case pos:start="125:13" pos:end="125:33">case <expr pos:start="125:18" pos:end="125:32"><name pos:start="125:18" pos:end="125:32">USB_RET_SUCCESS</name></expr>:</case>

                <break pos:start="127:17" pos:end="127:22">break;</break>

            <default pos:start="129:13" pos:end="129:20">default:</default>

                <expr_stmt pos:start="131:17" pos:end="133:46"><expr pos:start="131:17" pos:end="133:45"><call pos:start="131:17" pos:end="133:45"><name pos:start="131:17" pos:end="131:23">fprintf</name><argument_list pos:start="131:24" pos:end="133:45">(<argument pos:start="131:25" pos:end="131:30"><expr pos:start="131:25" pos:end="131:30"><name pos:start="131:25" pos:end="131:30">stderr</name></expr></argument>, <argument pos:start="131:33" pos:end="131:65"><expr pos:start="131:33" pos:end="131:65"><literal type="string" pos:start="131:33" pos:end="131:65">"Unexpected iso usb result: %d\n"</literal></expr></argument>,

                        <argument pos:start="133:25" pos:end="133:44"><expr pos:start="133:25" pos:end="133:44"><name pos:start="133:25" pos:end="133:44"><name pos:start="133:25" pos:end="133:28">ehci</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:37">ipacket</name><operator pos:start="133:38" pos:end="133:38">.</operator><name pos:start="133:39" pos:end="133:44">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="135:17" pos:end="135:34">/* Fall through */</comment>

            <case pos:start="137:13" pos:end="137:33">case <expr pos:start="137:18" pos:end="137:32"><name pos:start="137:18" pos:end="137:32">USB_RET_IOERROR</name></expr>:</case>

            <case pos:start="139:13" pos:end="139:31">case <expr pos:start="139:18" pos:end="139:30"><name pos:start="139:18" pos:end="139:30">USB_RET_NODEV</name></expr>:</case>

                <comment type="block" pos:start="141:17" pos:end="141:71">/* 3.3.2: XACTERR is only allowed on IN transactions */</comment>

                <if_stmt pos:start="143:17" pos:end="149:17"><if pos:start="143:17" pos:end="149:17">if <condition pos:start="143:20" pos:end="143:24">(<expr pos:start="143:21" pos:end="143:23"><name pos:start="143:21" pos:end="143:23">dir</name></expr>)</condition> <block pos:start="143:26" pos:end="149:17">{<block_content pos:start="145:21" pos:end="147:56">

                    <expr_stmt pos:start="145:21" pos:end="145:57"><expr pos:start="145:21" pos:end="145:56"><name pos:start="145:21" pos:end="145:36"><name pos:start="145:21" pos:end="145:23">itd</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:33">transact</name><index pos:start="145:34" pos:end="145:36">[<expr pos:start="145:35" pos:end="145:35"><name pos:start="145:35" pos:end="145:35">i</name></expr>]</index></name> <operator pos:start="145:38" pos:end="145:39">|=</operator> <name pos:start="145:41" pos:end="145:56">ITD_XACT_XACTERR</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:56"><expr pos:start="147:21" pos:end="147:55"><call pos:start="147:21" pos:end="147:55"><name pos:start="147:21" pos:end="147:34">ehci_raise_irq</name><argument_list pos:start="147:35" pos:end="147:55">(<argument pos:start="147:36" pos:end="147:39"><expr pos:start="147:36" pos:end="147:39"><name pos:start="147:36" pos:end="147:39">ehci</name></expr></argument>, <argument pos:start="147:42" pos:end="147:54"><expr pos:start="147:42" pos:end="147:54"><name pos:start="147:42" pos:end="147:54">USBSTS_ERRINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="151:17" pos:end="151:22">break;</break>

            <case pos:start="153:13" pos:end="153:32">case <expr pos:start="153:18" pos:end="153:31"><name pos:start="153:18" pos:end="153:31">USB_RET_BABBLE</name></expr>:</case>

                <expr_stmt pos:start="155:17" pos:end="155:52"><expr pos:start="155:17" pos:end="155:51"><name pos:start="155:17" pos:end="155:32"><name pos:start="155:17" pos:end="155:19">itd</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:29">transact</name><index pos:start="155:30" pos:end="155:32">[<expr pos:start="155:31" pos:end="155:31"><name pos:start="155:31" pos:end="155:31">i</name></expr>]</index></name> <operator pos:start="155:34" pos:end="155:35">|=</operator> <name pos:start="155:37" pos:end="155:51">ITD_XACT_BABBLE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:52"><expr pos:start="157:17" pos:end="157:51"><call pos:start="157:17" pos:end="157:51"><name pos:start="157:17" pos:end="157:30">ehci_raise_irq</name><argument_list pos:start="157:31" pos:end="157:51">(<argument pos:start="157:32" pos:end="157:35"><expr pos:start="157:32" pos:end="157:35"><name pos:start="157:32" pos:end="157:35">ehci</name></expr></argument>, <argument pos:start="157:38" pos:end="157:50"><expr pos:start="157:38" pos:end="157:50"><name pos:start="157:38" pos:end="157:50">USBSTS_ERRINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="159:17" pos:end="159:22">break;</break>

            <case pos:start="161:13" pos:end="161:29">case <expr pos:start="161:18" pos:end="161:28"><name pos:start="161:18" pos:end="161:28">USB_RET_NAK</name></expr>:</case>

                <comment type="block" pos:start="163:17" pos:end="163:66">/* no data for us, so do a zero-length transfer */</comment>

                <expr_stmt pos:start="165:17" pos:end="165:48"><expr pos:start="165:17" pos:end="165:47"><name pos:start="165:17" pos:end="165:43"><name pos:start="165:17" pos:end="165:20">ehci</name><operator pos:start="165:21" pos:end="165:22">-&gt;</operator><name pos:start="165:23" pos:end="165:29">ipacket</name><operator pos:start="165:30" pos:end="165:30">.</operator><name pos:start="165:31" pos:end="165:43">actual_length</name></name> <operator pos:start="165:45" pos:end="165:45">=</operator> <literal type="number" pos:start="165:47" pos:end="165:47">0</literal></expr>;</expr_stmt>

                <break pos:start="167:17" pos:end="167:22">break;</break>

            </block_content>}</block></switch>

            <if_stmt pos:start="171:13" pos:end="183:13"><if pos:start="171:13" pos:end="177:13">if <condition pos:start="171:16" pos:end="171:21">(<expr pos:start="171:17" pos:end="171:20"><operator pos:start="171:17" pos:end="171:17">!</operator><name pos:start="171:18" pos:end="171:20">dir</name></expr>)</condition> <block pos:start="171:23" pos:end="177:13">{<block_content pos:start="173:17" pos:end="175:43">

                <expr_stmt pos:start="173:17" pos:end="175:43"><expr pos:start="173:17" pos:end="175:42"><call pos:start="173:17" pos:end="175:42"><name pos:start="173:17" pos:end="173:25">set_field</name><argument_list pos:start="173:26" pos:end="175:42">(<argument pos:start="173:27" pos:end="173:43"><expr pos:start="173:27" pos:end="173:43"><operator pos:start="173:27" pos:end="173:27">&amp;</operator><name pos:start="173:28" pos:end="173:43"><name pos:start="173:28" pos:end="173:30">itd</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:40">transact</name><index pos:start="173:41" pos:end="173:43">[<expr pos:start="173:42" pos:end="173:42"><name pos:start="173:42" pos:end="173:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="173:46" pos:end="173:78"><expr pos:start="173:46" pos:end="173:78"><name pos:start="173:46" pos:end="173:48">len</name> <operator pos:start="173:50" pos:end="173:50">-</operator> <name pos:start="173:52" pos:end="173:78"><name pos:start="173:52" pos:end="173:55">ehci</name><operator pos:start="173:56" pos:end="173:57">-&gt;</operator><name pos:start="173:58" pos:end="173:64">ipacket</name><operator pos:start="173:65" pos:end="173:65">.</operator><name pos:start="173:66" pos:end="173:78">actual_length</name></name></expr></argument>,

                          <argument pos:start="175:27" pos:end="175:41"><expr pos:start="175:27" pos:end="175:41"><name pos:start="175:27" pos:end="175:41">ITD_XACT_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="175:45" pos:end="175:53">/* OUT */</comment>

            </block_content>}</block></if> <else pos:start="177:15" pos:end="183:13">else <block pos:start="177:20" pos:end="183:13">{<block_content pos:start="179:17" pos:end="181:43">

                <expr_stmt pos:start="179:17" pos:end="181:43"><expr pos:start="179:17" pos:end="181:42"><call pos:start="179:17" pos:end="181:42"><name pos:start="179:17" pos:end="179:25">set_field</name><argument_list pos:start="179:26" pos:end="181:42">(<argument pos:start="179:27" pos:end="179:43"><expr pos:start="179:27" pos:end="179:43"><operator pos:start="179:27" pos:end="179:27">&amp;</operator><name pos:start="179:28" pos:end="179:43"><name pos:start="179:28" pos:end="179:30">itd</name><operator pos:start="179:31" pos:end="179:32">-&gt;</operator><name pos:start="179:33" pos:end="179:40">transact</name><index pos:start="179:41" pos:end="179:43">[<expr pos:start="179:42" pos:end="179:42"><name pos:start="179:42" pos:end="179:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="179:46" pos:end="179:72"><expr pos:start="179:46" pos:end="179:72"><name pos:start="179:46" pos:end="179:72"><name pos:start="179:46" pos:end="179:49">ehci</name><operator pos:start="179:50" pos:end="179:51">-&gt;</operator><name pos:start="179:52" pos:end="179:58">ipacket</name><operator pos:start="179:59" pos:end="179:59">.</operator><name pos:start="179:60" pos:end="179:72">actual_length</name></name></expr></argument>,

                          <argument pos:start="181:27" pos:end="181:41"><expr pos:start="181:27" pos:end="181:41"><name pos:start="181:27" pos:end="181:41">ITD_XACT_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="181:45" pos:end="181:52">/* IN */</comment>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="185:13" pos:end="189:13"><if pos:start="185:13" pos:end="189:13">if <condition pos:start="185:16" pos:end="185:48">(<expr pos:start="185:17" pos:end="185:47"><name pos:start="185:17" pos:end="185:32"><name pos:start="185:17" pos:end="185:19">itd</name><operator pos:start="185:20" pos:end="185:21">-&gt;</operator><name pos:start="185:22" pos:end="185:29">transact</name><index pos:start="185:30" pos:end="185:32">[<expr pos:start="185:31" pos:end="185:31"><name pos:start="185:31" pos:end="185:31">i</name></expr>]</index></name> <operator pos:start="185:34" pos:end="185:34">&amp;</operator> <name pos:start="185:36" pos:end="185:47">ITD_XACT_IOC</name></expr>)</condition> <block pos:start="185:50" pos:end="189:13">{<block_content pos:start="187:17" pos:end="187:49">

                <expr_stmt pos:start="187:17" pos:end="187:49"><expr pos:start="187:17" pos:end="187:48"><call pos:start="187:17" pos:end="187:48"><name pos:start="187:17" pos:end="187:30">ehci_raise_irq</name><argument_list pos:start="187:31" pos:end="187:48">(<argument pos:start="187:32" pos:end="187:35"><expr pos:start="187:32" pos:end="187:35"><name pos:start="187:32" pos:end="187:35">ehci</name></expr></argument>, <argument pos:start="187:38" pos:end="187:47"><expr pos:start="187:38" pos:end="187:47"><name pos:start="187:38" pos:end="187:47">USBSTS_INT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:49"><expr pos:start="191:13" pos:end="191:48"><name pos:start="191:13" pos:end="191:28"><name pos:start="191:13" pos:end="191:15">itd</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:25">transact</name><index pos:start="191:26" pos:end="191:28">[<expr pos:start="191:27" pos:end="191:27"><name pos:start="191:27" pos:end="191:27">i</name></expr>]</index></name> <operator pos:start="191:30" pos:end="191:31">&amp;=</operator> <operator pos:start="191:33" pos:end="191:33">~</operator><name pos:start="191:34" pos:end="191:48">ITD_XACT_ACTIVE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="197:5" pos:end="197:13">return <expr pos:start="197:12" pos:end="197:12"><literal type="number" pos:start="197:12" pos:end="197:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
