<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8665.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_dds1</name><parameter_list pos:start="1:23" pos:end="1:81">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:37">GetByteContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">gb</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">frame</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">width</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:80"><decl pos:start="1:71" pos:end="1:80"><type pos:start="1:71" pos:end="1:80"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:80">height</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:30">frame_start</name> <init pos:start="5:32" pos:end="5:38">= <expr pos:start="5:34" pos:end="5:38"><name pos:start="5:34" pos:end="5:38">frame</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:28">frame_end</name>   <init pos:start="7:32" pos:end="7:55">= <expr pos:start="7:34" pos:end="7:55"><name pos:start="7:34" pos:end="7:38">frame</name> <operator pos:start="7:40" pos:end="7:40">+</operator> <name pos:start="7:42" pos:end="7:46">width</name> <operator pos:start="7:48" pos:end="7:48">*</operator> <name pos:start="7:50" pos:end="7:55">height</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">mask</name> <init pos:start="9:14" pos:end="9:22">= <expr pos:start="9:16" pos:end="9:22"><literal type="number" pos:start="9:16" pos:end="9:22">0x10000</literal></expr></init></decl>, <decl pos:start="9:25" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:30">bitbuf</name> <init pos:start="9:32" pos:end="9:34">= <expr pos:start="9:34" pos:end="9:34"><literal type="number" pos:start="9:34" pos:end="9:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">v</name></decl>, <decl pos:start="11:15" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:20">offset</name></decl>, <decl pos:start="11:23" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:27">count</name></decl>, <decl pos:start="11:30" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:37">segments</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:12">segments</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <call pos:start="15:16" pos:end="15:39"><name pos:start="15:16" pos:end="15:35">bytestream2_get_le16</name><argument_list pos:start="15:36" pos:end="15:39">(<argument pos:start="15:37" pos:end="15:38"><expr pos:start="15:37" pos:end="15:38"><name pos:start="15:37" pos:end="15:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="81:5">while <condition pos:start="17:11" pos:end="17:22">(<expr pos:start="17:12" pos:end="17:21"><name pos:start="17:12" pos:end="17:19">segments</name><operator pos:start="17:20" pos:end="17:21">--</operator></expr>)</condition> <block pos:start="17:24" pos:end="81:5">{<block_content pos:start="19:9" pos:end="79:19">

        <if_stmt pos:start="19:9" pos:end="21:22"><if pos:start="19:9" pos:end="21:22">if <condition pos:start="19:12" pos:end="19:47">(<expr pos:start="19:13" pos:end="19:46"><call pos:start="19:13" pos:end="19:42"><name pos:start="19:13" pos:end="19:38">bytestream2_get_bytes_left</name><argument_list pos:start="19:39" pos:end="19:42">(<argument pos:start="19:40" pos:end="19:41"><expr pos:start="19:40" pos:end="19:41"><name pos:start="19:40" pos:end="19:41">gb</name></expr></argument>)</argument_list></call> <operator pos:start="19:44" pos:end="19:44">&lt;</operator> <literal type="number" pos:start="19:46" pos:end="19:46">2</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:28">(<expr pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:16">mask</name> <operator pos:start="23:18" pos:end="23:19">==</operator> <literal type="number" pos:start="23:21" pos:end="23:27">0x10000</literal></expr>)</condition> <block pos:start="23:30" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:21">

            <expr_stmt pos:start="25:13" pos:end="25:47"><expr pos:start="25:13" pos:end="25:46"><name pos:start="25:13" pos:end="25:18">bitbuf</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:46"><name pos:start="25:22" pos:end="25:42">bytestream2_get_le16u</name><argument_list pos:start="25:43" pos:end="25:46">(<argument pos:start="25:44" pos:end="25:45"><expr pos:start="25:44" pos:end="25:45"><name pos:start="25:44" pos:end="25:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:21"><expr pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:16">mask</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <literal type="number" pos:start="27:20" pos:end="27:20">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="33:22"><if pos:start="31:9" pos:end="33:22">if <condition pos:start="31:12" pos:end="31:34">(<expr pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:21">frame_end</name> <operator pos:start="31:23" pos:end="31:23">-</operator> <name pos:start="31:25" pos:end="31:29">frame</name> <operator pos:start="31:31" pos:end="31:31">&lt;</operator> <literal type="number" pos:start="31:33" pos:end="31:33">2</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:22"><block_content pos:start="33:13" pos:end="33:22">

            <return pos:start="33:13" pos:end="33:22">return <expr pos:start="33:20" pos:end="33:21"><operator pos:start="33:20" pos:end="33:20">-</operator><literal type="number" pos:start="33:21" pos:end="33:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="77:9"><if pos:start="35:9" pos:end="59:9">if <condition pos:start="35:12" pos:end="35:26">(<expr pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:18">bitbuf</name> <operator pos:start="35:20" pos:end="35:20">&amp;</operator> <name pos:start="35:22" pos:end="35:25">mask</name></expr>)</condition> <block pos:start="35:28" pos:end="59:9">{<block_content pos:start="37:13" pos:end="57:13">

            <expr_stmt pos:start="37:13" pos:end="37:41"><expr pos:start="37:13" pos:end="37:40"><name pos:start="37:13" pos:end="37:13">v</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:40"><name pos:start="37:17" pos:end="37:36">bytestream2_get_le16</name><argument_list pos:start="37:37" pos:end="37:40">(<argument pos:start="37:38" pos:end="37:39"><expr pos:start="37:38" pos:end="37:39"><name pos:start="37:38" pos:end="37:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:39"><expr pos:start="39:13" pos:end="39:38"><name pos:start="39:13" pos:end="39:18">offset</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <operator pos:start="39:22" pos:end="39:22">(</operator><name pos:start="39:23" pos:end="39:23">v</name> <operator pos:start="39:25" pos:end="39:25">&amp;</operator> <literal type="number" pos:start="39:27" pos:end="39:32">0x1FFF</literal><operator pos:start="39:33" pos:end="39:33">)</operator> <operator pos:start="39:35" pos:end="39:36">&lt;&lt;</operator> <literal type="number" pos:start="39:38" pos:end="39:38">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:41"><expr pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:17">count</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <operator pos:start="41:21" pos:end="41:21">(</operator><operator pos:start="41:22" pos:end="41:22">(</operator><name pos:start="41:23" pos:end="41:23">v</name> <operator pos:start="41:25" pos:end="41:26">&gt;&gt;</operator> <literal type="number" pos:start="41:28" pos:end="41:29">13</literal><operator pos:start="41:30" pos:end="41:30">)</operator> <operator pos:start="41:32" pos:end="41:32">+</operator> <literal type="number" pos:start="41:34" pos:end="41:34">2</literal><operator pos:start="41:35" pos:end="41:35">)</operator> <operator pos:start="41:37" pos:end="41:38">&lt;&lt;</operator> <literal type="number" pos:start="41:40" pos:end="41:40">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="45:26"><if pos:start="43:13" pos:end="45:26">if <condition pos:start="43:16" pos:end="43:84">(<expr pos:start="43:17" pos:end="43:83"><name pos:start="43:17" pos:end="43:21">frame</name> <operator pos:start="43:23" pos:end="43:23">-</operator> <name pos:start="43:25" pos:end="43:35">frame_start</name> <operator pos:start="43:37" pos:end="43:37">&lt;</operator> <name pos:start="43:39" pos:end="43:44">offset</name> <operator pos:start="43:46" pos:end="43:47">||</operator> <name pos:start="43:49" pos:end="43:57">frame_end</name> <operator pos:start="43:59" pos:end="43:59">-</operator> <name pos:start="43:61" pos:end="43:65">frame</name> <operator pos:start="43:67" pos:end="43:67">&lt;</operator> <name pos:start="43:69" pos:end="43:73">count</name><operator pos:start="43:74" pos:end="43:74">*</operator><literal type="number" pos:start="43:75" pos:end="43:77">2</literal> <operator pos:start="43:77" pos:end="43:77">+</operator> <name pos:start="43:79" pos:end="43:83">width</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:26"><block_content pos:start="45:17" pos:end="45:26">

                <return pos:start="45:17" pos:end="45:26">return <expr pos:start="45:24" pos:end="45:25"><operator pos:start="45:24" pos:end="45:24">-</operator><literal type="number" pos:start="45:25" pos:end="45:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <for pos:start="47:13" pos:end="57:13">for <control pos:start="47:17" pos:end="47:39">(<init pos:start="47:18" pos:end="47:23"><expr pos:start="47:18" pos:end="47:22"><name pos:start="47:18" pos:end="47:18">i</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>;</init> <condition pos:start="47:25" pos:end="47:34"><expr pos:start="47:25" pos:end="47:33"><name pos:start="47:25" pos:end="47:25">i</name> <operator pos:start="47:27" pos:end="47:27">&lt;</operator> <name pos:start="47:29" pos:end="47:33">count</name></expr>;</condition> <incr pos:start="47:36" pos:end="47:38"><expr pos:start="47:36" pos:end="47:38"><name pos:start="47:36" pos:end="47:36">i</name><operator pos:start="47:37" pos:end="47:38">++</operator></expr></incr>)</control> <block pos:start="47:41" pos:end="57:13">{<block_content pos:start="49:17" pos:end="55:27">

                <expr_stmt pos:start="49:17" pos:end="51:65"><expr pos:start="49:17" pos:end="51:64"><name pos:start="49:17" pos:end="49:24"><name pos:start="49:17" pos:end="49:21">frame</name><index pos:start="49:22" pos:end="49:24">[<expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr>]</index></name> <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:35"><name pos:start="49:28" pos:end="49:32">frame</name><index pos:start="49:33" pos:end="49:35">[<expr pos:start="49:34" pos:end="49:34"><literal type="number" pos:start="49:34" pos:end="49:34">1</literal></expr>]</index></name> <operator pos:start="49:37" pos:end="49:37">=</operator>

                <name pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:21">frame</name><index pos:start="51:22" pos:end="51:28">[<expr pos:start="51:23" pos:end="51:27"><name pos:start="51:23" pos:end="51:27">width</name></expr>]</index></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <name pos:start="51:32" pos:end="51:47"><name pos:start="51:32" pos:end="51:36">frame</name><index pos:start="51:37" pos:end="51:47">[<expr pos:start="51:38" pos:end="51:46"><name pos:start="51:38" pos:end="51:42">width</name> <operator pos:start="51:44" pos:end="51:44">+</operator> <literal type="number" pos:start="51:46" pos:end="51:46">1</literal></expr>]</index></name> <operator pos:start="51:49" pos:end="51:49">=</operator> <name pos:start="51:51" pos:end="51:64"><name pos:start="51:51" pos:end="51:55">frame</name><index pos:start="51:56" pos:end="51:64">[<expr pos:start="51:57" pos:end="51:63"><operator pos:start="51:57" pos:end="51:57">-</operator><name pos:start="51:58" pos:end="51:63">offset</name></expr>]</index></name></expr>;</expr_stmt>



                <expr_stmt pos:start="55:17" pos:end="55:27"><expr pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:21">frame</name> <operator pos:start="55:23" pos:end="55:24">+=</operator> <literal type="number" pos:start="55:26" pos:end="55:26">2</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="59:11" pos:end="63:9">else if <condition pos:start="59:19" pos:end="59:40">(<expr pos:start="59:20" pos:end="59:39"><name pos:start="59:20" pos:end="59:25">bitbuf</name> <operator pos:start="59:27" pos:end="59:27">&amp;</operator> <operator pos:start="59:29" pos:end="59:29">(</operator><name pos:start="59:30" pos:end="59:33">mask</name> <operator pos:start="59:35" pos:end="59:36">&lt;&lt;</operator> <literal type="number" pos:start="59:38" pos:end="59:38">1</literal><operator pos:start="59:39" pos:end="59:39">)</operator></expr>)</condition> <block pos:start="59:42" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:50">

            <expr_stmt pos:start="61:13" pos:end="61:50"><expr pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:17">frame</name> <operator pos:start="61:19" pos:end="61:20">+=</operator> <call pos:start="61:22" pos:end="61:45"><name pos:start="61:22" pos:end="61:41">bytestream2_get_le16</name><argument_list pos:start="61:42" pos:end="61:45">(<argument pos:start="61:43" pos:end="61:44"><expr pos:start="61:43" pos:end="61:44"><name pos:start="61:43" pos:end="61:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="61:47" pos:end="61:47">*</operator> <literal type="number" pos:start="61:49" pos:end="61:49">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="77:9">else <block pos:start="63:16" pos:end="77:9">{<block_content pos:start="65:13" pos:end="75:23">

            <expr_stmt pos:start="65:13" pos:end="67:72"><expr pos:start="65:13" pos:end="67:71"><name pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:17">frame</name><index pos:start="65:18" pos:end="65:20">[<expr pos:start="65:19" pos:end="65:19"><literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>]</index></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:31"><name pos:start="65:24" pos:end="65:28">frame</name><index pos:start="65:29" pos:end="65:31">[<expr pos:start="65:30" pos:end="65:30"><literal type="number" pos:start="65:30" pos:end="65:30">1</literal></expr>]</index></name> <operator pos:start="65:33" pos:end="65:33">=</operator>

            <name pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:17">frame</name><index pos:start="67:18" pos:end="67:24">[<expr pos:start="67:19" pos:end="67:23"><name pos:start="67:19" pos:end="67:23">width</name></expr>]</index></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:43"><name pos:start="67:28" pos:end="67:32">frame</name><index pos:start="67:33" pos:end="67:43">[<expr pos:start="67:34" pos:end="67:42"><name pos:start="67:34" pos:end="67:38">width</name> <operator pos:start="67:40" pos:end="67:40">+</operator> <literal type="number" pos:start="67:42" pos:end="67:42">1</literal></expr>]</index></name> <operator pos:start="67:45" pos:end="67:45">=</operator>  <call pos:start="67:48" pos:end="67:71"><name pos:start="67:48" pos:end="67:67">bytestream2_get_byte</name><argument_list pos:start="67:68" pos:end="67:71">(<argument pos:start="67:69" pos:end="67:70"><expr pos:start="67:69" pos:end="67:70"><name pos:start="67:69" pos:end="67:70">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:23"><expr pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:17">frame</name> <operator pos:start="69:19" pos:end="69:20">+=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="73:72"><expr pos:start="71:13" pos:end="73:71"><name pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:17">frame</name><index pos:start="71:18" pos:end="71:20">[<expr pos:start="71:19" pos:end="71:19"><literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>]</index></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:31"><name pos:start="71:24" pos:end="71:28">frame</name><index pos:start="71:29" pos:end="71:31">[<expr pos:start="71:30" pos:end="71:30"><literal type="number" pos:start="71:30" pos:end="71:30">1</literal></expr>]</index></name> <operator pos:start="71:33" pos:end="71:33">=</operator>

            <name pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:17">frame</name><index pos:start="73:18" pos:end="73:24">[<expr pos:start="73:19" pos:end="73:23"><name pos:start="73:19" pos:end="73:23">width</name></expr>]</index></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:43"><name pos:start="73:28" pos:end="73:32">frame</name><index pos:start="73:33" pos:end="73:43">[<expr pos:start="73:34" pos:end="73:42"><name pos:start="73:34" pos:end="73:38">width</name> <operator pos:start="73:40" pos:end="73:40">+</operator> <literal type="number" pos:start="73:42" pos:end="73:42">1</literal></expr>]</index></name> <operator pos:start="73:45" pos:end="73:45">=</operator>  <call pos:start="73:48" pos:end="73:71"><name pos:start="73:48" pos:end="73:67">bytestream2_get_byte</name><argument_list pos:start="73:68" pos:end="73:71">(<argument pos:start="73:69" pos:end="73:70"><expr pos:start="73:69" pos:end="73:70"><name pos:start="73:69" pos:end="73:70">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:23"><expr pos:start="75:13" pos:end="75:22"><name pos:start="75:13" pos:end="75:17">frame</name> <operator pos:start="75:19" pos:end="75:20">+=</operator> <literal type="number" pos:start="75:22" pos:end="75:22">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:19"><expr pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:12">mask</name> <operator pos:start="79:14" pos:end="79:16">&lt;&lt;=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">2</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
