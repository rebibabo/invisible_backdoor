<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24190.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">vnc_flush</name><parameter_list pos:start="1:15" pos:end="1:28">(<parameter pos:start="1:16" pos:end="1:27"><decl pos:start="1:16" pos:end="1:27"><type pos:start="1:16" pos:end="1:25"><name pos:start="1:16" pos:end="1:23">VncState</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:27">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:26">

    <expr_stmt pos:start="5:5" pos:end="5:24"><expr pos:start="5:5" pos:end="5:23"><call pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:19">vnc_lock_output</name><argument_list pos:start="5:20" pos:end="5:23">(<argument pos:start="5:21" pos:end="5:22"><expr pos:start="5:21" pos:end="5:22"><name pos:start="5:21" pos:end="5:22">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="7:5" pos:end="19:5"><if pos:start="7:5" pos:end="19:5">if <condition pos:start="7:8" pos:end="15:18">(<expr pos:start="7:9" pos:end="15:17"><name pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:10">vs</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:17">csock</name></name> <operator pos:start="7:19" pos:end="7:20">!=</operator> <operator pos:start="7:22" pos:end="7:22">-</operator><literal type="number" pos:start="7:23" pos:end="7:23">1</literal> <operator pos:start="7:25" pos:end="7:26">&amp;&amp;</operator> <operator pos:start="7:28" pos:end="7:28">(</operator><name pos:start="7:29" pos:end="10:0"><name pos:start="7:29" pos:end="7:30">vs</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:38">output</name><operator pos:start="7:39" pos:end="7:39">.</operator><name pos:start="7:40" pos:end="10:0">offset</name></name>

<cpp:ifdef pos:start="9:1" pos:end="9:20">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:20">CONFIG_VNC_WS</name></cpp:ifdef>

                <operator pos:start="11:17" pos:end="11:18">||</operator> <name pos:start="11:20" pos:end="14:0"><name pos:start="11:20" pos:end="11:21">vs</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:32">ws_output</name><operator pos:start="11:33" pos:end="11:33">.</operator><name pos:start="11:34" pos:end="14:0">offset</name></name>

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>

                <operator pos:start="15:17" pos:end="15:17">)</operator></expr>)</condition> <block pos:start="15:20" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:36">

        <expr_stmt pos:start="17:9" pos:end="17:36"><expr pos:start="17:9" pos:end="17:35"><call pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:31">vnc_client_write_locked</name><argument_list pos:start="17:32" pos:end="17:35">(<argument pos:start="17:33" pos:end="17:34"><expr pos:start="17:33" pos:end="17:34"><name pos:start="17:33" pos:end="17:34">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:21">vnc_unlock_output</name><argument_list pos:start="21:22" pos:end="21:25">(<argument pos:start="21:23" pos:end="21:24"><expr pos:start="21:23" pos:end="21:24"><name pos:start="21:23" pos:end="21:24">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
