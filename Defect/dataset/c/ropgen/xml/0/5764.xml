<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5764.c" pos:tabs="8"><function pos:start="1:1" pos:end="409:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">cook_decode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="409:1">{<block_content pos:start="5:5" pos:end="407:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">COOKContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">q</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:28">edata_ptr</name> <init pos:start="7:30" pos:end="7:47">= <expr pos:start="7:32" pos:end="7:47"><name pos:start="7:32" pos:end="7:47"><name pos:start="7:32" pos:end="7:36">avctx</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:47">extradata</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:69"><decl pos:start="9:5" pos:end="9:68"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:32">edata_ptr_end</name> <init pos:start="9:34" pos:end="9:68">= <expr pos:start="9:36" pos:end="9:68"><name pos:start="9:36" pos:end="9:44">edata_ptr</name> <operator pos:start="9:46" pos:end="9:46">+</operator> <name pos:start="9:48" pos:end="9:68"><name pos:start="9:48" pos:end="9:52">avctx</name><operator pos:start="9:53" pos:end="9:54">-&gt;</operator><name pos:start="9:55" pos:end="9:68">extradata_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:22">extradata_size</name> <init pos:start="11:24" pos:end="11:46">= <expr pos:start="11:26" pos:end="11:46"><name pos:start="11:26" pos:end="11:46"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:46">extradata_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">s</name> <init pos:start="13:11" pos:end="13:13">= <expr pos:start="13:13" pos:end="13:13"><literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:29">channel_mask</name> <init pos:start="15:31" pos:end="15:33">= <expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:5">q</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:12">avctx</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:20">avctx</name></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:52">/* Take care of the codec specific extradata. */</comment>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:28">(<expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:22">extradata_size</name> <operator pos:start="23:24" pos:end="23:25">&lt;=</operator> <literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr>)</condition> <block pos:start="23:30" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:68"><expr pos:start="25:9" pos:end="25:67"><call pos:start="25:9" pos:end="25:67"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:67">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>,<argument pos:start="25:22" pos:end="25:33"><expr pos:start="25:22" pos:end="25:33"><name pos:start="25:22" pos:end="25:33">AV_LOG_ERROR</name></expr></argument>,<argument pos:start="25:35" pos:end="25:66"><expr pos:start="25:35" pos:end="25:66"><literal type="string" pos:start="25:35" pos:end="25:66">"Necessary extradata missing!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:77"><expr pos:start="31:5" pos:end="31:76"><call pos:start="31:5" pos:end="31:76"><name pos:start="31:5" pos:end="31:10">av_log</name><argument_list pos:start="31:11" pos:end="31:76">(<argument pos:start="31:12" pos:end="31:16"><expr pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:16">avctx</name></expr></argument>,<argument pos:start="31:18" pos:end="31:29"><expr pos:start="31:18" pos:end="31:29"><name pos:start="31:18" pos:end="31:29">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="31:31" pos:end="31:53"><expr pos:start="31:31" pos:end="31:53"><literal type="string" pos:start="31:31" pos:end="31:53">"codecdata_length=%d\n"</literal></expr></argument>,<argument pos:start="31:55" pos:end="31:75"><expr pos:start="31:55" pos:end="31:75"><name pos:start="31:55" pos:end="31:75"><name pos:start="31:55" pos:end="31:59">avctx</name><operator pos:start="31:60" pos:end="31:61">-&gt;</operator><name pos:start="31:62" pos:end="31:75">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:59">/* Take data from the AVCodecContext (RM container). */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:5">q</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:18">sample_rate</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:39"><name pos:start="37:22" pos:end="37:26">avctx</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:39">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:5">q</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:18">nb_channels</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:26">avctx</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:36">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:5">q</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:15">bit_rate</name></name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:33"><name pos:start="41:19" pos:end="41:23">avctx</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:33">bit_rate</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:25">/* Initialize RNG. */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:37"><expr pos:start="47:5" pos:end="47:36"><call pos:start="47:5" pos:end="47:36"><name pos:start="47:5" pos:end="47:15">av_lfg_init</name><argument_list pos:start="47:16" pos:end="47:36">(<argument pos:start="47:17" pos:end="47:32"><expr pos:start="47:17" pos:end="47:32"><operator pos:start="47:17" pos:end="47:17">&amp;</operator><name pos:start="47:18" pos:end="47:32"><name pos:start="47:18" pos:end="47:18">q</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:32">random_state</name></name></expr></argument>, <argument pos:start="47:35" pos:end="47:35"><expr pos:start="47:35" pos:end="47:35"><literal type="number" pos:start="47:35" pos:end="47:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="51:5" pos:end="299:5">while<condition pos:start="51:10" pos:end="51:36">(<expr pos:start="51:11" pos:end="51:35"><name pos:start="51:11" pos:end="51:19">edata_ptr</name> <operator pos:start="51:21" pos:end="51:21">&lt;</operator> <name pos:start="51:23" pos:end="51:35">edata_ptr_end</name></expr>)</condition><block pos:start="51:37" pos:end="299:5">{<block_content pos:start="57:9" pos:end="297:9">

        <comment type="block" pos:start="53:9" pos:end="55:73">/* 8 for mono, 16 for stereo, ? for multichannel

           Swap to right endianness so we don't need to care later on. */</comment>

        <if_stmt pos:start="57:9" pos:end="67:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:32">(<expr pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:26">extradata_size</name> <operator pos:start="57:28" pos:end="57:29">&gt;=</operator> <literal type="number" pos:start="57:31" pos:end="57:31">8</literal></expr>)</condition><block pos:start="57:33" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:32">

            <expr_stmt pos:start="59:13" pos:end="59:74"><expr pos:start="59:13" pos:end="59:73"><name pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:13">q</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:24">subpacket</name><index pos:start="59:25" pos:end="59:27">[<expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">s</name></expr>]</index></name><operator pos:start="59:28" pos:end="59:28">.</operator><name pos:start="59:29" pos:end="59:39">cookversion</name> <operator pos:start="59:41" pos:end="59:41">=</operator> <call pos:start="59:43" pos:end="59:73"><name pos:start="59:43" pos:end="59:61">bytestream_get_be32</name><argument_list pos:start="59:62" pos:end="59:73">(<argument pos:start="59:63" pos:end="59:72"><expr pos:start="59:63" pos:end="59:72"><operator pos:start="59:63" pos:end="59:63">&amp;</operator><name pos:start="59:64" pos:end="59:72">edata_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:81"><expr pos:start="61:13" pos:end="61:80"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:13">q</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:24">subpacket</name><index pos:start="61:25" pos:end="61:27">[<expr pos:start="61:26" pos:end="61:26"><name pos:start="61:26" pos:end="61:26">s</name></expr>]</index></name><operator pos:start="61:28" pos:end="61:28">.</operator><name pos:start="61:29" pos:end="61:45">samples_per_frame</name> <operator pos:start="61:47" pos:end="61:47">=</operator>  <call pos:start="61:50" pos:end="61:80"><name pos:start="61:50" pos:end="61:68">bytestream_get_be16</name><argument_list pos:start="61:69" pos:end="61:80">(<argument pos:start="61:70" pos:end="61:79"><expr pos:start="61:70" pos:end="61:79"><operator pos:start="61:70" pos:end="61:70">&amp;</operator><name pos:start="61:71" pos:end="61:79">edata_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:71"><expr pos:start="63:13" pos:end="63:70"><name pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:13">q</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:24">subpacket</name><index pos:start="63:25" pos:end="63:27">[<expr pos:start="63:26" pos:end="63:26"><name pos:start="63:26" pos:end="63:26">s</name></expr>]</index></name><operator pos:start="63:28" pos:end="63:28">.</operator><name pos:start="63:29" pos:end="63:36">subbands</name> <operator pos:start="63:38" pos:end="63:38">=</operator> <call pos:start="63:40" pos:end="63:70"><name pos:start="63:40" pos:end="63:58">bytestream_get_be16</name><argument_list pos:start="63:59" pos:end="63:70">(<argument pos:start="63:60" pos:end="63:69"><expr pos:start="63:60" pos:end="63:69"><operator pos:start="63:60" pos:end="63:60">&amp;</operator><name pos:start="63:61" pos:end="63:69">edata_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:32"><expr pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:26">extradata_size</name> <operator pos:start="65:28" pos:end="65:29">-=</operator> <literal type="number" pos:start="65:31" pos:end="65:31">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="79:9"><if pos:start="69:9" pos:end="79:9">if <condition pos:start="69:12" pos:end="69:39">(<expr pos:start="69:13" pos:end="69:38"><name pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:17">avctx</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:33">extradata_size</name></name> <operator pos:start="69:35" pos:end="69:36">&gt;=</operator> <literal type="number" pos:start="69:38" pos:end="69:38">8</literal></expr>)</condition><block pos:start="69:40" pos:end="79:9">{<block_content pos:start="71:13" pos:end="77:32">

            <expr_stmt pos:start="71:13" pos:end="71:44"><expr pos:start="71:13" pos:end="71:43"><call pos:start="71:13" pos:end="71:43"><name pos:start="71:13" pos:end="71:31">bytestream_get_be32</name><argument_list pos:start="71:32" pos:end="71:43">(<argument pos:start="71:33" pos:end="71:42"><expr pos:start="71:33" pos:end="71:42"><operator pos:start="71:33" pos:end="71:33">&amp;</operator><name pos:start="71:34" pos:end="71:42">edata_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" pos:start="71:49" pos:end="71:64">//Unknown unused</comment>

            <expr_stmt pos:start="73:13" pos:end="73:79"><expr pos:start="73:13" pos:end="73:78"><name pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:13">q</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:24">subpacket</name><index pos:start="73:25" pos:end="73:27">[<expr pos:start="73:26" pos:end="73:26"><name pos:start="73:26" pos:end="73:26">s</name></expr>]</index></name><operator pos:start="73:28" pos:end="73:28">.</operator><name pos:start="73:29" pos:end="73:44">js_subband_start</name> <operator pos:start="73:46" pos:end="73:46">=</operator> <call pos:start="73:48" pos:end="73:78"><name pos:start="73:48" pos:end="73:66">bytestream_get_be16</name><argument_list pos:start="73:67" pos:end="73:78">(<argument pos:start="73:68" pos:end="73:77"><expr pos:start="73:68" pos:end="73:77"><operator pos:start="73:68" pos:end="73:68">&amp;</operator><name pos:start="73:69" pos:end="73:77">edata_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:74"><expr pos:start="75:13" pos:end="75:73"><name pos:start="75:13" pos:end="75:27"><name pos:start="75:13" pos:end="75:13">q</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:24">subpacket</name><index pos:start="75:25" pos:end="75:27">[<expr pos:start="75:26" pos:end="75:26"><name pos:start="75:26" pos:end="75:26">s</name></expr>]</index></name><operator pos:start="75:28" pos:end="75:28">.</operator><name pos:start="75:29" pos:end="75:39">js_vlc_bits</name> <operator pos:start="75:41" pos:end="75:41">=</operator> <call pos:start="75:43" pos:end="75:73"><name pos:start="75:43" pos:end="75:61">bytestream_get_be16</name><argument_list pos:start="75:62" pos:end="75:73">(<argument pos:start="75:63" pos:end="75:72"><expr pos:start="75:63" pos:end="75:72"><operator pos:start="75:63" pos:end="75:63">&amp;</operator><name pos:start="75:64" pos:end="75:72">edata_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:32"><expr pos:start="77:13" pos:end="77:31"><name pos:start="77:13" pos:end="77:26">extradata_size</name> <operator pos:start="77:28" pos:end="77:29">-=</operator> <literal type="number" pos:start="77:31" pos:end="77:31">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="83:9" pos:end="83:53">/* Initialize extradata related variables. */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:97"><expr pos:start="85:9" pos:end="85:96"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:9">q</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:20">subpacket</name><index pos:start="85:21" pos:end="85:23">[<expr pos:start="85:22" pos:end="85:22"><name pos:start="85:22" pos:end="85:22">s</name></expr>]</index></name><operator pos:start="85:24" pos:end="85:24">.</operator><name pos:start="85:25" pos:end="85:43">samples_per_channel</name> <operator pos:start="85:45" pos:end="85:45">=</operator> <name pos:start="85:47" pos:end="85:61"><name pos:start="85:47" pos:end="85:47">q</name><operator pos:start="85:48" pos:end="85:49">-&gt;</operator><name pos:start="85:50" pos:end="85:58">subpacket</name><index pos:start="85:59" pos:end="85:61">[<expr pos:start="85:60" pos:end="85:60"><name pos:start="85:60" pos:end="85:60">s</name></expr>]</index></name><operator pos:start="85:62" pos:end="85:62">.</operator><name pos:start="85:63" pos:end="85:79">samples_per_frame</name> <operator pos:start="85:81" pos:end="85:81">/</operator> <name pos:start="85:83" pos:end="85:96"><name pos:start="85:83" pos:end="85:83">q</name><operator pos:start="85:84" pos:end="85:85">-&gt;</operator><name pos:start="85:86" pos:end="85:96">nb_channels</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:68"><expr pos:start="87:9" pos:end="87:67"><name pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:9">q</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:20">subpacket</name><index pos:start="87:21" pos:end="87:23">[<expr pos:start="87:22" pos:end="87:22"><name pos:start="87:22" pos:end="87:22">s</name></expr>]</index></name><operator pos:start="87:24" pos:end="87:24">.</operator><name pos:start="87:25" pos:end="87:42">bits_per_subpacket</name> <operator pos:start="87:44" pos:end="87:44">=</operator> <name pos:start="87:46" pos:end="87:63"><name pos:start="87:46" pos:end="87:50">avctx</name><operator pos:start="87:51" pos:end="87:52">-&gt;</operator><name pos:start="87:53" pos:end="87:63">block_align</name></name> <operator pos:start="87:65" pos:end="87:65">*</operator> <literal type="number" pos:start="87:67" pos:end="87:67">8</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="91:9" pos:end="91:45">/* Initialize default data states. */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:48"><expr pos:start="93:9" pos:end="93:47"><name pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:9">q</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:20">subpacket</name><index pos:start="93:21" pos:end="93:23">[<expr pos:start="93:22" pos:end="93:22"><name pos:start="93:22" pos:end="93:22">s</name></expr>]</index></name><operator pos:start="93:24" pos:end="93:24">.</operator><name pos:start="93:25" pos:end="93:43">log2_numvector_size</name> <operator pos:start="93:45" pos:end="93:45">=</operator> <literal type="number" pos:start="93:47" pos:end="93:47">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:66"><expr pos:start="95:9" pos:end="95:65"><name pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:9">q</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:20">subpacket</name><index pos:start="95:21" pos:end="95:23">[<expr pos:start="95:22" pos:end="95:22"><name pos:start="95:22" pos:end="95:22">s</name></expr>]</index></name><operator pos:start="95:24" pos:end="95:24">.</operator><name pos:start="95:25" pos:end="95:38">total_subbands</name> <operator pos:start="95:40" pos:end="95:40">=</operator> <name pos:start="95:42" pos:end="95:56"><name pos:start="95:42" pos:end="95:42">q</name><operator pos:start="95:43" pos:end="95:44">-&gt;</operator><name pos:start="95:45" pos:end="95:53">subpacket</name><index pos:start="95:54" pos:end="95:56">[<expr pos:start="95:55" pos:end="95:55"><name pos:start="95:55" pos:end="95:55">s</name></expr>]</index></name><operator pos:start="95:57" pos:end="95:57">.</operator><name pos:start="95:58" pos:end="95:65">subbands</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:41"><expr pos:start="97:9" pos:end="97:40"><name pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:9">q</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:20">subpacket</name><index pos:start="97:21" pos:end="97:23">[<expr pos:start="97:22" pos:end="97:22"><name pos:start="97:22" pos:end="97:22">s</name></expr>]</index></name><operator pos:start="97:24" pos:end="97:24">.</operator><name pos:start="97:25" pos:end="97:36">num_channels</name> <operator pos:start="97:38" pos:end="97:38">=</operator> <literal type="number" pos:start="97:40" pos:end="97:40">1</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="101:9" pos:end="101:52">/* Initialize version-dependent variables */</comment>



        <expr_stmt pos:start="105:9" pos:end="105:98"><expr pos:start="105:9" pos:end="105:97"><call pos:start="105:9" pos:end="105:97"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:97">(<argument pos:start="105:16" pos:end="105:20"><expr pos:start="105:16" pos:end="105:20"><name pos:start="105:16" pos:end="105:20">avctx</name></expr></argument>,<argument pos:start="105:22" pos:end="105:33"><expr pos:start="105:22" pos:end="105:33"><name pos:start="105:22" pos:end="105:33">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="105:35" pos:end="105:66"><expr pos:start="105:35" pos:end="105:66"><literal type="string" pos:start="105:35" pos:end="105:66">"subpacket[%i].cookversion=%x\n"</literal></expr></argument>,<argument pos:start="105:68" pos:end="105:68"><expr pos:start="105:68" pos:end="105:68"><name pos:start="105:68" pos:end="105:68">s</name></expr></argument>,<argument pos:start="105:70" pos:end="105:96"><expr pos:start="105:70" pos:end="105:96"><name pos:start="105:70" pos:end="105:84"><name pos:start="105:70" pos:end="105:70">q</name><operator pos:start="105:71" pos:end="105:72">-&gt;</operator><name pos:start="105:73" pos:end="105:81">subpacket</name><index pos:start="105:82" pos:end="105:84">[<expr pos:start="105:83" pos:end="105:83"><name pos:start="105:83" pos:end="105:83">s</name></expr>]</index></name><operator pos:start="105:85" pos:end="105:85">.</operator><name pos:start="105:86" pos:end="105:96">cookversion</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:41"><expr pos:start="107:9" pos:end="107:40"><name pos:start="107:9" pos:end="107:23"><name pos:start="107:9" pos:end="107:9">q</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:20">subpacket</name><index pos:start="107:21" pos:end="107:23">[<expr pos:start="107:22" pos:end="107:22"><name pos:start="107:22" pos:end="107:22">s</name></expr>]</index></name><operator pos:start="107:24" pos:end="107:24">.</operator><name pos:start="107:25" pos:end="107:36">joint_stereo</name> <operator pos:start="107:38" pos:end="107:38">=</operator> <literal type="number" pos:start="107:40" pos:end="107:40">0</literal></expr>;</expr_stmt>

        <switch pos:start="109:9" pos:end="223:9">switch <condition pos:start="109:16" pos:end="109:44">(<expr pos:start="109:17" pos:end="109:43"><name pos:start="109:17" pos:end="109:31"><name pos:start="109:17" pos:end="109:17">q</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:28">subpacket</name><index pos:start="109:29" pos:end="109:31">[<expr pos:start="109:30" pos:end="109:30"><name pos:start="109:30" pos:end="109:30">s</name></expr>]</index></name><operator pos:start="109:32" pos:end="109:32">.</operator><name pos:start="109:33" pos:end="109:43">cookversion</name></expr>)</condition> <block pos:start="109:46" pos:end="223:9">{<block_content pos:start="111:13" pos:end="221:26">

            <case pos:start="111:13" pos:end="111:22">case <expr pos:start="111:18" pos:end="111:21"><name pos:start="111:18" pos:end="111:21">MONO</name></expr>:</case>

                <if_stmt pos:start="113:17" pos:end="119:17"><if pos:start="113:17" pos:end="119:17">if <condition pos:start="113:20" pos:end="113:40">(<expr pos:start="113:21" pos:end="113:39"><name pos:start="113:21" pos:end="113:34"><name pos:start="113:21" pos:end="113:21">q</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:34">nb_channels</name></name> <operator pos:start="113:36" pos:end="113:37">!=</operator> <literal type="number" pos:start="113:39" pos:end="113:39">1</literal></expr>)</condition> <block pos:start="113:42" pos:end="119:17">{<block_content pos:start="115:21" pos:end="117:30">

                    <expr_stmt pos:start="115:21" pos:end="115:79"><expr pos:start="115:21" pos:end="115:78"><call pos:start="115:21" pos:end="115:78"><name pos:start="115:21" pos:end="115:41">av_log_ask_for_sample</name><argument_list pos:start="115:42" pos:end="115:78">(<argument pos:start="115:43" pos:end="115:47"><expr pos:start="115:43" pos:end="115:47"><name pos:start="115:43" pos:end="115:47">avctx</name></expr></argument>, <argument pos:start="115:50" pos:end="115:77"><expr pos:start="115:50" pos:end="115:77"><literal type="string" pos:start="115:50" pos:end="115:77">"Container channels != 1.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="117:21" pos:end="117:30">return <expr pos:start="117:28" pos:end="117:29"><operator pos:start="117:28" pos:end="117:28">-</operator><literal type="number" pos:start="117:29" pos:end="117:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:52"><expr pos:start="121:17" pos:end="121:51"><call pos:start="121:17" pos:end="121:51"><name pos:start="121:17" pos:end="121:22">av_log</name><argument_list pos:start="121:23" pos:end="121:51">(<argument pos:start="121:24" pos:end="121:28"><expr pos:start="121:24" pos:end="121:28"><name pos:start="121:24" pos:end="121:28">avctx</name></expr></argument>,<argument pos:start="121:30" pos:end="121:41"><expr pos:start="121:30" pos:end="121:41"><name pos:start="121:30" pos:end="121:41">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="121:43" pos:end="121:50"><expr pos:start="121:43" pos:end="121:50"><literal type="string" pos:start="121:43" pos:end="121:50">"MONO\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="123:17" pos:end="123:22">break;</break>

            <case pos:start="125:13" pos:end="125:24">case <expr pos:start="125:18" pos:end="125:23"><name pos:start="125:18" pos:end="125:23">STEREO</name></expr>:</case>

                <if_stmt pos:start="127:17" pos:end="133:17"><if pos:start="127:17" pos:end="133:17">if <condition pos:start="127:20" pos:end="127:40">(<expr pos:start="127:21" pos:end="127:39"><name pos:start="127:21" pos:end="127:34"><name pos:start="127:21" pos:end="127:21">q</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:34">nb_channels</name></name> <operator pos:start="127:36" pos:end="127:37">!=</operator> <literal type="number" pos:start="127:39" pos:end="127:39">1</literal></expr>)</condition> <block pos:start="127:42" pos:end="133:17">{<block_content pos:start="129:21" pos:end="131:53">

                    <expr_stmt pos:start="129:21" pos:end="129:57"><expr pos:start="129:21" pos:end="129:56"><name pos:start="129:21" pos:end="129:35"><name pos:start="129:21" pos:end="129:21">q</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:32">subpacket</name><index pos:start="129:33" pos:end="129:35">[<expr pos:start="129:34" pos:end="129:34"><name pos:start="129:34" pos:end="129:34">s</name></expr>]</index></name><operator pos:start="129:36" pos:end="129:36">.</operator><name pos:start="129:37" pos:end="129:52">bits_per_subpdiv</name> <operator pos:start="129:54" pos:end="129:54">=</operator> <literal type="number" pos:start="129:56" pos:end="129:56">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="131:21" pos:end="131:53"><expr pos:start="131:21" pos:end="131:52"><name pos:start="131:21" pos:end="131:35"><name pos:start="131:21" pos:end="131:21">q</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:32">subpacket</name><index pos:start="131:33" pos:end="131:35">[<expr pos:start="131:34" pos:end="131:34"><name pos:start="131:34" pos:end="131:34">s</name></expr>]</index></name><operator pos:start="131:36" pos:end="131:36">.</operator><name pos:start="131:37" pos:end="131:48">num_channels</name> <operator pos:start="131:50" pos:end="131:50">=</operator> <literal type="number" pos:start="131:52" pos:end="131:52">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:54"><expr pos:start="135:17" pos:end="135:53"><call pos:start="135:17" pos:end="135:53"><name pos:start="135:17" pos:end="135:22">av_log</name><argument_list pos:start="135:23" pos:end="135:53">(<argument pos:start="135:24" pos:end="135:28"><expr pos:start="135:24" pos:end="135:28"><name pos:start="135:24" pos:end="135:28">avctx</name></expr></argument>,<argument pos:start="135:30" pos:end="135:41"><expr pos:start="135:30" pos:end="135:41"><name pos:start="135:30" pos:end="135:41">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="135:43" pos:end="135:52"><expr pos:start="135:43" pos:end="135:52"><literal type="string" pos:start="135:43" pos:end="135:52">"STEREO\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="137:17" pos:end="137:22">break;</break>

            <case pos:start="139:13" pos:end="139:30">case <expr pos:start="139:18" pos:end="139:29"><name pos:start="139:18" pos:end="139:29">JOINT_STEREO</name></expr>:</case>

                <if_stmt pos:start="141:17" pos:end="147:17"><if pos:start="141:17" pos:end="147:17">if <condition pos:start="141:20" pos:end="141:40">(<expr pos:start="141:21" pos:end="141:39"><name pos:start="141:21" pos:end="141:34"><name pos:start="141:21" pos:end="141:21">q</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:34">nb_channels</name></name> <operator pos:start="141:36" pos:end="141:37">!=</operator> <literal type="number" pos:start="141:39" pos:end="141:39">2</literal></expr>)</condition> <block pos:start="141:42" pos:end="147:17">{<block_content pos:start="143:21" pos:end="145:30">

                    <expr_stmt pos:start="143:21" pos:end="143:79"><expr pos:start="143:21" pos:end="143:78"><call pos:start="143:21" pos:end="143:78"><name pos:start="143:21" pos:end="143:41">av_log_ask_for_sample</name><argument_list pos:start="143:42" pos:end="143:78">(<argument pos:start="143:43" pos:end="143:47"><expr pos:start="143:43" pos:end="143:47"><name pos:start="143:43" pos:end="143:47">avctx</name></expr></argument>, <argument pos:start="143:50" pos:end="143:77"><expr pos:start="143:50" pos:end="143:77"><literal type="string" pos:start="143:50" pos:end="143:77">"Container channels != 2.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="145:21" pos:end="145:30">return <expr pos:start="145:28" pos:end="145:29"><operator pos:start="145:28" pos:end="145:28">-</operator><literal type="number" pos:start="145:29" pos:end="145:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:60"><expr pos:start="149:17" pos:end="149:59"><call pos:start="149:17" pos:end="149:59"><name pos:start="149:17" pos:end="149:22">av_log</name><argument_list pos:start="149:23" pos:end="149:59">(<argument pos:start="149:24" pos:end="149:28"><expr pos:start="149:24" pos:end="149:28"><name pos:start="149:24" pos:end="149:28">avctx</name></expr></argument>,<argument pos:start="149:30" pos:end="149:41"><expr pos:start="149:30" pos:end="149:41"><name pos:start="149:30" pos:end="149:41">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="149:43" pos:end="149:58"><expr pos:start="149:43" pos:end="149:58"><literal type="string" pos:start="149:43" pos:end="149:58">"JOINT_STEREO\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="151:17" pos:end="159:17"><if pos:start="151:17" pos:end="159:17">if <condition pos:start="151:20" pos:end="151:48">(<expr pos:start="151:21" pos:end="151:47"><name pos:start="151:21" pos:end="151:41"><name pos:start="151:21" pos:end="151:25">avctx</name><operator pos:start="151:26" pos:end="151:27">-&gt;</operator><name pos:start="151:28" pos:end="151:41">extradata_size</name></name> <operator pos:start="151:43" pos:end="151:44">&gt;=</operator> <literal type="number" pos:start="151:46" pos:end="151:47">16</literal></expr>)</condition><block pos:start="151:49" pos:end="159:17">{<block_content pos:start="153:21" pos:end="157:53">

                    <expr_stmt pos:start="153:21" pos:end="153:113"><expr pos:start="153:21" pos:end="153:112"><name pos:start="153:21" pos:end="153:35"><name pos:start="153:21" pos:end="153:21">q</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:32">subpacket</name><index pos:start="153:33" pos:end="153:35">[<expr pos:start="153:34" pos:end="153:34"><name pos:start="153:34" pos:end="153:34">s</name></expr>]</index></name><operator pos:start="153:36" pos:end="153:36">.</operator><name pos:start="153:37" pos:end="153:50">total_subbands</name> <operator pos:start="153:52" pos:end="153:52">=</operator> <name pos:start="153:54" pos:end="153:68"><name pos:start="153:54" pos:end="153:54">q</name><operator pos:start="153:55" pos:end="153:56">-&gt;</operator><name pos:start="153:57" pos:end="153:65">subpacket</name><index pos:start="153:66" pos:end="153:68">[<expr pos:start="153:67" pos:end="153:67"><name pos:start="153:67" pos:end="153:67">s</name></expr>]</index></name><operator pos:start="153:69" pos:end="153:69">.</operator><name pos:start="153:70" pos:end="153:77">subbands</name> <operator pos:start="153:79" pos:end="153:79">+</operator> <name pos:start="153:81" pos:end="153:95"><name pos:start="153:81" pos:end="153:81">q</name><operator pos:start="153:82" pos:end="153:83">-&gt;</operator><name pos:start="153:84" pos:end="153:92">subpacket</name><index pos:start="153:93" pos:end="153:95">[<expr pos:start="153:94" pos:end="153:94"><name pos:start="153:94" pos:end="153:94">s</name></expr>]</index></name><operator pos:start="153:96" pos:end="153:96">.</operator><name pos:start="153:97" pos:end="153:112">js_subband_start</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="155:21" pos:end="155:53"><expr pos:start="155:21" pos:end="155:52"><name pos:start="155:21" pos:end="155:35"><name pos:start="155:21" pos:end="155:21">q</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:32">subpacket</name><index pos:start="155:33" pos:end="155:35">[<expr pos:start="155:34" pos:end="155:34"><name pos:start="155:34" pos:end="155:34">s</name></expr>]</index></name><operator pos:start="155:36" pos:end="155:36">.</operator><name pos:start="155:37" pos:end="155:48">joint_stereo</name> <operator pos:start="155:50" pos:end="155:50">=</operator> <literal type="number" pos:start="155:52" pos:end="155:52">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:53"><expr pos:start="157:21" pos:end="157:52"><name pos:start="157:21" pos:end="157:35"><name pos:start="157:21" pos:end="157:21">q</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:32">subpacket</name><index pos:start="157:33" pos:end="157:35">[<expr pos:start="157:34" pos:end="157:34"><name pos:start="157:34" pos:end="157:34">s</name></expr>]</index></name><operator pos:start="157:36" pos:end="157:36">.</operator><name pos:start="157:37" pos:end="157:48">num_channels</name> <operator pos:start="157:50" pos:end="157:50">=</operator> <literal type="number" pos:start="157:52" pos:end="157:52">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="161:17" pos:end="165:17"><if pos:start="161:17" pos:end="165:17">if <condition pos:start="161:20" pos:end="161:62">(<expr pos:start="161:21" pos:end="161:61"><name pos:start="161:21" pos:end="161:35"><name pos:start="161:21" pos:end="161:21">q</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:32">subpacket</name><index pos:start="161:33" pos:end="161:35">[<expr pos:start="161:34" pos:end="161:34"><name pos:start="161:34" pos:end="161:34">s</name></expr>]</index></name><operator pos:start="161:36" pos:end="161:36">.</operator><name pos:start="161:37" pos:end="161:55">samples_per_channel</name> <operator pos:start="161:57" pos:end="161:57">&gt;</operator> <literal type="number" pos:start="161:59" pos:end="161:61">256</literal></expr>)</condition> <block pos:start="161:64" pos:end="165:17">{<block_content pos:start="163:21" pos:end="163:61">

                    <expr_stmt pos:start="163:21" pos:end="163:61"><expr pos:start="163:21" pos:end="163:60"><name pos:start="163:21" pos:end="163:35"><name pos:start="163:21" pos:end="163:21">q</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:32">subpacket</name><index pos:start="163:33" pos:end="163:35">[<expr pos:start="163:34" pos:end="163:34"><name pos:start="163:34" pos:end="163:34">s</name></expr>]</index></name><operator pos:start="163:36" pos:end="163:36">.</operator><name pos:start="163:37" pos:end="163:55">log2_numvector_size</name>  <operator pos:start="163:58" pos:end="163:58">=</operator> <literal type="number" pos:start="163:60" pos:end="163:60">6</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="167:17" pos:end="171:17"><if pos:start="167:17" pos:end="171:17">if <condition pos:start="167:20" pos:end="167:62">(<expr pos:start="167:21" pos:end="167:61"><name pos:start="167:21" pos:end="167:35"><name pos:start="167:21" pos:end="167:21">q</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:32">subpacket</name><index pos:start="167:33" pos:end="167:35">[<expr pos:start="167:34" pos:end="167:34"><name pos:start="167:34" pos:end="167:34">s</name></expr>]</index></name><operator pos:start="167:36" pos:end="167:36">.</operator><name pos:start="167:37" pos:end="167:55">samples_per_channel</name> <operator pos:start="167:57" pos:end="167:57">&gt;</operator> <literal type="number" pos:start="167:59" pos:end="167:61">512</literal></expr>)</condition> <block pos:start="167:64" pos:end="171:17">{<block_content pos:start="169:21" pos:end="169:61">

                    <expr_stmt pos:start="169:21" pos:end="169:61"><expr pos:start="169:21" pos:end="169:60"><name pos:start="169:21" pos:end="169:35"><name pos:start="169:21" pos:end="169:21">q</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:32">subpacket</name><index pos:start="169:33" pos:end="169:35">[<expr pos:start="169:34" pos:end="169:34"><name pos:start="169:34" pos:end="169:34">s</name></expr>]</index></name><operator pos:start="169:36" pos:end="169:36">.</operator><name pos:start="169:37" pos:end="169:55">log2_numvector_size</name>  <operator pos:start="169:58" pos:end="169:58">=</operator> <literal type="number" pos:start="169:60" pos:end="169:60">7</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="173:17" pos:end="173:22">break;</break>

            <case pos:start="175:13" pos:end="175:25">case <expr pos:start="175:18" pos:end="175:24"><name pos:start="175:18" pos:end="175:24">MC_COOK</name></expr>:</case>

                <expr_stmt pos:start="177:17" pos:end="177:61"><expr pos:start="177:17" pos:end="177:60"><call pos:start="177:17" pos:end="177:60"><name pos:start="177:17" pos:end="177:22">av_log</name><argument_list pos:start="177:23" pos:end="177:60">(<argument pos:start="177:24" pos:end="177:28"><expr pos:start="177:24" pos:end="177:28"><name pos:start="177:24" pos:end="177:28">avctx</name></expr></argument>,<argument pos:start="177:30" pos:end="177:41"><expr pos:start="177:30" pos:end="177:41"><name pos:start="177:30" pos:end="177:41">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="177:43" pos:end="177:59"><expr pos:start="177:43" pos:end="177:59"><literal type="string" pos:start="177:43" pos:end="177:59">"MULTI_CHANNEL\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="179:17" pos:end="181:99"><if pos:start="179:17" pos:end="181:99">if<condition pos:start="179:19" pos:end="179:39">(<expr pos:start="179:20" pos:end="179:38"><name pos:start="179:20" pos:end="179:33">extradata_size</name> <operator pos:start="179:35" pos:end="179:36">&gt;=</operator> <literal type="number" pos:start="179:38" pos:end="179:38">4</literal></expr>)</condition><block type="pseudo" pos:start="181:21" pos:end="181:99"><block_content pos:start="181:21" pos:end="181:99">

                    <expr_stmt pos:start="181:21" pos:end="181:99"><expr pos:start="181:21" pos:end="181:98"><name pos:start="181:21" pos:end="181:32">channel_mask</name> <operator pos:start="181:34" pos:end="181:35">|=</operator> <name pos:start="181:37" pos:end="181:51"><name pos:start="181:37" pos:end="181:37">q</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:48">subpacket</name><index pos:start="181:49" pos:end="181:51">[<expr pos:start="181:50" pos:end="181:50"><name pos:start="181:50" pos:end="181:50">s</name></expr>]</index></name><operator pos:start="181:52" pos:end="181:52">.</operator><name pos:start="181:53" pos:end="181:64">channel_mask</name> <operator pos:start="181:66" pos:end="181:66">=</operator> <call pos:start="181:68" pos:end="181:98"><name pos:start="181:68" pos:end="181:86">bytestream_get_be32</name><argument_list pos:start="181:87" pos:end="181:98">(<argument pos:start="181:88" pos:end="181:97"><expr pos:start="181:88" pos:end="181:97"><operator pos:start="181:88" pos:end="181:88">&amp;</operator><name pos:start="181:89" pos:end="181:97">edata_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="185:17" pos:end="211:92"><if pos:start="185:17" pos:end="209:17">if<condition pos:start="185:19" pos:end="185:73">(<expr pos:start="185:20" pos:end="185:72"><call pos:start="185:20" pos:end="185:68"><name pos:start="185:20" pos:end="185:38">cook_count_channels</name><argument_list pos:start="185:39" pos:end="185:68">(<argument pos:start="185:40" pos:end="185:67"><expr pos:start="185:40" pos:end="185:67"><name pos:start="185:40" pos:end="185:54"><name pos:start="185:40" pos:end="185:40">q</name><operator pos:start="185:41" pos:end="185:42">-&gt;</operator><name pos:start="185:43" pos:end="185:51">subpacket</name><index pos:start="185:52" pos:end="185:54">[<expr pos:start="185:53" pos:end="185:53"><name pos:start="185:53" pos:end="185:53">s</name></expr>]</index></name><operator pos:start="185:55" pos:end="185:55">.</operator><name pos:start="185:56" pos:end="185:67">channel_mask</name></expr></argument>)</argument_list></call> <operator pos:start="185:70" pos:end="185:70">&gt;</operator> <literal type="number" pos:start="185:72" pos:end="185:72">1</literal></expr>)</condition><block pos:start="185:74" pos:end="209:17">{<block_content pos:start="187:21" pos:end="207:21">

                    <expr_stmt pos:start="187:21" pos:end="187:113"><expr pos:start="187:21" pos:end="187:112"><name pos:start="187:21" pos:end="187:35"><name pos:start="187:21" pos:end="187:21">q</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:32">subpacket</name><index pos:start="187:33" pos:end="187:35">[<expr pos:start="187:34" pos:end="187:34"><name pos:start="187:34" pos:end="187:34">s</name></expr>]</index></name><operator pos:start="187:36" pos:end="187:36">.</operator><name pos:start="187:37" pos:end="187:50">total_subbands</name> <operator pos:start="187:52" pos:end="187:52">=</operator> <name pos:start="187:54" pos:end="187:68"><name pos:start="187:54" pos:end="187:54">q</name><operator pos:start="187:55" pos:end="187:56">-&gt;</operator><name pos:start="187:57" pos:end="187:65">subpacket</name><index pos:start="187:66" pos:end="187:68">[<expr pos:start="187:67" pos:end="187:67"><name pos:start="187:67" pos:end="187:67">s</name></expr>]</index></name><operator pos:start="187:69" pos:end="187:69">.</operator><name pos:start="187:70" pos:end="187:77">subbands</name> <operator pos:start="187:79" pos:end="187:79">+</operator> <name pos:start="187:81" pos:end="187:95"><name pos:start="187:81" pos:end="187:81">q</name><operator pos:start="187:82" pos:end="187:83">-&gt;</operator><name pos:start="187:84" pos:end="187:92">subpacket</name><index pos:start="187:93" pos:end="187:95">[<expr pos:start="187:94" pos:end="187:94"><name pos:start="187:94" pos:end="187:94">s</name></expr>]</index></name><operator pos:start="187:96" pos:end="187:96">.</operator><name pos:start="187:97" pos:end="187:112">js_subband_start</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:53"><expr pos:start="189:21" pos:end="189:52"><name pos:start="189:21" pos:end="189:35"><name pos:start="189:21" pos:end="189:21">q</name><operator pos:start="189:22" pos:end="189:23">-&gt;</operator><name pos:start="189:24" pos:end="189:32">subpacket</name><index pos:start="189:33" pos:end="189:35">[<expr pos:start="189:34" pos:end="189:34"><name pos:start="189:34" pos:end="189:34">s</name></expr>]</index></name><operator pos:start="189:36" pos:end="189:36">.</operator><name pos:start="189:37" pos:end="189:48">joint_stereo</name> <operator pos:start="189:50" pos:end="189:50">=</operator> <literal type="number" pos:start="189:52" pos:end="189:52">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:53"><expr pos:start="191:21" pos:end="191:52"><name pos:start="191:21" pos:end="191:35"><name pos:start="191:21" pos:end="191:21">q</name><operator pos:start="191:22" pos:end="191:23">-&gt;</operator><name pos:start="191:24" pos:end="191:32">subpacket</name><index pos:start="191:33" pos:end="191:35">[<expr pos:start="191:34" pos:end="191:34"><name pos:start="191:34" pos:end="191:34">s</name></expr>]</index></name><operator pos:start="191:36" pos:end="191:36">.</operator><name pos:start="191:37" pos:end="191:48">num_channels</name> <operator pos:start="191:50" pos:end="191:50">=</operator> <literal type="number" pos:start="191:52" pos:end="191:52">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:97"><expr pos:start="193:21" pos:end="193:96"><name pos:start="193:21" pos:end="193:35"><name pos:start="193:21" pos:end="193:21">q</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:32">subpacket</name><index pos:start="193:33" pos:end="193:35">[<expr pos:start="193:34" pos:end="193:34"><name pos:start="193:34" pos:end="193:34">s</name></expr>]</index></name><operator pos:start="193:36" pos:end="193:36">.</operator><name pos:start="193:37" pos:end="193:55">samples_per_channel</name> <operator pos:start="193:57" pos:end="193:57">=</operator> <name pos:start="193:59" pos:end="193:73"><name pos:start="193:59" pos:end="193:59">q</name><operator pos:start="193:60" pos:end="193:61">-&gt;</operator><name pos:start="193:62" pos:end="193:70">subpacket</name><index pos:start="193:71" pos:end="193:73">[<expr pos:start="193:72" pos:end="193:72"><name pos:start="193:72" pos:end="193:72">s</name></expr>]</index></name><operator pos:start="193:74" pos:end="193:74">.</operator><name pos:start="193:75" pos:end="193:91">samples_per_frame</name> <operator pos:start="193:93" pos:end="193:94">&gt;&gt;</operator> <literal type="number" pos:start="193:96" pos:end="193:96">1</literal></expr>;</expr_stmt>



                    <if_stmt pos:start="197:21" pos:end="201:21"><if pos:start="197:21" pos:end="201:21">if <condition pos:start="197:24" pos:end="197:66">(<expr pos:start="197:25" pos:end="197:65"><name pos:start="197:25" pos:end="197:39"><name pos:start="197:25" pos:end="197:25">q</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:36">subpacket</name><index pos:start="197:37" pos:end="197:39">[<expr pos:start="197:38" pos:end="197:38"><name pos:start="197:38" pos:end="197:38">s</name></expr>]</index></name><operator pos:start="197:40" pos:end="197:40">.</operator><name pos:start="197:41" pos:end="197:59">samples_per_channel</name> <operator pos:start="197:61" pos:end="197:61">&gt;</operator> <literal type="number" pos:start="197:63" pos:end="197:65">256</literal></expr>)</condition> <block pos:start="197:68" pos:end="201:21">{<block_content pos:start="199:25" pos:end="199:65">

                        <expr_stmt pos:start="199:25" pos:end="199:65"><expr pos:start="199:25" pos:end="199:64"><name pos:start="199:25" pos:end="199:39"><name pos:start="199:25" pos:end="199:25">q</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:36">subpacket</name><index pos:start="199:37" pos:end="199:39">[<expr pos:start="199:38" pos:end="199:38"><name pos:start="199:38" pos:end="199:38">s</name></expr>]</index></name><operator pos:start="199:40" pos:end="199:40">.</operator><name pos:start="199:41" pos:end="199:59">log2_numvector_size</name>  <operator pos:start="199:62" pos:end="199:62">=</operator> <literal type="number" pos:start="199:64" pos:end="199:64">6</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="203:21" pos:end="207:21"><if pos:start="203:21" pos:end="207:21">if <condition pos:start="203:24" pos:end="203:66">(<expr pos:start="203:25" pos:end="203:65"><name pos:start="203:25" pos:end="203:39"><name pos:start="203:25" pos:end="203:25">q</name><operator pos:start="203:26" pos:end="203:27">-&gt;</operator><name pos:start="203:28" pos:end="203:36">subpacket</name><index pos:start="203:37" pos:end="203:39">[<expr pos:start="203:38" pos:end="203:38"><name pos:start="203:38" pos:end="203:38">s</name></expr>]</index></name><operator pos:start="203:40" pos:end="203:40">.</operator><name pos:start="203:41" pos:end="203:59">samples_per_channel</name> <operator pos:start="203:61" pos:end="203:61">&gt;</operator> <literal type="number" pos:start="203:63" pos:end="203:65">512</literal></expr>)</condition> <block pos:start="203:68" pos:end="207:21">{<block_content pos:start="205:25" pos:end="205:65">

                        <expr_stmt pos:start="205:25" pos:end="205:65"><expr pos:start="205:25" pos:end="205:64"><name pos:start="205:25" pos:end="205:39"><name pos:start="205:25" pos:end="205:25">q</name><operator pos:start="205:26" pos:end="205:27">-&gt;</operator><name pos:start="205:28" pos:end="205:36">subpacket</name><index pos:start="205:37" pos:end="205:39">[<expr pos:start="205:38" pos:end="205:38"><name pos:start="205:38" pos:end="205:38">s</name></expr>]</index></name><operator pos:start="205:40" pos:end="205:40">.</operator><name pos:start="205:41" pos:end="205:59">log2_numvector_size</name>  <operator pos:start="205:62" pos:end="205:62">=</operator> <literal type="number" pos:start="205:64" pos:end="205:64">7</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if><else pos:start="209:18" pos:end="211:92">else<block type="pseudo" pos:start="211:21" pos:end="211:92"><block_content pos:start="211:21" pos:end="211:92">

                    <expr_stmt pos:start="211:21" pos:end="211:92"><expr pos:start="211:21" pos:end="211:91"><name pos:start="211:21" pos:end="211:35"><name pos:start="211:21" pos:end="211:21">q</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:32">subpacket</name><index pos:start="211:33" pos:end="211:35">[<expr pos:start="211:34" pos:end="211:34"><name pos:start="211:34" pos:end="211:34">s</name></expr>]</index></name><operator pos:start="211:36" pos:end="211:36">.</operator><name pos:start="211:37" pos:end="211:55">samples_per_channel</name> <operator pos:start="211:57" pos:end="211:57">=</operator> <name pos:start="211:59" pos:end="211:73"><name pos:start="211:59" pos:end="211:59">q</name><operator pos:start="211:60" pos:end="211:61">-&gt;</operator><name pos:start="211:62" pos:end="211:70">subpacket</name><index pos:start="211:71" pos:end="211:73">[<expr pos:start="211:72" pos:end="211:72"><name pos:start="211:72" pos:end="211:72">s</name></expr>]</index></name><operator pos:start="211:74" pos:end="211:74">.</operator><name pos:start="211:75" pos:end="211:91">samples_per_frame</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <break pos:start="215:17" pos:end="215:22">break;</break>

            <default pos:start="217:13" pos:end="217:20">default:</default>

                <expr_stmt pos:start="219:17" pos:end="219:72"><expr pos:start="219:17" pos:end="219:71"><call pos:start="219:17" pos:end="219:71"><name pos:start="219:17" pos:end="219:37">av_log_ask_for_sample</name><argument_list pos:start="219:38" pos:end="219:71">(<argument pos:start="219:39" pos:end="219:43"><expr pos:start="219:39" pos:end="219:43"><name pos:start="219:39" pos:end="219:43">avctx</name></expr></argument>, <argument pos:start="219:46" pos:end="219:70"><expr pos:start="219:46" pos:end="219:70"><literal type="string" pos:start="219:46" pos:end="219:70">"Unknown Cook version.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="221:17" pos:end="221:26">return <expr pos:start="221:24" pos:end="221:25"><operator pos:start="221:24" pos:end="221:24">-</operator><literal type="number" pos:start="221:25" pos:end="221:25">1</literal></expr>;</return>

        </block_content>}</block></switch>



        <if_stmt pos:start="227:9" pos:end="235:73"><if pos:start="227:9" pos:end="233:9">if<condition pos:start="227:11" pos:end="227:82">(<expr pos:start="227:12" pos:end="227:81"><name pos:start="227:12" pos:end="227:12">s</name> <operator pos:start="227:14" pos:end="227:14">&gt;</operator> <literal type="number" pos:start="227:16" pos:end="227:16">1</literal> <operator pos:start="227:18" pos:end="227:19">&amp;&amp;</operator> <name pos:start="227:21" pos:end="227:35"><name pos:start="227:21" pos:end="227:21">q</name><operator pos:start="227:22" pos:end="227:23">-&gt;</operator><name pos:start="227:24" pos:end="227:32">subpacket</name><index pos:start="227:33" pos:end="227:35">[<expr pos:start="227:34" pos:end="227:34"><name pos:start="227:34" pos:end="227:34">s</name></expr>]</index></name><operator pos:start="227:36" pos:end="227:36">.</operator><name pos:start="227:37" pos:end="227:55">samples_per_channel</name> <operator pos:start="227:57" pos:end="227:58">!=</operator> <name pos:start="227:60" pos:end="227:81"><name pos:start="227:60" pos:end="227:60">q</name><operator pos:start="227:61" pos:end="227:62">-&gt;</operator><name pos:start="227:63" pos:end="227:81">samples_per_channel</name></name></expr>)</condition> <block pos:start="227:84" pos:end="233:9">{<block_content pos:start="229:13" pos:end="231:22">

            <expr_stmt pos:start="229:13" pos:end="229:84"><expr pos:start="229:13" pos:end="229:83"><call pos:start="229:13" pos:end="229:83"><name pos:start="229:13" pos:end="229:18">av_log</name><argument_list pos:start="229:19" pos:end="229:83">(<argument pos:start="229:20" pos:end="229:24"><expr pos:start="229:20" pos:end="229:24"><name pos:start="229:20" pos:end="229:24">avctx</name></expr></argument>,<argument pos:start="229:26" pos:end="229:37"><expr pos:start="229:26" pos:end="229:37"><name pos:start="229:26" pos:end="229:37">AV_LOG_ERROR</name></expr></argument>,<argument pos:start="229:39" pos:end="229:82"><expr pos:start="229:39" pos:end="229:82"><literal type="string" pos:start="229:39" pos:end="229:82">"different number of samples per channel!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="231:13" pos:end="231:22">return <expr pos:start="231:20" pos:end="231:21"><operator pos:start="231:20" pos:end="231:20">-</operator><literal type="number" pos:start="231:21" pos:end="231:21">1</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="233:11" pos:end="235:73">else<block type="pseudo" pos:start="235:13" pos:end="235:73"><block_content pos:start="235:13" pos:end="235:73">

            <expr_stmt pos:start="235:13" pos:end="235:73"><expr pos:start="235:13" pos:end="235:72"><name pos:start="235:13" pos:end="235:34"><name pos:start="235:13" pos:end="235:13">q</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:34">samples_per_channel</name></name> <operator pos:start="235:36" pos:end="235:36">=</operator> <name pos:start="235:38" pos:end="235:52"><name pos:start="235:38" pos:end="235:38">q</name><operator pos:start="235:39" pos:end="235:40">-&gt;</operator><name pos:start="235:41" pos:end="235:49">subpacket</name><index pos:start="235:50" pos:end="235:52">[<expr pos:start="235:51" pos:end="235:51"><literal type="number" pos:start="235:51" pos:end="235:51">0</literal></expr>]</index></name><operator pos:start="235:53" pos:end="235:53">.</operator><name pos:start="235:54" pos:end="235:72">samples_per_channel</name></expr>;</expr_stmt></block_content></block></else></if_stmt>





        <comment type="block" pos:start="241:9" pos:end="241:43">/* Initialize variable relations */</comment>

        <expr_stmt pos:start="243:9" pos:end="243:84"><expr pos:start="243:9" pos:end="243:83"><name pos:start="243:9" pos:end="243:23"><name pos:start="243:9" pos:end="243:9">q</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:20">subpacket</name><index pos:start="243:21" pos:end="243:23">[<expr pos:start="243:22" pos:end="243:22"><name pos:start="243:22" pos:end="243:22">s</name></expr>]</index></name><operator pos:start="243:24" pos:end="243:24">.</operator><name pos:start="243:25" pos:end="243:38">numvector_size</name> <operator pos:start="243:40" pos:end="243:40">=</operator> <operator pos:start="243:42" pos:end="243:42">(</operator><literal type="number" pos:start="243:43" pos:end="243:43">1</literal> <operator pos:start="243:45" pos:end="243:46">&lt;&lt;</operator> <name pos:start="243:48" pos:end="243:62"><name pos:start="243:48" pos:end="243:48">q</name><operator pos:start="243:49" pos:end="243:50">-&gt;</operator><name pos:start="243:51" pos:end="243:59">subpacket</name><index pos:start="243:60" pos:end="243:62">[<expr pos:start="243:61" pos:end="243:61"><name pos:start="243:61" pos:end="243:61">s</name></expr>]</index></name><operator pos:start="243:63" pos:end="243:63">.</operator><name pos:start="243:64" pos:end="243:82">log2_numvector_size</name><operator pos:start="243:83" pos:end="243:83">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="247:9" pos:end="247:91">/* Try to catch some obviously faulty streams, othervise it might be exploitable */</comment>

        <if_stmt pos:start="249:9" pos:end="255:9"><if pos:start="249:9" pos:end="255:9">if <condition pos:start="249:12" pos:end="249:48">(<expr pos:start="249:13" pos:end="249:47"><name pos:start="249:13" pos:end="249:27"><name pos:start="249:13" pos:end="249:13">q</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:24">subpacket</name><index pos:start="249:25" pos:end="249:27">[<expr pos:start="249:26" pos:end="249:26"><name pos:start="249:26" pos:end="249:26">s</name></expr>]</index></name><operator pos:start="249:28" pos:end="249:28">.</operator><name pos:start="249:29" pos:end="249:42">total_subbands</name> <operator pos:start="249:44" pos:end="249:44">&gt;</operator> <literal type="number" pos:start="249:46" pos:end="249:47">53</literal></expr>)</condition> <block pos:start="249:50" pos:end="255:9">{<block_content pos:start="251:13" pos:end="253:22">

            <expr_stmt pos:start="251:13" pos:end="251:66"><expr pos:start="251:13" pos:end="251:65"><call pos:start="251:13" pos:end="251:65"><name pos:start="251:13" pos:end="251:33">av_log_ask_for_sample</name><argument_list pos:start="251:34" pos:end="251:65">(<argument pos:start="251:35" pos:end="251:39"><expr pos:start="251:35" pos:end="251:39"><name pos:start="251:35" pos:end="251:39">avctx</name></expr></argument>, <argument pos:start="251:42" pos:end="251:64"><expr pos:start="251:42" pos:end="251:64"><literal type="string" pos:start="251:42" pos:end="251:64">"total_subbands &gt; 53\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="253:13" pos:end="253:22">return <expr pos:start="253:20" pos:end="253:21"><operator pos:start="253:20" pos:end="253:20">-</operator><literal type="number" pos:start="253:21" pos:end="253:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="259:9" pos:end="265:9"><if pos:start="259:9" pos:end="265:9">if <condition pos:start="259:12" pos:end="259:83">(<expr pos:start="259:13" pos:end="259:82"><operator pos:start="259:13" pos:end="259:13">(</operator><name pos:start="259:14" pos:end="259:28"><name pos:start="259:14" pos:end="259:14">q</name><operator pos:start="259:15" pos:end="259:16">-&gt;</operator><name pos:start="259:17" pos:end="259:25">subpacket</name><index pos:start="259:26" pos:end="259:28">[<expr pos:start="259:27" pos:end="259:27"><name pos:start="259:27" pos:end="259:27">s</name></expr>]</index></name><operator pos:start="259:29" pos:end="259:29">.</operator><name pos:start="259:30" pos:end="259:40">js_vlc_bits</name> <operator pos:start="259:42" pos:end="259:42">&gt;</operator> <literal type="number" pos:start="259:44" pos:end="259:44">6</literal><operator pos:start="259:45" pos:end="259:45">)</operator> <operator pos:start="259:47" pos:end="259:48">||</operator> <operator pos:start="259:50" pos:end="259:50">(</operator><name pos:start="259:51" pos:end="259:65"><name pos:start="259:51" pos:end="259:51">q</name><operator pos:start="259:52" pos:end="259:53">-&gt;</operator><name pos:start="259:54" pos:end="259:62">subpacket</name><index pos:start="259:63" pos:end="259:65">[<expr pos:start="259:64" pos:end="259:64"><name pos:start="259:64" pos:end="259:64">s</name></expr>]</index></name><operator pos:start="259:66" pos:end="259:66">.</operator><name pos:start="259:67" pos:end="259:77">js_vlc_bits</name> <operator pos:start="259:79" pos:end="259:79">&lt;</operator> <literal type="number" pos:start="259:81" pos:end="259:81">0</literal><operator pos:start="259:82" pos:end="259:82">)</operator></expr>)</condition> <block pos:start="259:85" pos:end="265:9">{<block_content pos:start="261:13" pos:end="263:22">

            <expr_stmt pos:start="261:13" pos:end="261:117"><expr pos:start="261:13" pos:end="261:116"><call pos:start="261:13" pos:end="261:116"><name pos:start="261:13" pos:end="261:18">av_log</name><argument_list pos:start="261:19" pos:end="261:116">(<argument pos:start="261:20" pos:end="261:24"><expr pos:start="261:20" pos:end="261:24"><name pos:start="261:20" pos:end="261:24">avctx</name></expr></argument>,<argument pos:start="261:26" pos:end="261:37"><expr pos:start="261:26" pos:end="261:37"><name pos:start="261:26" pos:end="261:37">AV_LOG_ERROR</name></expr></argument>,<argument pos:start="261:39" pos:end="261:87"><expr pos:start="261:39" pos:end="261:87"><literal type="string" pos:start="261:39" pos:end="261:87">"js_vlc_bits = %d, only &gt;= 0 and &lt;= 6 allowed!\n"</literal></expr></argument>,<argument pos:start="261:89" pos:end="261:115"><expr pos:start="261:89" pos:end="261:115"><name pos:start="261:89" pos:end="261:103"><name pos:start="261:89" pos:end="261:89">q</name><operator pos:start="261:90" pos:end="261:91">-&gt;</operator><name pos:start="261:92" pos:end="261:100">subpacket</name><index pos:start="261:101" pos:end="261:103">[<expr pos:start="261:102" pos:end="261:102"><name pos:start="261:102" pos:end="261:102">s</name></expr>]</index></name><operator pos:start="261:104" pos:end="261:104">.</operator><name pos:start="261:105" pos:end="261:115">js_vlc_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="263:13" pos:end="263:22">return <expr pos:start="263:20" pos:end="263:21"><operator pos:start="263:20" pos:end="263:20">-</operator><literal type="number" pos:start="263:21" pos:end="263:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="269:9" pos:end="275:9"><if pos:start="269:9" pos:end="275:9">if <condition pos:start="269:12" pos:end="269:42">(<expr pos:start="269:13" pos:end="269:41"><name pos:start="269:13" pos:end="269:27"><name pos:start="269:13" pos:end="269:13">q</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:24">subpacket</name><index pos:start="269:25" pos:end="269:27">[<expr pos:start="269:26" pos:end="269:26"><name pos:start="269:26" pos:end="269:26">s</name></expr>]</index></name><operator pos:start="269:28" pos:end="269:28">.</operator><name pos:start="269:29" pos:end="269:36">subbands</name> <operator pos:start="269:38" pos:end="269:38">&gt;</operator> <literal type="number" pos:start="269:40" pos:end="269:41">50</literal></expr>)</condition> <block pos:start="269:44" pos:end="275:9">{<block_content pos:start="271:13" pos:end="273:22">

            <expr_stmt pos:start="271:13" pos:end="271:60"><expr pos:start="271:13" pos:end="271:59"><call pos:start="271:13" pos:end="271:59"><name pos:start="271:13" pos:end="271:33">av_log_ask_for_sample</name><argument_list pos:start="271:34" pos:end="271:59">(<argument pos:start="271:35" pos:end="271:39"><expr pos:start="271:35" pos:end="271:39"><name pos:start="271:35" pos:end="271:39">avctx</name></expr></argument>, <argument pos:start="271:42" pos:end="271:58"><expr pos:start="271:42" pos:end="271:58"><literal type="string" pos:start="271:42" pos:end="271:58">"subbands &gt; 50\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="273:13" pos:end="273:22">return <expr pos:start="273:20" pos:end="273:21"><operator pos:start="273:20" pos:end="273:20">-</operator><literal type="number" pos:start="273:21" pos:end="273:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:65"><expr pos:start="277:9" pos:end="277:64"><name pos:start="277:9" pos:end="277:23"><name pos:start="277:9" pos:end="277:9">q</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:20">subpacket</name><index pos:start="277:21" pos:end="277:23">[<expr pos:start="277:22" pos:end="277:22"><name pos:start="277:22" pos:end="277:22">s</name></expr>]</index></name><operator pos:start="277:24" pos:end="277:24">.</operator><name pos:start="277:25" pos:end="277:34"><name pos:start="277:25" pos:end="277:30">gains1</name><operator pos:start="277:31" pos:end="277:31">.</operator><name pos:start="277:32" pos:end="277:34">now</name></name>      <operator pos:start="277:41" pos:end="277:41">=</operator> <name pos:start="277:43" pos:end="277:57"><name pos:start="277:43" pos:end="277:43">q</name><operator pos:start="277:44" pos:end="277:45">-&gt;</operator><name pos:start="277:46" pos:end="277:54">subpacket</name><index pos:start="277:55" pos:end="277:57">[<expr pos:start="277:56" pos:end="277:56"><name pos:start="277:56" pos:end="277:56">s</name></expr>]</index></name><operator pos:start="277:58" pos:end="277:58">.</operator><name pos:start="277:59" pos:end="277:64">gain_1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:65"><expr pos:start="279:9" pos:end="279:64"><name pos:start="279:9" pos:end="279:23"><name pos:start="279:9" pos:end="279:9">q</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:20">subpacket</name><index pos:start="279:21" pos:end="279:23">[<expr pos:start="279:22" pos:end="279:22"><name pos:start="279:22" pos:end="279:22">s</name></expr>]</index></name><operator pos:start="279:24" pos:end="279:24">.</operator><name pos:start="279:25" pos:end="279:39"><name pos:start="279:25" pos:end="279:30">gains1</name><operator pos:start="279:31" pos:end="279:31">.</operator><name pos:start="279:32" pos:end="279:39">previous</name></name> <operator pos:start="279:41" pos:end="279:41">=</operator> <name pos:start="279:43" pos:end="279:57"><name pos:start="279:43" pos:end="279:43">q</name><operator pos:start="279:44" pos:end="279:45">-&gt;</operator><name pos:start="279:46" pos:end="279:54">subpacket</name><index pos:start="279:55" pos:end="279:57">[<expr pos:start="279:56" pos:end="279:56"><name pos:start="279:56" pos:end="279:56">s</name></expr>]</index></name><operator pos:start="279:58" pos:end="279:58">.</operator><name pos:start="279:59" pos:end="279:64">gain_2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:65"><expr pos:start="281:9" pos:end="281:64"><name pos:start="281:9" pos:end="281:23"><name pos:start="281:9" pos:end="281:9">q</name><operator pos:start="281:10" pos:end="281:11">-&gt;</operator><name pos:start="281:12" pos:end="281:20">subpacket</name><index pos:start="281:21" pos:end="281:23">[<expr pos:start="281:22" pos:end="281:22"><name pos:start="281:22" pos:end="281:22">s</name></expr>]</index></name><operator pos:start="281:24" pos:end="281:24">.</operator><name pos:start="281:25" pos:end="281:34"><name pos:start="281:25" pos:end="281:30">gains2</name><operator pos:start="281:31" pos:end="281:31">.</operator><name pos:start="281:32" pos:end="281:34">now</name></name>      <operator pos:start="281:41" pos:end="281:41">=</operator> <name pos:start="281:43" pos:end="281:57"><name pos:start="281:43" pos:end="281:43">q</name><operator pos:start="281:44" pos:end="281:45">-&gt;</operator><name pos:start="281:46" pos:end="281:54">subpacket</name><index pos:start="281:55" pos:end="281:57">[<expr pos:start="281:56" pos:end="281:56"><name pos:start="281:56" pos:end="281:56">s</name></expr>]</index></name><operator pos:start="281:58" pos:end="281:58">.</operator><name pos:start="281:59" pos:end="281:64">gain_3</name></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:65"><expr pos:start="283:9" pos:end="283:64"><name pos:start="283:9" pos:end="283:23"><name pos:start="283:9" pos:end="283:9">q</name><operator pos:start="283:10" pos:end="283:11">-&gt;</operator><name pos:start="283:12" pos:end="283:20">subpacket</name><index pos:start="283:21" pos:end="283:23">[<expr pos:start="283:22" pos:end="283:22"><name pos:start="283:22" pos:end="283:22">s</name></expr>]</index></name><operator pos:start="283:24" pos:end="283:24">.</operator><name pos:start="283:25" pos:end="283:39"><name pos:start="283:25" pos:end="283:30">gains2</name><operator pos:start="283:31" pos:end="283:31">.</operator><name pos:start="283:32" pos:end="283:39">previous</name></name> <operator pos:start="283:41" pos:end="283:41">=</operator> <name pos:start="283:43" pos:end="283:57"><name pos:start="283:43" pos:end="283:43">q</name><operator pos:start="283:44" pos:end="283:45">-&gt;</operator><name pos:start="283:46" pos:end="283:54">subpacket</name><index pos:start="283:55" pos:end="283:57">[<expr pos:start="283:56" pos:end="283:56"><name pos:start="283:56" pos:end="283:56">s</name></expr>]</index></name><operator pos:start="283:58" pos:end="283:58">.</operator><name pos:start="283:59" pos:end="283:64">gain_4</name></expr>;</expr_stmt>



        <expr_stmt pos:start="287:9" pos:end="287:28"><expr pos:start="287:9" pos:end="287:27"><name pos:start="287:9" pos:end="287:25"><name pos:start="287:9" pos:end="287:9">q</name><operator pos:start="287:10" pos:end="287:11">-&gt;</operator><name pos:start="287:12" pos:end="287:25">num_subpackets</name></name><operator pos:start="287:26" pos:end="287:27">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:12"><expr pos:start="289:9" pos:end="289:11"><name pos:start="289:9" pos:end="289:9">s</name><operator pos:start="289:10" pos:end="289:11">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="291:9" pos:end="297:9"><if pos:start="291:9" pos:end="297:9">if <condition pos:start="291:12" pos:end="291:31">(<expr pos:start="291:13" pos:end="291:30"><name pos:start="291:13" pos:end="291:13">s</name> <operator pos:start="291:15" pos:end="291:15">&gt;</operator> <name pos:start="291:17" pos:end="291:30">MAX_SUBPACKETS</name></expr>)</condition> <block pos:start="291:33" pos:end="297:9">{<block_content pos:start="293:13" pos:end="295:22">

            <expr_stmt pos:start="293:13" pos:end="293:70"><expr pos:start="293:13" pos:end="293:69"><call pos:start="293:13" pos:end="293:69"><name pos:start="293:13" pos:end="293:33">av_log_ask_for_sample</name><argument_list pos:start="293:34" pos:end="293:69">(<argument pos:start="293:35" pos:end="293:39"><expr pos:start="293:35" pos:end="293:39"><name pos:start="293:35" pos:end="293:39">avctx</name></expr></argument>, <argument pos:start="293:42" pos:end="293:68"><expr pos:start="293:42" pos:end="293:68"><literal type="string" pos:start="293:42" pos:end="293:68">"Too many subpackets &gt; 5\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="295:13" pos:end="295:22">return <expr pos:start="295:20" pos:end="295:21"><operator pos:start="295:20" pos:end="295:20">-</operator><literal type="number" pos:start="295:21" pos:end="295:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <comment type="block" pos:start="301:5" pos:end="301:25">/* Generate tables */</comment>

    <expr_stmt pos:start="303:5" pos:end="303:21"><expr pos:start="303:5" pos:end="303:20"><call pos:start="303:5" pos:end="303:20"><name pos:start="303:5" pos:end="303:18">init_pow2table</name><argument_list pos:start="303:19" pos:end="303:20">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:23"><expr pos:start="305:5" pos:end="305:22"><call pos:start="305:5" pos:end="305:22"><name pos:start="305:5" pos:end="305:19">init_gain_table</name><argument_list pos:start="305:20" pos:end="305:22">(<argument pos:start="305:21" pos:end="305:21"><expr pos:start="305:21" pos:end="305:21"><name pos:start="305:21" pos:end="305:21">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:28"><expr pos:start="307:5" pos:end="307:27"><call pos:start="307:5" pos:end="307:27"><name pos:start="307:5" pos:end="307:24">init_cplscales_table</name><argument_list pos:start="307:25" pos:end="307:27">(<argument pos:start="307:26" pos:end="307:26"><expr pos:start="307:26" pos:end="307:26"><name pos:start="307:26" pos:end="307:26">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="311:5" pos:end="313:18"><if pos:start="311:5" pos:end="313:18">if <condition pos:start="311:8" pos:end="311:37">(<expr pos:start="311:9" pos:end="311:36"><call pos:start="311:9" pos:end="311:31"><name pos:start="311:9" pos:end="311:28">init_cook_vlc_tables</name><argument_list pos:start="311:29" pos:end="311:31">(<argument pos:start="311:30" pos:end="311:30"><expr pos:start="311:30" pos:end="311:30"><name pos:start="311:30" pos:end="311:30">q</name></expr></argument>)</argument_list></call> <operator pos:start="311:33" pos:end="311:34">!=</operator> <literal type="number" pos:start="311:36" pos:end="311:36">0</literal></expr>)</condition><block type="pseudo" pos:start="313:9" pos:end="313:18"><block_content pos:start="313:9" pos:end="313:18">

        <return pos:start="313:9" pos:end="313:18">return <expr pos:start="313:16" pos:end="313:17"><operator pos:start="313:16" pos:end="313:16">-</operator><literal type="number" pos:start="313:17" pos:end="313:17">1</literal></expr>;</return></block_content></block></if></if_stmt>





    <if_stmt pos:start="319:5" pos:end="321:18"><if pos:start="319:5" pos:end="321:18">if<condition pos:start="319:7" pos:end="319:40">(<expr pos:start="319:8" pos:end="319:39"><name pos:start="319:8" pos:end="319:25"><name pos:start="319:8" pos:end="319:12">avctx</name><operator pos:start="319:13" pos:end="319:14">-&gt;</operator><name pos:start="319:15" pos:end="319:25">block_align</name></name> <operator pos:start="319:27" pos:end="319:28">&gt;=</operator> <name pos:start="319:30" pos:end="319:37">UINT_MAX</name><operator pos:start="319:38" pos:end="319:38">/</operator><literal type="number" pos:start="319:39" pos:end="319:39">2</literal></expr>)</condition><block type="pseudo" pos:start="321:9" pos:end="321:18"><block_content pos:start="321:9" pos:end="321:18">

        <return pos:start="321:9" pos:end="321:18">return <expr pos:start="321:16" pos:end="321:17"><operator pos:start="321:16" pos:end="321:16">-</operator><literal type="number" pos:start="321:17" pos:end="321:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="325:5" pos:end="329:64">/* Pad the databuffer with:

       DECODE_BYTES_PAD1 or DECODE_BYTES_PAD2 for decode_bytes(),

       FF_INPUT_BUFFER_PADDING_SIZE, for the bitstreamreader. */</comment>

        <expr_stmt pos:start="331:9" pos:end="337:53"><expr pos:start="331:9" pos:end="337:52"><name pos:start="331:9" pos:end="331:31"><name pos:start="331:9" pos:end="331:9">q</name><operator pos:start="331:10" pos:end="331:11">-&gt;</operator><name pos:start="331:12" pos:end="331:31">decoded_bytes_buffer</name></name> <operator pos:start="331:33" pos:end="331:33">=</operator>

          <call pos:start="333:11" pos:end="337:52"><name pos:start="333:11" pos:end="333:20">av_mallocz</name><argument_list pos:start="333:21" pos:end="337:52">(<argument pos:start="333:22" pos:end="337:51"><expr pos:start="333:22" pos:end="337:51"><name pos:start="333:22" pos:end="333:39"><name pos:start="333:22" pos:end="333:26">avctx</name><operator pos:start="333:27" pos:end="333:28">-&gt;</operator><name pos:start="333:29" pos:end="333:39">block_align</name></name>

                     <operator pos:start="335:22" pos:end="335:22">+</operator> <call pos:start="335:24" pos:end="335:60"><name pos:start="335:24" pos:end="335:40">DECODE_BYTES_PAD1</name><argument_list pos:start="335:41" pos:end="335:60">(<argument pos:start="335:42" pos:end="335:59"><expr pos:start="335:42" pos:end="335:59"><name pos:start="335:42" pos:end="335:59"><name pos:start="335:42" pos:end="335:46">avctx</name><operator pos:start="335:47" pos:end="335:48">-&gt;</operator><name pos:start="335:49" pos:end="335:59">block_align</name></name></expr></argument>)</argument_list></call>

                     <operator pos:start="337:22" pos:end="337:22">+</operator> <name pos:start="337:24" pos:end="337:51">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="339:5" pos:end="341:18"><if pos:start="339:5" pos:end="341:18">if <condition pos:start="339:8" pos:end="339:40">(<expr pos:start="339:9" pos:end="339:39"><name pos:start="339:9" pos:end="339:31"><name pos:start="339:9" pos:end="339:9">q</name><operator pos:start="339:10" pos:end="339:11">-&gt;</operator><name pos:start="339:12" pos:end="339:31">decoded_bytes_buffer</name></name> <operator pos:start="339:33" pos:end="339:34">==</operator> <name pos:start="339:36" pos:end="339:39">NULL</name></expr>)</condition><block type="pseudo" pos:start="341:9" pos:end="341:18"><block_content pos:start="341:9" pos:end="341:18">

        <return pos:start="341:9" pos:end="341:18">return <expr pos:start="341:16" pos:end="341:17"><operator pos:start="341:16" pos:end="341:16">-</operator><literal type="number" pos:start="341:17" pos:end="341:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="345:5" pos:end="345:31">/* Initialize transform. */</comment>

    <if_stmt pos:start="347:5" pos:end="349:18"><if pos:start="347:5" pos:end="349:18">if <condition pos:start="347:8" pos:end="347:32">( <expr pos:start="347:10" pos:end="347:30"><call pos:start="347:10" pos:end="347:25"><name pos:start="347:10" pos:end="347:22">init_cook_mlt</name><argument_list pos:start="347:23" pos:end="347:25">(<argument pos:start="347:24" pos:end="347:24"><expr pos:start="347:24" pos:end="347:24"><name pos:start="347:24" pos:end="347:24">q</name></expr></argument>)</argument_list></call> <operator pos:start="347:27" pos:end="347:28">!=</operator> <literal type="number" pos:start="347:30" pos:end="347:30">0</literal></expr> )</condition><block type="pseudo" pos:start="349:9" pos:end="349:18"><block_content pos:start="349:9" pos:end="349:18">

        <return pos:start="349:9" pos:end="349:18">return <expr pos:start="349:16" pos:end="349:17"><operator pos:start="349:16" pos:end="349:16">-</operator><literal type="number" pos:start="349:17" pos:end="349:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="353:5" pos:end="353:52">/* Initialize COOK signal arithmetic handling */</comment>

    <if_stmt pos:start="355:5" pos:end="367:5"><if pos:start="355:5" pos:end="367:5">if <condition pos:start="355:8" pos:end="355:10">(<expr pos:start="355:9" pos:end="355:9"><literal type="number" pos:start="355:9" pos:end="355:9">1</literal></expr>)</condition> <block pos:start="355:12" pos:end="367:5">{<block_content pos:start="357:9" pos:end="365:51">

        <expr_stmt pos:start="357:9" pos:end="357:50"><expr pos:start="357:9" pos:end="357:49"><name pos:start="357:9" pos:end="357:25"><name pos:start="357:9" pos:end="357:9">q</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:25">scalar_dequant</name></name>  <operator pos:start="357:28" pos:end="357:28">=</operator> <name pos:start="357:30" pos:end="357:49">scalar_dequant_float</name></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:44"><expr pos:start="359:9" pos:end="359:43"><name pos:start="359:9" pos:end="359:19"><name pos:start="359:9" pos:end="359:9">q</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:19">decouple</name></name>        <operator pos:start="359:28" pos:end="359:28">=</operator> <name pos:start="359:30" pos:end="359:43">decouple_float</name></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:47"><expr pos:start="361:9" pos:end="361:46"><name pos:start="361:9" pos:end="361:22"><name pos:start="361:9" pos:end="361:9">q</name><operator pos:start="361:10" pos:end="361:11">-&gt;</operator><name pos:start="361:12" pos:end="361:22">imlt_window</name></name>     <operator pos:start="361:28" pos:end="361:28">=</operator> <name pos:start="361:30" pos:end="361:46">imlt_window_float</name></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:47"><expr pos:start="363:9" pos:end="363:46"><name pos:start="363:9" pos:end="363:22"><name pos:start="363:9" pos:end="363:9">q</name><operator pos:start="363:10" pos:end="363:11">-&gt;</operator><name pos:start="363:12" pos:end="363:22">interpolate</name></name>     <operator pos:start="363:28" pos:end="363:28">=</operator> <name pos:start="363:30" pos:end="363:46">interpolate_float</name></expr>;</expr_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:51"><expr pos:start="365:9" pos:end="365:50"><name pos:start="365:9" pos:end="365:26"><name pos:start="365:9" pos:end="365:9">q</name><operator pos:start="365:10" pos:end="365:11">-&gt;</operator><name pos:start="365:12" pos:end="365:26">saturate_output</name></name> <operator pos:start="365:28" pos:end="365:28">=</operator> <name pos:start="365:30" pos:end="365:50">saturate_output_float</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="371:5" pos:end="371:87">/* Try to catch some obviously faulty streams, othervise it might be exploitable */</comment>

    <if_stmt pos:start="373:5" pos:end="385:5"><if pos:start="373:5" pos:end="375:5">if <condition pos:start="373:8" pos:end="373:111">(<expr pos:start="373:9" pos:end="373:110"><operator pos:start="373:9" pos:end="373:9">(</operator><name pos:start="373:10" pos:end="373:31"><name pos:start="373:10" pos:end="373:10">q</name><operator pos:start="373:11" pos:end="373:12">-&gt;</operator><name pos:start="373:13" pos:end="373:31">samples_per_channel</name></name> <operator pos:start="373:33" pos:end="373:34">==</operator> <literal type="number" pos:start="373:36" pos:end="373:38">256</literal><operator pos:start="373:39" pos:end="373:39">)</operator> <operator pos:start="373:41" pos:end="373:42">||</operator> <operator pos:start="373:44" pos:end="373:44">(</operator><name pos:start="373:45" pos:end="373:66"><name pos:start="373:45" pos:end="373:45">q</name><operator pos:start="373:46" pos:end="373:47">-&gt;</operator><name pos:start="373:48" pos:end="373:66">samples_per_channel</name></name> <operator pos:start="373:68" pos:end="373:69">==</operator> <literal type="number" pos:start="373:71" pos:end="373:73">512</literal><operator pos:start="373:74" pos:end="373:74">)</operator> <operator pos:start="373:76" pos:end="373:77">||</operator> <operator pos:start="373:79" pos:end="373:79">(</operator><name pos:start="373:80" pos:end="373:101"><name pos:start="373:80" pos:end="373:80">q</name><operator pos:start="373:81" pos:end="373:82">-&gt;</operator><name pos:start="373:83" pos:end="373:101">samples_per_channel</name></name> <operator pos:start="373:103" pos:end="373:104">==</operator> <literal type="number" pos:start="373:106" pos:end="373:109">1024</literal><operator pos:start="373:110" pos:end="373:110">)</operator></expr>)</condition> <block pos:start="373:113" pos:end="375:5">{<block_content>

    </block_content>}</block></if> <else pos:start="375:7" pos:end="385:5">else <block pos:start="375:12" pos:end="385:5">{<block_content pos:start="377:9" pos:end="383:18">

        <expr_stmt pos:start="377:9" pos:end="381:54"><expr pos:start="377:9" pos:end="381:53"><call pos:start="377:9" pos:end="381:53"><name pos:start="377:9" pos:end="377:29">av_log_ask_for_sample</name><argument_list pos:start="377:30" pos:end="381:53">(<argument pos:start="377:31" pos:end="377:35"><expr pos:start="377:31" pos:end="377:35"><name pos:start="377:31" pos:end="377:35">avctx</name></expr></argument>,

                              <argument pos:start="379:31" pos:end="379:76"><expr pos:start="379:31" pos:end="379:76"><literal type="string" pos:start="379:31" pos:end="379:76">"unknown amount of samples_per_channel = %d\n"</literal></expr></argument>,

                              <argument pos:start="381:31" pos:end="381:52"><expr pos:start="381:31" pos:end="381:52"><name pos:start="381:31" pos:end="381:52"><name pos:start="381:31" pos:end="381:31">q</name><operator pos:start="381:32" pos:end="381:33">-&gt;</operator><name pos:start="381:34" pos:end="381:52">samples_per_channel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="383:9" pos:end="383:18">return <expr pos:start="383:16" pos:end="383:17"><operator pos:start="383:16" pos:end="383:16">-</operator><literal type="number" pos:start="383:17" pos:end="383:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="389:5" pos:end="389:42"><expr pos:start="389:5" pos:end="389:41"><name pos:start="389:5" pos:end="389:21"><name pos:start="389:5" pos:end="389:9">avctx</name><operator pos:start="389:10" pos:end="389:11">-&gt;</operator><name pos:start="389:12" pos:end="389:21">sample_fmt</name></name> <operator pos:start="389:23" pos:end="389:23">=</operator> <name pos:start="389:25" pos:end="389:41">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>

    <if_stmt pos:start="391:5" pos:end="402:0"><if pos:start="391:5" pos:end="393:45">if <condition pos:start="391:8" pos:end="391:21">(<expr pos:start="391:9" pos:end="391:20"><name pos:start="391:9" pos:end="391:20">channel_mask</name></expr>)</condition><block type="pseudo" pos:start="393:9" pos:end="393:45"><block_content pos:start="393:9" pos:end="393:45">

        <expr_stmt pos:start="393:9" pos:end="393:45"><expr pos:start="393:9" pos:end="393:44"><name pos:start="393:9" pos:end="393:29"><name pos:start="393:9" pos:end="393:13">avctx</name><operator pos:start="393:14" pos:end="393:15">-&gt;</operator><name pos:start="393:16" pos:end="393:29">channel_layout</name></name> <operator pos:start="393:31" pos:end="393:31">=</operator> <name pos:start="393:33" pos:end="393:44">channel_mask</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="395:5" pos:end="402:0">else<block type="pseudo" pos:start="397:9" pos:end="402:0"><block_content pos:start="397:9" pos:end="402:0">

        <expr_stmt pos:start="397:9" pos:end="402:0"><expr pos:start="397:9" pos:end="397:94"><name pos:start="397:9" pos:end="397:29"><name pos:start="397:9" pos:end="397:13">avctx</name><operator pos:start="397:14" pos:end="397:15">-&gt;</operator><name pos:start="397:16" pos:end="397:29">channel_layout</name></name> <operator pos:start="397:31" pos:end="397:31">=</operator> <ternary pos:start="397:33" pos:end="397:94"><condition pos:start="397:33" pos:end="397:54"><expr pos:start="397:33" pos:end="397:52"><operator pos:start="397:33" pos:end="397:33">(</operator><name pos:start="397:34" pos:end="397:48"><name pos:start="397:34" pos:end="397:38">avctx</name><operator pos:start="397:39" pos:end="397:40">-&gt;</operator><name pos:start="397:41" pos:end="397:48">channels</name></name><operator pos:start="397:49" pos:end="397:50">==</operator><literal type="number" pos:start="397:51" pos:end="397:51">2</literal><operator pos:start="397:52" pos:end="397:52">)</operator></expr> ?</condition><then pos:start="397:56" pos:end="397:74"> <expr pos:start="397:56" pos:end="397:74"><name pos:start="397:56" pos:end="397:74">AV_CH_LAYOUT_STEREO</name></expr> </then><else pos:start="397:76" pos:end="397:94">: <expr pos:start="397:78" pos:end="397:94"><name pos:start="397:78" pos:end="397:94">AV_CH_LAYOUT_MONO</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></else></if_stmt>



<cpp:ifdef pos:start="401:1" pos:end="401:12">#<cpp:directive pos:start="401:2" pos:end="401:6">ifdef</cpp:directive> <name pos:start="401:8" pos:end="401:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="403:5" pos:end="406:0"><expr pos:start="403:5" pos:end="403:24"><call pos:start="403:5" pos:end="403:24"><name pos:start="403:5" pos:end="403:21">dump_cook_context</name><argument_list pos:start="403:22" pos:end="403:24">(<argument pos:start="403:23" pos:end="403:23"><expr pos:start="403:23" pos:end="403:23"><name pos:start="403:23" pos:end="403:23">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="405:1" pos:end="405:6">#<cpp:directive pos:start="405:2" pos:end="405:6">endif</cpp:directive></cpp:endif>

    <return pos:start="407:5" pos:end="407:13">return <expr pos:start="407:12" pos:end="407:12"><literal type="number" pos:start="407:12" pos:end="407:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
