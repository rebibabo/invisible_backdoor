<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13895.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_mdhd</name><parameter_list pos:start="1:25" pos:end="1:72">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">MOVAtom</name></type> <name pos:start="1:68" pos:end="1:71">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:54">= <expr pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:20">c</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:24">fc</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:33">streams</name><index pos:start="5:34" pos:end="5:54">[<expr pos:start="5:35" pos:end="5:53"><name pos:start="5:35" pos:end="5:51"><name pos:start="5:35" pos:end="5:35">c</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:39">fc</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:51">nb_streams</name></name><operator pos:start="5:52" pos:end="5:52">-</operator><literal type="number" pos:start="5:53" pos:end="5:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name> <init pos:start="7:26" pos:end="7:40">= <expr pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:29">st</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">version</name> <init pos:start="9:17" pos:end="9:30">= <expr pos:start="9:19" pos:end="9:30"><call pos:start="9:19" pos:end="9:30"><name pos:start="9:19" pos:end="9:26">get_byte</name><argument_list pos:start="9:27" pos:end="9:30">(<argument pos:start="9:28" pos:end="9:29"><expr pos:start="9:28" pos:end="9:29"><name pos:start="9:28" pos:end="9:29">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:20"><name pos:start="11:10" pos:end="11:17">language</name><index pos:start="11:18" pos:end="11:20">[<expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">4</literal></expr>]</index></name> <init pos:start="11:22" pos:end="11:26">= <expr pos:start="11:24" pos:end="11:26"><block pos:start="11:24" pos:end="11:26">{<expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:17">lang</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:15">version</name> <operator pos:start="17:17" pos:end="17:17">&gt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">1</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="19:20" pos:end="19:36">/* unsupported */</comment>



    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><call pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:12">get_be24</name><argument_list pos:start="23:13" pos:end="23:16">(<argument pos:start="23:14" pos:end="23:15"><expr pos:start="23:14" pos:end="23:15"><name pos:start="23:14" pos:end="23:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:19" pos:end="23:29">/* flags */</comment>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:15">version</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <literal type="number" pos:start="25:20" pos:end="25:20">1</literal></expr>)</condition> <block pos:start="25:23" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:21">

        <expr_stmt pos:start="27:9" pos:end="27:21"><expr pos:start="27:9" pos:end="27:20"><call pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:16">get_be64</name><argument_list pos:start="27:17" pos:end="27:20">(<argument pos:start="27:18" pos:end="27:19"><expr pos:start="27:18" pos:end="27:19"><name pos:start="27:18" pos:end="27:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:21"><expr pos:start="29:9" pos:end="29:20"><call pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:16">get_be64</name><argument_list pos:start="29:17" pos:end="29:20">(<argument pos:start="29:18" pos:end="29:19"><expr pos:start="29:18" pos:end="29:19"><name pos:start="29:18" pos:end="29:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="37:5">else <block pos:start="31:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:21">

        <expr_stmt pos:start="33:9" pos:end="33:21"><expr pos:start="33:9" pos:end="33:20"><call pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:16">get_be32</name><argument_list pos:start="33:17" pos:end="33:20">(<argument pos:start="33:18" pos:end="33:19"><expr pos:start="33:18" pos:end="33:19"><name pos:start="33:18" pos:end="33:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:23" pos:end="33:41">/* creation time */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:21"><expr pos:start="35:9" pos:end="35:20"><call pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:16">get_be32</name><argument_list pos:start="35:17" pos:end="35:20">(<argument pos:start="35:18" pos:end="35:19"><expr pos:start="35:18" pos:end="35:19"><name pos:start="35:18" pos:end="35:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="35:23" pos:end="35:45">/* modification time */</comment>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:6">sc</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:18">time_scale</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <call pos:start="41:22" pos:end="41:33"><name pos:start="41:22" pos:end="41:29">get_be32</name><argument_list pos:start="41:30" pos:end="41:33">(<argument pos:start="41:31" pos:end="41:32"><expr pos:start="41:31" pos:end="41:32"><name pos:start="41:31" pos:end="41:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:64"><expr pos:start="43:5" pos:end="43:63"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:6">st</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:16">duration</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <ternary pos:start="43:20" pos:end="43:63"><condition pos:start="43:20" pos:end="43:35"><expr pos:start="43:20" pos:end="43:33"><operator pos:start="43:20" pos:end="43:20">(</operator><name pos:start="43:21" pos:end="43:27">version</name> <operator pos:start="43:29" pos:end="43:30">==</operator> <literal type="number" pos:start="43:32" pos:end="43:32">1</literal><operator pos:start="43:33" pos:end="43:33">)</operator></expr> ?</condition><then pos:start="43:37" pos:end="43:48"> <expr pos:start="43:37" pos:end="43:48"><call pos:start="43:37" pos:end="43:48"><name pos:start="43:37" pos:end="43:44">get_be64</name><argument_list pos:start="43:45" pos:end="43:48">(<argument pos:start="43:46" pos:end="43:47"><expr pos:start="43:46" pos:end="43:47"><name pos:start="43:46" pos:end="43:47">pb</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="43:50" pos:end="43:63">: <expr pos:start="43:52" pos:end="43:63"><call pos:start="43:52" pos:end="43:63"><name pos:start="43:52" pos:end="43:59">get_be32</name><argument_list pos:start="43:60" pos:end="43:63">(<argument pos:start="43:61" pos:end="43:62"><expr pos:start="43:61" pos:end="43:62"><name pos:start="43:61" pos:end="43:62">pb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt> <comment type="block" pos:start="43:66" pos:end="43:79">/* duration */</comment>



    <expr_stmt pos:start="47:5" pos:end="47:24"><expr pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:8">lang</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:23"><name pos:start="47:12" pos:end="47:19">get_be16</name><argument_list pos:start="47:20" pos:end="47:23">(<argument pos:start="47:21" pos:end="47:22"><expr pos:start="47:21" pos:end="47:22"><name pos:start="47:21" pos:end="47:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="47:26" pos:end="47:39">/* language */</comment>

    <if_stmt pos:start="49:5" pos:end="51:61"><if pos:start="49:5" pos:end="51:61">if <condition pos:start="49:8" pos:end="49:46">(<expr pos:start="49:9" pos:end="49:45"><call pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:29">ff_mov_lang_to_iso639</name><argument_list pos:start="49:30" pos:end="49:45">(<argument pos:start="49:31" pos:end="49:34"><expr pos:start="49:31" pos:end="49:34"><name pos:start="49:31" pos:end="49:34">lang</name></expr></argument>, <argument pos:start="49:37" pos:end="49:44"><expr pos:start="49:37" pos:end="49:44"><name pos:start="49:37" pos:end="49:44">language</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:61"><block_content pos:start="51:9" pos:end="51:61">

        <expr_stmt pos:start="51:9" pos:end="51:61"><expr pos:start="51:9" pos:end="51:60"><call pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:23">av_metadata_set</name><argument_list pos:start="51:24" pos:end="51:60">(<argument pos:start="51:25" pos:end="51:37"><expr pos:start="51:25" pos:end="51:37"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:37"><name pos:start="51:26" pos:end="51:27">st</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:37">metadata</name></name></expr></argument>, <argument pos:start="51:40" pos:end="51:49"><expr pos:start="51:40" pos:end="51:49"><literal type="string" pos:start="51:40" pos:end="51:49">"language"</literal></expr></argument>, <argument pos:start="51:52" pos:end="51:59"><expr pos:start="51:52" pos:end="51:59"><name pos:start="51:52" pos:end="51:59">language</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:17"><expr pos:start="53:5" pos:end="53:16"><call pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:12">get_be16</name><argument_list pos:start="53:13" pos:end="53:16">(<argument pos:start="53:14" pos:end="53:15"><expr pos:start="53:14" pos:end="53:15"><name pos:start="53:14" pos:end="53:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="53:19" pos:end="53:31">/* quality */</comment>



    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
