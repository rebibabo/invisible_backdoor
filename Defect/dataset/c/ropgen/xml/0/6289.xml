<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6289.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:35">bdrv_get_block_status_above</name><parameter_list pos:start="1:36" pos:end="9:60">(<parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:52">BlockDriverState</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">bs</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:58"><decl pos:start="3:37" pos:end="3:58"><type pos:start="3:37" pos:end="3:58"><name pos:start="3:37" pos:end="3:52">BlockDriverState</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">base</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:54"><decl pos:start="5:37" pos:end="5:54"><type pos:start="5:37" pos:end="5:54"><name pos:start="5:37" pos:end="5:43">int64_t</name></type> <name pos:start="5:45" pos:end="5:54">sector_num</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:50"><decl pos:start="7:37" pos:end="7:50"><type pos:start="7:37" pos:end="7:50"><name pos:start="7:37" pos:end="7:39">int</name></type> <name pos:start="7:41" pos:end="7:50">nb_sectors</name></decl></parameter>, <parameter pos:start="7:53" pos:end="7:61"><decl pos:start="7:53" pos:end="7:61"><type pos:start="7:53" pos:end="7:61"><name pos:start="7:53" pos:end="7:55">int</name> <modifier pos:start="7:57" pos:end="7:57">*</modifier></type><name pos:start="7:58" pos:end="7:61">pnum</name></decl></parameter>,

                                    <parameter pos:start="9:37" pos:end="9:59"><decl pos:start="9:37" pos:end="9:59"><type pos:start="9:37" pos:end="9:59"><name pos:start="9:37" pos:end="9:52">BlockDriverState</name> <modifier pos:start="9:54" pos:end="9:54">*</modifier><modifier pos:start="9:55" pos:end="9:55">*</modifier></type><name pos:start="9:56" pos:end="9:59">file</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="63:1">{<block_content pos:start="13:5" pos:end="61:20">

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">Coroutine</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:17">co</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="31:6"><decl pos:start="15:5" pos:end="31:5"><type pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:28">BdrvCoGetBlockStatusData</name></type> <name pos:start="15:30" pos:end="15:33">data</name> <init pos:start="15:35" pos:end="31:5">= <expr pos:start="15:37" pos:end="31:5"><block pos:start="15:37" pos:end="31:5">{

        <expr pos:start="17:9" pos:end="17:16"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:11">bs</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:16">bs</name></expr>,

        <expr pos:start="19:9" pos:end="19:20"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:13">base</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:20">base</name></expr>,

        <expr pos:start="21:9" pos:end="21:20"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:13">file</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:20">file</name></expr>,

        <expr pos:start="23:9" pos:end="23:32"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:19">sector_num</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:32">sector_num</name></expr>,

        <expr pos:start="25:9" pos:end="25:32"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:19">nb_sectors</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:32">nb_sectors</name></expr>,

        <expr pos:start="27:9" pos:end="27:20"><operator pos:start="27:9" pos:end="27:9">.</operator><name pos:start="27:10" pos:end="27:13">pnum</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:20">pnum</name></expr>,

        <expr pos:start="29:9" pos:end="29:21"><operator pos:start="29:9" pos:end="29:9">.</operator><name pos:start="29:10" pos:end="29:13">done</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:21">false</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="59:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:28">(<expr pos:start="35:9" pos:end="35:27"><call pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:25">qemu_in_coroutine</name><argument_list pos:start="35:26" pos:end="35:27">()</argument_list></call></expr>)</condition> <block pos:start="35:30" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:52">

        <comment type="block" pos:start="37:9" pos:end="37:55">/* Fast-path if already in coroutine context */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><call pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:44">bdrv_get_block_status_above_co_entry</name><argument_list pos:start="39:45" pos:end="39:51">(<argument pos:start="39:46" pos:end="39:50"><expr pos:start="39:46" pos:end="39:50"><operator pos:start="39:46" pos:end="39:46">&amp;</operator><name pos:start="39:47" pos:end="39:50">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="59:5">else <block pos:start="41:12" pos:end="59:5">{<block_content pos:start="43:9" pos:end="57:9">

        <decl_stmt pos:start="43:9" pos:end="43:59"><decl pos:start="43:9" pos:end="43:58"><type pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:18">AioContext</name> <modifier pos:start="43:20" pos:end="43:20">*</modifier></type><name pos:start="43:21" pos:end="43:31">aio_context</name> <init pos:start="43:33" pos:end="43:58">= <expr pos:start="43:35" pos:end="43:58"><call pos:start="43:35" pos:end="43:58"><name pos:start="43:35" pos:end="43:54">bdrv_get_aio_context</name><argument_list pos:start="43:55" pos:end="43:58">(<argument pos:start="43:56" pos:end="43:57"><expr pos:start="43:56" pos:end="43:57"><name pos:start="43:56" pos:end="43:57">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="47:9" pos:end="49:42"><expr pos:start="47:9" pos:end="49:41"><name pos:start="47:9" pos:end="47:10">co</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="49:41"><name pos:start="47:14" pos:end="47:34">qemu_coroutine_create</name><argument_list pos:start="47:35" pos:end="49:41">(<argument pos:start="47:36" pos:end="47:71"><expr pos:start="47:36" pos:end="47:71"><name pos:start="47:36" pos:end="47:71">bdrv_get_block_status_above_co_entry</name></expr></argument>,

                                   <argument pos:start="49:36" pos:end="49:40"><expr pos:start="49:36" pos:end="49:40"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:40">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:33"><expr pos:start="51:9" pos:end="51:32"><call pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:28">qemu_coroutine_enter</name><argument_list pos:start="51:29" pos:end="51:32">(<argument pos:start="51:30" pos:end="51:31"><expr pos:start="51:30" pos:end="51:31"><name pos:start="51:30" pos:end="51:31">co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="53:9" pos:end="57:9">while <condition pos:start="53:15" pos:end="53:26">(<expr pos:start="53:16" pos:end="53:25"><operator pos:start="53:16" pos:end="53:16">!</operator><name pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:20">data</name><operator pos:start="53:21" pos:end="53:21">.</operator><name pos:start="53:22" pos:end="53:25">done</name></name></expr>)</condition> <block pos:start="53:28" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:40">

            <expr_stmt pos:start="55:13" pos:end="55:40"><expr pos:start="55:13" pos:end="55:39"><call pos:start="55:13" pos:end="55:39"><name pos:start="55:13" pos:end="55:20">aio_poll</name><argument_list pos:start="55:21" pos:end="55:39">(<argument pos:start="55:22" pos:end="55:32"><expr pos:start="55:22" pos:end="55:32"><name pos:start="55:22" pos:end="55:32">aio_context</name></expr></argument>, <argument pos:start="55:35" pos:end="55:38"><expr pos:start="55:35" pos:end="55:38"><name pos:start="55:35" pos:end="55:38">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>

    <return pos:start="61:5" pos:end="61:20">return <expr pos:start="61:12" pos:end="61:19"><name pos:start="61:12" pos:end="61:19"><name pos:start="61:12" pos:end="61:15">data</name><operator pos:start="61:16" pos:end="61:16">.</operator><name pos:start="61:17" pos:end="61:19">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
