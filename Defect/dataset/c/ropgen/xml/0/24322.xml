<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24322.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">qemu_gluster_parseuri</name><parameter_list pos:start="1:33" pos:end="1:74">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:44">GlusterConf</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">gconf</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:63">char</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:73">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:15">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">URI</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:12">uri</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">QueryParams</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">qp</name> <init pos:start="7:21" pos:end="7:26">= <expr pos:start="7:23" pos:end="7:26"><name pos:start="7:23" pos:end="7:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:16">is_unix</name> <init pos:start="9:18" pos:end="9:24">= <expr pos:start="9:20" pos:end="9:24"><name pos:start="9:20" pos:end="9:24">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:30"><expr pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:7">uri</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:29"><name pos:start="15:11" pos:end="15:19">uri_parse</name><argument_list pos:start="15:20" pos:end="15:29">(<argument pos:start="15:21" pos:end="15:28"><expr pos:start="15:21" pos:end="15:28"><name pos:start="15:21" pos:end="15:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:12">uri</name></expr>)</condition> <block pos:start="17:15" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:23">

        <return pos:start="19:9" pos:end="19:23">return <expr pos:start="19:16" pos:end="19:22"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:19">/* transport */</comment>

    <if_stmt pos:start="27:5" pos:end="51:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:40">(<expr pos:start="27:9" pos:end="27:39"><operator pos:start="27:9" pos:end="27:9">!</operator><call pos:start="27:10" pos:end="27:39"><name pos:start="27:10" pos:end="27:15">strcmp</name><argument_list pos:start="27:16" pos:end="27:39">(<argument pos:start="27:17" pos:end="27:27"><expr pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:19">uri</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:27">scheme</name></name></expr></argument>, <argument pos:start="27:30" pos:end="27:38"><expr pos:start="27:30" pos:end="27:38"><literal type="string" pos:start="27:30" pos:end="27:38">"gluster"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:42" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:43">

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:13">gconf</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:24">transport</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <call pos:start="29:28" pos:end="29:42"><name pos:start="29:28" pos:end="29:35">g_strdup</name><argument_list pos:start="29:36" pos:end="29:42">(<argument pos:start="29:37" pos:end="29:41"><expr pos:start="29:37" pos:end="29:41"><literal type="string" pos:start="29:37" pos:end="29:41">"tcp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="35:5">else if <condition pos:start="31:15" pos:end="31:51">(<expr pos:start="31:16" pos:end="31:50"><operator pos:start="31:16" pos:end="31:16">!</operator><call pos:start="31:17" pos:end="31:50"><name pos:start="31:17" pos:end="31:22">strcmp</name><argument_list pos:start="31:23" pos:end="31:50">(<argument pos:start="31:24" pos:end="31:34"><expr pos:start="31:24" pos:end="31:34"><name pos:start="31:24" pos:end="31:34"><name pos:start="31:24" pos:end="31:26">uri</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:34">scheme</name></name></expr></argument>, <argument pos:start="31:37" pos:end="31:49"><expr pos:start="31:37" pos:end="31:49"><literal type="string" pos:start="31:37" pos:end="31:49">"gluster+tcp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:53" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:43">

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:13">gconf</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:24">transport</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <call pos:start="33:28" pos:end="33:42"><name pos:start="33:28" pos:end="33:35">g_strdup</name><argument_list pos:start="33:36" pos:end="33:42">(<argument pos:start="33:37" pos:end="33:41"><expr pos:start="33:37" pos:end="33:41"><literal type="string" pos:start="33:37" pos:end="33:41">"tcp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="41:5">else if <condition pos:start="35:15" pos:end="35:52">(<expr pos:start="35:16" pos:end="35:51"><operator pos:start="35:16" pos:end="35:16">!</operator><call pos:start="35:17" pos:end="35:51"><name pos:start="35:17" pos:end="35:22">strcmp</name><argument_list pos:start="35:23" pos:end="35:51">(<argument pos:start="35:24" pos:end="35:34"><expr pos:start="35:24" pos:end="35:34"><name pos:start="35:24" pos:end="35:34"><name pos:start="35:24" pos:end="35:26">uri</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:34">scheme</name></name></expr></argument>, <argument pos:start="35:37" pos:end="35:50"><expr pos:start="35:37" pos:end="35:50"><literal type="string" pos:start="35:37" pos:end="35:50">"gluster+unix"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:54" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:23">

        <expr_stmt pos:start="37:9" pos:end="37:44"><expr pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:13">gconf</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:24">transport</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:43"><name pos:start="37:28" pos:end="37:35">g_strdup</name><argument_list pos:start="37:36" pos:end="37:43">(<argument pos:start="37:37" pos:end="37:42"><expr pos:start="37:37" pos:end="37:42"><literal type="string" pos:start="37:37" pos:end="37:42">"unix"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:15">is_unix</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:22">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="45:5">else if <condition pos:start="41:15" pos:end="41:52">(<expr pos:start="41:16" pos:end="41:51"><operator pos:start="41:16" pos:end="41:16">!</operator><call pos:start="41:17" pos:end="41:51"><name pos:start="41:17" pos:end="41:22">strcmp</name><argument_list pos:start="41:23" pos:end="41:51">(<argument pos:start="41:24" pos:end="41:34"><expr pos:start="41:24" pos:end="41:34"><name pos:start="41:24" pos:end="41:34"><name pos:start="41:24" pos:end="41:26">uri</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:34">scheme</name></name></expr></argument>, <argument pos:start="41:37" pos:end="41:50"><expr pos:start="41:37" pos:end="41:50"><literal type="string" pos:start="41:37" pos:end="41:50">"gluster+rdma"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:54" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:44">

        <expr_stmt pos:start="43:9" pos:end="43:44"><expr pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:13">gconf</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:24">transport</name></name> <operator pos:start="43:26" pos:end="43:26">=</operator> <call pos:start="43:28" pos:end="43:43"><name pos:start="43:28" pos:end="43:35">g_strdup</name><argument_list pos:start="43:36" pos:end="43:43">(<argument pos:start="43:37" pos:end="43:42"><expr pos:start="43:37" pos:end="43:42"><literal type="string" pos:start="43:37" pos:end="43:42">"rdma"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="51:5">else <block pos:start="45:12" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:17">

        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <operator pos:start="47:15" pos:end="47:15">-</operator><name pos:start="47:16" pos:end="47:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:17">goto <name pos:start="49:14" pos:end="49:16">out</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:49"><expr pos:start="55:5" pos:end="55:48"><name pos:start="55:5" pos:end="55:7">ret</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:48"><name pos:start="55:11" pos:end="55:30">parse_volume_options</name><argument_list pos:start="55:31" pos:end="55:48">(<argument pos:start="55:32" pos:end="55:36"><expr pos:start="55:32" pos:end="55:36"><name pos:start="55:32" pos:end="55:36">gconf</name></expr></argument>, <argument pos:start="55:39" pos:end="55:47"><expr pos:start="55:39" pos:end="55:47"><name pos:start="55:39" pos:end="55:47"><name pos:start="55:39" pos:end="55:41">uri</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:47">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:16">(<expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">&lt;</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>)</condition> <block pos:start="57:18" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:17">

        <goto pos:start="59:9" pos:end="59:17">goto <name pos:start="59:14" pos:end="59:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:40"><expr pos:start="65:5" pos:end="65:39"><name pos:start="65:5" pos:end="65:6">qp</name> <operator pos:start="65:8" pos:end="65:8">=</operator> <call pos:start="65:10" pos:end="65:39"><name pos:start="65:10" pos:end="65:27">query_params_parse</name><argument_list pos:start="65:28" pos:end="65:39">(<argument pos:start="65:29" pos:end="65:38"><expr pos:start="65:29" pos:end="65:38"><name pos:start="65:29" pos:end="65:38"><name pos:start="65:29" pos:end="65:31">uri</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:38">query</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:64">(<expr pos:start="67:9" pos:end="67:63"><name pos:start="67:9" pos:end="67:13"><name pos:start="67:9" pos:end="67:10">qp</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:13">n</name></name> <operator pos:start="67:15" pos:end="67:15">&gt;</operator> <literal type="number" pos:start="67:17" pos:end="67:17">1</literal> <operator pos:start="67:19" pos:end="67:20">||</operator> <operator pos:start="67:22" pos:end="67:22">(</operator><name pos:start="67:23" pos:end="67:29">is_unix</name> <operator pos:start="67:31" pos:end="67:32">&amp;&amp;</operator> <operator pos:start="67:34" pos:end="67:34">!</operator><name pos:start="67:35" pos:end="67:39"><name pos:start="67:35" pos:end="67:36">qp</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:39">n</name></name><operator pos:start="67:40" pos:end="67:40">)</operator> <operator pos:start="67:42" pos:end="67:43">||</operator> <operator pos:start="67:45" pos:end="67:45">(</operator><operator pos:start="67:46" pos:end="67:46">!</operator><name pos:start="67:47" pos:end="67:53">is_unix</name> <operator pos:start="67:55" pos:end="67:56">&amp;&amp;</operator> <name pos:start="67:58" pos:end="67:62"><name pos:start="67:58" pos:end="67:59">qp</name><operator pos:start="67:60" pos:end="67:61">-&gt;</operator><name pos:start="67:62" pos:end="67:62">n</name></name><operator pos:start="67:63" pos:end="67:63">)</operator></expr>)</condition> <block pos:start="67:66" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:17">

        <expr_stmt pos:start="69:9" pos:end="69:22"><expr pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <operator pos:start="69:15" pos:end="69:15">-</operator><name pos:start="69:16" pos:end="69:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:17">goto <name pos:start="71:14" pos:end="71:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="103:5"><if pos:start="77:5" pos:end="97:5">if <condition pos:start="77:8" pos:end="77:16">(<expr pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:15">is_unix</name></expr>)</condition> <block pos:start="77:18" pos:end="97:5">{<block_content pos:start="79:9" pos:end="95:49">

        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:37">(<expr pos:start="79:13" pos:end="79:36"><name pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:15">uri</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:23">server</name></name> <operator pos:start="79:25" pos:end="79:26">||</operator> <name pos:start="79:28" pos:end="79:36"><name pos:start="79:28" pos:end="79:30">uri</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:36">port</name></name></expr>)</condition> <block pos:start="79:39" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:21">

            <expr_stmt pos:start="81:13" pos:end="81:26"><expr pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:15">ret</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <operator pos:start="81:19" pos:end="81:19">-</operator><name pos:start="81:20" pos:end="81:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="83:13" pos:end="83:21">goto <name pos:start="83:18" pos:end="83:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="87:9" pos:end="93:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:44">(<expr pos:start="87:13" pos:end="87:43"><call pos:start="87:13" pos:end="87:43"><name pos:start="87:13" pos:end="87:18">strcmp</name><argument_list pos:start="87:19" pos:end="87:43">(<argument pos:start="87:20" pos:end="87:32"><expr pos:start="87:20" pos:end="87:32"><name pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:21">qp</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:24">p</name><index pos:start="87:25" pos:end="87:27">[<expr pos:start="87:26" pos:end="87:26"><literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>]</index></name><operator pos:start="87:28" pos:end="87:28">.</operator><name pos:start="87:29" pos:end="87:32">name</name></expr></argument>, <argument pos:start="87:35" pos:end="87:42"><expr pos:start="87:35" pos:end="87:42"><literal type="string" pos:start="87:35" pos:end="87:42">"socket"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:46" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:21">

            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:15">ret</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <operator pos:start="89:19" pos:end="89:19">-</operator><name pos:start="89:20" pos:end="89:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="91:13" pos:end="91:21">goto <name pos:start="91:18" pos:end="91:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:49"><expr pos:start="95:9" pos:end="95:48"><name pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:13">gconf</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:21">server</name></name> <operator pos:start="95:23" pos:end="95:23">=</operator> <call pos:start="95:25" pos:end="95:48"><name pos:start="95:25" pos:end="95:32">g_strdup</name><argument_list pos:start="95:33" pos:end="95:48">(<argument pos:start="95:34" pos:end="95:47"><expr pos:start="95:34" pos:end="95:47"><name pos:start="95:34" pos:end="95:41"><name pos:start="95:34" pos:end="95:35">qp</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:38">p</name><index pos:start="95:39" pos:end="95:41">[<expr pos:start="95:40" pos:end="95:40"><literal type="number" pos:start="95:40" pos:end="95:40">0</literal></expr>]</index></name><operator pos:start="95:42" pos:end="95:42">.</operator><name pos:start="95:43" pos:end="95:47">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="103:5">else <block pos:start="97:12" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:32">

        <expr_stmt pos:start="99:9" pos:end="99:46"><expr pos:start="99:9" pos:end="99:45"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:13">gconf</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:21">server</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <call pos:start="99:25" pos:end="99:45"><name pos:start="99:25" pos:end="99:32">g_strdup</name><argument_list pos:start="99:33" pos:end="99:45">(<argument pos:start="99:34" pos:end="99:44"><expr pos:start="99:34" pos:end="99:44"><name pos:start="99:34" pos:end="99:44"><name pos:start="99:34" pos:end="99:36">uri</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:44">server</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:32"><expr pos:start="101:9" pos:end="101:31"><name pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:13">gconf</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:19">port</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:31"><name pos:start="101:23" pos:end="101:25">uri</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:31">port</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="107:1" pos:end="107:4"><name pos:start="107:1" pos:end="107:3">out</name>:</label>

    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:11">(<expr pos:start="109:9" pos:end="109:10"><name pos:start="109:9" pos:end="109:10">qp</name></expr>)</condition> <block pos:start="109:13" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:30">

        <expr_stmt pos:start="111:9" pos:end="111:30"><expr pos:start="111:9" pos:end="111:29"><call pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:25">query_params_free</name><argument_list pos:start="111:26" pos:end="111:29">(<argument pos:start="111:27" pos:end="111:28"><expr pos:start="111:27" pos:end="111:28"><name pos:start="111:27" pos:end="111:28">qp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:18"><expr pos:start="115:5" pos:end="115:17"><call pos:start="115:5" pos:end="115:17"><name pos:start="115:5" pos:end="115:12">uri_free</name><argument_list pos:start="115:13" pos:end="115:17">(<argument pos:start="115:14" pos:end="115:16"><expr pos:start="115:14" pos:end="115:16"><name pos:start="115:14" pos:end="115:16">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:15">return <expr pos:start="117:12" pos:end="117:14"><name pos:start="117:12" pos:end="117:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
