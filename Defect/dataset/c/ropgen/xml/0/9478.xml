<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9478.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">get_video_private_data</name><parameter_list pos:start="1:34" pos:end="1:78">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:40">struct</name> <name pos:start="1:42" pos:end="1:50">VideoFile</name></name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">vf</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:77"><decl pos:start="1:57" pos:end="1:77"><type pos:start="1:57" pos:end="1:77"><name pos:start="1:57" pos:end="1:70">AVCodecContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:77">codec</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:15">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">io</name> <init pos:start="5:21" pos:end="5:26">= <expr pos:start="5:23" pos:end="5:26"><name pos:start="5:23" pos:end="5:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:21">sps_size</name></decl>, <decl pos:start="7:24" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:24" pos:end="7:31">pps_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name> <init pos:start="9:13" pos:end="9:29">= <expr pos:start="9:15" pos:end="9:29"><call pos:start="9:15" pos:end="9:29"><name pos:start="9:15" pos:end="9:21">AVERROR</name><argument_list pos:start="9:22" pos:end="9:29">(<argument pos:start="9:23" pos:end="9:28"><expr pos:start="9:23" pos:end="9:28"><name pos:start="9:23" pos:end="9:28">EINVAL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:43"><if pos:start="13:5" pos:end="15:43">if <condition pos:start="13:8" pos:end="13:43">(<expr pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:13">codec</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:23">codec_id</name></name> <operator pos:start="13:25" pos:end="13:26">==</operator> <name pos:start="13:28" pos:end="13:42">AV_CODEC_ID_VC1</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:43"><block_content pos:start="15:9" pos:end="15:43">

        <return pos:start="15:9" pos:end="15:43">return <expr pos:start="15:16" pos:end="15:42"><call pos:start="15:16" pos:end="15:42"><name pos:start="15:16" pos:end="15:31">get_private_data</name><argument_list pos:start="15:32" pos:end="15:42">(<argument pos:start="15:33" pos:end="15:34"><expr pos:start="15:33" pos:end="15:34"><name pos:start="15:33" pos:end="15:34">vf</name></expr></argument>, <argument pos:start="15:37" pos:end="15:41"><expr pos:start="15:37" pos:end="15:41"><name pos:start="15:37" pos:end="15:41">codec</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><call pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:21">avio_open_dyn_buf</name><argument_list pos:start="19:22" pos:end="19:26">(<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:25">io</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:63">(<expr pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:13">codec</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:29">extradata_size</name></name> <operator pos:start="21:31" pos:end="21:31">&lt;</operator> <literal type="number" pos:start="21:33" pos:end="21:34">11</literal> <operator pos:start="21:36" pos:end="21:37">||</operator> <name pos:start="21:39" pos:end="21:57"><name pos:start="21:39" pos:end="21:43">codec</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:54">extradata</name><index pos:start="21:55" pos:end="21:57">[<expr pos:start="21:56" pos:end="21:56"><literal type="number" pos:start="21:56" pos:end="21:56">0</literal></expr>]</index></name> <operator pos:start="21:59" pos:end="21:60">!=</operator> <literal type="number" pos:start="21:62" pos:end="21:62">1</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:12">sps_size</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:44"><name pos:start="25:16" pos:end="25:22">AV_RB16</name><argument_list pos:start="25:23" pos:end="25:44">(<argument pos:start="25:24" pos:end="25:43"><expr pos:start="25:24" pos:end="25:43"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:43"><name pos:start="25:25" pos:end="25:29">codec</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:40">extradata</name><index pos:start="25:41" pos:end="25:43">[<expr pos:start="25:42" pos:end="25:42"><literal type="number" pos:start="25:42" pos:end="25:42">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:46">(<expr pos:start="27:9" pos:end="27:45"><literal type="number" pos:start="27:9" pos:end="27:12">11</literal> <operator pos:start="27:12" pos:end="27:12">+</operator> <name pos:start="27:14" pos:end="27:21">sps_size</name> <operator pos:start="27:23" pos:end="27:23">&gt;</operator> <name pos:start="27:25" pos:end="27:45"><name pos:start="27:25" pos:end="27:29">codec</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:45">extradata_size</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <goto pos:start="29:9" pos:end="29:18">goto <name pos:start="29:14" pos:end="29:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><call pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:13">avio_wb32</name><argument_list pos:start="31:14" pos:end="31:29">(<argument pos:start="31:15" pos:end="31:16"><expr pos:start="31:15" pos:end="31:16"><name pos:start="31:15" pos:end="31:16">io</name></expr></argument>, <argument pos:start="31:19" pos:end="31:28"><expr pos:start="31:19" pos:end="31:28"><literal type="number" pos:start="31:19" pos:end="31:28">0x00000001</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:51"><expr pos:start="33:5" pos:end="33:50"><call pos:start="33:5" pos:end="33:50"><name pos:start="33:5" pos:end="33:14">avio_write</name><argument_list pos:start="33:15" pos:end="33:50">(<argument pos:start="33:16" pos:end="33:17"><expr pos:start="33:16" pos:end="33:17"><name pos:start="33:16" pos:end="33:17">io</name></expr></argument>, <argument pos:start="33:20" pos:end="33:39"><expr pos:start="33:20" pos:end="33:39"><operator pos:start="33:20" pos:end="33:20">&amp;</operator><name pos:start="33:21" pos:end="33:39"><name pos:start="33:21" pos:end="33:25">codec</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:36">extradata</name><index pos:start="33:37" pos:end="33:39">[<expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:42" pos:end="33:49"><expr pos:start="33:42" pos:end="33:49"><name pos:start="33:42" pos:end="33:49">sps_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:56"><expr pos:start="35:5" pos:end="35:55"><name pos:start="35:5" pos:end="35:12">pps_size</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:55"><name pos:start="35:16" pos:end="35:22">AV_RB16</name><argument_list pos:start="35:23" pos:end="35:55">(<argument pos:start="35:24" pos:end="35:54"><expr pos:start="35:24" pos:end="35:54"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:54"><name pos:start="35:25" pos:end="35:29">codec</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:40">extradata</name><index pos:start="35:41" pos:end="35:54">[<expr pos:start="35:42" pos:end="35:53"><literal type="number" pos:start="35:42" pos:end="35:44">9</literal> <operator pos:start="35:44" pos:end="35:44">+</operator> <name pos:start="35:46" pos:end="35:53">sps_size</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:57">(<expr pos:start="37:9" pos:end="37:56"><literal type="number" pos:start="37:9" pos:end="37:12">11</literal> <operator pos:start="37:12" pos:end="37:12">+</operator> <name pos:start="37:14" pos:end="37:21">sps_size</name> <operator pos:start="37:23" pos:end="37:23">+</operator> <name pos:start="37:25" pos:end="37:32">pps_size</name> <operator pos:start="37:34" pos:end="37:34">&gt;</operator> <name pos:start="37:36" pos:end="37:56"><name pos:start="37:36" pos:end="37:40">codec</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:56">extradata_size</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><call pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:13">avio_wb32</name><argument_list pos:start="41:14" pos:end="41:29">(<argument pos:start="41:15" pos:end="41:16"><expr pos:start="41:15" pos:end="41:16"><name pos:start="41:15" pos:end="41:16">io</name></expr></argument>, <argument pos:start="41:19" pos:end="41:28"><expr pos:start="41:19" pos:end="41:28"><literal type="number" pos:start="41:19" pos:end="41:28">0x00000001</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:63"><expr pos:start="43:5" pos:end="43:62"><call pos:start="43:5" pos:end="43:62"><name pos:start="43:5" pos:end="43:14">avio_write</name><argument_list pos:start="43:15" pos:end="43:62">(<argument pos:start="43:16" pos:end="43:17"><expr pos:start="43:16" pos:end="43:17"><name pos:start="43:16" pos:end="43:17">io</name></expr></argument>, <argument pos:start="43:20" pos:end="43:51"><expr pos:start="43:20" pos:end="43:51"><operator pos:start="43:20" pos:end="43:20">&amp;</operator><name pos:start="43:21" pos:end="43:51"><name pos:start="43:21" pos:end="43:25">codec</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:36">extradata</name><index pos:start="43:37" pos:end="43:51">[<expr pos:start="43:38" pos:end="43:50"><literal type="number" pos:start="43:38" pos:end="43:41">11</literal> <operator pos:start="43:41" pos:end="43:41">+</operator> <name pos:start="43:43" pos:end="43:50">sps_size</name></expr>]</index></name></expr></argument>, <argument pos:start="43:54" pos:end="43:61"><expr pos:start="43:54" pos:end="43:61"><name pos:start="43:54" pos:end="43:61">pps_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:12"><expr pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:7">err</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <literal type="number" pos:start="45:11" pos:end="45:11">0</literal></expr>;</expr_stmt>



<label pos:start="49:1" pos:end="49:5"><name pos:start="49:1" pos:end="49:4">fail</name>:</label>

    <expr_stmt pos:start="51:5" pos:end="51:72"><expr pos:start="51:5" pos:end="51:71"><name pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:6">vf</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:26">codec_private_size</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <call pos:start="51:30" pos:end="51:71"><name pos:start="51:30" pos:end="51:47">avio_close_dyn_buf</name><argument_list pos:start="51:48" pos:end="51:71">(<argument pos:start="51:49" pos:end="51:50"><expr pos:start="51:49" pos:end="51:50"><name pos:start="51:49" pos:end="51:50">io</name></expr></argument>, <argument pos:start="51:53" pos:end="51:70"><expr pos:start="51:53" pos:end="51:70"><operator pos:start="51:53" pos:end="51:53">&amp;</operator><name pos:start="51:54" pos:end="51:70"><name pos:start="51:54" pos:end="51:55">vf</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:70">codec_private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:15">return <expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
