<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10892.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:13">BlockInfoList</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:30">qmp_query_block</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:39"><name pos:start="1:32" pos:end="1:36">Error</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:16">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BlockInfoList</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:23">head</name> <init pos:start="5:25" pos:end="5:30">= <expr pos:start="5:27" pos:end="5:30"><name pos:start="5:27" pos:end="5:30">NULL</name></expr></init></decl>, <decl pos:start="5:33" pos:end="5:48"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:33" pos:end="5:33">*</modifier><modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:40">p_next</name> <init pos:start="5:42" pos:end="5:48">= <expr pos:start="5:44" pos:end="5:48"><operator pos:start="5:44" pos:end="5:44">&amp;</operator><name pos:start="5:45" pos:end="5:48">head</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BlockBackend</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">blk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="37:5">for <control pos:start="13:9" pos:end="13:56">(<init pos:start="13:10" pos:end="13:30"><expr pos:start="13:10" pos:end="13:29"><name pos:start="13:10" pos:end="13:12">blk</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:29"><name pos:start="13:16" pos:end="13:23">blk_next</name><argument_list pos:start="13:24" pos:end="13:29">(<argument pos:start="13:25" pos:end="13:28"><expr pos:start="13:25" pos:end="13:28"><name pos:start="13:25" pos:end="13:28">NULL</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="13:32" pos:end="13:35"><expr pos:start="13:32" pos:end="13:34"><name pos:start="13:32" pos:end="13:34">blk</name></expr>;</condition> <incr pos:start="13:37" pos:end="13:55"><expr pos:start="13:37" pos:end="13:55"><name pos:start="13:37" pos:end="13:39">blk</name> <operator pos:start="13:41" pos:end="13:41">=</operator> <call pos:start="13:43" pos:end="13:55"><name pos:start="13:43" pos:end="13:50">blk_next</name><argument_list pos:start="13:51" pos:end="13:55">(<argument pos:start="13:52" pos:end="13:54"><expr pos:start="13:52" pos:end="13:54"><name pos:start="13:52" pos:end="13:54">blk</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="13:58" pos:end="37:5">{<block_content pos:start="15:9" pos:end="35:29">

        <decl_stmt pos:start="15:9" pos:end="15:55"><decl pos:start="15:9" pos:end="15:54"><type pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:21">BlockInfoList</name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:27">info</name> <init pos:start="15:29" pos:end="15:54">= <expr pos:start="15:31" pos:end="15:54"><call pos:start="15:31" pos:end="15:54"><name pos:start="15:31" pos:end="15:39">g_malloc0</name><argument_list pos:start="15:40" pos:end="15:54">(<argument pos:start="15:41" pos:end="15:53"><expr pos:start="15:41" pos:end="15:53"><sizeof pos:start="15:41" pos:end="15:53">sizeof<argument_list pos:start="15:47" pos:end="15:53">(<argument pos:start="15:48" pos:end="15:52"><expr pos:start="15:48" pos:end="15:52"><operator pos:start="15:48" pos:end="15:48">*</operator><name pos:start="15:49" pos:end="15:52">info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:55"><expr pos:start="17:9" pos:end="17:54"><call pos:start="17:9" pos:end="17:54"><name pos:start="17:9" pos:end="17:23">bdrv_query_info</name><argument_list pos:start="17:24" pos:end="17:54">(<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">blk</name></expr></argument>, <argument pos:start="17:30" pos:end="17:41"><expr pos:start="17:30" pos:end="17:41"><operator pos:start="17:30" pos:end="17:30">&amp;</operator><name pos:start="17:31" pos:end="17:41"><name pos:start="17:31" pos:end="17:34">info</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:41">value</name></name></expr></argument>, <argument pos:start="17:44" pos:end="17:53"><expr pos:start="17:44" pos:end="17:53"><operator pos:start="17:44" pos:end="17:44">&amp;</operator><name pos:start="17:45" pos:end="17:53">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:22">(<expr pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:21">local_err</name></expr>)</condition> <block pos:start="19:24" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:24">

            <expr_stmt pos:start="21:13" pos:end="21:45"><expr pos:start="21:13" pos:end="21:44"><call pos:start="21:13" pos:end="21:44"><name pos:start="21:13" pos:end="21:27">error_propagate</name><argument_list pos:start="21:28" pos:end="21:44">(<argument pos:start="21:29" pos:end="21:32"><expr pos:start="21:29" pos:end="21:32"><name pos:start="21:29" pos:end="21:32">errp</name></expr></argument>, <argument pos:start="21:35" pos:end="21:43"><expr pos:start="21:35" pos:end="21:43"><name pos:start="21:35" pos:end="21:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:25"><expr pos:start="23:13" pos:end="23:24"><call pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:18">g_free</name><argument_list pos:start="23:19" pos:end="23:24">(<argument pos:start="23:20" pos:end="23:23"><expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:42"><expr pos:start="25:13" pos:end="25:41"><call pos:start="25:13" pos:end="25:41"><name pos:start="25:13" pos:end="25:35">qapi_free_BlockInfoList</name><argument_list pos:start="25:36" pos:end="25:41">(<argument pos:start="25:37" pos:end="25:40"><expr pos:start="25:37" pos:end="25:40"><name pos:start="25:37" pos:end="25:40">head</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:24">return <expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:23"><expr pos:start="33:9" pos:end="33:22"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:15">p_next</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:22">info</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:14">p_next</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:28"><name pos:start="35:19" pos:end="35:22">info</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:28">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="41:5" pos:end="41:16">return <expr pos:start="41:12" pos:end="41:15"><name pos:start="41:12" pos:end="41:15">head</name></expr>;</return>

</block_content>}</block></function>
</unit>
