<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7930.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">net_socket_connect_init</name><parameter_list pos:start="1:35" pos:end="7:56">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:49">NetClientState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">peer</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:52"><decl pos:start="3:36" pos:end="3:52"><type pos:start="3:36" pos:end="3:52"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:45">char</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:52">model</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:51"><decl pos:start="5:36" pos:end="5:51"><type pos:start="5:36" pos:end="5:51"><specifier pos:start="5:36" pos:end="5:40">const</specifier> <name pos:start="5:42" pos:end="5:45">char</name> <modifier pos:start="5:47" pos:end="5:47">*</modifier></type><name pos:start="5:48" pos:end="5:51">name</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:55"><decl pos:start="7:36" pos:end="7:55"><type pos:start="7:36" pos:end="7:55"><specifier pos:start="7:36" pos:end="7:40">const</specifier> <name pos:start="7:42" pos:end="7:45">char</name> <modifier pos:start="7:47" pos:end="7:47">*</modifier></type><name pos:start="7:48" pos:end="7:55">host_str</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="57:1">{<block_content pos:start="11:5" pos:end="55:14">

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:59"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:23">socket_connect_data</name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:26">c</name> <init pos:start="11:28" pos:end="11:59">= <expr pos:start="11:30" pos:end="11:59"><call pos:start="11:30" pos:end="11:59"><name pos:start="11:30" pos:end="11:35">g_new0</name><argument_list pos:start="11:36" pos:end="11:59">(<argument pos:start="11:37" pos:end="11:55"><expr pos:start="11:37" pos:end="11:55"><name pos:start="11:37" pos:end="11:55">socket_connect_data</name></expr></argument>, <argument pos:start="11:58" pos:end="11:58"><expr pos:start="11:58" pos:end="11:58"><literal type="number" pos:start="11:58" pos:end="11:58">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">fd</name> <init pos:start="13:12" pos:end="13:15">= <expr pos:start="13:14" pos:end="13:15"><operator pos:start="13:14" pos:end="13:14">-</operator><literal type="number" pos:start="13:15" pos:end="13:15">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:22">local_error</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:5">c</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:11">peer</name></name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:18">peer</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:5">c</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">model</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:23">g_strdup</name><argument_list pos:start="21:24" pos:end="21:30">(<argument pos:start="21:25" pos:end="21:29"><expr pos:start="21:25" pos:end="21:29"><name pos:start="21:25" pos:end="21:29">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:5">c</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:11">name</name></name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:28"><name pos:start="23:15" pos:end="23:22">g_strdup</name><argument_list pos:start="23:23" pos:end="23:28">(<argument pos:start="23:24" pos:end="23:27"><expr pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:27">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:52"><expr pos:start="25:5" pos:end="25:51"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:5">c</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:12">saddr</name></name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:51"><name pos:start="25:16" pos:end="25:27">socket_parse</name><argument_list pos:start="25:28" pos:end="25:51">(<argument pos:start="25:29" pos:end="25:36"><expr pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:36">host_str</name></expr></argument>, <argument pos:start="25:39" pos:end="25:50"><expr pos:start="25:39" pos:end="25:50"><operator pos:start="25:39" pos:end="25:39">&amp;</operator><name pos:start="25:40" pos:end="25:50">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:25">(<expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:9">c</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:16">saddr</name></name> <operator pos:start="27:18" pos:end="27:19">==</operator> <name pos:start="27:21" pos:end="27:24">NULL</name></expr>)</condition> <block pos:start="27:27" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:17">

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:73"><expr pos:start="35:5" pos:end="35:72"><name pos:start="35:5" pos:end="35:6">fd</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:72"><name pos:start="35:10" pos:end="35:23">socket_connect</name><argument_list pos:start="35:24" pos:end="35:72">(<argument pos:start="35:25" pos:end="35:32"><expr pos:start="35:25" pos:end="35:32"><name pos:start="35:25" pos:end="35:32"><name pos:start="35:25" pos:end="35:25">c</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:32">saddr</name></name></expr></argument>, <argument pos:start="35:35" pos:end="35:54"><expr pos:start="35:35" pos:end="35:54"><name pos:start="35:35" pos:end="35:54">net_socket_connected</name></expr></argument>, <argument pos:start="35:57" pos:end="35:57"><expr pos:start="35:57" pos:end="35:57"><name pos:start="35:57" pos:end="35:57">c</name></expr></argument>, <argument pos:start="35:60" pos:end="35:71"><expr pos:start="35:60" pos:end="35:71"><operator pos:start="35:60" pos:end="35:60">&amp;</operator><name pos:start="35:61" pos:end="35:71">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:15">(<expr pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:10">fd</name> <operator pos:start="37:12" pos:end="37:12">&lt;</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>)</condition> <block pos:start="37:17" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:17">

        <goto pos:start="39:9" pos:end="39:17">goto <name pos:start="39:14" pos:end="39:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>



<label pos:start="49:1" pos:end="49:4"><name pos:start="49:1" pos:end="49:3">err</name>:</label>

    <expr_stmt pos:start="51:5" pos:end="51:34"><expr pos:start="51:5" pos:end="51:33"><call pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:20">error_report_err</name><argument_list pos:start="51:21" pos:end="51:33">(<argument pos:start="51:22" pos:end="51:32"><expr pos:start="51:22" pos:end="51:32"><name pos:start="51:22" pos:end="51:32">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><call pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:28">socket_connect_data_free</name><argument_list pos:start="53:29" pos:end="53:31">(<argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><name pos:start="53:30" pos:end="53:30">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:14">return <expr pos:start="55:12" pos:end="55:13"><operator pos:start="55:12" pos:end="55:12">-</operator><literal type="number" pos:start="55:13" pos:end="55:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
