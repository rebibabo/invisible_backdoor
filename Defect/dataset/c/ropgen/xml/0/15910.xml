<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15910.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">virt_set_gic_version</name><parameter_list pos:start="1:33" pos:end="1:78">(<parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:39">Object</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">obj</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">value</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:70">Error</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier><modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">VirtMachineState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">vms</name> <init pos:start="5:27" pos:end="5:45">= <expr pos:start="5:29" pos:end="5:45"><call pos:start="5:29" pos:end="5:45"><name pos:start="5:29" pos:end="5:40">VIRT_MACHINE</name><argument_list pos:start="5:41" pos:end="5:45">(<argument pos:start="5:42" pos:end="5:44"><expr pos:start="5:42" pos:end="5:44"><name pos:start="5:42" pos:end="5:44">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="29:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:28">(<expr pos:start="9:9" pos:end="9:27"><operator pos:start="9:9" pos:end="9:9">!</operator><call pos:start="9:10" pos:end="9:27"><name pos:start="9:10" pos:end="9:15">strcmp</name><argument_list pos:start="9:16" pos:end="9:27">(<argument pos:start="9:17" pos:end="9:21"><expr pos:start="9:17" pos:end="9:21"><name pos:start="9:17" pos:end="9:21">value</name></expr></argument>, <argument pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><literal type="string" pos:start="9:24" pos:end="9:26">"3"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:30" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:29">

        <expr_stmt pos:start="11:9" pos:end="11:29"><expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:11">vms</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:24">gic_version</name></name> <operator pos:start="11:26" pos:end="11:26">=</operator> <literal type="number" pos:start="11:28" pos:end="11:28">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="13:7" pos:end="17:5">else if <condition pos:start="13:15" pos:end="13:35">(<expr pos:start="13:16" pos:end="13:34"><operator pos:start="13:16" pos:end="13:16">!</operator><call pos:start="13:17" pos:end="13:34"><name pos:start="13:17" pos:end="13:22">strcmp</name><argument_list pos:start="13:23" pos:end="13:34">(<argument pos:start="13:24" pos:end="13:28"><expr pos:start="13:24" pos:end="13:28"><name pos:start="13:24" pos:end="13:28">value</name></expr></argument>, <argument pos:start="13:31" pos:end="13:33"><expr pos:start="13:31" pos:end="13:33"><literal type="string" pos:start="13:31" pos:end="13:33">"2"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:37" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:29">

        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:11">vms</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:24">gic_version</name></name> <operator pos:start="15:26" pos:end="15:26">=</operator> <literal type="number" pos:start="15:28" pos:end="15:28">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="21:5">else if <condition pos:start="17:15" pos:end="17:38">(<expr pos:start="17:16" pos:end="17:37"><operator pos:start="17:16" pos:end="17:16">!</operator><call pos:start="17:17" pos:end="17:37"><name pos:start="17:17" pos:end="17:22">strcmp</name><argument_list pos:start="17:23" pos:end="17:37">(<argument pos:start="17:24" pos:end="17:28"><expr pos:start="17:24" pos:end="17:28"><name pos:start="17:24" pos:end="17:28">value</name></expr></argument>, <argument pos:start="17:31" pos:end="17:36"><expr pos:start="17:31" pos:end="17:36"><literal type="string" pos:start="17:31" pos:end="17:36">"host"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:40" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:29">

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:11">vms</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:24">gic_version</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <literal type="number" pos:start="19:28" pos:end="19:28">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="19:31" pos:end="19:52">/* Will probe later */</comment>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="29:5">else <block pos:start="21:12" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:16">

        <expr_stmt pos:start="23:9" pos:end="23:57"><expr pos:start="23:9" pos:end="23:56"><call pos:start="23:9" pos:end="23:56"><name pos:start="23:9" pos:end="23:20">error_report</name><argument_list pos:start="23:21" pos:end="23:56">(<argument pos:start="23:22" pos:end="23:55"><expr pos:start="23:22" pos:end="23:55"><literal type="string" pos:start="23:22" pos:end="23:55">"Invalid gic-version option value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:69"><expr pos:start="25:9" pos:end="25:68"><call pos:start="25:9" pos:end="25:68"><name pos:start="25:9" pos:end="25:20">error_printf</name><argument_list pos:start="25:21" pos:end="25:68">(<argument pos:start="25:22" pos:end="25:67"><expr pos:start="25:22" pos:end="25:67"><literal type="string" pos:start="25:22" pos:end="25:67">"Allowed gic-version values are: 3, 2, host\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><call pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:12">exit</name><argument_list pos:start="27:13" pos:end="27:15">(<argument pos:start="27:14" pos:end="27:14"><expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
