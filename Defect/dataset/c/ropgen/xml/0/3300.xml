<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3300.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:36">gen_arith3</name> <parameter_list pos:start="1:38" pos:end="5:61">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:42">void</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">helper</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:44"><decl pos:start="3:39" pos:end="3:44"><type pos:start="3:39" pos:end="3:44"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:44">ra</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:52"><decl pos:start="3:47" pos:end="3:52"><type pos:start="3:47" pos:end="3:52"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:52">rb</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:60"><decl pos:start="3:55" pos:end="3:60"><type pos:start="3:55" pos:end="3:60"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:60">rc</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:47"><decl pos:start="5:39" pos:end="5:47"><type pos:start="5:39" pos:end="5:47"><name pos:start="5:39" pos:end="5:41">int</name></type> <name pos:start="5:43" pos:end="5:47">islit</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:60"><decl pos:start="5:50" pos:end="5:60"><type pos:start="5:50" pos:end="5:60"><name pos:start="5:50" pos:end="5:56">uint8_t</name></type> <name pos:start="5:58" pos:end="5:60">lit</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="49:1">{<block_content pos:start="9:5" pos:end="47:5">

    <if_stmt pos:start="9:5" pos:end="11:15"><if pos:start="9:5" pos:end="11:15">if <condition pos:start="9:8" pos:end="9:27">(<expr pos:start="9:9" pos:end="9:26"><call pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:16">unlikely</name><argument_list pos:start="9:17" pos:end="9:26">(<argument pos:start="9:18" pos:end="9:25"><expr pos:start="9:18" pos:end="9:25"><name pos:start="9:18" pos:end="9:19">rc</name> <operator pos:start="9:21" pos:end="9:22">==</operator> <literal type="number" pos:start="9:24" pos:end="9:25">31</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:15"><block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="47:5"><if pos:start="15:5" pos:end="29:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:10">ra</name> <operator pos:start="15:12" pos:end="15:13">!=</operator> <literal type="number" pos:start="15:15" pos:end="15:16">31</literal></expr>)</condition> <block pos:start="15:19" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:75">

        <if_stmt pos:start="17:9" pos:end="27:75"><if pos:start="17:9" pos:end="25:9">if <condition pos:start="17:12" pos:end="17:18">(<expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:17">islit</name></expr>)</condition> <block pos:start="17:20" pos:end="25:9">{<block_content pos:start="19:13" pos:end="23:31">

            <decl_stmt pos:start="19:13" pos:end="19:42"><decl pos:start="19:13" pos:end="19:41"><type pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">TCGv</name></type> <name pos:start="19:18" pos:end="19:20">tmp</name> <init pos:start="19:22" pos:end="19:41">= <expr pos:start="19:24" pos:end="19:41"><call pos:start="19:24" pos:end="19:41"><name pos:start="19:24" pos:end="19:36">tcg_const_i64</name><argument_list pos:start="19:37" pos:end="19:41">(<argument pos:start="19:38" pos:end="19:40"><expr pos:start="19:38" pos:end="19:40"><name pos:start="19:38" pos:end="19:40">lit</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:68"><expr pos:start="21:13" pos:end="21:67"><call pos:start="21:13" pos:end="21:67"><name pos:start="21:13" pos:end="21:30">tcg_gen_helper_1_2</name><argument_list pos:start="21:31" pos:end="21:67">(<argument pos:start="21:32" pos:end="21:37"><expr pos:start="21:32" pos:end="21:37"><name pos:start="21:32" pos:end="21:37">helper</name></expr></argument>, <argument pos:start="21:40" pos:end="21:49"><expr pos:start="21:40" pos:end="21:49"><name pos:start="21:40" pos:end="21:49"><name pos:start="21:40" pos:end="21:45">cpu_ir</name><index pos:start="21:46" pos:end="21:49">[<expr pos:start="21:47" pos:end="21:48"><name pos:start="21:47" pos:end="21:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="21:52" pos:end="21:61"><expr pos:start="21:52" pos:end="21:61"><name pos:start="21:52" pos:end="21:61"><name pos:start="21:52" pos:end="21:57">cpu_ir</name><index pos:start="21:58" pos:end="21:61">[<expr pos:start="21:59" pos:end="21:60"><name pos:start="21:59" pos:end="21:60">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="21:64" pos:end="21:66"><expr pos:start="21:64" pos:end="21:66"><name pos:start="21:64" pos:end="21:66">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:31"><expr pos:start="23:13" pos:end="23:30"><call pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:25">tcg_temp_free</name><argument_list pos:start="23:26" pos:end="23:30">(<argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><name pos:start="23:27" pos:end="23:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="27:75">else<block type="pseudo" pos:start="27:13" pos:end="27:75"><block_content pos:start="27:13" pos:end="27:75">

            <expr_stmt pos:start="27:13" pos:end="27:75"><expr pos:start="27:13" pos:end="27:74"><call pos:start="27:13" pos:end="27:74"><name pos:start="27:13" pos:end="27:30">tcg_gen_helper_1_2</name><argument_list pos:start="27:31" pos:end="27:74">(<argument pos:start="27:32" pos:end="27:37"><expr pos:start="27:32" pos:end="27:37"><name pos:start="27:32" pos:end="27:37">helper</name></expr></argument>, <argument pos:start="27:40" pos:end="27:49"><expr pos:start="27:40" pos:end="27:49"><name pos:start="27:40" pos:end="27:49"><name pos:start="27:40" pos:end="27:45">cpu_ir</name><index pos:start="27:46" pos:end="27:49">[<expr pos:start="27:47" pos:end="27:48"><name pos:start="27:47" pos:end="27:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="27:52" pos:end="27:61"><expr pos:start="27:52" pos:end="27:61"><name pos:start="27:52" pos:end="27:61"><name pos:start="27:52" pos:end="27:57">cpu_ir</name><index pos:start="27:58" pos:end="27:61">[<expr pos:start="27:59" pos:end="27:60"><name pos:start="27:59" pos:end="27:60">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="27:64" pos:end="27:73"><expr pos:start="27:64" pos:end="27:73"><name pos:start="27:64" pos:end="27:73"><name pos:start="27:64" pos:end="27:69">cpu_ir</name><index pos:start="27:70" pos:end="27:73">[<expr pos:start="27:71" pos:end="27:72"><name pos:start="27:71" pos:end="27:72">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="47:5">else <block pos:start="29:12" pos:end="47:5">{<block_content pos:start="31:9" pos:end="45:28">

        <decl_stmt pos:start="31:9" pos:end="31:37"><decl pos:start="31:9" pos:end="31:36"><type pos:start="31:9" pos:end="31:12"><name pos:start="31:9" pos:end="31:12">TCGv</name></type> <name pos:start="31:14" pos:end="31:17">tmp1</name> <init pos:start="31:19" pos:end="31:36">= <expr pos:start="31:21" pos:end="31:36"><call pos:start="31:21" pos:end="31:36"><name pos:start="31:21" pos:end="31:33">tcg_const_i64</name><argument_list pos:start="31:34" pos:end="31:36">(<argument pos:start="31:35" pos:end="31:35"><expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="33:9" pos:end="43:69"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:17">islit</name></expr>)</condition> <block pos:start="33:20" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:32">

            <decl_stmt pos:start="35:13" pos:end="35:43"><decl pos:start="35:13" pos:end="35:42"><type pos:start="35:13" pos:end="35:16"><name pos:start="35:13" pos:end="35:16">TCGv</name></type> <name pos:start="35:18" pos:end="35:21">tmp2</name> <init pos:start="35:23" pos:end="35:42">= <expr pos:start="35:25" pos:end="35:42"><call pos:start="35:25" pos:end="35:42"><name pos:start="35:25" pos:end="35:37">tcg_const_i64</name><argument_list pos:start="35:38" pos:end="35:42">(<argument pos:start="35:39" pos:end="35:41"><expr pos:start="35:39" pos:end="35:41"><name pos:start="35:39" pos:end="35:41">lit</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:63"><expr pos:start="37:13" pos:end="37:62"><call pos:start="37:13" pos:end="37:62"><name pos:start="37:13" pos:end="37:30">tcg_gen_helper_1_2</name><argument_list pos:start="37:31" pos:end="37:62">(<argument pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37">helper</name></expr></argument>, <argument pos:start="37:40" pos:end="37:49"><expr pos:start="37:40" pos:end="37:49"><name pos:start="37:40" pos:end="37:49"><name pos:start="37:40" pos:end="37:45">cpu_ir</name><index pos:start="37:46" pos:end="37:49">[<expr pos:start="37:47" pos:end="37:48"><name pos:start="37:47" pos:end="37:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="37:52" pos:end="37:55"><expr pos:start="37:52" pos:end="37:55"><name pos:start="37:52" pos:end="37:55">tmp1</name></expr></argument>, <argument pos:start="37:58" pos:end="37:61"><expr pos:start="37:58" pos:end="37:61"><name pos:start="37:58" pos:end="37:61">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:32"><expr pos:start="39:13" pos:end="39:31"><call pos:start="39:13" pos:end="39:31"><name pos:start="39:13" pos:end="39:25">tcg_temp_free</name><argument_list pos:start="39:26" pos:end="39:31">(<argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><name pos:start="39:27" pos:end="39:30">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="43:69">else<block type="pseudo" pos:start="43:13" pos:end="43:69"><block_content pos:start="43:13" pos:end="43:69">

            <expr_stmt pos:start="43:13" pos:end="43:69"><expr pos:start="43:13" pos:end="43:68"><call pos:start="43:13" pos:end="43:68"><name pos:start="43:13" pos:end="43:30">tcg_gen_helper_1_2</name><argument_list pos:start="43:31" pos:end="43:68">(<argument pos:start="43:32" pos:end="43:37"><expr pos:start="43:32" pos:end="43:37"><name pos:start="43:32" pos:end="43:37">helper</name></expr></argument>, <argument pos:start="43:40" pos:end="43:49"><expr pos:start="43:40" pos:end="43:49"><name pos:start="43:40" pos:end="43:49"><name pos:start="43:40" pos:end="43:45">cpu_ir</name><index pos:start="43:46" pos:end="43:49">[<expr pos:start="43:47" pos:end="43:48"><name pos:start="43:47" pos:end="43:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="43:52" pos:end="43:55"><expr pos:start="43:52" pos:end="43:55"><name pos:start="43:52" pos:end="43:55">tmp1</name></expr></argument>, <argument pos:start="43:58" pos:end="43:67"><expr pos:start="43:58" pos:end="43:67"><name pos:start="43:58" pos:end="43:67"><name pos:start="43:58" pos:end="43:63">cpu_ir</name><index pos:start="43:64" pos:end="43:67">[<expr pos:start="43:65" pos:end="43:66"><name pos:start="43:65" pos:end="43:66">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><call pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:21">tcg_temp_free</name><argument_list pos:start="45:22" pos:end="45:27">(<argument pos:start="45:23" pos:end="45:26"><expr pos:start="45:23" pos:end="45:26"><name pos:start="45:23" pos:end="45:26">tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
