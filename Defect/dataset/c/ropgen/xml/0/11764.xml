<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11764.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">rv10_decode_packet</name><parameter_list pos:start="1:30" pos:end="3:54">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, 

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:34">UINT8</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">buf</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:53"><decl pos:start="3:42" pos:end="3:53"><type pos:start="3:42" pos:end="3:53"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="151:1">{<block_content pos:start="7:5" pos:end="149:20">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:19">mb_count</name></decl>, <decl pos:start="9:22" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:27">mb_pos</name></decl>, <decl pos:start="9:30" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:33">left</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><call pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:17">init_get_bits</name><argument_list pos:start="13:18" pos:end="13:40">(<argument pos:start="13:19" pos:end="13:24"><expr pos:start="13:19" pos:end="13:24"><operator pos:start="13:19" pos:end="13:19">&amp;</operator><name pos:start="13:20" pos:end="13:24"><name pos:start="13:20" pos:end="13:20">s</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:24">gb</name></name></expr></argument>, <argument pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:29">buf</name></expr></argument>, <argument pos:start="13:32" pos:end="13:39"><expr pos:start="13:32" pos:end="13:39"><name pos:start="13:32" pos:end="13:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:12">mb_count</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:44"><name pos:start="17:16" pos:end="17:41">rv10_decode_picture_header</name><argument_list pos:start="17:42" pos:end="17:44">(<argument pos:start="17:43" pos:end="17:43"><expr pos:start="17:43" pos:end="17:43"><name pos:start="17:43" pos:end="17:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:16">mb_count</name> <operator pos:start="19:18" pos:end="19:18">&lt;</operator> <literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>)</condition> <block pos:start="19:23" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:42"><expr pos:start="21:9" pos:end="21:41"><call pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="21:41">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:40"><expr pos:start="21:25" pos:end="21:40"><literal type="string" pos:start="21:25" pos:end="21:40">"HEADER ERROR\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="31:32">(<expr pos:start="29:9" pos:end="31:31"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">mb_x</name></name> <operator pos:start="29:17" pos:end="29:18">&gt;=</operator> <name pos:start="29:20" pos:end="29:30"><name pos:start="29:20" pos:end="29:20">s</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:30">mb_width</name></name> <operator pos:start="29:32" pos:end="29:33">||</operator>

        <name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:15">mb_y</name></name> <operator pos:start="31:17" pos:end="31:18">&gt;=</operator> <name pos:start="31:20" pos:end="31:31"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:31">mb_height</name></name></expr>)</condition> <block pos:start="31:34" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:63"><expr pos:start="33:9" pos:end="33:62"><call pos:start="33:9" pos:end="33:62"><name pos:start="33:9" pos:end="33:15">fprintf</name><argument_list pos:start="33:16" pos:end="33:62">(<argument pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">stderr</name></expr></argument>, <argument pos:start="33:25" pos:end="33:43"><expr pos:start="33:25" pos:end="33:43"><literal type="string" pos:start="33:25" pos:end="33:43">"POS ERROR %d %d\n"</literal></expr></argument>, <argument pos:start="33:46" pos:end="33:52"><expr pos:start="33:46" pos:end="33:52"><name pos:start="33:46" pos:end="33:52"><name pos:start="33:46" pos:end="33:46">s</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:52">mb_x</name></name></expr></argument>, <argument pos:start="33:55" pos:end="33:61"><expr pos:start="33:55" pos:end="33:61"><name pos:start="33:55" pos:end="33:61"><name pos:start="33:55" pos:end="33:55">s</name><operator pos:start="33:56" pos:end="33:57">-&gt;</operator><name pos:start="33:58" pos:end="33:61">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:10">mb_pos</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:20"><name pos:start="39:14" pos:end="39:14">s</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:20">mb_y</name></name> <operator pos:start="39:22" pos:end="39:22">*</operator> <name pos:start="39:24" pos:end="39:34"><name pos:start="39:24" pos:end="39:24">s</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:34">mb_width</name></name> <operator pos:start="39:36" pos:end="39:36">+</operator> <name pos:start="39:38" pos:end="39:44"><name pos:start="39:38" pos:end="39:38">s</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:44">mb_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:8">left</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <name pos:start="41:12" pos:end="41:22"><name pos:start="41:12" pos:end="41:12">s</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:22">mb_width</name></name> <operator pos:start="41:24" pos:end="41:24">*</operator> <name pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:26">s</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:37">mb_height</name></name> <operator pos:start="41:39" pos:end="41:39">-</operator> <name pos:start="41:41" pos:end="41:46">mb_pos</name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:16">mb_count</name> <operator pos:start="43:18" pos:end="43:18">&gt;</operator> <name pos:start="43:20" pos:end="43:23">left</name></expr>)</condition> <block pos:start="43:26" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><call pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:15">fprintf</name><argument_list pos:start="45:16" pos:end="45:40">(<argument pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22">stderr</name></expr></argument>, <argument pos:start="45:25" pos:end="45:39"><expr pos:start="45:25" pos:end="45:39"><literal type="string" pos:start="45:25" pos:end="45:39">"COUNT ERROR\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="64:0"><if pos:start="53:5" pos:end="64:0">if <condition pos:start="53:8" pos:end="53:37">(<expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:15">mb_x</name></name> <operator pos:start="53:17" pos:end="53:18">==</operator> <literal type="number" pos:start="53:20" pos:end="53:20">0</literal> <operator pos:start="53:22" pos:end="53:23">&amp;&amp;</operator> <name pos:start="53:25" pos:end="53:31"><name pos:start="53:25" pos:end="53:25">s</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:31">mb_y</name></name> <operator pos:start="53:33" pos:end="53:34">==</operator> <literal type="number" pos:start="53:36" pos:end="53:36">0</literal></expr>)</condition> <block pos:start="53:39" pos:end="64:0">{<block_content pos:start="55:9" pos:end="57:22">

        <if_stmt pos:start="55:9" pos:end="57:22"><if pos:start="55:9" pos:end="57:22">if<condition pos:start="55:11" pos:end="55:41">(<expr pos:start="55:12" pos:end="55:40"><call pos:start="55:12" pos:end="55:36"><name pos:start="55:12" pos:end="55:26">MPV_frame_start</name><argument_list pos:start="55:27" pos:end="55:36">(<argument pos:start="55:28" pos:end="55:28"><expr pos:start="55:28" pos:end="55:28"><name pos:start="55:28" pos:end="55:28">s</name></expr></argument>, <argument pos:start="55:31" pos:end="55:35"><expr pos:start="55:31" pos:end="55:35"><name pos:start="55:31" pos:end="55:35">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="55:38" pos:end="55:38">&lt;</operator> <literal type="number" pos:start="55:40" pos:end="55:40">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:22"><block_content pos:start="57:13" pos:end="57:22">

            <return pos:start="57:13" pos:end="57:22">return <expr pos:start="57:20" pos:end="57:21"><operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="63:1" pos:end="63:12">#<cpp:directive pos:start="63:2" pos:end="63:6">ifdef</cpp:directive> <name pos:start="63:8" pos:end="63:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="65:5" pos:end="68:0"><expr pos:start="65:5" pos:end="65:36"><call pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:10">printf</name><argument_list pos:start="65:11" pos:end="65:36">(<argument pos:start="65:12" pos:end="65:24"><expr pos:start="65:12" pos:end="65:24"><literal type="string" pos:start="65:12" pos:end="65:24">"qscale=%d\n"</literal></expr></argument>, <argument pos:start="65:27" pos:end="65:35"><expr pos:start="65:27" pos:end="65:35"><name pos:start="65:27" pos:end="65:35"><name pos:start="65:27" pos:end="65:27">s</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:35">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="71:5" pos:end="71:37">/* default quantization values */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:22"><expr pos:start="73:5" pos:end="73:21"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:17">y_dc_scale</name></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <literal type="number" pos:start="73:21" pos:end="73:21">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:22"><expr pos:start="75:5" pos:end="75:21"><name pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:17">c_dc_scale</name></name> <operator pos:start="75:19" pos:end="75:19">=</operator> <literal type="number" pos:start="75:21" pos:end="75:21">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:34"><expr pos:start="77:5" pos:end="77:33"><name pos:start="77:5" pos:end="77:29"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:26">rv10_first_dc_coded</name><index pos:start="77:27" pos:end="77:29">[<expr pos:start="77:28" pos:end="77:28"><literal type="number" pos:start="77:28" pos:end="77:28">0</literal></expr>]</index></name> <operator pos:start="77:31" pos:end="77:31">=</operator> <literal type="number" pos:start="77:33" pos:end="77:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:34"><expr pos:start="79:5" pos:end="79:33"><name pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:26">rv10_first_dc_coded</name><index pos:start="79:27" pos:end="79:29">[<expr pos:start="79:28" pos:end="79:28"><literal type="number" pos:start="79:28" pos:end="79:28">1</literal></expr>]</index></name> <operator pos:start="79:31" pos:end="79:31">=</operator> <literal type="number" pos:start="79:33" pos:end="79:33">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:34"><expr pos:start="81:5" pos:end="81:33"><name pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:26">rv10_first_dc_coded</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><literal type="number" pos:start="81:28" pos:end="81:28">2</literal></expr>]</index></name> <operator pos:start="81:31" pos:end="81:31">=</operator> <literal type="number" pos:start="81:33" pos:end="81:33">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="85:41"><if pos:start="85:5" pos:end="85:41">if<condition pos:start="85:7" pos:end="85:18">(<expr pos:start="85:8" pos:end="85:17"><name pos:start="85:8" pos:end="85:14"><name pos:start="85:8" pos:end="85:8">s</name><operator pos:start="85:9" pos:end="85:10">-&gt;</operator><name pos:start="85:11" pos:end="85:14">mb_y</name></name><operator pos:start="85:15" pos:end="85:16">==</operator><literal type="number" pos:start="85:17" pos:end="85:17">0</literal></expr>)</condition><block type="pseudo" pos:start="85:20" pos:end="85:41"><block_content pos:start="85:20" pos:end="85:41"> <expr_stmt pos:start="85:20" pos:end="85:41"><expr pos:start="85:20" pos:end="85:40"><name pos:start="85:20" pos:end="85:38"><name pos:start="85:20" pos:end="85:20">s</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:38">first_slice_line</name></name><operator pos:start="85:39" pos:end="85:39">=</operator><literal type="number" pos:start="85:40" pos:end="85:40">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

    <expr_stmt pos:start="89:5" pos:end="95:40"><expr pos:start="89:5" pos:end="95:39"><name pos:start="89:5" pos:end="89:20"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:17">block_wrap</name><index pos:start="89:18" pos:end="89:20">[<expr pos:start="89:19" pos:end="89:19"><literal type="number" pos:start="89:19" pos:end="89:19">0</literal></expr>]</index></name><operator pos:start="89:21" pos:end="89:21">=</operator>

    <name pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:17">block_wrap</name><index pos:start="91:18" pos:end="91:20">[<expr pos:start="91:19" pos:end="91:19"><literal type="number" pos:start="91:19" pos:end="91:19">1</literal></expr>]</index></name><operator pos:start="91:21" pos:end="91:21">=</operator>

    <name pos:start="93:5" pos:end="93:20"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:17">block_wrap</name><index pos:start="93:18" pos:end="93:20">[<expr pos:start="93:19" pos:end="93:19"><literal type="number" pos:start="93:19" pos:end="93:19">2</literal></expr>]</index></name><operator pos:start="93:21" pos:end="93:21">=</operator>

    <name pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:17">block_wrap</name><index pos:start="95:18" pos:end="95:20">[<expr pos:start="95:19" pos:end="95:19"><literal type="number" pos:start="95:19" pos:end="95:19">3</literal></expr>]</index></name><operator pos:start="95:21" pos:end="95:21">=</operator> <name pos:start="95:23" pos:end="95:33"><name pos:start="95:23" pos:end="95:23">s</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:33">mb_width</name></name><operator pos:start="95:34" pos:end="95:34">*</operator><literal type="number" pos:start="95:35" pos:end="95:37">2</literal> <operator pos:start="95:37" pos:end="95:37">+</operator> <literal type="number" pos:start="95:39" pos:end="95:39">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="99:38"><expr pos:start="97:5" pos:end="99:37"><name pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:17">block_wrap</name><index pos:start="97:18" pos:end="97:20">[<expr pos:start="97:19" pos:end="97:19"><literal type="number" pos:start="97:19" pos:end="97:19">4</literal></expr>]</index></name><operator pos:start="97:21" pos:end="97:21">=</operator>

    <name pos:start="99:5" pos:end="99:20"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:17">block_wrap</name><index pos:start="99:18" pos:end="99:20">[<expr pos:start="99:19" pos:end="99:19"><literal type="number" pos:start="99:19" pos:end="99:19">5</literal></expr>]</index></name><operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:33"><name pos:start="99:23" pos:end="99:23">s</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:33">mb_width</name></name> <operator pos:start="99:35" pos:end="99:35">+</operator> <literal type="number" pos:start="99:37" pos:end="99:37">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><call pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:23">ff_init_block_index</name><argument_list pos:start="101:24" pos:end="101:26">(<argument pos:start="101:25" pos:end="101:25"><expr pos:start="101:25" pos:end="101:25"><name pos:start="101:25" pos:end="101:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="103:5" pos:end="103:32">/* decode each macroblock */</comment>

    <for pos:start="105:5" pos:end="145:5">for<control pos:start="105:8" pos:end="105:27">(<init pos:start="105:9" pos:end="105:12"><expr pos:start="105:9" pos:end="105:11"><name pos:start="105:9" pos:end="105:9">i</name><operator pos:start="105:10" pos:end="105:10">=</operator><literal type="number" pos:start="105:11" pos:end="105:11">0</literal></expr>;</init><condition pos:start="105:13" pos:end="105:23"><expr pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:13">i</name><operator pos:start="105:14" pos:end="105:14">&lt;</operator><name pos:start="105:15" pos:end="105:22">mb_count</name></expr>;</condition><incr pos:start="105:24" pos:end="105:26"><expr pos:start="105:24" pos:end="105:26"><name pos:start="105:24" pos:end="105:24">i</name><operator pos:start="105:25" pos:end="105:26">++</operator></expr></incr>)</control> <block pos:start="105:29" pos:end="145:5">{<block_content pos:start="107:9" pos:end="143:9">

        <expr_stmt pos:start="107:9" pos:end="110:0"><expr pos:start="107:9" pos:end="107:32"><call pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:29">ff_update_block_index</name><argument_list pos:start="107:30" pos:end="107:32">(<argument pos:start="107:31" pos:end="107:31"><expr pos:start="107:31" pos:end="107:31"><name pos:start="107:31" pos:end="107:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="109:1" pos:end="109:12">#<cpp:directive pos:start="109:2" pos:end="109:6">ifdef</cpp:directive> <name pos:start="109:8" pos:end="109:12">DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="111:9" pos:end="114:0"><expr pos:start="111:9" pos:end="111:52"><call pos:start="111:9" pos:end="111:52"><name pos:start="111:9" pos:end="111:14">printf</name><argument_list pos:start="111:15" pos:end="111:52">(<argument pos:start="111:16" pos:end="111:33"><expr pos:start="111:16" pos:end="111:33"><literal type="string" pos:start="111:16" pos:end="111:33">"**mb x=%d y=%d\n"</literal></expr></argument>, <argument pos:start="111:36" pos:end="111:42"><expr pos:start="111:36" pos:end="111:42"><name pos:start="111:36" pos:end="111:42"><name pos:start="111:36" pos:end="111:36">s</name><operator pos:start="111:37" pos:end="111:38">-&gt;</operator><name pos:start="111:39" pos:end="111:42">mb_x</name></name></expr></argument>, <argument pos:start="111:45" pos:end="111:51"><expr pos:start="111:45" pos:end="111:51"><name pos:start="111:45" pos:end="111:51"><name pos:start="111:45" pos:end="111:45">s</name><operator pos:start="111:46" pos:end="111:47">-&gt;</operator><name pos:start="111:48" pos:end="111:51">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>

        

	<expr_stmt pos:start="117:9" pos:end="117:41"><expr pos:start="117:9" pos:end="117:40"><call pos:start="117:9" pos:end="117:40"><name pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:14">dsp</name><operator pos:start="117:15" pos:end="117:15">.</operator><name pos:start="117:16" pos:end="117:27">clear_blocks</name></name><argument_list pos:start="117:28" pos:end="117:40">(<argument pos:start="117:29" pos:end="117:39"><expr pos:start="117:29" pos:end="117:39"><name pos:start="117:29" pos:end="117:39"><name pos:start="117:29" pos:end="117:29">s</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:36">block</name><index pos:start="117:37" pos:end="117:39">[<expr pos:start="117:38" pos:end="117:38"><literal type="number" pos:start="117:38" pos:end="117:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:35"><expr pos:start="119:9" pos:end="119:34"><name pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:17">mv_dir</name></name> <operator pos:start="119:19" pos:end="119:19">=</operator> <name pos:start="119:21" pos:end="119:34">MV_DIR_FORWARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:35"><expr pos:start="121:9" pos:end="121:34"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:18">mv_type</name></name> <operator pos:start="121:20" pos:end="121:20">=</operator> <name pos:start="121:22" pos:end="121:34">MV_TYPE_16X16</name></expr>;</expr_stmt> 

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:58">(<expr pos:start="123:13" pos:end="123:57"><call pos:start="123:13" pos:end="123:42"><name pos:start="123:13" pos:end="123:29">ff_h263_decode_mb</name><argument_list pos:start="123:30" pos:end="123:42">(<argument pos:start="123:31" pos:end="123:31"><expr pos:start="123:31" pos:end="123:31"><name pos:start="123:31" pos:end="123:31">s</name></expr></argument>, <argument pos:start="123:34" pos:end="123:41"><expr pos:start="123:34" pos:end="123:41"><name pos:start="123:34" pos:end="123:41"><name pos:start="123:34" pos:end="123:34">s</name><operator pos:start="123:35" pos:end="123:36">-&gt;</operator><name pos:start="123:37" pos:end="123:41">block</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:44" pos:end="123:45">==</operator> <name pos:start="123:47" pos:end="123:57">SLICE_ERROR</name></expr>)</condition> <block pos:start="123:60" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:22">

            <expr_stmt pos:start="125:13" pos:end="125:69"><expr pos:start="125:13" pos:end="125:68"><call pos:start="125:13" pos:end="125:68"><name pos:start="125:13" pos:end="125:19">fprintf</name><argument_list pos:start="125:20" pos:end="125:68">(<argument pos:start="125:21" pos:end="125:26"><expr pos:start="125:21" pos:end="125:26"><name pos:start="125:21" pos:end="125:26">stderr</name></expr></argument>, <argument pos:start="125:29" pos:end="125:49"><expr pos:start="125:29" pos:end="125:49"><literal type="string" pos:start="125:29" pos:end="125:49">"ERROR at MB %d %d\n"</literal></expr></argument>, <argument pos:start="125:52" pos:end="125:58"><expr pos:start="125:52" pos:end="125:58"><name pos:start="125:52" pos:end="125:58"><name pos:start="125:52" pos:end="125:52">s</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:58">mb_x</name></name></expr></argument>, <argument pos:start="125:61" pos:end="125:67"><expr pos:start="125:61" pos:end="125:67"><name pos:start="125:61" pos:end="125:67"><name pos:start="125:61" pos:end="125:61">s</name><operator pos:start="125:62" pos:end="125:63">-&gt;</operator><name pos:start="125:64" pos:end="125:67">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="127:13" pos:end="127:22">return <expr pos:start="127:20" pos:end="127:21"><operator pos:start="127:20" pos:end="127:20">-</operator><literal type="number" pos:start="127:21" pos:end="127:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:35"><expr pos:start="131:9" pos:end="131:34"><call pos:start="131:9" pos:end="131:34"><name pos:start="131:9" pos:end="131:21">MPV_decode_mb</name><argument_list pos:start="131:22" pos:end="131:34">(<argument pos:start="131:23" pos:end="131:23"><expr pos:start="131:23" pos:end="131:23"><name pos:start="131:23" pos:end="131:23">s</name></expr></argument>, <argument pos:start="131:26" pos:end="131:33"><expr pos:start="131:26" pos:end="131:33"><name pos:start="131:26" pos:end="131:33"><name pos:start="131:26" pos:end="131:26">s</name><operator pos:start="131:27" pos:end="131:28">-&gt;</operator><name pos:start="131:29" pos:end="131:33">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="143:9"><if pos:start="133:9" pos:end="143:9">if <condition pos:start="133:12" pos:end="133:37">(<expr pos:start="133:13" pos:end="133:36"><operator pos:start="133:13" pos:end="133:14">++</operator><name pos:start="133:15" pos:end="133:21"><name pos:start="133:15" pos:end="133:15">s</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:21">mb_x</name></name> <operator pos:start="133:23" pos:end="133:24">==</operator> <name pos:start="133:26" pos:end="133:36"><name pos:start="133:26" pos:end="133:26">s</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:36">mb_width</name></name></expr>)</condition> <block pos:start="133:39" pos:end="143:9">{<block_content pos:start="135:13" pos:end="141:34">

            <expr_stmt pos:start="135:13" pos:end="135:24"><expr pos:start="135:13" pos:end="135:23"><name pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:19">mb_x</name></name> <operator pos:start="135:21" pos:end="135:21">=</operator> <literal type="number" pos:start="135:23" pos:end="135:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:22"><expr pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:19">mb_y</name></name><operator pos:start="137:20" pos:end="137:21">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:35"><expr pos:start="139:13" pos:end="139:34"><call pos:start="139:13" pos:end="139:34"><name pos:start="139:13" pos:end="139:31">ff_init_block_index</name><argument_list pos:start="139:32" pos:end="139:34">(<argument pos:start="139:33" pos:end="139:33"><expr pos:start="139:33" pos:end="139:33"><name pos:start="139:33" pos:end="139:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:34"><expr pos:start="141:13" pos:end="141:33"><name pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:31">first_slice_line</name></name><operator pos:start="141:32" pos:end="141:32">=</operator><literal type="number" pos:start="141:33" pos:end="141:33">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="149:5" pos:end="149:20">return <expr pos:start="149:12" pos:end="149:19"><name pos:start="149:12" pos:end="149:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
