<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27002.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">vfio_region_setup</name><parameter_list pos:start="1:22" pos:end="3:50">(<parameter pos:start="1:23" pos:end="1:33"><decl pos:start="1:23" pos:end="1:33"><type pos:start="1:23" pos:end="1:33"><name pos:start="1:23" pos:end="1:28">Object</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">obj</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:45">VFIODevice</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:55">vbasedev</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:75"><decl pos:start="1:58" pos:end="1:75"><type pos:start="1:58" pos:end="1:75"><name pos:start="1:58" pos:end="1:67">VFIORegion</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:75">region</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:31"><decl pos:start="3:23" pos:end="3:31"><type pos:start="3:23" pos:end="3:31"><name pos:start="3:23" pos:end="3:25">int</name></type> <name pos:start="3:27" pos:end="3:31">index</name></decl></parameter>, <parameter pos:start="3:34" pos:end="3:49"><decl pos:start="3:34" pos:end="3:49"><type pos:start="3:34" pos:end="3:49"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:43">char</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">name</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">vfio_region_info</name></name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:33">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:55"><expr pos:start="13:5" pos:end="13:54"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:54"><name pos:start="13:11" pos:end="13:30">vfio_get_region_info</name><argument_list pos:start="13:31" pos:end="13:54">(<argument pos:start="13:32" pos:end="13:39"><expr pos:start="13:32" pos:end="13:39"><name pos:start="13:32" pos:end="13:39">vbasedev</name></expr></argument>, <argument pos:start="13:42" pos:end="13:46"><expr pos:start="13:42" pos:end="13:46"><name pos:start="13:42" pos:end="13:46">index</name></expr></argument>, <argument pos:start="13:49" pos:end="13:53"><expr pos:start="13:49" pos:end="13:53"><operator pos:start="13:49" pos:end="13:49">&amp;</operator><name pos:start="13:50" pos:end="13:53">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">ret</name></expr>)</condition> <block pos:start="15:14" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:10">region</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:20">vbasedev</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:31">vbasedev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:10">region</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:17">flags</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:31"><name pos:start="25:21" pos:end="25:24">info</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:31">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:10">region</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:16">size</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:29"><name pos:start="27:20" pos:end="27:23">info</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:29">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:10">region</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:21">fd_offset</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:36"><name pos:start="29:25" pos:end="29:28">info</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:36">offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:10">region</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:14">nr</name></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:22">index</name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="71:5"><if pos:start="35:5" pos:end="71:5">if <condition pos:start="35:8" pos:end="35:21">(<expr pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:14">region</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:20">size</name></name></expr>)</condition> <block pos:start="35:23" pos:end="71:5">{<block_content pos:start="37:9" pos:end="69:9">

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:14">region</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:19">mem</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <call pos:start="37:23" pos:end="37:45"><name pos:start="37:23" pos:end="37:28">g_new0</name><argument_list pos:start="37:29" pos:end="37:45">(<argument pos:start="37:30" pos:end="37:41"><expr pos:start="37:30" pos:end="37:41"><name pos:start="37:30" pos:end="37:41">MemoryRegion</name></expr></argument>, <argument pos:start="37:44" pos:end="37:44"><expr pos:start="37:44" pos:end="37:44"><literal type="number" pos:start="37:44" pos:end="37:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="41:58"><expr pos:start="39:9" pos:end="41:57"><call pos:start="39:9" pos:end="41:57"><name pos:start="39:9" pos:end="39:29">memory_region_init_io</name><argument_list pos:start="39:30" pos:end="41:57">(<argument pos:start="39:31" pos:end="39:41"><expr pos:start="39:31" pos:end="39:41"><name pos:start="39:31" pos:end="39:41"><name pos:start="39:31" pos:end="39:36">region</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:41">mem</name></name></expr></argument>, <argument pos:start="39:44" pos:end="39:46"><expr pos:start="39:44" pos:end="39:46"><name pos:start="39:44" pos:end="39:46">obj</name></expr></argument>, <argument pos:start="39:49" pos:end="39:64"><expr pos:start="39:49" pos:end="39:64"><operator pos:start="39:49" pos:end="39:49">&amp;</operator><name pos:start="39:50" pos:end="39:64">vfio_region_ops</name></expr></argument>,

                              <argument pos:start="41:31" pos:end="41:36"><expr pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:36">region</name></expr></argument>, <argument pos:start="41:39" pos:end="41:42"><expr pos:start="41:39" pos:end="41:42"><name pos:start="41:39" pos:end="41:42">name</name></expr></argument>, <argument pos:start="41:45" pos:end="41:56"><expr pos:start="41:45" pos:end="41:56"><name pos:start="41:45" pos:end="41:56"><name pos:start="41:45" pos:end="41:50">region</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:56">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="69:9"><if pos:start="45:9" pos:end="69:9">if <condition pos:start="45:12" pos:end="49:56">(<expr pos:start="45:13" pos:end="49:55"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:30"><name pos:start="45:14" pos:end="45:21">vbasedev</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:30">no_mmap</name></name> <operator pos:start="45:32" pos:end="45:33">&amp;&amp;</operator>

            <name pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:18">region</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:25">flags</name></name> <operator pos:start="47:27" pos:end="47:27">&amp;</operator> <name pos:start="47:29" pos:end="47:54">VFIO_REGION_INFO_FLAG_MMAP</name> <operator pos:start="47:56" pos:end="47:57">&amp;&amp;</operator>

            <operator pos:start="49:13" pos:end="49:13">!</operator><operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:26"><name pos:start="49:15" pos:end="49:20">region</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:26">size</name></name> <operator pos:start="49:28" pos:end="49:28">&amp;</operator> <operator pos:start="49:30" pos:end="49:30">~</operator><name pos:start="49:31" pos:end="49:54">qemu_real_host_page_mask</name><operator pos:start="49:55" pos:end="49:55">)</operator></expr>)</condition> <block pos:start="49:58" pos:end="69:9">{<block_content pos:start="53:13" pos:end="67:13">



            <expr_stmt pos:start="53:13" pos:end="53:63"><expr pos:start="53:13" pos:end="53:62"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:62"><name pos:start="53:19" pos:end="53:48">vfio_setup_region_sparse_mmaps</name><argument_list pos:start="53:49" pos:end="53:62">(<argument pos:start="53:50" pos:end="53:55"><expr pos:start="53:50" pos:end="53:55"><name pos:start="53:50" pos:end="53:55">region</name></expr></argument>, <argument pos:start="53:58" pos:end="53:61"><expr pos:start="53:58" pos:end="53:61"><name pos:start="53:58" pos:end="53:61">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="57:13" pos:end="67:13"><if pos:start="57:13" pos:end="67:13">if <condition pos:start="57:16" pos:end="57:20">(<expr pos:start="57:17" pos:end="57:19"><name pos:start="57:17" pos:end="57:19">ret</name></expr>)</condition> <block pos:start="57:22" pos:end="67:13">{<block_content pos:start="59:17" pos:end="65:53">

                <expr_stmt pos:start="59:17" pos:end="59:37"><expr pos:start="59:17" pos:end="59:36"><name pos:start="59:17" pos:end="59:32"><name pos:start="59:17" pos:end="59:22">region</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:32">nr_mmaps</name></name> <operator pos:start="59:34" pos:end="59:34">=</operator> <literal type="number" pos:start="59:36" pos:end="59:36">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:67"><expr pos:start="61:17" pos:end="61:66"><name pos:start="61:17" pos:end="61:29"><name pos:start="61:17" pos:end="61:22">region</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:29">mmaps</name></name> <operator pos:start="61:31" pos:end="61:31">=</operator> <call pos:start="61:33" pos:end="61:66"><name pos:start="61:33" pos:end="61:38">g_new0</name><argument_list pos:start="61:39" pos:end="61:66">(<argument pos:start="61:40" pos:end="61:47"><expr pos:start="61:40" pos:end="61:47"><name pos:start="61:40" pos:end="61:47">VFIOMmap</name></expr></argument>, <argument pos:start="61:50" pos:end="61:65"><expr pos:start="61:50" pos:end="61:65"><name pos:start="61:50" pos:end="61:65"><name pos:start="61:50" pos:end="61:55">region</name><operator pos:start="61:56" pos:end="61:57">-&gt;</operator><name pos:start="61:58" pos:end="61:65">nr_mmaps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:44"><expr pos:start="63:17" pos:end="63:43"><name pos:start="63:17" pos:end="63:32"><name pos:start="63:17" pos:end="63:22">region</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:29">mmaps</name><index pos:start="63:30" pos:end="63:32">[<expr pos:start="63:31" pos:end="63:31"><literal type="number" pos:start="63:31" pos:end="63:31">0</literal></expr>]</index></name><operator pos:start="63:33" pos:end="63:33">.</operator><name pos:start="63:34" pos:end="63:39">offset</name> <operator pos:start="63:41" pos:end="63:41">=</operator> <literal type="number" pos:start="63:43" pos:end="63:43">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:53"><expr pos:start="65:17" pos:end="65:52"><name pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:22">region</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:29">mmaps</name><index pos:start="65:30" pos:end="65:32">[<expr pos:start="65:31" pos:end="65:31"><literal type="number" pos:start="65:31" pos:end="65:31">0</literal></expr>]</index></name><operator pos:start="65:33" pos:end="65:33">.</operator><name pos:start="65:34" pos:end="65:37">size</name> <operator pos:start="65:39" pos:end="65:39">=</operator> <name pos:start="65:41" pos:end="65:52"><name pos:start="65:41" pos:end="65:46">region</name><operator pos:start="65:47" pos:end="65:48">-&gt;</operator><name pos:start="65:49" pos:end="65:52">size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:17"><expr pos:start="75:5" pos:end="75:16"><call pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:10">g_free</name><argument_list pos:start="75:11" pos:end="75:16">(<argument pos:start="75:12" pos:end="75:15"><expr pos:start="75:12" pos:end="75:15"><name pos:start="75:12" pos:end="75:15">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="81:76"><expr pos:start="79:5" pos:end="81:75"><call pos:start="79:5" pos:end="81:75"><name pos:start="79:5" pos:end="79:27">trace_vfio_region_setup</name><argument_list pos:start="79:28" pos:end="81:75">(<argument pos:start="79:29" pos:end="79:42"><expr pos:start="79:29" pos:end="79:42"><name pos:start="79:29" pos:end="79:42"><name pos:start="79:29" pos:end="79:36">vbasedev</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:42">name</name></name></expr></argument>, <argument pos:start="79:45" pos:end="79:49"><expr pos:start="79:45" pos:end="79:49"><name pos:start="79:45" pos:end="79:49">index</name></expr></argument>, <argument pos:start="79:52" pos:end="79:55"><expr pos:start="79:52" pos:end="79:55"><name pos:start="79:52" pos:end="79:55">name</name></expr></argument>,

                            <argument pos:start="81:29" pos:end="81:41"><expr pos:start="81:29" pos:end="81:41"><name pos:start="81:29" pos:end="81:41"><name pos:start="81:29" pos:end="81:34">region</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:41">flags</name></name></expr></argument>, <argument pos:start="81:44" pos:end="81:60"><expr pos:start="81:44" pos:end="81:60"><name pos:start="81:44" pos:end="81:60"><name pos:start="81:44" pos:end="81:49">region</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:60">fd_offset</name></name></expr></argument>, <argument pos:start="81:63" pos:end="81:74"><expr pos:start="81:63" pos:end="81:74"><name pos:start="81:63" pos:end="81:74"><name pos:start="81:63" pos:end="81:68">region</name><operator pos:start="81:69" pos:end="81:70">-&gt;</operator><name pos:start="81:71" pos:end="81:74">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
