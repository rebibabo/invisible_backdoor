<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16826.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">vfio_set_resample_eventfd</name><parameter_list pos:start="1:37" pos:end="1:52">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:47"><name pos:start="1:38" pos:end="1:45">VFIOINTp</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">intp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:15">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VFIODevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:24">vbasedev</name> <init pos:start="5:26" pos:end="5:48">= <expr pos:start="5:28" pos:end="5:48"><operator pos:start="5:28" pos:end="5:28">&amp;</operator><name pos:start="5:29" pos:end="5:48"><name pos:start="5:29" pos:end="5:32">intp</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">vdev</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:48">vbasedev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">vfio_irq_set</name></name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:32">irq_set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">argsz</name></decl>, <decl pos:start="9:16" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:18">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int32_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">pfd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:44"><expr pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:9">argsz</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <sizeof pos:start="15:13" pos:end="15:28">sizeof<argument_list pos:start="15:19" pos:end="15:28">(<argument pos:start="15:20" pos:end="15:27"><expr pos:start="15:20" pos:end="15:27"><operator pos:start="15:20" pos:end="15:20">*</operator><name pos:start="15:21" pos:end="15:27">irq_set</name></expr></argument>)</argument_list></sizeof> <operator pos:start="15:30" pos:end="15:30">+</operator> <sizeof pos:start="15:32" pos:end="15:43">sizeof<argument_list pos:start="15:38" pos:end="15:43">(<argument pos:start="15:39" pos:end="15:42"><expr pos:start="15:39" pos:end="15:42"><operator pos:start="15:39" pos:end="15:39">*</operator><name pos:start="15:40" pos:end="15:42">pfd</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:11">irq_set</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:30"><name pos:start="17:15" pos:end="17:23">g_malloc0</name><argument_list pos:start="17:24" pos:end="17:30">(<argument pos:start="17:25" pos:end="17:29"><expr pos:start="17:25" pos:end="17:29"><name pos:start="17:25" pos:end="17:29">argsz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:11">irq_set</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:18">argsz</name></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:26">argsz</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:76"><expr pos:start="21:5" pos:end="21:75"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:11">irq_set</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">flags</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:46">VFIO_IRQ_SET_DATA_EVENTFD</name> <operator pos:start="21:48" pos:end="21:48">|</operator> <name pos:start="21:50" pos:end="21:75">VFIO_IRQ_SET_ACTION_UNMASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:11">irq_set</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:18">index</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:25">intp</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:30">pin</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:11">irq_set</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:18">start</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:11">irq_set</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:18">count</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:7">pfd</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <operator pos:start="29:11" pos:end="29:11">(</operator><name pos:start="29:12" pos:end="29:18">int32_t</name> <operator pos:start="29:20" pos:end="29:20">*</operator><operator pos:start="29:21" pos:end="29:21">)</operator><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:35"><name pos:start="29:23" pos:end="29:29">irq_set</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:35">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><operator pos:start="31:5" pos:end="31:5">*</operator><name pos:start="31:6" pos:end="31:8">pfd</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:47"><name pos:start="31:12" pos:end="31:32">event_notifier_get_fd</name><argument_list pos:start="31:33" pos:end="31:47">(<argument pos:start="31:34" pos:end="31:46"><expr pos:start="31:34" pos:end="31:46"><operator pos:start="31:34" pos:end="31:34">&amp;</operator><name pos:start="31:35" pos:end="31:46"><name pos:start="31:35" pos:end="31:38">intp</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:46">unmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:48"><expr pos:start="33:5" pos:end="33:47"><call pos:start="33:5" pos:end="33:47"><name pos:start="33:5" pos:end="33:23">qemu_set_fd_handler</name><argument_list pos:start="33:24" pos:end="33:47">(<argument pos:start="33:25" pos:end="33:28"><expr pos:start="33:25" pos:end="33:28"><operator pos:start="33:25" pos:end="33:25">*</operator><name pos:start="33:26" pos:end="33:28">pfd</name></expr></argument>, <argument pos:start="33:31" pos:end="33:34"><expr pos:start="33:31" pos:end="33:34"><name pos:start="33:31" pos:end="33:34">NULL</name></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">NULL</name></expr></argument>, <argument pos:start="33:43" pos:end="33:46"><expr pos:start="33:43" pos:end="33:46"><name pos:start="33:43" pos:end="33:46">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:61"><expr pos:start="35:5" pos:end="35:60"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:60"><name pos:start="35:11" pos:end="35:15">ioctl</name><argument_list pos:start="35:16" pos:end="35:60">(<argument pos:start="35:17" pos:end="35:28"><expr pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:24">vbasedev</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:28">fd</name></name></expr></argument>, <argument pos:start="35:31" pos:end="35:50"><expr pos:start="35:31" pos:end="35:50"><name pos:start="35:31" pos:end="35:50">VFIO_DEVICE_SET_IRQS</name></expr></argument>, <argument pos:start="35:53" pos:end="35:59"><expr pos:start="35:53" pos:end="35:59"><name pos:start="35:53" pos:end="35:59">irq_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:20"><expr pos:start="37:5" pos:end="37:19"><call pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:10">g_free</name><argument_list pos:start="37:11" pos:end="37:19">(<argument pos:start="37:12" pos:end="37:18"><expr pos:start="37:12" pos:end="37:18"><name pos:start="37:12" pos:end="37:18">irq_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">&lt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:65">

        <expr_stmt pos:start="41:9" pos:end="41:65"><expr pos:start="41:9" pos:end="41:64"><call pos:start="41:9" pos:end="41:64"><name pos:start="41:9" pos:end="41:20">error_report</name><argument_list pos:start="41:21" pos:end="41:64">(<argument pos:start="41:22" pos:end="41:63"><expr pos:start="41:22" pos:end="41:63"><literal type="string" pos:start="41:22" pos:end="41:63">"vfio: Failed to set resample eventfd: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="45:5" pos:end="45:15">return <expr pos:start="45:12" pos:end="45:14"><name pos:start="45:12" pos:end="45:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
