<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14166.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:34">ff_h264_set_parameter_from_sps</name><parameter_list pos:start="1:35" pos:end="1:50">(<parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:46">H264Context</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:13">

    <if_stmt pos:start="5:5" pos:end="21:5"><if pos:start="5:5" pos:end="21:5">if <condition pos:start="5:8" pos:end="9:37">(<expr pos:start="5:9" pos:end="9:36"><name pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:9">h</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:16">flags</name></name> <operator pos:start="5:18" pos:end="5:18">&amp;</operator> <name pos:start="5:20" pos:end="5:39">CODEC_FLAG_LOW_DELAY</name> <operator pos:start="5:41" pos:end="5:42">||</operator>

        <operator pos:start="7:9" pos:end="7:9">(</operator><name pos:start="7:10" pos:end="7:42"><name pos:start="7:10" pos:end="7:10">h</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:15">sps</name><operator pos:start="7:16" pos:end="7:16">.</operator><name pos:start="7:17" pos:end="7:42">bitstream_restriction_flag</name></name> <operator pos:start="7:44" pos:end="7:45">&amp;&amp;</operator>

         <operator pos:start="9:10" pos:end="9:10">!</operator><name pos:start="9:11" pos:end="9:35"><name pos:start="9:11" pos:end="9:11">h</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:16">sps</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:35">num_reorder_frames</name></name><operator pos:start="9:36" pos:end="9:36">)</operator></expr>)</condition> <block pos:start="9:39" pos:end="21:5">{<block_content pos:start="11:9" pos:end="19:29">

        <if_stmt pos:start="11:9" pos:end="19:29"><if pos:start="11:9" pos:end="15:69">if <condition pos:start="11:12" pos:end="11:60">(<expr pos:start="11:13" pos:end="11:59"><name pos:start="11:13" pos:end="11:34"><name pos:start="11:13" pos:end="11:13">h</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:20">avctx</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:34">has_b_frames</name></name> <operator pos:start="11:36" pos:end="11:36">&gt;</operator> <literal type="number" pos:start="11:38" pos:end="11:38">1</literal> <operator pos:start="11:40" pos:end="11:41">||</operator> <name pos:start="11:43" pos:end="11:59"><name pos:start="11:43" pos:end="11:43">h</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:56">delayed_pic</name><index pos:start="11:57" pos:end="11:59">[<expr pos:start="11:58" pos:end="11:58"><literal type="number" pos:start="11:58" pos:end="11:58">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="13:13" pos:end="15:69"><block_content pos:start="13:13" pos:end="15:69">

            <expr_stmt pos:start="13:13" pos:end="15:69"><expr pos:start="13:13" pos:end="15:68"><call pos:start="13:13" pos:end="15:68"><name pos:start="13:13" pos:end="13:18">av_log</name><argument_list pos:start="13:19" pos:end="15:68">(<argument pos:start="13:20" pos:end="13:27"><expr pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:27"><name pos:start="13:20" pos:end="13:20">h</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:27">avctx</name></name></expr></argument>, <argument pos:start="13:30" pos:end="13:43"><expr pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="13:46" pos:end="15:67"><expr pos:start="13:46" pos:end="15:67"><literal type="string" pos:start="13:46" pos:end="13:68">"Delayed frames seen. "</literal>

                   <literal type="string" pos:start="15:20" pos:end="15:67">"Reenabling low delay requires a codec flush.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="17:9" pos:end="19:29">else<block type="pseudo" pos:start="19:13" pos:end="19:29"><block_content pos:start="19:13" pos:end="19:29">

            <expr_stmt pos:start="19:13" pos:end="19:29"><expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:13">h</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:24">low_delay</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <literal type="number" pos:start="19:28" pos:end="19:28">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:47"><if pos:start="25:5" pos:end="27:47">if <condition pos:start="25:8" pos:end="25:35">(<expr pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:9">h</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">avctx</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:30">has_b_frames</name></name> <operator pos:start="25:32" pos:end="25:32">&lt;</operator> <literal type="number" pos:start="25:34" pos:end="25:34">2</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:47"><block_content pos:start="27:9" pos:end="27:47">

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:9">h</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:16">avctx</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:30">has_b_frames</name></name> <operator pos:start="27:32" pos:end="27:32">=</operator> <operator pos:start="27:34" pos:end="27:34">!</operator><name pos:start="27:35" pos:end="27:46"><name pos:start="27:35" pos:end="27:35">h</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:46">low_delay</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="73:5"><if pos:start="31:5" pos:end="73:5">if <condition pos:start="31:8" pos:end="33:66">(<expr pos:start="31:9" pos:end="33:65"><name pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:9">h</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">avctx</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:37">bits_per_raw_sample</name></name> <operator pos:start="31:39" pos:end="31:40">!=</operator> <name pos:start="31:42" pos:end="31:62"><name pos:start="31:42" pos:end="31:42">h</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:47">sps</name><operator pos:start="31:48" pos:end="31:48">.</operator><name pos:start="31:49" pos:end="31:62">bit_depth_luma</name></name> <operator pos:start="31:64" pos:end="31:65">||</operator>

        <name pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:9">h</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:32">cur_chroma_format_idc</name></name>      <operator pos:start="33:39" pos:end="33:40">!=</operator> <name pos:start="33:42" pos:end="33:65"><name pos:start="33:42" pos:end="33:42">h</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:47">sps</name><operator pos:start="33:48" pos:end="33:48">.</operator><name pos:start="33:49" pos:end="33:65">chroma_format_idc</name></name></expr>)</condition> <block pos:start="33:68" pos:end="73:5">{<block_content pos:start="35:9" pos:end="71:9">

        <if_stmt pos:start="35:9" pos:end="71:9"><if pos:start="35:9" pos:end="63:9">if <condition pos:start="35:12" pos:end="35:70">(<expr pos:start="35:13" pos:end="35:69"><name pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:13">h</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:18">sps</name><operator pos:start="35:19" pos:end="35:19">.</operator><name pos:start="35:20" pos:end="35:33">bit_depth_luma</name></name> <operator pos:start="35:35" pos:end="35:36">&gt;=</operator> <literal type="number" pos:start="35:38" pos:end="35:38">8</literal> <operator pos:start="35:40" pos:end="35:41">&amp;&amp;</operator> <name pos:start="35:43" pos:end="35:63"><name pos:start="35:43" pos:end="35:43">h</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:48">sps</name><operator pos:start="35:49" pos:end="35:49">.</operator><name pos:start="35:50" pos:end="35:63">bit_depth_luma</name></name> <operator pos:start="35:65" pos:end="35:66">&lt;=</operator> <literal type="number" pos:start="35:68" pos:end="35:69">10</literal></expr>)</condition> <block pos:start="35:72" pos:end="63:9">{<block_content pos:start="37:13" pos:end="61:62">

            <expr_stmt pos:start="37:13" pos:end="37:66"><expr pos:start="37:13" pos:end="37:65"><name pos:start="37:13" pos:end="37:41"><name pos:start="37:13" pos:end="37:13">h</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:20">avctx</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:41">bits_per_raw_sample</name></name> <operator pos:start="37:43" pos:end="37:43">=</operator> <name pos:start="37:45" pos:end="37:65"><name pos:start="37:45" pos:end="37:45">h</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:50">sps</name><operator pos:start="37:51" pos:end="37:51">.</operator><name pos:start="37:52" pos:end="37:65">bit_depth_luma</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:69"><expr pos:start="39:13" pos:end="39:68"><name pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:13">h</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:36">cur_chroma_format_idc</name></name>      <operator pos:start="39:43" pos:end="39:43">=</operator> <name pos:start="39:45" pos:end="39:68"><name pos:start="39:45" pos:end="39:45">h</name><operator pos:start="39:46" pos:end="39:47">-&gt;</operator><name pos:start="39:48" pos:end="39:50">sps</name><operator pos:start="39:51" pos:end="39:51">.</operator><name pos:start="39:52" pos:end="39:68">chroma_format_idc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:70"><expr pos:start="41:13" pos:end="41:69"><name pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:13">h</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:26">pixel_shift</name></name>                <operator pos:start="41:43" pos:end="41:43">=</operator> <name pos:start="41:45" pos:end="41:65"><name pos:start="41:45" pos:end="41:45">h</name><operator pos:start="41:46" pos:end="41:47">-&gt;</operator><name pos:start="41:48" pos:end="41:50">sps</name><operator pos:start="41:51" pos:end="41:51">.</operator><name pos:start="41:52" pos:end="41:65">bit_depth_luma</name></name> <operator pos:start="41:67" pos:end="41:67">&gt;</operator> <literal type="number" pos:start="41:69" pos:end="41:69">8</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="45:13" pos:end="47:54"><expr pos:start="45:13" pos:end="47:53"><call pos:start="45:13" pos:end="47:53"><name pos:start="45:13" pos:end="45:27">ff_h264dsp_init</name><argument_list pos:start="45:28" pos:end="47:53">(<argument pos:start="45:29" pos:end="45:39"><expr pos:start="45:29" pos:end="45:39"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:39"><name pos:start="45:30" pos:end="45:30">h</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:39">h264dsp</name></name></expr></argument>, <argument pos:start="45:42" pos:end="45:62"><expr pos:start="45:42" pos:end="45:62"><name pos:start="45:42" pos:end="45:62"><name pos:start="45:42" pos:end="45:42">h</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:47">sps</name><operator pos:start="45:48" pos:end="45:48">.</operator><name pos:start="45:49" pos:end="45:62">bit_depth_luma</name></name></expr></argument>,

                            <argument pos:start="47:29" pos:end="47:52"><expr pos:start="47:29" pos:end="47:52"><name pos:start="47:29" pos:end="47:52"><name pos:start="47:29" pos:end="47:29">h</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:34">sps</name><operator pos:start="47:35" pos:end="47:35">.</operator><name pos:start="47:36" pos:end="47:52">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:72"><expr pos:start="49:13" pos:end="49:71"><call pos:start="49:13" pos:end="49:71"><name pos:start="49:13" pos:end="49:30">ff_h264chroma_init</name><argument_list pos:start="49:31" pos:end="49:71">(<argument pos:start="49:32" pos:end="49:45"><expr pos:start="49:32" pos:end="49:45"><operator pos:start="49:32" pos:end="49:32">&amp;</operator><name pos:start="49:33" pos:end="49:45"><name pos:start="49:33" pos:end="49:33">h</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:45">h264chroma</name></name></expr></argument>, <argument pos:start="49:48" pos:end="49:70"><expr pos:start="49:48" pos:end="49:70"><name pos:start="49:48" pos:end="49:70"><name pos:start="49:48" pos:end="49:48">h</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:53">sps</name><operator pos:start="49:54" pos:end="49:54">.</operator><name pos:start="49:55" pos:end="49:70">bit_depth_chroma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:66"><expr pos:start="51:13" pos:end="51:65"><call pos:start="51:13" pos:end="51:65"><name pos:start="51:13" pos:end="51:28">ff_h264qpel_init</name><argument_list pos:start="51:29" pos:end="51:65">(<argument pos:start="51:30" pos:end="51:41"><expr pos:start="51:30" pos:end="51:41"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:41"><name pos:start="51:31" pos:end="51:31">h</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:41">h264qpel</name></name></expr></argument>, <argument pos:start="51:44" pos:end="51:64"><expr pos:start="51:44" pos:end="51:64"><name pos:start="51:44" pos:end="51:64"><name pos:start="51:44" pos:end="51:44">h</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:49">sps</name><operator pos:start="51:50" pos:end="51:50">.</operator><name pos:start="51:51" pos:end="51:64">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="55:56"><expr pos:start="53:13" pos:end="55:55"><call pos:start="53:13" pos:end="55:55"><name pos:start="53:13" pos:end="53:29">ff_h264_pred_init</name><argument_list pos:start="53:30" pos:end="55:55">(<argument pos:start="53:31" pos:end="53:37"><expr pos:start="53:31" pos:end="53:37"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:37"><name pos:start="53:32" pos:end="53:32">h</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:37">hpc</name></name></expr></argument>, <argument pos:start="53:40" pos:end="53:57"><expr pos:start="53:40" pos:end="53:57"><name pos:start="53:40" pos:end="53:57"><name pos:start="53:40" pos:end="53:40">h</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:47">avctx</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:57">codec_id</name></name></expr></argument>, <argument pos:start="53:60" pos:end="53:80"><expr pos:start="53:60" pos:end="53:80"><name pos:start="53:60" pos:end="53:80"><name pos:start="53:60" pos:end="53:60">h</name><operator pos:start="53:61" pos:end="53:62">-&gt;</operator><name pos:start="53:63" pos:end="53:65">sps</name><operator pos:start="53:66" pos:end="53:66">.</operator><name pos:start="53:67" pos:end="53:80">bit_depth_luma</name></name></expr></argument>,

                              <argument pos:start="55:31" pos:end="55:54"><expr pos:start="55:31" pos:end="55:54"><name pos:start="55:31" pos:end="55:54"><name pos:start="55:31" pos:end="55:31">h</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:36">sps</name><operator pos:start="55:37" pos:end="55:37">.</operator><name pos:start="55:38" pos:end="55:54">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:51"><if pos:start="57:13" pos:end="59:51">if <condition pos:start="57:16" pos:end="57:40">(<expr pos:start="57:17" pos:end="57:39"><name pos:start="57:17" pos:end="57:39">CONFIG_ERROR_RESILIENCE</name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:51"><block_content pos:start="59:17" pos:end="59:51">

                <expr_stmt pos:start="59:17" pos:end="59:51"><expr pos:start="59:17" pos:end="59:50"><call pos:start="59:17" pos:end="59:50"><name pos:start="59:17" pos:end="59:30">ff_me_cmp_init</name><argument_list pos:start="59:31" pos:end="59:50">(<argument pos:start="59:32" pos:end="59:39"><expr pos:start="59:32" pos:end="59:39"><operator pos:start="59:32" pos:end="59:32">&amp;</operator><name pos:start="59:33" pos:end="59:39"><name pos:start="59:33" pos:end="59:33">h</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:39">mecc</name></name></expr></argument>, <argument pos:start="59:42" pos:end="59:49"><expr pos:start="59:42" pos:end="59:49"><name pos:start="59:42" pos:end="59:49"><name pos:start="59:42" pos:end="59:42">h</name><operator pos:start="59:43" pos:end="59:44">-&gt;</operator><name pos:start="59:45" pos:end="59:49">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:62"><expr pos:start="61:13" pos:end="61:61"><call pos:start="61:13" pos:end="61:61"><name pos:start="61:13" pos:end="61:28">ff_videodsp_init</name><argument_list pos:start="61:29" pos:end="61:61">(<argument pos:start="61:30" pos:end="61:37"><expr pos:start="61:30" pos:end="61:37"><operator pos:start="61:30" pos:end="61:30">&amp;</operator><name pos:start="61:31" pos:end="61:37"><name pos:start="61:31" pos:end="61:31">h</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:37">vdsp</name></name></expr></argument>, <argument pos:start="61:40" pos:end="61:60"><expr pos:start="61:40" pos:end="61:60"><name pos:start="61:40" pos:end="61:60"><name pos:start="61:40" pos:end="61:40">h</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:45">sps</name><operator pos:start="61:46" pos:end="61:46">.</operator><name pos:start="61:47" pos:end="61:60">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="71:9">else <block pos:start="63:16" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:39">

            <expr_stmt pos:start="65:13" pos:end="67:42"><expr pos:start="65:13" pos:end="67:41"><call pos:start="65:13" pos:end="67:41"><name pos:start="65:13" pos:end="65:18">av_log</name><argument_list pos:start="65:19" pos:end="67:41">(<argument pos:start="65:20" pos:end="65:27"><expr pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:20">h</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:27">avctx</name></name></expr></argument>, <argument pos:start="65:30" pos:end="65:41"><expr pos:start="65:30" pos:end="65:41"><name pos:start="65:30" pos:end="65:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:44" pos:end="65:71"><expr pos:start="65:44" pos:end="65:71"><literal type="string" pos:start="65:44" pos:end="65:71">"Unsupported bit depth %d\n"</literal></expr></argument>,

                   <argument pos:start="67:20" pos:end="67:40"><expr pos:start="67:20" pos:end="67:40"><name pos:start="67:20" pos:end="67:40"><name pos:start="67:20" pos:end="67:20">h</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:25">sps</name><operator pos:start="67:26" pos:end="67:26">.</operator><name pos:start="67:27" pos:end="67:40">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:39">return <expr pos:start="69:20" pos:end="69:38"><name pos:start="69:20" pos:end="69:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
