<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4197.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:44">shuffle_bytes_2103</name>)<parameter_list pos:start="1:46" pos:end="1:94">(<parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">src</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:73">uint8_t</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:78">dst</name></decl></parameter>, <parameter pos:start="1:81" pos:end="1:93"><decl pos:start="1:81" pos:end="1:93"><type pos:start="1:81" pos:end="1:93"><name pos:start="1:81" pos:end="1:84">long</name></type> <name pos:start="1:86" pos:end="1:93">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:5">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">x86_reg</name></type> <name pos:start="5:13" pos:end="5:15">idx</name> <init pos:start="5:17" pos:end="5:31">= <expr pos:start="5:19" pos:end="5:31"><literal type="number" pos:start="5:19" pos:end="5:22">15</literal> <operator pos:start="5:22" pos:end="5:22">-</operator> <name pos:start="5:24" pos:end="5:31">src_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:30">= <expr pos:start="7:24" pos:end="7:30"><name pos:start="7:24" pos:end="7:26">src</name><operator pos:start="7:27" pos:end="7:27">-</operator><name pos:start="7:28" pos:end="7:30">idx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="12:0"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">d</name> <init pos:start="9:16" pos:end="9:24">= <expr pos:start="9:18" pos:end="9:24"><name pos:start="9:18" pos:end="9:20">dst</name><operator pos:start="9:21" pos:end="9:21">-</operator><name pos:start="9:22" pos:end="9:24">idx</name></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="11:1" pos:end="11:24">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <asm pos:start="13:5" pos:end="114:0">__asm__ <specifier pos:start="13:13" pos:end="13:20">volatile</specifier>(

        "test          %0, %0           \n\t"

        "jns           2f               \n\t"

        PREFETCH"       (%1, %0)        \n\t"

        "movq          %3, %%mm7        \n\t"

        "pxor          %4, %%mm7        \n\t"

        "movq       %%mm7, %%mm6        \n\t"

        "pxor          %5, %%mm7        \n\t"

        ".p2align       4               \n\t"

        "1:                             \n\t"

        PREFETCH"     32(%1, %0)        \n\t"

        "movq           (%1, %0), %%mm0 \n\t"

        "movq          8(%1, %0), %%mm1 \n\t"

<cpp:if pos:start="39:1" pos:end="39:26"># <cpp:directive pos:start="39:3" pos:end="39:4">if</cpp:directive> <expr pos:start="39:6" pos:end="39:26"><name pos:start="39:6" pos:end="39:26">COMPILE_TEMPLATE_MMX2</name></expr></cpp:if>

        "pshufw      $177, %%mm0, %%mm3 \n\t"

        "pshufw      $177, %%mm1, %%mm5 \n\t"

        "pand       %%mm7, %%mm0        \n\t"

        "pand       %%mm6, %%mm3        \n\t"

        "pand       %%mm7, %%mm1        \n\t"

        "pand       %%mm6, %%mm5        \n\t"

        "por        %%mm3, %%mm0        \n\t"

        "por        %%mm5, %%mm1        \n\t"

<cpp:else pos:start="57:1" pos:end="57:6"># <cpp:directive pos:start="57:3" pos:end="57:6">else</cpp:directive></cpp:else>

        "movq       %%mm0, %%mm2        \n\t"

        "movq       %%mm1, %%mm4        \n\t"

        "pand       %%mm7, %%mm0        \n\t"

        "pand       %%mm6, %%mm2        \n\t"

        "pand       %%mm7, %%mm1        \n\t"

        "pand       %%mm6, %%mm4        \n\t"

        "movq       %%mm2, %%mm3        \n\t"

        "movq       %%mm4, %%mm5        \n\t"

        "pslld        $16, %%mm2        \n\t"

        "psrld        $16, %%mm3        \n\t"

        "pslld        $16, %%mm4        \n\t"

        "psrld        $16, %%mm5        \n\t"

        "por        %%mm2, %%mm0        \n\t"

        "por        %%mm4, %%mm1        \n\t"

        "por        %%mm3, %%mm0        \n\t"

        "por        %%mm5, %%mm1        \n\t"

<cpp:endif pos:start="91:1" pos:end="91:7"># <cpp:directive pos:start="91:3" pos:end="91:7">endif</cpp:directive></cpp:endif>

        MOVNTQ"     %%mm0,  (%2, %0)    \n\t"

        MOVNTQ"     %%mm1, 8(%2, %0)    \n\t"

        "add          $16, %0           \n\t"

        "js            1b               \n\t"

        SFENCE"                         \n\t"

        EMMS"                           \n\t"

        "2:                             \n\t"

        : "+&amp;r"(idx)

        : "r" (s), "r" (d), "m" (mask32b), "m" (mask32r), "m" (mmx_one)

        : "memory");</asm>

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>

    <for pos:start="115:5" pos:end="123:5">for <control pos:start="115:9" pos:end="115:26">(<init pos:start="115:10" pos:end="115:10">;</init> <condition pos:start="115:12" pos:end="115:18"><expr pos:start="115:12" pos:end="115:17"><name pos:start="115:12" pos:end="115:14">idx</name><operator pos:start="115:15" pos:end="115:15">&lt;</operator><literal type="number" pos:start="115:16" pos:end="115:17">15</literal></expr>;</condition> <incr pos:start="115:20" pos:end="115:25"><expr pos:start="115:20" pos:end="115:25"><name pos:start="115:20" pos:end="115:22">idx</name><operator pos:start="115:23" pos:end="115:24">+=</operator><literal type="number" pos:start="115:25" pos:end="115:25">4</literal></expr></incr>)</control> <block pos:start="115:28" pos:end="123:5">{<block_content pos:start="117:9" pos:end="121:53">

        <decl_stmt pos:start="117:9" pos:end="117:72"><decl pos:start="117:9" pos:end="117:51"><type pos:start="117:9" pos:end="117:20"><specifier pos:start="117:9" pos:end="117:16">register</specifier> <name pos:start="117:18" pos:end="117:20">int</name></type> <name pos:start="117:22" pos:end="117:22">v</name> <init pos:start="117:24" pos:end="117:51">= <expr pos:start="117:26" pos:end="117:51"><operator pos:start="117:26" pos:end="117:26">*</operator><operator pos:start="117:27" pos:end="117:27">(</operator><specifier pos:start="117:28" pos:end="117:32">const</specifier> <name pos:start="117:34" pos:end="117:41">uint32_t</name> <operator pos:start="117:43" pos:end="117:43">*</operator><operator pos:start="117:44" pos:end="117:44">)</operator><operator pos:start="117:45" pos:end="117:45">&amp;</operator><name pos:start="117:46" pos:end="117:51"><name pos:start="117:46" pos:end="117:46">s</name><index pos:start="117:47" pos:end="117:51">[<expr pos:start="117:48" pos:end="117:50"><name pos:start="117:48" pos:end="117:50">idx</name></expr>]</index></name></expr></init></decl>, <decl pos:start="117:54" pos:end="117:71"><type ref="prev" pos:start="117:9" pos:end="117:20"/><name pos:start="117:54" pos:end="117:54">g</name> <init pos:start="117:56" pos:end="117:71">= <expr pos:start="117:58" pos:end="117:71"><name pos:start="117:58" pos:end="117:58">v</name> <operator pos:start="117:60" pos:end="117:60">&amp;</operator> <literal type="number" pos:start="117:62" pos:end="117:71">0xff00ff00</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:22"><expr pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:9">v</name> <operator pos:start="119:11" pos:end="119:12">&amp;=</operator> <literal type="number" pos:start="119:14" pos:end="119:21">0xff00ff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:53"><expr pos:start="121:9" pos:end="121:52"><operator pos:start="121:9" pos:end="121:9">*</operator><operator pos:start="121:10" pos:end="121:10">(</operator><name pos:start="121:11" pos:end="121:18">uint32_t</name> <operator pos:start="121:20" pos:end="121:20">*</operator><operator pos:start="121:21" pos:end="121:21">)</operator><operator pos:start="121:22" pos:end="121:22">&amp;</operator><name pos:start="121:23" pos:end="121:28"><name pos:start="121:23" pos:end="121:23">d</name><index pos:start="121:24" pos:end="121:28">[<expr pos:start="121:25" pos:end="121:27"><name pos:start="121:25" pos:end="121:27">idx</name></expr>]</index></name> <operator pos:start="121:30" pos:end="121:30">=</operator> <operator pos:start="121:32" pos:end="121:32">(</operator><name pos:start="121:33" pos:end="121:33">v</name><operator pos:start="121:34" pos:end="121:35">&gt;&gt;</operator><literal type="number" pos:start="121:36" pos:end="121:37">16</literal><operator pos:start="121:38" pos:end="121:38">)</operator> <operator pos:start="121:40" pos:end="121:40">+</operator> <name pos:start="121:42" pos:end="121:42">g</name> <operator pos:start="121:44" pos:end="121:44">+</operator> <operator pos:start="121:46" pos:end="121:46">(</operator><name pos:start="121:47" pos:end="121:47">v</name><operator pos:start="121:48" pos:end="121:49">&lt;&lt;</operator><literal type="number" pos:start="121:50" pos:end="121:51">16</literal><operator pos:start="121:52" pos:end="121:52">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
