<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22842.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">sonic_decode_init</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="195:1">{<block_content pos:start="5:5" pos:end="193:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">SonicContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">GetBitContext</name></type> <name pos:start="7:19" pos:end="7:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:15">channels</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <name pos:start="13:19" pos:end="13:33"><name pos:start="13:19" pos:end="13:23">avctx</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:33">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:17">samplerate</name></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:38"><name pos:start="15:21" pos:end="15:25">avctx</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:38">sample_rate</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:26">(<expr pos:start="19:9" pos:end="19:25"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:25"><name pos:start="19:10" pos:end="19:14">avctx</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:25">extradata</name></name></expr>)</condition>

    <block pos:start="21:5" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:35">

        <expr_stmt pos:start="23:9" pos:end="23:70"><expr pos:start="23:9" pos:end="23:69"><call pos:start="23:9" pos:end="23:69"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:69">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:37" pos:end="23:68"><expr pos:start="23:37" pos:end="23:68"><literal type="string" pos:start="23:37" pos:end="23:68">"No mandatory headers present\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><call pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:18">init_get_bits8</name><argument_list pos:start="31:19" pos:end="31:64">(<argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><operator pos:start="31:20" pos:end="31:20">&amp;</operator><name pos:start="31:21" pos:end="31:22">gb</name></expr></argument>, <argument pos:start="31:25" pos:end="31:40"><expr pos:start="31:25" pos:end="31:40"><name pos:start="31:25" pos:end="31:40"><name pos:start="31:25" pos:end="31:29">avctx</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:40">extradata</name></name></expr></argument>, <argument pos:start="31:43" pos:end="31:63"><expr pos:start="31:43" pos:end="31:63"><name pos:start="31:43" pos:end="31:63"><name pos:start="31:43" pos:end="31:47">avctx</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:63">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:14">version</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:33"><name pos:start="35:18" pos:end="35:25">get_bits</name><argument_list pos:start="35:26" pos:end="35:33">(<argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:29">gb</name></expr></argument>, <argument pos:start="35:32" pos:end="35:32"><expr pos:start="35:32" pos:end="35:32"><literal type="number" pos:start="35:32" pos:end="35:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:24">(<expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">version</name></name> <operator pos:start="37:20" pos:end="37:21">&gt;=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">2</literal></expr>)</condition> <block pos:start="37:26" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:44">

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:18">version</name></name>       <operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="39:43"><name pos:start="39:28" pos:end="39:35">get_bits</name><argument_list pos:start="39:36" pos:end="39:43">(<argument pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><operator pos:start="39:37" pos:end="39:37">&amp;</operator><name pos:start="39:38" pos:end="39:39">gb</name></expr></argument>, <argument pos:start="39:42" pos:end="39:42"><expr pos:start="39:42" pos:end="39:42"><literal type="number" pos:start="39:42" pos:end="39:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:44"><expr pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:24">minor_version</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="41:43"><name pos:start="41:28" pos:end="41:35">get_bits</name><argument_list pos:start="41:36" pos:end="41:43">(<argument pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><operator pos:start="41:37" pos:end="41:37">&amp;</operator><name pos:start="41:38" pos:end="41:39">gb</name></expr></argument>, <argument pos:start="41:42" pos:end="41:42"><expr pos:start="41:42" pos:end="41:42"><literal type="number" pos:start="41:42" pos:end="41:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:24">(<expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:18">version</name></name> <operator pos:start="45:20" pos:end="45:21">!=</operator> <literal type="number" pos:start="45:23" pos:end="45:23">2</literal></expr>)</condition>

    <block pos:start="47:5" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:35">

        <expr_stmt pos:start="49:9" pos:end="49:82"><expr pos:start="49:9" pos:end="49:81"><call pos:start="49:9" pos:end="49:81"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:81">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:37" pos:end="49:80"><expr pos:start="49:37" pos:end="49:80"><literal type="string" pos:start="49:37" pos:end="49:80">"Unsupported Sonic version, please report\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="69:5"><if pos:start="57:5" pos:end="69:5">if <condition pos:start="57:8" pos:end="57:24">(<expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:18">version</name></name> <operator pos:start="57:20" pos:end="57:21">&gt;=</operator> <literal type="number" pos:start="57:23" pos:end="57:23">1</literal></expr>)</condition>

    <block pos:start="59:5" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:40">

        <expr_stmt pos:start="61:9" pos:end="61:39"><expr pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:19">channels</name></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <call pos:start="61:23" pos:end="61:38"><name pos:start="61:23" pos:end="61:30">get_bits</name><argument_list pos:start="61:31" pos:end="61:38">(<argument pos:start="61:32" pos:end="61:34"><expr pos:start="61:32" pos:end="61:34"><operator pos:start="61:32" pos:end="61:32">&amp;</operator><name pos:start="61:33" pos:end="61:34">gb</name></expr></argument>, <argument pos:start="61:37" pos:end="61:37"><expr pos:start="61:37" pos:end="61:37"><literal type="number" pos:start="61:37" pos:end="61:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:59"><expr pos:start="63:9" pos:end="63:58"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:21">samplerate</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:58"><name pos:start="63:25" pos:end="63:40">samplerate_table</name><index pos:start="63:41" pos:end="63:58">[<expr pos:start="63:42" pos:end="63:57"><call pos:start="63:42" pos:end="63:57"><name pos:start="63:42" pos:end="63:49">get_bits</name><argument_list pos:start="63:50" pos:end="63:57">(<argument pos:start="63:51" pos:end="63:53"><expr pos:start="63:51" pos:end="63:53"><operator pos:start="63:51" pos:end="63:51">&amp;</operator><name pos:start="63:52" pos:end="63:53">gb</name></expr></argument>, <argument pos:start="63:56" pos:end="63:56"><expr pos:start="63:56" pos:end="63:56"><literal type="number" pos:start="63:56" pos:end="63:56">4</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="67:40"><expr pos:start="65:9" pos:end="67:39"><call pos:start="65:9" pos:end="67:39"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="67:39">(<argument pos:start="65:16" pos:end="65:20"><expr pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:20">avctx</name></expr></argument>, <argument pos:start="65:23" pos:end="65:33"><expr pos:start="65:23" pos:end="65:33"><name pos:start="65:23" pos:end="65:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="65:36" pos:end="65:69"><expr pos:start="65:36" pos:end="65:69"><literal type="string" pos:start="65:36" pos:end="65:69">"Sonicv2 chans: %d samprate: %d\n"</literal></expr></argument>,

            <argument pos:start="67:13" pos:end="67:23"><expr pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:23">channels</name></name></expr></argument>, <argument pos:start="67:26" pos:end="67:38"><expr pos:start="67:26" pos:end="67:38"><name pos:start="67:26" pos:end="67:38"><name pos:start="67:26" pos:end="67:26">s</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:38">samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="81:5">if <condition pos:start="73:8" pos:end="73:35">(<expr pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:19">channels</name></name> <operator pos:start="73:21" pos:end="73:21">&gt;</operator> <name pos:start="73:23" pos:end="73:34">MAX_CHANNELS</name></expr>)</condition>

    <block pos:start="75:5" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:35">

        <expr_stmt pos:start="77:9" pos:end="77:91"><expr pos:start="77:9" pos:end="77:90"><call pos:start="77:9" pos:end="77:90"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="77:90">(<argument pos:start="77:16" pos:end="77:20"><expr pos:start="77:16" pos:end="77:20"><name pos:start="77:16" pos:end="77:20">avctx</name></expr></argument>, <argument pos:start="77:23" pos:end="77:34"><expr pos:start="77:23" pos:end="77:34"><name pos:start="77:23" pos:end="77:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:37" pos:end="77:89"><expr pos:start="77:37" pos:end="77:89"><literal type="string" pos:start="77:37" pos:end="77:89">"Only mono and stereo streams are supported by now\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:35">return <expr pos:start="79:16" pos:end="79:34"><name pos:start="79:16" pos:end="79:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:33"><expr pos:start="85:5" pos:end="85:32"><name pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:15">lossless</name></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <call pos:start="85:19" pos:end="85:32"><name pos:start="85:19" pos:end="85:27">get_bits1</name><argument_list pos:start="85:28" pos:end="85:32">(<argument pos:start="85:29" pos:end="85:31"><expr pos:start="85:29" pos:end="85:31"><operator pos:start="85:29" pos:end="85:29">&amp;</operator><name pos:start="85:30" pos:end="85:31">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="89:26"><if pos:start="87:5" pos:end="89:26">if <condition pos:start="87:8" pos:end="87:21">(<expr pos:start="87:9" pos:end="87:20"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:20"><name pos:start="87:10" pos:end="87:10">s</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:20">lossless</name></name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:26"><block_content pos:start="89:9" pos:end="89:26">

        <expr_stmt pos:start="89:9" pos:end="89:26"><expr pos:start="89:9" pos:end="89:25"><call pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:17">skip_bits</name><argument_list pos:start="89:18" pos:end="89:25">(<argument pos:start="89:19" pos:end="89:21"><expr pos:start="89:19" pos:end="89:21"><operator pos:start="89:19" pos:end="89:19">&amp;</operator><name pos:start="89:20" pos:end="89:21">gb</name></expr></argument>, <argument pos:start="89:24" pos:end="89:24"><expr pos:start="89:24" pos:end="89:24"><literal type="number" pos:start="89:24" pos:end="89:24">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="89:28" pos:end="89:39">// XXX FIXME</comment>

    <expr_stmt pos:start="91:5" pos:end="91:40"><expr pos:start="91:5" pos:end="91:39"><name pos:start="91:5" pos:end="91:20"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:20">decorrelation</name></name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:39"><name pos:start="91:24" pos:end="91:31">get_bits</name><argument_list pos:start="91:32" pos:end="91:39">(<argument pos:start="91:33" pos:end="91:35"><expr pos:start="91:33" pos:end="91:35"><operator pos:start="91:33" pos:end="91:33">&amp;</operator><name pos:start="91:34" pos:end="91:35">gb</name></expr></argument>, <argument pos:start="91:38" pos:end="91:38"><expr pos:start="91:38" pos:end="91:38"><literal type="number" pos:start="91:38" pos:end="91:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:50">(<expr pos:start="93:9" pos:end="93:49"><name pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:24">decorrelation</name></name> <operator pos:start="93:26" pos:end="93:27">!=</operator> <literal type="number" pos:start="93:29" pos:end="93:29">3</literal> <operator pos:start="93:31" pos:end="93:32">&amp;&amp;</operator> <name pos:start="93:34" pos:end="93:44"><name pos:start="93:34" pos:end="93:34">s</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:44">channels</name></name> <operator pos:start="93:46" pos:end="93:47">!=</operator> <literal type="number" pos:start="93:49" pos:end="93:49">2</literal></expr>)</condition> <block pos:start="93:52" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:35">

        <expr_stmt pos:start="95:9" pos:end="95:84"><expr pos:start="95:9" pos:end="95:83"><call pos:start="95:9" pos:end="95:83"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="95:83">(<argument pos:start="95:16" pos:end="95:20"><expr pos:start="95:16" pos:end="95:20"><name pos:start="95:16" pos:end="95:20">avctx</name></expr></argument>, <argument pos:start="95:23" pos:end="95:34"><expr pos:start="95:23" pos:end="95:34"><name pos:start="95:23" pos:end="95:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:37" pos:end="95:64"><expr pos:start="95:37" pos:end="95:64"><literal type="string" pos:start="95:37" pos:end="95:64">"invalid decorrelation %d\n"</literal></expr></argument>, <argument pos:start="95:67" pos:end="95:82"><expr pos:start="95:67" pos:end="95:82"><name pos:start="95:67" pos:end="95:82"><name pos:start="95:67" pos:end="95:67">s</name><operator pos:start="95:68" pos:end="95:69">-&gt;</operator><name pos:start="95:70" pos:end="95:82">decorrelation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:35">return <expr pos:start="97:16" pos:end="97:34"><name pos:start="97:16" pos:end="97:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:39"><expr pos:start="103:5" pos:end="103:38"><name pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:19">downsampling</name></name> <operator pos:start="103:21" pos:end="103:21">=</operator> <call pos:start="103:23" pos:end="103:38"><name pos:start="103:23" pos:end="103:30">get_bits</name><argument_list pos:start="103:31" pos:end="103:38">(<argument pos:start="103:32" pos:end="103:34"><expr pos:start="103:32" pos:end="103:34"><operator pos:start="103:32" pos:end="103:32">&amp;</operator><name pos:start="103:33" pos:end="103:34">gb</name></expr></argument>, <argument pos:start="103:37" pos:end="103:37"><expr pos:start="103:37" pos:end="103:37"><literal type="number" pos:start="103:37" pos:end="103:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="111:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:25">(<expr pos:start="105:9" pos:end="105:24"><operator pos:start="105:9" pos:end="105:9">!</operator><name pos:start="105:10" pos:end="105:24"><name pos:start="105:10" pos:end="105:10">s</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:24">downsampling</name></name></expr>)</condition> <block pos:start="105:27" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:35">

        <expr_stmt pos:start="107:9" pos:end="107:68"><expr pos:start="107:9" pos:end="107:67"><call pos:start="107:9" pos:end="107:67"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="107:67">(<argument pos:start="107:16" pos:end="107:20"><expr pos:start="107:16" pos:end="107:20"><name pos:start="107:16" pos:end="107:20">avctx</name></expr></argument>, <argument pos:start="107:23" pos:end="107:34"><expr pos:start="107:23" pos:end="107:34"><name pos:start="107:23" pos:end="107:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:37" pos:end="107:66"><expr pos:start="107:37" pos:end="107:66"><literal type="string" pos:start="107:37" pos:end="107:66">"invalid downsampling value\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="109:9" pos:end="109:35">return <expr pos:start="109:16" pos:end="109:34"><name pos:start="109:16" pos:end="109:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:42"><expr pos:start="115:5" pos:end="115:41"><name pos:start="115:5" pos:end="115:15"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:15">num_taps</name></name> <operator pos:start="115:17" pos:end="115:17">=</operator> <operator pos:start="115:19" pos:end="115:19">(</operator><call pos:start="115:20" pos:end="115:35"><name pos:start="115:20" pos:end="115:27">get_bits</name><argument_list pos:start="115:28" pos:end="115:35">(<argument pos:start="115:29" pos:end="115:31"><expr pos:start="115:29" pos:end="115:31"><operator pos:start="115:29" pos:end="115:29">&amp;</operator><name pos:start="115:30" pos:end="115:31">gb</name></expr></argument>, <argument pos:start="115:34" pos:end="115:34"><expr pos:start="115:34" pos:end="115:34"><literal type="number" pos:start="115:34" pos:end="115:34">5</literal></expr></argument>)</argument_list></call><operator pos:start="115:36" pos:end="115:36">+</operator><literal type="number" pos:start="115:37" pos:end="115:37">1</literal><operator pos:start="115:38" pos:end="115:38">)</operator><operator pos:start="115:39" pos:end="115:40">&lt;&lt;</operator><literal type="number" pos:start="115:41" pos:end="115:41">5</literal></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="119:59"><if pos:start="117:5" pos:end="119:59">if <condition pos:start="117:8" pos:end="117:23">(<expr pos:start="117:9" pos:end="117:22"><call pos:start="117:9" pos:end="117:22"><name pos:start="117:9" pos:end="117:17">get_bits1</name><argument_list pos:start="117:18" pos:end="117:22">(<argument pos:start="117:19" pos:end="117:21"><expr pos:start="117:19" pos:end="117:21"><operator pos:start="117:19" pos:end="117:19">&amp;</operator><name pos:start="117:20" pos:end="117:21">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:59"><block_content pos:start="119:9" pos:end="119:59"> <comment type="line" pos:start="117:25" pos:end="117:36">// XXX FIXME</comment>

        <expr_stmt pos:start="119:9" pos:end="119:59"><expr pos:start="119:9" pos:end="119:58"><call pos:start="119:9" pos:end="119:58"><name pos:start="119:9" pos:end="119:14">av_log</name><argument_list pos:start="119:15" pos:end="119:58">(<argument pos:start="119:16" pos:end="119:20"><expr pos:start="119:16" pos:end="119:20"><name pos:start="119:16" pos:end="119:20">avctx</name></expr></argument>, <argument pos:start="119:23" pos:end="119:33"><expr pos:start="119:23" pos:end="119:33"><name pos:start="119:23" pos:end="119:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="119:36" pos:end="119:57"><expr pos:start="119:36" pos:end="119:57"><literal type="string" pos:start="119:36" pos:end="119:57">"Custom quant table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:66"><expr pos:start="123:5" pos:end="123:65"><name pos:start="123:5" pos:end="123:18"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:18">block_align</name></name> <operator pos:start="123:20" pos:end="123:20">=</operator> <literal type="number" pos:start="123:22" pos:end="123:27">2048LL</literal><operator pos:start="123:28" pos:end="123:28">*</operator><name pos:start="123:29" pos:end="123:41"><name pos:start="123:29" pos:end="123:29">s</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:41">samplerate</name></name><operator pos:start="123:42" pos:end="123:42">/</operator><operator pos:start="123:43" pos:end="123:43">(</operator><literal type="number" pos:start="123:44" pos:end="123:48">44100</literal><operator pos:start="123:49" pos:end="123:49">*</operator><name pos:start="123:50" pos:end="123:64"><name pos:start="123:50" pos:end="123:50">s</name><operator pos:start="123:51" pos:end="123:52">-&gt;</operator><name pos:start="123:53" pos:end="123:64">downsampling</name></name><operator pos:start="123:65" pos:end="123:65">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:63"><expr pos:start="125:5" pos:end="125:62"><name pos:start="125:5" pos:end="125:17"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:17">frame_size</name></name> <operator pos:start="125:19" pos:end="125:19">=</operator> <name pos:start="125:21" pos:end="125:31"><name pos:start="125:21" pos:end="125:21">s</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:31">channels</name></name><operator pos:start="125:32" pos:end="125:32">*</operator><name pos:start="125:33" pos:end="125:46"><name pos:start="125:33" pos:end="125:33">s</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:46">block_align</name></name><operator pos:start="125:47" pos:end="125:47">*</operator><name pos:start="125:48" pos:end="125:62"><name pos:start="125:48" pos:end="125:48">s</name><operator pos:start="125:49" pos:end="125:50">-&gt;</operator><name pos:start="125:51" pos:end="125:62">downsampling</name></name></expr>;</expr_stmt>

<comment type="line" pos:start="127:1" pos:end="127:41">//    avctx-&gt;frame_size = s-&gt;block_align;</comment>



    <expr_stmt pos:start="131:5" pos:end="133:130"><expr pos:start="131:5" pos:end="133:129"><call pos:start="131:5" pos:end="133:129"><name pos:start="131:5" pos:end="131:10">av_log</name><argument_list pos:start="131:11" pos:end="133:129">(<argument pos:start="131:12" pos:end="131:16"><expr pos:start="131:12" pos:end="131:16"><name pos:start="131:12" pos:end="131:16">avctx</name></expr></argument>, <argument pos:start="131:19" pos:end="131:29"><expr pos:start="131:19" pos:end="131:29"><name pos:start="131:19" pos:end="131:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="131:32" pos:end="131:108"><expr pos:start="131:32" pos:end="131:108"><literal type="string" pos:start="131:32" pos:end="131:108">"Sonic: ver: %d.%d ls: %d dr: %d taps: %d block: %d frame: %d downsamp: %d\n"</literal></expr></argument>,

        <argument pos:start="133:9" pos:end="133:18"><expr pos:start="133:9" pos:end="133:18"><name pos:start="133:9" pos:end="133:18"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:18">version</name></name></expr></argument>, <argument pos:start="133:21" pos:end="133:36"><expr pos:start="133:21" pos:end="133:36"><name pos:start="133:21" pos:end="133:36"><name pos:start="133:21" pos:end="133:21">s</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:36">minor_version</name></name></expr></argument>, <argument pos:start="133:39" pos:end="133:49"><expr pos:start="133:39" pos:end="133:49"><name pos:start="133:39" pos:end="133:49"><name pos:start="133:39" pos:end="133:39">s</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:49">lossless</name></name></expr></argument>, <argument pos:start="133:52" pos:end="133:67"><expr pos:start="133:52" pos:end="133:67"><name pos:start="133:52" pos:end="133:67"><name pos:start="133:52" pos:end="133:52">s</name><operator pos:start="133:53" pos:end="133:54">-&gt;</operator><name pos:start="133:55" pos:end="133:67">decorrelation</name></name></expr></argument>, <argument pos:start="133:70" pos:end="133:80"><expr pos:start="133:70" pos:end="133:80"><name pos:start="133:70" pos:end="133:80"><name pos:start="133:70" pos:end="133:70">s</name><operator pos:start="133:71" pos:end="133:72">-&gt;</operator><name pos:start="133:73" pos:end="133:80">num_taps</name></name></expr></argument>, <argument pos:start="133:83" pos:end="133:96"><expr pos:start="133:83" pos:end="133:96"><name pos:start="133:83" pos:end="133:96"><name pos:start="133:83" pos:end="133:83">s</name><operator pos:start="133:84" pos:end="133:85">-&gt;</operator><name pos:start="133:86" pos:end="133:96">block_align</name></name></expr></argument>, <argument pos:start="133:99" pos:end="133:111"><expr pos:start="133:99" pos:end="133:111"><name pos:start="133:99" pos:end="133:111"><name pos:start="133:99" pos:end="133:99">s</name><operator pos:start="133:100" pos:end="133:101">-&gt;</operator><name pos:start="133:102" pos:end="133:111">frame_size</name></name></expr></argument>, <argument pos:start="133:114" pos:end="133:128"><expr pos:start="133:114" pos:end="133:128"><name pos:start="133:114" pos:end="133:128"><name pos:start="133:114" pos:end="133:114">s</name><operator pos:start="133:115" pos:end="133:116">-&gt;</operator><name pos:start="133:117" pos:end="133:128">downsampling</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="137:5" pos:end="137:20">// generate taps</comment>

    <expr_stmt pos:start="139:5" pos:end="139:65"><expr pos:start="139:5" pos:end="139:64"><name pos:start="139:5" pos:end="139:16"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:16">tap_quant</name></name> <operator pos:start="139:18" pos:end="139:18">=</operator> <call pos:start="139:20" pos:end="139:64"><name pos:start="139:20" pos:end="139:28">av_calloc</name><argument_list pos:start="139:29" pos:end="139:64">(<argument pos:start="139:30" pos:end="139:40"><expr pos:start="139:30" pos:end="139:40"><name pos:start="139:30" pos:end="139:40"><name pos:start="139:30" pos:end="139:30">s</name><operator pos:start="139:31" pos:end="139:32">-&gt;</operator><name pos:start="139:33" pos:end="139:40">num_taps</name></name></expr></argument>, <argument pos:start="139:43" pos:end="139:63"><expr pos:start="139:43" pos:end="139:63"><sizeof pos:start="139:43" pos:end="139:63">sizeof<argument_list pos:start="139:49" pos:end="139:63">(<argument pos:start="139:50" pos:end="139:62"><expr pos:start="139:50" pos:end="139:62"><operator pos:start="139:50" pos:end="139:50">*</operator><name pos:start="139:51" pos:end="139:62"><name pos:start="139:51" pos:end="139:51">s</name><operator pos:start="139:52" pos:end="139:53">-&gt;</operator><name pos:start="139:54" pos:end="139:62">tap_quant</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="143:31"><if pos:start="141:5" pos:end="143:31">if <condition pos:start="141:8" pos:end="141:22">(<expr pos:start="141:9" pos:end="141:21"><operator pos:start="141:9" pos:end="141:9">!</operator><name pos:start="141:10" pos:end="141:21"><name pos:start="141:10" pos:end="141:10">s</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:21">tap_quant</name></name></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:31"><block_content pos:start="143:9" pos:end="143:31">

        <return pos:start="143:9" pos:end="143:31">return <expr pos:start="143:16" pos:end="143:30"><call pos:start="143:16" pos:end="143:30"><name pos:start="143:16" pos:end="143:22">AVERROR</name><argument_list pos:start="143:23" pos:end="143:30">(<argument pos:start="143:24" pos:end="143:29"><expr pos:start="143:24" pos:end="143:29"><name pos:start="143:24" pos:end="143:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="147:5" pos:end="149:39">for <control pos:start="147:9" pos:end="147:37">(<init pos:start="147:10" pos:end="147:15"><expr pos:start="147:10" pos:end="147:14"><name pos:start="147:10" pos:end="147:10">i</name> <operator pos:start="147:12" pos:end="147:12">=</operator> <literal type="number" pos:start="147:14" pos:end="147:14">0</literal></expr>;</init> <condition pos:start="147:17" pos:end="147:32"><expr pos:start="147:17" pos:end="147:31"><name pos:start="147:17" pos:end="147:17">i</name> <operator pos:start="147:19" pos:end="147:19">&lt;</operator> <name pos:start="147:21" pos:end="147:31"><name pos:start="147:21" pos:end="147:21">s</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:31">num_taps</name></name></expr>;</condition> <incr pos:start="147:34" pos:end="147:36"><expr pos:start="147:34" pos:end="147:36"><name pos:start="147:34" pos:end="147:34">i</name><operator pos:start="147:35" pos:end="147:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="149:9" pos:end="149:39"><block_content pos:start="149:9" pos:end="149:39">

        <expr_stmt pos:start="149:9" pos:end="149:39"><expr pos:start="149:9" pos:end="149:38"><name pos:start="149:9" pos:end="149:23"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:20">tap_quant</name><index pos:start="149:21" pos:end="149:23">[<expr pos:start="149:22" pos:end="149:22"><name pos:start="149:22" pos:end="149:22">i</name></expr>]</index></name> <operator pos:start="149:25" pos:end="149:25">=</operator> <call pos:start="149:27" pos:end="149:38"><name pos:start="149:27" pos:end="149:33">ff_sqrt</name><argument_list pos:start="149:34" pos:end="149:38">(<argument pos:start="149:35" pos:end="149:37"><expr pos:start="149:35" pos:end="149:37"><name pos:start="149:35" pos:end="149:35">i</name><operator pos:start="149:36" pos:end="149:36">+</operator><literal type="number" pos:start="149:37" pos:end="149:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="153:5" pos:end="153:69"><expr pos:start="153:5" pos:end="153:68"><name pos:start="153:5" pos:end="153:18"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:18">predictor_k</name></name> <operator pos:start="153:20" pos:end="153:20">=</operator> <call pos:start="153:22" pos:end="153:68"><name pos:start="153:22" pos:end="153:30">av_calloc</name><argument_list pos:start="153:31" pos:end="153:68">(<argument pos:start="153:32" pos:end="153:42"><expr pos:start="153:32" pos:end="153:42"><name pos:start="153:32" pos:end="153:42"><name pos:start="153:32" pos:end="153:32">s</name><operator pos:start="153:33" pos:end="153:34">-&gt;</operator><name pos:start="153:35" pos:end="153:42">num_taps</name></name></expr></argument>, <argument pos:start="153:45" pos:end="153:67"><expr pos:start="153:45" pos:end="153:67"><sizeof pos:start="153:45" pos:end="153:67">sizeof<argument_list pos:start="153:51" pos:end="153:67">(<argument pos:start="153:52" pos:end="153:66"><expr pos:start="153:52" pos:end="153:66"><operator pos:start="153:52" pos:end="153:52">*</operator><name pos:start="153:53" pos:end="153:66"><name pos:start="153:53" pos:end="153:53">s</name><operator pos:start="153:54" pos:end="153:55">-&gt;</operator><name pos:start="153:56" pos:end="153:66">predictor_k</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="157:5" pos:end="167:5">for <control pos:start="157:9" pos:end="157:37">(<init pos:start="157:10" pos:end="157:15"><expr pos:start="157:10" pos:end="157:14"><name pos:start="157:10" pos:end="157:10">i</name> <operator pos:start="157:12" pos:end="157:12">=</operator> <literal type="number" pos:start="157:14" pos:end="157:14">0</literal></expr>;</init> <condition pos:start="157:17" pos:end="157:32"><expr pos:start="157:17" pos:end="157:31"><name pos:start="157:17" pos:end="157:17">i</name> <operator pos:start="157:19" pos:end="157:19">&lt;</operator> <name pos:start="157:21" pos:end="157:31"><name pos:start="157:21" pos:end="157:21">s</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:31">channels</name></name></expr>;</condition> <incr pos:start="157:34" pos:end="157:36"><expr pos:start="157:34" pos:end="157:36"><name pos:start="157:34" pos:end="157:34">i</name><operator pos:start="157:35" pos:end="157:36">++</operator></expr></incr>)</control>

    <block pos:start="159:5" pos:end="167:5">{<block_content pos:start="161:9" pos:end="165:35">

        <expr_stmt pos:start="161:9" pos:end="161:85"><expr pos:start="161:9" pos:end="161:84"><name pos:start="161:9" pos:end="161:29"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:26">predictor_state</name><index pos:start="161:27" pos:end="161:29">[<expr pos:start="161:28" pos:end="161:28"><name pos:start="161:28" pos:end="161:28">i</name></expr>]</index></name> <operator pos:start="161:31" pos:end="161:31">=</operator> <call pos:start="161:33" pos:end="161:84"><name pos:start="161:33" pos:end="161:41">av_calloc</name><argument_list pos:start="161:42" pos:end="161:84">(<argument pos:start="161:43" pos:end="161:53"><expr pos:start="161:43" pos:end="161:53"><name pos:start="161:43" pos:end="161:53"><name pos:start="161:43" pos:end="161:43">s</name><operator pos:start="161:44" pos:end="161:45">-&gt;</operator><name pos:start="161:46" pos:end="161:53">num_taps</name></name></expr></argument>, <argument pos:start="161:56" pos:end="161:83"><expr pos:start="161:56" pos:end="161:83"><sizeof pos:start="161:56" pos:end="161:83">sizeof<argument_list pos:start="161:62" pos:end="161:83">(<argument pos:start="161:63" pos:end="161:82"><expr pos:start="161:63" pos:end="161:82"><operator pos:start="161:63" pos:end="161:63">*</operator><operator pos:start="161:64" pos:end="161:64">*</operator><name pos:start="161:65" pos:end="161:82"><name pos:start="161:65" pos:end="161:65">s</name><operator pos:start="161:66" pos:end="161:67">-&gt;</operator><name pos:start="161:68" pos:end="161:82">predictor_state</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="163:9" pos:end="165:35"><if pos:start="163:9" pos:end="165:35">if <condition pos:start="163:12" pos:end="163:35">(<expr pos:start="163:13" pos:end="163:34"><operator pos:start="163:13" pos:end="163:13">!</operator><name pos:start="163:14" pos:end="163:34"><name pos:start="163:14" pos:end="163:14">s</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:31">predictor_state</name><index pos:start="163:32" pos:end="163:34">[<expr pos:start="163:33" pos:end="163:33"><name pos:start="163:33" pos:end="163:33">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:35"><block_content pos:start="165:13" pos:end="165:35">

            <return pos:start="165:13" pos:end="165:35">return <expr pos:start="165:20" pos:end="165:34"><call pos:start="165:20" pos:end="165:34"><name pos:start="165:20" pos:end="165:26">AVERROR</name><argument_list pos:start="165:27" pos:end="165:34">(<argument pos:start="165:28" pos:end="165:33"><expr pos:start="165:28" pos:end="165:33"><name pos:start="165:28" pos:end="165:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="171:5" pos:end="181:5">for <control pos:start="171:9" pos:end="171:37">(<init pos:start="171:10" pos:end="171:15"><expr pos:start="171:10" pos:end="171:14"><name pos:start="171:10" pos:end="171:10">i</name> <operator pos:start="171:12" pos:end="171:12">=</operator> <literal type="number" pos:start="171:14" pos:end="171:14">0</literal></expr>;</init> <condition pos:start="171:17" pos:end="171:32"><expr pos:start="171:17" pos:end="171:31"><name pos:start="171:17" pos:end="171:17">i</name> <operator pos:start="171:19" pos:end="171:19">&lt;</operator> <name pos:start="171:21" pos:end="171:31"><name pos:start="171:21" pos:end="171:21">s</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:31">channels</name></name></expr>;</condition> <incr pos:start="171:34" pos:end="171:36"><expr pos:start="171:34" pos:end="171:36"><name pos:start="171:34" pos:end="171:34">i</name><operator pos:start="171:35" pos:end="171:36">++</operator></expr></incr>)</control>

    <block pos:start="173:5" pos:end="181:5">{<block_content pos:start="175:9" pos:end="179:35">

        <expr_stmt pos:start="175:9" pos:end="175:84"><expr pos:start="175:9" pos:end="175:83"><name pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:24">coded_samples</name><index pos:start="175:25" pos:end="175:27">[<expr pos:start="175:26" pos:end="175:26"><name pos:start="175:26" pos:end="175:26">i</name></expr>]</index></name> <operator pos:start="175:29" pos:end="175:29">=</operator> <call pos:start="175:31" pos:end="175:83"><name pos:start="175:31" pos:end="175:39">av_calloc</name><argument_list pos:start="175:40" pos:end="175:83">(<argument pos:start="175:41" pos:end="175:54"><expr pos:start="175:41" pos:end="175:54"><name pos:start="175:41" pos:end="175:54"><name pos:start="175:41" pos:end="175:41">s</name><operator pos:start="175:42" pos:end="175:43">-&gt;</operator><name pos:start="175:44" pos:end="175:54">block_align</name></name></expr></argument>, <argument pos:start="175:57" pos:end="175:82"><expr pos:start="175:57" pos:end="175:82"><sizeof pos:start="175:57" pos:end="175:82">sizeof<argument_list pos:start="175:63" pos:end="175:82">(<argument pos:start="175:64" pos:end="175:81"><expr pos:start="175:64" pos:end="175:81"><operator pos:start="175:64" pos:end="175:64">*</operator><operator pos:start="175:65" pos:end="175:65">*</operator><name pos:start="175:66" pos:end="175:81"><name pos:start="175:66" pos:end="175:66">s</name><operator pos:start="175:67" pos:end="175:68">-&gt;</operator><name pos:start="175:69" pos:end="175:81">coded_samples</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="177:9" pos:end="179:35"><if pos:start="177:9" pos:end="179:35">if <condition pos:start="177:12" pos:end="177:33">(<expr pos:start="177:13" pos:end="177:32"><operator pos:start="177:13" pos:end="177:13">!</operator><name pos:start="177:14" pos:end="177:32"><name pos:start="177:14" pos:end="177:14">s</name><operator pos:start="177:15" pos:end="177:16">-&gt;</operator><name pos:start="177:17" pos:end="177:29">coded_samples</name><index pos:start="177:30" pos:end="177:32">[<expr pos:start="177:31" pos:end="177:31"><name pos:start="177:31" pos:end="177:31">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="179:13" pos:end="179:35"><block_content pos:start="179:13" pos:end="179:35">

            <return pos:start="179:13" pos:end="179:35">return <expr pos:start="179:20" pos:end="179:34"><call pos:start="179:20" pos:end="179:34"><name pos:start="179:20" pos:end="179:26">AVERROR</name><argument_list pos:start="179:27" pos:end="179:34">(<argument pos:start="179:28" pos:end="179:33"><expr pos:start="179:28" pos:end="179:33"><name pos:start="179:28" pos:end="179:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="183:5" pos:end="183:71"><expr pos:start="183:5" pos:end="183:70"><name pos:start="183:5" pos:end="183:18"><name pos:start="183:5" pos:end="183:5">s</name><operator pos:start="183:6" pos:end="183:7">-&gt;</operator><name pos:start="183:8" pos:end="183:18">int_samples</name></name> <operator pos:start="183:20" pos:end="183:20">=</operator> <call pos:start="183:22" pos:end="183:70"><name pos:start="183:22" pos:end="183:30">av_calloc</name><argument_list pos:start="183:31" pos:end="183:70">(<argument pos:start="183:32" pos:end="183:44"><expr pos:start="183:32" pos:end="183:44"><name pos:start="183:32" pos:end="183:44"><name pos:start="183:32" pos:end="183:32">s</name><operator pos:start="183:33" pos:end="183:34">-&gt;</operator><name pos:start="183:35" pos:end="183:44">frame_size</name></name></expr></argument>, <argument pos:start="183:47" pos:end="183:69"><expr pos:start="183:47" pos:end="183:69"><sizeof pos:start="183:47" pos:end="183:69">sizeof<argument_list pos:start="183:53" pos:end="183:69">(<argument pos:start="183:54" pos:end="183:68"><expr pos:start="183:54" pos:end="183:68"><operator pos:start="183:54" pos:end="183:54">*</operator><name pos:start="183:55" pos:end="183:68"><name pos:start="183:55" pos:end="183:55">s</name><operator pos:start="183:56" pos:end="183:57">-&gt;</operator><name pos:start="183:58" pos:end="183:68">int_samples</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="187:31"><if pos:start="185:5" pos:end="187:31">if <condition pos:start="185:8" pos:end="185:24">(<expr pos:start="185:9" pos:end="185:23"><operator pos:start="185:9" pos:end="185:9">!</operator><name pos:start="185:10" pos:end="185:23"><name pos:start="185:10" pos:end="185:10">s</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:23">int_samples</name></name></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="187:31"><block_content pos:start="187:9" pos:end="187:31">

        <return pos:start="187:9" pos:end="187:31">return <expr pos:start="187:16" pos:end="187:30"><call pos:start="187:16" pos:end="187:30"><name pos:start="187:16" pos:end="187:22">AVERROR</name><argument_list pos:start="187:23" pos:end="187:30">(<argument pos:start="187:24" pos:end="187:29"><expr pos:start="187:24" pos:end="187:29"><name pos:start="187:24" pos:end="187:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:42"><expr pos:start="191:5" pos:end="191:41"><name pos:start="191:5" pos:end="191:21"><name pos:start="191:5" pos:end="191:9">avctx</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:21">sample_fmt</name></name> <operator pos:start="191:23" pos:end="191:23">=</operator> <name pos:start="191:25" pos:end="191:41">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>

    <return pos:start="193:5" pos:end="193:13">return <expr pos:start="193:12" pos:end="193:12"><literal type="number" pos:start="193:12" pos:end="193:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
