<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22548.c" pos:tabs="8"><function pos:start="1:1" pos:end="343:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decompress_i</name><parameter_list pos:start="1:24" pos:end="1:75">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">uint32_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">dst</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:74">linesize</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="343:1">{<block_content pos:start="5:5" pos:end="341:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SCPRContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">GetByteContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">gb</name> <init pos:start="7:24" pos:end="7:31">= <expr pos:start="7:26" pos:end="7:31"><operator pos:start="7:26" pos:end="7:26">&amp;</operator><name pos:start="7:27" pos:end="7:31"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">cx</name> <init pos:start="9:12" pos:end="9:14">= <expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr></init></decl>, <decl pos:start="9:17" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">cx1</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>, <decl pos:start="9:26" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:26">k</name> <init pos:start="9:28" pos:end="9:30">= <expr pos:start="9:30" pos:end="9:30"><literal type="number" pos:start="9:30" pos:end="9:30">0</literal></expr></init></decl>, <decl pos:start="9:33" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:35">clr</name> <init pos:start="9:37" pos:end="9:39">= <expr pos:start="9:39" pos:end="9:39"><literal type="number" pos:start="9:39" pos:end="9:39">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">run</name></decl>, <decl pos:start="11:14" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:14">r</name></decl>, <decl pos:start="11:17" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:17">g</name></decl>, <decl pos:start="11:20" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:20">b</name></decl>, <decl pos:start="11:23" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:25">off</name></decl>, <decl pos:start="11:28" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:28" pos:end="11:28">y</name> <init pos:start="11:30" pos:end="11:32">= <expr pos:start="11:32" pos:end="11:32"><literal type="number" pos:start="11:32" pos:end="11:32">0</literal></expr></init></decl>, <decl pos:start="11:35" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:35" pos:end="11:35">x</name> <init pos:start="11:37" pos:end="11:39">= <expr pos:start="11:39" pos:end="11:39"><literal type="number" pos:start="11:39" pos:end="11:39">0</literal></expr></init></decl>, <decl pos:start="11:42" pos:end="11:44"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:42" pos:end="11:44">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:21">cxshift</name> <init pos:start="13:23" pos:end="13:34">= <expr pos:start="13:25" pos:end="13:34"><name pos:start="13:25" pos:end="13:34"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:34">cxshift</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">unsigned</name></type> <name pos:start="15:14" pos:end="15:15">lx</name></decl>, <decl pos:start="15:18" pos:end="15:19"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:18" pos:end="15:19">ly</name></decl>, <decl pos:start="15:22" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:22" pos:end="15:26">ptype</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:21"><expr pos:start="19:5" pos:end="19:20"><call pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:17">reinit_tables</name><argument_list pos:start="19:18" pos:end="19:20">(<argument pos:start="19:19" pos:end="19:19"><expr pos:start="19:19" pos:end="19:19"><name pos:start="19:19" pos:end="19:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:28"><expr pos:start="21:5" pos:end="21:27"><call pos:start="21:5" pos:end="21:27"><name pos:start="21:5" pos:end="21:20">bytestream2_skip</name><argument_list pos:start="21:21" pos:end="21:27">(<argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">gb</name></expr></argument>, <argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><call pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:19">init_rangecoder</name><argument_list pos:start="23:20" pos:end="23:31">(<argument pos:start="23:21" pos:end="23:26"><expr pos:start="23:21" pos:end="23:26"><operator pos:start="23:21" pos:end="23:21">&amp;</operator><name pos:start="23:22" pos:end="23:26"><name pos:start="23:22" pos:end="23:22">s</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:26">rc</name></name></expr></argument>, <argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><name pos:start="23:29" pos:end="23:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="27:5" pos:end="99:5">while <condition pos:start="27:11" pos:end="27:32">(<expr pos:start="27:12" pos:end="27:31"><name pos:start="27:12" pos:end="27:12">k</name> <operator pos:start="27:14" pos:end="27:14">&lt;</operator> <name pos:start="27:16" pos:end="27:27"><name pos:start="27:16" pos:end="27:20">avctx</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:27">width</name></name> <operator pos:start="27:29" pos:end="27:29">+</operator> <literal type="number" pos:start="27:31" pos:end="27:31">1</literal></expr>)</condition> <block pos:start="27:34" pos:end="99:5">{<block_content pos:start="29:9" pos:end="97:9">

        <expr_stmt pos:start="29:9" pos:end="29:68"><expr pos:start="29:9" pos:end="29:67"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:67"><name pos:start="29:15" pos:end="29:25">decode_unit</name><argument_list pos:start="29:26" pos:end="29:67">(<argument pos:start="29:27" pos:end="29:27"><expr pos:start="29:27" pos:end="29:27"><name pos:start="29:27" pos:end="29:27">s</name></expr></argument>, <argument pos:start="29:30" pos:end="29:57"><expr pos:start="29:30" pos:end="29:57"><operator pos:start="29:30" pos:end="29:30">&amp;</operator><name pos:start="29:31" pos:end="29:57"><name pos:start="29:31" pos:end="29:31">s</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:44">pixel_model</name><index pos:start="29:45" pos:end="29:47">[<expr pos:start="29:46" pos:end="29:46"><literal type="number" pos:start="29:46" pos:end="29:46">0</literal></expr>]</index><index pos:start="29:48" pos:end="29:57">[<expr pos:start="29:49" pos:end="29:56"><name pos:start="29:49" pos:end="29:50">cx</name> <operator pos:start="29:52" pos:end="29:52">+</operator> <name pos:start="29:54" pos:end="29:56">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="29:60" pos:end="29:62"><expr pos:start="29:60" pos:end="29:62"><literal type="number" pos:start="29:60" pos:end="29:62">400</literal></expr></argument>, <argument pos:start="29:65" pos:end="29:66"><expr pos:start="29:65" pos:end="29:66"><operator pos:start="29:65" pos:end="29:65">&amp;</operator><name pos:start="29:66" pos:end="29:66">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:23"><if pos:start="31:9" pos:end="33:23">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:23"><block_content pos:start="33:13" pos:end="33:23">

            <return pos:start="33:13" pos:end="33:23">return <expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:11">cx1</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">(</operator><name pos:start="37:16" pos:end="37:17">cx</name> <operator pos:start="37:19" pos:end="37:20">&lt;&lt;</operator> <literal type="number" pos:start="37:22" pos:end="37:22">6</literal><operator pos:start="37:23" pos:end="37:23">)</operator> <operator pos:start="37:25" pos:end="37:25">&amp;</operator> <literal type="number" pos:start="37:27" pos:end="37:31">0xFC0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:10">cx</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:14">r</name> <operator pos:start="39:16" pos:end="39:17">&gt;&gt;</operator> <name pos:start="39:19" pos:end="39:25">cxshift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:68"><expr pos:start="41:9" pos:end="41:67"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:67"><name pos:start="41:15" pos:end="41:25">decode_unit</name><argument_list pos:start="41:26" pos:end="41:67">(<argument pos:start="41:27" pos:end="41:27"><expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">s</name></expr></argument>, <argument pos:start="41:30" pos:end="41:57"><expr pos:start="41:30" pos:end="41:57"><operator pos:start="41:30" pos:end="41:30">&amp;</operator><name pos:start="41:31" pos:end="41:57"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:44">pixel_model</name><index pos:start="41:45" pos:end="41:47">[<expr pos:start="41:46" pos:end="41:46"><literal type="number" pos:start="41:46" pos:end="41:46">1</literal></expr>]</index><index pos:start="41:48" pos:end="41:57">[<expr pos:start="41:49" pos:end="41:56"><name pos:start="41:49" pos:end="41:50">cx</name> <operator pos:start="41:52" pos:end="41:52">+</operator> <name pos:start="41:54" pos:end="41:56">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="41:60" pos:end="41:62"><expr pos:start="41:60" pos:end="41:62"><literal type="number" pos:start="41:60" pos:end="41:62">400</literal></expr></argument>, <argument pos:start="41:65" pos:end="41:66"><expr pos:start="41:65" pos:end="41:66"><operator pos:start="41:65" pos:end="41:65">&amp;</operator><name pos:start="41:66" pos:end="41:66">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:23"><if pos:start="43:9" pos:end="45:23">if <condition pos:start="43:12" pos:end="43:20">(<expr pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:15">ret</name> <operator pos:start="43:17" pos:end="43:17">&lt;</operator> <literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:23"><block_content pos:start="45:13" pos:end="45:23">

            <return pos:start="45:13" pos:end="45:23">return <expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:32"><expr pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:11">cx1</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <operator pos:start="49:15" pos:end="49:15">(</operator><name pos:start="49:16" pos:end="49:17">cx</name> <operator pos:start="49:19" pos:end="49:20">&lt;&lt;</operator> <literal type="number" pos:start="49:22" pos:end="49:22">6</literal><operator pos:start="49:23" pos:end="49:23">)</operator> <operator pos:start="49:25" pos:end="49:25">&amp;</operator> <literal type="number" pos:start="49:27" pos:end="49:31">0xFC0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:26"><expr pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:10">cx</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <name pos:start="51:14" pos:end="51:14">g</name> <operator pos:start="51:16" pos:end="51:17">&gt;&gt;</operator> <name pos:start="51:19" pos:end="51:25">cxshift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:68"><expr pos:start="53:9" pos:end="53:67"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:67"><name pos:start="53:15" pos:end="53:25">decode_unit</name><argument_list pos:start="53:26" pos:end="53:67">(<argument pos:start="53:27" pos:end="53:27"><expr pos:start="53:27" pos:end="53:27"><name pos:start="53:27" pos:end="53:27">s</name></expr></argument>, <argument pos:start="53:30" pos:end="53:57"><expr pos:start="53:30" pos:end="53:57"><operator pos:start="53:30" pos:end="53:30">&amp;</operator><name pos:start="53:31" pos:end="53:57"><name pos:start="53:31" pos:end="53:31">s</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:44">pixel_model</name><index pos:start="53:45" pos:end="53:47">[<expr pos:start="53:46" pos:end="53:46"><literal type="number" pos:start="53:46" pos:end="53:46">2</literal></expr>]</index><index pos:start="53:48" pos:end="53:57">[<expr pos:start="53:49" pos:end="53:56"><name pos:start="53:49" pos:end="53:50">cx</name> <operator pos:start="53:52" pos:end="53:52">+</operator> <name pos:start="53:54" pos:end="53:56">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="53:60" pos:end="53:62"><expr pos:start="53:60" pos:end="53:62"><literal type="number" pos:start="53:60" pos:end="53:62">400</literal></expr></argument>, <argument pos:start="53:65" pos:end="53:66"><expr pos:start="53:65" pos:end="53:66"><operator pos:start="53:65" pos:end="53:65">&amp;</operator><name pos:start="53:66" pos:end="53:66">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:23"><if pos:start="55:9" pos:end="57:23">if <condition pos:start="55:12" pos:end="55:20">(<expr pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">&lt;</operator> <literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:23"><block_content pos:start="57:13" pos:end="57:23">

            <return pos:start="57:13" pos:end="57:23">return <expr pos:start="57:20" pos:end="57:22"><name pos:start="57:20" pos:end="57:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:11">cx1</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <operator pos:start="61:15" pos:end="61:15">(</operator><name pos:start="61:16" pos:end="61:17">cx</name> <operator pos:start="61:19" pos:end="61:20">&lt;&lt;</operator> <literal type="number" pos:start="61:22" pos:end="61:22">6</literal><operator pos:start="61:23" pos:end="61:23">)</operator> <operator pos:start="61:25" pos:end="61:25">&amp;</operator> <literal type="number" pos:start="61:27" pos:end="61:31">0xFC0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:10">cx</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <name pos:start="63:14" pos:end="63:14">b</name> <operator pos:start="63:16" pos:end="63:17">&gt;&gt;</operator> <name pos:start="63:19" pos:end="63:25">cxshift</name></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:63"><expr pos:start="67:9" pos:end="67:62"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:62"><name pos:start="67:15" pos:end="67:26">decode_value</name><argument_list pos:start="67:27" pos:end="67:62">(<argument pos:start="67:28" pos:end="67:28"><expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">s</name></expr></argument>, <argument pos:start="67:31" pos:end="67:45"><expr pos:start="67:31" pos:end="67:45"><name pos:start="67:31" pos:end="67:45"><name pos:start="67:31" pos:end="67:31">s</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:42">run_model</name><index pos:start="67:43" pos:end="67:45">[<expr pos:start="67:44" pos:end="67:44"><literal type="number" pos:start="67:44" pos:end="67:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:48" pos:end="67:50"><expr pos:start="67:48" pos:end="67:50"><literal type="number" pos:start="67:48" pos:end="67:50">256</literal></expr></argument>, <argument pos:start="67:53" pos:end="67:55"><expr pos:start="67:53" pos:end="67:55"><literal type="number" pos:start="67:53" pos:end="67:55">400</literal></expr></argument>, <argument pos:start="67:58" pos:end="67:61"><expr pos:start="67:58" pos:end="67:61"><operator pos:start="67:58" pos:end="67:58">&amp;</operator><name pos:start="67:59" pos:end="67:61">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:23"><if pos:start="69:9" pos:end="71:23">if <condition pos:start="69:12" pos:end="69:20">(<expr pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">&lt;</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:23"><block_content pos:start="71:13" pos:end="71:23">

            <return pos:start="71:13" pos:end="71:23">return <expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:11">clr</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">(</operator><name pos:start="75:16" pos:end="75:16">b</name> <operator pos:start="75:18" pos:end="75:19">&lt;&lt;</operator> <literal type="number" pos:start="75:21" pos:end="75:22">16</literal><operator pos:start="75:23" pos:end="75:23">)</operator> <operator pos:start="75:25" pos:end="75:25">+</operator> <operator pos:start="75:27" pos:end="75:27">(</operator><name pos:start="75:28" pos:end="75:28">g</name> <operator pos:start="75:30" pos:end="75:31">&lt;&lt;</operator> <literal type="number" pos:start="75:33" pos:end="75:33">8</literal><operator pos:start="75:34" pos:end="75:34">)</operator> <operator pos:start="75:36" pos:end="75:36">+</operator> <name pos:start="75:38" pos:end="75:38">r</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:17"><expr pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:9">k</name> <operator pos:start="77:11" pos:end="77:12">+=</operator> <name pos:start="77:14" pos:end="77:16">run</name></expr>;</expr_stmt>

        <while pos:start="79:9" pos:end="97:9">while <condition pos:start="79:15" pos:end="79:25">(<expr pos:start="79:16" pos:end="79:24"><name pos:start="79:16" pos:end="79:18">run</name><operator pos:start="79:19" pos:end="79:20">--</operator> <operator pos:start="79:22" pos:end="79:22">&gt;</operator> <literal type="number" pos:start="79:24" pos:end="79:24">0</literal></expr>)</condition> <block pos:start="79:27" pos:end="97:9">{<block_content pos:start="81:13" pos:end="95:13">

            <expr_stmt pos:start="81:13" pos:end="81:40"><expr pos:start="81:13" pos:end="81:39"><name pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:15">dst</name><index pos:start="81:16" pos:end="81:33">[<expr pos:start="81:17" pos:end="81:32"><name pos:start="81:17" pos:end="81:17">y</name> <operator pos:start="81:19" pos:end="81:19">*</operator> <name pos:start="81:21" pos:end="81:28">linesize</name> <operator pos:start="81:30" pos:end="81:30">+</operator> <name pos:start="81:32" pos:end="81:32">x</name></expr>]</index></name> <operator pos:start="81:35" pos:end="81:35">=</operator> <name pos:start="81:37" pos:end="81:39">clr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:19"><expr pos:start="83:13" pos:end="83:18"><name pos:start="83:13" pos:end="83:14">lx</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <name pos:start="83:18" pos:end="83:18">x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:19"><expr pos:start="85:13" pos:end="85:18"><name pos:start="85:13" pos:end="85:14">ly</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <name pos:start="85:18" pos:end="85:18">y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:16"><expr pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:13">x</name><operator pos:start="87:14" pos:end="87:15">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="95:13"><if pos:start="89:13" pos:end="95:13">if <condition pos:start="89:16" pos:end="89:34">(<expr pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:17">x</name> <operator pos:start="89:19" pos:end="89:20">&gt;=</operator> <name pos:start="89:22" pos:end="89:33"><name pos:start="89:22" pos:end="89:26">avctx</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:33">width</name></name></expr>)</condition> <block pos:start="89:36" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:20">

                <expr_stmt pos:start="91:17" pos:end="91:22"><expr pos:start="91:17" pos:end="91:21"><name pos:start="91:17" pos:end="91:17">x</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <literal type="number" pos:start="91:21" pos:end="91:21">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:20"><expr pos:start="93:17" pos:end="93:19"><name pos:start="93:17" pos:end="93:17">y</name><operator pos:start="93:18" pos:end="93:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></while>

    <expr_stmt pos:start="101:5" pos:end="101:24"><expr pos:start="101:5" pos:end="101:23"><name pos:start="101:5" pos:end="101:7">off</name> <operator pos:start="101:9" pos:end="101:9">=</operator> <operator pos:start="101:11" pos:end="101:11">-</operator><name pos:start="101:12" pos:end="101:19">linesize</name> <operator pos:start="101:21" pos:end="101:21">-</operator> <literal type="number" pos:start="101:23" pos:end="101:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:14"><expr pos:start="103:5" pos:end="103:13"><name pos:start="103:5" pos:end="103:9">ptype</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <literal type="number" pos:start="103:13" pos:end="103:13">0</literal></expr>;</expr_stmt>



    <while pos:start="107:5" pos:end="337:5">while <condition pos:start="107:11" pos:end="107:49">(<expr pos:start="107:12" pos:end="107:48"><name pos:start="107:12" pos:end="107:12">x</name> <operator pos:start="107:14" pos:end="107:14">&lt;</operator> <name pos:start="107:16" pos:end="107:27"><name pos:start="107:16" pos:end="107:20">avctx</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:27">width</name></name> <operator pos:start="107:29" pos:end="107:30">&amp;&amp;</operator> <name pos:start="107:32" pos:end="107:32">y</name> <operator pos:start="107:34" pos:end="107:34">&lt;</operator> <name pos:start="107:36" pos:end="107:48"><name pos:start="107:36" pos:end="107:40">avctx</name><operator pos:start="107:41" pos:end="107:42">-&gt;</operator><name pos:start="107:43" pos:end="107:48">height</name></name></expr>)</condition> <block pos:start="107:51" pos:end="337:5">{<block_content pos:start="109:9" pos:end="335:9">

        <expr_stmt pos:start="109:9" pos:end="109:67"><expr pos:start="109:9" pos:end="109:66"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:66"><name pos:start="109:15" pos:end="109:26">decode_value</name><argument_list pos:start="109:27" pos:end="109:66">(<argument pos:start="109:28" pos:end="109:28"><expr pos:start="109:28" pos:end="109:28"><name pos:start="109:28" pos:end="109:28">s</name></expr></argument>, <argument pos:start="109:31" pos:end="109:48"><expr pos:start="109:31" pos:end="109:48"><name pos:start="109:31" pos:end="109:48"><name pos:start="109:31" pos:end="109:31">s</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:41">op_model</name><index pos:start="109:42" pos:end="109:48">[<expr pos:start="109:43" pos:end="109:47"><name pos:start="109:43" pos:end="109:47">ptype</name></expr>]</index></name></expr></argument>, <argument pos:start="109:51" pos:end="109:51"><expr pos:start="109:51" pos:end="109:51"><literal type="number" pos:start="109:51" pos:end="109:51">6</literal></expr></argument>, <argument pos:start="109:54" pos:end="109:57"><expr pos:start="109:54" pos:end="109:57"><literal type="number" pos:start="109:54" pos:end="109:57">1000</literal></expr></argument>, <argument pos:start="109:60" pos:end="109:65"><expr pos:start="109:60" pos:end="109:65"><operator pos:start="109:60" pos:end="109:60">&amp;</operator><name pos:start="109:61" pos:end="109:65">ptype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="113:23"><if pos:start="111:9" pos:end="113:23">if <condition pos:start="111:12" pos:end="111:20">(<expr pos:start="111:13" pos:end="111:19"><name pos:start="111:13" pos:end="111:15">ret</name> <operator pos:start="111:17" pos:end="111:17">&lt;</operator> <literal type="number" pos:start="111:19" pos:end="111:19">0</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:23"><block_content pos:start="113:13" pos:end="113:23">

            <return pos:start="113:13" pos:end="113:23">return <expr pos:start="113:20" pos:end="113:22"><name pos:start="113:20" pos:end="113:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="115:9" pos:end="155:9"><if pos:start="115:9" pos:end="155:9">if <condition pos:start="115:12" pos:end="115:23">(<expr pos:start="115:13" pos:end="115:22"><name pos:start="115:13" pos:end="115:17">ptype</name> <operator pos:start="115:19" pos:end="115:20">==</operator> <literal type="number" pos:start="115:22" pos:end="115:22">0</literal></expr>)</condition> <block pos:start="115:25" pos:end="155:9">{<block_content pos:start="117:13" pos:end="153:43">

            <expr_stmt pos:start="117:13" pos:end="117:72"><expr pos:start="117:13" pos:end="117:71"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:71"><name pos:start="117:19" pos:end="117:29">decode_unit</name><argument_list pos:start="117:30" pos:end="117:71">(<argument pos:start="117:31" pos:end="117:31"><expr pos:start="117:31" pos:end="117:31"><name pos:start="117:31" pos:end="117:31">s</name></expr></argument>, <argument pos:start="117:34" pos:end="117:61"><expr pos:start="117:34" pos:end="117:61"><operator pos:start="117:34" pos:end="117:34">&amp;</operator><name pos:start="117:35" pos:end="117:61"><name pos:start="117:35" pos:end="117:35">s</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:48">pixel_model</name><index pos:start="117:49" pos:end="117:51">[<expr pos:start="117:50" pos:end="117:50"><literal type="number" pos:start="117:50" pos:end="117:50">0</literal></expr>]</index><index pos:start="117:52" pos:end="117:61">[<expr pos:start="117:53" pos:end="117:60"><name pos:start="117:53" pos:end="117:54">cx</name> <operator pos:start="117:56" pos:end="117:56">+</operator> <name pos:start="117:58" pos:end="117:60">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="117:64" pos:end="117:66"><expr pos:start="117:64" pos:end="117:66"><literal type="number" pos:start="117:64" pos:end="117:66">400</literal></expr></argument>, <argument pos:start="117:69" pos:end="117:70"><expr pos:start="117:69" pos:end="117:70"><operator pos:start="117:69" pos:end="117:69">&amp;</operator><name pos:start="117:70" pos:end="117:70">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="121:27"><if pos:start="119:13" pos:end="121:27">if <condition pos:start="119:16" pos:end="119:24">(<expr pos:start="119:17" pos:end="119:23"><name pos:start="119:17" pos:end="119:19">ret</name> <operator pos:start="119:21" pos:end="119:21">&lt;</operator> <literal type="number" pos:start="119:23" pos:end="119:23">0</literal></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:27"><block_content pos:start="121:17" pos:end="121:27">

                <return pos:start="121:17" pos:end="121:27">return <expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="125:13" pos:end="125:36"><expr pos:start="125:13" pos:end="125:35"><name pos:start="125:13" pos:end="125:15">cx1</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <operator pos:start="125:19" pos:end="125:19">(</operator><name pos:start="125:20" pos:end="125:21">cx</name> <operator pos:start="125:23" pos:end="125:24">&lt;&lt;</operator> <literal type="number" pos:start="125:26" pos:end="125:26">6</literal><operator pos:start="125:27" pos:end="125:27">)</operator> <operator pos:start="125:29" pos:end="125:29">&amp;</operator> <literal type="number" pos:start="125:31" pos:end="125:35">0xFC0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:30"><expr pos:start="127:13" pos:end="127:29"><name pos:start="127:13" pos:end="127:14">cx</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <name pos:start="127:18" pos:end="127:18">r</name> <operator pos:start="127:20" pos:end="127:21">&gt;&gt;</operator> <name pos:start="127:23" pos:end="127:29">cxshift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:72"><expr pos:start="129:13" pos:end="129:71"><name pos:start="129:13" pos:end="129:15">ret</name> <operator pos:start="129:17" pos:end="129:17">=</operator> <call pos:start="129:19" pos:end="129:71"><name pos:start="129:19" pos:end="129:29">decode_unit</name><argument_list pos:start="129:30" pos:end="129:71">(<argument pos:start="129:31" pos:end="129:31"><expr pos:start="129:31" pos:end="129:31"><name pos:start="129:31" pos:end="129:31">s</name></expr></argument>, <argument pos:start="129:34" pos:end="129:61"><expr pos:start="129:34" pos:end="129:61"><operator pos:start="129:34" pos:end="129:34">&amp;</operator><name pos:start="129:35" pos:end="129:61"><name pos:start="129:35" pos:end="129:35">s</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:48">pixel_model</name><index pos:start="129:49" pos:end="129:51">[<expr pos:start="129:50" pos:end="129:50"><literal type="number" pos:start="129:50" pos:end="129:50">1</literal></expr>]</index><index pos:start="129:52" pos:end="129:61">[<expr pos:start="129:53" pos:end="129:60"><name pos:start="129:53" pos:end="129:54">cx</name> <operator pos:start="129:56" pos:end="129:56">+</operator> <name pos:start="129:58" pos:end="129:60">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="129:64" pos:end="129:66"><expr pos:start="129:64" pos:end="129:66"><literal type="number" pos:start="129:64" pos:end="129:66">400</literal></expr></argument>, <argument pos:start="129:69" pos:end="129:70"><expr pos:start="129:69" pos:end="129:70"><operator pos:start="129:69" pos:end="129:69">&amp;</operator><name pos:start="129:70" pos:end="129:70">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="133:27"><if pos:start="131:13" pos:end="133:27">if <condition pos:start="131:16" pos:end="131:24">(<expr pos:start="131:17" pos:end="131:23"><name pos:start="131:17" pos:end="131:19">ret</name> <operator pos:start="131:21" pos:end="131:21">&lt;</operator> <literal type="number" pos:start="131:23" pos:end="131:23">0</literal></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:27"><block_content pos:start="133:17" pos:end="133:27">

                <return pos:start="133:17" pos:end="133:27">return <expr pos:start="133:24" pos:end="133:26"><name pos:start="133:24" pos:end="133:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="137:13" pos:end="137:36"><expr pos:start="137:13" pos:end="137:35"><name pos:start="137:13" pos:end="137:15">cx1</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <operator pos:start="137:19" pos:end="137:19">(</operator><name pos:start="137:20" pos:end="137:21">cx</name> <operator pos:start="137:23" pos:end="137:24">&lt;&lt;</operator> <literal type="number" pos:start="137:26" pos:end="137:26">6</literal><operator pos:start="137:27" pos:end="137:27">)</operator> <operator pos:start="137:29" pos:end="137:29">&amp;</operator> <literal type="number" pos:start="137:31" pos:end="137:35">0xFC0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:30"><expr pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:14">cx</name> <operator pos:start="139:16" pos:end="139:16">=</operator> <name pos:start="139:18" pos:end="139:18">g</name> <operator pos:start="139:20" pos:end="139:21">&gt;&gt;</operator> <name pos:start="139:23" pos:end="139:29">cxshift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:72"><expr pos:start="141:13" pos:end="141:71"><name pos:start="141:13" pos:end="141:15">ret</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="141:71"><name pos:start="141:19" pos:end="141:29">decode_unit</name><argument_list pos:start="141:30" pos:end="141:71">(<argument pos:start="141:31" pos:end="141:31"><expr pos:start="141:31" pos:end="141:31"><name pos:start="141:31" pos:end="141:31">s</name></expr></argument>, <argument pos:start="141:34" pos:end="141:61"><expr pos:start="141:34" pos:end="141:61"><operator pos:start="141:34" pos:end="141:34">&amp;</operator><name pos:start="141:35" pos:end="141:61"><name pos:start="141:35" pos:end="141:35">s</name><operator pos:start="141:36" pos:end="141:37">-&gt;</operator><name pos:start="141:38" pos:end="141:48">pixel_model</name><index pos:start="141:49" pos:end="141:51">[<expr pos:start="141:50" pos:end="141:50"><literal type="number" pos:start="141:50" pos:end="141:50">2</literal></expr>]</index><index pos:start="141:52" pos:end="141:61">[<expr pos:start="141:53" pos:end="141:60"><name pos:start="141:53" pos:end="141:54">cx</name> <operator pos:start="141:56" pos:end="141:56">+</operator> <name pos:start="141:58" pos:end="141:60">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="141:64" pos:end="141:66"><expr pos:start="141:64" pos:end="141:66"><literal type="number" pos:start="141:64" pos:end="141:66">400</literal></expr></argument>, <argument pos:start="141:69" pos:end="141:70"><expr pos:start="141:69" pos:end="141:70"><operator pos:start="141:69" pos:end="141:69">&amp;</operator><name pos:start="141:70" pos:end="141:70">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="145:27"><if pos:start="143:13" pos:end="145:27">if <condition pos:start="143:16" pos:end="143:24">(<expr pos:start="143:17" pos:end="143:23"><name pos:start="143:17" pos:end="143:19">ret</name> <operator pos:start="143:21" pos:end="143:21">&lt;</operator> <literal type="number" pos:start="143:23" pos:end="143:23">0</literal></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:27"><block_content pos:start="145:17" pos:end="145:27">

                <return pos:start="145:17" pos:end="145:27">return <expr pos:start="145:24" pos:end="145:26"><name pos:start="145:24" pos:end="145:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="149:13" pos:end="149:36"><expr pos:start="149:13" pos:end="149:35"><name pos:start="149:13" pos:end="149:15">cx1</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <operator pos:start="149:19" pos:end="149:19">(</operator><name pos:start="149:20" pos:end="149:21">cx</name> <operator pos:start="149:23" pos:end="149:24">&lt;&lt;</operator> <literal type="number" pos:start="149:26" pos:end="149:26">6</literal><operator pos:start="149:27" pos:end="149:27">)</operator> <operator pos:start="149:29" pos:end="149:29">&amp;</operator> <literal type="number" pos:start="149:31" pos:end="149:35">0xFC0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:30"><expr pos:start="151:13" pos:end="151:29"><name pos:start="151:13" pos:end="151:14">cx</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <name pos:start="151:18" pos:end="151:18">b</name> <operator pos:start="151:20" pos:end="151:21">&gt;&gt;</operator> <name pos:start="151:23" pos:end="151:29">cxshift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:43"><expr pos:start="153:13" pos:end="153:42"><name pos:start="153:13" pos:end="153:15">clr</name> <operator pos:start="153:17" pos:end="153:17">=</operator> <operator pos:start="153:19" pos:end="153:19">(</operator><name pos:start="153:20" pos:end="153:20">b</name> <operator pos:start="153:22" pos:end="153:23">&lt;&lt;</operator> <literal type="number" pos:start="153:25" pos:end="153:26">16</literal><operator pos:start="153:27" pos:end="153:27">)</operator> <operator pos:start="153:29" pos:end="153:29">+</operator> <operator pos:start="153:31" pos:end="153:31">(</operator><name pos:start="153:32" pos:end="153:32">g</name> <operator pos:start="153:34" pos:end="153:35">&lt;&lt;</operator> <literal type="number" pos:start="153:37" pos:end="153:37">8</literal><operator pos:start="153:38" pos:end="153:38">)</operator> <operator pos:start="153:40" pos:end="153:40">+</operator> <name pos:start="153:42" pos:end="153:42">r</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="157:9" pos:end="159:39"><if pos:start="157:9" pos:end="159:39">if <condition pos:start="157:12" pos:end="157:22">(<expr pos:start="157:13" pos:end="157:21"><name pos:start="157:13" pos:end="157:17">ptype</name> <operator pos:start="157:19" pos:end="157:19">&gt;</operator> <literal type="number" pos:start="157:21" pos:end="157:21">5</literal></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:39"><block_content pos:start="159:13" pos:end="159:39">

            <return pos:start="159:13" pos:end="159:39">return <expr pos:start="159:20" pos:end="159:38"><name pos:start="159:20" pos:end="159:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:67"><expr pos:start="161:9" pos:end="161:66"><name pos:start="161:9" pos:end="161:11">ret</name> <operator pos:start="161:13" pos:end="161:13">=</operator> <call pos:start="161:15" pos:end="161:66"><name pos:start="161:15" pos:end="161:26">decode_value</name><argument_list pos:start="161:27" pos:end="161:66">(<argument pos:start="161:28" pos:end="161:28"><expr pos:start="161:28" pos:end="161:28"><name pos:start="161:28" pos:end="161:28">s</name></expr></argument>, <argument pos:start="161:31" pos:end="161:49"><expr pos:start="161:31" pos:end="161:49"><name pos:start="161:31" pos:end="161:49"><name pos:start="161:31" pos:end="161:31">s</name><operator pos:start="161:32" pos:end="161:33">-&gt;</operator><name pos:start="161:34" pos:end="161:42">run_model</name><index pos:start="161:43" pos:end="161:49">[<expr pos:start="161:44" pos:end="161:48"><name pos:start="161:44" pos:end="161:48">ptype</name></expr>]</index></name></expr></argument>, <argument pos:start="161:52" pos:end="161:54"><expr pos:start="161:52" pos:end="161:54"><literal type="number" pos:start="161:52" pos:end="161:54">256</literal></expr></argument>, <argument pos:start="161:57" pos:end="161:59"><expr pos:start="161:57" pos:end="161:59"><literal type="number" pos:start="161:57" pos:end="161:59">400</literal></expr></argument>, <argument pos:start="161:62" pos:end="161:65"><expr pos:start="161:62" pos:end="161:65"><operator pos:start="161:62" pos:end="161:62">&amp;</operator><name pos:start="161:63" pos:end="161:65">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="163:9" pos:end="165:23"><if pos:start="163:9" pos:end="165:23">if <condition pos:start="163:12" pos:end="163:20">(<expr pos:start="163:13" pos:end="163:19"><name pos:start="163:13" pos:end="163:15">ret</name> <operator pos:start="163:17" pos:end="163:17">&lt;</operator> <literal type="number" pos:start="163:19" pos:end="163:19">0</literal></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:23"><block_content pos:start="165:13" pos:end="165:23">

            <return pos:start="165:13" pos:end="165:23">return <expr pos:start="165:20" pos:end="165:22"><name pos:start="165:20" pos:end="165:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <switch pos:start="169:9" pos:end="319:9">switch <condition pos:start="169:16" pos:end="169:22">(<expr pos:start="169:17" pos:end="169:21"><name pos:start="169:17" pos:end="169:21">ptype</name></expr>)</condition> <block pos:start="169:24" pos:end="319:9">{<block_content pos:start="171:9" pos:end="317:18">

        <case pos:start="171:9" pos:end="171:15">case <expr pos:start="171:14" pos:end="171:14"><literal type="number" pos:start="171:14" pos:end="171:14">0</literal></expr>:</case>

            <while pos:start="173:13" pos:end="191:13">while <condition pos:start="173:19" pos:end="173:29">(<expr pos:start="173:20" pos:end="173:28"><name pos:start="173:20" pos:end="173:22">run</name><operator pos:start="173:23" pos:end="173:24">--</operator> <operator pos:start="173:26" pos:end="173:26">&gt;</operator> <literal type="number" pos:start="173:28" pos:end="173:28">0</literal></expr>)</condition> <block pos:start="173:31" pos:end="191:13">{<block_content pos:start="175:17" pos:end="189:17">

                <expr_stmt pos:start="175:17" pos:end="175:44"><expr pos:start="175:17" pos:end="175:43"><name pos:start="175:17" pos:end="175:37"><name pos:start="175:17" pos:end="175:19">dst</name><index pos:start="175:20" pos:end="175:37">[<expr pos:start="175:21" pos:end="175:36"><name pos:start="175:21" pos:end="175:21">y</name> <operator pos:start="175:23" pos:end="175:23">*</operator> <name pos:start="175:25" pos:end="175:32">linesize</name> <operator pos:start="175:34" pos:end="175:34">+</operator> <name pos:start="175:36" pos:end="175:36">x</name></expr>]</index></name> <operator pos:start="175:39" pos:end="175:39">=</operator> <name pos:start="175:41" pos:end="175:43">clr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:23"><expr pos:start="177:17" pos:end="177:22"><name pos:start="177:17" pos:end="177:18">lx</name> <operator pos:start="177:20" pos:end="177:20">=</operator> <name pos:start="177:22" pos:end="177:22">x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:23"><expr pos:start="179:17" pos:end="179:22"><name pos:start="179:17" pos:end="179:18">ly</name> <operator pos:start="179:20" pos:end="179:20">=</operator> <name pos:start="179:22" pos:end="179:22">y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:20"><expr pos:start="181:17" pos:end="181:19"><name pos:start="181:17" pos:end="181:17">x</name><operator pos:start="181:18" pos:end="181:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="183:17" pos:end="189:17"><if pos:start="183:17" pos:end="189:17">if <condition pos:start="183:20" pos:end="183:38">(<expr pos:start="183:21" pos:end="183:37"><name pos:start="183:21" pos:end="183:21">x</name> <operator pos:start="183:23" pos:end="183:24">&gt;=</operator> <name pos:start="183:26" pos:end="183:37"><name pos:start="183:26" pos:end="183:30">avctx</name><operator pos:start="183:31" pos:end="183:32">-&gt;</operator><name pos:start="183:33" pos:end="183:37">width</name></name></expr>)</condition> <block pos:start="183:40" pos:end="189:17">{<block_content pos:start="185:21" pos:end="187:24">

                    <expr_stmt pos:start="185:21" pos:end="185:26"><expr pos:start="185:21" pos:end="185:25"><name pos:start="185:21" pos:end="185:21">x</name> <operator pos:start="185:23" pos:end="185:23">=</operator> <literal type="number" pos:start="185:25" pos:end="185:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="187:21" pos:end="187:24"><expr pos:start="187:21" pos:end="187:23"><name pos:start="187:21" pos:end="187:21">y</name><operator pos:start="187:22" pos:end="187:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:15">case <expr pos:start="195:14" pos:end="195:14"><literal type="number" pos:start="195:14" pos:end="195:14">1</literal></expr>:</case>

            <while pos:start="197:13" pos:end="215:13">while <condition pos:start="197:19" pos:end="197:29">(<expr pos:start="197:20" pos:end="197:28"><name pos:start="197:20" pos:end="197:22">run</name><operator pos:start="197:23" pos:end="197:24">--</operator> <operator pos:start="197:26" pos:end="197:26">&gt;</operator> <literal type="number" pos:start="197:28" pos:end="197:28">0</literal></expr>)</condition> <block pos:start="197:31" pos:end="215:13">{<block_content pos:start="199:17" pos:end="213:17">

                <expr_stmt pos:start="199:17" pos:end="199:64"><expr pos:start="199:17" pos:end="199:63"><name pos:start="199:17" pos:end="199:37"><name pos:start="199:17" pos:end="199:19">dst</name><index pos:start="199:20" pos:end="199:37">[<expr pos:start="199:21" pos:end="199:36"><name pos:start="199:21" pos:end="199:21">y</name> <operator pos:start="199:23" pos:end="199:23">*</operator> <name pos:start="199:25" pos:end="199:32">linesize</name> <operator pos:start="199:34" pos:end="199:34">+</operator> <name pos:start="199:36" pos:end="199:36">x</name></expr>]</index></name> <operator pos:start="199:39" pos:end="199:39">=</operator> <name pos:start="199:41" pos:end="199:63"><name pos:start="199:41" pos:end="199:43">dst</name><index pos:start="199:44" pos:end="199:63">[<expr pos:start="199:45" pos:end="199:62"><name pos:start="199:45" pos:end="199:46">ly</name> <operator pos:start="199:48" pos:end="199:48">*</operator> <name pos:start="199:50" pos:end="199:57">linesize</name> <operator pos:start="199:59" pos:end="199:59">+</operator> <name pos:start="199:61" pos:end="199:62">lx</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:23"><expr pos:start="201:17" pos:end="201:22"><name pos:start="201:17" pos:end="201:18">lx</name> <operator pos:start="201:20" pos:end="201:20">=</operator> <name pos:start="201:22" pos:end="201:22">x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:23"><expr pos:start="203:17" pos:end="203:22"><name pos:start="203:17" pos:end="203:18">ly</name> <operator pos:start="203:20" pos:end="203:20">=</operator> <name pos:start="203:22" pos:end="203:22">y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:20"><expr pos:start="205:17" pos:end="205:19"><name pos:start="205:17" pos:end="205:17">x</name><operator pos:start="205:18" pos:end="205:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="207:17" pos:end="213:17"><if pos:start="207:17" pos:end="213:17">if <condition pos:start="207:20" pos:end="207:38">(<expr pos:start="207:21" pos:end="207:37"><name pos:start="207:21" pos:end="207:21">x</name> <operator pos:start="207:23" pos:end="207:24">&gt;=</operator> <name pos:start="207:26" pos:end="207:37"><name pos:start="207:26" pos:end="207:30">avctx</name><operator pos:start="207:31" pos:end="207:32">-&gt;</operator><name pos:start="207:33" pos:end="207:37">width</name></name></expr>)</condition> <block pos:start="207:40" pos:end="213:17">{<block_content pos:start="209:21" pos:end="211:24">

                    <expr_stmt pos:start="209:21" pos:end="209:26"><expr pos:start="209:21" pos:end="209:25"><name pos:start="209:21" pos:end="209:21">x</name> <operator pos:start="209:23" pos:end="209:23">=</operator> <literal type="number" pos:start="209:25" pos:end="209:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="211:21" pos:end="211:24"><expr pos:start="211:21" pos:end="211:23"><name pos:start="211:21" pos:end="211:21">y</name><operator pos:start="211:22" pos:end="211:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="217:13" pos:end="217:42"><expr pos:start="217:13" pos:end="217:41"><name pos:start="217:13" pos:end="217:15">clr</name> <operator pos:start="217:17" pos:end="217:17">=</operator> <name pos:start="217:19" pos:end="217:41"><name pos:start="217:19" pos:end="217:21">dst</name><index pos:start="217:22" pos:end="217:41">[<expr pos:start="217:23" pos:end="217:40"><name pos:start="217:23" pos:end="217:24">ly</name> <operator pos:start="217:26" pos:end="217:26">*</operator> <name pos:start="217:28" pos:end="217:35">linesize</name> <operator pos:start="217:37" pos:end="217:37">+</operator> <name pos:start="217:39" pos:end="217:40">lx</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="219:13" pos:end="219:18">break;</break>

        <case pos:start="221:9" pos:end="221:15">case <expr pos:start="221:14" pos:end="221:14"><literal type="number" pos:start="221:14" pos:end="221:14">2</literal></expr>:</case>

            <while pos:start="223:13" pos:end="243:13">while <condition pos:start="223:19" pos:end="223:29">(<expr pos:start="223:20" pos:end="223:28"><name pos:start="223:20" pos:end="223:22">run</name><operator pos:start="223:23" pos:end="223:24">--</operator> <operator pos:start="223:26" pos:end="223:26">&gt;</operator> <literal type="number" pos:start="223:28" pos:end="223:28">0</literal></expr>)</condition> <block pos:start="223:31" pos:end="243:13">{<block_content pos:start="225:17" pos:end="241:17">

                <expr_stmt pos:start="225:17" pos:end="225:54"><expr pos:start="225:17" pos:end="225:53"><name pos:start="225:17" pos:end="225:19">clr</name> <operator pos:start="225:21" pos:end="225:21">=</operator> <name pos:start="225:23" pos:end="225:53"><name pos:start="225:23" pos:end="225:25">dst</name><index pos:start="225:26" pos:end="225:53">[<expr pos:start="225:27" pos:end="225:52"><name pos:start="225:27" pos:end="225:27">y</name> <operator pos:start="225:29" pos:end="225:29">*</operator> <name pos:start="225:31" pos:end="225:38">linesize</name> <operator pos:start="225:40" pos:end="225:40">+</operator> <name pos:start="225:42" pos:end="225:42">x</name> <operator pos:start="225:44" pos:end="225:44">+</operator> <name pos:start="225:46" pos:end="225:48">off</name> <operator pos:start="225:50" pos:end="225:50">+</operator> <literal type="number" pos:start="225:52" pos:end="225:52">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:44"><expr pos:start="227:17" pos:end="227:43"><name pos:start="227:17" pos:end="227:37"><name pos:start="227:17" pos:end="227:19">dst</name><index pos:start="227:20" pos:end="227:37">[<expr pos:start="227:21" pos:end="227:36"><name pos:start="227:21" pos:end="227:21">y</name> <operator pos:start="227:23" pos:end="227:23">*</operator> <name pos:start="227:25" pos:end="227:32">linesize</name> <operator pos:start="227:34" pos:end="227:34">+</operator> <name pos:start="227:36" pos:end="227:36">x</name></expr>]</index></name> <operator pos:start="227:39" pos:end="227:39">=</operator> <name pos:start="227:41" pos:end="227:43">clr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:23"><expr pos:start="229:17" pos:end="229:22"><name pos:start="229:17" pos:end="229:18">lx</name> <operator pos:start="229:20" pos:end="229:20">=</operator> <name pos:start="229:22" pos:end="229:22">x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:23"><expr pos:start="231:17" pos:end="231:22"><name pos:start="231:17" pos:end="231:18">ly</name> <operator pos:start="231:20" pos:end="231:20">=</operator> <name pos:start="231:22" pos:end="231:22">y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:20"><expr pos:start="233:17" pos:end="233:19"><name pos:start="233:17" pos:end="233:17">x</name><operator pos:start="233:18" pos:end="233:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="235:17" pos:end="241:17"><if pos:start="235:17" pos:end="241:17">if <condition pos:start="235:20" pos:end="235:38">(<expr pos:start="235:21" pos:end="235:37"><name pos:start="235:21" pos:end="235:21">x</name> <operator pos:start="235:23" pos:end="235:24">&gt;=</operator> <name pos:start="235:26" pos:end="235:37"><name pos:start="235:26" pos:end="235:30">avctx</name><operator pos:start="235:31" pos:end="235:32">-&gt;</operator><name pos:start="235:33" pos:end="235:37">width</name></name></expr>)</condition> <block pos:start="235:40" pos:end="241:17">{<block_content pos:start="237:21" pos:end="239:24">

                    <expr_stmt pos:start="237:21" pos:end="237:26"><expr pos:start="237:21" pos:end="237:25"><name pos:start="237:21" pos:end="237:21">x</name> <operator pos:start="237:23" pos:end="237:23">=</operator> <literal type="number" pos:start="237:25" pos:end="237:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="239:21" pos:end="239:24"><expr pos:start="239:21" pos:end="239:23"><name pos:start="239:21" pos:end="239:21">y</name><operator pos:start="239:22" pos:end="239:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <break pos:start="245:13" pos:end="245:18">break;</break>

        <case pos:start="247:9" pos:end="247:15">case <expr pos:start="247:14" pos:end="247:14"><literal type="number" pos:start="247:14" pos:end="247:14">4</literal></expr>:</case>

            <while pos:start="249:13" pos:end="289:13">while <condition pos:start="249:19" pos:end="249:29">(<expr pos:start="249:20" pos:end="249:28"><name pos:start="249:20" pos:end="249:22">run</name><operator pos:start="249:23" pos:end="249:24">--</operator> <operator pos:start="249:26" pos:end="249:26">&gt;</operator> <literal type="number" pos:start="249:28" pos:end="249:28">0</literal></expr>)</condition> <block pos:start="249:31" pos:end="289:13">{<block_content pos:start="251:17" pos:end="287:17">

                <decl_stmt pos:start="251:17" pos:end="251:47"><decl pos:start="251:17" pos:end="251:46"><type pos:start="251:17" pos:end="251:25"><name pos:start="251:17" pos:end="251:23">uint8_t</name> <modifier pos:start="251:25" pos:end="251:25">*</modifier></type><name pos:start="251:26" pos:end="251:29">odst</name> <init pos:start="251:31" pos:end="251:46">= <expr pos:start="251:33" pos:end="251:46"><operator pos:start="251:33" pos:end="251:33">(</operator><name pos:start="251:34" pos:end="251:40">uint8_t</name> <operator pos:start="251:42" pos:end="251:42">*</operator><operator pos:start="251:43" pos:end="251:43">)</operator><name pos:start="251:44" pos:end="251:46">dst</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="253:17" pos:end="257:57"><expr pos:start="253:17" pos:end="257:56"><name pos:start="253:17" pos:end="253:17">r</name> <operator pos:start="253:19" pos:end="253:19">=</operator> <name pos:start="253:21" pos:end="253:50"><name pos:start="253:21" pos:end="253:24">odst</name><index pos:start="253:25" pos:end="253:50">[<expr pos:start="253:26" pos:end="253:49"><operator pos:start="253:26" pos:end="253:26">(</operator><name pos:start="253:27" pos:end="253:28">ly</name> <operator pos:start="253:30" pos:end="253:30">*</operator> <name pos:start="253:32" pos:end="253:39">linesize</name> <operator pos:start="253:41" pos:end="253:41">+</operator> <name pos:start="253:43" pos:end="253:44">lx</name><operator pos:start="253:45" pos:end="253:45">)</operator> <operator pos:start="253:47" pos:end="253:47">*</operator> <literal type="number" pos:start="253:49" pos:end="253:49">4</literal></expr>]</index></name> <operator pos:start="253:52" pos:end="253:52">+</operator>

                    <name pos:start="255:21" pos:end="255:60"><name pos:start="255:21" pos:end="255:24">odst</name><index pos:start="255:25" pos:end="255:60">[<expr pos:start="255:26" pos:end="255:59"><operator pos:start="255:26" pos:end="255:26">(</operator><operator pos:start="255:27" pos:end="255:27">(</operator><name pos:start="255:28" pos:end="255:28">y</name> <operator pos:start="255:30" pos:end="255:30">*</operator> <name pos:start="255:32" pos:end="255:39">linesize</name> <operator pos:start="255:41" pos:end="255:41">+</operator> <name pos:start="255:43" pos:end="255:43">x</name><operator pos:start="255:44" pos:end="255:44">)</operator> <operator pos:start="255:46" pos:end="255:46">+</operator> <name pos:start="255:48" pos:end="255:50">off</name><operator pos:start="255:51" pos:end="255:51">)</operator> <operator pos:start="255:53" pos:end="255:53">*</operator> <literal type="number" pos:start="255:55" pos:end="255:57">4</literal> <operator pos:start="255:57" pos:end="255:57">+</operator> <literal type="number" pos:start="255:59" pos:end="255:59">4</literal></expr>]</index></name> <operator pos:start="255:62" pos:end="255:62">-</operator>

                    <name pos:start="257:21" pos:end="257:56"><name pos:start="257:21" pos:end="257:24">odst</name><index pos:start="257:25" pos:end="257:56">[<expr pos:start="257:26" pos:end="257:55"><operator pos:start="257:26" pos:end="257:26">(</operator><operator pos:start="257:27" pos:end="257:27">(</operator><name pos:start="257:28" pos:end="257:28">y</name> <operator pos:start="257:30" pos:end="257:30">*</operator> <name pos:start="257:32" pos:end="257:39">linesize</name> <operator pos:start="257:41" pos:end="257:41">+</operator> <name pos:start="257:43" pos:end="257:43">x</name><operator pos:start="257:44" pos:end="257:44">)</operator> <operator pos:start="257:46" pos:end="257:46">+</operator> <name pos:start="257:48" pos:end="257:50">off</name><operator pos:start="257:51" pos:end="257:51">)</operator> <operator pos:start="257:53" pos:end="257:53">*</operator> <literal type="number" pos:start="257:55" pos:end="257:55">4</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="263:61"><expr pos:start="259:17" pos:end="263:60"><name pos:start="259:17" pos:end="259:17">g</name> <operator pos:start="259:19" pos:end="259:19">=</operator> <name pos:start="259:21" pos:end="259:54"><name pos:start="259:21" pos:end="259:24">odst</name><index pos:start="259:25" pos:end="259:54">[<expr pos:start="259:26" pos:end="259:53"><operator pos:start="259:26" pos:end="259:26">(</operator><name pos:start="259:27" pos:end="259:28">ly</name> <operator pos:start="259:30" pos:end="259:30">*</operator> <name pos:start="259:32" pos:end="259:39">linesize</name> <operator pos:start="259:41" pos:end="259:41">+</operator> <name pos:start="259:43" pos:end="259:44">lx</name><operator pos:start="259:45" pos:end="259:45">)</operator> <operator pos:start="259:47" pos:end="259:47">*</operator> <literal type="number" pos:start="259:49" pos:end="259:51">4</literal> <operator pos:start="259:51" pos:end="259:51">+</operator> <literal type="number" pos:start="259:53" pos:end="259:53">1</literal></expr>]</index></name> <operator pos:start="259:56" pos:end="259:56">+</operator>

                    <name pos:start="261:21" pos:end="261:60"><name pos:start="261:21" pos:end="261:24">odst</name><index pos:start="261:25" pos:end="261:60">[<expr pos:start="261:26" pos:end="261:59"><operator pos:start="261:26" pos:end="261:26">(</operator><operator pos:start="261:27" pos:end="261:27">(</operator><name pos:start="261:28" pos:end="261:28">y</name> <operator pos:start="261:30" pos:end="261:30">*</operator> <name pos:start="261:32" pos:end="261:39">linesize</name> <operator pos:start="261:41" pos:end="261:41">+</operator> <name pos:start="261:43" pos:end="261:43">x</name><operator pos:start="261:44" pos:end="261:44">)</operator> <operator pos:start="261:46" pos:end="261:46">+</operator> <name pos:start="261:48" pos:end="261:50">off</name><operator pos:start="261:51" pos:end="261:51">)</operator> <operator pos:start="261:53" pos:end="261:53">*</operator> <literal type="number" pos:start="261:55" pos:end="261:57">4</literal> <operator pos:start="261:57" pos:end="261:57">+</operator> <literal type="number" pos:start="261:59" pos:end="261:59">5</literal></expr>]</index></name> <operator pos:start="261:62" pos:end="261:62">-</operator>

                    <name pos:start="263:21" pos:end="263:60"><name pos:start="263:21" pos:end="263:24">odst</name><index pos:start="263:25" pos:end="263:60">[<expr pos:start="263:26" pos:end="263:59"><operator pos:start="263:26" pos:end="263:26">(</operator><operator pos:start="263:27" pos:end="263:27">(</operator><name pos:start="263:28" pos:end="263:28">y</name> <operator pos:start="263:30" pos:end="263:30">*</operator> <name pos:start="263:32" pos:end="263:39">linesize</name> <operator pos:start="263:41" pos:end="263:41">+</operator> <name pos:start="263:43" pos:end="263:43">x</name><operator pos:start="263:44" pos:end="263:44">)</operator> <operator pos:start="263:46" pos:end="263:46">+</operator> <name pos:start="263:48" pos:end="263:50">off</name><operator pos:start="263:51" pos:end="263:51">)</operator> <operator pos:start="263:53" pos:end="263:53">*</operator> <literal type="number" pos:start="263:55" pos:end="263:57">4</literal> <operator pos:start="263:57" pos:end="263:57">+</operator> <literal type="number" pos:start="263:59" pos:end="263:59">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="269:61"><expr pos:start="265:17" pos:end="269:60"><name pos:start="265:17" pos:end="265:17">b</name> <operator pos:start="265:19" pos:end="265:19">=</operator> <name pos:start="265:21" pos:end="265:54"><name pos:start="265:21" pos:end="265:24">odst</name><index pos:start="265:25" pos:end="265:54">[<expr pos:start="265:26" pos:end="265:53"><operator pos:start="265:26" pos:end="265:26">(</operator><name pos:start="265:27" pos:end="265:28">ly</name> <operator pos:start="265:30" pos:end="265:30">*</operator> <name pos:start="265:32" pos:end="265:39">linesize</name> <operator pos:start="265:41" pos:end="265:41">+</operator> <name pos:start="265:43" pos:end="265:44">lx</name><operator pos:start="265:45" pos:end="265:45">)</operator> <operator pos:start="265:47" pos:end="265:47">*</operator> <literal type="number" pos:start="265:49" pos:end="265:51">4</literal> <operator pos:start="265:51" pos:end="265:51">+</operator> <literal type="number" pos:start="265:53" pos:end="265:53">2</literal></expr>]</index></name> <operator pos:start="265:56" pos:end="265:56">+</operator>

                    <name pos:start="267:21" pos:end="267:60"><name pos:start="267:21" pos:end="267:24">odst</name><index pos:start="267:25" pos:end="267:60">[<expr pos:start="267:26" pos:end="267:59"><operator pos:start="267:26" pos:end="267:26">(</operator><operator pos:start="267:27" pos:end="267:27">(</operator><name pos:start="267:28" pos:end="267:28">y</name> <operator pos:start="267:30" pos:end="267:30">*</operator> <name pos:start="267:32" pos:end="267:39">linesize</name> <operator pos:start="267:41" pos:end="267:41">+</operator> <name pos:start="267:43" pos:end="267:43">x</name><operator pos:start="267:44" pos:end="267:44">)</operator> <operator pos:start="267:46" pos:end="267:46">+</operator> <name pos:start="267:48" pos:end="267:50">off</name><operator pos:start="267:51" pos:end="267:51">)</operator> <operator pos:start="267:53" pos:end="267:53">*</operator> <literal type="number" pos:start="267:55" pos:end="267:57">4</literal> <operator pos:start="267:57" pos:end="267:57">+</operator> <literal type="number" pos:start="267:59" pos:end="267:59">6</literal></expr>]</index></name> <operator pos:start="267:62" pos:end="267:62">-</operator>

                    <name pos:start="269:21" pos:end="269:60"><name pos:start="269:21" pos:end="269:24">odst</name><index pos:start="269:25" pos:end="269:60">[<expr pos:start="269:26" pos:end="269:59"><operator pos:start="269:26" pos:end="269:26">(</operator><operator pos:start="269:27" pos:end="269:27">(</operator><name pos:start="269:28" pos:end="269:28">y</name> <operator pos:start="269:30" pos:end="269:30">*</operator> <name pos:start="269:32" pos:end="269:39">linesize</name> <operator pos:start="269:41" pos:end="269:41">+</operator> <name pos:start="269:43" pos:end="269:43">x</name><operator pos:start="269:44" pos:end="269:44">)</operator> <operator pos:start="269:46" pos:end="269:46">+</operator> <name pos:start="269:48" pos:end="269:50">off</name><operator pos:start="269:51" pos:end="269:51">)</operator> <operator pos:start="269:53" pos:end="269:53">*</operator> <literal type="number" pos:start="269:55" pos:end="269:57">4</literal> <operator pos:start="269:57" pos:end="269:57">+</operator> <literal type="number" pos:start="269:59" pos:end="269:59">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:74"><expr pos:start="271:17" pos:end="271:73"><name pos:start="271:17" pos:end="271:19">clr</name> <operator pos:start="271:21" pos:end="271:21">=</operator> <operator pos:start="271:23" pos:end="271:23">(</operator><operator pos:start="271:24" pos:end="271:24">(</operator><name pos:start="271:25" pos:end="271:25">b</name> <operator pos:start="271:27" pos:end="271:27">&amp;</operator> <literal type="number" pos:start="271:29" pos:end="271:32">0xFF</literal><operator pos:start="271:33" pos:end="271:33">)</operator> <operator pos:start="271:35" pos:end="271:36">&lt;&lt;</operator> <literal type="number" pos:start="271:38" pos:end="271:39">16</literal><operator pos:start="271:40" pos:end="271:40">)</operator> <operator pos:start="271:42" pos:end="271:42">+</operator> <operator pos:start="271:44" pos:end="271:44">(</operator><operator pos:start="271:45" pos:end="271:45">(</operator><name pos:start="271:46" pos:end="271:46">g</name> <operator pos:start="271:48" pos:end="271:48">&amp;</operator> <literal type="number" pos:start="271:50" pos:end="271:53">0xFF</literal><operator pos:start="271:54" pos:end="271:54">)</operator> <operator pos:start="271:56" pos:end="271:57">&lt;&lt;</operator> <literal type="number" pos:start="271:59" pos:end="271:59">8</literal><operator pos:start="271:60" pos:end="271:60">)</operator> <operator pos:start="271:62" pos:end="271:62">+</operator> <operator pos:start="271:64" pos:end="271:64">(</operator><name pos:start="271:65" pos:end="271:65">r</name> <operator pos:start="271:67" pos:end="271:67">&amp;</operator> <literal type="number" pos:start="271:69" pos:end="271:72">0xFF</literal><operator pos:start="271:73" pos:end="271:73">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:44"><expr pos:start="273:17" pos:end="273:43"><name pos:start="273:17" pos:end="273:37"><name pos:start="273:17" pos:end="273:19">dst</name><index pos:start="273:20" pos:end="273:37">[<expr pos:start="273:21" pos:end="273:36"><name pos:start="273:21" pos:end="273:21">y</name> <operator pos:start="273:23" pos:end="273:23">*</operator> <name pos:start="273:25" pos:end="273:32">linesize</name> <operator pos:start="273:34" pos:end="273:34">+</operator> <name pos:start="273:36" pos:end="273:36">x</name></expr>]</index></name> <operator pos:start="273:39" pos:end="273:39">=</operator> <name pos:start="273:41" pos:end="273:43">clr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:23"><expr pos:start="275:17" pos:end="275:22"><name pos:start="275:17" pos:end="275:18">lx</name> <operator pos:start="275:20" pos:end="275:20">=</operator> <name pos:start="275:22" pos:end="275:22">x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:23"><expr pos:start="277:17" pos:end="277:22"><name pos:start="277:17" pos:end="277:18">ly</name> <operator pos:start="277:20" pos:end="277:20">=</operator> <name pos:start="277:22" pos:end="277:22">y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:20"><expr pos:start="279:17" pos:end="279:19"><name pos:start="279:17" pos:end="279:17">x</name><operator pos:start="279:18" pos:end="279:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="281:17" pos:end="287:17"><if pos:start="281:17" pos:end="287:17">if <condition pos:start="281:20" pos:end="281:38">(<expr pos:start="281:21" pos:end="281:37"><name pos:start="281:21" pos:end="281:21">x</name> <operator pos:start="281:23" pos:end="281:24">&gt;=</operator> <name pos:start="281:26" pos:end="281:37"><name pos:start="281:26" pos:end="281:30">avctx</name><operator pos:start="281:31" pos:end="281:32">-&gt;</operator><name pos:start="281:33" pos:end="281:37">width</name></name></expr>)</condition> <block pos:start="281:40" pos:end="287:17">{<block_content pos:start="283:21" pos:end="285:24">

                    <expr_stmt pos:start="283:21" pos:end="283:26"><expr pos:start="283:21" pos:end="283:25"><name pos:start="283:21" pos:end="283:21">x</name> <operator pos:start="283:23" pos:end="283:23">=</operator> <literal type="number" pos:start="283:25" pos:end="283:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="285:21" pos:end="285:24"><expr pos:start="285:21" pos:end="285:23"><name pos:start="285:21" pos:end="285:21">y</name><operator pos:start="285:22" pos:end="285:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <break pos:start="291:13" pos:end="291:18">break;</break>

        <case pos:start="293:9" pos:end="293:15">case <expr pos:start="293:14" pos:end="293:14"><literal type="number" pos:start="293:14" pos:end="293:14">5</literal></expr>:</case>

            <while pos:start="295:13" pos:end="315:13">while <condition pos:start="295:19" pos:end="295:29">(<expr pos:start="295:20" pos:end="295:28"><name pos:start="295:20" pos:end="295:22">run</name><operator pos:start="295:23" pos:end="295:24">--</operator> <operator pos:start="295:26" pos:end="295:26">&gt;</operator> <literal type="number" pos:start="295:28" pos:end="295:28">0</literal></expr>)</condition> <block pos:start="295:31" pos:end="315:13">{<block_content pos:start="297:17" pos:end="313:17">

                <expr_stmt pos:start="297:17" pos:end="297:50"><expr pos:start="297:17" pos:end="297:49"><name pos:start="297:17" pos:end="297:19">clr</name> <operator pos:start="297:21" pos:end="297:21">=</operator> <name pos:start="297:23" pos:end="297:49"><name pos:start="297:23" pos:end="297:25">dst</name><index pos:start="297:26" pos:end="297:49">[<expr pos:start="297:27" pos:end="297:48"><name pos:start="297:27" pos:end="297:27">y</name> <operator pos:start="297:29" pos:end="297:29">*</operator> <name pos:start="297:31" pos:end="297:38">linesize</name> <operator pos:start="297:40" pos:end="297:40">+</operator> <name pos:start="297:42" pos:end="297:42">x</name> <operator pos:start="297:44" pos:end="297:44">+</operator> <name pos:start="297:46" pos:end="297:48">off</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="299:17" pos:end="299:44"><expr pos:start="299:17" pos:end="299:43"><name pos:start="299:17" pos:end="299:37"><name pos:start="299:17" pos:end="299:19">dst</name><index pos:start="299:20" pos:end="299:37">[<expr pos:start="299:21" pos:end="299:36"><name pos:start="299:21" pos:end="299:21">y</name> <operator pos:start="299:23" pos:end="299:23">*</operator> <name pos:start="299:25" pos:end="299:32">linesize</name> <operator pos:start="299:34" pos:end="299:34">+</operator> <name pos:start="299:36" pos:end="299:36">x</name></expr>]</index></name> <operator pos:start="299:39" pos:end="299:39">=</operator> <name pos:start="299:41" pos:end="299:43">clr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:23"><expr pos:start="301:17" pos:end="301:22"><name pos:start="301:17" pos:end="301:18">lx</name> <operator pos:start="301:20" pos:end="301:20">=</operator> <name pos:start="301:22" pos:end="301:22">x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:23"><expr pos:start="303:17" pos:end="303:22"><name pos:start="303:17" pos:end="303:18">ly</name> <operator pos:start="303:20" pos:end="303:20">=</operator> <name pos:start="303:22" pos:end="303:22">y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="305:17" pos:end="305:20"><expr pos:start="305:17" pos:end="305:19"><name pos:start="305:17" pos:end="305:17">x</name><operator pos:start="305:18" pos:end="305:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="307:17" pos:end="313:17"><if pos:start="307:17" pos:end="313:17">if <condition pos:start="307:20" pos:end="307:38">(<expr pos:start="307:21" pos:end="307:37"><name pos:start="307:21" pos:end="307:21">x</name> <operator pos:start="307:23" pos:end="307:24">&gt;=</operator> <name pos:start="307:26" pos:end="307:37"><name pos:start="307:26" pos:end="307:30">avctx</name><operator pos:start="307:31" pos:end="307:32">-&gt;</operator><name pos:start="307:33" pos:end="307:37">width</name></name></expr>)</condition> <block pos:start="307:40" pos:end="313:17">{<block_content pos:start="309:21" pos:end="311:24">

                    <expr_stmt pos:start="309:21" pos:end="309:26"><expr pos:start="309:21" pos:end="309:25"><name pos:start="309:21" pos:end="309:21">x</name> <operator pos:start="309:23" pos:end="309:23">=</operator> <literal type="number" pos:start="309:25" pos:end="309:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="311:21" pos:end="311:24"><expr pos:start="311:21" pos:end="311:23"><name pos:start="311:21" pos:end="311:21">y</name><operator pos:start="311:22" pos:end="311:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <break pos:start="317:13" pos:end="317:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="323:9" pos:end="335:9"><if pos:start="323:9" pos:end="329:9">if <condition pos:start="323:12" pos:end="323:47">(<expr pos:start="323:13" pos:end="323:46"><name pos:start="323:13" pos:end="323:40"><name pos:start="323:13" pos:end="323:17">avctx</name><operator pos:start="323:18" pos:end="323:19">-&gt;</operator><name pos:start="323:20" pos:end="323:40">bits_per_coded_sample</name></name> <operator pos:start="323:42" pos:end="323:43">==</operator> <literal type="number" pos:start="323:45" pos:end="323:46">16</literal></expr>)</condition> <block pos:start="323:49" pos:end="329:9">{<block_content pos:start="325:13" pos:end="327:40">

            <expr_stmt pos:start="325:13" pos:end="325:38"><expr pos:start="325:13" pos:end="325:37"><name pos:start="325:13" pos:end="325:15">cx1</name> <operator pos:start="325:17" pos:end="325:17">=</operator> <operator pos:start="325:19" pos:end="325:19">(</operator><name pos:start="325:20" pos:end="325:22">clr</name> <operator pos:start="325:24" pos:end="325:24">&amp;</operator> <literal type="number" pos:start="325:26" pos:end="325:31">0xFF00</literal><operator pos:start="325:32" pos:end="325:32">)</operator> <operator pos:start="325:34" pos:end="325:35">&gt;&gt;</operator> <literal type="number" pos:start="325:37" pos:end="325:37">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:40"><expr pos:start="327:13" pos:end="327:39"><name pos:start="327:13" pos:end="327:14">cx</name> <operator pos:start="327:16" pos:end="327:16">=</operator> <operator pos:start="327:18" pos:end="327:18">(</operator><name pos:start="327:19" pos:end="327:21">clr</name> <operator pos:start="327:23" pos:end="327:23">&amp;</operator> <literal type="number" pos:start="327:25" pos:end="327:32">0xFFFFFF</literal><operator pos:start="327:33" pos:end="327:33">)</operator> <operator pos:start="327:35" pos:end="327:36">&gt;&gt;</operator> <literal type="number" pos:start="327:38" pos:end="327:39">16</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="329:11" pos:end="335:9">else <block pos:start="329:16" pos:end="335:9">{<block_content pos:start="331:13" pos:end="333:40">

            <expr_stmt pos:start="331:13" pos:end="331:38"><expr pos:start="331:13" pos:end="331:37"><name pos:start="331:13" pos:end="331:15">cx1</name> <operator pos:start="331:17" pos:end="331:17">=</operator> <operator pos:start="331:19" pos:end="331:19">(</operator><name pos:start="331:20" pos:end="331:22">clr</name> <operator pos:start="331:24" pos:end="331:24">&amp;</operator> <literal type="number" pos:start="331:26" pos:end="331:31">0xFC00</literal><operator pos:start="331:32" pos:end="331:32">)</operator> <operator pos:start="331:34" pos:end="331:35">&gt;&gt;</operator> <literal type="number" pos:start="331:37" pos:end="331:37">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:40"><expr pos:start="333:13" pos:end="333:39"><name pos:start="333:13" pos:end="333:14">cx</name> <operator pos:start="333:16" pos:end="333:16">=</operator> <operator pos:start="333:18" pos:end="333:18">(</operator><name pos:start="333:19" pos:end="333:21">clr</name> <operator pos:start="333:23" pos:end="333:23">&amp;</operator> <literal type="number" pos:start="333:25" pos:end="333:32">0xFFFFFF</literal><operator pos:start="333:33" pos:end="333:33">)</operator> <operator pos:start="333:35" pos:end="333:36">&gt;&gt;</operator> <literal type="number" pos:start="333:38" pos:end="333:39">18</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <return pos:start="341:5" pos:end="341:13">return <expr pos:start="341:12" pos:end="341:12"><literal type="number" pos:start="341:12" pos:end="341:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
