<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/917.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:38">avcodec_get_channel_layout_string</name><parameter_list pos:start="1:39" pos:end="1:104">(<parameter pos:start="1:40" pos:end="1:48"><decl pos:start="1:40" pos:end="1:48"><type pos:start="1:40" pos:end="1:48"><name pos:start="1:40" pos:end="1:43">char</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">buf</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:62">buf_size</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:79">nb_channels</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:103"><decl pos:start="1:82" pos:end="1:103"><type pos:start="1:82" pos:end="1:103"><name pos:start="1:82" pos:end="1:88">int64_t</name></type> <name pos:start="1:90" pos:end="1:103">channel_layout</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:88"><if pos:start="9:5" pos:end="11:88">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:22">channel_layout</name><operator pos:start="9:23" pos:end="9:24">==</operator><literal type="number" pos:start="9:25" pos:end="9:25">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:88"><block_content pos:start="11:9" pos:end="11:88">

        <expr_stmt pos:start="11:9" pos:end="11:88"><expr pos:start="11:9" pos:end="11:87"><name pos:start="11:9" pos:end="11:22">channel_layout</name> <operator pos:start="11:24" pos:end="11:24">=</operator> <call pos:start="11:26" pos:end="11:87"><name pos:start="11:26" pos:end="11:53">avcodec_guess_channel_layout</name><argument_list pos:start="11:54" pos:end="11:87">(<argument pos:start="11:55" pos:end="11:65"><expr pos:start="11:55" pos:end="11:65"><name pos:start="11:55" pos:end="11:65">nb_channels</name></expr></argument>, <argument pos:start="11:68" pos:end="11:80"><expr pos:start="11:68" pos:end="11:80"><name pos:start="11:68" pos:end="11:80">CODEC_ID_NONE</name></expr></argument>, <argument pos:start="11:83" pos:end="11:86"><expr pos:start="11:83" pos:end="11:86"><name pos:start="11:83" pos:end="11:86">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="15:5" pos:end="25:9">for <control pos:start="15:9" pos:end="15:46">(<init pos:start="15:10" pos:end="15:13"><expr pos:start="15:10" pos:end="15:12"><name pos:start="15:10" pos:end="15:10">i</name><operator pos:start="15:11" pos:end="15:11">=</operator><literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>;</init> <condition pos:start="15:15" pos:end="15:41"><expr pos:start="15:15" pos:end="15:40"><name pos:start="15:15" pos:end="15:35"><name pos:start="15:15" pos:end="15:32">channel_layout_map</name><index pos:start="15:33" pos:end="15:35">[<expr pos:start="15:34" pos:end="15:34"><name pos:start="15:34" pos:end="15:34">i</name></expr>]</index></name><operator pos:start="15:36" pos:end="15:36">.</operator><name pos:start="15:37" pos:end="15:40">name</name></expr>;</condition> <incr pos:start="15:43" pos:end="15:45"><expr pos:start="15:43" pos:end="15:45"><name pos:start="15:43" pos:end="15:43">i</name><operator pos:start="15:44" pos:end="15:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:9" pos:end="25:9"><block_content pos:start="17:9" pos:end="25:9">

        <if_stmt pos:start="17:9" pos:end="25:9"><if pos:start="17:9" pos:end="25:9">if <condition pos:start="17:12" pos:end="19:59">(<expr pos:start="17:13" pos:end="19:58"><name pos:start="17:13" pos:end="17:23">nb_channels</name>    <operator pos:start="17:28" pos:end="17:29">==</operator> <name pos:start="17:31" pos:end="17:51"><name pos:start="17:31" pos:end="17:48">channel_layout_map</name><index pos:start="17:49" pos:end="17:51">[<expr pos:start="17:50" pos:end="17:50"><name pos:start="17:50" pos:end="17:50">i</name></expr>]</index></name><operator pos:start="17:52" pos:end="17:52">.</operator><name pos:start="17:53" pos:end="17:63">nb_channels</name> <operator pos:start="17:65" pos:end="17:66">&amp;&amp;</operator>

            <name pos:start="19:13" pos:end="19:26">channel_layout</name> <operator pos:start="19:28" pos:end="19:29">==</operator> <name pos:start="19:31" pos:end="19:51"><name pos:start="19:31" pos:end="19:48">channel_layout_map</name><index pos:start="19:49" pos:end="19:51">[<expr pos:start="19:50" pos:end="19:50"><name pos:start="19:50" pos:end="19:50">i</name></expr>]</index></name><operator pos:start="19:52" pos:end="19:52">.</operator><name pos:start="19:53" pos:end="19:58">layout</name></expr>)</condition> <block pos:start="19:61" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:19">

            <expr_stmt pos:start="21:13" pos:end="21:64"><expr pos:start="21:13" pos:end="21:63"><call pos:start="21:13" pos:end="21:63"><name pos:start="21:13" pos:end="21:20">snprintf</name><argument_list pos:start="21:21" pos:end="21:63">(<argument pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:24">buf</name></expr></argument>, <argument pos:start="21:27" pos:end="21:34"><expr pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:34">buf_size</name></expr></argument>, <argument pos:start="21:37" pos:end="21:62"><expr pos:start="21:37" pos:end="21:62"><name pos:start="21:37" pos:end="21:57"><name pos:start="21:37" pos:end="21:54">channel_layout_map</name><index pos:start="21:55" pos:end="21:57">[<expr pos:start="21:56" pos:end="21:56"><name pos:start="21:56" pos:end="21:56">i</name></expr>]</index></name><operator pos:start="21:58" pos:end="21:58">.</operator><name pos:start="21:59" pos:end="21:62">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="23:13" pos:end="23:19">return;</return>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="29:5" pos:end="29:56"><expr pos:start="29:5" pos:end="29:55"><call pos:start="29:5" pos:end="29:55"><name pos:start="29:5" pos:end="29:12">snprintf</name><argument_list pos:start="29:13" pos:end="29:55">(<argument pos:start="29:14" pos:end="29:16"><expr pos:start="29:14" pos:end="29:16"><name pos:start="29:14" pos:end="29:16">buf</name></expr></argument>, <argument pos:start="29:19" pos:end="29:26"><expr pos:start="29:19" pos:end="29:26"><name pos:start="29:19" pos:end="29:26">buf_size</name></expr></argument>, <argument pos:start="29:29" pos:end="29:41"><expr pos:start="29:29" pos:end="29:41"><literal type="string" pos:start="29:29" pos:end="29:41">"%d channels"</literal></expr></argument>, <argument pos:start="29:44" pos:end="29:54"><expr pos:start="29:44" pos:end="29:54"><name pos:start="29:44" pos:end="29:54">nb_channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="59:5"><if pos:start="31:5" pos:end="59:5">if <condition pos:start="31:8" pos:end="31:23">(<expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:22">channel_layout</name></expr>)</condition> <block pos:start="31:25" pos:end="59:5">{<block_content pos:start="33:9" pos:end="57:39">

        <decl_stmt pos:start="33:9" pos:end="33:17"><decl pos:start="33:9" pos:end="33:13"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:13">i</name></decl>,<decl pos:start="33:15" pos:end="33:16"><type ref="prev" pos:start="33:9" pos:end="33:11"/><name pos:start="33:15" pos:end="33:16">ch</name></decl>;</decl_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:39"><call pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:18">av_strlcat</name><argument_list pos:start="35:19" pos:end="35:39">(<argument pos:start="35:20" pos:end="35:22"><expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">buf</name></expr></argument>, <argument pos:start="35:25" pos:end="35:28"><expr pos:start="35:25" pos:end="35:28"><literal type="string" pos:start="35:25" pos:end="35:28">" ("</literal></expr></argument>, <argument pos:start="35:31" pos:end="35:38"><expr pos:start="35:31" pos:end="35:38"><name pos:start="35:31" pos:end="35:38">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="37:9" pos:end="55:9">for<control pos:start="37:12" pos:end="37:32">(<init pos:start="37:13" pos:end="37:21"><expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:13">i</name><operator pos:start="37:14" pos:end="37:14">=</operator><literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr><operator pos:start="37:16" pos:end="37:16">,</operator><expr pos:start="37:17" pos:end="37:20"><name pos:start="37:17" pos:end="37:18">ch</name><operator pos:start="37:19" pos:end="37:19">=</operator><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</init> <condition pos:start="37:23" pos:end="37:27"><expr pos:start="37:23" pos:end="37:26"><name pos:start="37:23" pos:end="37:23">i</name><operator pos:start="37:24" pos:end="37:24">&lt;</operator><literal type="number" pos:start="37:25" pos:end="37:26">64</literal></expr>;</condition> <incr pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:29">i</name><operator pos:start="37:30" pos:end="37:31">++</operator></expr></incr>)</control> <block pos:start="37:34" pos:end="55:9">{<block_content pos:start="39:13" pos:end="53:13">

            <if_stmt pos:start="39:13" pos:end="53:13"><if pos:start="39:13" pos:end="53:13">if <condition pos:start="39:16" pos:end="39:43">(<expr pos:start="39:17" pos:end="39:42"><operator pos:start="39:17" pos:end="39:17">(</operator><name pos:start="39:18" pos:end="39:31">channel_layout</name> <operator pos:start="39:33" pos:end="39:33">&amp;</operator> <operator pos:start="39:35" pos:end="39:35">(</operator><literal type="number" pos:start="39:36" pos:end="39:37">1L</literal><operator pos:start="39:38" pos:end="39:39">&lt;&lt;</operator><name pos:start="39:40" pos:end="39:40">i</name><operator pos:start="39:41" pos:end="39:41">)</operator><operator pos:start="39:42" pos:end="39:42">)</operator></expr>)</condition> <block pos:start="39:45" pos:end="53:13">{<block_content pos:start="41:17" pos:end="51:21">

                <decl_stmt pos:start="41:17" pos:end="41:55"><decl pos:start="41:17" pos:end="41:54"><type pos:start="41:17" pos:end="41:28"><specifier pos:start="41:17" pos:end="41:21">const</specifier> <name pos:start="41:23" pos:end="41:26">char</name> <modifier pos:start="41:28" pos:end="41:28">*</modifier></type><name pos:start="41:29" pos:end="41:32">name</name> <init pos:start="41:34" pos:end="41:54">= <expr pos:start="41:36" pos:end="41:54"><call pos:start="41:36" pos:end="41:54"><name pos:start="41:36" pos:end="41:51">get_channel_name</name><argument_list pos:start="41:52" pos:end="41:54">(<argument pos:start="41:53" pos:end="41:53"><expr pos:start="41:53" pos:end="41:53"><name pos:start="41:53" pos:end="41:53">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="43:17" pos:end="49:17"><if pos:start="43:17" pos:end="49:17">if <condition pos:start="43:20" pos:end="43:25">(<expr pos:start="43:21" pos:end="43:24"><name pos:start="43:21" pos:end="43:24">name</name></expr>)</condition> <block pos:start="43:27" pos:end="49:17">{<block_content pos:start="45:21" pos:end="47:52">

                    <if_stmt pos:start="45:21" pos:end="45:61"><if pos:start="45:21" pos:end="45:61">if <condition pos:start="45:24" pos:end="45:29">(<expr pos:start="45:25" pos:end="45:28"><name pos:start="45:25" pos:end="45:26">ch</name><operator pos:start="45:27" pos:end="45:27">&gt;</operator><literal type="number" pos:start="45:28" pos:end="45:28">0</literal></expr>)</condition><block type="pseudo" pos:start="45:31" pos:end="45:61"><block_content pos:start="45:31" pos:end="45:61"> <expr_stmt pos:start="45:31" pos:end="45:61"><expr pos:start="45:31" pos:end="45:60"><call pos:start="45:31" pos:end="45:60"><name pos:start="45:31" pos:end="45:40">av_strlcat</name><argument_list pos:start="45:41" pos:end="45:60">(<argument pos:start="45:42" pos:end="45:44"><expr pos:start="45:42" pos:end="45:44"><name pos:start="45:42" pos:end="45:44">buf</name></expr></argument>, <argument pos:start="45:47" pos:end="45:49"><expr pos:start="45:47" pos:end="45:49"><literal type="string" pos:start="45:47" pos:end="45:49">"|"</literal></expr></argument>, <argument pos:start="45:52" pos:end="45:59"><expr pos:start="45:52" pos:end="45:59"><name pos:start="45:52" pos:end="45:59">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="47:21" pos:end="47:52"><expr pos:start="47:21" pos:end="47:51"><call pos:start="47:21" pos:end="47:51"><name pos:start="47:21" pos:end="47:30">av_strlcat</name><argument_list pos:start="47:31" pos:end="47:51">(<argument pos:start="47:32" pos:end="47:34"><expr pos:start="47:32" pos:end="47:34"><name pos:start="47:32" pos:end="47:34">buf</name></expr></argument>, <argument pos:start="47:37" pos:end="47:40"><expr pos:start="47:37" pos:end="47:40"><name pos:start="47:37" pos:end="47:40">name</name></expr></argument>, <argument pos:start="47:43" pos:end="47:50"><expr pos:start="47:43" pos:end="47:50"><name pos:start="47:43" pos:end="47:50">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:21"><expr pos:start="51:17" pos:end="51:20"><name pos:start="51:17" pos:end="51:18">ch</name><operator pos:start="51:19" pos:end="51:20">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><call pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:18">av_strlcat</name><argument_list pos:start="57:19" pos:end="57:38">(<argument pos:start="57:20" pos:end="57:22"><expr pos:start="57:20" pos:end="57:22"><name pos:start="57:20" pos:end="57:22">buf</name></expr></argument>, <argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><literal type="string" pos:start="57:25" pos:end="57:27">")"</literal></expr></argument>, <argument pos:start="57:30" pos:end="57:37"><expr pos:start="57:30" pos:end="57:37"><name pos:start="57:30" pos:end="57:37">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
