<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20731.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">tftp_handle_rrq</name><parameter_list pos:start="1:28" pos:end="1:58">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:34">struct</name> <name pos:start="1:36" pos:end="1:41">tftp_t</name></name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">tp</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:57">pktlen</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="235:1">{<block_content pos:start="5:3" pos:end="233:29">

  <decl_stmt pos:start="5:3" pos:end="5:27"><decl pos:start="5:3" pos:end="5:26"><type pos:start="5:3" pos:end="5:23"><name pos:start="5:3" pos:end="5:21"><name pos:start="5:3" pos:end="5:8">struct</name> <name pos:start="5:10" pos:end="5:21">tftp_session</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">spt</name></decl>;</decl_stmt>

  <decl_stmt pos:start="7:3" pos:end="7:14"><decl pos:start="7:3" pos:end="7:7"><type pos:start="7:3" pos:end="7:5"><name pos:start="7:3" pos:end="7:5">int</name></type> <name pos:start="7:7" pos:end="7:7">s</name></decl>, <decl pos:start="7:10" pos:end="7:10"><type ref="prev" pos:start="7:3" pos:end="7:5"/><name pos:start="7:10" pos:end="7:10">k</name></decl>, <decl pos:start="7:13" pos:end="7:13"><type ref="prev" pos:start="7:3" pos:end="7:5"/><name pos:start="7:13" pos:end="7:13">n</name></decl>;</decl_stmt>

  <decl_stmt pos:start="9:3" pos:end="9:22"><decl pos:start="9:3" pos:end="9:15"><type pos:start="9:3" pos:end="9:12"><name pos:start="9:3" pos:end="9:10">u_int8_t</name> <modifier pos:start="9:12" pos:end="9:12">*</modifier></type><name pos:start="9:13" pos:end="9:15">src</name></decl>, <decl pos:start="9:18" pos:end="9:21"><type ref="prev" pos:start="9:3" pos:end="9:12"><modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">dst</name></decl>;</decl_stmt>



  <expr_stmt pos:start="13:3" pos:end="13:32"><expr pos:start="13:3" pos:end="13:31"><name pos:start="13:3" pos:end="13:3">s</name> <operator pos:start="13:5" pos:end="13:5">=</operator> <call pos:start="13:7" pos:end="13:31"><name pos:start="13:7" pos:end="13:27">tftp_session_allocate</name><argument_list pos:start="13:28" pos:end="13:31">(<argument pos:start="13:29" pos:end="13:30"><expr pos:start="13:29" pos:end="13:30"><name pos:start="13:29" pos:end="13:30">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="17:3" pos:end="21:3"><if pos:start="17:3" pos:end="21:3">if <condition pos:start="17:6" pos:end="17:12">(<expr pos:start="17:7" pos:end="17:11"><name pos:start="17:7" pos:end="17:7">s</name> <operator pos:start="17:9" pos:end="17:9">&lt;</operator> <literal type="number" pos:start="17:11" pos:end="17:11">0</literal></expr>)</condition> <block pos:start="17:14" pos:end="21:3">{<block_content pos:start="19:5" pos:end="19:11">

    <return pos:start="19:5" pos:end="19:11">return;</return>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="25:3" pos:end="25:26"><expr pos:start="25:3" pos:end="25:25"><name pos:start="25:3" pos:end="25:5">spt</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <operator pos:start="25:9" pos:end="25:9">&amp;</operator><name pos:start="25:10" pos:end="25:25"><name pos:start="25:10" pos:end="25:22">tftp_sessions</name><index pos:start="25:23" pos:end="25:25">[<expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">s</name></expr>]</index></name></expr>;</expr_stmt>



  <expr_stmt pos:start="29:3" pos:end="29:21"><expr pos:start="29:3" pos:end="29:20"><name pos:start="29:3" pos:end="29:5">src</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:10">tp</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:13">x</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:20">tp_buf</name></name></expr>;</expr_stmt>

  <expr_stmt pos:start="31:3" pos:end="31:22"><expr pos:start="31:3" pos:end="31:21"><name pos:start="31:3" pos:end="31:5">dst</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:11">spt</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:21">filename</name></name></expr>;</expr_stmt>

  <expr_stmt pos:start="33:3" pos:end="33:61"><expr pos:start="33:3" pos:end="33:60"><name pos:start="33:3" pos:end="33:3">n</name> <operator pos:start="33:5" pos:end="33:5">=</operator> <name pos:start="33:7" pos:end="33:12">pktlen</name> <operator pos:start="33:14" pos:end="33:14">-</operator> <operator pos:start="33:16" pos:end="33:16">(</operator><operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:24">uint8_t</name> <operator pos:start="33:26" pos:end="33:26">*</operator><operator pos:start="33:27" pos:end="33:27">)</operator><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:43"><name pos:start="33:29" pos:end="33:30">tp</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:33">x</name><operator pos:start="33:34" pos:end="33:34">.</operator><name pos:start="33:35" pos:end="33:40">tp_buf</name><index pos:start="33:41" pos:end="33:43">[<expr pos:start="33:42" pos:end="33:42"><literal type="number" pos:start="33:42" pos:end="33:42">0</literal></expr>]</index></name> <operator pos:start="33:45" pos:end="33:45">-</operator> <operator pos:start="33:47" pos:end="33:47">(</operator><name pos:start="33:48" pos:end="33:54">uint8_t</name> <operator pos:start="33:56" pos:end="33:56">*</operator><operator pos:start="33:57" pos:end="33:57">)</operator><name pos:start="33:58" pos:end="33:59">tp</name><operator pos:start="33:60" pos:end="33:60">)</operator></expr>;</expr_stmt>



  <comment type="block" pos:start="37:3" pos:end="37:16">/* get name */</comment>



  <for pos:start="41:3" pos:end="63:3">for <control pos:start="41:7" pos:end="41:25">(<init pos:start="41:8" pos:end="41:13"><expr pos:start="41:8" pos:end="41:12"><name pos:start="41:8" pos:end="41:8">k</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</init> <condition pos:start="41:15" pos:end="41:20"><expr pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:15">k</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <name pos:start="41:19" pos:end="41:19">n</name></expr>;</condition> <incr pos:start="41:22" pos:end="41:24"><expr pos:start="41:22" pos:end="41:24"><name pos:start="41:22" pos:end="41:22">k</name><operator pos:start="41:23" pos:end="41:24">++</operator></expr></incr>)</control> <block pos:start="41:27" pos:end="63:3">{<block_content pos:start="43:5" pos:end="61:5">

    <if_stmt pos:start="43:5" pos:end="53:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:30">(<expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:9">k</name> <operator pos:start="43:11" pos:end="43:11">&lt;</operator> <name pos:start="43:13" pos:end="43:29">TFTP_FILENAME_MAX</name></expr>)</condition> <block pos:start="43:32" pos:end="47:5">{<block_content pos:start="45:7" pos:end="45:22">

      <expr_stmt pos:start="45:7" pos:end="45:22"><expr pos:start="45:7" pos:end="45:21"><name pos:start="45:7" pos:end="45:12"><name pos:start="45:7" pos:end="45:9">dst</name><index pos:start="45:10" pos:end="45:12">[<expr pos:start="45:11" pos:end="45:11"><name pos:start="45:11" pos:end="45:11">k</name></expr>]</index></name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:21"><name pos:start="45:16" pos:end="45:18">src</name><index pos:start="45:19" pos:end="45:21">[<expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">k</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="49:5" pos:end="53:5">else <block pos:start="49:10" pos:end="53:5">{<block_content pos:start="51:7" pos:end="51:13">

      <return pos:start="51:7" pos:end="51:13">return;</return>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:23">(<expr pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:11">src</name><index pos:start="57:12" pos:end="57:14">[<expr pos:start="57:13" pos:end="57:13"><name pos:start="57:13" pos:end="57:13">k</name></expr>]</index></name> <operator pos:start="57:16" pos:end="57:17">==</operator> <literal type="char" pos:start="57:19" pos:end="57:22">'\0'</literal></expr>)</condition> <block pos:start="57:25" pos:end="61:5">{<block_content pos:start="59:7" pos:end="59:12">

      <break pos:start="59:7" pos:end="59:12">break;</break>

    </block_content>}</block></if></if_stmt>

  </block_content>}</block></for>



  <if_stmt pos:start="67:3" pos:end="71:3"><if pos:start="67:3" pos:end="71:3">if <condition pos:start="67:6" pos:end="67:13">(<expr pos:start="67:7" pos:end="67:12"><name pos:start="67:7" pos:end="67:7">k</name> <operator pos:start="67:9" pos:end="67:10">&gt;=</operator> <name pos:start="67:12" pos:end="67:12">n</name></expr>)</condition> <block pos:start="67:15" pos:end="71:3">{<block_content pos:start="69:5" pos:end="69:11">

    <return pos:start="69:5" pos:end="69:11">return;</return>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="75:3" pos:end="75:6"><expr pos:start="75:3" pos:end="75:5"><name pos:start="75:3" pos:end="75:3">k</name><operator pos:start="75:4" pos:end="75:5">++</operator></expr>;</expr_stmt>



  <comment type="block" pos:start="79:3" pos:end="79:18">/* check mode */</comment>

  <if_stmt pos:start="81:3" pos:end="85:3"><if pos:start="81:3" pos:end="85:3">if <condition pos:start="81:6" pos:end="81:18">(<expr pos:start="81:7" pos:end="81:17"><operator pos:start="81:7" pos:end="81:7">(</operator><name pos:start="81:8" pos:end="81:8">n</name> <operator pos:start="81:10" pos:end="81:10">-</operator> <name pos:start="81:12" pos:end="81:12">k</name><operator pos:start="81:13" pos:end="81:13">)</operator> <operator pos:start="81:15" pos:end="81:15">&lt;</operator> <literal type="number" pos:start="81:17" pos:end="81:17">6</literal></expr>)</condition> <block pos:start="81:20" pos:end="85:3">{<block_content pos:start="83:5" pos:end="83:11">

    <return pos:start="83:5" pos:end="83:11">return;</return>

  </block_content>}</block></if></if_stmt>



  <if_stmt pos:start="89:3" pos:end="95:3"><if pos:start="89:3" pos:end="95:3">if <condition pos:start="89:6" pos:end="89:41">(<expr pos:start="89:7" pos:end="89:40"><call pos:start="89:7" pos:end="89:35"><name pos:start="89:7" pos:end="89:12">memcmp</name><argument_list pos:start="89:13" pos:end="89:35">(<argument pos:start="89:14" pos:end="89:20"><expr pos:start="89:14" pos:end="89:20"><operator pos:start="89:14" pos:end="89:14">&amp;</operator><name pos:start="89:15" pos:end="89:20"><name pos:start="89:15" pos:end="89:17">src</name><index pos:start="89:18" pos:end="89:20">[<expr pos:start="89:19" pos:end="89:19"><name pos:start="89:19" pos:end="89:19">k</name></expr>]</index></name></expr></argument>, <argument pos:start="89:23" pos:end="89:31"><expr pos:start="89:23" pos:end="89:31"><literal type="string" pos:start="89:23" pos:end="89:31">"octet\0"</literal></expr></argument>, <argument pos:start="89:34" pos:end="89:34"><expr pos:start="89:34" pos:end="89:34"><literal type="number" pos:start="89:34" pos:end="89:34">6</literal></expr></argument>)</argument_list></call> <operator pos:start="89:37" pos:end="89:38">!=</operator> <literal type="number" pos:start="89:40" pos:end="89:40">0</literal></expr>)</condition> <block pos:start="89:43" pos:end="95:3">{<block_content pos:start="91:7" pos:end="93:13">

      <expr_stmt pos:start="91:7" pos:end="91:63"><expr pos:start="91:7" pos:end="91:62"><call pos:start="91:7" pos:end="91:62"><name pos:start="91:7" pos:end="91:21">tftp_send_error</name><argument_list pos:start="91:22" pos:end="91:62">(<argument pos:start="91:23" pos:end="91:25"><expr pos:start="91:23" pos:end="91:25"><name pos:start="91:23" pos:end="91:25">spt</name></expr></argument>, <argument pos:start="91:28" pos:end="91:28"><expr pos:start="91:28" pos:end="91:28"><literal type="number" pos:start="91:28" pos:end="91:28">4</literal></expr></argument>, <argument pos:start="91:31" pos:end="91:57"><expr pos:start="91:31" pos:end="91:57"><literal type="string" pos:start="91:31" pos:end="91:57">"Unsupported transfer mode"</literal></expr></argument>, <argument pos:start="91:60" pos:end="91:61"><expr pos:start="91:60" pos:end="91:61"><name pos:start="91:60" pos:end="91:61">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="93:7" pos:end="93:13">return;</return>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="99:3" pos:end="99:9"><expr pos:start="99:3" pos:end="99:8"><name pos:start="99:3" pos:end="99:3">k</name> <operator pos:start="99:5" pos:end="99:6">+=</operator> <literal type="number" pos:start="99:8" pos:end="99:8">6</literal></expr>;</expr_stmt> <comment type="block" pos:start="99:11" pos:end="99:30">/* skipping octet */</comment>



  <comment type="block" pos:start="103:3" pos:end="103:40">/* do sanity checks on the filename */</comment>



  <if_stmt pos:start="107:3" pos:end="117:3"><if pos:start="107:3" pos:end="117:3">if <condition pos:start="107:6" pos:end="111:48">(<expr pos:start="107:7" pos:end="111:47"><operator pos:start="107:7" pos:end="107:7">(</operator><name pos:start="107:8" pos:end="107:23"><name pos:start="107:8" pos:end="107:10">spt</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:20">filename</name><index pos:start="107:21" pos:end="107:23">[<expr pos:start="107:22" pos:end="107:22"><literal type="number" pos:start="107:22" pos:end="107:22">0</literal></expr>]</index></name> <operator pos:start="107:25" pos:end="107:26">!=</operator> <literal type="char" pos:start="107:28" pos:end="107:30">'/'</literal><operator pos:start="107:31" pos:end="107:31">)</operator>

      <operator pos:start="109:7" pos:end="109:8">||</operator> <operator pos:start="109:10" pos:end="109:10">(</operator><name pos:start="109:11" pos:end="109:58"><name pos:start="109:11" pos:end="109:13">spt</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:23">filename</name><index pos:start="109:24" pos:end="109:58">[<expr pos:start="109:25" pos:end="109:57"><call pos:start="109:25" pos:end="109:53"><name pos:start="109:25" pos:end="109:30">strlen</name><argument_list pos:start="109:31" pos:end="109:53">(<argument pos:start="109:32" pos:end="109:52"><expr pos:start="109:32" pos:end="109:52"><operator pos:start="109:32" pos:end="109:32">(</operator><name pos:start="109:33" pos:end="109:36">char</name> <operator pos:start="109:38" pos:end="109:38">*</operator><operator pos:start="109:39" pos:end="109:39">)</operator><name pos:start="109:40" pos:end="109:52"><name pos:start="109:40" pos:end="109:42">spt</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:52">filename</name></name></expr></argument>)</argument_list></call> <operator pos:start="109:55" pos:end="109:55">-</operator> <literal type="number" pos:start="109:57" pos:end="109:57">1</literal></expr>]</index></name> <operator pos:start="109:60" pos:end="109:61">==</operator> <literal type="char" pos:start="109:63" pos:end="109:65">'/'</literal><operator pos:start="109:66" pos:end="109:66">)</operator>

      <operator pos:start="111:7" pos:end="111:8">||</operator>  <call pos:start="111:11" pos:end="111:47"><name pos:start="111:11" pos:end="111:16">strstr</name><argument_list pos:start="111:17" pos:end="111:47">(<argument pos:start="111:18" pos:end="111:38"><expr pos:start="111:18" pos:end="111:38"><operator pos:start="111:18" pos:end="111:18">(</operator><name pos:start="111:19" pos:end="111:22">char</name> <operator pos:start="111:24" pos:end="111:24">*</operator><operator pos:start="111:25" pos:end="111:25">)</operator><name pos:start="111:26" pos:end="111:38"><name pos:start="111:26" pos:end="111:28">spt</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:38">filename</name></name></expr></argument>, <argument pos:start="111:41" pos:end="111:46"><expr pos:start="111:41" pos:end="111:46"><literal type="string" pos:start="111:41" pos:end="111:46">"/../"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:50" pos:end="117:3">{<block_content pos:start="113:7" pos:end="115:13">

      <expr_stmt pos:start="113:7" pos:end="113:54"><expr pos:start="113:7" pos:end="113:53"><call pos:start="113:7" pos:end="113:53"><name pos:start="113:7" pos:end="113:21">tftp_send_error</name><argument_list pos:start="113:22" pos:end="113:53">(<argument pos:start="113:23" pos:end="113:25"><expr pos:start="113:23" pos:end="113:25"><name pos:start="113:23" pos:end="113:25">spt</name></expr></argument>, <argument pos:start="113:28" pos:end="113:28"><expr pos:start="113:28" pos:end="113:28"><literal type="number" pos:start="113:28" pos:end="113:28">2</literal></expr></argument>, <argument pos:start="113:31" pos:end="113:48"><expr pos:start="113:31" pos:end="113:48"><literal type="string" pos:start="113:31" pos:end="113:48">"Access violation"</literal></expr></argument>, <argument pos:start="113:51" pos:end="113:52"><expr pos:start="113:51" pos:end="113:52"><name pos:start="113:51" pos:end="113:52">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="115:7" pos:end="115:13">return;</return>

  </block_content>}</block></if></if_stmt>



  <comment type="block" pos:start="121:3" pos:end="121:36">/* only allow exported prefixes */</comment>



  <if_stmt pos:start="125:3" pos:end="131:3"><if pos:start="125:3" pos:end="131:3">if <condition pos:start="125:6" pos:end="125:19">(<expr pos:start="125:7" pos:end="125:18"><operator pos:start="125:7" pos:end="125:7">!</operator><name pos:start="125:8" pos:end="125:18">tftp_prefix</name></expr>)</condition> <block pos:start="125:21" pos:end="131:3">{<block_content pos:start="127:7" pos:end="129:13">

      <expr_stmt pos:start="127:7" pos:end="127:54"><expr pos:start="127:7" pos:end="127:53"><call pos:start="127:7" pos:end="127:53"><name pos:start="127:7" pos:end="127:21">tftp_send_error</name><argument_list pos:start="127:22" pos:end="127:53">(<argument pos:start="127:23" pos:end="127:25"><expr pos:start="127:23" pos:end="127:25"><name pos:start="127:23" pos:end="127:25">spt</name></expr></argument>, <argument pos:start="127:28" pos:end="127:28"><expr pos:start="127:28" pos:end="127:28"><literal type="number" pos:start="127:28" pos:end="127:28">2</literal></expr></argument>, <argument pos:start="127:31" pos:end="127:48"><expr pos:start="127:31" pos:end="127:48"><literal type="string" pos:start="127:31" pos:end="127:48">"Access violation"</literal></expr></argument>, <argument pos:start="127:51" pos:end="127:52"><expr pos:start="127:51" pos:end="127:52"><name pos:start="127:51" pos:end="127:52">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="129:7" pos:end="129:13">return;</return>

  </block_content>}</block></if></if_stmt>



  <comment type="block" pos:start="135:3" pos:end="135:32">/* check if the file exists */</comment>



  <if_stmt pos:start="139:3" pos:end="145:3"><if pos:start="139:3" pos:end="145:3">if <condition pos:start="139:6" pos:end="139:51">(<expr pos:start="139:7" pos:end="139:50"><call pos:start="139:7" pos:end="139:46"><name pos:start="139:7" pos:end="139:20">tftp_read_data</name><argument_list pos:start="139:21" pos:end="139:46">(<argument pos:start="139:22" pos:end="139:24"><expr pos:start="139:22" pos:end="139:24"><name pos:start="139:22" pos:end="139:24">spt</name></expr></argument>, <argument pos:start="139:27" pos:end="139:27"><expr pos:start="139:27" pos:end="139:27"><literal type="number" pos:start="139:27" pos:end="139:27">0</literal></expr></argument>, <argument pos:start="139:30" pos:end="139:42"><expr pos:start="139:30" pos:end="139:42"><name pos:start="139:30" pos:end="139:42"><name pos:start="139:30" pos:end="139:32">spt</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:42">filename</name></name></expr></argument>, <argument pos:start="139:45" pos:end="139:45"><expr pos:start="139:45" pos:end="139:45"><literal type="number" pos:start="139:45" pos:end="139:45">0</literal></expr></argument>)</argument_list></call> <operator pos:start="139:48" pos:end="139:48">&lt;</operator> <literal type="number" pos:start="139:50" pos:end="139:50">0</literal></expr>)</condition> <block pos:start="139:53" pos:end="145:3">{<block_content pos:start="141:7" pos:end="143:13">

      <expr_stmt pos:start="141:7" pos:end="141:52"><expr pos:start="141:7" pos:end="141:51"><call pos:start="141:7" pos:end="141:51"><name pos:start="141:7" pos:end="141:21">tftp_send_error</name><argument_list pos:start="141:22" pos:end="141:51">(<argument pos:start="141:23" pos:end="141:25"><expr pos:start="141:23" pos:end="141:25"><name pos:start="141:23" pos:end="141:25">spt</name></expr></argument>, <argument pos:start="141:28" pos:end="141:28"><expr pos:start="141:28" pos:end="141:28"><literal type="number" pos:start="141:28" pos:end="141:28">1</literal></expr></argument>, <argument pos:start="141:31" pos:end="141:46"><expr pos:start="141:31" pos:end="141:46"><literal type="string" pos:start="141:31" pos:end="141:46">"File not found"</literal></expr></argument>, <argument pos:start="141:49" pos:end="141:50"><expr pos:start="141:49" pos:end="141:50"><name pos:start="141:49" pos:end="141:50">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="143:7" pos:end="143:13">return;</return>

  </block_content>}</block></if></if_stmt>



  <if_stmt pos:start="149:3" pos:end="155:3"><if pos:start="149:3" pos:end="155:3">if <condition pos:start="149:6" pos:end="149:22">(<expr pos:start="149:7" pos:end="149:21"><name pos:start="149:7" pos:end="149:16"><name pos:start="149:7" pos:end="149:9">src</name><index pos:start="149:10" pos:end="149:16">[<expr pos:start="149:11" pos:end="149:15"><name pos:start="149:11" pos:end="149:11">n</name> <operator pos:start="149:13" pos:end="149:13">-</operator> <literal type="number" pos:start="149:15" pos:end="149:15">1</literal></expr>]</index></name> <operator pos:start="149:18" pos:end="149:19">!=</operator> <literal type="number" pos:start="149:21" pos:end="149:21">0</literal></expr>)</condition> <block pos:start="149:24" pos:end="155:3">{<block_content pos:start="151:7" pos:end="153:13">

      <expr_stmt pos:start="151:7" pos:end="151:54"><expr pos:start="151:7" pos:end="151:53"><call pos:start="151:7" pos:end="151:53"><name pos:start="151:7" pos:end="151:21">tftp_send_error</name><argument_list pos:start="151:22" pos:end="151:53">(<argument pos:start="151:23" pos:end="151:25"><expr pos:start="151:23" pos:end="151:25"><name pos:start="151:23" pos:end="151:25">spt</name></expr></argument>, <argument pos:start="151:28" pos:end="151:28"><expr pos:start="151:28" pos:end="151:28"><literal type="number" pos:start="151:28" pos:end="151:28">2</literal></expr></argument>, <argument pos:start="151:31" pos:end="151:48"><expr pos:start="151:31" pos:end="151:48"><literal type="string" pos:start="151:31" pos:end="151:48">"Access violation"</literal></expr></argument>, <argument pos:start="151:51" pos:end="151:52"><expr pos:start="151:51" pos:end="151:52"><name pos:start="151:51" pos:end="151:52">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="153:7" pos:end="153:13">return;</return>

  </block_content>}</block></if></if_stmt>



  <while pos:start="159:3" pos:end="229:3">while <condition pos:start="159:9" pos:end="159:15">(<expr pos:start="159:10" pos:end="159:14"><name pos:start="159:10" pos:end="159:10">k</name> <operator pos:start="159:12" pos:end="159:12">&lt;</operator> <name pos:start="159:14" pos:end="159:14">n</name></expr>)</condition> <block pos:start="159:17" pos:end="229:3">{<block_content pos:start="161:7" pos:end="227:7">

      <decl_stmt pos:start="161:7" pos:end="161:30"><decl pos:start="161:7" pos:end="161:21"><type pos:start="161:7" pos:end="161:18"><specifier pos:start="161:7" pos:end="161:11">const</specifier> <name pos:start="161:13" pos:end="161:16">char</name> <modifier pos:start="161:18" pos:end="161:18">*</modifier></type><name pos:start="161:19" pos:end="161:21">key</name></decl>, <decl pos:start="161:24" pos:end="161:29"><type ref="prev" pos:start="161:7" pos:end="161:18"><modifier pos:start="161:24" pos:end="161:24">*</modifier></type><name pos:start="161:25" pos:end="161:29">value</name></decl>;</decl_stmt>



      <expr_stmt pos:start="165:7" pos:end="165:28"><expr pos:start="165:7" pos:end="165:27"><name pos:start="165:7" pos:end="165:9">key</name> <operator pos:start="165:11" pos:end="165:11">=</operator> <operator pos:start="165:13" pos:end="165:13">(</operator><name pos:start="165:14" pos:end="165:17">char</name> <operator pos:start="165:19" pos:end="165:19">*</operator><operator pos:start="165:20" pos:end="165:20">)</operator><name pos:start="165:21" pos:end="165:23">src</name> <operator pos:start="165:25" pos:end="165:25">+</operator> <name pos:start="165:27" pos:end="165:27">k</name></expr>;</expr_stmt>

      <expr_stmt pos:start="167:7" pos:end="167:27"><expr pos:start="167:7" pos:end="167:26"><name pos:start="167:7" pos:end="167:7">k</name> <operator pos:start="167:9" pos:end="167:10">+=</operator> <call pos:start="167:12" pos:end="167:22"><name pos:start="167:12" pos:end="167:17">strlen</name><argument_list pos:start="167:18" pos:end="167:22">(<argument pos:start="167:19" pos:end="167:21"><expr pos:start="167:19" pos:end="167:21"><name pos:start="167:19" pos:end="167:21">key</name></expr></argument>)</argument_list></call> <operator pos:start="167:24" pos:end="167:24">+</operator> <literal type="number" pos:start="167:26" pos:end="167:26">1</literal></expr>;</expr_stmt>



      <if_stmt pos:start="171:7" pos:end="177:7"><if pos:start="171:7" pos:end="177:7">if <condition pos:start="171:10" pos:end="171:17">(<expr pos:start="171:11" pos:end="171:16"><name pos:start="171:11" pos:end="171:11">k</name> <operator pos:start="171:13" pos:end="171:14">&gt;=</operator> <name pos:start="171:16" pos:end="171:16">n</name></expr>)</condition> <block pos:start="171:19" pos:end="177:7">{<block_content pos:start="173:11" pos:end="175:17">

	  <expr_stmt pos:start="173:11" pos:end="173:58"><expr pos:start="173:11" pos:end="173:57"><call pos:start="173:11" pos:end="173:57"><name pos:start="173:11" pos:end="173:25">tftp_send_error</name><argument_list pos:start="173:26" pos:end="173:57">(<argument pos:start="173:27" pos:end="173:29"><expr pos:start="173:27" pos:end="173:29"><name pos:start="173:27" pos:end="173:29">spt</name></expr></argument>, <argument pos:start="173:32" pos:end="173:32"><expr pos:start="173:32" pos:end="173:32"><literal type="number" pos:start="173:32" pos:end="173:32">2</literal></expr></argument>, <argument pos:start="173:35" pos:end="173:52"><expr pos:start="173:35" pos:end="173:52"><literal type="string" pos:start="173:35" pos:end="173:52">"Access violation"</literal></expr></argument>, <argument pos:start="173:55" pos:end="173:56"><expr pos:start="173:55" pos:end="173:56"><name pos:start="173:55" pos:end="173:56">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	  <return pos:start="175:11" pos:end="175:17">return;</return>

      </block_content>}</block></if></if_stmt>



      <expr_stmt pos:start="181:7" pos:end="181:30"><expr pos:start="181:7" pos:end="181:29"><name pos:start="181:7" pos:end="181:11">value</name> <operator pos:start="181:13" pos:end="181:13">=</operator> <operator pos:start="181:15" pos:end="181:15">(</operator><name pos:start="181:16" pos:end="181:19">char</name> <operator pos:start="181:21" pos:end="181:21">*</operator><operator pos:start="181:22" pos:end="181:22">)</operator><name pos:start="181:23" pos:end="181:25">src</name> <operator pos:start="181:27" pos:end="181:27">+</operator> <name pos:start="181:29" pos:end="181:29">k</name></expr>;</expr_stmt>

      <expr_stmt pos:start="183:7" pos:end="183:29"><expr pos:start="183:7" pos:end="183:28"><name pos:start="183:7" pos:end="183:7">k</name> <operator pos:start="183:9" pos:end="183:10">+=</operator> <call pos:start="183:12" pos:end="183:24"><name pos:start="183:12" pos:end="183:17">strlen</name><argument_list pos:start="183:18" pos:end="183:24">(<argument pos:start="183:19" pos:end="183:23"><expr pos:start="183:19" pos:end="183:23"><name pos:start="183:19" pos:end="183:23">value</name></expr></argument>)</argument_list></call> <operator pos:start="183:26" pos:end="183:26">+</operator> <literal type="number" pos:start="183:28" pos:end="183:28">1</literal></expr>;</expr_stmt>



      <if_stmt pos:start="187:7" pos:end="227:7"><if pos:start="187:7" pos:end="227:7">if <condition pos:start="187:10" pos:end="187:36">(<expr pos:start="187:11" pos:end="187:35"><call pos:start="187:11" pos:end="187:30"><name pos:start="187:11" pos:end="187:16">strcmp</name><argument_list pos:start="187:17" pos:end="187:30">(<argument pos:start="187:18" pos:end="187:20"><expr pos:start="187:18" pos:end="187:20"><name pos:start="187:18" pos:end="187:20">key</name></expr></argument>, <argument pos:start="187:23" pos:end="187:29"><expr pos:start="187:23" pos:end="187:29"><literal type="string" pos:start="187:23" pos:end="187:29">"tsize"</literal></expr></argument>)</argument_list></call> <operator pos:start="187:32" pos:end="187:33">==</operator> <literal type="number" pos:start="187:35" pos:end="187:35">0</literal></expr>)</condition> <block pos:start="187:38" pos:end="227:7">{<block_content pos:start="189:11" pos:end="225:50">

	  <decl_stmt pos:start="189:11" pos:end="189:34"><decl pos:start="189:11" pos:end="189:33"><type pos:start="189:11" pos:end="189:13"><name pos:start="189:11" pos:end="189:13">int</name></type> <name pos:start="189:15" pos:end="189:19">tsize</name> <init pos:start="189:21" pos:end="189:33">= <expr pos:start="189:23" pos:end="189:33"><call pos:start="189:23" pos:end="189:33"><name pos:start="189:23" pos:end="189:26">atoi</name><argument_list pos:start="189:27" pos:end="189:33">(<argument pos:start="189:28" pos:end="189:32"><expr pos:start="189:28" pos:end="189:32"><name pos:start="189:28" pos:end="189:32">value</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	  <decl_stmt pos:start="191:11" pos:end="191:29"><decl pos:start="191:11" pos:end="191:28"><type pos:start="191:11" pos:end="191:21"><name pos:start="191:11" pos:end="191:21"><name pos:start="191:11" pos:end="191:16">struct</name> <name pos:start="191:18" pos:end="191:21">stat</name></name></type> <name pos:start="191:23" pos:end="191:28">stat_p</name></decl>;</decl_stmt>



	  <if_stmt pos:start="195:11" pos:end="221:11"><if pos:start="195:11" pos:end="221:11">if <condition pos:start="195:14" pos:end="195:40">(<expr pos:start="195:15" pos:end="195:39"><name pos:start="195:15" pos:end="195:19">tsize</name> <operator pos:start="195:21" pos:end="195:22">==</operator> <literal type="number" pos:start="195:24" pos:end="195:24">0</literal> <operator pos:start="195:26" pos:end="195:27">&amp;&amp;</operator> <name pos:start="195:29" pos:end="195:39">tftp_prefix</name></expr>)</condition> <block pos:start="195:42" pos:end="221:11">{<block_content pos:start="197:15" pos:end="219:15">

	      <decl_stmt pos:start="197:15" pos:end="197:32"><decl pos:start="197:15" pos:end="197:31"><type pos:start="197:15" pos:end="197:18"><name pos:start="197:15" pos:end="197:18">char</name></type> <name pos:start="197:20" pos:end="197:31"><name pos:start="197:20" pos:end="197:25">buffer</name><index pos:start="197:26" pos:end="197:31">[<expr pos:start="197:27" pos:end="197:30"><literal type="number" pos:start="197:27" pos:end="197:30">1024</literal></expr>]</index></name></decl>;</decl_stmt>

	      <decl_stmt pos:start="199:15" pos:end="199:22"><decl pos:start="199:15" pos:end="199:21"><type pos:start="199:15" pos:end="199:17"><name pos:start="199:15" pos:end="199:17">int</name></type> <name pos:start="199:19" pos:end="199:21">len</name></decl>;</decl_stmt>



	      <expr_stmt pos:start="203:15" pos:end="205:57"><expr pos:start="203:15" pos:end="205:56"><name pos:start="203:15" pos:end="203:17">len</name> <operator pos:start="203:19" pos:end="203:19">=</operator> <call pos:start="203:21" pos:end="205:56"><name pos:start="203:21" pos:end="203:28">snprintf</name><argument_list pos:start="203:29" pos:end="205:56">(<argument pos:start="203:30" pos:end="203:35"><expr pos:start="203:30" pos:end="203:35"><name pos:start="203:30" pos:end="203:35">buffer</name></expr></argument>, <argument pos:start="203:38" pos:end="203:51"><expr pos:start="203:38" pos:end="203:51"><sizeof pos:start="203:38" pos:end="203:51">sizeof<argument_list pos:start="203:44" pos:end="203:51">(<argument pos:start="203:45" pos:end="203:50"><expr pos:start="203:45" pos:end="203:50"><name pos:start="203:45" pos:end="203:50">buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="203:54" pos:end="203:60"><expr pos:start="203:54" pos:end="203:60"><literal type="string" pos:start="203:54" pos:end="203:60">"%s/%s"</literal></expr></argument>,

			     <argument pos:start="205:30" pos:end="205:40"><expr pos:start="205:30" pos:end="205:40"><name pos:start="205:30" pos:end="205:40">tftp_prefix</name></expr></argument>, <argument pos:start="205:43" pos:end="205:55"><expr pos:start="205:43" pos:end="205:55"><name pos:start="205:43" pos:end="205:55"><name pos:start="205:43" pos:end="205:45">spt</name><operator pos:start="205:46" pos:end="205:47">-&gt;</operator><name pos:start="205:48" pos:end="205:55">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	      <if_stmt pos:start="209:15" pos:end="219:15"><if pos:start="209:15" pos:end="211:41">if <condition pos:start="209:18" pos:end="209:45">(<expr pos:start="209:19" pos:end="209:44"><call pos:start="209:19" pos:end="209:39"><name pos:start="209:19" pos:end="209:22">stat</name><argument_list pos:start="209:23" pos:end="209:39">(<argument pos:start="209:24" pos:end="209:29"><expr pos:start="209:24" pos:end="209:29"><name pos:start="209:24" pos:end="209:29">buffer</name></expr></argument>, <argument pos:start="209:32" pos:end="209:38"><expr pos:start="209:32" pos:end="209:38"><operator pos:start="209:32" pos:end="209:32">&amp;</operator><name pos:start="209:33" pos:end="209:38">stat_p</name></expr></argument>)</argument_list></call> <operator pos:start="209:41" pos:end="209:42">==</operator> <literal type="number" pos:start="209:44" pos:end="209:44">0</literal></expr>)</condition><block type="pseudo" pos:start="211:19" pos:end="211:41"><block_content pos:start="211:19" pos:end="211:41">

		  <expr_stmt pos:start="211:19" pos:end="211:41"><expr pos:start="211:19" pos:end="211:40"><name pos:start="211:19" pos:end="211:23">tsize</name> <operator pos:start="211:25" pos:end="211:25">=</operator> <name pos:start="211:27" pos:end="211:40"><name pos:start="211:27" pos:end="211:32">stat_p</name><operator pos:start="211:33" pos:end="211:33">.</operator><name pos:start="211:34" pos:end="211:40">st_size</name></name></expr>;</expr_stmt></block_content></block></if>

	      <else pos:start="213:15" pos:end="219:15">else <block pos:start="213:20" pos:end="219:15">{<block_content pos:start="215:19" pos:end="217:25">

		  <expr_stmt pos:start="215:19" pos:end="215:64"><expr pos:start="215:19" pos:end="215:63"><call pos:start="215:19" pos:end="215:63"><name pos:start="215:19" pos:end="215:33">tftp_send_error</name><argument_list pos:start="215:34" pos:end="215:63">(<argument pos:start="215:35" pos:end="215:37"><expr pos:start="215:35" pos:end="215:37"><name pos:start="215:35" pos:end="215:37">spt</name></expr></argument>, <argument pos:start="215:40" pos:end="215:40"><expr pos:start="215:40" pos:end="215:40"><literal type="number" pos:start="215:40" pos:end="215:40">1</literal></expr></argument>, <argument pos:start="215:43" pos:end="215:58"><expr pos:start="215:43" pos:end="215:58"><literal type="string" pos:start="215:43" pos:end="215:58">"File not found"</literal></expr></argument>, <argument pos:start="215:61" pos:end="215:62"><expr pos:start="215:61" pos:end="215:62"><name pos:start="215:61" pos:end="215:62">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		  <return pos:start="217:19" pos:end="217:25">return;</return>

	      </block_content>}</block></else></if_stmt>

	  </block_content>}</block></if></if_stmt>



	  <expr_stmt pos:start="225:11" pos:end="225:50"><expr pos:start="225:11" pos:end="225:49"><call pos:start="225:11" pos:end="225:49"><name pos:start="225:11" pos:end="225:24">tftp_send_oack</name><argument_list pos:start="225:25" pos:end="225:49">(<argument pos:start="225:26" pos:end="225:28"><expr pos:start="225:26" pos:end="225:28"><name pos:start="225:26" pos:end="225:28">spt</name></expr></argument>, <argument pos:start="225:31" pos:end="225:37"><expr pos:start="225:31" pos:end="225:37"><literal type="string" pos:start="225:31" pos:end="225:37">"tsize"</literal></expr></argument>, <argument pos:start="225:40" pos:end="225:44"><expr pos:start="225:40" pos:end="225:44"><name pos:start="225:40" pos:end="225:44">tsize</name></expr></argument>, <argument pos:start="225:47" pos:end="225:48"><expr pos:start="225:47" pos:end="225:48"><name pos:start="225:47" pos:end="225:48">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if></if_stmt>

  </block_content>}</block></while>



  <expr_stmt pos:start="233:3" pos:end="233:29"><expr pos:start="233:3" pos:end="233:28"><call pos:start="233:3" pos:end="233:28"><name pos:start="233:3" pos:end="233:16">tftp_send_data</name><argument_list pos:start="233:17" pos:end="233:28">(<argument pos:start="233:18" pos:end="233:20"><expr pos:start="233:18" pos:end="233:20"><name pos:start="233:18" pos:end="233:20">spt</name></expr></argument>, <argument pos:start="233:23" pos:end="233:23"><expr pos:start="233:23" pos:end="233:23"><literal type="number" pos:start="233:23" pos:end="233:23">1</literal></expr></argument>, <argument pos:start="233:26" pos:end="233:27"><expr pos:start="233:26" pos:end="233:27"><name pos:start="233:26" pos:end="233:27">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
