<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11180.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:22">mcf_uart_read</name><parameter_list pos:start="1:23" pos:end="3:37">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:60"><decl pos:start="1:38" pos:end="1:60"><type pos:start="1:38" pos:end="1:60"><name pos:start="1:38" pos:end="1:55">target_phys_addr_t</name></type> <name pos:start="1:57" pos:end="1:60">addr</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:36"><decl pos:start="3:24" pos:end="3:36"><type pos:start="3:24" pos:end="3:36"><name pos:start="3:24" pos:end="3:31">unsigned</name></type> <name pos:start="3:33" pos:end="3:36">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:5">

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">mcf_uart_state</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:48">= <expr pos:start="7:25" pos:end="7:48"><operator pos:start="7:25" pos:end="7:25">(</operator><name pos:start="7:26" pos:end="7:39">mcf_uart_state</name> <operator pos:start="7:41" pos:end="7:41">*</operator><operator pos:start="7:42" pos:end="7:42">)</operator><name pos:start="7:43" pos:end="7:48">opaque</name></expr></init></decl>;</decl_stmt>

    <switch pos:start="9:5" pos:end="79:5">switch <condition pos:start="9:12" pos:end="9:24">(<expr pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:16">addr</name> <operator pos:start="9:18" pos:end="9:18">&amp;</operator> <literal type="number" pos:start="9:20" pos:end="9:23">0x3f</literal></expr>)</condition> <block pos:start="9:26" pos:end="79:5">{<block_content pos:start="11:5" pos:end="77:17">

    <case pos:start="11:5" pos:end="11:14">case <expr pos:start="11:10" pos:end="11:13"><literal type="number" pos:start="11:10" pos:end="11:13">0x00</literal></expr>:</case>

        <return pos:start="13:9" pos:end="13:36">return <expr pos:start="13:16" pos:end="13:35"><name pos:start="13:16" pos:end="13:35"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:20">mr</name><index pos:start="13:21" pos:end="13:35">[<expr pos:start="13:22" pos:end="13:34"><name pos:start="13:22" pos:end="13:34"><name pos:start="13:22" pos:end="13:22">s</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:34">current_mr</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="15:5" pos:end="15:14">case <expr pos:start="15:10" pos:end="15:13"><literal type="number" pos:start="15:10" pos:end="15:13">0x04</literal></expr>:</case>

        <return pos:start="17:9" pos:end="17:21">return <expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:20">sr</name></name></expr>;</return>

    <case pos:start="19:5" pos:end="19:14">case <expr pos:start="19:10" pos:end="19:13"><literal type="number" pos:start="19:10" pos:end="19:13">0x0c</literal></expr>:</case>

        <block pos:start="21:9" pos:end="55:9">{<block_content pos:start="23:13" pos:end="53:23">

            <decl_stmt pos:start="23:13" pos:end="23:24"><decl pos:start="23:13" pos:end="23:23"><type pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:19">uint8_t</name></type> <name pos:start="23:21" pos:end="23:23">val</name></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:18"><decl pos:start="25:13" pos:end="25:17"><type pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">int</name></type> <name pos:start="25:17" pos:end="25:17">i</name></decl>;</decl_stmt>



            <if_stmt pos:start="29:13" pos:end="31:25"><if pos:start="29:13" pos:end="31:25">if <condition pos:start="29:16" pos:end="29:33">(<expr pos:start="29:17" pos:end="29:32"><name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:27">fifo_len</name></name> <operator pos:start="29:29" pos:end="29:30">==</operator> <literal type="number" pos:start="29:32" pos:end="29:32">0</literal></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:25"><block_content pos:start="31:17" pos:end="31:25">

                <return pos:start="31:17" pos:end="31:25">return <expr pos:start="31:24" pos:end="31:24"><literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="35:13" pos:end="35:29"><expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:15">val</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:28"><name pos:start="35:19" pos:end="35:19">s</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:25">fifo</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:26"><expr pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:23">fifo_len</name></name><operator pos:start="37:24" pos:end="37:25">--</operator></expr>;</expr_stmt>

            <for pos:start="39:13" pos:end="41:44">for <control pos:start="39:17" pos:end="39:45">(<init pos:start="39:18" pos:end="39:23"><expr pos:start="39:18" pos:end="39:22"><name pos:start="39:18" pos:end="39:18">i</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>;</init> <condition pos:start="39:25" pos:end="39:40"><expr pos:start="39:25" pos:end="39:39"><name pos:start="39:25" pos:end="39:25">i</name> <operator pos:start="39:27" pos:end="39:27">&lt;</operator> <name pos:start="39:29" pos:end="39:39"><name pos:start="39:29" pos:end="39:29">s</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:39">fifo_len</name></name></expr>;</condition> <incr pos:start="39:42" pos:end="39:44"><expr pos:start="39:42" pos:end="39:44"><name pos:start="39:42" pos:end="39:42">i</name><operator pos:start="39:43" pos:end="39:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="41:17" pos:end="41:44"><block_content pos:start="41:17" pos:end="41:44">

                <expr_stmt pos:start="41:17" pos:end="41:44"><expr pos:start="41:17" pos:end="41:43"><name pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:23">fifo</name><index pos:start="41:24" pos:end="41:26">[<expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">i</name></expr>]</index></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <name pos:start="41:30" pos:end="41:43"><name pos:start="41:30" pos:end="41:30">s</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:36">fifo</name><index pos:start="41:37" pos:end="41:43">[<expr pos:start="41:38" pos:end="41:42"><name pos:start="41:38" pos:end="41:38">i</name> <operator pos:start="41:40" pos:end="41:40">+</operator> <literal type="number" pos:start="41:42" pos:end="41:42">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="43:13" pos:end="43:37"><expr pos:start="43:13" pos:end="43:36"><name pos:start="43:13" pos:end="43:17"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:17">sr</name></name> <operator pos:start="43:19" pos:end="43:20">&amp;=</operator> <operator pos:start="43:22" pos:end="43:22">~</operator><name pos:start="43:23" pos:end="43:36">MCF_UART_FFULL</name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:41"><if pos:start="45:13" pos:end="47:41">if <condition pos:start="45:16" pos:end="45:33">(<expr pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:27">fifo_len</name></name> <operator pos:start="45:29" pos:end="45:30">==</operator> <literal type="number" pos:start="45:32" pos:end="45:32">0</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:41"><block_content pos:start="47:17" pos:end="47:41">

                <expr_stmt pos:start="47:17" pos:end="47:41"><expr pos:start="47:17" pos:end="47:40"><name pos:start="47:17" pos:end="47:21"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:21">sr</name></name> <operator pos:start="47:23" pos:end="47:24">&amp;=</operator> <operator pos:start="47:26" pos:end="47:26">~</operator><name pos:start="47:27" pos:end="47:40">MCF_UART_RxRDY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><call pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:27">mcf_uart_update</name><argument_list pos:start="49:28" pos:end="49:30">(<argument pos:start="49:29" pos:end="49:29"><expr pos:start="49:29" pos:end="49:29"><name pos:start="49:29" pos:end="49:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:42"><expr pos:start="51:13" pos:end="51:41"><call pos:start="51:13" pos:end="51:41"><name pos:start="51:13" pos:end="51:33">qemu_chr_accept_input</name><argument_list pos:start="51:34" pos:end="51:41">(<argument pos:start="51:35" pos:end="51:40"><expr pos:start="51:35" pos:end="51:40"><name pos:start="51:35" pos:end="51:40"><name pos:start="51:35" pos:end="51:35">s</name><operator pos:start="51:36" pos:end="51:37">-&gt;</operator><name pos:start="51:38" pos:end="51:40">chr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:23">return <expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">val</name></expr>;</return>

        </block_content>}</block>

    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><literal type="number" pos:start="57:10" pos:end="57:13">0x10</literal></expr>:</case>

        <comment type="block" pos:start="59:9" pos:end="59:36">/* TODO: Implement IPCR.  */</comment>

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>

    <case pos:start="63:5" pos:end="63:14">case <expr pos:start="63:10" pos:end="63:13"><literal type="number" pos:start="63:10" pos:end="63:13">0x14</literal></expr>:</case>

        <return pos:start="65:9" pos:end="65:22">return <expr pos:start="65:16" pos:end="65:21"><name pos:start="65:16" pos:end="65:21"><name pos:start="65:16" pos:end="65:16">s</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:21">isr</name></name></expr>;</return>

    <case pos:start="67:5" pos:end="67:14">case <expr pos:start="67:10" pos:end="67:13"><literal type="number" pos:start="67:10" pos:end="67:13">0x18</literal></expr>:</case>

        <return pos:start="69:9" pos:end="69:22">return <expr pos:start="69:16" pos:end="69:21"><name pos:start="69:16" pos:end="69:21"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:21">bg1</name></name></expr>;</return>

    <case pos:start="71:5" pos:end="71:14">case <expr pos:start="71:10" pos:end="71:13"><literal type="number" pos:start="71:10" pos:end="71:13">0x1c</literal></expr>:</case>

        <return pos:start="73:9" pos:end="73:22">return <expr pos:start="73:16" pos:end="73:21"><name pos:start="73:16" pos:end="73:21"><name pos:start="73:16" pos:end="73:16">s</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:21">bg2</name></name></expr>;</return>

    <default pos:start="75:5" pos:end="75:12">default:</default>

        <return pos:start="77:9" pos:end="77:17">return <expr pos:start="77:16" pos:end="77:16"><literal type="number" pos:start="77:16" pos:end="77:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
