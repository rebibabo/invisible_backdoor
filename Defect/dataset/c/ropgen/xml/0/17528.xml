<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17528.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">loco_decode_plane</name><parameter_list pos:start="1:29" pos:end="3:84">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:40">LOCOContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">l</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">data</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:69"><decl pos:start="1:61" pos:end="1:69"><type pos:start="1:61" pos:end="1:69"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:69">width</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:81"><decl pos:start="1:72" pos:end="1:81"><type pos:start="1:72" pos:end="1:81"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:81">height</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:39">stride</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:59"><decl pos:start="3:42" pos:end="3:59"><type pos:start="3:42" pos:end="3:59"><specifier pos:start="3:42" pos:end="3:46">const</specifier> <name pos:start="3:48" pos:end="3:54">uint8_t</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:59">buf</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:73"><decl pos:start="3:62" pos:end="3:73"><type pos:start="3:62" pos:end="3:73"><name pos:start="3:62" pos:end="3:64">int</name></type> <name pos:start="3:66" pos:end="3:73">buf_size</name></decl></parameter>, <parameter pos:start="3:76" pos:end="3:83"><decl pos:start="3:76" pos:end="3:83"><type pos:start="3:76" pos:end="3:83"><name pos:start="3:76" pos:end="3:78">int</name></type> <name pos:start="3:80" pos:end="3:83">step</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:45">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">RICEContext</name></type> <name pos:start="7:17" pos:end="7:18">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if<condition pos:start="15:7" pos:end="15:19">(<expr pos:start="15:8" pos:end="15:18"><name pos:start="15:8" pos:end="15:15">buf_size</name><operator pos:start="15:16" pos:end="15:17">&lt;=</operator><literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:18">init_get_bits8</name><argument_list pos:start="21:19" pos:end="21:41">(<argument pos:start="21:20" pos:end="21:25"><expr pos:start="21:20" pos:end="21:25"><operator pos:start="21:20" pos:end="21:20">&amp;</operator><name pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:22">rc</name><operator pos:start="21:23" pos:end="21:23">.</operator><name pos:start="21:24" pos:end="21:25">gb</name></name></expr></argument>, <argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">buf</name></expr></argument>, <argument pos:start="21:33" pos:end="21:40"><expr pos:start="21:33" pos:end="21:40"><name pos:start="21:33" pos:end="21:40">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:6">rc</name><operator pos:start="23:7" pos:end="23:7">.</operator><name pos:start="23:8" pos:end="23:11">save</name></name>  <operator pos:start="23:14" pos:end="23:14">=</operator> <literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:17"><expr pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:6">rc</name><operator pos:start="25:7" pos:end="25:7">.</operator><name pos:start="25:8" pos:end="25:10">run</name></name>   <operator pos:start="25:14" pos:end="25:14">=</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:17"><expr pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:6">rc</name><operator pos:start="27:7" pos:end="27:7">.</operator><name pos:start="27:8" pos:end="27:11">run2</name></name>  <operator pos:start="27:14" pos:end="27:14">=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:6">rc</name><operator pos:start="29:7" pos:end="29:7">.</operator><name pos:start="29:8" pos:end="29:12">lossy</name></name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:16">l</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">lossy</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:17"><expr pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:6">rc</name><operator pos:start="33:7" pos:end="33:7">.</operator><name pos:start="33:8" pos:end="33:10">sum</name></name>   <operator pos:start="33:14" pos:end="33:14">=</operator> <literal type="number" pos:start="33:16" pos:end="33:16">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:17"><expr pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:6">rc</name><operator pos:start="35:7" pos:end="35:7">.</operator><name pos:start="35:8" pos:end="35:12">count</name></name> <operator pos:start="35:14" pos:end="35:14">=</operator> <literal type="number" pos:start="35:16" pos:end="35:16">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:32">/* restore top left pixel */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:33"><expr pos:start="41:5" pos:end="41:32"><name pos:start="41:5" pos:end="41:7">val</name>     <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:32"><name pos:start="41:15" pos:end="41:27">loco_get_rice</name><argument_list pos:start="41:28" pos:end="41:32">(<argument pos:start="41:29" pos:end="41:31"><expr pos:start="41:29" pos:end="41:31"><operator pos:start="41:29" pos:end="41:29">&amp;</operator><name pos:start="41:30" pos:end="41:31">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:8">data</name><index pos:start="43:9" pos:end="43:11">[<expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">0</literal></expr>]</index></name> <operator pos:start="43:13" pos:end="43:13">=</operator> <literal type="number" pos:start="43:15" pos:end="43:19">128</literal> <operator pos:start="43:19" pos:end="43:19">+</operator> <name pos:start="43:21" pos:end="43:23">val</name></expr>;</expr_stmt>

    <comment type="block" pos:start="45:5" pos:end="45:26">/* restore top line */</comment>

    <for pos:start="47:5" pos:end="53:5">for <control pos:start="47:9" pos:end="47:31">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">1</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:26"><expr pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:25">width</name></expr>;</condition> <incr pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:28">i</name><operator pos:start="47:29" pos:end="47:30">++</operator></expr></incr>)</control> <block pos:start="47:33" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:53">

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:11">val</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:32"><name pos:start="49:15" pos:end="49:27">loco_get_rice</name><argument_list pos:start="49:28" pos:end="49:32">(<argument pos:start="49:29" pos:end="49:31"><expr pos:start="49:29" pos:end="49:31"><operator pos:start="49:29" pos:end="49:29">&amp;</operator><name pos:start="49:30" pos:end="49:31">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:53"><expr pos:start="51:9" pos:end="51:52"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:12">data</name><index pos:start="51:13" pos:end="51:22">[<expr pos:start="51:14" pos:end="51:21"><name pos:start="51:14" pos:end="51:14">i</name> <operator pos:start="51:16" pos:end="51:16">*</operator> <name pos:start="51:18" pos:end="51:21">step</name></expr>]</index></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:46"><name pos:start="51:26" pos:end="51:29">data</name><index pos:start="51:30" pos:end="51:46">[<expr pos:start="51:31" pos:end="51:45"><name pos:start="51:31" pos:end="51:31">i</name> <operator pos:start="51:33" pos:end="51:33">*</operator> <name pos:start="51:35" pos:end="51:38">step</name> <operator pos:start="51:40" pos:end="51:40">-</operator> <name pos:start="51:42" pos:end="51:45">step</name></expr>]</index></name> <operator pos:start="51:48" pos:end="51:48">+</operator> <name pos:start="51:50" pos:end="51:52">val</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="55:5" pos:end="55:19"><expr pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:8">data</name> <operator pos:start="55:10" pos:end="55:11">+=</operator> <name pos:start="55:13" pos:end="55:18">stride</name></expr>;</expr_stmt>

    <for pos:start="57:5" pos:end="77:5">for <control pos:start="57:9" pos:end="57:32">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">j</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">1</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:27"><expr pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:17">j</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <name pos:start="57:21" pos:end="57:26">height</name></expr>;</condition> <incr pos:start="57:29" pos:end="57:31"><expr pos:start="57:29" pos:end="57:31"><name pos:start="57:29" pos:end="57:29">j</name><operator pos:start="57:30" pos:end="57:31">++</operator></expr></incr>)</control> <block pos:start="57:34" pos:end="77:5">{<block_content pos:start="61:9" pos:end="75:23">

        <comment type="block" pos:start="59:9" pos:end="59:33">/* restore left column */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:11">val</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:32"><name pos:start="61:15" pos:end="61:27">loco_get_rice</name><argument_list pos:start="61:28" pos:end="61:32">(<argument pos:start="61:29" pos:end="61:31"><expr pos:start="61:29" pos:end="61:31"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:31">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:12">data</name><index pos:start="63:13" pos:end="63:15">[<expr pos:start="63:14" pos:end="63:14"><literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>]</index></name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:31"><name pos:start="63:19" pos:end="63:22">data</name><index pos:start="63:23" pos:end="63:31">[<expr pos:start="63:24" pos:end="63:30"><operator pos:start="63:24" pos:end="63:24">-</operator><name pos:start="63:25" pos:end="63:30">stride</name></expr>]</index></name> <operator pos:start="63:33" pos:end="63:33">+</operator> <name pos:start="63:35" pos:end="63:37">val</name></expr>;</expr_stmt>

        <comment type="block" pos:start="65:9" pos:end="65:38">/* restore all other pixels */</comment>

        <for pos:start="67:9" pos:end="73:9">for <control pos:start="67:13" pos:end="67:35">(<init pos:start="67:14" pos:end="67:19"><expr pos:start="67:14" pos:end="67:18"><name pos:start="67:14" pos:end="67:14">i</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">1</literal></expr>;</init> <condition pos:start="67:21" pos:end="67:30"><expr pos:start="67:21" pos:end="67:29"><name pos:start="67:21" pos:end="67:21">i</name> <operator pos:start="67:23" pos:end="67:23">&lt;</operator> <name pos:start="67:25" pos:end="67:29">width</name></expr>;</condition> <incr pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:32">i</name><operator pos:start="67:33" pos:end="67:34">++</operator></expr></incr>)</control> <block pos:start="67:37" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:79">

            <expr_stmt pos:start="69:13" pos:end="69:37"><expr pos:start="69:13" pos:end="69:36"><name pos:start="69:13" pos:end="69:15">val</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:36"><name pos:start="69:19" pos:end="69:31">loco_get_rice</name><argument_list pos:start="69:32" pos:end="69:36">(<argument pos:start="69:33" pos:end="69:35"><expr pos:start="69:33" pos:end="69:35"><operator pos:start="69:33" pos:end="69:33">&amp;</operator><name pos:start="69:34" pos:end="69:35">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:79"><expr pos:start="71:13" pos:end="71:78"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:16">data</name><index pos:start="71:17" pos:end="71:26">[<expr pos:start="71:18" pos:end="71:25"><name pos:start="71:18" pos:end="71:18">i</name> <operator pos:start="71:20" pos:end="71:20">*</operator> <name pos:start="71:22" pos:end="71:25">step</name></expr>]</index></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <call pos:start="71:30" pos:end="71:72"><name pos:start="71:30" pos:end="71:41">loco_predict</name><argument_list pos:start="71:42" pos:end="71:72">(<argument pos:start="71:43" pos:end="71:57"><expr pos:start="71:43" pos:end="71:57"><operator pos:start="71:43" pos:end="71:43">&amp;</operator><name pos:start="71:44" pos:end="71:57"><name pos:start="71:44" pos:end="71:47">data</name><index pos:start="71:48" pos:end="71:57">[<expr pos:start="71:49" pos:end="71:56"><name pos:start="71:49" pos:end="71:49">i</name> <operator pos:start="71:51" pos:end="71:51">*</operator> <name pos:start="71:53" pos:end="71:56">step</name></expr>]</index></name></expr></argument>, <argument pos:start="71:60" pos:end="71:65"><expr pos:start="71:60" pos:end="71:65"><name pos:start="71:60" pos:end="71:65">stride</name></expr></argument>, <argument pos:start="71:68" pos:end="71:71"><expr pos:start="71:68" pos:end="71:71"><name pos:start="71:68" pos:end="71:71">step</name></expr></argument>)</argument_list></call> <operator pos:start="71:74" pos:end="71:74">+</operator> <name pos:start="71:76" pos:end="71:78">val</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="75:9" pos:end="75:23"><expr pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:12">data</name> <operator pos:start="75:14" pos:end="75:15">+=</operator> <name pos:start="75:17" pos:end="75:22">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="81:5" pos:end="81:45">return <expr pos:start="81:12" pos:end="81:44"><operator pos:start="81:12" pos:end="81:12">(</operator><call pos:start="81:13" pos:end="81:34"><name pos:start="81:13" pos:end="81:26">get_bits_count</name><argument_list pos:start="81:27" pos:end="81:34">(<argument pos:start="81:28" pos:end="81:33"><expr pos:start="81:28" pos:end="81:33"><operator pos:start="81:28" pos:end="81:28">&amp;</operator><name pos:start="81:29" pos:end="81:33"><name pos:start="81:29" pos:end="81:30">rc</name><operator pos:start="81:31" pos:end="81:31">.</operator><name pos:start="81:32" pos:end="81:33">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="81:36" pos:end="81:36">+</operator> <literal type="number" pos:start="81:38" pos:end="81:38">7</literal><operator pos:start="81:39" pos:end="81:39">)</operator> <operator pos:start="81:41" pos:end="81:42">&gt;&gt;</operator> <literal type="number" pos:start="81:44" pos:end="81:44">3</literal></expr>;</return>

</block_content>}</block></function>
</unit>
