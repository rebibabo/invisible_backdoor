<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7812.c" pos:tabs="8"><function pos:start="1:1" pos:end="263:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">read_frame_data</name><parameter_list pos:start="1:27" pos:end="1:69">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:40">ALSDecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:68"><decl pos:start="1:48" pos:end="1:68"><type pos:start="1:48" pos:end="1:68"><name pos:start="1:48" pos:end="1:55">unsigned</name> <name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:68">ra_frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="263:1">{<block_content pos:start="5:5" pos:end="261:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">ALSSpecificConfig</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:28">sconf</name> <init pos:start="5:30" pos:end="5:42">= <expr pos:start="5:32" pos:end="5:42"><operator pos:start="5:32" pos:end="5:32">&amp;</operator><name pos:start="5:33" pos:end="5:42"><name pos:start="5:33" pos:end="5:35">ctx</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:42">sconf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">avctx</name>    <init pos:start="7:30" pos:end="7:41">= <expr pos:start="7:32" pos:end="7:41"><name pos:start="7:32" pos:end="7:41"><name pos:start="7:32" pos:end="7:34">ctx</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:41">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name> <init pos:start="9:23" pos:end="9:32">= <expr pos:start="9:25" pos:end="9:32"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:28">ctx</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:32">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:31"><name pos:start="11:18" pos:end="11:27">div_blocks</name><index pos:start="11:28" pos:end="11:31">[<expr pos:start="11:29" pos:end="11:30"><literal type="number" pos:start="11:29" pos:end="11:30">32</literal></expr>]</index></name></decl>;</decl_stmt>                <comment type="line" format="doxygen" pos:start="11:49" pos:end="11:65">///&lt; block sizes.</comment>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:29"><name pos:start="15:18" pos:end="15:26">js_blocks</name><index pos:start="15:27" pos:end="15:29">[<expr pos:start="15:28" pos:end="15:28"><literal type="number" pos:start="15:28" pos:end="15:28">2</literal></expr>]</index></name></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:20">bs_info</name> <init pos:start="19:22" pos:end="19:24">= <expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="23:5" pos:end="23:59">// skip the size of the ra unit if present in the frame</comment>

    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:53">(<expr pos:start="25:9" pos:end="25:52"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:13">sconf</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">ra_flag</name></name> <operator pos:start="25:24" pos:end="25:25">==</operator> <name pos:start="25:27" pos:end="25:40">RA_FLAG_FRAMES</name> <operator pos:start="25:42" pos:end="25:43">&amp;&amp;</operator> <name pos:start="25:45" pos:end="25:52">ra_frame</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><call pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:22">skip_bits_long</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:25"><expr pos:start="27:24" pos:end="27:25"><name pos:start="27:24" pos:end="27:25">gb</name></expr></argument>, <argument pos:start="27:28" pos:end="27:29"><expr pos:start="27:28" pos:end="27:29"><literal type="number" pos:start="27:28" pos:end="27:29">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:48">(<expr pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:13">sconf</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:24">mc_coding</name></name> <operator pos:start="31:26" pos:end="31:27">&amp;&amp;</operator> <name pos:start="31:29" pos:end="31:47"><name pos:start="31:29" pos:end="31:33">sconf</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:47">joint_stereo</name></name></expr>)</condition> <block pos:start="31:50" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:27">

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:11">ctx</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:22">js_switch</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <call pos:start="33:26" pos:end="33:38"><name pos:start="33:26" pos:end="33:34">get_bits1</name><argument_list pos:start="33:35" pos:end="33:38">(<argument pos:start="33:36" pos:end="33:37"><expr pos:start="33:36" pos:end="33:37"><name pos:start="33:36" pos:end="33:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><call pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:22">align_get_bits</name><argument_list pos:start="35:23" pos:end="35:26">(<argument pos:start="35:24" pos:end="35:25"><expr pos:start="35:24" pos:end="35:25"><name pos:start="35:24" pos:end="35:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="253:5"><if pos:start="41:5" pos:end="113:5">if <condition pos:start="41:8" pos:end="41:44">(<expr pos:start="41:9" pos:end="41:43"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:25"><name pos:start="41:10" pos:end="41:14">sconf</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:25">mc_coding</name></name> <operator pos:start="41:27" pos:end="41:28">||</operator> <name pos:start="41:30" pos:end="41:43"><name pos:start="41:30" pos:end="41:32">ctx</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:43">js_switch</name></name></expr>)</condition> <block pos:start="41:46" pos:end="113:5">{<block_content pos:start="43:9" pos:end="111:9">

        <decl_stmt pos:start="43:9" pos:end="43:50"><decl pos:start="43:9" pos:end="43:49"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:26">independent_bs</name> <init pos:start="43:28" pos:end="43:49">= <expr pos:start="43:30" pos:end="43:49"><operator pos:start="43:30" pos:end="43:30">!</operator><name pos:start="43:31" pos:end="43:49"><name pos:start="43:31" pos:end="43:35">sconf</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:49">joint_stereo</name></name></expr></init></decl>;</decl_stmt>



        <for pos:start="47:9" pos:end="111:9">for <control pos:start="47:13" pos:end="47:45">(<init pos:start="47:14" pos:end="47:19"><expr pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:14">c</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>;</init> <condition pos:start="47:21" pos:end="47:40"><expr pos:start="47:21" pos:end="47:39"><name pos:start="47:21" pos:end="47:21">c</name> <operator pos:start="47:23" pos:end="47:23">&lt;</operator> <name pos:start="47:25" pos:end="47:39"><name pos:start="47:25" pos:end="47:29">avctx</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:39">channels</name></name></expr>;</condition> <incr pos:start="47:42" pos:end="47:44"><expr pos:start="47:42" pos:end="47:44"><name pos:start="47:42" pos:end="47:42">c</name><operator pos:start="47:43" pos:end="47:44">++</operator></expr></incr>)</control> <block pos:start="47:47" pos:end="111:9">{<block_content pos:start="49:13" pos:end="109:69">

            <expr_stmt pos:start="49:13" pos:end="49:29"><expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:21">js_blocks</name><index pos:start="49:22" pos:end="49:24">[<expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr>]</index></name> <operator pos:start="49:26" pos:end="49:26">=</operator> <literal type="number" pos:start="49:28" pos:end="49:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:29"><expr pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:21">js_blocks</name><index pos:start="51:22" pos:end="51:24">[<expr pos:start="51:23" pos:end="51:23"><literal type="number" pos:start="51:23" pos:end="51:23">1</literal></expr>]</index></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <literal type="number" pos:start="51:28" pos:end="51:28">0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:55"><expr pos:start="55:13" pos:end="55:54"><call pos:start="55:13" pos:end="55:54"><name pos:start="55:13" pos:end="55:27">get_block_sizes</name><argument_list pos:start="55:28" pos:end="55:54">(<argument pos:start="55:29" pos:end="55:31"><expr pos:start="55:29" pos:end="55:31"><name pos:start="55:29" pos:end="55:31">ctx</name></expr></argument>, <argument pos:start="55:34" pos:end="55:43"><expr pos:start="55:34" pos:end="55:43"><name pos:start="55:34" pos:end="55:43">div_blocks</name></expr></argument>, <argument pos:start="55:46" pos:end="55:53"><expr pos:start="55:46" pos:end="55:53"><operator pos:start="55:46" pos:end="55:46">&amp;</operator><name pos:start="55:47" pos:end="55:53">bs_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="line" pos:start="59:13" pos:end="59:79">// if joint_stereo and block_switching is set, independent decoding</comment>

            <comment type="line" pos:start="61:13" pos:end="61:55">// is signaled via the first bit of bs_info</comment>

            <if_stmt pos:start="63:13" pos:end="67:39"><if pos:start="63:13" pos:end="67:39">if <condition pos:start="63:16" pos:end="63:62">(<expr pos:start="63:17" pos:end="63:61"><name pos:start="63:17" pos:end="63:35"><name pos:start="63:17" pos:end="63:21">sconf</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:35">joint_stereo</name></name> <operator pos:start="63:37" pos:end="63:38">&amp;&amp;</operator> <name pos:start="63:40" pos:end="63:61"><name pos:start="63:40" pos:end="63:44">sconf</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:61">block_switching</name></name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="67:39"><block_content pos:start="65:17" pos:end="67:39">

                <if_stmt pos:start="65:17" pos:end="67:39"><if pos:start="65:17" pos:end="67:39">if <condition pos:start="65:20" pos:end="65:34">(<expr pos:start="65:21" pos:end="65:33"><name pos:start="65:21" pos:end="65:27">bs_info</name> <operator pos:start="65:29" pos:end="65:30">&gt;&gt;</operator> <literal type="number" pos:start="65:32" pos:end="65:33">31</literal></expr>)</condition><block type="pseudo" pos:start="67:21" pos:end="67:39"><block_content pos:start="67:21" pos:end="67:39">

                    <expr_stmt pos:start="67:21" pos:end="67:39"><expr pos:start="67:21" pos:end="67:38"><name pos:start="67:21" pos:end="67:34">independent_bs</name> <operator pos:start="67:36" pos:end="67:36">=</operator> <literal type="number" pos:start="67:38" pos:end="67:38">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



            <comment type="line" pos:start="71:13" pos:end="71:78">// if this is the last channel, it has to be decoded independently</comment>

            <if_stmt pos:start="73:13" pos:end="75:35"><if pos:start="73:13" pos:end="75:35">if <condition pos:start="73:16" pos:end="73:41">(<expr pos:start="73:17" pos:end="73:40"><name pos:start="73:17" pos:end="73:17">c</name> <operator pos:start="73:19" pos:end="73:20">==</operator> <name pos:start="73:22" pos:end="73:36"><name pos:start="73:22" pos:end="73:26">avctx</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:36">channels</name></name> <operator pos:start="73:38" pos:end="73:38">-</operator> <literal type="number" pos:start="73:40" pos:end="73:40">1</literal></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:35"><block_content pos:start="75:17" pos:end="75:35">

                <expr_stmt pos:start="75:17" pos:end="75:35"><expr pos:start="75:17" pos:end="75:34"><name pos:start="75:17" pos:end="75:30">independent_bs</name> <operator pos:start="75:32" pos:end="75:32">=</operator> <literal type="number" pos:start="75:34" pos:end="75:34">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="79:13" pos:end="99:13"><if pos:start="79:13" pos:end="89:13">if <condition pos:start="79:16" pos:end="79:31">(<expr pos:start="79:17" pos:end="79:30"><name pos:start="79:17" pos:end="79:30">independent_bs</name></expr>)</condition> <block pos:start="79:33" pos:end="89:13">{<block_content pos:start="81:17" pos:end="87:33">

                <if_stmt pos:start="81:17" pos:end="83:30"><if pos:start="81:17" pos:end="83:30">if <condition pos:start="81:20" pos:end="81:79">(<expr pos:start="81:21" pos:end="81:78"><call pos:start="81:21" pos:end="81:78"><name pos:start="81:21" pos:end="81:37">decode_blocks_ind</name><argument_list pos:start="81:38" pos:end="81:78">(<argument pos:start="81:39" pos:end="81:41"><expr pos:start="81:39" pos:end="81:41"><name pos:start="81:39" pos:end="81:41">ctx</name></expr></argument>, <argument pos:start="81:44" pos:end="81:51"><expr pos:start="81:44" pos:end="81:51"><name pos:start="81:44" pos:end="81:51">ra_frame</name></expr></argument>, <argument pos:start="81:54" pos:end="81:54"><expr pos:start="81:54" pos:end="81:54"><name pos:start="81:54" pos:end="81:54">c</name></expr></argument>, <argument pos:start="81:57" pos:end="81:66"><expr pos:start="81:57" pos:end="81:66"><name pos:start="81:57" pos:end="81:66">div_blocks</name></expr></argument>, <argument pos:start="81:69" pos:end="81:77"><expr pos:start="81:69" pos:end="81:77"><name pos:start="81:69" pos:end="81:77">js_blocks</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="83:21" pos:end="83:30"><block_content pos:start="83:21" pos:end="83:30">

                    <return pos:start="83:21" pos:end="83:30">return <expr pos:start="83:28" pos:end="83:29"><operator pos:start="83:28" pos:end="83:28">-</operator><literal type="number" pos:start="83:29" pos:end="83:29">1</literal></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="87:17" pos:end="87:33"><expr pos:start="87:17" pos:end="87:32"><name pos:start="87:17" pos:end="87:30">independent_bs</name><operator pos:start="87:31" pos:end="87:32">--</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="89:15" pos:end="99:13">else <block pos:start="89:20" pos:end="99:13">{<block_content pos:start="91:17" pos:end="97:20">

                <if_stmt pos:start="91:17" pos:end="93:30"><if pos:start="91:17" pos:end="93:30">if <condition pos:start="91:20" pos:end="91:75">(<expr pos:start="91:21" pos:end="91:74"><call pos:start="91:21" pos:end="91:74"><name pos:start="91:21" pos:end="91:33">decode_blocks</name><argument_list pos:start="91:34" pos:end="91:74">(<argument pos:start="91:35" pos:end="91:37"><expr pos:start="91:35" pos:end="91:37"><name pos:start="91:35" pos:end="91:37">ctx</name></expr></argument>, <argument pos:start="91:40" pos:end="91:47"><expr pos:start="91:40" pos:end="91:47"><name pos:start="91:40" pos:end="91:47">ra_frame</name></expr></argument>, <argument pos:start="91:50" pos:end="91:50"><expr pos:start="91:50" pos:end="91:50"><name pos:start="91:50" pos:end="91:50">c</name></expr></argument>, <argument pos:start="91:53" pos:end="91:62"><expr pos:start="91:53" pos:end="91:62"><name pos:start="91:53" pos:end="91:62">div_blocks</name></expr></argument>, <argument pos:start="91:65" pos:end="91:73"><expr pos:start="91:65" pos:end="91:73"><name pos:start="91:65" pos:end="91:73">js_blocks</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="93:21" pos:end="93:30"><block_content pos:start="93:21" pos:end="93:30">

                    <return pos:start="93:21" pos:end="93:30">return <expr pos:start="93:28" pos:end="93:29"><operator pos:start="93:28" pos:end="93:28">-</operator><literal type="number" pos:start="93:29" pos:end="93:29">1</literal></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="97:17" pos:end="97:20"><expr pos:start="97:17" pos:end="97:19"><name pos:start="97:17" pos:end="97:17">c</name><operator pos:start="97:18" pos:end="97:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <comment type="line" pos:start="103:13" pos:end="103:42">// store carryover raw samples</comment>

            <expr_stmt pos:start="105:13" pos:end="109:69"><expr pos:start="105:13" pos:end="109:68"><call pos:start="105:13" pos:end="109:68"><name pos:start="105:13" pos:end="105:19">memmove</name><argument_list pos:start="105:20" pos:end="109:68">(<argument pos:start="105:21" pos:end="105:58"><expr pos:start="105:21" pos:end="105:58"><name pos:start="105:21" pos:end="105:39"><name pos:start="105:21" pos:end="105:23">ctx</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:36">raw_samples</name><index pos:start="105:37" pos:end="105:39">[<expr pos:start="105:38" pos:end="105:38"><name pos:start="105:38" pos:end="105:38">c</name></expr>]</index></name> <operator pos:start="105:41" pos:end="105:41">-</operator> <name pos:start="105:43" pos:end="105:58"><name pos:start="105:43" pos:end="105:47">sconf</name><operator pos:start="105:48" pos:end="105:49">-&gt;</operator><name pos:start="105:50" pos:end="105:58">max_order</name></name></expr></argument>,

                    <argument pos:start="107:21" pos:end="107:80"><expr pos:start="107:21" pos:end="107:80"><name pos:start="107:21" pos:end="107:39"><name pos:start="107:21" pos:end="107:23">ctx</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:36">raw_samples</name><index pos:start="107:37" pos:end="107:39">[<expr pos:start="107:38" pos:end="107:38"><name pos:start="107:38" pos:end="107:38">c</name></expr>]</index></name> <operator pos:start="107:41" pos:end="107:41">-</operator> <name pos:start="107:43" pos:end="107:58"><name pos:start="107:43" pos:end="107:47">sconf</name><operator pos:start="107:48" pos:end="107:49">-&gt;</operator><name pos:start="107:50" pos:end="107:58">max_order</name></name> <operator pos:start="107:60" pos:end="107:60">+</operator> <name pos:start="107:62" pos:end="107:80"><name pos:start="107:62" pos:end="107:66">sconf</name><operator pos:start="107:67" pos:end="107:68">-&gt;</operator><name pos:start="107:69" pos:end="107:80">frame_length</name></name></expr></argument>,

                    <argument pos:start="109:21" pos:end="109:67"><expr pos:start="109:21" pos:end="109:67"><sizeof pos:start="109:21" pos:end="109:48">sizeof<argument_list pos:start="109:27" pos:end="109:48">(<argument pos:start="109:28" pos:end="109:47"><expr pos:start="109:28" pos:end="109:47"><operator pos:start="109:28" pos:end="109:28">*</operator><name pos:start="109:29" pos:end="109:47"><name pos:start="109:29" pos:end="109:31">ctx</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:44">raw_samples</name><index pos:start="109:45" pos:end="109:47">[<expr pos:start="109:46" pos:end="109:46"><name pos:start="109:46" pos:end="109:46">c</name></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="109:50" pos:end="109:50">*</operator> <name pos:start="109:52" pos:end="109:67"><name pos:start="109:52" pos:end="109:56">sconf</name><operator pos:start="109:57" pos:end="109:58">-&gt;</operator><name pos:start="109:59" pos:end="109:67">max_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="113:7" pos:end="253:5">else <block pos:start="113:12" pos:end="253:5">{<block_content pos:start="115:9" pos:end="251:69"> <comment type="line" pos:start="113:14" pos:end="113:36">// multi-channel coding</comment>

        <decl_stmt pos:start="115:9" pos:end="115:26"><decl pos:start="115:9" pos:end="115:25"><type pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:20">ALSBlockData</name></type>   <name pos:start="115:24" pos:end="115:25">bd</name></decl>;</decl_stmt>

        <decl_stmt pos:start="117:9" pos:end="117:25"><decl pos:start="117:9" pos:end="117:24"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type>            <name pos:start="117:24" pos:end="117:24">b</name></decl>;</decl_stmt>

        <decl_stmt pos:start="119:9" pos:end="119:67"><decl pos:start="119:9" pos:end="119:66"><type pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:11">int</name>            <modifier pos:start="119:24" pos:end="119:24">*</modifier></type><name pos:start="119:25" pos:end="119:41">reverted_channels</name> <init pos:start="119:43" pos:end="119:66">= <expr pos:start="119:45" pos:end="119:66"><name pos:start="119:45" pos:end="119:66"><name pos:start="119:45" pos:end="119:47">ctx</name><operator pos:start="119:48" pos:end="119:49">-&gt;</operator><name pos:start="119:50" pos:end="119:66">reverted_channels</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="121:9" pos:end="121:46"><decl pos:start="121:9" pos:end="121:45"><type pos:start="121:9" pos:end="121:20"><name pos:start="121:9" pos:end="121:16">unsigned</name> <name pos:start="121:18" pos:end="121:20">int</name></type>   <name pos:start="121:24" pos:end="121:29">offset</name>             <init pos:start="121:43" pos:end="121:45">= <expr pos:start="121:45" pos:end="121:45"><literal type="number" pos:start="121:45" pos:end="121:45">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="125:9" pos:end="133:13">for <control pos:start="125:13" pos:end="125:45">(<init pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:18"><name pos:start="125:14" pos:end="125:14">c</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>;</init> <condition pos:start="125:21" pos:end="125:40"><expr pos:start="125:21" pos:end="125:39"><name pos:start="125:21" pos:end="125:21">c</name> <operator pos:start="125:23" pos:end="125:23">&lt;</operator> <name pos:start="125:25" pos:end="125:39"><name pos:start="125:25" pos:end="125:29">avctx</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:39">channels</name></name></expr>;</condition> <incr pos:start="125:42" pos:end="125:44"><expr pos:start="125:42" pos:end="125:44"><name pos:start="125:42" pos:end="125:42">c</name><operator pos:start="125:43" pos:end="125:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="127:13" pos:end="133:13"><block_content pos:start="127:13" pos:end="133:13">

            <if_stmt pos:start="127:13" pos:end="133:13"><if pos:start="127:13" pos:end="133:13">if <condition pos:start="127:16" pos:end="127:58">(<expr pos:start="127:17" pos:end="127:57"><name pos:start="127:17" pos:end="127:33"><name pos:start="127:17" pos:end="127:19">ctx</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:30">chan_data</name><index pos:start="127:31" pos:end="127:33">[<expr pos:start="127:32" pos:end="127:32"><name pos:start="127:32" pos:end="127:32">c</name></expr>]</index></name> <operator pos:start="127:35" pos:end="127:35">&lt;</operator> <name pos:start="127:37" pos:end="127:57"><name pos:start="127:37" pos:end="127:39">ctx</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:57">chan_data_buffer</name></name></expr>)</condition> <block pos:start="127:60" pos:end="133:13">{<block_content pos:start="129:17" pos:end="131:26">

                <expr_stmt pos:start="129:17" pos:end="129:76"><expr pos:start="129:17" pos:end="129:75"><call pos:start="129:17" pos:end="129:75"><name pos:start="129:17" pos:end="129:22">av_log</name><argument_list pos:start="129:23" pos:end="129:75">(<argument pos:start="129:24" pos:end="129:33"><expr pos:start="129:24" pos:end="129:33"><name pos:start="129:24" pos:end="129:33"><name pos:start="129:24" pos:end="129:26">ctx</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:33">avctx</name></name></expr></argument>, <argument pos:start="129:36" pos:end="129:47"><expr pos:start="129:36" pos:end="129:47"><name pos:start="129:36" pos:end="129:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:50" pos:end="129:74"><expr pos:start="129:50" pos:end="129:74"><literal type="string" pos:start="129:50" pos:end="129:74">"Invalid channel data!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="131:17" pos:end="131:26">return <expr pos:start="131:24" pos:end="131:25"><operator pos:start="131:24" pos:end="131:24">-</operator><literal type="number" pos:start="131:25" pos:end="131:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt></block_content></block></for>



        <expr_stmt pos:start="137:9" pos:end="137:59"><expr pos:start="137:9" pos:end="137:58"><call pos:start="137:9" pos:end="137:58"><name pos:start="137:9" pos:end="137:14">memset</name><argument_list pos:start="137:15" pos:end="137:58">(<argument pos:start="137:16" pos:end="137:18"><expr pos:start="137:16" pos:end="137:18"><operator pos:start="137:16" pos:end="137:16">&amp;</operator><name pos:start="137:17" pos:end="137:18">bd</name></expr></argument>,               <argument pos:start="137:35" pos:end="137:35"><expr pos:start="137:35" pos:end="137:35"><literal type="number" pos:start="137:35" pos:end="137:35">0</literal></expr></argument>, <argument pos:start="137:38" pos:end="137:57"><expr pos:start="137:38" pos:end="137:57"><sizeof pos:start="137:38" pos:end="137:57">sizeof<argument_list pos:start="137:44" pos:end="137:57">(<argument pos:start="137:45" pos:end="137:56"><expr pos:start="137:45" pos:end="137:56"><name pos:start="137:45" pos:end="137:56">ALSBlockData</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:83"><expr pos:start="139:9" pos:end="139:82"><call pos:start="139:9" pos:end="139:82"><name pos:start="139:9" pos:end="139:14">memset</name><argument_list pos:start="139:15" pos:end="139:82">(<argument pos:start="139:16" pos:end="139:32"><expr pos:start="139:16" pos:end="139:32"><name pos:start="139:16" pos:end="139:32">reverted_channels</name></expr></argument>, <argument pos:start="139:35" pos:end="139:35"><expr pos:start="139:35" pos:end="139:35"><literal type="number" pos:start="139:35" pos:end="139:35">0</literal></expr></argument>, <argument pos:start="139:38" pos:end="139:81"><expr pos:start="139:38" pos:end="139:81"><sizeof pos:start="139:38" pos:end="139:63">sizeof<argument_list pos:start="139:44" pos:end="139:63">(<argument pos:start="139:45" pos:end="139:62"><expr pos:start="139:45" pos:end="139:62"><operator pos:start="139:45" pos:end="139:45">*</operator><name pos:start="139:46" pos:end="139:62">reverted_channels</name></expr></argument>)</argument_list></sizeof> <operator pos:start="139:65" pos:end="139:65">*</operator> <name pos:start="139:67" pos:end="139:81"><name pos:start="139:67" pos:end="139:71">avctx</name><operator pos:start="139:72" pos:end="139:73">-&gt;</operator><name pos:start="139:74" pos:end="139:81">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:39"><expr pos:start="143:9" pos:end="143:38"><name pos:start="143:9" pos:end="143:19"><name pos:start="143:9" pos:end="143:10">bd</name><operator pos:start="143:11" pos:end="143:11">.</operator><name pos:start="143:12" pos:end="143:19">ra_block</name></name>         <operator pos:start="143:29" pos:end="143:29">=</operator> <name pos:start="143:31" pos:end="143:38">ra_frame</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:52"><expr pos:start="145:9" pos:end="145:51"><name pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:10">bd</name><operator pos:start="145:11" pos:end="145:11">.</operator><name pos:start="145:12" pos:end="145:27">prev_raw_samples</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <name pos:start="145:31" pos:end="145:51"><name pos:start="145:31" pos:end="145:33">ctx</name><operator pos:start="145:34" pos:end="145:35">-&gt;</operator><name pos:start="145:36" pos:end="145:51">prev_raw_samples</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="149:9" pos:end="149:51"><expr pos:start="149:9" pos:end="149:50"><call pos:start="149:9" pos:end="149:50"><name pos:start="149:9" pos:end="149:23">get_block_sizes</name><argument_list pos:start="149:24" pos:end="149:50">(<argument pos:start="149:25" pos:end="149:27"><expr pos:start="149:25" pos:end="149:27"><name pos:start="149:25" pos:end="149:27">ctx</name></expr></argument>, <argument pos:start="149:30" pos:end="149:39"><expr pos:start="149:30" pos:end="149:39"><name pos:start="149:30" pos:end="149:39">div_blocks</name></expr></argument>, <argument pos:start="149:42" pos:end="149:49"><expr pos:start="149:42" pos:end="149:49"><operator pos:start="149:42" pos:end="149:42">&amp;</operator><name pos:start="149:43" pos:end="149:49">bs_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="153:9" pos:end="239:9">for <control pos:start="153:13" pos:end="153:45">(<init pos:start="153:14" pos:end="153:19"><expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:14">b</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>;</init> <condition pos:start="153:21" pos:end="153:40"><expr pos:start="153:21" pos:end="153:39"><name pos:start="153:21" pos:end="153:21">b</name> <operator pos:start="153:23" pos:end="153:23">&lt;</operator> <name pos:start="153:25" pos:end="153:39"><name pos:start="153:25" pos:end="153:27">ctx</name><operator pos:start="153:28" pos:end="153:29">-&gt;</operator><name pos:start="153:30" pos:end="153:39">num_blocks</name></name></expr>;</condition> <incr pos:start="153:42" pos:end="153:44"><expr pos:start="153:42" pos:end="153:44"><name pos:start="153:42" pos:end="153:42">b</name><operator pos:start="153:43" pos:end="153:44">++</operator></expr></incr>)</control> <block pos:start="153:47" pos:end="239:9">{<block_content pos:start="155:13" pos:end="237:29">

            <expr_stmt pos:start="155:13" pos:end="155:44"><expr pos:start="155:13" pos:end="155:43"><name pos:start="155:13" pos:end="155:27"><name pos:start="155:13" pos:end="155:14">bd</name><operator pos:start="155:15" pos:end="155:15">.</operator><name pos:start="155:16" pos:end="155:27">block_length</name></name> <operator pos:start="155:29" pos:end="155:29">=</operator> <name pos:start="155:31" pos:end="155:43"><name pos:start="155:31" pos:end="155:40">div_blocks</name><index pos:start="155:41" pos:end="155:43">[<expr pos:start="155:42" pos:end="155:42"><name pos:start="155:42" pos:end="155:42">b</name></expr>]</index></name></expr>;</expr_stmt>



            <for pos:start="159:13" pos:end="191:13">for <control pos:start="159:17" pos:end="159:49">(<init pos:start="159:18" pos:end="159:23"><expr pos:start="159:18" pos:end="159:22"><name pos:start="159:18" pos:end="159:18">c</name> <operator pos:start="159:20" pos:end="159:20">=</operator> <literal type="number" pos:start="159:22" pos:end="159:22">0</literal></expr>;</init> <condition pos:start="159:25" pos:end="159:44"><expr pos:start="159:25" pos:end="159:43"><name pos:start="159:25" pos:end="159:25">c</name> <operator pos:start="159:27" pos:end="159:27">&lt;</operator> <name pos:start="159:29" pos:end="159:43"><name pos:start="159:29" pos:end="159:33">avctx</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:43">channels</name></name></expr>;</condition> <incr pos:start="159:46" pos:end="159:48"><expr pos:start="159:46" pos:end="159:48"><name pos:start="159:46" pos:end="159:46">c</name><operator pos:start="159:47" pos:end="159:48">++</operator></expr></incr>)</control> <block pos:start="159:51" pos:end="191:13">{<block_content pos:start="161:17" pos:end="189:30">

                <expr_stmt pos:start="161:17" pos:end="161:54"><expr pos:start="161:17" pos:end="161:53"><name pos:start="161:17" pos:end="161:30"><name pos:start="161:17" pos:end="161:18">bd</name><operator pos:start="161:19" pos:end="161:19">.</operator><name pos:start="161:20" pos:end="161:30">const_block</name></name> <operator pos:start="161:32" pos:end="161:32">=</operator> <name pos:start="161:34" pos:end="161:49"><name pos:start="161:34" pos:end="161:36">ctx</name><operator pos:start="161:37" pos:end="161:38">-&gt;</operator><name pos:start="161:39" pos:end="161:49">const_block</name></name> <operator pos:start="161:51" pos:end="161:51">+</operator> <name pos:start="161:53" pos:end="161:53">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:53"><expr pos:start="163:17" pos:end="163:52"><name pos:start="163:17" pos:end="163:29"><name pos:start="163:17" pos:end="163:18">bd</name><operator pos:start="163:19" pos:end="163:19">.</operator><name pos:start="163:20" pos:end="163:29">shift_lsbs</name></name>  <operator pos:start="163:32" pos:end="163:32">=</operator> <name pos:start="163:34" pos:end="163:48"><name pos:start="163:34" pos:end="163:36">ctx</name><operator pos:start="163:37" pos:end="163:38">-&gt;</operator><name pos:start="163:39" pos:end="163:48">shift_lsbs</name></name> <operator pos:start="163:50" pos:end="163:50">+</operator> <name pos:start="163:52" pos:end="163:52">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:52"><expr pos:start="165:17" pos:end="165:51"><name pos:start="165:17" pos:end="165:28"><name pos:start="165:17" pos:end="165:18">bd</name><operator pos:start="165:19" pos:end="165:19">.</operator><name pos:start="165:20" pos:end="165:28">opt_order</name></name>   <operator pos:start="165:32" pos:end="165:32">=</operator> <name pos:start="165:34" pos:end="165:47"><name pos:start="165:34" pos:end="165:36">ctx</name><operator pos:start="165:37" pos:end="165:38">-&gt;</operator><name pos:start="165:39" pos:end="165:47">opt_order</name></name> <operator pos:start="165:49" pos:end="165:49">+</operator> <name pos:start="165:51" pos:end="165:51">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:68"><expr pos:start="167:17" pos:end="167:67"><name pos:start="167:17" pos:end="167:37"><name pos:start="167:17" pos:end="167:18">bd</name><operator pos:start="167:19" pos:end="167:19">.</operator><name pos:start="167:20" pos:end="167:37">store_prev_samples</name></name> <operator pos:start="167:39" pos:end="167:39">=</operator> <name pos:start="167:41" pos:end="167:63"><name pos:start="167:41" pos:end="167:43">ctx</name><operator pos:start="167:44" pos:end="167:45">-&gt;</operator><name pos:start="167:46" pos:end="167:63">store_prev_samples</name></name> <operator pos:start="167:65" pos:end="167:65">+</operator> <name pos:start="167:67" pos:end="167:67">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:50"><expr pos:start="169:17" pos:end="169:49"><name pos:start="169:17" pos:end="169:26"><name pos:start="169:17" pos:end="169:18">bd</name><operator pos:start="169:19" pos:end="169:19">.</operator><name pos:start="169:20" pos:end="169:26">use_ltp</name></name>     <operator pos:start="169:32" pos:end="169:32">=</operator> <name pos:start="169:34" pos:end="169:45"><name pos:start="169:34" pos:end="169:36">ctx</name><operator pos:start="169:37" pos:end="169:38">-&gt;</operator><name pos:start="169:39" pos:end="169:45">use_ltp</name></name> <operator pos:start="169:47" pos:end="169:47">+</operator> <name pos:start="169:49" pos:end="169:49">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:50"><expr pos:start="171:17" pos:end="171:49"><name pos:start="171:17" pos:end="171:26"><name pos:start="171:17" pos:end="171:18">bd</name><operator pos:start="171:19" pos:end="171:19">.</operator><name pos:start="171:20" pos:end="171:26">ltp_lag</name></name>     <operator pos:start="171:32" pos:end="171:32">=</operator> <name pos:start="171:34" pos:end="171:45"><name pos:start="171:34" pos:end="171:36">ctx</name><operator pos:start="171:37" pos:end="171:38">-&gt;</operator><name pos:start="171:39" pos:end="171:45">ltp_lag</name></name> <operator pos:start="171:47" pos:end="171:47">+</operator> <name pos:start="171:49" pos:end="171:49">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:50"><expr pos:start="173:17" pos:end="173:49"><name pos:start="173:17" pos:end="173:27"><name pos:start="173:17" pos:end="173:18">bd</name><operator pos:start="173:19" pos:end="173:19">.</operator><name pos:start="173:20" pos:end="173:27">ltp_gain</name></name>    <operator pos:start="173:32" pos:end="173:32">=</operator> <name pos:start="173:34" pos:end="173:49"><name pos:start="173:34" pos:end="173:36">ctx</name><operator pos:start="173:37" pos:end="173:38">-&gt;</operator><name pos:start="173:39" pos:end="173:46">ltp_gain</name><index pos:start="173:47" pos:end="173:49">[<expr pos:start="173:48" pos:end="173:48"><name pos:start="173:48" pos:end="173:48">c</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:49"><expr pos:start="175:17" pos:end="175:48"><name pos:start="175:17" pos:end="175:26"><name pos:start="175:17" pos:end="175:18">bd</name><operator pos:start="175:19" pos:end="175:19">.</operator><name pos:start="175:20" pos:end="175:26">lpc_cof</name></name>     <operator pos:start="175:32" pos:end="175:32">=</operator> <name pos:start="175:34" pos:end="175:48"><name pos:start="175:34" pos:end="175:36">ctx</name><operator pos:start="175:37" pos:end="175:38">-&gt;</operator><name pos:start="175:39" pos:end="175:45">lpc_cof</name><index pos:start="175:46" pos:end="175:48">[<expr pos:start="175:47" pos:end="175:47"><name pos:start="175:47" pos:end="175:47">c</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:51"><expr pos:start="177:17" pos:end="177:50"><name pos:start="177:17" pos:end="177:28"><name pos:start="177:17" pos:end="177:18">bd</name><operator pos:start="177:19" pos:end="177:19">.</operator><name pos:start="177:20" pos:end="177:28">quant_cof</name></name>   <operator pos:start="177:32" pos:end="177:32">=</operator> <name pos:start="177:34" pos:end="177:50"><name pos:start="177:34" pos:end="177:36">ctx</name><operator pos:start="177:37" pos:end="177:38">-&gt;</operator><name pos:start="177:39" pos:end="177:47">quant_cof</name><index pos:start="177:48" pos:end="177:50">[<expr pos:start="177:49" pos:end="177:49"><name pos:start="177:49" pos:end="177:49">c</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:62"><expr pos:start="179:17" pos:end="179:61"><name pos:start="179:17" pos:end="179:30"><name pos:start="179:17" pos:end="179:18">bd</name><operator pos:start="179:19" pos:end="179:19">.</operator><name pos:start="179:20" pos:end="179:30">raw_samples</name></name> <operator pos:start="179:32" pos:end="179:32">=</operator> <name pos:start="179:34" pos:end="179:52"><name pos:start="179:34" pos:end="179:36">ctx</name><operator pos:start="179:37" pos:end="179:38">-&gt;</operator><name pos:start="179:39" pos:end="179:49">raw_samples</name><index pos:start="179:50" pos:end="179:52">[<expr pos:start="179:51" pos:end="179:51"><name pos:start="179:51" pos:end="179:51">c</name></expr>]</index></name> <operator pos:start="179:54" pos:end="179:54">+</operator> <name pos:start="179:56" pos:end="179:61">offset</name></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:38"><expr pos:start="181:17" pos:end="181:37"><name pos:start="181:17" pos:end="181:28"><name pos:start="181:17" pos:end="181:18">bd</name><operator pos:start="181:19" pos:end="181:19">.</operator><name pos:start="181:20" pos:end="181:28">raw_other</name></name>   <operator pos:start="181:32" pos:end="181:32">=</operator> <name pos:start="181:34" pos:end="181:37">NULL</name></expr>;</expr_stmt>



                <expr_stmt pos:start="185:17" pos:end="185:37"><expr pos:start="185:17" pos:end="185:36"><call pos:start="185:17" pos:end="185:36"><name pos:start="185:17" pos:end="185:26">read_block</name><argument_list pos:start="185:27" pos:end="185:36">(<argument pos:start="185:28" pos:end="185:30"><expr pos:start="185:28" pos:end="185:30"><name pos:start="185:28" pos:end="185:30">ctx</name></expr></argument>, <argument pos:start="185:33" pos:end="185:35"><expr pos:start="185:33" pos:end="185:35"><operator pos:start="185:33" pos:end="185:33">&amp;</operator><name pos:start="185:34" pos:end="185:35">bd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="187:17" pos:end="189:30"><if pos:start="187:17" pos:end="189:30">if <condition pos:start="187:20" pos:end="187:65">(<expr pos:start="187:21" pos:end="187:64"><call pos:start="187:21" pos:end="187:64"><name pos:start="187:21" pos:end="187:37">read_channel_data</name><argument_list pos:start="187:38" pos:end="187:64">(<argument pos:start="187:39" pos:end="187:41"><expr pos:start="187:39" pos:end="187:41"><name pos:start="187:39" pos:end="187:41">ctx</name></expr></argument>, <argument pos:start="187:44" pos:end="187:60"><expr pos:start="187:44" pos:end="187:60"><name pos:start="187:44" pos:end="187:60"><name pos:start="187:44" pos:end="187:46">ctx</name><operator pos:start="187:47" pos:end="187:48">-&gt;</operator><name pos:start="187:49" pos:end="187:57">chan_data</name><index pos:start="187:58" pos:end="187:60">[<expr pos:start="187:59" pos:end="187:59"><name pos:start="187:59" pos:end="187:59">c</name></expr>]</index></name></expr></argument>, <argument pos:start="187:63" pos:end="187:63"><expr pos:start="187:63" pos:end="187:63"><name pos:start="187:63" pos:end="187:63">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="189:21" pos:end="189:30"><block_content pos:start="189:21" pos:end="189:30">

                    <return pos:start="189:21" pos:end="189:30">return <expr pos:start="189:28" pos:end="189:29"><operator pos:start="189:28" pos:end="189:28">-</operator><literal type="number" pos:start="189:29" pos:end="189:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></for>



            <for pos:start="195:13" pos:end="201:30">for <control pos:start="195:17" pos:end="195:49">(<init pos:start="195:18" pos:end="195:23"><expr pos:start="195:18" pos:end="195:22"><name pos:start="195:18" pos:end="195:18">c</name> <operator pos:start="195:20" pos:end="195:20">=</operator> <literal type="number" pos:start="195:22" pos:end="195:22">0</literal></expr>;</init> <condition pos:start="195:25" pos:end="195:44"><expr pos:start="195:25" pos:end="195:43"><name pos:start="195:25" pos:end="195:25">c</name> <operator pos:start="195:27" pos:end="195:27">&lt;</operator> <name pos:start="195:29" pos:end="195:43"><name pos:start="195:29" pos:end="195:33">avctx</name><operator pos:start="195:34" pos:end="195:35">-&gt;</operator><name pos:start="195:36" pos:end="195:43">channels</name></name></expr>;</condition> <incr pos:start="195:46" pos:end="195:48"><expr pos:start="195:46" pos:end="195:48"><name pos:start="195:46" pos:end="195:46">c</name><operator pos:start="195:47" pos:end="195:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="197:17" pos:end="201:30"><block_content pos:start="197:17" pos:end="201:30">

                <if_stmt pos:start="197:17" pos:end="201:30"><if pos:start="197:17" pos:end="201:30">if <condition pos:start="197:20" pos:end="199:77">(<expr pos:start="197:21" pos:end="199:76"><call pos:start="197:21" pos:end="199:76"><name pos:start="197:21" pos:end="197:46">revert_channel_correlation</name><argument_list pos:start="197:47" pos:end="199:76">(<argument pos:start="197:48" pos:end="197:50"><expr pos:start="197:48" pos:end="197:50"><name pos:start="197:48" pos:end="197:50">ctx</name></expr></argument>, <argument pos:start="197:53" pos:end="197:55"><expr pos:start="197:53" pos:end="197:55"><operator pos:start="197:53" pos:end="197:53">&amp;</operator><name pos:start="197:54" pos:end="197:55">bd</name></expr></argument>, <argument pos:start="197:58" pos:end="197:71"><expr pos:start="197:58" pos:end="197:71"><name pos:start="197:58" pos:end="197:71"><name pos:start="197:58" pos:end="197:60">ctx</name><operator pos:start="197:61" pos:end="197:62">-&gt;</operator><name pos:start="197:63" pos:end="197:71">chan_data</name></name></expr></argument>,

                                               <argument pos:start="199:48" pos:end="199:64"><expr pos:start="199:48" pos:end="199:64"><name pos:start="199:48" pos:end="199:64">reverted_channels</name></expr></argument>, <argument pos:start="199:67" pos:end="199:72"><expr pos:start="199:67" pos:end="199:72"><name pos:start="199:67" pos:end="199:72">offset</name></expr></argument>, <argument pos:start="199:75" pos:end="199:75"><expr pos:start="199:75" pos:end="199:75"><name pos:start="199:75" pos:end="199:75">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="201:21" pos:end="201:30"><block_content pos:start="201:21" pos:end="201:30">

                    <return pos:start="201:21" pos:end="201:30">return <expr pos:start="201:28" pos:end="201:29"><operator pos:start="201:28" pos:end="201:28">-</operator><literal type="number" pos:start="201:29" pos:end="201:29">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>



            <for pos:start="205:13" pos:end="229:13">for <control pos:start="205:17" pos:end="205:49">(<init pos:start="205:18" pos:end="205:23"><expr pos:start="205:18" pos:end="205:22"><name pos:start="205:18" pos:end="205:18">c</name> <operator pos:start="205:20" pos:end="205:20">=</operator> <literal type="number" pos:start="205:22" pos:end="205:22">0</literal></expr>;</init> <condition pos:start="205:25" pos:end="205:44"><expr pos:start="205:25" pos:end="205:43"><name pos:start="205:25" pos:end="205:25">c</name> <operator pos:start="205:27" pos:end="205:27">&lt;</operator> <name pos:start="205:29" pos:end="205:43"><name pos:start="205:29" pos:end="205:33">avctx</name><operator pos:start="205:34" pos:end="205:35">-&gt;</operator><name pos:start="205:36" pos:end="205:43">channels</name></name></expr>;</condition> <incr pos:start="205:46" pos:end="205:48"><expr pos:start="205:46" pos:end="205:48"><name pos:start="205:46" pos:end="205:46">c</name><operator pos:start="205:47" pos:end="205:48">++</operator></expr></incr>)</control> <block pos:start="205:51" pos:end="229:13">{<block_content pos:start="207:17" pos:end="227:39">

                <expr_stmt pos:start="207:17" pos:end="207:54"><expr pos:start="207:17" pos:end="207:53"><name pos:start="207:17" pos:end="207:30"><name pos:start="207:17" pos:end="207:18">bd</name><operator pos:start="207:19" pos:end="207:19">.</operator><name pos:start="207:20" pos:end="207:30">const_block</name></name> <operator pos:start="207:32" pos:end="207:32">=</operator> <name pos:start="207:34" pos:end="207:49"><name pos:start="207:34" pos:end="207:36">ctx</name><operator pos:start="207:37" pos:end="207:38">-&gt;</operator><name pos:start="207:39" pos:end="207:49">const_block</name></name> <operator pos:start="207:51" pos:end="207:51">+</operator> <name pos:start="207:53" pos:end="207:53">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:53"><expr pos:start="209:17" pos:end="209:52"><name pos:start="209:17" pos:end="209:29"><name pos:start="209:17" pos:end="209:18">bd</name><operator pos:start="209:19" pos:end="209:19">.</operator><name pos:start="209:20" pos:end="209:29">shift_lsbs</name></name>  <operator pos:start="209:32" pos:end="209:32">=</operator> <name pos:start="209:34" pos:end="209:48"><name pos:start="209:34" pos:end="209:36">ctx</name><operator pos:start="209:37" pos:end="209:38">-&gt;</operator><name pos:start="209:39" pos:end="209:48">shift_lsbs</name></name> <operator pos:start="209:50" pos:end="209:50">+</operator> <name pos:start="209:52" pos:end="209:52">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:52"><expr pos:start="211:17" pos:end="211:51"><name pos:start="211:17" pos:end="211:28"><name pos:start="211:17" pos:end="211:18">bd</name><operator pos:start="211:19" pos:end="211:19">.</operator><name pos:start="211:20" pos:end="211:28">opt_order</name></name>   <operator pos:start="211:32" pos:end="211:32">=</operator> <name pos:start="211:34" pos:end="211:47"><name pos:start="211:34" pos:end="211:36">ctx</name><operator pos:start="211:37" pos:end="211:38">-&gt;</operator><name pos:start="211:39" pos:end="211:47">opt_order</name></name> <operator pos:start="211:49" pos:end="211:49">+</operator> <name pos:start="211:51" pos:end="211:51">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:68"><expr pos:start="213:17" pos:end="213:67"><name pos:start="213:17" pos:end="213:37"><name pos:start="213:17" pos:end="213:18">bd</name><operator pos:start="213:19" pos:end="213:19">.</operator><name pos:start="213:20" pos:end="213:37">store_prev_samples</name></name> <operator pos:start="213:39" pos:end="213:39">=</operator> <name pos:start="213:41" pos:end="213:63"><name pos:start="213:41" pos:end="213:43">ctx</name><operator pos:start="213:44" pos:end="213:45">-&gt;</operator><name pos:start="213:46" pos:end="213:63">store_prev_samples</name></name> <operator pos:start="213:65" pos:end="213:65">+</operator> <name pos:start="213:67" pos:end="213:67">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:50"><expr pos:start="215:17" pos:end="215:49"><name pos:start="215:17" pos:end="215:26"><name pos:start="215:17" pos:end="215:18">bd</name><operator pos:start="215:19" pos:end="215:19">.</operator><name pos:start="215:20" pos:end="215:26">use_ltp</name></name>     <operator pos:start="215:32" pos:end="215:32">=</operator> <name pos:start="215:34" pos:end="215:45"><name pos:start="215:34" pos:end="215:36">ctx</name><operator pos:start="215:37" pos:end="215:38">-&gt;</operator><name pos:start="215:39" pos:end="215:45">use_ltp</name></name> <operator pos:start="215:47" pos:end="215:47">+</operator> <name pos:start="215:49" pos:end="215:49">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:50"><expr pos:start="217:17" pos:end="217:49"><name pos:start="217:17" pos:end="217:26"><name pos:start="217:17" pos:end="217:18">bd</name><operator pos:start="217:19" pos:end="217:19">.</operator><name pos:start="217:20" pos:end="217:26">ltp_lag</name></name>     <operator pos:start="217:32" pos:end="217:32">=</operator> <name pos:start="217:34" pos:end="217:45"><name pos:start="217:34" pos:end="217:36">ctx</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:45">ltp_lag</name></name> <operator pos:start="217:47" pos:end="217:47">+</operator> <name pos:start="217:49" pos:end="217:49">c</name></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:50"><expr pos:start="219:17" pos:end="219:49"><name pos:start="219:17" pos:end="219:27"><name pos:start="219:17" pos:end="219:18">bd</name><operator pos:start="219:19" pos:end="219:19">.</operator><name pos:start="219:20" pos:end="219:27">ltp_gain</name></name>    <operator pos:start="219:32" pos:end="219:32">=</operator> <name pos:start="219:34" pos:end="219:49"><name pos:start="219:34" pos:end="219:36">ctx</name><operator pos:start="219:37" pos:end="219:38">-&gt;</operator><name pos:start="219:39" pos:end="219:46">ltp_gain</name><index pos:start="219:47" pos:end="219:49">[<expr pos:start="219:48" pos:end="219:48"><name pos:start="219:48" pos:end="219:48">c</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:49"><expr pos:start="221:17" pos:end="221:48"><name pos:start="221:17" pos:end="221:26"><name pos:start="221:17" pos:end="221:18">bd</name><operator pos:start="221:19" pos:end="221:19">.</operator><name pos:start="221:20" pos:end="221:26">lpc_cof</name></name>     <operator pos:start="221:32" pos:end="221:32">=</operator> <name pos:start="221:34" pos:end="221:48"><name pos:start="221:34" pos:end="221:36">ctx</name><operator pos:start="221:37" pos:end="221:38">-&gt;</operator><name pos:start="221:39" pos:end="221:45">lpc_cof</name><index pos:start="221:46" pos:end="221:48">[<expr pos:start="221:47" pos:end="221:47"><name pos:start="221:47" pos:end="221:47">c</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:51"><expr pos:start="223:17" pos:end="223:50"><name pos:start="223:17" pos:end="223:28"><name pos:start="223:17" pos:end="223:18">bd</name><operator pos:start="223:19" pos:end="223:19">.</operator><name pos:start="223:20" pos:end="223:28">quant_cof</name></name>   <operator pos:start="223:32" pos:end="223:32">=</operator> <name pos:start="223:34" pos:end="223:50"><name pos:start="223:34" pos:end="223:36">ctx</name><operator pos:start="223:37" pos:end="223:38">-&gt;</operator><name pos:start="223:39" pos:end="223:47">quant_cof</name><index pos:start="223:48" pos:end="223:50">[<expr pos:start="223:49" pos:end="223:49"><name pos:start="223:49" pos:end="223:49">c</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:62"><expr pos:start="225:17" pos:end="225:61"><name pos:start="225:17" pos:end="225:30"><name pos:start="225:17" pos:end="225:18">bd</name><operator pos:start="225:19" pos:end="225:19">.</operator><name pos:start="225:20" pos:end="225:30">raw_samples</name></name> <operator pos:start="225:32" pos:end="225:32">=</operator> <name pos:start="225:34" pos:end="225:52"><name pos:start="225:34" pos:end="225:36">ctx</name><operator pos:start="225:37" pos:end="225:38">-&gt;</operator><name pos:start="225:39" pos:end="225:49">raw_samples</name><index pos:start="225:50" pos:end="225:52">[<expr pos:start="225:51" pos:end="225:51"><name pos:start="225:51" pos:end="225:51">c</name></expr>]</index></name> <operator pos:start="225:54" pos:end="225:54">+</operator> <name pos:start="225:56" pos:end="225:61">offset</name></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:39"><expr pos:start="227:17" pos:end="227:38"><call pos:start="227:17" pos:end="227:38"><name pos:start="227:17" pos:end="227:28">decode_block</name><argument_list pos:start="227:29" pos:end="227:38">(<argument pos:start="227:30" pos:end="227:32"><expr pos:start="227:30" pos:end="227:32"><name pos:start="227:30" pos:end="227:32">ctx</name></expr></argument>, <argument pos:start="227:35" pos:end="227:37"><expr pos:start="227:35" pos:end="227:37"><operator pos:start="227:35" pos:end="227:35">&amp;</operator><name pos:start="227:36" pos:end="227:37">bd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="233:13" pos:end="233:87"><expr pos:start="233:13" pos:end="233:86"><call pos:start="233:13" pos:end="233:86"><name pos:start="233:13" pos:end="233:18">memset</name><argument_list pos:start="233:19" pos:end="233:86">(<argument pos:start="233:20" pos:end="233:36"><expr pos:start="233:20" pos:end="233:36"><name pos:start="233:20" pos:end="233:36">reverted_channels</name></expr></argument>, <argument pos:start="233:39" pos:end="233:39"><expr pos:start="233:39" pos:end="233:39"><literal type="number" pos:start="233:39" pos:end="233:39">0</literal></expr></argument>, <argument pos:start="233:42" pos:end="233:85"><expr pos:start="233:42" pos:end="233:85"><name pos:start="233:42" pos:end="233:56"><name pos:start="233:42" pos:end="233:46">avctx</name><operator pos:start="233:47" pos:end="233:48">-&gt;</operator><name pos:start="233:49" pos:end="233:56">channels</name></name> <operator pos:start="233:58" pos:end="233:58">*</operator> <sizeof pos:start="233:60" pos:end="233:85">sizeof<argument_list pos:start="233:66" pos:end="233:85">(<argument pos:start="233:67" pos:end="233:84"><expr pos:start="233:67" pos:end="233:84"><operator pos:start="233:67" pos:end="233:67">*</operator><name pos:start="233:68" pos:end="233:84">reverted_channels</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:41"><expr pos:start="235:13" pos:end="235:40"><name pos:start="235:13" pos:end="235:18">offset</name>      <operator pos:start="235:25" pos:end="235:26">+=</operator> <name pos:start="235:28" pos:end="235:40"><name pos:start="235:28" pos:end="235:37">div_blocks</name><index pos:start="235:38" pos:end="235:40">[<expr pos:start="235:39" pos:end="235:39"><name pos:start="235:39" pos:end="235:39">b</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:29"><expr pos:start="237:13" pos:end="237:28"><name pos:start="237:13" pos:end="237:23"><name pos:start="237:13" pos:end="237:14">bd</name><operator pos:start="237:15" pos:end="237:15">.</operator><name pos:start="237:16" pos:end="237:23">ra_block</name></name>  <operator pos:start="237:26" pos:end="237:26">=</operator> <literal type="number" pos:start="237:28" pos:end="237:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="line" pos:start="243:9" pos:end="243:38">// store carryover raw samples</comment>

        <for pos:start="245:9" pos:end="251:69">for <control pos:start="245:13" pos:end="245:45">(<init pos:start="245:14" pos:end="245:19"><expr pos:start="245:14" pos:end="245:18"><name pos:start="245:14" pos:end="245:14">c</name> <operator pos:start="245:16" pos:end="245:16">=</operator> <literal type="number" pos:start="245:18" pos:end="245:18">0</literal></expr>;</init> <condition pos:start="245:21" pos:end="245:40"><expr pos:start="245:21" pos:end="245:39"><name pos:start="245:21" pos:end="245:21">c</name> <operator pos:start="245:23" pos:end="245:23">&lt;</operator> <name pos:start="245:25" pos:end="245:39"><name pos:start="245:25" pos:end="245:29">avctx</name><operator pos:start="245:30" pos:end="245:31">-&gt;</operator><name pos:start="245:32" pos:end="245:39">channels</name></name></expr>;</condition> <incr pos:start="245:42" pos:end="245:44"><expr pos:start="245:42" pos:end="245:44"><name pos:start="245:42" pos:end="245:42">c</name><operator pos:start="245:43" pos:end="245:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="247:13" pos:end="251:69"><block_content pos:start="247:13" pos:end="251:69">

            <expr_stmt pos:start="247:13" pos:end="251:69"><expr pos:start="247:13" pos:end="251:68"><call pos:start="247:13" pos:end="251:68"><name pos:start="247:13" pos:end="247:19">memmove</name><argument_list pos:start="247:20" pos:end="251:68">(<argument pos:start="247:21" pos:end="247:58"><expr pos:start="247:21" pos:end="247:58"><name pos:start="247:21" pos:end="247:39"><name pos:start="247:21" pos:end="247:23">ctx</name><operator pos:start="247:24" pos:end="247:25">-&gt;</operator><name pos:start="247:26" pos:end="247:36">raw_samples</name><index pos:start="247:37" pos:end="247:39">[<expr pos:start="247:38" pos:end="247:38"><name pos:start="247:38" pos:end="247:38">c</name></expr>]</index></name> <operator pos:start="247:41" pos:end="247:41">-</operator> <name pos:start="247:43" pos:end="247:58"><name pos:start="247:43" pos:end="247:47">sconf</name><operator pos:start="247:48" pos:end="247:49">-&gt;</operator><name pos:start="247:50" pos:end="247:58">max_order</name></name></expr></argument>,

                    <argument pos:start="249:21" pos:end="249:80"><expr pos:start="249:21" pos:end="249:80"><name pos:start="249:21" pos:end="249:39"><name pos:start="249:21" pos:end="249:23">ctx</name><operator pos:start="249:24" pos:end="249:25">-&gt;</operator><name pos:start="249:26" pos:end="249:36">raw_samples</name><index pos:start="249:37" pos:end="249:39">[<expr pos:start="249:38" pos:end="249:38"><name pos:start="249:38" pos:end="249:38">c</name></expr>]</index></name> <operator pos:start="249:41" pos:end="249:41">-</operator> <name pos:start="249:43" pos:end="249:58"><name pos:start="249:43" pos:end="249:47">sconf</name><operator pos:start="249:48" pos:end="249:49">-&gt;</operator><name pos:start="249:50" pos:end="249:58">max_order</name></name> <operator pos:start="249:60" pos:end="249:60">+</operator> <name pos:start="249:62" pos:end="249:80"><name pos:start="249:62" pos:end="249:66">sconf</name><operator pos:start="249:67" pos:end="249:68">-&gt;</operator><name pos:start="249:69" pos:end="249:80">frame_length</name></name></expr></argument>,

                    <argument pos:start="251:21" pos:end="251:67"><expr pos:start="251:21" pos:end="251:67"><sizeof pos:start="251:21" pos:end="251:48">sizeof<argument_list pos:start="251:27" pos:end="251:48">(<argument pos:start="251:28" pos:end="251:47"><expr pos:start="251:28" pos:end="251:47"><operator pos:start="251:28" pos:end="251:28">*</operator><name pos:start="251:29" pos:end="251:47"><name pos:start="251:29" pos:end="251:31">ctx</name><operator pos:start="251:32" pos:end="251:33">-&gt;</operator><name pos:start="251:34" pos:end="251:44">raw_samples</name><index pos:start="251:45" pos:end="251:47">[<expr pos:start="251:46" pos:end="251:46"><name pos:start="251:46" pos:end="251:46">c</name></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="251:50" pos:end="251:50">*</operator> <name pos:start="251:52" pos:end="251:67"><name pos:start="251:52" pos:end="251:56">sconf</name><operator pos:start="251:57" pos:end="251:58">-&gt;</operator><name pos:start="251:59" pos:end="251:67">max_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="257:5" pos:end="257:33">// TODO: read_diff_float_data</comment>



    <return pos:start="261:5" pos:end="261:13">return <expr pos:start="261:12" pos:end="261:12"><literal type="number" pos:start="261:12" pos:end="261:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
