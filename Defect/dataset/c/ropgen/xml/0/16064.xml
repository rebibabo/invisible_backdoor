<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16064.c" pos:tabs="8"><function pos:start="1:1" pos:end="1315:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:30">ff_mpv_encode_init</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1315:1">{<block_content pos:start="5:5" pos:end="1313:27">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVCPBProperties</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:30">cpb_props</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name></decl>, <decl pos:start="9:17" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:32">format_supported</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><call pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:23">mpv_encode_defaults</name><argument_list pos:start="13:24" pos:end="13:26">(<argument pos:start="13:25" pos:end="13:25"><expr pos:start="13:25" pos:end="13:25"><name pos:start="13:25" pos:end="13:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="17:5" pos:end="85:5">switch <condition pos:start="17:12" pos:end="17:28">(<expr pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:17">avctx</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:27">codec_id</name></name></expr>)</condition> <block pos:start="17:30" pos:end="85:5">{<block_content pos:start="19:5" pos:end="83:9">

    <case pos:start="19:5" pos:end="19:32">case <expr pos:start="19:10" pos:end="19:31"><name pos:start="19:10" pos:end="19:31">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <if_stmt pos:start="21:9" pos:end="31:9"><if pos:start="21:9" pos:end="31:9">if <condition pos:start="21:12" pos:end="23:49">(<expr pos:start="21:13" pos:end="23:48"><name pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:17">avctx</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:26">pix_fmt</name></name> <operator pos:start="21:28" pos:end="21:29">!=</operator> <name pos:start="21:31" pos:end="21:48">AV_PIX_FMT_YUV420P</name> <operator pos:start="21:50" pos:end="21:51">&amp;&amp;</operator>

            <name pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:17">avctx</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:26">pix_fmt</name></name> <operator pos:start="23:28" pos:end="23:29">!=</operator> <name pos:start="23:31" pos:end="23:48">AV_PIX_FMT_YUV422P</name></expr>)</condition> <block pos:start="23:51" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:22">

            <expr_stmt pos:start="25:13" pos:end="27:61"><expr pos:start="25:13" pos:end="27:60"><call pos:start="25:13" pos:end="27:60"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="27:60">(<argument pos:start="25:20" pos:end="25:24"><expr pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:24">avctx</name></expr></argument>, <argument pos:start="25:27" pos:end="25:38"><expr pos:start="25:27" pos:end="25:38"><name pos:start="25:27" pos:end="25:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:59"><expr pos:start="27:20" pos:end="27:59"><literal type="string" pos:start="27:20" pos:end="27:59">"only YUV420 and YUV422 are supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:22">return <expr pos:start="29:20" pos:end="29:21"><operator pos:start="29:20" pos:end="29:20">-</operator><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:27">case <expr pos:start="35:10" pos:end="35:26"><name pos:start="35:10" pos:end="35:26">AV_CODEC_ID_MJPEG</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:24">format_supported</name> <operator pos:start="37:26" pos:end="37:26">=</operator> <literal type="number" pos:start="37:28" pos:end="37:28">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:30">/* JPEG color space */</comment>

        <if_stmt pos:start="41:9" pos:end="61:33"><if pos:start="41:9" pos:end="51:33">if <condition pos:start="41:12" pos:end="49:53">(<expr pos:start="41:13" pos:end="49:52"><name pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:17">avctx</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:26">pix_fmt</name></name> <operator pos:start="41:28" pos:end="41:29">==</operator> <name pos:start="41:31" pos:end="41:49">AV_PIX_FMT_YUVJ420P</name> <operator pos:start="41:51" pos:end="41:52">||</operator>

            <name pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:17">avctx</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:26">pix_fmt</name></name> <operator pos:start="43:28" pos:end="43:29">==</operator> <name pos:start="43:31" pos:end="43:49">AV_PIX_FMT_YUVJ422P</name> <operator pos:start="43:51" pos:end="43:52">||</operator>

            <operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:31"><name pos:start="45:14" pos:end="45:18">avctx</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:31">color_range</name></name> <operator pos:start="45:33" pos:end="45:34">==</operator> <name pos:start="45:36" pos:end="45:51">AVCOL_RANGE_JPEG</name> <operator pos:start="45:53" pos:end="45:54">&amp;&amp;</operator>

             <operator pos:start="47:14" pos:end="47:14">(</operator><name pos:start="47:15" pos:end="47:28"><name pos:start="47:15" pos:end="47:19">avctx</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:28">pix_fmt</name></name> <operator pos:start="47:30" pos:end="47:31">==</operator> <name pos:start="47:33" pos:end="47:50">AV_PIX_FMT_YUV420P</name> <operator pos:start="47:52" pos:end="47:53">||</operator>

              <name pos:start="49:15" pos:end="49:28"><name pos:start="49:15" pos:end="49:19">avctx</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:28">pix_fmt</name></name> <operator pos:start="49:30" pos:end="49:31">==</operator> <name pos:start="49:33" pos:end="49:50">AV_PIX_FMT_YUV422P</name><operator pos:start="49:51" pos:end="49:51">)</operator><operator pos:start="49:52" pos:end="49:52">)</operator></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:33"><block_content pos:start="51:13" pos:end="51:33">

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:28">format_supported</name> <operator pos:start="51:30" pos:end="51:30">=</operator> <literal type="number" pos:start="51:32" pos:end="51:32">1</literal></expr>;</expr_stmt></block_content></block></if>

        <comment type="block" pos:start="53:9" pos:end="53:30">/* MPEG color space */</comment>

        <if type="elseif" pos:start="55:9" pos:end="61:33">else if <condition pos:start="55:17" pos:end="59:56">(<expr pos:start="55:18" pos:end="59:55"><name pos:start="55:18" pos:end="55:45"><name pos:start="55:18" pos:end="55:22">avctx</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:45">strict_std_compliance</name></name> <operator pos:start="55:47" pos:end="55:48">&lt;=</operator> <name pos:start="55:50" pos:end="55:73">FF_COMPLIANCE_UNOFFICIAL</name> <operator pos:start="55:75" pos:end="55:76">&amp;&amp;</operator>

                 <operator pos:start="57:18" pos:end="57:18">(</operator><name pos:start="57:19" pos:end="57:32"><name pos:start="57:19" pos:end="57:23">avctx</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:32">pix_fmt</name></name> <operator pos:start="57:34" pos:end="57:35">==</operator> <name pos:start="57:37" pos:end="57:54">AV_PIX_FMT_YUV420P</name> <operator pos:start="57:56" pos:end="57:57">||</operator>

                  <name pos:start="59:19" pos:end="59:32"><name pos:start="59:19" pos:end="59:23">avctx</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:32">pix_fmt</name></name> <operator pos:start="59:34" pos:end="59:35">==</operator> <name pos:start="59:37" pos:end="59:54">AV_PIX_FMT_YUV422P</name><operator pos:start="59:55" pos:end="59:55">)</operator></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:33"><block_content pos:start="61:13" pos:end="61:33">

            <expr_stmt pos:start="61:13" pos:end="61:33"><expr pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:28">format_supported</name> <operator pos:start="61:30" pos:end="61:30">=</operator> <literal type="number" pos:start="61:32" pos:end="61:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:30">(<expr pos:start="65:13" pos:end="65:29"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:29">format_supported</name></expr>)</condition> <block pos:start="65:32" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:22">

            <expr_stmt pos:start="67:13" pos:end="67:78"><expr pos:start="67:13" pos:end="67:77"><call pos:start="67:13" pos:end="67:77"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="67:77">(<argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:24">avctx</name></expr></argument>, <argument pos:start="67:27" pos:end="67:38"><expr pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:41" pos:end="67:76"><expr pos:start="67:41" pos:end="67:76"><literal type="string" pos:start="67:41" pos:end="67:76">"colorspace not supported in jpeg\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:22">return <expr pos:start="69:20" pos:end="69:21"><operator pos:start="69:20" pos:end="69:20">-</operator><literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <default pos:start="75:5" pos:end="75:12">default:</default>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:49">(<expr pos:start="77:13" pos:end="77:48"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:17">avctx</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:26">pix_fmt</name></name> <operator pos:start="77:28" pos:end="77:29">!=</operator> <name pos:start="77:31" pos:end="77:48">AV_PIX_FMT_YUV420P</name></expr>)</condition> <block pos:start="77:51" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:22">

            <expr_stmt pos:start="79:13" pos:end="79:70"><expr pos:start="79:13" pos:end="79:69"><call pos:start="79:13" pos:end="79:69"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="79:69">(<argument pos:start="79:20" pos:end="79:24"><expr pos:start="79:20" pos:end="79:24"><name pos:start="79:20" pos:end="79:24">avctx</name></expr></argument>, <argument pos:start="79:27" pos:end="79:38"><expr pos:start="79:27" pos:end="79:38"><name pos:start="79:27" pos:end="79:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:41" pos:end="79:68"><expr pos:start="79:41" pos:end="79:68"><literal type="string" pos:start="79:41" pos:end="79:68">"only YUV420 is supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:22">return <expr pos:start="81:20" pos:end="81:21"><operator pos:start="81:20" pos:end="81:20">-</operator><literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></switch>



    <switch pos:start="89:5" pos:end="109:5">switch <condition pos:start="89:12" pos:end="89:27">(<expr pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:17">avctx</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:26">pix_fmt</name></name></expr>)</condition> <block pos:start="89:29" pos:end="109:5">{<block_content pos:start="91:5" pos:end="107:14">

    <case pos:start="91:5" pos:end="91:29">case <expr pos:start="91:10" pos:end="91:28"><name pos:start="91:10" pos:end="91:28">AV_PIX_FMT_YUVJ422P</name></expr>:</case>

    <case pos:start="93:5" pos:end="93:28">case <expr pos:start="93:10" pos:end="93:27"><name pos:start="93:10" pos:end="93:27">AV_PIX_FMT_YUV422P</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:38"><expr pos:start="95:9" pos:end="95:37"><name pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:24">chroma_format</name></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:37">CHROMA_422</name></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:29">case <expr pos:start="99:10" pos:end="99:28"><name pos:start="99:10" pos:end="99:28">AV_PIX_FMT_YUVJ420P</name></expr>:</case>

    <case pos:start="101:5" pos:end="101:28">case <expr pos:start="101:10" pos:end="101:27"><name pos:start="101:10" pos:end="101:27">AV_PIX_FMT_YUV420P</name></expr>:</case>

    <default pos:start="103:5" pos:end="103:12">default:</default>

        <expr_stmt pos:start="105:9" pos:end="105:38"><expr pos:start="105:9" pos:end="105:37"><name pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:24">chroma_format</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <name pos:start="105:28" pos:end="105:37">CHROMA_420</name></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="113:5" pos:end="113:34"><expr pos:start="113:5" pos:end="113:33"><name pos:start="113:5" pos:end="113:15"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:15">bit_rate</name></name> <operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:33"><name pos:start="113:19" pos:end="113:23">avctx</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:33">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:31"><expr pos:start="115:5" pos:end="115:30"><name pos:start="115:5" pos:end="115:12"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:12">width</name></name>    <operator pos:start="115:17" pos:end="115:17">=</operator> <name pos:start="115:19" pos:end="115:30"><name pos:start="115:19" pos:end="115:23">avctx</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:30">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:32"><expr pos:start="117:5" pos:end="117:31"><name pos:start="117:5" pos:end="117:13"><name pos:start="117:5" pos:end="117:5">s</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:13">height</name></name>   <operator pos:start="117:17" pos:end="117:17">=</operator> <name pos:start="117:19" pos:end="117:31"><name pos:start="117:19" pos:end="117:23">avctx</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:31">height</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="129:5"><if pos:start="119:5" pos:end="129:5">if <condition pos:start="119:8" pos:end="121:66">(<expr pos:start="119:9" pos:end="121:65"><name pos:start="119:9" pos:end="119:23"><name pos:start="119:9" pos:end="119:13">avctx</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:23">gop_size</name></name> <operator pos:start="119:25" pos:end="119:25">&gt;</operator> <literal type="number" pos:start="119:27" pos:end="119:29">600</literal> <operator pos:start="119:31" pos:end="119:32">&amp;&amp;</operator>

        <name pos:start="121:9" pos:end="121:36"><name pos:start="121:9" pos:end="121:13">avctx</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:36">strict_std_compliance</name></name> <operator pos:start="121:38" pos:end="121:38">&gt;</operator> <name pos:start="121:40" pos:end="121:65">FF_COMPLIANCE_EXPERIMENTAL</name></expr>)</condition> <block pos:start="121:68" pos:end="129:5">{<block_content pos:start="123:9" pos:end="127:30">

        <expr_stmt pos:start="123:9" pos:end="125:73"><expr pos:start="123:9" pos:end="125:72"><call pos:start="123:9" pos:end="125:72"><name pos:start="123:9" pos:end="123:14">av_log</name><argument_list pos:start="123:15" pos:end="125:72">(<argument pos:start="123:16" pos:end="123:20"><expr pos:start="123:16" pos:end="123:20"><name pos:start="123:16" pos:end="123:20">avctx</name></expr></argument>, <argument pos:start="123:23" pos:end="123:34"><expr pos:start="123:23" pos:end="123:34"><name pos:start="123:23" pos:end="123:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="125:16" pos:end="125:71"><expr pos:start="125:16" pos:end="125:71"><literal type="string" pos:start="125:16" pos:end="125:71">"Warning keyframe interval too large! reducing it ...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:30"><expr pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:23"><name pos:start="127:9" pos:end="127:13">avctx</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:23">gop_size</name></name> <operator pos:start="127:25" pos:end="127:25">=</operator> <literal type="number" pos:start="127:27" pos:end="127:29">600</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:38"><expr pos:start="131:5" pos:end="131:37"><name pos:start="131:5" pos:end="131:15"><name pos:start="131:5" pos:end="131:5">s</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:15">gop_size</name></name>     <operator pos:start="131:21" pos:end="131:21">=</operator> <name pos:start="131:23" pos:end="131:37"><name pos:start="131:23" pos:end="131:27">avctx</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:37">gop_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:28"><expr pos:start="133:5" pos:end="133:27"><name pos:start="133:5" pos:end="133:12"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:12">avctx</name></name>        <operator pos:start="133:21" pos:end="133:21">=</operator> <name pos:start="133:23" pos:end="133:27">avctx</name></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="141:5"><if pos:start="135:5" pos:end="141:5">if <condition pos:start="135:8" pos:end="135:43">(<expr pos:start="135:9" pos:end="135:42"><name pos:start="135:9" pos:end="135:27"><name pos:start="135:9" pos:end="135:13">avctx</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:27">max_b_frames</name></name> <operator pos:start="135:29" pos:end="135:29">&gt;</operator> <name pos:start="135:31" pos:end="135:42">MAX_B_FRAMES</name></expr>)</condition> <block pos:start="135:45" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:41">

        <expr_stmt pos:start="137:9" pos:end="139:41"><expr pos:start="137:9" pos:end="139:40"><call pos:start="137:9" pos:end="139:40"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="139:40">(<argument pos:start="137:16" pos:end="137:20"><expr pos:start="137:16" pos:end="137:20"><name pos:start="137:16" pos:end="137:20">avctx</name></expr></argument>, <argument pos:start="137:23" pos:end="137:34"><expr pos:start="137:23" pos:end="137:34"><name pos:start="137:23" pos:end="137:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:37" pos:end="139:25"><expr pos:start="137:37" pos:end="139:25"><literal type="string" pos:start="137:37" pos:end="137:75">"Too many B-frames requested, maximum "</literal>

               <literal type="string" pos:start="139:16" pos:end="139:25">"is %d.\n"</literal></expr></argument>, <argument pos:start="139:28" pos:end="139:39"><expr pos:start="139:28" pos:end="139:39"><name pos:start="139:28" pos:end="139:39">MAX_B_FRAMES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:42"><expr pos:start="143:5" pos:end="143:41"><name pos:start="143:5" pos:end="143:19"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:19">max_b_frames</name></name> <operator pos:start="143:21" pos:end="143:21">=</operator> <name pos:start="143:23" pos:end="143:41"><name pos:start="143:23" pos:end="143:27">avctx</name><operator pos:start="143:28" pos:end="143:29">-&gt;</operator><name pos:start="143:30" pos:end="143:41">max_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:39"><expr pos:start="145:5" pos:end="145:38"><name pos:start="145:5" pos:end="145:15"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:15">codec_id</name></name>     <operator pos:start="145:21" pos:end="145:21">=</operator> <name pos:start="145:23" pos:end="145:38"><name pos:start="145:23" pos:end="145:27">avctx</name><operator pos:start="145:28" pos:end="145:29">-&gt;</operator><name pos:start="145:30" pos:end="145:34">codec</name><operator pos:start="145:35" pos:end="145:36">-&gt;</operator><name pos:start="145:37" pos:end="145:38">id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:60"><expr pos:start="147:5" pos:end="147:59"><name pos:start="147:5" pos:end="147:28"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:28">strict_std_compliance</name></name> <operator pos:start="147:30" pos:end="147:30">=</operator> <name pos:start="147:32" pos:end="147:59"><name pos:start="147:32" pos:end="147:36">avctx</name><operator pos:start="147:37" pos:end="147:38">-&gt;</operator><name pos:start="147:39" pos:end="147:59">strict_std_compliance</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:69"><expr pos:start="149:5" pos:end="149:68"><name pos:start="149:5" pos:end="149:21"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:21">quarter_sample</name></name>     <operator pos:start="149:27" pos:end="149:27">=</operator> <operator pos:start="149:29" pos:end="149:29">(</operator><name pos:start="149:30" pos:end="149:41"><name pos:start="149:30" pos:end="149:34">avctx</name><operator pos:start="149:35" pos:end="149:36">-&gt;</operator><name pos:start="149:37" pos:end="149:41">flags</name></name> <operator pos:start="149:43" pos:end="149:43">&amp;</operator> <name pos:start="149:45" pos:end="149:62">AV_CODEC_FLAG_QPEL</name><operator pos:start="149:63" pos:end="149:63">)</operator> <operator pos:start="149:65" pos:end="149:66">!=</operator> <literal type="number" pos:start="149:68" pos:end="149:68">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:46"><expr pos:start="151:5" pos:end="151:45"><name pos:start="151:5" pos:end="151:17"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:17">mpeg_quant</name></name>         <operator pos:start="151:27" pos:end="151:27">=</operator> <name pos:start="151:29" pos:end="151:45"><name pos:start="151:29" pos:end="151:33">avctx</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:45">mpeg_quant</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:54"><expr pos:start="153:5" pos:end="153:53"><name pos:start="153:5" pos:end="153:15"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:15">rtp_mode</name></name>           <operator pos:start="153:27" pos:end="153:27">=</operator> <operator pos:start="153:29" pos:end="153:29">!</operator><operator pos:start="153:30" pos:end="153:30">!</operator><name pos:start="153:31" pos:end="153:53"><name pos:start="153:31" pos:end="153:35">avctx</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:53">rtp_payload_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:54"><expr pos:start="155:5" pos:end="155:53"><name pos:start="155:5" pos:end="155:25"><name pos:start="155:5" pos:end="155:5">s</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:25">intra_dc_precision</name></name> <operator pos:start="155:27" pos:end="155:27">=</operator> <name pos:start="155:29" pos:end="155:53"><name pos:start="155:29" pos:end="155:33">avctx</name><operator pos:start="155:34" pos:end="155:35">-&gt;</operator><name pos:start="155:36" pos:end="155:53">intra_dc_precision</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:43"><expr pos:start="157:5" pos:end="157:42"><name pos:start="157:5" pos:end="157:25"><name pos:start="157:5" pos:end="157:5">s</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:25">user_specified_pts</name></name> <operator pos:start="157:27" pos:end="157:27">=</operator> <name pos:start="157:29" pos:end="157:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <if_stmt pos:start="161:5" pos:end="176:0"><if pos:start="161:5" pos:end="167:5">if <condition pos:start="161:8" pos:end="161:25">(<expr pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:19"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:19">gop_size</name></name> <operator pos:start="161:21" pos:end="161:22">&lt;=</operator> <literal type="number" pos:start="161:24" pos:end="161:24">1</literal></expr>)</condition> <block pos:start="161:27" pos:end="167:5">{<block_content pos:start="163:9" pos:end="165:27">

        <expr_stmt pos:start="163:9" pos:end="163:26"><expr pos:start="163:9" pos:end="163:25"><name pos:start="163:9" pos:end="163:21"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:21">intra_only</name></name> <operator pos:start="163:23" pos:end="163:23">=</operator> <literal type="number" pos:start="163:25" pos:end="163:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:27"><expr pos:start="165:9" pos:end="165:26"><name pos:start="165:9" pos:end="165:19"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:19">gop_size</name></name>   <operator pos:start="165:23" pos:end="165:23">=</operator> <literal type="number" pos:start="165:25" pos:end="165:26">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="176:0">else <block pos:start="167:12" pos:end="176:0">{<block_content pos:start="169:9" pos:end="169:26">

        <expr_stmt pos:start="169:9" pos:end="169:26"><expr pos:start="169:9" pos:end="169:25"><name pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:21">intra_only</name></name> <operator pos:start="169:23" pos:end="169:23">=</operator> <literal type="number" pos:start="169:25" pos:end="169:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:if pos:start="175:1" pos:end="175:21">#<cpp:directive pos:start="175:2" pos:end="175:3">if</cpp:directive> <expr pos:start="175:5" pos:end="175:21"><name pos:start="175:5" pos:end="175:21">FF_API_MOTION_EST</name></expr></cpp:if>

<decl_stmt pos:start="177:1" pos:end="179:36"><decl pos:start="177:1" pos:end="179:35"><type pos:start="177:1" pos:end="177:31"><name pos:start="177:1" pos:end="177:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

    <name pos:start="179:5" pos:end="179:16"><name pos:start="179:5" pos:end="179:5">s</name><operator pos:start="179:6" pos:end="179:7">-&gt;</operator><name pos:start="179:8" pos:end="179:16">me_method</name></name> <init pos:start="179:18" pos:end="179:35">= <expr pos:start="179:20" pos:end="179:35"><name pos:start="179:20" pos:end="179:35"><name pos:start="179:20" pos:end="179:24">avctx</name><operator pos:start="179:25" pos:end="179:26">-&gt;</operator><name pos:start="179:27" pos:end="179:35">me_method</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt pos:start="181:1" pos:end="194:0"><decl pos:start="181:1" pos:end="189:61"><type pos:start="181:1" pos:end="184:0"><name pos:start="181:1" pos:end="184:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="183:1" pos:end="183:6">#<cpp:directive pos:start="183:2" pos:end="183:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="187:5" pos:end="187:22">/* Fixed QSCALE */</comment>

    <name pos:start="189:5" pos:end="189:19"><name pos:start="189:5" pos:end="189:5">s</name><operator pos:start="189:6" pos:end="189:7">-&gt;</operator><name pos:start="189:8" pos:end="189:19">fixed_qscale</name></name> <init pos:start="189:21" pos:end="189:61">= <expr pos:start="189:23" pos:end="189:61"><operator pos:start="189:23" pos:end="189:23">!</operator><operator pos:start="189:24" pos:end="189:24">!</operator><operator pos:start="189:25" pos:end="189:25">(</operator><name pos:start="189:26" pos:end="189:37"><name pos:start="189:26" pos:end="189:30">avctx</name><operator pos:start="189:31" pos:end="189:32">-&gt;</operator><name pos:start="189:33" pos:end="189:37">flags</name></name> <operator pos:start="189:39" pos:end="189:39">&amp;</operator> <name pos:start="189:41" pos:end="189:60">AV_CODEC_FLAG_QSCALE</name><operator pos:start="189:61" pos:end="189:61">)</operator></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="193:1" pos:end="193:18">#<cpp:directive pos:start="193:2" pos:end="193:3">if</cpp:directive> <expr pos:start="193:5" pos:end="193:18"><name pos:start="193:5" pos:end="193:18">FF_API_MPV_OPT</name></expr></cpp:if>

    <macro pos:start="195:5" pos:end="195:35"><name pos:start="195:5" pos:end="195:35">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="197:5" pos:end="199:50"><if pos:start="197:5" pos:end="199:50">if <condition pos:start="197:8" pos:end="197:37">(<expr pos:start="197:9" pos:end="197:36"><name pos:start="197:9" pos:end="197:29"><name pos:start="197:9" pos:end="197:13">avctx</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:29">border_masking</name></name> <operator pos:start="197:31" pos:end="197:32">!=</operator> <literal type="number" pos:start="197:34" pos:end="197:36">0.0</literal></expr>)</condition><block type="pseudo" pos:start="199:9" pos:end="199:50"><block_content pos:start="199:9" pos:end="199:50">

        <expr_stmt pos:start="199:9" pos:end="199:50"><expr pos:start="199:9" pos:end="199:49"><name pos:start="199:9" pos:end="199:25"><name pos:start="199:9" pos:end="199:9">s</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:25">border_masking</name></name> <operator pos:start="199:27" pos:end="199:27">=</operator> <name pos:start="199:29" pos:end="199:49"><name pos:start="199:29" pos:end="199:33">avctx</name><operator pos:start="199:34" pos:end="199:35">-&gt;</operator><name pos:start="199:36" pos:end="199:49">border_masking</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <decl_stmt pos:start="201:5" pos:end="221:41"><decl pos:start="201:5" pos:end="221:40"><type pos:start="201:5" pos:end="204:0"><name pos:start="201:5" pos:end="204:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="203:1" pos:end="203:6">#<cpp:directive pos:start="203:2" pos:end="203:6">endif</cpp:directive></cpp:endif>



    <name pos:start="207:5" pos:end="207:21"><name pos:start="207:5" pos:end="207:5">s</name><operator pos:start="207:6" pos:end="207:7">-&gt;</operator><name pos:start="207:8" pos:end="207:21">adaptive_quant</name></name> <init pos:start="207:23" pos:end="221:40">= <expr pos:start="207:25" pos:end="221:40"><operator pos:start="207:25" pos:end="207:25">(</operator><name pos:start="207:26" pos:end="207:47"><name pos:start="207:26" pos:end="207:26">s</name><operator pos:start="207:27" pos:end="207:28">-&gt;</operator><name pos:start="207:29" pos:end="207:33">avctx</name><operator pos:start="207:34" pos:end="207:35">-&gt;</operator><name pos:start="207:36" pos:end="207:47">lumi_masking</name></name> <operator pos:start="207:49" pos:end="207:50">||</operator>

                         <name pos:start="209:26" pos:end="209:47"><name pos:start="209:26" pos:end="209:26">s</name><operator pos:start="209:27" pos:end="209:28">-&gt;</operator><name pos:start="209:29" pos:end="209:33">avctx</name><operator pos:start="209:34" pos:end="209:35">-&gt;</operator><name pos:start="209:36" pos:end="209:47">dark_masking</name></name> <operator pos:start="209:49" pos:end="209:50">||</operator>

                         <name pos:start="211:26" pos:end="211:56"><name pos:start="211:26" pos:end="211:26">s</name><operator pos:start="211:27" pos:end="211:28">-&gt;</operator><name pos:start="211:29" pos:end="211:33">avctx</name><operator pos:start="211:34" pos:end="211:35">-&gt;</operator><name pos:start="211:36" pos:end="211:56">temporal_cplx_masking</name></name> <operator pos:start="211:58" pos:end="211:59">||</operator>

                         <name pos:start="213:26" pos:end="213:55"><name pos:start="213:26" pos:end="213:26">s</name><operator pos:start="213:27" pos:end="213:28">-&gt;</operator><name pos:start="213:29" pos:end="213:33">avctx</name><operator pos:start="213:34" pos:end="213:35">-&gt;</operator><name pos:start="213:36" pos:end="213:55">spatial_cplx_masking</name></name>  <operator pos:start="213:58" pos:end="213:59">||</operator>

                         <name pos:start="215:26" pos:end="215:44"><name pos:start="215:26" pos:end="215:26">s</name><operator pos:start="215:27" pos:end="215:28">-&gt;</operator><name pos:start="215:29" pos:end="215:33">avctx</name><operator pos:start="215:34" pos:end="215:35">-&gt;</operator><name pos:start="215:36" pos:end="215:44">p_masking</name></name>      <operator pos:start="215:51" pos:end="215:52">||</operator>

                         <name pos:start="217:26" pos:end="217:42"><name pos:start="217:26" pos:end="217:26">s</name><operator pos:start="217:27" pos:end="217:28">-&gt;</operator><name pos:start="217:29" pos:end="217:42">border_masking</name></name> <operator pos:start="217:44" pos:end="217:45">||</operator>

                         <operator pos:start="219:26" pos:end="219:26">(</operator><name pos:start="219:27" pos:end="219:38"><name pos:start="219:27" pos:end="219:27">s</name><operator pos:start="219:28" pos:end="219:29">-&gt;</operator><name pos:start="219:30" pos:end="219:38">mpv_flags</name></name> <operator pos:start="219:40" pos:end="219:40">&amp;</operator> <name pos:start="219:42" pos:end="219:58">FF_MPV_FLAG_QP_RD</name><operator pos:start="219:59" pos:end="219:59">)</operator><operator pos:start="219:60" pos:end="219:60">)</operator> <operator pos:start="219:62" pos:end="219:63">&amp;&amp;</operator>

                        <operator pos:start="221:25" pos:end="221:25">!</operator><name pos:start="221:26" pos:end="221:40"><name pos:start="221:26" pos:end="221:26">s</name><operator pos:start="221:27" pos:end="221:28">-&gt;</operator><name pos:start="221:29" pos:end="221:40">fixed_qscale</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:69"><expr pos:start="225:5" pos:end="225:68"><name pos:start="225:5" pos:end="225:18"><name pos:start="225:5" pos:end="225:5">s</name><operator pos:start="225:6" pos:end="225:7">-&gt;</operator><name pos:start="225:8" pos:end="225:18">loop_filter</name></name> <operator pos:start="225:20" pos:end="225:20">=</operator> <operator pos:start="225:22" pos:end="225:22">!</operator><operator pos:start="225:23" pos:end="225:23">!</operator><operator pos:start="225:24" pos:end="225:24">(</operator><name pos:start="225:25" pos:end="225:39"><name pos:start="225:25" pos:end="225:25">s</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:32">avctx</name><operator pos:start="225:33" pos:end="225:34">-&gt;</operator><name pos:start="225:35" pos:end="225:39">flags</name></name> <operator pos:start="225:41" pos:end="225:41">&amp;</operator> <name pos:start="225:43" pos:end="225:67">AV_CODEC_FLAG_LOOP_FILTER</name><operator pos:start="225:68" pos:end="225:68">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="229:5" pos:end="239:5"><if pos:start="229:5" pos:end="239:5">if <condition pos:start="229:8" pos:end="229:53">(<expr pos:start="229:9" pos:end="229:52"><name pos:start="229:9" pos:end="229:26"><name pos:start="229:9" pos:end="229:13">avctx</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:26">rc_max_rate</name></name> <operator pos:start="229:28" pos:end="229:29">&amp;&amp;</operator> <operator pos:start="229:31" pos:end="229:31">!</operator><name pos:start="229:32" pos:end="229:52"><name pos:start="229:32" pos:end="229:36">avctx</name><operator pos:start="229:37" pos:end="229:38">-&gt;</operator><name pos:start="229:39" pos:end="229:52">rc_buffer_size</name></name></expr>)</condition> <block pos:start="229:55" pos:end="239:5">{<block_content pos:start="231:9" pos:end="237:18">

        <expr_stmt pos:start="231:9" pos:end="235:56"><expr pos:start="231:9" pos:end="235:55"><call pos:start="231:9" pos:end="235:55"><name pos:start="231:9" pos:end="231:14">av_log</name><argument_list pos:start="231:15" pos:end="235:55">(<argument pos:start="231:16" pos:end="231:20"><expr pos:start="231:16" pos:end="231:20"><name pos:start="231:16" pos:end="231:20">avctx</name></expr></argument>, <argument pos:start="231:23" pos:end="231:34"><expr pos:start="231:23" pos:end="231:34"><name pos:start="231:23" pos:end="231:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="233:16" pos:end="235:54"><expr pos:start="233:16" pos:end="235:54"><literal type="string" pos:start="233:16" pos:end="233:46">"a vbv buffer size is needed, "</literal>

               <literal type="string" pos:start="235:16" pos:end="235:54">"for encoding with a maximum bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="237:9" pos:end="237:18">return <expr pos:start="237:16" pos:end="237:17"><operator pos:start="237:16" pos:end="237:16">-</operator><literal type="number" pos:start="237:17" pos:end="237:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="243:5" pos:end="249:5"><if pos:start="243:5" pos:end="249:5">if <condition pos:start="243:8" pos:end="243:71">(<expr pos:start="243:9" pos:end="243:70"><name pos:start="243:9" pos:end="243:26"><name pos:start="243:9" pos:end="243:13">avctx</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:26">rc_min_rate</name></name> <operator pos:start="243:28" pos:end="243:29">&amp;&amp;</operator> <name pos:start="243:31" pos:end="243:48"><name pos:start="243:31" pos:end="243:35">avctx</name><operator pos:start="243:36" pos:end="243:37">-&gt;</operator><name pos:start="243:38" pos:end="243:48">rc_max_rate</name></name> <operator pos:start="243:50" pos:end="243:51">!=</operator> <name pos:start="243:53" pos:end="243:70"><name pos:start="243:53" pos:end="243:57">avctx</name><operator pos:start="243:58" pos:end="243:59">-&gt;</operator><name pos:start="243:60" pos:end="243:70">rc_min_rate</name></name></expr>)</condition> <block pos:start="243:73" pos:end="249:5">{<block_content pos:start="245:9" pos:end="247:85">

        <expr_stmt pos:start="245:9" pos:end="247:85"><expr pos:start="245:9" pos:end="247:84"><call pos:start="245:9" pos:end="247:84"><name pos:start="245:9" pos:end="245:14">av_log</name><argument_list pos:start="245:15" pos:end="247:84">(<argument pos:start="245:16" pos:end="245:20"><expr pos:start="245:16" pos:end="245:20"><name pos:start="245:16" pos:end="245:20">avctx</name></expr></argument>, <argument pos:start="245:23" pos:end="245:33"><expr pos:start="245:23" pos:end="245:33"><name pos:start="245:23" pos:end="245:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="247:16" pos:end="247:83"><expr pos:start="247:16" pos:end="247:83"><literal type="string" pos:start="247:16" pos:end="247:83">"Warning min_rate &gt; 0 but min_rate != max_rate isn't recommended!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="253:5" pos:end="259:5"><if pos:start="253:5" pos:end="259:5">if <condition pos:start="253:8" pos:end="253:67">(<expr pos:start="253:9" pos:end="253:66"><name pos:start="253:9" pos:end="253:26"><name pos:start="253:9" pos:end="253:13">avctx</name><operator pos:start="253:14" pos:end="253:15">-&gt;</operator><name pos:start="253:16" pos:end="253:26">rc_min_rate</name></name> <operator pos:start="253:28" pos:end="253:29">&amp;&amp;</operator> <name pos:start="253:31" pos:end="253:48"><name pos:start="253:31" pos:end="253:35">avctx</name><operator pos:start="253:36" pos:end="253:37">-&gt;</operator><name pos:start="253:38" pos:end="253:48">rc_min_rate</name></name> <operator pos:start="253:50" pos:end="253:50">&gt;</operator> <name pos:start="253:52" pos:end="253:66"><name pos:start="253:52" pos:end="253:56">avctx</name><operator pos:start="253:57" pos:end="253:58">-&gt;</operator><name pos:start="253:59" pos:end="253:66">bit_rate</name></name></expr>)</condition> <block pos:start="253:69" pos:end="259:5">{<block_content pos:start="255:9" pos:end="257:18">

        <expr_stmt pos:start="255:9" pos:end="255:67"><expr pos:start="255:9" pos:end="255:66"><call pos:start="255:9" pos:end="255:66"><name pos:start="255:9" pos:end="255:14">av_log</name><argument_list pos:start="255:15" pos:end="255:66">(<argument pos:start="255:16" pos:end="255:20"><expr pos:start="255:16" pos:end="255:20"><name pos:start="255:16" pos:end="255:20">avctx</name></expr></argument>, <argument pos:start="255:23" pos:end="255:34"><expr pos:start="255:23" pos:end="255:34"><name pos:start="255:23" pos:end="255:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="255:37" pos:end="255:65"><expr pos:start="255:37" pos:end="255:65"><literal type="string" pos:start="255:37" pos:end="255:65">"bitrate below min bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="257:9" pos:end="257:18">return <expr pos:start="257:16" pos:end="257:17"><operator pos:start="257:16" pos:end="257:16">-</operator><literal type="number" pos:start="257:17" pos:end="257:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="263:5" pos:end="269:5"><if pos:start="263:5" pos:end="269:5">if <condition pos:start="263:8" pos:end="263:67">(<expr pos:start="263:9" pos:end="263:66"><name pos:start="263:9" pos:end="263:26"><name pos:start="263:9" pos:end="263:13">avctx</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:26">rc_max_rate</name></name> <operator pos:start="263:28" pos:end="263:29">&amp;&amp;</operator> <name pos:start="263:31" pos:end="263:48"><name pos:start="263:31" pos:end="263:35">avctx</name><operator pos:start="263:36" pos:end="263:37">-&gt;</operator><name pos:start="263:38" pos:end="263:48">rc_max_rate</name></name> <operator pos:start="263:50" pos:end="263:50">&lt;</operator> <name pos:start="263:52" pos:end="263:66"><name pos:start="263:52" pos:end="263:56">avctx</name><operator pos:start="263:57" pos:end="263:58">-&gt;</operator><name pos:start="263:59" pos:end="263:66">bit_rate</name></name></expr>)</condition> <block pos:start="263:69" pos:end="269:5">{<block_content pos:start="265:9" pos:end="267:18">

        <expr_stmt pos:start="265:9" pos:end="265:66"><expr pos:start="265:9" pos:end="265:65"><call pos:start="265:9" pos:end="265:65"><name pos:start="265:9" pos:end="265:14">av_log</name><argument_list pos:start="265:15" pos:end="265:65">(<argument pos:start="265:16" pos:end="265:20"><expr pos:start="265:16" pos:end="265:20"><name pos:start="265:16" pos:end="265:20">avctx</name></expr></argument>, <argument pos:start="265:23" pos:end="265:33"><expr pos:start="265:23" pos:end="265:33"><name pos:start="265:23" pos:end="265:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="265:36" pos:end="265:64"><expr pos:start="265:36" pos:end="265:64"><literal type="string" pos:start="265:36" pos:end="265:64">"bitrate above max bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="267:9" pos:end="267:18">return <expr pos:start="267:16" pos:end="267:17"><operator pos:start="267:16" pos:end="267:16">-</operator><literal type="number" pos:start="267:17" pos:end="267:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="273:5" pos:end="283:5"><if pos:start="273:5" pos:end="283:5">if <condition pos:start="273:8" pos:end="277:49">(<expr pos:start="273:9" pos:end="277:48"><name pos:start="273:9" pos:end="273:26"><name pos:start="273:9" pos:end="273:13">avctx</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:26">rc_max_rate</name></name> <operator pos:start="273:28" pos:end="273:29">&amp;&amp;</operator>

        <name pos:start="275:9" pos:end="275:26"><name pos:start="275:9" pos:end="275:13">avctx</name><operator pos:start="275:14" pos:end="275:15">-&gt;</operator><name pos:start="275:16" pos:end="275:26">rc_max_rate</name></name> <operator pos:start="275:28" pos:end="275:29">==</operator> <name pos:start="275:31" pos:end="275:45"><name pos:start="275:31" pos:end="275:35">avctx</name><operator pos:start="275:36" pos:end="275:37">-&gt;</operator><name pos:start="275:38" pos:end="275:45">bit_rate</name></name> <operator pos:start="275:47" pos:end="275:48">&amp;&amp;</operator>

        <name pos:start="277:9" pos:end="277:26"><name pos:start="277:9" pos:end="277:13">avctx</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:26">rc_max_rate</name></name> <operator pos:start="277:28" pos:end="277:29">!=</operator> <name pos:start="277:31" pos:end="277:48"><name pos:start="277:31" pos:end="277:35">avctx</name><operator pos:start="277:36" pos:end="277:37">-&gt;</operator><name pos:start="277:38" pos:end="277:48">rc_min_rate</name></name></expr>)</condition> <block pos:start="277:51" pos:end="283:5">{<block_content pos:start="279:9" pos:end="281:67">

        <expr_stmt pos:start="279:9" pos:end="281:67"><expr pos:start="279:9" pos:end="281:66"><call pos:start="279:9" pos:end="281:66"><name pos:start="279:9" pos:end="279:14">av_log</name><argument_list pos:start="279:15" pos:end="281:66">(<argument pos:start="279:16" pos:end="279:20"><expr pos:start="279:16" pos:end="279:20"><name pos:start="279:16" pos:end="279:20">avctx</name></expr></argument>, <argument pos:start="279:23" pos:end="279:33"><expr pos:start="279:23" pos:end="279:33"><name pos:start="279:23" pos:end="279:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="281:16" pos:end="281:65"><expr pos:start="281:16" pos:end="281:65"><literal type="string" pos:start="281:16" pos:end="281:65">"impossible bitrate constraints, this will fail\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="287:5" pos:end="297:5"><if pos:start="287:5" pos:end="297:5">if <condition pos:start="287:8" pos:end="291:66">(<expr pos:start="287:9" pos:end="291:65"><name pos:start="287:9" pos:end="287:29"><name pos:start="287:9" pos:end="287:13">avctx</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:29">rc_buffer_size</name></name> <operator pos:start="287:31" pos:end="287:32">&amp;&amp;</operator>

        <name pos:start="289:9" pos:end="289:23"><name pos:start="289:9" pos:end="289:13">avctx</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:23">bit_rate</name></name> <operator pos:start="289:25" pos:end="289:25">*</operator> <operator pos:start="289:27" pos:end="289:27">(</operator><name pos:start="289:28" pos:end="289:34">int64_t</name><operator pos:start="289:35" pos:end="289:35">)</operator><name pos:start="289:36" pos:end="289:55"><name pos:start="289:36" pos:end="289:40">avctx</name><operator pos:start="289:41" pos:end="289:42">-&gt;</operator><name pos:start="289:43" pos:end="289:51">time_base</name><operator pos:start="289:52" pos:end="289:52">.</operator><name pos:start="289:53" pos:end="289:55">num</name></name> <operator pos:start="289:57" pos:end="289:57">&gt;</operator>

            <name pos:start="291:13" pos:end="291:33"><name pos:start="291:13" pos:end="291:17">avctx</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:33">rc_buffer_size</name></name> <operator pos:start="291:35" pos:end="291:35">*</operator> <operator pos:start="291:37" pos:end="291:37">(</operator><name pos:start="291:38" pos:end="291:44">int64_t</name><operator pos:start="291:45" pos:end="291:45">)</operator><name pos:start="291:46" pos:end="291:65"><name pos:start="291:46" pos:end="291:50">avctx</name><operator pos:start="291:51" pos:end="291:52">-&gt;</operator><name pos:start="291:53" pos:end="291:61">time_base</name><operator pos:start="291:62" pos:end="291:62">.</operator><name pos:start="291:63" pos:end="291:65">den</name></name></expr>)</condition> <block pos:start="291:68" pos:end="297:5">{<block_content pos:start="293:9" pos:end="295:18">

        <expr_stmt pos:start="293:9" pos:end="293:74"><expr pos:start="293:9" pos:end="293:73"><call pos:start="293:9" pos:end="293:73"><name pos:start="293:9" pos:end="293:14">av_log</name><argument_list pos:start="293:15" pos:end="293:73">(<argument pos:start="293:16" pos:end="293:20"><expr pos:start="293:16" pos:end="293:20"><name pos:start="293:16" pos:end="293:20">avctx</name></expr></argument>, <argument pos:start="293:23" pos:end="293:34"><expr pos:start="293:23" pos:end="293:34"><name pos:start="293:23" pos:end="293:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="293:37" pos:end="293:72"><expr pos:start="293:37" pos:end="293:72"><literal type="string" pos:start="293:37" pos:end="293:72">"VBV buffer too small for bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="295:9" pos:end="295:18">return <expr pos:start="295:16" pos:end="295:17"><operator pos:start="295:16" pos:end="295:16">-</operator><literal type="number" pos:start="295:17" pos:end="295:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="301:5" pos:end="313:5"><if pos:start="301:5" pos:end="313:5">if <condition pos:start="301:8" pos:end="305:38">(<expr pos:start="301:9" pos:end="305:37"><operator pos:start="301:9" pos:end="301:9">!</operator><name pos:start="301:10" pos:end="301:24"><name pos:start="301:10" pos:end="301:10">s</name><operator pos:start="301:11" pos:end="301:12">-&gt;</operator><name pos:start="301:13" pos:end="301:24">fixed_qscale</name></name> <operator pos:start="301:26" pos:end="301:27">&amp;&amp;</operator>

        <name pos:start="303:9" pos:end="303:23"><name pos:start="303:9" pos:end="303:13">avctx</name><operator pos:start="303:14" pos:end="303:15">-&gt;</operator><name pos:start="303:16" pos:end="303:23">bit_rate</name></name> <operator pos:start="303:25" pos:end="303:25">*</operator> <call pos:start="303:27" pos:end="303:50"><name pos:start="303:27" pos:end="303:32">av_q2d</name><argument_list pos:start="303:33" pos:end="303:50">(<argument pos:start="303:34" pos:end="303:49"><expr pos:start="303:34" pos:end="303:49"><name pos:start="303:34" pos:end="303:49"><name pos:start="303:34" pos:end="303:38">avctx</name><operator pos:start="303:39" pos:end="303:40">-&gt;</operator><name pos:start="303:41" pos:end="303:49">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="303:52" pos:end="303:52">&gt;</operator>

            <name pos:start="305:13" pos:end="305:37"><name pos:start="305:13" pos:end="305:17">avctx</name><operator pos:start="305:18" pos:end="305:19">-&gt;</operator><name pos:start="305:20" pos:end="305:37">bit_rate_tolerance</name></name></expr>)</condition> <block pos:start="305:40" pos:end="313:5">{<block_content pos:start="307:9" pos:end="311:18">

        <expr_stmt pos:start="307:9" pos:end="309:60"><expr pos:start="307:9" pos:end="309:59"><call pos:start="307:9" pos:end="309:59"><name pos:start="307:9" pos:end="307:14">av_log</name><argument_list pos:start="307:15" pos:end="309:59">(<argument pos:start="307:16" pos:end="307:20"><expr pos:start="307:16" pos:end="307:20"><name pos:start="307:16" pos:end="307:20">avctx</name></expr></argument>, <argument pos:start="307:23" pos:end="307:34"><expr pos:start="307:23" pos:end="307:34"><name pos:start="307:23" pos:end="307:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="309:16" pos:end="309:58"><expr pos:start="309:16" pos:end="309:58"><literal type="string" pos:start="309:16" pos:end="309:58">"bitrate tolerance too small for bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="311:9" pos:end="311:18">return <expr pos:start="311:16" pos:end="311:17"><operator pos:start="311:16" pos:end="311:16">-</operator><literal type="number" pos:start="311:17" pos:end="311:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="317:5" pos:end="335:5"><if pos:start="317:5" pos:end="335:5">if <condition pos:start="317:8" pos:end="327:45">(<expr pos:start="317:9" pos:end="327:44"><name pos:start="317:9" pos:end="317:29"><name pos:start="317:9" pos:end="317:9">s</name><operator pos:start="317:10" pos:end="317:11">-&gt;</operator><name pos:start="317:12" pos:end="317:16">avctx</name><operator pos:start="317:17" pos:end="317:18">-&gt;</operator><name pos:start="317:19" pos:end="317:29">rc_max_rate</name></name> <operator pos:start="317:31" pos:end="317:32">&amp;&amp;</operator>

        <name pos:start="319:9" pos:end="319:29"><name pos:start="319:9" pos:end="319:9">s</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:16">avctx</name><operator pos:start="319:17" pos:end="319:18">-&gt;</operator><name pos:start="319:19" pos:end="319:29">rc_min_rate</name></name> <operator pos:start="319:31" pos:end="319:32">==</operator> <name pos:start="319:34" pos:end="319:54"><name pos:start="319:34" pos:end="319:34">s</name><operator pos:start="319:35" pos:end="319:36">-&gt;</operator><name pos:start="319:37" pos:end="319:41">avctx</name><operator pos:start="319:42" pos:end="319:43">-&gt;</operator><name pos:start="319:44" pos:end="319:54">rc_max_rate</name></name> <operator pos:start="319:56" pos:end="319:57">&amp;&amp;</operator>

        <operator pos:start="321:9" pos:end="321:9">(</operator><name pos:start="321:10" pos:end="321:20"><name pos:start="321:10" pos:end="321:10">s</name><operator pos:start="321:11" pos:end="321:12">-&gt;</operator><name pos:start="321:13" pos:end="321:20">codec_id</name></name> <operator pos:start="321:22" pos:end="321:23">==</operator> <name pos:start="321:25" pos:end="321:46">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="321:48" pos:end="321:49">||</operator>

         <name pos:start="323:10" pos:end="323:20"><name pos:start="323:10" pos:end="323:10">s</name><operator pos:start="323:11" pos:end="323:12">-&gt;</operator><name pos:start="323:13" pos:end="323:20">codec_id</name></name> <operator pos:start="323:22" pos:end="323:23">==</operator> <name pos:start="323:25" pos:end="323:46">AV_CODEC_ID_MPEG2VIDEO</name><operator pos:start="323:47" pos:end="323:47">)</operator> <operator pos:start="323:49" pos:end="323:50">&amp;&amp;</operator>

        <literal type="number" pos:start="325:9" pos:end="325:15">90000LL</literal> <operator pos:start="325:17" pos:end="325:17">*</operator> <operator pos:start="325:19" pos:end="325:19">(</operator><name pos:start="325:20" pos:end="325:40"><name pos:start="325:20" pos:end="325:24">avctx</name><operator pos:start="325:25" pos:end="325:26">-&gt;</operator><name pos:start="325:27" pos:end="325:40">rc_buffer_size</name></name> <operator pos:start="325:42" pos:end="325:42">-</operator> <literal type="number" pos:start="325:44" pos:end="325:44">1</literal><operator pos:start="325:45" pos:end="325:45">)</operator> <operator pos:start="325:47" pos:end="325:47">&gt;</operator>

            <name pos:start="327:13" pos:end="327:33"><name pos:start="327:13" pos:end="327:13">s</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:20">avctx</name><operator pos:start="327:21" pos:end="327:22">-&gt;</operator><name pos:start="327:23" pos:end="327:33">rc_max_rate</name></name> <operator pos:start="327:35" pos:end="327:35">*</operator> <literal type="number" pos:start="327:37" pos:end="327:44">0xFFFFLL</literal></expr>)</condition> <block pos:start="327:47" pos:end="335:5">{<block_content pos:start="329:9" pos:end="333:77">

        <expr_stmt pos:start="329:9" pos:end="333:77"><expr pos:start="329:9" pos:end="333:76"><call pos:start="329:9" pos:end="333:76"><name pos:start="329:9" pos:end="329:14">av_log</name><argument_list pos:start="329:15" pos:end="333:76">(<argument pos:start="329:16" pos:end="329:20"><expr pos:start="329:16" pos:end="329:20"><name pos:start="329:16" pos:end="329:20">avctx</name></expr></argument>, <argument pos:start="329:23" pos:end="329:33"><expr pos:start="329:23" pos:end="329:33"><name pos:start="329:23" pos:end="329:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="331:16" pos:end="333:75"><expr pos:start="331:16" pos:end="333:75"><literal type="string" pos:start="331:16" pos:end="331:71">"Warning vbv_delay will be set to 0xFFFF (=VBR) as the "</literal>

               <literal type="string" pos:start="333:16" pos:end="333:75">"specified vbv buffer is too large for the given bitrate!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="339:5" pos:end="349:5"><if pos:start="339:5" pos:end="349:5">if <condition pos:start="339:8" pos:end="343:40">(<expr pos:start="339:9" pos:end="343:39"><operator pos:start="339:9" pos:end="339:9">(</operator><name pos:start="339:10" pos:end="339:24"><name pos:start="339:10" pos:end="339:10">s</name><operator pos:start="339:11" pos:end="339:12">-&gt;</operator><name pos:start="339:13" pos:end="339:17">avctx</name><operator pos:start="339:18" pos:end="339:19">-&gt;</operator><name pos:start="339:20" pos:end="339:24">flags</name></name> <operator pos:start="339:26" pos:end="339:26">&amp;</operator> <name pos:start="339:28" pos:end="339:44">AV_CODEC_FLAG_4MV</name><operator pos:start="339:45" pos:end="339:45">)</operator> <operator pos:start="339:47" pos:end="339:48">&amp;&amp;</operator> <name pos:start="339:50" pos:end="339:60"><name pos:start="339:50" pos:end="339:50">s</name><operator pos:start="339:51" pos:end="339:52">-&gt;</operator><name pos:start="339:53" pos:end="339:60">codec_id</name></name> <operator pos:start="339:62" pos:end="339:63">!=</operator> <name pos:start="339:65" pos:end="339:81">AV_CODEC_ID_MPEG4</name> <operator pos:start="339:83" pos:end="339:84">&amp;&amp;</operator>

        <name pos:start="341:9" pos:end="341:19"><name pos:start="341:9" pos:end="341:9">s</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:19">codec_id</name></name> <operator pos:start="341:21" pos:end="341:22">!=</operator> <name pos:start="341:24" pos:end="341:39">AV_CODEC_ID_H263</name> <operator pos:start="341:41" pos:end="341:42">&amp;&amp;</operator> <name pos:start="341:44" pos:end="341:54"><name pos:start="341:44" pos:end="341:44">s</name><operator pos:start="341:45" pos:end="341:46">-&gt;</operator><name pos:start="341:47" pos:end="341:54">codec_id</name></name> <operator pos:start="341:56" pos:end="341:57">!=</operator> <name pos:start="341:59" pos:end="341:75">AV_CODEC_ID_H263P</name> <operator pos:start="341:77" pos:end="341:78">&amp;&amp;</operator>

        <name pos:start="343:9" pos:end="343:19"><name pos:start="343:9" pos:end="343:9">s</name><operator pos:start="343:10" pos:end="343:11">-&gt;</operator><name pos:start="343:12" pos:end="343:19">codec_id</name></name> <operator pos:start="343:21" pos:end="343:22">!=</operator> <name pos:start="343:24" pos:end="343:39">AV_CODEC_ID_FLV1</name></expr>)</condition> <block pos:start="343:42" pos:end="349:5">{<block_content pos:start="345:9" pos:end="347:18">

        <expr_stmt pos:start="345:9" pos:end="345:68"><expr pos:start="345:9" pos:end="345:67"><call pos:start="345:9" pos:end="345:67"><name pos:start="345:9" pos:end="345:14">av_log</name><argument_list pos:start="345:15" pos:end="345:67">(<argument pos:start="345:16" pos:end="345:20"><expr pos:start="345:16" pos:end="345:20"><name pos:start="345:16" pos:end="345:20">avctx</name></expr></argument>, <argument pos:start="345:23" pos:end="345:34"><expr pos:start="345:23" pos:end="345:34"><name pos:start="345:23" pos:end="345:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="345:37" pos:end="345:66"><expr pos:start="345:37" pos:end="345:66"><literal type="string" pos:start="345:37" pos:end="345:66">"4MV not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="347:9" pos:end="347:18">return <expr pos:start="347:16" pos:end="347:17"><operator pos:start="347:16" pos:end="347:16">-</operator><literal type="number" pos:start="347:17" pos:end="347:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="353:5" pos:end="361:5"><if pos:start="353:5" pos:end="361:5">if <condition pos:start="353:8" pos:end="353:66">(<expr pos:start="353:9" pos:end="353:65"><name pos:start="353:9" pos:end="353:15"><name pos:start="353:9" pos:end="353:9">s</name><operator pos:start="353:10" pos:end="353:11">-&gt;</operator><name pos:start="353:12" pos:end="353:15">obmc</name></name> <operator pos:start="353:17" pos:end="353:18">&amp;&amp;</operator> <name pos:start="353:20" pos:end="353:40"><name pos:start="353:20" pos:end="353:20">s</name><operator pos:start="353:21" pos:end="353:22">-&gt;</operator><name pos:start="353:23" pos:end="353:27">avctx</name><operator pos:start="353:28" pos:end="353:29">-&gt;</operator><name pos:start="353:30" pos:end="353:40">mb_decision</name></name> <operator pos:start="353:42" pos:end="353:43">!=</operator> <name pos:start="353:45" pos:end="353:65">FF_MB_DECISION_SIMPLE</name></expr>)</condition> <block pos:start="353:68" pos:end="361:5">{<block_content pos:start="355:9" pos:end="359:18">

        <expr_stmt pos:start="355:9" pos:end="357:67"><expr pos:start="355:9" pos:end="357:66"><call pos:start="355:9" pos:end="357:66"><name pos:start="355:9" pos:end="355:14">av_log</name><argument_list pos:start="355:15" pos:end="357:66">(<argument pos:start="355:16" pos:end="355:20"><expr pos:start="355:16" pos:end="355:20"><name pos:start="355:16" pos:end="355:20">avctx</name></expr></argument>, <argument pos:start="355:23" pos:end="355:34"><expr pos:start="355:23" pos:end="355:34"><name pos:start="355:23" pos:end="355:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="357:16" pos:end="357:65"><expr pos:start="357:16" pos:end="357:65"><literal type="string" pos:start="357:16" pos:end="357:65">"OBMC is only supported with simple mb decision\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="359:9" pos:end="359:18">return <expr pos:start="359:16" pos:end="359:17"><operator pos:start="359:16" pos:end="359:16">-</operator><literal type="number" pos:start="359:17" pos:end="359:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="365:5" pos:end="371:5"><if pos:start="365:5" pos:end="371:5">if <condition pos:start="365:8" pos:end="365:62">(<expr pos:start="365:9" pos:end="365:61"><name pos:start="365:9" pos:end="365:25"><name pos:start="365:9" pos:end="365:9">s</name><operator pos:start="365:10" pos:end="365:11">-&gt;</operator><name pos:start="365:12" pos:end="365:25">quarter_sample</name></name> <operator pos:start="365:27" pos:end="365:28">&amp;&amp;</operator> <name pos:start="365:30" pos:end="365:40"><name pos:start="365:30" pos:end="365:30">s</name><operator pos:start="365:31" pos:end="365:32">-&gt;</operator><name pos:start="365:33" pos:end="365:40">codec_id</name></name> <operator pos:start="365:42" pos:end="365:43">!=</operator> <name pos:start="365:45" pos:end="365:61">AV_CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="365:64" pos:end="371:5">{<block_content pos:start="367:9" pos:end="369:18">

        <expr_stmt pos:start="367:9" pos:end="367:69"><expr pos:start="367:9" pos:end="367:68"><call pos:start="367:9" pos:end="367:68"><name pos:start="367:9" pos:end="367:14">av_log</name><argument_list pos:start="367:15" pos:end="367:68">(<argument pos:start="367:16" pos:end="367:20"><expr pos:start="367:16" pos:end="367:20"><name pos:start="367:16" pos:end="367:20">avctx</name></expr></argument>, <argument pos:start="367:23" pos:end="367:34"><expr pos:start="367:23" pos:end="367:34"><name pos:start="367:23" pos:end="367:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="367:37" pos:end="367:67"><expr pos:start="367:37" pos:end="367:67"><literal type="string" pos:start="367:37" pos:end="367:67">"qpel not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="369:9" pos:end="369:18">return <expr pos:start="369:16" pos:end="369:17"><operator pos:start="369:16" pos:end="369:16">-</operator><literal type="number" pos:start="369:17" pos:end="369:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="375:5" pos:end="387:5"><if pos:start="375:5" pos:end="387:5">if <condition pos:start="375:8" pos:end="381:46">(<expr pos:start="375:9" pos:end="381:45"><name pos:start="375:9" pos:end="375:23"><name pos:start="375:9" pos:end="375:9">s</name><operator pos:start="375:10" pos:end="375:11">-&gt;</operator><name pos:start="375:12" pos:end="375:23">max_b_frames</name></name>                    <operator pos:start="375:44" pos:end="375:45">&amp;&amp;</operator>

        <name pos:start="377:9" pos:end="377:19"><name pos:start="377:9" pos:end="377:9">s</name><operator pos:start="377:10" pos:end="377:11">-&gt;</operator><name pos:start="377:12" pos:end="377:19">codec_id</name></name> <operator pos:start="377:21" pos:end="377:22">!=</operator> <name pos:start="377:24" pos:end="377:40">AV_CODEC_ID_MPEG4</name>      <operator pos:start="377:47" pos:end="377:48">&amp;&amp;</operator>

        <name pos:start="379:9" pos:end="379:19"><name pos:start="379:9" pos:end="379:9">s</name><operator pos:start="379:10" pos:end="379:11">-&gt;</operator><name pos:start="379:12" pos:end="379:19">codec_id</name></name> <operator pos:start="379:21" pos:end="379:22">!=</operator> <name pos:start="379:24" pos:end="379:45">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="379:47" pos:end="379:48">&amp;&amp;</operator>

        <name pos:start="381:9" pos:end="381:19"><name pos:start="381:9" pos:end="381:9">s</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:19">codec_id</name></name> <operator pos:start="381:21" pos:end="381:22">!=</operator> <name pos:start="381:24" pos:end="381:45">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="381:48" pos:end="387:5">{<block_content pos:start="383:9" pos:end="385:18">

        <expr_stmt pos:start="383:9" pos:end="383:73"><expr pos:start="383:9" pos:end="383:72"><call pos:start="383:9" pos:end="383:72"><name pos:start="383:9" pos:end="383:14">av_log</name><argument_list pos:start="383:15" pos:end="383:72">(<argument pos:start="383:16" pos:end="383:20"><expr pos:start="383:16" pos:end="383:20"><name pos:start="383:16" pos:end="383:20">avctx</name></expr></argument>, <argument pos:start="383:23" pos:end="383:34"><expr pos:start="383:23" pos:end="383:34"><name pos:start="383:23" pos:end="383:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="383:37" pos:end="383:71"><expr pos:start="383:37" pos:end="383:71"><literal type="string" pos:start="383:37" pos:end="383:71">"b frames not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="385:9" pos:end="385:18">return <expr pos:start="385:16" pos:end="385:17"><operator pos:start="385:16" pos:end="385:16">-</operator><literal type="number" pos:start="385:17" pos:end="385:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="391:5" pos:end="409:5"><if pos:start="391:5" pos:end="409:5">if <condition pos:start="391:8" pos:end="399:47">(<expr pos:start="391:9" pos:end="399:46"><operator pos:start="391:9" pos:end="391:9">(</operator><name pos:start="391:10" pos:end="391:20"><name pos:start="391:10" pos:end="391:10">s</name><operator pos:start="391:11" pos:end="391:12">-&gt;</operator><name pos:start="391:13" pos:end="391:20">codec_id</name></name> <operator pos:start="391:22" pos:end="391:23">==</operator> <name pos:start="391:25" pos:end="391:41">AV_CODEC_ID_MPEG4</name> <operator pos:start="391:43" pos:end="391:44">||</operator>

         <name pos:start="393:10" pos:end="393:20"><name pos:start="393:10" pos:end="393:10">s</name><operator pos:start="393:11" pos:end="393:12">-&gt;</operator><name pos:start="393:13" pos:end="393:20">codec_id</name></name> <operator pos:start="393:22" pos:end="393:23">==</operator> <name pos:start="393:25" pos:end="393:40">AV_CODEC_ID_H263</name>  <operator pos:start="393:43" pos:end="393:44">||</operator>

         <name pos:start="395:10" pos:end="395:20"><name pos:start="395:10" pos:end="395:10">s</name><operator pos:start="395:11" pos:end="395:12">-&gt;</operator><name pos:start="395:13" pos:end="395:20">codec_id</name></name> <operator pos:start="395:22" pos:end="395:23">==</operator> <name pos:start="395:25" pos:end="395:41">AV_CODEC_ID_H263P</name><operator pos:start="395:42" pos:end="395:42">)</operator> <operator pos:start="395:44" pos:end="395:45">&amp;&amp;</operator>

        <operator pos:start="397:9" pos:end="397:9">(</operator><name pos:start="397:10" pos:end="397:39"><name pos:start="397:10" pos:end="397:14">avctx</name><operator pos:start="397:15" pos:end="397:16">-&gt;</operator><name pos:start="397:17" pos:end="397:35">sample_aspect_ratio</name><operator pos:start="397:36" pos:end="397:36">.</operator><name pos:start="397:37" pos:end="397:39">num</name></name> <operator pos:start="397:41" pos:end="397:41">&gt;</operator> <literal type="number" pos:start="397:43" pos:end="397:45">255</literal> <operator pos:start="397:47" pos:end="397:48">||</operator>

         <name pos:start="399:10" pos:end="399:39"><name pos:start="399:10" pos:end="399:14">avctx</name><operator pos:start="399:15" pos:end="399:16">-&gt;</operator><name pos:start="399:17" pos:end="399:35">sample_aspect_ratio</name><operator pos:start="399:36" pos:end="399:36">.</operator><name pos:start="399:37" pos:end="399:39">den</name></name> <operator pos:start="399:41" pos:end="399:41">&gt;</operator> <literal type="number" pos:start="399:43" pos:end="399:45">255</literal><operator pos:start="399:46" pos:end="399:46">)</operator></expr>)</condition> <block pos:start="399:49" pos:end="409:5">{<block_content pos:start="401:9" pos:end="407:18">

        <expr_stmt pos:start="401:9" pos:end="405:79"><expr pos:start="401:9" pos:end="405:78"><call pos:start="401:9" pos:end="405:78"><name pos:start="401:9" pos:end="401:14">av_log</name><argument_list pos:start="401:15" pos:end="405:78">(<argument pos:start="401:16" pos:end="401:20"><expr pos:start="401:16" pos:end="401:20"><name pos:start="401:16" pos:end="401:20">avctx</name></expr></argument>, <argument pos:start="401:23" pos:end="401:34"><expr pos:start="401:23" pos:end="401:34"><name pos:start="401:23" pos:end="401:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="403:16" pos:end="403:69"><expr pos:start="403:16" pos:end="403:69"><literal type="string" pos:start="403:16" pos:end="403:69">"Invalid pixel aspect ratio %i/%i, limit is 255/255\n"</literal></expr></argument>,

               <argument pos:start="405:16" pos:end="405:45"><expr pos:start="405:16" pos:end="405:45"><name pos:start="405:16" pos:end="405:45"><name pos:start="405:16" pos:end="405:20">avctx</name><operator pos:start="405:21" pos:end="405:22">-&gt;</operator><name pos:start="405:23" pos:end="405:41">sample_aspect_ratio</name><operator pos:start="405:42" pos:end="405:42">.</operator><name pos:start="405:43" pos:end="405:45">num</name></name></expr></argument>, <argument pos:start="405:48" pos:end="405:77"><expr pos:start="405:48" pos:end="405:77"><name pos:start="405:48" pos:end="405:77"><name pos:start="405:48" pos:end="405:52">avctx</name><operator pos:start="405:53" pos:end="405:54">-&gt;</operator><name pos:start="405:55" pos:end="405:73">sample_aspect_ratio</name><operator pos:start="405:74" pos:end="405:74">.</operator><name pos:start="405:75" pos:end="405:77">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="407:9" pos:end="407:18">return <expr pos:start="407:16" pos:end="407:17"><operator pos:start="407:16" pos:end="407:16">-</operator><literal type="number" pos:start="407:17" pos:end="407:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="413:5" pos:end="421:5"><if pos:start="413:5" pos:end="421:5">if <condition pos:start="413:8" pos:end="415:82">(<expr pos:start="413:9" pos:end="415:81"><operator pos:start="413:9" pos:end="413:9">(</operator><name pos:start="413:10" pos:end="413:24"><name pos:start="413:10" pos:end="413:10">s</name><operator pos:start="413:11" pos:end="413:12">-&gt;</operator><name pos:start="413:13" pos:end="413:17">avctx</name><operator pos:start="413:18" pos:end="413:19">-&gt;</operator><name pos:start="413:20" pos:end="413:24">flags</name></name> <operator pos:start="413:26" pos:end="413:26">&amp;</operator> <operator pos:start="413:28" pos:end="413:28">(</operator><name pos:start="413:29" pos:end="413:56">AV_CODEC_FLAG_INTERLACED_DCT</name> <operator pos:start="413:58" pos:end="413:58">|</operator> <name pos:start="413:60" pos:end="413:86">AV_CODEC_FLAG_INTERLACED_ME</name><operator pos:start="413:87" pos:end="413:87">)</operator><operator pos:start="413:88" pos:end="413:88">)</operator> <operator pos:start="413:90" pos:end="413:91">&amp;&amp;</operator>

        <name pos:start="415:9" pos:end="415:19"><name pos:start="415:9" pos:end="415:9">s</name><operator pos:start="415:10" pos:end="415:11">-&gt;</operator><name pos:start="415:12" pos:end="415:19">codec_id</name></name> <operator pos:start="415:21" pos:end="415:22">!=</operator> <name pos:start="415:24" pos:end="415:40">AV_CODEC_ID_MPEG4</name> <operator pos:start="415:42" pos:end="415:43">&amp;&amp;</operator> <name pos:start="415:45" pos:end="415:55"><name pos:start="415:45" pos:end="415:45">s</name><operator pos:start="415:46" pos:end="415:47">-&gt;</operator><name pos:start="415:48" pos:end="415:55">codec_id</name></name> <operator pos:start="415:57" pos:end="415:58">!=</operator> <name pos:start="415:60" pos:end="415:81">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="415:84" pos:end="421:5">{<block_content pos:start="417:9" pos:end="419:18">

        <expr_stmt pos:start="417:9" pos:end="417:76"><expr pos:start="417:9" pos:end="417:75"><call pos:start="417:9" pos:end="417:75"><name pos:start="417:9" pos:end="417:14">av_log</name><argument_list pos:start="417:15" pos:end="417:75">(<argument pos:start="417:16" pos:end="417:20"><expr pos:start="417:16" pos:end="417:20"><name pos:start="417:16" pos:end="417:20">avctx</name></expr></argument>, <argument pos:start="417:23" pos:end="417:34"><expr pos:start="417:23" pos:end="417:34"><name pos:start="417:23" pos:end="417:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="417:37" pos:end="417:74"><expr pos:start="417:37" pos:end="417:74"><literal type="string" pos:start="417:37" pos:end="417:74">"interlacing not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="419:9" pos:end="419:18">return <expr pos:start="419:16" pos:end="419:17"><operator pos:start="419:16" pos:end="419:16">-</operator><literal type="number" pos:start="419:17" pos:end="419:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="425:5" pos:end="425:32">// FIXME mpeg2 uses that too</comment>

    <if_stmt pos:start="427:5" pos:end="435:5"><if pos:start="427:5" pos:end="435:5">if <condition pos:start="427:8" pos:end="427:58">(<expr pos:start="427:9" pos:end="427:57"><name pos:start="427:9" pos:end="427:21"><name pos:start="427:9" pos:end="427:9">s</name><operator pos:start="427:10" pos:end="427:11">-&gt;</operator><name pos:start="427:12" pos:end="427:21">mpeg_quant</name></name> <operator pos:start="427:23" pos:end="427:24">&amp;&amp;</operator> <name pos:start="427:26" pos:end="427:36"><name pos:start="427:26" pos:end="427:26">s</name><operator pos:start="427:27" pos:end="427:28">-&gt;</operator><name pos:start="427:29" pos:end="427:36">codec_id</name></name> <operator pos:start="427:38" pos:end="427:39">!=</operator> <name pos:start="427:41" pos:end="427:57">AV_CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="427:60" pos:end="435:5">{<block_content pos:start="429:9" pos:end="433:18">

        <expr_stmt pos:start="429:9" pos:end="431:68"><expr pos:start="429:9" pos:end="431:67"><call pos:start="429:9" pos:end="431:67"><name pos:start="429:9" pos:end="429:14">av_log</name><argument_list pos:start="429:15" pos:end="431:67">(<argument pos:start="429:16" pos:end="429:20"><expr pos:start="429:16" pos:end="429:20"><name pos:start="429:16" pos:end="429:20">avctx</name></expr></argument>, <argument pos:start="429:23" pos:end="429:34"><expr pos:start="429:23" pos:end="429:34"><name pos:start="429:23" pos:end="429:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="431:16" pos:end="431:66"><expr pos:start="431:16" pos:end="431:66"><literal type="string" pos:start="431:16" pos:end="431:66">"mpeg2 style quantization not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="433:9" pos:end="433:18">return <expr pos:start="433:16" pos:end="433:17"><operator pos:start="433:16" pos:end="433:16">-</operator><literal type="number" pos:start="433:17" pos:end="433:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="439:5" pos:end="445:5"><if pos:start="439:5" pos:end="445:5">if <condition pos:start="439:8" pos:end="439:63">(<expr pos:start="439:9" pos:end="439:62"><operator pos:start="439:9" pos:end="439:9">(</operator><name pos:start="439:10" pos:end="439:21"><name pos:start="439:10" pos:end="439:10">s</name><operator pos:start="439:11" pos:end="439:12">-&gt;</operator><name pos:start="439:13" pos:end="439:21">mpv_flags</name></name> <operator pos:start="439:23" pos:end="439:23">&amp;</operator> <name pos:start="439:25" pos:end="439:42">FF_MPV_FLAG_CBP_RD</name><operator pos:start="439:43" pos:end="439:43">)</operator> <operator pos:start="439:45" pos:end="439:46">&amp;&amp;</operator> <operator pos:start="439:48" pos:end="439:48">!</operator><name pos:start="439:49" pos:end="439:62"><name pos:start="439:49" pos:end="439:53">avctx</name><operator pos:start="439:54" pos:end="439:55">-&gt;</operator><name pos:start="439:56" pos:end="439:62">trellis</name></name></expr>)</condition> <block pos:start="439:65" pos:end="445:5">{<block_content pos:start="441:9" pos:end="443:18">

        <expr_stmt pos:start="441:9" pos:end="441:68"><expr pos:start="441:9" pos:end="441:67"><call pos:start="441:9" pos:end="441:67"><name pos:start="441:9" pos:end="441:14">av_log</name><argument_list pos:start="441:15" pos:end="441:67">(<argument pos:start="441:16" pos:end="441:20"><expr pos:start="441:16" pos:end="441:20"><name pos:start="441:16" pos:end="441:20">avctx</name></expr></argument>, <argument pos:start="441:23" pos:end="441:34"><expr pos:start="441:23" pos:end="441:34"><name pos:start="441:23" pos:end="441:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="441:37" pos:end="441:66"><expr pos:start="441:37" pos:end="441:66"><literal type="string" pos:start="441:37" pos:end="441:66">"CBP RD needs trellis quant\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="443:9" pos:end="443:18">return <expr pos:start="443:16" pos:end="443:17"><operator pos:start="443:16" pos:end="443:16">-</operator><literal type="number" pos:start="443:17" pos:end="443:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="449:5" pos:end="457:5"><if pos:start="449:5" pos:end="457:5">if <condition pos:start="449:8" pos:end="451:51">(<expr pos:start="449:9" pos:end="451:50"><operator pos:start="449:9" pos:end="449:9">(</operator><name pos:start="449:10" pos:end="449:21"><name pos:start="449:10" pos:end="449:10">s</name><operator pos:start="449:11" pos:end="449:12">-&gt;</operator><name pos:start="449:13" pos:end="449:21">mpv_flags</name></name> <operator pos:start="449:23" pos:end="449:23">&amp;</operator> <name pos:start="449:25" pos:end="449:41">FF_MPV_FLAG_QP_RD</name><operator pos:start="449:42" pos:end="449:42">)</operator> <operator pos:start="449:44" pos:end="449:45">&amp;&amp;</operator>

        <name pos:start="451:9" pos:end="451:29"><name pos:start="451:9" pos:end="451:9">s</name><operator pos:start="451:10" pos:end="451:11">-&gt;</operator><name pos:start="451:12" pos:end="451:16">avctx</name><operator pos:start="451:17" pos:end="451:18">-&gt;</operator><name pos:start="451:19" pos:end="451:29">mb_decision</name></name> <operator pos:start="451:31" pos:end="451:32">!=</operator> <name pos:start="451:34" pos:end="451:50">FF_MB_DECISION_RD</name></expr>)</condition> <block pos:start="451:53" pos:end="457:5">{<block_content pos:start="453:9" pos:end="455:18">

        <expr_stmt pos:start="453:9" pos:end="453:59"><expr pos:start="453:9" pos:end="453:58"><call pos:start="453:9" pos:end="453:58"><name pos:start="453:9" pos:end="453:14">av_log</name><argument_list pos:start="453:15" pos:end="453:58">(<argument pos:start="453:16" pos:end="453:20"><expr pos:start="453:16" pos:end="453:20"><name pos:start="453:16" pos:end="453:20">avctx</name></expr></argument>, <argument pos:start="453:23" pos:end="453:34"><expr pos:start="453:23" pos:end="453:34"><name pos:start="453:23" pos:end="453:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="453:37" pos:end="453:57"><expr pos:start="453:37" pos:end="453:57"><literal type="string" pos:start="453:37" pos:end="453:57">"QP RD needs mbd=2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="455:9" pos:end="455:18">return <expr pos:start="455:16" pos:end="455:17"><operator pos:start="455:16" pos:end="455:16">-</operator><literal type="number" pos:start="455:17" pos:end="455:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="461:5" pos:end="473:5"><if pos:start="461:5" pos:end="473:5">if <condition pos:start="461:8" pos:end="463:53">(<expr pos:start="461:9" pos:end="463:52"><name pos:start="461:9" pos:end="461:39"><name pos:start="461:9" pos:end="461:9">s</name><operator pos:start="461:10" pos:end="461:11">-&gt;</operator><name pos:start="461:12" pos:end="461:16">avctx</name><operator pos:start="461:17" pos:end="461:18">-&gt;</operator><name pos:start="461:19" pos:end="461:39">scenechange_threshold</name></name> <operator pos:start="461:41" pos:end="461:41">&lt;</operator> <literal type="number" pos:start="461:43" pos:end="461:52">1000000000</literal> <operator pos:start="461:54" pos:end="461:55">&amp;&amp;</operator>

        <operator pos:start="463:9" pos:end="463:9">(</operator><name pos:start="463:10" pos:end="463:24"><name pos:start="463:10" pos:end="463:10">s</name><operator pos:start="463:11" pos:end="463:12">-&gt;</operator><name pos:start="463:13" pos:end="463:17">avctx</name><operator pos:start="463:18" pos:end="463:19">-&gt;</operator><name pos:start="463:20" pos:end="463:24">flags</name></name> <operator pos:start="463:26" pos:end="463:26">&amp;</operator> <name pos:start="463:28" pos:end="463:51">AV_CODEC_FLAG_CLOSED_GOP</name><operator pos:start="463:52" pos:end="463:52">)</operator></expr>)</condition> <block pos:start="463:55" pos:end="473:5">{<block_content pos:start="465:9" pos:end="471:18">

        <expr_stmt pos:start="465:9" pos:end="469:48"><expr pos:start="465:9" pos:end="469:47"><call pos:start="465:9" pos:end="469:47"><name pos:start="465:9" pos:end="465:14">av_log</name><argument_list pos:start="465:15" pos:end="469:47">(<argument pos:start="465:16" pos:end="465:20"><expr pos:start="465:16" pos:end="465:20"><name pos:start="465:16" pos:end="465:20">avctx</name></expr></argument>, <argument pos:start="465:23" pos:end="465:34"><expr pos:start="465:23" pos:end="465:34"><name pos:start="465:23" pos:end="465:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="467:16" pos:end="469:46"><expr pos:start="467:16" pos:end="469:46"><literal type="string" pos:start="467:16" pos:end="467:79">"closed gop with scene change detection are not supported yet, "</literal>

               <literal type="string" pos:start="469:16" pos:end="469:46">"set threshold to 1000000000\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="471:9" pos:end="471:18">return <expr pos:start="471:16" pos:end="471:17"><operator pos:start="471:16" pos:end="471:16">-</operator><literal type="number" pos:start="471:17" pos:end="471:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="477:5" pos:end="499:5"><if pos:start="477:5" pos:end="499:5">if <condition pos:start="477:8" pos:end="477:50">(<expr pos:start="477:9" pos:end="477:49"><name pos:start="477:9" pos:end="477:23"><name pos:start="477:9" pos:end="477:9">s</name><operator pos:start="477:10" pos:end="477:11">-&gt;</operator><name pos:start="477:12" pos:end="477:16">avctx</name><operator pos:start="477:17" pos:end="477:18">-&gt;</operator><name pos:start="477:19" pos:end="477:23">flags</name></name> <operator pos:start="477:25" pos:end="477:25">&amp;</operator> <name pos:start="477:27" pos:end="477:49">AV_CODEC_FLAG_LOW_DELAY</name></expr>)</condition> <block pos:start="477:52" pos:end="499:5">{<block_content pos:start="479:9" pos:end="497:9">

        <if_stmt pos:start="479:9" pos:end="487:9"><if pos:start="479:9" pos:end="487:9">if <condition pos:start="479:12" pos:end="479:50">(<expr pos:start="479:13" pos:end="479:49"><name pos:start="479:13" pos:end="479:23"><name pos:start="479:13" pos:end="479:13">s</name><operator pos:start="479:14" pos:end="479:15">-&gt;</operator><name pos:start="479:16" pos:end="479:23">codec_id</name></name> <operator pos:start="479:25" pos:end="479:26">!=</operator> <name pos:start="479:28" pos:end="479:49">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="479:52" pos:end="487:9">{<block_content pos:start="481:13" pos:end="485:22">

            <expr_stmt pos:start="481:13" pos:end="483:69"><expr pos:start="481:13" pos:end="483:68"><call pos:start="481:13" pos:end="483:68"><name pos:start="481:13" pos:end="481:18">av_log</name><argument_list pos:start="481:19" pos:end="483:68">(<argument pos:start="481:20" pos:end="481:24"><expr pos:start="481:20" pos:end="481:24"><name pos:start="481:20" pos:end="481:24">avctx</name></expr></argument>, <argument pos:start="481:27" pos:end="481:38"><expr pos:start="481:27" pos:end="481:38"><name pos:start="481:27" pos:end="481:38">AV_LOG_ERROR</name></expr></argument>,

                  <argument pos:start="483:19" pos:end="483:67"><expr pos:start="483:19" pos:end="483:67"><literal type="string" pos:start="483:19" pos:end="483:67">"low delay forcing is only available for mpeg2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="485:13" pos:end="485:22">return <expr pos:start="485:20" pos:end="485:21"><operator pos:start="485:20" pos:end="485:20">-</operator><literal type="number" pos:start="485:21" pos:end="485:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="489:9" pos:end="497:9"><if pos:start="489:9" pos:end="497:9">if <condition pos:start="489:12" pos:end="489:33">(<expr pos:start="489:13" pos:end="489:32"><name pos:start="489:13" pos:end="489:27"><name pos:start="489:13" pos:end="489:13">s</name><operator pos:start="489:14" pos:end="489:15">-&gt;</operator><name pos:start="489:16" pos:end="489:27">max_b_frames</name></name> <operator pos:start="489:29" pos:end="489:30">!=</operator> <literal type="number" pos:start="489:32" pos:end="489:32">0</literal></expr>)</condition> <block pos:start="489:35" pos:end="497:9">{<block_content pos:start="491:13" pos:end="495:22">

            <expr_stmt pos:start="491:13" pos:end="493:63"><expr pos:start="491:13" pos:end="493:62"><call pos:start="491:13" pos:end="493:62"><name pos:start="491:13" pos:end="491:18">av_log</name><argument_list pos:start="491:19" pos:end="493:62">(<argument pos:start="491:20" pos:end="491:24"><expr pos:start="491:20" pos:end="491:24"><name pos:start="491:20" pos:end="491:24">avctx</name></expr></argument>, <argument pos:start="491:27" pos:end="491:38"><expr pos:start="491:27" pos:end="491:38"><name pos:start="491:27" pos:end="491:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="493:20" pos:end="493:61"><expr pos:start="493:20" pos:end="493:61"><literal type="string" pos:start="493:20" pos:end="493:61">"b frames cannot be used with low delay\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="495:13" pos:end="495:22">return <expr pos:start="495:20" pos:end="495:21"><operator pos:start="495:20" pos:end="495:20">-</operator><literal type="number" pos:start="495:21" pos:end="495:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="503:5" pos:end="515:5"><if pos:start="503:5" pos:end="515:5">if <condition pos:start="503:8" pos:end="503:29">(<expr pos:start="503:9" pos:end="503:28"><name pos:start="503:9" pos:end="503:23"><name pos:start="503:9" pos:end="503:9">s</name><operator pos:start="503:10" pos:end="503:11">-&gt;</operator><name pos:start="503:12" pos:end="503:23">q_scale_type</name></name> <operator pos:start="503:25" pos:end="503:26">==</operator> <literal type="number" pos:start="503:28" pos:end="503:28">1</literal></expr>)</condition> <block pos:start="503:31" pos:end="515:5">{<block_content pos:start="505:9" pos:end="513:9">

        <if_stmt pos:start="505:9" pos:end="513:9"><if pos:start="505:9" pos:end="513:9">if <condition pos:start="505:12" pos:end="505:29">(<expr pos:start="505:13" pos:end="505:28"><name pos:start="505:13" pos:end="505:23"><name pos:start="505:13" pos:end="505:17">avctx</name><operator pos:start="505:18" pos:end="505:19">-&gt;</operator><name pos:start="505:20" pos:end="505:23">qmax</name></name> <operator pos:start="505:25" pos:end="505:25">&gt;</operator> <literal type="number" pos:start="505:27" pos:end="505:28">12</literal></expr>)</condition> <block pos:start="505:31" pos:end="513:9">{<block_content pos:start="507:13" pos:end="511:22">

            <expr_stmt pos:start="507:13" pos:end="509:76"><expr pos:start="507:13" pos:end="509:75"><call pos:start="507:13" pos:end="509:75"><name pos:start="507:13" pos:end="507:18">av_log</name><argument_list pos:start="507:19" pos:end="509:75">(<argument pos:start="507:20" pos:end="507:24"><expr pos:start="507:20" pos:end="507:24"><name pos:start="507:20" pos:end="507:24">avctx</name></expr></argument>, <argument pos:start="507:27" pos:end="507:38"><expr pos:start="507:27" pos:end="507:38"><name pos:start="507:27" pos:end="507:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="509:20" pos:end="509:74"><expr pos:start="509:20" pos:end="509:74"><literal type="string" pos:start="509:20" pos:end="509:74">"non linear quant only supports qmax &lt;= 12 currently\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="511:13" pos:end="511:22">return <expr pos:start="511:20" pos:end="511:21"><operator pos:start="511:20" pos:end="511:20">-</operator><literal type="number" pos:start="511:21" pos:end="511:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="519:5" pos:end="527:5"><if pos:start="519:5" pos:end="527:5">if <condition pos:start="519:8" pos:end="521:85">(<expr pos:start="519:9" pos:end="521:84"><name pos:start="519:9" pos:end="519:21"><name pos:start="519:9" pos:end="519:13">avctx</name><operator pos:start="519:14" pos:end="519:15">-&gt;</operator><name pos:start="519:16" pos:end="519:21">slices</name></name> <operator pos:start="519:23" pos:end="519:23">&gt;</operator> <literal type="number" pos:start="519:25" pos:end="519:25">1</literal> <operator pos:start="519:27" pos:end="519:28">&amp;&amp;</operator>

        <operator pos:start="521:9" pos:end="521:9">(</operator><name pos:start="521:10" pos:end="521:24"><name pos:start="521:10" pos:end="521:14">avctx</name><operator pos:start="521:15" pos:end="521:16">-&gt;</operator><name pos:start="521:17" pos:end="521:24">codec_id</name></name> <operator pos:start="521:26" pos:end="521:27">==</operator> <name pos:start="521:29" pos:end="521:44">AV_CODEC_ID_FLV1</name> <operator pos:start="521:46" pos:end="521:47">||</operator> <name pos:start="521:49" pos:end="521:63"><name pos:start="521:49" pos:end="521:53">avctx</name><operator pos:start="521:54" pos:end="521:55">-&gt;</operator><name pos:start="521:56" pos:end="521:63">codec_id</name></name> <operator pos:start="521:65" pos:end="521:66">==</operator> <name pos:start="521:68" pos:end="521:83">AV_CODEC_ID_H261</name><operator pos:start="521:84" pos:end="521:84">)</operator></expr>)</condition> <block pos:start="521:87" pos:end="527:5">{<block_content pos:start="523:9" pos:end="525:31">

        <expr_stmt pos:start="523:9" pos:end="523:89"><expr pos:start="523:9" pos:end="523:88"><call pos:start="523:9" pos:end="523:88"><name pos:start="523:9" pos:end="523:14">av_log</name><argument_list pos:start="523:15" pos:end="523:88">(<argument pos:start="523:16" pos:end="523:20"><expr pos:start="523:16" pos:end="523:20"><name pos:start="523:16" pos:end="523:20">avctx</name></expr></argument>, <argument pos:start="523:23" pos:end="523:34"><expr pos:start="523:23" pos:end="523:34"><name pos:start="523:23" pos:end="523:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="523:37" pos:end="523:87"><expr pos:start="523:37" pos:end="523:87"><literal type="string" pos:start="523:37" pos:end="523:87">"Multiple slices are not supported by this codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="525:9" pos:end="525:31">return <expr pos:start="525:16" pos:end="525:30"><call pos:start="525:16" pos:end="525:30"><name pos:start="525:16" pos:end="525:22">AVERROR</name><argument_list pos:start="525:23" pos:end="525:30">(<argument pos:start="525:24" pos:end="525:29"><expr pos:start="525:24" pos:end="525:29"><name pos:start="525:24" pos:end="525:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="531:5" pos:end="547:5"><if pos:start="531:5" pos:end="547:5">if <condition pos:start="531:8" pos:end="539:43">(<expr pos:start="531:9" pos:end="539:42"><name pos:start="531:9" pos:end="531:30"><name pos:start="531:9" pos:end="531:9">s</name><operator pos:start="531:10" pos:end="531:11">-&gt;</operator><name pos:start="531:12" pos:end="531:16">avctx</name><operator pos:start="531:17" pos:end="531:18">-&gt;</operator><name pos:start="531:19" pos:end="531:30">thread_count</name></name> <operator pos:start="531:32" pos:end="531:32">&gt;</operator> <literal type="number" pos:start="531:34" pos:end="531:34">1</literal>         <operator pos:start="531:44" pos:end="531:45">&amp;&amp;</operator>

        <name pos:start="533:9" pos:end="533:19"><name pos:start="533:9" pos:end="533:9">s</name><operator pos:start="533:10" pos:end="533:11">-&gt;</operator><name pos:start="533:12" pos:end="533:19">codec_id</name></name> <operator pos:start="533:21" pos:end="533:22">!=</operator> <name pos:start="533:24" pos:end="533:40">AV_CODEC_ID_MPEG4</name>      <operator pos:start="533:47" pos:end="533:48">&amp;&amp;</operator>

        <name pos:start="535:9" pos:end="535:19"><name pos:start="535:9" pos:end="535:9">s</name><operator pos:start="535:10" pos:end="535:11">-&gt;</operator><name pos:start="535:12" pos:end="535:19">codec_id</name></name> <operator pos:start="535:21" pos:end="535:22">!=</operator> <name pos:start="535:24" pos:end="535:45">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="535:47" pos:end="535:48">&amp;&amp;</operator>

        <name pos:start="537:9" pos:end="537:19"><name pos:start="537:9" pos:end="537:9">s</name><operator pos:start="537:10" pos:end="537:11">-&gt;</operator><name pos:start="537:12" pos:end="537:19">codec_id</name></name> <operator pos:start="537:21" pos:end="537:22">!=</operator> <name pos:start="537:24" pos:end="537:45">AV_CODEC_ID_MPEG2VIDEO</name> <operator pos:start="537:47" pos:end="537:48">&amp;&amp;</operator>

        <operator pos:start="539:9" pos:end="539:9">(</operator><name pos:start="539:10" pos:end="539:20"><name pos:start="539:10" pos:end="539:10">s</name><operator pos:start="539:11" pos:end="539:12">-&gt;</operator><name pos:start="539:13" pos:end="539:20">codec_id</name></name> <operator pos:start="539:22" pos:end="539:23">!=</operator> <name pos:start="539:25" pos:end="539:41">AV_CODEC_ID_H263P</name><operator pos:start="539:42" pos:end="539:42">)</operator></expr>)</condition> <block pos:start="539:45" pos:end="547:5">{<block_content pos:start="541:9" pos:end="545:18">

        <expr_stmt pos:start="541:9" pos:end="543:67"><expr pos:start="541:9" pos:end="543:66"><call pos:start="541:9" pos:end="543:66"><name pos:start="541:9" pos:end="541:14">av_log</name><argument_list pos:start="541:15" pos:end="543:66">(<argument pos:start="541:16" pos:end="541:20"><expr pos:start="541:16" pos:end="541:20"><name pos:start="541:16" pos:end="541:20">avctx</name></expr></argument>, <argument pos:start="541:23" pos:end="541:34"><expr pos:start="541:23" pos:end="541:34"><name pos:start="541:23" pos:end="541:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="543:16" pos:end="543:65"><expr pos:start="543:16" pos:end="543:65"><literal type="string" pos:start="543:16" pos:end="543:65">"multi threaded encoding not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="545:9" pos:end="545:18">return <expr pos:start="545:16" pos:end="545:17"><operator pos:start="545:16" pos:end="545:16">-</operator><literal type="number" pos:start="545:17" pos:end="545:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="551:5" pos:end="561:5"><if pos:start="551:5" pos:end="561:5">if <condition pos:start="551:8" pos:end="551:35">(<expr pos:start="551:9" pos:end="551:34"><name pos:start="551:9" pos:end="551:30"><name pos:start="551:9" pos:end="551:9">s</name><operator pos:start="551:10" pos:end="551:11">-&gt;</operator><name pos:start="551:12" pos:end="551:16">avctx</name><operator pos:start="551:17" pos:end="551:18">-&gt;</operator><name pos:start="551:19" pos:end="551:30">thread_count</name></name> <operator pos:start="551:32" pos:end="551:32">&lt;</operator> <literal type="number" pos:start="551:34" pos:end="551:34">1</literal></expr>)</condition> <block pos:start="551:37" pos:end="561:5">{<block_content pos:start="553:9" pos:end="559:18">

        <expr_stmt pos:start="553:9" pos:end="557:34"><expr pos:start="553:9" pos:end="557:33"><call pos:start="553:9" pos:end="557:33"><name pos:start="553:9" pos:end="553:14">av_log</name><argument_list pos:start="553:15" pos:end="557:33">(<argument pos:start="553:16" pos:end="553:20"><expr pos:start="553:16" pos:end="553:20"><name pos:start="553:16" pos:end="553:20">avctx</name></expr></argument>, <argument pos:start="553:23" pos:end="553:34"><expr pos:start="553:23" pos:end="553:34"><name pos:start="553:23" pos:end="553:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="555:16" pos:end="557:32"><expr pos:start="555:16" pos:end="557:32"><literal type="string" pos:start="555:16" pos:end="555:74">"automatic thread number detection not supported by codec,"</literal>

               <literal type="string" pos:start="557:16" pos:end="557:32">"patch welcome\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="559:9" pos:end="559:18">return <expr pos:start="559:16" pos:end="559:17"><operator pos:start="559:16" pos:end="559:16">-</operator><literal type="number" pos:start="559:17" pos:end="559:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="565:5" pos:end="571:5"><if pos:start="565:5" pos:end="571:5">if <condition pos:start="565:8" pos:end="565:55">(<expr pos:start="565:9" pos:end="565:54"><operator pos:start="565:9" pos:end="565:9">!</operator><name pos:start="565:10" pos:end="565:29"><name pos:start="565:10" pos:end="565:14">avctx</name><operator pos:start="565:15" pos:end="565:16">-&gt;</operator><name pos:start="565:17" pos:end="565:25">time_base</name><operator pos:start="565:26" pos:end="565:26">.</operator><name pos:start="565:27" pos:end="565:29">den</name></name> <operator pos:start="565:31" pos:end="565:32">||</operator> <operator pos:start="565:34" pos:end="565:34">!</operator><name pos:start="565:35" pos:end="565:54"><name pos:start="565:35" pos:end="565:39">avctx</name><operator pos:start="565:40" pos:end="565:41">-&gt;</operator><name pos:start="565:42" pos:end="565:50">time_base</name><operator pos:start="565:51" pos:end="565:51">.</operator><name pos:start="565:52" pos:end="565:54">num</name></name></expr>)</condition> <block pos:start="565:57" pos:end="571:5">{<block_content pos:start="567:9" pos:end="569:18">

        <expr_stmt pos:start="567:9" pos:end="567:59"><expr pos:start="567:9" pos:end="567:58"><call pos:start="567:9" pos:end="567:58"><name pos:start="567:9" pos:end="567:14">av_log</name><argument_list pos:start="567:15" pos:end="567:58">(<argument pos:start="567:16" pos:end="567:20"><expr pos:start="567:16" pos:end="567:20"><name pos:start="567:16" pos:end="567:20">avctx</name></expr></argument>, <argument pos:start="567:23" pos:end="567:34"><expr pos:start="567:23" pos:end="567:34"><name pos:start="567:23" pos:end="567:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="567:37" pos:end="567:57"><expr pos:start="567:37" pos:end="567:57"><literal type="string" pos:start="567:37" pos:end="567:57">"framerate not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="569:9" pos:end="569:18">return <expr pos:start="569:16" pos:end="569:17"><operator pos:start="569:16" pos:end="569:16">-</operator><literal type="number" pos:start="569:17" pos:end="569:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="575:5" pos:end="583:5"><if pos:start="575:5" pos:end="583:5">if <condition pos:start="575:8" pos:end="575:72">(<expr pos:start="575:9" pos:end="575:71"><name pos:start="575:9" pos:end="575:31"><name pos:start="575:9" pos:end="575:13">avctx</name><operator pos:start="575:14" pos:end="575:15">-&gt;</operator><name pos:start="575:16" pos:end="575:31">b_frame_strategy</name></name> <operator pos:start="575:33" pos:end="575:34">&amp;&amp;</operator> <operator pos:start="575:36" pos:end="575:36">(</operator><name pos:start="575:37" pos:end="575:48"><name pos:start="575:37" pos:end="575:41">avctx</name><operator pos:start="575:42" pos:end="575:43">-&gt;</operator><name pos:start="575:44" pos:end="575:48">flags</name></name> <operator pos:start="575:50" pos:end="575:50">&amp;</operator> <name pos:start="575:52" pos:end="575:70">AV_CODEC_FLAG_PASS2</name><operator pos:start="575:71" pos:end="575:71">)</operator></expr>)</condition> <block pos:start="575:74" pos:end="583:5">{<block_content pos:start="577:9" pos:end="581:36">

        <expr_stmt pos:start="577:9" pos:end="579:73"><expr pos:start="577:9" pos:end="579:72"><call pos:start="577:9" pos:end="579:72"><name pos:start="577:9" pos:end="577:14">av_log</name><argument_list pos:start="577:15" pos:end="579:72">(<argument pos:start="577:16" pos:end="577:20"><expr pos:start="577:16" pos:end="577:20"><name pos:start="577:16" pos:end="577:20">avctx</name></expr></argument>, <argument pos:start="577:23" pos:end="577:33"><expr pos:start="577:23" pos:end="577:33"><name pos:start="577:23" pos:end="577:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="579:16" pos:end="579:71"><expr pos:start="579:16" pos:end="579:71"><literal type="string" pos:start="579:16" pos:end="579:71">"notice: b_frame_strategy only affects the first pass\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="581:9" pos:end="581:36"><expr pos:start="581:9" pos:end="581:35"><name pos:start="581:9" pos:end="581:31"><name pos:start="581:9" pos:end="581:13">avctx</name><operator pos:start="581:14" pos:end="581:15">-&gt;</operator><name pos:start="581:16" pos:end="581:31">b_frame_strategy</name></name> <operator pos:start="581:33" pos:end="581:33">=</operator> <literal type="number" pos:start="581:35" pos:end="581:35">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="587:5" pos:end="587:59"><expr pos:start="587:5" pos:end="587:58"><name pos:start="587:5" pos:end="587:5">i</name> <operator pos:start="587:7" pos:end="587:7">=</operator> <call pos:start="587:9" pos:end="587:58"><name pos:start="587:9" pos:end="587:14">av_gcd</name><argument_list pos:start="587:15" pos:end="587:58">(<argument pos:start="587:16" pos:end="587:35"><expr pos:start="587:16" pos:end="587:35"><name pos:start="587:16" pos:end="587:35"><name pos:start="587:16" pos:end="587:20">avctx</name><operator pos:start="587:21" pos:end="587:22">-&gt;</operator><name pos:start="587:23" pos:end="587:31">time_base</name><operator pos:start="587:32" pos:end="587:32">.</operator><name pos:start="587:33" pos:end="587:35">den</name></name></expr></argument>, <argument pos:start="587:38" pos:end="587:57"><expr pos:start="587:38" pos:end="587:57"><name pos:start="587:38" pos:end="587:57"><name pos:start="587:38" pos:end="587:42">avctx</name><operator pos:start="587:43" pos:end="587:44">-&gt;</operator><name pos:start="587:45" pos:end="587:53">time_base</name><operator pos:start="587:54" pos:end="587:54">.</operator><name pos:start="587:55" pos:end="587:57">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="589:5" pos:end="599:5"><if pos:start="589:5" pos:end="599:5">if <condition pos:start="589:8" pos:end="589:14">(<expr pos:start="589:9" pos:end="589:13"><name pos:start="589:9" pos:end="589:9">i</name> <operator pos:start="589:11" pos:end="589:11">&gt;</operator> <literal type="number" pos:start="589:13" pos:end="589:13">1</literal></expr>)</condition> <block pos:start="589:16" pos:end="599:5">{<block_content pos:start="591:9" pos:end="595:34">

        <expr_stmt pos:start="591:9" pos:end="591:79"><expr pos:start="591:9" pos:end="591:78"><call pos:start="591:9" pos:end="591:78"><name pos:start="591:9" pos:end="591:14">av_log</name><argument_list pos:start="591:15" pos:end="591:78">(<argument pos:start="591:16" pos:end="591:20"><expr pos:start="591:16" pos:end="591:20"><name pos:start="591:16" pos:end="591:20">avctx</name></expr></argument>, <argument pos:start="591:23" pos:end="591:33"><expr pos:start="591:23" pos:end="591:33"><name pos:start="591:23" pos:end="591:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="591:36" pos:end="591:77"><expr pos:start="591:36" pos:end="591:77"><literal type="string" pos:start="591:36" pos:end="591:77">"removing common factors from framerate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="593:9" pos:end="593:34"><expr pos:start="593:9" pos:end="593:33"><name pos:start="593:9" pos:end="593:28"><name pos:start="593:9" pos:end="593:13">avctx</name><operator pos:start="593:14" pos:end="593:15">-&gt;</operator><name pos:start="593:16" pos:end="593:24">time_base</name><operator pos:start="593:25" pos:end="593:25">.</operator><name pos:start="593:26" pos:end="593:28">den</name></name> <operator pos:start="593:30" pos:end="593:31">/=</operator> <name pos:start="593:33" pos:end="593:33">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="595:9" pos:end="595:34"><expr pos:start="595:9" pos:end="595:33"><name pos:start="595:9" pos:end="595:28"><name pos:start="595:9" pos:end="595:13">avctx</name><operator pos:start="595:14" pos:end="595:15">-&gt;</operator><name pos:start="595:16" pos:end="595:24">time_base</name><operator pos:start="595:25" pos:end="595:25">.</operator><name pos:start="595:26" pos:end="595:28">num</name></name> <operator pos:start="595:30" pos:end="595:31">/=</operator> <name pos:start="595:33" pos:end="595:33">i</name></expr>;</expr_stmt>

        <comment type="line" pos:start="597:9" pos:end="597:20">//return -1;</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="603:5" pos:end="626:0"><if pos:start="603:5" pos:end="613:5">if <condition pos:start="603:8" pos:end="605:82">(<expr pos:start="603:9" pos:end="605:81"><name pos:start="603:9" pos:end="603:21"><name pos:start="603:9" pos:end="603:9">s</name><operator pos:start="603:10" pos:end="603:11">-&gt;</operator><name pos:start="603:12" pos:end="603:21">mpeg_quant</name></name> <operator pos:start="603:23" pos:end="603:24">||</operator> <name pos:start="603:26" pos:end="603:36"><name pos:start="603:26" pos:end="603:26">s</name><operator pos:start="603:27" pos:end="603:28">-&gt;</operator><name pos:start="603:29" pos:end="603:36">codec_id</name></name> <operator pos:start="603:38" pos:end="603:39">==</operator> <name pos:start="603:41" pos:end="603:62">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="603:64" pos:end="603:65">||</operator>

        <name pos:start="605:9" pos:end="605:19"><name pos:start="605:9" pos:end="605:9">s</name><operator pos:start="605:10" pos:end="605:11">-&gt;</operator><name pos:start="605:12" pos:end="605:19">codec_id</name></name> <operator pos:start="605:21" pos:end="605:22">==</operator> <name pos:start="605:24" pos:end="605:45">AV_CODEC_ID_MPEG2VIDEO</name> <operator pos:start="605:47" pos:end="605:48">||</operator> <name pos:start="605:50" pos:end="605:60"><name pos:start="605:50" pos:end="605:50">s</name><operator pos:start="605:51" pos:end="605:52">-&gt;</operator><name pos:start="605:53" pos:end="605:60">codec_id</name></name> <operator pos:start="605:62" pos:end="605:63">==</operator> <name pos:start="605:65" pos:end="605:81">AV_CODEC_ID_MJPEG</name></expr>)</condition> <block pos:start="605:84" pos:end="613:5">{<block_content pos:start="609:9" pos:end="611:32">

        <comment type="line" pos:start="607:9" pos:end="607:30">// (a + x * 3 / 8) / x</comment>

        <expr_stmt pos:start="609:9" pos:end="609:58"><expr pos:start="609:9" pos:end="609:57"><name pos:start="609:9" pos:end="609:27"><name pos:start="609:9" pos:end="609:9">s</name><operator pos:start="609:10" pos:end="609:11">-&gt;</operator><name pos:start="609:12" pos:end="609:27">intra_quant_bias</name></name> <operator pos:start="609:29" pos:end="609:29">=</operator> <literal type="number" pos:start="609:31" pos:end="609:31">3</literal> <operator pos:start="609:33" pos:end="609:34">&lt;&lt;</operator> <operator pos:start="609:36" pos:end="609:36">(</operator><name pos:start="609:37" pos:end="609:52">QUANT_BIAS_SHIFT</name> <operator pos:start="609:54" pos:end="609:54">-</operator> <literal type="number" pos:start="609:56" pos:end="609:56">3</literal><operator pos:start="609:57" pos:end="609:57">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="611:9" pos:end="611:32"><expr pos:start="611:9" pos:end="611:31"><name pos:start="611:9" pos:end="611:27"><name pos:start="611:9" pos:end="611:9">s</name><operator pos:start="611:10" pos:end="611:11">-&gt;</operator><name pos:start="611:12" pos:end="611:27">inter_quant_bias</name></name> <operator pos:start="611:29" pos:end="611:29">=</operator> <literal type="number" pos:start="611:31" pos:end="611:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="613:7" pos:end="626:0">else <block pos:start="613:12" pos:end="626:0">{<block_content pos:start="615:9" pos:end="619:61">

        <expr_stmt pos:start="615:9" pos:end="615:32"><expr pos:start="615:9" pos:end="615:31"><name pos:start="615:9" pos:end="615:27"><name pos:start="615:9" pos:end="615:9">s</name><operator pos:start="615:10" pos:end="615:11">-&gt;</operator><name pos:start="615:12" pos:end="615:27">intra_quant_bias</name></name> <operator pos:start="615:29" pos:end="615:29">=</operator> <literal type="number" pos:start="615:31" pos:end="615:31">0</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="617:9" pos:end="617:26">// (a - x / 4) / x</comment>

        <expr_stmt pos:start="619:9" pos:end="619:61"><expr pos:start="619:9" pos:end="619:60"><name pos:start="619:9" pos:end="619:27"><name pos:start="619:9" pos:end="619:9">s</name><operator pos:start="619:10" pos:end="619:11">-&gt;</operator><name pos:start="619:12" pos:end="619:27">inter_quant_bias</name></name> <operator pos:start="619:29" pos:end="619:29">=</operator> <operator pos:start="619:31" pos:end="619:31">-</operator><operator pos:start="619:32" pos:end="619:32">(</operator><literal type="number" pos:start="619:33" pos:end="619:33">1</literal> <operator pos:start="619:35" pos:end="619:36">&lt;&lt;</operator> <operator pos:start="619:38" pos:end="619:38">(</operator><name pos:start="619:39" pos:end="619:54">QUANT_BIAS_SHIFT</name> <operator pos:start="619:56" pos:end="619:56">-</operator> <literal type="number" pos:start="619:58" pos:end="619:58">2</literal><operator pos:start="619:59" pos:end="619:59">)</operator><operator pos:start="619:60" pos:end="619:60">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:if pos:start="625:1" pos:end="625:21">#<cpp:directive pos:start="625:2" pos:end="625:3">if</cpp:directive> <expr pos:start="625:5" pos:end="625:21"><name pos:start="625:5" pos:end="625:21">FF_API_QUANT_BIAS</name></expr></cpp:if>

<macro pos:start="627:1" pos:end="627:31"><name pos:start="627:1" pos:end="627:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="629:5" pos:end="631:54"><if pos:start="629:5" pos:end="631:54">if <condition pos:start="629:8" pos:end="629:57">(<expr pos:start="629:9" pos:end="629:56"><name pos:start="629:9" pos:end="629:31"><name pos:start="629:9" pos:end="629:13">avctx</name><operator pos:start="629:14" pos:end="629:15">-&gt;</operator><name pos:start="629:16" pos:end="629:31">intra_quant_bias</name></name> <operator pos:start="629:33" pos:end="629:34">!=</operator> <name pos:start="629:36" pos:end="629:56">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="631:9" pos:end="631:54"><block_content pos:start="631:9" pos:end="631:54">

        <expr_stmt pos:start="631:9" pos:end="631:54"><expr pos:start="631:9" pos:end="631:53"><name pos:start="631:9" pos:end="631:27"><name pos:start="631:9" pos:end="631:9">s</name><operator pos:start="631:10" pos:end="631:11">-&gt;</operator><name pos:start="631:12" pos:end="631:27">intra_quant_bias</name></name> <operator pos:start="631:29" pos:end="631:29">=</operator> <name pos:start="631:31" pos:end="631:53"><name pos:start="631:31" pos:end="631:35">avctx</name><operator pos:start="631:36" pos:end="631:37">-&gt;</operator><name pos:start="631:38" pos:end="631:53">intra_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="633:5" pos:end="635:54"><if pos:start="633:5" pos:end="635:54">if <condition pos:start="633:8" pos:end="633:57">(<expr pos:start="633:9" pos:end="633:56"><name pos:start="633:9" pos:end="633:31"><name pos:start="633:9" pos:end="633:13">avctx</name><operator pos:start="633:14" pos:end="633:15">-&gt;</operator><name pos:start="633:16" pos:end="633:31">inter_quant_bias</name></name> <operator pos:start="633:33" pos:end="633:34">!=</operator> <name pos:start="633:36" pos:end="633:56">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="635:9" pos:end="635:54"><block_content pos:start="635:9" pos:end="635:54">

        <expr_stmt pos:start="635:9" pos:end="635:54"><expr pos:start="635:9" pos:end="635:53"><name pos:start="635:9" pos:end="635:27"><name pos:start="635:9" pos:end="635:9">s</name><operator pos:start="635:10" pos:end="635:11">-&gt;</operator><name pos:start="635:12" pos:end="635:27">inter_quant_bias</name></name> <operator pos:start="635:29" pos:end="635:29">=</operator> <name pos:start="635:31" pos:end="635:53"><name pos:start="635:31" pos:end="635:35">avctx</name><operator pos:start="635:36" pos:end="635:37">-&gt;</operator><name pos:start="635:38" pos:end="635:53">inter_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<macro pos:start="637:1" pos:end="640:0"><name pos:start="637:1" pos:end="640:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="639:1" pos:end="639:6">#<cpp:directive pos:start="639:2" pos:end="639:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="643:5" pos:end="659:5"><if pos:start="643:5" pos:end="659:5">if <condition pos:start="643:8" pos:end="645:48">(<expr pos:start="643:9" pos:end="645:47"><name pos:start="643:9" pos:end="643:23"><name pos:start="643:9" pos:end="643:13">avctx</name><operator pos:start="643:14" pos:end="643:15">-&gt;</operator><name pos:start="643:16" pos:end="643:23">codec_id</name></name> <operator pos:start="643:25" pos:end="643:26">==</operator> <name pos:start="643:28" pos:end="643:44">AV_CODEC_ID_MPEG4</name> <operator pos:start="643:46" pos:end="643:47">&amp;&amp;</operator>

        <name pos:start="645:9" pos:end="645:31"><name pos:start="645:9" pos:end="645:9">s</name><operator pos:start="645:10" pos:end="645:11">-&gt;</operator><name pos:start="645:12" pos:end="645:16">avctx</name><operator pos:start="645:17" pos:end="645:18">-&gt;</operator><name pos:start="645:19" pos:end="645:27">time_base</name><operator pos:start="645:28" pos:end="645:28">.</operator><name pos:start="645:29" pos:end="645:31">den</name></name> <operator pos:start="645:33" pos:end="645:33">&gt;</operator> <operator pos:start="645:35" pos:end="645:35">(</operator><literal type="number" pos:start="645:36" pos:end="645:36">1</literal> <operator pos:start="645:38" pos:end="645:39">&lt;&lt;</operator> <literal type="number" pos:start="645:41" pos:end="645:42">16</literal><operator pos:start="645:43" pos:end="645:43">)</operator> <operator pos:start="645:45" pos:end="645:45">-</operator> <literal type="number" pos:start="645:47" pos:end="645:47">1</literal></expr>)</condition> <block pos:start="645:50" pos:end="659:5">{<block_content pos:start="647:9" pos:end="657:18">

        <expr_stmt pos:start="647:9" pos:end="655:30"><expr pos:start="647:9" pos:end="655:29"><call pos:start="647:9" pos:end="655:29"><name pos:start="647:9" pos:end="647:14">av_log</name><argument_list pos:start="647:15" pos:end="655:29">(<argument pos:start="647:16" pos:end="647:20"><expr pos:start="647:16" pos:end="647:20"><name pos:start="647:16" pos:end="647:20">avctx</name></expr></argument>, <argument pos:start="647:23" pos:end="647:34"><expr pos:start="647:23" pos:end="647:34"><name pos:start="647:23" pos:end="647:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="649:16" pos:end="653:24"><expr pos:start="649:16" pos:end="653:24"><literal type="string" pos:start="649:16" pos:end="649:66">"timebase %d/%d not supported by MPEG 4 standard, "</literal>

               <literal type="string" pos:start="651:16" pos:end="651:73">"the maximum admitted value for the timebase denominator "</literal>

               <literal type="string" pos:start="653:16" pos:end="653:24">"is %d\n"</literal></expr></argument>, <argument pos:start="653:27" pos:end="653:49"><expr pos:start="653:27" pos:end="653:49"><name pos:start="653:27" pos:end="653:49"><name pos:start="653:27" pos:end="653:27">s</name><operator pos:start="653:28" pos:end="653:29">-&gt;</operator><name pos:start="653:30" pos:end="653:34">avctx</name><operator pos:start="653:35" pos:end="653:36">-&gt;</operator><name pos:start="653:37" pos:end="653:45">time_base</name><operator pos:start="653:46" pos:end="653:46">.</operator><name pos:start="653:47" pos:end="653:49">num</name></name></expr></argument>, <argument pos:start="653:52" pos:end="653:74"><expr pos:start="653:52" pos:end="653:74"><name pos:start="653:52" pos:end="653:74"><name pos:start="653:52" pos:end="653:52">s</name><operator pos:start="653:53" pos:end="653:54">-&gt;</operator><name pos:start="653:55" pos:end="653:59">avctx</name><operator pos:start="653:60" pos:end="653:61">-&gt;</operator><name pos:start="653:62" pos:end="653:70">time_base</name><operator pos:start="653:71" pos:end="653:71">.</operator><name pos:start="653:72" pos:end="653:74">den</name></name></expr></argument>,

               <argument pos:start="655:16" pos:end="655:28"><expr pos:start="655:16" pos:end="655:28"><operator pos:start="655:16" pos:end="655:16">(</operator><literal type="number" pos:start="655:17" pos:end="655:17">1</literal> <operator pos:start="655:19" pos:end="655:20">&lt;&lt;</operator> <literal type="number" pos:start="655:22" pos:end="655:23">16</literal><operator pos:start="655:24" pos:end="655:24">)</operator> <operator pos:start="655:26" pos:end="655:26">-</operator> <literal type="number" pos:start="655:28" pos:end="655:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="657:9" pos:end="657:18">return <expr pos:start="657:16" pos:end="657:17"><operator pos:start="657:16" pos:end="657:16">-</operator><literal type="number" pos:start="657:17" pos:end="657:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="661:5" pos:end="661:70"><expr pos:start="661:5" pos:end="661:69"><name pos:start="661:5" pos:end="661:26"><name pos:start="661:5" pos:end="661:5">s</name><operator pos:start="661:6" pos:end="661:7">-&gt;</operator><name pos:start="661:8" pos:end="661:26">time_increment_bits</name></name> <operator pos:start="661:28" pos:end="661:28">=</operator> <call pos:start="661:30" pos:end="661:65"><name pos:start="661:30" pos:end="661:36">av_log2</name><argument_list pos:start="661:37" pos:end="661:65">(<argument pos:start="661:38" pos:end="661:64"><expr pos:start="661:38" pos:end="661:64"><name pos:start="661:38" pos:end="661:60"><name pos:start="661:38" pos:end="661:38">s</name><operator pos:start="661:39" pos:end="661:40">-&gt;</operator><name pos:start="661:41" pos:end="661:45">avctx</name><operator pos:start="661:46" pos:end="661:47">-&gt;</operator><name pos:start="661:48" pos:end="661:56">time_base</name><operator pos:start="661:57" pos:end="661:57">.</operator><name pos:start="661:58" pos:end="661:60">den</name></name> <operator pos:start="661:62" pos:end="661:62">-</operator> <literal type="number" pos:start="661:64" pos:end="661:64">1</literal></expr></argument>)</argument_list></call> <operator pos:start="661:67" pos:end="661:67">+</operator> <literal type="number" pos:start="661:69" pos:end="661:69">1</literal></expr>;</expr_stmt>



    <switch pos:start="665:5" pos:end="931:5">switch <condition pos:start="665:12" pos:end="665:29">(<expr pos:start="665:13" pos:end="665:28"><name pos:start="665:13" pos:end="665:28"><name pos:start="665:13" pos:end="665:17">avctx</name><operator pos:start="665:18" pos:end="665:19">-&gt;</operator><name pos:start="665:20" pos:end="665:24">codec</name><operator pos:start="665:25" pos:end="665:26">-&gt;</operator><name pos:start="665:27" pos:end="665:28">id</name></name></expr>)</condition> <block pos:start="665:31" pos:end="931:5">{<block_content pos:start="667:5" pos:end="929:18">

    <case pos:start="667:5" pos:end="667:32">case <expr pos:start="667:10" pos:end="667:31"><name pos:start="667:10" pos:end="667:31">AV_CODEC_ID_MPEG1VIDEO</name></expr>:</case>

        <expr_stmt pos:start="669:9" pos:end="669:34"><expr pos:start="669:9" pos:end="669:33"><name pos:start="669:9" pos:end="669:21"><name pos:start="669:9" pos:end="669:9">s</name><operator pos:start="669:10" pos:end="669:11">-&gt;</operator><name pos:start="669:12" pos:end="669:21">out_format</name></name> <operator pos:start="669:23" pos:end="669:23">=</operator> <name pos:start="669:25" pos:end="669:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="671:9" pos:end="671:70"><expr pos:start="671:9" pos:end="671:69"><name pos:start="671:9" pos:end="671:20"><name pos:start="671:9" pos:end="671:9">s</name><operator pos:start="671:10" pos:end="671:11">-&gt;</operator><name pos:start="671:12" pos:end="671:20">low_delay</name></name>  <operator pos:start="671:23" pos:end="671:23">=</operator> <operator pos:start="671:25" pos:end="671:25">!</operator><operator pos:start="671:26" pos:end="671:26">!</operator><operator pos:start="671:27" pos:end="671:27">(</operator><name pos:start="671:28" pos:end="671:42"><name pos:start="671:28" pos:end="671:28">s</name><operator pos:start="671:29" pos:end="671:30">-&gt;</operator><name pos:start="671:31" pos:end="671:35">avctx</name><operator pos:start="671:36" pos:end="671:37">-&gt;</operator><name pos:start="671:38" pos:end="671:42">flags</name></name> <operator pos:start="671:44" pos:end="671:44">&amp;</operator> <name pos:start="671:46" pos:end="671:68">AV_CODEC_FLAG_LOW_DELAY</name><operator pos:start="671:69" pos:end="671:69">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="673:9" pos:end="673:65"><expr pos:start="673:9" pos:end="673:64"><name pos:start="673:9" pos:end="673:20"><name pos:start="673:9" pos:end="673:13">avctx</name><operator pos:start="673:14" pos:end="673:15">-&gt;</operator><name pos:start="673:16" pos:end="673:20">delay</name></name>  <operator pos:start="673:23" pos:end="673:23">=</operator> <ternary pos:start="673:25" pos:end="673:64"><condition pos:start="673:25" pos:end="673:38"><expr pos:start="673:25" pos:end="673:36"><name pos:start="673:25" pos:end="673:36"><name pos:start="673:25" pos:end="673:25">s</name><operator pos:start="673:26" pos:end="673:27">-&gt;</operator><name pos:start="673:28" pos:end="673:36">low_delay</name></name></expr> ?</condition><then pos:start="673:40" pos:end="673:40"> <expr pos:start="673:40" pos:end="673:40"><literal type="number" pos:start="673:40" pos:end="673:40">0</literal></expr> </then><else pos:start="673:42" pos:end="673:64">: <expr pos:start="673:44" pos:end="673:64"><operator pos:start="673:44" pos:end="673:44">(</operator><name pos:start="673:45" pos:end="673:59"><name pos:start="673:45" pos:end="673:45">s</name><operator pos:start="673:46" pos:end="673:47">-&gt;</operator><name pos:start="673:48" pos:end="673:59">max_b_frames</name></name> <operator pos:start="673:61" pos:end="673:61">+</operator> <literal type="number" pos:start="673:63" pos:end="673:63">1</literal><operator pos:start="673:64" pos:end="673:64">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="675:9" pos:end="675:14">break;</break>

    <case pos:start="677:5" pos:end="677:32">case <expr pos:start="677:10" pos:end="677:31"><name pos:start="677:10" pos:end="677:31">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <expr_stmt pos:start="679:9" pos:end="679:34"><expr pos:start="679:9" pos:end="679:33"><name pos:start="679:9" pos:end="679:21"><name pos:start="679:9" pos:end="679:9">s</name><operator pos:start="679:10" pos:end="679:11">-&gt;</operator><name pos:start="679:12" pos:end="679:21">out_format</name></name> <operator pos:start="679:23" pos:end="679:23">=</operator> <name pos:start="679:25" pos:end="679:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="681:9" pos:end="681:70"><expr pos:start="681:9" pos:end="681:69"><name pos:start="681:9" pos:end="681:20"><name pos:start="681:9" pos:end="681:9">s</name><operator pos:start="681:10" pos:end="681:11">-&gt;</operator><name pos:start="681:12" pos:end="681:20">low_delay</name></name>  <operator pos:start="681:23" pos:end="681:23">=</operator> <operator pos:start="681:25" pos:end="681:25">!</operator><operator pos:start="681:26" pos:end="681:26">!</operator><operator pos:start="681:27" pos:end="681:27">(</operator><name pos:start="681:28" pos:end="681:42"><name pos:start="681:28" pos:end="681:28">s</name><operator pos:start="681:29" pos:end="681:30">-&gt;</operator><name pos:start="681:31" pos:end="681:35">avctx</name><operator pos:start="681:36" pos:end="681:37">-&gt;</operator><name pos:start="681:38" pos:end="681:42">flags</name></name> <operator pos:start="681:44" pos:end="681:44">&amp;</operator> <name pos:start="681:46" pos:end="681:68">AV_CODEC_FLAG_LOW_DELAY</name><operator pos:start="681:69" pos:end="681:69">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="683:9" pos:end="683:65"><expr pos:start="683:9" pos:end="683:64"><name pos:start="683:9" pos:end="683:20"><name pos:start="683:9" pos:end="683:13">avctx</name><operator pos:start="683:14" pos:end="683:15">-&gt;</operator><name pos:start="683:16" pos:end="683:20">delay</name></name>  <operator pos:start="683:23" pos:end="683:23">=</operator> <ternary pos:start="683:25" pos:end="683:64"><condition pos:start="683:25" pos:end="683:38"><expr pos:start="683:25" pos:end="683:36"><name pos:start="683:25" pos:end="683:36"><name pos:start="683:25" pos:end="683:25">s</name><operator pos:start="683:26" pos:end="683:27">-&gt;</operator><name pos:start="683:28" pos:end="683:36">low_delay</name></name></expr> ?</condition><then pos:start="683:40" pos:end="683:40"> <expr pos:start="683:40" pos:end="683:40"><literal type="number" pos:start="683:40" pos:end="683:40">0</literal></expr> </then><else pos:start="683:42" pos:end="683:64">: <expr pos:start="683:44" pos:end="683:64"><operator pos:start="683:44" pos:end="683:44">(</operator><name pos:start="683:45" pos:end="683:59"><name pos:start="683:45" pos:end="683:45">s</name><operator pos:start="683:46" pos:end="683:47">-&gt;</operator><name pos:start="683:48" pos:end="683:59">max_b_frames</name></name> <operator pos:start="683:61" pos:end="683:61">+</operator> <literal type="number" pos:start="683:63" pos:end="683:63">1</literal><operator pos:start="683:64" pos:end="683:64">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="685:9" pos:end="685:26"><expr pos:start="685:9" pos:end="685:25"><name pos:start="685:9" pos:end="685:19"><name pos:start="685:9" pos:end="685:9">s</name><operator pos:start="685:10" pos:end="685:11">-&gt;</operator><name pos:start="685:12" pos:end="685:19">rtp_mode</name></name>   <operator pos:start="685:23" pos:end="685:23">=</operator> <literal type="number" pos:start="685:25" pos:end="685:25">1</literal></expr>;</expr_stmt>

        <break pos:start="687:9" pos:end="687:14">break;</break>

    <case pos:start="689:5" pos:end="689:27">case <expr pos:start="689:10" pos:end="689:26"><name pos:start="689:10" pos:end="689:26">AV_CODEC_ID_MJPEG</name></expr>:</case>

        <expr_stmt pos:start="691:9" pos:end="691:34"><expr pos:start="691:9" pos:end="691:33"><name pos:start="691:9" pos:end="691:21"><name pos:start="691:9" pos:end="691:9">s</name><operator pos:start="691:10" pos:end="691:11">-&gt;</operator><name pos:start="691:12" pos:end="691:21">out_format</name></name> <operator pos:start="691:23" pos:end="691:23">=</operator> <name pos:start="691:25" pos:end="691:33">FMT_MJPEG</name></expr>;</expr_stmt>

        <expr_stmt pos:start="693:9" pos:end="693:26"><expr pos:start="693:9" pos:end="693:25"><name pos:start="693:9" pos:end="693:21"><name pos:start="693:9" pos:end="693:9">s</name><operator pos:start="693:10" pos:end="693:11">-&gt;</operator><name pos:start="693:12" pos:end="693:21">intra_only</name></name> <operator pos:start="693:23" pos:end="693:23">=</operator> <literal type="number" pos:start="693:25" pos:end="693:25">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="693:28" pos:end="693:58">/* force intra only for jpeg */</comment>

        <if_stmt pos:start="695:9" pos:end="699:22"><if pos:start="695:9" pos:end="699:22">if <condition pos:start="695:12" pos:end="697:40">(<expr pos:start="695:13" pos:end="697:39"><operator pos:start="695:13" pos:end="695:13">!</operator><name pos:start="695:14" pos:end="695:33">CONFIG_MJPEG_ENCODER</name> <operator pos:start="695:35" pos:end="695:36">||</operator>

            <call pos:start="697:13" pos:end="697:35"><name pos:start="697:13" pos:end="697:32">ff_mjpeg_encode_init</name><argument_list pos:start="697:33" pos:end="697:35">(<argument pos:start="697:34" pos:end="697:34"><expr pos:start="697:34" pos:end="697:34"><name pos:start="697:34" pos:end="697:34">s</name></expr></argument>)</argument_list></call> <operator pos:start="697:37" pos:end="697:37">&lt;</operator> <literal type="number" pos:start="697:39" pos:end="697:39">0</literal></expr>)</condition><block type="pseudo" pos:start="699:13" pos:end="699:22"><block_content pos:start="699:13" pos:end="699:22">

            <return pos:start="699:13" pos:end="699:22">return <expr pos:start="699:20" pos:end="699:21"><operator pos:start="699:20" pos:end="699:20">-</operator><literal type="number" pos:start="699:21" pos:end="699:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="701:9" pos:end="701:25"><expr pos:start="701:9" pos:end="701:24"><name pos:start="701:9" pos:end="701:20"><name pos:start="701:9" pos:end="701:13">avctx</name><operator pos:start="701:14" pos:end="701:15">-&gt;</operator><name pos:start="701:16" pos:end="701:20">delay</name></name> <operator pos:start="701:22" pos:end="701:22">=</operator> <literal type="number" pos:start="701:24" pos:end="701:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="703:9" pos:end="703:25"><expr pos:start="703:9" pos:end="703:24"><name pos:start="703:9" pos:end="703:20"><name pos:start="703:9" pos:end="703:9">s</name><operator pos:start="703:10" pos:end="703:11">-&gt;</operator><name pos:start="703:12" pos:end="703:20">low_delay</name></name> <operator pos:start="703:22" pos:end="703:22">=</operator> <literal type="number" pos:start="703:24" pos:end="703:24">1</literal></expr>;</expr_stmt>

        <break pos:start="705:9" pos:end="705:14">break;</break>

    <case pos:start="707:5" pos:end="707:26">case <expr pos:start="707:10" pos:end="707:25"><name pos:start="707:10" pos:end="707:25">AV_CODEC_ID_H261</name></expr>:</case>

        <if_stmt pos:start="709:9" pos:end="711:22"><if pos:start="709:9" pos:end="711:22">if <condition pos:start="709:12" pos:end="709:33">(<expr pos:start="709:13" pos:end="709:32"><operator pos:start="709:13" pos:end="709:13">!</operator><name pos:start="709:14" pos:end="709:32">CONFIG_H261_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="711:13" pos:end="711:22"><block_content pos:start="711:13" pos:end="711:22">

            <return pos:start="711:13" pos:end="711:22">return <expr pos:start="711:20" pos:end="711:21"><operator pos:start="711:20" pos:end="711:20">-</operator><literal type="number" pos:start="711:21" pos:end="711:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="713:9" pos:end="725:9"><if pos:start="713:9" pos:end="725:9">if <condition pos:start="713:12" pos:end="713:64">(<expr pos:start="713:13" pos:end="713:63"><call pos:start="713:13" pos:end="713:59"><name pos:start="713:13" pos:end="713:38">ff_h261_get_picture_format</name><argument_list pos:start="713:39" pos:end="713:59">(<argument pos:start="713:40" pos:end="713:47"><expr pos:start="713:40" pos:end="713:47"><name pos:start="713:40" pos:end="713:47"><name pos:start="713:40" pos:end="713:40">s</name><operator pos:start="713:41" pos:end="713:42">-&gt;</operator><name pos:start="713:43" pos:end="713:47">width</name></name></expr></argument>, <argument pos:start="713:50" pos:end="713:58"><expr pos:start="713:50" pos:end="713:58"><name pos:start="713:50" pos:end="713:58"><name pos:start="713:50" pos:end="713:50">s</name><operator pos:start="713:51" pos:end="713:52">-&gt;</operator><name pos:start="713:53" pos:end="713:58">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="713:61" pos:end="713:61">&lt;</operator> <literal type="number" pos:start="713:63" pos:end="713:63">0</literal></expr>)</condition> <block pos:start="713:66" pos:end="725:9">{<block_content pos:start="715:13" pos:end="723:22">

            <expr_stmt pos:start="715:13" pos:end="721:41"><expr pos:start="715:13" pos:end="721:40"><call pos:start="715:13" pos:end="721:40"><name pos:start="715:13" pos:end="715:18">av_log</name><argument_list pos:start="715:19" pos:end="721:40">(<argument pos:start="715:20" pos:end="715:24"><expr pos:start="715:20" pos:end="715:24"><name pos:start="715:20" pos:end="715:24">avctx</name></expr></argument>, <argument pos:start="715:27" pos:end="715:38"><expr pos:start="715:27" pos:end="715:38"><name pos:start="715:27" pos:end="715:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="717:20" pos:end="719:69"><expr pos:start="717:20" pos:end="719:69"><literal type="string" pos:start="717:20" pos:end="717:78">"The specified picture size of %dx%d is not valid for the "</literal>

                   <literal type="string" pos:start="719:20" pos:end="719:69">"H.261 codec.\nValid sizes are 176x144, 352x288\n"</literal></expr></argument>,

                    <argument pos:start="721:21" pos:end="721:28"><expr pos:start="721:21" pos:end="721:28"><name pos:start="721:21" pos:end="721:28"><name pos:start="721:21" pos:end="721:21">s</name><operator pos:start="721:22" pos:end="721:23">-&gt;</operator><name pos:start="721:24" pos:end="721:28">width</name></name></expr></argument>, <argument pos:start="721:31" pos:end="721:39"><expr pos:start="721:31" pos:end="721:39"><name pos:start="721:31" pos:end="721:39"><name pos:start="721:31" pos:end="721:31">s</name><operator pos:start="721:32" pos:end="721:33">-&gt;</operator><name pos:start="721:34" pos:end="721:39">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="723:13" pos:end="723:22">return <expr pos:start="723:20" pos:end="723:21"><operator pos:start="723:20" pos:end="723:20">-</operator><literal type="number" pos:start="723:21" pos:end="723:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="727:9" pos:end="727:33"><expr pos:start="727:9" pos:end="727:32"><name pos:start="727:9" pos:end="727:21"><name pos:start="727:9" pos:end="727:9">s</name><operator pos:start="727:10" pos:end="727:11">-&gt;</operator><name pos:start="727:12" pos:end="727:21">out_format</name></name> <operator pos:start="727:23" pos:end="727:23">=</operator> <name pos:start="727:25" pos:end="727:32">FMT_H261</name></expr>;</expr_stmt>

        <expr_stmt pos:start="729:9" pos:end="729:26"><expr pos:start="729:9" pos:end="729:25"><name pos:start="729:9" pos:end="729:20"><name pos:start="729:9" pos:end="729:13">avctx</name><operator pos:start="729:14" pos:end="729:15">-&gt;</operator><name pos:start="729:16" pos:end="729:20">delay</name></name>  <operator pos:start="729:23" pos:end="729:23">=</operator> <literal type="number" pos:start="729:25" pos:end="729:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="731:9" pos:end="731:26"><expr pos:start="731:9" pos:end="731:25"><name pos:start="731:9" pos:end="731:20"><name pos:start="731:9" pos:end="731:9">s</name><operator pos:start="731:10" pos:end="731:11">-&gt;</operator><name pos:start="731:12" pos:end="731:20">low_delay</name></name>  <operator pos:start="731:23" pos:end="731:23">=</operator> <literal type="number" pos:start="731:25" pos:end="731:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="733:9" pos:end="733:26"><expr pos:start="733:9" pos:end="733:25"><name pos:start="733:9" pos:end="733:19"><name pos:start="733:9" pos:end="733:9">s</name><operator pos:start="733:10" pos:end="733:11">-&gt;</operator><name pos:start="733:12" pos:end="733:19">rtp_mode</name></name>   <operator pos:start="733:23" pos:end="733:23">=</operator> <literal type="number" pos:start="733:25" pos:end="733:25">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="733:28" pos:end="733:62">/* Sliced encoding not supported */</comment>

        <break pos:start="735:9" pos:end="735:14">break;</break>

    <case pos:start="737:5" pos:end="737:26">case <expr pos:start="737:10" pos:end="737:25"><name pos:start="737:10" pos:end="737:25">AV_CODEC_ID_H263</name></expr>:</case>

        <if_stmt pos:start="739:9" pos:end="741:18"><if pos:start="739:9" pos:end="741:18">if <condition pos:start="739:12" pos:end="739:33">(<expr pos:start="739:13" pos:end="739:32"><operator pos:start="739:13" pos:end="739:13">!</operator><name pos:start="739:14" pos:end="739:32">CONFIG_H263_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="741:9" pos:end="741:18"><block_content pos:start="741:9" pos:end="741:18">

        <return pos:start="741:9" pos:end="741:18">return <expr pos:start="741:16" pos:end="741:17"><operator pos:start="741:16" pos:end="741:16">-</operator><literal type="number" pos:start="741:17" pos:end="741:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="743:9" pos:end="759:9"><if pos:start="743:9" pos:end="759:9">if <condition pos:start="743:12" pos:end="745:55">(<expr pos:start="743:13" pos:end="745:54"><call pos:start="743:13" pos:end="745:49"><name pos:start="743:13" pos:end="743:28">ff_match_2uint16</name><argument_list pos:start="743:29" pos:end="745:49">(<argument pos:start="743:30" pos:end="743:43"><expr pos:start="743:30" pos:end="743:43"><name pos:start="743:30" pos:end="743:43">ff_h263_format</name></expr></argument>, <argument pos:start="743:46" pos:end="743:75"><expr pos:start="743:46" pos:end="743:75"><call pos:start="743:46" pos:end="743:75"><name pos:start="743:46" pos:end="743:59">FF_ARRAY_ELEMS</name><argument_list pos:start="743:60" pos:end="743:75">(<argument pos:start="743:61" pos:end="743:74"><expr pos:start="743:61" pos:end="743:74"><name pos:start="743:61" pos:end="743:74">ff_h263_format</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="745:30" pos:end="745:37"><expr pos:start="745:30" pos:end="745:37"><name pos:start="745:30" pos:end="745:37"><name pos:start="745:30" pos:end="745:30">s</name><operator pos:start="745:31" pos:end="745:32">-&gt;</operator><name pos:start="745:33" pos:end="745:37">width</name></name></expr></argument>, <argument pos:start="745:40" pos:end="745:48"><expr pos:start="745:40" pos:end="745:48"><name pos:start="745:40" pos:end="745:48"><name pos:start="745:40" pos:end="745:40">s</name><operator pos:start="745:41" pos:end="745:42">-&gt;</operator><name pos:start="745:43" pos:end="745:48">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="745:51" pos:end="745:52">==</operator> <literal type="number" pos:start="745:54" pos:end="745:54">8</literal></expr>)</condition> <block pos:start="745:57" pos:end="759:9">{<block_content pos:start="747:13" pos:end="757:22">

            <expr_stmt pos:start="747:13" pos:end="755:57"><expr pos:start="747:13" pos:end="755:56"><call pos:start="747:13" pos:end="755:56"><name pos:start="747:13" pos:end="747:18">av_log</name><argument_list pos:start="747:19" pos:end="755:56">(<argument pos:start="747:20" pos:end="747:24"><expr pos:start="747:20" pos:end="747:24"><name pos:start="747:20" pos:end="747:24">avctx</name></expr></argument>, <argument pos:start="747:27" pos:end="747:37"><expr pos:start="747:27" pos:end="747:37"><name pos:start="747:27" pos:end="747:37">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="749:20" pos:end="755:34"><expr pos:start="749:20" pos:end="755:34"><literal type="string" pos:start="749:20" pos:end="749:74">"The specified picture size of %dx%d is not valid for "</literal>

                   <literal type="string" pos:start="751:20" pos:end="751:72">"the H.263 codec.\nValid sizes are 128x96, 176x144, "</literal>

                   <literal type="string" pos:start="753:20" pos:end="753:53">"352x288, 704x576, and 1408x1152."</literal>

                   <literal type="string" pos:start="755:20" pos:end="755:34">"Try H.263+.\n"</literal></expr></argument>, <argument pos:start="755:37" pos:end="755:44"><expr pos:start="755:37" pos:end="755:44"><name pos:start="755:37" pos:end="755:44"><name pos:start="755:37" pos:end="755:37">s</name><operator pos:start="755:38" pos:end="755:39">-&gt;</operator><name pos:start="755:40" pos:end="755:44">width</name></name></expr></argument>, <argument pos:start="755:47" pos:end="755:55"><expr pos:start="755:47" pos:end="755:55"><name pos:start="755:47" pos:end="755:55"><name pos:start="755:47" pos:end="755:47">s</name><operator pos:start="755:48" pos:end="755:49">-&gt;</operator><name pos:start="755:50" pos:end="755:55">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="757:13" pos:end="757:22">return <expr pos:start="757:20" pos:end="757:21"><operator pos:start="757:20" pos:end="757:20">-</operator><literal type="number" pos:start="757:21" pos:end="757:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="761:9" pos:end="761:33"><expr pos:start="761:9" pos:end="761:32"><name pos:start="761:9" pos:end="761:21"><name pos:start="761:9" pos:end="761:9">s</name><operator pos:start="761:10" pos:end="761:11">-&gt;</operator><name pos:start="761:12" pos:end="761:21">out_format</name></name> <operator pos:start="761:23" pos:end="761:23">=</operator> <name pos:start="761:25" pos:end="761:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="763:9" pos:end="763:26"><expr pos:start="763:9" pos:end="763:25"><name pos:start="763:9" pos:end="763:20"><name pos:start="763:9" pos:end="763:13">avctx</name><operator pos:start="763:14" pos:end="763:15">-&gt;</operator><name pos:start="763:16" pos:end="763:20">delay</name></name>  <operator pos:start="763:23" pos:end="763:23">=</operator> <literal type="number" pos:start="763:25" pos:end="763:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="765:9" pos:end="765:26"><expr pos:start="765:9" pos:end="765:25"><name pos:start="765:9" pos:end="765:20"><name pos:start="765:9" pos:end="765:9">s</name><operator pos:start="765:10" pos:end="765:11">-&gt;</operator><name pos:start="765:12" pos:end="765:20">low_delay</name></name>  <operator pos:start="765:23" pos:end="765:23">=</operator> <literal type="number" pos:start="765:25" pos:end="765:25">1</literal></expr>;</expr_stmt>

        <break pos:start="767:9" pos:end="767:14">break;</break>

    <case pos:start="769:5" pos:end="769:27">case <expr pos:start="769:10" pos:end="769:26"><name pos:start="769:10" pos:end="769:26">AV_CODEC_ID_H263P</name></expr>:</case>

        <expr_stmt pos:start="771:9" pos:end="771:33"><expr pos:start="771:9" pos:end="771:32"><name pos:start="771:9" pos:end="771:21"><name pos:start="771:9" pos:end="771:9">s</name><operator pos:start="771:10" pos:end="771:11">-&gt;</operator><name pos:start="771:12" pos:end="771:21">out_format</name></name> <operator pos:start="771:23" pos:end="771:23">=</operator> <name pos:start="771:25" pos:end="771:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="773:9" pos:end="773:26"><expr pos:start="773:9" pos:end="773:25"><name pos:start="773:9" pos:end="773:20"><name pos:start="773:9" pos:end="773:9">s</name><operator pos:start="773:10" pos:end="773:11">-&gt;</operator><name pos:start="773:12" pos:end="773:20">h263_plus</name></name>  <operator pos:start="773:23" pos:end="773:23">=</operator> <literal type="number" pos:start="773:25" pos:end="773:25">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="775:9" pos:end="775:16">/* Fx */</comment>

        <expr_stmt pos:start="777:9" pos:end="777:76"><expr pos:start="777:9" pos:end="777:75"><name pos:start="777:9" pos:end="777:19"><name pos:start="777:9" pos:end="777:9">s</name><operator pos:start="777:10" pos:end="777:11">-&gt;</operator><name pos:start="777:12" pos:end="777:19">h263_aic</name></name>        <operator pos:start="777:28" pos:end="777:28">=</operator> <ternary pos:start="777:30" pos:end="777:75"><condition pos:start="777:30" pos:end="777:69"><expr pos:start="777:30" pos:end="777:67"><operator pos:start="777:30" pos:end="777:30">(</operator><name pos:start="777:31" pos:end="777:42"><name pos:start="777:31" pos:end="777:35">avctx</name><operator pos:start="777:36" pos:end="777:37">-&gt;</operator><name pos:start="777:38" pos:end="777:42">flags</name></name> <operator pos:start="777:44" pos:end="777:44">&amp;</operator> <name pos:start="777:46" pos:end="777:66">AV_CODEC_FLAG_AC_PRED</name><operator pos:start="777:67" pos:end="777:67">)</operator></expr> ?</condition><then pos:start="777:71" pos:end="777:71"> <expr pos:start="777:71" pos:end="777:71"><literal type="number" pos:start="777:71" pos:end="777:71">1</literal></expr> </then><else pos:start="777:73" pos:end="777:75">: <expr pos:start="777:75" pos:end="777:75"><literal type="number" pos:start="777:75" pos:end="777:75">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="779:9" pos:end="779:41"><expr pos:start="779:9" pos:end="779:40"><name pos:start="779:9" pos:end="779:25"><name pos:start="779:9" pos:end="779:9">s</name><operator pos:start="779:10" pos:end="779:11">-&gt;</operator><name pos:start="779:12" pos:end="779:25">modified_quant</name></name>  <operator pos:start="779:28" pos:end="779:28">=</operator> <name pos:start="779:30" pos:end="779:40"><name pos:start="779:30" pos:end="779:30">s</name><operator pos:start="779:31" pos:end="779:32">-&gt;</operator><name pos:start="779:33" pos:end="779:40">h263_aic</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="781:9" pos:end="781:80"><expr pos:start="781:9" pos:end="781:79"><name pos:start="781:9" pos:end="781:22"><name pos:start="781:9" pos:end="781:9">s</name><operator pos:start="781:10" pos:end="781:11">-&gt;</operator><name pos:start="781:12" pos:end="781:22">loop_filter</name></name>     <operator pos:start="781:28" pos:end="781:28">=</operator> <ternary pos:start="781:30" pos:end="781:79"><condition pos:start="781:30" pos:end="781:73"><expr pos:start="781:30" pos:end="781:71"><operator pos:start="781:30" pos:end="781:30">(</operator><name pos:start="781:31" pos:end="781:42"><name pos:start="781:31" pos:end="781:35">avctx</name><operator pos:start="781:36" pos:end="781:37">-&gt;</operator><name pos:start="781:38" pos:end="781:42">flags</name></name> <operator pos:start="781:44" pos:end="781:44">&amp;</operator> <name pos:start="781:46" pos:end="781:70">AV_CODEC_FLAG_LOOP_FILTER</name><operator pos:start="781:71" pos:end="781:71">)</operator></expr> ?</condition><then pos:start="781:75" pos:end="781:75"> <expr pos:start="781:75" pos:end="781:75"><literal type="number" pos:start="781:75" pos:end="781:75">1</literal></expr> </then><else pos:start="781:77" pos:end="781:79">: <expr pos:start="781:79" pos:end="781:79"><literal type="number" pos:start="781:79" pos:end="781:79">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="783:9" pos:end="783:69"><expr pos:start="783:9" pos:end="783:68"><name pos:start="783:9" pos:end="783:26"><name pos:start="783:9" pos:end="783:9">s</name><operator pos:start="783:10" pos:end="783:11">-&gt;</operator><name pos:start="783:12" pos:end="783:26">unrestricted_mv</name></name> <operator pos:start="783:28" pos:end="783:28">=</operator> <name pos:start="783:30" pos:end="783:36"><name pos:start="783:30" pos:end="783:30">s</name><operator pos:start="783:31" pos:end="783:32">-&gt;</operator><name pos:start="783:33" pos:end="783:36">obmc</name></name> <operator pos:start="783:38" pos:end="783:39">||</operator> <name pos:start="783:41" pos:end="783:54"><name pos:start="783:41" pos:end="783:41">s</name><operator pos:start="783:42" pos:end="783:43">-&gt;</operator><name pos:start="783:44" pos:end="783:54">loop_filter</name></name> <operator pos:start="783:56" pos:end="783:57">||</operator> <name pos:start="783:59" pos:end="783:68"><name pos:start="783:59" pos:end="783:59">s</name><operator pos:start="783:60" pos:end="783:61">-&gt;</operator><name pos:start="783:62" pos:end="783:68">umvplus</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="787:9" pos:end="787:17">/* /Fx */</comment>

        <comment type="block" pos:start="789:9" pos:end="789:39">/* These are just to be sure */</comment>

        <expr_stmt pos:start="791:9" pos:end="791:25"><expr pos:start="791:9" pos:end="791:24"><name pos:start="791:9" pos:end="791:20"><name pos:start="791:9" pos:end="791:13">avctx</name><operator pos:start="791:14" pos:end="791:15">-&gt;</operator><name pos:start="791:16" pos:end="791:20">delay</name></name> <operator pos:start="791:22" pos:end="791:22">=</operator> <literal type="number" pos:start="791:24" pos:end="791:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="793:9" pos:end="793:25"><expr pos:start="793:9" pos:end="793:24"><name pos:start="793:9" pos:end="793:20"><name pos:start="793:9" pos:end="793:9">s</name><operator pos:start="793:10" pos:end="793:11">-&gt;</operator><name pos:start="793:12" pos:end="793:20">low_delay</name></name> <operator pos:start="793:22" pos:end="793:22">=</operator> <literal type="number" pos:start="793:24" pos:end="793:24">1</literal></expr>;</expr_stmt>

        <break pos:start="795:9" pos:end="795:14">break;</break>

    <case pos:start="797:5" pos:end="797:26">case <expr pos:start="797:10" pos:end="797:25"><name pos:start="797:10" pos:end="797:25">AV_CODEC_ID_FLV1</name></expr>:</case>

        <expr_stmt pos:start="799:9" pos:end="799:38"><expr pos:start="799:9" pos:end="799:37"><name pos:start="799:9" pos:end="799:21"><name pos:start="799:9" pos:end="799:9">s</name><operator pos:start="799:10" pos:end="799:11">-&gt;</operator><name pos:start="799:12" pos:end="799:21">out_format</name></name>      <operator pos:start="799:28" pos:end="799:28">=</operator> <name pos:start="799:30" pos:end="799:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="801:9" pos:end="801:31"><expr pos:start="801:9" pos:end="801:30"><name pos:start="801:9" pos:end="801:19"><name pos:start="801:9" pos:end="801:9">s</name><operator pos:start="801:10" pos:end="801:11">-&gt;</operator><name pos:start="801:12" pos:end="801:19">h263_flv</name></name>        <operator pos:start="801:28" pos:end="801:28">=</operator> <literal type="number" pos:start="801:30" pos:end="801:30">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="801:33" pos:end="801:62">/* format = 1; 11-bit codes */</comment>

        <expr_stmt pos:start="803:9" pos:end="803:31"><expr pos:start="803:9" pos:end="803:30"><name pos:start="803:9" pos:end="803:26"><name pos:start="803:9" pos:end="803:9">s</name><operator pos:start="803:10" pos:end="803:11">-&gt;</operator><name pos:start="803:12" pos:end="803:26">unrestricted_mv</name></name> <operator pos:start="803:28" pos:end="803:28">=</operator> <literal type="number" pos:start="803:30" pos:end="803:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="805:9" pos:end="805:25"><expr pos:start="805:9" pos:end="805:24"><name pos:start="805:9" pos:end="805:19"><name pos:start="805:9" pos:end="805:9">s</name><operator pos:start="805:10" pos:end="805:11">-&gt;</operator><name pos:start="805:12" pos:end="805:19">rtp_mode</name></name>  <operator pos:start="805:22" pos:end="805:22">=</operator> <literal type="number" pos:start="805:24" pos:end="805:24">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="805:27" pos:end="805:47">/* don't allow GOB */</comment>

        <expr_stmt pos:start="807:9" pos:end="807:25"><expr pos:start="807:9" pos:end="807:24"><name pos:start="807:9" pos:end="807:20"><name pos:start="807:9" pos:end="807:13">avctx</name><operator pos:start="807:14" pos:end="807:15">-&gt;</operator><name pos:start="807:16" pos:end="807:20">delay</name></name> <operator pos:start="807:22" pos:end="807:22">=</operator> <literal type="number" pos:start="807:24" pos:end="807:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="809:9" pos:end="809:25"><expr pos:start="809:9" pos:end="809:24"><name pos:start="809:9" pos:end="809:20"><name pos:start="809:9" pos:end="809:9">s</name><operator pos:start="809:10" pos:end="809:11">-&gt;</operator><name pos:start="809:12" pos:end="809:20">low_delay</name></name> <operator pos:start="809:22" pos:end="809:22">=</operator> <literal type="number" pos:start="809:24" pos:end="809:24">1</literal></expr>;</expr_stmt>

        <break pos:start="811:9" pos:end="811:14">break;</break>

    <case pos:start="813:5" pos:end="813:26">case <expr pos:start="813:10" pos:end="813:25"><name pos:start="813:10" pos:end="813:25">AV_CODEC_ID_RV10</name></expr>:</case>

        <expr_stmt pos:start="815:9" pos:end="815:33"><expr pos:start="815:9" pos:end="815:32"><name pos:start="815:9" pos:end="815:21"><name pos:start="815:9" pos:end="815:9">s</name><operator pos:start="815:10" pos:end="815:11">-&gt;</operator><name pos:start="815:12" pos:end="815:21">out_format</name></name> <operator pos:start="815:23" pos:end="815:23">=</operator> <name pos:start="815:25" pos:end="815:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="817:9" pos:end="817:26"><expr pos:start="817:9" pos:end="817:25"><name pos:start="817:9" pos:end="817:20"><name pos:start="817:9" pos:end="817:13">avctx</name><operator pos:start="817:14" pos:end="817:15">-&gt;</operator><name pos:start="817:16" pos:end="817:20">delay</name></name>  <operator pos:start="817:23" pos:end="817:23">=</operator> <literal type="number" pos:start="817:25" pos:end="817:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="819:9" pos:end="819:26"><expr pos:start="819:9" pos:end="819:25"><name pos:start="819:9" pos:end="819:20"><name pos:start="819:9" pos:end="819:9">s</name><operator pos:start="819:10" pos:end="819:11">-&gt;</operator><name pos:start="819:12" pos:end="819:20">low_delay</name></name>  <operator pos:start="819:23" pos:end="819:23">=</operator> <literal type="number" pos:start="819:25" pos:end="819:25">1</literal></expr>;</expr_stmt>

        <break pos:start="821:9" pos:end="821:14">break;</break>

    <case pos:start="823:5" pos:end="823:26">case <expr pos:start="823:10" pos:end="823:25"><name pos:start="823:10" pos:end="823:25">AV_CODEC_ID_RV20</name></expr>:</case>

        <expr_stmt pos:start="825:9" pos:end="825:38"><expr pos:start="825:9" pos:end="825:37"><name pos:start="825:9" pos:end="825:21"><name pos:start="825:9" pos:end="825:9">s</name><operator pos:start="825:10" pos:end="825:11">-&gt;</operator><name pos:start="825:12" pos:end="825:21">out_format</name></name>      <operator pos:start="825:28" pos:end="825:28">=</operator> <name pos:start="825:30" pos:end="825:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="827:9" pos:end="827:31"><expr pos:start="827:9" pos:end="827:30"><name pos:start="827:9" pos:end="827:20"><name pos:start="827:9" pos:end="827:13">avctx</name><operator pos:start="827:14" pos:end="827:15">-&gt;</operator><name pos:start="827:16" pos:end="827:20">delay</name></name>       <operator pos:start="827:28" pos:end="827:28">=</operator> <literal type="number" pos:start="827:30" pos:end="827:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="829:9" pos:end="829:31"><expr pos:start="829:9" pos:end="829:30"><name pos:start="829:9" pos:end="829:20"><name pos:start="829:9" pos:end="829:9">s</name><operator pos:start="829:10" pos:end="829:11">-&gt;</operator><name pos:start="829:12" pos:end="829:20">low_delay</name></name>       <operator pos:start="829:28" pos:end="829:28">=</operator> <literal type="number" pos:start="829:30" pos:end="829:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="831:9" pos:end="831:31"><expr pos:start="831:9" pos:end="831:30"><name pos:start="831:9" pos:end="831:25"><name pos:start="831:9" pos:end="831:9">s</name><operator pos:start="831:10" pos:end="831:11">-&gt;</operator><name pos:start="831:12" pos:end="831:25">modified_quant</name></name>  <operator pos:start="831:28" pos:end="831:28">=</operator> <literal type="number" pos:start="831:30" pos:end="831:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="833:9" pos:end="833:31"><expr pos:start="833:9" pos:end="833:30"><name pos:start="833:9" pos:end="833:19"><name pos:start="833:9" pos:end="833:9">s</name><operator pos:start="833:10" pos:end="833:11">-&gt;</operator><name pos:start="833:12" pos:end="833:19">h263_aic</name></name>        <operator pos:start="833:28" pos:end="833:28">=</operator> <literal type="number" pos:start="833:30" pos:end="833:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="835:9" pos:end="835:31"><expr pos:start="835:9" pos:end="835:30"><name pos:start="835:9" pos:end="835:20"><name pos:start="835:9" pos:end="835:9">s</name><operator pos:start="835:10" pos:end="835:11">-&gt;</operator><name pos:start="835:12" pos:end="835:20">h263_plus</name></name>       <operator pos:start="835:28" pos:end="835:28">=</operator> <literal type="number" pos:start="835:30" pos:end="835:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="837:9" pos:end="837:31"><expr pos:start="837:9" pos:end="837:30"><name pos:start="837:9" pos:end="837:22"><name pos:start="837:9" pos:end="837:9">s</name><operator pos:start="837:10" pos:end="837:11">-&gt;</operator><name pos:start="837:12" pos:end="837:22">loop_filter</name></name>     <operator pos:start="837:28" pos:end="837:28">=</operator> <literal type="number" pos:start="837:30" pos:end="837:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="839:9" pos:end="839:31"><expr pos:start="839:9" pos:end="839:30"><name pos:start="839:9" pos:end="839:26"><name pos:start="839:9" pos:end="839:9">s</name><operator pos:start="839:10" pos:end="839:11">-&gt;</operator><name pos:start="839:12" pos:end="839:26">unrestricted_mv</name></name> <operator pos:start="839:28" pos:end="839:28">=</operator> <literal type="number" pos:start="839:30" pos:end="839:30">0</literal></expr>;</expr_stmt>

        <break pos:start="841:9" pos:end="841:14">break;</break>

    <case pos:start="843:5" pos:end="843:27">case <expr pos:start="843:10" pos:end="843:26"><name pos:start="843:10" pos:end="843:26">AV_CODEC_ID_MPEG4</name></expr>:</case>

        <expr_stmt pos:start="845:9" pos:end="845:38"><expr pos:start="845:9" pos:end="845:37"><name pos:start="845:9" pos:end="845:21"><name pos:start="845:9" pos:end="845:9">s</name><operator pos:start="845:10" pos:end="845:11">-&gt;</operator><name pos:start="845:12" pos:end="845:21">out_format</name></name>      <operator pos:start="845:28" pos:end="845:28">=</operator> <name pos:start="845:30" pos:end="845:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="847:9" pos:end="847:31"><expr pos:start="847:9" pos:end="847:30"><name pos:start="847:9" pos:end="847:20"><name pos:start="847:9" pos:end="847:9">s</name><operator pos:start="847:10" pos:end="847:11">-&gt;</operator><name pos:start="847:12" pos:end="847:20">h263_pred</name></name>       <operator pos:start="847:28" pos:end="847:28">=</operator> <literal type="number" pos:start="847:30" pos:end="847:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="849:9" pos:end="849:31"><expr pos:start="849:9" pos:end="849:30"><name pos:start="849:9" pos:end="849:26"><name pos:start="849:9" pos:end="849:9">s</name><operator pos:start="849:10" pos:end="849:11">-&gt;</operator><name pos:start="849:12" pos:end="849:26">unrestricted_mv</name></name> <operator pos:start="849:28" pos:end="849:28">=</operator> <literal type="number" pos:start="849:30" pos:end="849:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="851:9" pos:end="851:53"><expr pos:start="851:9" pos:end="851:52"><name pos:start="851:9" pos:end="851:20"><name pos:start="851:9" pos:end="851:9">s</name><operator pos:start="851:10" pos:end="851:11">-&gt;</operator><name pos:start="851:12" pos:end="851:20">low_delay</name></name>       <operator pos:start="851:28" pos:end="851:28">=</operator> <ternary pos:start="851:30" pos:end="851:52"><condition pos:start="851:30" pos:end="851:46"><expr pos:start="851:30" pos:end="851:44"><name pos:start="851:30" pos:end="851:44"><name pos:start="851:30" pos:end="851:30">s</name><operator pos:start="851:31" pos:end="851:32">-&gt;</operator><name pos:start="851:33" pos:end="851:44">max_b_frames</name></name></expr> ?</condition><then pos:start="851:48" pos:end="851:48"> <expr pos:start="851:48" pos:end="851:48"><literal type="number" pos:start="851:48" pos:end="851:48">0</literal></expr> </then><else pos:start="851:50" pos:end="851:52">: <expr pos:start="851:52" pos:end="851:52"><literal type="number" pos:start="851:52" pos:end="851:52">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="853:9" pos:end="853:70"><expr pos:start="853:9" pos:end="853:69"><name pos:start="853:9" pos:end="853:20"><name pos:start="853:9" pos:end="853:13">avctx</name><operator pos:start="853:14" pos:end="853:15">-&gt;</operator><name pos:start="853:16" pos:end="853:20">delay</name></name>       <operator pos:start="853:28" pos:end="853:28">=</operator> <ternary pos:start="853:30" pos:end="853:69"><condition pos:start="853:30" pos:end="853:43"><expr pos:start="853:30" pos:end="853:41"><name pos:start="853:30" pos:end="853:41"><name pos:start="853:30" pos:end="853:30">s</name><operator pos:start="853:31" pos:end="853:32">-&gt;</operator><name pos:start="853:33" pos:end="853:41">low_delay</name></name></expr> ?</condition><then pos:start="853:45" pos:end="853:45"> <expr pos:start="853:45" pos:end="853:45"><literal type="number" pos:start="853:45" pos:end="853:45">0</literal></expr> </then><else pos:start="853:47" pos:end="853:69">: <expr pos:start="853:49" pos:end="853:69"><operator pos:start="853:49" pos:end="853:49">(</operator><name pos:start="853:50" pos:end="853:64"><name pos:start="853:50" pos:end="853:50">s</name><operator pos:start="853:51" pos:end="853:52">-&gt;</operator><name pos:start="853:53" pos:end="853:64">max_b_frames</name></name> <operator pos:start="853:66" pos:end="853:66">+</operator> <literal type="number" pos:start="853:68" pos:end="853:68">1</literal><operator pos:start="853:69" pos:end="853:69">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="855:9" pos:end="855:14">break;</break>

    <case pos:start="857:5" pos:end="857:31">case <expr pos:start="857:10" pos:end="857:30"><name pos:start="857:10" pos:end="857:30">AV_CODEC_ID_MSMPEG4V2</name></expr>:</case>

        <expr_stmt pos:start="859:9" pos:end="859:38"><expr pos:start="859:9" pos:end="859:37"><name pos:start="859:9" pos:end="859:21"><name pos:start="859:9" pos:end="859:9">s</name><operator pos:start="859:10" pos:end="859:11">-&gt;</operator><name pos:start="859:12" pos:end="859:21">out_format</name></name>      <operator pos:start="859:28" pos:end="859:28">=</operator> <name pos:start="859:30" pos:end="859:37">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="861:9" pos:end="861:31"><expr pos:start="861:9" pos:end="861:30"><name pos:start="861:9" pos:end="861:20"><name pos:start="861:9" pos:end="861:9">s</name><operator pos:start="861:10" pos:end="861:11">-&gt;</operator><name pos:start="861:12" pos:end="861:20">h263_pred</name></name>       <operator pos:start="861:28" pos:end="861:28">=</operator> <literal type="number" pos:start="861:30" pos:end="861:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="863:9" pos:end="863:31"><expr pos:start="863:9" pos:end="863:30"><name pos:start="863:9" pos:end="863:26"><name pos:start="863:9" pos:end="863:9">s</name><operator pos:start="863:10" pos:end="863:11">-&gt;</operator><name pos:start="863:12" pos:end="863:26">unrestricted_mv</name></name> <operator pos:start="863:28" pos:end="863:28">=</operator> <literal type="number" pos:start="863:30" pos:end="863:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="865:9" pos:end="865:31"><expr pos:start="865:9" pos:end="865:30"><name pos:start="865:9" pos:end="865:26"><name pos:start="865:9" pos:end="865:9">s</name><operator pos:start="865:10" pos:end="865:11">-&gt;</operator><name pos:start="865:12" pos:end="865:26">msmpeg4_version</name></name> <operator pos:start="865:28" pos:end="865:28">=</operator> <literal type="number" pos:start="865:30" pos:end="865:30">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="867:9" pos:end="867:31"><expr pos:start="867:9" pos:end="867:30"><name pos:start="867:9" pos:end="867:20"><name pos:start="867:9" pos:end="867:13">avctx</name><operator pos:start="867:14" pos:end="867:15">-&gt;</operator><name pos:start="867:16" pos:end="867:20">delay</name></name>       <operator pos:start="867:28" pos:end="867:28">=</operator> <literal type="number" pos:start="867:30" pos:end="867:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="869:9" pos:end="869:31"><expr pos:start="869:9" pos:end="869:30"><name pos:start="869:9" pos:end="869:20"><name pos:start="869:9" pos:end="869:9">s</name><operator pos:start="869:10" pos:end="869:11">-&gt;</operator><name pos:start="869:12" pos:end="869:20">low_delay</name></name>       <operator pos:start="869:28" pos:end="869:28">=</operator> <literal type="number" pos:start="869:30" pos:end="869:30">1</literal></expr>;</expr_stmt>

        <break pos:start="871:9" pos:end="871:14">break;</break>

    <case pos:start="873:5" pos:end="873:31">case <expr pos:start="873:10" pos:end="873:30"><name pos:start="873:10" pos:end="873:30">AV_CODEC_ID_MSMPEG4V3</name></expr>:</case>

        <expr_stmt pos:start="875:9" pos:end="875:40"><expr pos:start="875:9" pos:end="875:39"><name pos:start="875:9" pos:end="875:21"><name pos:start="875:9" pos:end="875:9">s</name><operator pos:start="875:10" pos:end="875:11">-&gt;</operator><name pos:start="875:12" pos:end="875:21">out_format</name></name>        <operator pos:start="875:30" pos:end="875:30">=</operator> <name pos:start="875:32" pos:end="875:39">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="877:9" pos:end="877:33"><expr pos:start="877:9" pos:end="877:32"><name pos:start="877:9" pos:end="877:20"><name pos:start="877:9" pos:end="877:9">s</name><operator pos:start="877:10" pos:end="877:11">-&gt;</operator><name pos:start="877:12" pos:end="877:20">h263_pred</name></name>         <operator pos:start="877:30" pos:end="877:30">=</operator> <literal type="number" pos:start="877:32" pos:end="877:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="879:9" pos:end="879:33"><expr pos:start="879:9" pos:end="879:32"><name pos:start="879:9" pos:end="879:26"><name pos:start="879:9" pos:end="879:9">s</name><operator pos:start="879:10" pos:end="879:11">-&gt;</operator><name pos:start="879:12" pos:end="879:26">unrestricted_mv</name></name>   <operator pos:start="879:30" pos:end="879:30">=</operator> <literal type="number" pos:start="879:32" pos:end="879:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="881:9" pos:end="881:33"><expr pos:start="881:9" pos:end="881:32"><name pos:start="881:9" pos:end="881:26"><name pos:start="881:9" pos:end="881:9">s</name><operator pos:start="881:10" pos:end="881:11">-&gt;</operator><name pos:start="881:12" pos:end="881:26">msmpeg4_version</name></name>   <operator pos:start="881:30" pos:end="881:30">=</operator> <literal type="number" pos:start="881:32" pos:end="881:32">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="883:9" pos:end="883:33"><expr pos:start="883:9" pos:end="883:32"><name pos:start="883:9" pos:end="883:28"><name pos:start="883:9" pos:end="883:9">s</name><operator pos:start="883:10" pos:end="883:11">-&gt;</operator><name pos:start="883:12" pos:end="883:28">flipflop_rounding</name></name> <operator pos:start="883:30" pos:end="883:30">=</operator> <literal type="number" pos:start="883:32" pos:end="883:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="885:9" pos:end="885:33"><expr pos:start="885:9" pos:end="885:32"><name pos:start="885:9" pos:end="885:20"><name pos:start="885:9" pos:end="885:13">avctx</name><operator pos:start="885:14" pos:end="885:15">-&gt;</operator><name pos:start="885:16" pos:end="885:20">delay</name></name>         <operator pos:start="885:30" pos:end="885:30">=</operator> <literal type="number" pos:start="885:32" pos:end="885:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="887:9" pos:end="887:33"><expr pos:start="887:9" pos:end="887:32"><name pos:start="887:9" pos:end="887:20"><name pos:start="887:9" pos:end="887:9">s</name><operator pos:start="887:10" pos:end="887:11">-&gt;</operator><name pos:start="887:12" pos:end="887:20">low_delay</name></name>         <operator pos:start="887:30" pos:end="887:30">=</operator> <literal type="number" pos:start="887:32" pos:end="887:32">1</literal></expr>;</expr_stmt>

        <break pos:start="889:9" pos:end="889:14">break;</break>

    <case pos:start="891:5" pos:end="891:26">case <expr pos:start="891:10" pos:end="891:25"><name pos:start="891:10" pos:end="891:25">AV_CODEC_ID_WMV1</name></expr>:</case>

        <expr_stmt pos:start="893:9" pos:end="893:40"><expr pos:start="893:9" pos:end="893:39"><name pos:start="893:9" pos:end="893:21"><name pos:start="893:9" pos:end="893:9">s</name><operator pos:start="893:10" pos:end="893:11">-&gt;</operator><name pos:start="893:12" pos:end="893:21">out_format</name></name>        <operator pos:start="893:30" pos:end="893:30">=</operator> <name pos:start="893:32" pos:end="893:39">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="895:9" pos:end="895:33"><expr pos:start="895:9" pos:end="895:32"><name pos:start="895:9" pos:end="895:20"><name pos:start="895:9" pos:end="895:9">s</name><operator pos:start="895:10" pos:end="895:11">-&gt;</operator><name pos:start="895:12" pos:end="895:20">h263_pred</name></name>         <operator pos:start="895:30" pos:end="895:30">=</operator> <literal type="number" pos:start="895:32" pos:end="895:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="897:9" pos:end="897:33"><expr pos:start="897:9" pos:end="897:32"><name pos:start="897:9" pos:end="897:26"><name pos:start="897:9" pos:end="897:9">s</name><operator pos:start="897:10" pos:end="897:11">-&gt;</operator><name pos:start="897:12" pos:end="897:26">unrestricted_mv</name></name>   <operator pos:start="897:30" pos:end="897:30">=</operator> <literal type="number" pos:start="897:32" pos:end="897:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="899:9" pos:end="899:33"><expr pos:start="899:9" pos:end="899:32"><name pos:start="899:9" pos:end="899:26"><name pos:start="899:9" pos:end="899:9">s</name><operator pos:start="899:10" pos:end="899:11">-&gt;</operator><name pos:start="899:12" pos:end="899:26">msmpeg4_version</name></name>   <operator pos:start="899:30" pos:end="899:30">=</operator> <literal type="number" pos:start="899:32" pos:end="899:32">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="901:9" pos:end="901:33"><expr pos:start="901:9" pos:end="901:32"><name pos:start="901:9" pos:end="901:28"><name pos:start="901:9" pos:end="901:9">s</name><operator pos:start="901:10" pos:end="901:11">-&gt;</operator><name pos:start="901:12" pos:end="901:28">flipflop_rounding</name></name> <operator pos:start="901:30" pos:end="901:30">=</operator> <literal type="number" pos:start="901:32" pos:end="901:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="903:9" pos:end="903:33"><expr pos:start="903:9" pos:end="903:32"><name pos:start="903:9" pos:end="903:20"><name pos:start="903:9" pos:end="903:13">avctx</name><operator pos:start="903:14" pos:end="903:15">-&gt;</operator><name pos:start="903:16" pos:end="903:20">delay</name></name>         <operator pos:start="903:30" pos:end="903:30">=</operator> <literal type="number" pos:start="903:32" pos:end="903:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="905:9" pos:end="905:33"><expr pos:start="905:9" pos:end="905:32"><name pos:start="905:9" pos:end="905:20"><name pos:start="905:9" pos:end="905:9">s</name><operator pos:start="905:10" pos:end="905:11">-&gt;</operator><name pos:start="905:12" pos:end="905:20">low_delay</name></name>         <operator pos:start="905:30" pos:end="905:30">=</operator> <literal type="number" pos:start="905:32" pos:end="905:32">1</literal></expr>;</expr_stmt>

        <break pos:start="907:9" pos:end="907:14">break;</break>

    <case pos:start="909:5" pos:end="909:26">case <expr pos:start="909:10" pos:end="909:25"><name pos:start="909:10" pos:end="909:25">AV_CODEC_ID_WMV2</name></expr>:</case>

        <expr_stmt pos:start="911:9" pos:end="911:40"><expr pos:start="911:9" pos:end="911:39"><name pos:start="911:9" pos:end="911:21"><name pos:start="911:9" pos:end="911:9">s</name><operator pos:start="911:10" pos:end="911:11">-&gt;</operator><name pos:start="911:12" pos:end="911:21">out_format</name></name>        <operator pos:start="911:30" pos:end="911:30">=</operator> <name pos:start="911:32" pos:end="911:39">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="913:9" pos:end="913:33"><expr pos:start="913:9" pos:end="913:32"><name pos:start="913:9" pos:end="913:20"><name pos:start="913:9" pos:end="913:9">s</name><operator pos:start="913:10" pos:end="913:11">-&gt;</operator><name pos:start="913:12" pos:end="913:20">h263_pred</name></name>         <operator pos:start="913:30" pos:end="913:30">=</operator> <literal type="number" pos:start="913:32" pos:end="913:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="915:9" pos:end="915:33"><expr pos:start="915:9" pos:end="915:32"><name pos:start="915:9" pos:end="915:26"><name pos:start="915:9" pos:end="915:9">s</name><operator pos:start="915:10" pos:end="915:11">-&gt;</operator><name pos:start="915:12" pos:end="915:26">unrestricted_mv</name></name>   <operator pos:start="915:30" pos:end="915:30">=</operator> <literal type="number" pos:start="915:32" pos:end="915:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="917:9" pos:end="917:33"><expr pos:start="917:9" pos:end="917:32"><name pos:start="917:9" pos:end="917:26"><name pos:start="917:9" pos:end="917:9">s</name><operator pos:start="917:10" pos:end="917:11">-&gt;</operator><name pos:start="917:12" pos:end="917:26">msmpeg4_version</name></name>   <operator pos:start="917:30" pos:end="917:30">=</operator> <literal type="number" pos:start="917:32" pos:end="917:32">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="919:9" pos:end="919:33"><expr pos:start="919:9" pos:end="919:32"><name pos:start="919:9" pos:end="919:28"><name pos:start="919:9" pos:end="919:9">s</name><operator pos:start="919:10" pos:end="919:11">-&gt;</operator><name pos:start="919:12" pos:end="919:28">flipflop_rounding</name></name> <operator pos:start="919:30" pos:end="919:30">=</operator> <literal type="number" pos:start="919:32" pos:end="919:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="921:9" pos:end="921:33"><expr pos:start="921:9" pos:end="921:32"><name pos:start="921:9" pos:end="921:20"><name pos:start="921:9" pos:end="921:13">avctx</name><operator pos:start="921:14" pos:end="921:15">-&gt;</operator><name pos:start="921:16" pos:end="921:20">delay</name></name>         <operator pos:start="921:30" pos:end="921:30">=</operator> <literal type="number" pos:start="921:32" pos:end="921:32">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="923:9" pos:end="923:33"><expr pos:start="923:9" pos:end="923:32"><name pos:start="923:9" pos:end="923:20"><name pos:start="923:9" pos:end="923:9">s</name><operator pos:start="923:10" pos:end="923:11">-&gt;</operator><name pos:start="923:12" pos:end="923:20">low_delay</name></name>         <operator pos:start="923:30" pos:end="923:30">=</operator> <literal type="number" pos:start="923:32" pos:end="923:32">1</literal></expr>;</expr_stmt>

        <break pos:start="925:9" pos:end="925:14">break;</break>

    <default pos:start="927:5" pos:end="927:12">default:</default>

        <return pos:start="929:9" pos:end="929:18">return <expr pos:start="929:16" pos:end="929:17"><operator pos:start="929:16" pos:end="929:16">-</operator><literal type="number" pos:start="929:17" pos:end="929:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="935:5" pos:end="935:40"><expr pos:start="935:5" pos:end="935:39"><name pos:start="935:5" pos:end="935:23"><name pos:start="935:5" pos:end="935:9">avctx</name><operator pos:start="935:10" pos:end="935:11">-&gt;</operator><name pos:start="935:12" pos:end="935:23">has_b_frames</name></name> <operator pos:start="935:25" pos:end="935:25">=</operator> <operator pos:start="935:27" pos:end="935:27">!</operator><name pos:start="935:28" pos:end="935:39"><name pos:start="935:28" pos:end="935:28">s</name><operator pos:start="935:29" pos:end="935:30">-&gt;</operator><name pos:start="935:31" pos:end="935:39">low_delay</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="939:5" pos:end="939:20"><expr pos:start="939:5" pos:end="939:19"><name pos:start="939:5" pos:end="939:15"><name pos:start="939:5" pos:end="939:5">s</name><operator pos:start="939:6" pos:end="939:7">-&gt;</operator><name pos:start="939:8" pos:end="939:15">encoding</name></name> <operator pos:start="939:17" pos:end="939:17">=</operator> <literal type="number" pos:start="939:19" pos:end="939:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="943:5" pos:end="949:51"><expr pos:start="943:5" pos:end="949:50"><name pos:start="943:5" pos:end="943:24"><name pos:start="943:5" pos:end="943:5">s</name><operator pos:start="943:6" pos:end="943:7">-&gt;</operator><name pos:start="943:8" pos:end="943:24">progressive_frame</name></name>    <operator pos:start="943:29" pos:end="943:29">=</operator>

    <name pos:start="945:5" pos:end="945:27"><name pos:start="945:5" pos:end="945:5">s</name><operator pos:start="945:6" pos:end="945:7">-&gt;</operator><name pos:start="945:8" pos:end="945:27">progressive_sequence</name></name> <operator pos:start="945:29" pos:end="945:29">=</operator> <operator pos:start="945:31" pos:end="945:31">!</operator><operator pos:start="945:32" pos:end="945:32">(</operator><name pos:start="945:33" pos:end="945:44"><name pos:start="945:33" pos:end="945:37">avctx</name><operator pos:start="945:38" pos:end="945:39">-&gt;</operator><name pos:start="945:40" pos:end="945:44">flags</name></name> <operator pos:start="945:46" pos:end="945:46">&amp;</operator> <operator pos:start="945:48" pos:end="945:48">(</operator><name pos:start="945:49" pos:end="945:76">AV_CODEC_FLAG_INTERLACED_DCT</name> <operator pos:start="945:78" pos:end="945:78">|</operator>

                                                <name pos:start="947:49" pos:end="947:75">AV_CODEC_FLAG_INTERLACED_ME</name><operator pos:start="947:76" pos:end="947:76">)</operator> <operator pos:start="947:78" pos:end="947:79">||</operator>

                                <name pos:start="949:33" pos:end="949:49"><name pos:start="949:33" pos:end="949:33">s</name><operator pos:start="949:34" pos:end="949:35">-&gt;</operator><name pos:start="949:36" pos:end="949:49">alternate_scan</name></name><operator pos:start="949:50" pos:end="949:50">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="953:5" pos:end="953:14">/* init */</comment>

    <expr_stmt pos:start="955:5" pos:end="955:24"><expr pos:start="955:5" pos:end="955:23"><call pos:start="955:5" pos:end="955:23"><name pos:start="955:5" pos:end="955:20">ff_mpv_idct_init</name><argument_list pos:start="955:21" pos:end="955:23">(<argument pos:start="955:22" pos:end="955:22"><expr pos:start="955:22" pos:end="955:22"><name pos:start="955:22" pos:end="955:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="957:5" pos:end="959:18"><if pos:start="957:5" pos:end="959:18">if <condition pos:start="957:8" pos:end="957:34">(<expr pos:start="957:9" pos:end="957:33"><call pos:start="957:9" pos:end="957:29"><name pos:start="957:9" pos:end="957:26">ff_mpv_common_init</name><argument_list pos:start="957:27" pos:end="957:29">(<argument pos:start="957:28" pos:end="957:28"><expr pos:start="957:28" pos:end="957:28"><name pos:start="957:28" pos:end="957:28">s</name></expr></argument>)</argument_list></call> <operator pos:start="957:31" pos:end="957:31">&lt;</operator> <literal type="number" pos:start="957:33" pos:end="957:33">0</literal></expr>)</condition><block type="pseudo" pos:start="959:9" pos:end="959:18"><block_content pos:start="959:9" pos:end="959:18">

        <return pos:start="959:9" pos:end="959:18">return <expr pos:start="959:16" pos:end="959:17"><operator pos:start="959:16" pos:end="959:16">-</operator><literal type="number" pos:start="959:17" pos:end="959:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="963:5" pos:end="965:34"><if pos:start="963:5" pos:end="965:34">if <condition pos:start="963:8" pos:end="963:17">(<expr pos:start="963:9" pos:end="963:16"><name pos:start="963:9" pos:end="963:16">ARCH_X86</name></expr>)</condition><block type="pseudo" pos:start="965:9" pos:end="965:34"><block_content pos:start="965:9" pos:end="965:34">

        <expr_stmt pos:start="965:9" pos:end="965:34"><expr pos:start="965:9" pos:end="965:33"><call pos:start="965:9" pos:end="965:33"><name pos:start="965:9" pos:end="965:30">ff_mpv_encode_init_x86</name><argument_list pos:start="965:31" pos:end="965:33">(<argument pos:start="965:32" pos:end="965:32"><expr pos:start="965:32" pos:end="965:32"><name pos:start="965:32" pos:end="965:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="969:5" pos:end="969:37"><expr pos:start="969:5" pos:end="969:36"><call pos:start="969:5" pos:end="969:36"><name pos:start="969:5" pos:end="969:19">ff_fdctdsp_init</name><argument_list pos:start="969:20" pos:end="969:36">(<argument pos:start="969:21" pos:end="969:28"><expr pos:start="969:21" pos:end="969:28"><operator pos:start="969:21" pos:end="969:21">&amp;</operator><name pos:start="969:22" pos:end="969:28"><name pos:start="969:22" pos:end="969:22">s</name><operator pos:start="969:23" pos:end="969:24">-&gt;</operator><name pos:start="969:25" pos:end="969:28">fdsp</name></name></expr></argument>, <argument pos:start="969:31" pos:end="969:35"><expr pos:start="969:31" pos:end="969:35"><name pos:start="969:31" pos:end="969:35">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="971:5" pos:end="971:36"><expr pos:start="971:5" pos:end="971:35"><call pos:start="971:5" pos:end="971:35"><name pos:start="971:5" pos:end="971:18">ff_me_cmp_init</name><argument_list pos:start="971:19" pos:end="971:35">(<argument pos:start="971:20" pos:end="971:27"><expr pos:start="971:20" pos:end="971:27"><operator pos:start="971:20" pos:end="971:20">&amp;</operator><name pos:start="971:21" pos:end="971:27"><name pos:start="971:21" pos:end="971:21">s</name><operator pos:start="971:22" pos:end="971:23">-&gt;</operator><name pos:start="971:24" pos:end="971:27">mecc</name></name></expr></argument>, <argument pos:start="971:30" pos:end="971:34"><expr pos:start="971:30" pos:end="971:34"><name pos:start="971:30" pos:end="971:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="973:5" pos:end="973:50"><expr pos:start="973:5" pos:end="973:49"><call pos:start="973:5" pos:end="973:49"><name pos:start="973:5" pos:end="973:27">ff_mpegvideoencdsp_init</name><argument_list pos:start="973:28" pos:end="973:49">(<argument pos:start="973:29" pos:end="973:41"><expr pos:start="973:29" pos:end="973:41"><operator pos:start="973:29" pos:end="973:29">&amp;</operator><name pos:start="973:30" pos:end="973:41"><name pos:start="973:30" pos:end="973:30">s</name><operator pos:start="973:31" pos:end="973:32">-&gt;</operator><name pos:start="973:33" pos:end="973:41">mpvencdsp</name></name></expr></argument>, <argument pos:start="973:44" pos:end="973:48"><expr pos:start="973:44" pos:end="973:48"><name pos:start="973:44" pos:end="973:48">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="975:5" pos:end="975:41"><expr pos:start="975:5" pos:end="975:40"><call pos:start="975:5" pos:end="975:40"><name pos:start="975:5" pos:end="975:23">ff_pixblockdsp_init</name><argument_list pos:start="975:24" pos:end="975:40">(<argument pos:start="975:25" pos:end="975:32"><expr pos:start="975:25" pos:end="975:32"><operator pos:start="975:25" pos:end="975:25">&amp;</operator><name pos:start="975:26" pos:end="975:32"><name pos:start="975:26" pos:end="975:26">s</name><operator pos:start="975:27" pos:end="975:28">-&gt;</operator><name pos:start="975:29" pos:end="975:32">pdsp</name></name></expr></argument>, <argument pos:start="975:35" pos:end="975:39"><expr pos:start="975:35" pos:end="975:39"><name pos:start="975:35" pos:end="975:39">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="977:5" pos:end="977:30"><expr pos:start="977:5" pos:end="977:29"><call pos:start="977:5" pos:end="977:29"><name pos:start="977:5" pos:end="977:19">ff_qpeldsp_init</name><argument_list pos:start="977:20" pos:end="977:29">(<argument pos:start="977:21" pos:end="977:28"><expr pos:start="977:21" pos:end="977:28"><operator pos:start="977:21" pos:end="977:21">&amp;</operator><name pos:start="977:22" pos:end="977:28"><name pos:start="977:22" pos:end="977:22">s</name><operator pos:start="977:23" pos:end="977:24">-&gt;</operator><name pos:start="977:25" pos:end="977:28">qdsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="981:5" pos:end="989:5"><if pos:start="981:5" pos:end="989:5">if <condition pos:start="981:8" pos:end="981:27">(<expr pos:start="981:9" pos:end="981:26"><name pos:start="981:9" pos:end="981:26"><name pos:start="981:9" pos:end="981:9">s</name><operator pos:start="981:10" pos:end="981:11">-&gt;</operator><name pos:start="981:12" pos:end="981:26">msmpeg4_version</name></name></expr>)</condition> <block pos:start="981:29" pos:end="989:5">{<block_content pos:start="983:9" pos:end="987:65">

        <expr_stmt pos:start="983:9" pos:end="987:65"><expr pos:start="983:9" pos:end="987:64"><call pos:start="983:9" pos:end="987:64"><name pos:start="983:9" pos:end="983:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="983:26" pos:end="987:64">(<argument pos:start="983:27" pos:end="983:34"><expr pos:start="983:27" pos:end="983:34"><name pos:start="983:27" pos:end="983:34"><name pos:start="983:27" pos:end="983:27">s</name><operator pos:start="983:28" pos:end="983:29">-&gt;</operator><name pos:start="983:30" pos:end="983:34">avctx</name></name></expr></argument>, <argument pos:start="983:37" pos:end="983:47"><expr pos:start="983:37" pos:end="983:47"><name pos:start="983:37" pos:end="983:47"><name pos:start="983:37" pos:end="983:37">s</name><operator pos:start="983:38" pos:end="983:39">-&gt;</operator><name pos:start="983:40" pos:end="983:47">ac_stats</name></name></expr></argument>,

                          <argument pos:start="985:27" pos:end="987:57"><expr pos:start="985:27" pos:end="987:57"><literal type="number" pos:start="985:27" pos:end="985:27">2</literal> <operator pos:start="985:29" pos:end="985:29">*</operator> <literal type="number" pos:start="985:31" pos:end="985:31">2</literal> <operator pos:start="985:33" pos:end="985:33">*</operator> <operator pos:start="985:35" pos:end="985:35">(</operator><name pos:start="985:36" pos:end="985:44">MAX_LEVEL</name> <operator pos:start="985:46" pos:end="985:46">+</operator> <literal type="number" pos:start="985:48" pos:end="985:48">1</literal><operator pos:start="985:49" pos:end="985:49">)</operator> <operator pos:start="985:51" pos:end="985:51">*</operator>

                          <operator pos:start="987:27" pos:end="987:27">(</operator><name pos:start="987:28" pos:end="987:34">MAX_RUN</name> <operator pos:start="987:36" pos:end="987:36">+</operator> <literal type="number" pos:start="987:38" pos:end="987:38">1</literal><operator pos:start="987:39" pos:end="987:39">)</operator> <operator pos:start="987:41" pos:end="987:41">*</operator> <literal type="number" pos:start="987:43" pos:end="987:43">2</literal> <operator pos:start="987:45" pos:end="987:45">*</operator> <sizeof pos:start="987:47" pos:end="987:57">sizeof<argument_list pos:start="987:53" pos:end="987:57">(<argument pos:start="987:54" pos:end="987:56"><expr pos:start="987:54" pos:end="987:56"><name pos:start="987:54" pos:end="987:56">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="987:60" pos:end="987:63"><expr pos:start="987:60" pos:end="987:63"><name pos:start="987:60" pos:end="987:63">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="991:5" pos:end="991:64"><expr pos:start="991:5" pos:end="991:63"><call pos:start="991:5" pos:end="991:63"><name pos:start="991:5" pos:end="991:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="991:22" pos:end="991:63">(<argument pos:start="991:23" pos:end="991:30"><expr pos:start="991:23" pos:end="991:30"><name pos:start="991:23" pos:end="991:30"><name pos:start="991:23" pos:end="991:23">s</name><operator pos:start="991:24" pos:end="991:25">-&gt;</operator><name pos:start="991:26" pos:end="991:30">avctx</name></name></expr></argument>, <argument pos:start="991:33" pos:end="991:51"><expr pos:start="991:33" pos:end="991:51"><name pos:start="991:33" pos:end="991:51"><name pos:start="991:33" pos:end="991:33">s</name><operator pos:start="991:34" pos:end="991:35">-&gt;</operator><name pos:start="991:36" pos:end="991:40">avctx</name><operator pos:start="991:41" pos:end="991:42">-&gt;</operator><name pos:start="991:43" pos:end="991:51">stats_out</name></name></expr></argument>, <argument pos:start="991:54" pos:end="991:56"><expr pos:start="991:54" pos:end="991:56"><literal type="number" pos:start="991:54" pos:end="991:56">256</literal></expr></argument>, <argument pos:start="991:59" pos:end="991:62"><expr pos:start="991:59" pos:end="991:62"><name pos:start="991:59" pos:end="991:62">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="995:5" pos:end="995:82"><expr pos:start="995:5" pos:end="995:81"><call pos:start="995:5" pos:end="995:81"><name pos:start="995:5" pos:end="995:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="995:22" pos:end="995:81">(<argument pos:start="995:23" pos:end="995:30"><expr pos:start="995:23" pos:end="995:30"><name pos:start="995:23" pos:end="995:30"><name pos:start="995:23" pos:end="995:23">s</name><operator pos:start="995:24" pos:end="995:25">-&gt;</operator><name pos:start="995:26" pos:end="995:30">avctx</name></name></expr></argument>, <argument pos:start="995:33" pos:end="995:49"><expr pos:start="995:33" pos:end="995:49"><name pos:start="995:33" pos:end="995:49"><name pos:start="995:33" pos:end="995:33">s</name><operator pos:start="995:34" pos:end="995:35">-&gt;</operator><name pos:start="995:36" pos:end="995:49">q_intra_matrix</name></name></expr></argument>,   <argument pos:start="995:54" pos:end="995:74"><expr pos:start="995:54" pos:end="995:74"><literal type="number" pos:start="995:54" pos:end="995:55">64</literal> <operator pos:start="995:57" pos:end="995:57">*</operator> <literal type="number" pos:start="995:59" pos:end="995:60">32</literal> <operator pos:start="995:62" pos:end="995:62">*</operator> <sizeof pos:start="995:64" pos:end="995:74">sizeof<argument_list pos:start="995:70" pos:end="995:74">(<argument pos:start="995:71" pos:end="995:73"><expr pos:start="995:71" pos:end="995:73"><name pos:start="995:71" pos:end="995:73">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="995:77" pos:end="995:80"><expr pos:start="995:77" pos:end="995:80"><name pos:start="995:77" pos:end="995:80">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="997:5" pos:end="997:82"><expr pos:start="997:5" pos:end="997:81"><call pos:start="997:5" pos:end="997:81"><name pos:start="997:5" pos:end="997:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="997:22" pos:end="997:81">(<argument pos:start="997:23" pos:end="997:30"><expr pos:start="997:23" pos:end="997:30"><name pos:start="997:23" pos:end="997:30"><name pos:start="997:23" pos:end="997:23">s</name><operator pos:start="997:24" pos:end="997:25">-&gt;</operator><name pos:start="997:26" pos:end="997:30">avctx</name></name></expr></argument>, <argument pos:start="997:33" pos:end="997:49"><expr pos:start="997:33" pos:end="997:49"><name pos:start="997:33" pos:end="997:49"><name pos:start="997:33" pos:end="997:33">s</name><operator pos:start="997:34" pos:end="997:35">-&gt;</operator><name pos:start="997:36" pos:end="997:49">q_inter_matrix</name></name></expr></argument>,   <argument pos:start="997:54" pos:end="997:74"><expr pos:start="997:54" pos:end="997:74"><literal type="number" pos:start="997:54" pos:end="997:55">64</literal> <operator pos:start="997:57" pos:end="997:57">*</operator> <literal type="number" pos:start="997:59" pos:end="997:60">32</literal> <operator pos:start="997:62" pos:end="997:62">*</operator> <sizeof pos:start="997:64" pos:end="997:74">sizeof<argument_list pos:start="997:70" pos:end="997:74">(<argument pos:start="997:71" pos:end="997:73"><expr pos:start="997:71" pos:end="997:73"><name pos:start="997:71" pos:end="997:73">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="997:77" pos:end="997:80"><expr pos:start="997:77" pos:end="997:80"><name pos:start="997:77" pos:end="997:80">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="999:5" pos:end="999:91"><expr pos:start="999:5" pos:end="999:90"><call pos:start="999:5" pos:end="999:90"><name pos:start="999:5" pos:end="999:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="999:22" pos:end="999:90">(<argument pos:start="999:23" pos:end="999:30"><expr pos:start="999:23" pos:end="999:30"><name pos:start="999:23" pos:end="999:30"><name pos:start="999:23" pos:end="999:23">s</name><operator pos:start="999:24" pos:end="999:25">-&gt;</operator><name pos:start="999:26" pos:end="999:30">avctx</name></name></expr></argument>, <argument pos:start="999:33" pos:end="999:51"><expr pos:start="999:33" pos:end="999:51"><name pos:start="999:33" pos:end="999:51"><name pos:start="999:33" pos:end="999:33">s</name><operator pos:start="999:34" pos:end="999:35">-&gt;</operator><name pos:start="999:36" pos:end="999:51">q_intra_matrix16</name></name></expr></argument>, <argument pos:start="999:54" pos:end="999:83"><expr pos:start="999:54" pos:end="999:83"><literal type="number" pos:start="999:54" pos:end="999:55">64</literal> <operator pos:start="999:57" pos:end="999:57">*</operator> <literal type="number" pos:start="999:59" pos:end="999:60">32</literal> <operator pos:start="999:62" pos:end="999:62">*</operator> <literal type="number" pos:start="999:64" pos:end="999:64">2</literal> <operator pos:start="999:66" pos:end="999:66">*</operator> <sizeof pos:start="999:68" pos:end="999:83">sizeof<argument_list pos:start="999:74" pos:end="999:83">(<argument pos:start="999:75" pos:end="999:82"><expr pos:start="999:75" pos:end="999:82"><name pos:start="999:75" pos:end="999:82">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="999:86" pos:end="999:89"><expr pos:start="999:86" pos:end="999:89"><name pos:start="999:86" pos:end="999:89">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1001:5" pos:end="1001:91"><expr pos:start="1001:5" pos:end="1001:90"><call pos:start="1001:5" pos:end="1001:90"><name pos:start="1001:5" pos:end="1001:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="1001:22" pos:end="1001:90">(<argument pos:start="1001:23" pos:end="1001:30"><expr pos:start="1001:23" pos:end="1001:30"><name pos:start="1001:23" pos:end="1001:30"><name pos:start="1001:23" pos:end="1001:23">s</name><operator pos:start="1001:24" pos:end="1001:25">-&gt;</operator><name pos:start="1001:26" pos:end="1001:30">avctx</name></name></expr></argument>, <argument pos:start="1001:33" pos:end="1001:51"><expr pos:start="1001:33" pos:end="1001:51"><name pos:start="1001:33" pos:end="1001:51"><name pos:start="1001:33" pos:end="1001:33">s</name><operator pos:start="1001:34" pos:end="1001:35">-&gt;</operator><name pos:start="1001:36" pos:end="1001:51">q_inter_matrix16</name></name></expr></argument>, <argument pos:start="1001:54" pos:end="1001:83"><expr pos:start="1001:54" pos:end="1001:83"><literal type="number" pos:start="1001:54" pos:end="1001:55">64</literal> <operator pos:start="1001:57" pos:end="1001:57">*</operator> <literal type="number" pos:start="1001:59" pos:end="1001:60">32</literal> <operator pos:start="1001:62" pos:end="1001:62">*</operator> <literal type="number" pos:start="1001:64" pos:end="1001:64">2</literal> <operator pos:start="1001:66" pos:end="1001:66">*</operator> <sizeof pos:start="1001:68" pos:end="1001:83">sizeof<argument_list pos:start="1001:74" pos:end="1001:83">(<argument pos:start="1001:75" pos:end="1001:82"><expr pos:start="1001:75" pos:end="1001:82"><name pos:start="1001:75" pos:end="1001:82">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1001:86" pos:end="1001:89"><expr pos:start="1001:86" pos:end="1001:89"><name pos:start="1001:86" pos:end="1001:89">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1003:5" pos:end="1005:67"><expr pos:start="1003:5" pos:end="1005:66"><call pos:start="1003:5" pos:end="1005:66"><name pos:start="1003:5" pos:end="1003:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="1003:22" pos:end="1005:66">(<argument pos:start="1003:23" pos:end="1003:30"><expr pos:start="1003:23" pos:end="1003:30"><name pos:start="1003:23" pos:end="1003:30"><name pos:start="1003:23" pos:end="1003:23">s</name><operator pos:start="1003:24" pos:end="1003:25">-&gt;</operator><name pos:start="1003:26" pos:end="1003:30">avctx</name></name></expr></argument>, <argument pos:start="1003:33" pos:end="1003:48"><expr pos:start="1003:33" pos:end="1003:48"><name pos:start="1003:33" pos:end="1003:48"><name pos:start="1003:33" pos:end="1003:33">s</name><operator pos:start="1003:34" pos:end="1003:35">-&gt;</operator><name pos:start="1003:36" pos:end="1003:48">input_picture</name></name></expr></argument>,

                      <argument pos:start="1005:23" pos:end="1005:59"><expr pos:start="1005:23" pos:end="1005:59"><name pos:start="1005:23" pos:end="1005:39">MAX_PICTURE_COUNT</name> <operator pos:start="1005:41" pos:end="1005:41">*</operator> <sizeof pos:start="1005:43" pos:end="1005:59">sizeof<argument_list pos:start="1005:49" pos:end="1005:59">(<argument pos:start="1005:50" pos:end="1005:58"><expr pos:start="1005:50" pos:end="1005:58"><name pos:start="1005:50" pos:end="1005:56">Picture</name> <operator pos:start="1005:58" pos:end="1005:58">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1005:62" pos:end="1005:65"><expr pos:start="1005:62" pos:end="1005:65"><name pos:start="1005:62" pos:end="1005:65">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1007:5" pos:end="1009:67"><expr pos:start="1007:5" pos:end="1009:66"><call pos:start="1007:5" pos:end="1009:66"><name pos:start="1007:5" pos:end="1007:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="1007:22" pos:end="1009:66">(<argument pos:start="1007:23" pos:end="1007:30"><expr pos:start="1007:23" pos:end="1007:30"><name pos:start="1007:23" pos:end="1007:30"><name pos:start="1007:23" pos:end="1007:23">s</name><operator pos:start="1007:24" pos:end="1007:25">-&gt;</operator><name pos:start="1007:26" pos:end="1007:30">avctx</name></name></expr></argument>, <argument pos:start="1007:33" pos:end="1007:58"><expr pos:start="1007:33" pos:end="1007:58"><name pos:start="1007:33" pos:end="1007:58"><name pos:start="1007:33" pos:end="1007:33">s</name><operator pos:start="1007:34" pos:end="1007:35">-&gt;</operator><name pos:start="1007:36" pos:end="1007:58">reordered_input_picture</name></name></expr></argument>,

                      <argument pos:start="1009:23" pos:end="1009:59"><expr pos:start="1009:23" pos:end="1009:59"><name pos:start="1009:23" pos:end="1009:39">MAX_PICTURE_COUNT</name> <operator pos:start="1009:41" pos:end="1009:41">*</operator> <sizeof pos:start="1009:43" pos:end="1009:59">sizeof<argument_list pos:start="1009:49" pos:end="1009:59">(<argument pos:start="1009:50" pos:end="1009:58"><expr pos:start="1009:50" pos:end="1009:58"><name pos:start="1009:50" pos:end="1009:56">Picture</name> <operator pos:start="1009:58" pos:end="1009:58">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1009:62" pos:end="1009:65"><expr pos:start="1009:62" pos:end="1009:65"><name pos:start="1009:62" pos:end="1009:65">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1013:5" pos:end="1019:5"><if pos:start="1013:5" pos:end="1019:5">if <condition pos:start="1013:8" pos:end="1013:34">(<expr pos:start="1013:9" pos:end="1013:33"><name pos:start="1013:9" pos:end="1013:33"><name pos:start="1013:9" pos:end="1013:9">s</name><operator pos:start="1013:10" pos:end="1013:11">-&gt;</operator><name pos:start="1013:12" pos:end="1013:16">avctx</name><operator pos:start="1013:17" pos:end="1013:18">-&gt;</operator><name pos:start="1013:19" pos:end="1013:33">noise_reduction</name></name></expr>)</condition> <block pos:start="1013:36" pos:end="1019:5">{<block_content pos:start="1015:9" pos:end="1017:59">

        <expr_stmt pos:start="1015:9" pos:end="1017:59"><expr pos:start="1015:9" pos:end="1017:58"><call pos:start="1015:9" pos:end="1017:58"><name pos:start="1015:9" pos:end="1015:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="1015:26" pos:end="1017:58">(<argument pos:start="1015:27" pos:end="1015:34"><expr pos:start="1015:27" pos:end="1015:34"><name pos:start="1015:27" pos:end="1015:34"><name pos:start="1015:27" pos:end="1015:27">s</name><operator pos:start="1015:28" pos:end="1015:29">-&gt;</operator><name pos:start="1015:30" pos:end="1015:34">avctx</name></name></expr></argument>, <argument pos:start="1015:37" pos:end="1015:49"><expr pos:start="1015:37" pos:end="1015:49"><name pos:start="1015:37" pos:end="1015:49"><name pos:start="1015:37" pos:end="1015:37">s</name><operator pos:start="1015:38" pos:end="1015:39">-&gt;</operator><name pos:start="1015:40" pos:end="1015:49">dct_offset</name></name></expr></argument>,

                          <argument pos:start="1017:27" pos:end="1017:51"><expr pos:start="1017:27" pos:end="1017:51"><literal type="number" pos:start="1017:27" pos:end="1017:27">2</literal> <operator pos:start="1017:29" pos:end="1017:29">*</operator> <literal type="number" pos:start="1017:31" pos:end="1017:32">64</literal> <operator pos:start="1017:34" pos:end="1017:34">*</operator> <sizeof pos:start="1017:36" pos:end="1017:51">sizeof<argument_list pos:start="1017:42" pos:end="1017:51">(<argument pos:start="1017:43" pos:end="1017:50"><expr pos:start="1017:43" pos:end="1017:50"><name pos:start="1017:43" pos:end="1017:50">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1017:54" pos:end="1017:57"><expr pos:start="1017:54" pos:end="1017:57"><name pos:start="1017:54" pos:end="1017:57">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1023:5" pos:end="1025:37"><if pos:start="1023:5" pos:end="1025:37">if <condition pos:start="1023:8" pos:end="1023:28">(<expr pos:start="1023:9" pos:end="1023:27"><name pos:start="1023:9" pos:end="1023:27">CONFIG_H263_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="1025:9" pos:end="1025:37"><block_content pos:start="1025:9" pos:end="1025:37">

        <expr_stmt pos:start="1025:9" pos:end="1025:37"><expr pos:start="1025:9" pos:end="1025:36"><call pos:start="1025:9" pos:end="1025:36"><name pos:start="1025:9" pos:end="1025:23">ff_h263dsp_init</name><argument_list pos:start="1025:24" pos:end="1025:36">(<argument pos:start="1025:25" pos:end="1025:35"><expr pos:start="1025:25" pos:end="1025:35"><operator pos:start="1025:25" pos:end="1025:25">&amp;</operator><name pos:start="1025:26" pos:end="1025:35"><name pos:start="1025:26" pos:end="1025:26">s</name><operator pos:start="1025:27" pos:end="1025:28">-&gt;</operator><name pos:start="1025:29" pos:end="1025:35">h263dsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1027:5" pos:end="1029:44"><if pos:start="1027:5" pos:end="1029:44">if <condition pos:start="1027:8" pos:end="1027:25">(<expr pos:start="1027:9" pos:end="1027:24"><operator pos:start="1027:9" pos:end="1027:9">!</operator><name pos:start="1027:10" pos:end="1027:24"><name pos:start="1027:10" pos:end="1027:10">s</name><operator pos:start="1027:11" pos:end="1027:12">-&gt;</operator><name pos:start="1027:13" pos:end="1027:24">dct_quantize</name></name></expr>)</condition><block type="pseudo" pos:start="1029:9" pos:end="1029:44"><block_content pos:start="1029:9" pos:end="1029:44">

        <expr_stmt pos:start="1029:9" pos:end="1029:44"><expr pos:start="1029:9" pos:end="1029:43"><name pos:start="1029:9" pos:end="1029:23"><name pos:start="1029:9" pos:end="1029:9">s</name><operator pos:start="1029:10" pos:end="1029:11">-&gt;</operator><name pos:start="1029:12" pos:end="1029:23">dct_quantize</name></name> <operator pos:start="1029:25" pos:end="1029:25">=</operator> <name pos:start="1029:27" pos:end="1029:43">ff_dct_quantize_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1031:5" pos:end="1033:40"><if pos:start="1031:5" pos:end="1033:40">if <condition pos:start="1031:8" pos:end="1031:24">(<expr pos:start="1031:9" pos:end="1031:23"><operator pos:start="1031:9" pos:end="1031:9">!</operator><name pos:start="1031:10" pos:end="1031:23"><name pos:start="1031:10" pos:end="1031:10">s</name><operator pos:start="1031:11" pos:end="1031:12">-&gt;</operator><name pos:start="1031:13" pos:end="1031:23">denoise_dct</name></name></expr>)</condition><block type="pseudo" pos:start="1033:9" pos:end="1033:40"><block_content pos:start="1033:9" pos:end="1033:40">

        <expr_stmt pos:start="1033:9" pos:end="1033:40"><expr pos:start="1033:9" pos:end="1033:39"><name pos:start="1033:9" pos:end="1033:22"><name pos:start="1033:9" pos:end="1033:9">s</name><operator pos:start="1033:10" pos:end="1033:11">-&gt;</operator><name pos:start="1033:12" pos:end="1033:22">denoise_dct</name></name>  <operator pos:start="1033:25" pos:end="1033:25">=</operator> <name pos:start="1033:27" pos:end="1033:39">denoise_dct_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1035:5" pos:end="1035:43"><expr pos:start="1035:5" pos:end="1035:42"><name pos:start="1035:5" pos:end="1035:24"><name pos:start="1035:5" pos:end="1035:5">s</name><operator pos:start="1035:6" pos:end="1035:7">-&gt;</operator><name pos:start="1035:8" pos:end="1035:24">fast_dct_quantize</name></name> <operator pos:start="1035:26" pos:end="1035:26">=</operator> <name pos:start="1035:28" pos:end="1035:42"><name pos:start="1035:28" pos:end="1035:28">s</name><operator pos:start="1035:29" pos:end="1035:30">-&gt;</operator><name pos:start="1035:31" pos:end="1035:42">dct_quantize</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="1037:5" pos:end="1039:50"><if pos:start="1037:5" pos:end="1039:50">if <condition pos:start="1037:8" pos:end="1037:23">(<expr pos:start="1037:9" pos:end="1037:22"><name pos:start="1037:9" pos:end="1037:22"><name pos:start="1037:9" pos:end="1037:13">avctx</name><operator pos:start="1037:14" pos:end="1037:15">-&gt;</operator><name pos:start="1037:16" pos:end="1037:22">trellis</name></name></expr>)</condition><block type="pseudo" pos:start="1039:9" pos:end="1039:50"><block_content pos:start="1039:9" pos:end="1039:50">

        <expr_stmt pos:start="1039:9" pos:end="1039:50"><expr pos:start="1039:9" pos:end="1039:49"><name pos:start="1039:9" pos:end="1039:23"><name pos:start="1039:9" pos:end="1039:9">s</name><operator pos:start="1039:10" pos:end="1039:11">-&gt;</operator><name pos:start="1039:12" pos:end="1039:23">dct_quantize</name></name>  <operator pos:start="1039:26" pos:end="1039:26">=</operator> <name pos:start="1039:28" pos:end="1039:49">dct_quantize_trellis_c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1043:5" pos:end="1045:61"><if pos:start="1043:5" pos:end="1045:61">if <condition pos:start="1043:8" pos:end="1043:75">(<expr pos:start="1043:9" pos:end="1043:74"><operator pos:start="1043:9" pos:end="1043:9">(</operator><name pos:start="1043:10" pos:end="1043:29">CONFIG_H263P_ENCODER</name> <operator pos:start="1043:31" pos:end="1043:32">||</operator> <name pos:start="1043:34" pos:end="1043:52">CONFIG_RV20_ENCODER</name><operator pos:start="1043:53" pos:end="1043:53">)</operator> <operator pos:start="1043:55" pos:end="1043:56">&amp;&amp;</operator> <name pos:start="1043:58" pos:end="1043:74"><name pos:start="1043:58" pos:end="1043:58">s</name><operator pos:start="1043:59" pos:end="1043:60">-&gt;</operator><name pos:start="1043:61" pos:end="1043:74">modified_quant</name></name></expr>)</condition><block type="pseudo" pos:start="1045:9" pos:end="1045:61"><block_content pos:start="1045:9" pos:end="1045:61">

        <expr_stmt pos:start="1045:9" pos:end="1045:61"><expr pos:start="1045:9" pos:end="1045:60"><name pos:start="1045:9" pos:end="1045:30"><name pos:start="1045:9" pos:end="1045:9">s</name><operator pos:start="1045:10" pos:end="1045:11">-&gt;</operator><name pos:start="1045:12" pos:end="1045:30">chroma_qscale_table</name></name> <operator pos:start="1045:32" pos:end="1045:32">=</operator> <name pos:start="1045:34" pos:end="1045:60">ff_h263_chroma_qscale_table</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1049:5" pos:end="1059:5"><if pos:start="1049:5" pos:end="1059:5">if <condition pos:start="1049:8" pos:end="1049:35">(<expr pos:start="1049:9" pos:end="1049:34"><name pos:start="1049:9" pos:end="1049:30"><name pos:start="1049:9" pos:end="1049:9">s</name><operator pos:start="1049:10" pos:end="1049:11">-&gt;</operator><name pos:start="1049:12" pos:end="1049:30">slice_context_count</name></name> <operator pos:start="1049:32" pos:end="1049:32">&gt;</operator> <literal type="number" pos:start="1049:34" pos:end="1049:34">1</literal></expr>)</condition> <block pos:start="1049:37" pos:end="1059:5">{<block_content pos:start="1051:9" pos:end="1057:41">

        <expr_stmt pos:start="1051:9" pos:end="1051:24"><expr pos:start="1051:9" pos:end="1051:23"><name pos:start="1051:9" pos:end="1051:19"><name pos:start="1051:9" pos:end="1051:9">s</name><operator pos:start="1051:10" pos:end="1051:11">-&gt;</operator><name pos:start="1051:12" pos:end="1051:19">rtp_mode</name></name> <operator pos:start="1051:21" pos:end="1051:21">=</operator> <literal type="number" pos:start="1051:23" pos:end="1051:23">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="1055:9" pos:end="1057:41"><if pos:start="1055:9" pos:end="1057:41">if <condition pos:start="1055:12" pos:end="1055:88">(<expr pos:start="1055:13" pos:end="1055:87"><name pos:start="1055:13" pos:end="1055:27"><name pos:start="1055:13" pos:end="1055:17">avctx</name><operator pos:start="1055:18" pos:end="1055:19">-&gt;</operator><name pos:start="1055:20" pos:end="1055:27">codec_id</name></name> <operator pos:start="1055:29" pos:end="1055:30">==</operator> <name pos:start="1055:32" pos:end="1055:47">AV_CODEC_ID_H263</name> <operator pos:start="1055:49" pos:end="1055:50">||</operator> <name pos:start="1055:52" pos:end="1055:66"><name pos:start="1055:52" pos:end="1055:56">avctx</name><operator pos:start="1055:57" pos:end="1055:58">-&gt;</operator><name pos:start="1055:59" pos:end="1055:66">codec_id</name></name> <operator pos:start="1055:68" pos:end="1055:69">==</operator> <name pos:start="1055:71" pos:end="1055:87">AV_CODEC_ID_H263P</name></expr>)</condition><block type="pseudo" pos:start="1057:13" pos:end="1057:41"><block_content pos:start="1057:13" pos:end="1057:41">

            <expr_stmt pos:start="1057:13" pos:end="1057:41"><expr pos:start="1057:13" pos:end="1057:40"><name pos:start="1057:13" pos:end="1057:36"><name pos:start="1057:13" pos:end="1057:13">s</name><operator pos:start="1057:14" pos:end="1057:15">-&gt;</operator><name pos:start="1057:16" pos:end="1057:36">h263_slice_structured</name></name> <operator pos:start="1057:38" pos:end="1057:38">=</operator> <literal type="number" pos:start="1057:40" pos:end="1057:40">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="1063:5" pos:end="1063:27"><expr pos:start="1063:5" pos:end="1063:26"><name pos:start="1063:5" pos:end="1063:22"><name pos:start="1063:5" pos:end="1063:5">s</name><operator pos:start="1063:6" pos:end="1063:7">-&gt;</operator><name pos:start="1063:8" pos:end="1063:22">quant_precision</name></name> <operator pos:start="1063:24" pos:end="1063:24">=</operator> <literal type="number" pos:start="1063:26" pos:end="1063:26">5</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="1067:5" pos:end="1067:70"><expr pos:start="1067:5" pos:end="1067:69"><call pos:start="1067:5" pos:end="1067:69"><name pos:start="1067:5" pos:end="1067:14">ff_set_cmp</name><argument_list pos:start="1067:15" pos:end="1067:69">(<argument pos:start="1067:16" pos:end="1067:23"><expr pos:start="1067:16" pos:end="1067:23"><operator pos:start="1067:16" pos:end="1067:16">&amp;</operator><name pos:start="1067:17" pos:end="1067:23"><name pos:start="1067:17" pos:end="1067:17">s</name><operator pos:start="1067:18" pos:end="1067:19">-&gt;</operator><name pos:start="1067:20" pos:end="1067:23">mecc</name></name></expr></argument>, <argument pos:start="1067:26" pos:end="1067:42"><expr pos:start="1067:26" pos:end="1067:42"><name pos:start="1067:26" pos:end="1067:42"><name pos:start="1067:26" pos:end="1067:26">s</name><operator pos:start="1067:27" pos:end="1067:28">-&gt;</operator><name pos:start="1067:29" pos:end="1067:32">mecc</name><operator pos:start="1067:33" pos:end="1067:33">.</operator><name pos:start="1067:34" pos:end="1067:42">ildct_cmp</name></name></expr></argument>,      <argument pos:start="1067:50" pos:end="1067:68"><expr pos:start="1067:50" pos:end="1067:68"><name pos:start="1067:50" pos:end="1067:68"><name pos:start="1067:50" pos:end="1067:50">s</name><operator pos:start="1067:51" pos:end="1067:52">-&gt;</operator><name pos:start="1067:53" pos:end="1067:57">avctx</name><operator pos:start="1067:58" pos:end="1067:59">-&gt;</operator><name pos:start="1067:60" pos:end="1067:68">ildct_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1069:5" pos:end="1069:75"><expr pos:start="1069:5" pos:end="1069:74"><call pos:start="1069:5" pos:end="1069:74"><name pos:start="1069:5" pos:end="1069:14">ff_set_cmp</name><argument_list pos:start="1069:15" pos:end="1069:74">(<argument pos:start="1069:16" pos:end="1069:23"><expr pos:start="1069:16" pos:end="1069:23"><operator pos:start="1069:16" pos:end="1069:16">&amp;</operator><name pos:start="1069:17" pos:end="1069:23"><name pos:start="1069:17" pos:end="1069:17">s</name><operator pos:start="1069:18" pos:end="1069:19">-&gt;</operator><name pos:start="1069:20" pos:end="1069:23">mecc</name></name></expr></argument>, <argument pos:start="1069:26" pos:end="1069:47"><expr pos:start="1069:26" pos:end="1069:47"><name pos:start="1069:26" pos:end="1069:47"><name pos:start="1069:26" pos:end="1069:26">s</name><operator pos:start="1069:27" pos:end="1069:28">-&gt;</operator><name pos:start="1069:29" pos:end="1069:32">mecc</name><operator pos:start="1069:33" pos:end="1069:33">.</operator><name pos:start="1069:34" pos:end="1069:47">frame_skip_cmp</name></name></expr></argument>, <argument pos:start="1069:50" pos:end="1069:73"><expr pos:start="1069:50" pos:end="1069:73"><name pos:start="1069:50" pos:end="1069:73"><name pos:start="1069:50" pos:end="1069:50">s</name><operator pos:start="1069:51" pos:end="1069:52">-&gt;</operator><name pos:start="1069:53" pos:end="1069:57">avctx</name><operator pos:start="1069:58" pos:end="1069:59">-&gt;</operator><name pos:start="1069:60" pos:end="1069:73">frame_skip_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="1073:5" pos:end="1075:31"><if pos:start="1073:5" pos:end="1075:31">if <condition pos:start="1073:8" pos:end="1073:57">(<expr pos:start="1073:9" pos:end="1073:56"><name pos:start="1073:9" pos:end="1073:27">CONFIG_H261_ENCODER</name> <operator pos:start="1073:29" pos:end="1073:30">&amp;&amp;</operator> <name pos:start="1073:32" pos:end="1073:44"><name pos:start="1073:32" pos:end="1073:32">s</name><operator pos:start="1073:33" pos:end="1073:34">-&gt;</operator><name pos:start="1073:35" pos:end="1073:44">out_format</name></name> <operator pos:start="1073:46" pos:end="1073:47">==</operator> <name pos:start="1073:49" pos:end="1073:56">FMT_H261</name></expr>)</condition><block type="pseudo" pos:start="1075:9" pos:end="1075:31"><block_content pos:start="1075:9" pos:end="1075:31">

        <expr_stmt pos:start="1075:9" pos:end="1075:31"><expr pos:start="1075:9" pos:end="1075:30"><call pos:start="1075:9" pos:end="1075:30"><name pos:start="1075:9" pos:end="1075:27">ff_h261_encode_init</name><argument_list pos:start="1075:28" pos:end="1075:30">(<argument pos:start="1075:29" pos:end="1075:29"><expr pos:start="1075:29" pos:end="1075:29"><name pos:start="1075:29" pos:end="1075:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1077:5" pos:end="1079:31"><if pos:start="1077:5" pos:end="1079:31">if <condition pos:start="1077:8" pos:end="1077:57">(<expr pos:start="1077:9" pos:end="1077:56"><name pos:start="1077:9" pos:end="1077:27">CONFIG_H263_ENCODER</name> <operator pos:start="1077:29" pos:end="1077:30">&amp;&amp;</operator> <name pos:start="1077:32" pos:end="1077:44"><name pos:start="1077:32" pos:end="1077:32">s</name><operator pos:start="1077:33" pos:end="1077:34">-&gt;</operator><name pos:start="1077:35" pos:end="1077:44">out_format</name></name> <operator pos:start="1077:46" pos:end="1077:47">==</operator> <name pos:start="1077:49" pos:end="1077:56">FMT_H263</name></expr>)</condition><block type="pseudo" pos:start="1079:9" pos:end="1079:31"><block_content pos:start="1079:9" pos:end="1079:31">

        <expr_stmt pos:start="1079:9" pos:end="1079:31"><expr pos:start="1079:9" pos:end="1079:30"><call pos:start="1079:9" pos:end="1079:30"><name pos:start="1079:9" pos:end="1079:27">ff_h263_encode_init</name><argument_list pos:start="1079:28" pos:end="1079:30">(<argument pos:start="1079:29" pos:end="1079:29"><expr pos:start="1079:29" pos:end="1079:29"><name pos:start="1079:29" pos:end="1079:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1081:5" pos:end="1085:23"><if pos:start="1081:5" pos:end="1085:23">if <condition pos:start="1081:8" pos:end="1081:53">(<expr pos:start="1081:9" pos:end="1081:52"><name pos:start="1081:9" pos:end="1081:30">CONFIG_MSMPEG4_ENCODER</name> <operator pos:start="1081:32" pos:end="1081:33">&amp;&amp;</operator> <name pos:start="1081:35" pos:end="1081:52"><name pos:start="1081:35" pos:end="1081:35">s</name><operator pos:start="1081:36" pos:end="1081:37">-&gt;</operator><name pos:start="1081:38" pos:end="1081:52">msmpeg4_version</name></name></expr>)</condition><block type="pseudo" pos:start="1083:9" pos:end="1085:23"><block_content pos:start="1083:9" pos:end="1085:23">

        <if_stmt pos:start="1083:9" pos:end="1085:23"><if pos:start="1083:9" pos:end="1085:23">if <condition pos:start="1083:12" pos:end="1083:50">(<expr pos:start="1083:13" pos:end="1083:49"><operator pos:start="1083:13" pos:end="1083:13">(</operator><name pos:start="1083:14" pos:end="1083:16">ret</name> <operator pos:start="1083:18" pos:end="1083:18">=</operator> <call pos:start="1083:20" pos:end="1083:44"><name pos:start="1083:20" pos:end="1083:41">ff_msmpeg4_encode_init</name><argument_list pos:start="1083:42" pos:end="1083:44">(<argument pos:start="1083:43" pos:end="1083:43"><expr pos:start="1083:43" pos:end="1083:43"><name pos:start="1083:43" pos:end="1083:43">s</name></expr></argument>)</argument_list></call><operator pos:start="1083:45" pos:end="1083:45">)</operator> <operator pos:start="1083:47" pos:end="1083:47">&lt;</operator> <literal type="number" pos:start="1083:49" pos:end="1083:49">0</literal></expr>)</condition><block type="pseudo" pos:start="1085:13" pos:end="1085:23"><block_content pos:start="1085:13" pos:end="1085:23">

            <return pos:start="1085:13" pos:end="1085:23">return <expr pos:start="1085:20" pos:end="1085:22"><name pos:start="1085:20" pos:end="1085:22">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1087:5" pos:end="1091:32"><if pos:start="1087:5" pos:end="1091:32">if <condition pos:start="1087:8" pos:end="1089:38">(<expr pos:start="1087:9" pos:end="1089:37"><operator pos:start="1087:9" pos:end="1087:9">(</operator><name pos:start="1087:10" pos:end="1087:34">CONFIG_MPEG1VIDEO_ENCODER</name> <operator pos:start="1087:36" pos:end="1087:37">||</operator> <name pos:start="1087:39" pos:end="1087:63">CONFIG_MPEG2VIDEO_ENCODER</name><operator pos:start="1087:64" pos:end="1087:64">)</operator>

        <operator pos:start="1089:9" pos:end="1089:10">&amp;&amp;</operator> <name pos:start="1089:12" pos:end="1089:24"><name pos:start="1089:12" pos:end="1089:12">s</name><operator pos:start="1089:13" pos:end="1089:14">-&gt;</operator><name pos:start="1089:15" pos:end="1089:24">out_format</name></name> <operator pos:start="1089:26" pos:end="1089:27">==</operator> <name pos:start="1089:29" pos:end="1089:37">FMT_MPEG1</name></expr>)</condition><block type="pseudo" pos:start="1091:9" pos:end="1091:32"><block_content pos:start="1091:9" pos:end="1091:32">

        <expr_stmt pos:start="1091:9" pos:end="1091:32"><expr pos:start="1091:9" pos:end="1091:31"><call pos:start="1091:9" pos:end="1091:31"><name pos:start="1091:9" pos:end="1091:28">ff_mpeg1_encode_init</name><argument_list pos:start="1091:29" pos:end="1091:31">(<argument pos:start="1091:30" pos:end="1091:30"><expr pos:start="1091:30" pos:end="1091:30"><name pos:start="1091:30" pos:end="1091:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="1095:5" pos:end="1095:23">/* init q matrix */</comment>

    <for pos:start="1097:5" pos:end="1133:5">for <control pos:start="1097:9" pos:end="1097:28">(<init pos:start="1097:10" pos:end="1097:15"><expr pos:start="1097:10" pos:end="1097:14"><name pos:start="1097:10" pos:end="1097:10">i</name> <operator pos:start="1097:12" pos:end="1097:12">=</operator> <literal type="number" pos:start="1097:14" pos:end="1097:14">0</literal></expr>;</init> <condition pos:start="1097:17" pos:end="1097:23"><expr pos:start="1097:17" pos:end="1097:22"><name pos:start="1097:17" pos:end="1097:17">i</name> <operator pos:start="1097:19" pos:end="1097:19">&lt;</operator> <literal type="number" pos:start="1097:21" pos:end="1097:22">64</literal></expr>;</condition> <incr pos:start="1097:25" pos:end="1097:27"><expr pos:start="1097:25" pos:end="1097:27"><name pos:start="1097:25" pos:end="1097:25">i</name><operator pos:start="1097:26" pos:end="1097:27">++</operator></expr></incr>)</control> <block pos:start="1097:30" pos:end="1133:5">{<block_content pos:start="1099:9" pos:end="1131:59">

        <decl_stmt pos:start="1099:9" pos:end="1099:44"><decl pos:start="1099:9" pos:end="1099:43"><type pos:start="1099:9" pos:end="1099:11"><name pos:start="1099:9" pos:end="1099:11">int</name></type> <name pos:start="1099:13" pos:end="1099:13">j</name> <init pos:start="1099:15" pos:end="1099:43">= <expr pos:start="1099:17" pos:end="1099:43"><name pos:start="1099:17" pos:end="1099:43"><name pos:start="1099:17" pos:end="1099:17">s</name><operator pos:start="1099:18" pos:end="1099:19">-&gt;</operator><name pos:start="1099:20" pos:end="1099:23">idsp</name><operator pos:start="1099:24" pos:end="1099:24">.</operator><name pos:start="1099:25" pos:end="1099:40">idct_permutation</name><index pos:start="1099:41" pos:end="1099:43">[<expr pos:start="1099:42" pos:end="1099:42"><name pos:start="1099:42" pos:end="1099:42">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="1101:9" pos:end="1123:9"><if pos:start="1101:9" pos:end="1109:9">if <condition pos:start="1101:12" pos:end="1103:26">(<expr pos:start="1101:13" pos:end="1103:25"><name pos:start="1101:13" pos:end="1101:32">CONFIG_MPEG4_ENCODER</name> <operator pos:start="1101:34" pos:end="1101:35">&amp;&amp;</operator> <name pos:start="1101:37" pos:end="1101:47"><name pos:start="1101:37" pos:end="1101:37">s</name><operator pos:start="1101:38" pos:end="1101:39">-&gt;</operator><name pos:start="1101:40" pos:end="1101:47">codec_id</name></name> <operator pos:start="1101:49" pos:end="1101:50">==</operator> <name pos:start="1101:52" pos:end="1101:68">AV_CODEC_ID_MPEG4</name> <operator pos:start="1101:70" pos:end="1101:71">&amp;&amp;</operator>

            <name pos:start="1103:13" pos:end="1103:25"><name pos:start="1103:13" pos:end="1103:13">s</name><operator pos:start="1103:14" pos:end="1103:15">-&gt;</operator><name pos:start="1103:16" pos:end="1103:25">mpeg_quant</name></name></expr>)</condition> <block pos:start="1103:28" pos:end="1109:9">{<block_content pos:start="1105:13" pos:end="1107:70">

            <expr_stmt pos:start="1105:13" pos:end="1105:66"><expr pos:start="1105:13" pos:end="1105:65"><name pos:start="1105:13" pos:end="1105:30"><name pos:start="1105:13" pos:end="1105:13">s</name><operator pos:start="1105:14" pos:end="1105:15">-&gt;</operator><name pos:start="1105:16" pos:end="1105:27">intra_matrix</name><index pos:start="1105:28" pos:end="1105:30">[<expr pos:start="1105:29" pos:end="1105:29"><name pos:start="1105:29" pos:end="1105:29">j</name></expr>]</index></name> <operator pos:start="1105:32" pos:end="1105:32">=</operator> <name pos:start="1105:34" pos:end="1105:65"><name pos:start="1105:34" pos:end="1105:62">ff_mpeg4_default_intra_matrix</name><index pos:start="1105:63" pos:end="1105:65">[<expr pos:start="1105:64" pos:end="1105:64"><name pos:start="1105:64" pos:end="1105:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1107:13" pos:end="1107:70"><expr pos:start="1107:13" pos:end="1107:69"><name pos:start="1107:13" pos:end="1107:30"><name pos:start="1107:13" pos:end="1107:13">s</name><operator pos:start="1107:14" pos:end="1107:15">-&gt;</operator><name pos:start="1107:16" pos:end="1107:27">inter_matrix</name><index pos:start="1107:28" pos:end="1107:30">[<expr pos:start="1107:29" pos:end="1107:29"><name pos:start="1107:29" pos:end="1107:29">j</name></expr>]</index></name> <operator pos:start="1107:32" pos:end="1107:32">=</operator> <name pos:start="1107:34" pos:end="1107:69"><name pos:start="1107:34" pos:end="1107:66">ff_mpeg4_default_non_intra_matrix</name><index pos:start="1107:67" pos:end="1107:69">[<expr pos:start="1107:68" pos:end="1107:68"><name pos:start="1107:68" pos:end="1107:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="1109:11" pos:end="1115:9">else if <condition pos:start="1109:19" pos:end="1109:74">(<expr pos:start="1109:20" pos:end="1109:73"><name pos:start="1109:20" pos:end="1109:32"><name pos:start="1109:20" pos:end="1109:20">s</name><operator pos:start="1109:21" pos:end="1109:22">-&gt;</operator><name pos:start="1109:23" pos:end="1109:32">out_format</name></name> <operator pos:start="1109:34" pos:end="1109:35">==</operator> <name pos:start="1109:37" pos:end="1109:44">FMT_H263</name> <operator pos:start="1109:46" pos:end="1109:47">||</operator> <name pos:start="1109:49" pos:end="1109:61"><name pos:start="1109:49" pos:end="1109:49">s</name><operator pos:start="1109:50" pos:end="1109:51">-&gt;</operator><name pos:start="1109:52" pos:end="1109:61">out_format</name></name> <operator pos:start="1109:63" pos:end="1109:64">==</operator> <name pos:start="1109:66" pos:end="1109:73">FMT_H261</name></expr>)</condition> <block pos:start="1109:76" pos:end="1115:9">{<block_content pos:start="1111:13" pos:end="1113:70">

            <expr_stmt pos:start="1111:13" pos:end="1113:70"><expr pos:start="1111:13" pos:end="1113:69"><name pos:start="1111:13" pos:end="1111:30"><name pos:start="1111:13" pos:end="1111:13">s</name><operator pos:start="1111:14" pos:end="1111:15">-&gt;</operator><name pos:start="1111:16" pos:end="1111:27">intra_matrix</name><index pos:start="1111:28" pos:end="1111:30">[<expr pos:start="1111:29" pos:end="1111:29"><name pos:start="1111:29" pos:end="1111:29">j</name></expr>]</index></name> <operator pos:start="1111:32" pos:end="1111:32">=</operator>

            <name pos:start="1113:13" pos:end="1113:30"><name pos:start="1113:13" pos:end="1113:13">s</name><operator pos:start="1113:14" pos:end="1113:15">-&gt;</operator><name pos:start="1113:16" pos:end="1113:27">inter_matrix</name><index pos:start="1113:28" pos:end="1113:30">[<expr pos:start="1113:29" pos:end="1113:29"><name pos:start="1113:29" pos:end="1113:29">j</name></expr>]</index></name> <operator pos:start="1113:32" pos:end="1113:32">=</operator> <name pos:start="1113:34" pos:end="1113:69"><name pos:start="1113:34" pos:end="1113:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="1113:67" pos:end="1113:69">[<expr pos:start="1113:68" pos:end="1113:68"><name pos:start="1113:68" pos:end="1113:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1115:11" pos:end="1123:9">else <block pos:start="1115:16" pos:end="1123:9">{<block_content pos:start="1119:13" pos:end="1121:70">

            <comment type="block" pos:start="1117:13" pos:end="1117:25">/* mpeg1/2 */</comment>

            <expr_stmt pos:start="1119:13" pos:end="1119:66"><expr pos:start="1119:13" pos:end="1119:65"><name pos:start="1119:13" pos:end="1119:30"><name pos:start="1119:13" pos:end="1119:13">s</name><operator pos:start="1119:14" pos:end="1119:15">-&gt;</operator><name pos:start="1119:16" pos:end="1119:27">intra_matrix</name><index pos:start="1119:28" pos:end="1119:30">[<expr pos:start="1119:29" pos:end="1119:29"><name pos:start="1119:29" pos:end="1119:29">j</name></expr>]</index></name> <operator pos:start="1119:32" pos:end="1119:32">=</operator> <name pos:start="1119:34" pos:end="1119:65"><name pos:start="1119:34" pos:end="1119:62">ff_mpeg1_default_intra_matrix</name><index pos:start="1119:63" pos:end="1119:65">[<expr pos:start="1119:64" pos:end="1119:64"><name pos:start="1119:64" pos:end="1119:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1121:13" pos:end="1121:70"><expr pos:start="1121:13" pos:end="1121:69"><name pos:start="1121:13" pos:end="1121:30"><name pos:start="1121:13" pos:end="1121:13">s</name><operator pos:start="1121:14" pos:end="1121:15">-&gt;</operator><name pos:start="1121:16" pos:end="1121:27">inter_matrix</name><index pos:start="1121:28" pos:end="1121:30">[<expr pos:start="1121:29" pos:end="1121:29"><name pos:start="1121:29" pos:end="1121:29">j</name></expr>]</index></name> <operator pos:start="1121:32" pos:end="1121:32">=</operator> <name pos:start="1121:34" pos:end="1121:69"><name pos:start="1121:34" pos:end="1121:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="1121:67" pos:end="1121:69">[<expr pos:start="1121:68" pos:end="1121:68"><name pos:start="1121:68" pos:end="1121:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="1125:9" pos:end="1127:59"><if pos:start="1125:9" pos:end="1127:59">if <condition pos:start="1125:12" pos:end="1125:35">(<expr pos:start="1125:13" pos:end="1125:34"><name pos:start="1125:13" pos:end="1125:34"><name pos:start="1125:13" pos:end="1125:13">s</name><operator pos:start="1125:14" pos:end="1125:15">-&gt;</operator><name pos:start="1125:16" pos:end="1125:20">avctx</name><operator pos:start="1125:21" pos:end="1125:22">-&gt;</operator><name pos:start="1125:23" pos:end="1125:34">intra_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="1127:13" pos:end="1127:59"><block_content pos:start="1127:13" pos:end="1127:59">

            <expr_stmt pos:start="1127:13" pos:end="1127:59"><expr pos:start="1127:13" pos:end="1127:58"><name pos:start="1127:13" pos:end="1127:30"><name pos:start="1127:13" pos:end="1127:13">s</name><operator pos:start="1127:14" pos:end="1127:15">-&gt;</operator><name pos:start="1127:16" pos:end="1127:27">intra_matrix</name><index pos:start="1127:28" pos:end="1127:30">[<expr pos:start="1127:29" pos:end="1127:29"><name pos:start="1127:29" pos:end="1127:29">j</name></expr>]</index></name> <operator pos:start="1127:32" pos:end="1127:32">=</operator> <name pos:start="1127:34" pos:end="1127:58"><name pos:start="1127:34" pos:end="1127:34">s</name><operator pos:start="1127:35" pos:end="1127:36">-&gt;</operator><name pos:start="1127:37" pos:end="1127:41">avctx</name><operator pos:start="1127:42" pos:end="1127:43">-&gt;</operator><name pos:start="1127:44" pos:end="1127:55">intra_matrix</name><index pos:start="1127:56" pos:end="1127:58">[<expr pos:start="1127:57" pos:end="1127:57"><name pos:start="1127:57" pos:end="1127:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="1129:9" pos:end="1131:59"><if pos:start="1129:9" pos:end="1131:59">if <condition pos:start="1129:12" pos:end="1129:35">(<expr pos:start="1129:13" pos:end="1129:34"><name pos:start="1129:13" pos:end="1129:34"><name pos:start="1129:13" pos:end="1129:13">s</name><operator pos:start="1129:14" pos:end="1129:15">-&gt;</operator><name pos:start="1129:16" pos:end="1129:20">avctx</name><operator pos:start="1129:21" pos:end="1129:22">-&gt;</operator><name pos:start="1129:23" pos:end="1129:34">inter_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="1131:13" pos:end="1131:59"><block_content pos:start="1131:13" pos:end="1131:59">

            <expr_stmt pos:start="1131:13" pos:end="1131:59"><expr pos:start="1131:13" pos:end="1131:58"><name pos:start="1131:13" pos:end="1131:30"><name pos:start="1131:13" pos:end="1131:13">s</name><operator pos:start="1131:14" pos:end="1131:15">-&gt;</operator><name pos:start="1131:16" pos:end="1131:27">inter_matrix</name><index pos:start="1131:28" pos:end="1131:30">[<expr pos:start="1131:29" pos:end="1131:29"><name pos:start="1131:29" pos:end="1131:29">j</name></expr>]</index></name> <operator pos:start="1131:32" pos:end="1131:32">=</operator> <name pos:start="1131:34" pos:end="1131:58"><name pos:start="1131:34" pos:end="1131:34">s</name><operator pos:start="1131:35" pos:end="1131:36">-&gt;</operator><name pos:start="1131:37" pos:end="1131:41">avctx</name><operator pos:start="1131:42" pos:end="1131:43">-&gt;</operator><name pos:start="1131:44" pos:end="1131:55">inter_matrix</name><index pos:start="1131:56" pos:end="1131:58">[<expr pos:start="1131:57" pos:end="1131:57"><name pos:start="1131:57" pos:end="1131:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="1137:5" pos:end="1137:27">/* precompute matrix */</comment>

    <comment type="block" pos:start="1139:5" pos:end="1139:55">/* for mjpeg, we do include qscale in the matrix */</comment>

    <if_stmt pos:start="1141:5" pos:end="1155:5"><if pos:start="1141:5" pos:end="1155:5">if <condition pos:start="1141:8" pos:end="1141:35">(<expr pos:start="1141:9" pos:end="1141:34"><name pos:start="1141:9" pos:end="1141:21"><name pos:start="1141:9" pos:end="1141:9">s</name><operator pos:start="1141:10" pos:end="1141:11">-&gt;</operator><name pos:start="1141:12" pos:end="1141:21">out_format</name></name> <operator pos:start="1141:23" pos:end="1141:24">!=</operator> <name pos:start="1141:26" pos:end="1141:34">FMT_MJPEG</name></expr>)</condition> <block pos:start="1141:37" pos:end="1155:5">{<block_content pos:start="1143:9" pos:end="1153:33">

        <expr_stmt pos:start="1143:9" pos:end="1147:33"><expr pos:start="1143:9" pos:end="1147:32"><call pos:start="1143:9" pos:end="1147:32"><name pos:start="1143:9" pos:end="1143:25">ff_convert_matrix</name><argument_list pos:start="1143:26" pos:end="1147:32">(<argument pos:start="1143:27" pos:end="1143:27"><expr pos:start="1143:27" pos:end="1143:27"><name pos:start="1143:27" pos:end="1143:27">s</name></expr></argument>, <argument pos:start="1143:30" pos:end="1143:46"><expr pos:start="1143:30" pos:end="1143:46"><name pos:start="1143:30" pos:end="1143:46"><name pos:start="1143:30" pos:end="1143:30">s</name><operator pos:start="1143:31" pos:end="1143:32">-&gt;</operator><name pos:start="1143:33" pos:end="1143:46">q_intra_matrix</name></name></expr></argument>, <argument pos:start="1143:49" pos:end="1143:67"><expr pos:start="1143:49" pos:end="1143:67"><name pos:start="1143:49" pos:end="1143:67"><name pos:start="1143:49" pos:end="1143:49">s</name><operator pos:start="1143:50" pos:end="1143:51">-&gt;</operator><name pos:start="1143:52" pos:end="1143:67">q_intra_matrix16</name></name></expr></argument>,

                          <argument pos:start="1145:27" pos:end="1145:41"><expr pos:start="1145:27" pos:end="1145:41"><name pos:start="1145:27" pos:end="1145:41"><name pos:start="1145:27" pos:end="1145:27">s</name><operator pos:start="1145:28" pos:end="1145:29">-&gt;</operator><name pos:start="1145:30" pos:end="1145:41">intra_matrix</name></name></expr></argument>, <argument pos:start="1145:44" pos:end="1145:62"><expr pos:start="1145:44" pos:end="1145:62"><name pos:start="1145:44" pos:end="1145:62"><name pos:start="1145:44" pos:end="1145:44">s</name><operator pos:start="1145:45" pos:end="1145:46">-&gt;</operator><name pos:start="1145:47" pos:end="1145:62">intra_quant_bias</name></name></expr></argument>, <argument pos:start="1145:65" pos:end="1145:75"><expr pos:start="1145:65" pos:end="1145:75"><name pos:start="1145:65" pos:end="1145:75"><name pos:start="1145:65" pos:end="1145:69">avctx</name><operator pos:start="1145:70" pos:end="1145:71">-&gt;</operator><name pos:start="1145:72" pos:end="1145:75">qmin</name></name></expr></argument>,

                          <argument pos:start="1147:27" pos:end="1147:28"><expr pos:start="1147:27" pos:end="1147:28"><literal type="number" pos:start="1147:27" pos:end="1147:28">31</literal></expr></argument>, <argument pos:start="1147:31" pos:end="1147:31"><expr pos:start="1147:31" pos:end="1147:31"><literal type="number" pos:start="1147:31" pos:end="1147:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1149:9" pos:end="1153:33"><expr pos:start="1149:9" pos:end="1153:32"><call pos:start="1149:9" pos:end="1153:32"><name pos:start="1149:9" pos:end="1149:25">ff_convert_matrix</name><argument_list pos:start="1149:26" pos:end="1153:32">(<argument pos:start="1149:27" pos:end="1149:27"><expr pos:start="1149:27" pos:end="1149:27"><name pos:start="1149:27" pos:end="1149:27">s</name></expr></argument>, <argument pos:start="1149:30" pos:end="1149:46"><expr pos:start="1149:30" pos:end="1149:46"><name pos:start="1149:30" pos:end="1149:46"><name pos:start="1149:30" pos:end="1149:30">s</name><operator pos:start="1149:31" pos:end="1149:32">-&gt;</operator><name pos:start="1149:33" pos:end="1149:46">q_inter_matrix</name></name></expr></argument>, <argument pos:start="1149:49" pos:end="1149:67"><expr pos:start="1149:49" pos:end="1149:67"><name pos:start="1149:49" pos:end="1149:67"><name pos:start="1149:49" pos:end="1149:49">s</name><operator pos:start="1149:50" pos:end="1149:51">-&gt;</operator><name pos:start="1149:52" pos:end="1149:67">q_inter_matrix16</name></name></expr></argument>,

                          <argument pos:start="1151:27" pos:end="1151:41"><expr pos:start="1151:27" pos:end="1151:41"><name pos:start="1151:27" pos:end="1151:41"><name pos:start="1151:27" pos:end="1151:27">s</name><operator pos:start="1151:28" pos:end="1151:29">-&gt;</operator><name pos:start="1151:30" pos:end="1151:41">inter_matrix</name></name></expr></argument>, <argument pos:start="1151:44" pos:end="1151:62"><expr pos:start="1151:44" pos:end="1151:62"><name pos:start="1151:44" pos:end="1151:62"><name pos:start="1151:44" pos:end="1151:44">s</name><operator pos:start="1151:45" pos:end="1151:46">-&gt;</operator><name pos:start="1151:47" pos:end="1151:62">inter_quant_bias</name></name></expr></argument>, <argument pos:start="1151:65" pos:end="1151:75"><expr pos:start="1151:65" pos:end="1151:75"><name pos:start="1151:65" pos:end="1151:75"><name pos:start="1151:65" pos:end="1151:69">avctx</name><operator pos:start="1151:70" pos:end="1151:71">-&gt;</operator><name pos:start="1151:72" pos:end="1151:75">qmin</name></name></expr></argument>,

                          <argument pos:start="1153:27" pos:end="1153:28"><expr pos:start="1153:27" pos:end="1153:28"><literal type="number" pos:start="1153:27" pos:end="1153:28">31</literal></expr></argument>, <argument pos:start="1153:31" pos:end="1153:31"><expr pos:start="1153:31" pos:end="1153:31"><literal type="number" pos:start="1153:31" pos:end="1153:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1159:5" pos:end="1166:0"><if pos:start="1159:5" pos:end="1166:0">if <condition pos:start="1159:8" pos:end="1159:36">(<expr pos:start="1159:9" pos:end="1159:35"><call pos:start="1159:9" pos:end="1159:31"><name pos:start="1159:9" pos:end="1159:28">ff_rate_control_init</name><argument_list pos:start="1159:29" pos:end="1159:31">(<argument pos:start="1159:30" pos:end="1159:30"><expr pos:start="1159:30" pos:end="1159:30"><name pos:start="1159:30" pos:end="1159:30">s</name></expr></argument>)</argument_list></call> <operator pos:start="1159:33" pos:end="1159:33">&lt;</operator> <literal type="number" pos:start="1159:35" pos:end="1159:35">0</literal></expr>)</condition><block type="pseudo" pos:start="1161:9" pos:end="1166:0"><block_content pos:start="1161:9" pos:end="1166:0">

        <return pos:start="1161:9" pos:end="1166:0">return <expr pos:start="1161:16" pos:end="1161:17"><operator pos:start="1161:16" pos:end="1161:16">-</operator><literal type="number" pos:start="1161:17" pos:end="1161:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="1165:1" pos:end="1165:21">#<cpp:directive pos:start="1165:2" pos:end="1165:3">if</cpp:directive> <expr pos:start="1165:5" pos:end="1165:21"><name pos:start="1165:5" pos:end="1165:21">FF_API_ERROR_RATE</name></expr></cpp:if>

    <macro pos:start="1167:5" pos:end="1167:35"><name pos:start="1167:5" pos:end="1167:35">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="1169:5" pos:end="1171:42"><if pos:start="1169:5" pos:end="1171:42">if <condition pos:start="1169:8" pos:end="1169:26">(<expr pos:start="1169:9" pos:end="1169:25"><name pos:start="1169:9" pos:end="1169:25"><name pos:start="1169:9" pos:end="1169:13">avctx</name><operator pos:start="1169:14" pos:end="1169:15">-&gt;</operator><name pos:start="1169:16" pos:end="1169:25">error_rate</name></name></expr>)</condition><block type="pseudo" pos:start="1171:9" pos:end="1171:42"><block_content pos:start="1171:9" pos:end="1171:42">

        <expr_stmt pos:start="1171:9" pos:end="1171:42"><expr pos:start="1171:9" pos:end="1171:41"><name pos:start="1171:9" pos:end="1171:21"><name pos:start="1171:9" pos:end="1171:9">s</name><operator pos:start="1171:10" pos:end="1171:11">-&gt;</operator><name pos:start="1171:12" pos:end="1171:21">error_rate</name></name> <operator pos:start="1171:23" pos:end="1171:23">=</operator> <name pos:start="1171:25" pos:end="1171:41"><name pos:start="1171:25" pos:end="1171:29">avctx</name><operator pos:start="1171:30" pos:end="1171:31">-&gt;</operator><name pos:start="1171:32" pos:end="1171:41">error_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1173:5" pos:end="1180:0"><expr pos:start="1173:5" pos:end="1173:34"><name pos:start="1173:5" pos:end="1173:34">FF_ENABLE_DEPRECATION_WARNINGS</name></expr>;</expr_stmt>

<cpp:endif pos:start="1175:1" pos:end="1175:6">#<cpp:directive pos:start="1175:2" pos:end="1175:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="1179:1" pos:end="1179:24">#<cpp:directive pos:start="1179:2" pos:end="1179:3">if</cpp:directive> <expr pos:start="1179:5" pos:end="1179:24"><name pos:start="1179:5" pos:end="1179:24">FF_API_NORMALIZE_AQP</name></expr></cpp:if>

    <macro pos:start="1181:5" pos:end="1181:35"><name pos:start="1181:5" pos:end="1181:35">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="1183:5" pos:end="1185:40"><if pos:start="1183:5" pos:end="1185:40">if <condition pos:start="1183:8" pos:end="1183:48">(<expr pos:start="1183:9" pos:end="1183:47"><name pos:start="1183:9" pos:end="1183:20"><name pos:start="1183:9" pos:end="1183:13">avctx</name><operator pos:start="1183:14" pos:end="1183:15">-&gt;</operator><name pos:start="1183:16" pos:end="1183:20">flags</name></name> <operator pos:start="1183:22" pos:end="1183:22">&amp;</operator> <name pos:start="1183:24" pos:end="1183:47">CODEC_FLAG_NORMALIZE_AQP</name></expr>)</condition><block type="pseudo" pos:start="1185:9" pos:end="1185:40"><block_content pos:start="1185:9" pos:end="1185:40">

        <expr_stmt pos:start="1185:9" pos:end="1185:40"><expr pos:start="1185:9" pos:end="1185:39"><name pos:start="1185:9" pos:end="1185:20"><name pos:start="1185:9" pos:end="1185:9">s</name><operator pos:start="1185:10" pos:end="1185:11">-&gt;</operator><name pos:start="1185:12" pos:end="1185:20">mpv_flags</name></name> <operator pos:start="1185:22" pos:end="1185:23">|=</operator> <name pos:start="1185:25" pos:end="1185:39">FF_MPV_FLAG_NAQ</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1187:5" pos:end="1194:0"><expr pos:start="1187:5" pos:end="1187:34"><name pos:start="1187:5" pos:end="1187:34">FF_ENABLE_DEPRECATION_WARNINGS</name></expr>;</expr_stmt>

<cpp:endif pos:start="1189:1" pos:end="1189:6">#<cpp:directive pos:start="1189:2" pos:end="1189:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="1193:1" pos:end="1193:14">#<cpp:directive pos:start="1193:2" pos:end="1193:3">if</cpp:directive> <expr pos:start="1193:5" pos:end="1193:14"><name pos:start="1193:5" pos:end="1193:14">FF_API_MV0</name></expr></cpp:if>

    <macro pos:start="1195:5" pos:end="1195:35"><name pos:start="1195:5" pos:end="1195:35">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="1197:5" pos:end="1199:40"><if pos:start="1197:5" pos:end="1199:40">if <condition pos:start="1197:8" pos:end="1197:38">(<expr pos:start="1197:9" pos:end="1197:37"><name pos:start="1197:9" pos:end="1197:20"><name pos:start="1197:9" pos:end="1197:13">avctx</name><operator pos:start="1197:14" pos:end="1197:15">-&gt;</operator><name pos:start="1197:16" pos:end="1197:20">flags</name></name> <operator pos:start="1197:22" pos:end="1197:22">&amp;</operator> <name pos:start="1197:24" pos:end="1197:37">CODEC_FLAG_MV0</name></expr>)</condition><block type="pseudo" pos:start="1199:9" pos:end="1199:40"><block_content pos:start="1199:9" pos:end="1199:40">

        <expr_stmt pos:start="1199:9" pos:end="1199:40"><expr pos:start="1199:9" pos:end="1199:39"><name pos:start="1199:9" pos:end="1199:20"><name pos:start="1199:9" pos:end="1199:9">s</name><operator pos:start="1199:10" pos:end="1199:11">-&gt;</operator><name pos:start="1199:12" pos:end="1199:20">mpv_flags</name></name> <operator pos:start="1199:22" pos:end="1199:23">|=</operator> <name pos:start="1199:25" pos:end="1199:39">FF_MPV_FLAG_MV0</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1201:5" pos:end="1209:35"><expr pos:start="1201:5" pos:end="1209:35"><name pos:start="1201:5" pos:end="1208:0">FF_ENABLE_DEPRECATION_WARNINGS</name>

<cpp:endif pos:start="1203:1" pos:end="1203:6">#<cpp:directive pos:start="1203:2" pos:end="1203:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="1207:1" pos:end="1207:18">#<cpp:directive pos:start="1207:2" pos:end="1207:3">if</cpp:directive> <expr pos:start="1207:5" pos:end="1207:18"><name pos:start="1207:5" pos:end="1207:18">FF_API_MPV_OPT</name></expr></cpp:if>

    <name pos:start="1209:5" pos:end="1209:35">FF_DISABLE_DEPRECATION_WARNINGS</name></expr></expr_stmt>

    <if_stmt pos:start="1211:5" pos:end="1213:42"><if pos:start="1211:5" pos:end="1213:42">if <condition pos:start="1211:8" pos:end="1211:33">(<expr pos:start="1211:9" pos:end="1211:32"><name pos:start="1211:9" pos:end="1211:25"><name pos:start="1211:9" pos:end="1211:13">avctx</name><operator pos:start="1211:14" pos:end="1211:15">-&gt;</operator><name pos:start="1211:16" pos:end="1211:25">rc_qsquish</name></name> <operator pos:start="1211:27" pos:end="1211:28">!=</operator> <literal type="number" pos:start="1211:30" pos:end="1211:32">0.0</literal></expr>)</condition><block type="pseudo" pos:start="1213:9" pos:end="1213:42"><block_content pos:start="1213:9" pos:end="1213:42">

        <expr_stmt pos:start="1213:9" pos:end="1213:42"><expr pos:start="1213:9" pos:end="1213:41"><name pos:start="1213:9" pos:end="1213:21"><name pos:start="1213:9" pos:end="1213:9">s</name><operator pos:start="1213:10" pos:end="1213:11">-&gt;</operator><name pos:start="1213:12" pos:end="1213:21">rc_qsquish</name></name> <operator pos:start="1213:23" pos:end="1213:23">=</operator> <name pos:start="1213:25" pos:end="1213:41"><name pos:start="1213:25" pos:end="1213:29">avctx</name><operator pos:start="1213:30" pos:end="1213:31">-&gt;</operator><name pos:start="1213:32" pos:end="1213:41">rc_qsquish</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1215:5" pos:end="1217:44"><if pos:start="1215:5" pos:end="1217:44">if <condition pos:start="1215:8" pos:end="1215:34">(<expr pos:start="1215:9" pos:end="1215:33"><name pos:start="1215:9" pos:end="1215:26"><name pos:start="1215:9" pos:end="1215:13">avctx</name><operator pos:start="1215:14" pos:end="1215:15">-&gt;</operator><name pos:start="1215:16" pos:end="1215:26">rc_qmod_amp</name></name> <operator pos:start="1215:28" pos:end="1215:29">!=</operator> <literal type="number" pos:start="1215:31" pos:end="1215:33">0.0</literal></expr>)</condition><block type="pseudo" pos:start="1217:9" pos:end="1217:44"><block_content pos:start="1217:9" pos:end="1217:44">

        <expr_stmt pos:start="1217:9" pos:end="1217:44"><expr pos:start="1217:9" pos:end="1217:43"><name pos:start="1217:9" pos:end="1217:22"><name pos:start="1217:9" pos:end="1217:9">s</name><operator pos:start="1217:10" pos:end="1217:11">-&gt;</operator><name pos:start="1217:12" pos:end="1217:22">rc_qmod_amp</name></name> <operator pos:start="1217:24" pos:end="1217:24">=</operator> <name pos:start="1217:26" pos:end="1217:43"><name pos:start="1217:26" pos:end="1217:30">avctx</name><operator pos:start="1217:31" pos:end="1217:32">-&gt;</operator><name pos:start="1217:33" pos:end="1217:43">rc_qmod_amp</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1219:5" pos:end="1221:46"><if pos:start="1219:5" pos:end="1221:46">if <condition pos:start="1219:8" pos:end="1219:28">(<expr pos:start="1219:9" pos:end="1219:27"><name pos:start="1219:9" pos:end="1219:27"><name pos:start="1219:9" pos:end="1219:13">avctx</name><operator pos:start="1219:14" pos:end="1219:15">-&gt;</operator><name pos:start="1219:16" pos:end="1219:27">rc_qmod_freq</name></name></expr>)</condition><block type="pseudo" pos:start="1221:9" pos:end="1221:46"><block_content pos:start="1221:9" pos:end="1221:46">

        <expr_stmt pos:start="1221:9" pos:end="1221:46"><expr pos:start="1221:9" pos:end="1221:45"><name pos:start="1221:9" pos:end="1221:23"><name pos:start="1221:9" pos:end="1221:9">s</name><operator pos:start="1221:10" pos:end="1221:11">-&gt;</operator><name pos:start="1221:12" pos:end="1221:23">rc_qmod_freq</name></name> <operator pos:start="1221:25" pos:end="1221:25">=</operator> <name pos:start="1221:27" pos:end="1221:45"><name pos:start="1221:27" pos:end="1221:31">avctx</name><operator pos:start="1221:32" pos:end="1221:33">-&gt;</operator><name pos:start="1221:34" pos:end="1221:45">rc_qmod_freq</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1223:5" pos:end="1225:66"><if pos:start="1223:5" pos:end="1225:66">if <condition pos:start="1223:8" pos:end="1223:45">(<expr pos:start="1223:9" pos:end="1223:44"><name pos:start="1223:9" pos:end="1223:37"><name pos:start="1223:9" pos:end="1223:13">avctx</name><operator pos:start="1223:14" pos:end="1223:15">-&gt;</operator><name pos:start="1223:16" pos:end="1223:37">rc_buffer_aggressivity</name></name> <operator pos:start="1223:39" pos:end="1223:40">!=</operator> <literal type="number" pos:start="1223:42" pos:end="1223:44">1.0</literal></expr>)</condition><block type="pseudo" pos:start="1225:9" pos:end="1225:66"><block_content pos:start="1225:9" pos:end="1225:66">

        <expr_stmt pos:start="1225:9" pos:end="1225:66"><expr pos:start="1225:9" pos:end="1225:65"><name pos:start="1225:9" pos:end="1225:33"><name pos:start="1225:9" pos:end="1225:9">s</name><operator pos:start="1225:10" pos:end="1225:11">-&gt;</operator><name pos:start="1225:12" pos:end="1225:33">rc_buffer_aggressivity</name></name> <operator pos:start="1225:35" pos:end="1225:35">=</operator> <name pos:start="1225:37" pos:end="1225:65"><name pos:start="1225:37" pos:end="1225:41">avctx</name><operator pos:start="1225:42" pos:end="1225:43">-&gt;</operator><name pos:start="1225:44" pos:end="1225:65">rc_buffer_aggressivity</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1227:5" pos:end="1229:52"><if pos:start="1227:5" pos:end="1229:52">if <condition pos:start="1227:8" pos:end="1227:38">(<expr pos:start="1227:9" pos:end="1227:37"><name pos:start="1227:9" pos:end="1227:30"><name pos:start="1227:9" pos:end="1227:13">avctx</name><operator pos:start="1227:14" pos:end="1227:15">-&gt;</operator><name pos:start="1227:16" pos:end="1227:30">rc_initial_cplx</name></name> <operator pos:start="1227:32" pos:end="1227:33">!=</operator> <literal type="number" pos:start="1227:35" pos:end="1227:37">0.0</literal></expr>)</condition><block type="pseudo" pos:start="1229:9" pos:end="1229:52"><block_content pos:start="1229:9" pos:end="1229:52">

        <expr_stmt pos:start="1229:9" pos:end="1229:52"><expr pos:start="1229:9" pos:end="1229:51"><name pos:start="1229:9" pos:end="1229:26"><name pos:start="1229:9" pos:end="1229:9">s</name><operator pos:start="1229:10" pos:end="1229:11">-&gt;</operator><name pos:start="1229:12" pos:end="1229:26">rc_initial_cplx</name></name> <operator pos:start="1229:28" pos:end="1229:28">=</operator> <name pos:start="1229:30" pos:end="1229:51"><name pos:start="1229:30" pos:end="1229:34">avctx</name><operator pos:start="1229:35" pos:end="1229:36">-&gt;</operator><name pos:start="1229:37" pos:end="1229:51">rc_initial_cplx</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1231:5" pos:end="1233:30"><if pos:start="1231:5" pos:end="1233:30">if <condition pos:start="1231:8" pos:end="1231:20">(<expr pos:start="1231:9" pos:end="1231:19"><name pos:start="1231:9" pos:end="1231:19"><name pos:start="1231:9" pos:end="1231:13">avctx</name><operator pos:start="1231:14" pos:end="1231:15">-&gt;</operator><name pos:start="1231:16" pos:end="1231:19">lmin</name></name></expr>)</condition><block type="pseudo" pos:start="1233:9" pos:end="1233:30"><block_content pos:start="1233:9" pos:end="1233:30">

        <expr_stmt pos:start="1233:9" pos:end="1233:30"><expr pos:start="1233:9" pos:end="1233:29"><name pos:start="1233:9" pos:end="1233:15"><name pos:start="1233:9" pos:end="1233:9">s</name><operator pos:start="1233:10" pos:end="1233:11">-&gt;</operator><name pos:start="1233:12" pos:end="1233:15">lmin</name></name> <operator pos:start="1233:17" pos:end="1233:17">=</operator> <name pos:start="1233:19" pos:end="1233:29"><name pos:start="1233:19" pos:end="1233:23">avctx</name><operator pos:start="1233:24" pos:end="1233:25">-&gt;</operator><name pos:start="1233:26" pos:end="1233:29">lmin</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="1235:5" pos:end="1237:30"><if pos:start="1235:5" pos:end="1237:30">if <condition pos:start="1235:8" pos:end="1235:20">(<expr pos:start="1235:9" pos:end="1235:19"><name pos:start="1235:9" pos:end="1235:19"><name pos:start="1235:9" pos:end="1235:13">avctx</name><operator pos:start="1235:14" pos:end="1235:15">-&gt;</operator><name pos:start="1235:16" pos:end="1235:19">lmax</name></name></expr>)</condition><block type="pseudo" pos:start="1237:9" pos:end="1237:30"><block_content pos:start="1237:9" pos:end="1237:30">

        <expr_stmt pos:start="1237:9" pos:end="1237:30"><expr pos:start="1237:9" pos:end="1237:29"><name pos:start="1237:9" pos:end="1237:15"><name pos:start="1237:9" pos:end="1237:9">s</name><operator pos:start="1237:10" pos:end="1237:11">-&gt;</operator><name pos:start="1237:12" pos:end="1237:15">lmax</name></name> <operator pos:start="1237:17" pos:end="1237:17">=</operator> <name pos:start="1237:19" pos:end="1237:29"><name pos:start="1237:19" pos:end="1237:23">avctx</name><operator pos:start="1237:24" pos:end="1237:25">-&gt;</operator><name pos:start="1237:26" pos:end="1237:29">lmax</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1241:5" pos:end="1251:5"><if pos:start="1241:5" pos:end="1251:5">if <condition pos:start="1241:8" pos:end="1241:21">(<expr pos:start="1241:9" pos:end="1241:20"><name pos:start="1241:9" pos:end="1241:20"><name pos:start="1241:9" pos:end="1241:13">avctx</name><operator pos:start="1241:14" pos:end="1241:15">-&gt;</operator><name pos:start="1241:16" pos:end="1241:20">rc_eq</name></name></expr>)</condition> <block pos:start="1241:23" pos:end="1251:5">{<block_content pos:start="1243:9" pos:end="1249:35">

        <expr_stmt pos:start="1243:9" pos:end="1243:28"><expr pos:start="1243:9" pos:end="1243:27"><call pos:start="1243:9" pos:end="1243:27"><name pos:start="1243:9" pos:end="1243:16">av_freep</name><argument_list pos:start="1243:17" pos:end="1243:27">(<argument pos:start="1243:18" pos:end="1243:26"><expr pos:start="1243:18" pos:end="1243:26"><operator pos:start="1243:18" pos:end="1243:18">&amp;</operator><name pos:start="1243:19" pos:end="1243:26"><name pos:start="1243:19" pos:end="1243:19">s</name><operator pos:start="1243:20" pos:end="1243:21">-&gt;</operator><name pos:start="1243:22" pos:end="1243:26">rc_eq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1245:9" pos:end="1245:43"><expr pos:start="1245:9" pos:end="1245:42"><name pos:start="1245:9" pos:end="1245:16"><name pos:start="1245:9" pos:end="1245:9">s</name><operator pos:start="1245:10" pos:end="1245:11">-&gt;</operator><name pos:start="1245:12" pos:end="1245:16">rc_eq</name></name> <operator pos:start="1245:18" pos:end="1245:18">=</operator> <call pos:start="1245:20" pos:end="1245:42"><name pos:start="1245:20" pos:end="1245:28">av_strdup</name><argument_list pos:start="1245:29" pos:end="1245:42">(<argument pos:start="1245:30" pos:end="1245:41"><expr pos:start="1245:30" pos:end="1245:41"><name pos:start="1245:30" pos:end="1245:41"><name pos:start="1245:30" pos:end="1245:34">avctx</name><operator pos:start="1245:35" pos:end="1245:36">-&gt;</operator><name pos:start="1245:37" pos:end="1245:41">rc_eq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1247:9" pos:end="1249:35"><if pos:start="1247:9" pos:end="1249:35">if <condition pos:start="1247:12" pos:end="1247:22">(<expr pos:start="1247:13" pos:end="1247:21"><operator pos:start="1247:13" pos:end="1247:13">!</operator><name pos:start="1247:14" pos:end="1247:21"><name pos:start="1247:14" pos:end="1247:14">s</name><operator pos:start="1247:15" pos:end="1247:16">-&gt;</operator><name pos:start="1247:17" pos:end="1247:21">rc_eq</name></name></expr>)</condition><block type="pseudo" pos:start="1249:13" pos:end="1249:35"><block_content pos:start="1249:13" pos:end="1249:35">

            <return pos:start="1249:13" pos:end="1249:35">return <expr pos:start="1249:20" pos:end="1249:34"><call pos:start="1249:20" pos:end="1249:34"><name pos:start="1249:20" pos:end="1249:26">AVERROR</name><argument_list pos:start="1249:27" pos:end="1249:34">(<argument pos:start="1249:28" pos:end="1249:33"><expr pos:start="1249:28" pos:end="1249:33"><name pos:start="1249:28" pos:end="1249:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <macro pos:start="1253:5" pos:end="1256:0"><name pos:start="1253:5" pos:end="1256:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="1255:1" pos:end="1255:6">#<cpp:directive pos:start="1255:2" pos:end="1255:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="1259:5" pos:end="1287:5"><if pos:start="1259:5" pos:end="1287:5">if <condition pos:start="1259:8" pos:end="1259:37">(<expr pos:start="1259:9" pos:end="1259:36"><name pos:start="1259:9" pos:end="1259:31"><name pos:start="1259:9" pos:end="1259:13">avctx</name><operator pos:start="1259:14" pos:end="1259:15">-&gt;</operator><name pos:start="1259:16" pos:end="1259:31">b_frame_strategy</name></name> <operator pos:start="1259:33" pos:end="1259:34">==</operator> <literal type="number" pos:start="1259:36" pos:end="1259:36">2</literal></expr>)</condition> <block pos:start="1259:39" pos:end="1287:5">{<block_content pos:start="1261:9" pos:end="1285:9">

        <for pos:start="1261:9" pos:end="1285:9">for <control pos:start="1261:13" pos:end="1261:49">(<init pos:start="1261:14" pos:end="1261:19"><expr pos:start="1261:14" pos:end="1261:18"><name pos:start="1261:14" pos:end="1261:14">i</name> <operator pos:start="1261:16" pos:end="1261:16">=</operator> <literal type="number" pos:start="1261:18" pos:end="1261:18">0</literal></expr>;</init> <condition pos:start="1261:21" pos:end="1261:44"><expr pos:start="1261:21" pos:end="1261:43"><name pos:start="1261:21" pos:end="1261:21">i</name> <operator pos:start="1261:23" pos:end="1261:23">&lt;</operator> <name pos:start="1261:25" pos:end="1261:39"><name pos:start="1261:25" pos:end="1261:25">s</name><operator pos:start="1261:26" pos:end="1261:27">-&gt;</operator><name pos:start="1261:28" pos:end="1261:39">max_b_frames</name></name> <operator pos:start="1261:41" pos:end="1261:41">+</operator> <literal type="number" pos:start="1261:43" pos:end="1261:43">2</literal></expr>;</condition> <incr pos:start="1261:46" pos:end="1261:48"><expr pos:start="1261:46" pos:end="1261:48"><name pos:start="1261:46" pos:end="1261:46">i</name><operator pos:start="1261:47" pos:end="1261:48">++</operator></expr></incr>)</control> <block pos:start="1261:51" pos:end="1285:9">{<block_content pos:start="1263:13" pos:end="1283:27">

            <expr_stmt pos:start="1263:13" pos:end="1263:48"><expr pos:start="1263:13" pos:end="1263:47"><name pos:start="1263:13" pos:end="1263:28"><name pos:start="1263:13" pos:end="1263:13">s</name><operator pos:start="1263:14" pos:end="1263:15">-&gt;</operator><name pos:start="1263:16" pos:end="1263:25">tmp_frames</name><index pos:start="1263:26" pos:end="1263:28">[<expr pos:start="1263:27" pos:end="1263:27"><name pos:start="1263:27" pos:end="1263:27">i</name></expr>]</index></name> <operator pos:start="1263:30" pos:end="1263:30">=</operator> <call pos:start="1263:32" pos:end="1263:47"><name pos:start="1263:32" pos:end="1263:45">av_frame_alloc</name><argument_list pos:start="1263:46" pos:end="1263:47">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1265:13" pos:end="1267:39"><if pos:start="1265:13" pos:end="1267:39">if <condition pos:start="1265:16" pos:end="1265:34">(<expr pos:start="1265:17" pos:end="1265:33"><operator pos:start="1265:17" pos:end="1265:17">!</operator><name pos:start="1265:18" pos:end="1265:33"><name pos:start="1265:18" pos:end="1265:18">s</name><operator pos:start="1265:19" pos:end="1265:20">-&gt;</operator><name pos:start="1265:21" pos:end="1265:30">tmp_frames</name><index pos:start="1265:31" pos:end="1265:33">[<expr pos:start="1265:32" pos:end="1265:32"><name pos:start="1265:32" pos:end="1265:32">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="1267:17" pos:end="1267:39"><block_content pos:start="1267:17" pos:end="1267:39">

                <return pos:start="1267:17" pos:end="1267:39">return <expr pos:start="1267:24" pos:end="1267:38"><call pos:start="1267:24" pos:end="1267:38"><name pos:start="1267:24" pos:end="1267:30">AVERROR</name><argument_list pos:start="1267:31" pos:end="1267:38">(<argument pos:start="1267:32" pos:end="1267:37"><expr pos:start="1267:32" pos:end="1267:37"><name pos:start="1267:32" pos:end="1267:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="1271:13" pos:end="1271:58"><expr pos:start="1271:13" pos:end="1271:57"><name pos:start="1271:13" pos:end="1271:28"><name pos:start="1271:13" pos:end="1271:13">s</name><operator pos:start="1271:14" pos:end="1271:15">-&gt;</operator><name pos:start="1271:16" pos:end="1271:25">tmp_frames</name><index pos:start="1271:26" pos:end="1271:28">[<expr pos:start="1271:27" pos:end="1271:27"><name pos:start="1271:27" pos:end="1271:27">i</name></expr>]</index></name><operator pos:start="1271:29" pos:end="1271:30">-&gt;</operator><name pos:start="1271:31" pos:end="1271:36">format</name> <operator pos:start="1271:38" pos:end="1271:38">=</operator> <name pos:start="1271:40" pos:end="1271:57">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

            <expr_stmt pos:start="1273:13" pos:end="1273:69"><expr pos:start="1273:13" pos:end="1273:68"><name pos:start="1273:13" pos:end="1273:28"><name pos:start="1273:13" pos:end="1273:13">s</name><operator pos:start="1273:14" pos:end="1273:15">-&gt;</operator><name pos:start="1273:16" pos:end="1273:25">tmp_frames</name><index pos:start="1273:26" pos:end="1273:28">[<expr pos:start="1273:27" pos:end="1273:27"><name pos:start="1273:27" pos:end="1273:27">i</name></expr>]</index></name><operator pos:start="1273:29" pos:end="1273:30">-&gt;</operator><name pos:start="1273:31" pos:end="1273:35">width</name>  <operator pos:start="1273:38" pos:end="1273:38">=</operator> <name pos:start="1273:40" pos:end="1273:47"><name pos:start="1273:40" pos:end="1273:40">s</name><operator pos:start="1273:41" pos:end="1273:42">-&gt;</operator><name pos:start="1273:43" pos:end="1273:47">width</name></name>  <operator pos:start="1273:50" pos:end="1273:51">&gt;&gt;</operator> <name pos:start="1273:53" pos:end="1273:68"><name pos:start="1273:53" pos:end="1273:57">avctx</name><operator pos:start="1273:58" pos:end="1273:59">-&gt;</operator><name pos:start="1273:60" pos:end="1273:68">brd_scale</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1275:13" pos:end="1275:69"><expr pos:start="1275:13" pos:end="1275:68"><name pos:start="1275:13" pos:end="1275:28"><name pos:start="1275:13" pos:end="1275:13">s</name><operator pos:start="1275:14" pos:end="1275:15">-&gt;</operator><name pos:start="1275:16" pos:end="1275:25">tmp_frames</name><index pos:start="1275:26" pos:end="1275:28">[<expr pos:start="1275:27" pos:end="1275:27"><name pos:start="1275:27" pos:end="1275:27">i</name></expr>]</index></name><operator pos:start="1275:29" pos:end="1275:30">-&gt;</operator><name pos:start="1275:31" pos:end="1275:36">height</name> <operator pos:start="1275:38" pos:end="1275:38">=</operator> <name pos:start="1275:40" pos:end="1275:48"><name pos:start="1275:40" pos:end="1275:40">s</name><operator pos:start="1275:41" pos:end="1275:42">-&gt;</operator><name pos:start="1275:43" pos:end="1275:48">height</name></name> <operator pos:start="1275:50" pos:end="1275:51">&gt;&gt;</operator> <name pos:start="1275:53" pos:end="1275:68"><name pos:start="1275:53" pos:end="1275:57">avctx</name><operator pos:start="1275:58" pos:end="1275:59">-&gt;</operator><name pos:start="1275:60" pos:end="1275:68">brd_scale</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="1279:13" pos:end="1279:60"><expr pos:start="1279:13" pos:end="1279:59"><name pos:start="1279:13" pos:end="1279:15">ret</name> <operator pos:start="1279:17" pos:end="1279:17">=</operator> <call pos:start="1279:19" pos:end="1279:59"><name pos:start="1279:19" pos:end="1279:37">av_frame_get_buffer</name><argument_list pos:start="1279:38" pos:end="1279:59">(<argument pos:start="1279:39" pos:end="1279:54"><expr pos:start="1279:39" pos:end="1279:54"><name pos:start="1279:39" pos:end="1279:54"><name pos:start="1279:39" pos:end="1279:39">s</name><operator pos:start="1279:40" pos:end="1279:41">-&gt;</operator><name pos:start="1279:42" pos:end="1279:51">tmp_frames</name><index pos:start="1279:52" pos:end="1279:54">[<expr pos:start="1279:53" pos:end="1279:53"><name pos:start="1279:53" pos:end="1279:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="1279:57" pos:end="1279:58"><expr pos:start="1279:57" pos:end="1279:58"><literal type="number" pos:start="1279:57" pos:end="1279:58">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1281:13" pos:end="1283:27"><if pos:start="1281:13" pos:end="1283:27">if <condition pos:start="1281:16" pos:end="1281:24">(<expr pos:start="1281:17" pos:end="1281:23"><name pos:start="1281:17" pos:end="1281:19">ret</name> <operator pos:start="1281:21" pos:end="1281:21">&lt;</operator> <literal type="number" pos:start="1281:23" pos:end="1281:23">0</literal></expr>)</condition><block type="pseudo" pos:start="1283:17" pos:end="1283:27"><block_content pos:start="1283:17" pos:end="1283:27">

                <return pos:start="1283:17" pos:end="1283:27">return <expr pos:start="1283:24" pos:end="1283:26"><name pos:start="1283:24" pos:end="1283:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="1291:5" pos:end="1291:44"><expr pos:start="1291:5" pos:end="1291:43"><name pos:start="1291:5" pos:end="1291:13">cpb_props</name> <operator pos:start="1291:15" pos:end="1291:15">=</operator> <call pos:start="1291:17" pos:end="1291:43"><name pos:start="1291:17" pos:end="1291:36">ff_add_cpb_side_data</name><argument_list pos:start="1291:37" pos:end="1291:43">(<argument pos:start="1291:38" pos:end="1291:42"><expr pos:start="1291:38" pos:end="1291:42"><name pos:start="1291:38" pos:end="1291:42">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="1293:5" pos:end="1295:31"><if pos:start="1293:5" pos:end="1295:31">if <condition pos:start="1293:8" pos:end="1293:19">(<expr pos:start="1293:9" pos:end="1293:18"><operator pos:start="1293:9" pos:end="1293:9">!</operator><name pos:start="1293:10" pos:end="1293:18">cpb_props</name></expr>)</condition><block type="pseudo" pos:start="1295:9" pos:end="1295:31"><block_content pos:start="1295:9" pos:end="1295:31">

        <return pos:start="1295:9" pos:end="1295:31">return <expr pos:start="1295:16" pos:end="1295:30"><call pos:start="1295:16" pos:end="1295:30"><name pos:start="1295:16" pos:end="1295:22">AVERROR</name><argument_list pos:start="1295:23" pos:end="1295:30">(<argument pos:start="1295:24" pos:end="1295:29"><expr pos:start="1295:24" pos:end="1295:29"><name pos:start="1295:24" pos:end="1295:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="1297:5" pos:end="1297:48"><expr pos:start="1297:5" pos:end="1297:47"><name pos:start="1297:5" pos:end="1297:26"><name pos:start="1297:5" pos:end="1297:13">cpb_props</name><operator pos:start="1297:14" pos:end="1297:15">-&gt;</operator><name pos:start="1297:16" pos:end="1297:26">max_bitrate</name></name> <operator pos:start="1297:28" pos:end="1297:28">=</operator> <name pos:start="1297:30" pos:end="1297:47"><name pos:start="1297:30" pos:end="1297:34">avctx</name><operator pos:start="1297:35" pos:end="1297:36">-&gt;</operator><name pos:start="1297:37" pos:end="1297:47">rc_max_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="1299:5" pos:end="1299:48"><expr pos:start="1299:5" pos:end="1299:47"><name pos:start="1299:5" pos:end="1299:26"><name pos:start="1299:5" pos:end="1299:13">cpb_props</name><operator pos:start="1299:14" pos:end="1299:15">-&gt;</operator><name pos:start="1299:16" pos:end="1299:26">min_bitrate</name></name> <operator pos:start="1299:28" pos:end="1299:28">=</operator> <name pos:start="1299:30" pos:end="1299:47"><name pos:start="1299:30" pos:end="1299:34">avctx</name><operator pos:start="1299:35" pos:end="1299:36">-&gt;</operator><name pos:start="1299:37" pos:end="1299:47">rc_min_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="1301:5" pos:end="1301:45"><expr pos:start="1301:5" pos:end="1301:44"><name pos:start="1301:5" pos:end="1301:26"><name pos:start="1301:5" pos:end="1301:13">cpb_props</name><operator pos:start="1301:14" pos:end="1301:15">-&gt;</operator><name pos:start="1301:16" pos:end="1301:26">avg_bitrate</name></name> <operator pos:start="1301:28" pos:end="1301:28">=</operator> <name pos:start="1301:30" pos:end="1301:44"><name pos:start="1301:30" pos:end="1301:34">avctx</name><operator pos:start="1301:35" pos:end="1301:36">-&gt;</operator><name pos:start="1301:37" pos:end="1301:44">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="1303:5" pos:end="1303:51"><expr pos:start="1303:5" pos:end="1303:50"><name pos:start="1303:5" pos:end="1303:26"><name pos:start="1303:5" pos:end="1303:13">cpb_props</name><operator pos:start="1303:14" pos:end="1303:15">-&gt;</operator><name pos:start="1303:16" pos:end="1303:26">buffer_size</name></name> <operator pos:start="1303:28" pos:end="1303:28">=</operator> <name pos:start="1303:30" pos:end="1303:50"><name pos:start="1303:30" pos:end="1303:34">avctx</name><operator pos:start="1303:35" pos:end="1303:36">-&gt;</operator><name pos:start="1303:37" pos:end="1303:50">rc_buffer_size</name></name></expr>;</expr_stmt>



    <return pos:start="1307:5" pos:end="1307:13">return <expr pos:start="1307:12" pos:end="1307:12"><literal type="number" pos:start="1307:12" pos:end="1307:12">0</literal></expr>;</return>

<label pos:start="1309:1" pos:end="1309:5"><name pos:start="1309:1" pos:end="1309:4">fail</name>:</label>

    <expr_stmt pos:start="1311:5" pos:end="1311:29"><expr pos:start="1311:5" pos:end="1311:28"><call pos:start="1311:5" pos:end="1311:28"><name pos:start="1311:5" pos:end="1311:21">ff_mpv_encode_end</name><argument_list pos:start="1311:22" pos:end="1311:28">(<argument pos:start="1311:23" pos:end="1311:27"><expr pos:start="1311:23" pos:end="1311:27"><name pos:start="1311:23" pos:end="1311:27">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="1313:5" pos:end="1313:27">return <expr pos:start="1313:12" pos:end="1313:26"><name pos:start="1313:12" pos:end="1313:26">AVERROR_UNKNOWN</name></expr>;</return>

</block_content>}</block></function>
</unit>
