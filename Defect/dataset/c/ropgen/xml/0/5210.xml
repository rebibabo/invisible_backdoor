<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5210.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">qmp_input_type_null</name><parameter_list pos:start="1:32" pos:end="1:75">(<parameter pos:start="1:33" pos:end="1:42"><decl pos:start="1:33" pos:end="1:42"><type pos:start="1:33" pos:end="1:42"><name pos:start="1:33" pos:end="1:39">Visitor</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">v</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:60"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">name</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:67">Error</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier><modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">QmpInputVisitor</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">qiv</name> <init pos:start="5:26" pos:end="5:36">= <expr pos:start="5:28" pos:end="5:36"><call pos:start="5:28" pos:end="5:36"><name pos:start="5:28" pos:end="5:33">to_qiv</name><argument_list pos:start="5:34" pos:end="5:36">(<argument pos:start="5:35" pos:end="5:35"><expr pos:start="5:35" pos:end="5:35"><name pos:start="5:35" pos:end="5:35">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">QObject</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">qobj</name> <init pos:start="7:19" pos:end="7:63">= <expr pos:start="7:21" pos:end="7:63"><call pos:start="7:21" pos:end="7:63"><name pos:start="7:21" pos:end="7:40">qmp_input_get_object</name><argument_list pos:start="7:41" pos:end="7:63">(<argument pos:start="7:42" pos:end="7:44"><expr pos:start="7:42" pos:end="7:44"><name pos:start="7:42" pos:end="7:44">qiv</name></expr></argument>, <argument pos:start="7:47" pos:end="7:50"><expr pos:start="7:47" pos:end="7:50"><name pos:start="7:47" pos:end="7:50">name</name></expr></argument>, <argument pos:start="7:53" pos:end="7:56"><expr pos:start="7:53" pos:end="7:56"><name pos:start="7:53" pos:end="7:56">true</name></expr></argument>, <argument pos:start="7:59" pos:end="7:62"><expr pos:start="7:59" pos:end="7:62"><name pos:start="7:59" pos:end="7:62">errp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:14">(<expr pos:start="11:9" pos:end="11:13"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:13">qobj</name></expr>)</condition> <block pos:start="11:16" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:42">(<expr pos:start="19:9" pos:end="19:41"><call pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:20">qobject_type</name><argument_list pos:start="19:21" pos:end="19:26">(<argument pos:start="19:22" pos:end="19:25"><expr pos:start="19:22" pos:end="19:25"><name pos:start="19:22" pos:end="19:25">qobj</name></expr></argument>)</argument_list></call> <operator pos:start="19:28" pos:end="19:29">!=</operator> <name pos:start="19:31" pos:end="19:41">QTYPE_QNULL</name></expr>)</condition> <block pos:start="19:44" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:27">

        <expr_stmt pos:start="21:9" pos:end="23:27"><expr pos:start="21:9" pos:end="23:26"><call pos:start="21:9" pos:end="23:26"><name pos:start="21:9" pos:end="21:18">error_setg</name><argument_list pos:start="21:19" pos:end="23:26">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">errp</name></expr></argument>, <argument pos:start="21:26" pos:end="21:52"><expr pos:start="21:26" pos:end="21:52"><name pos:start="21:26" pos:end="21:52">QERR_INVALID_PARAMETER_TYPE</name></expr></argument>, <argument pos:start="21:55" pos:end="21:74"><expr pos:start="21:55" pos:end="21:74"><ternary pos:start="21:55" pos:end="21:74"><condition pos:start="21:55" pos:end="21:60"><expr pos:start="21:55" pos:end="21:58"><name pos:start="21:55" pos:end="21:58">name</name></expr> ?</condition><then pos:start="21:62" pos:end="21:65"> <expr pos:start="21:62" pos:end="21:65"><name pos:start="21:62" pos:end="21:65">name</name></expr> </then><else pos:start="21:67" pos:end="21:74">: <expr pos:start="21:69" pos:end="21:74"><literal type="string" pos:start="21:69" pos:end="21:74">"null"</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="23:20" pos:end="23:25"><expr pos:start="23:20" pos:end="23:25"><literal type="string" pos:start="23:20" pos:end="23:25">"null"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
