<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16058.c" pos:tabs="8"><function pos:start="1:1" pos:end="281:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">gmc1_altivec</name><parameter_list pos:start="1:18" pos:end="1:122">(<parameter pos:start="1:19" pos:end="1:30"><decl pos:start="1:19" pos:end="1:30"><type pos:start="1:19" pos:end="1:30"><name pos:start="1:19" pos:end="1:25">uint8_t</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:30">dst</name></decl></parameter> <comment type="block" pos:start="1:32" pos:end="1:44">/* align 8 */</comment>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">src</name></decl></parameter> <comment type="block" pos:start="1:60" pos:end="1:71">/* align1 */</comment>, <parameter pos:start="1:74" pos:end="1:83"><decl pos:start="1:74" pos:end="1:83"><type pos:start="1:74" pos:end="1:83"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:83">stride</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:90"><decl pos:start="1:86" pos:end="1:90"><type pos:start="1:86" pos:end="1:90"><name pos:start="1:86" pos:end="1:88">int</name></type> <name pos:start="1:90" pos:end="1:90">h</name></decl></parameter>, <parameter pos:start="1:93" pos:end="1:99"><decl pos:start="1:93" pos:end="1:99"><type pos:start="1:93" pos:end="1:99"><name pos:start="1:93" pos:end="1:95">int</name></type> <name pos:start="1:97" pos:end="1:99">x16</name></decl></parameter>, <parameter pos:start="1:102" pos:end="1:108"><decl pos:start="1:102" pos:end="1:108"><type pos:start="1:102" pos:end="1:108"><name pos:start="1:102" pos:end="1:104">int</name></type> <name pos:start="1:106" pos:end="1:108">y16</name></decl></parameter>, <parameter pos:start="1:111" pos:end="1:121"><decl pos:start="1:111" pos:end="1:121"><type pos:start="1:111" pos:end="1:121"><name pos:start="1:111" pos:end="1:113">int</name></type> <name pos:start="1:115" pos:end="1:121">rounder</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="281:1">{<block_content pos:start="5:1" pos:end="280:0">

<expr_stmt pos:start="5:1" pos:end="8:0"><expr pos:start="5:1" pos:end="5:53"><call pos:start="5:1" pos:end="5:53"><name pos:start="5:1" pos:end="5:19">POWERPC_TBL_DECLARE</name><argument_list pos:start="5:20" pos:end="5:53">(<argument pos:start="5:21" pos:end="5:36"><expr pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:36">altivec_gmc1_num</name></expr></argument>, <argument pos:start="5:39" pos:end="5:52"><expr pos:start="5:39" pos:end="5:52"><name pos:start="5:39" pos:end="5:52">GMC1_PERF_COND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:35">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:35">ALTIVEC_USE_REFERENCE_C_CODE</name></cpp:ifdef>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:15">A</name><init pos:start="9:16" pos:end="9:33">=<expr pos:start="9:17" pos:end="9:33"><operator pos:start="9:17" pos:end="9:17">(</operator><literal type="number" pos:start="9:18" pos:end="9:20">16</literal><operator pos:start="9:20" pos:end="9:20">-</operator><name pos:start="9:21" pos:end="9:23">x16</name><operator pos:start="9:24" pos:end="9:24">)</operator><operator pos:start="9:25" pos:end="9:25">*</operator><operator pos:start="9:26" pos:end="9:26">(</operator><literal type="number" pos:start="9:27" pos:end="9:29">16</literal><operator pos:start="9:29" pos:end="9:29">-</operator><name pos:start="9:30" pos:end="9:32">y16</name><operator pos:start="9:33" pos:end="9:33">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:15">B</name><init pos:start="11:16" pos:end="11:33">=<expr pos:start="11:17" pos:end="11:33"><operator pos:start="11:17" pos:end="11:17">(</operator>   <name pos:start="11:21" pos:end="11:23">x16</name><operator pos:start="11:24" pos:end="11:24">)</operator><operator pos:start="11:25" pos:end="11:25">*</operator><operator pos:start="11:26" pos:end="11:26">(</operator><literal type="number" pos:start="11:27" pos:end="11:29">16</literal><operator pos:start="11:29" pos:end="11:29">-</operator><name pos:start="11:30" pos:end="11:32">y16</name><operator pos:start="11:33" pos:end="11:33">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:15">C</name><init pos:start="13:16" pos:end="13:33">=<expr pos:start="13:17" pos:end="13:33"><operator pos:start="13:17" pos:end="13:17">(</operator><literal type="number" pos:start="13:18" pos:end="13:20">16</literal><operator pos:start="13:20" pos:end="13:20">-</operator><name pos:start="13:21" pos:end="13:23">x16</name><operator pos:start="13:24" pos:end="13:24">)</operator><operator pos:start="13:25" pos:end="13:25">*</operator><operator pos:start="13:26" pos:end="13:26">(</operator>   <name pos:start="13:30" pos:end="13:32">y16</name><operator pos:start="13:33" pos:end="13:33">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:15">D</name><init pos:start="15:16" pos:end="15:33">=<expr pos:start="15:17" pos:end="15:33"><operator pos:start="15:17" pos:end="15:17">(</operator>   <name pos:start="15:21" pos:end="15:23">x16</name><operator pos:start="15:24" pos:end="15:24">)</operator><operator pos:start="15:25" pos:end="15:25">*</operator><operator pos:start="15:26" pos:end="15:26">(</operator>   <name pos:start="15:30" pos:end="15:32">y16</name><operator pos:start="15:33" pos:end="15:33">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



<expr_stmt pos:start="21:1" pos:end="21:58"><expr pos:start="21:1" pos:end="21:57"><call pos:start="21:1" pos:end="21:57"><name pos:start="21:1" pos:end="21:23">POWERPC_TBL_START_COUNT</name><argument_list pos:start="21:24" pos:end="21:57">(<argument pos:start="21:25" pos:end="21:40"><expr pos:start="21:25" pos:end="21:40"><name pos:start="21:25" pos:end="21:40">altivec_gmc1_num</name></expr></argument>, <argument pos:start="21:43" pos:end="21:56"><expr pos:start="21:43" pos:end="21:56"><name pos:start="21:43" pos:end="21:56">GMC1_PERF_COND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <for pos:start="25:5" pos:end="49:5">for<control pos:start="25:8" pos:end="25:22">(<init pos:start="25:9" pos:end="25:12"><expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:9">i</name><operator pos:start="25:10" pos:end="25:10">=</operator><literal type="number" pos:start="25:11" pos:end="25:11">0</literal></expr>;</init> <condition pos:start="25:14" pos:end="25:17"><expr pos:start="25:14" pos:end="25:16"><name pos:start="25:14" pos:end="25:14">i</name><operator pos:start="25:15" pos:end="25:15">&lt;</operator><name pos:start="25:16" pos:end="25:16">h</name></expr>;</condition> <incr pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:19">i</name><operator pos:start="25:20" pos:end="25:21">++</operator></expr></incr>)</control>

    <block pos:start="27:5" pos:end="49:5">{<block_content pos:start="29:9" pos:end="47:21">

        <expr_stmt pos:start="29:9" pos:end="29:87"><expr pos:start="29:9" pos:end="29:86"><name pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:11">dst</name><index pos:start="29:12" pos:end="29:14">[<expr pos:start="29:13" pos:end="29:13"><literal type="number" pos:start="29:13" pos:end="29:13">0</literal></expr>]</index></name><operator pos:start="29:15" pos:end="29:15">=</operator> <operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:18">A</name><operator pos:start="29:19" pos:end="29:19">*</operator><name pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:22">src</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>]</index></name> <operator pos:start="29:27" pos:end="29:27">+</operator> <name pos:start="29:29" pos:end="29:29">B</name><operator pos:start="29:30" pos:end="29:30">*</operator><name pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:33">src</name><index pos:start="29:34" pos:end="29:36">[<expr pos:start="29:35" pos:end="29:35"><literal type="number" pos:start="29:35" pos:end="29:35">1</literal></expr>]</index></name> <operator pos:start="29:38" pos:end="29:38">+</operator> <name pos:start="29:40" pos:end="29:40">C</name><operator pos:start="29:41" pos:end="29:41">*</operator><name pos:start="29:42" pos:end="29:54"><name pos:start="29:42" pos:end="29:44">src</name><index pos:start="29:45" pos:end="29:54">[<expr pos:start="29:46" pos:end="29:53"><name pos:start="29:46" pos:end="29:51">stride</name><operator pos:start="29:52" pos:end="29:52">+</operator><literal type="number" pos:start="29:53" pos:end="29:53">0</literal></expr>]</index></name> <operator pos:start="29:56" pos:end="29:56">+</operator> <name pos:start="29:58" pos:end="29:58">D</name><operator pos:start="29:59" pos:end="29:59">*</operator><name pos:start="29:60" pos:end="29:72"><name pos:start="29:60" pos:end="29:62">src</name><index pos:start="29:63" pos:end="29:72">[<expr pos:start="29:64" pos:end="29:71"><name pos:start="29:64" pos:end="29:69">stride</name><operator pos:start="29:70" pos:end="29:70">+</operator><literal type="number" pos:start="29:71" pos:end="29:71">1</literal></expr>]</index></name> <operator pos:start="29:74" pos:end="29:74">+</operator> <name pos:start="29:76" pos:end="29:82">rounder</name><operator pos:start="29:83" pos:end="29:83">)</operator><operator pos:start="29:84" pos:end="29:85">&gt;&gt;</operator><literal type="number" pos:start="29:86" pos:end="29:86">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:87"><expr pos:start="31:9" pos:end="31:86"><name pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:11">dst</name><index pos:start="31:12" pos:end="31:14">[<expr pos:start="31:13" pos:end="31:13"><literal type="number" pos:start="31:13" pos:end="31:13">1</literal></expr>]</index></name><operator pos:start="31:15" pos:end="31:15">=</operator> <operator pos:start="31:17" pos:end="31:17">(</operator><name pos:start="31:18" pos:end="31:18">A</name><operator pos:start="31:19" pos:end="31:19">*</operator><name pos:start="31:20" pos:end="31:25"><name pos:start="31:20" pos:end="31:22">src</name><index pos:start="31:23" pos:end="31:25">[<expr pos:start="31:24" pos:end="31:24"><literal type="number" pos:start="31:24" pos:end="31:24">1</literal></expr>]</index></name> <operator pos:start="31:27" pos:end="31:27">+</operator> <name pos:start="31:29" pos:end="31:29">B</name><operator pos:start="31:30" pos:end="31:30">*</operator><name pos:start="31:31" pos:end="31:36"><name pos:start="31:31" pos:end="31:33">src</name><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">2</literal></expr>]</index></name> <operator pos:start="31:38" pos:end="31:38">+</operator> <name pos:start="31:40" pos:end="31:40">C</name><operator pos:start="31:41" pos:end="31:41">*</operator><name pos:start="31:42" pos:end="31:54"><name pos:start="31:42" pos:end="31:44">src</name><index pos:start="31:45" pos:end="31:54">[<expr pos:start="31:46" pos:end="31:53"><name pos:start="31:46" pos:end="31:51">stride</name><operator pos:start="31:52" pos:end="31:52">+</operator><literal type="number" pos:start="31:53" pos:end="31:53">1</literal></expr>]</index></name> <operator pos:start="31:56" pos:end="31:56">+</operator> <name pos:start="31:58" pos:end="31:58">D</name><operator pos:start="31:59" pos:end="31:59">*</operator><name pos:start="31:60" pos:end="31:72"><name pos:start="31:60" pos:end="31:62">src</name><index pos:start="31:63" pos:end="31:72">[<expr pos:start="31:64" pos:end="31:71"><name pos:start="31:64" pos:end="31:69">stride</name><operator pos:start="31:70" pos:end="31:70">+</operator><literal type="number" pos:start="31:71" pos:end="31:71">2</literal></expr>]</index></name> <operator pos:start="31:74" pos:end="31:74">+</operator> <name pos:start="31:76" pos:end="31:82">rounder</name><operator pos:start="31:83" pos:end="31:83">)</operator><operator pos:start="31:84" pos:end="31:85">&gt;&gt;</operator><literal type="number" pos:start="31:86" pos:end="31:86">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:87"><expr pos:start="33:9" pos:end="33:86"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:11">dst</name><index pos:start="33:12" pos:end="33:14">[<expr pos:start="33:13" pos:end="33:13"><literal type="number" pos:start="33:13" pos:end="33:13">2</literal></expr>]</index></name><operator pos:start="33:15" pos:end="33:15">=</operator> <operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:18">A</name><operator pos:start="33:19" pos:end="33:19">*</operator><name pos:start="33:20" pos:end="33:25"><name pos:start="33:20" pos:end="33:22">src</name><index pos:start="33:23" pos:end="33:25">[<expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">2</literal></expr>]</index></name> <operator pos:start="33:27" pos:end="33:27">+</operator> <name pos:start="33:29" pos:end="33:29">B</name><operator pos:start="33:30" pos:end="33:30">*</operator><name pos:start="33:31" pos:end="33:36"><name pos:start="33:31" pos:end="33:33">src</name><index pos:start="33:34" pos:end="33:36">[<expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">3</literal></expr>]</index></name> <operator pos:start="33:38" pos:end="33:38">+</operator> <name pos:start="33:40" pos:end="33:40">C</name><operator pos:start="33:41" pos:end="33:41">*</operator><name pos:start="33:42" pos:end="33:54"><name pos:start="33:42" pos:end="33:44">src</name><index pos:start="33:45" pos:end="33:54">[<expr pos:start="33:46" pos:end="33:53"><name pos:start="33:46" pos:end="33:51">stride</name><operator pos:start="33:52" pos:end="33:52">+</operator><literal type="number" pos:start="33:53" pos:end="33:53">2</literal></expr>]</index></name> <operator pos:start="33:56" pos:end="33:56">+</operator> <name pos:start="33:58" pos:end="33:58">D</name><operator pos:start="33:59" pos:end="33:59">*</operator><name pos:start="33:60" pos:end="33:72"><name pos:start="33:60" pos:end="33:62">src</name><index pos:start="33:63" pos:end="33:72">[<expr pos:start="33:64" pos:end="33:71"><name pos:start="33:64" pos:end="33:69">stride</name><operator pos:start="33:70" pos:end="33:70">+</operator><literal type="number" pos:start="33:71" pos:end="33:71">3</literal></expr>]</index></name> <operator pos:start="33:74" pos:end="33:74">+</operator> <name pos:start="33:76" pos:end="33:82">rounder</name><operator pos:start="33:83" pos:end="33:83">)</operator><operator pos:start="33:84" pos:end="33:85">&gt;&gt;</operator><literal type="number" pos:start="33:86" pos:end="33:86">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:87"><expr pos:start="35:9" pos:end="35:86"><name pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:11">dst</name><index pos:start="35:12" pos:end="35:14">[<expr pos:start="35:13" pos:end="35:13"><literal type="number" pos:start="35:13" pos:end="35:13">3</literal></expr>]</index></name><operator pos:start="35:15" pos:end="35:15">=</operator> <operator pos:start="35:17" pos:end="35:17">(</operator><name pos:start="35:18" pos:end="35:18">A</name><operator pos:start="35:19" pos:end="35:19">*</operator><name pos:start="35:20" pos:end="35:25"><name pos:start="35:20" pos:end="35:22">src</name><index pos:start="35:23" pos:end="35:25">[<expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">3</literal></expr>]</index></name> <operator pos:start="35:27" pos:end="35:27">+</operator> <name pos:start="35:29" pos:end="35:29">B</name><operator pos:start="35:30" pos:end="35:30">*</operator><name pos:start="35:31" pos:end="35:36"><name pos:start="35:31" pos:end="35:33">src</name><index pos:start="35:34" pos:end="35:36">[<expr pos:start="35:35" pos:end="35:35"><literal type="number" pos:start="35:35" pos:end="35:35">4</literal></expr>]</index></name> <operator pos:start="35:38" pos:end="35:38">+</operator> <name pos:start="35:40" pos:end="35:40">C</name><operator pos:start="35:41" pos:end="35:41">*</operator><name pos:start="35:42" pos:end="35:54"><name pos:start="35:42" pos:end="35:44">src</name><index pos:start="35:45" pos:end="35:54">[<expr pos:start="35:46" pos:end="35:53"><name pos:start="35:46" pos:end="35:51">stride</name><operator pos:start="35:52" pos:end="35:52">+</operator><literal type="number" pos:start="35:53" pos:end="35:53">3</literal></expr>]</index></name> <operator pos:start="35:56" pos:end="35:56">+</operator> <name pos:start="35:58" pos:end="35:58">D</name><operator pos:start="35:59" pos:end="35:59">*</operator><name pos:start="35:60" pos:end="35:72"><name pos:start="35:60" pos:end="35:62">src</name><index pos:start="35:63" pos:end="35:72">[<expr pos:start="35:64" pos:end="35:71"><name pos:start="35:64" pos:end="35:69">stride</name><operator pos:start="35:70" pos:end="35:70">+</operator><literal type="number" pos:start="35:71" pos:end="35:71">4</literal></expr>]</index></name> <operator pos:start="35:74" pos:end="35:74">+</operator> <name pos:start="35:76" pos:end="35:82">rounder</name><operator pos:start="35:83" pos:end="35:83">)</operator><operator pos:start="35:84" pos:end="35:85">&gt;&gt;</operator><literal type="number" pos:start="35:86" pos:end="35:86">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:87"><expr pos:start="37:9" pos:end="37:86"><name pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:11">dst</name><index pos:start="37:12" pos:end="37:14">[<expr pos:start="37:13" pos:end="37:13"><literal type="number" pos:start="37:13" pos:end="37:13">4</literal></expr>]</index></name><operator pos:start="37:15" pos:end="37:15">=</operator> <operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:18">A</name><operator pos:start="37:19" pos:end="37:19">*</operator><name pos:start="37:20" pos:end="37:25"><name pos:start="37:20" pos:end="37:22">src</name><index pos:start="37:23" pos:end="37:25">[<expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">4</literal></expr>]</index></name> <operator pos:start="37:27" pos:end="37:27">+</operator> <name pos:start="37:29" pos:end="37:29">B</name><operator pos:start="37:30" pos:end="37:30">*</operator><name pos:start="37:31" pos:end="37:36"><name pos:start="37:31" pos:end="37:33">src</name><index pos:start="37:34" pos:end="37:36">[<expr pos:start="37:35" pos:end="37:35"><literal type="number" pos:start="37:35" pos:end="37:35">5</literal></expr>]</index></name> <operator pos:start="37:38" pos:end="37:38">+</operator> <name pos:start="37:40" pos:end="37:40">C</name><operator pos:start="37:41" pos:end="37:41">*</operator><name pos:start="37:42" pos:end="37:54"><name pos:start="37:42" pos:end="37:44">src</name><index pos:start="37:45" pos:end="37:54">[<expr pos:start="37:46" pos:end="37:53"><name pos:start="37:46" pos:end="37:51">stride</name><operator pos:start="37:52" pos:end="37:52">+</operator><literal type="number" pos:start="37:53" pos:end="37:53">4</literal></expr>]</index></name> <operator pos:start="37:56" pos:end="37:56">+</operator> <name pos:start="37:58" pos:end="37:58">D</name><operator pos:start="37:59" pos:end="37:59">*</operator><name pos:start="37:60" pos:end="37:72"><name pos:start="37:60" pos:end="37:62">src</name><index pos:start="37:63" pos:end="37:72">[<expr pos:start="37:64" pos:end="37:71"><name pos:start="37:64" pos:end="37:69">stride</name><operator pos:start="37:70" pos:end="37:70">+</operator><literal type="number" pos:start="37:71" pos:end="37:71">5</literal></expr>]</index></name> <operator pos:start="37:74" pos:end="37:74">+</operator> <name pos:start="37:76" pos:end="37:82">rounder</name><operator pos:start="37:83" pos:end="37:83">)</operator><operator pos:start="37:84" pos:end="37:85">&gt;&gt;</operator><literal type="number" pos:start="37:86" pos:end="37:86">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:87"><expr pos:start="39:9" pos:end="39:86"><name pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:11">dst</name><index pos:start="39:12" pos:end="39:14">[<expr pos:start="39:13" pos:end="39:13"><literal type="number" pos:start="39:13" pos:end="39:13">5</literal></expr>]</index></name><operator pos:start="39:15" pos:end="39:15">=</operator> <operator pos:start="39:17" pos:end="39:17">(</operator><name pos:start="39:18" pos:end="39:18">A</name><operator pos:start="39:19" pos:end="39:19">*</operator><name pos:start="39:20" pos:end="39:25"><name pos:start="39:20" pos:end="39:22">src</name><index pos:start="39:23" pos:end="39:25">[<expr pos:start="39:24" pos:end="39:24"><literal type="number" pos:start="39:24" pos:end="39:24">5</literal></expr>]</index></name> <operator pos:start="39:27" pos:end="39:27">+</operator> <name pos:start="39:29" pos:end="39:29">B</name><operator pos:start="39:30" pos:end="39:30">*</operator><name pos:start="39:31" pos:end="39:36"><name pos:start="39:31" pos:end="39:33">src</name><index pos:start="39:34" pos:end="39:36">[<expr pos:start="39:35" pos:end="39:35"><literal type="number" pos:start="39:35" pos:end="39:35">6</literal></expr>]</index></name> <operator pos:start="39:38" pos:end="39:38">+</operator> <name pos:start="39:40" pos:end="39:40">C</name><operator pos:start="39:41" pos:end="39:41">*</operator><name pos:start="39:42" pos:end="39:54"><name pos:start="39:42" pos:end="39:44">src</name><index pos:start="39:45" pos:end="39:54">[<expr pos:start="39:46" pos:end="39:53"><name pos:start="39:46" pos:end="39:51">stride</name><operator pos:start="39:52" pos:end="39:52">+</operator><literal type="number" pos:start="39:53" pos:end="39:53">5</literal></expr>]</index></name> <operator pos:start="39:56" pos:end="39:56">+</operator> <name pos:start="39:58" pos:end="39:58">D</name><operator pos:start="39:59" pos:end="39:59">*</operator><name pos:start="39:60" pos:end="39:72"><name pos:start="39:60" pos:end="39:62">src</name><index pos:start="39:63" pos:end="39:72">[<expr pos:start="39:64" pos:end="39:71"><name pos:start="39:64" pos:end="39:69">stride</name><operator pos:start="39:70" pos:end="39:70">+</operator><literal type="number" pos:start="39:71" pos:end="39:71">6</literal></expr>]</index></name> <operator pos:start="39:74" pos:end="39:74">+</operator> <name pos:start="39:76" pos:end="39:82">rounder</name><operator pos:start="39:83" pos:end="39:83">)</operator><operator pos:start="39:84" pos:end="39:85">&gt;&gt;</operator><literal type="number" pos:start="39:86" pos:end="39:86">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:87"><expr pos:start="41:9" pos:end="41:86"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:11">dst</name><index pos:start="41:12" pos:end="41:14">[<expr pos:start="41:13" pos:end="41:13"><literal type="number" pos:start="41:13" pos:end="41:13">6</literal></expr>]</index></name><operator pos:start="41:15" pos:end="41:15">=</operator> <operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:18">A</name><operator pos:start="41:19" pos:end="41:19">*</operator><name pos:start="41:20" pos:end="41:25"><name pos:start="41:20" pos:end="41:22">src</name><index pos:start="41:23" pos:end="41:25">[<expr pos:start="41:24" pos:end="41:24"><literal type="number" pos:start="41:24" pos:end="41:24">6</literal></expr>]</index></name> <operator pos:start="41:27" pos:end="41:27">+</operator> <name pos:start="41:29" pos:end="41:29">B</name><operator pos:start="41:30" pos:end="41:30">*</operator><name pos:start="41:31" pos:end="41:36"><name pos:start="41:31" pos:end="41:33">src</name><index pos:start="41:34" pos:end="41:36">[<expr pos:start="41:35" pos:end="41:35"><literal type="number" pos:start="41:35" pos:end="41:35">7</literal></expr>]</index></name> <operator pos:start="41:38" pos:end="41:38">+</operator> <name pos:start="41:40" pos:end="41:40">C</name><operator pos:start="41:41" pos:end="41:41">*</operator><name pos:start="41:42" pos:end="41:54"><name pos:start="41:42" pos:end="41:44">src</name><index pos:start="41:45" pos:end="41:54">[<expr pos:start="41:46" pos:end="41:53"><name pos:start="41:46" pos:end="41:51">stride</name><operator pos:start="41:52" pos:end="41:52">+</operator><literal type="number" pos:start="41:53" pos:end="41:53">6</literal></expr>]</index></name> <operator pos:start="41:56" pos:end="41:56">+</operator> <name pos:start="41:58" pos:end="41:58">D</name><operator pos:start="41:59" pos:end="41:59">*</operator><name pos:start="41:60" pos:end="41:72"><name pos:start="41:60" pos:end="41:62">src</name><index pos:start="41:63" pos:end="41:72">[<expr pos:start="41:64" pos:end="41:71"><name pos:start="41:64" pos:end="41:69">stride</name><operator pos:start="41:70" pos:end="41:70">+</operator><literal type="number" pos:start="41:71" pos:end="41:71">7</literal></expr>]</index></name> <operator pos:start="41:74" pos:end="41:74">+</operator> <name pos:start="41:76" pos:end="41:82">rounder</name><operator pos:start="41:83" pos:end="41:83">)</operator><operator pos:start="41:84" pos:end="41:85">&gt;&gt;</operator><literal type="number" pos:start="41:86" pos:end="41:86">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:87"><expr pos:start="43:9" pos:end="43:86"><name pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:11">dst</name><index pos:start="43:12" pos:end="43:14">[<expr pos:start="43:13" pos:end="43:13"><literal type="number" pos:start="43:13" pos:end="43:13">7</literal></expr>]</index></name><operator pos:start="43:15" pos:end="43:15">=</operator> <operator pos:start="43:17" pos:end="43:17">(</operator><name pos:start="43:18" pos:end="43:18">A</name><operator pos:start="43:19" pos:end="43:19">*</operator><name pos:start="43:20" pos:end="43:25"><name pos:start="43:20" pos:end="43:22">src</name><index pos:start="43:23" pos:end="43:25">[<expr pos:start="43:24" pos:end="43:24"><literal type="number" pos:start="43:24" pos:end="43:24">7</literal></expr>]</index></name> <operator pos:start="43:27" pos:end="43:27">+</operator> <name pos:start="43:29" pos:end="43:29">B</name><operator pos:start="43:30" pos:end="43:30">*</operator><name pos:start="43:31" pos:end="43:36"><name pos:start="43:31" pos:end="43:33">src</name><index pos:start="43:34" pos:end="43:36">[<expr pos:start="43:35" pos:end="43:35"><literal type="number" pos:start="43:35" pos:end="43:35">8</literal></expr>]</index></name> <operator pos:start="43:38" pos:end="43:38">+</operator> <name pos:start="43:40" pos:end="43:40">C</name><operator pos:start="43:41" pos:end="43:41">*</operator><name pos:start="43:42" pos:end="43:54"><name pos:start="43:42" pos:end="43:44">src</name><index pos:start="43:45" pos:end="43:54">[<expr pos:start="43:46" pos:end="43:53"><name pos:start="43:46" pos:end="43:51">stride</name><operator pos:start="43:52" pos:end="43:52">+</operator><literal type="number" pos:start="43:53" pos:end="43:53">7</literal></expr>]</index></name> <operator pos:start="43:56" pos:end="43:56">+</operator> <name pos:start="43:58" pos:end="43:58">D</name><operator pos:start="43:59" pos:end="43:59">*</operator><name pos:start="43:60" pos:end="43:72"><name pos:start="43:60" pos:end="43:62">src</name><index pos:start="43:63" pos:end="43:72">[<expr pos:start="43:64" pos:end="43:71"><name pos:start="43:64" pos:end="43:69">stride</name><operator pos:start="43:70" pos:end="43:70">+</operator><literal type="number" pos:start="43:71" pos:end="43:71">8</literal></expr>]</index></name> <operator pos:start="43:74" pos:end="43:74">+</operator> <name pos:start="43:76" pos:end="43:82">rounder</name><operator pos:start="43:83" pos:end="43:83">)</operator><operator pos:start="43:84" pos:end="43:85">&gt;&gt;</operator><literal type="number" pos:start="43:86" pos:end="43:86">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:11">dst</name><operator pos:start="45:12" pos:end="45:13">+=</operator> <name pos:start="45:15" pos:end="45:20">stride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:21"><expr pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:11">src</name><operator pos:start="47:12" pos:end="47:13">+=</operator> <name pos:start="47:15" pos:end="47:20">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>



<expr_stmt pos:start="53:1" pos:end="58:0"><expr pos:start="53:1" pos:end="53:56"><call pos:start="53:1" pos:end="53:56"><name pos:start="53:1" pos:end="53:22">POWERPC_TBL_STOP_COUNT</name><argument_list pos:start="53:23" pos:end="53:56">(<argument pos:start="53:24" pos:end="53:39"><expr pos:start="53:24" pos:end="53:39"><name pos:start="53:24" pos:end="53:39">altivec_gmc1_num</name></expr></argument>, <argument pos:start="53:42" pos:end="53:55"><expr pos:start="53:42" pos:end="53:55"><name pos:start="53:42" pos:end="53:55">GMC1_PERF_COND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:else pos:start="57:1" pos:end="57:5">#<cpp:directive pos:start="57:2" pos:end="57:5">else</cpp:directive></cpp:else> <comment type="block" pos:start="57:7" pos:end="57:40">/* ALTIVEC_USE_REFERENCE_C_CODE */</comment>

    <decl_stmt pos:start="59:5" pos:end="63:43"><decl pos:start="59:5" pos:end="63:42"><type pos:start="59:5" pos:end="59:24"><specifier pos:start="59:5" pos:end="59:9">const</specifier> <name pos:start="59:11" pos:end="59:18">unsigned</name> <name pos:start="59:20" pos:end="59:24">short</name></type> <name pos:start="59:26" pos:end="59:38">__attribute__</name> <argument_list pos:start="59:40" pos:end="59:54">(<argument pos:start="59:41" pos:end="59:53"><expr pos:start="59:41" pos:end="59:53"><operator pos:start="59:41" pos:end="59:41">(</operator><call pos:start="59:42" pos:end="59:52"><name pos:start="59:42" pos:end="59:48">aligned</name><argument_list pos:start="59:49" pos:end="59:52">(<argument pos:start="59:50" pos:end="59:51"><expr pos:start="59:50" pos:end="59:51"><literal type="number" pos:start="59:50" pos:end="59:51">16</literal></expr></argument>)</argument_list></call><operator pos:start="59:53" pos:end="59:53">)</operator></expr></argument>)</argument_list> <name pos:start="59:56" pos:end="59:67"><name pos:start="59:56" pos:end="59:64">rounder_a</name><index pos:start="59:65" pos:end="59:67">[<expr pos:start="59:66" pos:end="59:66"><literal type="number" pos:start="59:66" pos:end="59:66">8</literal></expr>]</index></name> <init pos:start="59:69" pos:end="63:42">=

      <expr pos:start="61:7" pos:end="63:42"><block pos:start="61:7" pos:end="63:42">{<expr pos:start="61:8" pos:end="61:14"><name pos:start="61:8" pos:end="61:14">rounder</name></expr>, <expr pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:23">rounder</name></expr>, <expr pos:start="61:26" pos:end="61:32"><name pos:start="61:26" pos:end="61:32">rounder</name></expr>, <expr pos:start="61:35" pos:end="61:41"><name pos:start="61:35" pos:end="61:41">rounder</name></expr>,

       <expr pos:start="63:8" pos:end="63:14"><name pos:start="63:8" pos:end="63:14">rounder</name></expr>, <expr pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:23">rounder</name></expr>, <expr pos:start="63:26" pos:end="63:32"><name pos:start="63:26" pos:end="63:32">rounder</name></expr>, <expr pos:start="63:35" pos:end="63:41"><name pos:start="63:35" pos:end="63:41">rounder</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="65:5" pos:end="79:8"><decl pos:start="65:5" pos:end="79:7"><type pos:start="65:5" pos:end="65:24"><specifier pos:start="65:5" pos:end="65:9">const</specifier> <name pos:start="65:11" pos:end="65:18">unsigned</name> <name pos:start="65:20" pos:end="65:24">short</name></type> <name pos:start="65:26" pos:end="65:38">__attribute__</name> <argument_list pos:start="65:40" pos:end="65:54">(<argument pos:start="65:41" pos:end="65:53"><expr pos:start="65:41" pos:end="65:53"><operator pos:start="65:41" pos:end="65:41">(</operator><call pos:start="65:42" pos:end="65:52"><name pos:start="65:42" pos:end="65:48">aligned</name><argument_list pos:start="65:49" pos:end="65:52">(<argument pos:start="65:50" pos:end="65:51"><expr pos:start="65:50" pos:end="65:51"><literal type="number" pos:start="65:50" pos:end="65:51">16</literal></expr></argument>)</argument_list></call><operator pos:start="65:53" pos:end="65:53">)</operator></expr></argument>)</argument_list> <name pos:start="65:56" pos:end="65:62"><name pos:start="65:56" pos:end="65:59">ABCD</name><index pos:start="65:60" pos:end="65:62">[<expr pos:start="65:61" pos:end="65:61"><literal type="number" pos:start="65:61" pos:end="65:61">8</literal></expr>]</index></name> <init pos:start="65:64" pos:end="79:7">=

      <expr pos:start="67:7" pos:end="79:7"><block pos:start="67:7" pos:end="79:7">{

        <expr pos:start="69:9" pos:end="69:25"><operator pos:start="69:9" pos:end="69:9">(</operator><literal type="number" pos:start="69:10" pos:end="69:12">16</literal><operator pos:start="69:12" pos:end="69:12">-</operator><name pos:start="69:13" pos:end="69:15">x16</name><operator pos:start="69:16" pos:end="69:16">)</operator><operator pos:start="69:17" pos:end="69:17">*</operator><operator pos:start="69:18" pos:end="69:18">(</operator><literal type="number" pos:start="69:19" pos:end="69:21">16</literal><operator pos:start="69:21" pos:end="69:21">-</operator><name pos:start="69:22" pos:end="69:24">y16</name><operator pos:start="69:25" pos:end="69:25">)</operator></expr>, <comment type="block" pos:start="69:28" pos:end="69:34">/* A */</comment>

        <expr pos:start="71:9" pos:end="71:25"><operator pos:start="71:9" pos:end="71:9">(</operator>   <name pos:start="71:13" pos:end="71:15">x16</name><operator pos:start="71:16" pos:end="71:16">)</operator><operator pos:start="71:17" pos:end="71:17">*</operator><operator pos:start="71:18" pos:end="71:18">(</operator><literal type="number" pos:start="71:19" pos:end="71:21">16</literal><operator pos:start="71:21" pos:end="71:21">-</operator><name pos:start="71:22" pos:end="71:24">y16</name><operator pos:start="71:25" pos:end="71:25">)</operator></expr>, <comment type="block" pos:start="71:28" pos:end="71:34">/* B */</comment>

        <expr pos:start="73:9" pos:end="73:25"><operator pos:start="73:9" pos:end="73:9">(</operator><literal type="number" pos:start="73:10" pos:end="73:12">16</literal><operator pos:start="73:12" pos:end="73:12">-</operator><name pos:start="73:13" pos:end="73:15">x16</name><operator pos:start="73:16" pos:end="73:16">)</operator><operator pos:start="73:17" pos:end="73:17">*</operator><operator pos:start="73:18" pos:end="73:18">(</operator>   <name pos:start="73:22" pos:end="73:24">y16</name><operator pos:start="73:25" pos:end="73:25">)</operator></expr>, <comment type="block" pos:start="73:28" pos:end="73:34">/* C */</comment>

        <expr pos:start="75:9" pos:end="75:25"><operator pos:start="75:9" pos:end="75:9">(</operator>   <name pos:start="75:13" pos:end="75:15">x16</name><operator pos:start="75:16" pos:end="75:16">)</operator><operator pos:start="75:17" pos:end="75:17">*</operator><operator pos:start="75:18" pos:end="75:18">(</operator>   <name pos:start="75:22" pos:end="75:24">y16</name><operator pos:start="75:25" pos:end="75:25">)</operator></expr>, <comment type="block" pos:start="75:28" pos:end="75:34">/* D */</comment>

        <expr pos:start="77:9" pos:end="77:9"><literal type="number" pos:start="77:9" pos:end="77:9">0</literal></expr>, <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>, <expr pos:start="77:15" pos:end="77:15"><literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>, <expr pos:start="77:18" pos:end="77:18"><literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>         <comment type="block" pos:start="77:28" pos:end="77:40">/* padding */</comment>

      }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="81:5" pos:end="81:93"><decl pos:start="81:5" pos:end="81:92"><type pos:start="81:5" pos:end="81:39"><specifier pos:start="81:5" pos:end="81:12">register</specifier> <specifier pos:start="81:14" pos:end="81:18">const</specifier> <name pos:start="81:20" pos:end="81:25">vector</name> <name pos:start="81:27" pos:end="81:34">unsigned</name> <name pos:start="81:36" pos:end="81:39">char</name></type> <name pos:start="81:41" pos:end="81:46">vczero</name> <init pos:start="81:48" pos:end="81:92">= <expr pos:start="81:50" pos:end="81:92"><operator pos:start="81:50" pos:end="81:50">(</operator><specifier pos:start="81:51" pos:end="81:55">const</specifier> <name pos:start="81:57" pos:end="81:62">vector</name> <name pos:start="81:64" pos:end="81:71">unsigned</name> <name pos:start="81:73" pos:end="81:76">char</name><operator pos:start="81:77" pos:end="81:77">)</operator><call pos:start="81:78" pos:end="81:92"><name pos:start="81:78" pos:end="81:89">vec_splat_u8</name><argument_list pos:start="81:90" pos:end="81:92">(<argument pos:start="81:91" pos:end="81:91"><expr pos:start="81:91" pos:end="81:91"><literal type="number" pos:start="81:91" pos:end="81:91">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="83:5" pos:end="83:95"><decl pos:start="83:5" pos:end="83:94"><type pos:start="83:5" pos:end="83:40"><specifier pos:start="83:5" pos:end="83:12">register</specifier> <specifier pos:start="83:14" pos:end="83:18">const</specifier> <name pos:start="83:20" pos:end="83:25">vector</name> <name pos:start="83:27" pos:end="83:34">unsigned</name> <name pos:start="83:36" pos:end="83:40">short</name></type> <name pos:start="83:42" pos:end="83:46">vcsr8</name> <init pos:start="83:48" pos:end="83:94">= <expr pos:start="83:50" pos:end="83:94"><operator pos:start="83:50" pos:end="83:50">(</operator><specifier pos:start="83:51" pos:end="83:55">const</specifier> <name pos:start="83:57" pos:end="83:62">vector</name> <name pos:start="83:64" pos:end="83:71">unsigned</name> <name pos:start="83:73" pos:end="83:77">short</name><operator pos:start="83:78" pos:end="83:78">)</operator><call pos:start="83:79" pos:end="83:94"><name pos:start="83:79" pos:end="83:91">vec_splat_u16</name><argument_list pos:start="83:92" pos:end="83:94">(<argument pos:start="83:93" pos:end="83:93"><expr pos:start="83:93" pos:end="83:93"><literal type="number" pos:start="83:93" pos:end="83:93">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="85:5" pos:end="85:88"><decl pos:start="85:5" pos:end="85:38"><type pos:start="85:5" pos:end="85:33"><specifier pos:start="85:5" pos:end="85:12">register</specifier> <name pos:start="85:14" pos:end="85:19">vector</name> <name pos:start="85:21" pos:end="85:28">unsigned</name> <name pos:start="85:30" pos:end="85:33">char</name></type> <name pos:start="85:35" pos:end="85:38">dstv</name></decl>, <decl pos:start="85:41" pos:end="85:45"><type ref="prev" pos:start="85:5" pos:end="85:33"/><name pos:start="85:41" pos:end="85:45">dstv2</name></decl>, <decl pos:start="85:48" pos:end="85:52"><type ref="prev" pos:start="85:5" pos:end="85:33"/><name pos:start="85:48" pos:end="85:52">src_0</name></decl>, <decl pos:start="85:55" pos:end="85:59"><type ref="prev" pos:start="85:5" pos:end="85:33"/><name pos:start="85:55" pos:end="85:59">src_1</name></decl>, <decl pos:start="85:62" pos:end="85:66"><type ref="prev" pos:start="85:5" pos:end="85:33"/><name pos:start="85:62" pos:end="85:66">srcvA</name></decl>, <decl pos:start="85:69" pos:end="85:73"><type ref="prev" pos:start="85:5" pos:end="85:33"/><name pos:start="85:69" pos:end="85:73">srcvB</name></decl>, <decl pos:start="85:76" pos:end="85:80"><type ref="prev" pos:start="85:5" pos:end="85:33"/><name pos:start="85:76" pos:end="85:80">srcvC</name></decl>, <decl pos:start="85:83" pos:end="85:87"><type ref="prev" pos:start="85:5" pos:end="85:33"/><name pos:start="85:83" pos:end="85:87">srcvD</name></decl>;</decl_stmt>

    <decl_stmt pos:start="87:5" pos:end="87:88"><decl pos:start="87:5" pos:end="87:37"><type pos:start="87:5" pos:end="87:34"><specifier pos:start="87:5" pos:end="87:12">register</specifier> <name pos:start="87:14" pos:end="87:19">vector</name> <name pos:start="87:21" pos:end="87:28">unsigned</name> <name pos:start="87:30" pos:end="87:34">short</name></type> <name pos:start="87:36" pos:end="87:37">Av</name></decl>, <decl pos:start="87:40" pos:end="87:41"><type ref="prev" pos:start="87:5" pos:end="87:34"/><name pos:start="87:40" pos:end="87:41">Bv</name></decl>, <decl pos:start="87:44" pos:end="87:45"><type ref="prev" pos:start="87:5" pos:end="87:34"/><name pos:start="87:44" pos:end="87:45">Cv</name></decl>, <decl pos:start="87:48" pos:end="87:49"><type ref="prev" pos:start="87:5" pos:end="87:34"/><name pos:start="87:48" pos:end="87:49">Dv</name></decl>, <decl pos:start="87:52" pos:end="87:59"><type ref="prev" pos:start="87:5" pos:end="87:34"/><name pos:start="87:52" pos:end="87:59">rounderV</name></decl>, <decl pos:start="87:62" pos:end="87:66"><type ref="prev" pos:start="87:5" pos:end="87:34"/><name pos:start="87:62" pos:end="87:66">tempA</name></decl>, <decl pos:start="87:69" pos:end="87:73"><type ref="prev" pos:start="87:5" pos:end="87:34"/><name pos:start="87:69" pos:end="87:73">tempB</name></decl>, <decl pos:start="87:76" pos:end="87:80"><type ref="prev" pos:start="87:5" pos:end="87:34"/><name pos:start="87:76" pos:end="87:80">tempC</name></decl>, <decl pos:start="87:83" pos:end="87:87"><type ref="prev" pos:start="87:5" pos:end="87:34"/><name pos:start="87:83" pos:end="87:87">tempD</name></decl>;</decl_stmt>

    <decl_stmt pos:start="89:5" pos:end="89:10"><decl pos:start="89:5" pos:end="89:9"><type pos:start="89:5" pos:end="89:7"><name pos:start="89:5" pos:end="89:7">int</name></type> <name pos:start="89:9" pos:end="89:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="91:5" pos:end="91:60"><decl pos:start="91:5" pos:end="91:59"><type pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:12">unsigned</name> <name pos:start="91:14" pos:end="91:17">long</name></type> <name pos:start="91:19" pos:end="91:25">dst_odd</name> <init pos:start="91:27" pos:end="91:59">= <expr pos:start="91:29" pos:end="91:59"><operator pos:start="91:29" pos:end="91:29">(</operator><name pos:start="91:30" pos:end="91:37">unsigned</name> <name pos:start="91:39" pos:end="91:42">long</name><operator pos:start="91:43" pos:end="91:43">)</operator><name pos:start="91:44" pos:end="91:46">dst</name> <operator pos:start="91:48" pos:end="91:48">&amp;</operator> <literal type="number" pos:start="91:50" pos:end="91:59">0x0000000F</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="93:5" pos:end="93:67"><decl pos:start="93:5" pos:end="93:66"><type pos:start="93:5" pos:end="93:17"><name pos:start="93:5" pos:end="93:12">unsigned</name> <name pos:start="93:14" pos:end="93:17">long</name></type> <name pos:start="93:19" pos:end="93:32">src_really_odd</name> <init pos:start="93:34" pos:end="93:66">= <expr pos:start="93:36" pos:end="93:66"><operator pos:start="93:36" pos:end="93:36">(</operator><name pos:start="93:37" pos:end="93:44">unsigned</name> <name pos:start="93:46" pos:end="93:49">long</name><operator pos:start="93:50" pos:end="93:50">)</operator><name pos:start="93:51" pos:end="93:53">src</name> <operator pos:start="93:55" pos:end="93:55">&amp;</operator> <literal type="number" pos:start="93:57" pos:end="93:66">0x0000000F</literal></expr></init></decl>;</decl_stmt>





<expr_stmt pos:start="99:1" pos:end="99:58"><expr pos:start="99:1" pos:end="99:57"><call pos:start="99:1" pos:end="99:57"><name pos:start="99:1" pos:end="99:23">POWERPC_TBL_START_COUNT</name><argument_list pos:start="99:24" pos:end="99:57">(<argument pos:start="99:25" pos:end="99:40"><expr pos:start="99:25" pos:end="99:40"><name pos:start="99:25" pos:end="99:40">altivec_gmc1_num</name></expr></argument>, <argument pos:start="99:43" pos:end="99:56"><expr pos:start="99:43" pos:end="99:56"><name pos:start="99:43" pos:end="99:56">GMC1_PERF_COND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:45"><expr pos:start="103:5" pos:end="103:44"><name pos:start="103:5" pos:end="103:9">tempA</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <call pos:start="103:13" pos:end="103:44"><name pos:start="103:13" pos:end="103:18">vec_ld</name><argument_list pos:start="103:19" pos:end="103:44">(<argument pos:start="103:20" pos:end="103:20"><expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr></argument>, <argument pos:start="103:23" pos:end="103:43"><expr pos:start="103:23" pos:end="103:43"><operator pos:start="103:23" pos:end="103:23">(</operator><name pos:start="103:24" pos:end="103:31">unsigned</name> <name pos:start="103:33" pos:end="103:37">short</name><operator pos:start="103:38" pos:end="103:38">*</operator><operator pos:start="103:39" pos:end="103:39">)</operator><name pos:start="103:40" pos:end="103:43">ABCD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:29"><expr pos:start="105:5" pos:end="105:28"><name pos:start="105:5" pos:end="105:6">Av</name> <operator pos:start="105:8" pos:end="105:8">=</operator> <call pos:start="105:10" pos:end="105:28"><name pos:start="105:10" pos:end="105:18">vec_splat</name><argument_list pos:start="105:19" pos:end="105:28">(<argument pos:start="105:20" pos:end="105:24"><expr pos:start="105:20" pos:end="105:24"><name pos:start="105:20" pos:end="105:24">tempA</name></expr></argument>, <argument pos:start="105:27" pos:end="105:27"><expr pos:start="105:27" pos:end="105:27"><literal type="number" pos:start="105:27" pos:end="105:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:29"><expr pos:start="107:5" pos:end="107:28"><name pos:start="107:5" pos:end="107:6">Bv</name> <operator pos:start="107:8" pos:end="107:8">=</operator> <call pos:start="107:10" pos:end="107:28"><name pos:start="107:10" pos:end="107:18">vec_splat</name><argument_list pos:start="107:19" pos:end="107:28">(<argument pos:start="107:20" pos:end="107:24"><expr pos:start="107:20" pos:end="107:24"><name pos:start="107:20" pos:end="107:24">tempA</name></expr></argument>, <argument pos:start="107:27" pos:end="107:27"><expr pos:start="107:27" pos:end="107:27"><literal type="number" pos:start="107:27" pos:end="107:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:29"><expr pos:start="109:5" pos:end="109:28"><name pos:start="109:5" pos:end="109:6">Cv</name> <operator pos:start="109:8" pos:end="109:8">=</operator> <call pos:start="109:10" pos:end="109:28"><name pos:start="109:10" pos:end="109:18">vec_splat</name><argument_list pos:start="109:19" pos:end="109:28">(<argument pos:start="109:20" pos:end="109:24"><expr pos:start="109:20" pos:end="109:24"><name pos:start="109:20" pos:end="109:24">tempA</name></expr></argument>, <argument pos:start="109:27" pos:end="109:27"><expr pos:start="109:27" pos:end="109:27"><literal type="number" pos:start="109:27" pos:end="109:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:29"><expr pos:start="111:5" pos:end="111:28"><name pos:start="111:5" pos:end="111:6">Dv</name> <operator pos:start="111:8" pos:end="111:8">=</operator> <call pos:start="111:10" pos:end="111:28"><name pos:start="111:10" pos:end="111:18">vec_splat</name><argument_list pos:start="111:19" pos:end="111:28">(<argument pos:start="111:20" pos:end="111:24"><expr pos:start="111:20" pos:end="111:24"><name pos:start="111:20" pos:end="111:24">tempA</name></expr></argument>, <argument pos:start="111:27" pos:end="111:27"><expr pos:start="111:27" pos:end="111:27"><literal type="number" pos:start="111:27" pos:end="111:27">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:53"><expr pos:start="115:5" pos:end="115:52"><name pos:start="115:5" pos:end="115:12">rounderV</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <call pos:start="115:16" pos:end="115:52"><name pos:start="115:16" pos:end="115:21">vec_ld</name><argument_list pos:start="115:22" pos:end="115:52">(<argument pos:start="115:23" pos:end="115:23"><expr pos:start="115:23" pos:end="115:23"><literal type="number" pos:start="115:23" pos:end="115:23">0</literal></expr></argument>, <argument pos:start="115:26" pos:end="115:51"><expr pos:start="115:26" pos:end="115:51"><operator pos:start="115:26" pos:end="115:26">(</operator><name pos:start="115:27" pos:end="115:34">unsigned</name> <name pos:start="115:36" pos:end="115:40">short</name><operator pos:start="115:41" pos:end="115:41">*</operator><operator pos:start="115:42" pos:end="115:42">)</operator><name pos:start="115:43" pos:end="115:51">rounder_a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <comment type="line" pos:start="119:5" pos:end="119:51">// we'll be able to pick-up our 9 char elements</comment>

    <comment type="line" pos:start="121:5" pos:end="121:33">// at src from those 32 bytes</comment>

    <comment type="line" pos:start="123:5" pos:end="123:55">// we load the first batch here, as inside the loop</comment>

    <comment type="line" pos:start="125:5" pos:end="125:52">// we can re-use 'src+stride' from one iteration</comment>

    <comment type="line" pos:start="127:5" pos:end="127:32">// as the 'src' of the next.</comment>

    <expr_stmt pos:start="129:5" pos:end="129:27"><expr pos:start="129:5" pos:end="129:26"><name pos:start="129:5" pos:end="129:9">src_0</name> <operator pos:start="129:11" pos:end="129:11">=</operator> <call pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:18">vec_ld</name><argument_list pos:start="129:19" pos:end="129:26">(<argument pos:start="129:20" pos:end="129:20"><expr pos:start="129:20" pos:end="129:20"><literal type="number" pos:start="129:20" pos:end="129:20">0</literal></expr></argument>, <argument pos:start="129:23" pos:end="129:25"><expr pos:start="129:23" pos:end="129:25"><name pos:start="129:23" pos:end="129:25">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:28"><expr pos:start="131:5" pos:end="131:27"><name pos:start="131:5" pos:end="131:9">src_1</name> <operator pos:start="131:11" pos:end="131:11">=</operator> <call pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:18">vec_ld</name><argument_list pos:start="131:19" pos:end="131:27">(<argument pos:start="131:20" pos:end="131:21"><expr pos:start="131:20" pos:end="131:21"><literal type="number" pos:start="131:20" pos:end="131:21">16</literal></expr></argument>, <argument pos:start="131:24" pos:end="131:26"><expr pos:start="131:24" pos:end="131:26"><name pos:start="131:24" pos:end="131:26">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:53"><expr pos:start="133:5" pos:end="133:52"><name pos:start="133:5" pos:end="133:9">srcvA</name> <operator pos:start="133:11" pos:end="133:11">=</operator> <call pos:start="133:13" pos:end="133:52"><name pos:start="133:13" pos:end="133:20">vec_perm</name><argument_list pos:start="133:21" pos:end="133:52">(<argument pos:start="133:22" pos:end="133:26"><expr pos:start="133:22" pos:end="133:26"><name pos:start="133:22" pos:end="133:26">src_0</name></expr></argument>, <argument pos:start="133:29" pos:end="133:33"><expr pos:start="133:29" pos:end="133:33"><name pos:start="133:29" pos:end="133:33">src_1</name></expr></argument>, <argument pos:start="133:36" pos:end="133:51"><expr pos:start="133:36" pos:end="133:51"><call pos:start="133:36" pos:end="133:51"><name pos:start="133:36" pos:end="133:43">vec_lvsl</name><argument_list pos:start="133:44" pos:end="133:51">(<argument pos:start="133:45" pos:end="133:45"><expr pos:start="133:45" pos:end="133:45"><literal type="number" pos:start="133:45" pos:end="133:45">0</literal></expr></argument>, <argument pos:start="133:48" pos:end="133:50"><expr pos:start="133:48" pos:end="133:50"><name pos:start="133:48" pos:end="133:50">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <if_stmt pos:start="137:5" pos:end="151:5"><if pos:start="137:5" pos:end="143:5">if <condition pos:start="137:8" pos:end="137:37">(<expr pos:start="137:9" pos:end="137:36"><name pos:start="137:9" pos:end="137:22">src_really_odd</name> <operator pos:start="137:24" pos:end="137:25">!=</operator> <literal type="number" pos:start="137:27" pos:end="137:36">0x0000000F</literal></expr>)</condition>

    <block pos:start="139:5" pos:end="143:5">{<block_content pos:start="141:7" pos:end="141:55"> <comment type="line" pos:start="139:7" pos:end="139:84">// if src &amp; 0xF == 0xF, then (src+1) is properly aligned on the second vector.</comment>

      <expr_stmt pos:start="141:7" pos:end="141:55"><expr pos:start="141:7" pos:end="141:54"><name pos:start="141:7" pos:end="141:11">srcvB</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:54"><name pos:start="141:15" pos:end="141:22">vec_perm</name><argument_list pos:start="141:23" pos:end="141:54">(<argument pos:start="141:24" pos:end="141:28"><expr pos:start="141:24" pos:end="141:28"><name pos:start="141:24" pos:end="141:28">src_0</name></expr></argument>, <argument pos:start="141:31" pos:end="141:35"><expr pos:start="141:31" pos:end="141:35"><name pos:start="141:31" pos:end="141:35">src_1</name></expr></argument>, <argument pos:start="141:38" pos:end="141:53"><expr pos:start="141:38" pos:end="141:53"><call pos:start="141:38" pos:end="141:53"><name pos:start="141:38" pos:end="141:45">vec_lvsl</name><argument_list pos:start="141:46" pos:end="141:53">(<argument pos:start="141:47" pos:end="141:47"><expr pos:start="141:47" pos:end="141:47"><literal type="number" pos:start="141:47" pos:end="141:47">1</literal></expr></argument>, <argument pos:start="141:50" pos:end="141:52"><expr pos:start="141:50" pos:end="141:52"><name pos:start="141:50" pos:end="141:52">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="145:5" pos:end="151:5">else

    <block pos:start="147:5" pos:end="151:5">{<block_content pos:start="149:7" pos:end="149:20">

      <expr_stmt pos:start="149:7" pos:end="149:20"><expr pos:start="149:7" pos:end="149:19"><name pos:start="149:7" pos:end="149:11">srcvB</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <name pos:start="149:15" pos:end="149:19">src_1</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:38"><expr pos:start="153:5" pos:end="153:37"><name pos:start="153:5" pos:end="153:9">srcvA</name> <operator pos:start="153:11" pos:end="153:11">=</operator> <call pos:start="153:13" pos:end="153:37"><name pos:start="153:13" pos:end="153:22">vec_mergeh</name><argument_list pos:start="153:23" pos:end="153:37">(<argument pos:start="153:24" pos:end="153:29"><expr pos:start="153:24" pos:end="153:29"><name pos:start="153:24" pos:end="153:29">vczero</name></expr></argument>, <argument pos:start="153:32" pos:end="153:36"><expr pos:start="153:32" pos:end="153:36"><name pos:start="153:32" pos:end="153:36">srcvA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:38"><expr pos:start="155:5" pos:end="155:37"><name pos:start="155:5" pos:end="155:9">srcvB</name> <operator pos:start="155:11" pos:end="155:11">=</operator> <call pos:start="155:13" pos:end="155:37"><name pos:start="155:13" pos:end="155:22">vec_mergeh</name><argument_list pos:start="155:23" pos:end="155:37">(<argument pos:start="155:24" pos:end="155:29"><expr pos:start="155:24" pos:end="155:29"><name pos:start="155:24" pos:end="155:29">vczero</name></expr></argument>, <argument pos:start="155:32" pos:end="155:36"><expr pos:start="155:32" pos:end="155:36"><name pos:start="155:32" pos:end="155:36">srcvB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <for pos:start="159:5" pos:end="271:5">for<control pos:start="159:8" pos:end="159:22">(<init pos:start="159:9" pos:end="159:12"><expr pos:start="159:9" pos:end="159:11"><name pos:start="159:9" pos:end="159:9">i</name><operator pos:start="159:10" pos:end="159:10">=</operator><literal type="number" pos:start="159:11" pos:end="159:11">0</literal></expr>;</init> <condition pos:start="159:14" pos:end="159:17"><expr pos:start="159:14" pos:end="159:16"><name pos:start="159:14" pos:end="159:14">i</name><operator pos:start="159:15" pos:end="159:15">&lt;</operator><name pos:start="159:16" pos:end="159:16">h</name></expr>;</condition> <incr pos:start="159:19" pos:end="159:21"><expr pos:start="159:19" pos:end="159:21"><name pos:start="159:19" pos:end="159:19">i</name><operator pos:start="159:20" pos:end="159:21">++</operator></expr></incr>)</control>

    <block pos:start="161:5" pos:end="271:5">{<block_content pos:start="163:7" pos:end="269:20">

      <expr_stmt pos:start="163:7" pos:end="163:48"><expr pos:start="163:7" pos:end="163:47"><name pos:start="163:7" pos:end="163:13">dst_odd</name> <operator pos:start="163:15" pos:end="163:15">=</operator> <operator pos:start="163:17" pos:end="163:17">(</operator><name pos:start="163:18" pos:end="163:25">unsigned</name> <name pos:start="163:27" pos:end="163:30">long</name><operator pos:start="163:31" pos:end="163:31">)</operator><name pos:start="163:32" pos:end="163:34">dst</name> <operator pos:start="163:36" pos:end="163:36">&amp;</operator> <literal type="number" pos:start="163:38" pos:end="163:47">0x0000000F</literal></expr>;</expr_stmt>

      <expr_stmt pos:start="165:7" pos:end="165:68"><expr pos:start="165:7" pos:end="165:67"><name pos:start="165:7" pos:end="165:20">src_really_odd</name> <operator pos:start="165:22" pos:end="165:22">=</operator> <operator pos:start="165:24" pos:end="165:24">(</operator><operator pos:start="165:25" pos:end="165:25">(</operator><operator pos:start="165:26" pos:end="165:26">(</operator><name pos:start="165:27" pos:end="165:34">unsigned</name> <name pos:start="165:36" pos:end="165:39">long</name><operator pos:start="165:40" pos:end="165:40">)</operator><name pos:start="165:41" pos:end="165:43">src</name><operator pos:start="165:44" pos:end="165:44">)</operator> <operator pos:start="165:46" pos:end="165:46">+</operator> <name pos:start="165:48" pos:end="165:53">stride</name><operator pos:start="165:54" pos:end="165:54">)</operator> <operator pos:start="165:56" pos:end="165:56">&amp;</operator> <literal type="number" pos:start="165:58" pos:end="165:67">0x0000000F</literal></expr>;</expr_stmt>

      

      <expr_stmt pos:start="169:7" pos:end="169:28"><expr pos:start="169:7" pos:end="169:27"><name pos:start="169:7" pos:end="169:10">dstv</name> <operator pos:start="169:12" pos:end="169:12">=</operator> <call pos:start="169:14" pos:end="169:27"><name pos:start="169:14" pos:end="169:19">vec_ld</name><argument_list pos:start="169:20" pos:end="169:27">(<argument pos:start="169:21" pos:end="169:21"><expr pos:start="169:21" pos:end="169:21"><literal type="number" pos:start="169:21" pos:end="169:21">0</literal></expr></argument>, <argument pos:start="169:24" pos:end="169:26"><expr pos:start="169:24" pos:end="169:26"><name pos:start="169:24" pos:end="169:26">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      

      <comment type="line" pos:start="173:7" pos:end="173:56">// we we'll be able to pick-up our 9 char elements</comment>

      <comment type="line" pos:start="175:7" pos:end="175:44">// at src + stride from those 32 bytes</comment>

      <comment type="line" pos:start="177:7" pos:end="177:59">// then reuse the resulting 2 vectors srvcC and srcvD</comment>

      <comment type="line" pos:start="179:7" pos:end="179:36">// as the next srcvA and srcvB</comment>

      <expr_stmt pos:start="181:7" pos:end="181:38"><expr pos:start="181:7" pos:end="181:37"><name pos:start="181:7" pos:end="181:11">src_0</name> <operator pos:start="181:13" pos:end="181:13">=</operator> <call pos:start="181:15" pos:end="181:37"><name pos:start="181:15" pos:end="181:20">vec_ld</name><argument_list pos:start="181:21" pos:end="181:37">(<argument pos:start="181:22" pos:end="181:31"><expr pos:start="181:22" pos:end="181:31"><name pos:start="181:22" pos:end="181:27">stride</name> <operator pos:start="181:29" pos:end="181:29">+</operator> <literal type="number" pos:start="181:31" pos:end="181:31">0</literal></expr></argument>, <argument pos:start="181:34" pos:end="181:36"><expr pos:start="181:34" pos:end="181:36"><name pos:start="181:34" pos:end="181:36">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="183:7" pos:end="183:39"><expr pos:start="183:7" pos:end="183:38"><name pos:start="183:7" pos:end="183:11">src_1</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <call pos:start="183:15" pos:end="183:38"><name pos:start="183:15" pos:end="183:20">vec_ld</name><argument_list pos:start="183:21" pos:end="183:38">(<argument pos:start="183:22" pos:end="183:32"><expr pos:start="183:22" pos:end="183:32"><name pos:start="183:22" pos:end="183:27">stride</name> <operator pos:start="183:29" pos:end="183:29">+</operator> <literal type="number" pos:start="183:31" pos:end="183:32">16</literal></expr></argument>, <argument pos:start="183:35" pos:end="183:37"><expr pos:start="183:35" pos:end="183:37"><name pos:start="183:35" pos:end="183:37">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="185:7" pos:end="185:64"><expr pos:start="185:7" pos:end="185:63"><name pos:start="185:7" pos:end="185:11">srcvC</name> <operator pos:start="185:13" pos:end="185:13">=</operator> <call pos:start="185:15" pos:end="185:63"><name pos:start="185:15" pos:end="185:22">vec_perm</name><argument_list pos:start="185:23" pos:end="185:63">(<argument pos:start="185:24" pos:end="185:28"><expr pos:start="185:24" pos:end="185:28"><name pos:start="185:24" pos:end="185:28">src_0</name></expr></argument>, <argument pos:start="185:31" pos:end="185:35"><expr pos:start="185:31" pos:end="185:35"><name pos:start="185:31" pos:end="185:35">src_1</name></expr></argument>, <argument pos:start="185:38" pos:end="185:62"><expr pos:start="185:38" pos:end="185:62"><call pos:start="185:38" pos:end="185:62"><name pos:start="185:38" pos:end="185:45">vec_lvsl</name><argument_list pos:start="185:46" pos:end="185:62">(<argument pos:start="185:47" pos:end="185:56"><expr pos:start="185:47" pos:end="185:56"><name pos:start="185:47" pos:end="185:52">stride</name> <operator pos:start="185:54" pos:end="185:54">+</operator> <literal type="number" pos:start="185:56" pos:end="185:56">0</literal></expr></argument>, <argument pos:start="185:59" pos:end="185:61"><expr pos:start="185:59" pos:end="185:61"><name pos:start="185:59" pos:end="185:61">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      

      <if_stmt pos:start="189:7" pos:end="203:7"><if pos:start="189:7" pos:end="195:7">if <condition pos:start="189:10" pos:end="189:39">(<expr pos:start="189:11" pos:end="189:38"><name pos:start="189:11" pos:end="189:24">src_really_odd</name> <operator pos:start="189:26" pos:end="189:27">!=</operator> <literal type="number" pos:start="189:29" pos:end="189:38">0x0000000F</literal></expr>)</condition>

      <block pos:start="191:7" pos:end="195:7">{<block_content pos:start="193:9" pos:end="193:66"> <comment type="line" pos:start="191:9" pos:end="191:86">// if src &amp; 0xF == 0xF, then (src+1) is properly aligned on the second vector.</comment>

        <expr_stmt pos:start="193:9" pos:end="193:66"><expr pos:start="193:9" pos:end="193:65"><name pos:start="193:9" pos:end="193:13">srcvD</name> <operator pos:start="193:15" pos:end="193:15">=</operator> <call pos:start="193:17" pos:end="193:65"><name pos:start="193:17" pos:end="193:24">vec_perm</name><argument_list pos:start="193:25" pos:end="193:65">(<argument pos:start="193:26" pos:end="193:30"><expr pos:start="193:26" pos:end="193:30"><name pos:start="193:26" pos:end="193:30">src_0</name></expr></argument>, <argument pos:start="193:33" pos:end="193:37"><expr pos:start="193:33" pos:end="193:37"><name pos:start="193:33" pos:end="193:37">src_1</name></expr></argument>, <argument pos:start="193:40" pos:end="193:64"><expr pos:start="193:40" pos:end="193:64"><call pos:start="193:40" pos:end="193:64"><name pos:start="193:40" pos:end="193:47">vec_lvsl</name><argument_list pos:start="193:48" pos:end="193:64">(<argument pos:start="193:49" pos:end="193:58"><expr pos:start="193:49" pos:end="193:58"><name pos:start="193:49" pos:end="193:54">stride</name> <operator pos:start="193:56" pos:end="193:56">+</operator> <literal type="number" pos:start="193:58" pos:end="193:58">1</literal></expr></argument>, <argument pos:start="193:61" pos:end="193:63"><expr pos:start="193:61" pos:end="193:63"><name pos:start="193:61" pos:end="193:63">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if>

      <else pos:start="197:7" pos:end="203:7">else

      <block pos:start="199:7" pos:end="203:7">{<block_content pos:start="201:9" pos:end="201:22">

        <expr_stmt pos:start="201:9" pos:end="201:22"><expr pos:start="201:9" pos:end="201:21"><name pos:start="201:9" pos:end="201:13">srcvD</name> <operator pos:start="201:15" pos:end="201:15">=</operator> <name pos:start="201:17" pos:end="201:21">src_1</name></expr>;</expr_stmt>

      </block_content>}</block></else></if_stmt>

      

      <expr_stmt pos:start="207:7" pos:end="207:40"><expr pos:start="207:7" pos:end="207:39"><name pos:start="207:7" pos:end="207:11">srcvC</name> <operator pos:start="207:13" pos:end="207:13">=</operator> <call pos:start="207:15" pos:end="207:39"><name pos:start="207:15" pos:end="207:24">vec_mergeh</name><argument_list pos:start="207:25" pos:end="207:39">(<argument pos:start="207:26" pos:end="207:31"><expr pos:start="207:26" pos:end="207:31"><name pos:start="207:26" pos:end="207:31">vczero</name></expr></argument>, <argument pos:start="207:34" pos:end="207:38"><expr pos:start="207:34" pos:end="207:38"><name pos:start="207:34" pos:end="207:38">srcvC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="209:7" pos:end="209:40"><expr pos:start="209:7" pos:end="209:39"><name pos:start="209:7" pos:end="209:11">srcvD</name> <operator pos:start="209:13" pos:end="209:13">=</operator> <call pos:start="209:15" pos:end="209:39"><name pos:start="209:15" pos:end="209:24">vec_mergeh</name><argument_list pos:start="209:25" pos:end="209:39">(<argument pos:start="209:26" pos:end="209:31"><expr pos:start="209:26" pos:end="209:31"><name pos:start="209:26" pos:end="209:31">vczero</name></expr></argument>, <argument pos:start="209:34" pos:end="209:38"><expr pos:start="209:34" pos:end="209:38"><name pos:start="209:34" pos:end="209:38">srcvD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      



      <comment type="line" pos:start="215:7" pos:end="215:45">// OK, now we (finally) do the math :-)</comment>

      <comment type="line" pos:start="217:7" pos:end="217:68">// those four instructions replaces 32 int muls &amp; 32 int adds.</comment>

      <comment type="line" pos:start="219:7" pos:end="219:29">// isn't AltiVec nice ?</comment>

      <expr_stmt pos:start="221:7" pos:end="221:68"><expr pos:start="221:7" pos:end="221:67"><name pos:start="221:7" pos:end="221:11">tempA</name> <operator pos:start="221:13" pos:end="221:13">=</operator> <call pos:start="221:15" pos:end="221:67"><name pos:start="221:15" pos:end="221:23">vec_mladd</name><argument_list pos:start="221:24" pos:end="221:67">(<argument pos:start="221:25" pos:end="221:52"><expr pos:start="221:25" pos:end="221:52"><operator pos:start="221:25" pos:end="221:25">(</operator><name pos:start="221:26" pos:end="221:31">vector</name> <name pos:start="221:33" pos:end="221:40">unsigned</name> <name pos:start="221:42" pos:end="221:46">short</name><operator pos:start="221:47" pos:end="221:47">)</operator><name pos:start="221:48" pos:end="221:52">srcvA</name></expr></argument>, <argument pos:start="221:55" pos:end="221:56"><expr pos:start="221:55" pos:end="221:56"><name pos:start="221:55" pos:end="221:56">Av</name></expr></argument>, <argument pos:start="221:59" pos:end="221:66"><expr pos:start="221:59" pos:end="221:66"><name pos:start="221:59" pos:end="221:66">rounderV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="223:7" pos:end="223:65"><expr pos:start="223:7" pos:end="223:64"><name pos:start="223:7" pos:end="223:11">tempB</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <call pos:start="223:15" pos:end="223:64"><name pos:start="223:15" pos:end="223:23">vec_mladd</name><argument_list pos:start="223:24" pos:end="223:64">(<argument pos:start="223:25" pos:end="223:52"><expr pos:start="223:25" pos:end="223:52"><operator pos:start="223:25" pos:end="223:25">(</operator><name pos:start="223:26" pos:end="223:31">vector</name> <name pos:start="223:33" pos:end="223:40">unsigned</name> <name pos:start="223:42" pos:end="223:46">short</name><operator pos:start="223:47" pos:end="223:47">)</operator><name pos:start="223:48" pos:end="223:52">srcvB</name></expr></argument>, <argument pos:start="223:55" pos:end="223:56"><expr pos:start="223:55" pos:end="223:56"><name pos:start="223:55" pos:end="223:56">Bv</name></expr></argument>, <argument pos:start="223:59" pos:end="223:63"><expr pos:start="223:59" pos:end="223:63"><name pos:start="223:59" pos:end="223:63">tempA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="225:7" pos:end="225:65"><expr pos:start="225:7" pos:end="225:64"><name pos:start="225:7" pos:end="225:11">tempC</name> <operator pos:start="225:13" pos:end="225:13">=</operator> <call pos:start="225:15" pos:end="225:64"><name pos:start="225:15" pos:end="225:23">vec_mladd</name><argument_list pos:start="225:24" pos:end="225:64">(<argument pos:start="225:25" pos:end="225:52"><expr pos:start="225:25" pos:end="225:52"><operator pos:start="225:25" pos:end="225:25">(</operator><name pos:start="225:26" pos:end="225:31">vector</name> <name pos:start="225:33" pos:end="225:40">unsigned</name> <name pos:start="225:42" pos:end="225:46">short</name><operator pos:start="225:47" pos:end="225:47">)</operator><name pos:start="225:48" pos:end="225:52">srcvC</name></expr></argument>, <argument pos:start="225:55" pos:end="225:56"><expr pos:start="225:55" pos:end="225:56"><name pos:start="225:55" pos:end="225:56">Cv</name></expr></argument>, <argument pos:start="225:59" pos:end="225:63"><expr pos:start="225:59" pos:end="225:63"><name pos:start="225:59" pos:end="225:63">tempB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="227:7" pos:end="227:65"><expr pos:start="227:7" pos:end="227:64"><name pos:start="227:7" pos:end="227:11">tempD</name> <operator pos:start="227:13" pos:end="227:13">=</operator> <call pos:start="227:15" pos:end="227:64"><name pos:start="227:15" pos:end="227:23">vec_mladd</name><argument_list pos:start="227:24" pos:end="227:64">(<argument pos:start="227:25" pos:end="227:52"><expr pos:start="227:25" pos:end="227:52"><operator pos:start="227:25" pos:end="227:25">(</operator><name pos:start="227:26" pos:end="227:31">vector</name> <name pos:start="227:33" pos:end="227:40">unsigned</name> <name pos:start="227:42" pos:end="227:46">short</name><operator pos:start="227:47" pos:end="227:47">)</operator><name pos:start="227:48" pos:end="227:52">srcvD</name></expr></argument>, <argument pos:start="227:55" pos:end="227:56"><expr pos:start="227:55" pos:end="227:56"><name pos:start="227:55" pos:end="227:56">Dv</name></expr></argument>, <argument pos:start="227:59" pos:end="227:63"><expr pos:start="227:59" pos:end="227:63"><name pos:start="227:59" pos:end="227:63">tempC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      

      <expr_stmt pos:start="231:7" pos:end="231:20"><expr pos:start="231:7" pos:end="231:19"><name pos:start="231:7" pos:end="231:11">srcvA</name> <operator pos:start="231:13" pos:end="231:13">=</operator> <name pos:start="231:15" pos:end="231:19">srcvC</name></expr>;</expr_stmt>

      <expr_stmt pos:start="233:7" pos:end="233:20"><expr pos:start="233:7" pos:end="233:19"><name pos:start="233:7" pos:end="233:11">srcvB</name> <operator pos:start="233:13" pos:end="233:13">=</operator> <name pos:start="233:15" pos:end="233:19">srcvD</name></expr>;</expr_stmt>

      

      <expr_stmt pos:start="237:7" pos:end="237:35"><expr pos:start="237:7" pos:end="237:34"><name pos:start="237:7" pos:end="237:11">tempD</name> <operator pos:start="237:13" pos:end="237:13">=</operator> <call pos:start="237:15" pos:end="237:34"><name pos:start="237:15" pos:end="237:20">vec_sr</name><argument_list pos:start="237:21" pos:end="237:34">(<argument pos:start="237:22" pos:end="237:26"><expr pos:start="237:22" pos:end="237:26"><name pos:start="237:22" pos:end="237:26">tempD</name></expr></argument>, <argument pos:start="237:29" pos:end="237:33"><expr pos:start="237:29" pos:end="237:33"><name pos:start="237:29" pos:end="237:33">vcsr8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      

      <expr_stmt pos:start="241:7" pos:end="241:61"><expr pos:start="241:7" pos:end="241:60"><name pos:start="241:7" pos:end="241:11">dstv2</name> <operator pos:start="241:13" pos:end="241:13">=</operator> <call pos:start="241:15" pos:end="241:60"><name pos:start="241:15" pos:end="241:22">vec_pack</name><argument_list pos:start="241:23" pos:end="241:60">(<argument pos:start="241:24" pos:end="241:28"><expr pos:start="241:24" pos:end="241:28"><name pos:start="241:24" pos:end="241:28">tempD</name></expr></argument>, <argument pos:start="241:31" pos:end="241:59"><expr pos:start="241:31" pos:end="241:59"><operator pos:start="241:31" pos:end="241:31">(</operator><name pos:start="241:32" pos:end="241:37">vector</name> <name pos:start="241:39" pos:end="241:46">unsigned</name> <name pos:start="241:48" pos:end="241:52">short</name><operator pos:start="241:53" pos:end="241:53">)</operator><name pos:start="241:54" pos:end="241:59">vczero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      

      <if_stmt pos:start="245:7" pos:end="259:7"><if pos:start="245:7" pos:end="251:7">if <condition pos:start="245:10" pos:end="245:18">(<expr pos:start="245:11" pos:end="245:17"><name pos:start="245:11" pos:end="245:17">dst_odd</name></expr>)</condition>

      <block pos:start="247:7" pos:end="251:7">{<block_content pos:start="249:9" pos:end="249:56">

        <expr_stmt pos:start="249:9" pos:end="249:56"><expr pos:start="249:9" pos:end="249:55"><name pos:start="249:9" pos:end="249:13">dstv2</name> <operator pos:start="249:15" pos:end="249:15">=</operator> <call pos:start="249:17" pos:end="249:55"><name pos:start="249:17" pos:end="249:24">vec_perm</name><argument_list pos:start="249:25" pos:end="249:55">(<argument pos:start="249:26" pos:end="249:29"><expr pos:start="249:26" pos:end="249:29"><name pos:start="249:26" pos:end="249:29">dstv</name></expr></argument>, <argument pos:start="249:32" pos:end="249:36"><expr pos:start="249:32" pos:end="249:36"><name pos:start="249:32" pos:end="249:36">dstv2</name></expr></argument>, <argument pos:start="249:39" pos:end="249:54"><expr pos:start="249:39" pos:end="249:54"><call pos:start="249:39" pos:end="249:54"><name pos:start="249:39" pos:end="249:43">vcprm</name><argument_list pos:start="249:44" pos:end="249:54">(<argument pos:start="249:45" pos:end="249:45"><expr pos:start="249:45" pos:end="249:45"><literal type="number" pos:start="249:45" pos:end="249:45">0</literal></expr></argument>,<argument pos:start="249:47" pos:end="249:47"><expr pos:start="249:47" pos:end="249:47"><literal type="number" pos:start="249:47" pos:end="249:47">1</literal></expr></argument>,<argument pos:start="249:49" pos:end="249:50"><expr pos:start="249:49" pos:end="249:50"><name pos:start="249:49" pos:end="249:50">s0</name></expr></argument>,<argument pos:start="249:52" pos:end="249:53"><expr pos:start="249:52" pos:end="249:53"><name pos:start="249:52" pos:end="249:53">s1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if>

      <else pos:start="253:7" pos:end="259:7">else

      <block pos:start="255:7" pos:end="259:7">{<block_content pos:start="257:9" pos:end="257:56">

        <expr_stmt pos:start="257:9" pos:end="257:56"><expr pos:start="257:9" pos:end="257:55"><name pos:start="257:9" pos:end="257:13">dstv2</name> <operator pos:start="257:15" pos:end="257:15">=</operator> <call pos:start="257:17" pos:end="257:55"><name pos:start="257:17" pos:end="257:24">vec_perm</name><argument_list pos:start="257:25" pos:end="257:55">(<argument pos:start="257:26" pos:end="257:29"><expr pos:start="257:26" pos:end="257:29"><name pos:start="257:26" pos:end="257:29">dstv</name></expr></argument>, <argument pos:start="257:32" pos:end="257:36"><expr pos:start="257:32" pos:end="257:36"><name pos:start="257:32" pos:end="257:36">dstv2</name></expr></argument>, <argument pos:start="257:39" pos:end="257:54"><expr pos:start="257:39" pos:end="257:54"><call pos:start="257:39" pos:end="257:54"><name pos:start="257:39" pos:end="257:43">vcprm</name><argument_list pos:start="257:44" pos:end="257:54">(<argument pos:start="257:45" pos:end="257:46"><expr pos:start="257:45" pos:end="257:46"><name pos:start="257:45" pos:end="257:46">s0</name></expr></argument>,<argument pos:start="257:48" pos:end="257:49"><expr pos:start="257:48" pos:end="257:49"><name pos:start="257:48" pos:end="257:49">s1</name></expr></argument>,<argument pos:start="257:51" pos:end="257:51"><expr pos:start="257:51" pos:end="257:51"><literal type="number" pos:start="257:51" pos:end="257:51">2</literal></expr></argument>,<argument pos:start="257:53" pos:end="257:53"><expr pos:start="257:53" pos:end="257:53"><literal type="number" pos:start="257:53" pos:end="257:53">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></else></if_stmt>

      

      <expr_stmt pos:start="263:7" pos:end="263:28"><expr pos:start="263:7" pos:end="263:27"><call pos:start="263:7" pos:end="263:27"><name pos:start="263:7" pos:end="263:12">vec_st</name><argument_list pos:start="263:13" pos:end="263:27">(<argument pos:start="263:14" pos:end="263:18"><expr pos:start="263:14" pos:end="263:18"><name pos:start="263:14" pos:end="263:18">dstv2</name></expr></argument>, <argument pos:start="263:21" pos:end="263:21"><expr pos:start="263:21" pos:end="263:21"><literal type="number" pos:start="263:21" pos:end="263:21">0</literal></expr></argument>, <argument pos:start="263:24" pos:end="263:26"><expr pos:start="263:24" pos:end="263:26"><name pos:start="263:24" pos:end="263:26">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      

      <expr_stmt pos:start="267:7" pos:end="267:20"><expr pos:start="267:7" pos:end="267:19"><name pos:start="267:7" pos:end="267:9">dst</name> <operator pos:start="267:11" pos:end="267:12">+=</operator> <name pos:start="267:14" pos:end="267:19">stride</name></expr>;</expr_stmt>

      <expr_stmt pos:start="269:7" pos:end="269:20"><expr pos:start="269:7" pos:end="269:19"><name pos:start="269:7" pos:end="269:9">src</name> <operator pos:start="269:11" pos:end="269:12">+=</operator> <name pos:start="269:14" pos:end="269:19">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>



<expr_stmt pos:start="275:1" pos:end="280:0"><expr pos:start="275:1" pos:end="275:56"><call pos:start="275:1" pos:end="275:56"><name pos:start="275:1" pos:end="275:22">POWERPC_TBL_STOP_COUNT</name><argument_list pos:start="275:23" pos:end="275:56">(<argument pos:start="275:24" pos:end="275:39"><expr pos:start="275:24" pos:end="275:39"><name pos:start="275:24" pos:end="275:39">altivec_gmc1_num</name></expr></argument>, <argument pos:start="275:42" pos:end="275:55"><expr pos:start="275:42" pos:end="275:55"><name pos:start="275:42" pos:end="275:55">GMC1_PERF_COND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:endif pos:start="279:1" pos:end="279:6">#<cpp:directive pos:start="279:2" pos:end="279:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="279:8" pos:end="279:41">/* ALTIVEC_USE_REFERENCE_C_CODE */</comment>

</block_content>}</block></function>
</unit>
