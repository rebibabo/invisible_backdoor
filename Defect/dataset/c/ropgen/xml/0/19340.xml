<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19340.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">v9fs_receive_status</name><parameter_list pos:start="1:31" pos:end="3:64">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:40">V9fsProxy</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">proxy</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:50"><decl pos:start="3:32" pos:end="3:50"><type pos:start="3:32" pos:end="3:50"><name pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:37">struct</name> <name pos:start="3:39" pos:end="3:43">iovec</name></name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:50">reply</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:63"><decl pos:start="3:53" pos:end="3:63"><type pos:start="3:53" pos:end="3:63"><name pos:start="3:53" pos:end="3:55">int</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:63">status</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:13">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">retval</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:15">ProxyHeader</name></type> <name pos:start="9:17" pos:end="9:22">header</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:16"><expr pos:start="13:5" pos:end="13:15"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:11">status</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:9">reply</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:18">iov_len</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:71"><expr pos:start="17:5" pos:end="17:70"><name pos:start="17:5" pos:end="17:10">retval</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:70"><name pos:start="17:14" pos:end="17:24">socket_read</name><argument_list pos:start="17:25" pos:end="17:70">(<argument pos:start="17:26" pos:end="17:38"><expr pos:start="17:26" pos:end="17:38"><name pos:start="17:26" pos:end="17:38"><name pos:start="17:26" pos:end="17:30">proxy</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:38">sockfd</name></name></expr></argument>, <argument pos:start="17:41" pos:end="17:55"><expr pos:start="17:41" pos:end="17:55"><name pos:start="17:41" pos:end="17:55"><name pos:start="17:41" pos:end="17:45">reply</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:55">iov_base</name></name></expr></argument>, <argument pos:start="17:58" pos:end="17:69"><expr pos:start="17:58" pos:end="17:69"><name pos:start="17:58" pos:end="17:69">PROXY_HDR_SZ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:14">retval</name> <operator pos:start="19:16" pos:end="19:16">&lt;</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>)</condition> <block pos:start="19:21" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:22">

        <return pos:start="21:9" pos:end="21:22">return <expr pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:21">retval</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:9">reply</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:18">iov_len</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:33">PROXY_HDR_SZ</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:64"><expr pos:start="27:5" pos:end="27:63"><call pos:start="27:5" pos:end="27:63"><name pos:start="27:5" pos:end="27:19">proxy_unmarshal</name><argument_list pos:start="27:20" pos:end="27:63">(<argument pos:start="27:21" pos:end="27:25"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:25">reply</name></expr></argument>, <argument pos:start="27:28" pos:end="27:28"><expr pos:start="27:28" pos:end="27:28"><literal type="number" pos:start="27:28" pos:end="27:28">0</literal></expr></argument>, <argument pos:start="27:31" pos:end="27:34"><expr pos:start="27:31" pos:end="27:34"><literal type="string" pos:start="27:31" pos:end="27:34">"dd"</literal></expr></argument>, <argument pos:start="27:37" pos:end="27:48"><expr pos:start="27:37" pos:end="27:48"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:48"><name pos:start="27:38" pos:end="27:43">header</name><operator pos:start="27:44" pos:end="27:44">.</operator><name pos:start="27:45" pos:end="27:48">type</name></name></expr></argument>, <argument pos:start="27:51" pos:end="27:62"><expr pos:start="27:51" pos:end="27:62"><operator pos:start="27:51" pos:end="27:51">&amp;</operator><name pos:start="27:52" pos:end="27:62"><name pos:start="27:52" pos:end="27:57">header</name><operator pos:start="27:58" pos:end="27:58">.</operator><name pos:start="27:59" pos:end="27:62">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:35">(<expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:14">header</name><operator pos:start="29:15" pos:end="29:15">.</operator><name pos:start="29:16" pos:end="29:19">size</name></name> <operator pos:start="29:21" pos:end="29:22">!=</operator> <sizeof pos:start="29:24" pos:end="29:34">sizeof<argument_list pos:start="29:30" pos:end="29:34">(<argument pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">int</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="29:37" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:17">

        <expr_stmt pos:start="31:9" pos:end="31:27"><expr pos:start="31:9" pos:end="31:26"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:15">status</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <operator pos:start="31:19" pos:end="31:19">-</operator><name pos:start="31:20" pos:end="31:26">ENOBUFS</name></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="39:70"><expr pos:start="37:5" pos:end="39:69"><name pos:start="37:5" pos:end="37:10">retval</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="39:69"><name pos:start="37:14" pos:end="37:24">socket_read</name><argument_list pos:start="37:25" pos:end="39:69">(<argument pos:start="37:26" pos:end="37:38"><expr pos:start="37:26" pos:end="37:38"><name pos:start="37:26" pos:end="37:38"><name pos:start="37:26" pos:end="37:30">proxy</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:38">sockfd</name></name></expr></argument>,

                         <argument pos:start="39:26" pos:end="39:55"><expr pos:start="39:26" pos:end="39:55"><name pos:start="39:26" pos:end="39:40"><name pos:start="39:26" pos:end="39:30">reply</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:40">iov_base</name></name> <operator pos:start="39:42" pos:end="39:42">+</operator> <name pos:start="39:44" pos:end="39:55">PROXY_HDR_SZ</name></expr></argument>, <argument pos:start="39:58" pos:end="39:68"><expr pos:start="39:58" pos:end="39:68"><name pos:start="39:58" pos:end="39:68"><name pos:start="39:58" pos:end="39:63">header</name><operator pos:start="39:64" pos:end="39:64">.</operator><name pos:start="39:65" pos:end="39:68">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:19">(<expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:14">retval</name> <operator pos:start="41:16" pos:end="41:16">&lt;</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>)</condition> <block pos:start="41:21" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:22">

        <return pos:start="43:9" pos:end="43:22">return <expr pos:start="43:16" pos:end="43:21"><name pos:start="43:16" pos:end="43:21">retval</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:9">reply</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:18">iov_len</name></name> <operator pos:start="47:20" pos:end="47:21">+=</operator> <name pos:start="47:23" pos:end="47:33"><name pos:start="47:23" pos:end="47:28">header</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:33">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:54"><expr pos:start="49:5" pos:end="49:53"><call pos:start="49:5" pos:end="49:53"><name pos:start="49:5" pos:end="49:19">proxy_unmarshal</name><argument_list pos:start="49:20" pos:end="49:53">(<argument pos:start="49:21" pos:end="49:25"><expr pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:25">reply</name></expr></argument>, <argument pos:start="49:28" pos:end="49:39"><expr pos:start="49:28" pos:end="49:39"><name pos:start="49:28" pos:end="49:39">PROXY_HDR_SZ</name></expr></argument>, <argument pos:start="49:42" pos:end="49:44"><expr pos:start="49:42" pos:end="49:44"><literal type="string" pos:start="49:42" pos:end="49:44">"d"</literal></expr></argument>, <argument pos:start="49:47" pos:end="49:52"><expr pos:start="49:47" pos:end="49:52"><name pos:start="49:47" pos:end="49:52">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
