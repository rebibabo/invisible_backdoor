<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25617.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">ppc_hash64_pte_prot</name><parameter_list pos:start="1:31" pos:end="3:68">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:42">CPUPPCState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">env</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:45"><decl pos:start="3:32" pos:end="3:45"><type pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:40">ppc_slb_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">slb</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:67"><decl pos:start="3:48" pos:end="3:67"><type pos:start="3:48" pos:end="3:67"><name pos:start="3:48" pos:end="3:63">ppc_hash_pte64_t</name></type> <name pos:start="3:65" pos:end="3:67">pte</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:16">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:15">pp</name></decl>, <decl pos:start="7:18" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:18" pos:end="7:20">key</name></decl>;</decl_stmt>

    <comment type="block" pos:start="9:5" pos:end="11:37">/* Some pp bit combinations have undefined behaviour, so default

     * to no access in those cases */</comment>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">prot</name> <init pos:start="13:14" pos:end="13:16">= <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:42"><expr pos:start="17:5" pos:end="19:41"><name pos:start="17:5" pos:end="17:7">key</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <operator pos:start="17:11" pos:end="17:11">!</operator><operator pos:start="17:12" pos:end="17:12">!</operator><operator pos:start="17:13" pos:end="17:13">(</operator><ternary pos:start="17:14" pos:end="19:40"><condition pos:start="17:14" pos:end="17:21"><expr pos:start="17:14" pos:end="17:19"><name pos:start="17:14" pos:end="17:19">msr_pr</name></expr> ?</condition><then pos:start="17:23" pos:end="17:47"> <expr pos:start="17:23" pos:end="17:47"><operator pos:start="17:23" pos:end="17:23">(</operator><name pos:start="17:24" pos:end="17:32"><name pos:start="17:24" pos:end="17:26">slb</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:32">vsid</name></name> <operator pos:start="17:34" pos:end="17:34">&amp;</operator> <name pos:start="17:36" pos:end="17:46">SLB_VSID_KP</name><operator pos:start="17:47" pos:end="17:47">)</operator></expr>

             </then><else pos:start="19:14" pos:end="19:40">: <expr pos:start="19:16" pos:end="19:40"><operator pos:start="19:16" pos:end="19:16">(</operator><name pos:start="19:17" pos:end="19:25"><name pos:start="19:17" pos:end="19:19">slb</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:25">vsid</name></name> <operator pos:start="19:27" pos:end="19:27">&amp;</operator> <name pos:start="19:29" pos:end="19:39">SLB_VSID_KS</name><operator pos:start="19:40" pos:end="19:40">)</operator></expr></else></ternary><operator pos:start="19:41" pos:end="19:41">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:70"><expr pos:start="21:5" pos:end="21:69"><name pos:start="21:5" pos:end="21:6">pp</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:18"><name pos:start="21:11" pos:end="21:13">pte</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:18">pte1</name></name> <operator pos:start="21:20" pos:end="21:20">&amp;</operator> <name pos:start="21:22" pos:end="21:32">HPTE64_R_PP</name><operator pos:start="21:33" pos:end="21:33">)</operator> <operator pos:start="21:35" pos:end="21:35">|</operator> <operator pos:start="21:37" pos:end="21:37">(</operator><operator pos:start="21:38" pos:end="21:38">(</operator><name pos:start="21:39" pos:end="21:46"><name pos:start="21:39" pos:end="21:41">pte</name><operator pos:start="21:42" pos:end="21:42">.</operator><name pos:start="21:43" pos:end="21:46">pte1</name></name> <operator pos:start="21:48" pos:end="21:48">&amp;</operator> <name pos:start="21:50" pos:end="21:61">HPTE64_R_PP0</name><operator pos:start="21:62" pos:end="21:62">)</operator> <operator pos:start="21:64" pos:end="21:65">&gt;&gt;</operator> <literal type="number" pos:start="21:67" pos:end="21:68">61</literal><operator pos:start="21:69" pos:end="21:69">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="83:5"><if pos:start="25:5" pos:end="51:5">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:11">key</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>)</condition> <block pos:start="25:19" pos:end="51:5">{<block_content pos:start="27:9" pos:end="49:9">

        <switch pos:start="27:9" pos:end="49:9">switch <condition pos:start="27:16" pos:end="27:19">(<expr pos:start="27:17" pos:end="27:18"><name pos:start="27:17" pos:end="27:18">pp</name></expr>)</condition> <block pos:start="27:21" pos:end="49:9">{<block_content pos:start="29:9" pos:end="47:18">

        <case pos:start="29:9" pos:end="29:17">case <expr pos:start="29:14" pos:end="29:16"><literal type="number" pos:start="29:14" pos:end="29:16">0x0</literal></expr>:</case>

        <case pos:start="31:9" pos:end="31:17">case <expr pos:start="31:14" pos:end="31:16"><literal type="number" pos:start="31:14" pos:end="31:16">0x1</literal></expr>:</case>

        <case pos:start="33:9" pos:end="33:17">case <expr pos:start="33:14" pos:end="33:16"><literal type="number" pos:start="33:14" pos:end="33:16">0x2</literal></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:42"><expr pos:start="35:13" pos:end="35:41"><name pos:start="35:13" pos:end="35:16">prot</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:28">PAGE_READ</name> <operator pos:start="35:30" pos:end="35:30">|</operator> <name pos:start="35:32" pos:end="35:41">PAGE_WRITE</name></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>



        <case pos:start="41:9" pos:end="41:17">case <expr pos:start="41:14" pos:end="41:16"><literal type="number" pos:start="41:14" pos:end="41:16">0x3</literal></expr>:</case>

        <case pos:start="43:9" pos:end="43:17">case <expr pos:start="43:14" pos:end="43:16"><literal type="number" pos:start="43:14" pos:end="43:16">0x6</literal></expr>:</case>

            <expr_stmt pos:start="45:13" pos:end="45:29"><expr pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:16">prot</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:28">PAGE_READ</name></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="83:5">else <block pos:start="51:12" pos:end="83:5">{<block_content pos:start="53:9" pos:end="81:9">

        <switch pos:start="53:9" pos:end="81:9">switch <condition pos:start="53:16" pos:end="53:19">(<expr pos:start="53:17" pos:end="53:18"><name pos:start="53:17" pos:end="53:18">pp</name></expr>)</condition> <block pos:start="53:21" pos:end="81:9">{<block_content pos:start="55:9" pos:end="79:18">

        <case pos:start="55:9" pos:end="55:17">case <expr pos:start="55:14" pos:end="55:16"><literal type="number" pos:start="55:14" pos:end="55:16">0x0</literal></expr>:</case>

        <case pos:start="57:9" pos:end="57:17">case <expr pos:start="57:14" pos:end="57:16"><literal type="number" pos:start="57:14" pos:end="57:16">0x6</literal></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="59:21"><expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:16">prot</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>



        <case pos:start="65:9" pos:end="65:17">case <expr pos:start="65:14" pos:end="65:16"><literal type="number" pos:start="65:14" pos:end="65:16">0x1</literal></expr>:</case>

        <case pos:start="67:9" pos:end="67:17">case <expr pos:start="67:14" pos:end="67:16"><literal type="number" pos:start="67:14" pos:end="67:16">0x3</literal></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:29"><expr pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:16">prot</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:28">PAGE_READ</name></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>



        <case pos:start="75:9" pos:end="75:17">case <expr pos:start="75:14" pos:end="75:16"><literal type="number" pos:start="75:14" pos:end="75:16">0x2</literal></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:42"><expr pos:start="77:13" pos:end="77:41"><name pos:start="77:13" pos:end="77:16">prot</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:28">PAGE_READ</name> <operator pos:start="77:30" pos:end="77:30">|</operator> <name pos:start="77:32" pos:end="77:41">PAGE_WRITE</name></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:57">/* No execute if either noexec or guarded bits set */</comment>

    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:60">(<expr pos:start="89:9" pos:end="89:59"><operator pos:start="89:9" pos:end="89:9">!</operator><operator pos:start="89:10" pos:end="89:10">(</operator><name pos:start="89:11" pos:end="89:18"><name pos:start="89:11" pos:end="89:13">pte</name><operator pos:start="89:14" pos:end="89:14">.</operator><name pos:start="89:15" pos:end="89:18">pte1</name></name> <operator pos:start="89:20" pos:end="89:20">&amp;</operator> <name pos:start="89:22" pos:end="89:31">HPTE64_R_N</name><operator pos:start="89:32" pos:end="89:32">)</operator> <operator pos:start="89:34" pos:end="89:35">||</operator> <operator pos:start="89:37" pos:end="89:37">(</operator><name pos:start="89:38" pos:end="89:45"><name pos:start="89:38" pos:end="89:40">pte</name><operator pos:start="89:41" pos:end="89:41">.</operator><name pos:start="89:42" pos:end="89:45">pte1</name></name> <operator pos:start="89:47" pos:end="89:47">&amp;</operator> <name pos:start="89:49" pos:end="89:58">HPTE64_R_G</name><operator pos:start="89:59" pos:end="89:59">)</operator></expr>)</condition> <block pos:start="89:62" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:26">

        <expr_stmt pos:start="91:9" pos:end="91:26"><expr pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:12">prot</name> <operator pos:start="91:14" pos:end="91:15">|=</operator> <name pos:start="91:17" pos:end="91:25">PAGE_EXEC</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="97:5" pos:end="97:16">return <expr pos:start="97:12" pos:end="97:15"><name pos:start="97:12" pos:end="97:15">prot</name></expr>;</return>

</block_content>}</block></function>
</unit>
