<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14127.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:25">QEMU_NORETURN</name></type> <name pos:start="1:27" pos:end="1:35">force_sig</name><parameter_list pos:start="1:36" pos:end="1:44">(<parameter pos:start="1:37" pos:end="1:43"><decl pos:start="1:37" pos:end="1:43"><type pos:start="1:37" pos:end="1:39"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:43">sig</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="38:0">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">host_sig</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:42"><expr pos:start="7:5" pos:end="7:41"><name pos:start="7:5" pos:end="7:12">host_sig</name> <operator pos:start="7:14" pos:end="7:14">=</operator> <call pos:start="7:16" pos:end="7:41"><name pos:start="7:16" pos:end="7:36">target_to_host_signal</name><argument_list pos:start="7:37" pos:end="7:41">(<argument pos:start="7:38" pos:end="7:40"><expr pos:start="7:38" pos:end="7:40"><name pos:start="7:38" pos:end="7:40">sig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="14:0"><expr pos:start="9:5" pos:end="11:37"><call pos:start="9:5" pos:end="11:37"><name pos:start="9:5" pos:end="9:11">fprintf</name><argument_list pos:start="9:12" pos:end="11:37">(<argument pos:start="9:13" pos:end="9:18"><expr pos:start="9:13" pos:end="9:18"><name pos:start="9:13" pos:end="9:18">stderr</name></expr></argument>, <argument pos:start="9:21" pos:end="9:70"><expr pos:start="9:21" pos:end="9:70"><literal type="string" pos:start="9:21" pos:end="9:70">"qemu: uncaught target signal %d (%s) - exiting\n"</literal></expr></argument>,

            <argument pos:start="11:13" pos:end="11:15"><expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">sig</name></expr></argument>, <argument pos:start="11:18" pos:end="11:36"><expr pos:start="11:18" pos:end="11:36"><call pos:start="11:18" pos:end="11:36"><name pos:start="11:18" pos:end="11:26">strsignal</name><argument_list pos:start="11:27" pos:end="11:36">(<argument pos:start="11:28" pos:end="11:35"><expr pos:start="11:28" pos:end="11:35"><name pos:start="11:28" pos:end="11:35">host_sig</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="13:1" pos:end="13:5">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:5"><literal type="number" pos:start="13:5" pos:end="13:5">1</literal></expr></cpp:if>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><call pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:17">gdb_signalled</name><argument_list pos:start="15:18" pos:end="15:34">(<argument pos:start="15:19" pos:end="15:28"><expr pos:start="15:19" pos:end="15:28"><name pos:start="15:19" pos:end="15:28">thread_env</name></expr></argument>, <argument pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:33">sig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:9">_exit</name><argument_list pos:start="17:10" pos:end="17:20">(<argument pos:start="17:11" pos:end="17:19"><expr pos:start="17:11" pos:end="17:19"><operator pos:start="17:11" pos:end="17:11">-</operator><name pos:start="17:12" pos:end="17:19">host_sig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="19:1" pos:end="19:5">#<cpp:directive pos:start="19:2" pos:end="19:5">else</cpp:directive></cpp:else>

    <block pos:start="21:5" pos:end="38:0">{<block_content pos:start="23:9" pos:end="33:16">

        <decl_stmt pos:start="23:9" pos:end="23:29"><decl pos:start="23:9" pos:end="23:28"><type pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:14">struct</name> <name pos:start="23:16" pos:end="23:24">sigaction</name></name></type> <name pos:start="23:26" pos:end="23:28">act</name></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><call pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:19">sigemptyset</name><argument_list pos:start="25:20" pos:end="25:33">(<argument pos:start="25:21" pos:end="25:32"><expr pos:start="25:21" pos:end="25:32"><operator pos:start="25:21" pos:end="25:21">&amp;</operator><name pos:start="25:22" pos:end="25:32"><name pos:start="25:22" pos:end="25:24">act</name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:32">sa_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:11">act</name><operator pos:start="27:12" pos:end="27:12">.</operator><name pos:start="27:13" pos:end="27:20">sa_flags</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:33">SA_SIGINFO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:11">act</name><operator pos:start="29:12" pos:end="29:12">.</operator><name pos:start="29:13" pos:end="29:24">sa_sigaction</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <name pos:start="29:28" pos:end="29:34">SIG_DFL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:39"><expr pos:start="31:9" pos:end="31:38"><call pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:17">sigaction</name><argument_list pos:start="31:18" pos:end="31:38">(<argument pos:start="31:19" pos:end="31:25"><expr pos:start="31:19" pos:end="31:25"><name pos:start="31:19" pos:end="31:25">SIGABRT</name></expr></argument>, <argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:31">act</name></expr></argument>, <argument pos:start="31:34" pos:end="31:37"><expr pos:start="31:34" pos:end="31:37"><name pos:start="31:34" pos:end="31:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:16"><expr pos:start="33:9" pos:end="33:15"><call pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:13">abort</name><argument_list pos:start="33:14" pos:end="33:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
