<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10201.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">gen_load_exclusive</name><parameter_list pos:start="1:31" pos:end="3:55">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:43">DisasContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:54"><decl pos:start="1:49" pos:end="1:54"><type pos:start="1:49" pos:end="1:54"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:54">rt</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:63"><decl pos:start="1:57" pos:end="1:63"><type pos:start="1:57" pos:end="1:63"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:63">rt2</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:44"><decl pos:start="3:32" pos:end="3:44"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:39">TCGv_i32</name></type> <name pos:start="3:41" pos:end="3:44">addr</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:54"><decl pos:start="3:47" pos:end="3:54"><type pos:start="3:47" pos:end="3:54"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:54">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:51">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i32</name></type> <name pos:start="7:14" pos:end="7:16">tmp</name> <init pos:start="7:18" pos:end="7:37">= <expr pos:start="7:20" pos:end="7:37"><call pos:start="7:20" pos:end="7:37"><name pos:start="7:20" pos:end="7:35">tcg_temp_new_i32</name><argument_list pos:start="7:36" pos:end="7:37">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:14">is_ldex</name></name> <operator pos:start="11:16" pos:end="11:16">=</operator> <name pos:start="11:18" pos:end="11:21">true</name></expr>;</expr_stmt>



    <switch pos:start="15:5" pos:end="41:5">switch <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">size</name></expr>)</condition> <block pos:start="15:19" pos:end="41:5">{<block_content pos:start="17:5" pos:end="39:16">

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:51"><expr pos:start="19:9" pos:end="19:50"><call pos:start="19:9" pos:end="19:50"><name pos:start="19:9" pos:end="19:21">gen_aa32_ld8u</name><argument_list pos:start="19:22" pos:end="19:50">(<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:25">tmp</name></expr></argument>, <argument pos:start="19:28" pos:end="19:31"><expr pos:start="19:28" pos:end="19:31"><name pos:start="19:28" pos:end="19:31">addr</name></expr></argument>, <argument pos:start="19:34" pos:end="19:49"><expr pos:start="19:34" pos:end="19:49"><call pos:start="19:34" pos:end="19:49"><name pos:start="19:34" pos:end="19:46">get_mem_index</name><argument_list pos:start="19:47" pos:end="19:49">(<argument pos:start="19:48" pos:end="19:48"><expr pos:start="19:48" pos:end="19:48"><name pos:start="19:48" pos:end="19:48">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">1</literal></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:52"><expr pos:start="25:9" pos:end="25:51"><call pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:22">gen_aa32_ld16u</name><argument_list pos:start="25:23" pos:end="25:51">(<argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">tmp</name></expr></argument>, <argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">addr</name></expr></argument>, <argument pos:start="25:35" pos:end="25:50"><expr pos:start="25:35" pos:end="25:50"><call pos:start="25:35" pos:end="25:50"><name pos:start="25:35" pos:end="25:47">get_mem_index</name><argument_list pos:start="25:48" pos:end="25:50">(<argument pos:start="25:49" pos:end="25:49"><expr pos:start="25:49" pos:end="25:49"><name pos:start="25:49" pos:end="25:49">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">2</literal></expr>:</case>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">3</literal></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:52"><expr pos:start="33:9" pos:end="33:51"><call pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:22">gen_aa32_ld32u</name><argument_list pos:start="33:23" pos:end="33:51">(<argument pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:26">tmp</name></expr></argument>, <argument pos:start="33:29" pos:end="33:32"><expr pos:start="33:29" pos:end="33:32"><name pos:start="33:29" pos:end="33:32">addr</name></expr></argument>, <argument pos:start="33:35" pos:end="33:50"><expr pos:start="33:35" pos:end="33:50"><call pos:start="33:35" pos:end="33:50"><name pos:start="33:35" pos:end="33:47">get_mem_index</name><argument_list pos:start="33:48" pos:end="33:50">(<argument pos:start="33:49" pos:end="33:49"><expr pos:start="33:49" pos:end="33:49"><name pos:start="33:49" pos:end="33:49">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <default pos:start="37:5" pos:end="37:12">default:</default>

        <expr_stmt pos:start="39:9" pos:end="39:16"><expr pos:start="39:9" pos:end="39:15"><call pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:13">abort</name><argument_list pos:start="39:14" pos:end="39:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <if_stmt pos:start="45:5" pos:end="67:5"><if pos:start="45:5" pos:end="63:5">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:12">size</name> <operator pos:start="45:14" pos:end="45:15">==</operator> <literal type="number" pos:start="45:17" pos:end="45:17">3</literal></expr>)</condition> <block pos:start="45:20" pos:end="63:5">{<block_content pos:start="47:9" pos:end="61:32">

        <decl_stmt pos:start="47:9" pos:end="47:43"><decl pos:start="47:9" pos:end="47:42"><type pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:16">TCGv_i32</name></type> <name pos:start="47:18" pos:end="47:21">tmp2</name> <init pos:start="47:23" pos:end="47:42">= <expr pos:start="47:25" pos:end="47:42"><call pos:start="47:25" pos:end="47:42"><name pos:start="47:25" pos:end="47:40">tcg_temp_new_i32</name><argument_list pos:start="47:41" pos:end="47:42">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:43"><decl pos:start="49:9" pos:end="49:42"><type pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:16">TCGv_i32</name></type> <name pos:start="49:18" pos:end="49:21">tmp3</name> <init pos:start="49:23" pos:end="49:42">= <expr pos:start="49:25" pos:end="49:42"><call pos:start="49:25" pos:end="49:42"><name pos:start="49:25" pos:end="49:40">tcg_temp_new_i32</name><argument_list pos:start="49:41" pos:end="49:42">()</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:40"><expr pos:start="53:9" pos:end="53:39"><call pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:24">tcg_gen_addi_i32</name><argument_list pos:start="53:25" pos:end="53:39">(<argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><name pos:start="53:26" pos:end="53:29">tmp2</name></expr></argument>, <argument pos:start="53:32" pos:end="53:35"><expr pos:start="53:32" pos:end="53:35"><name pos:start="53:32" pos:end="53:35">addr</name></expr></argument>, <argument pos:start="53:38" pos:end="53:38"><expr pos:start="53:38" pos:end="53:38"><literal type="number" pos:start="53:38" pos:end="53:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:53"><expr pos:start="55:9" pos:end="55:52"><call pos:start="55:9" pos:end="55:52"><name pos:start="55:9" pos:end="55:22">gen_aa32_ld32u</name><argument_list pos:start="55:23" pos:end="55:52">(<argument pos:start="55:24" pos:end="55:27"><expr pos:start="55:24" pos:end="55:27"><name pos:start="55:24" pos:end="55:27">tmp3</name></expr></argument>, <argument pos:start="55:30" pos:end="55:33"><expr pos:start="55:30" pos:end="55:33"><name pos:start="55:30" pos:end="55:33">tmp2</name></expr></argument>, <argument pos:start="55:36" pos:end="55:51"><expr pos:start="55:36" pos:end="55:51"><call pos:start="55:36" pos:end="55:51"><name pos:start="55:36" pos:end="55:48">get_mem_index</name><argument_list pos:start="55:49" pos:end="55:51">(<argument pos:start="55:50" pos:end="55:50"><expr pos:start="55:50" pos:end="55:50"><name pos:start="55:50" pos:end="55:50">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:31"><call pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:25">tcg_temp_free_i32</name><argument_list pos:start="57:26" pos:end="57:31">(<argument pos:start="57:27" pos:end="57:30"><expr pos:start="57:27" pos:end="57:30"><name pos:start="57:27" pos:end="57:30">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:61"><expr pos:start="59:9" pos:end="59:60"><call pos:start="59:9" pos:end="59:60"><name pos:start="59:9" pos:end="59:30">tcg_gen_concat_i32_i64</name><argument_list pos:start="59:31" pos:end="59:60">(<argument pos:start="59:32" pos:end="59:48"><expr pos:start="59:32" pos:end="59:48"><name pos:start="59:32" pos:end="59:48">cpu_exclusive_val</name></expr></argument>, <argument pos:start="59:51" pos:end="59:53"><expr pos:start="59:51" pos:end="59:53"><name pos:start="59:51" pos:end="59:53">tmp</name></expr></argument>, <argument pos:start="59:56" pos:end="59:59"><expr pos:start="59:56" pos:end="59:59"><name pos:start="59:56" pos:end="59:59">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><call pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:17">store_reg</name><argument_list pos:start="61:18" pos:end="61:31">(<argument pos:start="61:19" pos:end="61:19"><expr pos:start="61:19" pos:end="61:19"><name pos:start="61:19" pos:end="61:19">s</name></expr></argument>, <argument pos:start="61:22" pos:end="61:24"><expr pos:start="61:22" pos:end="61:24"><name pos:start="61:22" pos:end="61:24">rt2</name></expr></argument>, <argument pos:start="61:27" pos:end="61:30"><expr pos:start="61:27" pos:end="61:30"><name pos:start="61:27" pos:end="61:30">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="67:5">else <block pos:start="63:12" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:53">

        <expr_stmt pos:start="65:9" pos:end="65:53"><expr pos:start="65:9" pos:end="65:52"><call pos:start="65:9" pos:end="65:52"><name pos:start="65:9" pos:end="65:28">tcg_gen_extu_i32_i64</name><argument_list pos:start="65:29" pos:end="65:52">(<argument pos:start="65:30" pos:end="65:46"><expr pos:start="65:30" pos:end="65:46"><name pos:start="65:30" pos:end="65:46">cpu_exclusive_val</name></expr></argument>, <argument pos:start="65:49" pos:end="65:51"><expr pos:start="65:49" pos:end="65:51"><name pos:start="65:49" pos:end="65:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:26"><expr pos:start="71:5" pos:end="71:25"><call pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:13">store_reg</name><argument_list pos:start="71:14" pos:end="71:25">(<argument pos:start="71:15" pos:end="71:15"><expr pos:start="71:15" pos:end="71:15"><name pos:start="71:15" pos:end="71:15">s</name></expr></argument>, <argument pos:start="71:18" pos:end="71:19"><expr pos:start="71:18" pos:end="71:19"><name pos:start="71:18" pos:end="71:19">rt</name></expr></argument>, <argument pos:start="71:22" pos:end="71:24"><expr pos:start="71:22" pos:end="71:24"><name pos:start="71:22" pos:end="71:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:51"><expr pos:start="73:5" pos:end="73:50"><call pos:start="73:5" pos:end="73:50"><name pos:start="73:5" pos:end="73:24">tcg_gen_extu_i32_i64</name><argument_list pos:start="73:25" pos:end="73:50">(<argument pos:start="73:26" pos:end="73:43"><expr pos:start="73:26" pos:end="73:43"><name pos:start="73:26" pos:end="73:43">cpu_exclusive_addr</name></expr></argument>, <argument pos:start="73:46" pos:end="73:49"><expr pos:start="73:46" pos:end="73:49"><name pos:start="73:46" pos:end="73:49">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
