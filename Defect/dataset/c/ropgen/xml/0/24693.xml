<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24693.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:67"><name pos:start="1:1" pos:end="1:14">build_tpm_tcpa</name><argument_list pos:start="1:15" pos:end="1:67">(<argument pos:start="1:16" pos:end="1:33">GArray *table_data</argument>, <argument pos:start="1:36" pos:end="1:49">GArray *linker</argument>, <argument pos:start="1:52" pos:end="1:66">GArray *tcpalog</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:55">

    <decl_stmt pos:start="5:5" pos:end="5:64"><decl pos:start="5:5" pos:end="5:63"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">Acpi20Tcpa</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">tcpa</name> <init pos:start="5:22" pos:end="5:63">= <expr pos:start="5:24" pos:end="5:63"><call pos:start="5:24" pos:end="5:63"><name pos:start="5:24" pos:end="5:37">acpi_data_push</name><argument_list pos:start="5:38" pos:end="5:63">(<argument pos:start="5:39" pos:end="5:48"><expr pos:start="5:39" pos:end="5:48"><name pos:start="5:39" pos:end="5:48">table_data</name></expr></argument>, <argument pos:start="5:51" pos:end="5:62"><expr pos:start="5:51" pos:end="5:62"><sizeof pos:start="5:51" pos:end="5:56">sizeof <name/></sizeof>*<name pos:start="5:59" pos:end="5:62">tcpa</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:60"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:35">log_area_start_address</name> <init pos:start="7:37" pos:end="7:60">= <expr pos:start="7:39" pos:end="7:60"><call pos:start="7:39" pos:end="7:60"><name pos:start="7:39" pos:end="7:51">acpi_data_len</name><argument_list pos:start="7:52" pos:end="7:60">(<argument pos:start="7:53" pos:end="7:59"><expr pos:start="7:53" pos:end="7:59"><name pos:start="7:53" pos:end="7:59">tcpalog</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:67"><expr pos:start="11:5" pos:end="11:66"><name pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:8">tcpa</name><operator pos:start="11:9" pos:end="11:10">-&gt;</operator><name pos:start="11:11" pos:end="11:24">platform_class</name></name> <operator pos:start="11:26" pos:end="11:26">=</operator> <call pos:start="11:28" pos:end="11:66"><name pos:start="11:28" pos:end="11:38">cpu_to_le16</name><argument_list pos:start="11:39" pos:end="11:66">(<argument pos:start="11:40" pos:end="11:65"><expr pos:start="11:40" pos:end="11:65"><name pos:start="11:40" pos:end="11:65">TPM_TCPA_ACPI_CLASS_CLIENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:75"><expr pos:start="13:5" pos:end="13:74"><name pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:8">tcpa</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:33">log_area_minimum_length</name></name> <operator pos:start="13:35" pos:end="13:35">=</operator> <call pos:start="13:37" pos:end="13:74"><name pos:start="13:37" pos:end="13:47">cpu_to_le32</name><argument_list pos:start="13:48" pos:end="13:74">(<argument pos:start="13:49" pos:end="13:73"><expr pos:start="13:49" pos:end="13:73"><name pos:start="13:49" pos:end="13:73">TPM_LOG_AREA_MINIMUM_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:71"><expr pos:start="15:5" pos:end="15:70"><name pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:8">tcpa</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:32">log_area_start_address</name></name> <operator pos:start="15:34" pos:end="15:34">=</operator> <call pos:start="15:36" pos:end="15:70"><name pos:start="15:36" pos:end="15:46">cpu_to_le64</name><argument_list pos:start="15:47" pos:end="15:70">(<argument pos:start="15:48" pos:end="15:69"><expr pos:start="15:48" pos:end="15:69"><name pos:start="15:48" pos:end="15:69">log_area_start_address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:54"><expr pos:start="19:5" pos:end="21:53"><call pos:start="19:5" pos:end="21:53"><name pos:start="19:5" pos:end="19:28">bios_linker_loader_alloc</name><argument_list pos:start="19:29" pos:end="21:53">(<argument pos:start="19:30" pos:end="19:35"><expr pos:start="19:30" pos:end="19:35"><name pos:start="19:30" pos:end="19:35">linker</name></expr></argument>, <argument pos:start="19:38" pos:end="19:59"><expr pos:start="19:38" pos:end="19:59"><name pos:start="19:38" pos:end="19:59">ACPI_BUILD_TPMLOG_FILE</name></expr></argument>, <argument pos:start="19:62" pos:end="19:62"><expr pos:start="19:62" pos:end="19:62"><literal type="number" pos:start="19:62" pos:end="19:62">1</literal></expr></argument>,

                             <argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:34">false</name></expr></argument> <comment type="block" pos:start="21:36" pos:end="21:52">/* high memory */</comment>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:61">/* log area start address to be filled by Guest linker */</comment>

    <expr_stmt pos:start="27:5" pos:end="33:73"><expr pos:start="27:5" pos:end="33:72"><call pos:start="27:5" pos:end="33:72"><name pos:start="27:5" pos:end="27:34">bios_linker_loader_add_pointer</name><argument_list pos:start="27:35" pos:end="33:72">(<argument pos:start="27:36" pos:end="27:41"><expr pos:start="27:36" pos:end="27:41"><name pos:start="27:36" pos:end="27:41">linker</name></expr></argument>, <argument pos:start="27:44" pos:end="27:64"><expr pos:start="27:44" pos:end="27:64"><name pos:start="27:44" pos:end="27:64">ACPI_BUILD_TABLE_FILE</name></expr></argument>,

                                   <argument pos:start="29:36" pos:end="29:57"><expr pos:start="29:36" pos:end="29:57"><name pos:start="29:36" pos:end="29:57">ACPI_BUILD_TPMLOG_FILE</name></expr></argument>,

                                   <argument pos:start="31:36" pos:end="31:45"><expr pos:start="31:36" pos:end="31:45"><name pos:start="31:36" pos:end="31:45">table_data</name></expr></argument>, <argument pos:start="31:48" pos:end="31:76"><expr pos:start="31:48" pos:end="31:76"><operator pos:start="31:48" pos:end="31:48">&amp;</operator><name pos:start="31:49" pos:end="31:76"><name pos:start="31:49" pos:end="31:52">tcpa</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:76">log_area_start_address</name></name></expr></argument>,

                                   <argument pos:start="33:36" pos:end="33:71"><expr pos:start="33:36" pos:end="33:71"><sizeof pos:start="33:36" pos:end="33:71">sizeof<argument_list pos:start="33:42" pos:end="33:71">(<argument pos:start="33:43" pos:end="33:70"><expr pos:start="33:43" pos:end="33:70"><name pos:start="33:43" pos:end="33:70"><name pos:start="33:43" pos:end="33:46">tcpa</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:70">log_area_start_address</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="39:63"><expr pos:start="37:5" pos:end="39:62"><call pos:start="37:5" pos:end="39:62"><name pos:start="37:5" pos:end="37:16">build_header</name><argument_list pos:start="37:17" pos:end="39:62">(<argument pos:start="37:18" pos:end="37:23"><expr pos:start="37:18" pos:end="37:23"><name pos:start="37:18" pos:end="37:23">linker</name></expr></argument>, <argument pos:start="37:26" pos:end="37:35"><expr pos:start="37:26" pos:end="37:35"><name pos:start="37:26" pos:end="37:35">table_data</name></expr></argument>,

                 <argument pos:start="39:18" pos:end="39:29"><expr pos:start="39:18" pos:end="39:29"><operator pos:start="39:18" pos:end="39:18">(</operator><name pos:start="39:19" pos:end="39:22">void</name> <operator pos:start="39:24" pos:end="39:24">*</operator><operator pos:start="39:25" pos:end="39:25">)</operator><name pos:start="39:26" pos:end="39:29">tcpa</name></expr></argument>, <argument pos:start="39:32" pos:end="39:37"><expr pos:start="39:32" pos:end="39:37"><literal type="string" pos:start="39:32" pos:end="39:37">"TCPA"</literal></expr></argument>, <argument pos:start="39:40" pos:end="39:52"><expr pos:start="39:40" pos:end="39:52"><sizeof pos:start="39:40" pos:end="39:52">sizeof<argument_list pos:start="39:46" pos:end="39:52">(<argument pos:start="39:47" pos:end="39:51"><expr pos:start="39:47" pos:end="39:51"><operator pos:start="39:47" pos:end="39:47">*</operator><name pos:start="39:48" pos:end="39:51">tcpa</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:55" pos:end="39:55"><expr pos:start="39:55" pos:end="39:55"><literal type="number" pos:start="39:55" pos:end="39:55">2</literal></expr></argument>, <argument pos:start="39:58" pos:end="39:61"><expr pos:start="39:58" pos:end="39:61"><name pos:start="39:58" pos:end="39:61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:55"><expr pos:start="43:5" pos:end="43:54"><call pos:start="43:5" pos:end="43:54"><name pos:start="43:5" pos:end="43:18">acpi_data_push</name><argument_list pos:start="43:19" pos:end="43:54">(<argument pos:start="43:20" pos:end="43:26"><expr pos:start="43:20" pos:end="43:26"><name pos:start="43:20" pos:end="43:26">tcpalog</name></expr></argument>, <argument pos:start="43:29" pos:end="43:53"><expr pos:start="43:29" pos:end="43:53"><name pos:start="43:29" pos:end="43:53">TPM_LOG_AREA_MINIMUM_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
