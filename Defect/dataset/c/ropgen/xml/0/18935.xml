<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18935.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">monitor_init</name><parameter_list pos:start="1:18" pos:end="1:50">(<parameter pos:start="1:19" pos:end="1:38"><decl pos:start="1:19" pos:end="1:38"><type pos:start="1:19" pos:end="1:38"><name pos:start="1:19" pos:end="1:33">CharDriverState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">chr</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:49"><decl pos:start="1:41" pos:end="1:49"><type pos:start="1:41" pos:end="1:49"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:49">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:22">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:28">is_first_init</name> <init pos:start="5:30" pos:end="5:32">= <expr pos:start="5:32" pos:end="5:32"><literal type="number" pos:start="5:32" pos:end="5:32">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Monitor</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">mon</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:21">is_first_init</name></expr>)</condition> <block pos:start="11:24" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:26">

        <expr_stmt pos:start="13:9" pos:end="13:65"><expr pos:start="13:9" pos:end="13:64"><name pos:start="13:9" pos:end="13:17">key_timer</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <call pos:start="13:21" pos:end="13:64"><name pos:start="13:21" pos:end="13:34">qemu_new_timer</name><argument_list pos:start="13:35" pos:end="13:64">(<argument pos:start="13:36" pos:end="13:43"><expr pos:start="13:36" pos:end="13:43"><name pos:start="13:36" pos:end="13:43">vm_clock</name></expr></argument>, <argument pos:start="13:46" pos:end="13:57"><expr pos:start="13:46" pos:end="13:57"><name pos:start="13:46" pos:end="13:57">release_keys</name></expr></argument>, <argument pos:start="13:60" pos:end="13:63"><expr pos:start="13:60" pos:end="13:63"><name pos:start="13:60" pos:end="13:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:26"><expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:21">is_first_init</name> <operator pos:start="15:23" pos:end="15:23">=</operator> <literal type="number" pos:start="15:25" pos:end="15:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:7">mon</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:36"><name pos:start="21:11" pos:end="21:22">qemu_mallocz</name><argument_list pos:start="21:23" pos:end="21:36">(<argument pos:start="21:24" pos:end="21:35"><expr pos:start="21:24" pos:end="21:35"><sizeof pos:start="21:24" pos:end="21:35">sizeof<argument_list pos:start="21:30" pos:end="21:35">(<argument pos:start="21:31" pos:end="21:34"><expr pos:start="21:31" pos:end="21:34"><operator pos:start="21:31" pos:end="21:31">*</operator><name pos:start="21:32" pos:end="21:34">mon</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:7">mon</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:12">chr</name></name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:18">chr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:7">mon</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:14">flags</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:22">flags</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:37">(<expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:13">flags</name> <operator pos:start="29:15" pos:end="29:15">&amp;</operator> <name pos:start="29:17" pos:end="29:36">MONITOR_USE_READLINE</name></expr>)</condition> <block pos:start="29:39" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:37">

        <expr_stmt pos:start="31:9" pos:end="31:62"><expr pos:start="31:9" pos:end="31:61"><name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">mon</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:15">rs</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:61"><name pos:start="31:19" pos:end="31:31">readline_init</name><argument_list pos:start="31:32" pos:end="31:61">(<argument pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:35">mon</name></expr></argument>, <argument pos:start="31:38" pos:end="31:60"><expr pos:start="31:38" pos:end="31:60"><name pos:start="31:38" pos:end="31:60">monitor_find_completion</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:37"><expr pos:start="33:9" pos:end="33:36"><call pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:28">monitor_read_command</name><argument_list pos:start="33:29" pos:end="33:36">(<argument pos:start="33:30" pos:end="33:32"><expr pos:start="33:30" pos:end="33:32"><name pos:start="33:30" pos:end="33:32">mon</name></expr></argument>, <argument pos:start="33:35" pos:end="33:35"><expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="41:31"><expr pos:start="39:5" pos:end="41:30"><call pos:start="39:5" pos:end="41:30"><name pos:start="39:5" pos:end="39:25">qemu_chr_add_handlers</name><argument_list pos:start="39:26" pos:end="41:30">(<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">chr</name></expr></argument>, <argument pos:start="39:32" pos:end="39:47"><expr pos:start="39:32" pos:end="39:47"><name pos:start="39:32" pos:end="39:47">monitor_can_read</name></expr></argument>, <argument pos:start="39:50" pos:end="39:61"><expr pos:start="39:50" pos:end="39:61"><name pos:start="39:50" pos:end="39:61">monitor_read</name></expr></argument>, <argument pos:start="39:64" pos:end="39:76"><expr pos:start="39:64" pos:end="39:76"><name pos:start="39:64" pos:end="39:76">monitor_event</name></expr></argument>,

                          <argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:44"><expr pos:start="45:5" pos:end="45:43"><call pos:start="45:5" pos:end="45:43"><name pos:start="45:5" pos:end="45:20">LIST_INSERT_HEAD</name><argument_list pos:start="45:21" pos:end="45:43">(<argument pos:start="45:22" pos:end="45:30"><expr pos:start="45:22" pos:end="45:30"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:30">mon_list</name></expr></argument>, <argument pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><name pos:start="45:33" pos:end="45:35">mon</name></expr></argument>, <argument pos:start="45:38" pos:end="45:42"><expr pos:start="45:38" pos:end="45:42"><name pos:start="45:38" pos:end="45:42">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:22"><if pos:start="47:5" pos:end="49:22">if <condition pos:start="47:8" pos:end="47:49">(<expr pos:start="47:9" pos:end="47:48"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:16">cur_mon</name> <operator pos:start="47:18" pos:end="47:19">||</operator> <operator pos:start="47:21" pos:end="47:21">(</operator><name pos:start="47:22" pos:end="47:26">flags</name> <operator pos:start="47:28" pos:end="47:28">&amp;</operator> <name pos:start="47:30" pos:end="47:47">MONITOR_IS_DEFAULT</name><operator pos:start="47:48" pos:end="47:48">)</operator></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:22"><block_content pos:start="49:9" pos:end="49:22">

        <expr_stmt pos:start="49:9" pos:end="49:22"><expr pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:15">cur_mon</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:21">mon</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
