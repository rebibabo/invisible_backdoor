<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15650.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:11">tcp_ctl</name><parameter_list pos:start="1:12" pos:end="1:30">(<parameter pos:start="1:13" pos:end="1:29"><decl pos:start="1:13" pos:end="1:29"><type pos:start="1:13" pos:end="1:29"><name pos:start="1:13" pos:end="1:25"><name pos:start="1:13" pos:end="1:18">struct</name> <name pos:start="1:20" pos:end="1:25">socket</name></name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:29">so</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Slirp</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:16">slirp</name> <init pos:start="5:18" pos:end="5:28">= <expr pos:start="5:20" pos:end="5:28"><name pos:start="5:20" pos:end="5:28"><name pos:start="5:20" pos:end="5:21">so</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:28">slirp</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:15">sbuf</name></name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">sb</name> <init pos:start="7:21" pos:end="7:33">= <expr pos:start="7:23" pos:end="7:33"><operator pos:start="7:23" pos:end="7:23">&amp;</operator><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">so</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">so_snd</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:18">ex_list</name></name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:26">ex_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">do_pty</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><call pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:14">DEBUG_CALL</name><argument_list pos:start="15:15" pos:end="15:25">(<argument pos:start="15:16" pos:end="15:24"><expr pos:start="15:16" pos:end="15:24"><literal type="string" pos:start="15:16" pos:end="15:24">"tcp_ctl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><call pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:13">DEBUG_ARG</name><argument_list pos:start="17:14" pos:end="17:36">(<argument pos:start="17:15" pos:end="17:24"><expr pos:start="17:15" pos:end="17:24"><literal type="string" pos:start="17:15" pos:end="17:24">"so = %lx"</literal></expr></argument>, <argument pos:start="17:27" pos:end="17:35"><expr pos:start="17:27" pos:end="17:35"><operator pos:start="17:27" pos:end="17:27">(</operator><name pos:start="17:28" pos:end="17:31">long</name> <operator pos:start="17:33" pos:end="17:33">)</operator><name pos:start="17:34" pos:end="17:35">so</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="51:5"><if pos:start="21:5" pos:end="51:5">if <condition pos:start="21:8" pos:end="21:56">(<expr pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:10">so</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:20">so_faddr</name><operator pos:start="21:21" pos:end="21:21">.</operator><name pos:start="21:22" pos:end="21:27">s_addr</name></name> <operator pos:start="21:29" pos:end="21:30">!=</operator> <name pos:start="21:32" pos:end="21:55"><name pos:start="21:32" pos:end="21:36">slirp</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:48">vhost_addr</name><operator pos:start="21:49" pos:end="21:49">.</operator><name pos:start="21:50" pos:end="21:55">s_addr</name></name></expr>)</condition> <block pos:start="21:58" pos:end="51:5">{<block_content pos:start="25:9" pos:end="49:9">

        <comment type="block" pos:start="23:9" pos:end="23:36">/* Check if it's pty_exec */</comment>

        <for pos:start="25:9" pos:end="49:9">for <control pos:start="25:13" pos:end="25:73">(<init pos:start="25:14" pos:end="25:39"><expr pos:start="25:14" pos:end="25:38"><name pos:start="25:14" pos:end="25:19">ex_ptr</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:38"><name pos:start="25:23" pos:end="25:27">slirp</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:38">exec_list</name></name></expr>;</init> <condition pos:start="25:41" pos:end="25:47"><expr pos:start="25:41" pos:end="25:46"><name pos:start="25:41" pos:end="25:46">ex_ptr</name></expr>;</condition> <incr pos:start="25:49" pos:end="25:72"><expr pos:start="25:49" pos:end="25:72"><name pos:start="25:49" pos:end="25:54">ex_ptr</name> <operator pos:start="25:56" pos:end="25:56">=</operator> <name pos:start="25:58" pos:end="25:72"><name pos:start="25:58" pos:end="25:63">ex_ptr</name><operator pos:start="25:64" pos:end="25:65">-&gt;</operator><name pos:start="25:66" pos:end="25:72">ex_next</name></name></expr></incr>)</control> <block pos:start="25:75" pos:end="49:9">{<block_content pos:start="27:13" pos:end="47:13">

            <if_stmt pos:start="27:13" pos:end="47:13"><if pos:start="27:13" pos:end="47:13">if <condition pos:start="27:16" pos:end="29:62">(<expr pos:start="27:17" pos:end="29:61"><name pos:start="27:17" pos:end="27:32"><name pos:start="27:17" pos:end="27:22">ex_ptr</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:32">ex_fport</name></name> <operator pos:start="27:34" pos:end="27:35">==</operator> <name pos:start="27:37" pos:end="27:48"><name pos:start="27:37" pos:end="27:38">so</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:48">so_fport</name></name> <operator pos:start="27:50" pos:end="27:51">&amp;&amp;</operator>

                <name pos:start="29:17" pos:end="29:35"><name pos:start="29:17" pos:end="29:18">so</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:28">so_faddr</name><operator pos:start="29:29" pos:end="29:29">.</operator><name pos:start="29:30" pos:end="29:35">s_addr</name></name> <operator pos:start="29:37" pos:end="29:38">==</operator> <name pos:start="29:40" pos:end="29:61"><name pos:start="29:40" pos:end="29:45">ex_ptr</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:54">ex_addr</name><operator pos:start="29:55" pos:end="29:55">.</operator><name pos:start="29:56" pos:end="29:61">s_addr</name></name></expr>)</condition> <block pos:start="29:64" pos:end="47:13">{<block_content pos:start="31:17" pos:end="45:62">

                <if_stmt pos:start="31:17" pos:end="39:17"><if pos:start="31:17" pos:end="39:17">if <condition pos:start="31:20" pos:end="31:40">(<expr pos:start="31:21" pos:end="31:39"><name pos:start="31:21" pos:end="31:34"><name pos:start="31:21" pos:end="31:26">ex_ptr</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:34">ex_pty</name></name> <operator pos:start="31:36" pos:end="31:37">==</operator> <literal type="number" pos:start="31:39" pos:end="31:39">3</literal></expr>)</condition> <block pos:start="31:42" pos:end="39:17">{<block_content pos:start="33:21" pos:end="37:29">

                    <expr_stmt pos:start="33:21" pos:end="33:31"><expr pos:start="33:21" pos:end="33:30"><name pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:22">so</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:25">s</name></name> <operator pos:start="33:27" pos:end="33:27">=</operator> <operator pos:start="33:29" pos:end="33:29">-</operator><literal type="number" pos:start="33:30" pos:end="33:30">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="35:21" pos:end="35:56"><expr pos:start="35:21" pos:end="35:55"><name pos:start="35:21" pos:end="35:29"><name pos:start="35:21" pos:end="35:22">so</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:29">extra</name></name> <operator pos:start="35:31" pos:end="35:31">=</operator> <operator pos:start="35:33" pos:end="35:33">(</operator><name pos:start="35:34" pos:end="35:37">void</name> <operator pos:start="35:39" pos:end="35:39">*</operator><operator pos:start="35:40" pos:end="35:40">)</operator><name pos:start="35:41" pos:end="35:55"><name pos:start="35:41" pos:end="35:46">ex_ptr</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:55">ex_exec</name></name></expr>;</expr_stmt>

                    <return pos:start="37:21" pos:end="37:29">return <expr pos:start="37:28" pos:end="37:28"><literal type="number" pos:start="37:28" pos:end="37:28">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:40"><expr pos:start="41:17" pos:end="41:39"><name pos:start="41:17" pos:end="41:22">do_pty</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:39"><name pos:start="41:26" pos:end="41:31">ex_ptr</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:39">ex_pty</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:70"><expr pos:start="43:17" pos:end="43:69"><call pos:start="43:17" pos:end="43:69"><name pos:start="43:17" pos:end="43:26">DEBUG_MISC</name><argument_list pos:start="43:27" pos:end="43:69">(<argument pos:start="43:28" pos:end="43:68"><expr pos:start="43:28" pos:end="43:68"><operator pos:start="43:28" pos:end="43:28">(</operator><name pos:start="43:29" pos:end="43:31">dfd</name><operator pos:start="43:32" pos:end="43:32">,</operator> <literal type="string" pos:start="43:34" pos:end="43:51">" executing %s \n"</literal><operator pos:start="43:52" pos:end="43:52">,</operator><name pos:start="43:53" pos:end="43:67"><name pos:start="43:53" pos:end="43:58">ex_ptr</name><operator pos:start="43:59" pos:end="43:60">-&gt;</operator><name pos:start="43:61" pos:end="43:67">ex_exec</name></name><operator pos:start="43:68" pos:end="43:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="45:17" pos:end="45:62">return <expr pos:start="45:24" pos:end="45:61"><call pos:start="45:24" pos:end="45:61"><name pos:start="45:24" pos:end="45:32">fork_exec</name><argument_list pos:start="45:33" pos:end="45:61">(<argument pos:start="45:34" pos:end="45:35"><expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">so</name></expr></argument>, <argument pos:start="45:38" pos:end="45:52"><expr pos:start="45:38" pos:end="45:52"><name pos:start="45:38" pos:end="45:52"><name pos:start="45:38" pos:end="45:43">ex_ptr</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:52">ex_exec</name></name></expr></argument>, <argument pos:start="45:55" pos:end="45:60"><expr pos:start="45:55" pos:end="45:60"><name pos:start="45:55" pos:end="45:60">do_pty</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="57:58"><expr pos:start="53:5" pos:end="57:57"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:6">sb</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:13">sb_cc</name></name> <operator pos:start="53:15" pos:end="53:15">=</operator>

        <call pos:start="55:9" pos:end="57:57"><name pos:start="55:9" pos:end="55:16">snprintf</name><argument_list pos:start="55:17" pos:end="57:57">(<argument pos:start="55:18" pos:end="55:28"><expr pos:start="55:18" pos:end="55:28"><name pos:start="55:18" pos:end="55:28"><name pos:start="55:18" pos:end="55:19">sb</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:28">sb_wptr</name></name></expr></argument>, <argument pos:start="55:31" pos:end="55:74"><expr pos:start="55:31" pos:end="55:74"><name pos:start="55:31" pos:end="55:44"><name pos:start="55:31" pos:end="55:32">sb</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:44">sb_datalen</name></name> <operator pos:start="55:46" pos:end="55:46">-</operator> <operator pos:start="55:48" pos:end="55:48">(</operator><name pos:start="55:49" pos:end="55:59"><name pos:start="55:49" pos:end="55:50">sb</name><operator pos:start="55:51" pos:end="55:52">-&gt;</operator><name pos:start="55:53" pos:end="55:59">sb_wptr</name></name> <operator pos:start="55:61" pos:end="55:61">-</operator> <name pos:start="55:63" pos:end="55:73"><name pos:start="55:63" pos:end="55:64">sb</name><operator pos:start="55:65" pos:end="55:66">-&gt;</operator><name pos:start="55:67" pos:end="55:73">sb_data</name></name><operator pos:start="55:74" pos:end="55:74">)</operator></expr></argument>,

                 <argument pos:start="57:18" pos:end="57:56"><expr pos:start="57:18" pos:end="57:56"><literal type="string" pos:start="57:18" pos:end="57:56">"Error: No application configured.\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:29"><expr pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:6">sb</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:15">sb_wptr</name></name> <operator pos:start="59:17" pos:end="59:18">+=</operator> <name pos:start="59:20" pos:end="59:28"><name pos:start="59:20" pos:end="59:21">sb</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:28">sb_cc</name></name></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
