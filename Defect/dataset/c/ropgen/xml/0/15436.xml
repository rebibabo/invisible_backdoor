<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15436.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">add_rule</name><parameter_list pos:start="1:20" pos:end="1:49">(<parameter pos:start="1:21" pos:end="1:34"><decl pos:start="1:21" pos:end="1:34"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:28">QemuOpts</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:34">opts</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">add_rule_data</name></name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:27">d</name> <init pos:start="5:29" pos:end="5:36">= <expr pos:start="5:31" pos:end="5:36"><name pos:start="5:31" pos:end="5:36">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">BDRVBlkdebugState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:28">d</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:31">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name><modifier pos:start="9:15" pos:end="9:15">*</modifier></type> <name pos:start="9:17" pos:end="9:26">event_name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">BlkDebugEvent</name></type> <name pos:start="11:19" pos:end="11:23">event</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:23">BlkdebugRule</name></name> <modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:29">rule</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:43">/* Find the right event for the rule */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:14">event_name</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:44"><name pos:start="19:18" pos:end="19:29">qemu_opt_get</name><argument_list pos:start="19:30" pos:end="19:44">(<argument pos:start="19:31" pos:end="19:34"><expr pos:start="19:31" pos:end="19:34"><name pos:start="19:31" pos:end="19:34">opts</name></expr></argument>, <argument pos:start="19:37" pos:end="19:43"><expr pos:start="19:37" pos:end="19:43"><literal type="string" pos:start="19:37" pos:end="19:43">"event"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:65">(<expr pos:start="21:9" pos:end="21:64"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:19">event_name</name> <operator pos:start="21:21" pos:end="21:22">||</operator> <call pos:start="21:24" pos:end="21:60"><name pos:start="21:24" pos:end="21:40">get_event_by_name</name><argument_list pos:start="21:41" pos:end="21:60">(<argument pos:start="21:42" pos:end="21:51"><expr pos:start="21:42" pos:end="21:51"><name pos:start="21:42" pos:end="21:51">event_name</name></expr></argument>, <argument pos:start="21:54" pos:end="21:59"><expr pos:start="21:54" pos:end="21:59"><operator pos:start="21:54" pos:end="21:54">&amp;</operator><name pos:start="21:55" pos:end="21:59">event</name></expr></argument>)</argument_list></call> <operator pos:start="21:62" pos:end="21:62">&lt;</operator> <literal type="number" pos:start="21:64" pos:end="21:64">0</literal></expr>)</condition> <block pos:start="21:67" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:47">/* Set attributes common for all actions */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:8">rule</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:35"><name pos:start="31:12" pos:end="31:20">g_malloc0</name><argument_list pos:start="31:21" pos:end="31:35">(<argument pos:start="31:22" pos:end="31:34"><expr pos:start="31:22" pos:end="31:34"><sizeof pos:start="31:22" pos:end="31:34">sizeof<argument_list pos:start="31:28" pos:end="31:34">(<argument pos:start="31:29" pos:end="31:33"><expr pos:start="31:29" pos:end="31:33"><operator pos:start="31:29" pos:end="31:29">*</operator><name pos:start="31:30" pos:end="31:33">rule</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="41:6"><expr pos:start="33:5" pos:end="41:5"><operator pos:start="33:5" pos:end="33:5">*</operator><name pos:start="33:6" pos:end="33:9">rule</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <operator pos:start="33:13" pos:end="33:13">(</operator>struct <name pos:start="33:21" pos:end="33:32">BlkdebugRule</name><operator pos:start="33:33" pos:end="33:33">)</operator> <block pos:start="33:35" pos:end="41:5">{

        <expr pos:start="35:9" pos:end="35:23"><operator pos:start="35:9" pos:end="35:9">.</operator><name pos:start="35:10" pos:end="35:14">event</name>  <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:23">event</name></expr>,

        <expr pos:start="37:9" pos:end="37:27"><operator pos:start="37:9" pos:end="37:9">.</operator><name pos:start="37:10" pos:end="37:15">action</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:27"><name pos:start="37:19" pos:end="37:19">d</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:27">action</name></name></expr>,

        <expr pos:start="39:9" pos:end="39:55"><operator pos:start="39:9" pos:end="39:9">.</operator><name pos:start="39:10" pos:end="39:14">state</name>  <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:55"><name pos:start="39:19" pos:end="39:37">qemu_opt_get_number</name><argument_list pos:start="39:38" pos:end="39:55">(<argument pos:start="39:39" pos:end="39:42"><expr pos:start="39:39" pos:end="39:42"><name pos:start="39:39" pos:end="39:42">opts</name></expr></argument>, <argument pos:start="39:45" pos:end="39:51"><expr pos:start="39:45" pos:end="39:51"><literal type="string" pos:start="39:45" pos:end="39:51">"state"</literal></expr></argument>, <argument pos:start="39:54" pos:end="39:54"><expr pos:start="39:54" pos:end="39:54"><literal type="number" pos:start="39:54" pos:end="39:54">0</literal></expr></argument>)</argument_list></call></expr>,

    }</block></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:39">/* Parse action-specific options */</comment>

    <switch pos:start="47:5" pos:end="83:5">switch <condition pos:start="47:12" pos:end="47:22">(<expr pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:13">d</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:21">action</name></name></expr>)</condition> <block pos:start="47:24" pos:end="83:5">{<block_content pos:start="49:5" pos:end="81:14">

    <case pos:start="49:5" pos:end="49:29">case <expr pos:start="49:10" pos:end="49:28"><name pos:start="49:10" pos:end="49:28">ACTION_INJECT_ERROR</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:77"><expr pos:start="51:9" pos:end="51:76"><name pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:12">rule</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:21">options</name><operator pos:start="51:22" pos:end="51:22">.</operator><name pos:start="51:23" pos:end="51:28">inject</name><operator pos:start="51:29" pos:end="51:29">.</operator><name pos:start="51:30" pos:end="51:34">error</name></name> <operator pos:start="51:36" pos:end="51:36">=</operator> <call pos:start="51:38" pos:end="51:76"><name pos:start="51:38" pos:end="51:56">qemu_opt_get_number</name><argument_list pos:start="51:57" pos:end="51:76">(<argument pos:start="51:58" pos:end="51:61"><expr pos:start="51:58" pos:end="51:61"><name pos:start="51:58" pos:end="51:61">opts</name></expr></argument>, <argument pos:start="51:64" pos:end="51:70"><expr pos:start="51:64" pos:end="51:70"><literal type="string" pos:start="51:64" pos:end="51:70">"errno"</literal></expr></argument>, <argument pos:start="51:73" pos:end="51:75"><expr pos:start="51:73" pos:end="51:75"><name pos:start="51:73" pos:end="51:75">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:72"><expr pos:start="53:9" pos:end="53:71"><name pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:12">rule</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:21">options</name><operator pos:start="53:22" pos:end="53:22">.</operator><name pos:start="53:23" pos:end="53:28">inject</name><operator pos:start="53:29" pos:end="53:29">.</operator><name pos:start="53:30" pos:end="53:33">once</name></name>  <operator pos:start="53:36" pos:end="53:36">=</operator> <call pos:start="53:38" pos:end="53:71"><name pos:start="53:38" pos:end="53:54">qemu_opt_get_bool</name><argument_list pos:start="53:55" pos:end="53:71">(<argument pos:start="53:56" pos:end="53:59"><expr pos:start="53:56" pos:end="53:59"><name pos:start="53:56" pos:end="53:59">opts</name></expr></argument>, <argument pos:start="53:62" pos:end="53:67"><expr pos:start="53:62" pos:end="53:67"><literal type="string" pos:start="53:62" pos:end="53:67">"once"</literal></expr></argument>, <argument pos:start="53:70" pos:end="53:70"><expr pos:start="53:70" pos:end="53:70"><literal type="number" pos:start="53:70" pos:end="53:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="57:54"><expr pos:start="55:9" pos:end="57:53"><name pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:12">rule</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:21">options</name><operator pos:start="55:22" pos:end="55:22">.</operator><name pos:start="55:23" pos:end="55:28">inject</name><operator pos:start="55:29" pos:end="55:29">.</operator><name pos:start="55:30" pos:end="55:40">immediately</name></name> <operator pos:start="55:42" pos:end="55:42">=</operator>

            <call pos:start="57:13" pos:end="57:53"><name pos:start="57:13" pos:end="57:29">qemu_opt_get_bool</name><argument_list pos:start="57:30" pos:end="57:53">(<argument pos:start="57:31" pos:end="57:34"><expr pos:start="57:31" pos:end="57:34"><name pos:start="57:31" pos:end="57:34">opts</name></expr></argument>, <argument pos:start="57:37" pos:end="57:49"><expr pos:start="57:37" pos:end="57:49"><literal type="string" pos:start="57:37" pos:end="57:49">"immediately"</literal></expr></argument>, <argument pos:start="57:52" pos:end="57:52"><expr pos:start="57:52" pos:end="57:52"><literal type="number" pos:start="57:52" pos:end="57:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:78"><expr pos:start="59:9" pos:end="59:77"><name pos:start="59:9" pos:end="59:35"><name pos:start="59:9" pos:end="59:12">rule</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:21">options</name><operator pos:start="59:22" pos:end="59:22">.</operator><name pos:start="59:23" pos:end="59:28">inject</name><operator pos:start="59:29" pos:end="59:29">.</operator><name pos:start="59:30" pos:end="59:35">sector</name></name> <operator pos:start="59:37" pos:end="59:37">=</operator> <call pos:start="59:39" pos:end="59:77"><name pos:start="59:39" pos:end="59:57">qemu_opt_get_number</name><argument_list pos:start="59:58" pos:end="59:77">(<argument pos:start="59:59" pos:end="59:62"><expr pos:start="59:59" pos:end="59:62"><name pos:start="59:59" pos:end="59:62">opts</name></expr></argument>, <argument pos:start="59:65" pos:end="59:72"><expr pos:start="59:65" pos:end="59:72"><literal type="string" pos:start="59:65" pos:end="59:72">"sector"</literal></expr></argument>, <argument pos:start="59:75" pos:end="59:76"><expr pos:start="59:75" pos:end="59:76"><operator pos:start="59:75" pos:end="59:75">-</operator><literal type="number" pos:start="59:76" pos:end="59:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>



    <case pos:start="65:5" pos:end="65:26">case <expr pos:start="65:10" pos:end="65:25"><name pos:start="65:10" pos:end="65:25">ACTION_SET_STATE</name></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="69:54"><expr pos:start="67:9" pos:end="69:53"><name pos:start="67:9" pos:end="67:41"><name pos:start="67:9" pos:end="67:12">rule</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:21">options</name><operator pos:start="67:22" pos:end="67:22">.</operator><name pos:start="67:23" pos:end="67:31">set_state</name><operator pos:start="67:32" pos:end="67:32">.</operator><name pos:start="67:33" pos:end="67:41">new_state</name></name> <operator pos:start="67:43" pos:end="67:43">=</operator>

            <call pos:start="69:13" pos:end="69:53"><name pos:start="69:13" pos:end="69:31">qemu_opt_get_number</name><argument_list pos:start="69:32" pos:end="69:53">(<argument pos:start="69:33" pos:end="69:36"><expr pos:start="69:33" pos:end="69:36"><name pos:start="69:33" pos:end="69:36">opts</name></expr></argument>, <argument pos:start="69:39" pos:end="69:49"><expr pos:start="69:39" pos:end="69:49"><literal type="string" pos:start="69:39" pos:end="69:49">"new_state"</literal></expr></argument>, <argument pos:start="69:52" pos:end="69:52"><expr pos:start="69:52" pos:end="69:52"><literal type="number" pos:start="69:52" pos:end="69:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>



    <case pos:start="75:5" pos:end="75:24">case <expr pos:start="75:10" pos:end="75:23"><name pos:start="75:10" pos:end="75:23">ACTION_SUSPEND</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="79:48"><expr pos:start="77:9" pos:end="79:47"><name pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:12">rule</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:21">options</name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:29">suspend</name><operator pos:start="77:30" pos:end="77:30">.</operator><name pos:start="77:31" pos:end="77:33">tag</name></name> <operator pos:start="77:35" pos:end="77:35">=</operator>

            <call pos:start="79:13" pos:end="79:47"><name pos:start="79:13" pos:end="79:20">g_strdup</name><argument_list pos:start="79:21" pos:end="79:47">(<argument pos:start="79:22" pos:end="79:46"><expr pos:start="79:22" pos:end="79:46"><call pos:start="79:22" pos:end="79:46"><name pos:start="79:22" pos:end="79:33">qemu_opt_get</name><argument_list pos:start="79:34" pos:end="79:46">(<argument pos:start="79:35" pos:end="79:38"><expr pos:start="79:35" pos:end="79:38"><name pos:start="79:35" pos:end="79:38">opts</name></expr></argument>, <argument pos:start="79:41" pos:end="79:45"><expr pos:start="79:41" pos:end="79:45"><literal type="string" pos:start="79:41" pos:end="79:45">"tag"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    </block_content>}</block></switch><empty_stmt pos:start="83:6" pos:end="83:6">;</empty_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:22">/* Add the rule */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:52"><expr pos:start="89:5" pos:end="89:51"><call pos:start="89:5" pos:end="89:51"><name pos:start="89:5" pos:end="89:21">QLIST_INSERT_HEAD</name><argument_list pos:start="89:22" pos:end="89:51">(<argument pos:start="89:23" pos:end="89:38"><expr pos:start="89:23" pos:end="89:38"><operator pos:start="89:23" pos:end="89:23">&amp;</operator><name pos:start="89:24" pos:end="89:38"><name pos:start="89:24" pos:end="89:24">s</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:31">rules</name><index pos:start="89:32" pos:end="89:38">[<expr pos:start="89:33" pos:end="89:37"><name pos:start="89:33" pos:end="89:37">event</name></expr>]</index></name></expr></argument>, <argument pos:start="89:41" pos:end="89:44"><expr pos:start="89:41" pos:end="89:44"><name pos:start="89:41" pos:end="89:44">rule</name></expr></argument>, <argument pos:start="89:47" pos:end="89:50"><expr pos:start="89:47" pos:end="89:50"><name pos:start="89:47" pos:end="89:50">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
