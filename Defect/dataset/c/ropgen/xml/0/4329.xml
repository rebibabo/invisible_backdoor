<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4329.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">setup_frame</name><parameter_list pos:start="1:24" pos:end="3:64">(<parameter pos:start="1:25" pos:end="1:31"><decl pos:start="1:25" pos:end="1:31"><type pos:start="1:25" pos:end="1:31"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:31">sig</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:60"><decl pos:start="1:34" pos:end="1:60"><type pos:start="1:34" pos:end="1:60"><name pos:start="1:34" pos:end="1:56"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:56">target_sigaction</name></name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">ka</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><name pos:start="3:25" pos:end="3:39">target_sigset_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">set</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:63"><decl pos:start="3:47" pos:end="3:63"><type pos:start="3:47" pos:end="3:63"><name pos:start="3:47" pos:end="3:57">CPUSH4State</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:63">regs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="99:1">{<block_content pos:start="7:5" pos:end="97:30">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:26">target_sigframe</name></name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:33">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">abi_ulong</name></type> <name pos:start="9:15" pos:end="9:24">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">err</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">signal</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:67"><expr pos:start="19:5" pos:end="19:66"><name pos:start="19:5" pos:end="19:14">frame_addr</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:66"><name pos:start="19:18" pos:end="19:29">get_sigframe</name><argument_list pos:start="19:30" pos:end="19:66">(<argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><name pos:start="19:31" pos:end="19:32">ka</name></expr></argument>, <argument pos:start="19:35" pos:end="19:49"><expr pos:start="19:35" pos:end="19:49"><name pos:start="19:35" pos:end="19:49"><name pos:start="19:35" pos:end="19:38">regs</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:45">gregs</name><index pos:start="19:46" pos:end="19:49">[<expr pos:start="19:47" pos:end="19:48"><literal type="number" pos:start="19:47" pos:end="19:48">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="19:52" pos:end="19:65"><expr pos:start="19:52" pos:end="19:65"><sizeof pos:start="19:52" pos:end="19:65">sizeof<argument_list pos:start="19:58" pos:end="19:65">(<argument pos:start="19:59" pos:end="19:64"><expr pos:start="19:59" pos:end="19:64"><operator pos:start="19:59" pos:end="19:59">*</operator><name pos:start="19:60" pos:end="19:64">frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:26"><if pos:start="21:5" pos:end="23:26">if <condition pos:start="21:8" pos:end="21:62">(<expr pos:start="21:9" pos:end="21:61"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:61"><name pos:start="21:10" pos:end="21:25">lock_user_struct</name><argument_list pos:start="21:26" pos:end="21:61">(<argument pos:start="21:27" pos:end="21:38"><expr pos:start="21:27" pos:end="21:38"><name pos:start="21:27" pos:end="21:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="21:41" pos:end="21:45"><expr pos:start="21:41" pos:end="21:45"><name pos:start="21:41" pos:end="21:45">frame</name></expr></argument>, <argument pos:start="21:48" pos:end="21:57"><expr pos:start="21:48" pos:end="21:57"><name pos:start="21:48" pos:end="21:57">frame_addr</name></expr></argument>, <argument pos:start="21:60" pos:end="21:60"><expr pos:start="21:60" pos:end="21:60"><literal type="number" pos:start="21:60" pos:end="21:60">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:26"><block_content pos:start="23:9" pos:end="23:26">

	<goto pos:start="23:9" pos:end="23:26">goto <name pos:start="23:14" pos:end="23:25">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:10">signal</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:41"><name pos:start="27:14" pos:end="27:36">current_exec_domain_sig</name><argument_list pos:start="27:37" pos:end="27:41">(<argument pos:start="27:38" pos:end="27:40"><expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:40">sig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:59"><expr pos:start="31:5" pos:end="31:58"><name pos:start="31:5" pos:end="31:7">err</name> <operator pos:start="31:9" pos:end="31:10">|=</operator> <call pos:start="31:12" pos:end="31:58"><name pos:start="31:12" pos:end="31:27">setup_sigcontext</name><argument_list pos:start="31:28" pos:end="31:58">(<argument pos:start="31:29" pos:end="31:38"><expr pos:start="31:29" pos:end="31:38"><operator pos:start="31:29" pos:end="31:29">&amp;</operator><name pos:start="31:30" pos:end="31:38"><name pos:start="31:30" pos:end="31:34">frame</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:38">sc</name></name></expr></argument>, <argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><name pos:start="31:41" pos:end="31:44">regs</name></expr></argument>, <argument pos:start="31:47" pos:end="31:57"><expr pos:start="31:47" pos:end="31:57"><name pos:start="31:47" pos:end="31:57"><name pos:start="31:47" pos:end="31:49">set</name><operator pos:start="31:50" pos:end="31:51">-&gt;</operator><name pos:start="31:52" pos:end="31:54">sig</name><index pos:start="31:55" pos:end="31:57">[<expr pos:start="31:56" pos:end="31:56"><literal type="number" pos:start="31:56" pos:end="31:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="39:5">for <control pos:start="35:9" pos:end="35:47">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:42"><expr pos:start="35:17" pos:end="35:41"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:37">TARGET_NSIG_WORDS</name> <operator pos:start="35:39" pos:end="35:39">-</operator> <literal type="number" pos:start="35:41" pos:end="35:41">1</literal></expr>;</condition> <incr pos:start="35:44" pos:end="35:46"><expr pos:start="35:44" pos:end="35:46"><name pos:start="35:44" pos:end="35:44">i</name><operator pos:start="35:45" pos:end="35:46">++</operator></expr></incr>)</control> <block pos:start="35:49" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:58">

        <expr_stmt pos:start="37:9" pos:end="37:58"><expr pos:start="37:9" pos:end="37:57"><call pos:start="37:9" pos:end="37:57"><name pos:start="37:9" pos:end="37:18">__put_user</name><argument_list pos:start="37:19" pos:end="37:57">(<argument pos:start="37:20" pos:end="37:34"><expr pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:22">set</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:27">sig</name><index pos:start="37:28" pos:end="37:34">[<expr pos:start="37:29" pos:end="37:33"><name pos:start="37:29" pos:end="37:29">i</name> <operator pos:start="37:31" pos:end="37:31">+</operator> <literal type="number" pos:start="37:33" pos:end="37:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="37:37" pos:end="37:56"><expr pos:start="37:37" pos:end="37:56"><operator pos:start="37:37" pos:end="37:37">&amp;</operator><name pos:start="37:38" pos:end="37:56"><name pos:start="37:38" pos:end="37:42">frame</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:53">extramask</name><index pos:start="37:54" pos:end="37:56">[<expr pos:start="37:55" pos:end="37:55"><name pos:start="37:55" pos:end="37:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="43:5" pos:end="45:32">/* Set up to return from userspace.  If provided, use a stub

       already in userspace.  */</comment>

    <if_stmt pos:start="47:5" pos:end="63:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:42">(<expr pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:10">ka</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:20">sa_flags</name></name> <operator pos:start="47:22" pos:end="47:22">&amp;</operator> <name pos:start="47:24" pos:end="47:41">TARGET_SA_RESTORER</name></expr>)</condition> <block pos:start="47:44" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:51">

        <expr_stmt pos:start="49:9" pos:end="49:51"><expr pos:start="49:9" pos:end="49:50"><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:12">regs</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:16">pr</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <operator pos:start="49:20" pos:end="49:20">(</operator><name pos:start="49:21" pos:end="49:28">unsigned</name> <name pos:start="49:30" pos:end="49:33">long</name><operator pos:start="49:34" pos:end="49:34">)</operator> <name pos:start="49:36" pos:end="49:50"><name pos:start="49:36" pos:end="49:37">ka</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:50">sa_restorer</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="63:5">else <block pos:start="51:12" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:50">

        <comment type="block" pos:start="53:9" pos:end="53:61">/* Generate return code (system call to sigreturn) */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><call pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:18">__put_user</name><argument_list pos:start="55:19" pos:end="55:47">(<argument pos:start="55:20" pos:end="55:26"><expr pos:start="55:20" pos:end="55:26"><call pos:start="55:20" pos:end="55:26"><name pos:start="55:20" pos:end="55:23">MOVW</name><argument_list pos:start="55:24" pos:end="55:26">(<argument pos:start="55:25" pos:end="55:25"><expr pos:start="55:25" pos:end="55:25"><literal type="number" pos:start="55:25" pos:end="55:25">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:29" pos:end="55:46"><expr pos:start="55:29" pos:end="55:46"><operator pos:start="55:29" pos:end="55:29">&amp;</operator><name pos:start="55:30" pos:end="55:46"><name pos:start="55:30" pos:end="55:34">frame</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:43">retcode</name><index pos:start="55:44" pos:end="55:46">[<expr pos:start="55:45" pos:end="55:45"><literal type="number" pos:start="55:45" pos:end="55:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:51"><expr pos:start="57:9" pos:end="57:50"><call pos:start="57:9" pos:end="57:50"><name pos:start="57:9" pos:end="57:18">__put_user</name><argument_list pos:start="57:19" pos:end="57:50">(<argument pos:start="57:20" pos:end="57:29"><expr pos:start="57:20" pos:end="57:29"><name pos:start="57:20" pos:end="57:29">TRAP_NOARG</name></expr></argument>, <argument pos:start="57:32" pos:end="57:49"><expr pos:start="57:32" pos:end="57:49"><operator pos:start="57:32" pos:end="57:32">&amp;</operator><name pos:start="57:33" pos:end="57:49"><name pos:start="57:33" pos:end="57:37">frame</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:46">retcode</name><index pos:start="57:47" pos:end="57:49">[<expr pos:start="57:48" pos:end="57:48"><literal type="number" pos:start="57:48" pos:end="57:48">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:62"><expr pos:start="59:9" pos:end="59:61"><call pos:start="59:9" pos:end="59:61"><name pos:start="59:9" pos:end="59:18">__put_user</name><argument_list pos:start="59:19" pos:end="59:61">(<argument pos:start="59:20" pos:end="59:40"><expr pos:start="59:20" pos:end="59:40"><operator pos:start="59:20" pos:end="59:20">(</operator><name pos:start="59:21" pos:end="59:39">TARGET_NR_sigreturn</name><operator pos:start="59:40" pos:end="59:40">)</operator></expr></argument>, <argument pos:start="59:43" pos:end="59:60"><expr pos:start="59:43" pos:end="59:60"><operator pos:start="59:43" pos:end="59:43">&amp;</operator><name pos:start="59:44" pos:end="59:60"><name pos:start="59:44" pos:end="59:48">frame</name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:57">retcode</name><index pos:start="59:58" pos:end="59:60">[<expr pos:start="59:59" pos:end="59:59"><literal type="number" pos:start="59:59" pos:end="59:59">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:49"><name pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:12">regs</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:16">pr</name></name> <operator pos:start="61:18" pos:end="61:18">=</operator> <operator pos:start="61:20" pos:end="61:20">(</operator><name pos:start="61:21" pos:end="61:28">unsigned</name> <name pos:start="61:30" pos:end="61:33">long</name><operator pos:start="61:34" pos:end="61:34">)</operator> <name pos:start="61:36" pos:end="61:49"><name pos:start="61:36" pos:end="61:40">frame</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:49">retcode</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="67:5" pos:end="69:26"><if pos:start="67:5" pos:end="69:26">if <condition pos:start="67:8" pos:end="67:12">(<expr pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">err</name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:26"><block_content pos:start="69:9" pos:end="69:26">

        <goto pos:start="69:9" pos:end="69:26">goto <name pos:start="69:14" pos:end="69:25">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:45">/* Set up registers for signal handler */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:33"><expr pos:start="75:5" pos:end="75:32"><name pos:start="75:5" pos:end="75:19"><name pos:start="75:5" pos:end="75:8">regs</name><operator pos:start="75:9" pos:end="75:10">-&gt;</operator><name pos:start="75:11" pos:end="75:15">gregs</name><index pos:start="75:16" pos:end="75:19">[<expr pos:start="75:17" pos:end="75:18"><literal type="number" pos:start="75:17" pos:end="75:18">15</literal></expr>]</index></name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:32">frame_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:28"><expr pos:start="77:5" pos:end="77:27"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:8">regs</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:15">gregs</name><index pos:start="77:16" pos:end="77:18">[<expr pos:start="77:17" pos:end="77:17"><literal type="number" pos:start="77:17" pos:end="77:17">4</literal></expr>]</index></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:27">signal</name></expr>;</expr_stmt> <comment type="block" pos:start="77:30" pos:end="77:57">/* Arg for signal handler */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:23"><expr pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:18"><name pos:start="79:5" pos:end="79:8">regs</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:15">gregs</name><index pos:start="79:16" pos:end="79:18">[<expr pos:start="79:17" pos:end="79:17"><literal type="number" pos:start="79:17" pos:end="79:17">5</literal></expr>]</index></name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:64"><expr pos:start="81:5" pos:end="81:63"><name pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:8">regs</name><operator pos:start="81:9" pos:end="81:10">-&gt;</operator><name pos:start="81:11" pos:end="81:15">gregs</name><index pos:start="81:16" pos:end="81:18">[<expr pos:start="81:17" pos:end="81:17"><literal type="number" pos:start="81:17" pos:end="81:17">6</literal></expr>]</index></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:31">frame_addr</name> <operator pos:start="81:33" pos:end="81:34">+=</operator> <call pos:start="81:36" pos:end="81:63"><name pos:start="81:36" pos:end="81:43">offsetof</name><argument_list pos:start="81:44" pos:end="81:63">(<argument pos:start="81:45" pos:end="81:58"><expr pos:start="81:45" pos:end="81:58"><call pos:start="81:45" pos:end="81:58"><name pos:start="81:45" pos:end="81:50">typeof</name><argument_list pos:start="81:51" pos:end="81:58">(<argument pos:start="81:52" pos:end="81:57"><expr pos:start="81:52" pos:end="81:57"><operator pos:start="81:52" pos:end="81:52">*</operator><name pos:start="81:53" pos:end="81:57">frame</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:61" pos:end="81:62"><expr pos:start="81:61" pos:end="81:62"><name pos:start="81:61" pos:end="81:62">sc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:47"><expr pos:start="83:5" pos:end="83:46"><name pos:start="83:5" pos:end="83:12"><name pos:start="83:5" pos:end="83:8">regs</name><operator pos:start="83:9" pos:end="83:10">-&gt;</operator><name pos:start="83:11" pos:end="83:12">pc</name></name> <operator pos:start="83:14" pos:end="83:14">=</operator> <operator pos:start="83:16" pos:end="83:16">(</operator><name pos:start="83:17" pos:end="83:24">unsigned</name> <name pos:start="83:26" pos:end="83:29">long</name><operator pos:start="83:30" pos:end="83:30">)</operator> <name pos:start="83:32" pos:end="83:46"><name pos:start="83:32" pos:end="83:33">ka</name><operator pos:start="83:34" pos:end="83:35">-&gt;</operator><name pos:start="83:36" pos:end="83:46">_sa_handler</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:45"><expr pos:start="87:5" pos:end="87:44"><call pos:start="87:5" pos:end="87:44"><name pos:start="87:5" pos:end="87:22">unlock_user_struct</name><argument_list pos:start="87:23" pos:end="87:44">(<argument pos:start="87:24" pos:end="87:28"><expr pos:start="87:24" pos:end="87:28"><name pos:start="87:24" pos:end="87:28">frame</name></expr></argument>, <argument pos:start="87:31" pos:end="87:40"><expr pos:start="87:31" pos:end="87:40"><name pos:start="87:31" pos:end="87:40">frame_addr</name></expr></argument>, <argument pos:start="87:43" pos:end="87:43"><expr pos:start="87:43" pos:end="87:43"><literal type="number" pos:start="87:43" pos:end="87:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:11">return;</return>



<label pos:start="93:1" pos:end="93:13"><name pos:start="93:1" pos:end="93:12">give_sigsegv</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:45"><expr pos:start="95:5" pos:end="95:44"><call pos:start="95:5" pos:end="95:44"><name pos:start="95:5" pos:end="95:22">unlock_user_struct</name><argument_list pos:start="95:23" pos:end="95:44">(<argument pos:start="95:24" pos:end="95:28"><expr pos:start="95:24" pos:end="95:28"><name pos:start="95:24" pos:end="95:28">frame</name></expr></argument>, <argument pos:start="95:31" pos:end="95:40"><expr pos:start="95:31" pos:end="95:40"><name pos:start="95:31" pos:end="95:40">frame_addr</name></expr></argument>, <argument pos:start="95:43" pos:end="95:43"><expr pos:start="95:43" pos:end="95:43"><literal type="number" pos:start="95:43" pos:end="95:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:30"><expr pos:start="97:5" pos:end="97:29"><call pos:start="97:5" pos:end="97:29"><name pos:start="97:5" pos:end="97:13">force_sig</name><argument_list pos:start="97:14" pos:end="97:29">(<argument pos:start="97:15" pos:end="97:28"><expr pos:start="97:15" pos:end="97:28"><name pos:start="97:15" pos:end="97:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
