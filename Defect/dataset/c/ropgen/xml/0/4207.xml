<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4207.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">monitor_check_qmp_args</name><parameter_list pos:start="1:34" pos:end="1:68">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:49">mon_cmd_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">cmd</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:67"><decl pos:start="1:57" pos:end="1:67"><type pos:start="1:57" pos:end="1:67"><name pos:start="1:57" pos:end="1:61">QDict</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">args</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">CmdArgs</name></type> <name pos:start="9:13" pos:end="9:20">cmd_args</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">QemuOptsList</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:27">opts_list</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:31">(<expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">cmd</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:22">args_type</name></name> <operator pos:start="15:24" pos:end="15:25">==</operator> <name pos:start="15:27" pos:end="15:30">NULL</name></expr>)</condition> <block pos:start="15:33" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:48">

        <return pos:start="17:9" pos:end="17:48">return <expr pos:start="17:16" pos:end="17:47"><operator pos:start="17:16" pos:end="17:16">(</operator><ternary pos:start="17:17" pos:end="17:46"><condition pos:start="17:17" pos:end="17:39"><expr pos:start="17:17" pos:end="17:37"><call pos:start="17:17" pos:end="17:32"><name pos:start="17:17" pos:end="17:26">qdict_size</name><argument_list pos:start="17:27" pos:end="17:32">(<argument pos:start="17:28" pos:end="17:31"><expr pos:start="17:28" pos:end="17:31"><name pos:start="17:28" pos:end="17:31">args</name></expr></argument>)</argument_list></call> <operator pos:start="17:34" pos:end="17:35">==</operator> <literal type="number" pos:start="17:37" pos:end="17:37">0</literal></expr> ?</condition><then pos:start="17:41" pos:end="17:41"> <expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">0</literal></expr> </then><else pos:start="17:43" pos:end="17:46">: <expr pos:start="17:45" pos:end="17:46"><operator pos:start="17:45" pos:end="17:45">-</operator><literal type="number" pos:start="17:46" pos:end="17:46">1</literal></expr></else></ternary><operator pos:start="17:47" pos:end="17:47">)</operator></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:12"><expr pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:7">err</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <literal type="number" pos:start="23:11" pos:end="23:11">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><call pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:17">cmd_args_init</name><argument_list pos:start="25:18" pos:end="25:28">(<argument pos:start="25:19" pos:end="25:27"><expr pos:start="25:19" pos:end="25:27"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:27">cmd_args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:13">opts_list</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:20">NULL</name></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="101:5">for <control pos:start="31:9" pos:end="31:34">(<init pos:start="31:10" pos:end="31:28"><expr pos:start="31:10" pos:end="31:27"><name pos:start="31:10" pos:end="31:10">p</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:27"><name pos:start="31:14" pos:end="31:16">cmd</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:27">args_type</name></name></expr>;</init><condition pos:start="31:29" pos:end="31:29">;</condition> <incr pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:31">p</name><operator pos:start="31:32" pos:end="31:33">++</operator></expr></incr>)</control> <block pos:start="31:36" pos:end="101:5">{<block_content pos:start="33:9" pos:end="99:9">

        <if_stmt pos:start="33:9" pos:end="91:9"><if pos:start="33:9" pos:end="87:9">if <condition pos:start="33:12" pos:end="33:22">(<expr pos:start="33:13" pos:end="33:21"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:14">p</name> <operator pos:start="33:16" pos:end="33:17">==</operator> <literal type="char" pos:start="33:19" pos:end="33:21">':'</literal></expr>)</condition> <block pos:start="33:24" pos:end="87:9">{<block_content pos:start="35:13" pos:end="85:13">

            <expr_stmt pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:20">cmd_args</name><operator pos:start="35:21" pos:end="35:21">.</operator><name pos:start="35:22" pos:end="35:25">type</name></name> <operator pos:start="35:27" pos:end="35:27">=</operator> <operator pos:start="35:29" pos:end="35:29">*</operator><operator pos:start="35:30" pos:end="35:31">++</operator><name pos:start="35:32" pos:end="35:32">p</name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:16"><expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:13">p</name><operator pos:start="37:14" pos:end="37:15">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="57:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:37">(<expr pos:start="39:17" pos:end="39:36"><name pos:start="39:17" pos:end="39:29"><name pos:start="39:17" pos:end="39:24">cmd_args</name><operator pos:start="39:25" pos:end="39:25">.</operator><name pos:start="39:26" pos:end="39:29">type</name></name> <operator pos:start="39:31" pos:end="39:32">==</operator> <literal type="char" pos:start="39:34" pos:end="39:36">'-'</literal></expr>)</condition> <block pos:start="39:39" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:38">

                <expr_stmt pos:start="41:17" pos:end="41:37"><expr pos:start="41:17" pos:end="41:36"><name pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:24">cmd_args</name><operator pos:start="41:25" pos:end="41:25">.</operator><name pos:start="41:26" pos:end="41:29">flag</name></name> <operator pos:start="41:31" pos:end="41:31">=</operator> <operator pos:start="41:33" pos:end="41:33">*</operator><name pos:start="41:34" pos:end="41:34">p</name><operator pos:start="41:35" pos:end="41:36">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:38"><expr pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:24">cmd_args</name><operator pos:start="43:25" pos:end="43:25">.</operator><name pos:start="43:26" pos:end="43:33">optional</name></name> <operator pos:start="43:35" pos:end="43:35">=</operator> <literal type="number" pos:start="43:37" pos:end="43:37">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="45:15" pos:end="51:13">else if <condition pos:start="45:23" pos:end="45:44">(<expr pos:start="45:24" pos:end="45:43"><name pos:start="45:24" pos:end="45:36"><name pos:start="45:24" pos:end="45:31">cmd_args</name><operator pos:start="45:32" pos:end="45:32">.</operator><name pos:start="45:33" pos:end="45:36">type</name></name> <operator pos:start="45:38" pos:end="45:39">==</operator> <literal type="char" pos:start="45:41" pos:end="45:43">'O'</literal></expr>)</condition> <block pos:start="45:46" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:34">

                <expr_stmt pos:start="47:17" pos:end="47:75"><expr pos:start="47:17" pos:end="47:74"><name pos:start="47:17" pos:end="47:25">opts_list</name> <operator pos:start="47:27" pos:end="47:27">=</operator> <call pos:start="47:29" pos:end="47:74"><name pos:start="47:29" pos:end="47:42">qemu_find_opts</name><argument_list pos:start="47:43" pos:end="47:74">(<argument pos:start="47:44" pos:end="47:73"><expr pos:start="47:44" pos:end="47:73"><call pos:start="47:44" pos:end="47:73"><name pos:start="47:44" pos:end="47:58">qstring_get_str</name><argument_list pos:start="47:59" pos:end="47:73">(<argument pos:start="47:60" pos:end="47:72"><expr pos:start="47:60" pos:end="47:72"><name pos:start="47:60" pos:end="47:72"><name pos:start="47:60" pos:end="47:67">cmd_args</name><operator pos:start="47:68" pos:end="47:68">.</operator><name pos:start="47:69" pos:end="47:72">name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:34"><expr pos:start="49:17" pos:end="49:33"><call pos:start="49:17" pos:end="49:33"><name pos:start="49:17" pos:end="49:22">assert</name><argument_list pos:start="49:23" pos:end="49:33">(<argument pos:start="49:24" pos:end="49:32"><expr pos:start="49:24" pos:end="49:32"><name pos:start="49:24" pos:end="49:32">opts_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="51:15" pos:end="57:13">else if <condition pos:start="51:23" pos:end="51:33">(<expr pos:start="51:24" pos:end="51:32"><operator pos:start="51:24" pos:end="51:24">*</operator><name pos:start="51:25" pos:end="51:25">p</name> <operator pos:start="51:27" pos:end="51:28">==</operator> <literal type="char" pos:start="51:30" pos:end="51:32">'?'</literal></expr>)</condition> <block pos:start="51:35" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:20">

                <expr_stmt pos:start="53:17" pos:end="53:38"><expr pos:start="53:17" pos:end="53:37"><name pos:start="53:17" pos:end="53:33"><name pos:start="53:17" pos:end="53:24">cmd_args</name><operator pos:start="53:25" pos:end="53:25">.</operator><name pos:start="53:26" pos:end="53:33">optional</name></name> <operator pos:start="53:35" pos:end="53:35">=</operator> <literal type="number" pos:start="53:37" pos:end="53:37">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:20"><expr pos:start="55:17" pos:end="55:19"><name pos:start="55:17" pos:end="55:17">p</name><operator pos:start="55:18" pos:end="55:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="61:13" pos:end="61:44"><expr pos:start="61:13" pos:end="61:43"><call pos:start="61:13" pos:end="61:43"><name pos:start="61:13" pos:end="61:18">assert</name><argument_list pos:start="61:19" pos:end="61:43">(<argument pos:start="61:20" pos:end="61:42"><expr pos:start="61:20" pos:end="61:42"><operator pos:start="61:20" pos:end="61:20">*</operator><name pos:start="61:21" pos:end="61:21">p</name> <operator pos:start="61:23" pos:end="61:24">==</operator> <literal type="char" pos:start="61:26" pos:end="61:28">','</literal> <operator pos:start="61:30" pos:end="61:31">||</operator> <operator pos:start="61:33" pos:end="61:33">*</operator><name pos:start="61:34" pos:end="61:34">p</name> <operator pos:start="61:36" pos:end="61:37">==</operator> <literal type="char" pos:start="61:39" pos:end="61:42">'\0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="77:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:26">(<expr pos:start="63:17" pos:end="63:25"><name pos:start="63:17" pos:end="63:25">opts_list</name></expr>)</condition> <block pos:start="63:28" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:33">

                <expr_stmt pos:start="65:17" pos:end="65:50"><expr pos:start="65:17" pos:end="65:49"><name pos:start="65:17" pos:end="65:19">err</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <call pos:start="65:23" pos:end="65:49"><name pos:start="65:23" pos:end="65:32">check_opts</name><argument_list pos:start="65:33" pos:end="65:49">(<argument pos:start="65:34" pos:end="65:42"><expr pos:start="65:34" pos:end="65:42"><name pos:start="65:34" pos:end="65:42">opts_list</name></expr></argument>, <argument pos:start="65:45" pos:end="65:48"><expr pos:start="65:45" pos:end="65:48"><name pos:start="65:45" pos:end="65:48">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:33"><expr pos:start="67:17" pos:end="67:32"><name pos:start="67:17" pos:end="67:25">opts_list</name> <operator pos:start="67:27" pos:end="67:27">=</operator> <name pos:start="67:29" pos:end="67:32">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="69:15" pos:end="77:13">else <block pos:start="69:20" pos:end="77:13">{<block_content pos:start="71:17" pos:end="75:41">

                <expr_stmt pos:start="71:17" pos:end="71:49"><expr pos:start="71:17" pos:end="71:48"><name pos:start="71:17" pos:end="71:19">err</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <call pos:start="71:23" pos:end="71:48"><name pos:start="71:23" pos:end="71:31">check_arg</name><argument_list pos:start="71:32" pos:end="71:48">(<argument pos:start="71:33" pos:end="71:41"><expr pos:start="71:33" pos:end="71:41"><operator pos:start="71:33" pos:end="71:33">&amp;</operator><name pos:start="71:34" pos:end="71:41">cmd_args</name></expr></argument>, <argument pos:start="71:44" pos:end="71:47"><expr pos:start="71:44" pos:end="71:47"><name pos:start="71:44" pos:end="71:47">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:39"><expr pos:start="73:17" pos:end="73:38"><call pos:start="73:17" pos:end="73:38"><name pos:start="73:17" pos:end="73:23">QDECREF</name><argument_list pos:start="73:24" pos:end="73:38">(<argument pos:start="73:25" pos:end="73:37"><expr pos:start="73:25" pos:end="73:37"><name pos:start="73:25" pos:end="73:37"><name pos:start="73:25" pos:end="73:32">cmd_args</name><operator pos:start="73:33" pos:end="73:33">.</operator><name pos:start="73:34" pos:end="73:37">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:41"><expr pos:start="75:17" pos:end="75:40"><call pos:start="75:17" pos:end="75:40"><name pos:start="75:17" pos:end="75:29">cmd_args_init</name><argument_list pos:start="75:30" pos:end="75:40">(<argument pos:start="75:31" pos:end="75:39"><expr pos:start="75:31" pos:end="75:39"><operator pos:start="75:31" pos:end="75:31">&amp;</operator><name pos:start="75:32" pos:end="75:39">cmd_args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="81:13" pos:end="85:13"><if pos:start="81:13" pos:end="85:13">if <condition pos:start="81:16" pos:end="81:24">(<expr pos:start="81:17" pos:end="81:23"><name pos:start="81:17" pos:end="81:19">err</name> <operator pos:start="81:21" pos:end="81:21">&lt;</operator> <literal type="number" pos:start="81:23" pos:end="81:23">0</literal></expr>)</condition> <block pos:start="81:26" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:22">

                <break pos:start="83:17" pos:end="83:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="87:11" pos:end="91:9">else <block pos:start="87:16" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:50">

            <expr_stmt pos:start="89:13" pos:end="89:50"><expr pos:start="89:13" pos:end="89:49"><call pos:start="89:13" pos:end="89:49"><name pos:start="89:13" pos:end="89:30">qstring_append_chr</name><argument_list pos:start="89:31" pos:end="89:49">(<argument pos:start="89:32" pos:end="89:44"><expr pos:start="89:32" pos:end="89:44"><name pos:start="89:32" pos:end="89:44"><name pos:start="89:32" pos:end="89:39">cmd_args</name><operator pos:start="89:40" pos:end="89:40">.</operator><name pos:start="89:41" pos:end="89:44">name</name></name></expr></argument>, <argument pos:start="89:47" pos:end="89:48"><expr pos:start="89:47" pos:end="89:48"><operator pos:start="89:47" pos:end="89:47">*</operator><name pos:start="89:48" pos:end="89:48">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:23">(<expr pos:start="95:13" pos:end="95:22"><operator pos:start="95:13" pos:end="95:13">*</operator><name pos:start="95:14" pos:end="95:14">p</name> <operator pos:start="95:16" pos:end="95:17">==</operator> <literal type="char" pos:start="95:19" pos:end="95:22">'\0'</literal></expr>)</condition> <block pos:start="95:25" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:18">

            <break pos:start="97:13" pos:end="97:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="105:5" pos:end="105:27"><expr pos:start="105:5" pos:end="105:26"><call pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:11">QDECREF</name><argument_list pos:start="105:12" pos:end="105:26">(<argument pos:start="105:13" pos:end="105:25"><expr pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:20">cmd_args</name><operator pos:start="105:21" pos:end="105:21">.</operator><name pos:start="105:22" pos:end="105:25">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:15">return <expr pos:start="107:12" pos:end="107:14"><name pos:start="107:12" pos:end="107:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
