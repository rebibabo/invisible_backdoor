<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23089.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">apic_send_msi</name><parameter_list pos:start="1:26" pos:end="1:65">(<parameter pos:start="1:27" pos:end="1:49"><decl pos:start="1:27" pos:end="1:49"><type pos:start="1:27" pos:end="1:49"><name pos:start="1:27" pos:end="1:44">target_phys_addr_t</name></type> <name pos:start="1:46" pos:end="1:49">addr</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:59">uint32_t</name></type> <name pos:start="1:61" pos:end="1:64">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:70">

    <decl_stmt pos:start="5:5" pos:end="5:76"><decl pos:start="5:5" pos:end="5:75"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:16">dest</name> <init pos:start="5:18" pos:end="5:75">= <expr pos:start="5:20" pos:end="5:75"><operator pos:start="5:20" pos:end="5:20">(</operator><name pos:start="5:21" pos:end="5:24">addr</name> <operator pos:start="5:26" pos:end="5:26">&amp;</operator> <name pos:start="5:28" pos:end="5:48">MSI_ADDR_DEST_ID_MASK</name><operator pos:start="5:49" pos:end="5:49">)</operator> <operator pos:start="5:51" pos:end="5:52">&gt;&gt;</operator> <name pos:start="5:54" pos:end="5:75">MSI_ADDR_DEST_ID_SHIFT</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:76"><decl pos:start="7:5" pos:end="7:75"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:18">vector</name> <init pos:start="7:20" pos:end="7:75">= <expr pos:start="7:22" pos:end="7:75"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:26">data</name> <operator pos:start="7:28" pos:end="7:28">&amp;</operator> <name pos:start="7:30" pos:end="7:49">MSI_DATA_VECTOR_MASK</name><operator pos:start="7:50" pos:end="7:50">)</operator> <operator pos:start="7:52" pos:end="7:53">&gt;&gt;</operator> <name pos:start="7:55" pos:end="7:75">MSI_DATA_VECTOR_SHIFT</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:65"><decl pos:start="9:5" pos:end="9:64"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:21">dest_mode</name> <init pos:start="9:23" pos:end="9:64">= <expr pos:start="9:25" pos:end="9:64"><operator pos:start="9:25" pos:end="9:25">(</operator><name pos:start="9:26" pos:end="9:29">addr</name> <operator pos:start="9:31" pos:end="9:32">&gt;&gt;</operator> <name pos:start="9:34" pos:end="9:57">MSI_ADDR_DEST_MODE_SHIFT</name><operator pos:start="9:58" pos:end="9:58">)</operator> <operator pos:start="9:60" pos:end="9:60">&amp;</operator> <literal type="number" pos:start="9:62" pos:end="9:64">0x1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:65"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:24">trigger_mode</name> <init pos:start="11:26" pos:end="11:65">= <expr pos:start="11:28" pos:end="11:65"><operator pos:start="11:28" pos:end="11:28">(</operator><name pos:start="11:29" pos:end="11:32">data</name> <operator pos:start="11:34" pos:end="11:35">&gt;&gt;</operator> <name pos:start="11:37" pos:end="11:58">MSI_DATA_TRIGGER_SHIFT</name><operator pos:start="11:59" pos:end="11:59">)</operator> <operator pos:start="11:61" pos:end="11:61">&amp;</operator> <literal type="number" pos:start="11:63" pos:end="11:65">0x1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:68"><decl pos:start="13:5" pos:end="13:67"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:20">delivery</name> <init pos:start="13:22" pos:end="13:67">= <expr pos:start="13:24" pos:end="13:67"><operator pos:start="13:24" pos:end="13:24">(</operator><name pos:start="13:25" pos:end="13:28">data</name> <operator pos:start="13:30" pos:end="13:31">&gt;&gt;</operator> <name pos:start="13:33" pos:end="13:60">MSI_DATA_DELIVERY_MODE_SHIFT</name><operator pos:start="13:61" pos:end="13:61">)</operator> <operator pos:start="13:63" pos:end="13:63">&amp;</operator> <literal type="number" pos:start="13:65" pos:end="13:67">0x7</literal></expr></init></decl>;</decl_stmt>

    <comment type="block" pos:start="15:5" pos:end="15:39">/* XXX: Ignore redirection hint. */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:70"><expr pos:start="17:5" pos:end="17:69"><call pos:start="17:5" pos:end="17:69"><name pos:start="17:5" pos:end="17:20">apic_deliver_irq</name><argument_list pos:start="17:21" pos:end="17:69">(<argument pos:start="17:22" pos:end="17:25"><expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">dest</name></expr></argument>, <argument pos:start="17:28" pos:end="17:36"><expr pos:start="17:28" pos:end="17:36"><name pos:start="17:28" pos:end="17:36">dest_mode</name></expr></argument>, <argument pos:start="17:39" pos:end="17:46"><expr pos:start="17:39" pos:end="17:46"><name pos:start="17:39" pos:end="17:46">delivery</name></expr></argument>, <argument pos:start="17:49" pos:end="17:54"><expr pos:start="17:49" pos:end="17:54"><name pos:start="17:49" pos:end="17:54">vector</name></expr></argument>, <argument pos:start="17:57" pos:end="17:68"><expr pos:start="17:57" pos:end="17:68"><name pos:start="17:57" pos:end="17:68">trigger_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
