<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6299.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">coroutine_fn</name> <name pos:start="1:21" pos:end="1:23">int</name></type> <name pos:start="1:25" pos:end="1:37">cloop_co_read</name><parameter_list pos:start="1:38" pos:end="3:67">(<parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:54">BlockDriverState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">bs</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:78"><decl pos:start="1:61" pos:end="1:78"><type pos:start="1:61" pos:end="1:78"><name pos:start="1:61" pos:end="1:67">int64_t</name></type> <name pos:start="1:69" pos:end="1:78">sector_num</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:50"><decl pos:start="3:39" pos:end="3:50"><type pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">buf</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:66"><decl pos:start="3:53" pos:end="3:66"><type pos:start="3:53" pos:end="3:66"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:66">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="19:1">{<block_content pos:start="7:5" pos:end="17:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">BDRVCloopState</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:34">= <expr pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:26">bs</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><call pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:22">qemu_co_mutex_lock</name><argument_list pos:start="11:23" pos:end="11:32">(<argument pos:start="11:24" pos:end="11:31"><expr pos:start="11:24" pos:end="11:31"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:54"><expr pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:53"><name pos:start="13:11" pos:end="13:20">cloop_read</name><argument_list pos:start="13:21" pos:end="13:53">(<argument pos:start="13:22" pos:end="13:23"><expr pos:start="13:22" pos:end="13:23"><name pos:start="13:22" pos:end="13:23">bs</name></expr></argument>, <argument pos:start="13:26" pos:end="13:35"><expr pos:start="13:26" pos:end="13:35"><name pos:start="13:26" pos:end="13:35">sector_num</name></expr></argument>, <argument pos:start="13:38" pos:end="13:40"><expr pos:start="13:38" pos:end="13:40"><name pos:start="13:38" pos:end="13:40">buf</name></expr></argument>, <argument pos:start="13:43" pos:end="13:52"><expr pos:start="13:43" pos:end="13:52"><name pos:start="13:43" pos:end="13:52">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><call pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:24">qemu_co_mutex_unlock</name><argument_list pos:start="15:25" pos:end="15:34">(<argument pos:start="15:26" pos:end="15:33"><expr pos:start="15:26" pos:end="15:33"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:33"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="17:5" pos:end="17:15">return <expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
