<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21365.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">kvm_inject_x86_mce</name><parameter_list pos:start="1:24" pos:end="5:33">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:32">CPUState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">cenv</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:48"><decl pos:start="1:41" pos:end="1:48"><type pos:start="1:41" pos:end="1:48"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:48">bank</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:58">uint64_t</name></type> <name pos:start="1:60" pos:end="1:65">status</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:43"><decl pos:start="3:25" pos:end="3:43"><type pos:start="3:25" pos:end="3:43"><name pos:start="3:25" pos:end="3:32">uint64_t</name></type> <name pos:start="3:34" pos:end="3:43">mcg_status</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:58"><decl pos:start="3:46" pos:end="3:58"><type pos:start="3:46" pos:end="3:58"><name pos:start="3:46" pos:end="3:53">uint64_t</name></type> <name pos:start="3:55" pos:end="3:58">addr</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:73"><decl pos:start="3:61" pos:end="3:73"><type pos:start="3:61" pos:end="3:73"><name pos:start="3:61" pos:end="3:68">uint64_t</name></type> <name pos:start="3:70" pos:end="3:73">misc</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:32"><decl pos:start="5:25" pos:end="5:32"><type pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">int</name></type> <name pos:start="5:29" pos:end="5:32">flag</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="47:1">{<block_content pos:start="11:5" pos:end="46:0">

<cpp:ifdef pos:start="9:1" pos:end="9:18">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:18">KVM_CAP_MCE</name></cpp:ifdef>

    <decl_stmt pos:start="11:5" pos:end="23:6"><decl pos:start="11:5" pos:end="23:5"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:22">kvm_x86_mce</name></name></type> <name pos:start="11:24" pos:end="11:26">mce</name> <init pos:start="11:28" pos:end="23:5">= <expr pos:start="11:30" pos:end="23:5"><block pos:start="11:30" pos:end="23:5">{

        <expr pos:start="13:9" pos:end="13:20"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:13">bank</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:20">bank</name></expr>,

        <expr pos:start="15:9" pos:end="15:24"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:15">status</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:24">status</name></expr>,

        <expr pos:start="17:9" pos:end="17:32"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:19">mcg_status</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:32">mcg_status</name></expr>,

        <expr pos:start="19:9" pos:end="19:20"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:13">addr</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:20">addr</name></expr>,

        <expr pos:start="21:9" pos:end="21:20"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:13">misc</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:20">misc</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:29">(<expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:12">flag</name> <operator pos:start="27:14" pos:end="27:14">&amp;</operator> <name pos:start="27:16" pos:end="27:28">MCE_BROADCAST</name></expr>)</condition> <block pos:start="27:31" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:37">

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><call pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:30">kvm_mce_broadcast_rest</name><argument_list pos:start="29:31" pos:end="29:36">(<argument pos:start="29:32" pos:end="29:35"><expr pos:start="29:32" pos:end="29:35"><name pos:start="29:32" pos:end="29:35">cenv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:43"><call pos:start="35:5" pos:end="35:43"><name pos:start="35:5" pos:end="35:25">kvm_inject_x86_mce_on</name><argument_list pos:start="35:26" pos:end="35:43">(<argument pos:start="35:27" pos:end="35:30"><expr pos:start="35:27" pos:end="35:30"><name pos:start="35:27" pos:end="35:30">cenv</name></expr></argument>, <argument pos:start="35:33" pos:end="35:36"><expr pos:start="35:33" pos:end="35:36"><operator pos:start="35:33" pos:end="35:33">&amp;</operator><name pos:start="35:34" pos:end="35:36">mce</name></expr></argument>, <argument pos:start="35:39" pos:end="35:42"><expr pos:start="35:39" pos:end="35:42"><name pos:start="35:39" pos:end="35:42">flag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="37:1" pos:end="37:5">#<cpp:directive pos:start="37:2" pos:end="37:5">else</cpp:directive></cpp:else> <comment type="block" pos:start="37:7" pos:end="37:23">/* !KVM_CAP_MCE*/</comment>

    <if_stmt pos:start="39:5" pos:end="46:0"><if pos:start="39:5" pos:end="46:0">if <condition pos:start="39:8" pos:end="39:30">(<expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:12">flag</name> <operator pos:start="39:14" pos:end="39:14">&amp;</operator> <name pos:start="39:16" pos:end="39:29">ABORT_ON_ERROR</name></expr>)</condition> <block pos:start="39:32" pos:end="46:0">{<block_content pos:start="41:9" pos:end="41:16">

        <expr_stmt pos:start="41:9" pos:end="41:16"><expr pos:start="41:9" pos:end="41:15"><call pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:13">abort</name><argument_list pos:start="41:14" pos:end="41:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="45:8" pos:end="45:24">/* !KVM_CAP_MCE*/</comment>

</block_content>}</block></function>
</unit>
