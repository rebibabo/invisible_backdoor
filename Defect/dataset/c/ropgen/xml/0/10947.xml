<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10947.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">sdl_display_init</name><parameter_list pos:start="1:22" pos:end="1:70">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:34">DisplayState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">ds</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:55">full_screen</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:69">no_frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:5">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="12:0"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:16">data</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="11:1" pos:end="11:22">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:22"><call pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:11">defined</name><argument_list pos:start="11:12" pos:end="11:22">(<argument pos:start="11:13" pos:end="11:21"><expr pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:21">__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <comment type="block" pos:start="13:5" pos:end="13:36">/* always use generic keymaps */</comment>

    <if_stmt pos:start="15:5" pos:end="20:0"><if pos:start="15:5" pos:end="20:0">if <condition pos:start="15:8" pos:end="15:25">(<expr pos:start="15:9" pos:end="15:24"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:24">keyboard_layout</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="20:0"><block_content pos:start="17:9" pos:end="20:0">

        <expr_stmt pos:start="17:9" pos:end="20:0"><expr pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:23">keyboard_layout</name> <operator pos:start="17:25" pos:end="17:25">=</operator> <literal type="string" pos:start="17:27" pos:end="17:33">"en-us"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if<condition pos:start="21:7" pos:end="21:23">(<expr pos:start="21:8" pos:end="21:22"><name pos:start="21:8" pos:end="21:22">keyboard_layout</name></expr>)</condition> <block pos:start="21:25" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:20">

        <expr_stmt pos:start="23:9" pos:end="23:59"><expr pos:start="23:9" pos:end="23:58"><name pos:start="23:9" pos:end="23:18">kbd_layout</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="23:58"><name pos:start="23:22" pos:end="23:41">init_keyboard_layout</name><argument_list pos:start="23:42" pos:end="23:58">(<argument pos:start="23:43" pos:end="23:57"><expr pos:start="23:43" pos:end="23:57"><name pos:start="23:43" pos:end="23:57">keyboard_layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:20"><if pos:start="25:9" pos:end="27:20">if <condition pos:start="25:12" pos:end="25:24">(<expr pos:start="25:13" pos:end="25:23"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:23">kbd_layout</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:20"><block_content pos:start="27:13" pos:end="27:20">

            <expr_stmt pos:start="27:13" pos:end="27:20"><expr pos:start="27:13" pos:end="27:19"><call pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:16">exit</name><argument_list pos:start="27:17" pos:end="27:19">(<argument pos:start="27:18" pos:end="27:18"><expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="35:24"><if pos:start="33:5" pos:end="35:24">if <condition pos:start="33:8" pos:end="33:17">(<expr pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16">no_frame</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:24"><block_content pos:start="35:9" pos:end="35:24">

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:19">gui_noframe</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:50"><expr pos:start="39:5" pos:end="39:49"><name pos:start="39:5" pos:end="39:9">flags</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <name pos:start="39:13" pos:end="39:26">SDL_INIT_VIDEO</name> <operator pos:start="39:28" pos:end="39:28">|</operator> <name pos:start="39:30" pos:end="39:49">SDL_INIT_NOPARACHUTE</name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="50:0"><if pos:start="41:5" pos:end="50:0">if <condition pos:start="41:8" pos:end="41:25">(<expr pos:start="41:9" pos:end="41:24"><call pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:16">SDL_Init</name> <argument_list pos:start="41:18" pos:end="41:24">(<argument pos:start="41:19" pos:end="41:23"><expr pos:start="41:19" pos:end="41:23"><name pos:start="41:19" pos:end="41:23">flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:27" pos:end="50:0">{<block_content pos:start="43:9" pos:end="45:16">

        <expr_stmt pos:start="43:9" pos:end="43:64"><expr pos:start="43:9" pos:end="43:63"><call pos:start="43:9" pos:end="43:63"><name pos:start="43:9" pos:end="43:15">fprintf</name><argument_list pos:start="43:16" pos:end="43:63">(<argument pos:start="43:17" pos:end="43:22"><expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:22">stderr</name></expr></argument>, <argument pos:start="43:25" pos:end="43:62"><expr pos:start="43:25" pos:end="43:62"><literal type="string" pos:start="43:25" pos:end="43:62">"Could not initialize SDL - exiting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:16"><expr pos:start="45:9" pos:end="45:15"><call pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:12">exit</name><argument_list pos:start="45:13" pos:end="45:15">(<argument pos:start="45:14" pos:end="45:14"><expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:ifndef pos:start="49:1" pos:end="49:14">#<cpp:directive pos:start="49:2" pos:end="49:7">ifndef</cpp:directive> <name pos:start="49:9" pos:end="49:14">_WIN32</name></cpp:ifndef>

    <comment type="block" pos:start="51:5" pos:end="51:77">/* NOTE: we still want Ctrl-C to work, so we undo the SDL redirections */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><call pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:10">signal</name><argument_list pos:start="53:11" pos:end="53:27">(<argument pos:start="53:12" pos:end="53:17"><expr pos:start="53:12" pos:end="53:17"><name pos:start="53:12" pos:end="53:17">SIGINT</name></expr></argument>, <argument pos:start="53:20" pos:end="53:26"><expr pos:start="53:20" pos:end="53:26"><name pos:start="53:20" pos:end="53:26">SIG_DFL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="58:0"><expr pos:start="55:5" pos:end="55:28"><call pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:10">signal</name><argument_list pos:start="55:11" pos:end="55:28">(<argument pos:start="55:12" pos:end="55:18"><expr pos:start="55:12" pos:end="55:18"><name pos:start="55:12" pos:end="55:18">SIGQUIT</name></expr></argument>, <argument pos:start="55:21" pos:end="55:27"><expr pos:start="55:21" pos:end="55:27"><name pos:start="55:21" pos:end="55:27">SIG_DFL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="61:5" pos:end="61:32"><expr pos:start="61:5" pos:end="61:31"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:6">ds</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:18">dpy_update</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:31">sdl_update</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:6">ds</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:18">dpy_resize</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:31">sdl_resize</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:6">ds</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:19">dpy_refresh</name></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:33">sdl_refresh</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:28"><expr pos:start="67:5" pos:end="67:27"><name pos:start="67:5" pos:end="67:16"><name pos:start="67:5" pos:end="67:6">ds</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:16">dpy_fill</name></name> <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:27">sdl_fill</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:35"><expr pos:start="69:5" pos:end="69:34"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:6">ds</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:17">mouse_set</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:34">sdl_mouse_warp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:41"><expr pos:start="71:5" pos:end="71:40"><name pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:6">ds</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:21">cursor_define</name></name> <operator pos:start="71:23" pos:end="71:23">=</operator> <name pos:start="71:25" pos:end="71:40">sdl_mouse_define</name></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:29"><expr pos:start="75:5" pos:end="75:28"><call pos:start="75:5" pos:end="75:28"><name pos:start="75:5" pos:end="75:14">sdl_resize</name><argument_list pos:start="75:15" pos:end="75:28">(<argument pos:start="75:16" pos:end="75:17"><expr pos:start="75:16" pos:end="75:17"><name pos:start="75:16" pos:end="75:17">ds</name></expr></argument>, <argument pos:start="75:20" pos:end="75:22"><expr pos:start="75:20" pos:end="75:22"><literal type="number" pos:start="75:20" pos:end="75:22">640</literal></expr></argument>, <argument pos:start="75:25" pos:end="75:27"><expr pos:start="75:25" pos:end="75:27"><literal type="number" pos:start="75:25" pos:end="75:27">400</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:25"><expr pos:start="77:5" pos:end="77:24"><call pos:start="77:5" pos:end="77:24"><name pos:start="77:5" pos:end="77:22">sdl_update_caption</name><argument_list pos:start="77:23" pos:end="77:24">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:33"><expr pos:start="79:5" pos:end="79:32"><call pos:start="79:5" pos:end="79:32"><name pos:start="79:5" pos:end="79:23">SDL_EnableKeyRepeat</name><argument_list pos:start="79:24" pos:end="79:32">(<argument pos:start="79:25" pos:end="79:27"><expr pos:start="79:25" pos:end="79:27"><literal type="number" pos:start="79:25" pos:end="79:27">250</literal></expr></argument>, <argument pos:start="79:30" pos:end="79:31"><expr pos:start="79:30" pos:end="79:31"><literal type="number" pos:start="79:30" pos:end="79:31">50</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:17"><expr pos:start="81:5" pos:end="81:16"><name pos:start="81:5" pos:end="81:12">gui_grab</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <literal type="number" pos:start="81:16" pos:end="81:16">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:67"><expr pos:start="85:5" pos:end="85:66"><name pos:start="85:5" pos:end="85:21">sdl_cursor_hidden</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <call pos:start="85:25" pos:end="85:66"><name pos:start="85:25" pos:end="85:40">SDL_CreateCursor</name><argument_list pos:start="85:41" pos:end="85:66">(<argument pos:start="85:42" pos:end="85:46"><expr pos:start="85:42" pos:end="85:46"><operator pos:start="85:42" pos:end="85:42">&amp;</operator><name pos:start="85:43" pos:end="85:46">data</name></expr></argument>, <argument pos:start="85:49" pos:end="85:53"><expr pos:start="85:49" pos:end="85:53"><operator pos:start="85:49" pos:end="85:49">&amp;</operator><name pos:start="85:50" pos:end="85:53">data</name></expr></argument>, <argument pos:start="85:56" pos:end="85:56"><expr pos:start="85:56" pos:end="85:56"><literal type="number" pos:start="85:56" pos:end="85:56">8</literal></expr></argument>, <argument pos:start="85:59" pos:end="85:59"><expr pos:start="85:59" pos:end="85:59"><literal type="number" pos:start="85:59" pos:end="85:59">1</literal></expr></argument>, <argument pos:start="85:62" pos:end="85:62"><expr pos:start="85:62" pos:end="85:62"><literal type="number" pos:start="85:62" pos:end="85:62">0</literal></expr></argument>, <argument pos:start="85:65" pos:end="85:65"><expr pos:start="85:65" pos:end="85:65"><literal type="number" pos:start="85:65" pos:end="85:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:40"><expr pos:start="87:5" pos:end="87:39"><name pos:start="87:5" pos:end="87:21">sdl_cursor_normal</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <call pos:start="87:25" pos:end="87:39"><name pos:start="87:25" pos:end="87:37">SDL_GetCursor</name><argument_list pos:start="87:38" pos:end="87:39">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:24"><expr pos:start="91:5" pos:end="91:23"><call pos:start="91:5" pos:end="91:23"><name pos:start="91:5" pos:end="91:10">atexit</name><argument_list pos:start="91:11" pos:end="91:23">(<argument pos:start="91:12" pos:end="91:22"><expr pos:start="91:12" pos:end="91:22"><name pos:start="91:12" pos:end="91:22">sdl_cleanup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="101:5"><if pos:start="93:5" pos:end="101:5">if <condition pos:start="93:8" pos:end="93:20">(<expr pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:19">full_screen</name></expr>)</condition> <block pos:start="93:22" pos:end="101:5">{<block_content pos:start="95:9" pos:end="99:25">

        <expr_stmt pos:start="95:9" pos:end="95:27"><expr pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:22">gui_fullscreen</name> <operator pos:start="95:24" pos:end="95:24">=</operator> <literal type="number" pos:start="95:26" pos:end="95:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:40"><expr pos:start="97:9" pos:end="97:39"><name pos:start="97:9" pos:end="97:35">gui_fullscreen_initial_grab</name> <operator pos:start="97:37" pos:end="97:37">=</operator> <literal type="number" pos:start="97:39" pos:end="97:39">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:25"><expr pos:start="99:9" pos:end="99:24"><call pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:22">sdl_grab_start</name><argument_list pos:start="99:23" pos:end="99:24">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
