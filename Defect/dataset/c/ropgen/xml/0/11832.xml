<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11832.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:45"><name pos:start="1:1" pos:end="1:31">socket_sockaddr_to_address_inet</name><argument_list pos:start="1:32" pos:end="5:45">(<argument pos:start="1:33" pos:end="1:59">struct sockaddr_storage *sa</argument>,

                                <argument pos:start="3:33" pos:end="3:47">socklen_t salen</argument>,

                                <argument pos:start="5:33" pos:end="5:44">Error **errp</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="65:1">{<block_content pos:start="9:5" pos:end="63:16">

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:25"><name pos:start="9:10" pos:end="9:13">host</name><index pos:start="9:14" pos:end="9:25">[<expr pos:start="9:15" pos:end="9:24"><name pos:start="9:15" pos:end="9:24">NI_MAXHOST</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:25"><name pos:start="11:10" pos:end="11:13">serv</name><index pos:start="11:14" pos:end="11:25">[<expr pos:start="11:15" pos:end="11:24"><name pos:start="11:15" pos:end="11:24">NI_MAXSERV</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:23">SocketAddressLegacy</name> <modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:29">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:21">InetSocketAddress</name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:27">inet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="27:55"><expr pos:start="21:5" pos:end="27:54"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="27:54"><name pos:start="21:11" pos:end="21:21">getnameinfo</name><argument_list pos:start="21:22" pos:end="27:54">(<argument pos:start="21:23" pos:end="21:43"><expr pos:start="21:23" pos:end="21:43"><operator pos:start="21:23" pos:end="21:23">(</operator>struct <name pos:start="21:31" pos:end="21:38">sockaddr</name> <operator pos:start="21:40" pos:end="21:40">*</operator><operator pos:start="21:41" pos:end="21:41">)</operator><name pos:start="21:42" pos:end="21:43">sa</name></expr></argument>, <argument pos:start="21:46" pos:end="21:50"><expr pos:start="21:46" pos:end="21:50"><name pos:start="21:46" pos:end="21:50">salen</name></expr></argument>,

                      <argument pos:start="23:23" pos:end="23:26"><expr pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:26">host</name></expr></argument>, <argument pos:start="23:29" pos:end="23:40"><expr pos:start="23:29" pos:end="23:40"><sizeof pos:start="23:29" pos:end="23:40">sizeof<argument_list pos:start="23:35" pos:end="23:40">(<argument pos:start="23:36" pos:end="23:39"><expr pos:start="23:36" pos:end="23:39"><name pos:start="23:36" pos:end="23:39">host</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                      <argument pos:start="25:23" pos:end="25:26"><expr pos:start="25:23" pos:end="25:26"><name pos:start="25:23" pos:end="25:26">serv</name></expr></argument>, <argument pos:start="25:29" pos:end="25:40"><expr pos:start="25:29" pos:end="25:40"><sizeof pos:start="25:29" pos:end="25:40">sizeof<argument_list pos:start="25:35" pos:end="25:40">(<argument pos:start="25:36" pos:end="25:39"><expr pos:start="25:36" pos:end="25:39"><name pos:start="25:36" pos:end="25:39">serv</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                      <argument pos:start="27:23" pos:end="27:53"><expr pos:start="27:23" pos:end="27:53"><name pos:start="27:23" pos:end="27:36">NI_NUMERICHOST</name> <operator pos:start="27:38" pos:end="27:38">|</operator> <name pos:start="27:40" pos:end="27:53">NI_NUMERICSERV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:14">!=</operator> <literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>)</condition> <block pos:start="29:19" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:20">

        <expr_stmt pos:start="31:9" pos:end="33:38"><expr pos:start="31:9" pos:end="33:37"><call pos:start="31:9" pos:end="33:37"><name pos:start="31:9" pos:end="31:18">error_setg</name><argument_list pos:start="31:19" pos:end="33:37">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">errp</name></expr></argument>, <argument pos:start="31:26" pos:end="31:67"><expr pos:start="31:26" pos:end="31:67"><literal type="string" pos:start="31:26" pos:end="31:67">"Cannot format numeric socket address: %s"</literal></expr></argument>,

                   <argument pos:start="33:20" pos:end="33:36"><expr pos:start="33:20" pos:end="33:36"><call pos:start="33:20" pos:end="33:36"><name pos:start="33:20" pos:end="33:31">gai_strerror</name><argument_list pos:start="33:32" pos:end="33:36">(<argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:20">return <expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:8">addr</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <call pos:start="41:12" pos:end="41:41"><name pos:start="41:12" pos:end="41:17">g_new0</name><argument_list pos:start="41:18" pos:end="41:41">(<argument pos:start="41:19" pos:end="41:37"><expr pos:start="41:19" pos:end="41:37"><name pos:start="41:19" pos:end="41:37">SocketAddressLegacy</name></expr></argument>, <argument pos:start="41:40" pos:end="41:40"><expr pos:start="41:40" pos:end="41:40"><literal type="number" pos:start="41:40" pos:end="41:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:49"><expr pos:start="43:5" pos:end="43:48"><name pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:8">addr</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:14">type</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:48">SOCKET_ADDRESS_LEGACY_KIND_INET</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:60"><expr pos:start="45:5" pos:end="45:59"><name pos:start="45:5" pos:end="45:8">inet</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <name pos:start="45:12" pos:end="45:28"><name pos:start="45:12" pos:end="45:15">addr</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:18">u</name><operator pos:start="45:19" pos:end="45:19">.</operator><name pos:start="45:20" pos:end="45:23">inet</name><operator pos:start="45:24" pos:end="45:24">.</operator><name pos:start="45:25" pos:end="45:28">data</name></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <call pos:start="45:32" pos:end="45:59"><name pos:start="45:32" pos:end="45:37">g_new0</name><argument_list pos:start="45:38" pos:end="45:59">(<argument pos:start="45:39" pos:end="45:55"><expr pos:start="45:39" pos:end="45:55"><name pos:start="45:39" pos:end="45:55">InetSocketAddress</name></expr></argument>, <argument pos:start="45:58" pos:end="45:58"><expr pos:start="45:58" pos:end="45:58"><literal type="number" pos:start="45:58" pos:end="45:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:32"><expr pos:start="47:5" pos:end="47:31"><name pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:8">inet</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:14">host</name></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:31"><name pos:start="47:18" pos:end="47:25">g_strdup</name><argument_list pos:start="47:26" pos:end="47:31">(<argument pos:start="47:27" pos:end="47:30"><expr pos:start="47:27" pos:end="47:30"><name pos:start="47:27" pos:end="47:30">host</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:32"><expr pos:start="49:5" pos:end="49:31"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:8">inet</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:14">port</name></name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:31"><name pos:start="49:18" pos:end="49:25">g_strdup</name><argument_list pos:start="49:26" pos:end="49:31">(<argument pos:start="49:27" pos:end="49:30"><expr pos:start="49:27" pos:end="49:30"><name pos:start="49:27" pos:end="49:30">serv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:33">(<expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:10">sa</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:21">ss_family</name></name> <operator pos:start="51:23" pos:end="51:24">==</operator> <name pos:start="51:26" pos:end="51:32">AF_INET</name></expr>)</condition> <block pos:start="51:35" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:43">

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:12">inet</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:22">has_ipv4</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:35"><name pos:start="53:26" pos:end="53:29">inet</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:35">ipv4</name></name> <operator pos:start="53:37" pos:end="53:37">=</operator> <name pos:start="53:39" pos:end="53:42">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:43">

        <expr_stmt pos:start="57:9" pos:end="57:43"><expr pos:start="57:9" pos:end="57:42"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:12">inet</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:22">has_ipv6</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:35"><name pos:start="57:26" pos:end="57:29">inet</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:35">ipv6</name></name> <operator pos:start="57:37" pos:end="57:37">=</operator> <name pos:start="57:39" pos:end="57:42">true</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="63:5" pos:end="63:16">return <expr pos:start="63:12" pos:end="63:15"><name pos:start="63:12" pos:end="63:15">addr</name></expr>;</return>

</block_content>}</block>
</unit>
