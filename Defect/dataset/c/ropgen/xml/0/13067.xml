<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13067.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:43">qemu_rdma_buffer_mergable</name><parameter_list pos:start="1:44" pos:end="3:50">(<parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><name pos:start="1:45" pos:end="1:55">RDMAContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">rdma</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:35"><decl pos:start="3:21" pos:end="3:35"><type pos:start="3:21" pos:end="3:35"><name pos:start="3:21" pos:end="3:28">uint64_t</name></type> <name pos:start="3:30" pos:end="3:35">offset</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:45">uint64_t</name></type> <name pos:start="3:47" pos:end="3:49">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:13">

    <decl_stmt pos:start="7:5" pos:end="9:61"><decl pos:start="7:5" pos:end="9:60"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">RDMALocalBlock</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">block</name> <init pos:start="7:27" pos:end="9:60">=

        <expr pos:start="9:9" pos:end="9:60"><operator pos:start="9:9" pos:end="9:9">&amp;</operator><operator pos:start="9:10" pos:end="9:10">(</operator><name pos:start="9:11" pos:end="9:59"><name pos:start="9:11" pos:end="9:14">rdma</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:32">local_ram_blocks</name><operator pos:start="9:33" pos:end="9:33">.</operator><name pos:start="9:34" pos:end="9:38">block</name><index pos:start="9:39" pos:end="9:59">[<expr pos:start="9:40" pos:end="9:58"><name pos:start="9:40" pos:end="9:58"><name pos:start="9:40" pos:end="9:43">rdma</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:58">current_index</name></name></expr>]</index></name><operator pos:start="9:60" pos:end="9:60">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:75"><decl pos:start="11:5" pos:end="11:74"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:22">host_addr</name> <init pos:start="11:24" pos:end="11:74">= <expr pos:start="11:26" pos:end="11:74"><name pos:start="11:26" pos:end="11:47"><name pos:start="11:26" pos:end="11:30">block</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:47">local_host_addr</name></name> <operator pos:start="11:49" pos:end="11:49">+</operator> <operator pos:start="11:51" pos:end="11:51">(</operator><name pos:start="11:52" pos:end="11:57">offset</name> <operator pos:start="11:59" pos:end="11:59">-</operator> <name pos:start="11:61" pos:end="11:73"><name pos:start="11:61" pos:end="11:65">block</name><operator pos:start="11:66" pos:end="11:67">-&gt;</operator><name pos:start="11:68" pos:end="11:73">offset</name></name><operator pos:start="11:74" pos:end="11:74">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:67"><decl pos:start="13:5" pos:end="13:66"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:22">chunk_end</name> <init pos:start="13:24" pos:end="13:66">= <expr pos:start="13:26" pos:end="13:66"><call pos:start="13:26" pos:end="13:66"><name pos:start="13:26" pos:end="13:38">ram_chunk_end</name><argument_list pos:start="13:39" pos:end="13:66">(<argument pos:start="13:40" pos:end="13:44"><expr pos:start="13:40" pos:end="13:44"><name pos:start="13:40" pos:end="13:44">block</name></expr></argument>, <argument pos:start="13:47" pos:end="13:65"><expr pos:start="13:47" pos:end="13:65"><name pos:start="13:47" pos:end="13:65"><name pos:start="13:47" pos:end="13:50">rdma</name><operator pos:start="13:51" pos:end="13:52">-&gt;</operator><name pos:start="13:53" pos:end="13:65">current_chunk</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:34">(<expr pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:12">rdma</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:28">current_length</name></name> <operator pos:start="17:30" pos:end="17:31">==</operator> <literal type="number" pos:start="17:33" pos:end="17:33">0</literal></expr>)</condition> <block pos:start="17:36" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="29:7">/*

     * Only merge into chunk sequentially.

     */</comment>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:62">(<expr pos:start="31:9" pos:end="31:61"><name pos:start="31:9" pos:end="31:14">offset</name> <operator pos:start="31:16" pos:end="31:17">!=</operator> <operator pos:start="31:19" pos:end="31:19">(</operator><name pos:start="31:20" pos:end="31:37"><name pos:start="31:20" pos:end="31:23">rdma</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:37">current_addr</name></name> <operator pos:start="31:39" pos:end="31:39">+</operator> <name pos:start="31:41" pos:end="31:60"><name pos:start="31:41" pos:end="31:44">rdma</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:60">current_length</name></name><operator pos:start="31:61" pos:end="31:61">)</operator></expr>)</condition> <block pos:start="31:64" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:32">(<expr pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:12">rdma</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:27">current_index</name></name> <operator pos:start="39:29" pos:end="39:29">&lt;</operator> <literal type="number" pos:start="39:31" pos:end="39:31">0</literal></expr>)</condition> <block pos:start="39:34" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:17">

        <return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:31">(<expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:14">offset</name> <operator pos:start="47:16" pos:end="47:16">&lt;</operator> <name pos:start="47:18" pos:end="47:30"><name pos:start="47:18" pos:end="47:22">block</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:30">offset</name></name></expr>)</condition> <block pos:start="47:33" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:17">

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:57">(<expr pos:start="55:9" pos:end="55:56"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:15">offset</name> <operator pos:start="55:17" pos:end="55:17">+</operator> <name pos:start="55:19" pos:end="55:21">len</name><operator pos:start="55:22" pos:end="55:22">)</operator> <operator pos:start="55:24" pos:end="55:24">&gt;</operator> <operator pos:start="55:26" pos:end="55:26">(</operator><name pos:start="55:27" pos:end="55:39"><name pos:start="55:27" pos:end="55:31">block</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:39">offset</name></name> <operator pos:start="55:41" pos:end="55:41">+</operator> <name pos:start="55:43" pos:end="55:55"><name pos:start="55:43" pos:end="55:47">block</name><operator pos:start="55:48" pos:end="55:49">-&gt;</operator><name pos:start="55:50" pos:end="55:55">length</name></name><operator pos:start="55:56" pos:end="55:56">)</operator></expr>)</condition> <block pos:start="55:59" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:17">

        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:32">(<expr pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:12">rdma</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:27">current_chunk</name></name> <operator pos:start="63:29" pos:end="63:29">&lt;</operator> <literal type="number" pos:start="63:31" pos:end="63:31">0</literal></expr>)</condition> <block pos:start="63:34" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:17">

        <return pos:start="65:9" pos:end="65:17">return <expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:38">(<expr pos:start="71:9" pos:end="71:37"><operator pos:start="71:9" pos:end="71:9">(</operator><name pos:start="71:10" pos:end="71:18">host_addr</name> <operator pos:start="71:20" pos:end="71:20">+</operator> <name pos:start="71:22" pos:end="71:24">len</name><operator pos:start="71:25" pos:end="71:25">)</operator> <operator pos:start="71:27" pos:end="71:27">&gt;</operator> <name pos:start="71:29" pos:end="71:37">chunk_end</name></expr>)</condition> <block pos:start="71:40" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:17">

        <return pos:start="73:9" pos:end="73:17">return <expr pos:start="73:16" pos:end="73:16"><literal type="number" pos:start="73:16" pos:end="73:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
