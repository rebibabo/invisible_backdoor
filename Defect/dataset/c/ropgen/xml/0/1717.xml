<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1717.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:33">av_get_channel_layout_string</name><parameter_list pos:start="1:34" pos:end="3:74">(<parameter pos:start="1:35" pos:end="1:43"><decl pos:start="1:35" pos:end="1:43"><type pos:start="1:35" pos:end="1:43"><name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">buf</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:57">buf_size</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:49"><decl pos:start="3:35" pos:end="3:49"><type pos:start="3:35" pos:end="3:49"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:49">nb_channels</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:73"><decl pos:start="3:52" pos:end="3:73"><type pos:start="3:52" pos:end="3:73"><name pos:start="3:52" pos:end="3:58">int64_t</name></type> <name pos:start="3:60" pos:end="3:73">channel_layout</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:5">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:72"><if pos:start="11:5" pos:end="13:72">if <condition pos:start="11:8" pos:end="11:25">(<expr pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:19">nb_channels</name> <operator pos:start="11:21" pos:end="11:22">&lt;=</operator> <literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:72"><block_content pos:start="13:9" pos:end="13:72">

        <expr_stmt pos:start="13:9" pos:end="13:72"><expr pos:start="13:9" pos:end="13:71"><name pos:start="13:9" pos:end="13:19">nb_channels</name> <operator pos:start="13:21" pos:end="13:21">=</operator> <call pos:start="13:23" pos:end="13:71"><name pos:start="13:23" pos:end="13:55">av_get_channel_layout_nb_channels</name><argument_list pos:start="13:56" pos:end="13:71">(<argument pos:start="13:57" pos:end="13:70"><expr pos:start="13:57" pos:end="13:70"><name pos:start="13:57" pos:end="13:70">channel_layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="17:5" pos:end="27:9">for <control pos:start="17:9" pos:end="17:48">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:43"><expr pos:start="17:17" pos:end="17:42"><name pos:start="17:17" pos:end="17:37"><name pos:start="17:17" pos:end="17:34">channel_layout_map</name><index pos:start="17:35" pos:end="17:37">[<expr pos:start="17:36" pos:end="17:36"><name pos:start="17:36" pos:end="17:36">i</name></expr>]</index></name><operator pos:start="17:38" pos:end="17:38">.</operator><name pos:start="17:39" pos:end="17:42">name</name></expr>;</condition> <incr pos:start="17:45" pos:end="17:47"><expr pos:start="17:45" pos:end="17:47"><name pos:start="17:45" pos:end="17:45">i</name><operator pos:start="17:46" pos:end="17:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:9" pos:end="27:9"><block_content pos:start="19:9" pos:end="27:9">

        <if_stmt pos:start="19:9" pos:end="27:9"><if pos:start="19:9" pos:end="27:9">if <condition pos:start="19:12" pos:end="21:59">(<expr pos:start="19:13" pos:end="21:58"><name pos:start="19:13" pos:end="19:23">nb_channels</name>    <operator pos:start="19:28" pos:end="19:29">==</operator> <name pos:start="19:31" pos:end="19:51"><name pos:start="19:31" pos:end="19:48">channel_layout_map</name><index pos:start="19:49" pos:end="19:51">[<expr pos:start="19:50" pos:end="19:50"><name pos:start="19:50" pos:end="19:50">i</name></expr>]</index></name><operator pos:start="19:52" pos:end="19:52">.</operator><name pos:start="19:53" pos:end="19:63">nb_channels</name> <operator pos:start="19:65" pos:end="19:66">&amp;&amp;</operator>

            <name pos:start="21:13" pos:end="21:26">channel_layout</name> <operator pos:start="21:28" pos:end="21:29">==</operator> <name pos:start="21:31" pos:end="21:51"><name pos:start="21:31" pos:end="21:48">channel_layout_map</name><index pos:start="21:49" pos:end="21:51">[<expr pos:start="21:50" pos:end="21:50"><name pos:start="21:50" pos:end="21:50">i</name></expr>]</index></name><operator pos:start="21:52" pos:end="21:52">.</operator><name pos:start="21:53" pos:end="21:58">layout</name></expr>)</condition> <block pos:start="21:61" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:19">

            <expr_stmt pos:start="23:13" pos:end="23:66"><expr pos:start="23:13" pos:end="23:65"><call pos:start="23:13" pos:end="23:65"><name pos:start="23:13" pos:end="23:22">av_strlcpy</name><argument_list pos:start="23:23" pos:end="23:65">(<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">buf</name></expr></argument>, <argument pos:start="23:29" pos:end="23:54"><expr pos:start="23:29" pos:end="23:54"><name pos:start="23:29" pos:end="23:49"><name pos:start="23:29" pos:end="23:46">channel_layout_map</name><index pos:start="23:47" pos:end="23:49">[<expr pos:start="23:48" pos:end="23:48"><name pos:start="23:48" pos:end="23:48">i</name></expr>]</index></name><operator pos:start="23:50" pos:end="23:50">.</operator><name pos:start="23:51" pos:end="23:54">name</name></expr></argument>, <argument pos:start="23:57" pos:end="23:64"><expr pos:start="23:57" pos:end="23:64"><name pos:start="23:57" pos:end="23:64">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:19">return;</return>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="31:5" pos:end="31:56"><expr pos:start="31:5" pos:end="31:55"><call pos:start="31:5" pos:end="31:55"><name pos:start="31:5" pos:end="31:12">snprintf</name><argument_list pos:start="31:13" pos:end="31:55">(<argument pos:start="31:14" pos:end="31:16"><expr pos:start="31:14" pos:end="31:16"><name pos:start="31:14" pos:end="31:16">buf</name></expr></argument>, <argument pos:start="31:19" pos:end="31:26"><expr pos:start="31:19" pos:end="31:26"><name pos:start="31:19" pos:end="31:26">buf_size</name></expr></argument>, <argument pos:start="31:29" pos:end="31:41"><expr pos:start="31:29" pos:end="31:41"><literal type="string" pos:start="31:29" pos:end="31:41">"%d channels"</literal></expr></argument>, <argument pos:start="31:44" pos:end="31:54"><expr pos:start="31:44" pos:end="31:54"><name pos:start="31:44" pos:end="31:54">nb_channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="63:5"><if pos:start="33:5" pos:end="63:5">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:22">channel_layout</name></expr>)</condition> <block pos:start="33:25" pos:end="63:5">{<block_content pos:start="35:9" pos:end="61:39">

        <decl_stmt pos:start="35:9" pos:end="35:18"><decl pos:start="35:9" pos:end="35:13"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">i</name></decl>, <decl pos:start="35:16" pos:end="35:17"><type ref="prev" pos:start="35:9" pos:end="35:11"/><name pos:start="35:16" pos:end="35:17">ch</name></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:40"><expr pos:start="37:9" pos:end="37:39"><call pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:18">av_strlcat</name><argument_list pos:start="37:19" pos:end="37:39">(<argument pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">buf</name></expr></argument>, <argument pos:start="37:25" pos:end="37:28"><expr pos:start="37:25" pos:end="37:28"><literal type="string" pos:start="37:25" pos:end="37:28">" ("</literal></expr></argument>, <argument pos:start="37:31" pos:end="37:38"><expr pos:start="37:31" pos:end="37:38"><name pos:start="37:31" pos:end="37:38">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="39:9" pos:end="59:9">for <control pos:start="39:13" pos:end="39:40">(<init pos:start="39:14" pos:end="39:27"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">i</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr><operator pos:start="39:19" pos:end="39:19">,</operator> <expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:22">ch</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr>;</init> <condition pos:start="39:29" pos:end="39:35"><expr pos:start="39:29" pos:end="39:34"><name pos:start="39:29" pos:end="39:29">i</name> <operator pos:start="39:31" pos:end="39:31">&lt;</operator> <literal type="number" pos:start="39:33" pos:end="39:34">64</literal></expr>;</condition> <incr pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><name pos:start="39:37" pos:end="39:37">i</name><operator pos:start="39:38" pos:end="39:39">++</operator></expr></incr>)</control> <block pos:start="39:42" pos:end="59:9">{<block_content pos:start="41:13" pos:end="57:13">

            <if_stmt pos:start="41:13" pos:end="57:13"><if pos:start="41:13" pos:end="57:13">if <condition pos:start="41:16" pos:end="41:45">(<expr pos:start="41:17" pos:end="41:44"><operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:31">channel_layout</name> <operator pos:start="41:33" pos:end="41:33">&amp;</operator> <operator pos:start="41:35" pos:end="41:35">(</operator><literal type="number" pos:start="41:36" pos:end="41:37">1L</literal> <operator pos:start="41:39" pos:end="41:40">&lt;&lt;</operator> <name pos:start="41:42" pos:end="41:42">i</name><operator pos:start="41:43" pos:end="41:43">)</operator><operator pos:start="41:44" pos:end="41:44">)</operator></expr>)</condition> <block pos:start="41:47" pos:end="57:13">{<block_content pos:start="43:17" pos:end="55:21">

                <decl_stmt pos:start="43:17" pos:end="43:55"><decl pos:start="43:17" pos:end="43:54"><type pos:start="43:17" pos:end="43:28"><specifier pos:start="43:17" pos:end="43:21">const</specifier> <name pos:start="43:23" pos:end="43:26">char</name> <modifier pos:start="43:28" pos:end="43:28">*</modifier></type><name pos:start="43:29" pos:end="43:32">name</name> <init pos:start="43:34" pos:end="43:54">= <expr pos:start="43:36" pos:end="43:54"><call pos:start="43:36" pos:end="43:54"><name pos:start="43:36" pos:end="43:51">get_channel_name</name><argument_list pos:start="43:52" pos:end="43:54">(<argument pos:start="43:53" pos:end="43:53"><expr pos:start="43:53" pos:end="43:53"><name pos:start="43:53" pos:end="43:53">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="45:17" pos:end="53:17"><if pos:start="45:17" pos:end="53:17">if <condition pos:start="45:20" pos:end="45:25">(<expr pos:start="45:21" pos:end="45:24"><name pos:start="45:21" pos:end="45:24">name</name></expr>)</condition> <block pos:start="45:27" pos:end="53:17">{<block_content pos:start="47:21" pos:end="51:52">

                    <if_stmt pos:start="47:21" pos:end="49:55"><if pos:start="47:21" pos:end="49:55">if <condition pos:start="47:24" pos:end="47:31">(<expr pos:start="47:25" pos:end="47:30"><name pos:start="47:25" pos:end="47:26">ch</name> <operator pos:start="47:28" pos:end="47:28">&gt;</operator> <literal type="number" pos:start="47:30" pos:end="47:30">0</literal></expr>)</condition><block type="pseudo" pos:start="49:25" pos:end="49:55"><block_content pos:start="49:25" pos:end="49:55">

                        <expr_stmt pos:start="49:25" pos:end="49:55"><expr pos:start="49:25" pos:end="49:54"><call pos:start="49:25" pos:end="49:54"><name pos:start="49:25" pos:end="49:34">av_strlcat</name><argument_list pos:start="49:35" pos:end="49:54">(<argument pos:start="49:36" pos:end="49:38"><expr pos:start="49:36" pos:end="49:38"><name pos:start="49:36" pos:end="49:38">buf</name></expr></argument>, <argument pos:start="49:41" pos:end="49:43"><expr pos:start="49:41" pos:end="49:43"><literal type="string" pos:start="49:41" pos:end="49:43">"|"</literal></expr></argument>, <argument pos:start="49:46" pos:end="49:53"><expr pos:start="49:46" pos:end="49:53"><name pos:start="49:46" pos:end="49:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:52"><expr pos:start="51:21" pos:end="51:51"><call pos:start="51:21" pos:end="51:51"><name pos:start="51:21" pos:end="51:30">av_strlcat</name><argument_list pos:start="51:31" pos:end="51:51">(<argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">buf</name></expr></argument>, <argument pos:start="51:37" pos:end="51:40"><expr pos:start="51:37" pos:end="51:40"><name pos:start="51:37" pos:end="51:40">name</name></expr></argument>, <argument pos:start="51:43" pos:end="51:50"><expr pos:start="51:43" pos:end="51:50"><name pos:start="51:43" pos:end="51:50">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:21"><expr pos:start="55:17" pos:end="55:20"><name pos:start="55:17" pos:end="55:18">ch</name><operator pos:start="55:19" pos:end="55:20">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="61:9" pos:end="61:39"><expr pos:start="61:9" pos:end="61:38"><call pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:18">av_strlcat</name><argument_list pos:start="61:19" pos:end="61:38">(<argument pos:start="61:20" pos:end="61:22"><expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">buf</name></expr></argument>, <argument pos:start="61:25" pos:end="61:27"><expr pos:start="61:25" pos:end="61:27"><literal type="string" pos:start="61:25" pos:end="61:27">")"</literal></expr></argument>, <argument pos:start="61:30" pos:end="61:37"><expr pos:start="61:30" pos:end="61:37"><name pos:start="61:30" pos:end="61:37">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
