<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/236.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:45"><name pos:start="1:1" pos:end="1:30">xilinx_axidma_data_stream_push</name><argument_list pos:start="1:31" pos:end="3:45">(<argument pos:start="1:32" pos:end="1:47">StreamSlave *obj</argument>, <argument pos:start="1:50" pos:end="1:67">unsigned char *buf</argument>, <argument pos:start="1:70" pos:end="1:79">size_t len</argument>,

                               <argument pos:start="3:32" pos:end="3:44">uint32_t *app</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="27:1">{<block_content pos:start="7:5" pos:end="25:15">

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27">XilinxAXIDMAStreamSlave</name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:31">ds</name> <init pos:start="7:33" pos:end="7:65">= <expr pos:start="7:35" pos:end="7:65"><call pos:start="7:35" pos:end="7:65"><name pos:start="7:35" pos:end="7:60">XILINX_AXI_DMA_DATA_STREAM</name><argument_list pos:start="7:61" pos:end="7:65">(<argument pos:start="7:62" pos:end="7:64"><expr pos:start="7:62" pos:end="7:64"><name pos:start="7:62" pos:end="7:64">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:17">Stream</name></name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name> <init pos:start="9:22" pos:end="9:43">= <expr pos:start="9:24" pos:end="9:43"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:43"><name pos:start="9:25" pos:end="9:26">ds</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:31">dma</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:40">streams</name><index pos:start="9:41" pos:end="9:43">[<expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:12">app</name></expr>)</condition> <block pos:start="15:15" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:42">

        <expr_stmt pos:start="17:9" pos:end="17:42"><expr pos:start="17:9" pos:end="17:41"><call pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:16">hw_error</name><argument_list pos:start="17:17" pos:end="17:41">(<argument pos:start="17:18" pos:end="17:40"><expr pos:start="17:18" pos:end="17:40"><literal type="string" pos:start="17:18" pos:end="17:40">"No stream app data!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:48"><name pos:start="21:11" pos:end="21:30">stream_process_s2mem</name><argument_list pos:start="21:31" pos:end="21:48">(<argument pos:start="21:32" pos:end="21:32"><expr pos:start="21:32" pos:end="21:32"><name pos:start="21:32" pos:end="21:32">s</name></expr></argument>, <argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:37">buf</name></expr></argument>, <argument pos:start="21:40" pos:end="21:42"><expr pos:start="21:40" pos:end="21:42"><name pos:start="21:40" pos:end="21:42">len</name></expr></argument>, <argument pos:start="21:45" pos:end="21:47"><expr pos:start="21:45" pos:end="21:47"><name pos:start="21:45" pos:end="21:47">app</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><call pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:21">stream_update_irq</name><argument_list pos:start="23:22" pos:end="23:24">(<argument pos:start="23:23" pos:end="23:23"><expr pos:start="23:23" pos:end="23:23"><name pos:start="23:23" pos:end="23:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="25:5" pos:end="25:15">return <expr pos:start="25:12" pos:end="25:14"><name pos:start="25:12" pos:end="25:14">ret</name></expr>;</return>

</block_content>}</block>
</unit>
