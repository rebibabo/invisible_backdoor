<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12919.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">xvid_encode_close</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:23">xvid_context</name></name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">x</name> <init pos:start="5:28" pos:end="5:45">= <expr pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:34">avctx</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:45">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:9">x</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:25">encoder_handle</name></name></expr>)</condition> <block pos:start="9:28" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:33">

        <expr_stmt pos:start="11:9" pos:end="11:69"><expr pos:start="11:9" pos:end="11:68"><call pos:start="11:9" pos:end="11:68"><name pos:start="11:9" pos:end="11:19">xvid_encore</name><argument_list pos:start="11:20" pos:end="11:68">(<argument pos:start="11:21" pos:end="11:37"><expr pos:start="11:21" pos:end="11:37"><name pos:start="11:21" pos:end="11:37"><name pos:start="11:21" pos:end="11:21">x</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:37">encoder_handle</name></name></expr></argument>, <argument pos:start="11:40" pos:end="11:55"><expr pos:start="11:40" pos:end="11:55"><name pos:start="11:40" pos:end="11:55">XVID_ENC_DESTROY</name></expr></argument>, <argument pos:start="11:58" pos:end="11:61"><expr pos:start="11:58" pos:end="11:61"><name pos:start="11:58" pos:end="11:61">NULL</name></expr></argument>, <argument pos:start="11:64" pos:end="11:67"><expr pos:start="11:64" pos:end="11:67"><name pos:start="11:64" pos:end="11:67">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:33"><expr pos:start="13:9" pos:end="13:32"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:9">x</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:25">encoder_handle</name></name> <operator pos:start="13:27" pos:end="13:27">=</operator> <name pos:start="13:29" pos:end="13:32">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><call pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:17">av_frame_free</name><argument_list pos:start="19:18" pos:end="19:38">(<argument pos:start="19:19" pos:end="19:37"><expr pos:start="19:19" pos:end="19:37"><operator pos:start="19:19" pos:end="19:19">&amp;</operator><name pos:start="19:20" pos:end="19:37"><name pos:start="19:20" pos:end="19:24">avctx</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:37">coded_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><call pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:12">av_freep</name><argument_list pos:start="21:13" pos:end="21:31">(<argument pos:start="21:14" pos:end="21:30"><expr pos:start="21:14" pos:end="21:30"><operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:30"><name pos:start="21:15" pos:end="21:19">avctx</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:30">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:9">x</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:24">twopassbuffer</name></name></expr>)</condition> <block pos:start="23:27" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:38">

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><call pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:15">av_free</name><argument_list pos:start="25:16" pos:end="25:33">(<argument pos:start="25:17" pos:end="25:32"><expr pos:start="25:17" pos:end="25:32"><name pos:start="25:17" pos:end="25:32"><name pos:start="25:17" pos:end="25:17">x</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:32">twopassbuffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:15">av_free</name><argument_list pos:start="27:16" pos:end="27:37">(<argument pos:start="27:17" pos:end="27:36"><expr pos:start="27:17" pos:end="27:36"><name pos:start="27:17" pos:end="27:36"><name pos:start="27:17" pos:end="27:17">x</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:36">old_twopassbuffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><call pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:11">av_free</name><argument_list pos:start="31:12" pos:end="31:27">(<argument pos:start="31:13" pos:end="31:26"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:13">x</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:26">twopassfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><call pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:11">av_free</name><argument_list pos:start="33:12" pos:end="33:28">(<argument pos:start="33:13" pos:end="33:27"><expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:13">x</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:27">intra_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><call pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:11">av_free</name><argument_list pos:start="35:12" pos:end="35:28">(<argument pos:start="35:13" pos:end="35:27"><expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:13">x</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:27">inter_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
