<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15964.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">stq_phys_notdirty</name><parameter_list pos:start="1:23" pos:end="1:61">(<parameter pos:start="1:24" pos:end="1:46"><decl pos:start="1:24" pos:end="1:46"><type pos:start="1:24" pos:end="1:46"><name pos:start="1:24" pos:end="1:41">target_phys_addr_t</name></type> <name pos:start="1:43" pos:end="1:46">addr</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:56">uint64_t</name></type> <name pos:start="1:58" pos:end="1:60">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">MemoryRegionSection</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:32">section</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:55"><expr pos:start="11:5" pos:end="11:54"><name pos:start="11:5" pos:end="11:11">section</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <call pos:start="11:15" pos:end="11:54"><name pos:start="11:15" pos:end="11:28">phys_page_find</name><argument_list pos:start="11:29" pos:end="11:54">(<argument pos:start="11:30" pos:end="11:53"><expr pos:start="11:30" pos:end="11:53"><name pos:start="11:30" pos:end="11:33">addr</name> <operator pos:start="11:35" pos:end="11:36">&gt;&gt;</operator> <name pos:start="11:38" pos:end="11:53">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="49:5"><if pos:start="15:5" pos:end="39:5">if <condition pos:start="15:8" pos:end="15:64">(<expr pos:start="15:9" pos:end="15:63"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:42"><name pos:start="15:10" pos:end="15:29">memory_region_is_ram</name><argument_list pos:start="15:30" pos:end="15:42">(<argument pos:start="15:31" pos:end="15:41"><expr pos:start="15:31" pos:end="15:41"><name pos:start="15:31" pos:end="15:41"><name pos:start="15:31" pos:end="15:37">section</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:41">mr</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:44" pos:end="15:45">||</operator> <name pos:start="15:47" pos:end="15:63"><name pos:start="15:47" pos:end="15:53">section</name><operator pos:start="15:54" pos:end="15:55">-&gt;</operator><name pos:start="15:56" pos:end="15:63">readonly</name></name></expr>)</condition> <block pos:start="15:66" pos:end="39:5">{<block_content pos:start="17:9" pos:end="38:0">

        <expr_stmt pos:start="17:9" pos:end="17:57"><expr pos:start="17:9" pos:end="17:56"><name pos:start="17:9" pos:end="17:12">addr</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:56"><name pos:start="17:16" pos:end="17:41">memory_region_section_addr</name><argument_list pos:start="17:42" pos:end="17:56">(<argument pos:start="17:43" pos:end="17:49"><expr pos:start="17:43" pos:end="17:49"><name pos:start="17:43" pos:end="17:49">section</name></expr></argument>, <argument pos:start="17:52" pos:end="17:55"><expr pos:start="17:52" pos:end="17:55"><name pos:start="17:52" pos:end="17:55">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="26:0"><if pos:start="19:9" pos:end="26:0">if <condition pos:start="19:12" pos:end="19:46">(<expr pos:start="19:13" pos:end="19:45"><call pos:start="19:13" pos:end="19:45"><name pos:start="19:13" pos:end="19:32">memory_region_is_ram</name><argument_list pos:start="19:33" pos:end="19:45">(<argument pos:start="19:34" pos:end="19:44"><expr pos:start="19:34" pos:end="19:44"><name pos:start="19:34" pos:end="19:44"><name pos:start="19:34" pos:end="19:40">section</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:44">mr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:48" pos:end="26:0">{<block_content pos:start="21:13" pos:end="21:55">

            <expr_stmt pos:start="21:13" pos:end="21:55"><expr pos:start="21:13" pos:end="21:54"><name pos:start="21:13" pos:end="21:19">section</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:54"><name pos:start="21:24" pos:end="21:36">phys_sections</name><index pos:start="21:37" pos:end="21:54">[<expr pos:start="21:38" pos:end="21:53"><name pos:start="21:38" pos:end="21:53">phys_section_rom</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="25:1" pos:end="25:29">#<cpp:directive pos:start="25:2" pos:end="25:6">ifdef</cpp:directive> <name pos:start="25:8" pos:end="25:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

        <expr_stmt pos:start="27:9" pos:end="27:54"><expr pos:start="27:9" pos:end="27:53"><call pos:start="27:9" pos:end="27:53"><name pos:start="27:9" pos:end="27:20">io_mem_write</name><argument_list pos:start="27:21" pos:end="27:53">(<argument pos:start="27:22" pos:end="27:32"><expr pos:start="27:22" pos:end="27:32"><name pos:start="27:22" pos:end="27:32"><name pos:start="27:22" pos:end="27:28">section</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:32">mr</name></name></expr></argument>, <argument pos:start="27:35" pos:end="27:38"><expr pos:start="27:35" pos:end="27:38"><name pos:start="27:35" pos:end="27:38">addr</name></expr></argument>, <argument pos:start="27:41" pos:end="27:49"><expr pos:start="27:41" pos:end="27:49"><name pos:start="27:41" pos:end="27:43">val</name> <operator pos:start="27:45" pos:end="27:46">&gt;&gt;</operator> <literal type="number" pos:start="27:48" pos:end="27:49">32</literal></expr></argument>, <argument pos:start="27:52" pos:end="27:52"><expr pos:start="27:52" pos:end="27:52"><literal type="number" pos:start="27:52" pos:end="27:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="32:0"><expr pos:start="29:9" pos:end="29:61"><call pos:start="29:9" pos:end="29:61"><name pos:start="29:9" pos:end="29:20">io_mem_write</name><argument_list pos:start="29:21" pos:end="29:61">(<argument pos:start="29:22" pos:end="29:32"><expr pos:start="29:22" pos:end="29:32"><name pos:start="29:22" pos:end="29:32"><name pos:start="29:22" pos:end="29:28">section</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:32">mr</name></name></expr></argument>, <argument pos:start="29:35" pos:end="29:42"><expr pos:start="29:35" pos:end="29:42"><name pos:start="29:35" pos:end="29:38">addr</name> <operator pos:start="29:40" pos:end="29:40">+</operator> <literal type="number" pos:start="29:42" pos:end="29:42">4</literal></expr></argument>, <argument pos:start="29:45" pos:end="29:57"><expr pos:start="29:45" pos:end="29:57"><operator pos:start="29:45" pos:end="29:45">(</operator><name pos:start="29:46" pos:end="29:53">uint32_t</name><operator pos:start="29:54" pos:end="29:54">)</operator><name pos:start="29:55" pos:end="29:57">val</name></expr></argument>, <argument pos:start="29:60" pos:end="29:60"><expr pos:start="29:60" pos:end="29:60"><literal type="number" pos:start="29:60" pos:end="29:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="33:9" pos:end="33:58"><expr pos:start="33:9" pos:end="33:57"><call pos:start="33:9" pos:end="33:57"><name pos:start="33:9" pos:end="33:20">io_mem_write</name><argument_list pos:start="33:21" pos:end="33:57">(<argument pos:start="33:22" pos:end="33:32"><expr pos:start="33:22" pos:end="33:32"><name pos:start="33:22" pos:end="33:32"><name pos:start="33:22" pos:end="33:28">section</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:32">mr</name></name></expr></argument>, <argument pos:start="33:35" pos:end="33:38"><expr pos:start="33:35" pos:end="33:38"><name pos:start="33:35" pos:end="33:38">addr</name></expr></argument>, <argument pos:start="33:41" pos:end="33:53"><expr pos:start="33:41" pos:end="33:53"><operator pos:start="33:41" pos:end="33:41">(</operator><name pos:start="33:42" pos:end="33:49">uint32_t</name><operator pos:start="33:50" pos:end="33:50">)</operator><name pos:start="33:51" pos:end="33:53">val</name></expr></argument>, <argument pos:start="33:56" pos:end="33:56"><expr pos:start="33:56" pos:end="33:56"><literal type="number" pos:start="33:56" pos:end="33:56">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="38:0"><expr pos:start="35:9" pos:end="35:57"><call pos:start="35:9" pos:end="35:57"><name pos:start="35:9" pos:end="35:20">io_mem_write</name><argument_list pos:start="35:21" pos:end="35:57">(<argument pos:start="35:22" pos:end="35:32"><expr pos:start="35:22" pos:end="35:32"><name pos:start="35:22" pos:end="35:32"><name pos:start="35:22" pos:end="35:28">section</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:32">mr</name></name></expr></argument>, <argument pos:start="35:35" pos:end="35:42"><expr pos:start="35:35" pos:end="35:42"><name pos:start="35:35" pos:end="35:38">addr</name> <operator pos:start="35:40" pos:end="35:40">+</operator> <literal type="number" pos:start="35:42" pos:end="35:42">4</literal></expr></argument>, <argument pos:start="35:45" pos:end="35:53"><expr pos:start="35:45" pos:end="35:53"><name pos:start="35:45" pos:end="35:47">val</name> <operator pos:start="35:49" pos:end="35:50">&gt;&gt;</operator> <literal type="number" pos:start="35:52" pos:end="35:53">32</literal></expr></argument>, <argument pos:start="35:56" pos:end="35:56"><expr pos:start="35:56" pos:end="35:56"><literal type="number" pos:start="35:56" pos:end="35:56">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="49:5">else <block pos:start="39:12" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:24">

        <expr_stmt pos:start="41:9" pos:end="45:76"><expr pos:start="41:9" pos:end="45:75"><name pos:start="41:9" pos:end="41:11">ptr</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="45:75"><name pos:start="41:15" pos:end="41:30">qemu_get_ram_ptr</name><argument_list pos:start="41:31" pos:end="45:75">(<argument pos:start="41:32" pos:end="45:74"><expr pos:start="41:32" pos:end="45:74"><operator pos:start="41:32" pos:end="41:32">(</operator><call pos:start="41:33" pos:end="41:71"><name pos:start="41:33" pos:end="41:58">memory_region_get_ram_addr</name><argument_list pos:start="41:59" pos:end="41:71">(<argument pos:start="41:60" pos:end="41:70"><expr pos:start="41:60" pos:end="41:70"><name pos:start="41:60" pos:end="41:70"><name pos:start="41:60" pos:end="41:66">section</name><operator pos:start="41:67" pos:end="41:68">-&gt;</operator><name pos:start="41:69" pos:end="41:70">mr</name></name></expr></argument>)</argument_list></call>

                                <operator pos:start="43:33" pos:end="43:33">&amp;</operator> <name pos:start="43:35" pos:end="43:50">TARGET_PAGE_MASK</name><operator pos:start="43:51" pos:end="43:51">)</operator>

                               <operator pos:start="45:32" pos:end="45:32">+</operator> <call pos:start="45:34" pos:end="45:74"><name pos:start="45:34" pos:end="45:59">memory_region_section_addr</name><argument_list pos:start="45:60" pos:end="45:74">(<argument pos:start="45:61" pos:end="45:67"><expr pos:start="45:61" pos:end="45:67"><name pos:start="45:61" pos:end="45:67">section</name></expr></argument>, <argument pos:start="45:70" pos:end="45:73"><expr pos:start="45:70" pos:end="45:73"><name pos:start="45:70" pos:end="45:73">addr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:24"><expr pos:start="47:9" pos:end="47:23"><call pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:13">stq_p</name><argument_list pos:start="47:14" pos:end="47:23">(<argument pos:start="47:15" pos:end="47:17"><expr pos:start="47:15" pos:end="47:17"><name pos:start="47:15" pos:end="47:17">ptr</name></expr></argument>, <argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
