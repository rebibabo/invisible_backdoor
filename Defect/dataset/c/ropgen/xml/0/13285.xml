<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13285.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:38">flashsv_encode_init</name><parameter_list pos:start="1:39" pos:end="1:61">(<parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:53">AVCodecContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">FlashSVContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:21"><expr pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:12">avctx</name></name> <operator pos:start="9:14" pos:end="9:14">=</operator> <name pos:start="9:16" pos:end="9:20">avctx</name></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:52">(<expr pos:start="13:9" pos:end="13:51"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:20">width</name></name> <operator pos:start="13:22" pos:end="13:22">&gt;</operator> <literal type="number" pos:start="13:24" pos:end="13:27">4095</literal> <operator pos:start="13:29" pos:end="13:30">||</operator> <name pos:start="13:32" pos:end="13:44"><name pos:start="13:32" pos:end="13:36">avctx</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:44">height</name></name> <operator pos:start="13:46" pos:end="13:46">&gt;</operator> <literal type="number" pos:start="13:48" pos:end="13:51">4095</literal></expr>)</condition> <block pos:start="13:54" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:35">

        <expr_stmt pos:start="15:9" pos:end="17:78"><expr pos:start="15:9" pos:end="17:77"><call pos:start="15:9" pos:end="17:77"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="17:77">(<argument pos:start="15:16" pos:end="15:20"><expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">avctx</name></expr></argument>, <argument pos:start="15:23" pos:end="15:34"><expr pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="17:16" pos:end="17:76"><expr pos:start="17:16" pos:end="17:76"><literal type="string" pos:start="17:16" pos:end="17:76">"Input dimensions too large, input must be max 4096x4096 !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="25:5" pos:end="25:63">// Needed if zlib unused or init aborted before deflateInit</comment>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><call pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:44">(<argument pos:start="27:12" pos:end="27:22"><expr pos:start="27:12" pos:end="27:22"><operator pos:start="27:12" pos:end="27:12">&amp;</operator><name pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:22">zstream</name></name></expr></argument>, <argument pos:start="27:25" pos:end="27:25"><expr pos:start="27:25" pos:end="27:25"><literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr></argument>, <argument pos:start="27:28" pos:end="27:43"><expr pos:start="27:28" pos:end="27:43"><sizeof pos:start="27:28" pos:end="27:43">sizeof<argument_list pos:start="27:34" pos:end="27:43">(<argument pos:start="27:35" pos:end="27:42"><expr pos:start="27:35" pos:end="27:42"><name pos:start="27:35" pos:end="27:42">z_stream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:21">last_key_frame</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:18">image_width</name></name>  <operator pos:start="35:21" pos:end="35:21">=</operator> <name pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:27">avctx</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:34">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:19">image_height</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:35"><name pos:start="37:23" pos:end="37:27">avctx</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:35">height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:15">tmpblock</name></name>  <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:44"><name pos:start="41:20" pos:end="41:29">av_mallocz</name><argument_list pos:start="41:30" pos:end="41:44">(<argument pos:start="41:31" pos:end="41:43"><expr pos:start="41:31" pos:end="41:43"><literal type="number" pos:start="41:31" pos:end="41:31">3</literal> <operator pos:start="41:33" pos:end="41:33">*</operator> <literal type="number" pos:start="41:35" pos:end="41:37">256</literal> <operator pos:start="41:39" pos:end="41:39">*</operator> <literal type="number" pos:start="41:41" pos:end="41:43">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:68"><expr pos:start="43:5" pos:end="43:67"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:16">encbuffer</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:67"><name pos:start="43:20" pos:end="43:29">av_mallocz</name><argument_list pos:start="43:30" pos:end="43:67">(<argument pos:start="43:31" pos:end="43:66"><expr pos:start="43:31" pos:end="43:66"><name pos:start="43:31" pos:end="43:44"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:44">image_width</name></name> <operator pos:start="43:46" pos:end="43:46">*</operator> <name pos:start="43:48" pos:end="43:62"><name pos:start="43:48" pos:end="43:48">s</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:62">image_height</name></name> <operator pos:start="43:64" pos:end="43:64">*</operator> <literal type="number" pos:start="43:66" pos:end="43:66">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:38">(<expr pos:start="47:9" pos:end="47:37"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:20"><name pos:start="47:10" pos:end="47:10">s</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:20">tmpblock</name></name> <operator pos:start="47:22" pos:end="47:23">||</operator> <operator pos:start="47:25" pos:end="47:25">!</operator><name pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:26">s</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:37">encbuffer</name></name></expr>)</condition> <block pos:start="47:40" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:31">

        <expr_stmt pos:start="49:9" pos:end="49:67"><expr pos:start="49:9" pos:end="49:66"><call pos:start="49:9" pos:end="49:66"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:66">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:37" pos:end="49:65"><expr pos:start="49:37" pos:end="49:65"><literal type="string" pos:start="49:37" pos:end="49:65">"Memory allocation failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:31">return <expr pos:start="51:16" pos:end="51:30"><call pos:start="51:16" pos:end="51:30"><name pos:start="51:16" pos:end="51:22">AVERROR</name><argument_list pos:start="51:23" pos:end="51:30">(<argument pos:start="51:24" pos:end="51:29"><expr pos:start="51:24" pos:end="51:29"><name pos:start="51:24" pos:end="51:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:42"><expr pos:start="57:5" pos:end="57:41"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:9">avctx</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:22">coded_frame</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <call pos:start="57:26" pos:end="57:41"><name pos:start="57:26" pos:end="57:39">av_frame_alloc</name><argument_list pos:start="57:40" pos:end="57:41">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:28">(<expr pos:start="59:9" pos:end="59:27"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:27"><name pos:start="59:10" pos:end="59:14">avctx</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:27">coded_frame</name></name></expr>)</condition> <block pos:start="59:30" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:31">

        <expr_stmt pos:start="61:9" pos:end="61:34"><expr pos:start="61:9" pos:end="61:33"><call pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:26">flashsv_encode_end</name><argument_list pos:start="61:27" pos:end="61:33">(<argument pos:start="61:28" pos:end="61:32"><expr pos:start="61:28" pos:end="61:32"><name pos:start="61:28" pos:end="61:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:31">return <expr pos:start="63:16" pos:end="63:30"><call pos:start="63:16" pos:end="63:30"><name pos:start="63:16" pos:end="63:22">AVERROR</name><argument_list pos:start="63:23" pos:end="63:30">(<argument pos:start="63:24" pos:end="63:29"><expr pos:start="63:24" pos:end="63:29"><name pos:start="63:24" pos:end="63:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
