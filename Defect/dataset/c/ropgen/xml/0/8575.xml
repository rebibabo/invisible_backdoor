<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8575.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">kvm_arch_reset_vcpu</name><parameter_list pos:start="1:25" pos:end="1:37">(<parameter pos:start="1:26" pos:end="1:36"><decl pos:start="1:26" pos:end="1:36"><type pos:start="1:26" pos:end="1:33"><name pos:start="1:26" pos:end="1:31">X86CPU</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">cpu</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CPUX86State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">env</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">cpu</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">env</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:7">env</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:27">exception_injected</name></name> <operator pos:start="9:29" pos:end="9:29">=</operator> <operator pos:start="9:31" pos:end="9:31">-</operator><literal type="number" pos:start="9:32" pos:end="9:32">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:7">env</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:27">interrupt_injected</name></name> <operator pos:start="11:29" pos:end="11:29">=</operator> <operator pos:start="11:31" pos:end="11:31">-</operator><literal type="number" pos:start="11:32" pos:end="11:32">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:18"><expr pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:7">env</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:13">xcr0</name></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:32">(<expr pos:start="15:9" pos:end="15:31"><call pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:29">kvm_irqchip_in_kernel</name><argument_list pos:start="15:30" pos:end="15:31">()</argument_list></call></expr>)</condition> <block pos:start="15:34" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:69">

        <expr_stmt pos:start="17:9" pos:end="19:69"><expr pos:start="17:9" pos:end="19:68"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:11">env</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:21">mp_state</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <ternary pos:start="17:25" pos:end="19:68"><condition pos:start="17:25" pos:end="17:41"><expr pos:start="17:25" pos:end="17:39"><call pos:start="17:25" pos:end="17:39"><name pos:start="17:25" pos:end="17:34">cpu_is_bsp</name><argument_list pos:start="17:35" pos:end="17:39">(<argument pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:38">cpu</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="17:43" pos:end="17:63"> <expr pos:start="17:43" pos:end="17:63"><name pos:start="17:43" pos:end="17:63">KVM_MP_STATE_RUNNABLE</name></expr> </then><else pos:start="17:65" pos:end="19:68">:

                                          <expr pos:start="19:43" pos:end="19:68"><name pos:start="19:43" pos:end="19:68">KVM_MP_STATE_UNINITIALIZED</name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="25:5">else <block pos:start="21:12" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:46">

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:21">mp_state</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <name pos:start="23:25" pos:end="23:45">KVM_MP_STATE_RUNNABLE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="39:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:11">cpu</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:25">hyperv_synic</name></name></expr>)</condition> <block pos:start="29:28" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:9">

        <decl_stmt pos:start="31:9" pos:end="31:14"><decl pos:start="31:9" pos:end="31:13"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name></decl>;</decl_stmt>

        <for pos:start="33:9" pos:end="37:9">for <control pos:start="33:13" pos:end="33:64">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">i</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:59"><expr pos:start="33:21" pos:end="33:58"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <call pos:start="33:25" pos:end="33:58"><name pos:start="33:25" pos:end="33:34">ARRAY_SIZE</name><argument_list pos:start="33:35" pos:end="33:58">(<argument pos:start="33:36" pos:end="33:57"><expr pos:start="33:36" pos:end="33:57"><name pos:start="33:36" pos:end="33:57"><name pos:start="33:36" pos:end="33:38">env</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:57">msr_hv_synic_sint</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="33:61" pos:end="33:63"><expr pos:start="33:61" pos:end="33:63"><name pos:start="33:61" pos:end="33:61">i</name><operator pos:start="33:62" pos:end="33:63">++</operator></expr></incr>)</control> <block pos:start="33:66" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:55">

            <expr_stmt pos:start="35:13" pos:end="35:55"><expr pos:start="35:13" pos:end="35:54"><name pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:15">env</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:34">msr_hv_synic_sint</name><index pos:start="35:35" pos:end="35:37">[<expr pos:start="35:36" pos:end="35:36"><name pos:start="35:36" pos:end="35:36">i</name></expr>]</index></name> <operator pos:start="35:39" pos:end="35:39">=</operator> <name pos:start="35:41" pos:end="35:54">HV_SINT_MASKED</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
