<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14526.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">cuda_writeb</name><parameter_list pos:start="1:24" pos:end="1:76">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:61"><decl pos:start="1:39" pos:end="1:61"><type pos:start="1:39" pos:end="1:61"><name pos:start="1:39" pos:end="1:56">target_phys_addr_t</name></type> <name pos:start="1:58" pos:end="1:61">addr</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:75"><decl pos:start="1:64" pos:end="1:75"><type pos:start="1:64" pos:end="1:75"><name pos:start="1:64" pos:end="1:71">uint32_t</name></type> <name pos:start="1:73" pos:end="1:75">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">CUDAState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:29"><expr pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:8">addr</name> <operator pos:start="9:10" pos:end="9:10">=</operator> <operator pos:start="9:12" pos:end="9:12">(</operator><name pos:start="9:13" pos:end="9:16">addr</name> <operator pos:start="9:18" pos:end="9:19">&gt;&gt;</operator> <literal type="number" pos:start="9:21" pos:end="9:21">9</literal><operator pos:start="9:22" pos:end="9:22">)</operator> <operator pos:start="9:24" pos:end="9:24">&amp;</operator> <literal type="number" pos:start="9:26" pos:end="9:28">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:63"><expr pos:start="11:5" pos:end="11:62"><call pos:start="11:5" pos:end="11:62"><name pos:start="11:5" pos:end="11:16">CUDA_DPRINTF</name><argument_list pos:start="11:17" pos:end="11:62">(<argument pos:start="11:18" pos:end="11:45"><expr pos:start="11:18" pos:end="11:45"><literal type="string" pos:start="11:18" pos:end="11:45">"write: reg=0x%x val=%02x\n"</literal></expr></argument>, <argument pos:start="11:48" pos:end="11:56"><expr pos:start="11:48" pos:end="11:56"><operator pos:start="11:48" pos:end="11:48">(</operator><name pos:start="11:49" pos:end="11:51">int</name><operator pos:start="11:52" pos:end="11:52">)</operator><name pos:start="11:53" pos:end="11:56">addr</name></expr></argument>, <argument pos:start="11:59" pos:end="11:61"><expr pos:start="11:59" pos:end="11:61"><name pos:start="11:59" pos:end="11:61">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="15:5" pos:end="153:5">switch<condition pos:start="15:11" pos:end="15:16">(<expr pos:start="15:12" pos:end="15:15"><name pos:start="15:12" pos:end="15:15">addr</name></expr>)</condition> <block pos:start="15:18" pos:end="153:5">{<block_content pos:start="17:5" pos:end="151:14">

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:19"><expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:12"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:12">b</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:18">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:23"><expr pos:start="21:9" pos:end="21:22"><call pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:19">cuda_update</name><argument_list pos:start="21:20" pos:end="21:22">(<argument pos:start="21:21" pos:end="21:21"><expr pos:start="21:21" pos:end="21:21"><name pos:start="21:21" pos:end="21:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">1</literal></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:19"><expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:12"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:12">a</name></name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:18">val</name></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">2</literal></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:22"><expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:15">dirb</name></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:21">val</name></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">3</literal></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:15">dira</name></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:21">val</name></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">4</literal></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:65"><expr pos:start="45:9" pos:end="45:64"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:17">timers</name><index pos:start="45:18" pos:end="45:20">[<expr pos:start="45:19" pos:end="45:19"><literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>]</index></name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:26">latch</name> <operator pos:start="45:28" pos:end="45:28">=</operator> <operator pos:start="45:30" pos:end="45:30">(</operator><name pos:start="45:31" pos:end="45:42"><name pos:start="45:31" pos:end="45:31">s</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:39">timers</name><index pos:start="45:40" pos:end="45:42">[<expr pos:start="45:41" pos:end="45:41"><literal type="number" pos:start="45:41" pos:end="45:41">0</literal></expr>]</index></name><operator pos:start="45:43" pos:end="45:43">.</operator><name pos:start="45:44" pos:end="45:48">latch</name> <operator pos:start="45:50" pos:end="45:50">&amp;</operator> <literal type="number" pos:start="45:52" pos:end="45:57">0xff00</literal><operator pos:start="45:58" pos:end="45:58">)</operator> <operator pos:start="45:60" pos:end="45:60">|</operator> <name pos:start="45:62" pos:end="45:64">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:73"><expr pos:start="47:9" pos:end="47:72"><call pos:start="47:9" pos:end="47:72"><name pos:start="47:9" pos:end="47:25">cuda_timer_update</name><argument_list pos:start="47:26" pos:end="47:72">(<argument pos:start="47:27" pos:end="47:27"><expr pos:start="47:27" pos:end="47:27"><name pos:start="47:27" pos:end="47:27">s</name></expr></argument>, <argument pos:start="47:30" pos:end="47:42"><expr pos:start="47:30" pos:end="47:42"><operator pos:start="47:30" pos:end="47:30">&amp;</operator><name pos:start="47:31" pos:end="47:42"><name pos:start="47:31" pos:end="47:31">s</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:39">timers</name><index pos:start="47:40" pos:end="47:42">[<expr pos:start="47:41" pos:end="47:41"><literal type="number" pos:start="47:41" pos:end="47:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:45" pos:end="47:71"><expr pos:start="47:45" pos:end="47:71"><call pos:start="47:45" pos:end="47:71"><name pos:start="47:45" pos:end="47:61">qemu_get_clock_ns</name><argument_list pos:start="47:62" pos:end="47:71">(<argument pos:start="47:63" pos:end="47:70"><expr pos:start="47:63" pos:end="47:70"><name pos:start="47:63" pos:end="47:70">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">5</literal></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:70"><expr pos:start="53:9" pos:end="53:69"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:17">timers</name><index pos:start="53:18" pos:end="53:20">[<expr pos:start="53:19" pos:end="53:19"><literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>]</index></name><operator pos:start="53:21" pos:end="53:21">.</operator><name pos:start="53:22" pos:end="53:26">latch</name> <operator pos:start="53:28" pos:end="53:28">=</operator> <operator pos:start="53:30" pos:end="53:30">(</operator><name pos:start="53:31" pos:end="53:42"><name pos:start="53:31" pos:end="53:31">s</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:39">timers</name><index pos:start="53:40" pos:end="53:42">[<expr pos:start="53:41" pos:end="53:41"><literal type="number" pos:start="53:41" pos:end="53:41">0</literal></expr>]</index></name><operator pos:start="53:43" pos:end="53:43">.</operator><name pos:start="53:44" pos:end="53:48">latch</name> <operator pos:start="53:50" pos:end="53:50">&amp;</operator> <literal type="number" pos:start="53:52" pos:end="53:55">0xff</literal><operator pos:start="53:56" pos:end="53:56">)</operator> <operator pos:start="53:58" pos:end="53:58">|</operator> <operator pos:start="53:60" pos:end="53:60">(</operator><name pos:start="53:61" pos:end="53:63">val</name> <operator pos:start="53:65" pos:end="53:66">&lt;&lt;</operator> <literal type="number" pos:start="53:68" pos:end="53:68">8</literal><operator pos:start="53:69" pos:end="53:69">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:26"><expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:14">ifr</name></name> <operator pos:start="55:16" pos:end="55:17">&amp;=</operator> <operator pos:start="55:19" pos:end="55:19">~</operator><name pos:start="55:20" pos:end="55:25">T1_INT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:58"><expr pos:start="57:9" pos:end="57:57"><call pos:start="57:9" pos:end="57:57"><name pos:start="57:9" pos:end="57:19">set_counter</name><argument_list pos:start="57:20" pos:end="57:57">(<argument pos:start="57:21" pos:end="57:21"><expr pos:start="57:21" pos:end="57:21"><name pos:start="57:21" pos:end="57:21">s</name></expr></argument>, <argument pos:start="57:24" pos:end="57:36"><expr pos:start="57:24" pos:end="57:36"><operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:36"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:33">timers</name><index pos:start="57:34" pos:end="57:36">[<expr pos:start="57:35" pos:end="57:35"><literal type="number" pos:start="57:35" pos:end="57:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:39" pos:end="57:56"><expr pos:start="57:39" pos:end="57:56"><name pos:start="57:39" pos:end="57:50"><name pos:start="57:39" pos:end="57:39">s</name><operator pos:start="57:40" pos:end="57:41">-&gt;</operator><name pos:start="57:42" pos:end="57:47">timers</name><index pos:start="57:48" pos:end="57:50">[<expr pos:start="57:49" pos:end="57:49"><literal type="number" pos:start="57:49" pos:end="57:49">0</literal></expr>]</index></name><operator pos:start="57:51" pos:end="57:51">.</operator><name pos:start="57:52" pos:end="57:56">latch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">6</literal></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:65"><expr pos:start="63:9" pos:end="63:64"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:17">timers</name><index pos:start="63:18" pos:end="63:20">[<expr pos:start="63:19" pos:end="63:19"><literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>]</index></name><operator pos:start="63:21" pos:end="63:21">.</operator><name pos:start="63:22" pos:end="63:26">latch</name> <operator pos:start="63:28" pos:end="63:28">=</operator> <operator pos:start="63:30" pos:end="63:30">(</operator><name pos:start="63:31" pos:end="63:42"><name pos:start="63:31" pos:end="63:31">s</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:39">timers</name><index pos:start="63:40" pos:end="63:42">[<expr pos:start="63:41" pos:end="63:41"><literal type="number" pos:start="63:41" pos:end="63:41">0</literal></expr>]</index></name><operator pos:start="63:43" pos:end="63:43">.</operator><name pos:start="63:44" pos:end="63:48">latch</name> <operator pos:start="63:50" pos:end="63:50">&amp;</operator> <literal type="number" pos:start="63:52" pos:end="63:57">0xff00</literal><operator pos:start="63:58" pos:end="63:58">)</operator> <operator pos:start="63:60" pos:end="63:60">|</operator> <name pos:start="63:62" pos:end="63:64">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:73"><expr pos:start="65:9" pos:end="65:72"><call pos:start="65:9" pos:end="65:72"><name pos:start="65:9" pos:end="65:25">cuda_timer_update</name><argument_list pos:start="65:26" pos:end="65:72">(<argument pos:start="65:27" pos:end="65:27"><expr pos:start="65:27" pos:end="65:27"><name pos:start="65:27" pos:end="65:27">s</name></expr></argument>, <argument pos:start="65:30" pos:end="65:42"><expr pos:start="65:30" pos:end="65:42"><operator pos:start="65:30" pos:end="65:30">&amp;</operator><name pos:start="65:31" pos:end="65:42"><name pos:start="65:31" pos:end="65:31">s</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:39">timers</name><index pos:start="65:40" pos:end="65:42">[<expr pos:start="65:41" pos:end="65:41"><literal type="number" pos:start="65:41" pos:end="65:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:45" pos:end="65:71"><expr pos:start="65:45" pos:end="65:71"><call pos:start="65:45" pos:end="65:71"><name pos:start="65:45" pos:end="65:61">qemu_get_clock_ns</name><argument_list pos:start="65:62" pos:end="65:71">(<argument pos:start="65:63" pos:end="65:70"><expr pos:start="65:63" pos:end="65:70"><name pos:start="65:63" pos:end="65:70">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:11">case <expr pos:start="69:10" pos:end="69:10"><literal type="number" pos:start="69:10" pos:end="69:10">7</literal></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:70"><expr pos:start="71:9" pos:end="71:69"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:17">timers</name><index pos:start="71:18" pos:end="71:20">[<expr pos:start="71:19" pos:end="71:19"><literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>]</index></name><operator pos:start="71:21" pos:end="71:21">.</operator><name pos:start="71:22" pos:end="71:26">latch</name> <operator pos:start="71:28" pos:end="71:28">=</operator> <operator pos:start="71:30" pos:end="71:30">(</operator><name pos:start="71:31" pos:end="71:42"><name pos:start="71:31" pos:end="71:31">s</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:39">timers</name><index pos:start="71:40" pos:end="71:42">[<expr pos:start="71:41" pos:end="71:41"><literal type="number" pos:start="71:41" pos:end="71:41">0</literal></expr>]</index></name><operator pos:start="71:43" pos:end="71:43">.</operator><name pos:start="71:44" pos:end="71:48">latch</name> <operator pos:start="71:50" pos:end="71:50">&amp;</operator> <literal type="number" pos:start="71:52" pos:end="71:55">0xff</literal><operator pos:start="71:56" pos:end="71:56">)</operator> <operator pos:start="71:58" pos:end="71:58">|</operator> <operator pos:start="71:60" pos:end="71:60">(</operator><name pos:start="71:61" pos:end="71:63">val</name> <operator pos:start="71:65" pos:end="71:66">&lt;&lt;</operator> <literal type="number" pos:start="71:68" pos:end="71:68">8</literal><operator pos:start="71:69" pos:end="71:69">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:26"><expr pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:14">ifr</name></name> <operator pos:start="73:16" pos:end="73:17">&amp;=</operator> <operator pos:start="73:19" pos:end="73:19">~</operator><name pos:start="73:20" pos:end="73:25">T1_INT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:73"><expr pos:start="75:9" pos:end="75:72"><call pos:start="75:9" pos:end="75:72"><name pos:start="75:9" pos:end="75:25">cuda_timer_update</name><argument_list pos:start="75:26" pos:end="75:72">(<argument pos:start="75:27" pos:end="75:27"><expr pos:start="75:27" pos:end="75:27"><name pos:start="75:27" pos:end="75:27">s</name></expr></argument>, <argument pos:start="75:30" pos:end="75:42"><expr pos:start="75:30" pos:end="75:42"><operator pos:start="75:30" pos:end="75:30">&amp;</operator><name pos:start="75:31" pos:end="75:42"><name pos:start="75:31" pos:end="75:31">s</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:39">timers</name><index pos:start="75:40" pos:end="75:42">[<expr pos:start="75:41" pos:end="75:41"><literal type="number" pos:start="75:41" pos:end="75:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:45" pos:end="75:71"><expr pos:start="75:45" pos:end="75:71"><call pos:start="75:45" pos:end="75:71"><name pos:start="75:45" pos:end="75:61">qemu_get_clock_ns</name><argument_list pos:start="75:62" pos:end="75:71">(<argument pos:start="75:63" pos:end="75:70"><expr pos:start="75:63" pos:end="75:70"><name pos:start="75:63" pos:end="75:70">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:11">case <expr pos:start="79:10" pos:end="79:10"><literal type="number" pos:start="79:10" pos:end="79:10">8</literal></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:33"><expr pos:start="81:9" pos:end="81:32"><name pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:17">timers</name><index pos:start="81:18" pos:end="81:20">[<expr pos:start="81:19" pos:end="81:19"><literal type="number" pos:start="81:19" pos:end="81:19">1</literal></expr>]</index></name><operator pos:start="81:21" pos:end="81:21">.</operator><name pos:start="81:22" pos:end="81:26">latch</name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:32">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><call pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:19">set_counter</name><argument_list pos:start="83:20" pos:end="83:42">(<argument pos:start="83:21" pos:end="83:21"><expr pos:start="83:21" pos:end="83:21"><name pos:start="83:21" pos:end="83:21">s</name></expr></argument>, <argument pos:start="83:24" pos:end="83:36"><expr pos:start="83:24" pos:end="83:36"><operator pos:start="83:24" pos:end="83:24">&amp;</operator><name pos:start="83:25" pos:end="83:36"><name pos:start="83:25" pos:end="83:25">s</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:33">timers</name><index pos:start="83:34" pos:end="83:36">[<expr pos:start="83:35" pos:end="83:35"><literal type="number" pos:start="83:35" pos:end="83:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:39" pos:end="83:41"><expr pos:start="83:39" pos:end="83:41"><name pos:start="83:39" pos:end="83:41">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:11">case <expr pos:start="87:10" pos:end="87:10"><literal type="number" pos:start="87:10" pos:end="87:10">9</literal></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:71"><expr pos:start="89:9" pos:end="89:70"><call pos:start="89:9" pos:end="89:70"><name pos:start="89:9" pos:end="89:19">set_counter</name><argument_list pos:start="89:20" pos:end="89:70">(<argument pos:start="89:21" pos:end="89:21"><expr pos:start="89:21" pos:end="89:21"><name pos:start="89:21" pos:end="89:21">s</name></expr></argument>, <argument pos:start="89:24" pos:end="89:36"><expr pos:start="89:24" pos:end="89:36"><operator pos:start="89:24" pos:end="89:24">&amp;</operator><name pos:start="89:25" pos:end="89:36"><name pos:start="89:25" pos:end="89:25">s</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:33">timers</name><index pos:start="89:34" pos:end="89:36">[<expr pos:start="89:35" pos:end="89:35"><literal type="number" pos:start="89:35" pos:end="89:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="89:39" pos:end="89:69"><expr pos:start="89:39" pos:end="89:69"><operator pos:start="89:39" pos:end="89:39">(</operator><name pos:start="89:40" pos:end="89:42">val</name> <operator pos:start="89:44" pos:end="89:45">&lt;&lt;</operator> <literal type="number" pos:start="89:47" pos:end="89:47">8</literal><operator pos:start="89:48" pos:end="89:48">)</operator> <operator pos:start="89:50" pos:end="89:50">|</operator> <name pos:start="89:52" pos:end="89:63"><name pos:start="89:52" pos:end="89:52">s</name><operator pos:start="89:53" pos:end="89:54">-&gt;</operator><name pos:start="89:55" pos:end="89:60">timers</name><index pos:start="89:61" pos:end="89:63">[<expr pos:start="89:62" pos:end="89:62"><literal type="number" pos:start="89:62" pos:end="89:62">1</literal></expr>]</index></name><operator pos:start="89:64" pos:end="89:64">.</operator><name pos:start="89:65" pos:end="89:69">latch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:12">case <expr pos:start="93:10" pos:end="93:11"><literal type="number" pos:start="93:10" pos:end="93:11">10</literal></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:20"><expr pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:13"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:13">sr</name></name> <operator pos:start="95:15" pos:end="95:15">=</operator> <name pos:start="95:17" pos:end="95:19">val</name></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:12">case <expr pos:start="99:10" pos:end="99:11"><literal type="number" pos:start="99:10" pos:end="99:11">11</literal></expr>:</case>

        <expr_stmt pos:start="101:9" pos:end="101:21"><expr pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:14"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:14">acr</name></name> <operator pos:start="101:16" pos:end="101:16">=</operator> <name pos:start="101:18" pos:end="101:20">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:73"><expr pos:start="103:9" pos:end="103:72"><call pos:start="103:9" pos:end="103:72"><name pos:start="103:9" pos:end="103:25">cuda_timer_update</name><argument_list pos:start="103:26" pos:end="103:72">(<argument pos:start="103:27" pos:end="103:27"><expr pos:start="103:27" pos:end="103:27"><name pos:start="103:27" pos:end="103:27">s</name></expr></argument>, <argument pos:start="103:30" pos:end="103:42"><expr pos:start="103:30" pos:end="103:42"><operator pos:start="103:30" pos:end="103:30">&amp;</operator><name pos:start="103:31" pos:end="103:42"><name pos:start="103:31" pos:end="103:31">s</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:39">timers</name><index pos:start="103:40" pos:end="103:42">[<expr pos:start="103:41" pos:end="103:41"><literal type="number" pos:start="103:41" pos:end="103:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="103:45" pos:end="103:71"><expr pos:start="103:45" pos:end="103:71"><call pos:start="103:45" pos:end="103:71"><name pos:start="103:45" pos:end="103:61">qemu_get_clock_ns</name><argument_list pos:start="103:62" pos:end="103:71">(<argument pos:start="103:63" pos:end="103:70"><expr pos:start="103:63" pos:end="103:70"><name pos:start="103:63" pos:end="103:70">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:23"><expr pos:start="105:9" pos:end="105:22"><call pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:19">cuda_update</name><argument_list pos:start="105:20" pos:end="105:22">(<argument pos:start="105:21" pos:end="105:21"><expr pos:start="105:21" pos:end="105:21"><name pos:start="105:21" pos:end="105:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:12">case <expr pos:start="109:10" pos:end="109:11"><literal type="number" pos:start="109:10" pos:end="109:11">12</literal></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:21"><expr pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:14"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:14">pcr</name></name> <operator pos:start="111:16" pos:end="111:16">=</operator> <name pos:start="111:18" pos:end="111:20">val</name></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:12">case <expr pos:start="115:10" pos:end="115:11"><literal type="number" pos:start="115:10" pos:end="115:11">13</literal></expr>:</case>

        <comment type="block" pos:start="117:9" pos:end="117:24">/* reset bits */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:23"><expr pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:14"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:14">ifr</name></name> <operator pos:start="119:16" pos:end="119:17">&amp;=</operator> <operator pos:start="119:19" pos:end="119:19">~</operator><name pos:start="119:20" pos:end="119:22">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:27"><expr pos:start="121:9" pos:end="121:26"><call pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:23">cuda_update_irq</name><argument_list pos:start="121:24" pos:end="121:26">(<argument pos:start="121:25" pos:end="121:25"><expr pos:start="121:25" pos:end="121:25"><name pos:start="121:25" pos:end="121:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <case pos:start="125:5" pos:end="125:12">case <expr pos:start="125:10" pos:end="125:11"><literal type="number" pos:start="125:10" pos:end="125:11">14</literal></expr>:</case>

        <if_stmt pos:start="127:9" pos:end="139:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:26">(<expr pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:15">val</name> <operator pos:start="127:17" pos:end="127:17">&amp;</operator> <name pos:start="127:19" pos:end="127:25">IER_SET</name></expr>)</condition> <block pos:start="127:28" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:33">

            <comment type="block" pos:start="129:13" pos:end="129:26">/* set bits */</comment>

            <expr_stmt pos:start="131:13" pos:end="131:33"><expr pos:start="131:13" pos:end="131:32"><name pos:start="131:13" pos:end="131:18"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:18">ier</name></name> <operator pos:start="131:20" pos:end="131:21">|=</operator> <name pos:start="131:23" pos:end="131:25">val</name> <operator pos:start="131:27" pos:end="131:27">&amp;</operator> <literal type="number" pos:start="131:29" pos:end="131:32">0x7f</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="133:11" pos:end="139:9">else <block pos:start="133:16" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:27">

            <comment type="block" pos:start="135:13" pos:end="135:28">/* reset bits */</comment>

            <expr_stmt pos:start="137:13" pos:end="137:27"><expr pos:start="137:13" pos:end="137:26"><name pos:start="137:13" pos:end="137:18"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:18">ier</name></name> <operator pos:start="137:20" pos:end="137:21">&amp;=</operator> <operator pos:start="137:23" pos:end="137:23">~</operator><name pos:start="137:24" pos:end="137:26">val</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:27"><expr pos:start="141:9" pos:end="141:26"><call pos:start="141:9" pos:end="141:26"><name pos:start="141:9" pos:end="141:23">cuda_update_irq</name><argument_list pos:start="141:24" pos:end="141:26">(<argument pos:start="141:25" pos:end="141:25"><expr pos:start="141:25" pos:end="141:25"><name pos:start="141:25" pos:end="141:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    <default pos:start="145:5" pos:end="145:12">default:</default>

    <case pos:start="147:5" pos:end="147:12">case <expr pos:start="147:10" pos:end="147:11"><literal type="number" pos:start="147:10" pos:end="147:11">15</literal></expr>:</case>

        <expr_stmt pos:start="149:9" pos:end="149:21"><expr pos:start="149:9" pos:end="149:20"><name pos:start="149:9" pos:end="149:14"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:14">anh</name></name> <operator pos:start="149:16" pos:end="149:16">=</operator> <name pos:start="149:18" pos:end="149:20">val</name></expr>;</expr_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
