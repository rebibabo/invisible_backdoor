<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21736.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">ehci_state_fetchsitd</name><parameter_list pos:start="1:32" pos:end="1:59">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:41">EHCIState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">ehci</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:58"><decl pos:start="1:50" pos:end="1:58"><type pos:start="1:50" pos:end="1:58"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:58">async</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:18">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">EHCIsitd</name></type> <name pos:start="7:14" pos:end="7:17">sitd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:19"><expr pos:start="11:5" pos:end="11:18"><call pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:18">(<argument pos:start="11:12" pos:end="11:17"><expr pos:start="11:12" pos:end="11:17"><operator pos:start="11:12" pos:end="11:12">!</operator><name pos:start="11:13" pos:end="11:17">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:9">entry</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:44"><name pos:start="13:13" pos:end="13:31">ehci_get_fetch_addr</name><argument_list pos:start="13:32" pos:end="13:44">(<argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">ehci</name></expr></argument>, <argument pos:start="13:39" pos:end="13:43"><expr pos:start="13:39" pos:end="13:43"><name pos:start="13:39" pos:end="13:43">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:38"><expr pos:start="17:5" pos:end="19:37"><call pos:start="17:5" pos:end="19:37"><name pos:start="17:5" pos:end="17:14">get_dwords</name><argument_list pos:start="17:15" pos:end="19:37">(<argument pos:start="17:16" pos:end="17:31"><expr pos:start="17:16" pos:end="17:31"><call pos:start="17:16" pos:end="17:31"><name pos:start="17:16" pos:end="17:24">NLPTR_GET</name><argument_list pos:start="17:25" pos:end="17:31">(<argument pos:start="17:26" pos:end="17:30"><expr pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:30">entry</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:34" pos:end="17:50"><expr pos:start="17:34" pos:end="17:50"><operator pos:start="17:34" pos:end="17:34">(</operator><name pos:start="17:35" pos:end="17:42">uint32_t</name> <operator pos:start="17:44" pos:end="17:44">*</operator><operator pos:start="17:45" pos:end="17:45">)</operator><operator pos:start="17:46" pos:end="17:46">&amp;</operator><name pos:start="17:47" pos:end="17:50">sitd</name></expr></argument>,

               <argument pos:start="19:16" pos:end="19:36"><expr pos:start="19:16" pos:end="19:36"><sizeof pos:start="19:16" pos:end="19:31">sizeof<argument_list pos:start="19:22" pos:end="19:31">(<argument pos:start="19:23" pos:end="19:30"><expr pos:start="19:23" pos:end="19:30"><name pos:start="19:23" pos:end="19:30">EHCIsitd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="19:33" pos:end="19:34">&gt;&gt;</operator> <literal type="number" pos:start="19:36" pos:end="19:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><call pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:19">ehci_trace_sitd</name><argument_list pos:start="21:20" pos:end="21:39">(<argument pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:24"><name pos:start="21:21" pos:end="21:24">ehci</name></expr></argument>, <argument pos:start="21:27" pos:end="21:31"><expr pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:31">entry</name></expr></argument>, <argument pos:start="21:34" pos:end="21:38"><expr pos:start="21:34" pos:end="21:38"><operator pos:start="21:34" pos:end="21:34">&amp;</operator><name pos:start="21:35" pos:end="21:38">sitd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:46">(<expr pos:start="25:9" pos:end="25:45"><operator pos:start="25:9" pos:end="25:9">!</operator><operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:22"><name pos:start="25:11" pos:end="25:14">sitd</name><operator pos:start="25:15" pos:end="25:15">.</operator><name pos:start="25:16" pos:end="25:22">results</name></name> <operator pos:start="25:24" pos:end="25:24">&amp;</operator> <name pos:start="25:26" pos:end="25:44">SITD_RESULTS_ACTIVE</name><operator pos:start="25:45" pos:end="25:45">)</operator></expr>)</condition> <block pos:start="25:48" pos:end="29:5">{<block_content pos:start="27:48" pos:end="27:48">

        <comment type="block" pos:start="27:9" pos:end="27:47">/* siTD is not active, nothing to do */</comment><empty_stmt pos:start="27:48" pos:end="27:48">;</empty_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="35:5">else <block pos:start="29:12" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:59">

        <comment type="block" pos:start="31:9" pos:end="31:55">/* TODO: split transfers are not implemented */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><call pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:15">fprintf</name><argument_list pos:start="33:16" pos:end="33:58">(<argument pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">stderr</name></expr></argument>, <argument pos:start="33:25" pos:end="33:57"><expr pos:start="33:25" pos:end="33:57"><literal type="string" pos:start="33:25" pos:end="33:57">"WARNING: Skipping active siTD\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><call pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:23">ehci_set_fetch_addr</name><argument_list pos:start="39:24" pos:end="39:47">(<argument pos:start="39:25" pos:end="39:28"><expr pos:start="39:25" pos:end="39:28"><name pos:start="39:25" pos:end="39:28">ehci</name></expr></argument>, <argument pos:start="39:31" pos:end="39:35"><expr pos:start="39:31" pos:end="39:35"><name pos:start="39:31" pos:end="39:35">async</name></expr></argument>, <argument pos:start="39:38" pos:end="39:46"><expr pos:start="39:38" pos:end="39:46"><name pos:start="39:38" pos:end="39:46"><name pos:start="39:38" pos:end="39:41">sitd</name><operator pos:start="39:42" pos:end="39:42">.</operator><name pos:start="39:43" pos:end="39:46">next</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:48"><expr pos:start="41:5" pos:end="41:47"><call pos:start="41:5" pos:end="41:47"><name pos:start="41:5" pos:end="41:18">ehci_set_state</name><argument_list pos:start="41:19" pos:end="41:47">(<argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">ehci</name></expr></argument>, <argument pos:start="41:26" pos:end="41:30"><expr pos:start="41:26" pos:end="41:30"><name pos:start="41:26" pos:end="41:30">async</name></expr></argument>, <argument pos:start="41:33" pos:end="41:46"><expr pos:start="41:33" pos:end="41:46"><name pos:start="41:33" pos:end="41:46">EST_FETCHENTRY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
