<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15841.c" pos:tabs="8"><function pos:start="1:1" pos:end="267:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:42">decode_seq_parameter_set</name><parameter_list pos:start="1:43" pos:end="1:58">(<parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:54">H264Context</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">h</name></decl></parameter>)</parameter_list><block pos:start="1:59" pos:end="267:1">{<block_content pos:start="3:5" pos:end="265:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">profile_idc</name></decl>, <decl pos:start="5:22" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:30">level_idc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">sps_id</name></decl>, <decl pos:start="7:26" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:26" pos:end="7:28">tmp</name></decl>, <decl pos:start="7:31" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:31" pos:end="7:38">mb_width</name></decl>, <decl pos:start="7:41" pos:end="7:49"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:41" pos:end="7:49">mb_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:7">SPS</name> <modifier pos:start="11:9" pos:end="11:9">*</modifier></type><name pos:start="11:10" pos:end="11:12">sps</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:15">profile_idc</name><operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:36"><name pos:start="15:18" pos:end="15:25">get_bits</name><argument_list pos:start="15:26" pos:end="15:36">(<argument pos:start="15:27" pos:end="15:32"><expr pos:start="15:27" pos:end="15:32"><operator pos:start="15:27" pos:end="15:27">&amp;</operator><name pos:start="15:28" pos:end="15:32"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:32">gb</name></name></expr></argument>, <argument pos:start="15:35" pos:end="15:35"><expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><call pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:13">get_bits1</name><argument_list pos:start="17:14" pos:end="17:21">(<argument pos:start="17:15" pos:end="17:20"><expr pos:start="17:15" pos:end="17:20"><operator pos:start="17:15" pos:end="17:15">&amp;</operator><name pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:20">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="17:26" pos:end="17:47">//constraint_set0_flag</comment>

    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><call pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:13">get_bits1</name><argument_list pos:start="19:14" pos:end="19:21">(<argument pos:start="19:15" pos:end="19:20"><expr pos:start="19:15" pos:end="19:20"><operator pos:start="19:15" pos:end="19:15">&amp;</operator><name pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:20">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="19:26" pos:end="19:47">//constraint_set1_flag</comment>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><call pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:13">get_bits1</name><argument_list pos:start="21:14" pos:end="21:21">(<argument pos:start="21:15" pos:end="21:20"><expr pos:start="21:15" pos:end="21:20"><operator pos:start="21:15" pos:end="21:15">&amp;</operator><name pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:20">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="21:26" pos:end="21:47">//constraint_set2_flag</comment>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><call pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:13">get_bits1</name><argument_list pos:start="23:14" pos:end="23:21">(<argument pos:start="23:15" pos:end="23:20"><expr pos:start="23:15" pos:end="23:20"><operator pos:start="23:15" pos:end="23:15">&amp;</operator><name pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:20">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="23:26" pos:end="23:47">//constraint_set3_flag</comment>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><call pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:12">get_bits</name><argument_list pos:start="25:13" pos:end="25:23">(<argument pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:19"><operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:19"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:19">gb</name></name></expr></argument>, <argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="25:26" pos:end="25:36">// reserved</comment>

    <expr_stmt pos:start="27:5" pos:end="27:35"><expr pos:start="27:5" pos:end="27:34"><name pos:start="27:5" pos:end="27:13">level_idc</name><operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:23">get_bits</name><argument_list pos:start="27:24" pos:end="27:34">(<argument pos:start="27:25" pos:end="27:30"><expr pos:start="27:25" pos:end="27:30"><operator pos:start="27:25" pos:end="27:25">&amp;</operator><name pos:start="27:26" pos:end="27:30"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:30">gb</name></name></expr></argument>, <argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:10">sps_id</name><operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:25">get_ue_golomb</name><argument_list pos:start="29:26" pos:end="29:33">(<argument pos:start="29:27" pos:end="29:32"><expr pos:start="29:27" pos:end="29:32"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:32"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:32">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:101"><expr pos:start="33:5" pos:end="33:100"><name pos:start="33:5" pos:end="33:7">sps</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:100"><name pos:start="33:11" pos:end="33:29">alloc_parameter_set</name><argument_list pos:start="33:30" pos:end="33:100">(<argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><name pos:start="33:31" pos:end="33:31">h</name></expr></argument>, <argument pos:start="33:34" pos:end="33:56"><expr pos:start="33:34" pos:end="33:56"><operator pos:start="33:34" pos:end="33:34">(</operator><name pos:start="33:35" pos:end="33:38">void</name> <operator pos:start="33:40" pos:end="33:40">*</operator><operator pos:start="33:41" pos:end="33:41">*</operator><operator pos:start="33:42" pos:end="33:42">)</operator><name pos:start="33:43" pos:end="33:56"><name pos:start="33:43" pos:end="33:43">h</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:56">sps_buffers</name></name></expr></argument>, <argument pos:start="33:59" pos:end="33:64"><expr pos:start="33:59" pos:end="33:64"><name pos:start="33:59" pos:end="33:64">sps_id</name></expr></argument>, <argument pos:start="33:67" pos:end="33:79"><expr pos:start="33:67" pos:end="33:79"><name pos:start="33:67" pos:end="33:79">MAX_SPS_COUNT</name></expr></argument>, <argument pos:start="33:82" pos:end="33:92"><expr pos:start="33:82" pos:end="33:92"><sizeof pos:start="33:82" pos:end="33:92">sizeof<argument_list pos:start="33:88" pos:end="33:92">(<argument pos:start="33:89" pos:end="33:91"><expr pos:start="33:89" pos:end="33:91"><name pos:start="33:89" pos:end="33:91">SPS</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:95" pos:end="33:99"><expr pos:start="33:95" pos:end="33:99"><literal type="string" pos:start="33:95" pos:end="33:99">"sps"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:18"><if pos:start="35:5" pos:end="37:18">if<condition pos:start="35:7" pos:end="35:19">(<expr pos:start="35:8" pos:end="35:18"><name pos:start="35:8" pos:end="35:10">sps</name> <operator pos:start="35:12" pos:end="35:13">==</operator> <name pos:start="35:15" pos:end="35:18">NULL</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:18"><block_content pos:start="37:9" pos:end="37:18">

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:7">sps</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:20">profile_idc</name></name><operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:33">profile_idc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:7">sps</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:18">level_idc</name></name><operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:29">level_idc</name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:67"><expr pos:start="47:5" pos:end="47:66"><call pos:start="47:5" pos:end="47:66"><name pos:start="47:5" pos:end="47:10">memset</name><argument_list pos:start="47:11" pos:end="47:66">(<argument pos:start="47:12" pos:end="47:31"><expr pos:start="47:12" pos:end="47:31"><name pos:start="47:12" pos:end="47:31"><name pos:start="47:12" pos:end="47:14">sps</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:31">scaling_matrix4</name></name></expr></argument>, <argument pos:start="47:34" pos:end="47:35"><expr pos:start="47:34" pos:end="47:35"><literal type="number" pos:start="47:34" pos:end="47:35">16</literal></expr></argument>, <argument pos:start="47:38" pos:end="47:65"><expr pos:start="47:38" pos:end="47:65"><sizeof pos:start="47:38" pos:end="47:65">sizeof<argument_list pos:start="47:44" pos:end="47:65">(<argument pos:start="47:45" pos:end="47:64"><expr pos:start="47:45" pos:end="47:64"><name pos:start="47:45" pos:end="47:64"><name pos:start="47:45" pos:end="47:47">sps</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:64">scaling_matrix4</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:67"><expr pos:start="49:5" pos:end="49:66"><call pos:start="49:5" pos:end="49:66"><name pos:start="49:5" pos:end="49:10">memset</name><argument_list pos:start="49:11" pos:end="49:66">(<argument pos:start="49:12" pos:end="49:31"><expr pos:start="49:12" pos:end="49:31"><name pos:start="49:12" pos:end="49:31"><name pos:start="49:12" pos:end="49:14">sps</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:31">scaling_matrix8</name></name></expr></argument>, <argument pos:start="49:34" pos:end="49:35"><expr pos:start="49:34" pos:end="49:35"><literal type="number" pos:start="49:34" pos:end="49:35">16</literal></expr></argument>, <argument pos:start="49:38" pos:end="49:65"><expr pos:start="49:38" pos:end="49:65"><sizeof pos:start="49:38" pos:end="49:65">sizeof<argument_list pos:start="49:44" pos:end="49:65">(<argument pos:start="49:45" pos:end="49:64"><expr pos:start="49:45" pos:end="49:64"><name pos:start="49:45" pos:end="49:64"><name pos:start="49:45" pos:end="49:47">sps</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:64">scaling_matrix8</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:7">sps</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:31">scaling_matrix_present</name></name> <operator pos:start="51:33" pos:end="51:33">=</operator> <literal type="number" pos:start="51:35" pos:end="51:35">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="75:5"><if pos:start="55:5" pos:end="71:5">if<condition pos:start="55:7" pos:end="55:31">(<expr pos:start="55:8" pos:end="55:30"><name pos:start="55:8" pos:end="55:23"><name pos:start="55:8" pos:end="55:10">sps</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:23">profile_idc</name></name> <operator pos:start="55:25" pos:end="55:26">&gt;=</operator> <literal type="number" pos:start="55:28" pos:end="55:30">100</literal></expr>)</condition><block pos:start="55:32" pos:end="71:5">{<block_content pos:start="57:9" pos:end="69:93"> <comment type="line" pos:start="55:34" pos:end="55:47">//high profile</comment>

        <expr_stmt pos:start="57:9" pos:end="57:54"><expr pos:start="57:9" pos:end="57:53"><name pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:11">sps</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:30">chroma_format_idc</name></name><operator pos:start="57:31" pos:end="57:31">=</operator> <call pos:start="57:33" pos:end="57:53"><name pos:start="57:33" pos:end="57:45">get_ue_golomb</name><argument_list pos:start="57:46" pos:end="57:53">(<argument pos:start="57:47" pos:end="57:52"><expr pos:start="57:47" pos:end="57:52"><operator pos:start="57:47" pos:end="57:47">&amp;</operator><name pos:start="57:48" pos:end="57:52"><name pos:start="57:48" pos:end="57:48">s</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:30"><if pos:start="59:9" pos:end="61:30">if<condition pos:start="59:11" pos:end="59:39">(<expr pos:start="59:12" pos:end="59:38"><name pos:start="59:12" pos:end="59:33"><name pos:start="59:12" pos:end="59:14">sps</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:33">chroma_format_idc</name></name> <operator pos:start="59:35" pos:end="59:36">==</operator> <literal type="number" pos:start="59:38" pos:end="59:38">3</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:30"><block_content pos:start="61:13" pos:end="61:30">

            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><call pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:21">get_bits1</name><argument_list pos:start="61:22" pos:end="61:29">(<argument pos:start="61:23" pos:end="61:28"><expr pos:start="61:23" pos:end="61:28"><operator pos:start="61:23" pos:end="61:23">&amp;</operator><name pos:start="61:24" pos:end="61:28"><name pos:start="61:24" pos:end="61:24">s</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="line" pos:start="61:33" pos:end="61:63">//residual_color_transform_flag</comment>

        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><call pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:21">get_ue_golomb</name><argument_list pos:start="63:22" pos:end="63:29">(<argument pos:start="63:23" pos:end="63:28"><expr pos:start="63:23" pos:end="63:28"><operator pos:start="63:23" pos:end="63:23">&amp;</operator><name pos:start="63:24" pos:end="63:28"><name pos:start="63:24" pos:end="63:24">s</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="63:33" pos:end="63:55">//bit_depth_luma_minus8</comment>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><call pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:21">get_ue_golomb</name><argument_list pos:start="65:22" pos:end="65:29">(<argument pos:start="65:23" pos:end="65:28"><expr pos:start="65:23" pos:end="65:28"><operator pos:start="65:23" pos:end="65:23">&amp;</operator><name pos:start="65:24" pos:end="65:28"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="65:33" pos:end="65:57">//bit_depth_chroma_minus8</comment>

        <expr_stmt pos:start="67:9" pos:end="67:50"><expr pos:start="67:9" pos:end="67:49"><name pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:11">sps</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:29">transform_bypass</name></name> <operator pos:start="67:31" pos:end="67:31">=</operator> <call pos:start="67:33" pos:end="67:49"><name pos:start="67:33" pos:end="67:41">get_bits1</name><argument_list pos:start="67:42" pos:end="67:49">(<argument pos:start="67:43" pos:end="67:48"><expr pos:start="67:43" pos:end="67:48"><operator pos:start="67:43" pos:end="67:43">&amp;</operator><name pos:start="67:44" pos:end="67:48"><name pos:start="67:44" pos:end="67:44">s</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:93"><expr pos:start="69:9" pos:end="69:92"><call pos:start="69:9" pos:end="69:92"><name pos:start="69:9" pos:end="69:31">decode_scaling_matrices</name><argument_list pos:start="69:32" pos:end="69:92">(<argument pos:start="69:33" pos:end="69:33"><expr pos:start="69:33" pos:end="69:33"><name pos:start="69:33" pos:end="69:33">h</name></expr></argument>, <argument pos:start="69:36" pos:end="69:38"><expr pos:start="69:36" pos:end="69:38"><name pos:start="69:36" pos:end="69:38">sps</name></expr></argument>, <argument pos:start="69:41" pos:end="69:44"><expr pos:start="69:41" pos:end="69:44"><name pos:start="69:41" pos:end="69:44">NULL</name></expr></argument>, <argument pos:start="69:47" pos:end="69:47"><expr pos:start="69:47" pos:end="69:47"><literal type="number" pos:start="69:47" pos:end="69:47">1</literal></expr></argument>, <argument pos:start="69:50" pos:end="69:69"><expr pos:start="69:50" pos:end="69:69"><name pos:start="69:50" pos:end="69:69"><name pos:start="69:50" pos:end="69:52">sps</name><operator pos:start="69:53" pos:end="69:54">-&gt;</operator><name pos:start="69:55" pos:end="69:69">scaling_matrix4</name></name></expr></argument>, <argument pos:start="69:72" pos:end="69:91"><expr pos:start="69:72" pos:end="69:91"><name pos:start="69:72" pos:end="69:91"><name pos:start="69:72" pos:end="69:74">sps</name><operator pos:start="69:75" pos:end="69:76">-&gt;</operator><name pos:start="69:77" pos:end="69:91">scaling_matrix8</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="71:6" pos:end="75:5">else<block pos:start="71:10" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:34">

        <expr_stmt pos:start="73:9" pos:end="73:34"><expr pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:11">sps</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:30">chroma_format_idc</name></name><operator pos:start="73:31" pos:end="73:31">=</operator> <literal type="number" pos:start="73:33" pos:end="73:33">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:55"><expr pos:start="79:5" pos:end="79:54"><name pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:7">sps</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:27">log2_max_frame_num</name></name><operator pos:start="79:28" pos:end="79:28">=</operator> <call pos:start="79:30" pos:end="79:50"><name pos:start="79:30" pos:end="79:42">get_ue_golomb</name><argument_list pos:start="79:43" pos:end="79:50">(<argument pos:start="79:44" pos:end="79:49"><expr pos:start="79:44" pos:end="79:49"><operator pos:start="79:44" pos:end="79:44">&amp;</operator><name pos:start="79:45" pos:end="79:49"><name pos:start="79:45" pos:end="79:45">s</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:49">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="79:52" pos:end="79:52">+</operator> <literal type="number" pos:start="79:54" pos:end="79:54">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:41"><expr pos:start="81:5" pos:end="81:40"><name pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:7">sps</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:17">poc_type</name></name><operator pos:start="81:18" pos:end="81:18">=</operator> <call pos:start="81:20" pos:end="81:40"><name pos:start="81:20" pos:end="81:32">get_ue_golomb</name><argument_list pos:start="81:33" pos:end="81:40">(<argument pos:start="81:34" pos:end="81:39"><expr pos:start="81:34" pos:end="81:39"><operator pos:start="81:34" pos:end="81:34">&amp;</operator><name pos:start="81:35" pos:end="81:39"><name pos:start="81:35" pos:end="81:35">s</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="123:5"><if pos:start="85:5" pos:end="89:5">if<condition pos:start="85:7" pos:end="85:26">(<expr pos:start="85:8" pos:end="85:25"><name pos:start="85:8" pos:end="85:20"><name pos:start="85:8" pos:end="85:10">sps</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:20">poc_type</name></name> <operator pos:start="85:22" pos:end="85:23">==</operator> <literal type="number" pos:start="85:25" pos:end="85:25">0</literal></expr>)</condition><block pos:start="85:27" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:57"> <comment type="line" pos:start="85:29" pos:end="85:43">//FIXME #define</comment>

        <expr_stmt pos:start="87:9" pos:end="87:57"><expr pos:start="87:9" pos:end="87:56"><name pos:start="87:9" pos:end="87:29"><name pos:start="87:9" pos:end="87:11">sps</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:29">log2_max_poc_lsb</name></name><operator pos:start="87:30" pos:end="87:30">=</operator> <call pos:start="87:32" pos:end="87:52"><name pos:start="87:32" pos:end="87:44">get_ue_golomb</name><argument_list pos:start="87:45" pos:end="87:52">(<argument pos:start="87:46" pos:end="87:51"><expr pos:start="87:46" pos:end="87:51"><operator pos:start="87:46" pos:end="87:46">&amp;</operator><name pos:start="87:47" pos:end="87:51"><name pos:start="87:47" pos:end="87:47">s</name><operator pos:start="87:48" pos:end="87:49">-&gt;</operator><name pos:start="87:50" pos:end="87:51">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="87:54" pos:end="87:54">+</operator> <literal type="number" pos:start="87:56" pos:end="87:56">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="89:7" pos:end="117:5">else if<condition pos:start="89:14" pos:end="89:33">(<expr pos:start="89:15" pos:end="89:32"><name pos:start="89:15" pos:end="89:27"><name pos:start="89:15" pos:end="89:17">sps</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:27">poc_type</name></name> <operator pos:start="89:29" pos:end="89:30">==</operator> <literal type="number" pos:start="89:32" pos:end="89:32">1</literal></expr>)</condition><block pos:start="89:34" pos:end="117:5">{<block_content pos:start="91:9" pos:end="115:64"><comment type="line" pos:start="89:35" pos:end="89:49">//FIXME #define</comment>

        <expr_stmt pos:start="91:9" pos:end="91:65"><expr pos:start="91:9" pos:end="91:64"><name pos:start="91:9" pos:end="91:45"><name pos:start="91:9" pos:end="91:11">sps</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:45">delta_pic_order_always_zero_flag</name></name><operator pos:start="91:46" pos:end="91:46">=</operator> <call pos:start="91:48" pos:end="91:64"><name pos:start="91:48" pos:end="91:56">get_bits1</name><argument_list pos:start="91:57" pos:end="91:64">(<argument pos:start="91:58" pos:end="91:63"><expr pos:start="91:58" pos:end="91:63"><operator pos:start="91:58" pos:end="91:58">&amp;</operator><name pos:start="91:59" pos:end="91:63"><name pos:start="91:59" pos:end="91:59">s</name><operator pos:start="91:60" pos:end="91:61">-&gt;</operator><name pos:start="91:62" pos:end="91:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:59"><expr pos:start="93:9" pos:end="93:58"><name pos:start="93:9" pos:end="93:35"><name pos:start="93:9" pos:end="93:11">sps</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:35">offset_for_non_ref_pic</name></name><operator pos:start="93:36" pos:end="93:36">=</operator> <call pos:start="93:38" pos:end="93:58"><name pos:start="93:38" pos:end="93:50">get_se_golomb</name><argument_list pos:start="93:51" pos:end="93:58">(<argument pos:start="93:52" pos:end="93:57"><expr pos:start="93:52" pos:end="93:57"><operator pos:start="93:52" pos:end="93:52">&amp;</operator><name pos:start="93:53" pos:end="93:57"><name pos:start="93:53" pos:end="93:53">s</name><operator pos:start="93:54" pos:end="93:55">-&gt;</operator><name pos:start="93:56" pos:end="93:57">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:67"><expr pos:start="95:9" pos:end="95:66"><name pos:start="95:9" pos:end="95:43"><name pos:start="95:9" pos:end="95:11">sps</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:43">offset_for_top_to_bottom_field</name></name><operator pos:start="95:44" pos:end="95:44">=</operator> <call pos:start="95:46" pos:end="95:66"><name pos:start="95:46" pos:end="95:58">get_se_golomb</name><argument_list pos:start="95:59" pos:end="95:66">(<argument pos:start="95:60" pos:end="95:65"><expr pos:start="95:60" pos:end="95:65"><operator pos:start="95:60" pos:end="95:60">&amp;</operator><name pos:start="95:61" pos:end="95:65"><name pos:start="95:61" pos:end="95:61">s</name><operator pos:start="95:62" pos:end="95:63">-&gt;</operator><name pos:start="95:64" pos:end="95:65">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:35"><expr pos:start="97:9" pos:end="97:34"><name pos:start="97:9" pos:end="97:11">tmp</name><operator pos:start="97:12" pos:end="97:12">=</operator> <call pos:start="97:14" pos:end="97:34"><name pos:start="97:14" pos:end="97:26">get_ue_golomb</name><argument_list pos:start="97:27" pos:end="97:34">(<argument pos:start="97:28" pos:end="97:33"><expr pos:start="97:28" pos:end="97:33"><operator pos:start="97:28" pos:end="97:28">&amp;</operator><name pos:start="97:29" pos:end="97:33"><name pos:start="97:29" pos:end="97:29">s</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if<condition pos:start="101:11" pos:end="101:91">(<expr pos:start="101:12" pos:end="101:90"><name pos:start="101:12" pos:end="101:14">tmp</name> <operator pos:start="101:16" pos:end="101:17">&gt;=</operator> <sizeof pos:start="101:19" pos:end="101:51">sizeof<argument_list pos:start="101:25" pos:end="101:51">(<argument pos:start="101:26" pos:end="101:50"><expr pos:start="101:26" pos:end="101:50"><name pos:start="101:26" pos:end="101:50"><name pos:start="101:26" pos:end="101:28">sps</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:50">offset_for_ref_frame</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="101:53" pos:end="101:53">/</operator> <sizeof pos:start="101:55" pos:end="101:90">sizeof<argument_list pos:start="101:61" pos:end="101:90">(<argument pos:start="101:62" pos:end="101:89"><expr pos:start="101:62" pos:end="101:89"><name pos:start="101:62" pos:end="101:89"><name pos:start="101:62" pos:end="101:64">sps</name><operator pos:start="101:65" pos:end="101:66">-&gt;</operator><name pos:start="101:67" pos:end="101:86">offset_for_ref_frame</name><index pos:start="101:87" pos:end="101:89">[<expr pos:start="101:88" pos:end="101:88"><literal type="number" pos:start="101:88" pos:end="101:88">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block pos:start="101:92" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:22">

            <expr_stmt pos:start="103:13" pos:end="103:84"><expr pos:start="103:13" pos:end="103:83"><call pos:start="103:13" pos:end="103:83"><name pos:start="103:13" pos:end="103:18">av_log</name><argument_list pos:start="103:19" pos:end="103:83">(<argument pos:start="103:20" pos:end="103:29"><expr pos:start="103:20" pos:end="103:29"><name pos:start="103:20" pos:end="103:29"><name pos:start="103:20" pos:end="103:20">h</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:23">s</name><operator pos:start="103:24" pos:end="103:24">.</operator><name pos:start="103:25" pos:end="103:29">avctx</name></name></expr></argument>, <argument pos:start="103:32" pos:end="103:43"><expr pos:start="103:32" pos:end="103:43"><name pos:start="103:32" pos:end="103:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:46" pos:end="103:77"><expr pos:start="103:46" pos:end="103:77"><literal type="string" pos:start="103:46" pos:end="103:77">"poc_cycle_length overflow %u\n"</literal></expr></argument>, <argument pos:start="103:80" pos:end="103:82"><expr pos:start="103:80" pos:end="103:82"><name pos:start="103:80" pos:end="103:82">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="105:13" pos:end="105:22">return <expr pos:start="105:20" pos:end="105:21"><operator pos:start="105:20" pos:end="105:20">-</operator><literal type="number" pos:start="105:21" pos:end="105:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:35"><expr pos:start="109:9" pos:end="109:34"><name pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:11">sps</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:29">poc_cycle_length</name></name><operator pos:start="109:30" pos:end="109:30">=</operator> <name pos:start="109:32" pos:end="109:34">tmp</name></expr>;</expr_stmt>



        <for pos:start="113:9" pos:end="115:64">for<control pos:start="113:12" pos:end="113:46">(<init pos:start="113:13" pos:end="113:16"><expr pos:start="113:13" pos:end="113:15"><name pos:start="113:13" pos:end="113:13">i</name><operator pos:start="113:14" pos:end="113:14">=</operator><literal type="number" pos:start="113:15" pos:end="113:15">0</literal></expr>;</init> <condition pos:start="113:18" pos:end="113:41"><expr pos:start="113:18" pos:end="113:40"><name pos:start="113:18" pos:end="113:18">i</name><operator pos:start="113:19" pos:end="113:19">&lt;</operator><name pos:start="113:20" pos:end="113:40"><name pos:start="113:20" pos:end="113:22">sps</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:40">poc_cycle_length</name></name></expr>;</condition> <incr pos:start="113:43" pos:end="113:45"><expr pos:start="113:43" pos:end="113:45"><name pos:start="113:43" pos:end="113:43">i</name><operator pos:start="113:44" pos:end="113:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:13" pos:end="115:64"><block_content pos:start="115:13" pos:end="115:64">

            <expr_stmt pos:start="115:13" pos:end="115:64"><expr pos:start="115:13" pos:end="115:63"><name pos:start="115:13" pos:end="115:40"><name pos:start="115:13" pos:end="115:15">sps</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:37">offset_for_ref_frame</name><index pos:start="115:38" pos:end="115:40">[<expr pos:start="115:39" pos:end="115:39"><name pos:start="115:39" pos:end="115:39">i</name></expr>]</index></name><operator pos:start="115:41" pos:end="115:41">=</operator> <call pos:start="115:43" pos:end="115:63"><name pos:start="115:43" pos:end="115:55">get_se_golomb</name><argument_list pos:start="115:56" pos:end="115:63">(<argument pos:start="115:57" pos:end="115:62"><expr pos:start="115:57" pos:end="115:62"><operator pos:start="115:57" pos:end="115:57">&amp;</operator><name pos:start="115:58" pos:end="115:62"><name pos:start="115:58" pos:end="115:58">s</name><operator pos:start="115:59" pos:end="115:60">-&gt;</operator><name pos:start="115:61" pos:end="115:62">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if><if type="elseif" pos:start="117:6" pos:end="123:5">else if<condition pos:start="117:13" pos:end="117:32">(<expr pos:start="117:14" pos:end="117:31"><name pos:start="117:14" pos:end="117:26"><name pos:start="117:14" pos:end="117:16">sps</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:26">poc_type</name></name> <operator pos:start="117:28" pos:end="117:29">!=</operator> <literal type="number" pos:start="117:31" pos:end="117:31">2</literal></expr>)</condition><block pos:start="117:33" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:18">

        <expr_stmt pos:start="119:9" pos:end="119:81"><expr pos:start="119:9" pos:end="119:80"><call pos:start="119:9" pos:end="119:80"><name pos:start="119:9" pos:end="119:14">av_log</name><argument_list pos:start="119:15" pos:end="119:80">(<argument pos:start="119:16" pos:end="119:25"><expr pos:start="119:16" pos:end="119:25"><name pos:start="119:16" pos:end="119:25"><name pos:start="119:16" pos:end="119:16">h</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:19">s</name><operator pos:start="119:20" pos:end="119:20">.</operator><name pos:start="119:21" pos:end="119:25">avctx</name></name></expr></argument>, <argument pos:start="119:28" pos:end="119:39"><expr pos:start="119:28" pos:end="119:39"><name pos:start="119:28" pos:end="119:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:42" pos:end="119:64"><expr pos:start="119:42" pos:end="119:64"><literal type="string" pos:start="119:42" pos:end="119:64">"illegal POC type %d\n"</literal></expr></argument>, <argument pos:start="119:67" pos:end="119:79"><expr pos:start="119:67" pos:end="119:79"><name pos:start="119:67" pos:end="119:79"><name pos:start="119:67" pos:end="119:69">sps</name><operator pos:start="119:70" pos:end="119:71">-&gt;</operator><name pos:start="119:72" pos:end="119:79">poc_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="121:9" pos:end="121:18">return <expr pos:start="121:16" pos:end="121:17"><operator pos:start="121:16" pos:end="121:16">-</operator><literal type="number" pos:start="121:17" pos:end="121:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:31"><expr pos:start="127:5" pos:end="127:30"><name pos:start="127:5" pos:end="127:7">tmp</name><operator pos:start="127:8" pos:end="127:8">=</operator> <call pos:start="127:10" pos:end="127:30"><name pos:start="127:10" pos:end="127:22">get_ue_golomb</name><argument_list pos:start="127:23" pos:end="127:30">(<argument pos:start="127:24" pos:end="127:29"><expr pos:start="127:24" pos:end="127:29"><operator pos:start="127:24" pos:end="127:24">&amp;</operator><name pos:start="127:25" pos:end="127:29"><name pos:start="127:25" pos:end="127:25">s</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="135:5"><if pos:start="129:5" pos:end="135:5">if<condition pos:start="129:7" pos:end="129:46">(<expr pos:start="129:8" pos:end="129:45"><name pos:start="129:8" pos:end="129:10">tmp</name> <operator pos:start="129:12" pos:end="129:12">&gt;</operator> <name pos:start="129:14" pos:end="129:30">MAX_PICTURE_COUNT</name><operator pos:start="129:31" pos:end="129:31">-</operator><literal type="number" pos:start="129:32" pos:end="129:32">2</literal> <operator pos:start="129:34" pos:end="129:35">||</operator> <name pos:start="129:37" pos:end="129:39">tmp</name> <operator pos:start="129:41" pos:end="129:42">&gt;=</operator> <literal type="number" pos:start="129:44" pos:end="129:45">32</literal></expr>)</condition><block pos:start="129:47" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:18">

        <expr_stmt pos:start="131:9" pos:end="131:72"><expr pos:start="131:9" pos:end="131:71"><call pos:start="131:9" pos:end="131:71"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="131:71">(<argument pos:start="131:16" pos:end="131:25"><expr pos:start="131:16" pos:end="131:25"><name pos:start="131:16" pos:end="131:25"><name pos:start="131:16" pos:end="131:16">h</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:19">s</name><operator pos:start="131:20" pos:end="131:20">.</operator><name pos:start="131:21" pos:end="131:25">avctx</name></name></expr></argument>, <argument pos:start="131:28" pos:end="131:39"><expr pos:start="131:28" pos:end="131:39"><name pos:start="131:28" pos:end="131:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="131:42" pos:end="131:70"><expr pos:start="131:42" pos:end="131:70"><literal type="string" pos:start="131:42" pos:end="131:70">"too many reference frames\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="133:9" pos:end="133:18">return <expr pos:start="133:16" pos:end="133:17"><operator pos:start="133:16" pos:end="133:16">-</operator><literal type="number" pos:start="133:17" pos:end="133:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:30"><expr pos:start="137:5" pos:end="137:29"><name pos:start="137:5" pos:end="137:24"><name pos:start="137:5" pos:end="137:7">sps</name><operator pos:start="137:8" pos:end="137:9">-&gt;</operator><name pos:start="137:10" pos:end="137:24">ref_frame_count</name></name><operator pos:start="137:25" pos:end="137:25">=</operator> <name pos:start="137:27" pos:end="137:29">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:59"><expr pos:start="139:5" pos:end="139:58"><name pos:start="139:5" pos:end="139:39"><name pos:start="139:5" pos:end="139:7">sps</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:39">gaps_in_frame_num_allowed_flag</name></name><operator pos:start="139:40" pos:end="139:40">=</operator> <call pos:start="139:42" pos:end="139:58"><name pos:start="139:42" pos:end="139:50">get_bits1</name><argument_list pos:start="139:51" pos:end="139:58">(<argument pos:start="139:52" pos:end="139:57"><expr pos:start="139:52" pos:end="139:57"><operator pos:start="139:52" pos:end="139:52">&amp;</operator><name pos:start="139:53" pos:end="139:57"><name pos:start="139:53" pos:end="139:53">s</name><operator pos:start="139:54" pos:end="139:55">-&gt;</operator><name pos:start="139:56" pos:end="139:57">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:40"><expr pos:start="141:5" pos:end="141:39"><name pos:start="141:5" pos:end="141:12">mb_width</name><operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:35"><name pos:start="141:15" pos:end="141:27">get_ue_golomb</name><argument_list pos:start="141:28" pos:end="141:35">(<argument pos:start="141:29" pos:end="141:34"><expr pos:start="141:29" pos:end="141:34"><operator pos:start="141:29" pos:end="141:29">&amp;</operator><name pos:start="141:30" pos:end="141:34"><name pos:start="141:30" pos:end="141:30">s</name><operator pos:start="141:31" pos:end="141:32">-&gt;</operator><name pos:start="141:33" pos:end="141:34">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="141:37" pos:end="141:37">+</operator> <literal type="number" pos:start="141:39" pos:end="141:39">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:41"><expr pos:start="143:5" pos:end="143:40"><name pos:start="143:5" pos:end="143:13">mb_height</name><operator pos:start="143:14" pos:end="143:14">=</operator> <call pos:start="143:16" pos:end="143:36"><name pos:start="143:16" pos:end="143:28">get_ue_golomb</name><argument_list pos:start="143:29" pos:end="143:36">(<argument pos:start="143:30" pos:end="143:35"><expr pos:start="143:30" pos:end="143:35"><operator pos:start="143:30" pos:end="143:30">&amp;</operator><name pos:start="143:31" pos:end="143:35"><name pos:start="143:31" pos:end="143:31">s</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:35">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="143:38" pos:end="143:38">+</operator> <literal type="number" pos:start="143:40" pos:end="143:40">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="153:5"><if pos:start="145:5" pos:end="153:5">if<condition pos:start="145:7" pos:end="147:65">(<expr pos:start="145:8" pos:end="147:64"><name pos:start="145:8" pos:end="145:15">mb_width</name> <operator pos:start="145:17" pos:end="145:18">&gt;=</operator> <name pos:start="145:20" pos:end="145:26">INT_MAX</name><operator pos:start="145:27" pos:end="145:27">/</operator><literal type="number" pos:start="145:28" pos:end="145:29">16</literal> <operator pos:start="145:31" pos:end="145:32">||</operator> <name pos:start="145:34" pos:end="145:42">mb_height</name> <operator pos:start="145:44" pos:end="145:45">&gt;=</operator> <name pos:start="145:47" pos:end="145:53">INT_MAX</name><operator pos:start="145:54" pos:end="145:54">/</operator><literal type="number" pos:start="145:55" pos:end="145:56">16</literal> <operator pos:start="145:58" pos:end="145:59">||</operator>

       <call pos:start="147:8" pos:end="147:64"><name pos:start="147:8" pos:end="147:31">avcodec_check_dimensions</name><argument_list pos:start="147:32" pos:end="147:64">(<argument pos:start="147:33" pos:end="147:36"><expr pos:start="147:33" pos:end="147:36"><name pos:start="147:33" pos:end="147:36">NULL</name></expr></argument>, <argument pos:start="147:39" pos:end="147:49"><expr pos:start="147:39" pos:end="147:49"><literal type="number" pos:start="147:39" pos:end="147:40">16</literal><operator pos:start="147:41" pos:end="147:41">*</operator><name pos:start="147:42" pos:end="147:49">mb_width</name></expr></argument>, <argument pos:start="147:52" pos:end="147:63"><expr pos:start="147:52" pos:end="147:63"><literal type="number" pos:start="147:52" pos:end="147:53">16</literal><operator pos:start="147:54" pos:end="147:54">*</operator><name pos:start="147:55" pos:end="147:63">mb_height</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="147:66" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:18">

        <expr_stmt pos:start="149:9" pos:end="149:71"><expr pos:start="149:9" pos:end="149:70"><call pos:start="149:9" pos:end="149:70"><name pos:start="149:9" pos:end="149:14">av_log</name><argument_list pos:start="149:15" pos:end="149:70">(<argument pos:start="149:16" pos:end="149:25"><expr pos:start="149:16" pos:end="149:25"><name pos:start="149:16" pos:end="149:25"><name pos:start="149:16" pos:end="149:16">h</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:19">s</name><operator pos:start="149:20" pos:end="149:20">.</operator><name pos:start="149:21" pos:end="149:25">avctx</name></name></expr></argument>, <argument pos:start="149:28" pos:end="149:39"><expr pos:start="149:28" pos:end="149:39"><name pos:start="149:28" pos:end="149:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:42" pos:end="149:69"><expr pos:start="149:42" pos:end="149:69"><literal type="string" pos:start="149:42" pos:end="149:69">"mb_width/height overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="151:9" pos:end="151:18">return <expr pos:start="151:16" pos:end="151:17"><operator pos:start="151:16" pos:end="151:16">-</operator><literal type="number" pos:start="151:17" pos:end="151:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:29"><expr pos:start="155:5" pos:end="155:28"><name pos:start="155:5" pos:end="155:17"><name pos:start="155:5" pos:end="155:7">sps</name><operator pos:start="155:8" pos:end="155:9">-&gt;</operator><name pos:start="155:10" pos:end="155:17">mb_width</name></name> <operator pos:start="155:19" pos:end="155:19">=</operator> <name pos:start="155:21" pos:end="155:28">mb_width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:30"><expr pos:start="157:5" pos:end="157:29"><name pos:start="157:5" pos:end="157:18"><name pos:start="157:5" pos:end="157:7">sps</name><operator pos:start="157:8" pos:end="157:9">-&gt;</operator><name pos:start="157:10" pos:end="157:18">mb_height</name></name><operator pos:start="157:19" pos:end="157:19">=</operator> <name pos:start="157:21" pos:end="157:29">mb_height</name></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:48"><expr pos:start="161:5" pos:end="161:47"><name pos:start="161:5" pos:end="161:28"><name pos:start="161:5" pos:end="161:7">sps</name><operator pos:start="161:8" pos:end="161:9">-&gt;</operator><name pos:start="161:10" pos:end="161:28">frame_mbs_only_flag</name></name><operator pos:start="161:29" pos:end="161:29">=</operator> <call pos:start="161:31" pos:end="161:47"><name pos:start="161:31" pos:end="161:39">get_bits1</name><argument_list pos:start="161:40" pos:end="161:47">(<argument pos:start="161:41" pos:end="161:46"><expr pos:start="161:41" pos:end="161:46"><operator pos:start="161:41" pos:end="161:41">&amp;</operator><name pos:start="161:42" pos:end="161:46"><name pos:start="161:42" pos:end="161:42">s</name><operator pos:start="161:43" pos:end="161:44">-&gt;</operator><name pos:start="161:45" pos:end="161:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="169:23"><if pos:start="163:5" pos:end="165:39">if<condition pos:start="163:7" pos:end="163:33">(<expr pos:start="163:8" pos:end="163:32"><operator pos:start="163:8" pos:end="163:8">!</operator><name pos:start="163:9" pos:end="163:32"><name pos:start="163:9" pos:end="163:11">sps</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:32">frame_mbs_only_flag</name></name></expr>)</condition><block type="pseudo" pos:start="165:9" pos:end="165:39"><block_content pos:start="165:9" pos:end="165:39">

        <expr_stmt pos:start="165:9" pos:end="165:39"><expr pos:start="165:9" pos:end="165:38"><name pos:start="165:9" pos:end="165:19"><name pos:start="165:9" pos:end="165:11">sps</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:19">mb_aff</name></name><operator pos:start="165:20" pos:end="165:20">=</operator> <call pos:start="165:22" pos:end="165:38"><name pos:start="165:22" pos:end="165:30">get_bits1</name><argument_list pos:start="165:31" pos:end="165:38">(<argument pos:start="165:32" pos:end="165:37"><expr pos:start="165:32" pos:end="165:37"><operator pos:start="165:32" pos:end="165:32">&amp;</operator><name pos:start="165:33" pos:end="165:37"><name pos:start="165:33" pos:end="165:33">s</name><operator pos:start="165:34" pos:end="165:35">-&gt;</operator><name pos:start="165:36" pos:end="165:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="167:5" pos:end="169:23">else<block type="pseudo" pos:start="169:9" pos:end="169:23"><block_content pos:start="169:9" pos:end="169:23">

        <expr_stmt pos:start="169:9" pos:end="169:23"><expr pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:19"><name pos:start="169:9" pos:end="169:11">sps</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:19">mb_aff</name></name><operator pos:start="169:20" pos:end="169:20">=</operator> <literal type="number" pos:start="169:22" pos:end="169:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="173:5" pos:end="178:0"><expr pos:start="173:5" pos:end="173:53"><name pos:start="173:5" pos:end="173:34"><name pos:start="173:5" pos:end="173:7">sps</name><operator pos:start="173:8" pos:end="173:9">-&gt;</operator><name pos:start="173:10" pos:end="173:34">direct_8x8_inference_flag</name></name><operator pos:start="173:35" pos:end="173:35">=</operator> <call pos:start="173:37" pos:end="173:53"><name pos:start="173:37" pos:end="173:45">get_bits1</name><argument_list pos:start="173:46" pos:end="173:53">(<argument pos:start="173:47" pos:end="173:52"><expr pos:start="173:47" pos:end="173:52"><operator pos:start="173:47" pos:end="173:47">&amp;</operator><name pos:start="173:48" pos:end="173:52"><name pos:start="173:48" pos:end="173:48">s</name><operator pos:start="173:49" pos:end="173:50">-&gt;</operator><name pos:start="173:51" pos:end="173:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifndef pos:start="177:1" pos:end="177:23">#<cpp:directive pos:start="177:2" pos:end="177:7">ifndef</cpp:directive> <name pos:start="177:9" pos:end="177:23">ALLOW_INTERLACE</name></cpp:ifndef>

    <if_stmt pos:start="179:5" pos:end="184:0"><if pos:start="179:5" pos:end="184:0">if<condition pos:start="179:7" pos:end="179:19">(<expr pos:start="179:8" pos:end="179:18"><name pos:start="179:8" pos:end="179:18"><name pos:start="179:8" pos:end="179:10">sps</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:18">mb_aff</name></name></expr>)</condition><block type="pseudo" pos:start="181:9" pos:end="184:0"><block_content pos:start="181:9" pos:end="184:0">

        <expr_stmt pos:start="181:9" pos:end="184:0"><expr pos:start="181:9" pos:end="181:100"><call pos:start="181:9" pos:end="181:100"><name pos:start="181:9" pos:end="181:14">av_log</name><argument_list pos:start="181:15" pos:end="181:100">(<argument pos:start="181:16" pos:end="181:25"><expr pos:start="181:16" pos:end="181:25"><name pos:start="181:16" pos:end="181:25"><name pos:start="181:16" pos:end="181:16">h</name><operator pos:start="181:17" pos:end="181:18">-&gt;</operator><name pos:start="181:19" pos:end="181:19">s</name><operator pos:start="181:20" pos:end="181:20">.</operator><name pos:start="181:21" pos:end="181:25">avctx</name></name></expr></argument>, <argument pos:start="181:28" pos:end="181:39"><expr pos:start="181:28" pos:end="181:39"><name pos:start="181:28" pos:end="181:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:42" pos:end="181:99"><expr pos:start="181:42" pos:end="181:99"><literal type="string" pos:start="181:42" pos:end="181:99">"MBAFF support not included; enable it at compile-time.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="183:1" pos:end="183:6">#<cpp:directive pos:start="183:2" pos:end="183:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="185:5" pos:end="187:95"><if pos:start="185:5" pos:end="187:95">if<condition pos:start="185:7" pos:end="185:54">(<expr pos:start="185:8" pos:end="185:53"><operator pos:start="185:8" pos:end="185:8">!</operator><name pos:start="185:9" pos:end="185:38"><name pos:start="185:9" pos:end="185:11">sps</name><operator pos:start="185:12" pos:end="185:13">-&gt;</operator><name pos:start="185:14" pos:end="185:38">direct_8x8_inference_flag</name></name> <operator pos:start="185:40" pos:end="185:41">&amp;&amp;</operator> <name pos:start="185:43" pos:end="185:53"><name pos:start="185:43" pos:end="185:45">sps</name><operator pos:start="185:46" pos:end="185:47">-&gt;</operator><name pos:start="185:48" pos:end="185:53">mb_aff</name></name></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="187:95"><block_content pos:start="187:9" pos:end="187:95">

        <expr_stmt pos:start="187:9" pos:end="187:95"><expr pos:start="187:9" pos:end="187:94"><call pos:start="187:9" pos:end="187:94"><name pos:start="187:9" pos:end="187:14">av_log</name><argument_list pos:start="187:15" pos:end="187:94">(<argument pos:start="187:16" pos:end="187:25"><expr pos:start="187:16" pos:end="187:25"><name pos:start="187:16" pos:end="187:25"><name pos:start="187:16" pos:end="187:16">h</name><operator pos:start="187:17" pos:end="187:18">-&gt;</operator><name pos:start="187:19" pos:end="187:19">s</name><operator pos:start="187:20" pos:end="187:20">.</operator><name pos:start="187:21" pos:end="187:25">avctx</name></name></expr></argument>, <argument pos:start="187:28" pos:end="187:39"><expr pos:start="187:28" pos:end="187:39"><name pos:start="187:28" pos:end="187:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="187:42" pos:end="187:93"><expr pos:start="187:42" pos:end="187:93"><literal type="string" pos:start="187:42" pos:end="187:93">"MBAFF + !direct_8x8_inference is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:33"><expr pos:start="191:5" pos:end="191:32"><name pos:start="191:5" pos:end="191:13"><name pos:start="191:5" pos:end="191:7">sps</name><operator pos:start="191:8" pos:end="191:9">-&gt;</operator><name pos:start="191:10" pos:end="191:13">crop</name></name><operator pos:start="191:14" pos:end="191:14">=</operator> <call pos:start="191:16" pos:end="191:32"><name pos:start="191:16" pos:end="191:24">get_bits1</name><argument_list pos:start="191:25" pos:end="191:32">(<argument pos:start="191:26" pos:end="191:31"><expr pos:start="191:26" pos:end="191:31"><operator pos:start="191:26" pos:end="191:26">&amp;</operator><name pos:start="191:27" pos:end="191:31"><name pos:start="191:27" pos:end="191:27">s</name><operator pos:start="191:28" pos:end="191:29">-&gt;</operator><name pos:start="191:30" pos:end="191:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="193:5" pos:end="225:5"><if pos:start="193:5" pos:end="215:5">if<condition pos:start="193:7" pos:end="193:17">(<expr pos:start="193:8" pos:end="193:16"><name pos:start="193:8" pos:end="193:16"><name pos:start="193:8" pos:end="193:10">sps</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:16">crop</name></name></expr>)</condition><block pos:start="193:18" pos:end="215:5">{<block_content pos:start="195:9" pos:end="213:9">

        <expr_stmt pos:start="195:9" pos:end="195:48"><expr pos:start="195:9" pos:end="195:47"><name pos:start="195:9" pos:end="195:22"><name pos:start="195:9" pos:end="195:11">sps</name><operator pos:start="195:12" pos:end="195:13">-&gt;</operator><name pos:start="195:14" pos:end="195:22">crop_left</name></name>  <operator pos:start="195:25" pos:end="195:25">=</operator> <call pos:start="195:27" pos:end="195:47"><name pos:start="195:27" pos:end="195:39">get_ue_golomb</name><argument_list pos:start="195:40" pos:end="195:47">(<argument pos:start="195:41" pos:end="195:46"><expr pos:start="195:41" pos:end="195:46"><operator pos:start="195:41" pos:end="195:41">&amp;</operator><name pos:start="195:42" pos:end="195:46"><name pos:start="195:42" pos:end="195:42">s</name><operator pos:start="195:43" pos:end="195:44">-&gt;</operator><name pos:start="195:45" pos:end="195:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:48"><expr pos:start="197:9" pos:end="197:47"><name pos:start="197:9" pos:end="197:23"><name pos:start="197:9" pos:end="197:11">sps</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:23">crop_right</name></name> <operator pos:start="197:25" pos:end="197:25">=</operator> <call pos:start="197:27" pos:end="197:47"><name pos:start="197:27" pos:end="197:39">get_ue_golomb</name><argument_list pos:start="197:40" pos:end="197:47">(<argument pos:start="197:41" pos:end="197:46"><expr pos:start="197:41" pos:end="197:46"><operator pos:start="197:41" pos:end="197:41">&amp;</operator><name pos:start="197:42" pos:end="197:46"><name pos:start="197:42" pos:end="197:42">s</name><operator pos:start="197:43" pos:end="197:44">-&gt;</operator><name pos:start="197:45" pos:end="197:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:48"><expr pos:start="199:9" pos:end="199:47"><name pos:start="199:9" pos:end="199:21"><name pos:start="199:9" pos:end="199:11">sps</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:21">crop_top</name></name>   <operator pos:start="199:25" pos:end="199:25">=</operator> <call pos:start="199:27" pos:end="199:47"><name pos:start="199:27" pos:end="199:39">get_ue_golomb</name><argument_list pos:start="199:40" pos:end="199:47">(<argument pos:start="199:41" pos:end="199:46"><expr pos:start="199:41" pos:end="199:46"><operator pos:start="199:41" pos:end="199:41">&amp;</operator><name pos:start="199:42" pos:end="199:46"><name pos:start="199:42" pos:end="199:42">s</name><operator pos:start="199:43" pos:end="199:44">-&gt;</operator><name pos:start="199:45" pos:end="199:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:48"><expr pos:start="201:9" pos:end="201:47"><name pos:start="201:9" pos:end="201:24"><name pos:start="201:9" pos:end="201:11">sps</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:24">crop_bottom</name></name><operator pos:start="201:25" pos:end="201:25">=</operator> <call pos:start="201:27" pos:end="201:47"><name pos:start="201:27" pos:end="201:39">get_ue_golomb</name><argument_list pos:start="201:40" pos:end="201:47">(<argument pos:start="201:41" pos:end="201:46"><expr pos:start="201:41" pos:end="201:46"><operator pos:start="201:41" pos:end="201:41">&amp;</operator><name pos:start="201:42" pos:end="201:46"><name pos:start="201:42" pos:end="201:42">s</name><operator pos:start="201:43" pos:end="201:44">-&gt;</operator><name pos:start="201:45" pos:end="201:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="203:9" pos:end="207:9"><if pos:start="203:9" pos:end="207:9">if<condition pos:start="203:11" pos:end="203:43">(<expr pos:start="203:12" pos:end="203:42"><name pos:start="203:12" pos:end="203:25"><name pos:start="203:12" pos:end="203:14">sps</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:25">crop_left</name></name> <operator pos:start="203:27" pos:end="203:28">||</operator> <name pos:start="203:30" pos:end="203:42"><name pos:start="203:30" pos:end="203:32">sps</name><operator pos:start="203:33" pos:end="203:34">-&gt;</operator><name pos:start="203:35" pos:end="203:42">crop_top</name></name></expr>)</condition><block pos:start="203:44" pos:end="207:9">{<block_content pos:start="205:13" pos:end="205:127">

            <expr_stmt pos:start="205:13" pos:end="205:127"><expr pos:start="205:13" pos:end="205:126"><call pos:start="205:13" pos:end="205:126"><name pos:start="205:13" pos:end="205:18">av_log</name><argument_list pos:start="205:19" pos:end="205:126">(<argument pos:start="205:20" pos:end="205:29"><expr pos:start="205:20" pos:end="205:29"><name pos:start="205:20" pos:end="205:29"><name pos:start="205:20" pos:end="205:20">h</name><operator pos:start="205:21" pos:end="205:22">-&gt;</operator><name pos:start="205:23" pos:end="205:23">s</name><operator pos:start="205:24" pos:end="205:24">.</operator><name pos:start="205:25" pos:end="205:29">avctx</name></name></expr></argument>, <argument pos:start="205:32" pos:end="205:43"><expr pos:start="205:32" pos:end="205:43"><name pos:start="205:32" pos:end="205:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="205:46" pos:end="205:125"><expr pos:start="205:46" pos:end="205:125"><literal type="string" pos:start="205:46" pos:end="205:125">"insane cropping not completely supported, this could look slightly wrong ...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="209:9" pos:end="213:9"><if pos:start="209:9" pos:end="213:9">if<condition pos:start="209:11" pos:end="209:87">(<expr pos:start="209:12" pos:end="209:86"><name pos:start="209:12" pos:end="209:26"><name pos:start="209:12" pos:end="209:14">sps</name><operator pos:start="209:15" pos:end="209:16">-&gt;</operator><name pos:start="209:17" pos:end="209:26">crop_right</name></name> <operator pos:start="209:28" pos:end="209:29">&gt;=</operator> <literal type="number" pos:start="209:31" pos:end="209:31">8</literal> <operator pos:start="209:33" pos:end="209:34">||</operator> <name pos:start="209:36" pos:end="209:51"><name pos:start="209:36" pos:end="209:38">sps</name><operator pos:start="209:39" pos:end="209:40">-&gt;</operator><name pos:start="209:41" pos:end="209:51">crop_bottom</name></name> <operator pos:start="209:53" pos:end="209:54">&gt;=</operator> <operator pos:start="209:56" pos:end="209:56">(</operator><literal type="number" pos:start="209:57" pos:end="209:57">8</literal><operator pos:start="209:58" pos:end="209:59">&gt;&gt;</operator> <operator pos:start="209:61" pos:end="209:61">!</operator><name pos:start="209:62" pos:end="209:85"><name pos:start="209:62" pos:end="209:64">sps</name><operator pos:start="209:65" pos:end="209:66">-&gt;</operator><name pos:start="209:67" pos:end="209:85">frame_mbs_only_flag</name></name><operator pos:start="209:86" pos:end="209:86">)</operator></expr>)</condition><block pos:start="209:88" pos:end="213:9">{<block_content pos:start="211:13" pos:end="211:119">

            <expr_stmt pos:start="211:13" pos:end="211:119"><expr pos:start="211:13" pos:end="211:118"><call pos:start="211:13" pos:end="211:118"><name pos:start="211:13" pos:end="211:18">av_log</name><argument_list pos:start="211:19" pos:end="211:118">(<argument pos:start="211:20" pos:end="211:29"><expr pos:start="211:20" pos:end="211:29"><name pos:start="211:20" pos:end="211:29"><name pos:start="211:20" pos:end="211:20">h</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:23">s</name><operator pos:start="211:24" pos:end="211:24">.</operator><name pos:start="211:25" pos:end="211:29">avctx</name></name></expr></argument>, <argument pos:start="211:32" pos:end="211:43"><expr pos:start="211:32" pos:end="211:43"><name pos:start="211:32" pos:end="211:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="211:46" pos:end="211:117"><expr pos:start="211:46" pos:end="211:117"><literal type="string" pos:start="211:46" pos:end="211:117">"brainfart cropping not supported, this could look slightly wrong ...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="215:6" pos:end="225:5">else<block pos:start="215:10" pos:end="225:5">{<block_content pos:start="217:9" pos:end="223:28">

        <expr_stmt pos:start="217:9" pos:end="223:28"><expr pos:start="217:9" pos:end="223:27"><name pos:start="217:9" pos:end="217:22"><name pos:start="217:9" pos:end="217:11">sps</name><operator pos:start="217:12" pos:end="217:13">-&gt;</operator><name pos:start="217:14" pos:end="217:22">crop_left</name></name>  <operator pos:start="217:25" pos:end="217:25">=</operator>

        <name pos:start="219:9" pos:end="219:23"><name pos:start="219:9" pos:end="219:11">sps</name><operator pos:start="219:12" pos:end="219:13">-&gt;</operator><name pos:start="219:14" pos:end="219:23">crop_right</name></name> <operator pos:start="219:25" pos:end="219:25">=</operator>

        <name pos:start="221:9" pos:end="221:21"><name pos:start="221:9" pos:end="221:11">sps</name><operator pos:start="221:12" pos:end="221:13">-&gt;</operator><name pos:start="221:14" pos:end="221:21">crop_top</name></name>   <operator pos:start="221:25" pos:end="221:25">=</operator>

        <name pos:start="223:9" pos:end="223:24"><name pos:start="223:9" pos:end="223:11">sps</name><operator pos:start="223:12" pos:end="223:13">-&gt;</operator><name pos:start="223:14" pos:end="223:24">crop_bottom</name></name><operator pos:start="223:25" pos:end="223:25">=</operator> <literal type="number" pos:start="223:27" pos:end="223:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:56"><expr pos:start="229:5" pos:end="229:55"><name pos:start="229:5" pos:end="229:36"><name pos:start="229:5" pos:end="229:7">sps</name><operator pos:start="229:8" pos:end="229:9">-&gt;</operator><name pos:start="229:10" pos:end="229:36">vui_parameters_present_flag</name></name><operator pos:start="229:37" pos:end="229:37">=</operator> <call pos:start="229:39" pos:end="229:55"><name pos:start="229:39" pos:end="229:47">get_bits1</name><argument_list pos:start="229:48" pos:end="229:55">(<argument pos:start="229:49" pos:end="229:54"><expr pos:start="229:49" pos:end="229:54"><operator pos:start="229:49" pos:end="229:49">&amp;</operator><name pos:start="229:50" pos:end="229:54"><name pos:start="229:50" pos:end="229:50">s</name><operator pos:start="229:51" pos:end="229:52">-&gt;</operator><name pos:start="229:53" pos:end="229:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="231:5" pos:end="233:38"><if pos:start="231:5" pos:end="233:38">if<condition pos:start="231:7" pos:end="231:42">( <expr pos:start="231:9" pos:end="231:40"><name pos:start="231:9" pos:end="231:40"><name pos:start="231:9" pos:end="231:11">sps</name><operator pos:start="231:12" pos:end="231:13">-&gt;</operator><name pos:start="231:14" pos:end="231:40">vui_parameters_present_flag</name></name></expr> )</condition><block type="pseudo" pos:start="233:9" pos:end="233:38"><block_content pos:start="233:9" pos:end="233:38">

        <expr_stmt pos:start="233:9" pos:end="233:38"><expr pos:start="233:9" pos:end="233:37"><call pos:start="233:9" pos:end="233:37"><name pos:start="233:9" pos:end="233:29">decode_vui_parameters</name><argument_list pos:start="233:30" pos:end="233:37">(<argument pos:start="233:31" pos:end="233:31"><expr pos:start="233:31" pos:end="233:31"><name pos:start="233:31" pos:end="233:31">h</name></expr></argument>, <argument pos:start="233:34" pos:end="233:36"><expr pos:start="233:34" pos:end="233:36"><name pos:start="233:34" pos:end="233:36">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="237:5" pos:end="263:5"><if pos:start="237:5" pos:end="263:5">if<condition pos:start="237:7" pos:end="237:42">(<expr pos:start="237:8" pos:end="237:41"><name pos:start="237:8" pos:end="237:22"><name pos:start="237:8" pos:end="237:8">s</name><operator pos:start="237:9" pos:end="237:10">-&gt;</operator><name pos:start="237:11" pos:end="237:15">avctx</name><operator pos:start="237:16" pos:end="237:17">-&gt;</operator><name pos:start="237:18" pos:end="237:22">debug</name></name><operator pos:start="237:23" pos:end="237:23">&amp;</operator><name pos:start="237:24" pos:end="237:41">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="237:43" pos:end="263:5">{<block_content pos:start="239:9" pos:end="261:17">

        <macro pos:start="239:9" pos:end="261:16"><name pos:start="239:9" pos:end="239:14">av_log</name><argument_list pos:start="239:15" pos:end="261:16">(<argument pos:start="239:16" pos:end="239:25">h-&gt;s.avctx</argument>, <argument pos:start="239:28" pos:end="239:39">AV_LOG_DEBUG</argument>, <argument pos:start="239:42" pos:end="239:114"><literal type="string" pos:start="239:42" pos:end="239:114">"sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%d/%d/%d/%d %s %s\n"</literal></argument>,

               <argument pos:start="241:16" pos:end="241:21">sps_id</argument>, <argument pos:start="241:24" pos:end="241:39">sps-&gt;profile_idc</argument>, <argument pos:start="241:42" pos:end="241:55">sps-&gt;level_idc</argument>,

               <argument pos:start="243:16" pos:end="243:28">sps-&gt;poc_type</argument>,

               <argument pos:start="245:16" pos:end="245:35">sps-&gt;ref_frame_count</argument>,

               <argument pos:start="247:16" pos:end="247:28">sps-&gt;mb_width</argument>, <argument pos:start="247:31" pos:end="247:44">sps-&gt;mb_height</argument>,

               <argument pos:start="249:16" pos:end="249:86">sps-&gt;frame_mbs_only_flag ? <literal type="string" pos:start="249:43" pos:end="249:47">"FRM"</literal> : (sps-&gt;mb_aff ? <literal type="string" pos:start="249:66" pos:end="249:73">"MB-AFF"</literal> : <literal type="string" pos:start="249:77" pos:end="249:85">"PIC-AFF"</literal>)</argument>,

               <argument pos:start="251:16" pos:end="251:58">sps-&gt;direct_8x8_inference_flag ? <literal type="string" pos:start="251:49" pos:end="251:53">"8B8"</literal> : <literal type="string" pos:start="251:57" pos:end="251:58">""</literal></argument>,

               <argument pos:start="253:16" pos:end="253:29">sps-&gt;crop_left</argument>, <argument pos:start="253:32" pos:end="253:46">sps-&gt;crop_right</argument>,

               <argument pos:start="255:16" pos:end="255:28">sps-&gt;crop_top</argument>, <argument pos:start="255:31" pos:end="255:46">sps-&gt;crop_bottom</argument>,

               <argument pos:start="257:16" pos:end="257:60">sps-&gt;vui_parameters_present_flag ? <literal type="string" pos:start="257:51" pos:end="257:55">"VUI"</literal> : <literal type="string" pos:start="257:59" pos:end="257:60">""</literal></argument>,

               <argument pos:start="259:16" pos:end="259:82">((const char*[]){<literal type="string" pos:start="259:33" pos:end="259:38">"Gray"</literal>,<literal type="string" pos:start="259:40" pos:end="259:44">"420"</literal>,<literal type="string" pos:start="259:46" pos:end="259:50">"422"</literal>,<literal type="string" pos:start="259:52" pos:end="259:56">"444"</literal>})[sps-&gt;chroma_format_idc]</argument>

               )</argument_list></macro><empty_stmt pos:start="261:17" pos:end="261:17">;</empty_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="265:5" pos:end="265:13">return <expr pos:start="265:12" pos:end="265:12"><literal type="number" pos:start="265:12" pos:end="265:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
