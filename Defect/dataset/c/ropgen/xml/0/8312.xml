<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8312.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">swr_convert</name><parameter_list pos:start="1:16" pos:end="3:82">(<parameter pos:start="1:17" pos:end="1:36"><decl pos:start="1:17" pos:end="1:36"><type pos:start="1:17" pos:end="1:36"><name pos:start="1:17" pos:end="1:33"><name pos:start="1:17" pos:end="1:22">struct</name> <name pos:start="1:24" pos:end="1:33">SwrContext</name></name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:66"><decl pos:start="1:39" pos:end="1:66"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:45">uint8_t</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:66"><name pos:start="1:48" pos:end="1:54">out_arg</name><index pos:start="1:55" pos:end="1:66">[<expr pos:start="1:56" pos:end="1:65"><name pos:start="1:56" pos:end="1:65">SWR_CH_MAX</name></expr>]</index></name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:81"><decl pos:start="1:69" pos:end="1:81"><type pos:start="1:69" pos:end="1:81"><name pos:start="1:69" pos:end="1:71">int</name></type> <name pos:start="1:73" pos:end="1:81">out_count</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:66"><decl pos:start="3:33" pos:end="3:66"><type pos:start="3:33" pos:end="3:53"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:66"><name pos:start="3:48" pos:end="3:53">in_arg</name> <index pos:start="3:55" pos:end="3:66">[<expr pos:start="3:56" pos:end="3:65"><name pos:start="3:56" pos:end="3:65">SWR_CH_MAX</name></expr>]</index></name></decl></parameter>, <parameter pos:start="3:69" pos:end="3:81"><decl pos:start="3:69" pos:end="3:81"><type pos:start="3:69" pos:end="3:81"><name pos:start="3:69" pos:end="3:71">int</name></type>  <name pos:start="3:74" pos:end="3:81">in_count</name></decl></parameter>)</parameter_list><block pos:start="3:83" pos:end="189:1">{<block_content pos:start="5:5" pos:end="187:5">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">AudioData</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type> <name pos:start="5:17" pos:end="5:18">in</name><init pos:start="5:19" pos:end="5:26">= <expr pos:start="5:21" pos:end="5:26"><operator pos:start="5:21" pos:end="5:21">&amp;</operator><name pos:start="5:22" pos:end="5:26"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:26">in</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">AudioData</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">out</name><init pos:start="7:19" pos:end="7:27">= <expr pos:start="7:21" pos:end="7:27"><operator pos:start="7:21" pos:end="7:21">&amp;</operator><name pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:22">s</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:27">out</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="43:5"><if pos:start="11:5" pos:end="43:5">if<condition pos:start="11:7" pos:end="11:26">(<expr pos:start="11:8" pos:end="11:25"><name pos:start="11:8" pos:end="11:21"><name pos:start="11:8" pos:end="11:8">s</name><operator pos:start="11:9" pos:end="11:10">-&gt;</operator><name pos:start="11:11" pos:end="11:21">drop_output</name></name> <operator pos:start="11:23" pos:end="11:23">&gt;</operator> <literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr>)</condition><block pos:start="11:27" pos:end="43:5">{<block_content pos:start="13:9" pos:end="41:21">

        <decl_stmt pos:start="13:9" pos:end="13:16"><decl pos:start="13:9" pos:end="13:15"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:37"><decl pos:start="15:9" pos:end="15:36"><type pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:15">uint8_t</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:36"><name pos:start="15:18" pos:end="15:24">tmp_arg</name><index pos:start="15:25" pos:end="15:36">[<expr pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:35">SWR_CH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="19:23"><if pos:start="17:9" pos:end="19:23">if<condition pos:start="17:11" pos:end="17:69">(<expr pos:start="17:12" pos:end="17:68"><operator pos:start="17:12" pos:end="17:12">(</operator><name pos:start="17:13" pos:end="17:15">ret</name><operator pos:start="17:16" pos:end="17:16">=</operator><call pos:start="17:17" pos:end="17:65"><name pos:start="17:17" pos:end="17:34">swri_realloc_audio</name><argument_list pos:start="17:35" pos:end="17:65">(<argument pos:start="17:36" pos:end="17:48"><expr pos:start="17:36" pos:end="17:48"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:48"><name pos:start="17:37" pos:end="17:37">s</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:48">drop_temp</name></name></expr></argument>, <argument pos:start="17:51" pos:end="17:64"><expr pos:start="17:51" pos:end="17:64"><name pos:start="17:51" pos:end="17:64"><name pos:start="17:51" pos:end="17:51">s</name><operator pos:start="17:52" pos:end="17:53">-&gt;</operator><name pos:start="17:54" pos:end="17:64">drop_output</name></name></expr></argument>)</argument_list></call><operator pos:start="17:66" pos:end="17:66">)</operator><operator pos:start="17:67" pos:end="17:67">&lt;</operator><literal type="number" pos:start="17:68" pos:end="17:68">0</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:23"><block_content pos:start="19:13" pos:end="19:23">

            <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:54"><expr pos:start="23:9" pos:end="23:53"><call pos:start="23:9" pos:end="23:53"><name pos:start="23:9" pos:end="23:29">reversefill_audiodata</name><argument_list pos:start="23:30" pos:end="23:53">(<argument pos:start="23:31" pos:end="23:43"><expr pos:start="23:31" pos:end="23:43"><operator pos:start="23:31" pos:end="23:31">&amp;</operator><name pos:start="23:32" pos:end="23:43"><name pos:start="23:32" pos:end="23:32">s</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:43">drop_temp</name></name></expr></argument>, <argument pos:start="23:46" pos:end="23:52"><expr pos:start="23:46" pos:end="23:52"><name pos:start="23:46" pos:end="23:52">tmp_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:22">drop_output</name></name> <operator pos:start="25:24" pos:end="25:25">*=</operator> <operator pos:start="25:27" pos:end="25:27">-</operator><literal type="number" pos:start="25:28" pos:end="25:28">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="25:31" pos:end="25:66">//FIXME find a less hackish solution</comment>

        <expr_stmt pos:start="27:9" pos:end="27:73"><expr pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:72"><name pos:start="27:15" pos:end="27:25">swr_convert</name><argument_list pos:start="27:26" pos:end="27:72">(<argument pos:start="27:27" pos:end="27:27"><expr pos:start="27:27" pos:end="27:27"><name pos:start="27:27" pos:end="27:27">s</name></expr></argument>, <argument pos:start="27:30" pos:end="27:36"><expr pos:start="27:30" pos:end="27:36"><name pos:start="27:30" pos:end="27:36">tmp_arg</name></expr></argument>, <argument pos:start="27:39" pos:end="27:53"><expr pos:start="27:39" pos:end="27:53"><operator pos:start="27:39" pos:end="27:39">-</operator><name pos:start="27:40" pos:end="27:53"><name pos:start="27:40" pos:end="27:40">s</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:53">drop_output</name></name></expr></argument>, <argument pos:start="27:56" pos:end="27:61"><expr pos:start="27:56" pos:end="27:61"><name pos:start="27:56" pos:end="27:61">in_arg</name></expr></argument>, <argument pos:start="27:64" pos:end="27:71"><expr pos:start="27:64" pos:end="27:71"><name pos:start="27:64" pos:end="27:71">in_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="27:75" pos:end="27:152">//FIXME optimize but this is as good as never called so maybe it doesnt matter</comment>

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:22">drop_output</name></name> <operator pos:start="29:24" pos:end="29:25">*=</operator> <operator pos:start="29:27" pos:end="29:27">-</operator><literal type="number" pos:start="29:28" pos:end="29:28">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:34"><if pos:start="31:9" pos:end="33:34">if<condition pos:start="31:11" pos:end="31:17">(<expr pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:14">ret</name><operator pos:start="31:15" pos:end="31:15">&gt;</operator><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:34"><block_content pos:start="33:13" pos:end="33:34">

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:26">drop_output</name></name> <operator pos:start="33:28" pos:end="33:29">-=</operator> <name pos:start="33:31" pos:end="33:33">ret</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="37:9" pos:end="39:21"><if pos:start="37:9" pos:end="39:21">if<condition pos:start="37:11" pos:end="37:38">(<expr pos:start="37:12" pos:end="37:37"><name pos:start="37:12" pos:end="37:25"><name pos:start="37:12" pos:end="37:12">s</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:25">drop_output</name></name> <operator pos:start="37:27" pos:end="37:28">||</operator> <operator pos:start="37:30" pos:end="37:30">!</operator><name pos:start="37:31" pos:end="37:37">out_arg</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:21"><block_content pos:start="39:13" pos:end="39:21">

            <return pos:start="39:13" pos:end="39:21">return <expr pos:start="39:20" pos:end="39:20"><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:16">in_count</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="67:44"><if pos:start="47:5" pos:end="65:5">if<condition pos:start="47:7" pos:end="47:15">(<expr pos:start="47:8" pos:end="47:14"><operator pos:start="47:8" pos:end="47:8">!</operator><name pos:start="47:9" pos:end="47:14">in_arg</name></expr>)</condition><block pos:start="47:16" pos:end="65:5">{<block_content pos:start="49:9" pos:end="63:9">

        <if_stmt pos:start="49:9" pos:end="63:9"><if pos:start="49:9" pos:end="59:9">if<condition pos:start="49:11" pos:end="49:23">(<expr pos:start="49:12" pos:end="49:22"><name pos:start="49:12" pos:end="49:22"><name pos:start="49:12" pos:end="49:12">s</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:22">resample</name></name></expr>)</condition><block pos:start="49:24" pos:end="59:9">{<block_content pos:start="51:13" pos:end="57:27">

            <if_stmt pos:start="51:13" pos:end="53:39"><if pos:start="51:13" pos:end="53:39">if <condition pos:start="51:16" pos:end="51:28">(<expr pos:start="51:17" pos:end="51:27"><operator pos:start="51:17" pos:end="51:17">!</operator><name pos:start="51:18" pos:end="51:27"><name pos:start="51:18" pos:end="51:18">s</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:27">flushed</name></name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:39"><block_content pos:start="53:17" pos:end="53:39">

                <expr_stmt pos:start="53:17" pos:end="53:39"><expr pos:start="53:17" pos:end="53:38"><call pos:start="53:17" pos:end="53:38"><name pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:17">s</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:28">resampler</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:35">flush</name></name><argument_list pos:start="53:36" pos:end="53:38">(<argument pos:start="53:37" pos:end="53:37"><expr pos:start="53:37" pos:end="53:37"><name pos:start="53:37" pos:end="53:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:37"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:37">resample_in_constraint</name></name> <operator pos:start="55:39" pos:end="55:39">=</operator> <literal type="number" pos:start="55:41" pos:end="55:41">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:27"><expr pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:22">flushed</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <literal type="number" pos:start="57:26" pos:end="57:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="59:10" pos:end="63:9">else if<condition pos:start="59:17" pos:end="59:37">(<expr pos:start="59:18" pos:end="59:36"><operator pos:start="59:18" pos:end="59:18">!</operator><name pos:start="59:19" pos:end="59:36"><name pos:start="59:19" pos:end="59:19">s</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:36">in_buffer_count</name></name></expr>)</condition><block pos:start="59:38" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:21">

            <return pos:start="61:13" pos:end="61:21">return <expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="65:6" pos:end="67:44">else<block type="pseudo" pos:start="67:9" pos:end="67:44"><block_content pos:start="67:9" pos:end="67:44">

        <expr_stmt pos:start="67:9" pos:end="67:44"><expr pos:start="67:9" pos:end="67:43"><call pos:start="67:9" pos:end="67:43"><name pos:start="67:9" pos:end="67:22">fill_audiodata</name><argument_list pos:start="67:23" pos:end="67:43">(<argument pos:start="67:24" pos:end="67:25"><expr pos:start="67:24" pos:end="67:25"><name pos:start="67:24" pos:end="67:25">in</name></expr></argument> ,  <argument pos:start="67:30" pos:end="67:42"><expr pos:start="67:30" pos:end="67:42"><operator pos:start="67:30" pos:end="67:30">(</operator><name pos:start="67:31" pos:end="67:34">void</name><operator pos:start="67:35" pos:end="67:35">*</operator><operator pos:start="67:36" pos:end="67:36">)</operator><name pos:start="67:37" pos:end="67:42">in_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:33"><expr pos:start="71:5" pos:end="71:32"><call pos:start="71:5" pos:end="71:32"><name pos:start="71:5" pos:end="71:18">fill_audiodata</name><argument_list pos:start="71:19" pos:end="71:32">(<argument pos:start="71:20" pos:end="71:22"><expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">out</name></expr></argument>, <argument pos:start="71:25" pos:end="71:31"><expr pos:start="71:25" pos:end="71:31"><name pos:start="71:25" pos:end="71:31">out_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="187:5"><if pos:start="75:5" pos:end="85:5">if<condition pos:start="75:7" pos:end="75:19">(<expr pos:start="75:8" pos:end="75:18"><name pos:start="75:8" pos:end="75:18"><name pos:start="75:8" pos:end="75:8">s</name><operator pos:start="75:9" pos:end="75:10">-&gt;</operator><name pos:start="75:11" pos:end="75:18">resample</name></name></expr>)</condition><block pos:start="75:20" pos:end="85:5">{<block_content pos:start="77:9" pos:end="83:19">

        <decl_stmt pos:start="77:9" pos:end="77:72"><decl pos:start="77:9" pos:end="77:71"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:15">ret</name> <init pos:start="77:17" pos:end="77:71">= <expr pos:start="77:19" pos:end="77:71"><call pos:start="77:19" pos:end="77:71"><name pos:start="77:19" pos:end="77:38">swr_convert_internal</name><argument_list pos:start="77:39" pos:end="77:71">(<argument pos:start="77:40" pos:end="77:40"><expr pos:start="77:40" pos:end="77:40"><name pos:start="77:40" pos:end="77:40">s</name></expr></argument>, <argument pos:start="77:43" pos:end="77:45"><expr pos:start="77:43" pos:end="77:45"><name pos:start="77:43" pos:end="77:45">out</name></expr></argument>, <argument pos:start="77:48" pos:end="77:56"><expr pos:start="77:48" pos:end="77:56"><name pos:start="77:48" pos:end="77:56">out_count</name></expr></argument>, <argument pos:start="77:59" pos:end="77:60"><expr pos:start="77:59" pos:end="77:60"><name pos:start="77:59" pos:end="77:60">in</name></expr></argument>, <argument pos:start="77:63" pos:end="77:70"><expr pos:start="77:63" pos:end="77:70"><name pos:start="77:63" pos:end="77:70">in_count</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="79:9" pos:end="81:58"><if pos:start="79:9" pos:end="81:58">if<condition pos:start="79:11" pos:end="79:36">(<expr pos:start="79:12" pos:end="79:35"><name pos:start="79:12" pos:end="79:14">ret</name><operator pos:start="79:15" pos:end="79:15">&gt;</operator><literal type="number" pos:start="79:16" pos:end="79:16">0</literal> <operator pos:start="79:18" pos:end="79:19">&amp;&amp;</operator> <operator pos:start="79:21" pos:end="79:21">!</operator><name pos:start="79:22" pos:end="79:35"><name pos:start="79:22" pos:end="79:22">s</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:35">drop_output</name></name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:58"><block_content pos:start="81:13" pos:end="81:58">

            <expr_stmt pos:start="81:13" pos:end="81:58"><expr pos:start="81:13" pos:end="81:57"><name pos:start="81:13" pos:end="81:21"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:21">outpts</name></name> <operator pos:start="81:23" pos:end="81:24">+=</operator> <name pos:start="81:26" pos:end="81:28">ret</name> <operator pos:start="81:30" pos:end="81:30">*</operator> <operator pos:start="81:32" pos:end="81:32">(</operator><name pos:start="81:33" pos:end="81:39">int64_t</name><operator pos:start="81:40" pos:end="81:40">)</operator><name pos:start="81:41" pos:end="81:57"><name pos:start="81:41" pos:end="81:41">s</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:57">in_sample_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="83:9" pos:end="83:19">return <expr pos:start="83:16" pos:end="83:18"><name pos:start="83:16" pos:end="83:18">ret</name></expr>;</return>

    </block_content>}</block></if><else pos:start="85:6" pos:end="187:5">else<block pos:start="85:10" pos:end="187:5">{<block_content pos:start="87:9" pos:end="185:20">

        <decl_stmt pos:start="87:9" pos:end="87:27"><decl pos:start="87:9" pos:end="87:26"><type pos:start="87:9" pos:end="87:17"><name pos:start="87:9" pos:end="87:17">AudioData</name></type> <name pos:start="87:19" pos:end="87:21">tmp</name><init pos:start="87:22" pos:end="87:26">= <expr pos:start="87:24" pos:end="87:26"><operator pos:start="87:24" pos:end="87:24">*</operator><name pos:start="87:25" pos:end="87:26">in</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="89:9" pos:end="89:19"><decl pos:start="89:9" pos:end="89:18"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:16">ret2</name><init pos:start="89:17" pos:end="89:18">=<expr pos:start="89:18" pos:end="89:18"><literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="91:9" pos:end="91:22"><decl pos:start="91:9" pos:end="91:15"><type pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">int</name></type> <name pos:start="91:13" pos:end="91:15">ret</name></decl>, <decl pos:start="91:18" pos:end="91:21"><type ref="prev" pos:start="91:9" pos:end="91:11"/><name pos:start="91:18" pos:end="91:21">size</name></decl>;</decl_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:52"><expr pos:start="93:9" pos:end="93:51"><name pos:start="93:9" pos:end="93:12">size</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <call pos:start="93:16" pos:end="93:51"><name pos:start="93:16" pos:end="93:20">FFMIN</name><argument_list pos:start="93:21" pos:end="93:51">(<argument pos:start="93:22" pos:end="93:30"><expr pos:start="93:22" pos:end="93:30"><name pos:start="93:22" pos:end="93:30">out_count</name></expr></argument>, <argument pos:start="93:33" pos:end="93:50"><expr pos:start="93:33" pos:end="93:50"><name pos:start="93:33" pos:end="93:50"><name pos:start="93:33" pos:end="93:33">s</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:50">in_buffer_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="119:9"><if pos:start="95:9" pos:end="119:9">if<condition pos:start="95:11" pos:end="95:16">(<expr pos:start="95:12" pos:end="95:15"><name pos:start="95:12" pos:end="95:15">size</name></expr>)</condition><block pos:start="95:17" pos:end="119:9">{<block_content pos:start="97:13" pos:end="117:39">

            <expr_stmt pos:start="97:13" pos:end="97:61"><expr pos:start="97:13" pos:end="97:60"><call pos:start="97:13" pos:end="97:60"><name pos:start="97:13" pos:end="97:19">buf_set</name><argument_list pos:start="97:20" pos:end="97:60">(<argument pos:start="97:21" pos:end="97:24"><expr pos:start="97:21" pos:end="97:24"><operator pos:start="97:21" pos:end="97:21">&amp;</operator><name pos:start="97:22" pos:end="97:24">tmp</name></expr></argument>, <argument pos:start="97:27" pos:end="97:39"><expr pos:start="97:27" pos:end="97:39"><operator pos:start="97:27" pos:end="97:27">&amp;</operator><name pos:start="97:28" pos:end="97:39"><name pos:start="97:28" pos:end="97:28">s</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:39">in_buffer</name></name></expr></argument>, <argument pos:start="97:42" pos:end="97:59"><expr pos:start="97:42" pos:end="97:59"><name pos:start="97:42" pos:end="97:59"><name pos:start="97:42" pos:end="97:42">s</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:59">in_buffer_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:64"><expr pos:start="99:13" pos:end="99:63"><name pos:start="99:13" pos:end="99:15">ret</name><operator pos:start="99:16" pos:end="99:16">=</operator> <call pos:start="99:18" pos:end="99:63"><name pos:start="99:18" pos:end="99:37">swr_convert_internal</name><argument_list pos:start="99:38" pos:end="99:63">(<argument pos:start="99:39" pos:end="99:39"><expr pos:start="99:39" pos:end="99:39"><name pos:start="99:39" pos:end="99:39">s</name></expr></argument>, <argument pos:start="99:42" pos:end="99:44"><expr pos:start="99:42" pos:end="99:44"><name pos:start="99:42" pos:end="99:44">out</name></expr></argument>, <argument pos:start="99:47" pos:end="99:50"><expr pos:start="99:47" pos:end="99:50"><name pos:start="99:47" pos:end="99:50">size</name></expr></argument>, <argument pos:start="99:53" pos:end="99:56"><expr pos:start="99:53" pos:end="99:56"><operator pos:start="99:53" pos:end="99:53">&amp;</operator><name pos:start="99:54" pos:end="99:56">tmp</name></expr></argument>, <argument pos:start="99:59" pos:end="99:62"><expr pos:start="99:59" pos:end="99:62"><name pos:start="99:59" pos:end="99:62">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="103:27"><if pos:start="101:13" pos:end="103:27">if<condition pos:start="101:15" pos:end="101:21">(<expr pos:start="101:16" pos:end="101:20"><name pos:start="101:16" pos:end="101:18">ret</name><operator pos:start="101:19" pos:end="101:19">&lt;</operator><literal type="number" pos:start="101:20" pos:end="101:20">0</literal></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:27"><block_content pos:start="103:17" pos:end="103:27">

                <return pos:start="103:17" pos:end="103:27">return <expr pos:start="103:24" pos:end="103:26"><name pos:start="103:24" pos:end="103:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:22"><expr pos:start="105:13" pos:end="105:21"><name pos:start="105:13" pos:end="105:16">ret2</name><operator pos:start="105:17" pos:end="105:17">=</operator> <name pos:start="105:19" pos:end="105:21">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:38"><expr pos:start="107:13" pos:end="107:37"><name pos:start="107:13" pos:end="107:30"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:30">in_buffer_count</name></name> <operator pos:start="107:32" pos:end="107:33">-=</operator> <name pos:start="107:35" pos:end="107:37">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:38"><expr pos:start="109:13" pos:end="109:37"><name pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:30">in_buffer_index</name></name> <operator pos:start="109:32" pos:end="109:33">+=</operator> <name pos:start="109:35" pos:end="109:37">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:35"><expr pos:start="111:13" pos:end="111:34"><call pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:19">buf_set</name><argument_list pos:start="111:20" pos:end="111:34">(<argument pos:start="111:21" pos:end="111:23"><expr pos:start="111:21" pos:end="111:23"><name pos:start="111:21" pos:end="111:23">out</name></expr></argument>, <argument pos:start="111:26" pos:end="111:28"><expr pos:start="111:26" pos:end="111:28"><name pos:start="111:26" pos:end="111:28">out</name></expr></argument>, <argument pos:start="111:31" pos:end="111:33"><expr pos:start="111:31" pos:end="111:33"><name pos:start="111:31" pos:end="111:33">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:29"><expr pos:start="113:13" pos:end="113:28"><name pos:start="113:13" pos:end="113:21">out_count</name> <operator pos:start="113:23" pos:end="113:24">-=</operator> <name pos:start="113:26" pos:end="113:28">ret</name></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="117:39"><if pos:start="115:13" pos:end="117:39">if<condition pos:start="115:15" pos:end="115:35">(<expr pos:start="115:16" pos:end="115:34"><operator pos:start="115:16" pos:end="115:16">!</operator><name pos:start="115:17" pos:end="115:34"><name pos:start="115:17" pos:end="115:17">s</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:34">in_buffer_count</name></name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:39"><block_content pos:start="117:17" pos:end="117:39">

                <expr_stmt pos:start="117:17" pos:end="117:39"><expr pos:start="117:17" pos:end="117:38"><name pos:start="117:17" pos:end="117:34"><name pos:start="117:17" pos:end="117:17">s</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:34">in_buffer_index</name></name> <operator pos:start="117:36" pos:end="117:36">=</operator> <literal type="number" pos:start="117:38" pos:end="117:38">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="123:9" pos:end="179:9"><if pos:start="123:9" pos:end="179:9">if<condition pos:start="123:11" pos:end="123:20">(<expr pos:start="123:12" pos:end="123:19"><name pos:start="123:12" pos:end="123:19">in_count</name></expr>)</condition><block pos:start="123:21" pos:end="179:9">{<block_content pos:start="125:13" pos:end="177:13">

            <expr_stmt pos:start="125:13" pos:end="125:81"><expr pos:start="125:13" pos:end="125:80"><name pos:start="125:13" pos:end="125:16">size</name><operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:36"><name pos:start="125:19" pos:end="125:19">s</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:36">in_buffer_index</name></name> <operator pos:start="125:38" pos:end="125:38">+</operator> <name pos:start="125:40" pos:end="125:57"><name pos:start="125:40" pos:end="125:40">s</name><operator pos:start="125:41" pos:end="125:42">-&gt;</operator><name pos:start="125:43" pos:end="125:57">in_buffer_count</name></name> <operator pos:start="125:59" pos:end="125:59">+</operator> <name pos:start="125:61" pos:end="125:68">in_count</name> <operator pos:start="125:70" pos:end="125:70">-</operator> <name pos:start="125:72" pos:end="125:80">out_count</name></expr>;</expr_stmt>



            <if_stmt pos:start="129:13" pos:end="147:13"><if pos:start="129:13" pos:end="147:13">if<condition pos:start="129:15" pos:end="129:36">(<expr pos:start="129:16" pos:end="129:35"><name pos:start="129:16" pos:end="129:23">in_count</name> <operator pos:start="129:25" pos:end="129:25">&gt;</operator> <name pos:start="129:27" pos:end="129:35">out_count</name></expr>)</condition> <block pos:start="129:38" pos:end="147:13">{<block_content pos:start="131:17" pos:end="145:35"> <comment type="line" pos:start="129:40" pos:end="129:78">//FIXME move after swr_convert_internal</comment>

                <if_stmt pos:start="131:17" pos:end="145:35"><if pos:start="131:17" pos:end="141:17">if<condition pos:start="131:19" pos:end="133:83">(   <expr pos:start="131:23" pos:end="133:82"><name pos:start="131:23" pos:end="131:26">size</name> <operator pos:start="131:28" pos:end="131:28">&gt;</operator> <name pos:start="131:30" pos:end="131:47"><name pos:start="131:30" pos:end="131:30">s</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:41">in_buffer</name><operator pos:start="131:42" pos:end="131:42">.</operator><name pos:start="131:43" pos:end="131:47">count</name></name>

                <operator pos:start="133:17" pos:end="133:18">&amp;&amp;</operator> <name pos:start="133:20" pos:end="133:37"><name pos:start="133:20" pos:end="133:20">s</name><operator pos:start="133:21" pos:end="133:22">-&gt;</operator><name pos:start="133:23" pos:end="133:37">in_buffer_count</name></name> <operator pos:start="133:39" pos:end="133:39">+</operator> <name pos:start="133:41" pos:end="133:48">in_count</name> <operator pos:start="133:50" pos:end="133:50">-</operator> <name pos:start="133:52" pos:end="133:60">out_count</name> <operator pos:start="133:62" pos:end="133:63">&lt;=</operator> <name pos:start="133:65" pos:end="133:82"><name pos:start="133:65" pos:end="133:65">s</name><operator pos:start="133:66" pos:end="133:67">-&gt;</operator><name pos:start="133:68" pos:end="133:82">in_buffer_index</name></name></expr>)</condition><block pos:start="133:84" pos:end="141:17">{<block_content pos:start="135:21" pos:end="139:41">

                    <expr_stmt pos:start="135:21" pos:end="135:69"><expr pos:start="135:21" pos:end="135:68"><call pos:start="135:21" pos:end="135:68"><name pos:start="135:21" pos:end="135:27">buf_set</name><argument_list pos:start="135:28" pos:end="135:68">(<argument pos:start="135:29" pos:end="135:32"><expr pos:start="135:29" pos:end="135:32"><operator pos:start="135:29" pos:end="135:29">&amp;</operator><name pos:start="135:30" pos:end="135:32">tmp</name></expr></argument>, <argument pos:start="135:35" pos:end="135:47"><expr pos:start="135:35" pos:end="135:47"><operator pos:start="135:35" pos:end="135:35">&amp;</operator><name pos:start="135:36" pos:end="135:47"><name pos:start="135:36" pos:end="135:36">s</name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:47">in_buffer</name></name></expr></argument>, <argument pos:start="135:50" pos:end="135:67"><expr pos:start="135:50" pos:end="135:67"><name pos:start="135:50" pos:end="135:67"><name pos:start="135:50" pos:end="135:50">s</name><operator pos:start="135:51" pos:end="135:52">-&gt;</operator><name pos:start="135:53" pos:end="135:67">in_buffer_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:66"><expr pos:start="137:21" pos:end="137:65"><call pos:start="137:21" pos:end="137:65"><name pos:start="137:21" pos:end="137:24">copy</name><argument_list pos:start="137:25" pos:end="137:65">(<argument pos:start="137:26" pos:end="137:38"><expr pos:start="137:26" pos:end="137:38"><operator pos:start="137:26" pos:end="137:26">&amp;</operator><name pos:start="137:27" pos:end="137:38"><name pos:start="137:27" pos:end="137:27">s</name><operator pos:start="137:28" pos:end="137:29">-&gt;</operator><name pos:start="137:30" pos:end="137:38">in_buffer</name></name></expr></argument>, <argument pos:start="137:41" pos:end="137:44"><expr pos:start="137:41" pos:end="137:44"><operator pos:start="137:41" pos:end="137:41">&amp;</operator><name pos:start="137:42" pos:end="137:44">tmp</name></expr></argument>, <argument pos:start="137:47" pos:end="137:64"><expr pos:start="137:47" pos:end="137:64"><name pos:start="137:47" pos:end="137:64"><name pos:start="137:47" pos:end="137:47">s</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:64">in_buffer_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="139:21" pos:end="139:41"><expr pos:start="139:21" pos:end="139:40"><name pos:start="139:21" pos:end="139:38"><name pos:start="139:21" pos:end="139:21">s</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:38">in_buffer_index</name></name><operator pos:start="139:39" pos:end="139:39">=</operator><literal type="number" pos:start="139:40" pos:end="139:40">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if><if type="elseif" pos:start="141:18" pos:end="145:35">else

                    if<condition pos:start="143:23" pos:end="143:73">(<expr pos:start="143:24" pos:end="143:72"><operator pos:start="143:24" pos:end="143:24">(</operator><name pos:start="143:25" pos:end="143:27">ret</name><operator pos:start="143:28" pos:end="143:28">=</operator><call pos:start="143:29" pos:end="143:67"><name pos:start="143:29" pos:end="143:46">swri_realloc_audio</name><argument_list pos:start="143:47" pos:end="143:67">(<argument pos:start="143:48" pos:end="143:60"><expr pos:start="143:48" pos:end="143:60"><operator pos:start="143:48" pos:end="143:48">&amp;</operator><name pos:start="143:49" pos:end="143:60"><name pos:start="143:49" pos:end="143:49">s</name><operator pos:start="143:50" pos:end="143:51">-&gt;</operator><name pos:start="143:52" pos:end="143:60">in_buffer</name></name></expr></argument>, <argument pos:start="143:63" pos:end="143:66"><expr pos:start="143:63" pos:end="143:66"><name pos:start="143:63" pos:end="143:66">size</name></expr></argument>)</argument_list></call><operator pos:start="143:68" pos:end="143:68">)</operator> <operator pos:start="143:70" pos:end="143:70">&lt;</operator> <literal type="number" pos:start="143:72" pos:end="143:72">0</literal></expr>)</condition><block type="pseudo" pos:start="145:25" pos:end="145:35"><block_content pos:start="145:25" pos:end="145:35">

                        <return pos:start="145:25" pos:end="145:35">return <expr pos:start="145:32" pos:end="145:34"><name pos:start="145:32" pos:end="145:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="151:13" pos:end="167:13"><if pos:start="151:13" pos:end="167:13">if<condition pos:start="151:15" pos:end="151:25">(<expr pos:start="151:16" pos:end="151:24"><name pos:start="151:16" pos:end="151:24">out_count</name></expr>)</condition><block pos:start="151:26" pos:end="167:13">{<block_content pos:start="153:17" pos:end="165:28">

                <expr_stmt pos:start="153:17" pos:end="153:50"><expr pos:start="153:17" pos:end="153:49"><name pos:start="153:17" pos:end="153:20">size</name> <operator pos:start="153:22" pos:end="153:22">=</operator> <call pos:start="153:24" pos:end="153:49"><name pos:start="153:24" pos:end="153:28">FFMIN</name><argument_list pos:start="153:29" pos:end="153:49">(<argument pos:start="153:30" pos:end="153:37"><expr pos:start="153:30" pos:end="153:37"><name pos:start="153:30" pos:end="153:37">in_count</name></expr></argument>, <argument pos:start="153:40" pos:end="153:48"><expr pos:start="153:40" pos:end="153:48"><name pos:start="153:40" pos:end="153:48">out_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:66"><expr pos:start="155:17" pos:end="155:65"><name pos:start="155:17" pos:end="155:19">ret</name><operator pos:start="155:20" pos:end="155:20">=</operator> <call pos:start="155:22" pos:end="155:65"><name pos:start="155:22" pos:end="155:41">swr_convert_internal</name><argument_list pos:start="155:42" pos:end="155:65">(<argument pos:start="155:43" pos:end="155:43"><expr pos:start="155:43" pos:end="155:43"><name pos:start="155:43" pos:end="155:43">s</name></expr></argument>, <argument pos:start="155:46" pos:end="155:48"><expr pos:start="155:46" pos:end="155:48"><name pos:start="155:46" pos:end="155:48">out</name></expr></argument>, <argument pos:start="155:51" pos:end="155:54"><expr pos:start="155:51" pos:end="155:54"><name pos:start="155:51" pos:end="155:54">size</name></expr></argument>, <argument pos:start="155:57" pos:end="155:58"><expr pos:start="155:57" pos:end="155:58"><name pos:start="155:57" pos:end="155:58">in</name></expr></argument>, <argument pos:start="155:61" pos:end="155:64"><expr pos:start="155:61" pos:end="155:64"><name pos:start="155:61" pos:end="155:64">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="157:17" pos:end="159:31"><if pos:start="157:17" pos:end="159:31">if<condition pos:start="157:19" pos:end="157:25">(<expr pos:start="157:20" pos:end="157:24"><name pos:start="157:20" pos:end="157:22">ret</name><operator pos:start="157:23" pos:end="157:23">&lt;</operator><literal type="number" pos:start="157:24" pos:end="157:24">0</literal></expr>)</condition><block type="pseudo" pos:start="159:21" pos:end="159:31"><block_content pos:start="159:21" pos:end="159:31">

                    <return pos:start="159:21" pos:end="159:31">return <expr pos:start="159:28" pos:end="159:30"><name pos:start="159:28" pos:end="159:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:37"><expr pos:start="161:17" pos:end="161:36"><call pos:start="161:17" pos:end="161:36"><name pos:start="161:17" pos:end="161:23">buf_set</name><argument_list pos:start="161:24" pos:end="161:36">(<argument pos:start="161:25" pos:end="161:26"><expr pos:start="161:25" pos:end="161:26"><name pos:start="161:25" pos:end="161:26">in</name></expr></argument>, <argument pos:start="161:29" pos:end="161:30"><expr pos:start="161:29" pos:end="161:30"><name pos:start="161:29" pos:end="161:30">in</name></expr></argument>, <argument pos:start="161:33" pos:end="161:35"><expr pos:start="161:33" pos:end="161:35"><name pos:start="161:33" pos:end="161:35">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:32"><expr pos:start="163:17" pos:end="163:31"><name pos:start="163:17" pos:end="163:24">in_count</name> <operator pos:start="163:26" pos:end="163:27">-=</operator> <name pos:start="163:29" pos:end="163:31">ret</name></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:28"><expr pos:start="165:17" pos:end="165:27"><name pos:start="165:17" pos:end="165:20">ret2</name> <operator pos:start="165:22" pos:end="165:23">+=</operator> <name pos:start="165:25" pos:end="165:27">ret</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="169:13" pos:end="177:13"><if pos:start="169:13" pos:end="177:13">if<condition pos:start="169:15" pos:end="169:24">(<expr pos:start="169:16" pos:end="169:23"><name pos:start="169:16" pos:end="169:23">in_count</name></expr>)</condition><block pos:start="169:25" pos:end="177:13">{<block_content pos:start="171:17" pos:end="175:47">

                <expr_stmt pos:start="171:17" pos:end="171:86"><expr pos:start="171:17" pos:end="171:85"><call pos:start="171:17" pos:end="171:85"><name pos:start="171:17" pos:end="171:23">buf_set</name><argument_list pos:start="171:24" pos:end="171:85">(<argument pos:start="171:25" pos:end="171:28"><expr pos:start="171:25" pos:end="171:28"><operator pos:start="171:25" pos:end="171:25">&amp;</operator><name pos:start="171:26" pos:end="171:28">tmp</name></expr></argument>, <argument pos:start="171:31" pos:end="171:43"><expr pos:start="171:31" pos:end="171:43"><operator pos:start="171:31" pos:end="171:31">&amp;</operator><name pos:start="171:32" pos:end="171:43"><name pos:start="171:32" pos:end="171:32">s</name><operator pos:start="171:33" pos:end="171:34">-&gt;</operator><name pos:start="171:35" pos:end="171:43">in_buffer</name></name></expr></argument>, <argument pos:start="171:46" pos:end="171:84"><expr pos:start="171:46" pos:end="171:84"><name pos:start="171:46" pos:end="171:63"><name pos:start="171:46" pos:end="171:46">s</name><operator pos:start="171:47" pos:end="171:48">-&gt;</operator><name pos:start="171:49" pos:end="171:63">in_buffer_index</name></name> <operator pos:start="171:65" pos:end="171:65">+</operator> <name pos:start="171:67" pos:end="171:84"><name pos:start="171:67" pos:end="171:67">s</name><operator pos:start="171:68" pos:end="171:69">-&gt;</operator><name pos:start="171:70" pos:end="171:84">in_buffer_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:41"><expr pos:start="173:17" pos:end="173:40"><call pos:start="173:17" pos:end="173:40"><name pos:start="173:17" pos:end="173:20">copy</name><argument_list pos:start="173:21" pos:end="173:40">(<argument pos:start="173:22" pos:end="173:25"><expr pos:start="173:22" pos:end="173:25"><operator pos:start="173:22" pos:end="173:22">&amp;</operator><name pos:start="173:23" pos:end="173:25">tmp</name></expr></argument>, <argument pos:start="173:28" pos:end="173:29"><expr pos:start="173:28" pos:end="173:29"><name pos:start="173:28" pos:end="173:29">in</name></expr></argument>, <argument pos:start="173:32" pos:end="173:39"><expr pos:start="173:32" pos:end="173:39"><name pos:start="173:32" pos:end="173:39">in_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:47"><expr pos:start="175:17" pos:end="175:46"><name pos:start="175:17" pos:end="175:34"><name pos:start="175:17" pos:end="175:17">s</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:34">in_buffer_count</name></name> <operator pos:start="175:36" pos:end="175:37">+=</operator> <name pos:start="175:39" pos:end="175:46">in_count</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="181:9" pos:end="183:59"><if pos:start="181:9" pos:end="183:59">if<condition pos:start="181:11" pos:end="181:37">(<expr pos:start="181:12" pos:end="181:36"><name pos:start="181:12" pos:end="181:15">ret2</name><operator pos:start="181:16" pos:end="181:16">&gt;</operator><literal type="number" pos:start="181:17" pos:end="181:17">0</literal> <operator pos:start="181:19" pos:end="181:20">&amp;&amp;</operator> <operator pos:start="181:22" pos:end="181:22">!</operator><name pos:start="181:23" pos:end="181:36"><name pos:start="181:23" pos:end="181:23">s</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:36">drop_output</name></name></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:59"><block_content pos:start="183:13" pos:end="183:59">

            <expr_stmt pos:start="183:13" pos:end="183:59"><expr pos:start="183:13" pos:end="183:58"><name pos:start="183:13" pos:end="183:21"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:21">outpts</name></name> <operator pos:start="183:23" pos:end="183:24">+=</operator> <name pos:start="183:26" pos:end="183:29">ret2</name> <operator pos:start="183:31" pos:end="183:31">*</operator> <operator pos:start="183:33" pos:end="183:33">(</operator><name pos:start="183:34" pos:end="183:40">int64_t</name><operator pos:start="183:41" pos:end="183:41">)</operator><name pos:start="183:42" pos:end="183:58"><name pos:start="183:42" pos:end="183:42">s</name><operator pos:start="183:43" pos:end="183:44">-&gt;</operator><name pos:start="183:45" pos:end="183:58">in_sample_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="185:9" pos:end="185:20">return <expr pos:start="185:16" pos:end="185:19"><name pos:start="185:16" pos:end="185:19">ret2</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
