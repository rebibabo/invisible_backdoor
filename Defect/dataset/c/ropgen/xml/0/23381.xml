<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23381.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">qmp_nbd_server_start</name><parameter_list pos:start="1:26" pos:end="5:39">(<parameter pos:start="1:27" pos:end="1:51"><decl pos:start="1:27" pos:end="1:51"><type pos:start="1:27" pos:end="1:51"><name pos:start="1:27" pos:end="1:45">SocketAddressLegacy</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">addr</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:44"><decl pos:start="3:27" pos:end="3:44"><type pos:start="3:27" pos:end="3:44"><name pos:start="3:27" pos:end="3:30">bool</name></type> <name pos:start="3:32" pos:end="3:44">has_tls_creds</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:67"><decl pos:start="3:47" pos:end="3:67"><type pos:start="3:47" pos:end="3:67"><specifier pos:start="3:47" pos:end="3:51">const</specifier> <name pos:start="3:53" pos:end="3:56">char</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:67">tls_creds</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:38"><decl pos:start="5:27" pos:end="5:38"><type pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:31">Error</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier><modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:38">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="89:1">{<block_content pos:start="9:5" pos:end="87:22">

    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:19">(<expr pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:18">nbd_server</name></expr>)</condition> <block pos:start="9:21" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:15">

        <expr_stmt pos:start="11:9" pos:end="11:55"><expr pos:start="11:9" pos:end="11:54"><call pos:start="11:9" pos:end="11:54"><name pos:start="11:9" pos:end="11:18">error_setg</name><argument_list pos:start="11:19" pos:end="11:54">(<argument pos:start="11:20" pos:end="11:23"><expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">errp</name></expr></argument>, <argument pos:start="11:26" pos:end="11:53"><expr pos:start="11:26" pos:end="11:53"><literal type="string" pos:start="11:26" pos:end="11:53">"NBD server already running"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:14">nbd_server</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:41"><name pos:start="19:18" pos:end="19:23">g_new0</name><argument_list pos:start="19:24" pos:end="19:41">(<argument pos:start="19:25" pos:end="19:37"><expr pos:start="19:25" pos:end="19:37"><name pos:start="19:25" pos:end="19:37">NBDServerData</name></expr></argument>, <argument pos:start="19:40" pos:end="19:40"><expr pos:start="19:40" pos:end="19:40"><literal type="number" pos:start="19:40" pos:end="19:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:14">nbd_server</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:21">watch</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <operator pos:start="21:25" pos:end="21:25">-</operator><literal type="number" pos:start="21:26" pos:end="21:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:14">nbd_server</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:26">listen_ioc</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <call pos:start="23:30" pos:end="23:53"><name pos:start="23:30" pos:end="23:51">qio_channel_socket_new</name><argument_list pos:start="23:52" pos:end="23:53">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:41"><expr pos:start="25:5" pos:end="27:40"><call pos:start="25:5" pos:end="27:40"><name pos:start="25:5" pos:end="25:24">qio_channel_set_name</name><argument_list pos:start="25:25" pos:end="27:40">(<argument pos:start="25:26" pos:end="25:60"><expr pos:start="25:26" pos:end="25:60"><call pos:start="25:26" pos:end="25:60"><name pos:start="25:26" pos:end="25:36">QIO_CHANNEL</name><argument_list pos:start="25:37" pos:end="25:60">(<argument pos:start="25:38" pos:end="25:59"><expr pos:start="25:38" pos:end="25:59"><name pos:start="25:38" pos:end="25:59"><name pos:start="25:38" pos:end="25:47">nbd_server</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:59">listen_ioc</name></name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="27:26" pos:end="27:39"><expr pos:start="27:26" pos:end="27:39"><literal type="string" pos:start="27:26" pos:end="27:39">"nbd-listener"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="31:52">(<expr pos:start="29:9" pos:end="31:51"><call pos:start="29:9" pos:end="31:47"><name pos:start="29:9" pos:end="29:38">qio_channel_socket_listen_sync</name><argument_list pos:start="29:39" pos:end="31:47">(

            <argument pos:start="31:13" pos:end="31:34"><expr pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:22">nbd_server</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:34">listen_ioc</name></name></expr></argument>, <argument pos:start="31:37" pos:end="31:40"><expr pos:start="31:37" pos:end="31:40"><name pos:start="31:37" pos:end="31:40">addr</name></expr></argument>, <argument pos:start="31:43" pos:end="31:46"><expr pos:start="31:43" pos:end="31:46"><name pos:start="31:43" pos:end="31:46">errp</name></expr></argument>)</argument_list></call> <operator pos:start="31:49" pos:end="31:49">&lt;</operator> <literal type="number" pos:start="31:51" pos:end="31:51">0</literal></expr>)</condition> <block pos:start="31:54" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:19">

        <goto pos:start="33:9" pos:end="33:19">goto <name pos:start="33:14" pos:end="33:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="61:5"><if pos:start="39:5" pos:end="61:5">if <condition pos:start="39:8" pos:end="39:22">(<expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:21">has_tls_creds</name></expr>)</condition> <block pos:start="39:24" pos:end="61:5">{<block_content pos:start="41:9" pos:end="59:9">

        <expr_stmt pos:start="41:9" pos:end="41:66"><expr pos:start="41:9" pos:end="41:65"><name pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:18">nbd_server</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:28">tlscreds</name></name> <operator pos:start="41:30" pos:end="41:30">=</operator> <call pos:start="41:32" pos:end="41:65"><name pos:start="41:32" pos:end="41:48">nbd_get_tls_creds</name><argument_list pos:start="41:49" pos:end="41:65">(<argument pos:start="41:50" pos:end="41:58"><expr pos:start="41:50" pos:end="41:58"><name pos:start="41:50" pos:end="41:58">tls_creds</name></expr></argument>, <argument pos:start="41:61" pos:end="41:64"><expr pos:start="41:61" pos:end="41:64"><name pos:start="41:61" pos:end="41:64">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:34">(<expr pos:start="43:13" pos:end="43:33"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:33"><name pos:start="43:14" pos:end="43:23">nbd_server</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:33">tlscreds</name></name></expr>)</condition> <block pos:start="43:36" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:23">

            <goto pos:start="45:13" pos:end="45:23">goto <name pos:start="45:18" pos:end="45:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="51:9" pos:end="51:81">/* TODO SOCKET_ADDRESS_LEGACY_KIND_FD where fd has AF_INET or AF_INET6 */</comment>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:58">(<expr pos:start="53:13" pos:end="53:57"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:16">addr</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:22">type</name></name> <operator pos:start="53:24" pos:end="53:25">!=</operator> <name pos:start="53:27" pos:end="53:57">SOCKET_ADDRESS_LEGACY_KIND_INET</name></expr>)</condition> <block pos:start="53:60" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:23">

            <expr_stmt pos:start="55:13" pos:end="55:69"><expr pos:start="55:13" pos:end="55:68"><call pos:start="55:13" pos:end="55:68"><name pos:start="55:13" pos:end="55:22">error_setg</name><argument_list pos:start="55:23" pos:end="55:68">(<argument pos:start="55:24" pos:end="55:27"><expr pos:start="55:24" pos:end="55:27"><name pos:start="55:24" pos:end="55:27">errp</name></expr></argument>, <argument pos:start="55:30" pos:end="55:67"><expr pos:start="55:30" pos:end="55:67"><literal type="string" pos:start="55:30" pos:end="55:67">"TLS is only supported with IPv4/IPv6"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="57:13" pos:end="57:23">goto <name pos:start="57:18" pos:end="57:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="75:14"><expr pos:start="65:5" pos:end="75:13"><name pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:14">nbd_server</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:21">watch</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <call pos:start="65:25" pos:end="75:13"><name pos:start="65:25" pos:end="65:45">qio_channel_add_watch</name><argument_list pos:start="65:46" pos:end="75:13">(

        <argument pos:start="67:9" pos:end="67:43"><expr pos:start="67:9" pos:end="67:43"><call pos:start="67:9" pos:end="67:43"><name pos:start="67:9" pos:end="67:19">QIO_CHANNEL</name><argument_list pos:start="67:20" pos:end="67:43">(<argument pos:start="67:21" pos:end="67:42"><expr pos:start="67:21" pos:end="67:42"><name pos:start="67:21" pos:end="67:42"><name pos:start="67:21" pos:end="67:30">nbd_server</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:42">listen_ioc</name></name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="69:9" pos:end="69:15"><expr pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:15">G_IO_IN</name></expr></argument>,

        <argument pos:start="71:9" pos:end="71:18"><expr pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:18">nbd_accept</name></expr></argument>,

        <argument pos:start="73:9" pos:end="73:12"><expr pos:start="73:9" pos:end="73:12"><name pos:start="73:9" pos:end="73:12">NULL</name></expr></argument>,

        <argument pos:start="75:9" pos:end="75:12"><expr pos:start="75:9" pos:end="75:12"><name pos:start="75:9" pos:end="75:12">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="79:5" pos:end="79:11">return;</return>



 <label pos:start="83:2" pos:end="83:7"><name pos:start="83:2" pos:end="83:6">error</name>:</label>

    <expr_stmt pos:start="85:5" pos:end="85:32"><expr pos:start="85:5" pos:end="85:31"><call pos:start="85:5" pos:end="85:31"><name pos:start="85:5" pos:end="85:19">nbd_server_free</name><argument_list pos:start="85:20" pos:end="85:31">(<argument pos:start="85:21" pos:end="85:30"><expr pos:start="85:21" pos:end="85:30"><name pos:start="85:21" pos:end="85:30">nbd_server</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:22"><expr pos:start="87:5" pos:end="87:21"><name pos:start="87:5" pos:end="87:14">nbd_server</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <name pos:start="87:18" pos:end="87:21">NULL</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
