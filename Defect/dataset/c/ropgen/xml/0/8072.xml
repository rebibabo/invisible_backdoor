<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8072.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">mch_update_pciexbar</name><parameter_list pos:start="1:32" pos:end="1:49">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:43">MCHPCIState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">mch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:5">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:22">pci_dev</name> <init pos:start="5:24" pos:end="5:40">= <expr pos:start="5:26" pos:end="5:40"><call pos:start="5:26" pos:end="5:40"><name pos:start="5:26" pos:end="5:35">PCI_DEVICE</name><argument_list pos:start="5:36" pos:end="5:40">(<argument pos:start="5:37" pos:end="5:39"><expr pos:start="5:37" pos:end="5:39"><name pos:start="5:37" pos:end="5:39">mch</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">BusState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">bus</name> <init pos:start="7:19" pos:end="7:52">= <expr pos:start="7:21" pos:end="7:52"><call pos:start="7:21" pos:end="7:52"><name pos:start="7:21" pos:end="7:39">qdev_get_parent_bus</name><argument_list pos:start="7:40" pos:end="7:52">(<argument pos:start="7:41" pos:end="7:51"><expr pos:start="7:41" pos:end="7:51"><call pos:start="7:41" pos:end="7:51"><name pos:start="7:41" pos:end="7:46">DEVICE</name><argument_list pos:start="7:47" pos:end="7:51">(<argument pos:start="7:48" pos:end="7:50"><expr pos:start="7:48" pos:end="7:50"><name pos:start="7:48" pos:end="7:50">mch</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:56"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">PCIExpressHost</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:24">pehb</name> <init pos:start="9:26" pos:end="9:56">= <expr pos:start="9:28" pos:end="9:56"><call pos:start="9:28" pos:end="9:56"><name pos:start="9:28" pos:end="9:43">PCIE_HOST_BRIDGE</name><argument_list pos:start="9:44" pos:end="9:56">(<argument pos:start="9:45" pos:end="9:55"><expr pos:start="9:45" pos:end="9:55"><name pos:start="9:45" pos:end="9:55"><name pos:start="9:45" pos:end="9:47">bus</name><operator pos:start="9:48" pos:end="9:49">-&gt;</operator><name pos:start="9:50" pos:end="9:55">parent</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:21">pciexbar</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">enable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:22">addr_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint32_t</name></type> <name pos:start="21:14" pos:end="21:19">length</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:72"><expr pos:start="25:5" pos:end="25:71"><name pos:start="25:5" pos:end="25:12">pciexbar</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:71"><name pos:start="25:16" pos:end="25:27">pci_get_quad</name><argument_list pos:start="25:28" pos:end="25:71">(<argument pos:start="25:29" pos:end="25:70"><expr pos:start="25:29" pos:end="25:70"><name pos:start="25:29" pos:end="25:43"><name pos:start="25:29" pos:end="25:35">pci_dev</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:43">config</name></name> <operator pos:start="25:45" pos:end="25:45">+</operator> <name pos:start="25:47" pos:end="25:70">MCH_HOST_BRIDGE_PCIEXBAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:51"><expr pos:start="27:5" pos:end="27:50"><name pos:start="27:5" pos:end="27:10">enable</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:21">pciexbar</name> <operator pos:start="27:23" pos:end="27:23">&amp;</operator> <name pos:start="27:25" pos:end="27:50">MCH_HOST_BRIDGE_PCIEXBAREN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:13">addr_mask</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:46">MCH_HOST_BRIDGE_PCIEXBAR_ADMSK</name></expr>;</expr_stmt>

    <switch pos:start="31:5" pos:end="69:5">switch <condition pos:start="31:12" pos:end="31:60">(<expr pos:start="31:13" pos:end="31:59"><name pos:start="31:13" pos:end="31:20">pciexbar</name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <name pos:start="31:24" pos:end="31:59">MCH_HOST_BRIDGE_PCIEXBAR_LENGTH_MASK</name></expr>)</condition> <block pos:start="31:62" pos:end="69:5">{<block_content pos:start="33:5" pos:end="67:14">

    <case pos:start="33:5" pos:end="33:46">case <expr pos:start="33:10" pos:end="33:45"><name pos:start="33:10" pos:end="33:45">MCH_HOST_BRIDGE_PCIEXBAR_LENGTH_256M</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:14">length</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:20">256</literal> <operator pos:start="35:22" pos:end="35:22">*</operator> <literal type="number" pos:start="35:24" pos:end="35:27">1024</literal> <operator pos:start="35:29" pos:end="35:29">*</operator> <literal type="number" pos:start="35:31" pos:end="35:34">1024</literal></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:46">case <expr pos:start="39:10" pos:end="39:45"><name pos:start="39:10" pos:end="39:45">MCH_HOST_BRIDGE_PCIEXBAR_LENGTH_128M</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:14">length</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:20">128</literal> <operator pos:start="41:22" pos:end="41:22">*</operator> <literal type="number" pos:start="41:24" pos:end="41:27">1024</literal> <operator pos:start="41:29" pos:end="41:29">*</operator> <literal type="number" pos:start="41:31" pos:end="41:34">1024</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="45:45"><expr pos:start="43:9" pos:end="45:44"><name pos:start="43:9" pos:end="43:17">addr_mask</name> <operator pos:start="43:19" pos:end="43:20">|=</operator> <name pos:start="43:22" pos:end="43:54">MCH_HOST_BRIDGE_PCIEXBAR_128ADMSK</name> <operator pos:start="43:56" pos:end="43:56">|</operator>

            <name pos:start="45:13" pos:end="45:44">MCH_HOST_BRIDGE_PCIEXBAR_64ADMSK</name></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:45">case <expr pos:start="49:10" pos:end="49:44"><name pos:start="49:10" pos:end="49:44">MCH_HOST_BRIDGE_PCIEXBAR_LENGTH_64M</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:14">length</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:19">64</literal> <operator pos:start="51:21" pos:end="51:21">*</operator> <literal type="number" pos:start="51:23" pos:end="51:26">1024</literal> <operator pos:start="51:28" pos:end="51:28">*</operator> <literal type="number" pos:start="51:30" pos:end="51:33">1024</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:54"><expr pos:start="53:9" pos:end="53:53"><name pos:start="53:9" pos:end="53:17">addr_mask</name> <operator pos:start="53:19" pos:end="53:20">|=</operator> <name pos:start="53:22" pos:end="53:53">MCH_HOST_BRIDGE_PCIEXBAR_64ADMSK</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:45">case <expr pos:start="57:10" pos:end="57:44"><name pos:start="57:10" pos:end="57:44">MCH_HOST_BRIDGE_PCIEXBAR_LENGTH_RVD</name></expr>:</case>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <expr_stmt pos:start="61:9" pos:end="61:19"><expr pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:14">enable</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:19"><expr pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:14">length</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:16"><expr pos:start="65:9" pos:end="65:15"><call pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:13">abort</name><argument_list pos:start="65:14" pos:end="65:15">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="71:5" pos:end="71:32"><expr pos:start="71:5" pos:end="71:31"><name pos:start="71:5" pos:end="71:8">addr</name> <operator pos:start="71:10" pos:end="71:10">=</operator> <name pos:start="71:12" pos:end="71:19">pciexbar</name> <operator pos:start="71:21" pos:end="71:21">&amp;</operator> <name pos:start="71:23" pos:end="71:31">addr_mask</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:55"><expr pos:start="73:5" pos:end="73:54"><call pos:start="73:5" pos:end="73:54"><name pos:start="73:5" pos:end="73:26">pcie_host_mmcfg_update</name><argument_list pos:start="73:27" pos:end="73:54">(<argument pos:start="73:28" pos:end="73:31"><expr pos:start="73:28" pos:end="73:31"><name pos:start="73:28" pos:end="73:31">pehb</name></expr></argument>, <argument pos:start="73:34" pos:end="73:39"><expr pos:start="73:34" pos:end="73:39"><name pos:start="73:34" pos:end="73:39">enable</name></expr></argument>, <argument pos:start="73:42" pos:end="73:45"><expr pos:start="73:42" pos:end="73:45"><name pos:start="73:42" pos:end="73:45">addr</name></expr></argument>, <argument pos:start="73:48" pos:end="73:53"><expr pos:start="73:48" pos:end="73:53"><name pos:start="73:48" pos:end="73:53">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="75:5" pos:end="75:45">/* Leave enough space for the MCFG BAR */</comment>

    <comment type="block" pos:start="77:5" pos:end="83:7">/*

     * TODO: this matches current bios behaviour, but it's not a power of two,

     * which means an MTRR can't cover it exactly.

     */</comment>

    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:15">(<expr pos:start="85:9" pos:end="85:14"><name pos:start="85:9" pos:end="85:14">enable</name></expr>)</condition> <block pos:start="85:17" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:44">

        <expr_stmt pos:start="87:9" pos:end="87:44"><expr pos:start="87:9" pos:end="87:43"><name pos:start="87:9" pos:end="87:27"><name pos:start="87:9" pos:end="87:11">mch</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:21">pci_hole</name><operator pos:start="87:22" pos:end="87:22">.</operator><name pos:start="87:23" pos:end="87:27">begin</name></name> <operator pos:start="87:29" pos:end="87:29">=</operator> <name pos:start="87:31" pos:end="87:34">addr</name> <operator pos:start="87:36" pos:end="87:36">+</operator> <name pos:start="87:38" pos:end="87:43">length</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="93:5">else <block pos:start="89:12" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:63">

        <expr_stmt pos:start="91:9" pos:end="91:63"><expr pos:start="91:9" pos:end="91:62"><name pos:start="91:9" pos:end="91:27"><name pos:start="91:9" pos:end="91:11">mch</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:21">pci_hole</name><operator pos:start="91:22" pos:end="91:22">.</operator><name pos:start="91:23" pos:end="91:27">begin</name></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <name pos:start="91:31" pos:end="91:62">MCH_HOST_BRIDGE_PCIEXBAR_DEFAULT</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
