<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25372.c" pos:tabs="8"><function pos:start="1:1" pos:end="307:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_header</name><parameter_list pos:start="1:23" pos:end="1:38">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:34">FFV1Context</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">f</name></decl></parameter>)</parameter_list><block pos:start="1:39" pos:end="307:1">{<block_content pos:start="3:5" pos:end="305:13">

    <decl_stmt pos:start="3:5" pos:end="3:32"><decl pos:start="3:5" pos:end="3:31"><type pos:start="3:5" pos:end="3:11"><name pos:start="3:5" pos:end="3:11">uint8_t</name></type> <name pos:start="3:13" pos:end="3:31"><name pos:start="3:13" pos:end="3:17">state</name><index pos:start="3:18" pos:end="3:31">[<expr pos:start="3:19" pos:end="3:30"><name pos:start="3:19" pos:end="3:30">CONTEXT_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:27">context_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:14">RangeCoder</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier> <specifier pos:start="7:18" pos:end="7:22">const</specifier></type> <name pos:start="7:24" pos:end="7:24">c</name><init pos:start="7:25" pos:end="7:49">= <expr pos:start="7:27" pos:end="7:49"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:46"><name pos:start="7:28" pos:end="7:28">f</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:43">slice_context</name><index pos:start="7:44" pos:end="7:46">[<expr pos:start="7:45" pos:end="7:45"><literal type="number" pos:start="7:45" pos:end="7:45">0</literal></expr>]</index></name><operator pos:start="7:47" pos:end="7:48">-&gt;</operator><name pos:start="7:49" pos:end="7:49">c</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><call pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:10">memset</name><argument_list pos:start="11:11" pos:end="11:37">(<argument pos:start="11:12" pos:end="11:16"><expr pos:start="11:12" pos:end="11:16"><name pos:start="11:12" pos:end="11:16">state</name></expr></argument>, <argument pos:start="11:19" pos:end="11:21"><expr pos:start="11:19" pos:end="11:21"><literal type="number" pos:start="11:19" pos:end="11:21">128</literal></expr></argument>, <argument pos:start="11:24" pos:end="11:36"><expr pos:start="11:24" pos:end="11:36"><sizeof pos:start="11:24" pos:end="11:36">sizeof<argument_list pos:start="11:30" pos:end="11:36">(<argument pos:start="11:31" pos:end="11:35"><expr pos:start="11:31" pos:end="11:35"><name pos:start="11:31" pos:end="11:35">state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="47:5"><if pos:start="15:5" pos:end="47:5">if<condition pos:start="15:7" pos:end="15:22">(<expr pos:start="15:8" pos:end="15:21"><name pos:start="15:8" pos:end="15:17"><name pos:start="15:8" pos:end="15:8">f</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:17">version</name></name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <literal type="number" pos:start="15:21" pos:end="15:21">2</literal></expr>)</condition><block pos:start="15:23" pos:end="47:5">{<block_content pos:start="17:9" pos:end="45:44">

        <expr_stmt pos:start="17:9" pos:end="17:44"><expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">f</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">version</name></name><operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:43"><name pos:start="17:21" pos:end="17:30">get_symbol</name><argument_list pos:start="17:31" pos:end="17:43">(<argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">c</name></expr></argument>, <argument pos:start="17:35" pos:end="17:39"><expr pos:start="17:35" pos:end="17:39"><name pos:start="17:35" pos:end="17:39">state</name></expr></argument>, <argument pos:start="17:42" pos:end="17:42"><expr pos:start="17:42" pos:end="17:42"><literal type="number" pos:start="17:42" pos:end="17:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:61"><expr pos:start="19:9" pos:end="19:60"><name pos:start="19:9" pos:end="19:13"><name pos:start="19:9" pos:end="19:9">f</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:13">ac</name></name><operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:35"><name pos:start="19:16" pos:end="19:16">f</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:23">avctx</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:35">coder_type</name></name><operator pos:start="19:36" pos:end="19:36">=</operator> <call pos:start="19:38" pos:end="19:60"><name pos:start="19:38" pos:end="19:47">get_symbol</name><argument_list pos:start="19:48" pos:end="19:60">(<argument pos:start="19:49" pos:end="19:49"><expr pos:start="19:49" pos:end="19:49"><name pos:start="19:49" pos:end="19:49">c</name></expr></argument>, <argument pos:start="19:52" pos:end="19:56"><expr pos:start="19:52" pos:end="19:56"><name pos:start="19:52" pos:end="19:56">state</name></expr></argument>, <argument pos:start="19:59" pos:end="19:59"><expr pos:start="19:59" pos:end="19:59"><literal type="number" pos:start="19:59" pos:end="19:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="29:9">if<condition pos:start="21:11" pos:end="21:19">(<expr pos:start="21:12" pos:end="21:18"><name pos:start="21:12" pos:end="21:16"><name pos:start="21:12" pos:end="21:12">f</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:16">ac</name></name><operator pos:start="21:17" pos:end="21:17">&gt;</operator><literal type="number" pos:start="21:18" pos:end="21:18">1</literal></expr>)</condition><block pos:start="21:20" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:13">

            <for pos:start="23:13" pos:end="27:13">for<control pos:start="23:16" pos:end="23:32">(<init pos:start="23:17" pos:end="23:20"><expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:17">i</name><operator pos:start="23:18" pos:end="23:18">=</operator><literal type="number" pos:start="23:19" pos:end="23:19">1</literal></expr>;</init> <condition pos:start="23:22" pos:end="23:27"><expr pos:start="23:22" pos:end="23:26"><name pos:start="23:22" pos:end="23:22">i</name><operator pos:start="23:23" pos:end="23:23">&lt;</operator><literal type="number" pos:start="23:24" pos:end="23:26">256</literal></expr>;</condition> <incr pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:29">i</name><operator pos:start="23:30" pos:end="23:31">++</operator></expr></incr>)</control><block pos:start="23:33" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:82">

                <expr_stmt pos:start="25:17" pos:end="25:82"><expr pos:start="25:17" pos:end="25:81"><name pos:start="25:17" pos:end="25:38"><name pos:start="25:17" pos:end="25:17">f</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:35">state_transition</name><index pos:start="25:36" pos:end="25:38">[<expr pos:start="25:37" pos:end="25:37"><name pos:start="25:37" pos:end="25:37">i</name></expr>]</index></name><operator pos:start="25:39" pos:end="25:39">=</operator> <call pos:start="25:41" pos:end="25:63"><name pos:start="25:41" pos:end="25:50">get_symbol</name><argument_list pos:start="25:51" pos:end="25:63">(<argument pos:start="25:52" pos:end="25:52"><expr pos:start="25:52" pos:end="25:52"><name pos:start="25:52" pos:end="25:52">c</name></expr></argument>, <argument pos:start="25:55" pos:end="25:59"><expr pos:start="25:55" pos:end="25:59"><name pos:start="25:55" pos:end="25:59">state</name></expr></argument>, <argument pos:start="25:62" pos:end="25:62"><expr pos:start="25:62" pos:end="25:62"><literal type="number" pos:start="25:62" pos:end="25:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="25:65" pos:end="25:65">+</operator> <name pos:start="25:67" pos:end="25:81"><name pos:start="25:67" pos:end="25:67">c</name><operator pos:start="25:68" pos:end="25:69">-&gt;</operator><name pos:start="25:70" pos:end="25:78">one_state</name><index pos:start="25:79" pos:end="25:81">[<expr pos:start="25:80" pos:end="25:80"><name pos:start="25:80" pos:end="25:80">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:9">f</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:21">colorspace</name></name><operator pos:start="31:22" pos:end="31:22">=</operator> <call pos:start="31:24" pos:end="31:46"><name pos:start="31:24" pos:end="31:33">get_symbol</name><argument_list pos:start="31:34" pos:end="31:46">(<argument pos:start="31:35" pos:end="31:35"><expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">c</name></expr></argument>, <argument pos:start="31:38" pos:end="31:42"><expr pos:start="31:38" pos:end="31:42"><name pos:start="31:38" pos:end="31:42">state</name></expr></argument>, <argument pos:start="31:45" pos:end="31:45"><expr pos:start="31:45" pos:end="31:45"><literal type="number" pos:start="31:45" pos:end="31:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="31:49" pos:end="31:61">//YUV cs type</comment>

        <if_stmt pos:start="33:9" pos:end="35:67"><if pos:start="33:9" pos:end="35:67">if<condition pos:start="33:11" pos:end="33:24">(<expr pos:start="33:12" pos:end="33:23"><name pos:start="33:12" pos:end="33:21"><name pos:start="33:12" pos:end="33:12">f</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:21">version</name></name><operator pos:start="33:22" pos:end="33:22">&gt;</operator><literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:67"><block_content pos:start="35:13" pos:end="35:67">

            <expr_stmt pos:start="35:13" pos:end="35:67"><expr pos:start="35:13" pos:end="35:66"><name pos:start="35:13" pos:end="35:41"><name pos:start="35:13" pos:end="35:13">f</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:20">avctx</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:41">bits_per_raw_sample</name></name><operator pos:start="35:42" pos:end="35:42">=</operator> <call pos:start="35:44" pos:end="35:66"><name pos:start="35:44" pos:end="35:53">get_symbol</name><argument_list pos:start="35:54" pos:end="35:66">(<argument pos:start="35:55" pos:end="35:55"><expr pos:start="35:55" pos:end="35:55"><name pos:start="35:55" pos:end="35:55">c</name></expr></argument>, <argument pos:start="35:58" pos:end="35:62"><expr pos:start="35:58" pos:end="35:62"><name pos:start="35:58" pos:end="35:62">state</name></expr></argument>, <argument pos:start="35:65" pos:end="35:65"><expr pos:start="35:65" pos:end="35:65"><literal type="number" pos:start="35:65" pos:end="35:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:44"><expr pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:9">f</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:24">chroma_planes</name></name><operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:43"><name pos:start="37:27" pos:end="37:33">get_rac</name><argument_list pos:start="37:34" pos:end="37:43">(<argument pos:start="37:35" pos:end="37:35"><expr pos:start="37:35" pos:end="37:35"><name pos:start="37:35" pos:end="37:35">c</name></expr></argument>, <argument pos:start="37:38" pos:end="37:42"><expr pos:start="37:38" pos:end="37:42"><name pos:start="37:38" pos:end="37:42">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:9">f</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:25">chroma_h_shift</name></name><operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="39:50"><name pos:start="39:28" pos:end="39:37">get_symbol</name><argument_list pos:start="39:38" pos:end="39:50">(<argument pos:start="39:39" pos:end="39:39"><expr pos:start="39:39" pos:end="39:39"><name pos:start="39:39" pos:end="39:39">c</name></expr></argument>, <argument pos:start="39:42" pos:end="39:46"><expr pos:start="39:42" pos:end="39:46"><name pos:start="39:42" pos:end="39:46">state</name></expr></argument>, <argument pos:start="39:49" pos:end="39:49"><expr pos:start="39:49" pos:end="39:49"><literal type="number" pos:start="39:49" pos:end="39:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:51"><expr pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:9">f</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:25">chroma_v_shift</name></name><operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="41:50"><name pos:start="41:28" pos:end="41:37">get_symbol</name><argument_list pos:start="41:38" pos:end="41:50">(<argument pos:start="41:39" pos:end="41:39"><expr pos:start="41:39" pos:end="41:39"><name pos:start="41:39" pos:end="41:39">c</name></expr></argument>, <argument pos:start="41:42" pos:end="41:46"><expr pos:start="41:42" pos:end="41:46"><name pos:start="41:42" pos:end="41:46">state</name></expr></argument>, <argument pos:start="41:49" pos:end="41:49"><expr pos:start="41:49" pos:end="41:49"><literal type="number" pos:start="41:49" pos:end="41:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:43"><expr pos:start="43:9" pos:end="43:42"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:9">f</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:23">transparency</name></name><operator pos:start="43:24" pos:end="43:24">=</operator> <call pos:start="43:26" pos:end="43:42"><name pos:start="43:26" pos:end="43:32">get_rac</name><argument_list pos:start="43:33" pos:end="43:42">(<argument pos:start="43:34" pos:end="43:34"><expr pos:start="43:34" pos:end="43:34"><name pos:start="43:34" pos:end="43:34">c</name></expr></argument>, <argument pos:start="43:37" pos:end="43:41"><expr pos:start="43:37" pos:end="43:41"><name pos:start="43:37" pos:end="43:41">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:44"><expr pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:9">f</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">plane_count</name></name><operator pos:start="45:23" pos:end="45:23">=</operator> <literal type="number" pos:start="45:25" pos:end="45:27">2</literal> <operator pos:start="45:27" pos:end="45:27">+</operator> <name pos:start="45:29" pos:end="45:43"><name pos:start="45:29" pos:end="45:29">f</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:43">transparency</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="183:5"><if pos:start="51:5" pos:end="163:5">if<condition pos:start="51:7" pos:end="51:24">(<expr pos:start="51:8" pos:end="51:23"><name pos:start="51:8" pos:end="51:20"><name pos:start="51:8" pos:end="51:8">f</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:20">colorspace</name></name><operator pos:start="51:21" pos:end="51:22">==</operator><literal type="number" pos:start="51:23" pos:end="51:23">0</literal></expr>)</condition><block pos:start="51:25" pos:end="163:5">{<block_content pos:start="53:9" pos:end="161:9">

        <if_stmt pos:start="53:9" pos:end="161:9"><if pos:start="53:9" pos:end="63:9">if<condition pos:start="53:11" pos:end="53:49">(<expr pos:start="53:12" pos:end="53:48"><operator pos:start="53:12" pos:end="53:12">!</operator><name pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:13">f</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:27">transparency</name></name> <operator pos:start="53:29" pos:end="53:30">&amp;&amp;</operator> <operator pos:start="53:32" pos:end="53:32">!</operator><name pos:start="53:33" pos:end="53:48"><name pos:start="53:33" pos:end="53:33">f</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:48">chroma_planes</name></name></expr>)</condition><block pos:start="53:50" pos:end="63:9">{<block_content pos:start="55:13" pos:end="61:50">

            <if_stmt pos:start="55:13" pos:end="61:50"><if pos:start="55:13" pos:end="57:49">if <condition pos:start="55:16" pos:end="55:49">(<expr pos:start="55:17" pos:end="55:48"><name pos:start="55:17" pos:end="55:45"><name pos:start="55:17" pos:end="55:17">f</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:24">avctx</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:45">bits_per_raw_sample</name></name><operator pos:start="55:46" pos:end="55:47">&lt;=</operator><literal type="number" pos:start="55:48" pos:end="55:48">8</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:49"><block_content pos:start="57:17" pos:end="57:49">

                <expr_stmt pos:start="57:17" pos:end="57:49"><expr pos:start="57:17" pos:end="57:48"><name pos:start="57:17" pos:end="57:33"><name pos:start="57:17" pos:end="57:17">f</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:24">avctx</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:33">pix_fmt</name></name><operator pos:start="57:34" pos:end="57:34">=</operator> <name pos:start="57:36" pos:end="57:48">PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="59:13" pos:end="61:50">else<block type="pseudo" pos:start="61:17" pos:end="61:50"><block_content pos:start="61:17" pos:end="61:50">

                <expr_stmt pos:start="61:17" pos:end="61:50"><expr pos:start="61:17" pos:end="61:49"><name pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:17">f</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:24">avctx</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:33">pix_fmt</name></name><operator pos:start="61:34" pos:end="61:34">=</operator> <name pos:start="61:36" pos:end="61:49">PIX_FMT_GRAY16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="63:10" pos:end="87:9">else if<condition pos:start="63:17" pos:end="63:70">(<expr pos:start="63:18" pos:end="63:69"><name pos:start="63:18" pos:end="63:46"><name pos:start="63:18" pos:end="63:18">f</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:25">avctx</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:46">bits_per_raw_sample</name></name><operator pos:start="63:47" pos:end="63:48">&lt;=</operator><literal type="number" pos:start="63:49" pos:end="63:49">8</literal> <operator pos:start="63:51" pos:end="63:52">&amp;&amp;</operator> <operator pos:start="63:54" pos:end="63:54">!</operator><name pos:start="63:55" pos:end="63:69"><name pos:start="63:55" pos:end="63:55">f</name><operator pos:start="63:56" pos:end="63:57">-&gt;</operator><name pos:start="63:58" pos:end="63:69">transparency</name></name></expr>)</condition><block pos:start="63:71" pos:end="87:9">{<block_content pos:start="65:13" pos:end="85:13">

            <switch pos:start="65:13" pos:end="85:13">switch<condition pos:start="65:19" pos:end="65:60">(<expr pos:start="65:20" pos:end="65:59"><literal type="number" pos:start="65:20" pos:end="65:21">16</literal><operator pos:start="65:22" pos:end="65:22">*</operator><name pos:start="65:23" pos:end="65:39"><name pos:start="65:23" pos:end="65:23">f</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:39">chroma_h_shift</name></name> <operator pos:start="65:41" pos:end="65:41">+</operator> <name pos:start="65:43" pos:end="65:59"><name pos:start="65:43" pos:end="65:43">f</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:59">chroma_v_shift</name></name></expr>)</condition><block pos:start="65:61" pos:end="85:13">{<block_content pos:start="67:13" pos:end="83:26">

            <case pos:start="67:13" pos:end="67:22">case <expr pos:start="67:18" pos:end="67:21"><literal type="number" pos:start="67:18" pos:end="67:21">0x00</literal></expr>:</case> <expr_stmt pos:start="67:24" pos:end="67:58"><expr pos:start="67:24" pos:end="67:57"><name pos:start="67:24" pos:end="67:40"><name pos:start="67:24" pos:end="67:24">f</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:31">avctx</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:40">pix_fmt</name></name><operator pos:start="67:41" pos:end="67:41">=</operator> <name pos:start="67:43" pos:end="67:57">PIX_FMT_YUV444P</name></expr>;</expr_stmt> <break pos:start="67:60" pos:end="67:65">break;</break>

            <case pos:start="69:13" pos:end="69:22">case <expr pos:start="69:18" pos:end="69:21"><literal type="number" pos:start="69:18" pos:end="69:21">0x01</literal></expr>:</case> <expr_stmt pos:start="69:24" pos:end="69:58"><expr pos:start="69:24" pos:end="69:57"><name pos:start="69:24" pos:end="69:40"><name pos:start="69:24" pos:end="69:24">f</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:31">avctx</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:40">pix_fmt</name></name><operator pos:start="69:41" pos:end="69:41">=</operator> <name pos:start="69:43" pos:end="69:57">PIX_FMT_YUV440P</name></expr>;</expr_stmt> <break pos:start="69:60" pos:end="69:65">break;</break>

            <case pos:start="71:13" pos:end="71:22">case <expr pos:start="71:18" pos:end="71:21"><literal type="number" pos:start="71:18" pos:end="71:21">0x10</literal></expr>:</case> <expr_stmt pos:start="71:24" pos:end="71:58"><expr pos:start="71:24" pos:end="71:57"><name pos:start="71:24" pos:end="71:40"><name pos:start="71:24" pos:end="71:24">f</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:31">avctx</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:40">pix_fmt</name></name><operator pos:start="71:41" pos:end="71:41">=</operator> <name pos:start="71:43" pos:end="71:57">PIX_FMT_YUV422P</name></expr>;</expr_stmt> <break pos:start="71:60" pos:end="71:65">break;</break>

            <case pos:start="73:13" pos:end="73:22">case <expr pos:start="73:18" pos:end="73:21"><literal type="number" pos:start="73:18" pos:end="73:21">0x11</literal></expr>:</case> <expr_stmt pos:start="73:24" pos:end="73:58"><expr pos:start="73:24" pos:end="73:57"><name pos:start="73:24" pos:end="73:40"><name pos:start="73:24" pos:end="73:24">f</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:31">avctx</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:40">pix_fmt</name></name><operator pos:start="73:41" pos:end="73:41">=</operator> <name pos:start="73:43" pos:end="73:57">PIX_FMT_YUV420P</name></expr>;</expr_stmt> <break pos:start="73:60" pos:end="73:65">break;</break>

            <case pos:start="75:13" pos:end="75:22">case <expr pos:start="75:18" pos:end="75:21"><literal type="number" pos:start="75:18" pos:end="75:21">0x20</literal></expr>:</case> <expr_stmt pos:start="75:24" pos:end="75:58"><expr pos:start="75:24" pos:end="75:57"><name pos:start="75:24" pos:end="75:40"><name pos:start="75:24" pos:end="75:24">f</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:31">avctx</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:40">pix_fmt</name></name><operator pos:start="75:41" pos:end="75:41">=</operator> <name pos:start="75:43" pos:end="75:57">PIX_FMT_YUV411P</name></expr>;</expr_stmt> <break pos:start="75:60" pos:end="75:65">break;</break>

            <case pos:start="77:13" pos:end="77:22">case <expr pos:start="77:18" pos:end="77:21"><literal type="number" pos:start="77:18" pos:end="77:21">0x22</literal></expr>:</case> <expr_stmt pos:start="77:24" pos:end="77:58"><expr pos:start="77:24" pos:end="77:57"><name pos:start="77:24" pos:end="77:40"><name pos:start="77:24" pos:end="77:24">f</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:31">avctx</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:40">pix_fmt</name></name><operator pos:start="77:41" pos:end="77:41">=</operator> <name pos:start="77:43" pos:end="77:57">PIX_FMT_YUV410P</name></expr>;</expr_stmt> <break pos:start="77:60" pos:end="77:65">break;</break>

            <default pos:start="79:13" pos:end="79:20">default:</default>

                <expr_stmt pos:start="81:17" pos:end="81:73"><expr pos:start="81:17" pos:end="81:72"><call pos:start="81:17" pos:end="81:72"><name pos:start="81:17" pos:end="81:22">av_log</name><argument_list pos:start="81:23" pos:end="81:72">(<argument pos:start="81:24" pos:end="81:31"><expr pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:24">f</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:31">avctx</name></name></expr></argument>, <argument pos:start="81:34" pos:end="81:45"><expr pos:start="81:34" pos:end="81:45"><name pos:start="81:34" pos:end="81:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:48" pos:end="81:71"><expr pos:start="81:48" pos:end="81:71"><literal type="string" pos:start="81:48" pos:end="81:71">"format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="83:17" pos:end="83:26">return <expr pos:start="83:24" pos:end="83:25"><operator pos:start="83:24" pos:end="83:24">-</operator><literal type="number" pos:start="83:25" pos:end="83:25">1</literal></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if><if type="elseif" pos:start="87:10" pos:end="103:9">else if<condition pos:start="87:17" pos:end="87:69">(<expr pos:start="87:18" pos:end="87:68"><name pos:start="87:18" pos:end="87:46"><name pos:start="87:18" pos:end="87:18">f</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:25">avctx</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:46">bits_per_raw_sample</name></name><operator pos:start="87:47" pos:end="87:48">&lt;=</operator><literal type="number" pos:start="87:49" pos:end="87:49">8</literal> <operator pos:start="87:51" pos:end="87:52">&amp;&amp;</operator> <name pos:start="87:54" pos:end="87:68"><name pos:start="87:54" pos:end="87:54">f</name><operator pos:start="87:55" pos:end="87:56">-&gt;</operator><name pos:start="87:57" pos:end="87:68">transparency</name></name></expr>)</condition><block pos:start="87:70" pos:end="103:9">{<block_content pos:start="89:13" pos:end="101:13">

            <switch pos:start="89:13" pos:end="101:13">switch<condition pos:start="89:19" pos:end="89:60">(<expr pos:start="89:20" pos:end="89:59"><literal type="number" pos:start="89:20" pos:end="89:21">16</literal><operator pos:start="89:22" pos:end="89:22">*</operator><name pos:start="89:23" pos:end="89:39"><name pos:start="89:23" pos:end="89:23">f</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:39">chroma_h_shift</name></name> <operator pos:start="89:41" pos:end="89:41">+</operator> <name pos:start="89:43" pos:end="89:59"><name pos:start="89:43" pos:end="89:43">f</name><operator pos:start="89:44" pos:end="89:45">-&gt;</operator><name pos:start="89:46" pos:end="89:59">chroma_v_shift</name></name></expr>)</condition><block pos:start="89:61" pos:end="101:13">{<block_content pos:start="91:13" pos:end="99:26">

            <case pos:start="91:13" pos:end="91:22">case <expr pos:start="91:18" pos:end="91:21"><literal type="number" pos:start="91:18" pos:end="91:21">0x00</literal></expr>:</case> <expr_stmt pos:start="91:24" pos:end="91:59"><expr pos:start="91:24" pos:end="91:58"><name pos:start="91:24" pos:end="91:40"><name pos:start="91:24" pos:end="91:24">f</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:31">avctx</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:40">pix_fmt</name></name><operator pos:start="91:41" pos:end="91:41">=</operator> <name pos:start="91:43" pos:end="91:58">PIX_FMT_YUVA444P</name></expr>;</expr_stmt> <break pos:start="91:61" pos:end="91:66">break;</break>

            <case pos:start="93:13" pos:end="93:22">case <expr pos:start="93:18" pos:end="93:21"><literal type="number" pos:start="93:18" pos:end="93:21">0x11</literal></expr>:</case> <expr_stmt pos:start="93:24" pos:end="93:59"><expr pos:start="93:24" pos:end="93:58"><name pos:start="93:24" pos:end="93:40"><name pos:start="93:24" pos:end="93:24">f</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:31">avctx</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:40">pix_fmt</name></name><operator pos:start="93:41" pos:end="93:41">=</operator> <name pos:start="93:43" pos:end="93:58">PIX_FMT_YUVA420P</name></expr>;</expr_stmt> <break pos:start="93:61" pos:end="93:66">break;</break>

            <default pos:start="95:13" pos:end="95:20">default:</default>

                <expr_stmt pos:start="97:17" pos:end="97:73"><expr pos:start="97:17" pos:end="97:72"><call pos:start="97:17" pos:end="97:72"><name pos:start="97:17" pos:end="97:22">av_log</name><argument_list pos:start="97:23" pos:end="97:72">(<argument pos:start="97:24" pos:end="97:31"><expr pos:start="97:24" pos:end="97:31"><name pos:start="97:24" pos:end="97:31"><name pos:start="97:24" pos:end="97:24">f</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:31">avctx</name></name></expr></argument>, <argument pos:start="97:34" pos:end="97:45"><expr pos:start="97:34" pos:end="97:45"><name pos:start="97:34" pos:end="97:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:48" pos:end="97:71"><expr pos:start="97:48" pos:end="97:71"><literal type="string" pos:start="97:48" pos:end="97:71">"format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="99:17" pos:end="99:26">return <expr pos:start="99:24" pos:end="99:25"><operator pos:start="99:24" pos:end="99:24">-</operator><literal type="number" pos:start="99:25" pos:end="99:25">1</literal></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if><if type="elseif" pos:start="103:10" pos:end="123:9">else if<condition pos:start="103:17" pos:end="103:50">(<expr pos:start="103:18" pos:end="103:49"><name pos:start="103:18" pos:end="103:46"><name pos:start="103:18" pos:end="103:18">f</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:25">avctx</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:46">bits_per_raw_sample</name></name><operator pos:start="103:47" pos:end="103:48">==</operator><literal type="number" pos:start="103:49" pos:end="103:49">9</literal></expr>)</condition> <block pos:start="103:52" pos:end="123:9">{<block_content pos:start="105:13" pos:end="121:13">

            <expr_stmt pos:start="105:13" pos:end="105:31"><expr pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:28"><name pos:start="105:13" pos:end="105:13">f</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:28">packed_at_lsb</name></name><operator pos:start="105:29" pos:end="105:29">=</operator><literal type="number" pos:start="105:30" pos:end="105:30">1</literal></expr>;</expr_stmt>

            <switch pos:start="107:13" pos:end="121:13">switch<condition pos:start="107:19" pos:end="107:60">(<expr pos:start="107:20" pos:end="107:59"><literal type="number" pos:start="107:20" pos:end="107:21">16</literal><operator pos:start="107:22" pos:end="107:22">*</operator><name pos:start="107:23" pos:end="107:39"><name pos:start="107:23" pos:end="107:23">f</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:39">chroma_h_shift</name></name> <operator pos:start="107:41" pos:end="107:41">+</operator> <name pos:start="107:43" pos:end="107:59"><name pos:start="107:43" pos:end="107:43">f</name><operator pos:start="107:44" pos:end="107:45">-&gt;</operator><name pos:start="107:46" pos:end="107:59">chroma_v_shift</name></name></expr>)</condition><block pos:start="107:61" pos:end="121:13">{<block_content pos:start="109:13" pos:end="119:26">

            <case pos:start="109:13" pos:end="109:22">case <expr pos:start="109:18" pos:end="109:21"><literal type="number" pos:start="109:18" pos:end="109:21">0x00</literal></expr>:</case> <expr_stmt pos:start="109:24" pos:end="109:59"><expr pos:start="109:24" pos:end="109:58"><name pos:start="109:24" pos:end="109:40"><name pos:start="109:24" pos:end="109:24">f</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:31">avctx</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:40">pix_fmt</name></name><operator pos:start="109:41" pos:end="109:41">=</operator> <name pos:start="109:43" pos:end="109:58">PIX_FMT_YUV444P9</name></expr>;</expr_stmt> <break pos:start="109:61" pos:end="109:66">break;</break>

            <case pos:start="111:13" pos:end="111:22">case <expr pos:start="111:18" pos:end="111:21"><literal type="number" pos:start="111:18" pos:end="111:21">0x10</literal></expr>:</case> <expr_stmt pos:start="111:24" pos:end="111:59"><expr pos:start="111:24" pos:end="111:58"><name pos:start="111:24" pos:end="111:40"><name pos:start="111:24" pos:end="111:24">f</name><operator pos:start="111:25" pos:end="111:26">-&gt;</operator><name pos:start="111:27" pos:end="111:31">avctx</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:40">pix_fmt</name></name><operator pos:start="111:41" pos:end="111:41">=</operator> <name pos:start="111:43" pos:end="111:58">PIX_FMT_YUV422P9</name></expr>;</expr_stmt> <break pos:start="111:61" pos:end="111:66">break;</break>

            <case pos:start="113:13" pos:end="113:22">case <expr pos:start="113:18" pos:end="113:21"><literal type="number" pos:start="113:18" pos:end="113:21">0x11</literal></expr>:</case> <expr_stmt pos:start="113:24" pos:end="113:59"><expr pos:start="113:24" pos:end="113:58"><name pos:start="113:24" pos:end="113:40"><name pos:start="113:24" pos:end="113:24">f</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:31">avctx</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:40">pix_fmt</name></name><operator pos:start="113:41" pos:end="113:41">=</operator> <name pos:start="113:43" pos:end="113:58">PIX_FMT_YUV420P9</name></expr>;</expr_stmt> <break pos:start="113:61" pos:end="113:66">break;</break>

            <default pos:start="115:13" pos:end="115:20">default:</default>

                <expr_stmt pos:start="117:17" pos:end="117:73"><expr pos:start="117:17" pos:end="117:72"><call pos:start="117:17" pos:end="117:72"><name pos:start="117:17" pos:end="117:22">av_log</name><argument_list pos:start="117:23" pos:end="117:72">(<argument pos:start="117:24" pos:end="117:31"><expr pos:start="117:24" pos:end="117:31"><name pos:start="117:24" pos:end="117:31"><name pos:start="117:24" pos:end="117:24">f</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:31">avctx</name></name></expr></argument>, <argument pos:start="117:34" pos:end="117:45"><expr pos:start="117:34" pos:end="117:45"><name pos:start="117:34" pos:end="117:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="117:48" pos:end="117:71"><expr pos:start="117:48" pos:end="117:71"><literal type="string" pos:start="117:48" pos:end="117:71">"format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="119:17" pos:end="119:26">return <expr pos:start="119:24" pos:end="119:25"><operator pos:start="119:24" pos:end="119:24">-</operator><literal type="number" pos:start="119:25" pos:end="119:25">1</literal></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if><if type="elseif" pos:start="123:10" pos:end="143:9">else if<condition pos:start="123:17" pos:end="123:51">(<expr pos:start="123:18" pos:end="123:50"><name pos:start="123:18" pos:end="123:46"><name pos:start="123:18" pos:end="123:18">f</name><operator pos:start="123:19" pos:end="123:20">-&gt;</operator><name pos:start="123:21" pos:end="123:25">avctx</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:46">bits_per_raw_sample</name></name><operator pos:start="123:47" pos:end="123:48">==</operator><literal type="number" pos:start="123:49" pos:end="123:50">10</literal></expr>)</condition> <block pos:start="123:53" pos:end="143:9">{<block_content pos:start="125:13" pos:end="141:13">

            <expr_stmt pos:start="125:13" pos:end="125:31"><expr pos:start="125:13" pos:end="125:30"><name pos:start="125:13" pos:end="125:28"><name pos:start="125:13" pos:end="125:13">f</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:28">packed_at_lsb</name></name><operator pos:start="125:29" pos:end="125:29">=</operator><literal type="number" pos:start="125:30" pos:end="125:30">1</literal></expr>;</expr_stmt>

            <switch pos:start="127:13" pos:end="141:13">switch<condition pos:start="127:19" pos:end="127:60">(<expr pos:start="127:20" pos:end="127:59"><literal type="number" pos:start="127:20" pos:end="127:21">16</literal><operator pos:start="127:22" pos:end="127:22">*</operator><name pos:start="127:23" pos:end="127:39"><name pos:start="127:23" pos:end="127:23">f</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:39">chroma_h_shift</name></name> <operator pos:start="127:41" pos:end="127:41">+</operator> <name pos:start="127:43" pos:end="127:59"><name pos:start="127:43" pos:end="127:43">f</name><operator pos:start="127:44" pos:end="127:45">-&gt;</operator><name pos:start="127:46" pos:end="127:59">chroma_v_shift</name></name></expr>)</condition><block pos:start="127:61" pos:end="141:13">{<block_content pos:start="129:13" pos:end="139:26">

            <case pos:start="129:13" pos:end="129:22">case <expr pos:start="129:18" pos:end="129:21"><literal type="number" pos:start="129:18" pos:end="129:21">0x00</literal></expr>:</case> <expr_stmt pos:start="129:24" pos:end="129:60"><expr pos:start="129:24" pos:end="129:59"><name pos:start="129:24" pos:end="129:40"><name pos:start="129:24" pos:end="129:24">f</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:31">avctx</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:40">pix_fmt</name></name><operator pos:start="129:41" pos:end="129:41">=</operator> <name pos:start="129:43" pos:end="129:59">PIX_FMT_YUV444P10</name></expr>;</expr_stmt> <break pos:start="129:62" pos:end="129:67">break;</break>

            <case pos:start="131:13" pos:end="131:22">case <expr pos:start="131:18" pos:end="131:21"><literal type="number" pos:start="131:18" pos:end="131:21">0x10</literal></expr>:</case> <expr_stmt pos:start="131:24" pos:end="131:60"><expr pos:start="131:24" pos:end="131:59"><name pos:start="131:24" pos:end="131:40"><name pos:start="131:24" pos:end="131:24">f</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:31">avctx</name><operator pos:start="131:32" pos:end="131:33">-&gt;</operator><name pos:start="131:34" pos:end="131:40">pix_fmt</name></name><operator pos:start="131:41" pos:end="131:41">=</operator> <name pos:start="131:43" pos:end="131:59">PIX_FMT_YUV422P10</name></expr>;</expr_stmt> <break pos:start="131:62" pos:end="131:67">break;</break>

            <case pos:start="133:13" pos:end="133:22">case <expr pos:start="133:18" pos:end="133:21"><literal type="number" pos:start="133:18" pos:end="133:21">0x11</literal></expr>:</case> <expr_stmt pos:start="133:24" pos:end="133:60"><expr pos:start="133:24" pos:end="133:59"><name pos:start="133:24" pos:end="133:40"><name pos:start="133:24" pos:end="133:24">f</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:31">avctx</name><operator pos:start="133:32" pos:end="133:33">-&gt;</operator><name pos:start="133:34" pos:end="133:40">pix_fmt</name></name><operator pos:start="133:41" pos:end="133:41">=</operator> <name pos:start="133:43" pos:end="133:59">PIX_FMT_YUV420P10</name></expr>;</expr_stmt> <break pos:start="133:62" pos:end="133:67">break;</break>

            <default pos:start="135:13" pos:end="135:20">default:</default>

                <expr_stmt pos:start="137:17" pos:end="137:73"><expr pos:start="137:17" pos:end="137:72"><call pos:start="137:17" pos:end="137:72"><name pos:start="137:17" pos:end="137:22">av_log</name><argument_list pos:start="137:23" pos:end="137:72">(<argument pos:start="137:24" pos:end="137:31"><expr pos:start="137:24" pos:end="137:31"><name pos:start="137:24" pos:end="137:31"><name pos:start="137:24" pos:end="137:24">f</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:31">avctx</name></name></expr></argument>, <argument pos:start="137:34" pos:end="137:45"><expr pos:start="137:34" pos:end="137:45"><name pos:start="137:34" pos:end="137:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:48" pos:end="137:71"><expr pos:start="137:48" pos:end="137:71"><literal type="string" pos:start="137:48" pos:end="137:71">"format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="139:17" pos:end="139:26">return <expr pos:start="139:24" pos:end="139:25"><operator pos:start="139:24" pos:end="139:24">-</operator><literal type="number" pos:start="139:25" pos:end="139:25">1</literal></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if><else pos:start="143:10" pos:end="161:9">else <block pos:start="143:15" pos:end="161:9">{<block_content pos:start="145:13" pos:end="159:13">

            <switch pos:start="145:13" pos:end="159:13">switch<condition pos:start="145:19" pos:end="145:60">(<expr pos:start="145:20" pos:end="145:59"><literal type="number" pos:start="145:20" pos:end="145:21">16</literal><operator pos:start="145:22" pos:end="145:22">*</operator><name pos:start="145:23" pos:end="145:39"><name pos:start="145:23" pos:end="145:23">f</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:39">chroma_h_shift</name></name> <operator pos:start="145:41" pos:end="145:41">+</operator> <name pos:start="145:43" pos:end="145:59"><name pos:start="145:43" pos:end="145:43">f</name><operator pos:start="145:44" pos:end="145:45">-&gt;</operator><name pos:start="145:46" pos:end="145:59">chroma_v_shift</name></name></expr>)</condition><block pos:start="145:61" pos:end="159:13">{<block_content pos:start="147:13" pos:end="157:26">

            <case pos:start="147:13" pos:end="147:22">case <expr pos:start="147:18" pos:end="147:21"><literal type="number" pos:start="147:18" pos:end="147:21">0x00</literal></expr>:</case> <expr_stmt pos:start="147:24" pos:end="147:60"><expr pos:start="147:24" pos:end="147:59"><name pos:start="147:24" pos:end="147:40"><name pos:start="147:24" pos:end="147:24">f</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:31">avctx</name><operator pos:start="147:32" pos:end="147:33">-&gt;</operator><name pos:start="147:34" pos:end="147:40">pix_fmt</name></name><operator pos:start="147:41" pos:end="147:41">=</operator> <name pos:start="147:43" pos:end="147:59">PIX_FMT_YUV444P16</name></expr>;</expr_stmt> <break pos:start="147:62" pos:end="147:67">break;</break>

            <case pos:start="149:13" pos:end="149:22">case <expr pos:start="149:18" pos:end="149:21"><literal type="number" pos:start="149:18" pos:end="149:21">0x10</literal></expr>:</case> <expr_stmt pos:start="149:24" pos:end="149:60"><expr pos:start="149:24" pos:end="149:59"><name pos:start="149:24" pos:end="149:40"><name pos:start="149:24" pos:end="149:24">f</name><operator pos:start="149:25" pos:end="149:26">-&gt;</operator><name pos:start="149:27" pos:end="149:31">avctx</name><operator pos:start="149:32" pos:end="149:33">-&gt;</operator><name pos:start="149:34" pos:end="149:40">pix_fmt</name></name><operator pos:start="149:41" pos:end="149:41">=</operator> <name pos:start="149:43" pos:end="149:59">PIX_FMT_YUV422P16</name></expr>;</expr_stmt> <break pos:start="149:62" pos:end="149:67">break;</break>

            <case pos:start="151:13" pos:end="151:22">case <expr pos:start="151:18" pos:end="151:21"><literal type="number" pos:start="151:18" pos:end="151:21">0x11</literal></expr>:</case> <expr_stmt pos:start="151:24" pos:end="151:60"><expr pos:start="151:24" pos:end="151:59"><name pos:start="151:24" pos:end="151:40"><name pos:start="151:24" pos:end="151:24">f</name><operator pos:start="151:25" pos:end="151:26">-&gt;</operator><name pos:start="151:27" pos:end="151:31">avctx</name><operator pos:start="151:32" pos:end="151:33">-&gt;</operator><name pos:start="151:34" pos:end="151:40">pix_fmt</name></name><operator pos:start="151:41" pos:end="151:41">=</operator> <name pos:start="151:43" pos:end="151:59">PIX_FMT_YUV420P16</name></expr>;</expr_stmt> <break pos:start="151:62" pos:end="151:67">break;</break>

            <default pos:start="153:13" pos:end="153:20">default:</default>

                <expr_stmt pos:start="155:17" pos:end="155:73"><expr pos:start="155:17" pos:end="155:72"><call pos:start="155:17" pos:end="155:72"><name pos:start="155:17" pos:end="155:22">av_log</name><argument_list pos:start="155:23" pos:end="155:72">(<argument pos:start="155:24" pos:end="155:31"><expr pos:start="155:24" pos:end="155:31"><name pos:start="155:24" pos:end="155:31"><name pos:start="155:24" pos:end="155:24">f</name><operator pos:start="155:25" pos:end="155:26">-&gt;</operator><name pos:start="155:27" pos:end="155:31">avctx</name></name></expr></argument>, <argument pos:start="155:34" pos:end="155:45"><expr pos:start="155:34" pos:end="155:45"><name pos:start="155:34" pos:end="155:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="155:48" pos:end="155:71"><expr pos:start="155:48" pos:end="155:71"><literal type="string" pos:start="155:48" pos:end="155:71">"format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="157:17" pos:end="157:26">return <expr pos:start="157:24" pos:end="157:25"><operator pos:start="157:24" pos:end="157:24">-</operator><literal type="number" pos:start="157:25" pos:end="157:25">1</literal></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="163:6" pos:end="177:5">else if<condition pos:start="163:13" pos:end="163:30">(<expr pos:start="163:14" pos:end="163:29"><name pos:start="163:14" pos:end="163:26"><name pos:start="163:14" pos:end="163:14">f</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:26">colorspace</name></name><operator pos:start="163:27" pos:end="163:28">==</operator><literal type="number" pos:start="163:29" pos:end="163:29">1</literal></expr>)</condition><block pos:start="163:31" pos:end="177:5">{<block_content pos:start="165:9" pos:end="175:62">

        <if_stmt pos:start="165:9" pos:end="171:9"><if pos:start="165:9" pos:end="171:9">if<condition pos:start="165:11" pos:end="165:50">(<expr pos:start="165:12" pos:end="165:49"><name pos:start="165:12" pos:end="165:28"><name pos:start="165:12" pos:end="165:12">f</name><operator pos:start="165:13" pos:end="165:14">-&gt;</operator><name pos:start="165:15" pos:end="165:28">chroma_h_shift</name></name> <operator pos:start="165:30" pos:end="165:31">||</operator> <name pos:start="165:33" pos:end="165:49"><name pos:start="165:33" pos:end="165:33">f</name><operator pos:start="165:34" pos:end="165:35">-&gt;</operator><name pos:start="165:36" pos:end="165:49">chroma_v_shift</name></name></expr>)</condition><block pos:start="165:51" pos:end="171:9">{<block_content pos:start="167:13" pos:end="169:22">

            <expr_stmt pos:start="167:13" pos:end="167:100"><expr pos:start="167:13" pos:end="167:99"><call pos:start="167:13" pos:end="167:99"><name pos:start="167:13" pos:end="167:18">av_log</name><argument_list pos:start="167:19" pos:end="167:99">(<argument pos:start="167:20" pos:end="167:27"><expr pos:start="167:20" pos:end="167:27"><name pos:start="167:20" pos:end="167:27"><name pos:start="167:20" pos:end="167:20">f</name><operator pos:start="167:21" pos:end="167:22">-&gt;</operator><name pos:start="167:23" pos:end="167:27">avctx</name></name></expr></argument>, <argument pos:start="167:30" pos:end="167:41"><expr pos:start="167:30" pos:end="167:41"><name pos:start="167:30" pos:end="167:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="167:44" pos:end="167:98"><expr pos:start="167:44" pos:end="167:98"><literal type="string" pos:start="167:44" pos:end="167:98">"chroma subsampling not supported in this colorspace\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="169:13" pos:end="169:22">return <expr pos:start="169:20" pos:end="169:21"><operator pos:start="169:20" pos:end="169:20">-</operator><literal type="number" pos:start="169:21" pos:end="169:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="173:9" pos:end="175:62"><if pos:start="173:9" pos:end="173:61">if<condition pos:start="173:11" pos:end="173:27">(<expr pos:start="173:12" pos:end="173:26"><name pos:start="173:12" pos:end="173:26"><name pos:start="173:12" pos:end="173:12">f</name><operator pos:start="173:13" pos:end="173:14">-&gt;</operator><name pos:start="173:15" pos:end="173:26">transparency</name></name></expr>)</condition><block type="pseudo" pos:start="173:29" pos:end="173:61"><block_content pos:start="173:29" pos:end="173:61"> <expr_stmt pos:start="173:29" pos:end="173:61"><expr pos:start="173:29" pos:end="173:60"><name pos:start="173:29" pos:end="173:45"><name pos:start="173:29" pos:end="173:29">f</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:36">avctx</name><operator pos:start="173:37" pos:end="173:38">-&gt;</operator><name pos:start="173:39" pos:end="173:45">pix_fmt</name></name><operator pos:start="173:46" pos:end="173:46">=</operator> <name pos:start="173:48" pos:end="173:60">PIX_FMT_RGB32</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="175:9" pos:end="175:62">else<block type="pseudo" pos:start="175:29" pos:end="175:62"><block_content pos:start="175:29" pos:end="175:62">                <expr_stmt pos:start="175:29" pos:end="175:62"><expr pos:start="175:29" pos:end="175:61"><name pos:start="175:29" pos:end="175:45"><name pos:start="175:29" pos:end="175:29">f</name><operator pos:start="175:30" pos:end="175:31">-&gt;</operator><name pos:start="175:32" pos:end="175:36">avctx</name><operator pos:start="175:37" pos:end="175:38">-&gt;</operator><name pos:start="175:39" pos:end="175:45">pix_fmt</name></name><operator pos:start="175:46" pos:end="175:46">=</operator> <name pos:start="175:48" pos:end="175:61">PIX_FMT_0RGB32</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if><else pos:start="177:6" pos:end="183:5">else<block pos:start="177:10" pos:end="183:5">{<block_content pos:start="179:9" pos:end="181:18">

        <expr_stmt pos:start="179:9" pos:end="179:69"><expr pos:start="179:9" pos:end="179:68"><call pos:start="179:9" pos:end="179:68"><name pos:start="179:9" pos:end="179:14">av_log</name><argument_list pos:start="179:15" pos:end="179:68">(<argument pos:start="179:16" pos:end="179:23"><expr pos:start="179:16" pos:end="179:23"><name pos:start="179:16" pos:end="179:23"><name pos:start="179:16" pos:end="179:16">f</name><operator pos:start="179:17" pos:end="179:18">-&gt;</operator><name pos:start="179:19" pos:end="179:23">avctx</name></name></expr></argument>, <argument pos:start="179:26" pos:end="179:37"><expr pos:start="179:26" pos:end="179:37"><name pos:start="179:26" pos:end="179:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:40" pos:end="179:67"><expr pos:start="179:40" pos:end="179:67"><literal type="string" pos:start="179:40" pos:end="179:67">"colorspace not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="181:9" pos:end="181:18">return <expr pos:start="181:16" pos:end="181:17"><operator pos:start="181:16" pos:end="181:16">-</operator><literal type="number" pos:start="181:17" pos:end="181:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>



<comment type="line" pos:start="187:1" pos:end="187:79">//printf("%d %d %d\n", f-&gt;chroma_h_shift, f-&gt;chroma_v_shift,f-&gt;avctx-&gt;pix_fmt);</comment>

    <if_stmt pos:start="189:5" pos:end="209:5"><if pos:start="189:5" pos:end="201:5">if<condition pos:start="189:7" pos:end="189:22">(<expr pos:start="189:8" pos:end="189:21"><name pos:start="189:8" pos:end="189:17"><name pos:start="189:8" pos:end="189:8">f</name><operator pos:start="189:9" pos:end="189:10">-&gt;</operator><name pos:start="189:11" pos:end="189:17">version</name></name> <operator pos:start="189:19" pos:end="189:19">&lt;</operator> <literal type="number" pos:start="189:21" pos:end="189:21">2</literal></expr>)</condition><block pos:start="189:23" pos:end="201:5">{<block_content pos:start="191:9" pos:end="199:9">

        <expr_stmt pos:start="191:9" pos:end="191:60"><expr pos:start="191:9" pos:end="191:59"><name pos:start="191:9" pos:end="191:21">context_count</name><operator pos:start="191:22" pos:end="191:22">=</operator> <call pos:start="191:24" pos:end="191:59"><name pos:start="191:24" pos:end="191:40">read_quant_tables</name><argument_list pos:start="191:41" pos:end="191:59">(<argument pos:start="191:42" pos:end="191:42"><expr pos:start="191:42" pos:end="191:42"><name pos:start="191:42" pos:end="191:42">c</name></expr></argument>, <argument pos:start="191:45" pos:end="191:58"><expr pos:start="191:45" pos:end="191:58"><name pos:start="191:45" pos:end="191:58"><name pos:start="191:45" pos:end="191:45">f</name><operator pos:start="191:46" pos:end="191:47">-&gt;</operator><name pos:start="191:48" pos:end="191:58">quant_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="193:9" pos:end="199:9"><if pos:start="193:9" pos:end="199:9">if<condition pos:start="193:11" pos:end="193:29">(<expr pos:start="193:12" pos:end="193:28"><name pos:start="193:12" pos:end="193:24">context_count</name> <operator pos:start="193:26" pos:end="193:26">&lt;</operator> <literal type="number" pos:start="193:28" pos:end="193:28">0</literal></expr>)</condition><block pos:start="193:30" pos:end="199:9">{<block_content pos:start="195:17" pos:end="197:26">

                <expr_stmt pos:start="195:17" pos:end="195:75"><expr pos:start="195:17" pos:end="195:74"><call pos:start="195:17" pos:end="195:74"><name pos:start="195:17" pos:end="195:22">av_log</name><argument_list pos:start="195:23" pos:end="195:74">(<argument pos:start="195:24" pos:end="195:31"><expr pos:start="195:24" pos:end="195:31"><name pos:start="195:24" pos:end="195:31"><name pos:start="195:24" pos:end="195:24">f</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:31">avctx</name></name></expr></argument>, <argument pos:start="195:34" pos:end="195:45"><expr pos:start="195:34" pos:end="195:45"><name pos:start="195:34" pos:end="195:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="195:48" pos:end="195:73"><expr pos:start="195:48" pos:end="195:73"><literal type="string" pos:start="195:48" pos:end="195:73">"read_quant_table error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="197:17" pos:end="197:26">return <expr pos:start="197:24" pos:end="197:25"><operator pos:start="197:24" pos:end="197:24">-</operator><literal type="number" pos:start="197:25" pos:end="197:25">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="201:6" pos:end="209:5">else<block pos:start="201:10" pos:end="209:5">{<block_content pos:start="203:9" pos:end="207:22">

        <expr_stmt pos:start="203:9" pos:end="203:48"><expr pos:start="203:9" pos:end="203:47"><name pos:start="203:9" pos:end="203:22"><name pos:start="203:9" pos:end="203:9">f</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:22">slice_count</name></name><operator pos:start="203:23" pos:end="203:23">=</operator> <call pos:start="203:25" pos:end="203:47"><name pos:start="203:25" pos:end="203:34">get_symbol</name><argument_list pos:start="203:35" pos:end="203:47">(<argument pos:start="203:36" pos:end="203:36"><expr pos:start="203:36" pos:end="203:36"><name pos:start="203:36" pos:end="203:36">c</name></expr></argument>, <argument pos:start="203:39" pos:end="203:43"><expr pos:start="203:39" pos:end="203:43"><name pos:start="203:39" pos:end="203:43">state</name></expr></argument>, <argument pos:start="203:46" pos:end="203:46"><expr pos:start="203:46" pos:end="203:46"><literal type="number" pos:start="203:46" pos:end="203:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="205:9" pos:end="207:22"><if pos:start="205:9" pos:end="207:22">if<condition pos:start="205:11" pos:end="205:49">(<expr pos:start="205:12" pos:end="205:48"><name pos:start="205:12" pos:end="205:25"><name pos:start="205:12" pos:end="205:12">f</name><operator pos:start="205:13" pos:end="205:14">-&gt;</operator><name pos:start="205:15" pos:end="205:25">slice_count</name></name> <operator pos:start="205:27" pos:end="205:27">&gt;</operator> <operator pos:start="205:29" pos:end="205:29">(</operator><name pos:start="205:30" pos:end="205:37">unsigned</name><operator pos:start="205:38" pos:end="205:38">)</operator><name pos:start="205:39" pos:end="205:48">MAX_SLICES</name></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="207:22"><block_content pos:start="207:13" pos:end="207:22">

            <return pos:start="207:13" pos:end="207:22">return <expr pos:start="207:20" pos:end="207:21"><operator pos:start="207:20" pos:end="207:20">-</operator><literal type="number" pos:start="207:21" pos:end="207:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="213:5" pos:end="301:5">for<control pos:start="213:8" pos:end="213:35">(<init pos:start="213:9" pos:end="213:12"><expr pos:start="213:9" pos:end="213:11"><name pos:start="213:9" pos:end="213:9">j</name><operator pos:start="213:10" pos:end="213:10">=</operator><literal type="number" pos:start="213:11" pos:end="213:11">0</literal></expr>;</init> <condition pos:start="213:14" pos:end="213:30"><expr pos:start="213:14" pos:end="213:29"><name pos:start="213:14" pos:end="213:14">j</name><operator pos:start="213:15" pos:end="213:15">&lt;</operator><name pos:start="213:16" pos:end="213:29"><name pos:start="213:16" pos:end="213:16">f</name><operator pos:start="213:17" pos:end="213:18">-&gt;</operator><name pos:start="213:19" pos:end="213:29">slice_count</name></name></expr>;</condition> <incr pos:start="213:32" pos:end="213:34"><expr pos:start="213:32" pos:end="213:34"><name pos:start="213:32" pos:end="213:32">j</name><operator pos:start="213:33" pos:end="213:34">++</operator></expr></incr>)</control><block pos:start="213:36" pos:end="301:5">{<block_content pos:start="215:9" pos:end="299:9">

        <decl_stmt pos:start="215:9" pos:end="215:45"><decl pos:start="215:9" pos:end="215:44"><type pos:start="215:9" pos:end="215:21"><name pos:start="215:9" pos:end="215:19">FFV1Context</name> <modifier pos:start="215:21" pos:end="215:21">*</modifier></type><name pos:start="215:22" pos:end="215:23">fs</name><init pos:start="215:24" pos:end="215:44">= <expr pos:start="215:26" pos:end="215:44"><name pos:start="215:26" pos:end="215:44"><name pos:start="215:26" pos:end="215:26">f</name><operator pos:start="215:27" pos:end="215:28">-&gt;</operator><name pos:start="215:29" pos:end="215:41">slice_context</name><index pos:start="215:42" pos:end="215:44">[<expr pos:start="215:43" pos:end="215:43"><name pos:start="215:43" pos:end="215:43">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:22"><expr pos:start="217:9" pos:end="217:21"><name pos:start="217:9" pos:end="217:14"><name pos:start="217:9" pos:end="217:10">fs</name><operator pos:start="217:11" pos:end="217:12">-&gt;</operator><name pos:start="217:13" pos:end="217:14">ac</name></name><operator pos:start="217:15" pos:end="217:15">=</operator> <name pos:start="217:17" pos:end="217:21"><name pos:start="217:17" pos:end="217:17">f</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:21">ac</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:44"><expr pos:start="219:9" pos:end="219:43"><name pos:start="219:9" pos:end="219:25"><name pos:start="219:9" pos:end="219:10">fs</name><operator pos:start="219:11" pos:end="219:12">-&gt;</operator><name pos:start="219:13" pos:end="219:25">packed_at_lsb</name></name><operator pos:start="219:26" pos:end="219:26">=</operator> <name pos:start="219:28" pos:end="219:43"><name pos:start="219:28" pos:end="219:28">f</name><operator pos:start="219:29" pos:end="219:30">-&gt;</operator><name pos:start="219:31" pos:end="219:43">packed_at_lsb</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="223:9" pos:end="253:9"><if pos:start="223:9" pos:end="253:9">if<condition pos:start="223:11" pos:end="223:27">(<expr pos:start="223:12" pos:end="223:26"><name pos:start="223:12" pos:end="223:21"><name pos:start="223:12" pos:end="223:12">f</name><operator pos:start="223:13" pos:end="223:14">-&gt;</operator><name pos:start="223:15" pos:end="223:21">version</name></name> <operator pos:start="223:23" pos:end="223:24">&gt;=</operator> <literal type="number" pos:start="223:26" pos:end="223:26">2</literal></expr>)</condition><block pos:start="223:28" pos:end="253:9">{<block_content pos:start="225:13" pos:end="251:26">

            <expr_stmt pos:start="225:13" pos:end="225:67"><expr pos:start="225:13" pos:end="225:65"><name pos:start="225:13" pos:end="225:23"><name pos:start="225:13" pos:end="225:14">fs</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:23">slice_x</name></name>     <operator pos:start="225:29" pos:end="225:29">=</operator> <call pos:start="225:31" pos:end="225:53"><name pos:start="225:31" pos:end="225:40">get_symbol</name><argument_list pos:start="225:41" pos:end="225:53">(<argument pos:start="225:42" pos:end="225:42"><expr pos:start="225:42" pos:end="225:42"><name pos:start="225:42" pos:end="225:42">c</name></expr></argument>, <argument pos:start="225:45" pos:end="225:49"><expr pos:start="225:45" pos:end="225:49"><name pos:start="225:45" pos:end="225:49">state</name></expr></argument>, <argument pos:start="225:52" pos:end="225:52"><expr pos:start="225:52" pos:end="225:52"><literal type="number" pos:start="225:52" pos:end="225:52">0</literal></expr></argument>)</argument_list></call>   <operator pos:start="225:57" pos:end="225:57">*</operator><name pos:start="225:58" pos:end="225:65"><name pos:start="225:58" pos:end="225:58">f</name><operator pos:start="225:59" pos:end="225:60">-&gt;</operator><name pos:start="225:61" pos:end="225:65">width</name></name></expr> ;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:67"><expr pos:start="227:13" pos:end="227:66"><name pos:start="227:13" pos:end="227:23"><name pos:start="227:13" pos:end="227:14">fs</name><operator pos:start="227:15" pos:end="227:16">-&gt;</operator><name pos:start="227:17" pos:end="227:23">slice_y</name></name>     <operator pos:start="227:29" pos:end="227:29">=</operator> <call pos:start="227:31" pos:end="227:53"><name pos:start="227:31" pos:end="227:40">get_symbol</name><argument_list pos:start="227:41" pos:end="227:53">(<argument pos:start="227:42" pos:end="227:42"><expr pos:start="227:42" pos:end="227:42"><name pos:start="227:42" pos:end="227:42">c</name></expr></argument>, <argument pos:start="227:45" pos:end="227:49"><expr pos:start="227:45" pos:end="227:49"><name pos:start="227:45" pos:end="227:49">state</name></expr></argument>, <argument pos:start="227:52" pos:end="227:52"><expr pos:start="227:52" pos:end="227:52"><literal type="number" pos:start="227:52" pos:end="227:52">0</literal></expr></argument>)</argument_list></call>   <operator pos:start="227:57" pos:end="227:57">*</operator><name pos:start="227:58" pos:end="227:66"><name pos:start="227:58" pos:end="227:58">f</name><operator pos:start="227:59" pos:end="227:60">-&gt;</operator><name pos:start="227:61" pos:end="227:66">height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:81"><expr pos:start="229:13" pos:end="229:80"><name pos:start="229:13" pos:end="229:27"><name pos:start="229:13" pos:end="229:14">fs</name><operator pos:start="229:15" pos:end="229:16">-&gt;</operator><name pos:start="229:17" pos:end="229:27">slice_width</name></name> <operator pos:start="229:29" pos:end="229:29">=</operator><operator pos:start="229:30" pos:end="229:30">(</operator><call pos:start="229:31" pos:end="229:53"><name pos:start="229:31" pos:end="229:40">get_symbol</name><argument_list pos:start="229:41" pos:end="229:53">(<argument pos:start="229:42" pos:end="229:42"><expr pos:start="229:42" pos:end="229:42"><name pos:start="229:42" pos:end="229:42">c</name></expr></argument>, <argument pos:start="229:45" pos:end="229:49"><expr pos:start="229:45" pos:end="229:49"><name pos:start="229:45" pos:end="229:49">state</name></expr></argument>, <argument pos:start="229:52" pos:end="229:52"><expr pos:start="229:52" pos:end="229:52"><literal type="number" pos:start="229:52" pos:end="229:52">0</literal></expr></argument>)</argument_list></call><operator pos:start="229:54" pos:end="229:54">+</operator><literal type="number" pos:start="229:55" pos:end="229:55">1</literal><operator pos:start="229:56" pos:end="229:56">)</operator><operator pos:start="229:57" pos:end="229:57">*</operator><name pos:start="229:58" pos:end="229:65"><name pos:start="229:58" pos:end="229:58">f</name><operator pos:start="229:59" pos:end="229:60">-&gt;</operator><name pos:start="229:61" pos:end="229:65">width</name></name>  <operator pos:start="229:68" pos:end="229:68">+</operator> <name pos:start="229:70" pos:end="229:80"><name pos:start="229:70" pos:end="229:71">fs</name><operator pos:start="229:72" pos:end="229:73">-&gt;</operator><name pos:start="229:74" pos:end="229:80">slice_x</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:81"><expr pos:start="231:13" pos:end="231:80"><name pos:start="231:13" pos:end="231:28"><name pos:start="231:13" pos:end="231:14">fs</name><operator pos:start="231:15" pos:end="231:16">-&gt;</operator><name pos:start="231:17" pos:end="231:28">slice_height</name></name><operator pos:start="231:29" pos:end="231:29">=</operator><operator pos:start="231:30" pos:end="231:30">(</operator><call pos:start="231:31" pos:end="231:53"><name pos:start="231:31" pos:end="231:40">get_symbol</name><argument_list pos:start="231:41" pos:end="231:53">(<argument pos:start="231:42" pos:end="231:42"><expr pos:start="231:42" pos:end="231:42"><name pos:start="231:42" pos:end="231:42">c</name></expr></argument>, <argument pos:start="231:45" pos:end="231:49"><expr pos:start="231:45" pos:end="231:49"><name pos:start="231:45" pos:end="231:49">state</name></expr></argument>, <argument pos:start="231:52" pos:end="231:52"><expr pos:start="231:52" pos:end="231:52"><literal type="number" pos:start="231:52" pos:end="231:52">0</literal></expr></argument>)</argument_list></call><operator pos:start="231:54" pos:end="231:54">+</operator><literal type="number" pos:start="231:55" pos:end="231:55">1</literal><operator pos:start="231:56" pos:end="231:56">)</operator><operator pos:start="231:57" pos:end="231:57">*</operator><name pos:start="231:58" pos:end="231:66"><name pos:start="231:58" pos:end="231:58">f</name><operator pos:start="231:59" pos:end="231:60">-&gt;</operator><name pos:start="231:61" pos:end="231:66">height</name></name> <operator pos:start="231:68" pos:end="231:68">+</operator> <name pos:start="231:70" pos:end="231:80"><name pos:start="231:70" pos:end="231:71">fs</name><operator pos:start="231:72" pos:end="231:73">-&gt;</operator><name pos:start="231:74" pos:end="231:80">slice_y</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="235:13" pos:end="235:43"><expr pos:start="235:13" pos:end="235:42"><name pos:start="235:13" pos:end="235:23"><name pos:start="235:13" pos:end="235:14">fs</name><operator pos:start="235:15" pos:end="235:16">-&gt;</operator><name pos:start="235:17" pos:end="235:23">slice_x</name></name> <operator pos:start="235:25" pos:end="235:26">/=</operator> <name pos:start="235:28" pos:end="235:42"><name pos:start="235:28" pos:end="235:28">f</name><operator pos:start="235:29" pos:end="235:30">-&gt;</operator><name pos:start="235:31" pos:end="235:42">num_h_slices</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:43"><expr pos:start="237:13" pos:end="237:42"><name pos:start="237:13" pos:end="237:23"><name pos:start="237:13" pos:end="237:14">fs</name><operator pos:start="237:15" pos:end="237:16">-&gt;</operator><name pos:start="237:17" pos:end="237:23">slice_y</name></name> <operator pos:start="237:25" pos:end="237:26">/=</operator> <name pos:start="237:28" pos:end="237:42"><name pos:start="237:28" pos:end="237:28">f</name><operator pos:start="237:29" pos:end="237:30">-&gt;</operator><name pos:start="237:31" pos:end="237:42">num_v_slices</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:78"><expr pos:start="239:13" pos:end="239:77"><name pos:start="239:13" pos:end="239:27"><name pos:start="239:13" pos:end="239:14">fs</name><operator pos:start="239:15" pos:end="239:16">-&gt;</operator><name pos:start="239:17" pos:end="239:27">slice_width</name></name>  <operator pos:start="239:30" pos:end="239:30">=</operator> <name pos:start="239:32" pos:end="239:46"><name pos:start="239:32" pos:end="239:33">fs</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:46">slice_width</name></name> <operator pos:start="239:48" pos:end="239:48">/</operator><name pos:start="239:49" pos:end="239:63"><name pos:start="239:49" pos:end="239:49">f</name><operator pos:start="239:50" pos:end="239:51">-&gt;</operator><name pos:start="239:52" pos:end="239:63">num_h_slices</name></name> <operator pos:start="239:65" pos:end="239:65">-</operator> <name pos:start="239:67" pos:end="239:77"><name pos:start="239:67" pos:end="239:68">fs</name><operator pos:start="239:69" pos:end="239:70">-&gt;</operator><name pos:start="239:71" pos:end="239:77">slice_x</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:78"><expr pos:start="241:13" pos:end="241:77"><name pos:start="241:13" pos:end="241:28"><name pos:start="241:13" pos:end="241:14">fs</name><operator pos:start="241:15" pos:end="241:16">-&gt;</operator><name pos:start="241:17" pos:end="241:28">slice_height</name></name> <operator pos:start="241:30" pos:end="241:30">=</operator> <name pos:start="241:32" pos:end="241:47"><name pos:start="241:32" pos:end="241:33">fs</name><operator pos:start="241:34" pos:end="241:35">-&gt;</operator><name pos:start="241:36" pos:end="241:47">slice_height</name></name><operator pos:start="241:48" pos:end="241:48">/</operator><name pos:start="241:49" pos:end="241:63"><name pos:start="241:49" pos:end="241:49">f</name><operator pos:start="241:50" pos:end="241:51">-&gt;</operator><name pos:start="241:52" pos:end="241:63">num_v_slices</name></name> <operator pos:start="241:65" pos:end="241:65">-</operator> <name pos:start="241:67" pos:end="241:77"><name pos:start="241:67" pos:end="241:68">fs</name><operator pos:start="241:69" pos:end="241:70">-&gt;</operator><name pos:start="241:71" pos:end="241:77">slice_y</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="243:13" pos:end="245:26"><if pos:start="243:13" pos:end="245:26">if<condition pos:start="243:15" pos:end="243:94">(<expr pos:start="243:16" pos:end="243:93"><operator pos:start="243:16" pos:end="243:16">(</operator><name pos:start="243:17" pos:end="243:24">unsigned</name><operator pos:start="243:25" pos:end="243:25">)</operator><name pos:start="243:26" pos:end="243:40"><name pos:start="243:26" pos:end="243:27">fs</name><operator pos:start="243:28" pos:end="243:29">-&gt;</operator><name pos:start="243:30" pos:end="243:40">slice_width</name></name> <operator pos:start="243:42" pos:end="243:42">&gt;</operator> <name pos:start="243:44" pos:end="243:51"><name pos:start="243:44" pos:end="243:44">f</name><operator pos:start="243:45" pos:end="243:46">-&gt;</operator><name pos:start="243:47" pos:end="243:51">width</name></name> <operator pos:start="243:53" pos:end="243:54">||</operator> <operator pos:start="243:56" pos:end="243:56">(</operator><name pos:start="243:57" pos:end="243:64">unsigned</name><operator pos:start="243:65" pos:end="243:65">)</operator><name pos:start="243:66" pos:end="243:81"><name pos:start="243:66" pos:end="243:67">fs</name><operator pos:start="243:68" pos:end="243:69">-&gt;</operator><name pos:start="243:70" pos:end="243:81">slice_height</name></name> <operator pos:start="243:83" pos:end="243:83">&gt;</operator> <name pos:start="243:85" pos:end="243:93"><name pos:start="243:85" pos:end="243:85">f</name><operator pos:start="243:86" pos:end="243:87">-&gt;</operator><name pos:start="243:88" pos:end="243:93">height</name></name></expr>)</condition><block type="pseudo" pos:start="245:17" pos:end="245:26"><block_content pos:start="245:17" pos:end="245:26">

                <return pos:start="245:17" pos:end="245:26">return <expr pos:start="245:24" pos:end="245:25"><operator pos:start="245:24" pos:end="245:24">-</operator><literal type="number" pos:start="245:25" pos:end="245:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="247:13" pos:end="251:26"><if pos:start="247:13" pos:end="251:26">if<condition pos:start="247:15" pos:end="249:82">(    <expr pos:start="247:20" pos:end="249:81"><operator pos:start="247:20" pos:end="247:20">(</operator><name pos:start="247:21" pos:end="247:28">unsigned</name><operator pos:start="247:29" pos:end="247:29">)</operator><name pos:start="247:30" pos:end="247:40"><name pos:start="247:30" pos:end="247:31">fs</name><operator pos:start="247:32" pos:end="247:33">-&gt;</operator><name pos:start="247:34" pos:end="247:40">slice_x</name></name> <operator pos:start="247:42" pos:end="247:42">+</operator> <operator pos:start="247:44" pos:end="247:44">(</operator><name pos:start="247:45" pos:end="247:52">uint64_t</name><operator pos:start="247:53" pos:end="247:53">)</operator><name pos:start="247:54" pos:end="247:68"><name pos:start="247:54" pos:end="247:55">fs</name><operator pos:start="247:56" pos:end="247:57">-&gt;</operator><name pos:start="247:58" pos:end="247:68">slice_width</name></name>  <operator pos:start="247:71" pos:end="247:71">&gt;</operator> <name pos:start="247:73" pos:end="247:80"><name pos:start="247:73" pos:end="247:73">f</name><operator pos:start="247:74" pos:end="247:75">-&gt;</operator><name pos:start="247:76" pos:end="247:80">width</name></name>

                <operator pos:start="249:17" pos:end="249:18">||</operator> <operator pos:start="249:20" pos:end="249:20">(</operator><name pos:start="249:21" pos:end="249:28">unsigned</name><operator pos:start="249:29" pos:end="249:29">)</operator><name pos:start="249:30" pos:end="249:40"><name pos:start="249:30" pos:end="249:31">fs</name><operator pos:start="249:32" pos:end="249:33">-&gt;</operator><name pos:start="249:34" pos:end="249:40">slice_y</name></name> <operator pos:start="249:42" pos:end="249:42">+</operator> <operator pos:start="249:44" pos:end="249:44">(</operator><name pos:start="249:45" pos:end="249:52">uint64_t</name><operator pos:start="249:53" pos:end="249:53">)</operator><name pos:start="249:54" pos:end="249:69"><name pos:start="249:54" pos:end="249:55">fs</name><operator pos:start="249:56" pos:end="249:57">-&gt;</operator><name pos:start="249:58" pos:end="249:69">slice_height</name></name> <operator pos:start="249:71" pos:end="249:71">&gt;</operator> <name pos:start="249:73" pos:end="249:81"><name pos:start="249:73" pos:end="249:73">f</name><operator pos:start="249:74" pos:end="249:75">-&gt;</operator><name pos:start="249:76" pos:end="249:81">height</name></name></expr>)</condition><block type="pseudo" pos:start="251:17" pos:end="251:26"><block_content pos:start="251:17" pos:end="251:26">

                <return pos:start="251:17" pos:end="251:26">return <expr pos:start="251:24" pos:end="251:25"><operator pos:start="251:24" pos:end="251:24">-</operator><literal type="number" pos:start="251:25" pos:end="251:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="257:9" pos:end="299:9">for<control pos:start="257:12" pos:end="257:39">(<init pos:start="257:13" pos:end="257:16"><expr pos:start="257:13" pos:end="257:15"><name pos:start="257:13" pos:end="257:13">i</name><operator pos:start="257:14" pos:end="257:14">=</operator><literal type="number" pos:start="257:15" pos:end="257:15">0</literal></expr>;</init> <condition pos:start="257:18" pos:end="257:34"><expr pos:start="257:18" pos:end="257:33"><name pos:start="257:18" pos:end="257:18">i</name><operator pos:start="257:19" pos:end="257:19">&lt;</operator><name pos:start="257:20" pos:end="257:33"><name pos:start="257:20" pos:end="257:20">f</name><operator pos:start="257:21" pos:end="257:22">-&gt;</operator><name pos:start="257:23" pos:end="257:33">plane_count</name></name></expr>;</condition> <incr pos:start="257:36" pos:end="257:38"><expr pos:start="257:36" pos:end="257:38"><name pos:start="257:36" pos:end="257:36">i</name><operator pos:start="257:37" pos:end="257:38">++</operator></expr></incr>)</control><block pos:start="257:40" pos:end="299:9">{<block_content pos:start="259:13" pos:end="297:44">

            <decl_stmt pos:start="259:13" pos:end="259:50"><decl pos:start="259:13" pos:end="259:49"><type pos:start="259:13" pos:end="259:32"><name pos:start="259:13" pos:end="259:24">PlaneContext</name> <modifier pos:start="259:26" pos:end="259:26">*</modifier> <specifier pos:start="259:28" pos:end="259:32">const</specifier></type> <name pos:start="259:34" pos:end="259:34">p</name><init pos:start="259:35" pos:end="259:49">= <expr pos:start="259:37" pos:end="259:49"><operator pos:start="259:37" pos:end="259:37">&amp;</operator><name pos:start="259:38" pos:end="259:49"><name pos:start="259:38" pos:end="259:39">fs</name><operator pos:start="259:40" pos:end="259:41">-&gt;</operator><name pos:start="259:42" pos:end="259:46">plane</name><index pos:start="259:47" pos:end="259:49">[<expr pos:start="259:48" pos:end="259:48"><name pos:start="259:48" pos:end="259:48">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="263:13" pos:end="285:13"><if pos:start="263:13" pos:end="281:13">if<condition pos:start="263:15" pos:end="263:31">(<expr pos:start="263:16" pos:end="263:30"><name pos:start="263:16" pos:end="263:25"><name pos:start="263:16" pos:end="263:16">f</name><operator pos:start="263:17" pos:end="263:18">-&gt;</operator><name pos:start="263:19" pos:end="263:25">version</name></name> <operator pos:start="263:27" pos:end="263:28">&gt;=</operator> <literal type="number" pos:start="263:30" pos:end="263:30">2</literal></expr>)</condition><block pos:start="263:32" pos:end="281:13">{<block_content pos:start="265:17" pos:end="279:53">

                <decl_stmt pos:start="265:17" pos:end="265:48"><decl pos:start="265:17" pos:end="265:47"><type pos:start="265:17" pos:end="265:19"><name pos:start="265:17" pos:end="265:19">int</name></type> <name pos:start="265:21" pos:end="265:23">idx</name><init pos:start="265:24" pos:end="265:47">=<expr pos:start="265:25" pos:end="265:47"><call pos:start="265:25" pos:end="265:47"><name pos:start="265:25" pos:end="265:34">get_symbol</name><argument_list pos:start="265:35" pos:end="265:47">(<argument pos:start="265:36" pos:end="265:36"><expr pos:start="265:36" pos:end="265:36"><name pos:start="265:36" pos:end="265:36">c</name></expr></argument>, <argument pos:start="265:39" pos:end="265:43"><expr pos:start="265:39" pos:end="265:43"><name pos:start="265:39" pos:end="265:43">state</name></expr></argument>, <argument pos:start="265:46" pos:end="265:46"><expr pos:start="265:46" pos:end="265:46"><literal type="number" pos:start="265:46" pos:end="265:46">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="267:17" pos:end="273:17"><if pos:start="267:17" pos:end="273:17">if<condition pos:start="267:19" pos:end="267:56">(<expr pos:start="267:20" pos:end="267:55"><name pos:start="267:20" pos:end="267:22">idx</name> <operator pos:start="267:24" pos:end="267:24">&gt;</operator> <operator pos:start="267:26" pos:end="267:26">(</operator><name pos:start="267:27" pos:end="267:34">unsigned</name><operator pos:start="267:35" pos:end="267:35">)</operator><name pos:start="267:36" pos:end="267:55"><name pos:start="267:36" pos:end="267:36">f</name><operator pos:start="267:37" pos:end="267:38">-&gt;</operator><name pos:start="267:39" pos:end="267:55">quant_table_count</name></name></expr>)</condition><block pos:start="267:57" pos:end="273:17">{<block_content pos:start="269:21" pos:end="271:30">

                    <expr_stmt pos:start="269:21" pos:end="269:87"><expr pos:start="269:21" pos:end="269:86"><call pos:start="269:21" pos:end="269:86"><name pos:start="269:21" pos:end="269:26">av_log</name><argument_list pos:start="269:27" pos:end="269:86">(<argument pos:start="269:28" pos:end="269:35"><expr pos:start="269:28" pos:end="269:35"><name pos:start="269:28" pos:end="269:35"><name pos:start="269:28" pos:end="269:28">f</name><operator pos:start="269:29" pos:end="269:30">-&gt;</operator><name pos:start="269:31" pos:end="269:35">avctx</name></name></expr></argument>, <argument pos:start="269:38" pos:end="269:49"><expr pos:start="269:38" pos:end="269:49"><name pos:start="269:38" pos:end="269:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="269:52" pos:end="269:85"><expr pos:start="269:52" pos:end="269:85"><literal type="string" pos:start="269:52" pos:end="269:85">"quant_table_index out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="271:21" pos:end="271:30">return <expr pos:start="271:28" pos:end="271:29"><operator pos:start="271:28" pos:end="271:28">-</operator><literal type="number" pos:start="271:29" pos:end="271:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="275:17" pos:end="275:42"><expr pos:start="275:17" pos:end="275:41"><name pos:start="275:17" pos:end="275:36"><name pos:start="275:17" pos:end="275:17">p</name><operator pos:start="275:18" pos:end="275:19">-&gt;</operator><name pos:start="275:20" pos:end="275:36">quant_table_index</name></name><operator pos:start="275:37" pos:end="275:37">=</operator> <name pos:start="275:39" pos:end="275:41">idx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:85"><expr pos:start="277:17" pos:end="277:84"><call pos:start="277:17" pos:end="277:84"><name pos:start="277:17" pos:end="277:22">memcpy</name><argument_list pos:start="277:23" pos:end="277:84">(<argument pos:start="277:24" pos:end="277:37"><expr pos:start="277:24" pos:end="277:37"><name pos:start="277:24" pos:end="277:37"><name pos:start="277:24" pos:end="277:24">p</name><operator pos:start="277:25" pos:end="277:26">-&gt;</operator><name pos:start="277:27" pos:end="277:37">quant_table</name></name></expr></argument>, <argument pos:start="277:40" pos:end="277:59"><expr pos:start="277:40" pos:end="277:59"><name pos:start="277:40" pos:end="277:59"><name pos:start="277:40" pos:end="277:40">f</name><operator pos:start="277:41" pos:end="277:42">-&gt;</operator><name pos:start="277:43" pos:end="277:54">quant_tables</name><index pos:start="277:55" pos:end="277:59">[<expr pos:start="277:56" pos:end="277:58"><name pos:start="277:56" pos:end="277:58">idx</name></expr>]</index></name></expr></argument>, <argument pos:start="277:62" pos:end="277:83"><expr pos:start="277:62" pos:end="277:83"><sizeof pos:start="277:62" pos:end="277:83">sizeof<argument_list pos:start="277:68" pos:end="277:83">(<argument pos:start="277:69" pos:end="277:82"><expr pos:start="277:69" pos:end="277:82"><name pos:start="277:69" pos:end="277:82"><name pos:start="277:69" pos:end="277:69">p</name><operator pos:start="277:70" pos:end="277:71">-&gt;</operator><name pos:start="277:72" pos:end="277:82">quant_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:53"><expr pos:start="279:17" pos:end="279:52"><name pos:start="279:17" pos:end="279:29">context_count</name><operator pos:start="279:30" pos:end="279:30">=</operator> <name pos:start="279:32" pos:end="279:52"><name pos:start="279:32" pos:end="279:32">f</name><operator pos:start="279:33" pos:end="279:34">-&gt;</operator><name pos:start="279:35" pos:end="279:47">context_count</name><index pos:start="279:48" pos:end="279:52">[<expr pos:start="279:49" pos:end="279:51"><name pos:start="279:49" pos:end="279:51">idx</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="281:14" pos:end="285:13">else<block pos:start="281:18" pos:end="285:13">{<block_content pos:start="283:17" pos:end="283:79">

                <expr_stmt pos:start="283:17" pos:end="283:79"><expr pos:start="283:17" pos:end="283:78"><call pos:start="283:17" pos:end="283:78"><name pos:start="283:17" pos:end="283:22">memcpy</name><argument_list pos:start="283:23" pos:end="283:78">(<argument pos:start="283:24" pos:end="283:37"><expr pos:start="283:24" pos:end="283:37"><name pos:start="283:24" pos:end="283:37"><name pos:start="283:24" pos:end="283:24">p</name><operator pos:start="283:25" pos:end="283:26">-&gt;</operator><name pos:start="283:27" pos:end="283:37">quant_table</name></name></expr></argument>, <argument pos:start="283:40" pos:end="283:53"><expr pos:start="283:40" pos:end="283:53"><name pos:start="283:40" pos:end="283:53"><name pos:start="283:40" pos:end="283:40">f</name><operator pos:start="283:41" pos:end="283:42">-&gt;</operator><name pos:start="283:43" pos:end="283:53">quant_table</name></name></expr></argument>, <argument pos:start="283:56" pos:end="283:77"><expr pos:start="283:56" pos:end="283:77"><sizeof pos:start="283:56" pos:end="283:77">sizeof<argument_list pos:start="283:62" pos:end="283:77">(<argument pos:start="283:63" pos:end="283:76"><expr pos:start="283:63" pos:end="283:76"><name pos:start="283:63" pos:end="283:76"><name pos:start="283:63" pos:end="283:63">p</name><operator pos:start="283:64" pos:end="283:65">-&gt;</operator><name pos:start="283:66" pos:end="283:76">quant_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="289:13" pos:end="295:13"><if pos:start="289:13" pos:end="295:13">if<condition pos:start="289:15" pos:end="289:48">(<expr pos:start="289:16" pos:end="289:47"><name pos:start="289:16" pos:end="289:31"><name pos:start="289:16" pos:end="289:16">p</name><operator pos:start="289:17" pos:end="289:18">-&gt;</operator><name pos:start="289:19" pos:end="289:31">context_count</name></name> <operator pos:start="289:33" pos:end="289:33">&lt;</operator> <name pos:start="289:35" pos:end="289:47">context_count</name></expr>)</condition><block pos:start="289:49" pos:end="295:13">{<block_content pos:start="291:17" pos:end="293:40">

                <expr_stmt pos:start="291:17" pos:end="291:36"><expr pos:start="291:17" pos:end="291:35"><call pos:start="291:17" pos:end="291:35"><name pos:start="291:17" pos:end="291:24">av_freep</name><argument_list pos:start="291:25" pos:end="291:35">(<argument pos:start="291:26" pos:end="291:34"><expr pos:start="291:26" pos:end="291:34"><operator pos:start="291:26" pos:end="291:26">&amp;</operator><name pos:start="291:27" pos:end="291:34"><name pos:start="291:27" pos:end="291:27">p</name><operator pos:start="291:28" pos:end="291:29">-&gt;</operator><name pos:start="291:30" pos:end="291:34">state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="293:17" pos:end="293:40"><expr pos:start="293:17" pos:end="293:39"><call pos:start="293:17" pos:end="293:39"><name pos:start="293:17" pos:end="293:24">av_freep</name><argument_list pos:start="293:25" pos:end="293:39">(<argument pos:start="293:26" pos:end="293:38"><expr pos:start="293:26" pos:end="293:38"><operator pos:start="293:26" pos:end="293:26">&amp;</operator><name pos:start="293:27" pos:end="293:38"><name pos:start="293:27" pos:end="293:27">p</name><operator pos:start="293:28" pos:end="293:29">-&gt;</operator><name pos:start="293:30" pos:end="293:38">vlc_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:44"><expr pos:start="297:13" pos:end="297:43"><name pos:start="297:13" pos:end="297:28"><name pos:start="297:13" pos:end="297:13">p</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:28">context_count</name></name><operator pos:start="297:29" pos:end="297:29">=</operator> <name pos:start="297:31" pos:end="297:43">context_count</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="305:5" pos:end="305:13">return <expr pos:start="305:12" pos:end="305:12"><literal type="number" pos:start="305:12" pos:end="305:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
