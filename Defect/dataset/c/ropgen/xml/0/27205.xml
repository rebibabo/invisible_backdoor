<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27205.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">mov_finalize_stsd_codec</name><parameter_list pos:start="1:35" pos:end="3:70">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:45">MOVContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">c</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:61">AVIOContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">pb</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:47"><decl pos:start="3:36" pos:end="3:47"><type pos:start="3:36" pos:end="3:47"><name pos:start="3:36" pos:end="3:43">AVStream</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:47">st</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:69"><decl pos:start="3:50" pos:end="3:69"><type pos:start="3:50" pos:end="3:69"><name pos:start="3:50" pos:end="3:65">MOVStreamContext</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:69">sc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="133:1">{<block_content pos:start="7:5" pos:end="131:13">

    <if_stmt pos:start="7:5" pos:end="11:48"><if pos:start="7:5" pos:end="11:48">if <condition pos:start="7:8" pos:end="9:54">(<expr pos:start="7:9" pos:end="9:53"><name pos:start="7:9" pos:end="7:29"><name pos:start="7:9" pos:end="7:10">st</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:17">codec</name><operator pos:start="7:18" pos:end="7:19">-&gt;</operator><name pos:start="7:20" pos:end="7:29">codec_type</name></name> <operator pos:start="7:31" pos:end="7:32">==</operator> <name pos:start="7:34" pos:end="7:51">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="7:53" pos:end="7:54">&amp;&amp;</operator>

        <operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:31"><name pos:start="9:10" pos:end="9:11">st</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:18">codec</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:31">sample_rate</name></name> <operator pos:start="9:33" pos:end="9:34">&amp;&amp;</operator> <name pos:start="9:36" pos:end="9:49"><name pos:start="9:36" pos:end="9:37">sc</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:49">time_scale</name></name> <operator pos:start="9:51" pos:end="9:51">&gt;</operator> <literal type="number" pos:start="9:53" pos:end="9:53">1</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:48"><block_content pos:start="11:9" pos:end="11:48">

        <expr_stmt pos:start="11:9" pos:end="11:48"><expr pos:start="11:9" pos:end="11:47"><name pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:10">st</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:17">codec</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:30">sample_rate</name></name> <operator pos:start="11:32" pos:end="11:32">=</operator> <name pos:start="11:34" pos:end="11:47"><name pos:start="11:34" pos:end="11:35">sc</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:47">time_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:43">/* special codec parameters handling */</comment>

    <switch pos:start="17:5" pos:end="129:5">switch <condition pos:start="17:12" pos:end="17:32">(<expr pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:14">st</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:21">codec</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:31">codec_id</name></name></expr>)</condition> <block pos:start="17:34" pos:end="129:5">{<block_content pos:start="21:5" pos:end="127:14">

<cpp:if pos:start="19:1" pos:end="19:21">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:21">CONFIG_DV_DEMUXER</name></expr></cpp:if>

    <case pos:start="21:5" pos:end="21:29">case <expr pos:start="21:10" pos:end="21:28"><name pos:start="21:10" pos:end="21:28">AV_CODEC_ID_DVAUDIO</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">dv_fctx</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="23:45"><name pos:start="23:22" pos:end="23:43">avformat_alloc_context</name><argument_list pos:start="23:44" pos:end="23:45">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:24">(<expr pos:start="25:13" pos:end="25:23"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:23"><name pos:start="25:14" pos:end="25:14">c</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:23">dv_fctx</name></name></expr>)</condition> <block pos:start="25:26" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:35">

            <expr_stmt pos:start="27:13" pos:end="27:74"><expr pos:start="27:13" pos:end="27:73"><call pos:start="27:13" pos:end="27:73"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:73">(<argument pos:start="27:20" pos:end="27:24"><expr pos:start="27:20" pos:end="27:24"><name pos:start="27:20" pos:end="27:24"><name pos:start="27:20" pos:end="27:20">c</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:24">fc</name></name></expr></argument>, <argument pos:start="27:27" pos:end="27:38"><expr pos:start="27:27" pos:end="27:38"><name pos:start="27:27" pos:end="27:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:41" pos:end="27:72"><expr pos:start="27:41" pos:end="27:72"><literal type="string" pos:start="27:41" pos:end="27:72">"dv demux context alloc error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:35">return <expr pos:start="29:20" pos:end="29:34"><call pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:26">AVERROR</name><argument_list pos:start="29:27" pos:end="29:34">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:9">c</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:19">dv_demux</name></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:54"><name pos:start="33:23" pos:end="33:42">avpriv_dv_init_demux</name><argument_list pos:start="33:43" pos:end="33:54">(<argument pos:start="33:44" pos:end="33:53"><expr pos:start="33:44" pos:end="33:53"><name pos:start="33:44" pos:end="33:53"><name pos:start="33:44" pos:end="33:44">c</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:53">dv_fctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:25">(<expr pos:start="35:13" pos:end="35:24"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:24"><name pos:start="35:14" pos:end="35:14">c</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:24">dv_demux</name></name></expr>)</condition> <block pos:start="35:27" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:35">

            <expr_stmt pos:start="37:13" pos:end="37:73"><expr pos:start="37:13" pos:end="37:72"><call pos:start="37:13" pos:end="37:72"><name pos:start="37:13" pos:end="37:18">av_log</name><argument_list pos:start="37:19" pos:end="37:72">(<argument pos:start="37:20" pos:end="37:24"><expr pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:20">c</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:24">fc</name></name></expr></argument>, <argument pos:start="37:27" pos:end="37:38"><expr pos:start="37:27" pos:end="37:38"><name pos:start="37:27" pos:end="37:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:41" pos:end="37:71"><expr pos:start="37:41" pos:end="37:71"><literal type="string" pos:start="37:41" pos:end="37:71">"dv demux context init error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:35">return <expr pos:start="39:20" pos:end="39:34"><call pos:start="39:20" pos:end="39:34"><name pos:start="39:20" pos:end="39:26">AVERROR</name><argument_list pos:start="39:27" pos:end="39:34">(<argument pos:start="39:28" pos:end="39:33"><expr pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:10">sc</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:30">dv_audio_container</name></name> <operator pos:start="43:32" pos:end="43:32">=</operator> <literal type="number" pos:start="43:34" pos:end="43:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:55"><expr pos:start="45:9" pos:end="45:54"><name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:10">st</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:17">codec</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:27">codec_id</name></name>    <operator pos:start="45:32" pos:end="45:32">=</operator> <name pos:start="45:34" pos:end="45:54">AV_CODEC_ID_PCM_S16LE</name></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="50:0">break;</break>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="51:5" pos:end="51:52">/* no ifdef since parameters are always those */</comment>

    <case pos:start="53:5" pos:end="53:27">case <expr pos:start="53:10" pos:end="53:26"><name pos:start="53:10" pos:end="53:26">AV_CODEC_ID_QCELP</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:10">st</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:17">codec</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:27">channels</name></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <literal type="number" pos:start="55:31" pos:end="55:31">1</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="57:9" pos:end="57:61">// force sample rate for qcelp when not stored in mov</comment>

        <if_stmt pos:start="59:9" pos:end="61:42"><if pos:start="59:9" pos:end="61:42">if <condition pos:start="59:12" pos:end="59:59">(<expr pos:start="59:13" pos:end="59:58"><name pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:14">st</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:21">codec</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:32">codec_tag</name></name> <operator pos:start="59:34" pos:end="59:35">!=</operator> <call pos:start="59:37" pos:end="59:58"><name pos:start="59:37" pos:end="59:41">MKTAG</name><argument_list pos:start="59:42" pos:end="59:58">(<argument pos:start="59:43" pos:end="59:45"><expr pos:start="59:43" pos:end="59:45"><literal type="char" pos:start="59:43" pos:end="59:45">'Q'</literal></expr></argument>,<argument pos:start="59:47" pos:end="59:49"><expr pos:start="59:47" pos:end="59:49"><literal type="char" pos:start="59:47" pos:end="59:49">'c'</literal></expr></argument>,<argument pos:start="59:51" pos:end="59:53"><expr pos:start="59:51" pos:end="59:53"><literal type="char" pos:start="59:51" pos:end="59:53">'l'</literal></expr></argument>,<argument pos:start="59:55" pos:end="59:57"><expr pos:start="59:55" pos:end="59:57"><literal type="char" pos:start="59:55" pos:end="59:57">'p'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:42"><block_content pos:start="61:13" pos:end="61:42">

            <expr_stmt pos:start="61:13" pos:end="61:42"><expr pos:start="61:13" pos:end="61:41"><name pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:14">st</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:21">codec</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:34">sample_rate</name></name> <operator pos:start="61:36" pos:end="61:36">=</operator> <literal type="number" pos:start="61:38" pos:end="61:41">8000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:28">case <expr pos:start="65:10" pos:end="65:27"><name pos:start="65:10" pos:end="65:27">AV_CODEC_ID_AMR_NB</name></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:35"><expr pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:10">st</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:17">codec</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:27">channels</name></name>    <operator pos:start="67:32" pos:end="67:32">=</operator> <literal type="number" pos:start="67:34" pos:end="67:34">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="69:9" pos:end="69:79">/* force sample rate for amr, stsd in 3gp does not store sample rate */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:38"><expr pos:start="71:9" pos:end="71:37"><name pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:10">st</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:17">codec</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:30">sample_rate</name></name> <operator pos:start="71:32" pos:end="71:32">=</operator> <literal type="number" pos:start="71:34" pos:end="71:37">8000</literal></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:28">case <expr pos:start="75:10" pos:end="75:27"><name pos:start="75:10" pos:end="75:27">AV_CODEC_ID_AMR_WB</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:35"><expr pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:10">st</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:17">codec</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:27">channels</name></name>    <operator pos:start="77:32" pos:end="77:32">=</operator> <literal type="number" pos:start="77:34" pos:end="77:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:39"><expr pos:start="79:9" pos:end="79:38"><name pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:10">st</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:17">codec</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:30">sample_rate</name></name> <operator pos:start="79:32" pos:end="79:32">=</operator> <literal type="number" pos:start="79:34" pos:end="79:38">16000</literal></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <case pos:start="83:5" pos:end="83:25">case <expr pos:start="83:10" pos:end="83:24"><name pos:start="83:10" pos:end="83:24">AV_CODEC_ID_MP2</name></expr>:</case>

    <case pos:start="85:5" pos:end="85:25">case <expr pos:start="85:10" pos:end="85:24"><name pos:start="85:10" pos:end="85:24">AV_CODEC_ID_MP3</name></expr>:</case>

        <comment type="block" pos:start="87:9" pos:end="87:48">/* force type after stsd for m1a hdlr */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:51"><expr pos:start="89:9" pos:end="89:50"><name pos:start="89:9" pos:end="89:29"><name pos:start="89:9" pos:end="89:10">st</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:17">codec</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:29">codec_type</name></name> <operator pos:start="89:31" pos:end="89:31">=</operator> <name pos:start="89:33" pos:end="89:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:52"><expr pos:start="91:9" pos:end="91:51"><name pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:10">st</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:24">need_parsing</name></name>      <operator pos:start="91:31" pos:end="91:31">=</operator> <name pos:start="91:33" pos:end="91:51">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:25">case <expr pos:start="95:10" pos:end="95:24"><name pos:start="95:10" pos:end="95:24">AV_CODEC_ID_GSM</name></expr>:</case>

    <case pos:start="97:5" pos:end="97:30">case <expr pos:start="97:10" pos:end="97:29"><name pos:start="97:10" pos:end="97:29">AV_CODEC_ID_ADPCM_MS</name></expr>:</case>

    <case pos:start="99:5" pos:end="99:35">case <expr pos:start="99:10" pos:end="99:34"><name pos:start="99:10" pos:end="99:34">AV_CODEC_ID_ADPCM_IMA_WAV</name></expr>:</case>

    <case pos:start="101:5" pos:end="101:26">case <expr pos:start="101:10" pos:end="101:25"><name pos:start="101:10" pos:end="101:25">AV_CODEC_ID_ILBC</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:53"><expr pos:start="103:9" pos:end="103:52"><name pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:10">st</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:17">codec</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:30">block_align</name></name> <operator pos:start="103:32" pos:end="103:32">=</operator> <name pos:start="103:34" pos:end="103:52"><name pos:start="103:34" pos:end="103:35">sc</name><operator pos:start="103:36" pos:end="103:37">-&gt;</operator><name pos:start="103:38" pos:end="103:52">bytes_per_frame</name></name></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:26">case <expr pos:start="107:10" pos:end="107:25"><name pos:start="107:10" pos:end="107:25">AV_CODEC_ID_ALAC</name></expr>:</case>

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:44">(<expr pos:start="109:13" pos:end="109:43"><name pos:start="109:13" pos:end="109:37"><name pos:start="109:13" pos:end="109:14">st</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:21">codec</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:37">extradata_size</name></name> <operator pos:start="109:39" pos:end="109:40">==</operator> <literal type="number" pos:start="109:42" pos:end="109:43">36</literal></expr>)</condition> <block pos:start="109:46" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:72">

            <expr_stmt pos:start="111:13" pos:end="111:72"><expr pos:start="111:13" pos:end="111:71"><name pos:start="111:13" pos:end="111:31"><name pos:start="111:13" pos:end="111:14">st</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:21">codec</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:31">channels</name></name>    <operator pos:start="111:36" pos:end="111:36">=</operator> <call pos:start="111:38" pos:end="111:71"><name pos:start="111:38" pos:end="111:43">AV_RB8</name> <argument_list pos:start="111:45" pos:end="111:71">(<argument pos:start="111:46" pos:end="111:70"><expr pos:start="111:46" pos:end="111:70"><name pos:start="111:46" pos:end="111:65"><name pos:start="111:46" pos:end="111:47">st</name><operator pos:start="111:48" pos:end="111:49">-&gt;</operator><name pos:start="111:50" pos:end="111:54">codec</name><operator pos:start="111:55" pos:end="111:56">-&gt;</operator><name pos:start="111:57" pos:end="111:65">extradata</name></name> <operator pos:start="111:67" pos:end="111:67">+</operator> <literal type="number" pos:start="111:69" pos:end="111:70">21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:72"><expr pos:start="113:13" pos:end="113:71"><name pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:14">st</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:21">codec</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:34">sample_rate</name></name> <operator pos:start="113:36" pos:end="113:36">=</operator> <call pos:start="113:38" pos:end="113:71"><name pos:start="113:38" pos:end="113:44">AV_RB32</name><argument_list pos:start="113:45" pos:end="113:71">(<argument pos:start="113:46" pos:end="113:70"><expr pos:start="113:46" pos:end="113:70"><name pos:start="113:46" pos:end="113:65"><name pos:start="113:46" pos:end="113:47">st</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:54">codec</name><operator pos:start="113:55" pos:end="113:56">-&gt;</operator><name pos:start="113:57" pos:end="113:65">extradata</name></name> <operator pos:start="113:67" pos:end="113:67">+</operator> <literal type="number" pos:start="113:69" pos:end="113:70">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <case pos:start="119:5" pos:end="119:25">case <expr pos:start="119:10" pos:end="119:24"><name pos:start="119:10" pos:end="119:24">AV_CODEC_ID_VC1</name></expr>:</case>

        <expr_stmt pos:start="121:9" pos:end="121:47"><expr pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:24"><name pos:start="121:9" pos:end="121:10">st</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:24">need_parsing</name></name> <operator pos:start="121:26" pos:end="121:26">=</operator> <name pos:start="121:28" pos:end="121:46">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <default pos:start="125:5" pos:end="125:12">default:</default>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="131:5" pos:end="131:13">return <expr pos:start="131:12" pos:end="131:12"><literal type="number" pos:start="131:12" pos:end="131:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
