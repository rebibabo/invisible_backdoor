<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10311.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">avio_close_dyn_buf</name><parameter_list pos:start="1:23" pos:end="1:57">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:34">AVIOContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:46">uint8_t</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier><modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:56">pbuffer</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:26">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">DynBuffer</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:65"><decl pos:start="9:5" pos:end="9:64"><type pos:start="9:5" pos:end="9:21"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:21">char</name></type> <name pos:start="9:23" pos:end="9:58"><name pos:start="9:23" pos:end="9:28">padbuf</name><index pos:start="9:29" pos:end="9:58">[<expr pos:start="9:30" pos:end="9:57"><name pos:start="9:30" pos:end="9:57">AV_INPUT_BUFFER_PADDING_SIZE</name></expr>]</index></name> <init pos:start="9:60" pos:end="9:64">= <expr pos:start="9:62" pos:end="9:64"><block pos:start="9:62" pos:end="9:64">{<expr pos:start="9:63" pos:end="9:63"><literal type="number" pos:start="9:63" pos:end="9:63">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">padding</name> <init pos:start="11:17" pos:end="11:19">= <expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:11">(<expr pos:start="15:9" pos:end="15:10"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:10">s</name></expr>)</condition> <block pos:start="15:13" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:24"><expr pos:start="17:9" pos:end="17:23"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:16">pbuffer</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:23">NULL</name></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:56">/* don't attempt to pad fixed-size packet buffers */</comment>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:28">(<expr pos:start="27:9" pos:end="27:27"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:27"><name pos:start="27:10" pos:end="27:10">s</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:27">max_packet_size</name></name></expr>)</condition> <block pos:start="27:30" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:47">

        <expr_stmt pos:start="29:9" pos:end="29:46"><expr pos:start="29:9" pos:end="29:45"><call pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:18">avio_write</name><argument_list pos:start="29:19" pos:end="29:45">(<argument pos:start="29:20" pos:end="29:20"><expr pos:start="29:20" pos:end="29:20"><name pos:start="29:20" pos:end="29:20">s</name></expr></argument>, <argument pos:start="29:23" pos:end="29:28"><expr pos:start="29:23" pos:end="29:28"><name pos:start="29:23" pos:end="29:28">padbuf</name></expr></argument>, <argument pos:start="29:31" pos:end="29:44"><expr pos:start="29:31" pos:end="29:44"><sizeof pos:start="29:31" pos:end="29:44">sizeof<argument_list pos:start="29:37" pos:end="29:44">(<argument pos:start="29:38" pos:end="29:43"><expr pos:start="29:38" pos:end="29:43"><name pos:start="29:38" pos:end="29:43">padbuf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:15">padding</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:46">AV_INPUT_BUFFER_PADDING_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:18"><expr pos:start="37:5" pos:end="37:17"><call pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:14">avio_flush</name><argument_list pos:start="37:15" pos:end="37:17">(<argument pos:start="37:16" pos:end="37:16"><expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:5">d</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <name pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:17">opaque</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><operator pos:start="43:5" pos:end="43:5">*</operator><name pos:start="43:6" pos:end="43:12">pbuffer</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:24"><name pos:start="43:16" pos:end="43:16">d</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:24">buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:19"><expr pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:8">size</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <name pos:start="45:12" pos:end="45:18"><name pos:start="45:12" pos:end="45:12">d</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:18">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:15"><expr pos:start="47:5" pos:end="47:14"><call pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:11">av_free</name><argument_list pos:start="47:12" pos:end="47:14">(<argument pos:start="47:13" pos:end="47:13"><expr pos:start="47:13" pos:end="47:13"><name pos:start="47:13" pos:end="47:13">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:15"><expr pos:start="49:5" pos:end="49:14"><call pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:11">av_free</name><argument_list pos:start="49:12" pos:end="49:14">(<argument pos:start="49:13" pos:end="49:13"><expr pos:start="49:13" pos:end="49:13"><name pos:start="49:13" pos:end="49:13">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:26">return <expr pos:start="51:12" pos:end="51:25"><name pos:start="51:12" pos:end="51:15">size</name> <operator pos:start="51:17" pos:end="51:17">-</operator> <name pos:start="51:19" pos:end="51:25">padding</name></expr>;</return>

</block_content>}</block></function>
</unit>
