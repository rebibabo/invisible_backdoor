<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18857.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">net_init_vhost_user</name><parameter_list pos:start="1:24" pos:end="3:59">(<parameter pos:start="1:25" pos:end="1:52"><decl pos:start="1:25" pos:end="1:52"><type pos:start="1:25" pos:end="1:52"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:46">NetClientOptions</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">opts</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">name</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><name pos:start="3:25" pos:end="3:38">NetClientState</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">peer</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:58"><decl pos:start="3:47" pos:end="3:58"><type pos:start="3:47" pos:end="3:58"><name pos:start="3:47" pos:end="3:51">Error</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier><modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:62">

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:34"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:32">NetdevVhostUserOptions</name> <modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:49">vhost_user_opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">CharDriverState</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">chr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:61"><expr pos:start="13:5" pos:end="13:60"><call pos:start="13:5" pos:end="13:60"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:60">(<argument pos:start="13:12" pos:end="13:59"><expr pos:start="13:12" pos:end="13:59"><name pos:start="13:12" pos:end="13:21"><name pos:start="13:12" pos:end="13:15">opts</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:21">kind</name></name> <operator pos:start="13:23" pos:end="13:24">==</operator> <name pos:start="13:26" pos:end="13:59">NET_CLIENT_OPTIONS_KIND_VHOST_USER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:19">vhost_user_opts</name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:38"><name pos:start="15:23" pos:end="15:26">opts</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:38">vhost_user</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:57"><expr pos:start="19:5" pos:end="19:56"><name pos:start="19:5" pos:end="19:7">chr</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:56"><name pos:start="19:11" pos:end="19:33">net_vhost_parse_chardev</name><argument_list pos:start="19:34" pos:end="19:56">(<argument pos:start="19:35" pos:end="19:49"><expr pos:start="19:35" pos:end="19:49"><name pos:start="19:35" pos:end="19:49">vhost_user_opts</name></expr></argument>, <argument pos:start="19:52" pos:end="19:55"><expr pos:start="19:52" pos:end="19:55"><name pos:start="19:52" pos:end="19:55">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:13">(<expr pos:start="21:9" pos:end="21:12"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:12">chr</name></expr>)</condition> <block pos:start="21:15" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:29">/* verify net frontend */</comment>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="33:46">(<expr pos:start="31:9" pos:end="33:45"><call pos:start="31:9" pos:end="33:45"><name pos:start="31:9" pos:end="31:25">qemu_opts_foreach</name><argument_list pos:start="31:26" pos:end="33:45">(<argument pos:start="31:27" pos:end="31:50"><expr pos:start="31:27" pos:end="31:50"><call pos:start="31:27" pos:end="31:50"><name pos:start="31:27" pos:end="31:40">qemu_find_opts</name><argument_list pos:start="31:41" pos:end="31:50">(<argument pos:start="31:42" pos:end="31:49"><expr pos:start="31:42" pos:end="31:49"><literal type="string" pos:start="31:42" pos:end="31:49">"device"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:53" pos:end="31:71"><expr pos:start="31:53" pos:end="31:71"><name pos:start="31:53" pos:end="31:71">net_vhost_check_net</name></expr></argument>,

                          <argument pos:start="33:27" pos:end="33:38"><expr pos:start="33:27" pos:end="33:38"><operator pos:start="33:27" pos:end="33:27">(</operator><name pos:start="33:28" pos:end="33:31">char</name> <operator pos:start="33:33" pos:end="33:33">*</operator><operator pos:start="33:34" pos:end="33:34">)</operator><name pos:start="33:35" pos:end="33:38">name</name></expr></argument>, <argument pos:start="33:41" pos:end="33:44"><expr pos:start="33:41" pos:end="33:44"><name pos:start="33:41" pos:end="33:44">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:48" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>





    <return pos:start="43:5" pos:end="43:62">return <expr pos:start="43:12" pos:end="43:61"><call pos:start="43:12" pos:end="43:61"><name pos:start="43:12" pos:end="43:30">net_vhost_user_init</name><argument_list pos:start="43:31" pos:end="43:61">(<argument pos:start="43:32" pos:end="43:35"><expr pos:start="43:32" pos:end="43:35"><name pos:start="43:32" pos:end="43:35">peer</name></expr></argument>, <argument pos:start="43:38" pos:end="43:49"><expr pos:start="43:38" pos:end="43:49"><literal type="string" pos:start="43:38" pos:end="43:49">"vhost_user"</literal></expr></argument>, <argument pos:start="43:52" pos:end="43:55"><expr pos:start="43:52" pos:end="43:55"><name pos:start="43:52" pos:end="43:55">name</name></expr></argument>, <argument pos:start="43:58" pos:end="43:60"><expr pos:start="43:58" pos:end="43:60"><name pos:start="43:58" pos:end="43:60">chr</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
