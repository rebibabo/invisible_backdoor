<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10619.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">update_md5_sum</name><parameter_list pos:start="1:27" pos:end="1:72">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:44">FlacEncodeContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:71"><decl pos:start="1:50" pos:end="1:71"><type pos:start="1:50" pos:end="1:71"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:62">int16_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:71">samples</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="7:5" pos:end="22:0">

<cpp:if pos:start="5:1" pos:end="5:18">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:18">HAVE_BIGENDIAN</name></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <for pos:start="9:5" pos:end="18:0">for <control pos:start="9:9" pos:end="9:58">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:53"><expr pos:start="9:17" pos:end="9:52"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:38"><name pos:start="9:21" pos:end="9:21">s</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:28">frame</name><operator pos:start="9:29" pos:end="9:29">.</operator><name pos:start="9:30" pos:end="9:38">blocksize</name></name> <operator pos:start="9:40" pos:end="9:40">*</operator> <name pos:start="9:42" pos:end="9:52"><name pos:start="9:42" pos:end="9:42">s</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:52">channels</name></name></expr>;</condition> <incr pos:start="9:55" pos:end="9:57"><expr pos:start="9:55" pos:end="9:57"><name pos:start="9:55" pos:end="9:55">i</name><operator pos:start="9:56" pos:end="9:57">++</operator></expr></incr>)</control> <block pos:start="9:60" pos:end="18:0">{<block_content pos:start="11:9" pos:end="13:53">

        <decl_stmt pos:start="11:9" pos:end="11:45"><decl pos:start="11:9" pos:end="11:44"><type pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:15">int16_t</name></type> <name pos:start="11:17" pos:end="11:19">smp</name> <init pos:start="11:21" pos:end="11:44">= <expr pos:start="11:23" pos:end="11:44"><call pos:start="11:23" pos:end="11:44"><name pos:start="11:23" pos:end="11:32">av_le2ne16</name><argument_list pos:start="11:33" pos:end="11:44">(<argument pos:start="11:34" pos:end="11:43"><expr pos:start="11:34" pos:end="11:43"><name pos:start="11:34" pos:end="11:43"><name pos:start="11:34" pos:end="11:40">samples</name><index pos:start="11:41" pos:end="11:43">[<expr pos:start="11:42" pos:end="11:42"><name pos:start="11:42" pos:end="11:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:53"><expr pos:start="13:9" pos:end="13:52"><call pos:start="13:9" pos:end="13:52"><name pos:start="13:9" pos:end="13:21">av_md5_update</name><argument_list pos:start="13:22" pos:end="13:52">(<argument pos:start="13:23" pos:end="13:31"><expr pos:start="13:23" pos:end="13:31"><name pos:start="13:23" pos:end="13:31"><name pos:start="13:23" pos:end="13:23">s</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:31">md5ctx</name></name></expr></argument>, <argument pos:start="13:34" pos:end="13:48"><expr pos:start="13:34" pos:end="13:48"><operator pos:start="13:34" pos:end="13:34">(</operator><name pos:start="13:35" pos:end="13:41">uint8_t</name> <operator pos:start="13:43" pos:end="13:43">*</operator><operator pos:start="13:44" pos:end="13:44">)</operator><operator pos:start="13:45" pos:end="13:45">&amp;</operator><name pos:start="13:46" pos:end="13:48">smp</name></expr></argument>, <argument pos:start="13:51" pos:end="13:51"><expr pos:start="13:51" pos:end="13:51"><literal type="number" pos:start="13:51" pos:end="13:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:else pos:start="17:1" pos:end="17:5">#<cpp:directive pos:start="17:2" pos:end="17:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:88"><call pos:start="19:5" pos:end="19:88"><name pos:start="19:5" pos:end="19:17">av_md5_update</name><argument_list pos:start="19:18" pos:end="19:88">(<argument pos:start="19:19" pos:end="19:27"><expr pos:start="19:19" pos:end="19:27"><name pos:start="19:19" pos:end="19:27"><name pos:start="19:19" pos:end="19:19">s</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:27">md5ctx</name></name></expr></argument>, <argument pos:start="19:30" pos:end="19:53"><expr pos:start="19:30" pos:end="19:53"><operator pos:start="19:30" pos:end="19:30">(</operator><specifier pos:start="19:31" pos:end="19:35">const</specifier> <name pos:start="19:37" pos:end="19:43">uint8_t</name> <operator pos:start="19:45" pos:end="19:45">*</operator><operator pos:start="19:46" pos:end="19:46">)</operator><name pos:start="19:47" pos:end="19:53">samples</name></expr></argument>, <argument pos:start="19:56" pos:end="19:87"><expr pos:start="19:56" pos:end="19:87"><name pos:start="19:56" pos:end="19:73"><name pos:start="19:56" pos:end="19:56">s</name><operator pos:start="19:57" pos:end="19:58">-&gt;</operator><name pos:start="19:59" pos:end="19:63">frame</name><operator pos:start="19:64" pos:end="19:64">.</operator><name pos:start="19:65" pos:end="19:73">blocksize</name></name><operator pos:start="19:74" pos:end="19:74">*</operator><name pos:start="19:75" pos:end="19:85"><name pos:start="19:75" pos:end="19:75">s</name><operator pos:start="19:76" pos:end="19:77">-&gt;</operator><name pos:start="19:78" pos:end="19:85">channels</name></name><operator pos:start="19:86" pos:end="19:86">*</operator><literal type="number" pos:start="19:87" pos:end="19:87">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
