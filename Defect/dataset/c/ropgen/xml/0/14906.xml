<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14906.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">piix4_initfn</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:33">PCIDevice</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:21">pci_conf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:26"><expr pos:start="9:5" pos:end="9:25"><call pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:15">isa_bus_new</name><argument_list pos:start="9:16" pos:end="9:25">(<argument pos:start="9:17" pos:end="9:24"><expr pos:start="9:17" pos:end="9:24"><operator pos:start="9:17" pos:end="9:17">&amp;</operator><name pos:start="9:18" pos:end="9:24"><name pos:start="9:18" pos:end="9:18">d</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:24">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:60"><expr pos:start="11:5" pos:end="11:59"><call pos:start="11:5" pos:end="11:59"><name pos:start="11:5" pos:end="11:19">register_savevm</name><argument_list pos:start="11:20" pos:end="11:59">(<argument pos:start="11:21" pos:end="11:27"><expr pos:start="11:21" pos:end="11:27"><literal type="string" pos:start="11:21" pos:end="11:27">"PIIX4"</literal></expr></argument>, <argument pos:start="11:30" pos:end="11:30"><expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">0</literal></expr></argument>, <argument pos:start="11:33" pos:end="11:33"><expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">2</literal></expr></argument>, <argument pos:start="11:36" pos:end="11:44"><expr pos:start="11:36" pos:end="11:44"><name pos:start="11:36" pos:end="11:44">piix_save</name></expr></argument>, <argument pos:start="11:47" pos:end="11:55"><expr pos:start="11:47" pos:end="11:55"><name pos:start="11:47" pos:end="11:55">piix_load</name></expr></argument>, <argument pos:start="11:58" pos:end="11:58"><expr pos:start="11:58" pos:end="11:58"><name pos:start="11:58" pos:end="11:58">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:12">pci_conf</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:16">d</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:24">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:60"><expr pos:start="17:5" pos:end="17:59"><call pos:start="17:5" pos:end="17:59"><name pos:start="17:5" pos:end="17:28">pci_config_set_vendor_id</name><argument_list pos:start="17:29" pos:end="17:59">(<argument pos:start="17:30" pos:end="17:37"><expr pos:start="17:30" pos:end="17:37"><name pos:start="17:30" pos:end="17:37">pci_conf</name></expr></argument>, <argument pos:start="17:40" pos:end="17:58"><expr pos:start="17:40" pos:end="17:58"><name pos:start="17:40" pos:end="17:58">PCI_VENDOR_ID_INTEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:70"><expr pos:start="19:5" pos:end="19:69"><call pos:start="19:5" pos:end="19:69"><name pos:start="19:5" pos:end="19:28">pci_config_set_device_id</name><argument_list pos:start="19:29" pos:end="19:69">(<argument pos:start="19:30" pos:end="19:37"><expr pos:start="19:30" pos:end="19:37"><name pos:start="19:30" pos:end="19:37">pci_conf</name></expr></argument>, <argument pos:start="19:40" pos:end="19:68"><expr pos:start="19:40" pos:end="19:68"><name pos:start="19:40" pos:end="19:68">PCI_DEVICE_ID_INTEL_82371AB_0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="19:72" pos:end="19:111">// 82371AB/EB/MB PIIX4 PCI-to-ISA bridge</comment>

    <expr_stmt pos:start="21:5" pos:end="21:57"><expr pos:start="21:5" pos:end="21:56"><call pos:start="21:5" pos:end="21:56"><name pos:start="21:5" pos:end="21:24">pci_config_set_class</name><argument_list pos:start="21:25" pos:end="21:56">(<argument pos:start="21:26" pos:end="21:33"><expr pos:start="21:26" pos:end="21:33"><name pos:start="21:26" pos:end="21:33">pci_conf</name></expr></argument>, <argument pos:start="21:36" pos:end="21:55"><expr pos:start="21:36" pos:end="21:55"><name pos:start="21:36" pos:end="21:55">PCI_CLASS_BRIDGE_ISA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:64"><expr pos:start="23:5" pos:end="25:63"><name pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:12">pci_conf</name><index pos:start="23:13" pos:end="23:29">[<expr pos:start="23:14" pos:end="23:28"><name pos:start="23:14" pos:end="23:28">PCI_HEADER_TYPE</name></expr>]</index></name> <operator pos:start="23:31" pos:end="23:31">=</operator>

        <name pos:start="25:9" pos:end="25:30">PCI_HEADER_TYPE_NORMAL</name> <operator pos:start="25:32" pos:end="25:32">|</operator> <name pos:start="25:34" pos:end="25:63">PCI_HEADER_TYPE_MULTI_FUNCTION</name></expr>;</expr_stmt> <comment type="line" pos:start="25:66" pos:end="25:108">// header_type = PCI_multifunction, generic</comment>



    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:13">piix4_dev</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:17">d</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><call pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:15">piix4_reset</name><argument_list pos:start="31:16" pos:end="31:18">(<argument pos:start="31:17" pos:end="31:17"><expr pos:start="31:17" pos:end="31:17"><name pos:start="31:17" pos:end="31:17">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:40"><expr pos:start="33:5" pos:end="33:39"><call pos:start="33:5" pos:end="33:39"><name pos:start="33:5" pos:end="33:23">qemu_register_reset</name><argument_list pos:start="33:24" pos:end="33:39">(<argument pos:start="33:25" pos:end="33:35"><expr pos:start="33:25" pos:end="33:35"><name pos:start="33:25" pos:end="33:35">piix4_reset</name></expr></argument>, <argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><name pos:start="33:38" pos:end="33:38">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
