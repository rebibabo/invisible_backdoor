<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5562.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:34">machine_register_compat_props</name><parameter_list pos:start="1:35" pos:end="1:57">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:47">MachineState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:56">machine</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MachineClass</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">mc</name> <init pos:start="5:22" pos:end="5:49">= <expr pos:start="5:24" pos:end="5:49"><call pos:start="5:24" pos:end="5:49"><name pos:start="5:24" pos:end="5:40">MACHINE_GET_CLASS</name><argument_list pos:start="5:41" pos:end="5:49">(<argument pos:start="5:42" pos:end="5:48"><expr pos:start="5:42" pos:end="5:48"><name pos:start="5:42" pos:end="5:48">machine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">GlobalProperty</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">p</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:25"><name pos:start="13:10" pos:end="13:11">mc</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:25">compat_props</name></name></expr>)</condition> <block pos:start="13:28" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="21:5" pos:end="31:5">for <control pos:start="21:9" pos:end="21:47">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:42"><expr pos:start="21:17" pos:end="21:41"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:41"><name pos:start="21:21" pos:end="21:22">mc</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:36">compat_props</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:41">len</name></name></expr>;</condition> <incr pos:start="21:44" pos:end="21:46"><expr pos:start="21:44" pos:end="21:46"><name pos:start="21:44" pos:end="21:44">i</name><operator pos:start="21:45" pos:end="21:46">++</operator></expr></incr>)</control> <block pos:start="21:49" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:37">

        <expr_stmt pos:start="23:9" pos:end="23:65"><expr pos:start="23:9" pos:end="23:64"><name pos:start="23:9" pos:end="23:9">p</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:64"><name pos:start="23:13" pos:end="23:25">g_array_index</name><argument_list pos:start="23:26" pos:end="23:64">(<argument pos:start="23:27" pos:end="23:42"><expr pos:start="23:27" pos:end="23:42"><name pos:start="23:27" pos:end="23:42"><name pos:start="23:27" pos:end="23:28">mc</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:42">compat_props</name></name></expr></argument>, <argument pos:start="23:45" pos:end="23:60"><expr pos:start="23:45" pos:end="23:60"><name pos:start="23:45" pos:end="23:58">GlobalProperty</name> <operator pos:start="23:60" pos:end="23:60">*</operator></expr></argument>, <argument pos:start="23:63" pos:end="23:63"><expr pos:start="23:63" pos:end="23:63"><name pos:start="23:63" pos:end="23:63">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="25:9" pos:end="25:59">/* Machine compat_props must never cause errors: */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:9">p</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:15">errp</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <operator pos:start="27:19" pos:end="27:19">&amp;</operator><name pos:start="27:20" pos:end="27:30">error_abort</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><call pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:33">qdev_prop_register_global</name><argument_list pos:start="29:34" pos:end="29:36">(<argument pos:start="29:35" pos:end="29:35"><expr pos:start="29:35" pos:end="29:35"><name pos:start="29:35" pos:end="29:35">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
