<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16327.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">chsc_sei_nt2_get_event</name><parameter_list pos:start="1:27" pos:end="1:37">(<parameter pos:start="1:28" pos:end="1:36"><decl pos:start="1:28" pos:end="1:36"><type pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">res</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:14">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ChscSeiNt2Res</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:26">nt2_res</name> <init pos:start="5:28" pos:end="5:49">= <expr pos:start="5:30" pos:end="5:49"><operator pos:start="5:30" pos:end="5:30">(</operator><name pos:start="5:31" pos:end="5:43">ChscSeiNt2Res</name> <operator pos:start="5:45" pos:end="5:45">*</operator><operator pos:start="5:46" pos:end="5:46">)</operator><name pos:start="5:47" pos:end="5:49">res</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">PciCcdfAvail</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:23">accdf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">PciCcdfErr</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:21">eccdf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">rc</name> <init pos:start="11:12" pos:end="11:14">= <expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">SeiContainer</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:26">sei_cont</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="17:62"><decl pos:start="15:5" pos:end="17:61"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">S390pciState</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:19">s</name> <init pos:start="15:21" pos:end="17:61">= <expr pos:start="15:23" pos:end="17:61"><call pos:start="15:23" pos:end="17:61"><name pos:start="15:23" pos:end="15:42">S390_PCI_HOST_BRIDGE</name><argument_list pos:start="15:43" pos:end="17:61">(

        <argument pos:start="17:9" pos:end="17:60"><expr pos:start="17:9" pos:end="17:60"><call pos:start="17:9" pos:end="17:60"><name pos:start="17:9" pos:end="17:27">object_resolve_path</name><argument_list pos:start="17:28" pos:end="17:60">(<argument pos:start="17:29" pos:end="17:53"><expr pos:start="17:29" pos:end="17:53"><name pos:start="17:29" pos:end="17:53">TYPE_S390_PCI_HOST_BRIDGE</name></expr></argument>, <argument pos:start="17:56" pos:end="17:59"><expr pos:start="17:56" pos:end="17:59"><name pos:start="17:56" pos:end="17:59">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:11">(<expr pos:start="21:9" pos:end="21:10"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:10">s</name></expr>)</condition> <block pos:start="21:13" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><name pos:start="23:16" pos:end="23:17">rc</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:12">sei_cont</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:44"><name pos:start="29:16" pos:end="29:27">QTAILQ_FIRST</name><argument_list pos:start="29:28" pos:end="29:44">(<argument pos:start="29:29" pos:end="29:43"><expr pos:start="29:29" pos:end="29:43"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:43"><name pos:start="29:30" pos:end="29:30">s</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:43">pending_sei</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="81:5"><if pos:start="31:5" pos:end="81:5">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16">sei_cont</name></expr>)</condition> <block pos:start="31:19" pos:end="81:5">{<block_content pos:start="33:9" pos:end="79:15">

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><call pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:21">QTAILQ_REMOVE</name><argument_list pos:start="33:22" pos:end="33:54">(<argument pos:start="33:23" pos:end="33:37"><expr pos:start="33:23" pos:end="33:37"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:37"><name pos:start="33:24" pos:end="33:24">s</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:37">pending_sei</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:47"><expr pos:start="33:40" pos:end="33:47"><name pos:start="33:40" pos:end="33:47">sei_cont</name></expr></argument>, <argument pos:start="33:50" pos:end="33:53"><expr pos:start="33:50" pos:end="33:53"><name pos:start="33:50" pos:end="33:53">link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:15">nt2_res</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:19">nt</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:15">nt2_res</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:19">cc</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:30">sei_cont</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:34">cc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:61"><expr pos:start="39:9" pos:end="39:60"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:15">nt2_res</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:23">length</name></name> <operator pos:start="39:25" pos:end="39:25">=</operator> <call pos:start="39:27" pos:end="39:60"><name pos:start="39:27" pos:end="39:37">cpu_to_be16</name><argument_list pos:start="39:38" pos:end="39:60">(<argument pos:start="39:39" pos:end="39:59"><expr pos:start="39:39" pos:end="39:59"><sizeof pos:start="39:39" pos:end="39:59">sizeof<argument_list pos:start="39:45" pos:end="39:59">(<argument pos:start="39:46" pos:end="39:58"><expr pos:start="39:46" pos:end="39:58"><name pos:start="39:46" pos:end="39:58">ChscSeiNt2Res</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="41:9" pos:end="75:9">switch <condition pos:start="41:16" pos:end="41:29">(<expr pos:start="41:17" pos:end="41:28"><name pos:start="41:17" pos:end="41:28"><name pos:start="41:17" pos:end="41:24">sei_cont</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:28">cc</name></name></expr>)</condition> <block pos:start="41:31" pos:end="75:9">{<block_content pos:start="43:9" pos:end="73:20">

        <case pos:start="43:9" pos:end="43:15">case <expr pos:start="43:14" pos:end="43:14"><literal type="number" pos:start="43:14" pos:end="43:14">1</literal></expr>:</case> <comment type="block" pos:start="43:17" pos:end="43:33">/* error event */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:48"><expr pos:start="45:13" pos:end="45:47"><name pos:start="45:13" pos:end="45:17">eccdf</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <operator pos:start="45:21" pos:end="45:21">(</operator><name pos:start="45:22" pos:end="45:31">PciCcdfErr</name> <operator pos:start="45:33" pos:end="45:33">*</operator><operator pos:start="45:34" pos:end="45:34">)</operator><name pos:start="45:35" pos:end="45:47"><name pos:start="45:35" pos:end="45:41">nt2_res</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:47">ccdf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:52"><expr pos:start="47:13" pos:end="47:51"><name pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:17">eccdf</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:22">fid</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:51"><name pos:start="47:26" pos:end="47:36">cpu_to_be32</name><argument_list pos:start="47:37" pos:end="47:51">(<argument pos:start="47:38" pos:end="47:50"><expr pos:start="47:38" pos:end="47:50"><name pos:start="47:38" pos:end="47:50"><name pos:start="47:38" pos:end="47:45">sei_cont</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:50">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:50"><expr pos:start="49:13" pos:end="49:49"><name pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:17">eccdf</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:21">fh</name></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <call pos:start="49:25" pos:end="49:49"><name pos:start="49:25" pos:end="49:35">cpu_to_be32</name><argument_list pos:start="49:36" pos:end="49:49">(<argument pos:start="49:37" pos:end="49:48"><expr pos:start="49:37" pos:end="49:48"><name pos:start="49:37" pos:end="49:48"><name pos:start="49:37" pos:end="49:44">sei_cont</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:48">fh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:48"><expr pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:17">eccdf</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:20">e</name></name> <operator pos:start="51:22" pos:end="51:22">=</operator> <call pos:start="51:24" pos:end="51:47"><name pos:start="51:24" pos:end="51:34">cpu_to_be32</name><argument_list pos:start="51:35" pos:end="51:47">(<argument pos:start="51:36" pos:end="51:46"><expr pos:start="51:36" pos:end="51:46"><name pos:start="51:36" pos:end="51:46"><name pos:start="51:36" pos:end="51:43">sei_cont</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:46">e</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:56"><expr pos:start="53:13" pos:end="53:55"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:17">eccdf</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:24">faddr</name></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <call pos:start="53:28" pos:end="53:55"><name pos:start="53:28" pos:end="53:38">cpu_to_be64</name><argument_list pos:start="53:39" pos:end="53:55">(<argument pos:start="53:40" pos:end="53:54"><expr pos:start="53:40" pos:end="53:54"><name pos:start="53:40" pos:end="53:54"><name pos:start="53:40" pos:end="53:47">sei_cont</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:54">faddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:52"><expr pos:start="55:13" pos:end="55:51"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:17">eccdf</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:22">pec</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <call pos:start="55:26" pos:end="55:51"><name pos:start="55:26" pos:end="55:36">cpu_to_be16</name><argument_list pos:start="55:37" pos:end="55:51">(<argument pos:start="55:38" pos:end="55:50"><expr pos:start="55:38" pos:end="55:50"><name pos:start="55:38" pos:end="55:50"><name pos:start="55:38" pos:end="55:45">sei_cont</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:50">pec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:15">case <expr pos:start="59:14" pos:end="59:14"><literal type="number" pos:start="59:14" pos:end="59:14">2</literal></expr>:</case> <comment type="block" pos:start="59:17" pos:end="59:40">/* availability event */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:50"><expr pos:start="61:13" pos:end="61:49"><name pos:start="61:13" pos:end="61:17">accdf</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <operator pos:start="61:21" pos:end="61:21">(</operator><name pos:start="61:22" pos:end="61:33">PciCcdfAvail</name> <operator pos:start="61:35" pos:end="61:35">*</operator><operator pos:start="61:36" pos:end="61:36">)</operator><name pos:start="61:37" pos:end="61:49"><name pos:start="61:37" pos:end="61:43">nt2_res</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:49">ccdf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:52"><expr pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:17">accdf</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:22">fid</name></name> <operator pos:start="63:24" pos:end="63:24">=</operator> <call pos:start="63:26" pos:end="63:51"><name pos:start="63:26" pos:end="63:36">cpu_to_be32</name><argument_list pos:start="63:37" pos:end="63:51">(<argument pos:start="63:38" pos:end="63:50"><expr pos:start="63:38" pos:end="63:50"><name pos:start="63:38" pos:end="63:50"><name pos:start="63:38" pos:end="63:45">sei_cont</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:50">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:50"><expr pos:start="65:13" pos:end="65:49"><name pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:17">accdf</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:21">fh</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <call pos:start="65:25" pos:end="65:49"><name pos:start="65:25" pos:end="65:35">cpu_to_be32</name><argument_list pos:start="65:36" pos:end="65:49">(<argument pos:start="65:37" pos:end="65:48"><expr pos:start="65:37" pos:end="65:48"><name pos:start="65:37" pos:end="65:48"><name pos:start="65:37" pos:end="65:44">sei_cont</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:48">fh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:52"><expr pos:start="67:13" pos:end="67:51"><name pos:start="67:13" pos:end="67:22"><name pos:start="67:13" pos:end="67:17">accdf</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:22">pec</name></name> <operator pos:start="67:24" pos:end="67:24">=</operator> <call pos:start="67:26" pos:end="67:51"><name pos:start="67:26" pos:end="67:36">cpu_to_be16</name><argument_list pos:start="67:37" pos:end="67:51">(<argument pos:start="67:38" pos:end="67:50"><expr pos:start="67:38" pos:end="67:50"><name pos:start="67:38" pos:end="67:50"><name pos:start="67:38" pos:end="67:45">sei_cont</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:50">pec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <default pos:start="71:9" pos:end="71:16">default:</default>

            <expr_stmt pos:start="73:13" pos:end="73:20"><expr pos:start="73:13" pos:end="73:19"><call pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:17">abort</name><argument_list pos:start="73:18" pos:end="73:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="77:9" pos:end="77:25"><expr pos:start="77:9" pos:end="77:24"><call pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:14">g_free</name><argument_list pos:start="77:15" pos:end="77:24">(<argument pos:start="77:16" pos:end="77:23"><expr pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:23">sei_cont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:15"><expr pos:start="79:9" pos:end="79:14"><name pos:start="79:9" pos:end="79:10">rc</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="85:5" pos:end="85:14">return <expr pos:start="85:12" pos:end="85:13"><name pos:start="85:12" pos:end="85:13">rc</name></expr>;</return>

</block_content>}</block></function>
</unit>
