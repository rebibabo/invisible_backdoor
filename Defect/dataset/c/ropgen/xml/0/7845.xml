<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7845.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mov_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="183:1">{<block_content pos:start="5:5" pos:end="181:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MOVContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mov</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">MOVAtom</name></type> <name pos:start="11:13" pos:end="11:16">atom</name> <init pos:start="11:18" pos:end="11:38">= <expr pos:start="11:20" pos:end="11:38"><block pos:start="11:20" pos:end="11:38">{ <macro pos:start="11:22" pos:end="11:36"><name pos:start="11:22" pos:end="11:28">AV_RL32</name><argument_list pos:start="11:29" pos:end="11:36">(<argument pos:start="11:30" pos:end="11:35"><literal type="string" pos:start="11:30" pos:end="11:35">"root"</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:16"><expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:7">mov</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:11">fc</name></name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:15">s</name></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="19:99">/* .mov and .mp4 aren't streamable anyway (only progressive download if moov is before mdat) */</comment>

    <if_stmt pos:start="21:5" pos:end="27:30"><if pos:start="21:5" pos:end="23:34">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:10">pb</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:20">seekable</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:34"><block_content pos:start="23:9" pos:end="23:34">

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:12">atom</name><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:17">size</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:33"><name pos:start="23:21" pos:end="23:29">avio_size</name><argument_list pos:start="23:30" pos:end="23:33">(<argument pos:start="23:31" pos:end="23:32"><expr pos:start="23:31" pos:end="23:32"><name pos:start="23:31" pos:end="23:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="25:5" pos:end="27:30">else<block type="pseudo" pos:start="27:9" pos:end="27:30"><block_content pos:start="27:9" pos:end="27:30">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">atom</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:17">size</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:29">INT64_MAX</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:26">/* check MOV header */</comment>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:52">(<expr pos:start="33:9" pos:end="33:51"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:12">err</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:46"><name pos:start="33:16" pos:end="33:31">mov_read_default</name><argument_list pos:start="33:32" pos:end="33:46">(<argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">mov</name></expr></argument>, <argument pos:start="33:38" pos:end="33:39"><expr pos:start="33:38" pos:end="33:39"><name pos:start="33:38" pos:end="33:39">pb</name></expr></argument>, <argument pos:start="33:42" pos:end="33:45"><expr pos:start="33:42" pos:end="33:45"><name pos:start="33:42" pos:end="33:45">atom</name></expr></argument>)</argument_list></call><operator pos:start="33:47" pos:end="33:47">)</operator> <operator pos:start="33:49" pos:end="33:49">&lt;</operator> <literal type="number" pos:start="33:51" pos:end="33:51">0</literal></expr>)</condition> <block pos:start="33:54" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:19">

        <expr_stmt pos:start="35:9" pos:end="35:67"><expr pos:start="35:9" pos:end="35:66"><call pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:66">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">s</name></expr></argument>, <argument pos:start="35:19" pos:end="35:30"><expr pos:start="35:19" pos:end="35:30"><name pos:start="35:19" pos:end="35:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:33" pos:end="35:60"><expr pos:start="35:33" pos:end="35:60"><literal type="string" pos:start="35:33" pos:end="35:60">"error reading header: %d\n"</literal></expr></argument>, <argument pos:start="35:63" pos:end="35:65"><expr pos:start="35:63" pos:end="35:65"><name pos:start="35:63" pos:end="35:65">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><call pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:22">mov_read_close</name><argument_list pos:start="37:23" pos:end="37:25">(<argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">err</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:25">(<expr pos:start="43:9" pos:end="43:24"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:24"><name pos:start="43:10" pos:end="43:12">mov</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:24">found_moov</name></name></expr>)</condition> <block pos:start="43:27" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:35">

        <expr_stmt pos:start="45:9" pos:end="45:57"><expr pos:start="45:9" pos:end="45:56"><call pos:start="45:9" pos:end="45:56"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:56">(<argument pos:start="45:16" pos:end="45:16"><expr pos:start="45:16" pos:end="45:16"><name pos:start="45:16" pos:end="45:16">s</name></expr></argument>, <argument pos:start="45:19" pos:end="45:30"><expr pos:start="45:19" pos:end="45:30"><name pos:start="45:19" pos:end="45:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:33" pos:end="45:55"><expr pos:start="45:33" pos:end="45:55"><literal type="string" pos:start="45:33" pos:end="45:55">"moov atom not found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><call pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:22">mov_read_close</name><argument_list pos:start="47:23" pos:end="47:25">(<argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:35">return <expr pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:72"><expr pos:start="53:5" pos:end="53:71"><call pos:start="53:5" pos:end="53:71"><name pos:start="53:5" pos:end="53:11">av_dlog</name><argument_list pos:start="53:12" pos:end="53:71">(<argument pos:start="53:13" pos:end="53:19"><expr pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:15">mov</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:19">fc</name></name></expr></argument>, <argument pos:start="53:22" pos:end="53:55"><expr pos:start="53:22" pos:end="53:55"><literal type="string" pos:start="53:22" pos:end="53:45">"on_parse_exit_offset=%"</literal><name pos:start="53:46" pos:end="53:51">PRId64</name><literal type="string" pos:start="53:52" pos:end="53:55">"\n"</literal></expr></argument>, <argument pos:start="53:58" pos:end="53:70"><expr pos:start="53:58" pos:end="53:70"><call pos:start="53:58" pos:end="53:70"><name pos:start="53:58" pos:end="53:66">avio_tell</name><argument_list pos:start="53:67" pos:end="53:70">(<argument pos:start="53:68" pos:end="53:69"><expr pos:start="53:68" pos:end="53:69"><name pos:start="53:68" pos:end="53:69">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="59:29"><if pos:start="57:5" pos:end="59:29">if <condition pos:start="57:8" pos:end="57:47">(<expr pos:start="57:9" pos:end="57:46"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:10">pb</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:20">seekable</name></name> <operator pos:start="57:22" pos:end="57:23">&amp;&amp;</operator> <name pos:start="57:25" pos:end="57:42"><name pos:start="57:25" pos:end="57:27">mov</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:42">chapter_track</name></name> <operator pos:start="57:44" pos:end="57:44">&gt;</operator> <literal type="number" pos:start="57:46" pos:end="57:46">0</literal></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:29"><block_content pos:start="59:9" pos:end="59:29">

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><call pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:25">mov_read_chapters</name><argument_list pos:start="59:26" pos:end="59:28">(<argument pos:start="59:27" pos:end="59:27"><expr pos:start="59:27" pos:end="59:27"><name pos:start="59:27" pos:end="59:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="63:5" pos:end="91:5">for <control pos:start="63:9" pos:end="63:39">(<init pos:start="63:10" pos:end="63:15"><expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:10">i</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>;</init> <condition pos:start="63:17" pos:end="63:34"><expr pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:19">&lt;</operator> <name pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:21">s</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:33">nb_streams</name></name></expr>;</condition> <incr pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:36">i</name><operator pos:start="63:37" pos:end="63:38">++</operator></expr></incr>)</control> <block pos:start="63:41" pos:end="91:5">{<block_content pos:start="65:9" pos:end="89:9">

        <decl_stmt pos:start="65:9" pos:end="65:37"><decl pos:start="65:9" pos:end="65:36"><type pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:16">AVStream</name> <modifier pos:start="65:18" pos:end="65:18">*</modifier></type><name pos:start="65:19" pos:end="65:20">st</name> <init pos:start="65:22" pos:end="65:36">= <expr pos:start="65:24" pos:end="65:36"><name pos:start="65:24" pos:end="65:36"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:33">streams</name><index pos:start="65:34" pos:end="65:36">[<expr pos:start="65:35" pos:end="65:35"><name pos:start="65:35" pos:end="65:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:45"><decl pos:start="67:9" pos:end="67:44"><type pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:24">MOVStreamContext</name> <modifier pos:start="67:26" pos:end="67:26">*</modifier></type><name pos:start="67:27" pos:end="67:28">sc</name> <init pos:start="67:30" pos:end="67:44">= <expr pos:start="67:32" pos:end="67:44"><name pos:start="67:32" pos:end="67:44"><name pos:start="67:32" pos:end="67:33">st</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:44">priv_data</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="71:9" pos:end="89:9"><if pos:start="71:9" pos:end="89:9">if <condition pos:start="71:12" pos:end="71:59">(<expr pos:start="71:13" pos:end="71:58"><name pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:14">st</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:21">codec</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:33">codec_type</name></name> <operator pos:start="71:35" pos:end="71:36">==</operator> <name pos:start="71:38" pos:end="71:58">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="71:61" pos:end="89:9">{<block_content pos:start="73:13" pos:end="87:13">

            <if_stmt pos:start="73:13" pos:end="79:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:63">(<expr pos:start="73:17" pos:end="73:62"><name pos:start="73:17" pos:end="73:32"><name pos:start="73:17" pos:end="73:18">st</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:25">codec</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:32">width</name></name> <operator pos:start="73:34" pos:end="73:35">&lt;=</operator> <literal type="number" pos:start="73:37" pos:end="73:37">0</literal> <operator pos:start="73:39" pos:end="73:40">&amp;&amp;</operator> <name pos:start="73:42" pos:end="73:57"><name pos:start="73:42" pos:end="73:43">st</name><operator pos:start="73:44" pos:end="73:45">-&gt;</operator><name pos:start="73:46" pos:end="73:50">codec</name><operator pos:start="73:51" pos:end="73:52">-&gt;</operator><name pos:start="73:53" pos:end="73:57">width</name></name> <operator pos:start="73:59" pos:end="73:60">&lt;=</operator> <literal type="number" pos:start="73:62" pos:end="73:62">0</literal></expr>)</condition> <block pos:start="73:65" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:47">

                <expr_stmt pos:start="75:17" pos:end="75:46"><expr pos:start="75:17" pos:end="75:45"><name pos:start="75:17" pos:end="75:32"><name pos:start="75:17" pos:end="75:18">st</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:25">codec</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:32">width</name></name>  <operator pos:start="75:35" pos:end="75:35">=</operator> <name pos:start="75:37" pos:end="75:45"><name pos:start="75:37" pos:end="75:38">sc</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:45">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:47"><expr pos:start="77:17" pos:end="77:46"><name pos:start="77:17" pos:end="77:33"><name pos:start="77:17" pos:end="77:18">st</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:25">codec</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:33">height</name></name> <operator pos:start="77:35" pos:end="77:35">=</operator> <name pos:start="77:37" pos:end="77:46"><name pos:start="77:37" pos:end="77:38">sc</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:46">height</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="87:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:64">(<expr pos:start="81:17" pos:end="81:63"><name pos:start="81:17" pos:end="81:35"><name pos:start="81:17" pos:end="81:18">st</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:25">codec</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:35">codec_id</name></name> <operator pos:start="81:37" pos:end="81:38">==</operator> <name pos:start="81:40" pos:end="81:63">AV_CODEC_ID_DVD_SUBTITLE</name></expr>)</condition> <block pos:start="81:66" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:31">

                <if_stmt pos:start="83:17" pos:end="85:31"><if pos:start="83:17" pos:end="85:31">if <condition pos:start="83:20" pos:end="83:66">(<expr pos:start="83:21" pos:end="83:65"><operator pos:start="83:21" pos:end="83:21">(</operator><name pos:start="83:22" pos:end="83:24">err</name> <operator pos:start="83:26" pos:end="83:26">=</operator> <call pos:start="83:28" pos:end="83:60"><name pos:start="83:28" pos:end="83:56">mov_rewrite_dvd_sub_extradata</name><argument_list pos:start="83:57" pos:end="83:60">(<argument pos:start="83:58" pos:end="83:59"><expr pos:start="83:58" pos:end="83:59"><name pos:start="83:58" pos:end="83:59">st</name></expr></argument>)</argument_list></call><operator pos:start="83:61" pos:end="83:61">)</operator> <operator pos:start="83:63" pos:end="83:63">&lt;</operator> <literal type="number" pos:start="83:65" pos:end="83:65">0</literal></expr>)</condition><block type="pseudo" pos:start="85:21" pos:end="85:31"><block_content pos:start="85:21" pos:end="85:31">

                    <return pos:start="85:21" pos:end="85:31">return <expr pos:start="85:28" pos:end="85:30"><name pos:start="85:28" pos:end="85:30">err</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="95:5" pos:end="109:5"><if pos:start="95:5" pos:end="109:5">if <condition pos:start="95:8" pos:end="95:23">(<expr pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:11">mov</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:22">trex_data</name></name></expr>)</condition> <block pos:start="95:25" pos:end="109:5">{<block_content pos:start="97:9" pos:end="107:9">

        <for pos:start="97:9" pos:end="107:9">for <control pos:start="97:13" pos:end="97:43">(<init pos:start="97:14" pos:end="97:19"><expr pos:start="97:14" pos:end="97:18"><name pos:start="97:14" pos:end="97:14">i</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <literal type="number" pos:start="97:18" pos:end="97:18">0</literal></expr>;</init> <condition pos:start="97:21" pos:end="97:38"><expr pos:start="97:21" pos:end="97:37"><name pos:start="97:21" pos:end="97:21">i</name> <operator pos:start="97:23" pos:end="97:23">&lt;</operator> <name pos:start="97:25" pos:end="97:37"><name pos:start="97:25" pos:end="97:25">s</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:37">nb_streams</name></name></expr>;</condition> <incr pos:start="97:40" pos:end="97:42"><expr pos:start="97:40" pos:end="97:42"><name pos:start="97:40" pos:end="97:40">i</name><operator pos:start="97:41" pos:end="97:42">++</operator></expr></incr>)</control> <block pos:start="97:45" pos:end="107:9">{<block_content pos:start="99:13" pos:end="105:88">

            <decl_stmt pos:start="99:13" pos:end="99:41"><decl pos:start="99:13" pos:end="99:40"><type pos:start="99:13" pos:end="99:22"><name pos:start="99:13" pos:end="99:20">AVStream</name> <modifier pos:start="99:22" pos:end="99:22">*</modifier></type><name pos:start="99:23" pos:end="99:24">st</name> <init pos:start="99:26" pos:end="99:40">= <expr pos:start="99:28" pos:end="99:40"><name pos:start="99:28" pos:end="99:40"><name pos:start="99:28" pos:end="99:28">s</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:37">streams</name><index pos:start="99:38" pos:end="99:40">[<expr pos:start="99:39" pos:end="99:39"><name pos:start="99:39" pos:end="99:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="101:13" pos:end="101:49"><decl pos:start="101:13" pos:end="101:48"><type pos:start="101:13" pos:end="101:30"><name pos:start="101:13" pos:end="101:28">MOVStreamContext</name> <modifier pos:start="101:30" pos:end="101:30">*</modifier></type><name pos:start="101:31" pos:end="101:32">sc</name> <init pos:start="101:34" pos:end="101:48">= <expr pos:start="101:36" pos:end="101:48"><name pos:start="101:36" pos:end="101:48"><name pos:start="101:36" pos:end="101:37">st</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:48">priv_data</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="103:13" pos:end="105:88"><if pos:start="103:13" pos:end="105:88">if <condition pos:start="103:16" pos:end="103:33">(<expr pos:start="103:17" pos:end="103:32"><name pos:start="103:17" pos:end="103:28"><name pos:start="103:17" pos:end="103:18">st</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:28">duration</name></name> <operator pos:start="103:30" pos:end="103:30">&gt;</operator> <literal type="number" pos:start="103:32" pos:end="103:32">0</literal></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:88"><block_content pos:start="105:17" pos:end="105:88">

                <expr_stmt pos:start="105:17" pos:end="105:88"><expr pos:start="105:17" pos:end="105:87"><name pos:start="105:17" pos:end="105:35"><name pos:start="105:17" pos:end="105:18">st</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:25">codec</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:35">bit_rate</name></name> <operator pos:start="105:37" pos:end="105:37">=</operator> <name pos:start="105:39" pos:end="105:51"><name pos:start="105:39" pos:end="105:40">sc</name><operator pos:start="105:41" pos:end="105:42">-&gt;</operator><name pos:start="105:43" pos:end="105:51">data_size</name></name> <operator pos:start="105:53" pos:end="105:53">*</operator> <literal type="number" pos:start="105:55" pos:end="105:55">8</literal> <operator pos:start="105:57" pos:end="105:57">*</operator> <name pos:start="105:59" pos:end="105:72"><name pos:start="105:59" pos:end="105:60">sc</name><operator pos:start="105:61" pos:end="105:62">-&gt;</operator><name pos:start="105:63" pos:end="105:72">time_scale</name></name> <operator pos:start="105:74" pos:end="105:74">/</operator> <name pos:start="105:76" pos:end="105:87"><name pos:start="105:76" pos:end="105:77">st</name><operator pos:start="105:78" pos:end="105:79">-&gt;</operator><name pos:start="105:80" pos:end="105:87">duration</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <for pos:start="113:5" pos:end="177:5">for <control pos:start="113:9" pos:end="113:39">(<init pos:start="113:10" pos:end="113:15"><expr pos:start="113:10" pos:end="113:14"><name pos:start="113:10" pos:end="113:10">i</name> <operator pos:start="113:12" pos:end="113:12">=</operator> <literal type="number" pos:start="113:14" pos:end="113:14">0</literal></expr>;</init> <condition pos:start="113:17" pos:end="113:34"><expr pos:start="113:17" pos:end="113:33"><name pos:start="113:17" pos:end="113:17">i</name> <operator pos:start="113:19" pos:end="113:19">&lt;</operator> <name pos:start="113:21" pos:end="113:33"><name pos:start="113:21" pos:end="113:21">s</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:33">nb_streams</name></name></expr>;</condition> <incr pos:start="113:36" pos:end="113:38"><expr pos:start="113:36" pos:end="113:38"><name pos:start="113:36" pos:end="113:36">i</name><operator pos:start="113:37" pos:end="113:38">++</operator></expr></incr>)</control> <block pos:start="113:41" pos:end="177:5">{<block_content pos:start="115:9" pos:end="175:9">

        <decl_stmt pos:start="115:9" pos:end="115:37"><decl pos:start="115:9" pos:end="115:36"><type pos:start="115:9" pos:end="115:18"><name pos:start="115:9" pos:end="115:16">AVStream</name> <modifier pos:start="115:18" pos:end="115:18">*</modifier></type><name pos:start="115:19" pos:end="115:20">st</name> <init pos:start="115:22" pos:end="115:36">= <expr pos:start="115:24" pos:end="115:36"><name pos:start="115:24" pos:end="115:36"><name pos:start="115:24" pos:end="115:24">s</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:33">streams</name><index pos:start="115:34" pos:end="115:36">[<expr pos:start="115:35" pos:end="115:35"><name pos:start="115:35" pos:end="115:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="117:9" pos:end="117:45"><decl pos:start="117:9" pos:end="117:44"><type pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:24">MOVStreamContext</name> <modifier pos:start="117:26" pos:end="117:26">*</modifier></type><name pos:start="117:27" pos:end="117:28">sc</name> <init pos:start="117:30" pos:end="117:44">= <expr pos:start="117:32" pos:end="117:44"><name pos:start="117:32" pos:end="117:44"><name pos:start="117:32" pos:end="117:33">st</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:44">priv_data</name></name></expr></init></decl>;</decl_stmt>



        <switch pos:start="121:9" pos:end="175:9">switch <condition pos:start="121:16" pos:end="121:38">(<expr pos:start="121:17" pos:end="121:37"><name pos:start="121:17" pos:end="121:37"><name pos:start="121:17" pos:end="121:18">st</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:25">codec</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:37">codec_type</name></name></expr>)</condition> <block pos:start="121:40" pos:end="175:9">{<block_content pos:start="123:9" pos:end="173:18">

        <case pos:start="123:9" pos:end="123:32">case <expr pos:start="123:14" pos:end="123:31"><name pos:start="123:14" pos:end="123:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="125:13" pos:end="125:56"><expr pos:start="125:13" pos:end="125:55"><name pos:start="125:13" pos:end="125:15">err</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <call pos:start="125:19" pos:end="125:55"><name pos:start="125:19" pos:end="125:38">ff_replaygain_export</name><argument_list pos:start="125:39" pos:end="125:55">(<argument pos:start="125:40" pos:end="125:41"><expr pos:start="125:40" pos:end="125:41"><name pos:start="125:40" pos:end="125:41">st</name></expr></argument>, <argument pos:start="125:44" pos:end="125:54"><expr pos:start="125:44" pos:end="125:54"><name pos:start="125:44" pos:end="125:54"><name pos:start="125:44" pos:end="125:44">s</name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:54">metadata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="133:13"><if pos:start="127:13" pos:end="133:13">if <condition pos:start="127:16" pos:end="127:24">(<expr pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:19">err</name> <operator pos:start="127:21" pos:end="127:21">&lt;</operator> <literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr>)</condition> <block pos:start="127:26" pos:end="133:13">{<block_content pos:start="129:17" pos:end="131:27">

                <expr_stmt pos:start="129:17" pos:end="129:34"><expr pos:start="129:17" pos:end="129:33"><call pos:start="129:17" pos:end="129:33"><name pos:start="129:17" pos:end="129:30">mov_read_close</name><argument_list pos:start="129:31" pos:end="129:33">(<argument pos:start="129:32" pos:end="129:32"><expr pos:start="129:32" pos:end="129:32"><name pos:start="129:32" pos:end="129:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="131:17" pos:end="131:27">return <expr pos:start="131:24" pos:end="131:26"><name pos:start="131:24" pos:end="131:26">err</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:32">case <expr pos:start="137:14" pos:end="137:31"><name pos:start="137:14" pos:end="137:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <if_stmt pos:start="139:13" pos:end="171:13"><if pos:start="139:13" pos:end="171:13">if <condition pos:start="139:16" pos:end="139:35">(<expr pos:start="139:17" pos:end="139:34"><name pos:start="139:17" pos:end="139:34"><name pos:start="139:17" pos:end="139:18">sc</name><operator pos:start="139:19" pos:end="139:20">-&gt;</operator><name pos:start="139:21" pos:end="139:34">display_matrix</name></name></expr>)</condition> <block pos:start="139:37" pos:end="171:13">{<block_content pos:start="141:17" pos:end="169:42">

                <decl_stmt pos:start="141:17" pos:end="141:43"><decl pos:start="141:17" pos:end="141:36"><type pos:start="141:17" pos:end="141:34"><name pos:start="141:17" pos:end="141:32">AVPacketSideData</name> <modifier pos:start="141:34" pos:end="141:34">*</modifier></type><name pos:start="141:35" pos:end="141:36">sd</name></decl>, <decl pos:start="141:39" pos:end="141:42"><type ref="prev" pos:start="141:17" pos:end="141:34"><modifier pos:start="141:39" pos:end="141:39">*</modifier></type><name pos:start="141:40" pos:end="141:42">tmp</name></decl>;</decl_stmt>



                <expr_stmt pos:start="145:17" pos:end="147:75"><expr pos:start="145:17" pos:end="147:74"><name pos:start="145:17" pos:end="145:19">tmp</name> <operator pos:start="145:21" pos:end="145:21">=</operator> <call pos:start="145:23" pos:end="147:74"><name pos:start="145:23" pos:end="145:38">av_realloc_array</name><argument_list pos:start="145:39" pos:end="147:74">(<argument pos:start="145:40" pos:end="145:52"><expr pos:start="145:40" pos:end="145:52"><name pos:start="145:40" pos:end="145:52"><name pos:start="145:40" pos:end="145:41">st</name><operator pos:start="145:42" pos:end="145:43">-&gt;</operator><name pos:start="145:44" pos:end="145:52">side_data</name></name></expr></argument>,

                                       <argument pos:start="147:40" pos:end="147:59"><expr pos:start="147:40" pos:end="147:59"><name pos:start="147:40" pos:end="147:55"><name pos:start="147:40" pos:end="147:41">st</name><operator pos:start="147:42" pos:end="147:43">-&gt;</operator><name pos:start="147:44" pos:end="147:55">nb_side_data</name></name> <operator pos:start="147:57" pos:end="147:57">+</operator> <literal type="number" pos:start="147:59" pos:end="147:59">1</literal></expr></argument>, <argument pos:start="147:62" pos:end="147:73"><expr pos:start="147:62" pos:end="147:73"><sizeof pos:start="147:62" pos:end="147:73">sizeof<argument_list pos:start="147:68" pos:end="147:73">(<argument pos:start="147:69" pos:end="147:72"><expr pos:start="147:69" pos:end="147:72"><operator pos:start="147:69" pos:end="147:69">*</operator><name pos:start="147:70" pos:end="147:72">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="149:17" pos:end="151:43"><if pos:start="149:17" pos:end="151:43">if <condition pos:start="149:20" pos:end="149:25">(<expr pos:start="149:21" pos:end="149:24"><operator pos:start="149:21" pos:end="149:21">!</operator><name pos:start="149:22" pos:end="149:24">tmp</name></expr>)</condition><block type="pseudo" pos:start="151:21" pos:end="151:43"><block_content pos:start="151:21" pos:end="151:43">

                    <return pos:start="151:21" pos:end="151:43">return <expr pos:start="151:28" pos:end="151:42"><call pos:start="151:28" pos:end="151:42"><name pos:start="151:28" pos:end="151:34">AVERROR</name><argument_list pos:start="151:35" pos:end="151:42">(<argument pos:start="151:36" pos:end="151:41"><expr pos:start="151:36" pos:end="151:41"><name pos:start="151:36" pos:end="151:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="155:17" pos:end="155:36"><expr pos:start="155:17" pos:end="155:35"><name pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:18">st</name><operator pos:start="155:19" pos:end="155:20">-&gt;</operator><name pos:start="155:21" pos:end="155:29">side_data</name></name> <operator pos:start="155:31" pos:end="155:31">=</operator> <name pos:start="155:33" pos:end="155:35">tmp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:35"><expr pos:start="157:17" pos:end="157:34"><name pos:start="157:17" pos:end="157:32"><name pos:start="157:17" pos:end="157:18">st</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:32">nb_side_data</name></name><operator pos:start="157:33" pos:end="157:34">++</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="161:17" pos:end="161:58"><expr pos:start="161:17" pos:end="161:57"><name pos:start="161:17" pos:end="161:18">sd</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <operator pos:start="161:22" pos:end="161:22">&amp;</operator><name pos:start="161:23" pos:end="161:57"><name pos:start="161:23" pos:end="161:24">st</name><operator pos:start="161:25" pos:end="161:26">-&gt;</operator><name pos:start="161:27" pos:end="161:35">side_data</name><index pos:start="161:36" pos:end="161:57">[<expr pos:start="161:37" pos:end="161:56"><name pos:start="161:37" pos:end="161:52"><name pos:start="161:37" pos:end="161:38">st</name><operator pos:start="161:39" pos:end="161:40">-&gt;</operator><name pos:start="161:41" pos:end="161:52">nb_side_data</name></name> <operator pos:start="161:54" pos:end="161:54">-</operator> <literal type="number" pos:start="161:56" pos:end="161:56">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:53"><expr pos:start="163:17" pos:end="163:52"><name pos:start="163:17" pos:end="163:24"><name pos:start="163:17" pos:end="163:18">sd</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:24">type</name></name> <operator pos:start="163:26" pos:end="163:26">=</operator> <name pos:start="163:28" pos:end="163:52">AV_PKT_DATA_DISPLAYMATRIX</name></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:47"><expr pos:start="165:17" pos:end="165:46"><name pos:start="165:17" pos:end="165:24"><name pos:start="165:17" pos:end="165:18">sd</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:24">size</name></name> <operator pos:start="165:26" pos:end="165:26">=</operator> <sizeof pos:start="165:28" pos:end="165:42">sizeof<argument_list pos:start="165:34" pos:end="165:42">(<argument pos:start="165:35" pos:end="165:41"><expr pos:start="165:35" pos:end="165:41"><name pos:start="165:35" pos:end="165:41">int32_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="165:44" pos:end="165:44">*</operator> <literal type="number" pos:start="165:46" pos:end="165:46">9</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:56"><expr pos:start="167:17" pos:end="167:55"><name pos:start="167:17" pos:end="167:24"><name pos:start="167:17" pos:end="167:18">sd</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:24">data</name></name> <operator pos:start="167:26" pos:end="167:26">=</operator> <operator pos:start="167:28" pos:end="167:28">(</operator><name pos:start="167:29" pos:end="167:35">uint8_t</name><operator pos:start="167:36" pos:end="167:36">*</operator><operator pos:start="167:37" pos:end="167:37">)</operator><name pos:start="167:38" pos:end="167:55"><name pos:start="167:38" pos:end="167:39">sc</name><operator pos:start="167:40" pos:end="167:41">-&gt;</operator><name pos:start="167:42" pos:end="167:55">display_matrix</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:42"><expr pos:start="169:17" pos:end="169:41"><name pos:start="169:17" pos:end="169:34"><name pos:start="169:17" pos:end="169:18">sc</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:34">display_matrix</name></name> <operator pos:start="169:36" pos:end="169:36">=</operator> <name pos:start="169:38" pos:end="169:41">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <return pos:start="181:5" pos:end="181:13">return <expr pos:start="181:12" pos:end="181:12"><literal type="number" pos:start="181:12" pos:end="181:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
