<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14238.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">mmu_translate_segment</name><parameter_list pos:start="1:33" pos:end="5:73">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:46">CPUS390XState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">env</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:65">target_ulong</name></type> <name pos:start="1:67" pos:end="1:71">vaddr</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:41">uint64_t</name></type> <name pos:start="3:43" pos:end="3:45">asc</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:64"><decl pos:start="3:48" pos:end="3:64"><type pos:start="3:48" pos:end="3:64"><name pos:start="3:48" pos:end="3:55">uint64_t</name></type> <name pos:start="3:57" pos:end="3:64">st_entry</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:52"><decl pos:start="5:34" pos:end="5:52"><type pos:start="5:34" pos:end="5:52"><name pos:start="5:34" pos:end="5:45">target_ulong</name> <modifier pos:start="5:47" pos:end="5:47">*</modifier></type><name pos:start="5:48" pos:end="5:52">raddr</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:64"><decl pos:start="5:55" pos:end="5:64"><type pos:start="5:55" pos:end="5:64"><name pos:start="5:55" pos:end="5:57">int</name> <modifier pos:start="5:59" pos:end="5:59">*</modifier></type><name pos:start="5:60" pos:end="5:64">flags</name></decl></parameter>, <parameter pos:start="5:67" pos:end="5:72"><decl pos:start="5:67" pos:end="5:72"><type pos:start="5:67" pos:end="5:72"><name pos:start="5:67" pos:end="5:69">int</name></type> <name pos:start="5:71" pos:end="5:72">rw</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:74">

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">CPUState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">cs</name> <init pos:start="9:18" pos:end="9:45">= <expr pos:start="9:20" pos:end="9:45"><call pos:start="9:20" pos:end="9:45"><name pos:start="9:20" pos:end="9:22">CPU</name><argument_list pos:start="9:23" pos:end="9:45">(<argument pos:start="9:24" pos:end="9:44"><expr pos:start="9:24" pos:end="9:44"><call pos:start="9:24" pos:end="9:44"><name pos:start="9:24" pos:end="9:39">s390_env_get_cpu</name><argument_list pos:start="9:40" pos:end="9:44">(<argument pos:start="9:41" pos:end="9:43"><expr pos:start="9:41" pos:end="9:43"><name pos:start="9:41" pos:end="9:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:19">origin</name></decl>, <decl pos:start="11:22" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:22" pos:end="11:25">offs</name></decl>, <decl pos:start="11:28" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:28" pos:end="11:35">pt_entry</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:37">(<expr pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:16">st_entry</name> <operator pos:start="15:18" pos:end="15:18">&amp;</operator> <name pos:start="15:20" pos:end="15:36">_SEGMENT_ENTRY_RO</name></expr>)</condition> <block pos:start="15:39" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:30">

        <expr_stmt pos:start="17:9" pos:end="17:30"><expr pos:start="17:9" pos:end="17:29"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:14">flags</name> <operator pos:start="17:16" pos:end="17:17">&amp;=</operator> <operator pos:start="17:19" pos:end="17:19">~</operator><name pos:start="17:20" pos:end="17:29">PAGE_WRITE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:69">(<expr pos:start="23:9" pos:end="23:68"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:17">st_entry</name> <operator pos:start="23:19" pos:end="23:19">&amp;</operator> <name pos:start="23:21" pos:end="23:37">_SEGMENT_ENTRY_FC</name><operator pos:start="23:38" pos:end="23:38">)</operator> <operator pos:start="23:40" pos:end="23:41">&amp;&amp;</operator> <operator pos:start="23:43" pos:end="23:43">(</operator><name pos:start="23:44" pos:end="23:56"><name pos:start="23:44" pos:end="23:46">env</name><operator pos:start="23:47" pos:end="23:48">-&gt;</operator><name pos:start="23:49" pos:end="23:53">cregs</name><index pos:start="23:54" pos:end="23:56">[<expr pos:start="23:55" pos:end="23:55"><literal type="number" pos:start="23:55" pos:end="23:55">0</literal></expr>]</index></name> <operator pos:start="23:58" pos:end="23:58">&amp;</operator> <name pos:start="23:60" pos:end="23:67">CR0_EDAT</name><operator pos:start="23:68" pos:end="23:68">)</operator></expr>)</condition> <block pos:start="23:71" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:17">

        <comment type="block" pos:start="25:9" pos:end="25:68">/* Decode EDAT1 segment frame absolute address (1MB page) */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:72"><expr pos:start="27:9" pos:end="27:71"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:14">raddr</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:26">st_entry</name> <operator pos:start="27:28" pos:end="27:28">&amp;</operator> <literal type="number" pos:start="27:30" pos:end="27:50">0xfffffffffff00000ULL</literal><operator pos:start="27:51" pos:end="27:51">)</operator> <operator pos:start="27:53" pos:end="27:53">|</operator> <operator pos:start="27:55" pos:end="27:55">(</operator><name pos:start="27:56" pos:end="27:60">vaddr</name> <operator pos:start="27:62" pos:end="27:62">&amp;</operator> <literal type="number" pos:start="27:64" pos:end="27:70">0xfffff</literal><operator pos:start="27:71" pos:end="27:71">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:67"><expr pos:start="29:9" pos:end="29:66"><call pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:19">PTE_DPRINTF</name><argument_list pos:start="29:20" pos:end="29:66">(<argument pos:start="29:21" pos:end="29:45"><expr pos:start="29:21" pos:end="29:45"><literal type="string" pos:start="29:21" pos:end="29:33">"%s: SEG=0x%"</literal> <name pos:start="29:35" pos:end="29:40">PRIx64</name> <literal type="string" pos:start="29:42" pos:end="29:45">"\n"</literal></expr></argument>, <argument pos:start="29:48" pos:end="29:55"><expr pos:start="29:48" pos:end="29:55"><name pos:start="29:48" pos:end="29:55">__func__</name></expr></argument>, <argument pos:start="29:58" pos:end="29:65"><expr pos:start="29:58" pos:end="29:65"><name pos:start="29:58" pos:end="29:65">st_entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:32">/* Look up 4KB page entry */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:46"><expr pos:start="39:5" pos:end="39:45"><name pos:start="39:5" pos:end="39:10">origin</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:21">st_entry</name> <operator pos:start="39:23" pos:end="39:23">&amp;</operator> <name pos:start="39:25" pos:end="39:45">_SEGMENT_ENTRY_ORIGIN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:8">offs</name>  <operator pos:start="41:11" pos:end="41:11">=</operator> <operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:18">vaddr</name> <operator pos:start="41:20" pos:end="41:20">&amp;</operator> <name pos:start="41:22" pos:end="41:29">VADDR_PX</name><operator pos:start="41:30" pos:end="41:30">)</operator> <operator pos:start="41:32" pos:end="41:33">&gt;&gt;</operator> <literal type="number" pos:start="41:35" pos:end="41:35">9</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:47"><expr pos:start="43:5" pos:end="43:46"><name pos:start="43:5" pos:end="43:12">pt_entry</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:46"><name pos:start="43:16" pos:end="43:23">ldq_phys</name><argument_list pos:start="43:24" pos:end="43:46">(<argument pos:start="43:25" pos:end="43:30"><expr pos:start="43:25" pos:end="43:30"><name pos:start="43:25" pos:end="43:30"><name pos:start="43:25" pos:end="43:26">cs</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:30">as</name></name></expr></argument>, <argument pos:start="43:33" pos:end="43:45"><expr pos:start="43:33" pos:end="43:45"><name pos:start="43:33" pos:end="43:38">origin</name> <operator pos:start="43:40" pos:end="43:40">+</operator> <name pos:start="43:42" pos:end="43:45">offs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:50"><expr pos:start="45:5" pos:end="47:49"><call pos:start="45:5" pos:end="47:49"><name pos:start="45:5" pos:end="45:15">PTE_DPRINTF</name><argument_list pos:start="45:16" pos:end="47:49">(<argument pos:start="45:17" pos:end="45:73"><expr pos:start="45:17" pos:end="45:73"><literal type="string" pos:start="45:17" pos:end="45:25">"%s: 0x%"</literal> <name pos:start="45:27" pos:end="45:32">PRIx64</name> <literal type="string" pos:start="45:34" pos:end="45:41">" + 0x%"</literal> <name pos:start="45:43" pos:end="45:48">PRIx64</name> <literal type="string" pos:start="45:50" pos:end="45:61">" =&gt; 0x%016"</literal> <name pos:start="45:63" pos:end="45:68">PRIx64</name> <literal type="string" pos:start="45:70" pos:end="45:73">"\n"</literal></expr></argument>,

                <argument pos:start="47:17" pos:end="47:24"><expr pos:start="47:17" pos:end="47:24"><name pos:start="47:17" pos:end="47:24">__func__</name></expr></argument>, <argument pos:start="47:27" pos:end="47:32"><expr pos:start="47:27" pos:end="47:32"><name pos:start="47:27" pos:end="47:32">origin</name></expr></argument>, <argument pos:start="47:35" pos:end="47:38"><expr pos:start="47:35" pos:end="47:38"><name pos:start="47:35" pos:end="47:38">offs</name></expr></argument>, <argument pos:start="47:41" pos:end="47:48"><expr pos:start="47:41" pos:end="47:48"><name pos:start="47:41" pos:end="47:48">pt_entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:74">return <expr pos:start="49:12" pos:end="49:73"><call pos:start="49:12" pos:end="49:73"><name pos:start="49:12" pos:end="49:28">mmu_translate_pte</name><argument_list pos:start="49:29" pos:end="49:73">(<argument pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><name pos:start="49:30" pos:end="49:32">env</name></expr></argument>, <argument pos:start="49:35" pos:end="49:39"><expr pos:start="49:35" pos:end="49:39"><name pos:start="49:35" pos:end="49:39">vaddr</name></expr></argument>, <argument pos:start="49:42" pos:end="49:44"><expr pos:start="49:42" pos:end="49:44"><name pos:start="49:42" pos:end="49:44">asc</name></expr></argument>, <argument pos:start="49:47" pos:end="49:54"><expr pos:start="49:47" pos:end="49:54"><name pos:start="49:47" pos:end="49:54">pt_entry</name></expr></argument>, <argument pos:start="49:57" pos:end="49:61"><expr pos:start="49:57" pos:end="49:61"><name pos:start="49:57" pos:end="49:61">raddr</name></expr></argument>, <argument pos:start="49:64" pos:end="49:68"><expr pos:start="49:64" pos:end="49:68"><name pos:start="49:64" pos:end="49:68">flags</name></expr></argument>, <argument pos:start="49:71" pos:end="49:72"><expr pos:start="49:71" pos:end="49:72"><name pos:start="49:71" pos:end="49:72">rw</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
