<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21778.c" pos:tabs="8"><function pos:start="1:1" pos:end="247:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:21">ff_gen_search</name><parameter_list pos:start="1:22" pos:end="7:101">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:58">stream_index</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:77"><decl pos:start="1:61" pos:end="1:77"><type pos:start="1:61" pos:end="1:77"><name pos:start="1:61" pos:end="1:67">int64_t</name></type> <name pos:start="1:69" pos:end="1:77">target_ts</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:37"><decl pos:start="3:23" pos:end="3:37"><type pos:start="3:23" pos:end="3:37"><name pos:start="3:23" pos:end="3:29">int64_t</name></type> <name pos:start="3:31" pos:end="3:37">pos_min</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:54"><decl pos:start="3:40" pos:end="3:54"><type pos:start="3:40" pos:end="3:54"><name pos:start="3:40" pos:end="3:46">int64_t</name></type> <name pos:start="3:48" pos:end="3:54">pos_max</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:73"><decl pos:start="3:57" pos:end="3:73"><type pos:start="3:57" pos:end="3:73"><name pos:start="3:57" pos:end="3:63">int64_t</name></type> <name pos:start="3:65" pos:end="3:73">pos_limit</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:36"><decl pos:start="5:23" pos:end="5:36"><type pos:start="5:23" pos:end="5:36"><name pos:start="5:23" pos:end="5:29">int64_t</name></type> <name pos:start="5:31" pos:end="5:36">ts_min</name></decl></parameter>, <parameter pos:start="5:39" pos:end="5:52"><decl pos:start="5:39" pos:end="5:52"><type pos:start="5:39" pos:end="5:52"><name pos:start="5:39" pos:end="5:45">int64_t</name></type> <name pos:start="5:47" pos:end="5:52">ts_max</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:63"><decl pos:start="5:55" pos:end="5:63"><type pos:start="5:55" pos:end="5:63"><name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:63">flags</name></decl></parameter>, <parameter pos:start="5:66" pos:end="5:80"><decl pos:start="5:66" pos:end="5:80"><type pos:start="5:66" pos:end="5:80"><name pos:start="5:66" pos:end="5:72">int64_t</name> <modifier pos:start="5:74" pos:end="5:74">*</modifier></type><name pos:start="5:75" pos:end="5:80">ts_ret</name></decl></parameter>,

                      <parameter pos:start="7:23" pos:end="7:100"><function_decl pos:start="7:23" pos:end="7:100"><type pos:start="7:23" pos:end="7:29"><name pos:start="7:23" pos:end="7:29">int64_t</name></type> (<modifier pos:start="7:32" pos:end="7:32">*</modifier><name pos:start="7:33" pos:end="7:46">read_timestamp</name>)<parameter_list pos:start="7:48" pos:end="7:100">(<parameter pos:start="7:49" pos:end="7:72"><decl pos:start="7:49" pos:end="7:72"><type pos:start="7:49" pos:end="7:72"><name pos:start="7:49" pos:end="7:70"><name pos:start="7:49" pos:end="7:54">struct</name> <name pos:start="7:56" pos:end="7:70">AVFormatContext</name></name> <modifier pos:start="7:72" pos:end="7:72">*</modifier></type></decl></parameter>, <parameter pos:start="7:75" pos:end="7:77"><decl pos:start="7:75" pos:end="7:77"><type pos:start="7:75" pos:end="7:77"><name pos:start="7:75" pos:end="7:77">int</name></type></decl></parameter> , <parameter pos:start="7:81" pos:end="7:89"><decl pos:start="7:81" pos:end="7:89"><type pos:start="7:81" pos:end="7:89"><name pos:start="7:81" pos:end="7:87">int64_t</name> <modifier pos:start="7:89" pos:end="7:89">*</modifier></type></decl></parameter>, <parameter pos:start="7:92" pos:end="7:98"><decl pos:start="7:92" pos:end="7:98"><type pos:start="7:92" pos:end="7:98"><name pos:start="7:92" pos:end="7:98">int64_t</name></type></decl></parameter> )</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="247:1">{<block_content pos:start="11:5" pos:end="245:15">

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pos</name></decl>, <decl pos:start="11:18" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:18" pos:end="11:19">ts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:21">start_pos</name></decl>, <decl pos:start="13:24" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:24" pos:end="13:31">filesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">no_change</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:72"><expr pos:start="19:5" pos:end="19:71"><call pos:start="19:5" pos:end="19:71"><name pos:start="19:5" pos:end="19:11">av_dlog</name><argument_list pos:start="19:12" pos:end="19:71">(<argument pos:start="19:13" pos:end="19:13"><expr pos:start="19:13" pos:end="19:13"><name pos:start="19:13" pos:end="19:13">s</name></expr></argument>, <argument pos:start="19:16" pos:end="19:34"><expr pos:start="19:16" pos:end="19:34"><literal type="string" pos:start="19:16" pos:end="19:34">"gen_seek: %d %s\n"</literal></expr></argument>, <argument pos:start="19:37" pos:end="19:48"><expr pos:start="19:37" pos:end="19:48"><name pos:start="19:37" pos:end="19:48">stream_index</name></expr></argument>, <argument pos:start="19:51" pos:end="19:70"><expr pos:start="19:51" pos:end="19:70"><call pos:start="19:51" pos:end="19:70"><name pos:start="19:51" pos:end="19:59">av_ts2str</name><argument_list pos:start="19:60" pos:end="19:70">(<argument pos:start="19:61" pos:end="19:69"><expr pos:start="19:61" pos:end="19:69"><name pos:start="19:61" pos:end="19:69">target_ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if<condition pos:start="23:7" pos:end="23:32">(<expr pos:start="23:8" pos:end="23:31"><name pos:start="23:8" pos:end="23:13">ts_min</name> <operator pos:start="23:15" pos:end="23:16">==</operator> <name pos:start="23:18" pos:end="23:31">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="23:33" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:22">

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:15">pos_min</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:32"><name pos:start="25:19" pos:end="25:19">s</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:32">data_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:89"><expr pos:start="27:9" pos:end="27:88"><name pos:start="27:9" pos:end="27:14">ts_min</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:88"><name pos:start="27:18" pos:end="27:34">ff_read_timestamp</name><argument_list pos:start="27:35" pos:end="27:88">(<argument pos:start="27:36" pos:end="27:36"><expr pos:start="27:36" pos:end="27:36"><name pos:start="27:36" pos:end="27:36">s</name></expr></argument>, <argument pos:start="27:39" pos:end="27:50"><expr pos:start="27:39" pos:end="27:50"><name pos:start="27:39" pos:end="27:50">stream_index</name></expr></argument>, <argument pos:start="27:53" pos:end="27:60"><expr pos:start="27:53" pos:end="27:60"><operator pos:start="27:53" pos:end="27:53">&amp;</operator><name pos:start="27:54" pos:end="27:60">pos_min</name></expr></argument>, <argument pos:start="27:63" pos:end="27:71"><expr pos:start="27:63" pos:end="27:71"><name pos:start="27:63" pos:end="27:71">INT64_MAX</name></expr></argument>, <argument pos:start="27:74" pos:end="27:87"><expr pos:start="27:74" pos:end="27:87"><name pos:start="27:74" pos:end="27:87">read_timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:22"><if pos:start="29:9" pos:end="31:22">if <condition pos:start="29:12" pos:end="29:37">(<expr pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:18">ts_min</name> <operator pos:start="29:20" pos:end="29:21">==</operator> <name pos:start="29:23" pos:end="29:36">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:22"><block_content pos:start="31:13" pos:end="31:22">

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if<condition pos:start="37:7" pos:end="37:27">(<expr pos:start="37:8" pos:end="37:26"><name pos:start="37:8" pos:end="37:13">ts_min</name> <operator pos:start="37:15" pos:end="37:16">&gt;=</operator> <name pos:start="37:18" pos:end="37:26">target_ts</name></expr>)</condition><block pos:start="37:28" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:23">

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><operator pos:start="39:9" pos:end="39:9">*</operator><name pos:start="39:10" pos:end="39:15">ts_ret</name><operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:23">ts_min</name></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:23">return <expr pos:start="41:16" pos:end="41:22"><name pos:start="41:16" pos:end="41:22">pos_min</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="97:5"><if pos:start="47:5" pos:end="97:5">if<condition pos:start="47:7" pos:end="47:32">(<expr pos:start="47:8" pos:end="47:31"><name pos:start="47:8" pos:end="47:13">ts_max</name> <operator pos:start="47:15" pos:end="47:16">==</operator> <name pos:start="47:18" pos:end="47:31">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="47:33" pos:end="97:5">{<block_content pos:start="49:9" pos:end="95:27">

        <decl_stmt pos:start="49:9" pos:end="49:27"><decl pos:start="49:9" pos:end="49:26"><type pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:15">int64_t</name></type> <name pos:start="49:17" pos:end="49:20">step</name><init pos:start="49:21" pos:end="49:26">= <expr pos:start="49:23" pos:end="49:26"><literal type="number" pos:start="49:23" pos:end="49:26">1024</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:22"><decl pos:start="51:9" pos:end="51:21"><type pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:15">int64_t</name></type> <name pos:start="51:17" pos:end="51:21">limit</name></decl>;</decl_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:36"><expr pos:start="53:9" pos:end="53:35"><name pos:start="53:9" pos:end="53:16">filesize</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:35"><name pos:start="53:20" pos:end="53:28">avio_size</name><argument_list pos:start="53:29" pos:end="53:35">(<argument pos:start="53:30" pos:end="53:34"><expr pos:start="53:30" pos:end="53:34"><name pos:start="53:30" pos:end="53:34"><name pos:start="53:30" pos:end="53:30">s</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:15">pos_max</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:26">filesize</name> <operator pos:start="55:28" pos:end="55:28">-</operator> <literal type="number" pos:start="55:30" pos:end="55:30">1</literal></expr>;</expr_stmt>

        <do pos:start="57:9" pos:end="67:56">do<block pos:start="57:11" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:25">

            <expr_stmt pos:start="59:13" pos:end="59:28"><expr pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:17">limit</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:27">pos_max</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:47"><expr pos:start="61:13" pos:end="61:46"><name pos:start="61:13" pos:end="61:19">pos_max</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <call pos:start="61:23" pos:end="61:46"><name pos:start="61:23" pos:end="61:27">FFMAX</name><argument_list pos:start="61:28" pos:end="61:46">(<argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">0</literal></expr></argument>, <argument pos:start="61:32" pos:end="61:45"><expr pos:start="61:32" pos:end="61:45"><name pos:start="61:32" pos:end="61:38">pos_max</name> <operator pos:start="61:40" pos:end="61:40">-</operator> <name pos:start="61:42" pos:end="61:45">step</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:89"><expr pos:start="63:13" pos:end="63:88"><name pos:start="63:13" pos:end="63:18">ts_max</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:88"><name pos:start="63:22" pos:end="63:38">ff_read_timestamp</name><argument_list pos:start="63:39" pos:end="63:88">(<argument pos:start="63:40" pos:end="63:40"><expr pos:start="63:40" pos:end="63:40"><name pos:start="63:40" pos:end="63:40">s</name></expr></argument>, <argument pos:start="63:43" pos:end="63:54"><expr pos:start="63:43" pos:end="63:54"><name pos:start="63:43" pos:end="63:54">stream_index</name></expr></argument>, <argument pos:start="63:57" pos:end="63:64"><expr pos:start="63:57" pos:end="63:64"><operator pos:start="63:57" pos:end="63:57">&amp;</operator><name pos:start="63:58" pos:end="63:64">pos_max</name></expr></argument>, <argument pos:start="63:67" pos:end="63:71"><expr pos:start="63:67" pos:end="63:71"><name pos:start="63:67" pos:end="63:71">limit</name></expr></argument>, <argument pos:start="63:74" pos:end="63:87"><expr pos:start="63:74" pos:end="63:87"><name pos:start="63:74" pos:end="63:87">read_timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:25"><expr pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:16">step</name> <operator pos:start="65:18" pos:end="65:19">+=</operator> <name pos:start="65:21" pos:end="65:24">step</name></expr>;</expr_stmt>

        </block_content>}</block>while<condition pos:start="67:15" pos:end="67:55">(<expr pos:start="67:16" pos:end="67:54"><name pos:start="67:16" pos:end="67:21">ts_max</name> <operator pos:start="67:23" pos:end="67:24">==</operator> <name pos:start="67:26" pos:end="67:39">AV_NOPTS_VALUE</name> <operator pos:start="67:41" pos:end="67:42">&amp;&amp;</operator> <name pos:start="67:44" pos:end="67:50">pos_max</name> <operator pos:start="67:52" pos:end="67:52">&gt;</operator> <literal type="number" pos:start="67:54" pos:end="67:54">0</literal></expr>)</condition>;</do>

        <if_stmt pos:start="69:9" pos:end="71:22"><if pos:start="69:9" pos:end="71:22">if <condition pos:start="69:12" pos:end="69:37">(<expr pos:start="69:13" pos:end="69:36"><name pos:start="69:13" pos:end="69:18">ts_max</name> <operator pos:start="69:20" pos:end="69:21">==</operator> <name pos:start="69:23" pos:end="69:36">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:22"><block_content pos:start="71:13" pos:end="71:22">

            <return pos:start="71:13" pos:end="71:22">return <expr pos:start="71:20" pos:end="71:21"><operator pos:start="71:20" pos:end="71:20">-</operator><literal type="number" pos:start="71:21" pos:end="71:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="75:9" pos:end="93:9">for<control pos:start="75:12" pos:end="75:15">(<init pos:start="75:13" pos:end="75:13">;</init><condition pos:start="75:14" pos:end="75:14">;</condition><incr/>)</control><block pos:start="75:16" pos:end="93:9">{<block_content pos:start="77:13" pos:end="91:22">

            <decl_stmt pos:start="77:13" pos:end="77:41"><decl pos:start="77:13" pos:end="77:40"><type pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:19">int64_t</name></type> <name pos:start="77:21" pos:end="77:27">tmp_pos</name><init pos:start="77:28" pos:end="77:40">= <expr pos:start="77:30" pos:end="77:40"><name pos:start="77:30" pos:end="77:36">pos_max</name> <operator pos:start="77:38" pos:end="77:38">+</operator> <literal type="number" pos:start="77:40" pos:end="77:40">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="79:13" pos:end="79:100"><decl pos:start="79:13" pos:end="79:99"><type pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:19">int64_t</name></type> <name pos:start="79:21" pos:end="79:26">tmp_ts</name><init pos:start="79:27" pos:end="79:99">= <expr pos:start="79:29" pos:end="79:99"><call pos:start="79:29" pos:end="79:99"><name pos:start="79:29" pos:end="79:45">ff_read_timestamp</name><argument_list pos:start="79:46" pos:end="79:99">(<argument pos:start="79:47" pos:end="79:47"><expr pos:start="79:47" pos:end="79:47"><name pos:start="79:47" pos:end="79:47">s</name></expr></argument>, <argument pos:start="79:50" pos:end="79:61"><expr pos:start="79:50" pos:end="79:61"><name pos:start="79:50" pos:end="79:61">stream_index</name></expr></argument>, <argument pos:start="79:64" pos:end="79:71"><expr pos:start="79:64" pos:end="79:71"><operator pos:start="79:64" pos:end="79:64">&amp;</operator><name pos:start="79:65" pos:end="79:71">tmp_pos</name></expr></argument>, <argument pos:start="79:74" pos:end="79:82"><expr pos:start="79:74" pos:end="79:82"><name pos:start="79:74" pos:end="79:82">INT64_MAX</name></expr></argument>, <argument pos:start="79:85" pos:end="79:98"><expr pos:start="79:85" pos:end="79:98"><name pos:start="79:85" pos:end="79:98">read_timestamp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="81:13" pos:end="83:22"><if pos:start="81:13" pos:end="83:22">if<condition pos:start="81:15" pos:end="81:40">(<expr pos:start="81:16" pos:end="81:39"><name pos:start="81:16" pos:end="81:21">tmp_ts</name> <operator pos:start="81:23" pos:end="81:24">==</operator> <name pos:start="81:26" pos:end="81:39">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:22"><block_content pos:start="83:17" pos:end="83:22">

                <break pos:start="83:17" pos:end="83:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:27"><expr pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:18">ts_max</name><operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:26">tmp_ts</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:29"><expr pos:start="87:13" pos:end="87:28"><name pos:start="87:13" pos:end="87:19">pos_max</name><operator pos:start="87:20" pos:end="87:20">=</operator> <name pos:start="87:22" pos:end="87:28">tmp_pos</name></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="91:22"><if pos:start="89:13" pos:end="91:22">if<condition pos:start="89:15" pos:end="89:35">(<expr pos:start="89:16" pos:end="89:34"><name pos:start="89:16" pos:end="89:22">tmp_pos</name> <operator pos:start="89:24" pos:end="89:25">&gt;=</operator> <name pos:start="89:27" pos:end="89:34">filesize</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:22"><block_content pos:start="91:17" pos:end="91:22">

                <break pos:start="91:17" pos:end="91:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="95:9" pos:end="95:27"><expr pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:17">pos_limit</name><operator pos:start="95:18" pos:end="95:18">=</operator> <name pos:start="95:20" pos:end="95:26">pos_max</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if<condition pos:start="101:7" pos:end="101:27">(<expr pos:start="101:8" pos:end="101:26"><name pos:start="101:8" pos:end="101:13">ts_max</name> <operator pos:start="101:15" pos:end="101:16">&lt;=</operator> <name pos:start="101:18" pos:end="101:26">target_ts</name></expr>)</condition><block pos:start="101:28" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:23">

        <expr_stmt pos:start="103:9" pos:end="103:24"><expr pos:start="103:9" pos:end="103:23"><operator pos:start="103:9" pos:end="103:9">*</operator><name pos:start="103:10" pos:end="103:15">ts_ret</name><operator pos:start="103:16" pos:end="103:16">=</operator> <name pos:start="103:18" pos:end="103:23">ts_max</name></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="105:23">return <expr pos:start="105:16" pos:end="105:22"><name pos:start="105:16" pos:end="105:22">pos_max</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="119:5"><if pos:start="111:5" pos:end="115:5">if<condition pos:start="111:7" pos:end="111:23">(<expr pos:start="111:8" pos:end="111:22"><name pos:start="111:8" pos:end="111:13">ts_min</name> <operator pos:start="111:15" pos:end="111:15">&gt;</operator> <name pos:start="111:17" pos:end="111:22">ts_max</name></expr>)</condition><block pos:start="111:24" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:18">

        <return pos:start="113:9" pos:end="113:18">return <expr pos:start="113:16" pos:end="113:17"><operator pos:start="113:16" pos:end="113:16">-</operator><literal type="number" pos:start="113:17" pos:end="113:17">1</literal></expr>;</return>

    </block_content>}</block></if><if type="elseif" pos:start="115:6" pos:end="119:5">else if<condition pos:start="115:13" pos:end="115:30">(<expr pos:start="115:14" pos:end="115:29"><name pos:start="115:14" pos:end="115:19">ts_min</name> <operator pos:start="115:21" pos:end="115:22">==</operator> <name pos:start="115:24" pos:end="115:29">ts_max</name></expr>)</condition><block pos:start="115:31" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:27">

        <expr_stmt pos:start="117:9" pos:end="117:27"><expr pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:17">pos_limit</name><operator pos:start="117:18" pos:end="117:18">=</operator> <name pos:start="117:20" pos:end="117:26">pos_min</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:16"><expr pos:start="123:5" pos:end="123:15"><name pos:start="123:5" pos:end="123:13">no_change</name><operator pos:start="123:14" pos:end="123:14">=</operator><literal type="number" pos:start="123:15" pos:end="123:15">0</literal></expr>;</expr_stmt>

    <while pos:start="125:5" pos:end="219:5">while <condition pos:start="125:11" pos:end="125:31">(<expr pos:start="125:12" pos:end="125:30"><name pos:start="125:12" pos:end="125:18">pos_min</name> <operator pos:start="125:20" pos:end="125:20">&lt;</operator> <name pos:start="125:22" pos:end="125:30">pos_limit</name></expr>)</condition> <block pos:start="125:33" pos:end="219:5">{<block_content pos:start="127:9" pos:end="217:9">

        <expr_stmt pos:start="127:9" pos:end="129:72"><expr pos:start="127:9" pos:end="129:71"><call pos:start="127:9" pos:end="129:71"><name pos:start="127:9" pos:end="127:15">av_dlog</name><argument_list pos:start="127:16" pos:end="129:71">(<argument pos:start="127:17" pos:end="127:17"><expr pos:start="127:17" pos:end="127:17"><name pos:start="127:17" pos:end="127:17">s</name></expr></argument>, <argument pos:start="127:20" pos:end="127:84"><expr pos:start="127:20" pos:end="127:84"><literal type="string" pos:start="127:20" pos:end="127:32">"pos_min=0x%"</literal><name pos:start="127:33" pos:end="127:38">PRIx64</name><literal type="string" pos:start="127:39" pos:end="127:52">" pos_max=0x%"</literal><name pos:start="127:53" pos:end="127:58">PRIx64</name><literal type="string" pos:start="127:59" pos:end="127:84">" dts_min=%s dts_max=%s\n"</literal></expr></argument>,

                <argument pos:start="129:17" pos:end="129:23"><expr pos:start="129:17" pos:end="129:23"><name pos:start="129:17" pos:end="129:23">pos_min</name></expr></argument>, <argument pos:start="129:26" pos:end="129:32"><expr pos:start="129:26" pos:end="129:32"><name pos:start="129:26" pos:end="129:32">pos_max</name></expr></argument>, <argument pos:start="129:35" pos:end="129:51"><expr pos:start="129:35" pos:end="129:51"><call pos:start="129:35" pos:end="129:51"><name pos:start="129:35" pos:end="129:43">av_ts2str</name><argument_list pos:start="129:44" pos:end="129:51">(<argument pos:start="129:45" pos:end="129:50"><expr pos:start="129:45" pos:end="129:50"><name pos:start="129:45" pos:end="129:50">ts_min</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="129:54" pos:end="129:70"><expr pos:start="129:54" pos:end="129:70"><call pos:start="129:54" pos:end="129:70"><name pos:start="129:54" pos:end="129:62">av_ts2str</name><argument_list pos:start="129:63" pos:end="129:70">(<argument pos:start="129:64" pos:end="129:69"><expr pos:start="129:64" pos:end="129:69"><name pos:start="129:64" pos:end="129:69">ts_max</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:37"><expr pos:start="131:9" pos:end="131:36"><call pos:start="131:9" pos:end="131:36"><name pos:start="131:9" pos:end="131:14">assert</name><argument_list pos:start="131:15" pos:end="131:36">(<argument pos:start="131:16" pos:end="131:35"><expr pos:start="131:16" pos:end="131:35"><name pos:start="131:16" pos:end="131:24">pos_limit</name> <operator pos:start="131:26" pos:end="131:27">&lt;=</operator> <name pos:start="131:29" pos:end="131:35">pos_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="135:9" pos:end="159:9"><if pos:start="135:9" pos:end="145:9">if<condition pos:start="135:11" pos:end="135:24">(<expr pos:start="135:12" pos:end="135:23"><name pos:start="135:12" pos:end="135:20">no_change</name><operator pos:start="135:21" pos:end="135:22">==</operator><literal type="number" pos:start="135:23" pos:end="135:23">0</literal></expr>)</condition><block pos:start="135:25" pos:end="145:9">{<block_content pos:start="137:13" pos:end="143:58">

            <decl_stmt pos:start="137:13" pos:end="137:71"><decl pos:start="137:13" pos:end="137:70"><type pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:19">int64_t</name></type> <name pos:start="137:21" pos:end="137:49">approximate_keyframe_distance</name><init pos:start="137:50" pos:end="137:70">= <expr pos:start="137:52" pos:end="137:70"><name pos:start="137:52" pos:end="137:58">pos_max</name> <operator pos:start="137:60" pos:end="137:60">-</operator> <name pos:start="137:62" pos:end="137:70">pos_limit</name></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:start="139:13" pos:end="139:59">// interpolate position (better than dichotomy)</comment>

            <expr_stmt pos:start="141:13" pos:end="143:58"><expr pos:start="141:13" pos:end="143:57"><name pos:start="141:13" pos:end="141:15">pos</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="141:84"><name pos:start="141:19" pos:end="141:28">av_rescale</name><argument_list pos:start="141:29" pos:end="141:84">(<argument pos:start="141:30" pos:end="141:47"><expr pos:start="141:30" pos:end="141:47"><name pos:start="141:30" pos:end="141:38">target_ts</name> <operator pos:start="141:40" pos:end="141:40">-</operator> <name pos:start="141:42" pos:end="141:47">ts_min</name></expr></argument>, <argument pos:start="141:50" pos:end="141:66"><expr pos:start="141:50" pos:end="141:66"><name pos:start="141:50" pos:end="141:56">pos_max</name> <operator pos:start="141:58" pos:end="141:58">-</operator> <name pos:start="141:60" pos:end="141:66">pos_min</name></expr></argument>, <argument pos:start="141:69" pos:end="141:83"><expr pos:start="141:69" pos:end="141:83"><name pos:start="141:69" pos:end="141:74">ts_max</name> <operator pos:start="141:76" pos:end="141:76">-</operator> <name pos:start="141:78" pos:end="141:83">ts_min</name></expr></argument>)</argument_list></call>

                <operator pos:start="143:17" pos:end="143:17">+</operator> <name pos:start="143:19" pos:end="143:25">pos_min</name> <operator pos:start="143:27" pos:end="143:27">-</operator> <name pos:start="143:29" pos:end="143:57">approximate_keyframe_distance</name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="145:10" pos:end="151:9">else if<condition pos:start="145:17" pos:end="145:30">(<expr pos:start="145:18" pos:end="145:29"><name pos:start="145:18" pos:end="145:26">no_change</name><operator pos:start="145:27" pos:end="145:28">==</operator><literal type="number" pos:start="145:29" pos:end="145:29">1</literal></expr>)</condition><block pos:start="145:31" pos:end="151:9">{<block_content pos:start="149:13" pos:end="149:43">

            <comment type="line" pos:start="147:13" pos:end="147:84">// bisection, if interpolation failed to change min or max pos last time</comment>

            <expr_stmt pos:start="149:13" pos:end="149:43"><expr pos:start="149:13" pos:end="149:42"><name pos:start="149:13" pos:end="149:15">pos</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <operator pos:start="149:19" pos:end="149:19">(</operator><name pos:start="149:20" pos:end="149:26">pos_min</name> <operator pos:start="149:28" pos:end="149:28">+</operator> <name pos:start="149:30" pos:end="149:38">pos_limit</name><operator pos:start="149:39" pos:end="149:39">)</operator><operator pos:start="149:40" pos:end="149:41">&gt;&gt;</operator><literal type="number" pos:start="149:42" pos:end="149:42">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="151:10" pos:end="159:9">else<block pos:start="151:14" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:24">

            <comment type="block" pos:start="153:13" pos:end="155:62">/* linear search if bisection failed, can only happen if there

               are very few or no keyframes between min/max */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:24"><expr pos:start="157:13" pos:end="157:23"><name pos:start="157:13" pos:end="157:15">pos</name><operator pos:start="157:16" pos:end="157:16">=</operator><name pos:start="157:17" pos:end="157:23">pos_min</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="161:9" pos:end="167:27"><if pos:start="161:9" pos:end="163:29">if<condition pos:start="161:11" pos:end="161:26">(<expr pos:start="161:12" pos:end="161:25"><name pos:start="161:12" pos:end="161:14">pos</name> <operator pos:start="161:16" pos:end="161:17">&lt;=</operator> <name pos:start="161:19" pos:end="161:25">pos_min</name></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:29"><block_content pos:start="163:13" pos:end="163:29">

            <expr_stmt pos:start="163:13" pos:end="163:29"><expr pos:start="163:13" pos:end="163:28"><name pos:start="163:13" pos:end="163:15">pos</name><operator pos:start="163:16" pos:end="163:16">=</operator> <name pos:start="163:18" pos:end="163:24">pos_min</name> <operator pos:start="163:26" pos:end="163:26">+</operator> <literal type="number" pos:start="163:28" pos:end="163:28">1</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="165:9" pos:end="167:27">else if<condition pos:start="165:16" pos:end="165:32">(<expr pos:start="165:17" pos:end="165:31"><name pos:start="165:17" pos:end="165:19">pos</name> <operator pos:start="165:21" pos:end="165:21">&gt;</operator> <name pos:start="165:23" pos:end="165:31">pos_limit</name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:27"><block_content pos:start="167:13" pos:end="167:27">

            <expr_stmt pos:start="167:13" pos:end="167:27"><expr pos:start="167:13" pos:end="167:26"><name pos:start="167:13" pos:end="167:15">pos</name><operator pos:start="167:16" pos:end="167:16">=</operator> <name pos:start="167:18" pos:end="167:26">pos_limit</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:23"><expr pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:17">start_pos</name><operator pos:start="169:18" pos:end="169:18">=</operator> <name pos:start="169:20" pos:end="169:22">pos</name></expr>;</expr_stmt>



        <expr_stmt pos:start="173:9" pos:end="173:81"><expr pos:start="173:9" pos:end="173:80"><name pos:start="173:9" pos:end="173:10">ts</name> <operator pos:start="173:12" pos:end="173:12">=</operator> <call pos:start="173:14" pos:end="173:80"><name pos:start="173:14" pos:end="173:30">ff_read_timestamp</name><argument_list pos:start="173:31" pos:end="173:80">(<argument pos:start="173:32" pos:end="173:32"><expr pos:start="173:32" pos:end="173:32"><name pos:start="173:32" pos:end="173:32">s</name></expr></argument>, <argument pos:start="173:35" pos:end="173:46"><expr pos:start="173:35" pos:end="173:46"><name pos:start="173:35" pos:end="173:46">stream_index</name></expr></argument>, <argument pos:start="173:49" pos:end="173:52"><expr pos:start="173:49" pos:end="173:52"><operator pos:start="173:49" pos:end="173:49">&amp;</operator><name pos:start="173:50" pos:end="173:52">pos</name></expr></argument>, <argument pos:start="173:55" pos:end="173:63"><expr pos:start="173:55" pos:end="173:63"><name pos:start="173:55" pos:end="173:63">INT64_MAX</name></expr></argument>, <argument pos:start="173:66" pos:end="173:79"><expr pos:start="173:66" pos:end="173:79"><name pos:start="173:66" pos:end="173:79">read_timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="173:83" pos:end="173:116">//may pass pos_limit instead of -1</comment>

        <if_stmt pos:start="175:9" pos:end="181:24"><if pos:start="175:9" pos:end="177:24">if<condition pos:start="175:11" pos:end="175:26">(<expr pos:start="175:12" pos:end="175:25"><name pos:start="175:12" pos:end="175:14">pos</name> <operator pos:start="175:16" pos:end="175:17">==</operator> <name pos:start="175:19" pos:end="175:25">pos_max</name></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:24"><block_content pos:start="177:13" pos:end="177:24">

            <expr_stmt pos:start="177:13" pos:end="177:24"><expr pos:start="177:13" pos:end="177:23"><name pos:start="177:13" pos:end="177:21">no_change</name><operator pos:start="177:22" pos:end="177:23">++</operator></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="179:9" pos:end="181:24">else<block type="pseudo" pos:start="181:13" pos:end="181:24"><block_content pos:start="181:13" pos:end="181:24">

            <expr_stmt pos:start="181:13" pos:end="181:24"><expr pos:start="181:13" pos:end="181:23"><name pos:start="181:13" pos:end="181:21">no_change</name><operator pos:start="181:22" pos:end="181:22">=</operator><literal type="number" pos:start="181:23" pos:end="181:23">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="183:9" pos:end="189:49"><expr pos:start="183:9" pos:end="189:48"><call pos:start="183:9" pos:end="189:48"><name pos:start="183:9" pos:end="183:15">av_dlog</name><argument_list pos:start="183:16" pos:end="189:48">(<argument pos:start="183:17" pos:end="183:17"><expr pos:start="183:17" pos:end="183:17"><name pos:start="183:17" pos:end="183:17">s</name></expr></argument>, <argument pos:start="183:20" pos:end="183:112"><expr pos:start="183:20" pos:end="183:112"><literal type="string" pos:start="183:20" pos:end="183:22">"%"</literal><name pos:start="183:23" pos:end="183:28">PRId64</name><literal type="string" pos:start="183:29" pos:end="183:32">" %"</literal><name pos:start="183:33" pos:end="183:38">PRId64</name><literal type="string" pos:start="183:39" pos:end="183:42">" %"</literal><name pos:start="183:43" pos:end="183:48">PRId64</name><literal type="string" pos:start="183:49" pos:end="183:79">" / %s %s %s target:%s limit:%"</literal><name pos:start="183:80" pos:end="183:85">PRId64</name><literal type="string" pos:start="183:86" pos:end="183:95">" start:%"</literal><name pos:start="183:96" pos:end="183:101">PRId64</name><literal type="string" pos:start="183:102" pos:end="183:112">" noc:%d\n"</literal></expr></argument>,

                <argument pos:start="185:17" pos:end="185:23"><expr pos:start="185:17" pos:end="185:23"><name pos:start="185:17" pos:end="185:23">pos_min</name></expr></argument>, <argument pos:start="185:26" pos:end="185:28"><expr pos:start="185:26" pos:end="185:28"><name pos:start="185:26" pos:end="185:28">pos</name></expr></argument>, <argument pos:start="185:31" pos:end="185:37"><expr pos:start="185:31" pos:end="185:37"><name pos:start="185:31" pos:end="185:37">pos_max</name></expr></argument>,

                <argument pos:start="187:17" pos:end="187:33"><expr pos:start="187:17" pos:end="187:33"><call pos:start="187:17" pos:end="187:33"><name pos:start="187:17" pos:end="187:25">av_ts2str</name><argument_list pos:start="187:26" pos:end="187:33">(<argument pos:start="187:27" pos:end="187:32"><expr pos:start="187:27" pos:end="187:32"><name pos:start="187:27" pos:end="187:32">ts_min</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="187:36" pos:end="187:48"><expr pos:start="187:36" pos:end="187:48"><call pos:start="187:36" pos:end="187:48"><name pos:start="187:36" pos:end="187:44">av_ts2str</name><argument_list pos:start="187:45" pos:end="187:48">(<argument pos:start="187:46" pos:end="187:47"><expr pos:start="187:46" pos:end="187:47"><name pos:start="187:46" pos:end="187:47">ts</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="187:51" pos:end="187:67"><expr pos:start="187:51" pos:end="187:67"><call pos:start="187:51" pos:end="187:67"><name pos:start="187:51" pos:end="187:59">av_ts2str</name><argument_list pos:start="187:60" pos:end="187:67">(<argument pos:start="187:61" pos:end="187:66"><expr pos:start="187:61" pos:end="187:66"><name pos:start="187:61" pos:end="187:66">ts_max</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="187:70" pos:end="187:89"><expr pos:start="187:70" pos:end="187:89"><call pos:start="187:70" pos:end="187:89"><name pos:start="187:70" pos:end="187:78">av_ts2str</name><argument_list pos:start="187:79" pos:end="187:89">(<argument pos:start="187:80" pos:end="187:88"><expr pos:start="187:80" pos:end="187:88"><name pos:start="187:80" pos:end="187:88">target_ts</name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="189:17" pos:end="189:25"><expr pos:start="189:17" pos:end="189:25"><name pos:start="189:17" pos:end="189:25">pos_limit</name></expr></argument>, <argument pos:start="189:28" pos:end="189:36"><expr pos:start="189:28" pos:end="189:36"><name pos:start="189:28" pos:end="189:36">start_pos</name></expr></argument>, <argument pos:start="189:39" pos:end="189:47"><expr pos:start="189:39" pos:end="189:47"><name pos:start="189:39" pos:end="189:47">no_change</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="197:9"><if pos:start="191:9" pos:end="197:9">if<condition pos:start="191:11" pos:end="191:32">(<expr pos:start="191:12" pos:end="191:31"><name pos:start="191:12" pos:end="191:13">ts</name> <operator pos:start="191:15" pos:end="191:16">==</operator> <name pos:start="191:18" pos:end="191:31">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="191:33" pos:end="197:9">{<block_content pos:start="193:13" pos:end="195:22">

            <expr_stmt pos:start="193:13" pos:end="193:79"><expr pos:start="193:13" pos:end="193:78"><call pos:start="193:13" pos:end="193:78"><name pos:start="193:13" pos:end="193:18">av_log</name><argument_list pos:start="193:19" pos:end="193:78">(<argument pos:start="193:20" pos:end="193:20"><expr pos:start="193:20" pos:end="193:20"><name pos:start="193:20" pos:end="193:20">s</name></expr></argument>, <argument pos:start="193:23" pos:end="193:34"><expr pos:start="193:23" pos:end="193:34"><name pos:start="193:23" pos:end="193:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="193:37" pos:end="193:77"><expr pos:start="193:37" pos:end="193:77"><literal type="string" pos:start="193:37" pos:end="193:77">"read_timestamp() failed in the middle\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="195:13" pos:end="195:22">return <expr pos:start="195:20" pos:end="195:21"><operator pos:start="195:20" pos:end="195:20">-</operator><literal type="number" pos:start="195:21" pos:end="195:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:37"><expr pos:start="199:9" pos:end="199:36"><call pos:start="199:9" pos:end="199:36"><name pos:start="199:9" pos:end="199:14">assert</name><argument_list pos:start="199:15" pos:end="199:36">(<argument pos:start="199:16" pos:end="199:35"><expr pos:start="199:16" pos:end="199:35"><name pos:start="199:16" pos:end="199:17">ts</name> <operator pos:start="199:19" pos:end="199:20">!=</operator> <name pos:start="199:22" pos:end="199:35">AV_NOPTS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="209:9"><if pos:start="201:9" pos:end="209:9">if <condition pos:start="201:12" pos:end="201:28">(<expr pos:start="201:13" pos:end="201:27"><name pos:start="201:13" pos:end="201:21">target_ts</name> <operator pos:start="201:23" pos:end="201:24">&lt;=</operator> <name pos:start="201:26" pos:end="201:27">ts</name></expr>)</condition> <block pos:start="201:30" pos:end="209:9">{<block_content pos:start="203:13" pos:end="207:24">

            <expr_stmt pos:start="203:13" pos:end="203:38"><expr pos:start="203:13" pos:end="203:37"><name pos:start="203:13" pos:end="203:21">pos_limit</name> <operator pos:start="203:23" pos:end="203:23">=</operator> <name pos:start="203:25" pos:end="203:33">start_pos</name> <operator pos:start="203:35" pos:end="203:35">-</operator> <literal type="number" pos:start="203:37" pos:end="203:37">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:26"><expr pos:start="205:13" pos:end="205:25"><name pos:start="205:13" pos:end="205:19">pos_max</name> <operator pos:start="205:21" pos:end="205:21">=</operator> <name pos:start="205:23" pos:end="205:25">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:24"><expr pos:start="207:13" pos:end="207:23"><name pos:start="207:13" pos:end="207:18">ts_max</name> <operator pos:start="207:20" pos:end="207:20">=</operator> <name pos:start="207:22" pos:end="207:23">ts</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="211:9" pos:end="217:9"><if pos:start="211:9" pos:end="217:9">if <condition pos:start="211:12" pos:end="211:28">(<expr pos:start="211:13" pos:end="211:27"><name pos:start="211:13" pos:end="211:21">target_ts</name> <operator pos:start="211:23" pos:end="211:24">&gt;=</operator> <name pos:start="211:26" pos:end="211:27">ts</name></expr>)</condition> <block pos:start="211:30" pos:end="217:9">{<block_content pos:start="213:13" pos:end="215:24">

            <expr_stmt pos:start="213:13" pos:end="213:26"><expr pos:start="213:13" pos:end="213:25"><name pos:start="213:13" pos:end="213:19">pos_min</name> <operator pos:start="213:21" pos:end="213:21">=</operator> <name pos:start="213:23" pos:end="213:25">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:24"><expr pos:start="215:13" pos:end="215:23"><name pos:start="215:13" pos:end="215:18">ts_min</name> <operator pos:start="215:20" pos:end="215:20">=</operator> <name pos:start="215:22" pos:end="215:23">ts</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="223:5" pos:end="223:61"><expr pos:start="223:5" pos:end="223:60"><name pos:start="223:5" pos:end="223:7">pos</name> <operator pos:start="223:9" pos:end="223:9">=</operator> <ternary pos:start="223:11" pos:end="223:60"><condition pos:start="223:11" pos:end="223:42"><expr pos:start="223:11" pos:end="223:40"><operator pos:start="223:11" pos:end="223:11">(</operator><name pos:start="223:12" pos:end="223:16">flags</name> <operator pos:start="223:18" pos:end="223:18">&amp;</operator> <name pos:start="223:20" pos:end="223:39">AVSEEK_FLAG_BACKWARD</name><operator pos:start="223:40" pos:end="223:40">)</operator></expr> ?</condition><then pos:start="223:44" pos:end="223:50"> <expr pos:start="223:44" pos:end="223:50"><name pos:start="223:44" pos:end="223:50">pos_min</name></expr> </then><else pos:start="223:52" pos:end="223:60">: <expr pos:start="223:54" pos:end="223:60"><name pos:start="223:54" pos:end="223:60">pos_max</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="242:0"><expr pos:start="225:5" pos:end="225:60"><name pos:start="225:5" pos:end="225:6">ts</name>  <operator pos:start="225:9" pos:end="225:9">=</operator> <ternary pos:start="225:11" pos:end="225:60"><condition pos:start="225:11" pos:end="225:42"><expr pos:start="225:11" pos:end="225:40"><operator pos:start="225:11" pos:end="225:11">(</operator><name pos:start="225:12" pos:end="225:16">flags</name> <operator pos:start="225:18" pos:end="225:18">&amp;</operator> <name pos:start="225:20" pos:end="225:39">AVSEEK_FLAG_BACKWARD</name><operator pos:start="225:40" pos:end="225:40">)</operator></expr> ?</condition><then pos:start="225:45" pos:end="225:50">  <expr pos:start="225:45" pos:end="225:50"><name pos:start="225:45" pos:end="225:50">ts_min</name></expr> </then><else pos:start="225:52" pos:end="225:60">:  <expr pos:start="225:55" pos:end="225:60"><name pos:start="225:55" pos:end="225:60">ts_max</name></expr></else></ternary></expr>;</expr_stmt>

<cpp:if pos:start="227:1" pos:end="227:5">#<cpp:directive pos:start="227:2" pos:end="227:3">if</cpp:directive> <expr pos:start="227:5" pos:end="227:5"><literal type="number" pos:start="227:5" pos:end="227:5">0</literal></expr></cpp:if>

    pos_min = pos;

    ts_min = ff_read_timestamp(s, stream_index, &amp;pos_min, INT64_MAX, read_timestamp);

    pos_min++;

    ts_max = ff_read_timestamp(s, stream_index, &amp;pos_min, INT64_MAX, read_timestamp);

    av_dlog(s, "pos=0x%"PRIx64" %s&lt;=%s&lt;=%s\n",

            pos, av_ts2str(ts_min), av_ts2str(target_ts), av_ts2str(ts_max));

<cpp:endif pos:start="241:1" pos:end="241:6">#<cpp:directive pos:start="241:2" pos:end="241:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="243:5" pos:end="243:16"><expr pos:start="243:5" pos:end="243:15"><operator pos:start="243:5" pos:end="243:5">*</operator><name pos:start="243:6" pos:end="243:11">ts_ret</name><operator pos:start="243:12" pos:end="243:12">=</operator> <name pos:start="243:14" pos:end="243:15">ts</name></expr>;</expr_stmt>

    <return pos:start="245:5" pos:end="245:15">return <expr pos:start="245:12" pos:end="245:14"><name pos:start="245:12" pos:end="245:14">pos</name></expr>;</return>

</block_content>}</block></function>
</unit>
