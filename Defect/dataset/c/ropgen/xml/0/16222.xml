<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16222.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:9"><name pos:start="1:1" pos:end="1:7">uint8_t</name> <modifier pos:start="1:9" pos:end="1:9">*</modifier></type><name pos:start="1:10" pos:end="1:32">av_packet_new_side_data</name><parameter_list pos:start="1:33" pos:end="3:42">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:41">AVPacket</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">pkt</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:78"><decl pos:start="1:49" pos:end="1:78"><type pos:start="1:49" pos:end="1:78"><name pos:start="1:49" pos:end="1:73"><name pos:start="1:49" pos:end="1:52">enum</name> <name pos:start="1:54" pos:end="1:73">AVPacketSideDataType</name></name></type> <name pos:start="1:75" pos:end="1:78">type</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:41"><decl pos:start="3:34" pos:end="3:41"><type pos:start="3:34" pos:end="3:41"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:41">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:16">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">data</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:64">(<expr pos:start="13:9" pos:end="13:63"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:17">unsigned</name><operator pos:start="13:18" pos:end="13:18">)</operator><name pos:start="13:19" pos:end="13:22">size</name> <operator pos:start="13:24" pos:end="13:24">&gt;</operator> <name pos:start="13:26" pos:end="13:32">INT_MAX</name> <operator pos:start="13:34" pos:end="13:34">-</operator> <name pos:start="13:36" pos:end="13:63">AV_INPUT_BUFFER_PADDING_SIZE</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:58"><expr pos:start="17:5" pos:end="17:57"><name pos:start="17:5" pos:end="17:8">data</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:57"><name pos:start="17:12" pos:end="17:20">av_malloc</name><argument_list pos:start="17:21" pos:end="17:57">(<argument pos:start="17:22" pos:end="17:56"><expr pos:start="17:22" pos:end="17:56"><name pos:start="17:22" pos:end="17:25">size</name> <operator pos:start="17:27" pos:end="17:27">+</operator> <name pos:start="17:29" pos:end="17:56">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:20"><if pos:start="19:5" pos:end="21:20">if <condition pos:start="19:8" pos:end="19:14">(<expr pos:start="19:9" pos:end="19:13"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:13">data</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:20"><block_content pos:start="21:9" pos:end="21:20">

        <return pos:start="21:9" pos:end="21:20">return <expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:57"><expr pos:start="25:5" pos:end="25:56"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:56"><name pos:start="25:11" pos:end="25:33">av_packet_add_side_data</name><argument_list pos:start="25:34" pos:end="25:56">(<argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:37">pkt</name></expr></argument>, <argument pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:43"><name pos:start="25:40" pos:end="25:43">type</name></expr></argument>, <argument pos:start="25:46" pos:end="25:49"><expr pos:start="25:46" pos:end="25:49"><name pos:start="25:46" pos:end="25:49">data</name></expr></argument>, <argument pos:start="25:52" pos:end="25:55"><expr pos:start="25:52" pos:end="25:55"><name pos:start="25:52" pos:end="25:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:20">

        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><call pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:16">av_freep</name><argument_list pos:start="29:17" pos:end="29:23">(<argument pos:start="29:18" pos:end="29:22"><expr pos:start="29:18" pos:end="29:22"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:22">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="37:5" pos:end="37:16">return <expr pos:start="37:12" pos:end="37:15"><name pos:start="37:12" pos:end="37:15">data</name></expr>;</return>

</block_content>}</block></function>
</unit>
