<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7427.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">cpudef_setfield</name><parameter_list pos:start="1:27" pos:end="1:75">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">name</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">str</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:66">void</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:74">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">x86_def_t</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">def</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="69:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:30">(<expr pos:start="11:9" pos:end="11:29"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:29"><name pos:start="11:10" pos:end="11:15">strcmp</name><argument_list pos:start="11:16" pos:end="11:29">(<argument pos:start="11:17" pos:end="11:20"><expr pos:start="11:17" pos:end="11:20"><name pos:start="11:17" pos:end="11:20">name</name></expr></argument>, <argument pos:start="11:23" pos:end="11:28"><expr pos:start="11:23" pos:end="11:28"><literal type="string" pos:start="11:23" pos:end="11:28">"name"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:32" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:32">

        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:11">def</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:17">name</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <call pos:start="13:21" pos:end="13:31"><name pos:start="13:21" pos:end="13:26">strdup</name><argument_list pos:start="13:27" pos:end="13:31">(<argument pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><name pos:start="13:28" pos:end="13:30">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="19:5">else if <condition pos:start="15:15" pos:end="15:41">(<expr pos:start="15:16" pos:end="15:40"><operator pos:start="15:16" pos:end="15:16">!</operator><call pos:start="15:17" pos:end="15:40"><name pos:start="15:17" pos:end="15:22">strcmp</name><argument_list pos:start="15:23" pos:end="15:40">(<argument pos:start="15:24" pos:end="15:27"><expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">name</name></expr></argument>, <argument pos:start="15:30" pos:end="15:39"><expr pos:start="15:30" pos:end="15:39"><literal type="string" pos:start="15:30" pos:end="15:39">"model_id"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:43" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:60">

        <expr_stmt pos:start="17:9" pos:end="17:60"><expr pos:start="17:9" pos:end="17:59"><call pos:start="17:9" pos:end="17:59"><name pos:start="17:9" pos:end="17:15">strncpy</name><argument_list pos:start="17:16" pos:end="17:59">(<argument pos:start="17:17" pos:end="17:29"><expr pos:start="17:17" pos:end="17:29"><name pos:start="17:17" pos:end="17:29"><name pos:start="17:17" pos:end="17:19">def</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:29">model_id</name></name></expr></argument>, <argument pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><name pos:start="17:32" pos:end="17:34">str</name></expr></argument>, <argument pos:start="17:37" pos:end="17:58"><expr pos:start="17:37" pos:end="17:58"><sizeof pos:start="17:37" pos:end="17:58">sizeof <argument_list pos:start="17:44" pos:end="17:58">(<argument pos:start="17:45" pos:end="17:57"><expr pos:start="17:45" pos:end="17:57"><name pos:start="17:45" pos:end="17:57"><name pos:start="17:45" pos:end="17:47">def</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:57">model_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="23:5">else if <condition pos:start="19:15" pos:end="19:38">(<expr pos:start="19:16" pos:end="19:37"><operator pos:start="19:16" pos:end="19:16">!</operator><call pos:start="19:17" pos:end="19:37"><name pos:start="19:17" pos:end="19:22">strcmp</name><argument_list pos:start="19:23" pos:end="19:37">(<argument pos:start="19:24" pos:end="19:27"><expr pos:start="19:24" pos:end="19:27"><name pos:start="19:24" pos:end="19:27">name</name></expr></argument>, <argument pos:start="19:30" pos:end="19:36"><expr pos:start="19:30" pos:end="19:36"><literal type="string" pos:start="19:30" pos:end="19:36">"level"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:40" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:41">

        <macro pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:17">setscalar</name><argument_list pos:start="21:18" pos:end="21:41">(<argument pos:start="21:19" pos:end="21:29">&amp;def-&gt;level</argument>, <argument pos:start="21:32" pos:end="21:34">str</argument>, <argument pos:start="21:37" pos:end="21:40">&amp;err</argument>)</argument_list></macro>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="31:5">else if <condition pos:start="23:15" pos:end="23:39">(<expr pos:start="23:16" pos:end="23:38"><operator pos:start="23:16" pos:end="23:16">!</operator><call pos:start="23:17" pos:end="23:38"><name pos:start="23:17" pos:end="23:22">strcmp</name><argument_list pos:start="23:23" pos:end="23:38">(<argument pos:start="23:24" pos:end="23:27"><expr pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:27">name</name></expr></argument>, <argument pos:start="23:30" pos:end="23:37"><expr pos:start="23:30" pos:end="23:37"><literal type="string" pos:start="23:30" pos:end="23:37">"vendor"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:41" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:38">

        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><call pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:13">cpyid</name><argument_list pos:start="25:14" pos:end="25:37">(<argument pos:start="25:15" pos:end="25:21"><expr pos:start="25:15" pos:end="25:21"><operator pos:start="25:15" pos:end="25:15">&amp;</operator><name pos:start="25:16" pos:end="25:21"><name pos:start="25:16" pos:end="25:18">str</name><index pos:start="25:19" pos:end="25:21">[<expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:24" pos:end="25:36"><expr pos:start="25:24" pos:end="25:36"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:27">def</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:36">vendor1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:13">cpyid</name><argument_list pos:start="27:14" pos:end="27:37">(<argument pos:start="27:15" pos:end="27:21"><expr pos:start="27:15" pos:end="27:21"><operator pos:start="27:15" pos:end="27:15">&amp;</operator><name pos:start="27:16" pos:end="27:21"><name pos:start="27:16" pos:end="27:18">str</name><index pos:start="27:19" pos:end="27:21">[<expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:24" pos:end="27:36"><expr pos:start="27:24" pos:end="27:36"><operator pos:start="27:24" pos:end="27:24">&amp;</operator><name pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:27">def</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:36">vendor2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><call pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:13">cpyid</name><argument_list pos:start="29:14" pos:end="29:37">(<argument pos:start="29:15" pos:end="29:21"><expr pos:start="29:15" pos:end="29:21"><operator pos:start="29:15" pos:end="29:15">&amp;</operator><name pos:start="29:16" pos:end="29:21"><name pos:start="29:16" pos:end="29:18">str</name><index pos:start="29:19" pos:end="29:21">[<expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:24" pos:end="29:36"><expr pos:start="29:24" pos:end="29:36"><operator pos:start="29:24" pos:end="29:24">&amp;</operator><name pos:start="29:25" pos:end="29:36"><name pos:start="29:25" pos:end="29:27">def</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:36">vendor3</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="35:5">else if <condition pos:start="31:15" pos:end="31:39">(<expr pos:start="31:16" pos:end="31:38"><operator pos:start="31:16" pos:end="31:16">!</operator><call pos:start="31:17" pos:end="31:38"><name pos:start="31:17" pos:end="31:22">strcmp</name><argument_list pos:start="31:23" pos:end="31:38">(<argument pos:start="31:24" pos:end="31:27"><expr pos:start="31:24" pos:end="31:27"><name pos:start="31:24" pos:end="31:27">name</name></expr></argument>, <argument pos:start="31:30" pos:end="31:37"><expr pos:start="31:30" pos:end="31:37"><literal type="string" pos:start="31:30" pos:end="31:37">"family"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:41" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:42">

        <macro pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:17">setscalar</name><argument_list pos:start="33:18" pos:end="33:42">(<argument pos:start="33:19" pos:end="33:30">&amp;def-&gt;family</argument>, <argument pos:start="33:33" pos:end="33:35">str</argument>, <argument pos:start="33:38" pos:end="33:41">&amp;err</argument>)</argument_list></macro>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="39:5">else if <condition pos:start="35:15" pos:end="35:38">(<expr pos:start="35:16" pos:end="35:37"><operator pos:start="35:16" pos:end="35:16">!</operator><call pos:start="35:17" pos:end="35:37"><name pos:start="35:17" pos:end="35:22">strcmp</name><argument_list pos:start="35:23" pos:end="35:37">(<argument pos:start="35:24" pos:end="35:27"><expr pos:start="35:24" pos:end="35:27"><name pos:start="35:24" pos:end="35:27">name</name></expr></argument>, <argument pos:start="35:30" pos:end="35:36"><expr pos:start="35:30" pos:end="35:36"><literal type="string" pos:start="35:30" pos:end="35:36">"model"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:40" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:41">

        <macro pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:17">setscalar</name><argument_list pos:start="37:18" pos:end="37:41">(<argument pos:start="37:19" pos:end="37:29">&amp;def-&gt;model</argument>, <argument pos:start="37:32" pos:end="37:34">str</argument>, <argument pos:start="37:37" pos:end="37:40">&amp;err</argument>)</argument_list></macro>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="43:5">else if <condition pos:start="39:15" pos:end="39:41">(<expr pos:start="39:16" pos:end="39:40"><operator pos:start="39:16" pos:end="39:16">!</operator><call pos:start="39:17" pos:end="39:40"><name pos:start="39:17" pos:end="39:22">strcmp</name><argument_list pos:start="39:23" pos:end="39:40">(<argument pos:start="39:24" pos:end="39:27"><expr pos:start="39:24" pos:end="39:27"><name pos:start="39:24" pos:end="39:27">name</name></expr></argument>, <argument pos:start="39:30" pos:end="39:39"><expr pos:start="39:30" pos:end="39:39"><literal type="string" pos:start="39:30" pos:end="39:39">"stepping"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:43" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:44">

        <macro pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:17">setscalar</name><argument_list pos:start="41:18" pos:end="41:44">(<argument pos:start="41:19" pos:end="41:32">&amp;def-&gt;stepping</argument>, <argument pos:start="41:35" pos:end="41:37">str</argument>, <argument pos:start="41:40" pos:end="41:43">&amp;err</argument>)</argument_list></macro>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="47:5">else if <condition pos:start="43:15" pos:end="43:44">(<expr pos:start="43:16" pos:end="43:43"><operator pos:start="43:16" pos:end="43:16">!</operator><call pos:start="43:17" pos:end="43:43"><name pos:start="43:17" pos:end="43:22">strcmp</name><argument_list pos:start="43:23" pos:end="43:43">(<argument pos:start="43:24" pos:end="43:27"><expr pos:start="43:24" pos:end="43:27"><name pos:start="43:24" pos:end="43:27">name</name></expr></argument>, <argument pos:start="43:30" pos:end="43:42"><expr pos:start="43:30" pos:end="43:42"><literal type="string" pos:start="43:30" pos:end="43:42">"feature_edx"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:46" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:61">

        <expr_stmt pos:start="45:9" pos:end="45:61"><expr pos:start="45:9" pos:end="45:60"><call pos:start="45:9" pos:end="45:60"><name pos:start="45:9" pos:end="45:19">setfeatures</name><argument_list pos:start="45:20" pos:end="45:60">(<argument pos:start="45:21" pos:end="45:34"><expr pos:start="45:21" pos:end="45:34"><operator pos:start="45:21" pos:end="45:21">&amp;</operator><name pos:start="45:22" pos:end="45:34"><name pos:start="45:22" pos:end="45:24">def</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:34">features</name></name></expr></argument>, <argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:39">str</name></expr></argument>, <argument pos:start="45:42" pos:end="45:53"><expr pos:start="45:42" pos:end="45:53"><name pos:start="45:42" pos:end="45:53">feature_name</name></expr></argument>, <argument pos:start="45:56" pos:end="45:59"><expr pos:start="45:56" pos:end="45:59"><operator pos:start="45:56" pos:end="45:56">&amp;</operator><name pos:start="45:57" pos:end="45:59">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="47:7" pos:end="51:5">else if <condition pos:start="47:15" pos:end="47:44">(<expr pos:start="47:16" pos:end="47:43"><operator pos:start="47:16" pos:end="47:16">!</operator><call pos:start="47:17" pos:end="47:43"><name pos:start="47:17" pos:end="47:22">strcmp</name><argument_list pos:start="47:23" pos:end="47:43">(<argument pos:start="47:24" pos:end="47:27"><expr pos:start="47:24" pos:end="47:27"><name pos:start="47:24" pos:end="47:27">name</name></expr></argument>, <argument pos:start="47:30" pos:end="47:42"><expr pos:start="47:30" pos:end="47:42"><literal type="string" pos:start="47:30" pos:end="47:42">"feature_ecx"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:46" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:69">

        <expr_stmt pos:start="49:9" pos:end="49:69"><expr pos:start="49:9" pos:end="49:68"><call pos:start="49:9" pos:end="49:68"><name pos:start="49:9" pos:end="49:19">setfeatures</name><argument_list pos:start="49:20" pos:end="49:68">(<argument pos:start="49:21" pos:end="49:38"><expr pos:start="49:21" pos:end="49:38"><operator pos:start="49:21" pos:end="49:21">&amp;</operator><name pos:start="49:22" pos:end="49:38"><name pos:start="49:22" pos:end="49:24">def</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:38">ext_features</name></name></expr></argument>, <argument pos:start="49:41" pos:end="49:43"><expr pos:start="49:41" pos:end="49:43"><name pos:start="49:41" pos:end="49:43">str</name></expr></argument>, <argument pos:start="49:46" pos:end="49:61"><expr pos:start="49:46" pos:end="49:61"><name pos:start="49:46" pos:end="49:61">ext_feature_name</name></expr></argument>, <argument pos:start="49:64" pos:end="49:67"><expr pos:start="49:64" pos:end="49:67"><operator pos:start="49:64" pos:end="49:64">&amp;</operator><name pos:start="49:65" pos:end="49:67">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="55:5">else if <condition pos:start="51:15" pos:end="51:47">(<expr pos:start="51:16" pos:end="51:46"><operator pos:start="51:16" pos:end="51:16">!</operator><call pos:start="51:17" pos:end="51:46"><name pos:start="51:17" pos:end="51:22">strcmp</name><argument_list pos:start="51:23" pos:end="51:46">(<argument pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:27"><name pos:start="51:24" pos:end="51:27">name</name></expr></argument>, <argument pos:start="51:30" pos:end="51:45"><expr pos:start="51:30" pos:end="51:45"><literal type="string" pos:start="51:30" pos:end="51:45">"extfeature_edx"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:49" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:71">

        <expr_stmt pos:start="53:9" pos:end="53:71"><expr pos:start="53:9" pos:end="53:70"><call pos:start="53:9" pos:end="53:70"><name pos:start="53:9" pos:end="53:19">setfeatures</name><argument_list pos:start="53:20" pos:end="53:70">(<argument pos:start="53:21" pos:end="53:39"><expr pos:start="53:21" pos:end="53:39"><operator pos:start="53:21" pos:end="53:21">&amp;</operator><name pos:start="53:22" pos:end="53:39"><name pos:start="53:22" pos:end="53:24">def</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:39">ext2_features</name></name></expr></argument>, <argument pos:start="53:42" pos:end="53:44"><expr pos:start="53:42" pos:end="53:44"><name pos:start="53:42" pos:end="53:44">str</name></expr></argument>, <argument pos:start="53:47" pos:end="53:63"><expr pos:start="53:47" pos:end="53:63"><name pos:start="53:47" pos:end="53:63">ext2_feature_name</name></expr></argument>, <argument pos:start="53:66" pos:end="53:69"><expr pos:start="53:66" pos:end="53:69"><operator pos:start="53:66" pos:end="53:66">&amp;</operator><name pos:start="53:67" pos:end="53:69">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="59:5">else if <condition pos:start="55:15" pos:end="55:47">(<expr pos:start="55:16" pos:end="55:46"><operator pos:start="55:16" pos:end="55:16">!</operator><call pos:start="55:17" pos:end="55:46"><name pos:start="55:17" pos:end="55:22">strcmp</name><argument_list pos:start="55:23" pos:end="55:46">(<argument pos:start="55:24" pos:end="55:27"><expr pos:start="55:24" pos:end="55:27"><name pos:start="55:24" pos:end="55:27">name</name></expr></argument>, <argument pos:start="55:30" pos:end="55:45"><expr pos:start="55:30" pos:end="55:45"><literal type="string" pos:start="55:30" pos:end="55:45">"extfeature_ecx"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:49" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:71">

        <expr_stmt pos:start="57:9" pos:end="57:71"><expr pos:start="57:9" pos:end="57:70"><call pos:start="57:9" pos:end="57:70"><name pos:start="57:9" pos:end="57:19">setfeatures</name><argument_list pos:start="57:20" pos:end="57:70">(<argument pos:start="57:21" pos:end="57:39"><expr pos:start="57:21" pos:end="57:39"><operator pos:start="57:21" pos:end="57:21">&amp;</operator><name pos:start="57:22" pos:end="57:39"><name pos:start="57:22" pos:end="57:24">def</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:39">ext3_features</name></name></expr></argument>, <argument pos:start="57:42" pos:end="57:44"><expr pos:start="57:42" pos:end="57:44"><name pos:start="57:42" pos:end="57:44">str</name></expr></argument>, <argument pos:start="57:47" pos:end="57:63"><expr pos:start="57:47" pos:end="57:63"><name pos:start="57:47" pos:end="57:63">ext3_feature_name</name></expr></argument>, <argument pos:start="57:66" pos:end="57:69"><expr pos:start="57:66" pos:end="57:69"><operator pos:start="57:66" pos:end="57:66">&amp;</operator><name pos:start="57:67" pos:end="57:69">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="63:5">else if <condition pos:start="59:15" pos:end="59:39">(<expr pos:start="59:16" pos:end="59:38"><operator pos:start="59:16" pos:end="59:16">!</operator><call pos:start="59:17" pos:end="59:38"><name pos:start="59:17" pos:end="59:22">strcmp</name><argument_list pos:start="59:23" pos:end="59:38">(<argument pos:start="59:24" pos:end="59:27"><expr pos:start="59:24" pos:end="59:27"><name pos:start="59:24" pos:end="59:27">name</name></expr></argument>, <argument pos:start="59:30" pos:end="59:37"><expr pos:start="59:30" pos:end="59:37"><literal type="string" pos:start="59:30" pos:end="59:37">"xlevel"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:41" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:42">

        <macro pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:17">setscalar</name><argument_list pos:start="61:18" pos:end="61:42">(<argument pos:start="61:19" pos:end="61:30">&amp;def-&gt;xlevel</argument>, <argument pos:start="61:33" pos:end="61:35">str</argument>, <argument pos:start="61:38" pos:end="61:41">&amp;err</argument>)</argument_list></macro>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="69:5">else <block pos:start="63:12" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:19">

        <expr_stmt pos:start="65:9" pos:end="65:72"><expr pos:start="65:9" pos:end="65:71"><call pos:start="65:9" pos:end="65:71"><name pos:start="65:9" pos:end="65:15">fprintf</name><argument_list pos:start="65:16" pos:end="65:71">(<argument pos:start="65:17" pos:end="65:22"><expr pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:22">stderr</name></expr></argument>, <argument pos:start="65:25" pos:end="65:59"><expr pos:start="65:25" pos:end="65:59"><literal type="string" pos:start="65:25" pos:end="65:59">"error: unknown option [%s = %s]\n"</literal></expr></argument>, <argument pos:start="65:62" pos:end="65:65"><expr pos:start="65:62" pos:end="65:65"><name pos:start="65:62" pos:end="65:65">name</name></expr></argument>, <argument pos:start="65:68" pos:end="65:70"><expr pos:start="65:68" pos:end="65:70"><name pos:start="65:68" pos:end="65:70">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:19">return <expr pos:start="67:16" pos:end="67:18"><operator pos:start="67:16" pos:end="67:16">(</operator><literal type="number" pos:start="67:17" pos:end="67:17">1</literal><operator pos:start="67:18" pos:end="67:18">)</operator></expr>;</return>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:12">(<expr pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:11">err</name></expr>)</condition> <block pos:start="71:14" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:19">

        <expr_stmt pos:start="73:9" pos:end="73:74"><expr pos:start="73:9" pos:end="73:73"><call pos:start="73:9" pos:end="73:73"><name pos:start="73:9" pos:end="73:15">fprintf</name><argument_list pos:start="73:16" pos:end="73:73">(<argument pos:start="73:17" pos:end="73:22"><expr pos:start="73:17" pos:end="73:22"><name pos:start="73:17" pos:end="73:22">stderr</name></expr></argument>, <argument pos:start="73:25" pos:end="73:61"><expr pos:start="73:25" pos:end="73:61"><literal type="string" pos:start="73:25" pos:end="73:61">"error: bad option value [%s = %s]\n"</literal></expr></argument>, <argument pos:start="73:64" pos:end="73:67"><expr pos:start="73:64" pos:end="73:67"><name pos:start="73:64" pos:end="73:67">name</name></expr></argument>, <argument pos:start="73:70" pos:end="73:72"><expr pos:start="73:70" pos:end="73:72"><name pos:start="73:70" pos:end="73:72">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:19">return <expr pos:start="75:16" pos:end="75:18"><operator pos:start="75:16" pos:end="75:16">(</operator><literal type="number" pos:start="75:17" pos:end="75:17">1</literal><operator pos:start="75:18" pos:end="75:18">)</operator></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="79:5" pos:end="79:15">return <expr pos:start="79:12" pos:end="79:14"><operator pos:start="79:12" pos:end="79:12">(</operator><literal type="number" pos:start="79:13" pos:end="79:13">0</literal><operator pos:start="79:14" pos:end="79:14">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
