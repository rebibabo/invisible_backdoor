<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14195.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">Faac_encode_frame</name><parameter_list pos:start="1:29" pos:end="3:71">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avpkt</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">AVFrame</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">frame</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:70"><decl pos:start="3:52" pos:end="3:70"><type pos:start="3:52" pos:end="3:70"><name pos:start="3:52" pos:end="3:54">int</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:70">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:13">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">FaacAudioContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:42">= <expr pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:31">avctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">bytes_written</name></decl>, <decl pos:start="9:24" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:26">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">num_samples</name>  <init pos:start="11:22" pos:end="11:52">= <expr pos:start="11:24" pos:end="11:52"><ternary pos:start="11:24" pos:end="11:52"><condition pos:start="11:24" pos:end="11:30"><expr pos:start="11:24" pos:end="11:28"><name pos:start="11:24" pos:end="11:28">frame</name></expr> ?</condition><then pos:start="11:32" pos:end="11:48"> <expr pos:start="11:32" pos:end="11:48"><name pos:start="11:32" pos:end="11:48"><name pos:start="11:32" pos:end="11:36">frame</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:48">nb_samples</name></name></expr> </then><else pos:start="11:50" pos:end="11:52">: <expr pos:start="11:52" pos:end="11:52"><literal type="number" pos:start="11:52" pos:end="11:52">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">void</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:17">samples</name>    <init pos:start="13:22" pos:end="13:55">= <expr pos:start="13:24" pos:end="13:55"><ternary pos:start="13:24" pos:end="13:55"><condition pos:start="13:24" pos:end="13:30"><expr pos:start="13:24" pos:end="13:28"><name pos:start="13:24" pos:end="13:28">frame</name></expr> ?</condition><then pos:start="13:32" pos:end="13:45"> <expr pos:start="13:32" pos:end="13:45"><name pos:start="13:32" pos:end="13:45"><name pos:start="13:32" pos:end="13:36">frame</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:42">data</name><index pos:start="13:43" pos:end="13:45">[<expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr>]</index></name></expr>    </then><else pos:start="13:50" pos:end="13:55">: <expr pos:start="13:52" pos:end="13:55"><name pos:start="13:52" pos:end="13:55">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:76">(<expr pos:start="17:9" pos:end="17:75"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:12">ret</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:74"><name pos:start="17:16" pos:end="17:31">ff_alloc_packet2</name><argument_list pos:start="17:32" pos:end="17:74">(<argument pos:start="17:33" pos:end="17:37"><expr pos:start="17:33" pos:end="17:37"><name pos:start="17:33" pos:end="17:37">avctx</name></expr></argument>, <argument pos:start="17:40" pos:end="17:44"><expr pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:44">avpkt</name></expr></argument>, <argument pos:start="17:47" pos:end="17:73"><expr pos:start="17:47" pos:end="17:73"><operator pos:start="17:47" pos:end="17:47">(</operator><literal type="number" pos:start="17:48" pos:end="17:50">7</literal> <operator pos:start="17:50" pos:end="17:50">+</operator> <literal type="number" pos:start="17:52" pos:end="17:54">768</literal><operator pos:start="17:55" pos:end="17:55">)</operator> <operator pos:start="17:57" pos:end="17:57">*</operator> <name pos:start="17:59" pos:end="17:73"><name pos:start="17:59" pos:end="17:63">avctx</name><operator pos:start="17:64" pos:end="17:65">-&gt;</operator><name pos:start="17:66" pos:end="17:73">channels</name></name></expr></argument>)</argument_list></call><operator pos:start="17:75" pos:end="17:75">)</operator></expr>)</condition> <block pos:start="17:78" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:19">

        <expr_stmt pos:start="19:9" pos:end="19:69"><expr pos:start="19:9" pos:end="19:68"><call pos:start="19:9" pos:end="19:68"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:68">(<argument pos:start="19:16" pos:end="19:20"><expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">avctx</name></expr></argument>, <argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:37" pos:end="19:67"><expr pos:start="19:37" pos:end="19:67"><literal type="string" pos:start="19:37" pos:end="19:67">"Error getting output packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="31:60"><expr pos:start="27:5" pos:end="31:59"><name pos:start="27:5" pos:end="27:17">bytes_written</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="31:59"><name pos:start="27:21" pos:end="27:33">faacEncEncode</name><argument_list pos:start="27:34" pos:end="31:59">(<argument pos:start="27:35" pos:end="27:48"><expr pos:start="27:35" pos:end="27:48"><name pos:start="27:35" pos:end="27:48"><name pos:start="27:35" pos:end="27:35">s</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:48">faac_handle</name></name></expr></argument>, <argument pos:start="27:51" pos:end="27:57"><expr pos:start="27:51" pos:end="27:57"><name pos:start="27:51" pos:end="27:57">samples</name></expr></argument>,

                                  <argument pos:start="29:35" pos:end="29:63"><expr pos:start="29:35" pos:end="29:63"><name pos:start="29:35" pos:end="29:45">num_samples</name> <operator pos:start="29:47" pos:end="29:47">*</operator> <name pos:start="29:49" pos:end="29:63"><name pos:start="29:49" pos:end="29:53">avctx</name><operator pos:start="29:54" pos:end="29:55">-&gt;</operator><name pos:start="29:56" pos:end="29:63">channels</name></name></expr></argument>,

                                  <argument pos:start="31:35" pos:end="31:45"><expr pos:start="31:35" pos:end="31:45"><name pos:start="31:35" pos:end="31:45"><name pos:start="31:35" pos:end="31:39">avpkt</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:45">data</name></name></expr></argument>, <argument pos:start="31:48" pos:end="31:58"><expr pos:start="31:48" pos:end="31:58"><name pos:start="31:48" pos:end="31:58"><name pos:start="31:48" pos:end="31:52">avpkt</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:58">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:26">(<expr pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:21">bytes_written</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr>)</condition> <block pos:start="33:28" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:29">

        <expr_stmt pos:start="35:9" pos:end="35:63"><expr pos:start="35:9" pos:end="35:62"><call pos:start="35:9" pos:end="35:62"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:62">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:37" pos:end="35:61"><expr pos:start="35:37" pos:end="35:61"><literal type="string" pos:start="35:37" pos:end="35:61">"faacEncEncode() error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:29">return <expr pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:28">bytes_written</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:40">/* add current frame to the queue */</comment>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:14">(<expr pos:start="45:9" pos:end="45:13"><name pos:start="45:9" pos:end="45:13">frame</name></expr>)</condition> <block pos:start="45:16" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:23">

        <if_stmt pos:start="47:9" pos:end="49:23"><if pos:start="47:9" pos:end="49:23">if <condition pos:start="47:12" pos:end="47:56">(<expr pos:start="47:13" pos:end="47:55"><operator pos:start="47:13" pos:end="47:13">(</operator><name pos:start="47:14" pos:end="47:16">ret</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:50"><name pos:start="47:20" pos:end="47:34">ff_af_queue_add</name><argument_list pos:start="47:35" pos:end="47:50">(<argument pos:start="47:36" pos:end="47:42"><expr pos:start="47:36" pos:end="47:42"><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:42"><name pos:start="47:37" pos:end="47:37">s</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:42">afq</name></name></expr></argument>, <argument pos:start="47:45" pos:end="47:49"><expr pos:start="47:45" pos:end="47:49"><name pos:start="47:45" pos:end="47:49">frame</name></expr></argument>)</argument_list></call><operator pos:start="47:51" pos:end="47:51">)</operator> <operator pos:start="47:53" pos:end="47:53">&lt;</operator> <literal type="number" pos:start="47:55" pos:end="47:55">0</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:23"><block_content pos:start="49:13" pos:end="49:23">

            <return pos:start="49:13" pos:end="49:23">return <expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="57:17"><if pos:start="55:5" pos:end="57:17">if <condition pos:start="55:8" pos:end="55:23">(<expr pos:start="55:9" pos:end="55:22"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:22">bytes_written</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:17"><block_content pos:start="57:9" pos:end="57:17">

        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:41">/* Get the next frame pts/duration */</comment>

    <expr_stmt pos:start="63:5" pos:end="65:41"><expr pos:start="63:5" pos:end="65:40"><call pos:start="63:5" pos:end="65:40"><name pos:start="63:5" pos:end="63:22">ff_af_queue_remove</name><argument_list pos:start="63:23" pos:end="65:40">(<argument pos:start="63:24" pos:end="63:30"><expr pos:start="63:24" pos:end="63:30"><operator pos:start="63:24" pos:end="63:24">&amp;</operator><name pos:start="63:25" pos:end="63:30"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:30">afq</name></name></expr></argument>, <argument pos:start="63:33" pos:end="63:49"><expr pos:start="63:33" pos:end="63:49"><name pos:start="63:33" pos:end="63:49"><name pos:start="63:33" pos:end="63:37">avctx</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:49">frame_size</name></name></expr></argument>, <argument pos:start="63:52" pos:end="63:62"><expr pos:start="63:52" pos:end="63:62"><operator pos:start="63:52" pos:end="63:52">&amp;</operator><name pos:start="63:53" pos:end="63:62"><name pos:start="63:53" pos:end="63:57">avpkt</name><operator pos:start="63:58" pos:end="63:59">-&gt;</operator><name pos:start="63:60" pos:end="63:62">pts</name></name></expr></argument>,

                       <argument pos:start="65:24" pos:end="65:39"><expr pos:start="65:24" pos:end="65:39"><operator pos:start="65:24" pos:end="65:24">&amp;</operator><name pos:start="65:25" pos:end="65:39"><name pos:start="65:25" pos:end="65:29">avpkt</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:39">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:32"><expr pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:15"><name pos:start="69:5" pos:end="69:9">avpkt</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:15">size</name></name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:31">bytes_written</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:24"><expr pos:start="71:5" pos:end="71:23"><operator pos:start="71:5" pos:end="71:5">*</operator><name pos:start="71:6" pos:end="71:19">got_packet_ptr</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <literal type="number" pos:start="71:23" pos:end="71:23">1</literal></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
