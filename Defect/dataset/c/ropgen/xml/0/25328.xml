<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25328.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">vnc_auth_sasl_check_access</name><parameter_list pos:start="1:38" pos:end="1:51">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:46">VncState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">void</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:59"><expr pos:start="11:5" pos:end="11:58"><name pos:start="11:5" pos:end="11:7">err</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:58"><name pos:start="11:11" pos:end="11:22">sasl_getprop</name><argument_list pos:start="11:23" pos:end="11:58">(<argument pos:start="11:24" pos:end="11:36"><expr pos:start="11:24" pos:end="11:36"><name pos:start="11:24" pos:end="11:36"><name pos:start="11:24" pos:end="11:25">vs</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:31">sasl</name><operator pos:start="11:32" pos:end="11:32">.</operator><name pos:start="11:33" pos:end="11:36">conn</name></name></expr></argument>, <argument pos:start="11:39" pos:end="11:51"><expr pos:start="11:39" pos:end="11:51"><name pos:start="11:39" pos:end="11:51">SASL_USERNAME</name></expr></argument>, <argument pos:start="11:54" pos:end="11:57"><expr pos:start="11:54" pos:end="11:57"><operator pos:start="11:54" pos:end="11:54">&amp;</operator><name pos:start="11:55" pos:end="11:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:11">err</name> <operator pos:start="13:13" pos:end="13:14">!=</operator> <name pos:start="13:16" pos:end="13:22">SASL_OK</name></expr>)</condition> <block pos:start="13:25" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:18">

	<expr_stmt pos:start="15:9" pos:end="17:56"><expr pos:start="15:9" pos:end="17:55"><call pos:start="15:9" pos:end="17:55"><name pos:start="15:9" pos:end="15:17">VNC_DEBUG</name><argument_list pos:start="15:18" pos:end="17:55">(<argument pos:start="15:19" pos:end="15:70"><expr pos:start="15:19" pos:end="15:70"><literal type="string" pos:start="15:19" pos:end="15:70">"cannot query SASL username on connection %d (%s)\n"</literal></expr></argument>,

		  <argument pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:21">err</name></expr></argument>, <argument pos:start="17:24" pos:end="17:54"><expr pos:start="17:24" pos:end="17:54"><call pos:start="17:24" pos:end="17:54"><name pos:start="17:24" pos:end="17:37">sasl_errstring</name><argument_list pos:start="17:38" pos:end="17:54">(<argument pos:start="17:39" pos:end="17:41"><expr pos:start="17:39" pos:end="17:41"><name pos:start="17:39" pos:end="17:41">err</name></expr></argument>, <argument pos:start="17:44" pos:end="17:47"><expr pos:start="17:44" pos:end="17:47"><name pos:start="17:44" pos:end="17:47">NULL</name></expr></argument>, <argument pos:start="17:50" pos:end="17:53"><expr pos:start="17:50" pos:end="17:53"><name pos:start="17:50" pos:end="17:53">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:11">val</name> <operator pos:start="23:13" pos:end="23:14">==</operator> <name pos:start="23:16" pos:end="23:19">NULL</name></expr>)</condition> <block pos:start="23:22" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

	<expr_stmt pos:start="25:9" pos:end="25:52"><expr pos:start="25:9" pos:end="25:51"><call pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:17">VNC_DEBUG</name><argument_list pos:start="25:18" pos:end="25:51">(<argument pos:start="25:19" pos:end="25:50"><expr pos:start="25:19" pos:end="25:50"><literal type="string" pos:start="25:19" pos:end="25:50">"no client username was found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:62"><expr pos:start="31:5" pos:end="31:61"><call pos:start="31:5" pos:end="31:61"><name pos:start="31:5" pos:end="31:13">VNC_DEBUG</name><argument_list pos:start="31:14" pos:end="31:61">(<argument pos:start="31:15" pos:end="31:41"><expr pos:start="31:15" pos:end="31:41"><literal type="string" pos:start="31:15" pos:end="31:41">"SASL client username %s\n"</literal></expr></argument>, <argument pos:start="31:44" pos:end="31:60"><expr pos:start="31:44" pos:end="31:60"><operator pos:start="31:44" pos:end="31:44">(</operator><specifier pos:start="31:45" pos:end="31:49">const</specifier> <name pos:start="31:51" pos:end="31:54">char</name> <operator pos:start="31:56" pos:end="31:56">*</operator><operator pos:start="31:57" pos:end="31:57">)</operator><name pos:start="31:58" pos:end="31:60">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:54"><expr pos:start="35:5" pos:end="35:53"><name pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:6">vs</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:12">sasl</name><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:21">username</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:53"><name pos:start="35:25" pos:end="35:35">qemu_strdup</name><argument_list pos:start="35:36" pos:end="35:53">(<argument pos:start="35:37" pos:end="35:52"><expr pos:start="35:37" pos:end="35:52"><operator pos:start="35:37" pos:end="35:37">(</operator><specifier pos:start="35:38" pos:end="35:42">const</specifier> <name pos:start="35:44" pos:end="35:47">char</name><operator pos:start="35:48" pos:end="35:48">*</operator><operator pos:start="35:49" pos:end="35:49">)</operator><name pos:start="35:50" pos:end="35:52">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
