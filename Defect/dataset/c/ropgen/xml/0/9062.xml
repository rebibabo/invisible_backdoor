<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9062.c" pos:tabs="8"><function pos:start="1:1" pos:end="427:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">encode_picture</name><parameter_list pos:start="1:26" pos:end="1:64">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:40">MpegEncContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:63">picture_number</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="427:1">{<block_content pos:start="5:5" pos:end="425:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">bits</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:39"><expr pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:21">picture_number</name></name> <operator pos:start="11:23" pos:end="11:23">=</operator> <name pos:start="11:25" pos:end="11:38">picture_number</name></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:39">/* Reset the average MB variance */</comment>

    <expr_stmt pos:start="17:5" pos:end="19:33"><expr pos:start="17:5" pos:end="19:32"><name pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:9">me</name><operator pos:start="17:10" pos:end="17:10">.</operator><name pos:start="17:11" pos:end="17:25">mb_var_sum_temp</name></name>    <operator pos:start="17:30" pos:end="17:30">=</operator>

    <name pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:9">me</name><operator pos:start="19:10" pos:end="19:10">.</operator><name pos:start="19:11" pos:end="19:28">mc_mb_var_sum_temp</name></name> <operator pos:start="19:30" pos:end="19:30">=</operator> <literal type="number" pos:start="19:32" pos:end="19:32">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:76">/* we need to initialize some time vars before we can encode b-frames */</comment>

    <comment type="line" pos:start="25:5" pos:end="25:42">// RAL: Condition added for MPEG1VIDEO</comment>

    <if_stmt pos:start="27:5" pos:end="29:31"><if pos:start="27:5" pos:end="29:31">if <condition pos:start="27:8" pos:end="27:119">(<expr pos:start="27:9" pos:end="27:118"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:19">codec_id</name></name> <operator pos:start="27:21" pos:end="27:22">==</operator> <name pos:start="27:24" pos:end="27:42">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="27:44" pos:end="27:45">||</operator> <name pos:start="27:47" pos:end="27:57"><name pos:start="27:47" pos:end="27:47">s</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:57">codec_id</name></name> <operator pos:start="27:59" pos:end="27:60">==</operator> <name pos:start="27:62" pos:end="27:80">CODEC_ID_MPEG2VIDEO</name> <operator pos:start="27:82" pos:end="27:83">||</operator> <operator pos:start="27:85" pos:end="27:85">(</operator><name pos:start="27:86" pos:end="27:97"><name pos:start="27:86" pos:end="27:86">s</name><operator pos:start="27:87" pos:end="27:88">-&gt;</operator><name pos:start="27:89" pos:end="27:97">h263_pred</name></name> <operator pos:start="27:99" pos:end="27:100">&amp;&amp;</operator> <operator pos:start="27:102" pos:end="27:102">!</operator><name pos:start="27:103" pos:end="27:117"><name pos:start="27:103" pos:end="27:103">s</name><operator pos:start="27:104" pos:end="27:105">-&gt;</operator><name pos:start="27:106" pos:end="27:117">h263_msmpeg4</name></name><operator pos:start="27:118" pos:end="27:118">)</operator></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">

        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><call pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:27">set_frame_distances</name><argument_list pos:start="29:28" pos:end="29:30">(<argument pos:start="29:29" pos:end="29:29"><expr pos:start="29:29" pos:end="29:29"><name pos:start="29:29" pos:end="29:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="33:29"><if pos:start="31:5" pos:end="33:29">if<condition pos:start="31:7" pos:end="31:61">(<expr pos:start="31:8" pos:end="31:60"><name pos:start="31:8" pos:end="31:27">ENABLE_MPEG4_ENCODER</name> <operator pos:start="31:29" pos:end="31:30">&amp;&amp;</operator> <name pos:start="31:32" pos:end="31:42"><name pos:start="31:32" pos:end="31:32">s</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:42">codec_id</name></name> <operator pos:start="31:44" pos:end="31:45">==</operator> <name pos:start="31:47" pos:end="31:60">CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:29"><block_content pos:start="33:9" pos:end="33:29">

        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><call pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:25">ff_set_mpeg4_time</name><argument_list pos:start="33:26" pos:end="33:28">(<argument pos:start="33:27" pos:end="33:27"><expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:9">me</name><operator pos:start="37:10" pos:end="37:10">.</operator><name pos:start="37:11" pos:end="37:28">scene_change_score</name></name><operator pos:start="37:29" pos:end="37:29">=</operator><literal type="number" pos:start="37:30" pos:end="37:30">0</literal></expr>;</expr_stmt>



<comment type="line" pos:start="41:1" pos:end="41:99">//    s-&gt;lambda= s-&gt;current_picture_ptr-&gt;quality; //FIXME qscale / ... stuff for ME rate distortion</comment>



    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="51:5">if<condition pos:start="45:7" pos:end="45:31">(<expr pos:start="45:8" pos:end="45:30"><name pos:start="45:8" pos:end="45:19"><name pos:start="45:8" pos:end="45:8">s</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:19">pict_type</name></name><operator pos:start="45:20" pos:end="45:21">==</operator><name pos:start="45:22" pos:end="45:30">FF_I_TYPE</name></expr>)</condition><block pos:start="45:32" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:53">

        <if_stmt pos:start="47:9" pos:end="49:53"><if pos:start="47:9" pos:end="47:53">if<condition pos:start="47:11" pos:end="47:35">(<expr pos:start="47:12" pos:end="47:34"><name pos:start="47:12" pos:end="47:29"><name pos:start="47:12" pos:end="47:12">s</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:29">msmpeg4_version</name></name> <operator pos:start="47:31" pos:end="47:32">&gt;=</operator> <literal type="number" pos:start="47:34" pos:end="47:34">3</literal></expr>)</condition><block type="pseudo" pos:start="47:37" pos:end="47:53"><block_content pos:start="47:37" pos:end="47:53"> <expr_stmt pos:start="47:37" pos:end="47:53"><expr pos:start="47:37" pos:end="47:52"><name pos:start="47:37" pos:end="47:50"><name pos:start="47:37" pos:end="47:37">s</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:50">no_rounding</name></name><operator pos:start="47:51" pos:end="47:51">=</operator><literal type="number" pos:start="47:52" pos:end="47:52">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="49:9" pos:end="49:53">else<block type="pseudo" pos:start="49:37" pos:end="49:53"><block_content pos:start="49:37" pos:end="49:53">                        <expr_stmt pos:start="49:37" pos:end="49:53"><expr pos:start="49:37" pos:end="49:52"><name pos:start="49:37" pos:end="49:50"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:50">no_rounding</name></name><operator pos:start="49:51" pos:end="49:51">=</operator><literal type="number" pos:start="49:52" pos:end="49:52">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="51:6" pos:end="57:5">else if<condition pos:start="51:13" pos:end="51:37">(<expr pos:start="51:14" pos:end="51:36"><name pos:start="51:14" pos:end="51:25"><name pos:start="51:14" pos:end="51:14">s</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:25">pict_type</name></name><operator pos:start="51:26" pos:end="51:27">!=</operator><name pos:start="51:28" pos:end="51:36">FF_B_TYPE</name></expr>)</condition><block pos:start="51:38" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:32">

        <if_stmt pos:start="53:9" pos:end="55:32"><if pos:start="53:9" pos:end="55:32">if<condition pos:start="53:11" pos:end="53:98">(<expr pos:start="53:12" pos:end="53:97"><name pos:start="53:12" pos:end="53:31"><name pos:start="53:12" pos:end="53:12">s</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:31">flipflop_rounding</name></name> <operator pos:start="53:33" pos:end="53:34">||</operator> <name pos:start="53:36" pos:end="53:46"><name pos:start="53:36" pos:end="53:36">s</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:46">codec_id</name></name> <operator pos:start="53:48" pos:end="53:49">==</operator> <name pos:start="53:51" pos:end="53:64">CODEC_ID_H263P</name> <operator pos:start="53:66" pos:end="53:67">||</operator> <name pos:start="53:69" pos:end="53:79"><name pos:start="53:69" pos:end="53:69">s</name><operator pos:start="53:70" pos:end="53:71">-&gt;</operator><name pos:start="53:72" pos:end="53:79">codec_id</name></name> <operator pos:start="53:81" pos:end="53:82">==</operator> <name pos:start="53:84" pos:end="53:97">CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:32"><block_content pos:start="55:13" pos:end="55:32">

            <expr_stmt pos:start="55:13" pos:end="55:32"><expr pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:26">no_rounding</name></name> <operator pos:start="55:28" pos:end="55:29">^=</operator> <literal type="number" pos:start="55:31" pos:end="55:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="81:5"><if pos:start="61:5" pos:end="69:5">if<condition pos:start="61:7" pos:end="61:35">(<expr pos:start="61:8" pos:end="61:34"><name pos:start="61:8" pos:end="61:15"><name pos:start="61:8" pos:end="61:8">s</name><operator pos:start="61:9" pos:end="61:10">-&gt;</operator><name pos:start="61:11" pos:end="61:15">flags</name></name> <operator pos:start="61:17" pos:end="61:17">&amp;</operator> <name pos:start="61:19" pos:end="61:34">CODEC_FLAG_PASS2</name></expr>)</condition><block pos:start="61:36" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:30">

        <if_stmt pos:start="63:9" pos:end="65:22"><if pos:start="63:9" pos:end="65:22">if <condition pos:start="63:12" pos:end="63:33">(<expr pos:start="63:13" pos:end="63:32"><call pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:23">estimate_qp</name><argument_list pos:start="63:24" pos:end="63:28">(<argument pos:start="63:25" pos:end="63:25"><expr pos:start="63:25" pos:end="63:25"><name pos:start="63:25" pos:end="63:25">s</name></expr></argument>,<argument pos:start="63:27" pos:end="63:27"><expr pos:start="63:27" pos:end="63:27"><literal type="number" pos:start="63:27" pos:end="63:27">1</literal></expr></argument>)</argument_list></call> <operator pos:start="63:30" pos:end="63:30">&lt;</operator> <literal type="number" pos:start="63:32" pos:end="63:32">0</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:22"><block_content pos:start="65:13" pos:end="65:22">

            <return pos:start="65:13" pos:end="65:22">return <expr pos:start="65:20" pos:end="65:21"><operator pos:start="65:20" pos:end="65:20">-</operator><literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:30"><expr pos:start="67:9" pos:end="67:29"><call pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:26">ff_get_2pass_fcode</name><argument_list pos:start="67:27" pos:end="67:29">(<argument pos:start="67:28" pos:end="67:28"><expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="69:6" pos:end="81:5">else if<condition pos:start="69:13" pos:end="69:45">(<expr pos:start="69:14" pos:end="69:44"><operator pos:start="69:14" pos:end="69:14">!</operator><operator pos:start="69:15" pos:end="69:15">(</operator><name pos:start="69:16" pos:end="69:23"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:23">flags</name></name> <operator pos:start="69:25" pos:end="69:25">&amp;</operator> <name pos:start="69:27" pos:end="69:43">CODEC_FLAG_QSCALE</name><operator pos:start="69:44" pos:end="69:44">)</operator></expr>)</condition><block pos:start="69:46" pos:end="81:5">{<block_content pos:start="71:9" pos:end="79:25">

        <if_stmt pos:start="71:9" pos:end="77:67"><if pos:start="71:9" pos:end="73:56">if<condition pos:start="71:11" pos:end="71:35">(<expr pos:start="71:12" pos:end="71:34"><name pos:start="71:12" pos:end="71:23"><name pos:start="71:12" pos:end="71:12">s</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:23">pict_type</name></name><operator pos:start="71:24" pos:end="71:25">==</operator><name pos:start="71:26" pos:end="71:34">FF_B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:56"><block_content pos:start="73:13" pos:end="73:56">

            <expr_stmt pos:start="73:13" pos:end="73:56"><expr pos:start="73:13" pos:end="73:55"><name pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:21">lambda</name></name><operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:55"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:41">last_lambda_for</name><index pos:start="73:42" pos:end="73:55">[<expr pos:start="73:43" pos:end="73:54"><name pos:start="73:43" pos:end="73:54"><name pos:start="73:43" pos:end="73:43">s</name><operator pos:start="73:44" pos:end="73:45">-&gt;</operator><name pos:start="73:46" pos:end="73:54">pict_type</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="75:9" pos:end="77:67">else<block type="pseudo" pos:start="77:13" pos:end="77:67"><block_content pos:start="77:13" pos:end="77:67">

            <expr_stmt pos:start="77:13" pos:end="77:67"><expr pos:start="77:13" pos:end="77:66"><name pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:21">lambda</name></name><operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:66"><name pos:start="77:24" pos:end="77:24">s</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:41">last_lambda_for</name><index pos:start="77:42" pos:end="77:66">[<expr pos:start="77:43" pos:end="77:65"><name pos:start="77:43" pos:end="77:65"><name pos:start="77:43" pos:end="77:43">s</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:65">last_non_b_pict_type</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:25"><expr pos:start="79:9" pos:end="79:24"><call pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:21">update_qscale</name><argument_list pos:start="79:22" pos:end="79:24">(<argument pos:start="79:23" pos:end="79:23"><expr pos:start="79:23" pos:end="79:23"><name pos:start="79:23" pos:end="79:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:18"><expr pos:start="85:5" pos:end="85:17"><name pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:15">mb_intra</name></name><operator pos:start="85:16" pos:end="85:16">=</operator><literal type="number" pos:start="85:17" pos:end="85:17">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="85:20" pos:end="85:68">//for the rate distortion &amp; bit compare functions</comment>

    <for pos:start="87:5" pos:end="91:5">for<control pos:start="87:8" pos:end="87:43">(<init pos:start="87:9" pos:end="87:12"><expr pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:9">i</name><operator pos:start="87:10" pos:end="87:10">=</operator><literal type="number" pos:start="87:11" pos:end="87:11">1</literal></expr>;</init> <condition pos:start="87:14" pos:end="87:38"><expr pos:start="87:14" pos:end="87:37"><name pos:start="87:14" pos:end="87:14">i</name><operator pos:start="87:15" pos:end="87:15">&lt;</operator><name pos:start="87:16" pos:end="87:37"><name pos:start="87:16" pos:end="87:16">s</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:23">avctx</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:37">thread_count</name></name></expr>;</condition> <incr pos:start="87:40" pos:end="87:42"><expr pos:start="87:40" pos:end="87:42"><name pos:start="87:40" pos:end="87:40">i</name><operator pos:start="87:41" pos:end="87:42">++</operator></expr></incr>)</control><block pos:start="87:44" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:61">

        <expr_stmt pos:start="89:9" pos:end="89:61"><expr pos:start="89:9" pos:end="89:60"><call pos:start="89:9" pos:end="89:60"><name pos:start="89:9" pos:end="89:35">ff_update_duplicate_context</name><argument_list pos:start="89:36" pos:end="89:60">(<argument pos:start="89:37" pos:end="89:56"><expr pos:start="89:37" pos:end="89:56"><name pos:start="89:37" pos:end="89:56"><name pos:start="89:37" pos:end="89:37">s</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:53">thread_context</name><index pos:start="89:54" pos:end="89:56">[<expr pos:start="89:55" pos:end="89:55"><name pos:start="89:55" pos:end="89:55">i</name></expr>]</index></name></expr></argument>, <argument pos:start="89:59" pos:end="89:59"><expr pos:start="89:59" pos:end="89:59"><name pos:start="89:59" pos:end="89:59">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="95:5" pos:end="95:18"><expr pos:start="95:5" pos:end="95:17"><call pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:14">ff_init_me</name><argument_list pos:start="95:15" pos:end="95:17">(<argument pos:start="95:16" pos:end="95:16"><expr pos:start="95:16" pos:end="95:16"><name pos:start="95:16" pos:end="95:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:38">/* Estimate motion for every MB */</comment>

    <if_stmt pos:start="101:5" pos:end="139:5"><if pos:start="101:5" pos:end="121:5">if<condition pos:start="101:7" pos:end="101:33">(<expr pos:start="101:8" pos:end="101:32"><name pos:start="101:8" pos:end="101:19"><name pos:start="101:8" pos:end="101:8">s</name><operator pos:start="101:9" pos:end="101:10">-&gt;</operator><name pos:start="101:11" pos:end="101:19">pict_type</name></name> <operator pos:start="101:21" pos:end="101:22">!=</operator> <name pos:start="101:24" pos:end="101:32">FF_I_TYPE</name></expr>)</condition><block pos:start="101:34" pos:end="121:5">{<block_content pos:start="103:9" pos:end="119:123">

        <expr_stmt pos:start="103:9" pos:end="103:77"><expr pos:start="103:9" pos:end="103:76"><name pos:start="103:9" pos:end="103:17"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:17">lambda</name></name> <operator pos:start="103:19" pos:end="103:19">=</operator> <operator pos:start="103:21" pos:end="103:21">(</operator><name pos:start="103:22" pos:end="103:30"><name pos:start="103:22" pos:end="103:22">s</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:30">lambda</name></name> <operator pos:start="103:32" pos:end="103:32">*</operator> <name pos:start="103:34" pos:end="103:66"><name pos:start="103:34" pos:end="103:34">s</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:41">avctx</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:66">me_penalty_compensation</name></name> <operator pos:start="103:68" pos:end="103:68">+</operator> <literal type="number" pos:start="103:70" pos:end="103:72">128</literal><operator pos:start="103:73" pos:end="103:73">)</operator><operator pos:start="103:74" pos:end="103:75">&gt;&gt;</operator><literal type="number" pos:start="103:76" pos:end="103:76">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:86"><expr pos:start="105:9" pos:end="105:85"><name pos:start="105:9" pos:end="105:18"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:18">lambda2</name></name><operator pos:start="105:19" pos:end="105:19">=</operator> <operator pos:start="105:21" pos:end="105:21">(</operator><name pos:start="105:22" pos:end="105:31"><name pos:start="105:22" pos:end="105:22">s</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:31">lambda2</name></name><operator pos:start="105:32" pos:end="105:32">*</operator> <operator pos:start="105:34" pos:end="105:34">(</operator><name pos:start="105:35" pos:end="105:41">int64_t</name><operator pos:start="105:42" pos:end="105:42">)</operator><name pos:start="105:43" pos:end="105:75"><name pos:start="105:43" pos:end="105:43">s</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:50">avctx</name><operator pos:start="105:51" pos:end="105:52">-&gt;</operator><name pos:start="105:53" pos:end="105:75">me_penalty_compensation</name></name> <operator pos:start="105:77" pos:end="105:77">+</operator> <literal type="number" pos:start="105:79" pos:end="105:81">128</literal><operator pos:start="105:82" pos:end="105:82">)</operator><operator pos:start="105:83" pos:end="105:84">&gt;&gt;</operator><literal type="number" pos:start="105:85" pos:end="105:85">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="115:9"><if pos:start="107:9" pos:end="115:9">if<condition pos:start="107:11" pos:end="107:66">(<expr pos:start="107:12" pos:end="107:65"><name pos:start="107:12" pos:end="107:23"><name pos:start="107:12" pos:end="107:12">s</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:23">pict_type</name></name> <operator pos:start="107:25" pos:end="107:26">!=</operator> <name pos:start="107:28" pos:end="107:36">FF_B_TYPE</name> <operator pos:start="107:38" pos:end="107:39">&amp;&amp;</operator> <name pos:start="107:41" pos:end="107:62"><name pos:start="107:41" pos:end="107:41">s</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:48">avctx</name><operator pos:start="107:49" pos:end="107:50">-&gt;</operator><name pos:start="107:51" pos:end="107:62">me_threshold</name></name><operator pos:start="107:63" pos:end="107:64">==</operator><literal type="number" pos:start="107:65" pos:end="107:65">0</literal></expr>)</condition><block pos:start="107:67" pos:end="115:9">{<block_content pos:start="109:13" pos:end="113:13">

            <if_stmt pos:start="109:13" pos:end="113:13"><if pos:start="109:13" pos:end="113:13">if<condition pos:start="109:15" pos:end="109:95">(<expr pos:start="109:16" pos:end="109:94"><operator pos:start="109:16" pos:end="109:16">(</operator><name pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:24">avctx</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:32">pre_me</name></name> <operator pos:start="109:34" pos:end="109:35">&amp;&amp;</operator> <name pos:start="109:37" pos:end="109:59"><name pos:start="109:37" pos:end="109:37">s</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:59">last_non_b_pict_type</name></name><operator pos:start="109:60" pos:end="109:61">==</operator><name pos:start="109:62" pos:end="109:70">FF_I_TYPE</name><operator pos:start="109:71" pos:end="109:71">)</operator> <operator pos:start="109:73" pos:end="109:74">||</operator> <name pos:start="109:76" pos:end="109:91"><name pos:start="109:76" pos:end="109:76">s</name><operator pos:start="109:77" pos:end="109:78">-&gt;</operator><name pos:start="109:79" pos:end="109:83">avctx</name><operator pos:start="109:84" pos:end="109:85">-&gt;</operator><name pos:start="109:86" pos:end="109:91">pre_me</name></name><operator pos:start="109:92" pos:end="109:93">==</operator><literal type="number" pos:start="109:94" pos:end="109:94">2</literal></expr>)</condition><block pos:start="109:96" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:135">

                <expr_stmt pos:start="111:17" pos:end="111:135"><expr pos:start="111:17" pos:end="111:134"><call pos:start="111:17" pos:end="111:134"><name pos:start="111:17" pos:end="111:33"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:24">avctx</name><operator pos:start="111:25" pos:end="111:26">-&gt;</operator><name pos:start="111:27" pos:end="111:33">execute</name></name><argument_list pos:start="111:34" pos:end="111:134">(<argument pos:start="111:35" pos:end="111:42"><expr pos:start="111:35" pos:end="111:42"><name pos:start="111:35" pos:end="111:42"><name pos:start="111:35" pos:end="111:35">s</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:42">avctx</name></name></expr></argument>, <argument pos:start="111:45" pos:end="111:70"><expr pos:start="111:45" pos:end="111:70"><name pos:start="111:45" pos:end="111:70">pre_estimate_motion_thread</name></expr></argument>, <argument pos:start="111:73" pos:end="111:103"><expr pos:start="111:73" pos:end="111:103"><operator pos:start="111:73" pos:end="111:73">(</operator><name pos:start="111:74" pos:end="111:77">void</name><operator pos:start="111:78" pos:end="111:78">*</operator><operator pos:start="111:79" pos:end="111:79">*</operator><operator pos:start="111:80" pos:end="111:80">)</operator><operator pos:start="111:81" pos:end="111:81">&amp;</operator><operator pos:start="111:82" pos:end="111:82">(</operator><name pos:start="111:83" pos:end="111:102"><name pos:start="111:83" pos:end="111:83">s</name><operator pos:start="111:84" pos:end="111:85">-&gt;</operator><name pos:start="111:86" pos:end="111:99">thread_context</name><index pos:start="111:100" pos:end="111:102">[<expr pos:start="111:101" pos:end="111:101"><literal type="number" pos:start="111:101" pos:end="111:101">0</literal></expr>]</index></name><operator pos:start="111:103" pos:end="111:103">)</operator></expr></argument>, <argument pos:start="111:106" pos:end="111:109"><expr pos:start="111:106" pos:end="111:109"><name pos:start="111:106" pos:end="111:109">NULL</name></expr></argument>, <argument pos:start="111:112" pos:end="111:133"><expr pos:start="111:112" pos:end="111:133"><name pos:start="111:112" pos:end="111:133"><name pos:start="111:112" pos:end="111:112">s</name><operator pos:start="111:113" pos:end="111:114">-&gt;</operator><name pos:start="111:115" pos:end="111:119">avctx</name><operator pos:start="111:120" pos:end="111:121">-&gt;</operator><name pos:start="111:122" pos:end="111:133">thread_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:123"><expr pos:start="119:9" pos:end="119:122"><call pos:start="119:9" pos:end="119:122"><name pos:start="119:9" pos:end="119:25"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:16">avctx</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:25">execute</name></name><argument_list pos:start="119:26" pos:end="119:122">(<argument pos:start="119:27" pos:end="119:34"><expr pos:start="119:27" pos:end="119:34"><name pos:start="119:27" pos:end="119:34"><name pos:start="119:27" pos:end="119:27">s</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:34">avctx</name></name></expr></argument>, <argument pos:start="119:37" pos:end="119:58"><expr pos:start="119:37" pos:end="119:58"><name pos:start="119:37" pos:end="119:58">estimate_motion_thread</name></expr></argument>, <argument pos:start="119:61" pos:end="119:91"><expr pos:start="119:61" pos:end="119:91"><operator pos:start="119:61" pos:end="119:61">(</operator><name pos:start="119:62" pos:end="119:65">void</name><operator pos:start="119:66" pos:end="119:66">*</operator><operator pos:start="119:67" pos:end="119:67">*</operator><operator pos:start="119:68" pos:end="119:68">)</operator><operator pos:start="119:69" pos:end="119:69">&amp;</operator><operator pos:start="119:70" pos:end="119:70">(</operator><name pos:start="119:71" pos:end="119:90"><name pos:start="119:71" pos:end="119:71">s</name><operator pos:start="119:72" pos:end="119:73">-&gt;</operator><name pos:start="119:74" pos:end="119:87">thread_context</name><index pos:start="119:88" pos:end="119:90">[<expr pos:start="119:89" pos:end="119:89"><literal type="number" pos:start="119:89" pos:end="119:89">0</literal></expr>]</index></name><operator pos:start="119:91" pos:end="119:91">)</operator></expr></argument>, <argument pos:start="119:94" pos:end="119:97"><expr pos:start="119:94" pos:end="119:97"><name pos:start="119:94" pos:end="119:97">NULL</name></expr></argument>, <argument pos:start="119:100" pos:end="119:121"><expr pos:start="119:100" pos:end="119:121"><name pos:start="119:100" pos:end="119:121"><name pos:start="119:100" pos:end="119:100">s</name><operator pos:start="119:101" pos:end="119:102">-&gt;</operator><name pos:start="119:103" pos:end="119:107">avctx</name><operator pos:start="119:108" pos:end="119:109">-&gt;</operator><name pos:start="119:110" pos:end="119:121">thread_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="121:6" pos:end="139:5">else <comment type="block" pos:start="121:11" pos:end="121:45">/* if(s-&gt;pict_type == FF_I_TYPE) */</comment><block pos:start="121:46" pos:end="139:5">{<block_content pos:start="125:9" pos:end="137:9">

        <comment type="block" pos:start="123:9" pos:end="123:21">/* I-Frame */</comment>

        <for pos:start="125:9" pos:end="127:51">for<control pos:start="125:12" pos:end="125:50">(<init pos:start="125:13" pos:end="125:16"><expr pos:start="125:13" pos:end="125:15"><name pos:start="125:13" pos:end="125:13">i</name><operator pos:start="125:14" pos:end="125:14">=</operator><literal type="number" pos:start="125:15" pos:end="125:15">0</literal></expr>;</init> <condition pos:start="125:18" pos:end="125:45"><expr pos:start="125:18" pos:end="125:44"><name pos:start="125:18" pos:end="125:18">i</name><operator pos:start="125:19" pos:end="125:19">&lt;</operator><name pos:start="125:20" pos:end="125:31"><name pos:start="125:20" pos:end="125:20">s</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:31">mb_stride</name></name><operator pos:start="125:32" pos:end="125:32">*</operator><name pos:start="125:33" pos:end="125:44"><name pos:start="125:33" pos:end="125:33">s</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:44">mb_height</name></name></expr>;</condition> <incr pos:start="125:47" pos:end="125:49"><expr pos:start="125:47" pos:end="125:49"><name pos:start="125:47" pos:end="125:47">i</name><operator pos:start="125:48" pos:end="125:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="127:13" pos:end="127:51"><block_content pos:start="127:13" pos:end="127:51">

            <expr_stmt pos:start="127:13" pos:end="127:51"><expr pos:start="127:13" pos:end="127:50"><name pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:22">mb_type</name><index pos:start="127:23" pos:end="127:25">[<expr pos:start="127:24" pos:end="127:24"><name pos:start="127:24" pos:end="127:24">i</name></expr>]</index></name><operator pos:start="127:26" pos:end="127:26">=</operator> <name pos:start="127:28" pos:end="127:50">CANDIDATE_MB_TYPE_INTRA</name></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="131:9" pos:end="137:9"><if pos:start="131:9" pos:end="137:9">if<condition pos:start="131:11" pos:end="131:28">(<expr pos:start="131:12" pos:end="131:27"><operator pos:start="131:12" pos:end="131:12">!</operator><name pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:27">fixed_qscale</name></name></expr>)</condition><block pos:start="131:29" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:118">

            <comment type="block" pos:start="133:13" pos:end="133:69">/* finding spatial complexity for I-frame rate control */</comment>

            <expr_stmt pos:start="135:13" pos:end="135:118"><expr pos:start="135:13" pos:end="135:117"><call pos:start="135:13" pos:end="135:117"><name pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:20">avctx</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:29">execute</name></name><argument_list pos:start="135:30" pos:end="135:117">(<argument pos:start="135:31" pos:end="135:38"><expr pos:start="135:31" pos:end="135:38"><name pos:start="135:31" pos:end="135:38"><name pos:start="135:31" pos:end="135:31">s</name><operator pos:start="135:32" pos:end="135:33">-&gt;</operator><name pos:start="135:34" pos:end="135:38">avctx</name></name></expr></argument>, <argument pos:start="135:41" pos:end="135:53"><expr pos:start="135:41" pos:end="135:53"><name pos:start="135:41" pos:end="135:53">mb_var_thread</name></expr></argument>, <argument pos:start="135:56" pos:end="135:86"><expr pos:start="135:56" pos:end="135:86"><operator pos:start="135:56" pos:end="135:56">(</operator><name pos:start="135:57" pos:end="135:60">void</name><operator pos:start="135:61" pos:end="135:61">*</operator><operator pos:start="135:62" pos:end="135:62">*</operator><operator pos:start="135:63" pos:end="135:63">)</operator><operator pos:start="135:64" pos:end="135:64">&amp;</operator><operator pos:start="135:65" pos:end="135:65">(</operator><name pos:start="135:66" pos:end="135:85"><name pos:start="135:66" pos:end="135:66">s</name><operator pos:start="135:67" pos:end="135:68">-&gt;</operator><name pos:start="135:69" pos:end="135:82">thread_context</name><index pos:start="135:83" pos:end="135:85">[<expr pos:start="135:84" pos:end="135:84"><literal type="number" pos:start="135:84" pos:end="135:84">0</literal></expr>]</index></name><operator pos:start="135:86" pos:end="135:86">)</operator></expr></argument>, <argument pos:start="135:89" pos:end="135:92"><expr pos:start="135:89" pos:end="135:92"><name pos:start="135:89" pos:end="135:92">NULL</name></expr></argument>, <argument pos:start="135:95" pos:end="135:116"><expr pos:start="135:95" pos:end="135:116"><name pos:start="135:95" pos:end="135:116"><name pos:start="135:95" pos:end="135:95">s</name><operator pos:start="135:96" pos:end="135:97">-&gt;</operator><name pos:start="135:98" pos:end="135:102">avctx</name><operator pos:start="135:103" pos:end="135:104">-&gt;</operator><name pos:start="135:105" pos:end="135:116">thread_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <for pos:start="141:5" pos:end="145:5">for<control pos:start="141:8" pos:end="141:43">(<init pos:start="141:9" pos:end="141:12"><expr pos:start="141:9" pos:end="141:11"><name pos:start="141:9" pos:end="141:9">i</name><operator pos:start="141:10" pos:end="141:10">=</operator><literal type="number" pos:start="141:11" pos:end="141:11">1</literal></expr>;</init> <condition pos:start="141:14" pos:end="141:38"><expr pos:start="141:14" pos:end="141:37"><name pos:start="141:14" pos:end="141:14">i</name><operator pos:start="141:15" pos:end="141:15">&lt;</operator><name pos:start="141:16" pos:end="141:37"><name pos:start="141:16" pos:end="141:16">s</name><operator pos:start="141:17" pos:end="141:18">-&gt;</operator><name pos:start="141:19" pos:end="141:23">avctx</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:37">thread_count</name></name></expr>;</condition> <incr pos:start="141:40" pos:end="141:42"><expr pos:start="141:40" pos:end="141:42"><name pos:start="141:40" pos:end="141:40">i</name><operator pos:start="141:41" pos:end="141:42">++</operator></expr></incr>)</control><block pos:start="141:44" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:56">

        <expr_stmt pos:start="143:9" pos:end="143:56"><expr pos:start="143:9" pos:end="143:55"><call pos:start="143:9" pos:end="143:55"><name pos:start="143:9" pos:end="143:30">merge_context_after_me</name><argument_list pos:start="143:31" pos:end="143:55">(<argument pos:start="143:32" pos:end="143:32"><expr pos:start="143:32" pos:end="143:32"><name pos:start="143:32" pos:end="143:32">s</name></expr></argument>, <argument pos:start="143:35" pos:end="143:54"><expr pos:start="143:35" pos:end="143:54"><name pos:start="143:35" pos:end="143:54"><name pos:start="143:35" pos:end="143:35">s</name><operator pos:start="143:36" pos:end="143:37">-&gt;</operator><name pos:start="143:38" pos:end="143:51">thread_context</name><index pos:start="143:52" pos:end="143:54">[<expr pos:start="143:53" pos:end="143:53"><name pos:start="143:53" pos:end="143:53">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="147:5" pos:end="147:102"><expr pos:start="147:5" pos:end="147:101"><name pos:start="147:5" pos:end="147:36"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:22">current_picture</name><operator pos:start="147:23" pos:end="147:23">.</operator><name pos:start="147:24" pos:end="147:36">mc_mb_var_sum</name></name><operator pos:start="147:37" pos:end="147:37">=</operator> <name pos:start="147:39" pos:end="147:75"><name pos:start="147:39" pos:end="147:39">s</name><operator pos:start="147:40" pos:end="147:41">-&gt;</operator><name pos:start="147:42" pos:end="147:60">current_picture_ptr</name><operator pos:start="147:61" pos:end="147:62">-&gt;</operator><name pos:start="147:63" pos:end="147:75">mc_mb_var_sum</name></name><operator pos:start="147:76" pos:end="147:76">=</operator> <name pos:start="147:78" pos:end="147:101"><name pos:start="147:78" pos:end="147:78">s</name><operator pos:start="147:79" pos:end="147:80">-&gt;</operator><name pos:start="147:81" pos:end="147:82">me</name><operator pos:start="147:83" pos:end="147:83">.</operator><name pos:start="147:84" pos:end="147:101">mc_mb_var_sum_temp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:102"><expr pos:start="149:5" pos:end="149:101"><name pos:start="149:5" pos:end="149:36"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:22">current_picture</name><operator pos:start="149:23" pos:end="149:23">.</operator>   <name pos:start="149:27" pos:end="149:36">mb_var_sum</name></name><operator pos:start="149:37" pos:end="149:37">=</operator> <name pos:start="149:39" pos:end="149:75"><name pos:start="149:39" pos:end="149:39">s</name><operator pos:start="149:40" pos:end="149:41">-&gt;</operator><name pos:start="149:42" pos:end="149:60">current_picture_ptr</name><operator pos:start="149:61" pos:end="149:62">-&gt;</operator>   <name pos:start="149:66" pos:end="149:75">mb_var_sum</name></name><operator pos:start="149:76" pos:end="149:76">=</operator> <name pos:start="149:78" pos:end="149:101"><name pos:start="149:78" pos:end="149:78">s</name><operator pos:start="149:79" pos:end="149:80">-&gt;</operator><name pos:start="149:81" pos:end="149:82">me</name><operator pos:start="149:83" pos:end="149:83">.</operator>   <name pos:start="149:87" pos:end="149:101">mb_var_sum_temp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:13"><expr pos:start="151:5" pos:end="151:12"><call pos:start="151:5" pos:end="151:12"><name pos:start="151:5" pos:end="151:10">emms_c</name><argument_list pos:start="151:11" pos:end="151:12">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="155:5" pos:end="165:5"><if pos:start="155:5" pos:end="165:5">if<condition pos:start="155:7" pos:end="155:95">(<expr pos:start="155:8" pos:end="155:94"><name pos:start="155:8" pos:end="155:31"><name pos:start="155:8" pos:end="155:8">s</name><operator pos:start="155:9" pos:end="155:10">-&gt;</operator><name pos:start="155:11" pos:end="155:12">me</name><operator pos:start="155:13" pos:end="155:13">.</operator><name pos:start="155:14" pos:end="155:31">scene_change_score</name></name> <operator pos:start="155:33" pos:end="155:33">&gt;</operator> <name pos:start="155:35" pos:end="155:65"><name pos:start="155:35" pos:end="155:35">s</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:42">avctx</name><operator pos:start="155:43" pos:end="155:44">-&gt;</operator><name pos:start="155:45" pos:end="155:65">scenechange_threshold</name></name> <operator pos:start="155:67" pos:end="155:68">&amp;&amp;</operator> <name pos:start="155:70" pos:end="155:81"><name pos:start="155:70" pos:end="155:70">s</name><operator pos:start="155:71" pos:end="155:72">-&gt;</operator><name pos:start="155:73" pos:end="155:81">pict_type</name></name> <operator pos:start="155:83" pos:end="155:84">==</operator> <name pos:start="155:86" pos:end="155:94">FF_P_TYPE</name></expr>)</condition><block pos:start="155:96" pos:end="165:5">{<block_content pos:start="157:9" pos:end="161:51">

        <expr_stmt pos:start="157:9" pos:end="157:32"><expr pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:20">pict_type</name></name><operator pos:start="157:21" pos:end="157:21">=</operator> <name pos:start="157:23" pos:end="157:31">FF_I_TYPE</name></expr>;</expr_stmt>

        <for pos:start="159:9" pos:end="161:51">for<control pos:start="159:12" pos:end="159:50">(<init pos:start="159:13" pos:end="159:16"><expr pos:start="159:13" pos:end="159:15"><name pos:start="159:13" pos:end="159:13">i</name><operator pos:start="159:14" pos:end="159:14">=</operator><literal type="number" pos:start="159:15" pos:end="159:15">0</literal></expr>;</init> <condition pos:start="159:18" pos:end="159:45"><expr pos:start="159:18" pos:end="159:44"><name pos:start="159:18" pos:end="159:18">i</name><operator pos:start="159:19" pos:end="159:19">&lt;</operator><name pos:start="159:20" pos:end="159:31"><name pos:start="159:20" pos:end="159:20">s</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:31">mb_stride</name></name><operator pos:start="159:32" pos:end="159:32">*</operator><name pos:start="159:33" pos:end="159:44"><name pos:start="159:33" pos:end="159:33">s</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:44">mb_height</name></name></expr>;</condition> <incr pos:start="159:47" pos:end="159:49"><expr pos:start="159:47" pos:end="159:49"><name pos:start="159:47" pos:end="159:47">i</name><operator pos:start="159:48" pos:end="159:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="161:13" pos:end="161:51"><block_content pos:start="161:13" pos:end="161:51">

            <expr_stmt pos:start="161:13" pos:end="161:51"><expr pos:start="161:13" pos:end="161:50"><name pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:13">s</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:22">mb_type</name><index pos:start="161:23" pos:end="161:25">[<expr pos:start="161:24" pos:end="161:24"><name pos:start="161:24" pos:end="161:24">i</name></expr>]</index></name><operator pos:start="161:26" pos:end="161:26">=</operator> <name pos:start="161:28" pos:end="161:50">CANDIDATE_MB_TYPE_INTRA</name></expr>;</expr_stmt></block_content></block></for>

<comment type="line" pos:start="163:1" pos:end="163:128">//printf("Scene change detected, encoding as I Frame %d %d\n", s-&gt;current_picture.mb_var_sum, s-&gt;current_picture.mc_mb_var_sum);</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="169:5" pos:end="273:5"><if pos:start="169:5" pos:end="273:5">if<condition pos:start="169:7" pos:end="169:19">(<expr pos:start="169:8" pos:end="169:18"><operator pos:start="169:8" pos:end="169:8">!</operator><name pos:start="169:9" pos:end="169:18"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:18">umvplus</name></name></expr>)</condition><block pos:start="169:20" pos:end="273:5">{<block_content pos:start="171:9" pos:end="271:9">

        <if_stmt pos:start="171:9" pos:end="211:9"><if pos:start="171:9" pos:end="211:9">if<condition pos:start="171:11" pos:end="171:62">(<expr pos:start="171:12" pos:end="171:61"><name pos:start="171:12" pos:end="171:23"><name pos:start="171:12" pos:end="171:12">s</name><operator pos:start="171:13" pos:end="171:14">-&gt;</operator><name pos:start="171:15" pos:end="171:23">pict_type</name></name><operator pos:start="171:24" pos:end="171:25">==</operator><name pos:start="171:26" pos:end="171:34">FF_P_TYPE</name> <operator pos:start="171:36" pos:end="171:37">||</operator> <name pos:start="171:39" pos:end="171:50"><name pos:start="171:39" pos:end="171:39">s</name><operator pos:start="171:40" pos:end="171:41">-&gt;</operator><name pos:start="171:42" pos:end="171:50">pict_type</name></name><operator pos:start="171:51" pos:end="171:52">==</operator><name pos:start="171:53" pos:end="171:61">FF_S_TYPE</name></expr>)</condition> <block pos:start="171:64" pos:end="211:9">{<block_content pos:start="173:13" pos:end="209:13">

            <expr_stmt pos:start="173:13" pos:end="173:84"><expr pos:start="173:13" pos:end="173:83"><name pos:start="173:13" pos:end="173:21"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:21">f_code</name></name><operator pos:start="173:22" pos:end="173:22">=</operator> <call pos:start="173:24" pos:end="173:83"><name pos:start="173:24" pos:end="173:40">ff_get_best_fcode</name><argument_list pos:start="173:41" pos:end="173:83">(<argument pos:start="173:42" pos:end="173:42"><expr pos:start="173:42" pos:end="173:42"><name pos:start="173:42" pos:end="173:42">s</name></expr></argument>, <argument pos:start="173:45" pos:end="173:57"><expr pos:start="173:45" pos:end="173:57"><name pos:start="173:45" pos:end="173:57"><name pos:start="173:45" pos:end="173:45">s</name><operator pos:start="173:46" pos:end="173:47">-&gt;</operator><name pos:start="173:48" pos:end="173:57">p_mv_table</name></name></expr></argument>, <argument pos:start="173:60" pos:end="173:82"><expr pos:start="173:60" pos:end="173:82"><name pos:start="173:60" pos:end="173:82">CANDIDATE_MB_TYPE_INTER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="177:13" pos:end="187:13"><if pos:start="177:13" pos:end="187:13">if<condition pos:start="177:15" pos:end="177:51">(<expr pos:start="177:16" pos:end="177:50"><name pos:start="177:16" pos:end="177:23"><name pos:start="177:16" pos:end="177:16">s</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:23">flags</name></name> <operator pos:start="177:25" pos:end="177:25">&amp;</operator> <name pos:start="177:27" pos:end="177:50">CODEC_FLAG_INTERLACED_ME</name></expr>)</condition><block pos:start="177:52" pos:end="187:13">{<block_content pos:start="179:17" pos:end="185:51">

                <decl_stmt pos:start="179:17" pos:end="179:24"><decl pos:start="179:17" pos:end="179:21"><type pos:start="179:17" pos:end="179:19"><name pos:start="179:17" pos:end="179:19">int</name></type> <name pos:start="179:21" pos:end="179:21">a</name></decl>,<decl pos:start="179:23" pos:end="179:23"><type ref="prev" pos:start="179:17" pos:end="179:19"/><name pos:start="179:23" pos:end="179:23">b</name></decl>;</decl_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:94"><expr pos:start="181:17" pos:end="181:93"><name pos:start="181:17" pos:end="181:17">a</name><operator pos:start="181:18" pos:end="181:18">=</operator> <call pos:start="181:20" pos:end="181:93"><name pos:start="181:20" pos:end="181:36">ff_get_best_fcode</name><argument_list pos:start="181:37" pos:end="181:93">(<argument pos:start="181:38" pos:end="181:38"><expr pos:start="181:38" pos:end="181:38"><name pos:start="181:38" pos:end="181:38">s</name></expr></argument>, <argument pos:start="181:41" pos:end="181:65"><expr pos:start="181:41" pos:end="181:65"><name pos:start="181:41" pos:end="181:65"><name pos:start="181:41" pos:end="181:41">s</name><operator pos:start="181:42" pos:end="181:43">-&gt;</operator><name pos:start="181:44" pos:end="181:59">p_field_mv_table</name><index pos:start="181:60" pos:end="181:62">[<expr pos:start="181:61" pos:end="181:61"><literal type="number" pos:start="181:61" pos:end="181:61">0</literal></expr>]</index><index pos:start="181:63" pos:end="181:65">[<expr pos:start="181:64" pos:end="181:64"><literal type="number" pos:start="181:64" pos:end="181:64">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="181:68" pos:end="181:92"><expr pos:start="181:68" pos:end="181:92"><name pos:start="181:68" pos:end="181:92">CANDIDATE_MB_TYPE_INTER_I</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="181:96" pos:end="181:115">//FIXME field_select</comment>

                <expr_stmt pos:start="183:17" pos:end="183:94"><expr pos:start="183:17" pos:end="183:93"><name pos:start="183:17" pos:end="183:17">b</name><operator pos:start="183:18" pos:end="183:18">=</operator> <call pos:start="183:20" pos:end="183:93"><name pos:start="183:20" pos:end="183:36">ff_get_best_fcode</name><argument_list pos:start="183:37" pos:end="183:93">(<argument pos:start="183:38" pos:end="183:38"><expr pos:start="183:38" pos:end="183:38"><name pos:start="183:38" pos:end="183:38">s</name></expr></argument>, <argument pos:start="183:41" pos:end="183:65"><expr pos:start="183:41" pos:end="183:65"><name pos:start="183:41" pos:end="183:65"><name pos:start="183:41" pos:end="183:41">s</name><operator pos:start="183:42" pos:end="183:43">-&gt;</operator><name pos:start="183:44" pos:end="183:59">p_field_mv_table</name><index pos:start="183:60" pos:end="183:62">[<expr pos:start="183:61" pos:end="183:61"><literal type="number" pos:start="183:61" pos:end="183:61">1</literal></expr>]</index><index pos:start="183:63" pos:end="183:65">[<expr pos:start="183:64" pos:end="183:64"><literal type="number" pos:start="183:64" pos:end="183:64">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="183:68" pos:end="183:92"><expr pos:start="183:68" pos:end="183:92"><name pos:start="183:68" pos:end="183:92">CANDIDATE_MB_TYPE_INTER_I</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:51"><expr pos:start="185:17" pos:end="185:50"><name pos:start="185:17" pos:end="185:25"><name pos:start="185:17" pos:end="185:17">s</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:25">f_code</name></name><operator pos:start="185:26" pos:end="185:26">=</operator> <call pos:start="185:28" pos:end="185:50"><name pos:start="185:28" pos:end="185:33">FFMAX3</name><argument_list pos:start="185:34" pos:end="185:50">(<argument pos:start="185:35" pos:end="185:43"><expr pos:start="185:35" pos:end="185:43"><name pos:start="185:35" pos:end="185:43"><name pos:start="185:35" pos:end="185:35">s</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:43">f_code</name></name></expr></argument>, <argument pos:start="185:46" pos:end="185:46"><expr pos:start="185:46" pos:end="185:46"><name pos:start="185:46" pos:end="185:46">a</name></expr></argument>, <argument pos:start="185:49" pos:end="185:49"><expr pos:start="185:49" pos:end="185:49"><name pos:start="185:49" pos:end="185:49">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="191:13" pos:end="191:33"><expr pos:start="191:13" pos:end="191:32"><call pos:start="191:13" pos:end="191:32"><name pos:start="191:13" pos:end="191:29">ff_fix_long_p_mvs</name><argument_list pos:start="191:30" pos:end="191:32">(<argument pos:start="191:31" pos:end="191:31"><expr pos:start="191:31" pos:end="191:31"><name pos:start="191:31" pos:end="191:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:94"><expr pos:start="193:13" pos:end="193:93"><call pos:start="193:13" pos:end="193:93"><name pos:start="193:13" pos:end="193:27">ff_fix_long_mvs</name><argument_list pos:start="193:28" pos:end="193:93">(<argument pos:start="193:29" pos:end="193:29"><expr pos:start="193:29" pos:end="193:29"><name pos:start="193:29" pos:end="193:29">s</name></expr></argument>, <argument pos:start="193:32" pos:end="193:35"><expr pos:start="193:32" pos:end="193:35"><name pos:start="193:32" pos:end="193:35">NULL</name></expr></argument>, <argument pos:start="193:38" pos:end="193:38"><expr pos:start="193:38" pos:end="193:38"><literal type="number" pos:start="193:38" pos:end="193:38">0</literal></expr></argument>, <argument pos:start="193:41" pos:end="193:53"><expr pos:start="193:41" pos:end="193:53"><name pos:start="193:41" pos:end="193:53"><name pos:start="193:41" pos:end="193:41">s</name><operator pos:start="193:42" pos:end="193:43">-&gt;</operator><name pos:start="193:44" pos:end="193:53">p_mv_table</name></name></expr></argument>, <argument pos:start="193:56" pos:end="193:64"><expr pos:start="193:56" pos:end="193:64"><name pos:start="193:56" pos:end="193:64"><name pos:start="193:56" pos:end="193:56">s</name><operator pos:start="193:57" pos:end="193:58">-&gt;</operator><name pos:start="193:59" pos:end="193:64">f_code</name></name></expr></argument>, <argument pos:start="193:67" pos:end="193:89"><expr pos:start="193:67" pos:end="193:89"><name pos:start="193:67" pos:end="193:89">CANDIDATE_MB_TYPE_INTER</name></expr></argument>, <argument pos:start="193:92" pos:end="193:92"><expr pos:start="193:92" pos:end="193:92"><literal type="number" pos:start="193:92" pos:end="193:92">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="209:13"><if pos:start="195:13" pos:end="209:13">if<condition pos:start="195:15" pos:end="195:51">(<expr pos:start="195:16" pos:end="195:50"><name pos:start="195:16" pos:end="195:23"><name pos:start="195:16" pos:end="195:16">s</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:23">flags</name></name> <operator pos:start="195:25" pos:end="195:25">&amp;</operator> <name pos:start="195:27" pos:end="195:50">CODEC_FLAG_INTERLACED_ME</name></expr>)</condition><block pos:start="195:52" pos:end="209:13">{<block_content pos:start="197:17" pos:end="207:17">

                <decl_stmt pos:start="197:17" pos:end="197:22"><decl pos:start="197:17" pos:end="197:21"><type pos:start="197:17" pos:end="197:19"><name pos:start="197:17" pos:end="197:19">int</name></type> <name pos:start="197:21" pos:end="197:21">j</name></decl>;</decl_stmt>

                <for pos:start="199:17" pos:end="207:17">for<control pos:start="199:20" pos:end="199:34">(<init pos:start="199:21" pos:end="199:24"><expr pos:start="199:21" pos:end="199:23"><name pos:start="199:21" pos:end="199:21">i</name><operator pos:start="199:22" pos:end="199:22">=</operator><literal type="number" pos:start="199:23" pos:end="199:23">0</literal></expr>;</init> <condition pos:start="199:26" pos:end="199:29"><expr pos:start="199:26" pos:end="199:28"><name pos:start="199:26" pos:end="199:26">i</name><operator pos:start="199:27" pos:end="199:27">&lt;</operator><literal type="number" pos:start="199:28" pos:end="199:28">2</literal></expr>;</condition> <incr pos:start="199:31" pos:end="199:33"><expr pos:start="199:31" pos:end="199:33"><name pos:start="199:31" pos:end="199:31">i</name><operator pos:start="199:32" pos:end="199:33">++</operator></expr></incr>)</control><block pos:start="199:35" pos:end="207:17">{<block_content pos:start="201:21" pos:end="205:108">

                    <for pos:start="201:21" pos:end="205:108">for<control pos:start="201:24" pos:end="201:38">(<init pos:start="201:25" pos:end="201:28"><expr pos:start="201:25" pos:end="201:27"><name pos:start="201:25" pos:end="201:25">j</name><operator pos:start="201:26" pos:end="201:26">=</operator><literal type="number" pos:start="201:27" pos:end="201:27">0</literal></expr>;</init> <condition pos:start="201:30" pos:end="201:33"><expr pos:start="201:30" pos:end="201:32"><name pos:start="201:30" pos:end="201:30">j</name><operator pos:start="201:31" pos:end="201:31">&lt;</operator><literal type="number" pos:start="201:32" pos:end="201:32">2</literal></expr>;</condition> <incr pos:start="201:35" pos:end="201:37"><expr pos:start="201:35" pos:end="201:37"><name pos:start="201:35" pos:end="201:35">j</name><operator pos:start="201:36" pos:end="201:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="203:25" pos:end="205:108"><block_content pos:start="203:25" pos:end="205:108">

                        <expr_stmt pos:start="203:25" pos:end="205:108"><expr pos:start="203:25" pos:end="205:107"><call pos:start="203:25" pos:end="205:107"><name pos:start="203:25" pos:end="203:39">ff_fix_long_mvs</name><argument_list pos:start="203:40" pos:end="205:107">(<argument pos:start="203:41" pos:end="203:41"><expr pos:start="203:41" pos:end="203:41"><name pos:start="203:41" pos:end="203:41">s</name></expr></argument>, <argument pos:start="203:44" pos:end="203:69"><expr pos:start="203:44" pos:end="203:69"><name pos:start="203:44" pos:end="203:69"><name pos:start="203:44" pos:end="203:44">s</name><operator pos:start="203:45" pos:end="203:46">-&gt;</operator><name pos:start="203:47" pos:end="203:66">p_field_select_table</name><index pos:start="203:67" pos:end="203:69">[<expr pos:start="203:68" pos:end="203:68"><name pos:start="203:68" pos:end="203:68">i</name></expr>]</index></name></expr></argument>, <argument pos:start="203:72" pos:end="203:72"><expr pos:start="203:72" pos:end="203:72"><name pos:start="203:72" pos:end="203:72">j</name></expr></argument>,

                                        <argument pos:start="205:41" pos:end="205:65"><expr pos:start="205:41" pos:end="205:65"><name pos:start="205:41" pos:end="205:65"><name pos:start="205:41" pos:end="205:41">s</name><operator pos:start="205:42" pos:end="205:43">-&gt;</operator><name pos:start="205:44" pos:end="205:59">p_field_mv_table</name><index pos:start="205:60" pos:end="205:62">[<expr pos:start="205:61" pos:end="205:61"><name pos:start="205:61" pos:end="205:61">i</name></expr>]</index><index pos:start="205:63" pos:end="205:65">[<expr pos:start="205:64" pos:end="205:64"><name pos:start="205:64" pos:end="205:64">j</name></expr>]</index></name></expr></argument>, <argument pos:start="205:68" pos:end="205:76"><expr pos:start="205:68" pos:end="205:76"><name pos:start="205:68" pos:end="205:76"><name pos:start="205:68" pos:end="205:68">s</name><operator pos:start="205:69" pos:end="205:70">-&gt;</operator><name pos:start="205:71" pos:end="205:76">f_code</name></name></expr></argument>, <argument pos:start="205:79" pos:end="205:103"><expr pos:start="205:79" pos:end="205:103"><name pos:start="205:79" pos:end="205:103">CANDIDATE_MB_TYPE_INTER_I</name></expr></argument>, <argument pos:start="205:106" pos:end="205:106"><expr pos:start="205:106" pos:end="205:106"><literal type="number" pos:start="205:106" pos:end="205:106">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="215:9" pos:end="271:9"><if pos:start="215:9" pos:end="271:9">if<condition pos:start="215:11" pos:end="215:35">(<expr pos:start="215:12" pos:end="215:34"><name pos:start="215:12" pos:end="215:23"><name pos:start="215:12" pos:end="215:12">s</name><operator pos:start="215:13" pos:end="215:14">-&gt;</operator><name pos:start="215:15" pos:end="215:23">pict_type</name></name><operator pos:start="215:24" pos:end="215:25">==</operator><name pos:start="215:26" pos:end="215:34">FF_B_TYPE</name></expr>)</condition><block pos:start="215:36" pos:end="271:9">{<block_content pos:start="217:13" pos:end="269:13">

            <decl_stmt pos:start="217:13" pos:end="217:21"><decl pos:start="217:13" pos:end="217:17"><type pos:start="217:13" pos:end="217:15"><name pos:start="217:13" pos:end="217:15">int</name></type> <name pos:start="217:17" pos:end="217:17">a</name></decl>, <decl pos:start="217:20" pos:end="217:20"><type ref="prev" pos:start="217:13" pos:end="217:15"/><name pos:start="217:20" pos:end="217:20">b</name></decl>;</decl_stmt>



            <expr_stmt pos:start="221:13" pos:end="221:84"><expr pos:start="221:13" pos:end="221:83"><name pos:start="221:13" pos:end="221:13">a</name> <operator pos:start="221:15" pos:end="221:15">=</operator> <call pos:start="221:17" pos:end="221:83"><name pos:start="221:17" pos:end="221:33">ff_get_best_fcode</name><argument_list pos:start="221:34" pos:end="221:83">(<argument pos:start="221:35" pos:end="221:35"><expr pos:start="221:35" pos:end="221:35"><name pos:start="221:35" pos:end="221:35">s</name></expr></argument>, <argument pos:start="221:38" pos:end="221:55"><expr pos:start="221:38" pos:end="221:55"><name pos:start="221:38" pos:end="221:55"><name pos:start="221:38" pos:end="221:38">s</name><operator pos:start="221:39" pos:end="221:40">-&gt;</operator><name pos:start="221:41" pos:end="221:55">b_forw_mv_table</name></name></expr></argument>, <argument pos:start="221:58" pos:end="221:82"><expr pos:start="221:58" pos:end="221:82"><name pos:start="221:58" pos:end="221:82">CANDIDATE_MB_TYPE_FORWARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:88"><expr pos:start="223:13" pos:end="223:87"><name pos:start="223:13" pos:end="223:13">b</name> <operator pos:start="223:15" pos:end="223:15">=</operator> <call pos:start="223:17" pos:end="223:87"><name pos:start="223:17" pos:end="223:33">ff_get_best_fcode</name><argument_list pos:start="223:34" pos:end="223:87">(<argument pos:start="223:35" pos:end="223:35"><expr pos:start="223:35" pos:end="223:35"><name pos:start="223:35" pos:end="223:35">s</name></expr></argument>, <argument pos:start="223:38" pos:end="223:61"><expr pos:start="223:38" pos:end="223:61"><name pos:start="223:38" pos:end="223:61"><name pos:start="223:38" pos:end="223:38">s</name><operator pos:start="223:39" pos:end="223:40">-&gt;</operator><name pos:start="223:41" pos:end="223:61">b_bidir_forw_mv_table</name></name></expr></argument>, <argument pos:start="223:64" pos:end="223:86"><expr pos:start="223:64" pos:end="223:86"><name pos:start="223:64" pos:end="223:86">CANDIDATE_MB_TYPE_BIDIR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:36"><expr pos:start="225:13" pos:end="225:35"><name pos:start="225:13" pos:end="225:21"><name pos:start="225:13" pos:end="225:13">s</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:21">f_code</name></name> <operator pos:start="225:23" pos:end="225:23">=</operator> <call pos:start="225:25" pos:end="225:35"><name pos:start="225:25" pos:end="225:29">FFMAX</name><argument_list pos:start="225:30" pos:end="225:35">(<argument pos:start="225:31" pos:end="225:31"><expr pos:start="225:31" pos:end="225:31"><name pos:start="225:31" pos:end="225:31">a</name></expr></argument>, <argument pos:start="225:34" pos:end="225:34"><expr pos:start="225:34" pos:end="225:34"><name pos:start="225:34" pos:end="225:34">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="229:13" pos:end="229:85"><expr pos:start="229:13" pos:end="229:84"><name pos:start="229:13" pos:end="229:13">a</name> <operator pos:start="229:15" pos:end="229:15">=</operator> <call pos:start="229:17" pos:end="229:84"><name pos:start="229:17" pos:end="229:33">ff_get_best_fcode</name><argument_list pos:start="229:34" pos:end="229:84">(<argument pos:start="229:35" pos:end="229:35"><expr pos:start="229:35" pos:end="229:35"><name pos:start="229:35" pos:end="229:35">s</name></expr></argument>, <argument pos:start="229:38" pos:end="229:55"><expr pos:start="229:38" pos:end="229:55"><name pos:start="229:38" pos:end="229:55"><name pos:start="229:38" pos:end="229:38">s</name><operator pos:start="229:39" pos:end="229:40">-&gt;</operator><name pos:start="229:41" pos:end="229:55">b_back_mv_table</name></name></expr></argument>, <argument pos:start="229:58" pos:end="229:83"><expr pos:start="229:58" pos:end="229:83"><name pos:start="229:58" pos:end="229:83">CANDIDATE_MB_TYPE_BACKWARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:88"><expr pos:start="231:13" pos:end="231:87"><name pos:start="231:13" pos:end="231:13">b</name> <operator pos:start="231:15" pos:end="231:15">=</operator> <call pos:start="231:17" pos:end="231:87"><name pos:start="231:17" pos:end="231:33">ff_get_best_fcode</name><argument_list pos:start="231:34" pos:end="231:87">(<argument pos:start="231:35" pos:end="231:35"><expr pos:start="231:35" pos:end="231:35"><name pos:start="231:35" pos:end="231:35">s</name></expr></argument>, <argument pos:start="231:38" pos:end="231:61"><expr pos:start="231:38" pos:end="231:61"><name pos:start="231:38" pos:end="231:61"><name pos:start="231:38" pos:end="231:38">s</name><operator pos:start="231:39" pos:end="231:40">-&gt;</operator><name pos:start="231:41" pos:end="231:61">b_bidir_back_mv_table</name></name></expr></argument>, <argument pos:start="231:64" pos:end="231:86"><expr pos:start="231:64" pos:end="231:86"><name pos:start="231:64" pos:end="231:86">CANDIDATE_MB_TYPE_BIDIR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:36"><expr pos:start="233:13" pos:end="233:35"><name pos:start="233:13" pos:end="233:21"><name pos:start="233:13" pos:end="233:13">s</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:21">b_code</name></name> <operator pos:start="233:23" pos:end="233:23">=</operator> <call pos:start="233:25" pos:end="233:35"><name pos:start="233:25" pos:end="233:29">FFMAX</name><argument_list pos:start="233:30" pos:end="233:35">(<argument pos:start="233:31" pos:end="233:31"><expr pos:start="233:31" pos:end="233:31"><name pos:start="233:31" pos:end="233:31">a</name></expr></argument>, <argument pos:start="233:34" pos:end="233:34"><expr pos:start="233:34" pos:end="233:34"><name pos:start="233:34" pos:end="233:34">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="237:13" pos:end="237:101"><expr pos:start="237:13" pos:end="237:100"><call pos:start="237:13" pos:end="237:100"><name pos:start="237:13" pos:end="237:27">ff_fix_long_mvs</name><argument_list pos:start="237:28" pos:end="237:100">(<argument pos:start="237:29" pos:end="237:29"><expr pos:start="237:29" pos:end="237:29"><name pos:start="237:29" pos:end="237:29">s</name></expr></argument>, <argument pos:start="237:32" pos:end="237:35"><expr pos:start="237:32" pos:end="237:35"><name pos:start="237:32" pos:end="237:35">NULL</name></expr></argument>, <argument pos:start="237:38" pos:end="237:38"><expr pos:start="237:38" pos:end="237:38"><literal type="number" pos:start="237:38" pos:end="237:38">0</literal></expr></argument>, <argument pos:start="237:41" pos:end="237:58"><expr pos:start="237:41" pos:end="237:58"><name pos:start="237:41" pos:end="237:58"><name pos:start="237:41" pos:end="237:41">s</name><operator pos:start="237:42" pos:end="237:43">-&gt;</operator><name pos:start="237:44" pos:end="237:58">b_forw_mv_table</name></name></expr></argument>, <argument pos:start="237:61" pos:end="237:69"><expr pos:start="237:61" pos:end="237:69"><name pos:start="237:61" pos:end="237:69"><name pos:start="237:61" pos:end="237:61">s</name><operator pos:start="237:62" pos:end="237:63">-&gt;</operator><name pos:start="237:64" pos:end="237:69">f_code</name></name></expr></argument>, <argument pos:start="237:72" pos:end="237:96"><expr pos:start="237:72" pos:end="237:96"><name pos:start="237:72" pos:end="237:96">CANDIDATE_MB_TYPE_FORWARD</name></expr></argument>, <argument pos:start="237:99" pos:end="237:99"><expr pos:start="237:99" pos:end="237:99"><literal type="number" pos:start="237:99" pos:end="237:99">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:102"><expr pos:start="239:13" pos:end="239:101"><call pos:start="239:13" pos:end="239:101"><name pos:start="239:13" pos:end="239:27">ff_fix_long_mvs</name><argument_list pos:start="239:28" pos:end="239:101">(<argument pos:start="239:29" pos:end="239:29"><expr pos:start="239:29" pos:end="239:29"><name pos:start="239:29" pos:end="239:29">s</name></expr></argument>, <argument pos:start="239:32" pos:end="239:35"><expr pos:start="239:32" pos:end="239:35"><name pos:start="239:32" pos:end="239:35">NULL</name></expr></argument>, <argument pos:start="239:38" pos:end="239:38"><expr pos:start="239:38" pos:end="239:38"><literal type="number" pos:start="239:38" pos:end="239:38">0</literal></expr></argument>, <argument pos:start="239:41" pos:end="239:58"><expr pos:start="239:41" pos:end="239:58"><name pos:start="239:41" pos:end="239:58"><name pos:start="239:41" pos:end="239:41">s</name><operator pos:start="239:42" pos:end="239:43">-&gt;</operator><name pos:start="239:44" pos:end="239:58">b_back_mv_table</name></name></expr></argument>, <argument pos:start="239:61" pos:end="239:69"><expr pos:start="239:61" pos:end="239:69"><name pos:start="239:61" pos:end="239:69"><name pos:start="239:61" pos:end="239:61">s</name><operator pos:start="239:62" pos:end="239:63">-&gt;</operator><name pos:start="239:64" pos:end="239:69">b_code</name></name></expr></argument>, <argument pos:start="239:72" pos:end="239:97"><expr pos:start="239:72" pos:end="239:97"><name pos:start="239:72" pos:end="239:97">CANDIDATE_MB_TYPE_BACKWARD</name></expr></argument>, <argument pos:start="239:100" pos:end="239:100"><expr pos:start="239:100" pos:end="239:100"><literal type="number" pos:start="239:100" pos:end="239:100">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:105"><expr pos:start="241:13" pos:end="241:104"><call pos:start="241:13" pos:end="241:104"><name pos:start="241:13" pos:end="241:27">ff_fix_long_mvs</name><argument_list pos:start="241:28" pos:end="241:104">(<argument pos:start="241:29" pos:end="241:29"><expr pos:start="241:29" pos:end="241:29"><name pos:start="241:29" pos:end="241:29">s</name></expr></argument>, <argument pos:start="241:32" pos:end="241:35"><expr pos:start="241:32" pos:end="241:35"><name pos:start="241:32" pos:end="241:35">NULL</name></expr></argument>, <argument pos:start="241:38" pos:end="241:38"><expr pos:start="241:38" pos:end="241:38"><literal type="number" pos:start="241:38" pos:end="241:38">0</literal></expr></argument>, <argument pos:start="241:41" pos:end="241:64"><expr pos:start="241:41" pos:end="241:64"><name pos:start="241:41" pos:end="241:64"><name pos:start="241:41" pos:end="241:41">s</name><operator pos:start="241:42" pos:end="241:43">-&gt;</operator><name pos:start="241:44" pos:end="241:64">b_bidir_forw_mv_table</name></name></expr></argument>, <argument pos:start="241:67" pos:end="241:75"><expr pos:start="241:67" pos:end="241:75"><name pos:start="241:67" pos:end="241:75"><name pos:start="241:67" pos:end="241:67">s</name><operator pos:start="241:68" pos:end="241:69">-&gt;</operator><name pos:start="241:70" pos:end="241:75">f_code</name></name></expr></argument>, <argument pos:start="241:78" pos:end="241:100"><expr pos:start="241:78" pos:end="241:100"><name pos:start="241:78" pos:end="241:100">CANDIDATE_MB_TYPE_BIDIR</name></expr></argument>, <argument pos:start="241:103" pos:end="241:103"><expr pos:start="241:103" pos:end="241:103"><literal type="number" pos:start="241:103" pos:end="241:103">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:105"><expr pos:start="243:13" pos:end="243:104"><call pos:start="243:13" pos:end="243:104"><name pos:start="243:13" pos:end="243:27">ff_fix_long_mvs</name><argument_list pos:start="243:28" pos:end="243:104">(<argument pos:start="243:29" pos:end="243:29"><expr pos:start="243:29" pos:end="243:29"><name pos:start="243:29" pos:end="243:29">s</name></expr></argument>, <argument pos:start="243:32" pos:end="243:35"><expr pos:start="243:32" pos:end="243:35"><name pos:start="243:32" pos:end="243:35">NULL</name></expr></argument>, <argument pos:start="243:38" pos:end="243:38"><expr pos:start="243:38" pos:end="243:38"><literal type="number" pos:start="243:38" pos:end="243:38">0</literal></expr></argument>, <argument pos:start="243:41" pos:end="243:64"><expr pos:start="243:41" pos:end="243:64"><name pos:start="243:41" pos:end="243:64"><name pos:start="243:41" pos:end="243:41">s</name><operator pos:start="243:42" pos:end="243:43">-&gt;</operator><name pos:start="243:44" pos:end="243:64">b_bidir_back_mv_table</name></name></expr></argument>, <argument pos:start="243:67" pos:end="243:75"><expr pos:start="243:67" pos:end="243:75"><name pos:start="243:67" pos:end="243:75"><name pos:start="243:67" pos:end="243:67">s</name><operator pos:start="243:68" pos:end="243:69">-&gt;</operator><name pos:start="243:70" pos:end="243:75">b_code</name></name></expr></argument>, <argument pos:start="243:78" pos:end="243:100"><expr pos:start="243:78" pos:end="243:100"><name pos:start="243:78" pos:end="243:100">CANDIDATE_MB_TYPE_BIDIR</name></expr></argument>, <argument pos:start="243:103" pos:end="243:103"><expr pos:start="243:103" pos:end="243:103"><literal type="number" pos:start="243:103" pos:end="243:103">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="245:13" pos:end="269:13"><if pos:start="245:13" pos:end="269:13">if<condition pos:start="245:15" pos:end="245:51">(<expr pos:start="245:16" pos:end="245:50"><name pos:start="245:16" pos:end="245:23"><name pos:start="245:16" pos:end="245:16">s</name><operator pos:start="245:17" pos:end="245:18">-&gt;</operator><name pos:start="245:19" pos:end="245:23">flags</name></name> <operator pos:start="245:25" pos:end="245:25">&amp;</operator> <name pos:start="245:27" pos:end="245:50">CODEC_FLAG_INTERLACED_ME</name></expr>)</condition><block pos:start="245:52" pos:end="269:13">{<block_content pos:start="247:17" pos:end="267:17">

                <decl_stmt pos:start="247:17" pos:end="247:27"><decl pos:start="247:17" pos:end="247:23"><type pos:start="247:17" pos:end="247:19"><name pos:start="247:17" pos:end="247:19">int</name></type> <name pos:start="247:21" pos:end="247:23">dir</name></decl>, <decl pos:start="247:26" pos:end="247:26"><type ref="prev" pos:start="247:17" pos:end="247:19"/><name pos:start="247:26" pos:end="247:26">j</name></decl>;</decl_stmt>

                <for pos:start="249:17" pos:end="267:17">for<control pos:start="249:20" pos:end="249:40">(<init pos:start="249:21" pos:end="249:26"><expr pos:start="249:21" pos:end="249:25"><name pos:start="249:21" pos:end="249:23">dir</name><operator pos:start="249:24" pos:end="249:24">=</operator><literal type="number" pos:start="249:25" pos:end="249:25">0</literal></expr>;</init> <condition pos:start="249:28" pos:end="249:33"><expr pos:start="249:28" pos:end="249:32"><name pos:start="249:28" pos:end="249:30">dir</name><operator pos:start="249:31" pos:end="249:31">&lt;</operator><literal type="number" pos:start="249:32" pos:end="249:32">2</literal></expr>;</condition> <incr pos:start="249:35" pos:end="249:39"><expr pos:start="249:35" pos:end="249:39"><name pos:start="249:35" pos:end="249:37">dir</name><operator pos:start="249:38" pos:end="249:39">++</operator></expr></incr>)</control><block pos:start="249:41" pos:end="267:17">{<block_content pos:start="251:21" pos:end="265:21">

                    <for pos:start="251:21" pos:end="265:21">for<control pos:start="251:24" pos:end="251:38">(<init pos:start="251:25" pos:end="251:28"><expr pos:start="251:25" pos:end="251:27"><name pos:start="251:25" pos:end="251:25">i</name><operator pos:start="251:26" pos:end="251:26">=</operator><literal type="number" pos:start="251:27" pos:end="251:27">0</literal></expr>;</init> <condition pos:start="251:30" pos:end="251:33"><expr pos:start="251:30" pos:end="251:32"><name pos:start="251:30" pos:end="251:30">i</name><operator pos:start="251:31" pos:end="251:31">&lt;</operator><literal type="number" pos:start="251:32" pos:end="251:32">2</literal></expr>;</condition> <incr pos:start="251:35" pos:end="251:37"><expr pos:start="251:35" pos:end="251:37"><name pos:start="251:35" pos:end="251:35">i</name><operator pos:start="251:36" pos:end="251:37">++</operator></expr></incr>)</control><block pos:start="251:39" pos:end="265:21">{<block_content pos:start="253:25" pos:end="263:25">

                        <for pos:start="253:25" pos:end="263:25">for<control pos:start="253:28" pos:end="253:42">(<init pos:start="253:29" pos:end="253:32"><expr pos:start="253:29" pos:end="253:31"><name pos:start="253:29" pos:end="253:29">j</name><operator pos:start="253:30" pos:end="253:30">=</operator><literal type="number" pos:start="253:31" pos:end="253:31">0</literal></expr>;</init> <condition pos:start="253:34" pos:end="253:37"><expr pos:start="253:34" pos:end="253:36"><name pos:start="253:34" pos:end="253:34">j</name><operator pos:start="253:35" pos:end="253:35">&lt;</operator><literal type="number" pos:start="253:36" pos:end="253:36">2</literal></expr>;</condition> <incr pos:start="253:39" pos:end="253:41"><expr pos:start="253:39" pos:end="253:41"><name pos:start="253:39" pos:end="253:39">j</name><operator pos:start="253:40" pos:end="253:41">++</operator></expr></incr>)</control><block pos:start="253:43" pos:end="263:25">{<block_content pos:start="255:29" pos:end="261:114">

                            <decl_stmt pos:start="255:29" pos:end="257:101"><decl pos:start="255:29" pos:end="257:100"><type pos:start="255:29" pos:end="255:31"><name pos:start="255:29" pos:end="255:31">int</name></type> <name pos:start="255:33" pos:end="255:36">type</name><init pos:start="255:37" pos:end="257:100">= <expr pos:start="255:39" pos:end="257:100"><ternary pos:start="255:39" pos:end="257:100"><condition pos:start="255:39" pos:end="255:43"><expr pos:start="255:39" pos:end="255:41"><name pos:start="255:39" pos:end="255:41">dir</name></expr> ?</condition><then pos:start="255:45" pos:end="255:100"> <expr pos:start="255:45" pos:end="255:100"><operator pos:start="255:45" pos:end="255:45">(</operator><name pos:start="255:46" pos:end="255:73">CANDIDATE_MB_TYPE_BACKWARD_I</name><operator pos:start="255:74" pos:end="255:74">|</operator><name pos:start="255:75" pos:end="255:99">CANDIDATE_MB_TYPE_BIDIR_I</name><operator pos:start="255:100" pos:end="255:100">)</operator></expr>

                                          </then><else pos:start="257:43" pos:end="257:100">: <expr pos:start="257:45" pos:end="257:100"><operator pos:start="257:45" pos:end="257:45">(</operator><name pos:start="257:46" pos:end="257:72">CANDIDATE_MB_TYPE_FORWARD_I</name> <operator pos:start="257:74" pos:end="257:74">|</operator><name pos:start="257:75" pos:end="257:99">CANDIDATE_MB_TYPE_BIDIR_I</name><operator pos:start="257:100" pos:end="257:100">)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="259:29" pos:end="261:114"><expr pos:start="259:29" pos:end="261:113"><call pos:start="259:29" pos:end="261:113"><name pos:start="259:29" pos:end="259:43">ff_fix_long_mvs</name><argument_list pos:start="259:44" pos:end="261:113">(<argument pos:start="259:45" pos:end="259:45"><expr pos:start="259:45" pos:end="259:45"><name pos:start="259:45" pos:end="259:45">s</name></expr></argument>, <argument pos:start="259:48" pos:end="259:78"><expr pos:start="259:48" pos:end="259:78"><name pos:start="259:48" pos:end="259:78"><name pos:start="259:48" pos:end="259:48">s</name><operator pos:start="259:49" pos:end="259:50">-&gt;</operator><name pos:start="259:51" pos:end="259:70">b_field_select_table</name><index pos:start="259:71" pos:end="259:75">[<expr pos:start="259:72" pos:end="259:74"><name pos:start="259:72" pos:end="259:74">dir</name></expr>]</index><index pos:start="259:76" pos:end="259:78">[<expr pos:start="259:77" pos:end="259:77"><name pos:start="259:77" pos:end="259:77">i</name></expr>]</index></name></expr></argument>, <argument pos:start="259:81" pos:end="259:81"><expr pos:start="259:81" pos:end="259:81"><name pos:start="259:81" pos:end="259:81">j</name></expr></argument>,

                                            <argument pos:start="261:45" pos:end="261:74"><expr pos:start="261:45" pos:end="261:74"><name pos:start="261:45" pos:end="261:74"><name pos:start="261:45" pos:end="261:45">s</name><operator pos:start="261:46" pos:end="261:47">-&gt;</operator><name pos:start="261:48" pos:end="261:63">b_field_mv_table</name><index pos:start="261:64" pos:end="261:68">[<expr pos:start="261:65" pos:end="261:67"><name pos:start="261:65" pos:end="261:67">dir</name></expr>]</index><index pos:start="261:69" pos:end="261:71">[<expr pos:start="261:70" pos:end="261:70"><name pos:start="261:70" pos:end="261:70">i</name></expr>]</index><index pos:start="261:72" pos:end="261:74">[<expr pos:start="261:73" pos:end="261:73"><name pos:start="261:73" pos:end="261:73">j</name></expr>]</index></name></expr></argument>, <argument pos:start="261:77" pos:end="261:103"><expr pos:start="261:77" pos:end="261:103"><ternary pos:start="261:77" pos:end="261:103"><condition pos:start="261:77" pos:end="261:81"><expr pos:start="261:77" pos:end="261:79"><name pos:start="261:77" pos:end="261:79">dir</name></expr> ?</condition><then pos:start="261:83" pos:end="261:91"> <expr pos:start="261:83" pos:end="261:91"><name pos:start="261:83" pos:end="261:91"><name pos:start="261:83" pos:end="261:83">s</name><operator pos:start="261:84" pos:end="261:85">-&gt;</operator><name pos:start="261:86" pos:end="261:91">b_code</name></name></expr> </then><else pos:start="261:93" pos:end="261:103">: <expr pos:start="261:95" pos:end="261:103"><name pos:start="261:95" pos:end="261:103"><name pos:start="261:95" pos:end="261:95">s</name><operator pos:start="261:96" pos:end="261:97">-&gt;</operator><name pos:start="261:98" pos:end="261:103">f_code</name></name></expr></else></ternary></expr></argument>, <argument pos:start="261:106" pos:end="261:109"><expr pos:start="261:106" pos:end="261:109"><name pos:start="261:106" pos:end="261:109">type</name></expr></argument>, <argument pos:start="261:112" pos:end="261:112"><expr pos:start="261:112" pos:end="261:112"><literal type="number" pos:start="261:112" pos:end="261:112">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="277:5" pos:end="279:18"><if pos:start="277:5" pos:end="279:18">if <condition pos:start="277:8" pos:end="277:30">(<expr pos:start="277:9" pos:end="277:29"><call pos:start="277:9" pos:end="277:25"><name pos:start="277:9" pos:end="277:19">estimate_qp</name><argument_list pos:start="277:20" pos:end="277:25">(<argument pos:start="277:21" pos:end="277:21"><expr pos:start="277:21" pos:end="277:21"><name pos:start="277:21" pos:end="277:21">s</name></expr></argument>, <argument pos:start="277:24" pos:end="277:24"><expr pos:start="277:24" pos:end="277:24"><literal type="number" pos:start="277:24" pos:end="277:24">0</literal></expr></argument>)</argument_list></call> <operator pos:start="277:27" pos:end="277:27">&lt;</operator> <literal type="number" pos:start="277:29" pos:end="277:29">0</literal></expr>)</condition><block type="pseudo" pos:start="279:9" pos:end="279:18"><block_content pos:start="279:9" pos:end="279:18">

        <return pos:start="279:9" pos:end="279:18">return <expr pos:start="279:16" pos:end="279:17"><operator pos:start="279:16" pos:end="279:16">-</operator><literal type="number" pos:start="279:17" pos:end="279:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="283:5" pos:end="285:21"><if pos:start="283:5" pos:end="285:21">if<condition pos:start="283:7" pos:end="283:105">(<expr pos:start="283:8" pos:end="283:104"><name pos:start="283:8" pos:end="283:16"><name pos:start="283:8" pos:end="283:8">s</name><operator pos:start="283:9" pos:end="283:10">-&gt;</operator><name pos:start="283:11" pos:end="283:16">qscale</name></name> <operator pos:start="283:18" pos:end="283:18">&lt;</operator> <literal type="number" pos:start="283:20" pos:end="283:20">3</literal> <operator pos:start="283:22" pos:end="283:23">&amp;&amp;</operator> <name pos:start="283:25" pos:end="283:37"><name pos:start="283:25" pos:end="283:25">s</name><operator pos:start="283:26" pos:end="283:27">-&gt;</operator><name pos:start="283:28" pos:end="283:37">max_qcoeff</name></name><operator pos:start="283:38" pos:end="283:39">&lt;=</operator><literal type="number" pos:start="283:40" pos:end="283:42">128</literal> <operator pos:start="283:44" pos:end="283:45">&amp;&amp;</operator> <name pos:start="283:47" pos:end="283:58"><name pos:start="283:47" pos:end="283:47">s</name><operator pos:start="283:48" pos:end="283:49">-&gt;</operator><name pos:start="283:50" pos:end="283:58">pict_type</name></name><operator pos:start="283:59" pos:end="283:60">==</operator><name pos:start="283:61" pos:end="283:69">FF_I_TYPE</name> <operator pos:start="283:71" pos:end="283:72">&amp;&amp;</operator> <operator pos:start="283:74" pos:end="283:74">!</operator><operator pos:start="283:75" pos:end="283:75">(</operator><name pos:start="283:76" pos:end="283:83"><name pos:start="283:76" pos:end="283:76">s</name><operator pos:start="283:77" pos:end="283:78">-&gt;</operator><name pos:start="283:79" pos:end="283:83">flags</name></name> <operator pos:start="283:85" pos:end="283:85">&amp;</operator> <name pos:start="283:87" pos:end="283:103">CODEC_FLAG_QSCALE</name><operator pos:start="283:104" pos:end="283:104">)</operator></expr>)</condition><block type="pseudo" pos:start="285:9" pos:end="285:21"><block_content pos:start="285:9" pos:end="285:21">

        <expr_stmt pos:start="285:9" pos:end="285:21"><expr pos:start="285:9" pos:end="285:20"><name pos:start="285:9" pos:end="285:17"><name pos:start="285:9" pos:end="285:9">s</name><operator pos:start="285:10" pos:end="285:11">-&gt;</operator><name pos:start="285:12" pos:end="285:17">qscale</name></name><operator pos:start="285:18" pos:end="285:18">=</operator> <literal type="number" pos:start="285:20" pos:end="285:20">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="285:23" pos:end="285:48">//reduce clipping problems</comment>



    <if_stmt pos:start="289:5" pos:end="311:5"><if pos:start="289:5" pos:end="311:5">if <condition pos:start="289:8" pos:end="289:35">(<expr pos:start="289:9" pos:end="289:34"><name pos:start="289:9" pos:end="289:21"><name pos:start="289:9" pos:end="289:9">s</name><operator pos:start="289:10" pos:end="289:11">-&gt;</operator><name pos:start="289:12" pos:end="289:21">out_format</name></name> <operator pos:start="289:23" pos:end="289:24">==</operator> <name pos:start="289:26" pos:end="289:34">FMT_MJPEG</name></expr>)</condition> <block pos:start="289:37" pos:end="311:5">{<block_content pos:start="293:9" pos:end="309:21">

        <comment type="block" pos:start="291:9" pos:end="291:59">/* for mjpeg, we do include qscale in the matrix */</comment>

        <expr_stmt pos:start="293:9" pos:end="293:62"><expr pos:start="293:9" pos:end="293:61"><name pos:start="293:9" pos:end="293:26"><name pos:start="293:9" pos:end="293:9">s</name><operator pos:start="293:10" pos:end="293:11">-&gt;</operator><name pos:start="293:12" pos:end="293:23">intra_matrix</name><index pos:start="293:24" pos:end="293:26">[<expr pos:start="293:25" pos:end="293:25"><literal type="number" pos:start="293:25" pos:end="293:25">0</literal></expr>]</index></name> <operator pos:start="293:28" pos:end="293:28">=</operator> <name pos:start="293:30" pos:end="293:61"><name pos:start="293:30" pos:end="293:58">ff_mpeg1_default_intra_matrix</name><index pos:start="293:59" pos:end="293:61">[<expr pos:start="293:60" pos:end="293:60"><literal type="number" pos:start="293:60" pos:end="293:60">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="295:9" pos:end="303:9">for<control pos:start="295:12" pos:end="295:25">(<init pos:start="295:13" pos:end="295:16"><expr pos:start="295:13" pos:end="295:15"><name pos:start="295:13" pos:end="295:13">i</name><operator pos:start="295:14" pos:end="295:14">=</operator><literal type="number" pos:start="295:15" pos:end="295:15">1</literal></expr>;</init><condition pos:start="295:17" pos:end="295:21"><expr pos:start="295:17" pos:end="295:20"><name pos:start="295:17" pos:end="295:17">i</name><operator pos:start="295:18" pos:end="295:18">&lt;</operator><literal type="number" pos:start="295:19" pos:end="295:20">64</literal></expr>;</condition><incr pos:start="295:22" pos:end="295:24"><expr pos:start="295:22" pos:end="295:24"><name pos:start="295:22" pos:end="295:22">i</name><operator pos:start="295:23" pos:end="295:24">++</operator></expr></incr>)</control><block pos:start="295:26" pos:end="303:9">{<block_content pos:start="297:13" pos:end="301:100">

            <decl_stmt pos:start="297:13" pos:end="297:46"><decl pos:start="297:13" pos:end="297:45"><type pos:start="297:13" pos:end="297:15"><name pos:start="297:13" pos:end="297:15">int</name></type> <name pos:start="297:17" pos:end="297:17">j</name><init pos:start="297:18" pos:end="297:45">= <expr pos:start="297:20" pos:end="297:45"><name pos:start="297:20" pos:end="297:45"><name pos:start="297:20" pos:end="297:20">s</name><operator pos:start="297:21" pos:end="297:22">-&gt;</operator><name pos:start="297:23" pos:end="297:25">dsp</name><operator pos:start="297:26" pos:end="297:26">.</operator><name pos:start="297:27" pos:end="297:42">idct_permutation</name><index pos:start="297:43" pos:end="297:45">[<expr pos:start="297:44" pos:end="297:44"><name pos:start="297:44" pos:end="297:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="301:13" pos:end="301:100"><expr pos:start="301:13" pos:end="301:99"><name pos:start="301:13" pos:end="301:30"><name pos:start="301:13" pos:end="301:13">s</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:27">intra_matrix</name><index pos:start="301:28" pos:end="301:30">[<expr pos:start="301:29" pos:end="301:29"><name pos:start="301:29" pos:end="301:29">j</name></expr>]</index></name> <operator pos:start="301:32" pos:end="301:32">=</operator> <call pos:start="301:34" pos:end="301:99"><name pos:start="301:34" pos:end="301:46">av_clip_uint8</name><argument_list pos:start="301:47" pos:end="301:99">(<argument pos:start="301:48" pos:end="301:98"><expr pos:start="301:48" pos:end="301:98"><operator pos:start="301:48" pos:end="301:48">(</operator><name pos:start="301:49" pos:end="301:80"><name pos:start="301:49" pos:end="301:77">ff_mpeg1_default_intra_matrix</name><index pos:start="301:78" pos:end="301:80">[<expr pos:start="301:79" pos:end="301:79"><name pos:start="301:79" pos:end="301:79">i</name></expr>]</index></name> <operator pos:start="301:82" pos:end="301:82">*</operator> <name pos:start="301:84" pos:end="301:92"><name pos:start="301:84" pos:end="301:84">s</name><operator pos:start="301:85" pos:end="301:86">-&gt;</operator><name pos:start="301:87" pos:end="301:92">qscale</name></name><operator pos:start="301:93" pos:end="301:93">)</operator> <operator pos:start="301:95" pos:end="301:96">&gt;&gt;</operator> <literal type="number" pos:start="301:98" pos:end="301:98">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="305:9" pos:end="307:70"><expr pos:start="305:9" pos:end="307:69"><call pos:start="305:9" pos:end="307:69"><name pos:start="305:9" pos:end="305:25">ff_convert_matrix</name><argument_list pos:start="305:26" pos:end="307:69">(<argument pos:start="305:27" pos:end="305:33"><expr pos:start="305:27" pos:end="305:33"><operator pos:start="305:27" pos:end="305:27">&amp;</operator><name pos:start="305:28" pos:end="305:33"><name pos:start="305:28" pos:end="305:28">s</name><operator pos:start="305:29" pos:end="305:30">-&gt;</operator><name pos:start="305:31" pos:end="305:33">dsp</name></name></expr></argument>, <argument pos:start="305:36" pos:end="305:52"><expr pos:start="305:36" pos:end="305:52"><name pos:start="305:36" pos:end="305:52"><name pos:start="305:36" pos:end="305:36">s</name><operator pos:start="305:37" pos:end="305:38">-&gt;</operator><name pos:start="305:39" pos:end="305:52">q_intra_matrix</name></name></expr></argument>, <argument pos:start="305:55" pos:end="305:73"><expr pos:start="305:55" pos:end="305:73"><name pos:start="305:55" pos:end="305:73"><name pos:start="305:55" pos:end="305:55">s</name><operator pos:start="305:56" pos:end="305:57">-&gt;</operator><name pos:start="305:58" pos:end="305:73">q_intra_matrix16</name></name></expr></argument>,

                       <argument pos:start="307:24" pos:end="307:38"><expr pos:start="307:24" pos:end="307:38"><name pos:start="307:24" pos:end="307:38"><name pos:start="307:24" pos:end="307:24">s</name><operator pos:start="307:25" pos:end="307:26">-&gt;</operator><name pos:start="307:27" pos:end="307:38">intra_matrix</name></name></expr></argument>, <argument pos:start="307:41" pos:end="307:59"><expr pos:start="307:41" pos:end="307:59"><name pos:start="307:41" pos:end="307:59"><name pos:start="307:41" pos:end="307:41">s</name><operator pos:start="307:42" pos:end="307:43">-&gt;</operator><name pos:start="307:44" pos:end="307:59">intra_quant_bias</name></name></expr></argument>, <argument pos:start="307:62" pos:end="307:62"><expr pos:start="307:62" pos:end="307:62"><literal type="number" pos:start="307:62" pos:end="307:62">8</literal></expr></argument>, <argument pos:start="307:65" pos:end="307:65"><expr pos:start="307:65" pos:end="307:65"><literal type="number" pos:start="307:65" pos:end="307:65">8</literal></expr></argument>, <argument pos:start="307:68" pos:end="307:68"><expr pos:start="307:68" pos:end="307:68"><literal type="number" pos:start="307:68" pos:end="307:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:21"><expr pos:start="309:9" pos:end="309:20"><name pos:start="309:9" pos:end="309:17"><name pos:start="309:9" pos:end="309:9">s</name><operator pos:start="309:10" pos:end="309:11">-&gt;</operator><name pos:start="309:12" pos:end="309:17">qscale</name></name><operator pos:start="309:18" pos:end="309:18">=</operator> <literal type="number" pos:start="309:20" pos:end="309:20">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="315:5" pos:end="315:27">//FIXME var duplication</comment>

    <expr_stmt pos:start="317:5" pos:end="319:60"><expr pos:start="317:5" pos:end="319:59"><name pos:start="317:5" pos:end="317:37"><name pos:start="317:5" pos:end="317:5">s</name><operator pos:start="317:6" pos:end="317:7">-&gt;</operator><name pos:start="317:8" pos:end="317:26">current_picture_ptr</name><operator pos:start="317:27" pos:end="317:28">-&gt;</operator><name pos:start="317:29" pos:end="317:37">key_frame</name></name><operator pos:start="317:38" pos:end="317:38">=</operator>

    <name pos:start="319:5" pos:end="319:32"><name pos:start="319:5" pos:end="319:5">s</name><operator pos:start="319:6" pos:end="319:7">-&gt;</operator><name pos:start="319:8" pos:end="319:22">current_picture</name><operator pos:start="319:23" pos:end="319:23">.</operator><name pos:start="319:24" pos:end="319:32">key_frame</name></name><operator pos:start="319:33" pos:end="319:33">=</operator> <name pos:start="319:35" pos:end="319:46"><name pos:start="319:35" pos:end="319:35">s</name><operator pos:start="319:36" pos:end="319:37">-&gt;</operator><name pos:start="319:38" pos:end="319:46">pict_type</name></name> <operator pos:start="319:48" pos:end="319:49">==</operator> <name pos:start="319:51" pos:end="319:59">FF_I_TYPE</name></expr>;</expr_stmt> <comment type="line" pos:start="319:62" pos:end="319:76">//FIXME pic_ptr</comment>

    <expr_stmt pos:start="321:5" pos:end="323:47"><expr pos:start="321:5" pos:end="323:46"><name pos:start="321:5" pos:end="321:37"><name pos:start="321:5" pos:end="321:5">s</name><operator pos:start="321:6" pos:end="321:7">-&gt;</operator><name pos:start="321:8" pos:end="321:26">current_picture_ptr</name><operator pos:start="321:27" pos:end="321:28">-&gt;</operator><name pos:start="321:29" pos:end="321:37">pict_type</name></name><operator pos:start="321:38" pos:end="321:38">=</operator>

    <name pos:start="323:5" pos:end="323:32"><name pos:start="323:5" pos:end="323:5">s</name><operator pos:start="323:6" pos:end="323:7">-&gt;</operator><name pos:start="323:8" pos:end="323:22">current_picture</name><operator pos:start="323:23" pos:end="323:23">.</operator><name pos:start="323:24" pos:end="323:32">pict_type</name></name><operator pos:start="323:33" pos:end="323:33">=</operator> <name pos:start="323:35" pos:end="323:46"><name pos:start="323:35" pos:end="323:35">s</name><operator pos:start="323:36" pos:end="323:37">-&gt;</operator><name pos:start="323:38" pos:end="323:46">pict_type</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="327:5" pos:end="329:35"><if pos:start="327:5" pos:end="329:35">if<condition pos:start="327:7" pos:end="327:36">(<expr pos:start="327:8" pos:end="327:35"><name pos:start="327:8" pos:end="327:35"><name pos:start="327:8" pos:end="327:8">s</name><operator pos:start="327:9" pos:end="327:10">-&gt;</operator><name pos:start="327:11" pos:end="327:25">current_picture</name><operator pos:start="327:26" pos:end="327:26">.</operator><name pos:start="327:27" pos:end="327:35">key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="329:9" pos:end="329:35"><block_content pos:start="329:9" pos:end="329:35">

        <expr_stmt pos:start="329:9" pos:end="329:35"><expr pos:start="329:9" pos:end="329:34"><name pos:start="329:9" pos:end="329:32"><name pos:start="329:9" pos:end="329:9">s</name><operator pos:start="329:10" pos:end="329:11">-&gt;</operator><name pos:start="329:12" pos:end="329:32">picture_in_gop_number</name></name><operator pos:start="329:33" pos:end="329:33">=</operator><literal type="number" pos:start="329:34" pos:end="329:34">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="333:5" pos:end="333:41"><expr pos:start="333:5" pos:end="333:40"><name pos:start="333:5" pos:end="333:16"><name pos:start="333:5" pos:end="333:5">s</name><operator pos:start="333:6" pos:end="333:7">-&gt;</operator><name pos:start="333:8" pos:end="333:16">last_bits</name></name><operator pos:start="333:17" pos:end="333:17">=</operator> <call pos:start="333:19" pos:end="333:40"><name pos:start="333:19" pos:end="333:32">put_bits_count</name><argument_list pos:start="333:33" pos:end="333:40">(<argument pos:start="333:34" pos:end="333:39"><expr pos:start="333:34" pos:end="333:39"><operator pos:start="333:34" pos:end="333:34">&amp;</operator><name pos:start="333:35" pos:end="333:39"><name pos:start="333:35" pos:end="333:35">s</name><operator pos:start="333:36" pos:end="333:37">-&gt;</operator><name pos:start="333:38" pos:end="333:39">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="335:5" pos:end="401:5">switch<condition pos:start="335:11" pos:end="335:25">(<expr pos:start="335:12" pos:end="335:24"><name pos:start="335:12" pos:end="335:24"><name pos:start="335:12" pos:end="335:12">s</name><operator pos:start="335:13" pos:end="335:14">-&gt;</operator><name pos:start="335:15" pos:end="335:24">out_format</name></name></expr>)</condition> <block pos:start="335:27" pos:end="401:5">{<block_content pos:start="337:5" pos:end="399:18">

    <case pos:start="337:5" pos:end="337:19">case <expr pos:start="337:10" pos:end="337:18"><name pos:start="337:10" pos:end="337:18">FMT_MJPEG</name></expr>:</case>

        <if_stmt pos:start="339:9" pos:end="341:46"><if pos:start="339:9" pos:end="341:46">if <condition pos:start="339:12" pos:end="339:33">(<expr pos:start="339:13" pos:end="339:32"><name pos:start="339:13" pos:end="339:32">ENABLE_MJPEG_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="341:13" pos:end="341:46"><block_content pos:start="341:13" pos:end="341:46">

            <expr_stmt pos:start="341:13" pos:end="341:46"><expr pos:start="341:13" pos:end="341:45"><call pos:start="341:13" pos:end="341:45"><name pos:start="341:13" pos:end="341:42">ff_mjpeg_encode_picture_header</name><argument_list pos:start="341:43" pos:end="341:45">(<argument pos:start="341:44" pos:end="341:44"><expr pos:start="341:44" pos:end="341:44"><name pos:start="341:44" pos:end="341:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="343:9" pos:end="343:14">break;</break>

    <case pos:start="345:5" pos:end="345:18">case <expr pos:start="345:10" pos:end="345:17"><name pos:start="345:10" pos:end="345:17">FMT_H261</name></expr>:</case>

        <if_stmt pos:start="347:9" pos:end="349:61"><if pos:start="347:9" pos:end="349:61">if <condition pos:start="347:12" pos:end="347:32">(<expr pos:start="347:13" pos:end="347:31"><name pos:start="347:13" pos:end="347:31">ENABLE_H261_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="349:13" pos:end="349:61"><block_content pos:start="349:13" pos:end="349:61">

            <expr_stmt pos:start="349:13" pos:end="349:61"><expr pos:start="349:13" pos:end="349:60"><call pos:start="349:13" pos:end="349:60"><name pos:start="349:13" pos:end="349:41">ff_h261_encode_picture_header</name><argument_list pos:start="349:42" pos:end="349:60">(<argument pos:start="349:43" pos:end="349:43"><expr pos:start="349:43" pos:end="349:43"><name pos:start="349:43" pos:end="349:43">s</name></expr></argument>, <argument pos:start="349:46" pos:end="349:59"><expr pos:start="349:46" pos:end="349:59"><name pos:start="349:46" pos:end="349:59">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="351:9" pos:end="351:14">break;</break>

    <case pos:start="353:5" pos:end="353:18">case <expr pos:start="353:10" pos:end="353:17"><name pos:start="353:10" pos:end="353:17">FMT_H263</name></expr>:</case>

        <if_stmt pos:start="355:9" pos:end="381:58"><if pos:start="355:9" pos:end="357:61">if <condition pos:start="355:12" pos:end="355:64">(<expr pos:start="355:13" pos:end="355:63"><name pos:start="355:13" pos:end="355:31">ENABLE_WMV2_ENCODER</name> <operator pos:start="355:33" pos:end="355:34">&amp;&amp;</operator> <name pos:start="355:36" pos:end="355:46"><name pos:start="355:36" pos:end="355:36">s</name><operator pos:start="355:37" pos:end="355:38">-&gt;</operator><name pos:start="355:39" pos:end="355:46">codec_id</name></name> <operator pos:start="355:48" pos:end="355:49">==</operator> <name pos:start="355:51" pos:end="355:63">CODEC_ID_WMV2</name></expr>)</condition><block type="pseudo" pos:start="357:13" pos:end="357:61"><block_content pos:start="357:13" pos:end="357:61">

            <expr_stmt pos:start="357:13" pos:end="357:61"><expr pos:start="357:13" pos:end="357:60"><call pos:start="357:13" pos:end="357:60"><name pos:start="357:13" pos:end="357:41">ff_wmv2_encode_picture_header</name><argument_list pos:start="357:42" pos:end="357:60">(<argument pos:start="357:43" pos:end="357:43"><expr pos:start="357:43" pos:end="357:43"><name pos:start="357:43" pos:end="357:43">s</name></expr></argument>, <argument pos:start="357:46" pos:end="357:59"><expr pos:start="357:46" pos:end="357:59"><name pos:start="357:46" pos:end="357:59">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="359:9" pos:end="361:61">else if <condition pos:start="359:17" pos:end="359:59">(<expr pos:start="359:18" pos:end="359:58"><name pos:start="359:18" pos:end="359:39">ENABLE_MSMPEG4_ENCODER</name> <operator pos:start="359:41" pos:end="359:42">&amp;&amp;</operator> <name pos:start="359:44" pos:end="359:58"><name pos:start="359:44" pos:end="359:44">s</name><operator pos:start="359:45" pos:end="359:46">-&gt;</operator><name pos:start="359:47" pos:end="359:58">h263_msmpeg4</name></name></expr>)</condition><block type="pseudo" pos:start="361:13" pos:end="361:61"><block_content pos:start="361:13" pos:end="361:61">

            <expr_stmt pos:start="361:13" pos:end="361:61"><expr pos:start="361:13" pos:end="361:60"><call pos:start="361:13" pos:end="361:60"><name pos:start="361:13" pos:end="361:41">msmpeg4_encode_picture_header</name><argument_list pos:start="361:42" pos:end="361:60">(<argument pos:start="361:43" pos:end="361:43"><expr pos:start="361:43" pos:end="361:43"><name pos:start="361:43" pos:end="361:43">s</name></expr></argument>, <argument pos:start="361:46" pos:end="361:59"><expr pos:start="361:46" pos:end="361:59"><name pos:start="361:46" pos:end="361:59">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="363:9" pos:end="365:59">else if <condition pos:start="363:17" pos:end="363:54">(<expr pos:start="363:18" pos:end="363:53"><name pos:start="363:18" pos:end="363:37">ENABLE_MPEG4_ENCODER</name> <operator pos:start="363:39" pos:end="363:40">&amp;&amp;</operator> <name pos:start="363:42" pos:end="363:53"><name pos:start="363:42" pos:end="363:42">s</name><operator pos:start="363:43" pos:end="363:44">-&gt;</operator><name pos:start="363:45" pos:end="363:53">h263_pred</name></name></expr>)</condition><block type="pseudo" pos:start="365:13" pos:end="365:59"><block_content pos:start="365:13" pos:end="365:59">

            <expr_stmt pos:start="365:13" pos:end="365:59"><expr pos:start="365:13" pos:end="365:58"><call pos:start="365:13" pos:end="365:58"><name pos:start="365:13" pos:end="365:39">mpeg4_encode_picture_header</name><argument_list pos:start="365:40" pos:end="365:58">(<argument pos:start="365:41" pos:end="365:41"><expr pos:start="365:41" pos:end="365:41"><name pos:start="365:41" pos:end="365:41">s</name></expr></argument>, <argument pos:start="365:44" pos:end="365:57"><expr pos:start="365:44" pos:end="365:57"><name pos:start="365:44" pos:end="365:57">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="367:9" pos:end="369:58">else if <condition pos:start="367:17" pos:end="367:69">(<expr pos:start="367:18" pos:end="367:68"><name pos:start="367:18" pos:end="367:36">ENABLE_RV10_ENCODER</name> <operator pos:start="367:38" pos:end="367:39">&amp;&amp;</operator> <name pos:start="367:41" pos:end="367:51"><name pos:start="367:41" pos:end="367:41">s</name><operator pos:start="367:42" pos:end="367:43">-&gt;</operator><name pos:start="367:44" pos:end="367:51">codec_id</name></name> <operator pos:start="367:53" pos:end="367:54">==</operator> <name pos:start="367:56" pos:end="367:68">CODEC_ID_RV10</name></expr>)</condition><block type="pseudo" pos:start="369:13" pos:end="369:58"><block_content pos:start="369:13" pos:end="369:58">

            <expr_stmt pos:start="369:13" pos:end="369:58"><expr pos:start="369:13" pos:end="369:57"><call pos:start="369:13" pos:end="369:57"><name pos:start="369:13" pos:end="369:38">rv10_encode_picture_header</name><argument_list pos:start="369:39" pos:end="369:57">(<argument pos:start="369:40" pos:end="369:40"><expr pos:start="369:40" pos:end="369:40"><name pos:start="369:40" pos:end="369:40">s</name></expr></argument>, <argument pos:start="369:43" pos:end="369:56"><expr pos:start="369:43" pos:end="369:56"><name pos:start="369:43" pos:end="369:56">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="371:9" pos:end="373:58">else if <condition pos:start="371:17" pos:end="371:69">(<expr pos:start="371:18" pos:end="371:68"><name pos:start="371:18" pos:end="371:36">ENABLE_RV20_ENCODER</name> <operator pos:start="371:38" pos:end="371:39">&amp;&amp;</operator> <name pos:start="371:41" pos:end="371:51"><name pos:start="371:41" pos:end="371:41">s</name><operator pos:start="371:42" pos:end="371:43">-&gt;</operator><name pos:start="371:44" pos:end="371:51">codec_id</name></name> <operator pos:start="371:53" pos:end="371:54">==</operator> <name pos:start="371:56" pos:end="371:68">CODEC_ID_RV20</name></expr>)</condition><block type="pseudo" pos:start="373:13" pos:end="373:58"><block_content pos:start="373:13" pos:end="373:58">

            <expr_stmt pos:start="373:13" pos:end="373:58"><expr pos:start="373:13" pos:end="373:57"><call pos:start="373:13" pos:end="373:57"><name pos:start="373:13" pos:end="373:38">rv20_encode_picture_header</name><argument_list pos:start="373:39" pos:end="373:57">(<argument pos:start="373:40" pos:end="373:40"><expr pos:start="373:40" pos:end="373:40"><name pos:start="373:40" pos:end="373:40">s</name></expr></argument>, <argument pos:start="373:43" pos:end="373:56"><expr pos:start="373:43" pos:end="373:56"><name pos:start="373:43" pos:end="373:56">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="375:9" pos:end="377:60">else if <condition pos:start="375:17" pos:end="375:68">(<expr pos:start="375:18" pos:end="375:67"><name pos:start="375:18" pos:end="375:35">ENABLE_FLV_ENCODER</name> <operator pos:start="375:37" pos:end="375:38">&amp;&amp;</operator> <name pos:start="375:40" pos:end="375:50"><name pos:start="375:40" pos:end="375:40">s</name><operator pos:start="375:41" pos:end="375:42">-&gt;</operator><name pos:start="375:43" pos:end="375:50">codec_id</name></name> <operator pos:start="375:52" pos:end="375:53">==</operator> <name pos:start="375:55" pos:end="375:67">CODEC_ID_FLV1</name></expr>)</condition><block type="pseudo" pos:start="377:13" pos:end="377:60"><block_content pos:start="377:13" pos:end="377:60">

            <expr_stmt pos:start="377:13" pos:end="377:60"><expr pos:start="377:13" pos:end="377:59"><call pos:start="377:13" pos:end="377:59"><name pos:start="377:13" pos:end="377:40">ff_flv_encode_picture_header</name><argument_list pos:start="377:41" pos:end="377:59">(<argument pos:start="377:42" pos:end="377:42"><expr pos:start="377:42" pos:end="377:42"><name pos:start="377:42" pos:end="377:42">s</name></expr></argument>, <argument pos:start="377:45" pos:end="377:58"><expr pos:start="377:45" pos:end="377:58"><name pos:start="377:45" pos:end="377:58">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="379:9" pos:end="381:58">else if <condition pos:start="379:17" pos:end="379:41">(<expr pos:start="379:18" pos:end="379:40"><name pos:start="379:18" pos:end="379:40">ENABLE_ANY_H263_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="381:13" pos:end="381:58"><block_content pos:start="381:13" pos:end="381:58">

            <expr_stmt pos:start="381:13" pos:end="381:58"><expr pos:start="381:13" pos:end="381:57"><call pos:start="381:13" pos:end="381:57"><name pos:start="381:13" pos:end="381:38">h263_encode_picture_header</name><argument_list pos:start="381:39" pos:end="381:57">(<argument pos:start="381:40" pos:end="381:40"><expr pos:start="381:40" pos:end="381:40"><name pos:start="381:40" pos:end="381:40">s</name></expr></argument>, <argument pos:start="381:43" pos:end="381:56"><expr pos:start="381:43" pos:end="381:56"><name pos:start="381:43" pos:end="381:56">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="383:9" pos:end="383:14">break;</break>

    <case pos:start="385:5" pos:end="385:19">case <expr pos:start="385:10" pos:end="385:18"><name pos:start="385:10" pos:end="385:18">FMT_MPEG1</name></expr>:</case>

        <if_stmt pos:start="387:9" pos:end="389:59"><if pos:start="387:9" pos:end="389:59">if <condition pos:start="387:12" pos:end="387:67">(<expr pos:start="387:13" pos:end="387:66"><name pos:start="387:13" pos:end="387:37">ENABLE_MPEG1VIDEO_ENCODER</name> <operator pos:start="387:39" pos:end="387:40">||</operator> <name pos:start="387:42" pos:end="387:66">ENABLE_MPEG2VIDEO_ENCODER</name></expr>)</condition><block type="pseudo" pos:start="389:13" pos:end="389:59"><block_content pos:start="389:13" pos:end="389:59">

            <expr_stmt pos:start="389:13" pos:end="389:59"><expr pos:start="389:13" pos:end="389:58"><call pos:start="389:13" pos:end="389:58"><name pos:start="389:13" pos:end="389:39">mpeg1_encode_picture_header</name><argument_list pos:start="389:40" pos:end="389:58">(<argument pos:start="389:41" pos:end="389:41"><expr pos:start="389:41" pos:end="389:41"><name pos:start="389:41" pos:end="389:41">s</name></expr></argument>, <argument pos:start="389:44" pos:end="389:57"><expr pos:start="389:44" pos:end="389:57"><name pos:start="389:44" pos:end="389:57">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="391:9" pos:end="391:14">break;</break>

    <case pos:start="393:5" pos:end="393:18">case <expr pos:start="393:10" pos:end="393:17"><name pos:start="393:10" pos:end="393:17">FMT_H264</name></expr>:</case>

        <break pos:start="395:9" pos:end="395:14">break;</break>

    <default pos:start="397:5" pos:end="397:12">default:</default>

        <expr_stmt pos:start="399:9" pos:end="399:18"><expr pos:start="399:9" pos:end="399:17"><call pos:start="399:9" pos:end="399:17"><name pos:start="399:9" pos:end="399:14">assert</name><argument_list pos:start="399:15" pos:end="399:17">(<argument pos:start="399:16" pos:end="399:16"><expr pos:start="399:16" pos:end="399:16"><literal type="number" pos:start="399:16" pos:end="399:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="403:5" pos:end="403:33"><expr pos:start="403:5" pos:end="403:32"><name pos:start="403:5" pos:end="403:8">bits</name><operator pos:start="403:9" pos:end="403:9">=</operator> <call pos:start="403:11" pos:end="403:32"><name pos:start="403:11" pos:end="403:24">put_bits_count</name><argument_list pos:start="403:25" pos:end="403:32">(<argument pos:start="403:26" pos:end="403:31"><expr pos:start="403:26" pos:end="403:31"><operator pos:start="403:26" pos:end="403:26">&amp;</operator><name pos:start="403:27" pos:end="403:31"><name pos:start="403:27" pos:end="403:27">s</name><operator pos:start="403:28" pos:end="403:29">-&gt;</operator><name pos:start="403:30" pos:end="403:31">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="405:5" pos:end="405:40"><expr pos:start="405:5" pos:end="405:39"><name pos:start="405:5" pos:end="405:18"><name pos:start="405:5" pos:end="405:5">s</name><operator pos:start="405:6" pos:end="405:7">-&gt;</operator><name pos:start="405:8" pos:end="405:18">header_bits</name></name><operator pos:start="405:19" pos:end="405:19">=</operator> <name pos:start="405:21" pos:end="405:24">bits</name> <operator pos:start="405:26" pos:end="405:26">-</operator> <name pos:start="405:28" pos:end="405:39"><name pos:start="405:28" pos:end="405:28">s</name><operator pos:start="405:29" pos:end="405:30">-&gt;</operator><name pos:start="405:31" pos:end="405:39">last_bits</name></name></expr>;</expr_stmt>



    <for pos:start="409:5" pos:end="413:5">for<control pos:start="409:8" pos:end="409:43">(<init pos:start="409:9" pos:end="409:12"><expr pos:start="409:9" pos:end="409:11"><name pos:start="409:9" pos:end="409:9">i</name><operator pos:start="409:10" pos:end="409:10">=</operator><literal type="number" pos:start="409:11" pos:end="409:11">1</literal></expr>;</init> <condition pos:start="409:14" pos:end="409:38"><expr pos:start="409:14" pos:end="409:37"><name pos:start="409:14" pos:end="409:14">i</name><operator pos:start="409:15" pos:end="409:15">&lt;</operator><name pos:start="409:16" pos:end="409:37"><name pos:start="409:16" pos:end="409:16">s</name><operator pos:start="409:17" pos:end="409:18">-&gt;</operator><name pos:start="409:19" pos:end="409:23">avctx</name><operator pos:start="409:24" pos:end="409:25">-&gt;</operator><name pos:start="409:26" pos:end="409:37">thread_count</name></name></expr>;</condition> <incr pos:start="409:40" pos:end="409:42"><expr pos:start="409:40" pos:end="409:42"><name pos:start="409:40" pos:end="409:40">i</name><operator pos:start="409:41" pos:end="409:42">++</operator></expr></incr>)</control><block pos:start="409:44" pos:end="413:5">{<block_content pos:start="411:9" pos:end="411:67">

        <expr_stmt pos:start="411:9" pos:end="411:67"><expr pos:start="411:9" pos:end="411:66"><call pos:start="411:9" pos:end="411:66"><name pos:start="411:9" pos:end="411:41">update_duplicate_context_after_me</name><argument_list pos:start="411:42" pos:end="411:66">(<argument pos:start="411:43" pos:end="411:62"><expr pos:start="411:43" pos:end="411:62"><name pos:start="411:43" pos:end="411:62"><name pos:start="411:43" pos:end="411:43">s</name><operator pos:start="411:44" pos:end="411:45">-&gt;</operator><name pos:start="411:46" pos:end="411:59">thread_context</name><index pos:start="411:60" pos:end="411:62">[<expr pos:start="411:61" pos:end="411:61"><name pos:start="411:61" pos:end="411:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="411:65" pos:end="411:65"><expr pos:start="411:65" pos:end="411:65"><name pos:start="411:65" pos:end="411:65">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="415:5" pos:end="415:110"><expr pos:start="415:5" pos:end="415:109"><call pos:start="415:5" pos:end="415:109"><name pos:start="415:5" pos:end="415:21"><name pos:start="415:5" pos:end="415:5">s</name><operator pos:start="415:6" pos:end="415:7">-&gt;</operator><name pos:start="415:8" pos:end="415:12">avctx</name><operator pos:start="415:13" pos:end="415:14">-&gt;</operator><name pos:start="415:15" pos:end="415:21">execute</name></name><argument_list pos:start="415:22" pos:end="415:109">(<argument pos:start="415:23" pos:end="415:30"><expr pos:start="415:23" pos:end="415:30"><name pos:start="415:23" pos:end="415:30"><name pos:start="415:23" pos:end="415:23">s</name><operator pos:start="415:24" pos:end="415:25">-&gt;</operator><name pos:start="415:26" pos:end="415:30">avctx</name></name></expr></argument>, <argument pos:start="415:33" pos:end="415:45"><expr pos:start="415:33" pos:end="415:45"><name pos:start="415:33" pos:end="415:45">encode_thread</name></expr></argument>, <argument pos:start="415:48" pos:end="415:78"><expr pos:start="415:48" pos:end="415:78"><operator pos:start="415:48" pos:end="415:48">(</operator><name pos:start="415:49" pos:end="415:52">void</name><operator pos:start="415:53" pos:end="415:53">*</operator><operator pos:start="415:54" pos:end="415:54">*</operator><operator pos:start="415:55" pos:end="415:55">)</operator><operator pos:start="415:56" pos:end="415:56">&amp;</operator><operator pos:start="415:57" pos:end="415:57">(</operator><name pos:start="415:58" pos:end="415:77"><name pos:start="415:58" pos:end="415:58">s</name><operator pos:start="415:59" pos:end="415:60">-&gt;</operator><name pos:start="415:61" pos:end="415:74">thread_context</name><index pos:start="415:75" pos:end="415:77">[<expr pos:start="415:76" pos:end="415:76"><literal type="number" pos:start="415:76" pos:end="415:76">0</literal></expr>]</index></name><operator pos:start="415:78" pos:end="415:78">)</operator></expr></argument>, <argument pos:start="415:81" pos:end="415:84"><expr pos:start="415:81" pos:end="415:84"><name pos:start="415:81" pos:end="415:84">NULL</name></expr></argument>, <argument pos:start="415:87" pos:end="415:108"><expr pos:start="415:87" pos:end="415:108"><name pos:start="415:87" pos:end="415:108"><name pos:start="415:87" pos:end="415:87">s</name><operator pos:start="415:88" pos:end="415:89">-&gt;</operator><name pos:start="415:90" pos:end="415:94">avctx</name><operator pos:start="415:95" pos:end="415:96">-&gt;</operator><name pos:start="415:97" pos:end="415:108">thread_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="417:5" pos:end="421:5">for<control pos:start="417:8" pos:end="417:43">(<init pos:start="417:9" pos:end="417:12"><expr pos:start="417:9" pos:end="417:11"><name pos:start="417:9" pos:end="417:9">i</name><operator pos:start="417:10" pos:end="417:10">=</operator><literal type="number" pos:start="417:11" pos:end="417:11">1</literal></expr>;</init> <condition pos:start="417:14" pos:end="417:38"><expr pos:start="417:14" pos:end="417:37"><name pos:start="417:14" pos:end="417:14">i</name><operator pos:start="417:15" pos:end="417:15">&lt;</operator><name pos:start="417:16" pos:end="417:37"><name pos:start="417:16" pos:end="417:16">s</name><operator pos:start="417:17" pos:end="417:18">-&gt;</operator><name pos:start="417:19" pos:end="417:23">avctx</name><operator pos:start="417:24" pos:end="417:25">-&gt;</operator><name pos:start="417:26" pos:end="417:37">thread_count</name></name></expr>;</condition> <incr pos:start="417:40" pos:end="417:42"><expr pos:start="417:40" pos:end="417:42"><name pos:start="417:40" pos:end="417:40">i</name><operator pos:start="417:41" pos:end="417:42">++</operator></expr></incr>)</control><block pos:start="417:44" pos:end="421:5">{<block_content pos:start="419:9" pos:end="419:60">

        <expr_stmt pos:start="419:9" pos:end="419:60"><expr pos:start="419:9" pos:end="419:59"><call pos:start="419:9" pos:end="419:59"><name pos:start="419:9" pos:end="419:34">merge_context_after_encode</name><argument_list pos:start="419:35" pos:end="419:59">(<argument pos:start="419:36" pos:end="419:36"><expr pos:start="419:36" pos:end="419:36"><name pos:start="419:36" pos:end="419:36">s</name></expr></argument>, <argument pos:start="419:39" pos:end="419:58"><expr pos:start="419:39" pos:end="419:58"><name pos:start="419:39" pos:end="419:58"><name pos:start="419:39" pos:end="419:39">s</name><operator pos:start="419:40" pos:end="419:41">-&gt;</operator><name pos:start="419:42" pos:end="419:55">thread_context</name><index pos:start="419:56" pos:end="419:58">[<expr pos:start="419:57" pos:end="419:57"><name pos:start="419:57" pos:end="419:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="423:5" pos:end="423:13"><expr pos:start="423:5" pos:end="423:12"><call pos:start="423:5" pos:end="423:12"><name pos:start="423:5" pos:end="423:10">emms_c</name><argument_list pos:start="423:11" pos:end="423:12">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="425:5" pos:end="425:13">return <expr pos:start="425:12" pos:end="425:12"><literal type="number" pos:start="425:12" pos:end="425:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
