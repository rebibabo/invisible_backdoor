<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13423.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">AddressSpace</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:51">memory_region_to_address_space</name><parameter_list pos:start="1:52" pos:end="1:69">(<parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:64">MemoryRegion</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">mr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:12">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">AddressSpace</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">as</name></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="13:5">while <condition pos:start="9:11" pos:end="9:25">(<expr pos:start="9:12" pos:end="9:24"><name pos:start="9:12" pos:end="9:24"><name pos:start="9:12" pos:end="9:13">mr</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:24">container</name></name></expr>)</condition> <block pos:start="9:27" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:27">

        <expr_stmt pos:start="11:9" pos:end="11:27"><expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:10">mr</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <name pos:start="11:14" pos:end="11:26"><name pos:start="11:14" pos:end="11:15">mr</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:26">container</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <macro pos:start="15:5" pos:end="15:60"><name pos:start="15:5" pos:end="15:18">QTAILQ_FOREACH</name><argument_list pos:start="15:19" pos:end="15:60">(<argument pos:start="15:20" pos:end="15:21">as</argument>, <argument pos:start="15:24" pos:end="15:38">&amp;address_spaces</argument>, <argument pos:start="15:41" pos:end="15:59">address_spaces_link</argument>)</argument_list></macro> <block pos:start="15:62" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:9">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:27">(<expr pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:14">mr</name> <operator pos:start="17:16" pos:end="17:17">==</operator> <name pos:start="17:19" pos:end="17:26"><name pos:start="17:19" pos:end="17:20">as</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:26">root</name></name></expr>)</condition> <block pos:start="17:29" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:22">

            <return pos:start="19:13" pos:end="19:22">return <expr pos:start="19:20" pos:end="19:21"><name pos:start="19:20" pos:end="19:21">as</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="25:5" pos:end="25:12"><expr pos:start="25:5" pos:end="25:11"><call pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:9">abort</name><argument_list pos:start="25:10" pos:end="25:11">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
