<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/791.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:35">qpci_spapr_io_readl</name><parameter_list pos:start="1:36" pos:end="1:61">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:43">QPCIBus</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">bus</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:54">void</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:22">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">QPCIBusSPAPR</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:58">= <expr pos:start="5:23" pos:end="5:58"><call pos:start="5:23" pos:end="5:58"><name pos:start="5:23" pos:end="5:34">container_of</name><argument_list pos:start="5:35" pos:end="5:58">(<argument pos:start="5:36" pos:end="5:38"><expr pos:start="5:36" pos:end="5:38"><name pos:start="5:36" pos:end="5:38">bus</name></expr></argument>, <argument pos:start="5:41" pos:end="5:52"><expr pos:start="5:41" pos:end="5:52"><name pos:start="5:41" pos:end="5:52">QPCIBusSPAPR</name></expr></argument>, <argument pos:start="5:55" pos:end="5:57"><expr pos:start="5:55" pos:end="5:57"><name pos:start="5:55" pos:end="5:57">bus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">port</name> <init pos:start="7:19" pos:end="7:35">= <expr pos:start="7:21" pos:end="7:35"><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:30">uintptr_t</name><operator pos:start="7:31" pos:end="7:31">)</operator><name pos:start="7:32" pos:end="7:35">addr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">v</name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:12">port</name> <operator pos:start="11:14" pos:end="11:14">&lt;</operator> <name pos:start="11:16" pos:end="11:26"><name pos:start="11:16" pos:end="11:16">s</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:21">pio</name><operator pos:start="11:22" pos:end="11:22">.</operator><name pos:start="11:23" pos:end="11:26">size</name></name></expr>)</condition> <block pos:start="11:29" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:42">

        <expr_stmt pos:start="13:9" pos:end="13:42"><expr pos:start="13:9" pos:end="13:41"><name pos:start="13:9" pos:end="13:9">v</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:41"><name pos:start="13:13" pos:end="13:17">readl</name><argument_list pos:start="13:18" pos:end="13:41">(<argument pos:start="13:19" pos:end="13:40"><expr pos:start="13:19" pos:end="13:40"><name pos:start="13:19" pos:end="13:33"><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:33">pio_cpu_base</name></name> <operator pos:start="13:35" pos:end="13:35">+</operator> <name pos:start="13:37" pos:end="13:40">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="19:5">else <block pos:start="15:12" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:43">

        <expr_stmt pos:start="17:9" pos:end="17:43"><expr pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:9">v</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:42"><name pos:start="17:13" pos:end="17:17">readl</name><argument_list pos:start="17:18" pos:end="17:42">(<argument pos:start="17:19" pos:end="17:41"><expr pos:start="17:19" pos:end="17:41"><name pos:start="17:19" pos:end="17:34"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:34">mmio_cpu_base</name></name> <operator pos:start="17:36" pos:end="17:36">+</operator> <name pos:start="17:38" pos:end="17:41">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="21:5" pos:end="21:22">return <expr pos:start="21:12" pos:end="21:21"><call pos:start="21:12" pos:end="21:21"><name pos:start="21:12" pos:end="21:18">bswap32</name><argument_list pos:start="21:19" pos:end="21:21">(<argument pos:start="21:20" pos:end="21:20"><expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">v</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
