<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19360.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">ff_pngdsp_init_x86</name><parameter_list pos:start="1:24" pos:end="1:43">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:37">PNGDSPContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dsp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="32:0">

<cpp:if pos:start="5:1" pos:end="5:13">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">HAVE_YASM</name></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="12:0"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">flags</name> <init pos:start="7:15" pos:end="7:34">= <expr pos:start="7:17" pos:end="7:34"><call pos:start="7:17" pos:end="7:34"><name pos:start="7:17" pos:end="7:32">av_get_cpu_flags</name><argument_list pos:start="7:33" pos:end="7:34">()</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="11:1" pos:end="11:15">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">ARCH_X86_32</name></expr></cpp:if>

    <if_stmt pos:start="13:5" pos:end="18:0"><if pos:start="13:5" pos:end="18:0">if <condition pos:start="13:8" pos:end="13:32">(<expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:13">flags</name> <operator pos:start="13:15" pos:end="13:15">&amp;</operator> <name pos:start="13:17" pos:end="13:31">AV_CPU_FLAG_MMX</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="18:0"><block_content pos:start="15:9" pos:end="18:0">

        <expr_stmt pos:start="15:9" pos:end="18:0"><expr pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:11">dsp</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:25">add_bytes_l2</name></name>         <operator pos:start="15:35" pos:end="15:35">=</operator> <name pos:start="15:37" pos:end="15:55">ff_add_bytes_l2_mmx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="19:5" pos:end="21:69"><if pos:start="19:5" pos:end="21:69">if <condition pos:start="19:8" pos:end="19:35">(<expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:13">flags</name> <operator pos:start="19:15" pos:end="19:15">&amp;</operator> <name pos:start="19:17" pos:end="19:34">AV_CPU_FLAG_MMXEXT</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:69"><block_content pos:start="21:9" pos:end="21:69">

        <expr_stmt pos:start="21:9" pos:end="21:69"><expr pos:start="21:9" pos:end="21:68"><name pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:11">dsp</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:33">add_paeth_prediction</name></name> <operator pos:start="21:35" pos:end="21:35">=</operator> <name pos:start="21:37" pos:end="21:68">ff_add_png_paeth_prediction_mmx2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:57"><if pos:start="23:5" pos:end="25:57">if <condition pos:start="23:8" pos:end="23:33">(<expr pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:13">flags</name> <operator pos:start="23:15" pos:end="23:15">&amp;</operator> <name pos:start="23:17" pos:end="23:32">AV_CPU_FLAG_SSE2</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:57"><block_content pos:start="25:9" pos:end="25:57">

        <expr_stmt pos:start="25:9" pos:end="25:57"><expr pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:11">dsp</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:25">add_bytes_l2</name></name>         <operator pos:start="25:35" pos:end="25:35">=</operator> <name pos:start="25:37" pos:end="25:56">ff_add_bytes_l2_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="32:0"><if pos:start="27:5" pos:end="32:0">if <condition pos:start="27:8" pos:end="27:34">(<expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:13">flags</name> <operator pos:start="27:15" pos:end="27:15">&amp;</operator> <name pos:start="27:17" pos:end="27:33">AV_CPU_FLAG_SSSE3</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="32:0"><block_content pos:start="29:9" pos:end="32:0">

        <expr_stmt pos:start="29:9" pos:end="32:0"><expr pos:start="29:9" pos:end="29:69"><name pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:11">dsp</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:33">add_paeth_prediction</name></name> <operator pos:start="29:35" pos:end="29:35">=</operator> <name pos:start="29:37" pos:end="29:69">ff_add_png_paeth_prediction_ssse3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
