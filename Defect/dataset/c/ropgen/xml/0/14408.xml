<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14408.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:25">qemu_clock_get_ns</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:39">QEMUClockType</name></type> <name pos:start="1:41" pos:end="1:44">type</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:15">now</name></decl>, <decl pos:start="5:18" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:18" pos:end="5:21">last</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">QEMUClock</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">clock</name> <init pos:start="7:22" pos:end="7:43">= <expr pos:start="7:24" pos:end="7:43"><call pos:start="7:24" pos:end="7:43"><name pos:start="7:24" pos:end="7:37">qemu_clock_ptr</name><argument_list pos:start="7:38" pos:end="7:43">(<argument pos:start="7:39" pos:end="7:42"><expr pos:start="7:39" pos:end="7:42"><name pos:start="7:39" pos:end="7:42">type</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="51:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">type</name></expr>)</condition> <block pos:start="11:19" pos:end="51:5">{<block_content pos:start="13:5" pos:end="49:31">

    <case pos:start="13:5" pos:end="13:29">case <expr pos:start="13:10" pos:end="13:28"><name pos:start="13:10" pos:end="13:28">QEMU_CLOCK_REALTIME</name></expr>:</case>

        <return pos:start="15:9" pos:end="15:27">return <expr pos:start="15:16" pos:end="15:26"><call pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:24">get_clock</name><argument_list pos:start="15:25" pos:end="15:26">()</argument_list></call></expr>;</return>

    <default pos:start="17:5" pos:end="17:12">default:</default>

    <case pos:start="19:5" pos:end="19:28">case <expr pos:start="19:10" pos:end="19:27"><name pos:start="19:10" pos:end="19:27">QEMU_CLOCK_VIRTUAL</name></expr>:</case>

        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:23">(<expr pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:22">use_icount</name></expr>)</condition> <block pos:start="21:25" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:36">

            <return pos:start="23:13" pos:end="23:36">return <expr pos:start="23:20" pos:end="23:35"><call pos:start="23:20" pos:end="23:35"><name pos:start="23:20" pos:end="23:33">cpu_get_icount</name><argument_list pos:start="23:34" pos:end="23:35">()</argument_list></call></expr>;</return>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="29:9">else <block pos:start="25:16" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:35">

            <return pos:start="27:13" pos:end="27:35">return <expr pos:start="27:20" pos:end="27:34"><call pos:start="27:20" pos:end="27:34"><name pos:start="27:20" pos:end="27:32">cpu_get_clock</name><argument_list pos:start="27:33" pos:end="27:34">()</argument_list></call></expr>;</return>

        </block_content>}</block></else></if_stmt>

    <case pos:start="31:5" pos:end="31:25">case <expr pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:24">QEMU_CLOCK_HOST</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:11">now</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:34"><name pos:start="33:15" pos:end="33:32">get_clock_realtime</name><argument_list pos:start="33:33" pos:end="33:34">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:12">last</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:26"><name pos:start="35:16" pos:end="35:20">clock</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:26">last</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:13">clock</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:19">last</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:25">now</name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:23">(<expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:15">now</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <name pos:start="39:19" pos:end="39:22">last</name></expr>)</condition> <block pos:start="39:25" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:64">

            <expr_stmt pos:start="41:13" pos:end="41:64"><expr pos:start="41:13" pos:end="41:63"><call pos:start="41:13" pos:end="41:63"><name pos:start="41:13" pos:end="41:32">notifier_list_notify</name><argument_list pos:start="41:33" pos:end="41:63">(<argument pos:start="41:34" pos:end="41:56"><expr pos:start="41:34" pos:end="41:56"><operator pos:start="41:34" pos:end="41:34">&amp;</operator><name pos:start="41:35" pos:end="41:56"><name pos:start="41:35" pos:end="41:39">clock</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:56">reset_notifiers</name></name></expr></argument>, <argument pos:start="41:59" pos:end="41:62"><expr pos:start="41:59" pos:end="41:62"><operator pos:start="41:59" pos:end="41:59">&amp;</operator><name pos:start="41:60" pos:end="41:62">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="45:9" pos:end="45:19">return <expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">now</name></expr>;</return>

    <case pos:start="47:5" pos:end="47:31">case <expr pos:start="47:10" pos:end="47:30"><name pos:start="47:10" pos:end="47:30">QEMU_CLOCK_VIRTUAL_RT</name></expr>:</case>

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:28">cpu_get_clock</name><argument_list pos:start="49:29" pos:end="49:30">()</argument_list></call></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
