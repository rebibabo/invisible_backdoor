<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23651.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">show_help</name><parameter_list pos:start="1:15" pos:end="1:20">(<parameter pos:start="1:16" pos:end="1:19"><decl pos:start="1:16" pos:end="1:19"><type pos:start="1:16" pos:end="1:19"><name pos:start="1:16" pos:end="1:19">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:12">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:21"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:19">OptionDef</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">po</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:17">expert</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="19:34"><expr pos:start="11:5" pos:end="19:33"><call pos:start="11:5" pos:end="19:33"><name pos:start="11:5" pos:end="11:10">printf</name><argument_list pos:start="11:11" pos:end="19:33">(<argument pos:start="11:12" pos:end="19:32"><expr pos:start="11:12" pos:end="19:32"><literal type="string" pos:start="11:12" pos:end="11:28">"ffmpeg version "</literal> <name pos:start="11:30" pos:end="11:43">FFMPEG_VERSION</name> <literal type="string" pos:start="11:45" pos:end="11:87">", Copyright (c) 2000,2001 Gerard Lantau\n"</literal>

           <literal type="string" pos:start="13:12" pos:end="13:80">"usage: ffmpeg [[options] -i input_file]... {[options] outfile}...\n"</literal>

           <literal type="string" pos:start="15:12" pos:end="15:72">"Hyper fast MPEG1/MPEG4/H263/RV and AC3/MPEG audio encoder\n"</literal>

           <literal type="string" pos:start="17:12" pos:end="17:15">"\n"</literal>

           <literal type="string" pos:start="19:12" pos:end="19:32">"Main options are:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="51:5">for<control pos:start="21:8" pos:end="21:20">(<init pos:start="21:9" pos:end="21:12"><expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:9">i</name><operator pos:start="21:10" pos:end="21:10">=</operator><literal type="number" pos:start="21:11" pos:end="21:11">0</literal></expr>;</init><condition pos:start="21:13" pos:end="21:16"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:13">i</name><operator pos:start="21:14" pos:end="21:14">&lt;</operator><literal type="number" pos:start="21:15" pos:end="21:15">2</literal></expr>;</condition><incr pos:start="21:17" pos:end="21:19"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:17">i</name><operator pos:start="21:18" pos:end="21:19">++</operator></expr></incr>)</control> <block pos:start="21:22" pos:end="51:5">{<block_content pos:start="23:9" pos:end="49:9">

        <if_stmt pos:start="23:9" pos:end="25:48"><if pos:start="23:9" pos:end="25:48">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:13">i</name> <operator pos:start="23:15" pos:end="23:16">==</operator> <literal type="number" pos:start="23:18" pos:end="23:18">1</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:48"><block_content pos:start="25:13" pos:end="25:48">

            <expr_stmt pos:start="25:13" pos:end="25:48"><expr pos:start="25:13" pos:end="25:47"><call pos:start="25:13" pos:end="25:47"><name pos:start="25:13" pos:end="25:18">printf</name><argument_list pos:start="25:19" pos:end="25:47">(<argument pos:start="25:20" pos:end="25:46"><expr pos:start="25:20" pos:end="25:46"><literal type="string" pos:start="25:20" pos:end="25:46">"\nAdvanced options are:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <for pos:start="27:9" pos:end="49:9">for<control pos:start="27:12" pos:end="27:49">(<init pos:start="27:13" pos:end="27:25"><expr pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:14">po</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:24">options</name></expr>;</init> <condition pos:start="27:27" pos:end="27:43"><expr pos:start="27:27" pos:end="27:42"><name pos:start="27:27" pos:end="27:34"><name pos:start="27:27" pos:end="27:28">po</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:34">name</name></name> <operator pos:start="27:36" pos:end="27:37">!=</operator> <name pos:start="27:39" pos:end="27:42">NULL</name></expr>;</condition> <incr pos:start="27:45" pos:end="27:48"><expr pos:start="27:45" pos:end="27:48"><name pos:start="27:45" pos:end="27:46">po</name><operator pos:start="27:47" pos:end="27:48">++</operator></expr></incr>)</control> <block pos:start="27:51" pos:end="49:9">{<block_content pos:start="29:13" pos:end="47:13">

            <decl_stmt pos:start="29:13" pos:end="29:25"><decl pos:start="29:13" pos:end="29:24"><type pos:start="29:13" pos:end="29:16"><name pos:start="29:13" pos:end="29:16">char</name></type> <name pos:start="29:18" pos:end="29:24"><name pos:start="29:18" pos:end="29:20">buf</name><index pos:start="29:21" pos:end="29:24">[<expr pos:start="29:22" pos:end="29:23"><literal type="number" pos:start="29:22" pos:end="29:23">64</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:51"><expr pos:start="31:13" pos:end="31:50"><name pos:start="31:13" pos:end="31:18">expert</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <operator pos:start="31:22" pos:end="31:22">(</operator><name pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:24">po</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:31">flags</name></name> <operator pos:start="31:33" pos:end="31:33">&amp;</operator> <name pos:start="31:35" pos:end="31:44">OPT_EXPERT</name><operator pos:start="31:45" pos:end="31:45">)</operator> <operator pos:start="31:47" pos:end="31:48">!=</operator> <literal type="number" pos:start="31:50" pos:end="31:50">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="47:13"><if pos:start="33:13" pos:end="47:13">if <condition pos:start="33:16" pos:end="33:28">(<expr pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:22">expert</name> <operator pos:start="33:24" pos:end="33:25">==</operator> <name pos:start="33:27" pos:end="33:27">i</name></expr>)</condition> <block pos:start="33:30" pos:end="47:13">{<block_content pos:start="35:17" pos:end="45:54">

                <expr_stmt pos:start="35:17" pos:end="35:38"><expr pos:start="35:17" pos:end="35:37"><call pos:start="35:17" pos:end="35:37"><name pos:start="35:17" pos:end="35:22">strcpy</name><argument_list pos:start="35:23" pos:end="35:37">(<argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">buf</name></expr></argument>, <argument pos:start="35:29" pos:end="35:36"><expr pos:start="35:29" pos:end="35:36"><name pos:start="35:29" pos:end="35:36"><name pos:start="35:29" pos:end="35:30">po</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:36">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="37:17" pos:end="43:17"><if pos:start="37:17" pos:end="43:17">if <condition pos:start="37:20" pos:end="37:40">(<expr pos:start="37:21" pos:end="37:39"><name pos:start="37:21" pos:end="37:29"><name pos:start="37:21" pos:end="37:22">po</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:29">flags</name></name> <operator pos:start="37:31" pos:end="37:31">&amp;</operator> <name pos:start="37:33" pos:end="37:39">HAS_ARG</name></expr>)</condition> <block pos:start="37:42" pos:end="43:17">{<block_content pos:start="39:21" pos:end="41:45">

                    <expr_stmt pos:start="39:21" pos:end="39:37"><expr pos:start="39:21" pos:end="39:36"><call pos:start="39:21" pos:end="39:36"><name pos:start="39:21" pos:end="39:26">strcat</name><argument_list pos:start="39:27" pos:end="39:36">(<argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">buf</name></expr></argument>, <argument pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><literal type="string" pos:start="39:33" pos:end="39:35">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="41:21" pos:end="41:45"><expr pos:start="41:21" pos:end="41:44"><call pos:start="41:21" pos:end="41:44"><name pos:start="41:21" pos:end="41:26">strcat</name><argument_list pos:start="41:27" pos:end="41:44">(<argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">buf</name></expr></argument>, <argument pos:start="41:33" pos:end="41:43"><expr pos:start="41:33" pos:end="41:43"><name pos:start="41:33" pos:end="41:43"><name pos:start="41:33" pos:end="41:34">po</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:43">argname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:54"><expr pos:start="45:17" pos:end="45:53"><call pos:start="45:17" pos:end="45:53"><name pos:start="45:17" pos:end="45:22">printf</name><argument_list pos:start="45:23" pos:end="45:53">(<argument pos:start="45:24" pos:end="45:37"><expr pos:start="45:24" pos:end="45:37"><literal type="string" pos:start="45:24" pos:end="45:37">"-%-17s  %s\n"</literal></expr></argument>, <argument pos:start="45:40" pos:end="45:42"><expr pos:start="45:40" pos:end="45:42"><name pos:start="45:40" pos:end="45:42">buf</name></expr></argument>, <argument pos:start="45:45" pos:end="45:52"><expr pos:start="45:45" pos:end="45:52"><name pos:start="45:45" pos:end="45:52"><name pos:start="45:45" pos:end="45:46">po</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:52">help</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="55:5" pos:end="55:12"><expr pos:start="55:5" pos:end="55:11"><call pos:start="55:5" pos:end="55:11"><name pos:start="55:5" pos:end="55:8">exit</name><argument_list pos:start="55:9" pos:end="55:11">(<argument pos:start="55:10" pos:end="55:10"><expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
