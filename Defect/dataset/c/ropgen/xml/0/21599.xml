<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21599.c" pos:tabs="8"><function pos:start="1:1" pos:end="497:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_video_out</name><parameter_list pos:start="1:25" pos:end="9:69">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, 

                         <parameter pos:start="3:26" pos:end="3:44"><decl pos:start="3:26" pos:end="3:44"><type pos:start="3:26" pos:end="3:44"><name pos:start="3:26" pos:end="3:39">AVOutputStream</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">ost</name></decl></parameter>, 

                         <parameter pos:start="5:26" pos:end="5:43"><decl pos:start="5:26" pos:end="5:43"><type pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">AVInputStream</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:43">ist</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:44"><decl pos:start="7:26" pos:end="7:44"><type pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:32">AVFrame</name> <modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:44">in_picture</name></decl></parameter>,

                         <parameter pos:start="9:26" pos:end="9:40"><decl pos:start="9:26" pos:end="9:40"><type pos:start="9:26" pos:end="9:40"><name pos:start="9:26" pos:end="9:28">int</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:40">frame_size</name></decl></parameter>, <parameter pos:start="9:43" pos:end="9:68"><decl pos:start="9:43" pos:end="9:68"><type pos:start="9:43" pos:end="9:68"><name pos:start="9:43" pos:end="9:56">AVOutputStream</name> <modifier pos:start="9:58" pos:end="9:58">*</modifier></type><name pos:start="9:59" pos:end="9:68">audio_sync</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="497:1">{<block_content pos:start="13:5" pos:end="495:18">

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">nb_frames</name></decl>, <decl pos:start="13:20" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:20">i</name></decl>, <decl pos:start="13:23" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:25">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:26">final_picture</name></decl>, <decl pos:start="15:29" pos:end="15:46"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:46">formatted_picture</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:51"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">AVFrame</name></type> <name pos:start="17:13" pos:end="17:31">picture_format_temp</name></decl>, <decl pos:start="17:34" pos:end="17:50"><type ref="prev" pos:start="17:5" pos:end="17:11"/><name pos:start="17:34" pos:end="17:50">picture_crop_temp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:39"><decl pos:start="19:5" pos:end="19:38"><type pos:start="19:5" pos:end="19:20"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <name pos:start="19:12" pos:end="19:18">uint8_t</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:32">video_buffer</name><init pos:start="19:33" pos:end="19:38">= <expr pos:start="19:35" pos:end="19:38"><name pos:start="19:35" pos:end="19:38">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:38"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:16">buf</name> <init pos:start="21:18" pos:end="21:23">= <expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">NULL</name></expr></init></decl>, <decl pos:start="21:26" pos:end="21:37"><type ref="prev" pos:start="21:5" pos:end="21:13"><modifier pos:start="21:26" pos:end="21:26">*</modifier></type><name pos:start="21:27" pos:end="21:30">buf1</name> <init pos:start="21:32" pos:end="21:37">= <expr pos:start="21:34" pos:end="21:37"><name pos:start="21:34" pos:end="21:37">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:18">AVCodecContext</name> <modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:23">enc</name></decl>, <decl pos:start="23:26" pos:end="23:29"><type ref="prev" pos:start="23:5" pos:end="23:20"><modifier pos:start="23:26" pos:end="23:26">*</modifier></type><name pos:start="23:27" pos:end="23:29">dec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="30:0"><decl pos:start="25:5" pos:end="25:34"><type pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:8">enum</name> <name pos:start="25:10" pos:end="25:20">PixelFormat</name></name></type> <name pos:start="25:22" pos:end="25:34">target_pixfmt</name></decl>;</decl_stmt>

    

<cpp:define pos:start="29:1" pos:end="29:37">#<cpp:directive pos:start="29:2" pos:end="29:7">define</cpp:directive> <cpp:macro pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:25">VIDEO_BUFFER_SIZE</name></cpp:macro> <cpp:value pos:start="29:27" pos:end="29:37">(1024*1024)</cpp:value></cpp:define>



    <expr_stmt pos:start="33:5" pos:end="33:53"><expr pos:start="33:5" pos:end="33:52"><call pos:start="33:5" pos:end="33:52"><name pos:start="33:5" pos:end="33:30">avcodec_get_frame_defaults</name><argument_list pos:start="33:31" pos:end="33:52">(<argument pos:start="33:32" pos:end="33:51"><expr pos:start="33:32" pos:end="33:51"><operator pos:start="33:32" pos:end="33:32">&amp;</operator><name pos:start="33:33" pos:end="33:51">picture_format_temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:51"><expr pos:start="35:5" pos:end="35:50"><call pos:start="35:5" pos:end="35:50"><name pos:start="35:5" pos:end="35:30">avcodec_get_frame_defaults</name><argument_list pos:start="35:31" pos:end="35:50">(<argument pos:start="35:32" pos:end="35:49"><expr pos:start="35:32" pos:end="35:49"><operator pos:start="35:32" pos:end="35:32">&amp;</operator><name pos:start="35:33" pos:end="35:49">picture_crop_temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:7">enc</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <operator pos:start="39:11" pos:end="39:11">&amp;</operator><name pos:start="39:12" pos:end="39:25"><name pos:start="39:12" pos:end="39:14">ost</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:18">st</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:25">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:26"><expr pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:7">dec</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <operator pos:start="41:11" pos:end="41:11">&amp;</operator><name pos:start="41:12" pos:end="41:25"><name pos:start="41:12" pos:end="41:14">ist</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:18">st</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:25">codec</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:46">/* by default, we output a single frame */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:18"><expr pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:13">nb_frames</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><operator pos:start="51:5" pos:end="51:5">*</operator><name pos:start="51:6" pos:end="51:15">frame_size</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="73:5"><if pos:start="55:5" pos:end="73:5">if<condition pos:start="55:7" pos:end="55:19">(<expr pos:start="55:8" pos:end="55:18"><name pos:start="55:8" pos:end="55:18">sync_method</name></expr>)</condition><block pos:start="55:20" pos:end="73:5">{<block_content pos:start="57:9" pos:end="69:26">

        <decl_stmt pos:start="57:9" pos:end="57:22"><decl pos:start="57:9" pos:end="57:21"><type pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:14">double</name></type> <name pos:start="57:16" pos:end="57:21">vdelta</name></decl>;</decl_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:90"><expr pos:start="59:9" pos:end="59:89"><name pos:start="59:9" pos:end="59:14">vdelta</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:31"><name pos:start="59:18" pos:end="59:20">ost</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:31">sync_ipts</name></name> <operator pos:start="59:33" pos:end="59:33">*</operator> <name pos:start="59:35" pos:end="59:49"><name pos:start="59:35" pos:end="59:37">enc</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:49">frame_rate</name></name> <operator pos:start="59:51" pos:end="59:51">/</operator> <name pos:start="59:53" pos:end="59:72"><name pos:start="59:53" pos:end="59:55">enc</name><operator pos:start="59:56" pos:end="59:57">-&gt;</operator><name pos:start="59:58" pos:end="59:72">frame_rate_base</name></name> <operator pos:start="59:74" pos:end="59:74">-</operator> <name pos:start="59:76" pos:end="59:89"><name pos:start="59:76" pos:end="59:78">ost</name><operator pos:start="59:79" pos:end="59:80">-&gt;</operator><name pos:start="59:81" pos:end="59:89">sync_opts</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="61:9" pos:end="61:74">//FIXME set to 0.5 after we fix some dts/pts bugs like in avidec.c</comment>

        <if_stmt pos:start="63:9" pos:end="69:26"><if pos:start="63:9" pos:end="65:26">if <condition pos:start="63:12" pos:end="63:26">(<expr pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:18">vdelta</name> <operator pos:start="63:20" pos:end="63:20">&lt;</operator> <operator pos:start="63:22" pos:end="63:22">-</operator><literal type="number" pos:start="63:23" pos:end="63:25">1.1</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:26"><block_content pos:start="65:13" pos:end="65:26">

            <expr_stmt pos:start="65:13" pos:end="65:26"><expr pos:start="65:13" pos:end="65:25"><name pos:start="65:13" pos:end="65:21">nb_frames</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <literal type="number" pos:start="65:25" pos:end="65:25">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="67:9" pos:end="69:26">else if <condition pos:start="67:17" pos:end="67:30">(<expr pos:start="67:18" pos:end="67:29"><name pos:start="67:18" pos:end="67:23">vdelta</name> <operator pos:start="67:25" pos:end="67:25">&gt;</operator> <literal type="number" pos:start="67:27" pos:end="67:29">1.1</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:26"><block_content pos:start="69:13" pos:end="69:26">

            <expr_stmt pos:start="69:13" pos:end="69:26"><expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:21">nb_frames</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <literal type="number" pos:start="69:25" pos:end="69:25">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="line" pos:start="71:1" pos:end="71:128">//printf("vdelta:%f, ost-&gt;sync_opts:%lld, ost-&gt;sync_ipts:%f nb_frames:%d\n", vdelta, ost-&gt;sync_opts, ost-&gt;sync_ipts, nb_frames);</comment>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:31"><expr pos:start="75:5" pos:end="75:30"><name pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:7">ost</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:18">sync_opts</name></name><operator pos:start="75:19" pos:end="75:20">+=</operator> <name pos:start="75:22" pos:end="75:30">nb_frames</name></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="81:15"><if pos:start="79:5" pos:end="81:15">if <condition pos:start="79:8" pos:end="79:23">(<expr pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:17">nb_frames</name> <operator pos:start="79:19" pos:end="79:20">&lt;=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:15"><block_content pos:start="81:9" pos:end="81:15"> 

        <return pos:start="81:9" pos:end="81:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="87:52"><if pos:start="85:5" pos:end="87:52">if <condition pos:start="85:8" pos:end="85:22">(<expr pos:start="85:9" pos:end="85:21"><operator pos:start="85:9" pos:end="85:9">!</operator><name pos:start="85:10" pos:end="85:21">video_buffer</name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:52"><block_content pos:start="87:9" pos:end="87:52">

        <expr_stmt pos:start="87:9" pos:end="87:52"><expr pos:start="87:9" pos:end="87:51"><name pos:start="87:9" pos:end="87:20">video_buffer</name> <operator pos:start="87:22" pos:end="87:22">=</operator> <call pos:start="87:24" pos:end="87:51"><name pos:start="87:24" pos:end="87:32">av_malloc</name><argument_list pos:start="87:33" pos:end="87:51">(<argument pos:start="87:34" pos:end="87:50"><expr pos:start="87:34" pos:end="87:50"><name pos:start="87:34" pos:end="87:50">VIDEO_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="89:5" pos:end="91:15"><if pos:start="89:5" pos:end="91:15">if <condition pos:start="89:8" pos:end="89:22">(<expr pos:start="89:9" pos:end="89:21"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:21">video_buffer</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:15"><block_content pos:start="91:9" pos:end="91:15">

        <return pos:start="91:9" pos:end="91:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="95:5" pos:end="95:40">/* convert pixel format if needed */</comment>

    <expr_stmt pos:start="97:5" pos:end="99:41"><expr pos:start="97:5" pos:end="99:40"><name pos:start="97:5" pos:end="97:17">target_pixfmt</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <ternary pos:start="97:21" pos:end="99:40"><condition pos:start="97:21" pos:end="99:9"><expr pos:start="97:21" pos:end="97:57"><name pos:start="97:21" pos:end="97:39"><name pos:start="97:21" pos:end="97:23">ost</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:39">video_resample</name></name> <operator pos:start="97:41" pos:end="97:42">||</operator> <name pos:start="97:44" pos:end="97:57"><name pos:start="97:44" pos:end="97:46">ost</name><operator pos:start="97:47" pos:end="97:48">-&gt;</operator><name pos:start="97:49" pos:end="97:57">video_pad</name></name></expr>

        ?</condition><then pos:start="99:11" pos:end="99:25"> <expr pos:start="99:11" pos:end="99:25"><name pos:start="99:11" pos:end="99:25">PIX_FMT_YUV420P</name></expr> </then><else pos:start="99:27" pos:end="99:40">: <expr pos:start="99:29" pos:end="99:40"><name pos:start="99:29" pos:end="99:40"><name pos:start="99:29" pos:end="99:31">enc</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:40">pix_fmt</name></name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="145:5"><if pos:start="101:5" pos:end="141:5">if <condition pos:start="101:8" pos:end="101:38">(<expr pos:start="101:9" pos:end="101:37"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:11">dec</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:20">pix_fmt</name></name> <operator pos:start="101:22" pos:end="101:23">!=</operator> <name pos:start="101:25" pos:end="101:37">target_pixfmt</name></expr>)</condition> <block pos:start="101:40" pos:end="141:5">{<block_content pos:start="103:9" pos:end="139:9">

        <decl_stmt pos:start="103:9" pos:end="103:17"><decl pos:start="103:9" pos:end="103:16"><type pos:start="103:9" pos:end="103:11"><name pos:start="103:9" pos:end="103:11">int</name></type> <name pos:start="103:13" pos:end="103:16">size</name></decl>;</decl_stmt>



        <comment type="block" pos:start="107:9" pos:end="107:38">/* create temporary picture */</comment>

        <expr_stmt pos:start="109:9" pos:end="109:74"><expr pos:start="109:9" pos:end="109:73"><name pos:start="109:9" pos:end="109:12">size</name> <operator pos:start="109:14" pos:end="109:14">=</operator> <call pos:start="109:16" pos:end="109:73"><name pos:start="109:16" pos:end="109:33">avpicture_get_size</name><argument_list pos:start="109:34" pos:end="109:73">(<argument pos:start="109:35" pos:end="109:47"><expr pos:start="109:35" pos:end="109:47"><name pos:start="109:35" pos:end="109:47">target_pixfmt</name></expr></argument>, <argument pos:start="109:50" pos:end="109:59"><expr pos:start="109:50" pos:end="109:59"><name pos:start="109:50" pos:end="109:59"><name pos:start="109:50" pos:end="109:52">dec</name><operator pos:start="109:53" pos:end="109:54">-&gt;</operator><name pos:start="109:55" pos:end="109:59">width</name></name></expr></argument>, <argument pos:start="109:62" pos:end="109:72"><expr pos:start="109:62" pos:end="109:72"><name pos:start="109:62" pos:end="109:72"><name pos:start="109:62" pos:end="109:64">dec</name><operator pos:start="109:65" pos:end="109:66">-&gt;</operator><name pos:start="109:67" pos:end="109:72">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:30"><expr pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:11">buf</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <call pos:start="111:15" pos:end="111:29"><name pos:start="111:15" pos:end="111:23">av_malloc</name><argument_list pos:start="111:24" pos:end="111:29">(<argument pos:start="111:25" pos:end="111:28"><expr pos:start="111:25" pos:end="111:28"><name pos:start="111:25" pos:end="111:28">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="115:19"><if pos:start="113:9" pos:end="115:19">if <condition pos:start="113:12" pos:end="113:17">(<expr pos:start="113:13" pos:end="113:16"><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:16">buf</name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:19"><block_content pos:start="115:13" pos:end="115:19">

            <return pos:start="115:13" pos:end="115:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:49"><expr pos:start="117:9" pos:end="117:48"><name pos:start="117:9" pos:end="117:25">formatted_picture</name> <operator pos:start="117:27" pos:end="117:27">=</operator> <operator pos:start="117:29" pos:end="117:29">&amp;</operator><name pos:start="117:30" pos:end="117:48">picture_format_temp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:99"><expr pos:start="119:9" pos:end="119:98"><call pos:start="119:9" pos:end="119:98"><name pos:start="119:9" pos:end="119:22">avpicture_fill</name><argument_list pos:start="119:23" pos:end="119:98">(<argument pos:start="119:24" pos:end="119:52"><expr pos:start="119:24" pos:end="119:52"><operator pos:start="119:24" pos:end="119:24">(</operator><name pos:start="119:25" pos:end="119:33">AVPicture</name><operator pos:start="119:34" pos:end="119:34">*</operator><operator pos:start="119:35" pos:end="119:35">)</operator><name pos:start="119:36" pos:end="119:52">formatted_picture</name></expr></argument>, <argument pos:start="119:55" pos:end="119:57"><expr pos:start="119:55" pos:end="119:57"><name pos:start="119:55" pos:end="119:57">buf</name></expr></argument>, <argument pos:start="119:60" pos:end="119:72"><expr pos:start="119:60" pos:end="119:72"><name pos:start="119:60" pos:end="119:72">target_pixfmt</name></expr></argument>, <argument pos:start="119:75" pos:end="119:84"><expr pos:start="119:75" pos:end="119:84"><name pos:start="119:75" pos:end="119:84"><name pos:start="119:75" pos:end="119:77">dec</name><operator pos:start="119:78" pos:end="119:79">-&gt;</operator><name pos:start="119:80" pos:end="119:84">width</name></name></expr></argument>, <argument pos:start="119:87" pos:end="119:97"><expr pos:start="119:87" pos:end="119:97"><name pos:start="119:87" pos:end="119:97"><name pos:start="119:87" pos:end="119:89">dec</name><operator pos:start="119:90" pos:end="119:91">-&gt;</operator><name pos:start="119:92" pos:end="119:97">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <if_stmt pos:start="123:9" pos:end="139:9"><if pos:start="123:9" pos:end="139:9">if <condition pos:start="123:12" pos:end="127:53">(<expr pos:start="123:13" pos:end="127:52"><call pos:start="123:13" pos:end="127:48"><name pos:start="123:13" pos:end="123:23">img_convert</name><argument_list pos:start="123:24" pos:end="127:48">(<argument pos:start="123:25" pos:end="123:53"><expr pos:start="123:25" pos:end="123:53"><operator pos:start="123:25" pos:end="123:25">(</operator><name pos:start="123:26" pos:end="123:34">AVPicture</name><operator pos:start="123:35" pos:end="123:35">*</operator><operator pos:start="123:36" pos:end="123:36">)</operator><name pos:start="123:37" pos:end="123:53">formatted_picture</name></expr></argument>, <argument pos:start="123:56" pos:end="123:68"><expr pos:start="123:56" pos:end="123:68"><name pos:start="123:56" pos:end="123:68">target_pixfmt</name></expr></argument>, 

                        <argument pos:start="125:25" pos:end="125:47"><expr pos:start="125:25" pos:end="125:47"><operator pos:start="125:25" pos:end="125:25">(</operator><name pos:start="125:26" pos:end="125:34">AVPicture</name> <operator pos:start="125:36" pos:end="125:36">*</operator><operator pos:start="125:37" pos:end="125:37">)</operator><name pos:start="125:38" pos:end="125:47">in_picture</name></expr></argument>, <argument pos:start="125:50" pos:end="125:61"><expr pos:start="125:50" pos:end="125:61"><name pos:start="125:50" pos:end="125:61"><name pos:start="125:50" pos:end="125:52">dec</name><operator pos:start="125:53" pos:end="125:54">-&gt;</operator><name pos:start="125:55" pos:end="125:61">pix_fmt</name></name></expr></argument>, 

                        <argument pos:start="127:25" pos:end="127:34"><expr pos:start="127:25" pos:end="127:34"><name pos:start="127:25" pos:end="127:34"><name pos:start="127:25" pos:end="127:27">dec</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:34">width</name></name></expr></argument>, <argument pos:start="127:37" pos:end="127:47"><expr pos:start="127:37" pos:end="127:47"><name pos:start="127:37" pos:end="127:47"><name pos:start="127:37" pos:end="127:39">dec</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:47">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="127:50" pos:end="127:50">&lt;</operator> <literal type="number" pos:start="127:52" pos:end="127:52">0</literal></expr>)</condition> <block pos:start="127:55" pos:end="139:9">{<block_content pos:start="131:13" pos:end="137:25">



            <if_stmt pos:start="131:13" pos:end="133:73"><if pos:start="131:13" pos:end="133:73">if <condition pos:start="131:16" pos:end="131:29">(<expr pos:start="131:17" pos:end="131:28"><name pos:start="131:17" pos:end="131:23">verbose</name> <operator pos:start="131:25" pos:end="131:26">&gt;=</operator> <literal type="number" pos:start="131:28" pos:end="131:28">0</literal></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:73"><block_content pos:start="133:17" pos:end="133:73">

                <expr_stmt pos:start="133:17" pos:end="133:73"><expr pos:start="133:17" pos:end="133:72"><call pos:start="133:17" pos:end="133:72"><name pos:start="133:17" pos:end="133:23">fprintf</name><argument_list pos:start="133:24" pos:end="133:72">(<argument pos:start="133:25" pos:end="133:30"><expr pos:start="133:25" pos:end="133:30"><name pos:start="133:25" pos:end="133:30">stderr</name></expr></argument>, <argument pos:start="133:33" pos:end="133:71"><expr pos:start="133:33" pos:end="133:71"><literal type="string" pos:start="133:33" pos:end="133:71">"pixel format conversion not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <goto pos:start="137:13" pos:end="137:25">goto <name pos:start="137:18" pos:end="137:24">the_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="141:7" pos:end="145:5">else <block pos:start="141:12" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:39">

        <expr_stmt pos:start="143:9" pos:end="143:39"><expr pos:start="143:9" pos:end="143:38"><name pos:start="143:9" pos:end="143:25">formatted_picture</name> <operator pos:start="143:27" pos:end="143:27">=</operator> <name pos:start="143:29" pos:end="143:38">in_picture</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="149:5" pos:end="151:33">/* XXX: resampling could be done before raw format conversion in

       some cases to go faster */</comment>

    <comment type="block" pos:start="153:5" pos:end="153:37">/* XXX: only works for YUV420P */</comment>

    <if_stmt pos:start="155:5" pos:end="351:5"><if pos:start="155:5" pos:end="219:5">if <condition pos:start="155:8" pos:end="155:28">(<expr pos:start="155:9" pos:end="155:27"><name pos:start="155:9" pos:end="155:27"><name pos:start="155:9" pos:end="155:11">ost</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:27">video_resample</name></name></expr>)</condition> <block pos:start="155:30" pos:end="219:5">{<block_content pos:start="157:9" pos:end="217:9">

        <expr_stmt pos:start="157:9" pos:end="157:39"><expr pos:start="157:9" pos:end="157:38"><name pos:start="157:9" pos:end="157:21">final_picture</name> <operator pos:start="157:23" pos:end="157:23">=</operator> <operator pos:start="157:25" pos:end="157:25">&amp;</operator><name pos:start="157:26" pos:end="157:38"><name pos:start="157:26" pos:end="157:28">ost</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:38">pict_tmp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:102"><expr pos:start="159:9" pos:end="159:101"><call pos:start="159:9" pos:end="159:101"><name pos:start="159:9" pos:end="159:20">img_resample</name><argument_list pos:start="159:21" pos:end="159:101">(<argument pos:start="159:22" pos:end="159:42"><expr pos:start="159:22" pos:end="159:42"><name pos:start="159:22" pos:end="159:42"><name pos:start="159:22" pos:end="159:24">ost</name><operator pos:start="159:25" pos:end="159:26">-&gt;</operator><name pos:start="159:27" pos:end="159:42">img_resample_ctx</name></name></expr></argument>, <argument pos:start="159:45" pos:end="159:69"><expr pos:start="159:45" pos:end="159:69"><operator pos:start="159:45" pos:end="159:45">(</operator><name pos:start="159:46" pos:end="159:54">AVPicture</name><operator pos:start="159:55" pos:end="159:55">*</operator><operator pos:start="159:56" pos:end="159:56">)</operator><name pos:start="159:57" pos:end="159:69">final_picture</name></expr></argument>, <argument pos:start="159:72" pos:end="159:100"><expr pos:start="159:72" pos:end="159:100"><operator pos:start="159:72" pos:end="159:72">(</operator><name pos:start="159:73" pos:end="159:81">AVPicture</name><operator pos:start="159:82" pos:end="159:82">*</operator><operator pos:start="159:83" pos:end="159:83">)</operator><name pos:start="159:84" pos:end="159:100">formatted_picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       

        <if_stmt pos:start="163:9" pos:end="171:9"><if pos:start="163:9" pos:end="171:9">if <condition pos:start="163:12" pos:end="163:75">(<expr pos:start="163:13" pos:end="163:74"><name pos:start="163:13" pos:end="163:23"><name pos:start="163:13" pos:end="163:15">ost</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:23">padtop</name></name> <operator pos:start="163:25" pos:end="163:26">||</operator> <name pos:start="163:28" pos:end="163:41"><name pos:start="163:28" pos:end="163:30">ost</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:41">padbottom</name></name> <operator pos:start="163:43" pos:end="163:44">||</operator> <name pos:start="163:46" pos:end="163:57"><name pos:start="163:46" pos:end="163:48">ost</name><operator pos:start="163:49" pos:end="163:50">-&gt;</operator><name pos:start="163:51" pos:end="163:57">padleft</name></name> <operator pos:start="163:59" pos:end="163:60">||</operator> <name pos:start="163:62" pos:end="163:74"><name pos:start="163:62" pos:end="163:64">ost</name><operator pos:start="163:65" pos:end="163:66">-&gt;</operator><name pos:start="163:67" pos:end="163:74">padright</name></name></expr>)</condition> <block pos:start="163:77" pos:end="171:9">{<block_content pos:start="165:13" pos:end="169:30">

            <expr_stmt pos:start="165:13" pos:end="169:30"><expr pos:start="165:13" pos:end="169:29"><call pos:start="165:13" pos:end="169:29"><name pos:start="165:13" pos:end="165:27">fill_pad_region</name><argument_list pos:start="165:28" pos:end="169:29">(<argument pos:start="165:29" pos:end="165:53"><expr pos:start="165:29" pos:end="165:53"><operator pos:start="165:29" pos:end="165:29">(</operator><name pos:start="165:30" pos:end="165:38">AVPicture</name><operator pos:start="165:39" pos:end="165:39">*</operator><operator pos:start="165:40" pos:end="165:40">)</operator><name pos:start="165:41" pos:end="165:53">final_picture</name></expr></argument>, <argument pos:start="165:56" pos:end="165:66"><expr pos:start="165:56" pos:end="165:66"><name pos:start="165:56" pos:end="165:66"><name pos:start="165:56" pos:end="165:58">enc</name><operator pos:start="165:59" pos:end="165:60">-&gt;</operator><name pos:start="165:61" pos:end="165:66">height</name></name></expr></argument>, <argument pos:start="165:69" pos:end="165:78"><expr pos:start="165:69" pos:end="165:78"><name pos:start="165:69" pos:end="165:78"><name pos:start="165:69" pos:end="165:71">enc</name><operator pos:start="165:72" pos:end="165:73">-&gt;</operator><name pos:start="165:74" pos:end="165:78">width</name></name></expr></argument>,

                    <argument pos:start="167:21" pos:end="167:31"><expr pos:start="167:21" pos:end="167:31"><name pos:start="167:21" pos:end="167:31"><name pos:start="167:21" pos:end="167:23">ost</name><operator pos:start="167:24" pos:end="167:25">-&gt;</operator><name pos:start="167:26" pos:end="167:31">padtop</name></name></expr></argument>, <argument pos:start="167:34" pos:end="167:47"><expr pos:start="167:34" pos:end="167:47"><name pos:start="167:34" pos:end="167:47"><name pos:start="167:34" pos:end="167:36">ost</name><operator pos:start="167:37" pos:end="167:38">-&gt;</operator><name pos:start="167:39" pos:end="167:47">padbottom</name></name></expr></argument>, <argument pos:start="167:50" pos:end="167:61"><expr pos:start="167:50" pos:end="167:61"><name pos:start="167:50" pos:end="167:61"><name pos:start="167:50" pos:end="167:52">ost</name><operator pos:start="167:53" pos:end="167:54">-&gt;</operator><name pos:start="167:55" pos:end="167:61">padleft</name></name></expr></argument>, <argument pos:start="167:64" pos:end="167:76"><expr pos:start="167:64" pos:end="167:76"><name pos:start="167:64" pos:end="167:76"><name pos:start="167:64" pos:end="167:66">ost</name><operator pos:start="167:67" pos:end="167:68">-&gt;</operator><name pos:start="167:69" pos:end="167:76">padright</name></name></expr></argument>,

                    <argument pos:start="169:21" pos:end="169:28"><expr pos:start="169:21" pos:end="169:28"><name pos:start="169:21" pos:end="169:28">padcolor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        

	<if_stmt pos:start="175:9" pos:end="217:9"><if pos:start="175:9" pos:end="217:9">if <condition pos:start="175:12" pos:end="175:44">(<expr pos:start="175:13" pos:end="175:43"><name pos:start="175:13" pos:end="175:24"><name pos:start="175:13" pos:end="175:15">enc</name><operator pos:start="175:16" pos:end="175:17">-&gt;</operator><name pos:start="175:18" pos:end="175:24">pix_fmt</name></name> <operator pos:start="175:26" pos:end="175:27">!=</operator> <name pos:start="175:29" pos:end="175:43">PIX_FMT_YUV420P</name></expr>)</condition> <block pos:start="175:46" pos:end="217:9">{<block_content pos:start="177:13" pos:end="215:13">

            <decl_stmt pos:start="177:13" pos:end="177:21"><decl pos:start="177:13" pos:end="177:20"><type pos:start="177:13" pos:end="177:15"><name pos:start="177:13" pos:end="177:15">int</name></type> <name pos:start="177:17" pos:end="177:20">size</name></decl>;</decl_stmt>

	    

	    <expr_stmt pos:start="181:13" pos:end="181:25"><expr pos:start="181:13" pos:end="181:24"><call pos:start="181:13" pos:end="181:24"><name pos:start="181:13" pos:end="181:19">av_free</name><argument_list pos:start="181:20" pos:end="181:24">(<argument pos:start="181:21" pos:end="181:23"><expr pos:start="181:21" pos:end="181:23"><name pos:start="181:21" pos:end="181:23">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="183:13" pos:end="183:42">/* create temporary picture */</comment>

            <expr_stmt pos:start="185:13" pos:end="185:77"><expr pos:start="185:13" pos:end="185:76"><name pos:start="185:13" pos:end="185:16">size</name> <operator pos:start="185:18" pos:end="185:18">=</operator> <call pos:start="185:20" pos:end="185:76"><name pos:start="185:20" pos:end="185:37">avpicture_get_size</name><argument_list pos:start="185:38" pos:end="185:76">(<argument pos:start="185:39" pos:end="185:50"><expr pos:start="185:39" pos:end="185:50"><name pos:start="185:39" pos:end="185:50"><name pos:start="185:39" pos:end="185:41">enc</name><operator pos:start="185:42" pos:end="185:43">-&gt;</operator><name pos:start="185:44" pos:end="185:50">pix_fmt</name></name></expr></argument>, <argument pos:start="185:53" pos:end="185:62"><expr pos:start="185:53" pos:end="185:62"><name pos:start="185:53" pos:end="185:62"><name pos:start="185:53" pos:end="185:55">enc</name><operator pos:start="185:56" pos:end="185:57">-&gt;</operator><name pos:start="185:58" pos:end="185:62">width</name></name></expr></argument>, <argument pos:start="185:65" pos:end="185:75"><expr pos:start="185:65" pos:end="185:75"><name pos:start="185:65" pos:end="185:75"><name pos:start="185:65" pos:end="185:67">enc</name><operator pos:start="185:68" pos:end="185:69">-&gt;</operator><name pos:start="185:70" pos:end="185:75">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:34"><expr pos:start="187:13" pos:end="187:33"><name pos:start="187:13" pos:end="187:15">buf</name> <operator pos:start="187:17" pos:end="187:17">=</operator> <call pos:start="187:19" pos:end="187:33"><name pos:start="187:19" pos:end="187:27">av_malloc</name><argument_list pos:start="187:28" pos:end="187:33">(<argument pos:start="187:29" pos:end="187:32"><expr pos:start="187:29" pos:end="187:32"><name pos:start="187:29" pos:end="187:32">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="189:13" pos:end="191:23"><if pos:start="189:13" pos:end="191:23">if <condition pos:start="189:16" pos:end="189:21">(<expr pos:start="189:17" pos:end="189:20"><operator pos:start="189:17" pos:end="189:17">!</operator><name pos:start="189:18" pos:end="189:20">buf</name></expr>)</condition><block type="pseudo" pos:start="191:17" pos:end="191:23"><block_content pos:start="191:17" pos:end="191:23">

                <return pos:start="191:17" pos:end="191:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:49"><expr pos:start="193:13" pos:end="193:48"><name pos:start="193:13" pos:end="193:25">final_picture</name> <operator pos:start="193:27" pos:end="193:27">=</operator> <operator pos:start="193:29" pos:end="193:29">&amp;</operator><name pos:start="193:30" pos:end="193:48">picture_format_temp</name></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:98"><expr pos:start="195:13" pos:end="195:97"><call pos:start="195:13" pos:end="195:97"><name pos:start="195:13" pos:end="195:26">avpicture_fill</name><argument_list pos:start="195:27" pos:end="195:97">(<argument pos:start="195:28" pos:end="195:52"><expr pos:start="195:28" pos:end="195:52"><operator pos:start="195:28" pos:end="195:28">(</operator><name pos:start="195:29" pos:end="195:37">AVPicture</name><operator pos:start="195:38" pos:end="195:38">*</operator><operator pos:start="195:39" pos:end="195:39">)</operator><name pos:start="195:40" pos:end="195:52">final_picture</name></expr></argument>, <argument pos:start="195:55" pos:end="195:57"><expr pos:start="195:55" pos:end="195:57"><name pos:start="195:55" pos:end="195:57">buf</name></expr></argument>, <argument pos:start="195:60" pos:end="195:71"><expr pos:start="195:60" pos:end="195:71"><name pos:start="195:60" pos:end="195:71"><name pos:start="195:60" pos:end="195:62">enc</name><operator pos:start="195:63" pos:end="195:64">-&gt;</operator><name pos:start="195:65" pos:end="195:71">pix_fmt</name></name></expr></argument>, <argument pos:start="195:74" pos:end="195:83"><expr pos:start="195:74" pos:end="195:83"><name pos:start="195:74" pos:end="195:83"><name pos:start="195:74" pos:end="195:76">enc</name><operator pos:start="195:77" pos:end="195:78">-&gt;</operator><name pos:start="195:79" pos:end="195:83">width</name></name></expr></argument>, <argument pos:start="195:86" pos:end="195:96"><expr pos:start="195:86" pos:end="195:96"><name pos:start="195:86" pos:end="195:96"><name pos:start="195:86" pos:end="195:88">enc</name><operator pos:start="195:89" pos:end="195:90">-&gt;</operator><name pos:start="195:91" pos:end="195:96">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

            <if_stmt pos:start="199:13" pos:end="215:13"><if pos:start="199:13" pos:end="215:13">if <condition pos:start="199:16" pos:end="203:57">(<expr pos:start="199:17" pos:end="203:56"><call pos:start="199:17" pos:end="203:52"><name pos:start="199:17" pos:end="199:27">img_convert</name><argument_list pos:start="199:28" pos:end="203:52">(<argument pos:start="199:29" pos:end="199:53"><expr pos:start="199:29" pos:end="199:53"><operator pos:start="199:29" pos:end="199:29">(</operator><name pos:start="199:30" pos:end="199:38">AVPicture</name><operator pos:start="199:39" pos:end="199:39">*</operator><operator pos:start="199:40" pos:end="199:40">)</operator><name pos:start="199:41" pos:end="199:53">final_picture</name></expr></argument>, <argument pos:start="199:56" pos:end="199:67"><expr pos:start="199:56" pos:end="199:67"><name pos:start="199:56" pos:end="199:67"><name pos:start="199:56" pos:end="199:58">enc</name><operator pos:start="199:59" pos:end="199:60">-&gt;</operator><name pos:start="199:61" pos:end="199:67">pix_fmt</name></name></expr></argument>, 

                            <argument pos:start="201:29" pos:end="201:54"><expr pos:start="201:29" pos:end="201:54"><operator pos:start="201:29" pos:end="201:29">(</operator><name pos:start="201:30" pos:end="201:38">AVPicture</name><operator pos:start="201:39" pos:end="201:39">*</operator><operator pos:start="201:40" pos:end="201:40">)</operator><operator pos:start="201:41" pos:end="201:41">&amp;</operator><name pos:start="201:42" pos:end="201:54"><name pos:start="201:42" pos:end="201:44">ost</name><operator pos:start="201:45" pos:end="201:46">-&gt;</operator><name pos:start="201:47" pos:end="201:54">pict_tmp</name></name></expr></argument>, <argument pos:start="201:57" pos:end="201:71"><expr pos:start="201:57" pos:end="201:71"><name pos:start="201:57" pos:end="201:71">PIX_FMT_YUV420P</name></expr></argument>, 

                            <argument pos:start="203:29" pos:end="203:38"><expr pos:start="203:29" pos:end="203:38"><name pos:start="203:29" pos:end="203:38"><name pos:start="203:29" pos:end="203:31">enc</name><operator pos:start="203:32" pos:end="203:33">-&gt;</operator><name pos:start="203:34" pos:end="203:38">width</name></name></expr></argument>, <argument pos:start="203:41" pos:end="203:51"><expr pos:start="203:41" pos:end="203:51"><name pos:start="203:41" pos:end="203:51"><name pos:start="203:41" pos:end="203:43">enc</name><operator pos:start="203:44" pos:end="203:45">-&gt;</operator><name pos:start="203:46" pos:end="203:51">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="203:54" pos:end="203:54">&lt;</operator> <literal type="number" pos:start="203:56" pos:end="203:56">0</literal></expr>)</condition> <block pos:start="203:59" pos:end="215:13">{<block_content pos:start="207:17" pos:end="213:29">



                <if_stmt pos:start="207:17" pos:end="209:77"><if pos:start="207:17" pos:end="209:77">if <condition pos:start="207:20" pos:end="207:33">(<expr pos:start="207:21" pos:end="207:32"><name pos:start="207:21" pos:end="207:27">verbose</name> <operator pos:start="207:29" pos:end="207:30">&gt;=</operator> <literal type="number" pos:start="207:32" pos:end="207:32">0</literal></expr>)</condition><block type="pseudo" pos:start="209:21" pos:end="209:77"><block_content pos:start="209:21" pos:end="209:77">

                    <expr_stmt pos:start="209:21" pos:end="209:77"><expr pos:start="209:21" pos:end="209:76"><call pos:start="209:21" pos:end="209:76"><name pos:start="209:21" pos:end="209:27">fprintf</name><argument_list pos:start="209:28" pos:end="209:76">(<argument pos:start="209:29" pos:end="209:34"><expr pos:start="209:29" pos:end="209:34"><name pos:start="209:29" pos:end="209:34">stderr</name></expr></argument>, <argument pos:start="209:37" pos:end="209:75"><expr pos:start="209:37" pos:end="209:75"><literal type="string" pos:start="209:37" pos:end="209:75">"pixel format conversion not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <goto pos:start="213:17" pos:end="213:29">goto <name pos:start="213:22" pos:end="213:28">the_end</name>;</goto>

            </block_content>}</block></if></if_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="219:7" pos:end="251:5">else if <condition pos:start="219:15" pos:end="219:31">(<expr pos:start="219:16" pos:end="219:30"><name pos:start="219:16" pos:end="219:30"><name pos:start="219:16" pos:end="219:18">ost</name><operator pos:start="219:19" pos:end="219:20">-&gt;</operator><name pos:start="219:21" pos:end="219:30">video_crop</name></name></expr>)</condition> <block pos:start="219:33" pos:end="251:5">{<block_content pos:start="221:9" pos:end="249:43">

        <expr_stmt pos:start="221:9" pos:end="223:80"><expr pos:start="221:9" pos:end="223:79"><name pos:start="221:9" pos:end="221:33"><name pos:start="221:9" pos:end="221:25">picture_crop_temp</name><operator pos:start="221:26" pos:end="221:26">.</operator><name pos:start="221:27" pos:end="221:30">data</name><index pos:start="221:31" pos:end="221:33">[<expr pos:start="221:32" pos:end="221:32"><literal type="number" pos:start="221:32" pos:end="221:32">0</literal></expr>]</index></name> <operator pos:start="221:35" pos:end="221:35">=</operator> <name pos:start="221:37" pos:end="221:62"><name pos:start="221:37" pos:end="221:53">formatted_picture</name><operator pos:start="221:54" pos:end="221:55">-&gt;</operator><name pos:start="221:56" pos:end="221:59">data</name><index pos:start="221:60" pos:end="221:62">[<expr pos:start="221:61" pos:end="221:61"><literal type="number" pos:start="221:61" pos:end="221:61">0</literal></expr>]</index></name> <operator pos:start="221:64" pos:end="221:64">+</operator>

                <operator pos:start="223:17" pos:end="223:17">(</operator><name pos:start="223:18" pos:end="223:29"><name pos:start="223:18" pos:end="223:20">ost</name><operator pos:start="223:21" pos:end="223:22">-&gt;</operator><name pos:start="223:23" pos:end="223:29">topBand</name></name> <operator pos:start="223:31" pos:end="223:31">*</operator> <name pos:start="223:33" pos:end="223:62"><name pos:start="223:33" pos:end="223:49">formatted_picture</name><operator pos:start="223:50" pos:end="223:51">-&gt;</operator><name pos:start="223:52" pos:end="223:59">linesize</name><index pos:start="223:60" pos:end="223:62">[<expr pos:start="223:61" pos:end="223:61"><literal type="number" pos:start="223:61" pos:end="223:61">0</literal></expr>]</index></name><operator pos:start="223:63" pos:end="223:63">)</operator> <operator pos:start="223:65" pos:end="223:65">+</operator> <name pos:start="223:67" pos:end="223:79"><name pos:start="223:67" pos:end="223:69">ost</name><operator pos:start="223:70" pos:end="223:71">-&gt;</operator><name pos:start="223:72" pos:end="223:79">leftBand</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="227:9" pos:end="231:37"><expr pos:start="227:9" pos:end="231:36"><name pos:start="227:9" pos:end="227:33"><name pos:start="227:9" pos:end="227:25">picture_crop_temp</name><operator pos:start="227:26" pos:end="227:26">.</operator><name pos:start="227:27" pos:end="227:30">data</name><index pos:start="227:31" pos:end="227:33">[<expr pos:start="227:32" pos:end="227:32"><literal type="number" pos:start="227:32" pos:end="227:32">1</literal></expr>]</index></name> <operator pos:start="227:35" pos:end="227:35">=</operator> <name pos:start="227:37" pos:end="227:62"><name pos:start="227:37" pos:end="227:53">formatted_picture</name><operator pos:start="227:54" pos:end="227:55">-&gt;</operator><name pos:start="227:56" pos:end="227:59">data</name><index pos:start="227:60" pos:end="227:62">[<expr pos:start="227:61" pos:end="227:61"><literal type="number" pos:start="227:61" pos:end="227:61">1</literal></expr>]</index></name> <operator pos:start="227:64" pos:end="227:64">+</operator>

                <operator pos:start="229:17" pos:end="229:17">(</operator><operator pos:start="229:18" pos:end="229:18">(</operator><name pos:start="229:19" pos:end="229:30"><name pos:start="229:19" pos:end="229:21">ost</name><operator pos:start="229:22" pos:end="229:23">-&gt;</operator><name pos:start="229:24" pos:end="229:30">topBand</name></name> <operator pos:start="229:32" pos:end="229:33">&gt;&gt;</operator> <literal type="number" pos:start="229:35" pos:end="229:35">1</literal><operator pos:start="229:36" pos:end="229:36">)</operator> <operator pos:start="229:38" pos:end="229:38">*</operator> <name pos:start="229:40" pos:end="229:69"><name pos:start="229:40" pos:end="229:56">formatted_picture</name><operator pos:start="229:57" pos:end="229:58">-&gt;</operator><name pos:start="229:59" pos:end="229:66">linesize</name><index pos:start="229:67" pos:end="229:69">[<expr pos:start="229:68" pos:end="229:68"><literal type="number" pos:start="229:68" pos:end="229:68">1</literal></expr>]</index></name><operator pos:start="229:70" pos:end="229:70">)</operator> <operator pos:start="229:72" pos:end="229:72">+</operator>

                <operator pos:start="231:17" pos:end="231:17">(</operator><name pos:start="231:18" pos:end="231:30"><name pos:start="231:18" pos:end="231:20">ost</name><operator pos:start="231:21" pos:end="231:22">-&gt;</operator><name pos:start="231:23" pos:end="231:30">leftBand</name></name> <operator pos:start="231:32" pos:end="231:33">&gt;&gt;</operator> <literal type="number" pos:start="231:35" pos:end="231:35">1</literal><operator pos:start="231:36" pos:end="231:36">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="235:9" pos:end="239:37"><expr pos:start="235:9" pos:end="239:36"><name pos:start="235:9" pos:end="235:33"><name pos:start="235:9" pos:end="235:25">picture_crop_temp</name><operator pos:start="235:26" pos:end="235:26">.</operator><name pos:start="235:27" pos:end="235:30">data</name><index pos:start="235:31" pos:end="235:33">[<expr pos:start="235:32" pos:end="235:32"><literal type="number" pos:start="235:32" pos:end="235:32">2</literal></expr>]</index></name> <operator pos:start="235:35" pos:end="235:35">=</operator> <name pos:start="235:37" pos:end="235:62"><name pos:start="235:37" pos:end="235:53">formatted_picture</name><operator pos:start="235:54" pos:end="235:55">-&gt;</operator><name pos:start="235:56" pos:end="235:59">data</name><index pos:start="235:60" pos:end="235:62">[<expr pos:start="235:61" pos:end="235:61"><literal type="number" pos:start="235:61" pos:end="235:61">2</literal></expr>]</index></name> <operator pos:start="235:64" pos:end="235:64">+</operator>

                <operator pos:start="237:17" pos:end="237:17">(</operator><operator pos:start="237:18" pos:end="237:18">(</operator><name pos:start="237:19" pos:end="237:30"><name pos:start="237:19" pos:end="237:21">ost</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:30">topBand</name></name> <operator pos:start="237:32" pos:end="237:33">&gt;&gt;</operator> <literal type="number" pos:start="237:35" pos:end="237:35">1</literal><operator pos:start="237:36" pos:end="237:36">)</operator> <operator pos:start="237:38" pos:end="237:38">*</operator> <name pos:start="237:40" pos:end="237:69"><name pos:start="237:40" pos:end="237:56">formatted_picture</name><operator pos:start="237:57" pos:end="237:58">-&gt;</operator><name pos:start="237:59" pos:end="237:66">linesize</name><index pos:start="237:67" pos:end="237:69">[<expr pos:start="237:68" pos:end="237:68"><literal type="number" pos:start="237:68" pos:end="237:68">2</literal></expr>]</index></name><operator pos:start="237:70" pos:end="237:70">)</operator> <operator pos:start="237:72" pos:end="237:72">+</operator>

                <operator pos:start="239:17" pos:end="239:17">(</operator><name pos:start="239:18" pos:end="239:30"><name pos:start="239:18" pos:end="239:20">ost</name><operator pos:start="239:21" pos:end="239:22">-&gt;</operator><name pos:start="239:23" pos:end="239:30">leftBand</name></name> <operator pos:start="239:32" pos:end="239:33">&gt;&gt;</operator> <literal type="number" pos:start="239:35" pos:end="239:35">1</literal><operator pos:start="239:36" pos:end="239:36">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="243:9" pos:end="243:71"><expr pos:start="243:9" pos:end="243:70"><name pos:start="243:9" pos:end="243:37"><name pos:start="243:9" pos:end="243:25">picture_crop_temp</name><operator pos:start="243:26" pos:end="243:26">.</operator><name pos:start="243:27" pos:end="243:34">linesize</name><index pos:start="243:35" pos:end="243:37">[<expr pos:start="243:36" pos:end="243:36"><literal type="number" pos:start="243:36" pos:end="243:36">0</literal></expr>]</index></name> <operator pos:start="243:39" pos:end="243:39">=</operator> <name pos:start="243:41" pos:end="243:70"><name pos:start="243:41" pos:end="243:57">formatted_picture</name><operator pos:start="243:58" pos:end="243:59">-&gt;</operator><name pos:start="243:60" pos:end="243:67">linesize</name><index pos:start="243:68" pos:end="243:70">[<expr pos:start="243:69" pos:end="243:69"><literal type="number" pos:start="243:69" pos:end="243:69">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:71"><expr pos:start="245:9" pos:end="245:70"><name pos:start="245:9" pos:end="245:37"><name pos:start="245:9" pos:end="245:25">picture_crop_temp</name><operator pos:start="245:26" pos:end="245:26">.</operator><name pos:start="245:27" pos:end="245:34">linesize</name><index pos:start="245:35" pos:end="245:37">[<expr pos:start="245:36" pos:end="245:36"><literal type="number" pos:start="245:36" pos:end="245:36">1</literal></expr>]</index></name> <operator pos:start="245:39" pos:end="245:39">=</operator> <name pos:start="245:41" pos:end="245:70"><name pos:start="245:41" pos:end="245:57">formatted_picture</name><operator pos:start="245:58" pos:end="245:59">-&gt;</operator><name pos:start="245:60" pos:end="245:67">linesize</name><index pos:start="245:68" pos:end="245:70">[<expr pos:start="245:69" pos:end="245:69"><literal type="number" pos:start="245:69" pos:end="245:69">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:71"><expr pos:start="247:9" pos:end="247:70"><name pos:start="247:9" pos:end="247:37"><name pos:start="247:9" pos:end="247:25">picture_crop_temp</name><operator pos:start="247:26" pos:end="247:26">.</operator><name pos:start="247:27" pos:end="247:34">linesize</name><index pos:start="247:35" pos:end="247:37">[<expr pos:start="247:36" pos:end="247:36"><literal type="number" pos:start="247:36" pos:end="247:36">2</literal></expr>]</index></name> <operator pos:start="247:39" pos:end="247:39">=</operator> <name pos:start="247:41" pos:end="247:70"><name pos:start="247:41" pos:end="247:57">formatted_picture</name><operator pos:start="247:58" pos:end="247:59">-&gt;</operator><name pos:start="247:60" pos:end="247:67">linesize</name><index pos:start="247:68" pos:end="247:70">[<expr pos:start="247:69" pos:end="247:69"><literal type="number" pos:start="247:69" pos:end="247:69">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:43"><expr pos:start="249:9" pos:end="249:42"><name pos:start="249:9" pos:end="249:21">final_picture</name> <operator pos:start="249:23" pos:end="249:23">=</operator> <operator pos:start="249:25" pos:end="249:25">&amp;</operator><name pos:start="249:26" pos:end="249:42">picture_crop_temp</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="251:7" pos:end="347:5">else if <condition pos:start="251:15" pos:end="251:30">(<expr pos:start="251:16" pos:end="251:29"><name pos:start="251:16" pos:end="251:29"><name pos:start="251:16" pos:end="251:18">ost</name><operator pos:start="251:19" pos:end="251:20">-&gt;</operator><name pos:start="251:21" pos:end="251:29">video_pad</name></name></expr>)</condition> <block pos:start="251:32" pos:end="347:5">{<block_content pos:start="253:9" pos:end="345:9">

        <expr_stmt pos:start="253:9" pos:end="253:39"><expr pos:start="253:9" pos:end="253:38"><name pos:start="253:9" pos:end="253:21">final_picture</name> <operator pos:start="253:23" pos:end="253:23">=</operator> <operator pos:start="253:25" pos:end="253:25">&amp;</operator><name pos:start="253:26" pos:end="253:38"><name pos:start="253:26" pos:end="253:28">ost</name><operator pos:start="253:29" pos:end="253:30">-&gt;</operator><name pos:start="253:31" pos:end="253:38">pict_tmp</name></name></expr>;</expr_stmt>



        <for pos:start="257:9" pos:end="291:9">for <control pos:start="257:13" pos:end="257:31">(<init pos:start="257:14" pos:end="257:19"><expr pos:start="257:14" pos:end="257:18"><name pos:start="257:14" pos:end="257:14">i</name> <operator pos:start="257:16" pos:end="257:16">=</operator> <literal type="number" pos:start="257:18" pos:end="257:18">0</literal></expr>;</init> <condition pos:start="257:21" pos:end="257:26"><expr pos:start="257:21" pos:end="257:25"><name pos:start="257:21" pos:end="257:21">i</name> <operator pos:start="257:23" pos:end="257:23">&lt;</operator> <literal type="number" pos:start="257:25" pos:end="257:25">3</literal></expr>;</condition> <incr pos:start="257:28" pos:end="257:30"><expr pos:start="257:28" pos:end="257:30"><name pos:start="257:28" pos:end="257:28">i</name><operator pos:start="257:29" pos:end="257:30">++</operator></expr></incr>)</control> <block pos:start="257:33" pos:end="291:9">{<block_content pos:start="259:13" pos:end="289:13">

            <decl_stmt pos:start="259:13" pos:end="259:33"><decl pos:start="259:13" pos:end="259:25"><type pos:start="259:13" pos:end="259:21"><name pos:start="259:13" pos:end="259:19">uint8_t</name> <modifier pos:start="259:21" pos:end="259:21">*</modifier></type><name pos:start="259:22" pos:end="259:25">optr</name></decl>, <decl pos:start="259:28" pos:end="259:32"><type ref="prev" pos:start="259:13" pos:end="259:21"><modifier pos:start="259:28" pos:end="259:28">*</modifier></type><name pos:start="259:29" pos:end="259:32">iptr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="261:13" pos:end="261:41"><decl pos:start="261:13" pos:end="261:40"><type pos:start="261:13" pos:end="261:15"><name pos:start="261:13" pos:end="261:15">int</name></type> <name pos:start="261:17" pos:end="261:21">shift</name> <init pos:start="261:23" pos:end="261:40">= <expr pos:start="261:25" pos:end="261:40"><ternary pos:start="261:25" pos:end="261:40"><condition pos:start="261:25" pos:end="261:34"><expr pos:start="261:25" pos:end="261:32"><operator pos:start="261:25" pos:end="261:25">(</operator><name pos:start="261:26" pos:end="261:26">i</name> <operator pos:start="261:28" pos:end="261:29">==</operator> <literal type="number" pos:start="261:31" pos:end="261:31">0</literal><operator pos:start="261:32" pos:end="261:32">)</operator></expr> ?</condition><then pos:start="261:36" pos:end="261:36"> <expr pos:start="261:36" pos:end="261:36"><literal type="number" pos:start="261:36" pos:end="261:36">0</literal></expr> </then><else pos:start="261:38" pos:end="261:40">: <expr pos:start="261:40" pos:end="261:40"><literal type="number" pos:start="261:40" pos:end="261:40">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="263:13" pos:end="263:27"><decl pos:start="263:13" pos:end="263:17"><type pos:start="263:13" pos:end="263:15"><name pos:start="263:13" pos:end="263:15">int</name></type> <name pos:start="263:17" pos:end="263:17">y</name></decl>, <decl pos:start="263:20" pos:end="263:26"><type ref="prev" pos:start="263:13" pos:end="263:15"/><name pos:start="263:20" pos:end="263:26">yheight</name></decl>;</decl_stmt>

            

            <comment type="block" pos:start="267:13" pos:end="267:56">/* set offset to start writing image into */</comment>

            <expr_stmt pos:start="269:13" pos:end="271:67"><expr pos:start="269:13" pos:end="271:66"><name pos:start="269:13" pos:end="269:16">optr</name> <operator pos:start="269:18" pos:end="269:18">=</operator> <name pos:start="269:20" pos:end="269:41"><name pos:start="269:20" pos:end="269:32">final_picture</name><operator pos:start="269:33" pos:end="269:34">-&gt;</operator><name pos:start="269:35" pos:end="269:38">data</name><index pos:start="269:39" pos:end="269:41">[<expr pos:start="269:40" pos:end="269:40"><name pos:start="269:40" pos:end="269:40">i</name></expr>]</index></name> <operator pos:start="269:43" pos:end="269:43">+</operator> <operator pos:start="269:45" pos:end="269:45">(</operator><operator pos:start="269:46" pos:end="269:46">(</operator><operator pos:start="269:47" pos:end="269:47">(</operator><name pos:start="269:48" pos:end="269:73"><name pos:start="269:48" pos:end="269:60">final_picture</name><operator pos:start="269:61" pos:end="269:62">-&gt;</operator><name pos:start="269:63" pos:end="269:70">linesize</name><index pos:start="269:71" pos:end="269:73">[<expr pos:start="269:72" pos:end="269:72"><name pos:start="269:72" pos:end="269:72">i</name></expr>]</index></name> <operator pos:start="269:75" pos:end="269:75">*</operator> 

                            <name pos:start="271:29" pos:end="271:39"><name pos:start="271:29" pos:end="271:31">ost</name><operator pos:start="271:32" pos:end="271:33">-&gt;</operator><name pos:start="271:34" pos:end="271:39">padtop</name></name><operator pos:start="271:40" pos:end="271:40">)</operator> <operator pos:start="271:42" pos:end="271:42">+</operator> <name pos:start="271:44" pos:end="271:55"><name pos:start="271:44" pos:end="271:46">ost</name><operator pos:start="271:47" pos:end="271:48">-&gt;</operator><name pos:start="271:49" pos:end="271:55">padleft</name></name><operator pos:start="271:56" pos:end="271:56">)</operator> <operator pos:start="271:58" pos:end="271:59">&gt;&gt;</operator> <name pos:start="271:61" pos:end="271:65">shift</name><operator pos:start="271:66" pos:end="271:66">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:46"><expr pos:start="273:13" pos:end="273:45"><name pos:start="273:13" pos:end="273:16">iptr</name> <operator pos:start="273:18" pos:end="273:18">=</operator> <name pos:start="273:20" pos:end="273:45"><name pos:start="273:20" pos:end="273:36">formatted_picture</name><operator pos:start="273:37" pos:end="273:38">-&gt;</operator><name pos:start="273:39" pos:end="273:42">data</name><index pos:start="273:43" pos:end="273:45">[<expr pos:start="273:44" pos:end="273:44"><name pos:start="273:44" pos:end="273:44">i</name></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="277:13" pos:end="277:76"><expr pos:start="277:13" pos:end="277:75"><name pos:start="277:13" pos:end="277:19">yheight</name> <operator pos:start="277:21" pos:end="277:21">=</operator> <operator pos:start="277:23" pos:end="277:23">(</operator><name pos:start="277:24" pos:end="277:34"><name pos:start="277:24" pos:end="277:26">enc</name><operator pos:start="277:27" pos:end="277:28">-&gt;</operator><name pos:start="277:29" pos:end="277:34">height</name></name> <operator pos:start="277:36" pos:end="277:36">-</operator> <name pos:start="277:38" pos:end="277:48"><name pos:start="277:38" pos:end="277:40">ost</name><operator pos:start="277:41" pos:end="277:42">-&gt;</operator><name pos:start="277:43" pos:end="277:48">padtop</name></name> <operator pos:start="277:50" pos:end="277:50">-</operator> <name pos:start="277:52" pos:end="277:65"><name pos:start="277:52" pos:end="277:54">ost</name><operator pos:start="277:55" pos:end="277:56">-&gt;</operator><name pos:start="277:57" pos:end="277:65">padbottom</name></name><operator pos:start="277:66" pos:end="277:66">)</operator> <operator pos:start="277:68" pos:end="277:69">&gt;&gt;</operator> <name pos:start="277:71" pos:end="277:75">shift</name></expr>;</expr_stmt>

            <for pos:start="279:13" pos:end="289:13">for <control pos:start="279:17" pos:end="279:41">(<init pos:start="279:18" pos:end="279:23"><expr pos:start="279:18" pos:end="279:22"><name pos:start="279:18" pos:end="279:18">y</name> <operator pos:start="279:20" pos:end="279:20">=</operator> <literal type="number" pos:start="279:22" pos:end="279:22">0</literal></expr>;</init> <condition pos:start="279:25" pos:end="279:36"><expr pos:start="279:25" pos:end="279:35"><name pos:start="279:25" pos:end="279:25">y</name> <operator pos:start="279:27" pos:end="279:27">&lt;</operator> <name pos:start="279:29" pos:end="279:35">yheight</name></expr>;</condition> <incr pos:start="279:38" pos:end="279:40"><expr pos:start="279:38" pos:end="279:40"><name pos:start="279:38" pos:end="279:38">y</name><operator pos:start="279:39" pos:end="279:40">++</operator></expr></incr>)</control> <block pos:start="279:43" pos:end="289:13">{<block_content pos:start="283:17" pos:end="287:55">

                <comment type="block" pos:start="281:17" pos:end="281:67">/* copy unpadded image row into padded image row */</comment>

                <expr_stmt pos:start="283:17" pos:end="283:67"><expr pos:start="283:17" pos:end="283:66"><call pos:start="283:17" pos:end="283:66"><name pos:start="283:17" pos:end="283:22">memcpy</name><argument_list pos:start="283:23" pos:end="283:66">(<argument pos:start="283:24" pos:end="283:27"><expr pos:start="283:24" pos:end="283:27"><name pos:start="283:24" pos:end="283:27">optr</name></expr></argument>, <argument pos:start="283:30" pos:end="283:33"><expr pos:start="283:30" pos:end="283:33"><name pos:start="283:30" pos:end="283:33">iptr</name></expr></argument>, <argument pos:start="283:36" pos:end="283:65"><expr pos:start="283:36" pos:end="283:65"><name pos:start="283:36" pos:end="283:65"><name pos:start="283:36" pos:end="283:52">formatted_picture</name><operator pos:start="283:53" pos:end="283:54">-&gt;</operator><name pos:start="283:55" pos:end="283:62">linesize</name><index pos:start="283:63" pos:end="283:65">[<expr pos:start="283:64" pos:end="283:64"><name pos:start="283:64" pos:end="283:64">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:51"><expr pos:start="285:17" pos:end="285:50"><name pos:start="285:17" pos:end="285:20">optr</name> <operator pos:start="285:22" pos:end="285:23">+=</operator> <name pos:start="285:25" pos:end="285:50"><name pos:start="285:25" pos:end="285:37">final_picture</name><operator pos:start="285:38" pos:end="285:39">-&gt;</operator><name pos:start="285:40" pos:end="285:47">linesize</name><index pos:start="285:48" pos:end="285:50">[<expr pos:start="285:49" pos:end="285:49"><name pos:start="285:49" pos:end="285:49">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:55"><expr pos:start="287:17" pos:end="287:54"><name pos:start="287:17" pos:end="287:20">iptr</name> <operator pos:start="287:22" pos:end="287:23">+=</operator> <name pos:start="287:25" pos:end="287:54"><name pos:start="287:25" pos:end="287:41">formatted_picture</name><operator pos:start="287:42" pos:end="287:43">-&gt;</operator><name pos:start="287:44" pos:end="287:51">linesize</name><index pos:start="287:52" pos:end="287:54">[<expr pos:start="287:53" pos:end="287:53"><name pos:start="287:53" pos:end="287:53">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <expr_stmt pos:start="295:9" pos:end="299:26"><expr pos:start="295:9" pos:end="299:25"><call pos:start="295:9" pos:end="299:25"><name pos:start="295:9" pos:end="295:23">fill_pad_region</name><argument_list pos:start="295:24" pos:end="299:25">(<argument pos:start="295:25" pos:end="295:49"><expr pos:start="295:25" pos:end="295:49"><operator pos:start="295:25" pos:end="295:25">(</operator><name pos:start="295:26" pos:end="295:34">AVPicture</name><operator pos:start="295:35" pos:end="295:35">*</operator><operator pos:start="295:36" pos:end="295:36">)</operator><name pos:start="295:37" pos:end="295:49">final_picture</name></expr></argument>, <argument pos:start="295:52" pos:end="295:62"><expr pos:start="295:52" pos:end="295:62"><name pos:start="295:52" pos:end="295:62"><name pos:start="295:52" pos:end="295:54">enc</name><operator pos:start="295:55" pos:end="295:56">-&gt;</operator><name pos:start="295:57" pos:end="295:62">height</name></name></expr></argument>, <argument pos:start="295:65" pos:end="295:74"><expr pos:start="295:65" pos:end="295:74"><name pos:start="295:65" pos:end="295:74"><name pos:start="295:65" pos:end="295:67">enc</name><operator pos:start="295:68" pos:end="295:69">-&gt;</operator><name pos:start="295:70" pos:end="295:74">width</name></name></expr></argument>,

                <argument pos:start="297:17" pos:end="297:27"><expr pos:start="297:17" pos:end="297:27"><name pos:start="297:17" pos:end="297:27"><name pos:start="297:17" pos:end="297:19">ost</name><operator pos:start="297:20" pos:end="297:21">-&gt;</operator><name pos:start="297:22" pos:end="297:27">padtop</name></name></expr></argument>, <argument pos:start="297:30" pos:end="297:43"><expr pos:start="297:30" pos:end="297:43"><name pos:start="297:30" pos:end="297:43"><name pos:start="297:30" pos:end="297:32">ost</name><operator pos:start="297:33" pos:end="297:34">-&gt;</operator><name pos:start="297:35" pos:end="297:43">padbottom</name></name></expr></argument>, <argument pos:start="297:46" pos:end="297:57"><expr pos:start="297:46" pos:end="297:57"><name pos:start="297:46" pos:end="297:57"><name pos:start="297:46" pos:end="297:48">ost</name><operator pos:start="297:49" pos:end="297:50">-&gt;</operator><name pos:start="297:51" pos:end="297:57">padleft</name></name></expr></argument>, <argument pos:start="297:60" pos:end="297:72"><expr pos:start="297:60" pos:end="297:72"><name pos:start="297:60" pos:end="297:72"><name pos:start="297:60" pos:end="297:62">ost</name><operator pos:start="297:63" pos:end="297:64">-&gt;</operator><name pos:start="297:65" pos:end="297:72">padright</name></name></expr></argument>,

                <argument pos:start="299:17" pos:end="299:24"><expr pos:start="299:17" pos:end="299:24"><name pos:start="299:17" pos:end="299:24">padcolor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <if_stmt pos:start="303:9" pos:end="345:9"><if pos:start="303:9" pos:end="345:9">if <condition pos:start="303:12" pos:end="303:44">(<expr pos:start="303:13" pos:end="303:43"><name pos:start="303:13" pos:end="303:24"><name pos:start="303:13" pos:end="303:15">enc</name><operator pos:start="303:16" pos:end="303:17">-&gt;</operator><name pos:start="303:18" pos:end="303:24">pix_fmt</name></name> <operator pos:start="303:26" pos:end="303:27">!=</operator> <name pos:start="303:29" pos:end="303:43">PIX_FMT_YUV420P</name></expr>)</condition> <block pos:start="303:46" pos:end="345:9">{<block_content pos:start="305:13" pos:end="343:13">

            <decl_stmt pos:start="305:13" pos:end="305:21"><decl pos:start="305:13" pos:end="305:20"><type pos:start="305:13" pos:end="305:15"><name pos:start="305:13" pos:end="305:15">int</name></type> <name pos:start="305:17" pos:end="305:20">size</name></decl>;</decl_stmt>



            <expr_stmt pos:start="309:13" pos:end="309:25"><expr pos:start="309:13" pos:end="309:24"><call pos:start="309:13" pos:end="309:24"><name pos:start="309:13" pos:end="309:19">av_free</name><argument_list pos:start="309:20" pos:end="309:24">(<argument pos:start="309:21" pos:end="309:23"><expr pos:start="309:21" pos:end="309:23"><name pos:start="309:21" pos:end="309:23">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="311:13" pos:end="311:42">/* create temporary picture */</comment>

            <expr_stmt pos:start="313:13" pos:end="313:77"><expr pos:start="313:13" pos:end="313:76"><name pos:start="313:13" pos:end="313:16">size</name> <operator pos:start="313:18" pos:end="313:18">=</operator> <call pos:start="313:20" pos:end="313:76"><name pos:start="313:20" pos:end="313:37">avpicture_get_size</name><argument_list pos:start="313:38" pos:end="313:76">(<argument pos:start="313:39" pos:end="313:50"><expr pos:start="313:39" pos:end="313:50"><name pos:start="313:39" pos:end="313:50"><name pos:start="313:39" pos:end="313:41">enc</name><operator pos:start="313:42" pos:end="313:43">-&gt;</operator><name pos:start="313:44" pos:end="313:50">pix_fmt</name></name></expr></argument>, <argument pos:start="313:53" pos:end="313:62"><expr pos:start="313:53" pos:end="313:62"><name pos:start="313:53" pos:end="313:62"><name pos:start="313:53" pos:end="313:55">enc</name><operator pos:start="313:56" pos:end="313:57">-&gt;</operator><name pos:start="313:58" pos:end="313:62">width</name></name></expr></argument>, <argument pos:start="313:65" pos:end="313:75"><expr pos:start="313:65" pos:end="313:75"><name pos:start="313:65" pos:end="313:75"><name pos:start="313:65" pos:end="313:67">enc</name><operator pos:start="313:68" pos:end="313:69">-&gt;</operator><name pos:start="313:70" pos:end="313:75">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:34"><expr pos:start="315:13" pos:end="315:33"><name pos:start="315:13" pos:end="315:15">buf</name> <operator pos:start="315:17" pos:end="315:17">=</operator> <call pos:start="315:19" pos:end="315:33"><name pos:start="315:19" pos:end="315:27">av_malloc</name><argument_list pos:start="315:28" pos:end="315:33">(<argument pos:start="315:29" pos:end="315:32"><expr pos:start="315:29" pos:end="315:32"><name pos:start="315:29" pos:end="315:32">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="317:13" pos:end="319:23"><if pos:start="317:13" pos:end="319:23">if <condition pos:start="317:16" pos:end="317:21">(<expr pos:start="317:17" pos:end="317:20"><operator pos:start="317:17" pos:end="317:17">!</operator><name pos:start="317:18" pos:end="317:20">buf</name></expr>)</condition><block type="pseudo" pos:start="319:17" pos:end="319:23"><block_content pos:start="319:17" pos:end="319:23">

                <return pos:start="319:17" pos:end="319:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:49"><expr pos:start="321:13" pos:end="321:48"><name pos:start="321:13" pos:end="321:25">final_picture</name> <operator pos:start="321:27" pos:end="321:27">=</operator> <operator pos:start="321:29" pos:end="321:29">&amp;</operator><name pos:start="321:30" pos:end="321:48">picture_format_temp</name></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:98"><expr pos:start="323:13" pos:end="323:97"><call pos:start="323:13" pos:end="323:97"><name pos:start="323:13" pos:end="323:26">avpicture_fill</name><argument_list pos:start="323:27" pos:end="323:97">(<argument pos:start="323:28" pos:end="323:52"><expr pos:start="323:28" pos:end="323:52"><operator pos:start="323:28" pos:end="323:28">(</operator><name pos:start="323:29" pos:end="323:37">AVPicture</name><operator pos:start="323:38" pos:end="323:38">*</operator><operator pos:start="323:39" pos:end="323:39">)</operator><name pos:start="323:40" pos:end="323:52">final_picture</name></expr></argument>, <argument pos:start="323:55" pos:end="323:57"><expr pos:start="323:55" pos:end="323:57"><name pos:start="323:55" pos:end="323:57">buf</name></expr></argument>, <argument pos:start="323:60" pos:end="323:71"><expr pos:start="323:60" pos:end="323:71"><name pos:start="323:60" pos:end="323:71"><name pos:start="323:60" pos:end="323:62">enc</name><operator pos:start="323:63" pos:end="323:64">-&gt;</operator><name pos:start="323:65" pos:end="323:71">pix_fmt</name></name></expr></argument>, <argument pos:start="323:74" pos:end="323:83"><expr pos:start="323:74" pos:end="323:83"><name pos:start="323:74" pos:end="323:83"><name pos:start="323:74" pos:end="323:76">enc</name><operator pos:start="323:77" pos:end="323:78">-&gt;</operator><name pos:start="323:79" pos:end="323:83">width</name></name></expr></argument>, <argument pos:start="323:86" pos:end="323:96"><expr pos:start="323:86" pos:end="323:96"><name pos:start="323:86" pos:end="323:96"><name pos:start="323:86" pos:end="323:88">enc</name><operator pos:start="323:89" pos:end="323:90">-&gt;</operator><name pos:start="323:91" pos:end="323:96">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="327:13" pos:end="343:13"><if pos:start="327:13" pos:end="343:13">if <condition pos:start="327:16" pos:end="331:53">(<expr pos:start="327:17" pos:end="331:52"><call pos:start="327:17" pos:end="331:48"><name pos:start="327:17" pos:end="327:27">img_convert</name><argument_list pos:start="327:28" pos:end="331:48">(<argument pos:start="327:29" pos:end="327:53"><expr pos:start="327:29" pos:end="327:53"><operator pos:start="327:29" pos:end="327:29">(</operator><name pos:start="327:30" pos:end="327:38">AVPicture</name><operator pos:start="327:39" pos:end="327:39">*</operator><operator pos:start="327:40" pos:end="327:40">)</operator><name pos:start="327:41" pos:end="327:53">final_picture</name></expr></argument>, <argument pos:start="327:56" pos:end="327:67"><expr pos:start="327:56" pos:end="327:67"><name pos:start="327:56" pos:end="327:67"><name pos:start="327:56" pos:end="327:58">enc</name><operator pos:start="327:59" pos:end="327:60">-&gt;</operator><name pos:start="327:61" pos:end="327:67">pix_fmt</name></name></expr></argument>, 

                        <argument pos:start="329:25" pos:end="329:50"><expr pos:start="329:25" pos:end="329:50"><operator pos:start="329:25" pos:end="329:25">(</operator><name pos:start="329:26" pos:end="329:34">AVPicture</name><operator pos:start="329:35" pos:end="329:35">*</operator><operator pos:start="329:36" pos:end="329:36">)</operator><operator pos:start="329:37" pos:end="329:37">&amp;</operator><name pos:start="329:38" pos:end="329:50"><name pos:start="329:38" pos:end="329:40">ost</name><operator pos:start="329:41" pos:end="329:42">-&gt;</operator><name pos:start="329:43" pos:end="329:50">pict_tmp</name></name></expr></argument>, <argument pos:start="329:53" pos:end="329:67"><expr pos:start="329:53" pos:end="329:67"><name pos:start="329:53" pos:end="329:67">PIX_FMT_YUV420P</name></expr></argument>, 

                        <argument pos:start="331:25" pos:end="331:34"><expr pos:start="331:25" pos:end="331:34"><name pos:start="331:25" pos:end="331:34"><name pos:start="331:25" pos:end="331:27">enc</name><operator pos:start="331:28" pos:end="331:29">-&gt;</operator><name pos:start="331:30" pos:end="331:34">width</name></name></expr></argument>, <argument pos:start="331:37" pos:end="331:47"><expr pos:start="331:37" pos:end="331:47"><name pos:start="331:37" pos:end="331:47"><name pos:start="331:37" pos:end="331:39">enc</name><operator pos:start="331:40" pos:end="331:41">-&gt;</operator><name pos:start="331:42" pos:end="331:47">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="331:50" pos:end="331:50">&lt;</operator> <literal type="number" pos:start="331:52" pos:end="331:52">0</literal></expr>)</condition> <block pos:start="331:55" pos:end="343:13">{<block_content pos:start="335:17" pos:end="341:29">



                <if_stmt pos:start="335:17" pos:end="337:77"><if pos:start="335:17" pos:end="337:77">if <condition pos:start="335:20" pos:end="335:33">(<expr pos:start="335:21" pos:end="335:32"><name pos:start="335:21" pos:end="335:27">verbose</name> <operator pos:start="335:29" pos:end="335:30">&gt;=</operator> <literal type="number" pos:start="335:32" pos:end="335:32">0</literal></expr>)</condition><block type="pseudo" pos:start="337:21" pos:end="337:77"><block_content pos:start="337:21" pos:end="337:77">

                    <expr_stmt pos:start="337:21" pos:end="337:77"><expr pos:start="337:21" pos:end="337:76"><call pos:start="337:21" pos:end="337:76"><name pos:start="337:21" pos:end="337:27">fprintf</name><argument_list pos:start="337:28" pos:end="337:76">(<argument pos:start="337:29" pos:end="337:34"><expr pos:start="337:29" pos:end="337:34"><name pos:start="337:29" pos:end="337:34">stderr</name></expr></argument>, <argument pos:start="337:37" pos:end="337:75"><expr pos:start="337:37" pos:end="337:75"><literal type="string" pos:start="337:37" pos:end="337:75">"pixel format conversion not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <goto pos:start="341:17" pos:end="341:29">goto <name pos:start="341:22" pos:end="341:28">the_end</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="347:7" pos:end="351:5">else <block pos:start="347:12" pos:end="351:5">{<block_content pos:start="349:9" pos:end="349:42">

        <expr_stmt pos:start="349:9" pos:end="349:42"><expr pos:start="349:9" pos:end="349:41"><name pos:start="349:9" pos:end="349:21">final_picture</name> <operator pos:start="349:23" pos:end="349:23">=</operator> <name pos:start="349:25" pos:end="349:41">formatted_picture</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="353:5" pos:end="353:36">/* duplicates frame if needed */</comment>

    <comment type="block" pos:start="355:5" pos:end="355:41">/* XXX: pb because no interleaving */</comment>

    <for pos:start="357:5" pos:end="489:5">for<control pos:start="357:8" pos:end="357:28">(<init pos:start="357:9" pos:end="357:12"><expr pos:start="357:9" pos:end="357:11"><name pos:start="357:9" pos:end="357:9">i</name><operator pos:start="357:10" pos:end="357:10">=</operator><literal type="number" pos:start="357:11" pos:end="357:11">0</literal></expr>;</init><condition pos:start="357:13" pos:end="357:24"><expr pos:start="357:13" pos:end="357:23"><name pos:start="357:13" pos:end="357:13">i</name><operator pos:start="357:14" pos:end="357:14">&lt;</operator><name pos:start="357:15" pos:end="357:23">nb_frames</name></expr>;</condition><incr pos:start="357:25" pos:end="357:27"><expr pos:start="357:25" pos:end="357:27"><name pos:start="357:25" pos:end="357:25">i</name><operator pos:start="357:26" pos:end="357:27">++</operator></expr></incr>)</control> <block pos:start="357:30" pos:end="489:5">{<block_content pos:start="359:9" pos:end="487:28">

        <decl_stmt pos:start="359:9" pos:end="359:21"><decl pos:start="359:9" pos:end="359:20"><type pos:start="359:9" pos:end="359:16"><name pos:start="359:9" pos:end="359:16">AVPacket</name></type> <name pos:start="359:18" pos:end="359:20">pkt</name></decl>;</decl_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:29"><expr pos:start="361:9" pos:end="361:28"><call pos:start="361:9" pos:end="361:28"><name pos:start="361:9" pos:end="361:22">av_init_packet</name><argument_list pos:start="361:23" pos:end="361:28">(<argument pos:start="361:24" pos:end="361:27"><expr pos:start="361:24" pos:end="361:27"><operator pos:start="361:24" pos:end="361:24">&amp;</operator><name pos:start="361:25" pos:end="361:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:37"><expr pos:start="363:9" pos:end="363:36"><name pos:start="363:9" pos:end="363:24"><name pos:start="363:9" pos:end="363:11">pkt</name><operator pos:start="363:12" pos:end="363:12">.</operator><name pos:start="363:13" pos:end="363:24">stream_index</name></name><operator pos:start="363:25" pos:end="363:25">=</operator> <name pos:start="363:27" pos:end="363:36"><name pos:start="363:27" pos:end="363:29">ost</name><operator pos:start="363:30" pos:end="363:31">-&gt;</operator><name pos:start="363:32" pos:end="363:36">index</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="367:9" pos:end="485:9"><if pos:start="367:9" pos:end="397:9">if <condition pos:start="367:12" pos:end="367:49">(<expr pos:start="367:13" pos:end="367:48"><name pos:start="367:13" pos:end="367:29"><name pos:start="367:13" pos:end="367:13">s</name><operator pos:start="367:14" pos:end="367:15">-&gt;</operator><name pos:start="367:16" pos:end="367:22">oformat</name><operator pos:start="367:23" pos:end="367:24">-&gt;</operator><name pos:start="367:25" pos:end="367:29">flags</name></name> <operator pos:start="367:31" pos:end="367:31">&amp;</operator> <name pos:start="367:33" pos:end="367:48">AVFMT_RAWPICTURE</name></expr>)</condition> <block pos:start="367:51" pos:end="397:9">{<block_content pos:start="375:13" pos:end="395:41">

            <comment type="block" pos:start="369:13" pos:end="373:25">/* raw pictures are written as AVPicture structure to

               avoid any copies. We support temorarily the older

               method. */</comment>

            <decl_stmt pos:start="375:13" pos:end="375:50"><decl pos:start="375:13" pos:end="375:49"><type pos:start="375:13" pos:end="375:20"><name pos:start="375:13" pos:end="375:19">AVFrame</name><modifier pos:start="375:20" pos:end="375:20">*</modifier></type> <name pos:start="375:22" pos:end="375:30">old_frame</name> <init pos:start="375:32" pos:end="375:49">= <expr pos:start="375:34" pos:end="375:49"><name pos:start="375:34" pos:end="375:49"><name pos:start="375:34" pos:end="375:36">enc</name><operator pos:start="375:37" pos:end="375:38">-&gt;</operator><name pos:start="375:39" pos:end="375:49">coded_frame</name></name></expr></init></decl>;</decl_stmt>

	    <expr_stmt pos:start="377:13" pos:end="377:48"><expr pos:start="377:13" pos:end="377:47"><name pos:start="377:13" pos:end="377:28"><name pos:start="377:13" pos:end="377:15">enc</name><operator pos:start="377:16" pos:end="377:17">-&gt;</operator><name pos:start="377:18" pos:end="377:28">coded_frame</name></name> <operator pos:start="377:30" pos:end="377:30">=</operator> <name pos:start="377:32" pos:end="377:47"><name pos:start="377:32" pos:end="377:34">dec</name><operator pos:start="377:35" pos:end="377:36">-&gt;</operator><name pos:start="377:37" pos:end="377:47">coded_frame</name></name></expr>;</expr_stmt> <comment type="line" pos:start="377:50" pos:end="377:77">//FIXME/XXX remove this hack</comment>

            <expr_stmt pos:start="379:13" pos:end="379:47"><expr pos:start="379:13" pos:end="379:46"><name pos:start="379:13" pos:end="379:20"><name pos:start="379:13" pos:end="379:15">pkt</name><operator pos:start="379:16" pos:end="379:16">.</operator><name pos:start="379:17" pos:end="379:20">data</name></name><operator pos:start="379:21" pos:end="379:21">=</operator> <operator pos:start="379:23" pos:end="379:23">(</operator><name pos:start="379:24" pos:end="379:30">uint8_t</name> <operator pos:start="379:32" pos:end="379:32">*</operator><operator pos:start="379:33" pos:end="379:33">)</operator><name pos:start="379:34" pos:end="379:46">final_picture</name></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:41"><expr pos:start="381:13" pos:end="381:40"><name pos:start="381:13" pos:end="381:20"><name pos:start="381:13" pos:end="381:15">pkt</name><operator pos:start="381:16" pos:end="381:16">.</operator><name pos:start="381:17" pos:end="381:20">size</name></name><operator pos:start="381:21" pos:end="381:21">=</operator>  <sizeof pos:start="381:24" pos:end="381:40">sizeof<argument_list pos:start="381:30" pos:end="381:40">(<argument pos:start="381:31" pos:end="381:39"><expr pos:start="381:31" pos:end="381:39"><name pos:start="381:31" pos:end="381:39">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <if_stmt pos:start="383:13" pos:end="385:47"><if pos:start="383:13" pos:end="385:47">if<condition pos:start="383:15" pos:end="383:32">(<expr pos:start="383:16" pos:end="383:31"><name pos:start="383:16" pos:end="383:31"><name pos:start="383:16" pos:end="383:18">dec</name><operator pos:start="383:19" pos:end="383:20">-&gt;</operator><name pos:start="383:21" pos:end="383:31">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="385:17" pos:end="385:47"><block_content pos:start="385:17" pos:end="385:47">

                <expr_stmt pos:start="385:17" pos:end="385:47"><expr pos:start="385:17" pos:end="385:46"><name pos:start="385:17" pos:end="385:23"><name pos:start="385:17" pos:end="385:19">pkt</name><operator pos:start="385:20" pos:end="385:20">.</operator><name pos:start="385:21" pos:end="385:23">pts</name></name><operator pos:start="385:24" pos:end="385:24">=</operator> <name pos:start="385:26" pos:end="385:46"><name pos:start="385:26" pos:end="385:28">dec</name><operator pos:start="385:29" pos:end="385:30">-&gt;</operator><name pos:start="385:31" pos:end="385:41">coded_frame</name><operator pos:start="385:42" pos:end="385:43">-&gt;</operator><name pos:start="385:44" pos:end="385:46">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="387:13" pos:end="389:42"><if pos:start="387:13" pos:end="389:42">if<condition pos:start="387:15" pos:end="387:63">(<expr pos:start="387:16" pos:end="387:62"><name pos:start="387:16" pos:end="387:31"><name pos:start="387:16" pos:end="387:18">dec</name><operator pos:start="387:19" pos:end="387:20">-&gt;</operator><name pos:start="387:21" pos:end="387:31">coded_frame</name></name> <operator pos:start="387:33" pos:end="387:34">&amp;&amp;</operator> <name pos:start="387:36" pos:end="387:62"><name pos:start="387:36" pos:end="387:38">dec</name><operator pos:start="387:39" pos:end="387:40">-&gt;</operator><name pos:start="387:41" pos:end="387:51">coded_frame</name><operator pos:start="387:52" pos:end="387:53">-&gt;</operator><name pos:start="387:54" pos:end="387:62">key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="389:17" pos:end="389:42"><block_content pos:start="389:17" pos:end="389:42">

                <expr_stmt pos:start="389:17" pos:end="389:42"><expr pos:start="389:17" pos:end="389:41"><name pos:start="389:17" pos:end="389:25"><name pos:start="389:17" pos:end="389:19">pkt</name><operator pos:start="389:20" pos:end="389:20">.</operator><name pos:start="389:21" pos:end="389:25">flags</name></name> <operator pos:start="389:27" pos:end="389:28">|=</operator> <name pos:start="389:30" pos:end="389:41">PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="393:13" pos:end="393:36"><expr pos:start="393:13" pos:end="393:35"><call pos:start="393:13" pos:end="393:35"><name pos:start="393:13" pos:end="393:26">av_write_frame</name><argument_list pos:start="393:27" pos:end="393:35">(<argument pos:start="393:28" pos:end="393:28"><expr pos:start="393:28" pos:end="393:28"><name pos:start="393:28" pos:end="393:28">s</name></expr></argument>, <argument pos:start="393:31" pos:end="393:34"><expr pos:start="393:31" pos:end="393:34"><operator pos:start="393:31" pos:end="393:31">&amp;</operator><name pos:start="393:32" pos:end="393:34">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="395:13" pos:end="395:41"><expr pos:start="395:13" pos:end="395:40"><name pos:start="395:13" pos:end="395:28"><name pos:start="395:13" pos:end="395:15">enc</name><operator pos:start="395:16" pos:end="395:17">-&gt;</operator><name pos:start="395:18" pos:end="395:28">coded_frame</name></name> <operator pos:start="395:30" pos:end="395:30">=</operator> <name pos:start="395:32" pos:end="395:40">old_frame</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="397:11" pos:end="485:9">else <block pos:start="397:16" pos:end="485:9">{<block_content pos:start="399:13" pos:end="483:13">

            <decl_stmt pos:start="399:13" pos:end="399:32"><decl pos:start="399:13" pos:end="399:31"><type pos:start="399:13" pos:end="399:19"><name pos:start="399:13" pos:end="399:19">AVFrame</name></type> <name pos:start="399:21" pos:end="399:31">big_picture</name></decl>;</decl_stmt>



            <expr_stmt pos:start="403:13" pos:end="403:40"><expr pos:start="403:13" pos:end="403:39"><name pos:start="403:13" pos:end="403:23">big_picture</name><operator pos:start="403:24" pos:end="403:24">=</operator> <operator pos:start="403:26" pos:end="403:26">*</operator><name pos:start="403:27" pos:end="403:39">final_picture</name></expr>;</expr_stmt>

            <comment type="block" pos:start="405:13" pos:end="407:26">/* better than nothing: use input picture interlaced

               settings */</comment>

            <expr_stmt pos:start="409:13" pos:end="409:72"><expr pos:start="409:13" pos:end="409:71"><name pos:start="409:13" pos:end="409:40"><name pos:start="409:13" pos:end="409:23">big_picture</name><operator pos:start="409:24" pos:end="409:24">.</operator><name pos:start="409:25" pos:end="409:40">interlaced_frame</name></name> <operator pos:start="409:42" pos:end="409:42">=</operator> <name pos:start="409:44" pos:end="409:71"><name pos:start="409:44" pos:end="409:53">in_picture</name><operator pos:start="409:54" pos:end="409:55">-&gt;</operator><name pos:start="409:56" pos:end="409:71">interlaced_frame</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="411:13" pos:end="421:13"><if pos:start="411:13" pos:end="421:13">if<condition pos:start="411:15" pos:end="411:51">(<expr pos:start="411:16" pos:end="411:50"><name pos:start="411:16" pos:end="411:30">do_interlace_me</name> <operator pos:start="411:32" pos:end="411:33">||</operator> <name pos:start="411:35" pos:end="411:50">do_interlace_dct</name></expr>)</condition><block pos:start="411:52" pos:end="421:13">{<block_content pos:start="413:17" pos:end="419:52">

                <if_stmt pos:start="413:17" pos:end="419:52"><if pos:start="413:17" pos:end="415:78">if<condition pos:start="413:19" pos:end="413:41">(<expr pos:start="413:20" pos:end="413:40"><name pos:start="413:20" pos:end="413:34">top_field_first</name> <operator pos:start="413:36" pos:end="413:37">==</operator> <operator pos:start="413:39" pos:end="413:39">-</operator><literal type="number" pos:start="413:40" pos:end="413:40">1</literal></expr>)</condition><block type="pseudo" pos:start="415:21" pos:end="415:78"><block_content pos:start="415:21" pos:end="415:78">

                    <expr_stmt pos:start="415:21" pos:end="415:78"><expr pos:start="415:21" pos:end="415:77"><name pos:start="415:21" pos:end="415:47"><name pos:start="415:21" pos:end="415:31">big_picture</name><operator pos:start="415:32" pos:end="415:32">.</operator><name pos:start="415:33" pos:end="415:47">top_field_first</name></name> <operator pos:start="415:49" pos:end="415:49">=</operator> <name pos:start="415:51" pos:end="415:77"><name pos:start="415:51" pos:end="415:60">in_picture</name><operator pos:start="415:61" pos:end="415:62">-&gt;</operator><name pos:start="415:63" pos:end="415:77">top_field_first</name></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="417:17" pos:end="419:52">else<block type="pseudo" pos:start="419:21" pos:end="419:52"><block_content pos:start="419:21" pos:end="419:52">

                    <expr_stmt pos:start="419:21" pos:end="419:52"><expr pos:start="419:21" pos:end="419:51"><name pos:start="419:21" pos:end="419:47"><name pos:start="419:21" pos:end="419:31">big_picture</name><operator pos:start="419:32" pos:end="419:32">.</operator><name pos:start="419:33" pos:end="419:47">top_field_first</name></name> <operator pos:start="419:49" pos:end="419:49">=</operator> <literal type="number" pos:start="419:51" pos:end="419:51">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="425:13" pos:end="427:40">/* handles sameq here. This is not correct because it may

               not be a global option */</comment>

            <if_stmt pos:start="429:13" pos:end="435:55"><if pos:start="429:13" pos:end="433:13">if <condition pos:start="429:16" pos:end="429:29">(<expr pos:start="429:17" pos:end="429:28"><name pos:start="429:17" pos:end="429:28">same_quality</name></expr>)</condition> <block pos:start="429:31" pos:end="433:13">{<block_content pos:start="431:17" pos:end="431:55">

                <expr_stmt pos:start="431:17" pos:end="431:55"><expr pos:start="431:17" pos:end="431:54"><name pos:start="431:17" pos:end="431:35"><name pos:start="431:17" pos:end="431:27">big_picture</name><operator pos:start="431:28" pos:end="431:28">.</operator><name pos:start="431:29" pos:end="431:35">quality</name></name> <operator pos:start="431:37" pos:end="431:37">=</operator> <name pos:start="431:39" pos:end="431:54"><name pos:start="431:39" pos:end="431:41">ist</name><operator pos:start="431:42" pos:end="431:43">-&gt;</operator><name pos:start="431:44" pos:end="431:45">st</name><operator pos:start="431:46" pos:end="431:47">-&gt;</operator><name pos:start="431:48" pos:end="431:54">quality</name></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="433:14" pos:end="435:55">else<block type="pseudo" pos:start="435:17" pos:end="435:55"><block_content pos:start="435:17" pos:end="435:55">

                <expr_stmt pos:start="435:17" pos:end="435:55"><expr pos:start="435:17" pos:end="435:54"><name pos:start="435:17" pos:end="435:35"><name pos:start="435:17" pos:end="435:27">big_picture</name><operator pos:start="435:28" pos:end="435:28">.</operator><name pos:start="435:29" pos:end="435:35">quality</name></name> <operator pos:start="435:37" pos:end="435:37">=</operator> <name pos:start="435:39" pos:end="435:54"><name pos:start="435:39" pos:end="435:41">ost</name><operator pos:start="435:42" pos:end="435:43">-&gt;</operator><name pos:start="435:44" pos:end="435:45">st</name><operator pos:start="435:46" pos:end="435:47">-&gt;</operator><name pos:start="435:48" pos:end="435:54">quality</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="437:13" pos:end="439:42"><if pos:start="437:13" pos:end="439:42">if<condition pos:start="437:15" pos:end="437:29">(<expr pos:start="437:16" pos:end="437:28"><operator pos:start="437:16" pos:end="437:16">!</operator><name pos:start="437:17" pos:end="437:28">me_threshold</name></expr>)</condition><block type="pseudo" pos:start="439:17" pos:end="439:42"><block_content pos:start="439:17" pos:end="439:42">

                <expr_stmt pos:start="439:17" pos:end="439:42"><expr pos:start="439:17" pos:end="439:41"><name pos:start="439:17" pos:end="439:37"><name pos:start="439:17" pos:end="439:27">big_picture</name><operator pos:start="439:28" pos:end="439:28">.</operator><name pos:start="439:29" pos:end="439:37">pict_type</name></name> <operator pos:start="439:39" pos:end="439:39">=</operator> <literal type="number" pos:start="439:41" pos:end="439:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:45"><expr pos:start="441:13" pos:end="441:44"><name pos:start="441:13" pos:end="441:27"><name pos:start="441:13" pos:end="441:23">big_picture</name><operator pos:start="441:24" pos:end="441:24">.</operator><name pos:start="441:25" pos:end="441:27">pts</name></name> <operator pos:start="441:29" pos:end="441:29">=</operator> <name pos:start="441:31" pos:end="441:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt> <comment type="line" pos:start="441:47" pos:end="441:53">//FIXME</comment>

            <expr_stmt pos:start="443:13" pos:end="447:53"><expr pos:start="443:13" pos:end="447:52"><name pos:start="443:13" pos:end="443:15">ret</name> <operator pos:start="443:17" pos:end="443:17">=</operator> <call pos:start="443:19" pos:end="447:52"><name pos:start="443:19" pos:end="443:38">avcodec_encode_video</name><argument_list pos:start="443:39" pos:end="447:52">(<argument pos:start="443:40" pos:end="443:42"><expr pos:start="443:40" pos:end="443:42"><name pos:start="443:40" pos:end="443:42">enc</name></expr></argument>, 

                                       <argument pos:start="445:40" pos:end="445:51"><expr pos:start="445:40" pos:end="445:51"><name pos:start="445:40" pos:end="445:51">video_buffer</name></expr></argument>, <argument pos:start="445:54" pos:end="445:70"><expr pos:start="445:54" pos:end="445:70"><name pos:start="445:54" pos:end="445:70">VIDEO_BUFFER_SIZE</name></expr></argument>,

                                       <argument pos:start="447:40" pos:end="447:51"><expr pos:start="447:40" pos:end="447:51"><operator pos:start="447:40" pos:end="447:40">&amp;</operator><name pos:start="447:41" pos:end="447:51">big_picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="449:13" pos:end="449:53">//enc-&gt;frame_number = enc-&gt;real_pict_num;</comment>

            <if_stmt pos:start="451:13" pos:end="483:13"><if pos:start="451:13" pos:end="483:13">if<condition pos:start="451:15" pos:end="451:19">(<expr pos:start="451:16" pos:end="451:18"><name pos:start="451:16" pos:end="451:18">ret</name></expr>)</condition><block pos:start="451:20" pos:end="483:13">{<block_content pos:start="453:17" pos:end="481:17">

                <expr_stmt pos:start="453:17" pos:end="453:39"><expr pos:start="453:17" pos:end="453:38"><name pos:start="453:17" pos:end="453:24"><name pos:start="453:17" pos:end="453:19">pkt</name><operator pos:start="453:20" pos:end="453:20">.</operator><name pos:start="453:21" pos:end="453:24">data</name></name><operator pos:start="453:25" pos:end="453:25">=</operator> <name pos:start="453:27" pos:end="453:38">video_buffer</name></expr>;</expr_stmt>

                <expr_stmt pos:start="455:17" pos:end="455:30"><expr pos:start="455:17" pos:end="455:29"><name pos:start="455:17" pos:end="455:24"><name pos:start="455:17" pos:end="455:19">pkt</name><operator pos:start="455:20" pos:end="455:20">.</operator><name pos:start="455:21" pos:end="455:24">size</name></name><operator pos:start="455:25" pos:end="455:25">=</operator> <name pos:start="455:27" pos:end="455:29">ret</name></expr>;</expr_stmt>

                <if_stmt pos:start="457:17" pos:end="459:51"><if pos:start="457:17" pos:end="459:51">if<condition pos:start="457:19" pos:end="457:36">(<expr pos:start="457:20" pos:end="457:35"><name pos:start="457:20" pos:end="457:35"><name pos:start="457:20" pos:end="457:22">enc</name><operator pos:start="457:23" pos:end="457:24">-&gt;</operator><name pos:start="457:25" pos:end="457:35">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="459:21" pos:end="459:51"><block_content pos:start="459:21" pos:end="459:51">

                    <expr_stmt pos:start="459:21" pos:end="459:51"><expr pos:start="459:21" pos:end="459:50"><name pos:start="459:21" pos:end="459:27"><name pos:start="459:21" pos:end="459:23">pkt</name><operator pos:start="459:24" pos:end="459:24">.</operator><name pos:start="459:25" pos:end="459:27">pts</name></name><operator pos:start="459:28" pos:end="459:28">=</operator> <name pos:start="459:30" pos:end="459:50"><name pos:start="459:30" pos:end="459:32">enc</name><operator pos:start="459:33" pos:end="459:34">-&gt;</operator><name pos:start="459:35" pos:end="459:45">coded_frame</name><operator pos:start="459:46" pos:end="459:47">-&gt;</operator><name pos:start="459:48" pos:end="459:50">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="461:17" pos:end="463:46"><if pos:start="461:17" pos:end="463:46">if<condition pos:start="461:19" pos:end="461:67">(<expr pos:start="461:20" pos:end="461:66"><name pos:start="461:20" pos:end="461:35"><name pos:start="461:20" pos:end="461:22">enc</name><operator pos:start="461:23" pos:end="461:24">-&gt;</operator><name pos:start="461:25" pos:end="461:35">coded_frame</name></name> <operator pos:start="461:37" pos:end="461:38">&amp;&amp;</operator> <name pos:start="461:40" pos:end="461:66"><name pos:start="461:40" pos:end="461:42">enc</name><operator pos:start="461:43" pos:end="461:44">-&gt;</operator><name pos:start="461:45" pos:end="461:55">coded_frame</name><operator pos:start="461:56" pos:end="461:57">-&gt;</operator><name pos:start="461:58" pos:end="461:66">key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="463:21" pos:end="463:46"><block_content pos:start="463:21" pos:end="463:46">

                    <expr_stmt pos:start="463:21" pos:end="463:46"><expr pos:start="463:21" pos:end="463:45"><name pos:start="463:21" pos:end="463:29"><name pos:start="463:21" pos:end="463:23">pkt</name><operator pos:start="463:24" pos:end="463:24">.</operator><name pos:start="463:25" pos:end="463:29">flags</name></name> <operator pos:start="463:31" pos:end="463:32">|=</operator> <name pos:start="463:34" pos:end="463:45">PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="465:17" pos:end="465:40"><expr pos:start="465:17" pos:end="465:39"><call pos:start="465:17" pos:end="465:39"><name pos:start="465:17" pos:end="465:30">av_write_frame</name><argument_list pos:start="465:31" pos:end="465:39">(<argument pos:start="465:32" pos:end="465:32"><expr pos:start="465:32" pos:end="465:32"><name pos:start="465:32" pos:end="465:32">s</name></expr></argument>, <argument pos:start="465:35" pos:end="465:38"><expr pos:start="465:35" pos:end="465:38"><operator pos:start="465:35" pos:end="465:35">&amp;</operator><name pos:start="465:36" pos:end="465:38">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="467:17" pos:end="467:34"><expr pos:start="467:17" pos:end="467:33"><operator pos:start="467:17" pos:end="467:17">*</operator><name pos:start="467:18" pos:end="467:27">frame_size</name> <operator pos:start="467:29" pos:end="467:29">=</operator> <name pos:start="467:31" pos:end="467:33">ret</name></expr>;</expr_stmt>

                <comment type="line" pos:start="469:17" pos:end="469:71">//fprintf(stderr,"\nFrame: %3d %3d size: %5d type: %d",</comment>

                <comment type="line" pos:start="471:17" pos:end="471:71">//        enc-&gt;frame_number-1, enc-&gt;real_pict_num, ret,</comment>

                <comment type="line" pos:start="473:17" pos:end="473:42">//        enc-&gt;pict_type);</comment>

                <comment type="block" pos:start="475:17" pos:end="475:45">/* if two pass, output log */</comment>

                <if_stmt pos:start="477:17" pos:end="481:17"><if pos:start="477:17" pos:end="481:17">if <condition pos:start="477:20" pos:end="477:51">(<expr pos:start="477:21" pos:end="477:50"><name pos:start="477:21" pos:end="477:32"><name pos:start="477:21" pos:end="477:23">ost</name><operator pos:start="477:24" pos:end="477:25">-&gt;</operator><name pos:start="477:26" pos:end="477:32">logfile</name></name> <operator pos:start="477:34" pos:end="477:35">&amp;&amp;</operator> <name pos:start="477:37" pos:end="477:50"><name pos:start="477:37" pos:end="477:39">enc</name><operator pos:start="477:40" pos:end="477:41">-&gt;</operator><name pos:start="477:42" pos:end="477:50">stats_out</name></name></expr>)</condition> <block pos:start="477:53" pos:end="481:17">{<block_content pos:start="479:21" pos:end="479:64">

                    <expr_stmt pos:start="479:21" pos:end="479:64"><expr pos:start="479:21" pos:end="479:63"><call pos:start="479:21" pos:end="479:63"><name pos:start="479:21" pos:end="479:27">fprintf</name><argument_list pos:start="479:28" pos:end="479:63">(<argument pos:start="479:29" pos:end="479:40"><expr pos:start="479:29" pos:end="479:40"><name pos:start="479:29" pos:end="479:40"><name pos:start="479:29" pos:end="479:31">ost</name><operator pos:start="479:32" pos:end="479:33">-&gt;</operator><name pos:start="479:34" pos:end="479:40">logfile</name></name></expr></argument>, <argument pos:start="479:43" pos:end="479:46"><expr pos:start="479:43" pos:end="479:46"><literal type="string" pos:start="479:43" pos:end="479:46">"%s"</literal></expr></argument>, <argument pos:start="479:49" pos:end="479:62"><expr pos:start="479:49" pos:end="479:62"><name pos:start="479:49" pos:end="479:62"><name pos:start="479:49" pos:end="479:51">enc</name><operator pos:start="479:52" pos:end="479:53">-&gt;</operator><name pos:start="479:54" pos:end="479:62">stats_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="487:9" pos:end="487:28"><expr pos:start="487:9" pos:end="487:27"><name pos:start="487:9" pos:end="487:25"><name pos:start="487:9" pos:end="487:11">ost</name><operator pos:start="487:12" pos:end="487:13">-&gt;</operator><name pos:start="487:14" pos:end="487:25">frame_number</name></name><operator pos:start="487:26" pos:end="487:27">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

 <label pos:start="491:2" pos:end="491:9"><name pos:start="491:2" pos:end="491:8">the_end</name>:</label>

    <expr_stmt pos:start="493:5" pos:end="493:17"><expr pos:start="493:5" pos:end="493:16"><call pos:start="493:5" pos:end="493:16"><name pos:start="493:5" pos:end="493:11">av_free</name><argument_list pos:start="493:12" pos:end="493:16">(<argument pos:start="493:13" pos:end="493:15"><expr pos:start="493:13" pos:end="493:15"><name pos:start="493:13" pos:end="493:15">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="495:5" pos:end="495:18"><expr pos:start="495:5" pos:end="495:17"><call pos:start="495:5" pos:end="495:17"><name pos:start="495:5" pos:end="495:11">av_free</name><argument_list pos:start="495:12" pos:end="495:17">(<argument pos:start="495:13" pos:end="495:16"><expr pos:start="495:13" pos:end="495:16"><name pos:start="495:13" pos:end="495:16">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
