<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10022.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">handle_notify</name><parameter_list pos:start="1:26" pos:end="1:43">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:39">EventNotifier</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">e</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:37">

    <decl_stmt pos:start="5:5" pos:end="7:58"><decl pos:start="5:5" pos:end="7:57"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">VirtIOBlockDataPlane</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:27">s</name> <init pos:start="5:29" pos:end="7:57">= <expr pos:start="5:31" pos:end="7:57"><call pos:start="5:31" pos:end="7:57"><name pos:start="5:31" pos:end="5:42">container_of</name><argument_list pos:start="5:43" pos:end="7:57">(<argument pos:start="5:44" pos:end="5:44"><expr pos:start="5:44" pos:end="5:44"><name pos:start="5:44" pos:end="5:44">e</name></expr></argument>, <argument pos:start="5:47" pos:end="5:66"><expr pos:start="5:47" pos:end="5:66"><name pos:start="5:47" pos:end="5:66">VirtIOBlockDataPlane</name></expr></argument>,

                                           <argument pos:start="7:44" pos:end="7:56"><expr pos:start="7:44" pos:end="7:56"><name pos:start="7:44" pos:end="7:56">host_notifier</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">VirtIOBlock</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">vblk</name> <init pos:start="9:23" pos:end="9:43">= <expr pos:start="9:25" pos:end="9:43"><call pos:start="9:25" pos:end="9:43"><name pos:start="9:25" pos:end="9:34">VIRTIO_BLK</name><argument_list pos:start="9:35" pos:end="9:43">(<argument pos:start="9:36" pos:end="9:42"><expr pos:start="9:36" pos:end="9:42"><name pos:start="9:36" pos:end="9:42"><name pos:start="9:36" pos:end="9:36">s</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:42">vdev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><call pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:33">event_notifier_test_and_clear</name><argument_list pos:start="13:34" pos:end="13:52">(<argument pos:start="13:35" pos:end="13:51"><expr pos:start="13:35" pos:end="13:51"><operator pos:start="13:35" pos:end="13:35">&amp;</operator><name pos:start="13:36" pos:end="13:51"><name pos:start="13:36" pos:end="13:36">s</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:51">host_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><call pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:15">blk_io_plug</name><argument_list pos:start="15:16" pos:end="15:34">(<argument pos:start="15:17" pos:end="15:33"><expr pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:23">conf</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:29">conf</name><operator pos:start="15:30" pos:end="15:30">.</operator><name pos:start="15:31" pos:end="15:33">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="91:5">for <control pos:start="17:9" pos:end="17:12">(<init pos:start="17:10" pos:end="17:10">;</init><condition pos:start="17:11" pos:end="17:11">;</condition><incr/>)</control> <block pos:start="17:14" pos:end="91:5">{<block_content pos:start="19:9" pos:end="89:9">

        <decl_stmt pos:start="19:9" pos:end="19:32"><decl pos:start="19:9" pos:end="19:31"><type pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:22">MultiReqBuffer</name></type> <name pos:start="19:24" pos:end="19:26">mrb</name> <init pos:start="19:28" pos:end="19:31">= <expr pos:start="19:30" pos:end="19:31"><block pos:start="19:30" pos:end="19:31">{}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:16"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:15">ret</name></decl>;</decl_stmt>



        <comment type="block" pos:start="25:9" pos:end="25:71">/* Disable guest-&gt;host notifies to avoid unnecessary vmexits */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:55"><expr pos:start="27:9" pos:end="27:54"><call pos:start="27:9" pos:end="27:54"><name pos:start="27:9" pos:end="27:34">vring_disable_notification</name><argument_list pos:start="27:35" pos:end="27:54">(<argument pos:start="27:36" pos:end="27:42"><expr pos:start="27:36" pos:end="27:42"><name pos:start="27:36" pos:end="27:42"><name pos:start="27:36" pos:end="27:36">s</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:42">vdev</name></name></expr></argument>, <argument pos:start="27:45" pos:end="27:53"><expr pos:start="27:45" pos:end="27:53"><operator pos:start="27:45" pos:end="27:45">&amp;</operator><name pos:start="27:46" pos:end="27:53"><name pos:start="27:46" pos:end="27:46">s</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:53">vring</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="31:9" pos:end="59:9">for <control pos:start="31:13" pos:end="31:16">(<init pos:start="31:14" pos:end="31:14">;</init><condition pos:start="31:15" pos:end="31:15">;</condition><incr/>)</control> <block pos:start="31:18" pos:end="59:9">{<block_content pos:start="33:13" pos:end="57:49">

            <decl_stmt pos:start="33:13" pos:end="33:65"><decl pos:start="33:13" pos:end="33:64"><type pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:26">VirtIOBlockReq</name> <modifier pos:start="33:28" pos:end="33:28">*</modifier></type><name pos:start="33:29" pos:end="33:31">req</name> <init pos:start="33:33" pos:end="33:64">= <expr pos:start="33:35" pos:end="33:64"><call pos:start="33:35" pos:end="33:64"><name pos:start="33:35" pos:end="33:58">virtio_blk_alloc_request</name><argument_list pos:start="33:59" pos:end="33:64">(<argument pos:start="33:60" pos:end="33:63"><expr pos:start="33:60" pos:end="33:63"><name pos:start="33:60" pos:end="33:63">vblk</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="37:13" pos:end="37:60"><expr pos:start="37:13" pos:end="37:59"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:59"><name pos:start="37:19" pos:end="37:27">vring_pop</name><argument_list pos:start="37:28" pos:end="37:59">(<argument pos:start="37:29" pos:end="37:35"><expr pos:start="37:29" pos:end="37:35"><name pos:start="37:29" pos:end="37:35"><name pos:start="37:29" pos:end="37:29">s</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:35">vdev</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:46"><expr pos:start="37:38" pos:end="37:46"><operator pos:start="37:38" pos:end="37:38">&amp;</operator><name pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:39">s</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:46">vring</name></name></expr></argument>, <argument pos:start="37:49" pos:end="37:58"><expr pos:start="37:49" pos:end="37:58"><operator pos:start="37:49" pos:end="37:49">&amp;</operator><name pos:start="37:50" pos:end="37:58"><name pos:start="37:50" pos:end="37:52">req</name><operator pos:start="37:53" pos:end="37:54">-&gt;</operator><name pos:start="37:55" pos:end="37:58">elem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="45:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:24">(<expr pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:19">ret</name> <operator pos:start="39:21" pos:end="39:21">&lt;</operator> <literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>)</condition> <block pos:start="39:26" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:22">

                <expr_stmt pos:start="41:17" pos:end="41:45"><expr pos:start="41:17" pos:end="41:44"><call pos:start="41:17" pos:end="41:44"><name pos:start="41:17" pos:end="41:39">virtio_blk_free_request</name><argument_list pos:start="41:40" pos:end="41:44">(<argument pos:start="41:41" pos:end="41:43"><expr pos:start="41:41" pos:end="41:43"><name pos:start="41:41" pos:end="41:43">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="43:17" pos:end="43:22">break;</break> <comment type="block" pos:start="43:24" pos:end="43:45">/* no more requests */</comment>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="49:13" pos:end="53:73"><expr pos:start="49:13" pos:end="53:72"><call pos:start="49:13" pos:end="53:72"><name pos:start="49:13" pos:end="49:55">trace_virtio_blk_data_plane_process_request</name><argument_list pos:start="49:56" pos:end="53:72">(<argument pos:start="49:57" pos:end="49:57"><expr pos:start="49:57" pos:end="49:57"><name pos:start="49:57" pos:end="49:57">s</name></expr></argument>, <argument pos:start="49:60" pos:end="49:76"><expr pos:start="49:60" pos:end="49:76"><name pos:start="49:60" pos:end="49:76"><name pos:start="49:60" pos:end="49:62">req</name><operator pos:start="49:63" pos:end="49:64">-&gt;</operator><name pos:start="49:65" pos:end="49:68">elem</name><operator pos:start="49:69" pos:end="49:69">.</operator><name pos:start="49:70" pos:end="49:76">out_num</name></name></expr></argument>,

                                                        <argument pos:start="51:57" pos:end="51:72"><expr pos:start="51:57" pos:end="51:72"><name pos:start="51:57" pos:end="51:72"><name pos:start="51:57" pos:end="51:59">req</name><operator pos:start="51:60" pos:end="51:61">-&gt;</operator><name pos:start="51:62" pos:end="51:65">elem</name><operator pos:start="51:66" pos:end="51:66">.</operator><name pos:start="51:67" pos:end="51:72">in_num</name></name></expr></argument>,

                                                        <argument pos:start="53:57" pos:end="53:71"><expr pos:start="53:57" pos:end="53:71"><name pos:start="53:57" pos:end="53:71"><name pos:start="53:57" pos:end="53:59">req</name><operator pos:start="53:60" pos:end="53:61">-&gt;</operator><name pos:start="53:62" pos:end="53:65">elem</name><operator pos:start="53:66" pos:end="53:66">.</operator><name pos:start="53:67" pos:end="53:71">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="57:13" pos:end="57:49"><expr pos:start="57:13" pos:end="57:48"><call pos:start="57:13" pos:end="57:48"><name pos:start="57:13" pos:end="57:37">virtio_blk_handle_request</name><argument_list pos:start="57:38" pos:end="57:48">(<argument pos:start="57:39" pos:end="57:41"><expr pos:start="57:39" pos:end="57:41"><name pos:start="57:39" pos:end="57:41">req</name></expr></argument>, <argument pos:start="57:44" pos:end="57:47"><expr pos:start="57:44" pos:end="57:47"><operator pos:start="57:44" pos:end="57:44">&amp;</operator><name pos:start="57:45" pos:end="57:47">mrb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="63:9" pos:end="67:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:25">(<expr pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:15">mrb</name><operator pos:start="63:16" pos:end="63:16">.</operator><name pos:start="63:17" pos:end="63:24">num_reqs</name></name></expr>)</condition> <block pos:start="63:27" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:64">

            <expr_stmt pos:start="65:13" pos:end="65:64"><expr pos:start="65:13" pos:end="65:63"><call pos:start="65:13" pos:end="65:63"><name pos:start="65:13" pos:end="65:38">virtio_blk_submit_multireq</name><argument_list pos:start="65:39" pos:end="65:63">(<argument pos:start="65:40" pos:end="65:56"><expr pos:start="65:40" pos:end="65:56"><name pos:start="65:40" pos:end="65:56"><name pos:start="65:40" pos:end="65:40">s</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:46">conf</name><operator pos:start="65:47" pos:end="65:48">-&gt;</operator><name pos:start="65:49" pos:end="65:52">conf</name><operator pos:start="65:53" pos:end="65:53">.</operator><name pos:start="65:54" pos:end="65:56">blk</name></name></expr></argument>, <argument pos:start="65:59" pos:end="65:62"><expr pos:start="65:59" pos:end="65:62"><operator pos:start="65:59" pos:end="65:59">&amp;</operator><name pos:start="65:60" pos:end="65:62">mrb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="71:9" pos:end="89:9"><if pos:start="71:9" pos:end="85:9">if <condition pos:start="71:12" pos:end="71:35">(<expr pos:start="71:13" pos:end="71:34"><call pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:18">likely</name><argument_list pos:start="71:19" pos:end="71:34">(<argument pos:start="71:20" pos:end="71:33"><expr pos:start="71:20" pos:end="71:33"><name pos:start="71:20" pos:end="71:22">ret</name> <operator pos:start="71:24" pos:end="71:25">==</operator> <operator pos:start="71:27" pos:end="71:27">-</operator><name pos:start="71:28" pos:end="71:33">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:37" pos:end="85:9">{<block_content pos:start="79:13" pos:end="83:13"> <comment type="block" pos:start="71:39" pos:end="71:57">/* vring emptied */</comment>

            <comment type="block" pos:start="73:13" pos:end="77:15">/* Re-enable guest-&gt;host notifies and stop processing the vring.

             * But if the guest has snuck in more descriptors, keep processing.

             */</comment>

            <if_stmt pos:start="79:13" pos:end="83:13"><if pos:start="79:13" pos:end="83:13">if <condition pos:start="79:16" pos:end="79:62">(<expr pos:start="79:17" pos:end="79:61"><call pos:start="79:17" pos:end="79:61"><name pos:start="79:17" pos:end="79:41">vring_enable_notification</name><argument_list pos:start="79:42" pos:end="79:61">(<argument pos:start="79:43" pos:end="79:49"><expr pos:start="79:43" pos:end="79:49"><name pos:start="79:43" pos:end="79:49"><name pos:start="79:43" pos:end="79:43">s</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:49">vdev</name></name></expr></argument>, <argument pos:start="79:52" pos:end="79:60"><expr pos:start="79:52" pos:end="79:60"><operator pos:start="79:52" pos:end="79:52">&amp;</operator><name pos:start="79:53" pos:end="79:60"><name pos:start="79:53" pos:end="79:53">s</name><operator pos:start="79:54" pos:end="79:55">-&gt;</operator><name pos:start="79:56" pos:end="79:60">vring</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:64" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:22">

                <break pos:start="81:17" pos:end="81:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="89:9">else <block pos:start="85:16" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:18"> <comment type="block" pos:start="85:18" pos:end="85:34">/* fatal error */</comment>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="93:5" pos:end="93:37"><expr pos:start="93:5" pos:end="93:36"><call pos:start="93:5" pos:end="93:36"><name pos:start="93:5" pos:end="93:17">blk_io_unplug</name><argument_list pos:start="93:18" pos:end="93:36">(<argument pos:start="93:19" pos:end="93:35"><expr pos:start="93:19" pos:end="93:35"><name pos:start="93:19" pos:end="93:35"><name pos:start="93:19" pos:end="93:19">s</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:25">conf</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:31">conf</name><operator pos:start="93:32" pos:end="93:32">.</operator><name pos:start="93:33" pos:end="93:35">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
