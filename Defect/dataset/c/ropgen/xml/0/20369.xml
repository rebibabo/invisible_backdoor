<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20369.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">decode_frame_mp3on4</name><parameter_list pos:start="1:31" pos:end="5:58">(<parameter pos:start="1:32" pos:end="1:53"><decl pos:start="1:32" pos:end="1:53"><type pos:start="1:32" pos:end="1:53"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type> <name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">data_size</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:43"><decl pos:start="5:25" pos:end="5:43"><type pos:start="5:25" pos:end="5:43"><specifier pos:start="5:25" pos:end="5:29">const</specifier> <name pos:start="5:31" pos:end="5:37">uint8_t</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type> <name pos:start="5:41" pos:end="5:43">buf</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:57"><decl pos:start="5:46" pos:end="5:57"><type pos:start="5:46" pos:end="5:57"><name pos:start="5:46" pos:end="5:48">int</name></type> <name pos:start="5:50" pos:end="5:57">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="139:1">{<block_content pos:start="9:5" pos:end="137:20">

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">MP3On4DecodeContext</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:26">s</name> <init pos:start="9:28" pos:end="9:45">= <expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">MPADecodeContext</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:23">m</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">len</name></decl>, <decl pos:start="13:14" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:21">out_size</name> <init pos:start="13:23" pos:end="13:25">= <expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:19">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">OUT_INT</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:24">out_samples</name> <init pos:start="17:26" pos:end="17:31">= <expr pos:start="17:28" pos:end="17:31"><name pos:start="17:28" pos:end="17:31">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:59"><decl pos:start="19:5" pos:end="19:58"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">OUT_INT</name></type> <name pos:start="19:13" pos:end="19:58"><name pos:start="19:13" pos:end="19:23">decoded_buf</name><index pos:start="19:24" pos:end="19:58">[<expr pos:start="19:25" pos:end="19:57"><name pos:start="19:25" pos:end="19:38">MPA_FRAME_SIZE</name> <operator pos:start="19:40" pos:end="19:40">*</operator> <name pos:start="19:42" pos:end="19:57">MPA_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">OUT_INT</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:19">outptr</name></decl>, <decl pos:start="21:22" pos:end="21:24"><type ref="prev" pos:start="21:5" pos:end="21:13"><modifier pos:start="21:22" pos:end="21:22">*</modifier></type><name pos:start="21:23" pos:end="21:24">bp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:14"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">fsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:20"><decl pos:start="25:5" pos:end="25:10"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:10">fr</name></decl>, <decl pos:start="25:13" pos:end="25:13"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:13" pos:end="25:13">i</name></decl>, <decl pos:start="25:16" pos:end="25:16"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:16" pos:end="25:16">j</name></decl>, <decl pos:start="25:19" pos:end="25:19"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:19" pos:end="25:19">n</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:7">len</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <name pos:start="29:11" pos:end="29:18">buf_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><operator pos:start="33:5" pos:end="33:5">*</operator><name pos:start="33:6" pos:end="33:14">data_size</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</expr_stmt>

    <comment type="line" pos:start="35:5" pos:end="35:31">// Discard too short frames</comment>

    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:31">(<expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:16">buf_size</name> <operator pos:start="37:18" pos:end="37:18">&lt;</operator> <name pos:start="37:20" pos:end="37:30">HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="43:5" pos:end="43:51">// If only one decoder interleave is not needed</comment>

    <expr_stmt pos:start="45:5" pos:end="45:56"><expr pos:start="45:5" pos:end="45:55"><name pos:start="45:5" pos:end="45:10">outptr</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <ternary pos:start="45:14" pos:end="45:55"><condition pos:start="45:14" pos:end="45:29"><expr pos:start="45:14" pos:end="45:27"><name pos:start="45:14" pos:end="45:22"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:22">frames</name></name> <operator pos:start="45:24" pos:end="45:25">==</operator> <literal type="number" pos:start="45:27" pos:end="45:27">1</literal></expr> ?</condition><then pos:start="45:31" pos:end="45:41"> <expr pos:start="45:31" pos:end="45:41"><name pos:start="45:31" pos:end="45:41">out_samples</name></expr> </then><else pos:start="45:43" pos:end="45:55">: <expr pos:start="45:45" pos:end="45:55"><name pos:start="45:45" pos:end="45:55">decoded_buf</name></expr></else></ternary></expr>;</expr_stmt>



    <for pos:start="49:5" pos:end="119:5">for <control pos:start="49:9" pos:end="49:38">(<init pos:start="49:10" pos:end="49:16"><expr pos:start="49:10" pos:end="49:15"><name pos:start="49:10" pos:end="49:11">fr</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>;</init> <condition pos:start="49:18" pos:end="49:32"><expr pos:start="49:18" pos:end="49:31"><name pos:start="49:18" pos:end="49:19">fr</name> <operator pos:start="49:21" pos:end="49:21">&lt;</operator> <name pos:start="49:23" pos:end="49:31"><name pos:start="49:23" pos:end="49:23">s</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:31">frames</name></name></expr>;</condition> <incr pos:start="49:34" pos:end="49:37"><expr pos:start="49:34" pos:end="49:37"><name pos:start="49:34" pos:end="49:35">fr</name><operator pos:start="49:36" pos:end="49:37">++</operator></expr></incr>)</control> <block pos:start="49:40" pos:end="119:5">{<block_content pos:start="51:9" pos:end="117:9">

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:13">fsize</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:23">AV_RB16</name><argument_list pos:start="51:24" pos:end="51:28">(<argument pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:27">buf</name></expr></argument>)</argument_list></call> <operator pos:start="51:30" pos:end="51:31">&gt;&gt;</operator> <literal type="number" pos:start="51:33" pos:end="51:33">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:61"><expr pos:start="53:9" pos:end="53:60"><name pos:start="53:9" pos:end="53:13">fsize</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:60"><name pos:start="53:17" pos:end="53:22">FFMIN3</name><argument_list pos:start="53:23" pos:end="53:60">(<argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:28">fsize</name></expr></argument>, <argument pos:start="53:31" pos:end="53:33"><expr pos:start="53:31" pos:end="53:33"><name pos:start="53:31" pos:end="53:33">len</name></expr></argument>, <argument pos:start="53:36" pos:end="53:59"><expr pos:start="53:36" pos:end="53:59"><name pos:start="53:36" pos:end="53:59">MPA_MAX_CODED_FRAME_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:29"><expr pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:9">m</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <name pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:24">mp3decctx</name><index pos:start="55:25" pos:end="55:28">[<expr pos:start="55:26" pos:end="55:27"><name pos:start="55:26" pos:end="55:27">fr</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><call pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:14">assert</name> <argument_list pos:start="57:16" pos:end="57:26">(<argument pos:start="57:17" pos:end="57:25"><expr pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:17">m</name> <operator pos:start="57:19" pos:end="57:20">!=</operator> <name pos:start="57:22" pos:end="57:25">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:59"><expr pos:start="61:9" pos:end="61:58"><name pos:start="61:9" pos:end="61:14">header</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <operator pos:start="61:18" pos:end="61:18">(</operator><call pos:start="61:19" pos:end="61:30"><name pos:start="61:19" pos:end="61:25">AV_RB32</name><argument_list pos:start="61:26" pos:end="61:30">(<argument pos:start="61:27" pos:end="61:29"><expr pos:start="61:27" pos:end="61:29"><name pos:start="61:27" pos:end="61:29">buf</name></expr></argument>)</argument_list></call> <operator pos:start="61:32" pos:end="61:32">&amp;</operator> <literal type="number" pos:start="61:34" pos:end="61:43">0x000fffff</literal><operator pos:start="61:44" pos:end="61:44">)</operator> <operator pos:start="61:46" pos:end="61:46">|</operator> <name pos:start="61:48" pos:end="61:58"><name pos:start="61:48" pos:end="61:48">s</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:58">syncword</name></name></expr>;</expr_stmt> <comment type="line" pos:start="61:61" pos:end="61:75">// patch header</comment>



        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:44">(<expr pos:start="65:13" pos:end="65:43"><call pos:start="65:13" pos:end="65:39"><name pos:start="65:13" pos:end="65:31">ff_mpa_check_header</name><argument_list pos:start="65:32" pos:end="65:39">(<argument pos:start="65:33" pos:end="65:38"><expr pos:start="65:33" pos:end="65:38"><name pos:start="65:33" pos:end="65:38">header</name></expr></argument>)</argument_list></call> <operator pos:start="65:41" pos:end="65:41">&lt;</operator> <literal type="number" pos:start="65:43" pos:end="65:43">0</literal></expr>)</condition> <block pos:start="65:46" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:28"> <comment type="line" pos:start="65:48" pos:end="65:75">// Bad header, discard block</comment>

            <expr_stmt pos:start="67:13" pos:end="67:27"><expr pos:start="67:13" pos:end="67:26"><operator pos:start="67:13" pos:end="67:13">*</operator><name pos:start="67:14" pos:end="67:22">data_size</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:28">return <expr pos:start="69:20" pos:end="69:27"><name pos:start="69:20" pos:end="69:27">buf_size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:46"><expr pos:start="75:9" pos:end="75:45"><call pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:34">ff_mpegaudio_decode_header</name><argument_list pos:start="75:35" pos:end="75:45">(<argument pos:start="75:36" pos:end="75:36"><expr pos:start="75:36" pos:end="75:36"><name pos:start="75:36" pos:end="75:36">m</name></expr></argument>, <argument pos:start="75:39" pos:end="75:44"><expr pos:start="75:39" pos:end="75:44"><name pos:start="75:39" pos:end="75:44">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:59"><expr pos:start="77:9" pos:end="77:58"><name pos:start="77:9" pos:end="77:16">out_size</name> <operator pos:start="77:18" pos:end="77:19">+=</operator> <call pos:start="77:21" pos:end="77:58"><name pos:start="77:21" pos:end="77:35">mp_decode_frame</name><argument_list pos:start="77:36" pos:end="77:58">(<argument pos:start="77:37" pos:end="77:37"><expr pos:start="77:37" pos:end="77:37"><name pos:start="77:37" pos:end="77:37">m</name></expr></argument>, <argument pos:start="77:40" pos:end="77:45"><expr pos:start="77:40" pos:end="77:45"><name pos:start="77:40" pos:end="77:45">outptr</name></expr></argument>, <argument pos:start="77:48" pos:end="77:50"><expr pos:start="77:48" pos:end="77:50"><name pos:start="77:48" pos:end="77:50">buf</name></expr></argument>, <argument pos:start="77:53" pos:end="77:57"><expr pos:start="77:53" pos:end="77:57"><name pos:start="77:53" pos:end="77:57">fsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:21"><expr pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:11">buf</name> <operator pos:start="79:13" pos:end="79:14">+=</operator> <name pos:start="79:16" pos:end="79:20">fsize</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:21"><expr pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:11">len</name> <operator pos:start="81:13" pos:end="81:14">-=</operator> <name pos:start="81:16" pos:end="81:20">fsize</name></expr>;</expr_stmt>



        <if_stmt pos:start="85:9" pos:end="117:9"><if pos:start="85:9" pos:end="117:9">if<condition pos:start="85:11" pos:end="85:25">(<expr pos:start="85:12" pos:end="85:24"><name pos:start="85:12" pos:end="85:20"><name pos:start="85:12" pos:end="85:12">s</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:20">frames</name></name> <operator pos:start="85:22" pos:end="85:22">&gt;</operator> <literal type="number" pos:start="85:24" pos:end="85:24">1</literal></expr>)</condition> <block pos:start="85:27" pos:end="117:9">{<block_content pos:start="87:13" pos:end="115:13">

            <expr_stmt pos:start="87:13" pos:end="87:52"><expr pos:start="87:13" pos:end="87:51"><name pos:start="87:13" pos:end="87:13">n</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <name pos:start="87:17" pos:end="87:36"><name pos:start="87:17" pos:end="87:17">m</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:24">avctx</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:36">frame_size</name></name><operator pos:start="87:37" pos:end="87:37">*</operator><name pos:start="87:38" pos:end="87:51"><name pos:start="87:38" pos:end="87:38">m</name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:51">nb_channels</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="89:13" pos:end="89:40">/* interleave output data */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:43"><expr pos:start="91:13" pos:end="91:42"><name pos:start="91:13" pos:end="91:14">bp</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:28">out_samples</name> <operator pos:start="91:30" pos:end="91:30">+</operator> <name pos:start="91:32" pos:end="91:42"><name pos:start="91:32" pos:end="91:32">s</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:38">coff</name><index pos:start="91:39" pos:end="91:42">[<expr pos:start="91:40" pos:end="91:41"><name pos:start="91:40" pos:end="91:41">fr</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="115:13"><if pos:start="93:13" pos:end="103:13">if<condition pos:start="93:15" pos:end="93:35">(<expr pos:start="93:16" pos:end="93:34"><name pos:start="93:16" pos:end="93:29"><name pos:start="93:16" pos:end="93:16">m</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:29">nb_channels</name></name> <operator pos:start="93:31" pos:end="93:32">==</operator> <literal type="number" pos:start="93:34" pos:end="93:34">1</literal></expr>)</condition> <block pos:start="93:37" pos:end="103:13">{<block_content pos:start="95:17" pos:end="101:17">

                <for pos:start="95:17" pos:end="101:17">for<control pos:start="95:20" pos:end="95:38">(<init pos:start="95:21" pos:end="95:26"><expr pos:start="95:21" pos:end="95:25"><name pos:start="95:21" pos:end="95:21">j</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <literal type="number" pos:start="95:25" pos:end="95:25">0</literal></expr>;</init> <condition pos:start="95:28" pos:end="95:33"><expr pos:start="95:28" pos:end="95:32"><name pos:start="95:28" pos:end="95:28">j</name> <operator pos:start="95:30" pos:end="95:30">&lt;</operator> <name pos:start="95:32" pos:end="95:32">n</name></expr>;</condition> <incr pos:start="95:35" pos:end="95:37"><expr pos:start="95:35" pos:end="95:37"><name pos:start="95:35" pos:end="95:35">j</name><operator pos:start="95:36" pos:end="95:37">++</operator></expr></incr>)</control> <block pos:start="95:40" pos:end="101:17">{<block_content pos:start="97:21" pos:end="99:42">

                    <expr_stmt pos:start="97:21" pos:end="97:41"><expr pos:start="97:21" pos:end="97:40"><operator pos:start="97:21" pos:end="97:21">*</operator><name pos:start="97:22" pos:end="97:23">bp</name> <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:40"><name pos:start="97:27" pos:end="97:37">decoded_buf</name><index pos:start="97:38" pos:end="97:40">[<expr pos:start="97:39" pos:end="97:39"><name pos:start="97:39" pos:end="97:39">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:42"><expr pos:start="99:21" pos:end="99:41"><name pos:start="99:21" pos:end="99:22">bp</name> <operator pos:start="99:24" pos:end="99:25">+=</operator> <name pos:start="99:27" pos:end="99:41"><name pos:start="99:27" pos:end="99:31">avctx</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:41">channels</name></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="103:15" pos:end="115:13">else <block pos:start="103:20" pos:end="115:13">{<block_content pos:start="105:17" pos:end="113:17">

                <for pos:start="105:17" pos:end="113:17">for<control pos:start="105:20" pos:end="105:38">(<init pos:start="105:21" pos:end="105:26"><expr pos:start="105:21" pos:end="105:25"><name pos:start="105:21" pos:end="105:21">j</name> <operator pos:start="105:23" pos:end="105:23">=</operator> <literal type="number" pos:start="105:25" pos:end="105:25">0</literal></expr>;</init> <condition pos:start="105:28" pos:end="105:33"><expr pos:start="105:28" pos:end="105:32"><name pos:start="105:28" pos:end="105:28">j</name> <operator pos:start="105:30" pos:end="105:30">&lt;</operator> <name pos:start="105:32" pos:end="105:32">n</name></expr>;</condition> <incr pos:start="105:35" pos:end="105:37"><expr pos:start="105:35" pos:end="105:37"><name pos:start="105:35" pos:end="105:35">j</name><operator pos:start="105:36" pos:end="105:37">++</operator></expr></incr>)</control> <block pos:start="105:40" pos:end="113:17">{<block_content pos:start="107:21" pos:end="111:42">

                    <expr_stmt pos:start="107:21" pos:end="107:45"><expr pos:start="107:21" pos:end="107:44"><name pos:start="107:21" pos:end="107:25"><name pos:start="107:21" pos:end="107:22">bp</name><index pos:start="107:23" pos:end="107:25">[<expr pos:start="107:24" pos:end="107:24"><literal type="number" pos:start="107:24" pos:end="107:24">0</literal></expr>]</index></name> <operator pos:start="107:27" pos:end="107:27">=</operator> <name pos:start="107:29" pos:end="107:44"><name pos:start="107:29" pos:end="107:39">decoded_buf</name><index pos:start="107:40" pos:end="107:44">[<expr pos:start="107:41" pos:end="107:43"><name pos:start="107:41" pos:end="107:41">j</name><operator pos:start="107:42" pos:end="107:43">++</operator></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:43"><expr pos:start="109:21" pos:end="109:42"><name pos:start="109:21" pos:end="109:25"><name pos:start="109:21" pos:end="109:22">bp</name><index pos:start="109:23" pos:end="109:25">[<expr pos:start="109:24" pos:end="109:24"><literal type="number" pos:start="109:24" pos:end="109:24">1</literal></expr>]</index></name> <operator pos:start="109:27" pos:end="109:27">=</operator> <name pos:start="109:29" pos:end="109:42"><name pos:start="109:29" pos:end="109:39">decoded_buf</name><index pos:start="109:40" pos:end="109:42">[<expr pos:start="109:41" pos:end="109:41"><name pos:start="109:41" pos:end="109:41">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:42"><expr pos:start="111:21" pos:end="111:41"><name pos:start="111:21" pos:end="111:22">bp</name> <operator pos:start="111:24" pos:end="111:25">+=</operator> <name pos:start="111:27" pos:end="111:41"><name pos:start="111:27" pos:end="111:31">avctx</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:41">channels</name></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="123:5" pos:end="123:27">/* update codec info */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:54"><expr pos:start="125:5" pos:end="125:53"><name pos:start="125:5" pos:end="125:22"><name pos:start="125:5" pos:end="125:9">avctx</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:22">sample_rate</name></name> <operator pos:start="125:24" pos:end="125:24">=</operator> <name pos:start="125:26" pos:end="125:40"><name pos:start="125:26" pos:end="125:26">s</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:37">mp3decctx</name><index pos:start="125:38" pos:end="125:40">[<expr pos:start="125:39" pos:end="125:39"><literal type="number" pos:start="125:39" pos:end="125:39">0</literal></expr>]</index></name><operator pos:start="125:41" pos:end="125:42">-&gt;</operator><name pos:start="125:43" pos:end="125:53">sample_rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:24"><expr pos:start="127:5" pos:end="127:23"><name pos:start="127:5" pos:end="127:19"><name pos:start="127:5" pos:end="127:9">avctx</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:19">bit_rate</name></name> <operator pos:start="127:21" pos:end="127:21">=</operator> <literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr>;</expr_stmt>

    <for pos:start="129:5" pos:end="131:53">for <control pos:start="129:9" pos:end="129:35">(<init pos:start="129:10" pos:end="129:15"><expr pos:start="129:10" pos:end="129:14"><name pos:start="129:10" pos:end="129:10">i</name> <operator pos:start="129:12" pos:end="129:12">=</operator> <literal type="number" pos:start="129:14" pos:end="129:14">0</literal></expr>;</init> <condition pos:start="129:17" pos:end="129:30"><expr pos:start="129:17" pos:end="129:29"><name pos:start="129:17" pos:end="129:17">i</name> <operator pos:start="129:19" pos:end="129:19">&lt;</operator> <name pos:start="129:21" pos:end="129:29"><name pos:start="129:21" pos:end="129:21">s</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:29">frames</name></name></expr>;</condition> <incr pos:start="129:32" pos:end="129:34"><expr pos:start="129:32" pos:end="129:34"><name pos:start="129:32" pos:end="129:32">i</name><operator pos:start="129:33" pos:end="129:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="131:9" pos:end="131:53"><block_content pos:start="131:9" pos:end="131:53">

        <expr_stmt pos:start="131:9" pos:end="131:53"><expr pos:start="131:9" pos:end="131:52"><name pos:start="131:9" pos:end="131:23"><name pos:start="131:9" pos:end="131:13">avctx</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:23">bit_rate</name></name> <operator pos:start="131:25" pos:end="131:26">+=</operator> <name pos:start="131:28" pos:end="131:42"><name pos:start="131:28" pos:end="131:28">s</name><operator pos:start="131:29" pos:end="131:30">-&gt;</operator><name pos:start="131:31" pos:end="131:39">mp3decctx</name><index pos:start="131:40" pos:end="131:42">[<expr pos:start="131:41" pos:end="131:41"><name pos:start="131:41" pos:end="131:41">i</name></expr>]</index></name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:52">bit_rate</name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="135:5" pos:end="135:26"><expr pos:start="135:5" pos:end="135:25"><operator pos:start="135:5" pos:end="135:5">*</operator><name pos:start="135:6" pos:end="135:14">data_size</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <name pos:start="135:18" pos:end="135:25">out_size</name></expr>;</expr_stmt>

    <return pos:start="137:5" pos:end="137:20">return <expr pos:start="137:12" pos:end="137:19"><name pos:start="137:12" pos:end="137:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
