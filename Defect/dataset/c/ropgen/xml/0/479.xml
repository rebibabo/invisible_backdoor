<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/479.c" pos:tabs="8"><function pos:start="1:1" pos:end="717:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">transcode_init</name><parameter_list pos:start="1:26" pos:end="7:45">(<parameter pos:start="1:27" pos:end="1:50"><decl pos:start="1:27" pos:end="1:50"><type pos:start="1:27" pos:end="1:50"><name pos:start="1:27" pos:end="1:36">OutputFile</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:50">output_files</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:45"><decl pos:start="3:27" pos:end="3:45"><type pos:start="3:27" pos:end="3:45"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:45">nb_output_files</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:48"><decl pos:start="5:27" pos:end="5:48"><type pos:start="5:27" pos:end="5:48"><name pos:start="5:27" pos:end="5:35">InputFile</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:48">input_files</name></decl></parameter>,

                          <parameter pos:start="7:27" pos:end="7:44"><decl pos:start="7:27" pos:end="7:44"><type pos:start="7:27" pos:end="7:44"><name pos:start="7:27" pos:end="7:29">int</name></type> <name pos:start="7:31" pos:end="7:44">nb_input_files</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="717:1">{<block_content pos:start="11:5" pos:end="715:13">

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>, <decl pos:start="11:18" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:18">i</name></decl>, <decl pos:start="11:21" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:21">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">AVFormatContext</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:23">os</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:25">codec</name></decl>, <decl pos:start="15:28" pos:end="15:34"><type ref="prev" pos:start="15:5" pos:end="15:20"><modifier pos:start="15:28" pos:end="15:28">*</modifier></type><name pos:start="15:29" pos:end="15:34">icodec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">OutputStream</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:15">InputStream</name> <modifier pos:start="19:17" pos:end="19:17">*</modifier></type><name pos:start="19:18" pos:end="19:20">ist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">char</name></type> <name pos:start="21:10" pos:end="21:20"><name pos:start="21:10" pos:end="21:14">error</name><index pos:start="21:15" pos:end="21:20">[<expr pos:start="21:16" pos:end="21:19"><literal type="number" pos:start="21:16" pos:end="21:19">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:16">want_sdp</name> <init pos:start="23:18" pos:end="23:20">= <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">1</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:34">/* init framerate emulation */</comment>

    <for pos:start="29:5" pos:end="39:5">for <control pos:start="29:9" pos:end="29:40">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:35"><expr pos:start="29:17" pos:end="29:34"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:34">nb_input_files</name></expr>;</condition> <incr pos:start="29:37" pos:end="29:39"><expr pos:start="29:37" pos:end="29:39"><name pos:start="29:37" pos:end="29:37">i</name><operator pos:start="29:38" pos:end="29:39">++</operator></expr></incr>)</control> <block pos:start="29:42" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:73">

        <decl_stmt pos:start="31:9" pos:end="31:43"><decl pos:start="31:9" pos:end="31:42"><type pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:17">InputFile</name> <modifier pos:start="31:19" pos:end="31:19">*</modifier></type><name pos:start="31:20" pos:end="31:24">ifile</name> <init pos:start="31:26" pos:end="31:42">= <expr pos:start="31:28" pos:end="31:42"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:42"><name pos:start="31:29" pos:end="31:39">input_files</name><index pos:start="31:40" pos:end="31:42">[<expr pos:start="31:41" pos:end="31:41"><name pos:start="31:41" pos:end="31:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="33:9" pos:end="37:73"><if pos:start="33:9" pos:end="37:73">if <condition pos:start="33:12" pos:end="33:28">(<expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:17">ifile</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:27">rate_emu</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="37:73"><block_content pos:start="35:13" pos:end="37:73">

            <for pos:start="35:13" pos:end="37:73">for <control pos:start="35:17" pos:end="35:51">(<init pos:start="35:18" pos:end="35:23"><expr pos:start="35:18" pos:end="35:22"><name pos:start="35:18" pos:end="35:18">j</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr>;</init> <condition pos:start="35:25" pos:end="35:46"><expr pos:start="35:25" pos:end="35:45"><name pos:start="35:25" pos:end="35:25">j</name> <operator pos:start="35:27" pos:end="35:27">&lt;</operator> <name pos:start="35:29" pos:end="35:45"><name pos:start="35:29" pos:end="35:33">ifile</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:45">nb_streams</name></name></expr>;</condition> <incr pos:start="35:48" pos:end="35:50"><expr pos:start="35:48" pos:end="35:50"><name pos:start="35:48" pos:end="35:48">j</name><operator pos:start="35:49" pos:end="35:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:17" pos:end="37:73"><block_content pos:start="37:17" pos:end="37:73">

                <expr_stmt pos:start="37:17" pos:end="37:73"><expr pos:start="37:17" pos:end="37:72"><name pos:start="37:17" pos:end="37:51"><name pos:start="37:17" pos:end="37:29">input_streams</name><index pos:start="37:30" pos:end="37:51">[<expr pos:start="37:31" pos:end="37:50"><name pos:start="37:31" pos:end="37:31">j</name> <operator pos:start="37:33" pos:end="37:33">+</operator> <name pos:start="37:35" pos:end="37:50"><name pos:start="37:35" pos:end="37:39">ifile</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:50">ist_index</name></name></expr>]</index></name><operator pos:start="37:52" pos:end="37:52">.</operator><name pos:start="37:53" pos:end="37:57">start</name> <operator pos:start="37:59" pos:end="37:59">=</operator> <call pos:start="37:61" pos:end="37:72"><name pos:start="37:61" pos:end="37:70">av_gettime</name><argument_list pos:start="37:71" pos:end="37:72">()</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="43:5" pos:end="43:28">/* output stream init */</comment>

    <for pos:start="45:5" pos:end="59:5">for<control pos:start="45:8" pos:end="45:34">(<init pos:start="45:9" pos:end="45:12"><expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:9">i</name><operator pos:start="45:10" pos:end="45:10">=</operator><literal type="number" pos:start="45:11" pos:end="45:11">0</literal></expr>;</init><condition pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:13">i</name><operator pos:start="45:14" pos:end="45:14">&lt;</operator><name pos:start="45:15" pos:end="45:29">nb_output_files</name></expr>;</condition><incr pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:31">i</name><operator pos:start="45:32" pos:end="45:33">++</operator></expr></incr>)</control> <block pos:start="45:36" pos:end="59:5">{<block_content pos:start="47:9" pos:end="57:9">

        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:10">os</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:28"><name pos:start="47:14" pos:end="47:25">output_files</name><index pos:start="47:26" pos:end="47:28">[<expr pos:start="47:27" pos:end="47:27"><name pos:start="47:27" pos:end="47:27">i</name></expr>]</index></name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:32">ctx</name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:71">(<expr pos:start="49:13" pos:end="49:70"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:27"><name pos:start="49:14" pos:end="49:15">os</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:27">nb_streams</name></name> <operator pos:start="49:29" pos:end="49:30">&amp;&amp;</operator> <operator pos:start="49:32" pos:end="49:32">!</operator><operator pos:start="49:33" pos:end="49:33">(</operator><name pos:start="49:34" pos:end="49:51"><name pos:start="49:34" pos:end="49:35">os</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:44">oformat</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:51">flags</name></name> <operator pos:start="49:53" pos:end="49:53">&amp;</operator> <name pos:start="49:55" pos:end="49:69">AVFMT_NOSTREAMS</name><operator pos:start="49:70" pos:end="49:70">)</operator></expr>)</condition> <block pos:start="49:73" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:35">

            <expr_stmt pos:start="51:13" pos:end="51:51"><expr pos:start="51:13" pos:end="51:50"><call pos:start="51:13" pos:end="51:50"><name pos:start="51:13" pos:end="51:26">av_dump_format</name><argument_list pos:start="51:27" pos:end="51:50">(<argument pos:start="51:28" pos:end="51:29"><expr pos:start="51:28" pos:end="51:29"><name pos:start="51:28" pos:end="51:29">os</name></expr></argument>, <argument pos:start="51:32" pos:end="51:32"><expr pos:start="51:32" pos:end="51:32"><name pos:start="51:32" pos:end="51:32">i</name></expr></argument>, <argument pos:start="51:35" pos:end="51:46"><expr pos:start="51:35" pos:end="51:46"><name pos:start="51:35" pos:end="51:46"><name pos:start="51:35" pos:end="51:36">os</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:46">filename</name></name></expr></argument>, <argument pos:start="51:49" pos:end="51:49"><expr pos:start="51:49" pos:end="51:49"><literal type="number" pos:start="51:49" pos:end="51:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:80"><expr pos:start="53:13" pos:end="53:79"><call pos:start="53:13" pos:end="53:79"><name pos:start="53:13" pos:end="53:19">fprintf</name><argument_list pos:start="53:20" pos:end="53:79">(<argument pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:26">stderr</name></expr></argument>, <argument pos:start="53:29" pos:end="53:75"><expr pos:start="53:29" pos:end="53:75"><literal type="string" pos:start="53:29" pos:end="53:75">"Output file #%d does not contain any stream\n"</literal></expr></argument>, <argument pos:start="53:78" pos:end="53:78"><expr pos:start="53:78" pos:end="53:78"><name pos:start="53:78" pos:end="53:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:35">return <expr pos:start="55:20" pos:end="55:34"><call pos:start="55:20" pos:end="55:34"><name pos:start="55:20" pos:end="55:26">AVERROR</name><argument_list pos:start="55:27" pos:end="55:34">(<argument pos:start="55:28" pos:end="55:33"><expr pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="63:5" pos:end="63:74">/* for each output stream, we compute the right encoding parameters */</comment>

    <for pos:start="65:5" pos:end="505:5">for <control pos:start="65:9" pos:end="65:43">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:38"><expr pos:start="65:17" pos:end="65:37"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <name pos:start="65:21" pos:end="65:37">nb_output_streams</name></expr>;</condition> <incr pos:start="65:40" pos:end="65:42"><expr pos:start="65:40" pos:end="65:42"><name pos:start="65:40" pos:end="65:40">i</name><operator pos:start="65:41" pos:end="65:42">++</operator></expr></incr>)</control> <block pos:start="65:45" pos:end="505:5">{<block_content pos:start="67:9" pos:end="503:9">

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:11">ost</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <operator pos:start="67:15" pos:end="67:15">&amp;</operator><name pos:start="67:16" pos:end="67:32"><name pos:start="67:16" pos:end="67:29">output_streams</name><index pos:start="67:30" pos:end="67:32">[<expr pos:start="67:31" pos:end="67:31"><name pos:start="67:31" pos:end="67:31">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:47"><expr pos:start="69:9" pos:end="69:46"><name pos:start="69:9" pos:end="69:10">os</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <name pos:start="69:14" pos:end="69:42"><name pos:start="69:14" pos:end="69:25">output_files</name><index pos:start="69:26" pos:end="69:42">[<expr pos:start="69:27" pos:end="69:41"><name pos:start="69:27" pos:end="69:41"><name pos:start="69:27" pos:end="69:29">ost</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:41">file_index</name></name></expr>]</index></name><operator pos:start="69:43" pos:end="69:43">.</operator><name pos:start="69:44" pos:end="69:46">ctx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:48"><expr pos:start="71:9" pos:end="71:47"><name pos:start="71:9" pos:end="71:11">ist</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <operator pos:start="71:15" pos:end="71:15">&amp;</operator><name pos:start="71:16" pos:end="71:47"><name pos:start="71:16" pos:end="71:28">input_streams</name><index pos:start="71:29" pos:end="71:47">[<expr pos:start="71:30" pos:end="71:46"><name pos:start="71:30" pos:end="71:46"><name pos:start="71:30" pos:end="71:32">ost</name><operator pos:start="71:33" pos:end="71:34">-&gt;</operator><name pos:start="71:35" pos:end="71:46">source_index</name></name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:13">codec</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <name pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:19">ost</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:23">st</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:30">codec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:14">icodec</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <name pos:start="77:18" pos:end="77:31"><name pos:start="77:18" pos:end="77:20">ist</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:24">st</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:31">codec</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:52"><expr pos:start="81:9" pos:end="81:51"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:11">ost</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:15">st</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:28">disposition</name></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <name pos:start="81:32" pos:end="81:51"><name pos:start="81:32" pos:end="81:34">ist</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:38">st</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:51">disposition</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:64"><expr pos:start="83:9" pos:end="83:63"><name pos:start="83:9" pos:end="83:34"><name pos:start="83:9" pos:end="83:13">codec</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:34">bits_per_raw_sample</name></name><operator pos:start="83:35" pos:end="83:35">=</operator> <name pos:start="83:37" pos:end="83:63"><name pos:start="83:37" pos:end="83:42">icodec</name><operator pos:start="83:43" pos:end="83:44">-&gt;</operator><name pos:start="83:45" pos:end="83:63">bits_per_raw_sample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:71"><expr pos:start="85:9" pos:end="85:70"><name pos:start="85:9" pos:end="85:37"><name pos:start="85:9" pos:end="85:13">codec</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:37">chroma_sample_location</name></name> <operator pos:start="85:39" pos:end="85:39">=</operator> <name pos:start="85:41" pos:end="85:70"><name pos:start="85:41" pos:end="85:46">icodec</name><operator pos:start="85:47" pos:end="85:48">-&gt;</operator><name pos:start="85:49" pos:end="85:70">chroma_sample_location</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="495:9"><if pos:start="89:9" pos:end="235:9">if <condition pos:start="89:12" pos:end="89:33">(<expr pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:15">ost</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:19">st</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:32">stream_copy</name></name></expr>)</condition> <block pos:start="89:35" pos:end="235:9">{<block_content pos:start="91:13" pos:end="233:13">

            <decl_stmt pos:start="91:13" pos:end="91:98"><decl pos:start="91:13" pos:end="91:97"><type pos:start="91:13" pos:end="91:20"><name pos:start="91:13" pos:end="91:20">uint64_t</name></type> <name pos:start="91:22" pos:end="91:31">extra_size</name> <init pos:start="91:33" pos:end="91:97">= <expr pos:start="91:35" pos:end="91:97"><operator pos:start="91:35" pos:end="91:35">(</operator><name pos:start="91:36" pos:end="91:43">uint64_t</name><operator pos:start="91:44" pos:end="91:44">)</operator><name pos:start="91:45" pos:end="91:66"><name pos:start="91:45" pos:end="91:50">icodec</name><operator pos:start="91:51" pos:end="91:52">-&gt;</operator><name pos:start="91:53" pos:end="91:66">extradata_size</name></name> <operator pos:start="91:68" pos:end="91:68">+</operator> <name pos:start="91:70" pos:end="91:97">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="95:13" pos:end="99:13"><if pos:start="95:13" pos:end="99:13">if <condition pos:start="95:16" pos:end="95:37">(<expr pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:26">extra_size</name> <operator pos:start="95:28" pos:end="95:28">&gt;</operator> <name pos:start="95:30" pos:end="95:36">INT_MAX</name></expr>)</condition> <block pos:start="95:39" pos:end="99:13">{<block_content pos:start="97:17" pos:end="97:39">

                <return pos:start="97:17" pos:end="97:39">return <expr pos:start="97:24" pos:end="97:38"><call pos:start="97:24" pos:end="97:38"><name pos:start="97:24" pos:end="97:30">AVERROR</name><argument_list pos:start="97:31" pos:end="97:38">(<argument pos:start="97:32" pos:end="97:37"><expr pos:start="97:32" pos:end="97:37"><name pos:start="97:32" pos:end="97:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="103:13" pos:end="103:73">/* if stream_copy is selected, no need to decode or encode */</comment>

            <expr_stmt pos:start="105:13" pos:end="105:47"><expr pos:start="105:13" pos:end="105:46"><name pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:17">codec</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:27">codec_id</name></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <name pos:start="105:31" pos:end="105:46"><name pos:start="105:31" pos:end="105:36">icodec</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:46">codec_id</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:51"><expr pos:start="107:13" pos:end="107:50"><name pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:17">codec</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:29">codec_type</name></name> <operator pos:start="107:31" pos:end="107:31">=</operator> <name pos:start="107:33" pos:end="107:50"><name pos:start="107:33" pos:end="107:38">icodec</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:50">codec_type</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="111:13" pos:end="121:13"><if pos:start="111:13" pos:end="121:13">if<condition pos:start="111:15" pos:end="111:33">(<expr pos:start="111:16" pos:end="111:32"><operator pos:start="111:16" pos:end="111:16">!</operator><name pos:start="111:17" pos:end="111:32"><name pos:start="111:17" pos:end="111:21">codec</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:32">codec_tag</name></name></expr>)</condition><block pos:start="111:34" pos:end="121:13">{<block_content pos:start="113:17" pos:end="119:57">

                <if_stmt pos:start="113:17" pos:end="119:57"><if pos:start="113:17" pos:end="119:57">if<condition pos:start="113:19" pos:end="117:86">(   <expr pos:start="113:23" pos:end="117:85"><operator pos:start="113:23" pos:end="113:23">!</operator><name pos:start="113:24" pos:end="113:45"><name pos:start="113:24" pos:end="113:25">os</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:34">oformat</name><operator pos:start="113:35" pos:end="113:36">-&gt;</operator><name pos:start="113:37" pos:end="113:45">codec_tag</name></name>

                   <operator pos:start="115:20" pos:end="115:21">||</operator> <call pos:start="115:23" pos:end="115:81"><name pos:start="115:23" pos:end="115:37">av_codec_get_id</name> <argument_list pos:start="115:39" pos:end="115:81">(<argument pos:start="115:40" pos:end="115:61"><expr pos:start="115:40" pos:end="115:61"><name pos:start="115:40" pos:end="115:61"><name pos:start="115:40" pos:end="115:41">os</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:50">oformat</name><operator pos:start="115:51" pos:end="115:52">-&gt;</operator><name pos:start="115:53" pos:end="115:61">codec_tag</name></name></expr></argument>, <argument pos:start="115:64" pos:end="115:80"><expr pos:start="115:64" pos:end="115:80"><name pos:start="115:64" pos:end="115:80"><name pos:start="115:64" pos:end="115:69">icodec</name><operator pos:start="115:70" pos:end="115:71">-&gt;</operator><name pos:start="115:72" pos:end="115:80">codec_tag</name></name></expr></argument>)</argument_list></call> <operator pos:start="115:83" pos:end="115:84">==</operator> <name pos:start="115:86" pos:end="115:100"><name pos:start="115:86" pos:end="115:90">codec</name><operator pos:start="115:91" pos:end="115:92">-&gt;</operator><name pos:start="115:93" pos:end="115:100">codec_id</name></name>

                   <operator pos:start="117:20" pos:end="117:21">||</operator> <call pos:start="117:23" pos:end="117:80"><name pos:start="117:23" pos:end="117:38">av_codec_get_tag</name><argument_list pos:start="117:39" pos:end="117:80">(<argument pos:start="117:40" pos:end="117:61"><expr pos:start="117:40" pos:end="117:61"><name pos:start="117:40" pos:end="117:61"><name pos:start="117:40" pos:end="117:41">os</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:50">oformat</name><operator pos:start="117:51" pos:end="117:52">-&gt;</operator><name pos:start="117:53" pos:end="117:61">codec_tag</name></name></expr></argument>, <argument pos:start="117:64" pos:end="117:79"><expr pos:start="117:64" pos:end="117:79"><name pos:start="117:64" pos:end="117:79"><name pos:start="117:64" pos:end="117:69">icodec</name><operator pos:start="117:70" pos:end="117:71">-&gt;</operator><name pos:start="117:72" pos:end="117:79">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="117:82" pos:end="117:83">&lt;=</operator> <literal type="number" pos:start="117:85" pos:end="117:85">0</literal></expr>)</condition><block type="pseudo" pos:start="119:21" pos:end="119:57"><block_content pos:start="119:21" pos:end="119:57">

                    <expr_stmt pos:start="119:21" pos:end="119:57"><expr pos:start="119:21" pos:end="119:56"><name pos:start="119:21" pos:end="119:36"><name pos:start="119:21" pos:end="119:25">codec</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:36">codec_tag</name></name> <operator pos:start="119:38" pos:end="119:38">=</operator> <name pos:start="119:40" pos:end="119:56"><name pos:start="119:40" pos:end="119:45">icodec</name><operator pos:start="119:46" pos:end="119:47">-&gt;</operator><name pos:start="119:48" pos:end="119:56">codec_tag</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="125:13" pos:end="125:47"><expr pos:start="125:13" pos:end="125:46"><name pos:start="125:13" pos:end="125:27"><name pos:start="125:13" pos:end="125:17">codec</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:27">bit_rate</name></name> <operator pos:start="125:29" pos:end="125:29">=</operator> <name pos:start="125:31" pos:end="125:46"><name pos:start="125:31" pos:end="125:36">icodec</name><operator pos:start="125:37" pos:end="125:38">-&gt;</operator><name pos:start="125:39" pos:end="125:46">bit_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:56"><expr pos:start="127:13" pos:end="127:55"><name pos:start="127:13" pos:end="127:30"><name pos:start="127:13" pos:end="127:17">codec</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:30">rc_max_rate</name></name>    <operator pos:start="127:35" pos:end="127:35">=</operator> <name pos:start="127:37" pos:end="127:55"><name pos:start="127:37" pos:end="127:42">icodec</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:55">rc_max_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:59"><expr pos:start="129:13" pos:end="129:58"><name pos:start="129:13" pos:end="129:33"><name pos:start="129:13" pos:end="129:17">codec</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:33">rc_buffer_size</name></name> <operator pos:start="129:35" pos:end="129:35">=</operator> <name pos:start="129:37" pos:end="129:58"><name pos:start="129:37" pos:end="129:42">icodec</name><operator pos:start="129:43" pos:end="129:44">-&gt;</operator><name pos:start="129:45" pos:end="129:58">rc_buffer_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:53"><expr pos:start="131:13" pos:end="131:52"><name pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:17">codec</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:28">extradata</name></name><operator pos:start="131:29" pos:end="131:29">=</operator> <call pos:start="131:31" pos:end="131:52"><name pos:start="131:31" pos:end="131:40">av_mallocz</name><argument_list pos:start="131:41" pos:end="131:52">(<argument pos:start="131:42" pos:end="131:51"><expr pos:start="131:42" pos:end="131:51"><name pos:start="131:42" pos:end="131:51">extra_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="133:13" pos:end="137:13"><if pos:start="133:13" pos:end="137:13">if <condition pos:start="133:16" pos:end="133:34">(<expr pos:start="133:17" pos:end="133:33"><operator pos:start="133:17" pos:end="133:17">!</operator><name pos:start="133:18" pos:end="133:33"><name pos:start="133:18" pos:end="133:22">codec</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:33">extradata</name></name></expr>)</condition> <block pos:start="133:36" pos:end="137:13">{<block_content pos:start="135:17" pos:end="135:39">

                <return pos:start="135:17" pos:end="135:39">return <expr pos:start="135:24" pos:end="135:38"><call pos:start="135:24" pos:end="135:38"><name pos:start="135:24" pos:end="135:30">AVERROR</name><argument_list pos:start="135:31" pos:end="135:38">(<argument pos:start="135:32" pos:end="135:37"><expr pos:start="135:32" pos:end="135:37"><name pos:start="135:32" pos:end="135:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:80"><expr pos:start="139:13" pos:end="139:79"><call pos:start="139:13" pos:end="139:79"><name pos:start="139:13" pos:end="139:18">memcpy</name><argument_list pos:start="139:19" pos:end="139:79">(<argument pos:start="139:20" pos:end="139:35"><expr pos:start="139:20" pos:end="139:35"><name pos:start="139:20" pos:end="139:35"><name pos:start="139:20" pos:end="139:24">codec</name><operator pos:start="139:25" pos:end="139:26">-&gt;</operator><name pos:start="139:27" pos:end="139:35">extradata</name></name></expr></argument>, <argument pos:start="139:38" pos:end="139:54"><expr pos:start="139:38" pos:end="139:54"><name pos:start="139:38" pos:end="139:54"><name pos:start="139:38" pos:end="139:43">icodec</name><operator pos:start="139:44" pos:end="139:45">-&gt;</operator><name pos:start="139:46" pos:end="139:54">extradata</name></name></expr></argument>, <argument pos:start="139:57" pos:end="139:78"><expr pos:start="139:57" pos:end="139:78"><name pos:start="139:57" pos:end="139:78"><name pos:start="139:57" pos:end="139:62">icodec</name><operator pos:start="139:63" pos:end="139:64">-&gt;</operator><name pos:start="139:65" pos:end="139:78">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:58"><expr pos:start="141:13" pos:end="141:57"><name pos:start="141:13" pos:end="141:33"><name pos:start="141:13" pos:end="141:17">codec</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:33">extradata_size</name></name><operator pos:start="141:34" pos:end="141:34">=</operator> <name pos:start="141:36" pos:end="141:57"><name pos:start="141:36" pos:end="141:41">icodec</name><operator pos:start="141:42" pos:end="141:43">-&gt;</operator><name pos:start="141:44" pos:end="141:57">extradata_size</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="155:54"><if pos:start="143:13" pos:end="153:13">if<condition pos:start="143:15" pos:end="143:146">(<expr pos:start="143:16" pos:end="143:145"><operator pos:start="143:16" pos:end="143:16">!</operator><name pos:start="143:17" pos:end="143:23">copy_tb</name> <operator pos:start="143:25" pos:end="143:26">&amp;&amp;</operator> <call pos:start="143:28" pos:end="143:52"><name pos:start="143:28" pos:end="143:33">av_q2d</name><argument_list pos:start="143:34" pos:end="143:52">(<argument pos:start="143:35" pos:end="143:51"><expr pos:start="143:35" pos:end="143:51"><name pos:start="143:35" pos:end="143:51"><name pos:start="143:35" pos:end="143:40">icodec</name><operator pos:start="143:41" pos:end="143:42">-&gt;</operator><name pos:start="143:43" pos:end="143:51">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="143:53" pos:end="143:53">*</operator><name pos:start="143:54" pos:end="143:76"><name pos:start="143:54" pos:end="143:59">icodec</name><operator pos:start="143:60" pos:end="143:61">-&gt;</operator><name pos:start="143:62" pos:end="143:76">ticks_per_frame</name></name> <operator pos:start="143:78" pos:end="143:78">&gt;</operator> <call pos:start="143:80" pos:end="143:105"><name pos:start="143:80" pos:end="143:85">av_q2d</name><argument_list pos:start="143:86" pos:end="143:105">(<argument pos:start="143:87" pos:end="143:104"><expr pos:start="143:87" pos:end="143:104"><name pos:start="143:87" pos:end="143:104"><name pos:start="143:87" pos:end="143:89">ist</name><operator pos:start="143:90" pos:end="143:91">-&gt;</operator><name pos:start="143:92" pos:end="143:93">st</name><operator pos:start="143:94" pos:end="143:95">-&gt;</operator><name pos:start="143:96" pos:end="143:104">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="143:107" pos:end="143:108">&amp;&amp;</operator> <call pos:start="143:110" pos:end="143:135"><name pos:start="143:110" pos:end="143:115">av_q2d</name><argument_list pos:start="143:116" pos:end="143:135">(<argument pos:start="143:117" pos:end="143:134"><expr pos:start="143:117" pos:end="143:134"><name pos:start="143:117" pos:end="143:134"><name pos:start="143:117" pos:end="143:119">ist</name><operator pos:start="143:120" pos:end="143:121">-&gt;</operator><name pos:start="143:122" pos:end="143:123">st</name><operator pos:start="143:124" pos:end="143:125">-&gt;</operator><name pos:start="143:126" pos:end="143:134">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="143:137" pos:end="143:137">&lt;</operator> <literal type="number" pos:start="143:139" pos:end="143:141">1.0</literal><operator pos:start="143:142" pos:end="143:142">/</operator><literal type="number" pos:start="143:143" pos:end="143:145">500</literal></expr>)</condition><block pos:start="143:147" pos:end="153:13">{<block_content pos:start="145:17" pos:end="151:79">

                <expr_stmt pos:start="145:17" pos:end="145:53"><expr pos:start="145:17" pos:end="145:52"><name pos:start="145:17" pos:end="145:32"><name pos:start="145:17" pos:end="145:21">codec</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:32">time_base</name></name> <operator pos:start="145:34" pos:end="145:34">=</operator> <name pos:start="145:36" pos:end="145:52"><name pos:start="145:36" pos:end="145:41">icodec</name><operator pos:start="145:42" pos:end="145:43">-&gt;</operator><name pos:start="145:44" pos:end="145:52">time_base</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:64"><expr pos:start="147:17" pos:end="147:63"><name pos:start="147:17" pos:end="147:36"><name pos:start="147:17" pos:end="147:21">codec</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:32">time_base</name><operator pos:start="147:33" pos:end="147:33">.</operator><name pos:start="147:34" pos:end="147:36">num</name></name> <operator pos:start="147:38" pos:end="147:39">*=</operator> <name pos:start="147:41" pos:end="147:63"><name pos:start="147:41" pos:end="147:46">icodec</name><operator pos:start="147:47" pos:end="147:48">-&gt;</operator><name pos:start="147:49" pos:end="147:63">ticks_per_frame</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="151:79"><expr pos:start="149:17" pos:end="151:78"><call pos:start="149:17" pos:end="151:78"><name pos:start="149:17" pos:end="149:25">av_reduce</name><argument_list pos:start="149:26" pos:end="151:78">(<argument pos:start="149:27" pos:end="149:47"><expr pos:start="149:27" pos:end="149:47"><operator pos:start="149:27" pos:end="149:27">&amp;</operator><name pos:start="149:28" pos:end="149:47"><name pos:start="149:28" pos:end="149:32">codec</name><operator pos:start="149:33" pos:end="149:34">-&gt;</operator><name pos:start="149:35" pos:end="149:43">time_base</name><operator pos:start="149:44" pos:end="149:44">.</operator><name pos:start="149:45" pos:end="149:47">num</name></name></expr></argument>, <argument pos:start="149:50" pos:end="149:70"><expr pos:start="149:50" pos:end="149:70"><operator pos:start="149:50" pos:end="149:50">&amp;</operator><name pos:start="149:51" pos:end="149:70"><name pos:start="149:51" pos:end="149:55">codec</name><operator pos:start="149:56" pos:end="149:57">-&gt;</operator><name pos:start="149:58" pos:end="149:66">time_base</name><operator pos:start="149:67" pos:end="149:67">.</operator><name pos:start="149:68" pos:end="149:70">den</name></name></expr></argument>,

                          <argument pos:start="151:27" pos:end="151:46"><expr pos:start="151:27" pos:end="151:46"><name pos:start="151:27" pos:end="151:46"><name pos:start="151:27" pos:end="151:31">codec</name><operator pos:start="151:32" pos:end="151:33">-&gt;</operator><name pos:start="151:34" pos:end="151:42">time_base</name><operator pos:start="151:43" pos:end="151:43">.</operator><name pos:start="151:44" pos:end="151:46">num</name></name></expr></argument>, <argument pos:start="151:49" pos:end="151:68"><expr pos:start="151:49" pos:end="151:68"><name pos:start="151:49" pos:end="151:68"><name pos:start="151:49" pos:end="151:53">codec</name><operator pos:start="151:54" pos:end="151:55">-&gt;</operator><name pos:start="151:56" pos:end="151:64">time_base</name><operator pos:start="151:65" pos:end="151:65">.</operator><name pos:start="151:66" pos:end="151:68">den</name></name></expr></argument>, <argument pos:start="151:71" pos:end="151:77"><expr pos:start="151:71" pos:end="151:77"><name pos:start="151:71" pos:end="151:77">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="153:14" pos:end="155:54">else<block type="pseudo" pos:start="155:17" pos:end="155:54"><block_content pos:start="155:17" pos:end="155:54">

                <expr_stmt pos:start="155:17" pos:end="155:54"><expr pos:start="155:17" pos:end="155:53"><name pos:start="155:17" pos:end="155:32"><name pos:start="155:17" pos:end="155:21">codec</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:32">time_base</name></name> <operator pos:start="155:34" pos:end="155:34">=</operator> <name pos:start="155:36" pos:end="155:53"><name pos:start="155:36" pos:end="155:38">ist</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:42">st</name><operator pos:start="155:43" pos:end="155:44">-&gt;</operator><name pos:start="155:45" pos:end="155:53">time_base</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <switch pos:start="157:13" pos:end="233:13">switch<condition pos:start="157:19" pos:end="157:37">(<expr pos:start="157:20" pos:end="157:36"><name pos:start="157:20" pos:end="157:36"><name pos:start="157:20" pos:end="157:24">codec</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:36">codec_type</name></name></expr>)</condition> <block pos:start="157:39" pos:end="233:13">{<block_content pos:start="159:13" pos:end="231:24">

            <case pos:start="159:13" pos:end="159:36">case <expr pos:start="159:18" pos:end="159:35"><name pos:start="159:18" pos:end="159:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <if_stmt pos:start="161:17" pos:end="167:17"><if pos:start="161:17" pos:end="167:17">if<condition pos:start="161:19" pos:end="161:39">(<expr pos:start="161:20" pos:end="161:38"><name pos:start="161:20" pos:end="161:31">audio_volume</name> <operator pos:start="161:33" pos:end="161:34">!=</operator> <literal type="number" pos:start="161:36" pos:end="161:38">256</literal></expr>)</condition> <block pos:start="161:41" pos:end="167:17">{<block_content pos:start="163:21" pos:end="165:36">

                    <expr_stmt pos:start="163:21" pos:end="163:104"><expr pos:start="163:21" pos:end="163:103"><call pos:start="163:21" pos:end="163:103"><name pos:start="163:21" pos:end="163:27">fprintf</name><argument_list pos:start="163:28" pos:end="163:103">(<argument pos:start="163:29" pos:end="163:34"><expr pos:start="163:29" pos:end="163:34"><name pos:start="163:29" pos:end="163:34">stderr</name></expr></argument>,<argument pos:start="163:36" pos:end="163:102"><expr pos:start="163:36" pos:end="163:102"><literal type="string" pos:start="163:36" pos:end="163:102">"-acodec copy and -vol are incompatible (frames are not decoded)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:36"><expr pos:start="165:21" pos:end="165:35"><call pos:start="165:21" pos:end="165:35"><name pos:start="165:21" pos:end="165:32">exit_program</name><argument_list pos:start="165:33" pos:end="165:35">(<argument pos:start="165:34" pos:end="165:34"><expr pos:start="165:34" pos:end="165:34"><literal type="number" pos:start="165:34" pos:end="165:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:63"><expr pos:start="169:17" pos:end="169:62"><name pos:start="169:17" pos:end="169:37"><name pos:start="169:17" pos:end="169:21">codec</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:37">channel_layout</name></name> <operator pos:start="169:39" pos:end="169:39">=</operator> <name pos:start="169:41" pos:end="169:62"><name pos:start="169:41" pos:end="169:46">icodec</name><operator pos:start="169:47" pos:end="169:48">-&gt;</operator><name pos:start="169:49" pos:end="169:62">channel_layout</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:57"><expr pos:start="171:17" pos:end="171:56"><name pos:start="171:17" pos:end="171:34"><name pos:start="171:17" pos:end="171:21">codec</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:34">sample_rate</name></name> <operator pos:start="171:36" pos:end="171:36">=</operator> <name pos:start="171:38" pos:end="171:56"><name pos:start="171:38" pos:end="171:43">icodec</name><operator pos:start="171:44" pos:end="171:45">-&gt;</operator><name pos:start="171:46" pos:end="171:56">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:51"><expr pos:start="173:17" pos:end="173:50"><name pos:start="173:17" pos:end="173:31"><name pos:start="173:17" pos:end="173:21">codec</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:31">channels</name></name> <operator pos:start="173:33" pos:end="173:33">=</operator> <name pos:start="173:35" pos:end="173:50"><name pos:start="173:35" pos:end="173:40">icodec</name><operator pos:start="173:41" pos:end="173:42">-&gt;</operator><name pos:start="173:43" pos:end="173:50">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:55"><expr pos:start="175:17" pos:end="175:54"><name pos:start="175:17" pos:end="175:33"><name pos:start="175:17" pos:end="175:21">codec</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:33">frame_size</name></name> <operator pos:start="175:35" pos:end="175:35">=</operator> <name pos:start="175:37" pos:end="175:54"><name pos:start="175:37" pos:end="175:42">icodec</name><operator pos:start="175:43" pos:end="175:44">-&gt;</operator><name pos:start="175:45" pos:end="175:54">frame_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:71"><expr pos:start="177:17" pos:end="177:70"><name pos:start="177:17" pos:end="177:41"><name pos:start="177:17" pos:end="177:21">codec</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:41">audio_service_type</name></name> <operator pos:start="177:43" pos:end="177:43">=</operator> <name pos:start="177:45" pos:end="177:70"><name pos:start="177:45" pos:end="177:50">icodec</name><operator pos:start="177:51" pos:end="177:52">-&gt;</operator><name pos:start="177:53" pos:end="177:70">audio_service_type</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:56"><expr pos:start="179:17" pos:end="179:55"><name pos:start="179:17" pos:end="179:34"><name pos:start="179:17" pos:end="179:21">codec</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:34">block_align</name></name><operator pos:start="179:35" pos:end="179:35">=</operator> <name pos:start="179:37" pos:end="179:55"><name pos:start="179:37" pos:end="179:42">icodec</name><operator pos:start="179:43" pos:end="179:44">-&gt;</operator><name pos:start="179:45" pos:end="179:55">block_align</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="181:17" pos:end="183:42"><if pos:start="181:17" pos:end="183:42">if<condition pos:start="181:19" pos:end="181:78">(<expr pos:start="181:20" pos:end="181:77"><name pos:start="181:20" pos:end="181:37"><name pos:start="181:20" pos:end="181:24">codec</name><operator pos:start="181:25" pos:end="181:26">-&gt;</operator><name pos:start="181:27" pos:end="181:37">block_align</name></name> <operator pos:start="181:39" pos:end="181:40">==</operator> <literal type="number" pos:start="181:42" pos:end="181:42">1</literal> <operator pos:start="181:44" pos:end="181:45">&amp;&amp;</operator> <name pos:start="181:47" pos:end="181:61"><name pos:start="181:47" pos:end="181:51">codec</name><operator pos:start="181:52" pos:end="181:53">-&gt;</operator><name pos:start="181:54" pos:end="181:61">codec_id</name></name> <operator pos:start="181:63" pos:end="181:64">==</operator> <name pos:start="181:66" pos:end="181:77">CODEC_ID_MP3</name></expr>)</condition><block type="pseudo" pos:start="183:21" pos:end="183:42"><block_content pos:start="183:21" pos:end="183:42">

                    <expr_stmt pos:start="183:21" pos:end="183:42"><expr pos:start="183:21" pos:end="183:41"><name pos:start="183:21" pos:end="183:38"><name pos:start="183:21" pos:end="183:25">codec</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:38">block_align</name></name><operator pos:start="183:39" pos:end="183:39">=</operator> <literal type="number" pos:start="183:41" pos:end="183:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="185:17" pos:end="187:42"><if pos:start="185:17" pos:end="187:42">if<condition pos:start="185:19" pos:end="185:51">(<expr pos:start="185:20" pos:end="185:50"><name pos:start="185:20" pos:end="185:34"><name pos:start="185:20" pos:end="185:24">codec</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:34">codec_id</name></name> <operator pos:start="185:36" pos:end="185:37">==</operator> <name pos:start="185:39" pos:end="185:50">CODEC_ID_AC3</name></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:42"><block_content pos:start="187:21" pos:end="187:42">

                    <expr_stmt pos:start="187:21" pos:end="187:42"><expr pos:start="187:21" pos:end="187:41"><name pos:start="187:21" pos:end="187:38"><name pos:start="187:21" pos:end="187:25">codec</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:38">block_align</name></name><operator pos:start="187:39" pos:end="187:39">=</operator> <literal type="number" pos:start="187:41" pos:end="187:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="189:17" pos:end="189:22">break;</break>

            <case pos:start="191:13" pos:end="191:36">case <expr pos:start="191:18" pos:end="191:35"><name pos:start="191:18" pos:end="191:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <expr_stmt pos:start="193:17" pos:end="193:49"><expr pos:start="193:17" pos:end="193:48"><name pos:start="193:17" pos:end="193:30"><name pos:start="193:17" pos:end="193:21">codec</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:30">pix_fmt</name></name> <operator pos:start="193:32" pos:end="193:32">=</operator> <name pos:start="193:34" pos:end="193:48"><name pos:start="193:34" pos:end="193:39">icodec</name><operator pos:start="193:40" pos:end="193:41">-&gt;</operator><name pos:start="193:42" pos:end="193:48">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:45"><expr pos:start="195:17" pos:end="195:44"><name pos:start="195:17" pos:end="195:28"><name pos:start="195:17" pos:end="195:21">codec</name><operator pos:start="195:22" pos:end="195:23">-&gt;</operator><name pos:start="195:24" pos:end="195:28">width</name></name> <operator pos:start="195:30" pos:end="195:30">=</operator> <name pos:start="195:32" pos:end="195:44"><name pos:start="195:32" pos:end="195:37">icodec</name><operator pos:start="195:38" pos:end="195:39">-&gt;</operator><name pos:start="195:40" pos:end="195:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:47"><expr pos:start="197:17" pos:end="197:46"><name pos:start="197:17" pos:end="197:29"><name pos:start="197:17" pos:end="197:21">codec</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:29">height</name></name> <operator pos:start="197:31" pos:end="197:31">=</operator> <name pos:start="197:33" pos:end="197:46"><name pos:start="197:33" pos:end="197:38">icodec</name><operator pos:start="197:39" pos:end="197:40">-&gt;</operator><name pos:start="197:41" pos:end="197:46">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:59"><expr pos:start="199:17" pos:end="199:58"><name pos:start="199:17" pos:end="199:35"><name pos:start="199:17" pos:end="199:21">codec</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:35">has_b_frames</name></name> <operator pos:start="199:37" pos:end="199:37">=</operator> <name pos:start="199:39" pos:end="199:58"><name pos:start="199:39" pos:end="199:44">icodec</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:58">has_b_frames</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="201:17" pos:end="213:17"><if pos:start="201:17" pos:end="213:17">if <condition pos:start="201:20" pos:end="201:52">(<expr pos:start="201:21" pos:end="201:51"><operator pos:start="201:21" pos:end="201:21">!</operator><name pos:start="201:22" pos:end="201:51"><name pos:start="201:22" pos:end="201:26">codec</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:47">sample_aspect_ratio</name><operator pos:start="201:48" pos:end="201:48">.</operator><name pos:start="201:49" pos:end="201:51">num</name></name></expr>)</condition> <block pos:start="201:54" pos:end="213:17">{<block_content pos:start="203:21" pos:end="211:81">

                    <expr_stmt pos:start="203:21" pos:end="211:81"><expr pos:start="203:21" pos:end="211:80"><name pos:start="203:21" pos:end="203:46"><name pos:start="203:21" pos:end="203:25">codec</name><operator pos:start="203:26" pos:end="203:27">-&gt;</operator><name pos:start="203:28" pos:end="203:46">sample_aspect_ratio</name></name> <operator pos:start="203:48" pos:end="203:48">=</operator>

                    <name pos:start="205:21" pos:end="205:48"><name pos:start="205:21" pos:end="205:23">ost</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:27">st</name><operator pos:start="205:28" pos:end="205:29">-&gt;</operator><name pos:start="205:30" pos:end="205:48">sample_aspect_ratio</name></name> <operator pos:start="205:50" pos:end="205:50">=</operator>

                        <ternary pos:start="207:25" pos:end="211:80"><condition pos:start="207:25" pos:end="207:58"><expr pos:start="207:25" pos:end="207:56"><name pos:start="207:25" pos:end="207:56"><name pos:start="207:25" pos:end="207:27">ist</name><operator pos:start="207:28" pos:end="207:29">-&gt;</operator><name pos:start="207:30" pos:end="207:31">st</name><operator pos:start="207:32" pos:end="207:33">-&gt;</operator><name pos:start="207:34" pos:end="207:52">sample_aspect_ratio</name><operator pos:start="207:53" pos:end="207:53">.</operator><name pos:start="207:54" pos:end="207:56">num</name></name></expr> ?</condition><then pos:start="207:60" pos:end="207:87"> <expr pos:start="207:60" pos:end="207:87"><name pos:start="207:60" pos:end="207:87"><name pos:start="207:60" pos:end="207:62">ist</name><operator pos:start="207:63" pos:end="207:64">-&gt;</operator><name pos:start="207:65" pos:end="207:66">st</name><operator pos:start="207:67" pos:end="207:68">-&gt;</operator><name pos:start="207:69" pos:end="207:87">sample_aspect_ratio</name></name></expr> </then><else pos:start="207:89" pos:end="211:80">:

                        <expr pos:start="209:25" pos:end="211:80"><ternary pos:start="209:25" pos:end="211:80"><condition pos:start="209:25" pos:end="209:65"><expr pos:start="209:25" pos:end="209:63"><name pos:start="209:25" pos:end="209:63"><name pos:start="209:25" pos:end="209:27">ist</name><operator pos:start="209:28" pos:end="209:29">-&gt;</operator><name pos:start="209:30" pos:end="209:31">st</name><operator pos:start="209:32" pos:end="209:33">-&gt;</operator><name pos:start="209:34" pos:end="209:38">codec</name><operator pos:start="209:39" pos:end="209:40">-&gt;</operator><name pos:start="209:41" pos:end="209:59">sample_aspect_ratio</name><operator pos:start="209:60" pos:end="209:60">.</operator><name pos:start="209:61" pos:end="209:63">num</name></name></expr> ?</condition><then pos:start="211:25" pos:end="211:59">

                        <expr pos:start="211:25" pos:end="211:59"><name pos:start="211:25" pos:end="211:59"><name pos:start="211:25" pos:end="211:27">ist</name><operator pos:start="211:28" pos:end="211:29">-&gt;</operator><name pos:start="211:30" pos:end="211:31">st</name><operator pos:start="211:32" pos:end="211:33">-&gt;</operator><name pos:start="211:34" pos:end="211:38">codec</name><operator pos:start="211:39" pos:end="211:40">-&gt;</operator><name pos:start="211:41" pos:end="211:59">sample_aspect_ratio</name></name></expr> </then><else pos:start="211:61" pos:end="211:80">: <expr pos:start="211:63" pos:end="211:80"><operator pos:start="211:63" pos:end="211:63">(</operator><name pos:start="211:64" pos:end="211:73">AVRational</name><operator pos:start="211:74" pos:end="211:74">)</operator><block pos:start="211:75" pos:end="211:80">{<expr pos:start="211:76" pos:end="211:76"><literal type="number" pos:start="211:76" pos:end="211:76">0</literal></expr>, <expr pos:start="211:79" pos:end="211:79"><literal type="number" pos:start="211:79" pos:end="211:79">1</literal></expr>}</block></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="215:17" pos:end="215:22">break;</break>

            <case pos:start="217:13" pos:end="217:39">case <expr pos:start="217:18" pos:end="217:38"><name pos:start="217:18" pos:end="217:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="219:17" pos:end="219:45"><expr pos:start="219:17" pos:end="219:44"><name pos:start="219:17" pos:end="219:28"><name pos:start="219:17" pos:end="219:21">codec</name><operator pos:start="219:22" pos:end="219:23">-&gt;</operator><name pos:start="219:24" pos:end="219:28">width</name></name> <operator pos:start="219:30" pos:end="219:30">=</operator> <name pos:start="219:32" pos:end="219:44"><name pos:start="219:32" pos:end="219:37">icodec</name><operator pos:start="219:38" pos:end="219:39">-&gt;</operator><name pos:start="219:40" pos:end="219:44">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:47"><expr pos:start="221:17" pos:end="221:46"><name pos:start="221:17" pos:end="221:29"><name pos:start="221:17" pos:end="221:21">codec</name><operator pos:start="221:22" pos:end="221:23">-&gt;</operator><name pos:start="221:24" pos:end="221:29">height</name></name> <operator pos:start="221:31" pos:end="221:31">=</operator> <name pos:start="221:33" pos:end="221:46"><name pos:start="221:33" pos:end="221:38">icodec</name><operator pos:start="221:39" pos:end="221:40">-&gt;</operator><name pos:start="221:41" pos:end="221:46">height</name></name></expr>;</expr_stmt>

                <break pos:start="223:17" pos:end="223:22">break;</break>

            <case pos:start="225:13" pos:end="225:35">case <expr pos:start="225:18" pos:end="225:34"><name pos:start="225:18" pos:end="225:34">AVMEDIA_TYPE_DATA</name></expr>:</case>

                <break pos:start="227:17" pos:end="227:22">break;</break>

            <default pos:start="229:13" pos:end="229:20">default:</default>

                <expr_stmt pos:start="231:17" pos:end="231:24"><expr pos:start="231:17" pos:end="231:23"><call pos:start="231:17" pos:end="231:23"><name pos:start="231:17" pos:end="231:21">abort</name><argument_list pos:start="231:22" pos:end="231:23">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="235:11" pos:end="495:9">else <block pos:start="235:16" pos:end="495:9">{<block_content pos:start="237:13" pos:end="493:13">

            <if_stmt pos:start="237:13" pos:end="239:74"><if pos:start="237:13" pos:end="239:74">if <condition pos:start="237:16" pos:end="237:26">(<expr pos:start="237:17" pos:end="237:25"><operator pos:start="237:17" pos:end="237:17">!</operator><name pos:start="237:18" pos:end="237:25"><name pos:start="237:18" pos:end="237:20">ost</name><operator pos:start="237:21" pos:end="237:22">-&gt;</operator><name pos:start="237:23" pos:end="237:25">enc</name></name></expr>)</condition><block type="pseudo" pos:start="239:17" pos:end="239:74"><block_content pos:start="239:17" pos:end="239:74">

                <expr_stmt pos:start="239:17" pos:end="239:74"><expr pos:start="239:17" pos:end="239:73"><name pos:start="239:17" pos:end="239:24"><name pos:start="239:17" pos:end="239:19">ost</name><operator pos:start="239:20" pos:end="239:21">-&gt;</operator><name pos:start="239:22" pos:end="239:24">enc</name></name> <operator pos:start="239:26" pos:end="239:26">=</operator> <call pos:start="239:28" pos:end="239:73"><name pos:start="239:28" pos:end="239:47">avcodec_find_encoder</name><argument_list pos:start="239:48" pos:end="239:73">(<argument pos:start="239:49" pos:end="239:72"><expr pos:start="239:49" pos:end="239:72"><name pos:start="239:49" pos:end="239:72"><name pos:start="239:49" pos:end="239:51">ost</name><operator pos:start="239:52" pos:end="239:53">-&gt;</operator><name pos:start="239:54" pos:end="239:55">st</name><operator pos:start="239:56" pos:end="239:57">-&gt;</operator><name pos:start="239:58" pos:end="239:62">codec</name><operator pos:start="239:63" pos:end="239:64">-&gt;</operator><name pos:start="239:65" pos:end="239:72">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <switch pos:start="241:13" pos:end="441:13">switch<condition pos:start="241:19" pos:end="241:37">(<expr pos:start="241:20" pos:end="241:36"><name pos:start="241:20" pos:end="241:36"><name pos:start="241:20" pos:end="241:24">codec</name><operator pos:start="241:25" pos:end="241:26">-&gt;</operator><name pos:start="241:27" pos:end="241:36">codec_type</name></name></expr>)</condition> <block pos:start="241:39" pos:end="441:13">{<block_content pos:start="243:13" pos:end="439:22">

            <case pos:start="243:13" pos:end="243:36">case <expr pos:start="243:18" pos:end="243:35"><name pos:start="243:18" pos:end="243:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="245:17" pos:end="245:47"><expr pos:start="245:17" pos:end="245:46"><name pos:start="245:17" pos:end="245:25"><name pos:start="245:17" pos:end="245:19">ost</name><operator pos:start="245:20" pos:end="245:21">-&gt;</operator><name pos:start="245:22" pos:end="245:25">fifo</name></name><operator pos:start="245:26" pos:end="245:26">=</operator> <call pos:start="245:28" pos:end="245:46"><name pos:start="245:28" pos:end="245:40">av_fifo_alloc</name><argument_list pos:start="245:41" pos:end="245:46">(<argument pos:start="245:42" pos:end="245:45"><expr pos:start="245:42" pos:end="245:45"><literal type="number" pos:start="245:42" pos:end="245:45">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="247:17" pos:end="251:17"><if pos:start="247:17" pos:end="251:17">if <condition pos:start="247:20" pos:end="247:31">(<expr pos:start="247:21" pos:end="247:30"><operator pos:start="247:21" pos:end="247:21">!</operator><name pos:start="247:22" pos:end="247:30"><name pos:start="247:22" pos:end="247:24">ost</name><operator pos:start="247:25" pos:end="247:26">-&gt;</operator><name pos:start="247:27" pos:end="247:30">fifo</name></name></expr>)</condition> <block pos:start="247:33" pos:end="251:17">{<block_content pos:start="249:21" pos:end="249:43">

                    <return pos:start="249:21" pos:end="249:43">return <expr pos:start="249:28" pos:end="249:42"><call pos:start="249:28" pos:end="249:42"><name pos:start="249:28" pos:end="249:34">AVERROR</name><argument_list pos:start="249:35" pos:end="249:42">(<argument pos:start="249:36" pos:end="249:41"><expr pos:start="249:36" pos:end="249:41"><name pos:start="249:36" pos:end="249:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:91"><expr pos:start="253:17" pos:end="253:90"><name pos:start="253:17" pos:end="253:34"><name pos:start="253:17" pos:end="253:19">ost</name><operator pos:start="253:20" pos:end="253:21">-&gt;</operator><name pos:start="253:22" pos:end="253:34">reformat_pair</name></name> <operator pos:start="253:36" pos:end="253:36">=</operator> <call pos:start="253:38" pos:end="253:90"><name pos:start="253:38" pos:end="253:51">MAKE_SFMT_PAIR</name><argument_list pos:start="253:52" pos:end="253:90">(<argument pos:start="253:53" pos:end="253:70"><expr pos:start="253:53" pos:end="253:70"><name pos:start="253:53" pos:end="253:70">AV_SAMPLE_FMT_NONE</name></expr></argument>,<argument pos:start="253:72" pos:end="253:89"><expr pos:start="253:72" pos:end="253:89"><name pos:start="253:72" pos:end="253:89">AV_SAMPLE_FMT_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="255:17" pos:end="263:17"><if pos:start="255:17" pos:end="263:17">if <condition pos:start="255:20" pos:end="255:40">(<expr pos:start="255:21" pos:end="255:39"><operator pos:start="255:21" pos:end="255:21">!</operator><name pos:start="255:22" pos:end="255:39"><name pos:start="255:22" pos:end="255:26">codec</name><operator pos:start="255:27" pos:end="255:28">-&gt;</operator><name pos:start="255:29" pos:end="255:39">sample_rate</name></name></expr>)</condition> <block pos:start="255:42" pos:end="263:17">{<block_content pos:start="257:21" pos:end="261:62">

                    <expr_stmt pos:start="257:21" pos:end="257:61"><expr pos:start="257:21" pos:end="257:60"><name pos:start="257:21" pos:end="257:38"><name pos:start="257:21" pos:end="257:25">codec</name><operator pos:start="257:26" pos:end="257:27">-&gt;</operator><name pos:start="257:28" pos:end="257:38">sample_rate</name></name> <operator pos:start="257:40" pos:end="257:40">=</operator> <name pos:start="257:42" pos:end="257:60"><name pos:start="257:42" pos:end="257:47">icodec</name><operator pos:start="257:48" pos:end="257:49">-&gt;</operator><name pos:start="257:50" pos:end="257:60">sample_rate</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="259:21" pos:end="261:62"><if pos:start="259:21" pos:end="261:62">if <condition pos:start="259:24" pos:end="259:39">(<expr pos:start="259:25" pos:end="259:38"><name pos:start="259:25" pos:end="259:38"><name pos:start="259:25" pos:end="259:30">icodec</name><operator pos:start="259:31" pos:end="259:32">-&gt;</operator><name pos:start="259:33" pos:end="259:38">lowres</name></name></expr>)</condition><block type="pseudo" pos:start="261:25" pos:end="261:62"><block_content pos:start="261:25" pos:end="261:62">

                        <expr_stmt pos:start="261:25" pos:end="261:62"><expr pos:start="261:25" pos:end="261:61"><name pos:start="261:25" pos:end="261:42"><name pos:start="261:25" pos:end="261:29">codec</name><operator pos:start="261:30" pos:end="261:31">-&gt;</operator><name pos:start="261:32" pos:end="261:42">sample_rate</name></name> <operator pos:start="261:44" pos:end="261:46">&gt;&gt;=</operator> <name pos:start="261:48" pos:end="261:61"><name pos:start="261:48" pos:end="261:53">icodec</name><operator pos:start="261:54" pos:end="261:55">-&gt;</operator><name pos:start="261:56" pos:end="261:61">lowres</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:54"><expr pos:start="265:17" pos:end="265:53"><call pos:start="265:17" pos:end="265:53"><name pos:start="265:17" pos:end="265:34">choose_sample_rate</name><argument_list pos:start="265:35" pos:end="265:53">(<argument pos:start="265:36" pos:end="265:42"><expr pos:start="265:36" pos:end="265:42"><name pos:start="265:36" pos:end="265:42"><name pos:start="265:36" pos:end="265:38">ost</name><operator pos:start="265:39" pos:end="265:40">-&gt;</operator><name pos:start="265:41" pos:end="265:42">st</name></name></expr></argument>, <argument pos:start="265:45" pos:end="265:52"><expr pos:start="265:45" pos:end="265:52"><name pos:start="265:45" pos:end="265:52"><name pos:start="265:45" pos:end="265:47">ost</name><operator pos:start="265:48" pos:end="265:49">-&gt;</operator><name pos:start="265:50" pos:end="265:52">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:71"><expr pos:start="267:17" pos:end="267:70"><name pos:start="267:17" pos:end="267:32"><name pos:start="267:17" pos:end="267:21">codec</name><operator pos:start="267:22" pos:end="267:23">-&gt;</operator><name pos:start="267:24" pos:end="267:32">time_base</name></name> <operator pos:start="267:34" pos:end="267:34">=</operator> <operator pos:start="267:36" pos:end="267:36">(</operator><name pos:start="267:37" pos:end="267:46">AVRational</name><operator pos:start="267:47" pos:end="267:47">)</operator><block pos:start="267:48" pos:end="267:70">{<expr pos:start="267:49" pos:end="267:49"><literal type="number" pos:start="267:49" pos:end="267:49">1</literal></expr>, <expr pos:start="267:52" pos:end="267:69"><name pos:start="267:52" pos:end="267:69"><name pos:start="267:52" pos:end="267:56">codec</name><operator pos:start="267:57" pos:end="267:58">-&gt;</operator><name pos:start="267:59" pos:end="267:69">sample_rate</name></name></expr>}</block></expr>;</expr_stmt>

                <if_stmt pos:start="269:17" pos:end="271:59"><if pos:start="269:17" pos:end="271:59">if <condition pos:start="269:20" pos:end="269:60">(<expr pos:start="269:21" pos:end="269:59"><name pos:start="269:21" pos:end="269:37"><name pos:start="269:21" pos:end="269:25">codec</name><operator pos:start="269:26" pos:end="269:27">-&gt;</operator><name pos:start="269:28" pos:end="269:37">sample_fmt</name></name> <operator pos:start="269:39" pos:end="269:40">==</operator> <name pos:start="269:42" pos:end="269:59">AV_SAMPLE_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="271:21" pos:end="271:59"><block_content pos:start="271:21" pos:end="271:59">

                    <expr_stmt pos:start="271:21" pos:end="271:59"><expr pos:start="271:21" pos:end="271:58"><name pos:start="271:21" pos:end="271:37"><name pos:start="271:21" pos:end="271:25">codec</name><operator pos:start="271:26" pos:end="271:27">-&gt;</operator><name pos:start="271:28" pos:end="271:37">sample_fmt</name></name> <operator pos:start="271:39" pos:end="271:39">=</operator> <name pos:start="271:41" pos:end="271:58"><name pos:start="271:41" pos:end="271:46">icodec</name><operator pos:start="271:47" pos:end="271:48">-&gt;</operator><name pos:start="271:49" pos:end="271:58">sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:53"><expr pos:start="273:17" pos:end="273:52"><call pos:start="273:17" pos:end="273:52"><name pos:start="273:17" pos:end="273:33">choose_sample_fmt</name><argument_list pos:start="273:34" pos:end="273:52">(<argument pos:start="273:35" pos:end="273:41"><expr pos:start="273:35" pos:end="273:41"><name pos:start="273:35" pos:end="273:41"><name pos:start="273:35" pos:end="273:37">ost</name><operator pos:start="273:38" pos:end="273:39">-&gt;</operator><name pos:start="273:40" pos:end="273:41">st</name></name></expr></argument>, <argument pos:start="273:44" pos:end="273:51"><expr pos:start="273:44" pos:end="273:51"><name pos:start="273:44" pos:end="273:51"><name pos:start="273:44" pos:end="273:46">ost</name><operator pos:start="273:47" pos:end="273:48">-&gt;</operator><name pos:start="273:49" pos:end="273:51">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="275:17" pos:end="277:55"><if pos:start="275:17" pos:end="277:55">if <condition pos:start="275:20" pos:end="275:37">(<expr pos:start="275:21" pos:end="275:36"><operator pos:start="275:21" pos:end="275:21">!</operator><name pos:start="275:22" pos:end="275:36"><name pos:start="275:22" pos:end="275:26">codec</name><operator pos:start="275:27" pos:end="275:28">-&gt;</operator><name pos:start="275:29" pos:end="275:36">channels</name></name></expr>)</condition><block type="pseudo" pos:start="277:21" pos:end="277:55"><block_content pos:start="277:21" pos:end="277:55">

                    <expr_stmt pos:start="277:21" pos:end="277:55"><expr pos:start="277:21" pos:end="277:54"><name pos:start="277:21" pos:end="277:35"><name pos:start="277:21" pos:end="277:25">codec</name><operator pos:start="277:26" pos:end="277:27">-&gt;</operator><name pos:start="277:28" pos:end="277:35">channels</name></name> <operator pos:start="277:37" pos:end="277:37">=</operator> <name pos:start="277:39" pos:end="277:54"><name pos:start="277:39" pos:end="277:44">icodec</name><operator pos:start="277:45" pos:end="277:46">-&gt;</operator><name pos:start="277:47" pos:end="277:54">channels</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="279:17" pos:end="279:63"><expr pos:start="279:17" pos:end="279:62"><name pos:start="279:17" pos:end="279:37"><name pos:start="279:17" pos:end="279:21">codec</name><operator pos:start="279:22" pos:end="279:23">-&gt;</operator><name pos:start="279:24" pos:end="279:37">channel_layout</name></name> <operator pos:start="279:39" pos:end="279:39">=</operator> <name pos:start="279:41" pos:end="279:62"><name pos:start="279:41" pos:end="279:46">icodec</name><operator pos:start="279:47" pos:end="279:48">-&gt;</operator><name pos:start="279:49" pos:end="279:62">channel_layout</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="281:17" pos:end="283:46"><if pos:start="281:17" pos:end="283:46">if <condition pos:start="281:20" pos:end="281:96">(<expr pos:start="281:21" pos:end="281:95"><call pos:start="281:21" pos:end="281:76"><name pos:start="281:21" pos:end="281:53">av_get_channel_layout_nb_channels</name><argument_list pos:start="281:54" pos:end="281:76">(<argument pos:start="281:55" pos:end="281:75"><expr pos:start="281:55" pos:end="281:75"><name pos:start="281:55" pos:end="281:75"><name pos:start="281:55" pos:end="281:59">codec</name><operator pos:start="281:60" pos:end="281:61">-&gt;</operator><name pos:start="281:62" pos:end="281:75">channel_layout</name></name></expr></argument>)</argument_list></call> <operator pos:start="281:78" pos:end="281:79">!=</operator> <name pos:start="281:81" pos:end="281:95"><name pos:start="281:81" pos:end="281:85">codec</name><operator pos:start="281:86" pos:end="281:87">-&gt;</operator><name pos:start="281:88" pos:end="281:95">channels</name></name></expr>)</condition><block type="pseudo" pos:start="283:21" pos:end="283:46"><block_content pos:start="283:21" pos:end="283:46">

                    <expr_stmt pos:start="283:21" pos:end="283:46"><expr pos:start="283:21" pos:end="283:45"><name pos:start="283:21" pos:end="283:41"><name pos:start="283:21" pos:end="283:25">codec</name><operator pos:start="283:26" pos:end="283:27">-&gt;</operator><name pos:start="283:28" pos:end="283:41">channel_layout</name></name> <operator pos:start="283:43" pos:end="283:43">=</operator> <literal type="number" pos:start="283:45" pos:end="283:45">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:105"><expr pos:start="285:17" pos:end="285:104"><name pos:start="285:17" pos:end="285:35"><name pos:start="285:17" pos:end="285:19">ost</name><operator pos:start="285:20" pos:end="285:21">-&gt;</operator><name pos:start="285:22" pos:end="285:35">audio_resample</name></name> <operator pos:start="285:37" pos:end="285:37">=</operator> <name pos:start="285:39" pos:end="285:56"><name pos:start="285:39" pos:end="285:43">codec</name><operator pos:start="285:44" pos:end="285:45">-&gt;</operator><name pos:start="285:46" pos:end="285:56">sample_rate</name></name> <operator pos:start="285:58" pos:end="285:59">!=</operator> <name pos:start="285:61" pos:end="285:79"><name pos:start="285:61" pos:end="285:66">icodec</name><operator pos:start="285:67" pos:end="285:68">-&gt;</operator><name pos:start="285:69" pos:end="285:79">sample_rate</name></name> <operator pos:start="285:81" pos:end="285:82">||</operator> <name pos:start="285:84" pos:end="285:100">audio_sync_method</name> <operator pos:start="285:102" pos:end="285:102">&gt;</operator> <literal type="number" pos:start="285:104" pos:end="285:104">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:59"><expr pos:start="287:17" pos:end="287:58"><name pos:start="287:17" pos:end="287:40"><name pos:start="287:17" pos:end="287:22">icodec</name><operator pos:start="287:23" pos:end="287:24">-&gt;</operator><name pos:start="287:25" pos:end="287:40">request_channels</name></name> <operator pos:start="287:42" pos:end="287:42">=</operator> <name pos:start="287:44" pos:end="287:58"><name pos:start="287:44" pos:end="287:48">codec</name><operator pos:start="287:49" pos:end="287:50">-&gt;</operator><name pos:start="287:51" pos:end="287:58">channels</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:41"><expr pos:start="289:17" pos:end="289:40"><name pos:start="289:17" pos:end="289:36"><name pos:start="289:17" pos:end="289:19">ist</name><operator pos:start="289:20" pos:end="289:21">-&gt;</operator><name pos:start="289:22" pos:end="289:36">decoding_needed</name></name> <operator pos:start="289:38" pos:end="289:38">=</operator> <literal type="number" pos:start="289:40" pos:end="289:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:41"><expr pos:start="291:17" pos:end="291:40"><name pos:start="291:17" pos:end="291:36"><name pos:start="291:17" pos:end="291:19">ost</name><operator pos:start="291:20" pos:end="291:21">-&gt;</operator><name pos:start="291:22" pos:end="291:36">encoding_needed</name></name> <operator pos:start="291:38" pos:end="291:38">=</operator> <literal type="number" pos:start="291:40" pos:end="291:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="293:17" pos:end="293:63"><expr pos:start="293:17" pos:end="293:62"><name pos:start="293:17" pos:end="293:40"><name pos:start="293:17" pos:end="293:19">ost</name><operator pos:start="293:20" pos:end="293:21">-&gt;</operator><name pos:start="293:22" pos:end="293:40">resample_sample_fmt</name></name>  <operator pos:start="293:43" pos:end="293:43">=</operator> <name pos:start="293:45" pos:end="293:62"><name pos:start="293:45" pos:end="293:50">icodec</name><operator pos:start="293:51" pos:end="293:52">-&gt;</operator><name pos:start="293:53" pos:end="293:62">sample_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:64"><expr pos:start="295:17" pos:end="295:63"><name pos:start="295:17" pos:end="295:41"><name pos:start="295:17" pos:end="295:19">ost</name><operator pos:start="295:20" pos:end="295:21">-&gt;</operator><name pos:start="295:22" pos:end="295:41">resample_sample_rate</name></name> <operator pos:start="295:43" pos:end="295:43">=</operator> <name pos:start="295:45" pos:end="295:63"><name pos:start="295:45" pos:end="295:50">icodec</name><operator pos:start="295:51" pos:end="295:52">-&gt;</operator><name pos:start="295:53" pos:end="295:63">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="297:17" pos:end="297:61"><expr pos:start="297:17" pos:end="297:60"><name pos:start="297:17" pos:end="297:38"><name pos:start="297:17" pos:end="297:19">ost</name><operator pos:start="297:20" pos:end="297:21">-&gt;</operator><name pos:start="297:22" pos:end="297:38">resample_channels</name></name>    <operator pos:start="297:43" pos:end="297:43">=</operator> <name pos:start="297:45" pos:end="297:60"><name pos:start="297:45" pos:end="297:50">icodec</name><operator pos:start="297:51" pos:end="297:52">-&gt;</operator><name pos:start="297:53" pos:end="297:60">channels</name></name></expr>;</expr_stmt>

                <break pos:start="299:17" pos:end="299:22">break;</break>

            <case pos:start="301:13" pos:end="301:36">case <expr pos:start="301:18" pos:end="301:35"><name pos:start="301:18" pos:end="301:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <if_stmt pos:start="303:17" pos:end="305:53"><if pos:start="303:17" pos:end="305:53">if <condition pos:start="303:20" pos:end="303:51">(<expr pos:start="303:21" pos:end="303:50"><name pos:start="303:21" pos:end="303:34"><name pos:start="303:21" pos:end="303:25">codec</name><operator pos:start="303:26" pos:end="303:27">-&gt;</operator><name pos:start="303:28" pos:end="303:34">pix_fmt</name></name> <operator pos:start="303:36" pos:end="303:37">==</operator> <name pos:start="303:39" pos:end="303:50">PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="305:21" pos:end="305:53"><block_content pos:start="305:21" pos:end="305:53">

                    <expr_stmt pos:start="305:21" pos:end="305:53"><expr pos:start="305:21" pos:end="305:52"><name pos:start="305:21" pos:end="305:34"><name pos:start="305:21" pos:end="305:25">codec</name><operator pos:start="305:26" pos:end="305:27">-&gt;</operator><name pos:start="305:28" pos:end="305:34">pix_fmt</name></name> <operator pos:start="305:36" pos:end="305:36">=</operator> <name pos:start="305:38" pos:end="305:52"><name pos:start="305:38" pos:end="305:43">icodec</name><operator pos:start="305:44" pos:end="305:45">-&gt;</operator><name pos:start="305:46" pos:end="305:52">pix_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:52"><expr pos:start="307:17" pos:end="307:51"><call pos:start="307:17" pos:end="307:51"><name pos:start="307:17" pos:end="307:32">choose_pixel_fmt</name><argument_list pos:start="307:33" pos:end="307:51">(<argument pos:start="307:34" pos:end="307:40"><expr pos:start="307:34" pos:end="307:40"><name pos:start="307:34" pos:end="307:40"><name pos:start="307:34" pos:end="307:36">ost</name><operator pos:start="307:37" pos:end="307:38">-&gt;</operator><name pos:start="307:39" pos:end="307:40">st</name></name></expr></argument>, <argument pos:start="307:43" pos:end="307:50"><expr pos:start="307:43" pos:end="307:50"><name pos:start="307:43" pos:end="307:50"><name pos:start="307:43" pos:end="307:45">ost</name><operator pos:start="307:46" pos:end="307:47">-&gt;</operator><name pos:start="307:48" pos:end="307:50">enc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="311:17" pos:end="317:17"><if pos:start="311:17" pos:end="317:17">if <condition pos:start="311:20" pos:end="311:60">(<expr pos:start="311:21" pos:end="311:59"><name pos:start="311:21" pos:end="311:43"><name pos:start="311:21" pos:end="311:23">ost</name><operator pos:start="311:24" pos:end="311:25">-&gt;</operator><name pos:start="311:26" pos:end="311:27">st</name><operator pos:start="311:28" pos:end="311:29">-&gt;</operator><name pos:start="311:30" pos:end="311:34">codec</name><operator pos:start="311:35" pos:end="311:36">-&gt;</operator><name pos:start="311:37" pos:end="311:43">pix_fmt</name></name> <operator pos:start="311:45" pos:end="311:46">==</operator> <name pos:start="311:48" pos:end="311:59">PIX_FMT_NONE</name></expr>)</condition> <block pos:start="311:62" pos:end="317:17">{<block_content pos:start="313:21" pos:end="315:36">

                    <expr_stmt pos:start="313:21" pos:end="313:97"><expr pos:start="313:21" pos:end="313:96"><call pos:start="313:21" pos:end="313:96"><name pos:start="313:21" pos:end="313:27">fprintf</name><argument_list pos:start="313:28" pos:end="313:96">(<argument pos:start="313:29" pos:end="313:34"><expr pos:start="313:29" pos:end="313:34"><name pos:start="313:29" pos:end="313:34">stderr</name></expr></argument>, <argument pos:start="313:37" pos:end="313:95"><expr pos:start="313:37" pos:end="313:95"><literal type="string" pos:start="313:37" pos:end="313:95">"Video pixel format is unknown, stream cannot be encoded\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="315:21" pos:end="315:36"><expr pos:start="315:21" pos:end="315:35"><call pos:start="315:21" pos:end="315:35"><name pos:start="315:21" pos:end="315:32">exit_program</name><argument_list pos:start="315:33" pos:end="315:35">(<argument pos:start="315:34" pos:end="315:34"><expr pos:start="315:34" pos:end="315:34"><literal type="number" pos:start="315:34" pos:end="315:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="321:17" pos:end="327:17"><if pos:start="321:17" pos:end="327:17">if <condition pos:start="321:20" pos:end="321:52">(<expr pos:start="321:21" pos:end="321:51"><operator pos:start="321:21" pos:end="321:21">!</operator><name pos:start="321:22" pos:end="321:33"><name pos:start="321:22" pos:end="321:26">codec</name><operator pos:start="321:27" pos:end="321:28">-&gt;</operator><name pos:start="321:29" pos:end="321:33">width</name></name> <operator pos:start="321:35" pos:end="321:36">||</operator> <operator pos:start="321:38" pos:end="321:38">!</operator><name pos:start="321:39" pos:end="321:51"><name pos:start="321:39" pos:end="321:43">codec</name><operator pos:start="321:44" pos:end="321:45">-&gt;</operator><name pos:start="321:46" pos:end="321:51">height</name></name></expr>)</condition> <block pos:start="321:54" pos:end="327:17">{<block_content pos:start="323:21" pos:end="325:51">

                    <expr_stmt pos:start="323:21" pos:end="323:50"><expr pos:start="323:21" pos:end="323:49"><name pos:start="323:21" pos:end="323:32"><name pos:start="323:21" pos:end="323:25">codec</name><operator pos:start="323:26" pos:end="323:27">-&gt;</operator><name pos:start="323:28" pos:end="323:32">width</name></name>  <operator pos:start="323:35" pos:end="323:35">=</operator> <name pos:start="323:37" pos:end="323:49"><name pos:start="323:37" pos:end="323:42">icodec</name><operator pos:start="323:43" pos:end="323:44">-&gt;</operator><name pos:start="323:45" pos:end="323:49">width</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="325:21" pos:end="325:51"><expr pos:start="325:21" pos:end="325:50"><name pos:start="325:21" pos:end="325:33"><name pos:start="325:21" pos:end="325:25">codec</name><operator pos:start="325:26" pos:end="325:27">-&gt;</operator><name pos:start="325:28" pos:end="325:33">height</name></name> <operator pos:start="325:35" pos:end="325:35">=</operator> <name pos:start="325:37" pos:end="325:50"><name pos:start="325:37" pos:end="325:42">icodec</name><operator pos:start="325:43" pos:end="325:44">-&gt;</operator><name pos:start="325:45" pos:end="325:50">height</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="331:17" pos:end="335:72"><expr pos:start="331:17" pos:end="335:71"><name pos:start="331:17" pos:end="331:35"><name pos:start="331:17" pos:end="331:19">ost</name><operator pos:start="331:20" pos:end="331:21">-&gt;</operator><name pos:start="331:22" pos:end="331:35">video_resample</name></name> <operator pos:start="331:37" pos:end="331:37">=</operator> <name pos:start="331:39" pos:end="331:50"><name pos:start="331:39" pos:end="331:43">codec</name><operator pos:start="331:44" pos:end="331:45">-&gt;</operator><name pos:start="331:46" pos:end="331:50">width</name></name>   <operator pos:start="331:54" pos:end="331:55">!=</operator> <name pos:start="331:57" pos:end="331:69"><name pos:start="331:57" pos:end="331:62">icodec</name><operator pos:start="331:63" pos:end="331:64">-&gt;</operator><name pos:start="331:65" pos:end="331:69">width</name></name>  <operator pos:start="331:72" pos:end="331:73">||</operator>

                                      <name pos:start="333:39" pos:end="333:51"><name pos:start="333:39" pos:end="333:43">codec</name><operator pos:start="333:44" pos:end="333:45">-&gt;</operator><name pos:start="333:46" pos:end="333:51">height</name></name>  <operator pos:start="333:54" pos:end="333:55">!=</operator> <name pos:start="333:57" pos:end="333:70"><name pos:start="333:57" pos:end="333:62">icodec</name><operator pos:start="333:63" pos:end="333:64">-&gt;</operator><name pos:start="333:65" pos:end="333:70">height</name></name> <operator pos:start="333:72" pos:end="333:73">||</operator>

                                      <name pos:start="335:39" pos:end="335:52"><name pos:start="335:39" pos:end="335:43">codec</name><operator pos:start="335:44" pos:end="335:45">-&gt;</operator><name pos:start="335:46" pos:end="335:52">pix_fmt</name></name> <operator pos:start="335:54" pos:end="335:55">!=</operator> <name pos:start="335:57" pos:end="335:71"><name pos:start="335:57" pos:end="335:62">icodec</name><operator pos:start="335:63" pos:end="335:64">-&gt;</operator><name pos:start="335:65" pos:end="335:71">pix_fmt</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="337:17" pos:end="381:17"><if pos:start="337:17" pos:end="381:17">if <condition pos:start="337:20" pos:end="337:40">(<expr pos:start="337:21" pos:end="337:39"><name pos:start="337:21" pos:end="337:39"><name pos:start="337:21" pos:end="337:23">ost</name><operator pos:start="337:24" pos:end="337:25">-&gt;</operator><name pos:start="337:26" pos:end="337:39">video_resample</name></name></expr>)</condition> <block pos:start="337:42" pos:end="381:17">{<block_content pos:start="341:21" pos:end="379:50">

<cpp:if pos:start="339:1" pos:end="339:20">#<cpp:directive pos:start="339:2" pos:end="339:3">if</cpp:directive> <expr pos:start="339:5" pos:end="339:20"><operator pos:start="339:5" pos:end="339:5">!</operator><name pos:start="339:6" pos:end="339:20">CONFIG_AVFILTER</name></expr></cpp:if>

                    <expr_stmt pos:start="341:21" pos:end="341:63"><expr pos:start="341:21" pos:end="341:62"><call pos:start="341:21" pos:end="341:62"><name pos:start="341:21" pos:end="341:46">avcodec_get_frame_defaults</name><argument_list pos:start="341:47" pos:end="341:62">(<argument pos:start="341:48" pos:end="341:61"><expr pos:start="341:48" pos:end="341:61"><operator pos:start="341:48" pos:end="341:48">&amp;</operator><name pos:start="341:49" pos:end="341:61"><name pos:start="341:49" pos:end="341:51">ost</name><operator pos:start="341:52" pos:end="341:53">-&gt;</operator><name pos:start="341:54" pos:end="341:61">pict_tmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="343:21" pos:end="351:21"><if pos:start="343:21" pos:end="351:21">if<condition pos:start="343:23" pos:end="345:68">(<expr pos:start="343:24" pos:end="345:67"><call pos:start="343:24" pos:end="345:67"><name pos:start="343:24" pos:end="343:38">avpicture_alloc</name><argument_list pos:start="343:39" pos:end="345:67">(<argument pos:start="343:40" pos:end="343:65"><expr pos:start="343:40" pos:end="343:65"><operator pos:start="343:40" pos:end="343:40">(</operator><name pos:start="343:41" pos:end="343:49">AVPicture</name><operator pos:start="343:50" pos:end="343:50">*</operator><operator pos:start="343:51" pos:end="343:51">)</operator><operator pos:start="343:52" pos:end="343:52">&amp;</operator><name pos:start="343:53" pos:end="343:65"><name pos:start="343:53" pos:end="343:55">ost</name><operator pos:start="343:56" pos:end="343:57">-&gt;</operator><name pos:start="343:58" pos:end="343:65">pict_tmp</name></name></expr></argument>, <argument pos:start="343:68" pos:end="343:81"><expr pos:start="343:68" pos:end="343:81"><name pos:start="343:68" pos:end="343:81"><name pos:start="343:68" pos:end="343:72">codec</name><operator pos:start="343:73" pos:end="343:74">-&gt;</operator><name pos:start="343:75" pos:end="343:81">pix_fmt</name></name></expr></argument>,

                                       <argument pos:start="345:40" pos:end="345:51"><expr pos:start="345:40" pos:end="345:51"><name pos:start="345:40" pos:end="345:51"><name pos:start="345:40" pos:end="345:44">codec</name><operator pos:start="345:45" pos:end="345:46">-&gt;</operator><name pos:start="345:47" pos:end="345:51">width</name></name></expr></argument>, <argument pos:start="345:54" pos:end="345:66"><expr pos:start="345:54" pos:end="345:66"><name pos:start="345:54" pos:end="345:66"><name pos:start="345:54" pos:end="345:58">codec</name><operator pos:start="345:59" pos:end="345:60">-&gt;</operator><name pos:start="345:61" pos:end="345:66">height</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="345:70" pos:end="351:21">{<block_content pos:start="347:25" pos:end="349:40">

                        <expr_stmt pos:start="347:25" pos:end="347:89"><expr pos:start="347:25" pos:end="347:88"><call pos:start="347:25" pos:end="347:88"><name pos:start="347:25" pos:end="347:31">fprintf</name><argument_list pos:start="347:32" pos:end="347:88">(<argument pos:start="347:33" pos:end="347:38"><expr pos:start="347:33" pos:end="347:38"><name pos:start="347:33" pos:end="347:38">stderr</name></expr></argument>, <argument pos:start="347:41" pos:end="347:87"><expr pos:start="347:41" pos:end="347:87"><literal type="string" pos:start="347:41" pos:end="347:87">"Cannot allocate temp picture, check pix fmt\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="349:25" pos:end="349:40"><expr pos:start="349:25" pos:end="349:39"><call pos:start="349:25" pos:end="349:39"><name pos:start="349:25" pos:end="349:36">exit_program</name><argument_list pos:start="349:37" pos:end="349:39">(<argument pos:start="349:38" pos:end="349:38"><expr pos:start="349:38" pos:end="349:38"><literal type="number" pos:start="349:38" pos:end="349:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="353:21" pos:end="367:58"><expr pos:start="353:21" pos:end="367:57"><name pos:start="353:21" pos:end="353:41"><name pos:start="353:21" pos:end="353:23">ost</name><operator pos:start="353:24" pos:end="353:25">-&gt;</operator><name pos:start="353:26" pos:end="353:41">img_resample_ctx</name></name> <operator pos:start="353:43" pos:end="353:43">=</operator> <call pos:start="353:45" pos:end="367:57"><name pos:start="353:45" pos:end="353:58">sws_getContext</name><argument_list pos:start="353:59" pos:end="367:57">(

                        <argument pos:start="355:25" pos:end="355:37"><expr pos:start="355:25" pos:end="355:37"><name pos:start="355:25" pos:end="355:37"><name pos:start="355:25" pos:end="355:30">icodec</name><operator pos:start="355:31" pos:end="355:32">-&gt;</operator><name pos:start="355:33" pos:end="355:37">width</name></name></expr></argument>,

                        <argument pos:start="357:25" pos:end="357:38"><expr pos:start="357:25" pos:end="357:38"><name pos:start="357:25" pos:end="357:38"><name pos:start="357:25" pos:end="357:30">icodec</name><operator pos:start="357:31" pos:end="357:32">-&gt;</operator><name pos:start="357:33" pos:end="357:38">height</name></name></expr></argument>,

                        <argument pos:start="359:25" pos:end="359:39"><expr pos:start="359:25" pos:end="359:39"><name pos:start="359:25" pos:end="359:39"><name pos:start="359:25" pos:end="359:30">icodec</name><operator pos:start="359:31" pos:end="359:32">-&gt;</operator><name pos:start="359:33" pos:end="359:39">pix_fmt</name></name></expr></argument>,

                        <argument pos:start="361:25" pos:end="361:36"><expr pos:start="361:25" pos:end="361:36"><name pos:start="361:25" pos:end="361:36"><name pos:start="361:25" pos:end="361:29">codec</name><operator pos:start="361:30" pos:end="361:31">-&gt;</operator><name pos:start="361:32" pos:end="361:36">width</name></name></expr></argument>,

                        <argument pos:start="363:25" pos:end="363:37"><expr pos:start="363:25" pos:end="363:37"><name pos:start="363:25" pos:end="363:37"><name pos:start="363:25" pos:end="363:29">codec</name><operator pos:start="363:30" pos:end="363:31">-&gt;</operator><name pos:start="363:32" pos:end="363:37">height</name></name></expr></argument>,

                        <argument pos:start="365:25" pos:end="365:38"><expr pos:start="365:25" pos:end="365:38"><name pos:start="365:25" pos:end="365:38"><name pos:start="365:25" pos:end="365:29">codec</name><operator pos:start="365:30" pos:end="365:31">-&gt;</operator><name pos:start="365:32" pos:end="365:38">pix_fmt</name></name></expr></argument>,

                        <argument pos:start="367:25" pos:end="367:38"><expr pos:start="367:25" pos:end="367:38"><name pos:start="367:25" pos:end="367:38"><name pos:start="367:25" pos:end="367:27">ost</name><operator pos:start="367:28" pos:end="367:29">-&gt;</operator><name pos:start="367:30" pos:end="367:38">sws_flags</name></name></expr></argument>, <argument pos:start="367:41" pos:end="367:44"><expr pos:start="367:41" pos:end="367:44"><name pos:start="367:41" pos:end="367:44">NULL</name></expr></argument>, <argument pos:start="367:47" pos:end="367:50"><expr pos:start="367:47" pos:end="367:50"><name pos:start="367:47" pos:end="367:50">NULL</name></expr></argument>, <argument pos:start="367:53" pos:end="367:56"><expr pos:start="367:53" pos:end="367:56"><name pos:start="367:53" pos:end="367:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="369:21" pos:end="378:0"><if pos:start="369:21" pos:end="378:0">if <condition pos:start="369:24" pos:end="369:54">(<expr pos:start="369:25" pos:end="369:53"><name pos:start="369:25" pos:end="369:45"><name pos:start="369:25" pos:end="369:27">ost</name><operator pos:start="369:28" pos:end="369:29">-&gt;</operator><name pos:start="369:30" pos:end="369:45">img_resample_ctx</name></name> <operator pos:start="369:47" pos:end="369:48">==</operator> <name pos:start="369:50" pos:end="369:53">NULL</name></expr>)</condition> <block pos:start="369:56" pos:end="378:0">{<block_content pos:start="371:25" pos:end="373:40">

                        <expr_stmt pos:start="371:25" pos:end="371:75"><expr pos:start="371:25" pos:end="371:74"><call pos:start="371:25" pos:end="371:74"><name pos:start="371:25" pos:end="371:31">fprintf</name><argument_list pos:start="371:32" pos:end="371:74">(<argument pos:start="371:33" pos:end="371:38"><expr pos:start="371:33" pos:end="371:38"><name pos:start="371:33" pos:end="371:38">stderr</name></expr></argument>, <argument pos:start="371:41" pos:end="371:73"><expr pos:start="371:41" pos:end="371:73"><literal type="string" pos:start="371:41" pos:end="371:73">"Cannot get resampling context\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="373:25" pos:end="373:40"><expr pos:start="373:25" pos:end="373:39"><call pos:start="373:25" pos:end="373:39"><name pos:start="373:25" pos:end="373:36">exit_program</name><argument_list pos:start="373:37" pos:end="373:39">(<argument pos:start="373:38" pos:end="373:38"><expr pos:start="373:38" pos:end="373:38"><literal type="number" pos:start="373:38" pos:end="373:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="377:1" pos:end="377:6">#<cpp:directive pos:start="377:2" pos:end="377:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="379:21" pos:end="379:50"><expr pos:start="379:21" pos:end="379:49"><name pos:start="379:21" pos:end="379:46"><name pos:start="379:21" pos:end="379:25">codec</name><operator pos:start="379:26" pos:end="379:27">-&gt;</operator><name pos:start="379:28" pos:end="379:46">bits_per_raw_sample</name></name><operator pos:start="379:47" pos:end="379:47">=</operator> <literal type="number" pos:start="379:49" pos:end="379:49">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="385:17" pos:end="385:54"><expr pos:start="385:17" pos:end="385:53"><name pos:start="385:17" pos:end="385:36"><name pos:start="385:17" pos:end="385:19">ost</name><operator pos:start="385:20" pos:end="385:21">-&gt;</operator><name pos:start="385:22" pos:end="385:36">resample_height</name></name> <operator pos:start="385:38" pos:end="385:38">=</operator> <name pos:start="385:40" pos:end="385:53"><name pos:start="385:40" pos:end="385:45">icodec</name><operator pos:start="385:46" pos:end="385:47">-&gt;</operator><name pos:start="385:48" pos:end="385:53">height</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="387:17" pos:end="387:53"><expr pos:start="387:17" pos:end="387:52"><name pos:start="387:17" pos:end="387:35"><name pos:start="387:17" pos:end="387:19">ost</name><operator pos:start="387:20" pos:end="387:21">-&gt;</operator><name pos:start="387:22" pos:end="387:35">resample_width</name></name>  <operator pos:start="387:38" pos:end="387:38">=</operator> <name pos:start="387:40" pos:end="387:52"><name pos:start="387:40" pos:end="387:45">icodec</name><operator pos:start="387:46" pos:end="387:47">-&gt;</operator><name pos:start="387:48" pos:end="387:52">width</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="389:17" pos:end="389:55"><expr pos:start="389:17" pos:end="389:54"><name pos:start="389:17" pos:end="389:37"><name pos:start="389:17" pos:end="389:19">ost</name><operator pos:start="389:20" pos:end="389:21">-&gt;</operator><name pos:start="389:22" pos:end="389:37">resample_pix_fmt</name></name><operator pos:start="389:38" pos:end="389:38">=</operator> <name pos:start="389:40" pos:end="389:54"><name pos:start="389:40" pos:end="389:45">icodec</name><operator pos:start="389:46" pos:end="389:47">-&gt;</operator><name pos:start="389:48" pos:end="389:54">pix_fmt</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="391:17" pos:end="391:41"><expr pos:start="391:17" pos:end="391:40"><name pos:start="391:17" pos:end="391:36"><name pos:start="391:17" pos:end="391:19">ost</name><operator pos:start="391:20" pos:end="391:21">-&gt;</operator><name pos:start="391:22" pos:end="391:36">encoding_needed</name></name> <operator pos:start="391:38" pos:end="391:38">=</operator> <literal type="number" pos:start="391:40" pos:end="391:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="393:17" pos:end="393:41"><expr pos:start="393:17" pos:end="393:40"><name pos:start="393:17" pos:end="393:36"><name pos:start="393:17" pos:end="393:19">ist</name><operator pos:start="393:20" pos:end="393:21">-&gt;</operator><name pos:start="393:22" pos:end="393:36">decoding_needed</name></name> <operator pos:start="393:38" pos:end="393:38">=</operator> <literal type="number" pos:start="393:40" pos:end="393:40">1</literal></expr>;</expr_stmt>



                <if_stmt pos:start="397:17" pos:end="399:109"><if pos:start="397:17" pos:end="399:109">if <condition pos:start="397:20" pos:end="397:41">(<expr pos:start="397:21" pos:end="397:40"><operator pos:start="397:21" pos:end="397:21">!</operator><name pos:start="397:22" pos:end="397:40"><name pos:start="397:22" pos:end="397:24">ost</name><operator pos:start="397:25" pos:end="397:26">-&gt;</operator><name pos:start="397:27" pos:end="397:36">frame_rate</name><operator pos:start="397:37" pos:end="397:37">.</operator><name pos:start="397:38" pos:end="397:40">num</name></name></expr>)</condition><block type="pseudo" pos:start="399:21" pos:end="399:109"><block_content pos:start="399:21" pos:end="399:109">

                    <expr_stmt pos:start="399:21" pos:end="399:109"><expr pos:start="399:21" pos:end="399:108"><name pos:start="399:21" pos:end="399:35"><name pos:start="399:21" pos:end="399:23">ost</name><operator pos:start="399:24" pos:end="399:25">-&gt;</operator><name pos:start="399:26" pos:end="399:35">frame_rate</name></name> <operator pos:start="399:37" pos:end="399:37">=</operator> <ternary pos:start="399:39" pos:end="399:108"><condition pos:start="399:39" pos:end="399:65"><expr pos:start="399:39" pos:end="399:63"><name pos:start="399:39" pos:end="399:63"><name pos:start="399:39" pos:end="399:41">ist</name><operator pos:start="399:42" pos:end="399:43">-&gt;</operator><name pos:start="399:44" pos:end="399:45">st</name><operator pos:start="399:46" pos:end="399:47">-&gt;</operator><name pos:start="399:48" pos:end="399:59">r_frame_rate</name><operator pos:start="399:60" pos:end="399:60">.</operator><name pos:start="399:61" pos:end="399:63">num</name></name></expr> ?</condition><then pos:start="399:67" pos:end="399:87"> <expr pos:start="399:67" pos:end="399:87"><name pos:start="399:67" pos:end="399:87"><name pos:start="399:67" pos:end="399:69">ist</name><operator pos:start="399:70" pos:end="399:71">-&gt;</operator><name pos:start="399:72" pos:end="399:73">st</name><operator pos:start="399:74" pos:end="399:75">-&gt;</operator><name pos:start="399:76" pos:end="399:87">r_frame_rate</name></name></expr> </then><else pos:start="399:89" pos:end="399:108">: <expr pos:start="399:91" pos:end="399:108"><operator pos:start="399:91" pos:end="399:91">(</operator><name pos:start="399:92" pos:end="399:101">AVRational</name><operator pos:start="399:102" pos:end="399:102">)</operator><block pos:start="399:103" pos:end="399:108">{<expr pos:start="399:104" pos:end="399:105"><literal type="number" pos:start="399:104" pos:end="399:105">25</literal></expr>,<expr pos:start="399:107" pos:end="399:107"><literal type="number" pos:start="399:107" pos:end="399:107">1</literal></expr>}</block></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="401:17" pos:end="407:17"><if pos:start="401:17" pos:end="407:17">if <condition pos:start="401:20" pos:end="401:77">(<expr pos:start="401:21" pos:end="401:76"><name pos:start="401:21" pos:end="401:28"><name pos:start="401:21" pos:end="401:23">ost</name><operator pos:start="401:24" pos:end="401:25">-&gt;</operator><name pos:start="401:26" pos:end="401:28">enc</name></name> <operator pos:start="401:30" pos:end="401:31">&amp;&amp;</operator> <name pos:start="401:33" pos:end="401:62"><name pos:start="401:33" pos:end="401:35">ost</name><operator pos:start="401:36" pos:end="401:37">-&gt;</operator><name pos:start="401:38" pos:end="401:40">enc</name><operator pos:start="401:41" pos:end="401:42">-&gt;</operator><name pos:start="401:43" pos:end="401:62">supported_framerates</name></name> <operator pos:start="401:64" pos:end="401:65">&amp;&amp;</operator> <operator pos:start="401:67" pos:end="401:67">!</operator><name pos:start="401:68" pos:end="401:76">force_fps</name></expr>)</condition> <block pos:start="401:79" pos:end="407:17">{<block_content pos:start="403:21" pos:end="405:74">

                    <decl_stmt pos:start="403:21" pos:end="403:101"><decl pos:start="403:21" pos:end="403:100"><type pos:start="403:21" pos:end="403:23"><name pos:start="403:21" pos:end="403:23">int</name></type> <name pos:start="403:25" pos:end="403:27">idx</name> <init pos:start="403:29" pos:end="403:100">= <expr pos:start="403:31" pos:end="403:100"><call pos:start="403:31" pos:end="403:100"><name pos:start="403:31" pos:end="403:51">av_find_nearest_q_idx</name><argument_list pos:start="403:52" pos:end="403:100">(<argument pos:start="403:53" pos:end="403:67"><expr pos:start="403:53" pos:end="403:67"><name pos:start="403:53" pos:end="403:67"><name pos:start="403:53" pos:end="403:55">ost</name><operator pos:start="403:56" pos:end="403:57">-&gt;</operator><name pos:start="403:58" pos:end="403:67">frame_rate</name></name></expr></argument>, <argument pos:start="403:70" pos:end="403:99"><expr pos:start="403:70" pos:end="403:99"><name pos:start="403:70" pos:end="403:99"><name pos:start="403:70" pos:end="403:72">ost</name><operator pos:start="403:73" pos:end="403:74">-&gt;</operator><name pos:start="403:75" pos:end="403:77">enc</name><operator pos:start="403:78" pos:end="403:79">-&gt;</operator><name pos:start="403:80" pos:end="403:99">supported_framerates</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="405:21" pos:end="405:74"><expr pos:start="405:21" pos:end="405:73"><name pos:start="405:21" pos:end="405:35"><name pos:start="405:21" pos:end="405:23">ost</name><operator pos:start="405:24" pos:end="405:25">-&gt;</operator><name pos:start="405:26" pos:end="405:35">frame_rate</name></name> <operator pos:start="405:37" pos:end="405:37">=</operator> <name pos:start="405:39" pos:end="405:73"><name pos:start="405:39" pos:end="405:41">ost</name><operator pos:start="405:42" pos:end="405:43">-&gt;</operator><name pos:start="405:44" pos:end="405:46">enc</name><operator pos:start="405:47" pos:end="405:48">-&gt;</operator><name pos:start="405:49" pos:end="405:68">supported_framerates</name><index pos:start="405:69" pos:end="405:73">[<expr pos:start="405:70" pos:end="405:72"><name pos:start="405:70" pos:end="405:72">idx</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="409:17" pos:end="414:0"><expr pos:start="409:17" pos:end="409:89"><name pos:start="409:17" pos:end="409:32"><name pos:start="409:17" pos:end="409:21">codec</name><operator pos:start="409:22" pos:end="409:23">-&gt;</operator><name pos:start="409:24" pos:end="409:32">time_base</name></name> <operator pos:start="409:34" pos:end="409:34">=</operator> <operator pos:start="409:36" pos:end="409:36">(</operator><name pos:start="409:37" pos:end="409:46">AVRational</name><operator pos:start="409:47" pos:end="409:47">)</operator><block pos:start="409:48" pos:end="409:89">{<expr pos:start="409:49" pos:end="409:67"><name pos:start="409:49" pos:end="409:67"><name pos:start="409:49" pos:end="409:51">ost</name><operator pos:start="409:52" pos:end="409:53">-&gt;</operator><name pos:start="409:54" pos:end="409:63">frame_rate</name><operator pos:start="409:64" pos:end="409:64">.</operator><name pos:start="409:65" pos:end="409:67">den</name></name></expr>, <expr pos:start="409:70" pos:end="409:88"><name pos:start="409:70" pos:end="409:88"><name pos:start="409:70" pos:end="409:72">ost</name><operator pos:start="409:73" pos:end="409:74">-&gt;</operator><name pos:start="409:75" pos:end="409:84">frame_rate</name><operator pos:start="409:85" pos:end="409:85">.</operator><name pos:start="409:86" pos:end="409:88">num</name></name></expr>}</block></expr>;</expr_stmt>



<cpp:if pos:start="413:1" pos:end="413:19">#<cpp:directive pos:start="413:2" pos:end="413:3">if</cpp:directive> <expr pos:start="413:5" pos:end="413:19"><name pos:start="413:5" pos:end="413:19">CONFIG_AVFILTER</name></expr></cpp:if>

                <if_stmt pos:start="415:17" pos:end="424:0"><if pos:start="415:17" pos:end="424:0">if <condition pos:start="415:20" pos:end="415:54">(<expr pos:start="415:21" pos:end="415:53"><call pos:start="415:21" pos:end="415:53"><name pos:start="415:21" pos:end="415:43">configure_video_filters</name><argument_list pos:start="415:44" pos:end="415:53">(<argument pos:start="415:45" pos:end="415:47"><expr pos:start="415:45" pos:end="415:47"><name pos:start="415:45" pos:end="415:47">ist</name></expr></argument>, <argument pos:start="415:50" pos:end="415:52"><expr pos:start="415:50" pos:end="415:52"><name pos:start="415:50" pos:end="415:52">ost</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="415:56" pos:end="424:0">{<block_content pos:start="417:21" pos:end="419:28">

                    <expr_stmt pos:start="417:21" pos:end="417:64"><expr pos:start="417:21" pos:end="417:63"><call pos:start="417:21" pos:end="417:63"><name pos:start="417:21" pos:end="417:27">fprintf</name><argument_list pos:start="417:28" pos:end="417:63">(<argument pos:start="417:29" pos:end="417:34"><expr pos:start="417:29" pos:end="417:34"><name pos:start="417:29" pos:end="417:34">stderr</name></expr></argument>, <argument pos:start="417:37" pos:end="417:62"><expr pos:start="417:37" pos:end="417:62"><literal type="string" pos:start="417:37" pos:end="417:62">"Error opening filters!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="419:21" pos:end="419:28"><expr pos:start="419:21" pos:end="419:27"><call pos:start="419:21" pos:end="419:27"><name pos:start="419:21" pos:end="419:24">exit</name><argument_list pos:start="419:25" pos:end="419:27">(<argument pos:start="419:26" pos:end="419:26"><expr pos:start="419:26" pos:end="419:26"><literal type="number" pos:start="419:26" pos:end="419:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="423:1" pos:end="423:6">#<cpp:directive pos:start="423:2" pos:end="423:6">endif</cpp:directive></cpp:endif>

                <break pos:start="425:17" pos:end="425:22">break;</break>

            <case pos:start="427:13" pos:end="427:39">case <expr pos:start="427:18" pos:end="427:38"><name pos:start="427:18" pos:end="427:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="429:17" pos:end="429:41"><expr pos:start="429:17" pos:end="429:40"><name pos:start="429:17" pos:end="429:36"><name pos:start="429:17" pos:end="429:19">ost</name><operator pos:start="429:20" pos:end="429:21">-&gt;</operator><name pos:start="429:22" pos:end="429:36">encoding_needed</name></name> <operator pos:start="429:38" pos:end="429:38">=</operator> <literal type="number" pos:start="429:40" pos:end="429:40">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="431:17" pos:end="431:41"><expr pos:start="431:17" pos:end="431:40"><name pos:start="431:17" pos:end="431:36"><name pos:start="431:17" pos:end="431:19">ist</name><operator pos:start="431:20" pos:end="431:21">-&gt;</operator><name pos:start="431:22" pos:end="431:36">decoding_needed</name></name> <operator pos:start="431:38" pos:end="431:38">=</operator> <literal type="number" pos:start="431:40" pos:end="431:40">1</literal></expr>;</expr_stmt>

                <break pos:start="433:17" pos:end="433:22">break;</break>

            <default pos:start="435:13" pos:end="435:20">default:</default>

                <expr_stmt pos:start="437:17" pos:end="437:24"><expr pos:start="437:17" pos:end="437:23"><call pos:start="437:17" pos:end="437:23"><name pos:start="437:17" pos:end="437:21">abort</name><argument_list pos:start="437:22" pos:end="437:23">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="439:17" pos:end="439:22">break;</break>

            </block_content>}</block></switch>

            <comment type="block" pos:start="443:13" pos:end="443:31">/* two pass mode */</comment>

            <if_stmt pos:start="445:13" pos:end="493:13"><if pos:start="445:13" pos:end="493:13">if <condition pos:start="445:16" pos:end="447:71">(<expr pos:start="445:17" pos:end="447:70"><name pos:start="445:17" pos:end="445:36"><name pos:start="445:17" pos:end="445:19">ost</name><operator pos:start="445:20" pos:end="445:21">-&gt;</operator><name pos:start="445:22" pos:end="445:36">encoding_needed</name></name> <operator pos:start="445:38" pos:end="445:39">&amp;&amp;</operator>

                <operator pos:start="447:17" pos:end="447:17">(</operator><name pos:start="447:18" pos:end="447:29"><name pos:start="447:18" pos:end="447:22">codec</name><operator pos:start="447:23" pos:end="447:24">-&gt;</operator><name pos:start="447:25" pos:end="447:29">flags</name></name> <operator pos:start="447:31" pos:end="447:31">&amp;</operator> <operator pos:start="447:33" pos:end="447:33">(</operator><name pos:start="447:34" pos:end="447:49">CODEC_FLAG_PASS1</name> <operator pos:start="447:51" pos:end="447:51">|</operator> <name pos:start="447:53" pos:end="447:68">CODEC_FLAG_PASS2</name><operator pos:start="447:69" pos:end="447:69">)</operator><operator pos:start="447:70" pos:end="447:70">)</operator></expr>)</condition> <block pos:start="447:73" pos:end="493:13">{<block_content pos:start="449:17" pos:end="491:17">

                <decl_stmt pos:start="449:17" pos:end="449:39"><decl pos:start="449:17" pos:end="449:38"><type pos:start="449:17" pos:end="449:20"><name pos:start="449:17" pos:end="449:20">char</name></type> <name pos:start="449:22" pos:end="449:38"><name pos:start="449:22" pos:end="449:32">logfilename</name><index pos:start="449:33" pos:end="449:38">[<expr pos:start="449:34" pos:end="449:37"><literal type="number" pos:start="449:34" pos:end="449:37">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="451:17" pos:end="451:24"><decl pos:start="451:17" pos:end="451:23"><type pos:start="451:17" pos:end="451:22"><name pos:start="451:17" pos:end="451:20">FILE</name> <modifier pos:start="451:22" pos:end="451:22">*</modifier></type><name pos:start="451:23" pos:end="451:23">f</name></decl>;</decl_stmt>



                <expr_stmt pos:start="455:17" pos:end="459:28"><expr pos:start="455:17" pos:end="459:27"><call pos:start="455:17" pos:end="459:27"><name pos:start="455:17" pos:end="455:24">snprintf</name><argument_list pos:start="455:25" pos:end="459:27">(<argument pos:start="455:26" pos:end="455:36"><expr pos:start="455:26" pos:end="455:36"><name pos:start="455:26" pos:end="455:36">logfilename</name></expr></argument>, <argument pos:start="455:39" pos:end="455:57"><expr pos:start="455:39" pos:end="455:57"><sizeof pos:start="455:39" pos:end="455:57">sizeof<argument_list pos:start="455:45" pos:end="455:57">(<argument pos:start="455:46" pos:end="455:56"><expr pos:start="455:46" pos:end="455:56"><name pos:start="455:46" pos:end="455:56">logfilename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="455:60" pos:end="455:70"><expr pos:start="455:60" pos:end="455:70"><literal type="string" pos:start="455:60" pos:end="455:70">"%s-%d.log"</literal></expr></argument>,

                         <argument pos:start="457:26" pos:end="457:108"><expr pos:start="457:26" pos:end="457:108"><ternary pos:start="457:26" pos:end="457:108"><condition pos:start="457:26" pos:end="457:50"><expr pos:start="457:26" pos:end="457:48"><name pos:start="457:26" pos:end="457:48">pass_logfilename_prefix</name></expr> ?</condition><then pos:start="457:52" pos:end="457:74"> <expr pos:start="457:52" pos:end="457:74"><name pos:start="457:52" pos:end="457:74">pass_logfilename_prefix</name></expr> </then><else pos:start="457:76" pos:end="457:108">: <expr pos:start="457:78" pos:end="457:108"><name pos:start="457:78" pos:end="457:108">DEFAULT_PASS_LOGFILENAME_PREFIX</name></expr></else></ternary></expr></argument>,

                         <argument pos:start="459:26" pos:end="459:26"><expr pos:start="459:26" pos:end="459:26"><name pos:start="459:26" pos:end="459:26">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="461:17" pos:end="491:17"><if pos:start="461:17" pos:end="475:17">if <condition pos:start="461:20" pos:end="461:52">(<expr pos:start="461:21" pos:end="461:51"><name pos:start="461:21" pos:end="461:32"><name pos:start="461:21" pos:end="461:25">codec</name><operator pos:start="461:26" pos:end="461:27">-&gt;</operator><name pos:start="461:28" pos:end="461:32">flags</name></name> <operator pos:start="461:34" pos:end="461:34">&amp;</operator> <name pos:start="461:36" pos:end="461:51">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="461:54" pos:end="475:17">{<block_content pos:start="463:21" pos:end="473:37">

                    <expr_stmt pos:start="463:21" pos:end="463:49"><expr pos:start="463:21" pos:end="463:48"><name pos:start="463:21" pos:end="463:21">f</name> <operator pos:start="463:23" pos:end="463:23">=</operator> <call pos:start="463:25" pos:end="463:48"><name pos:start="463:25" pos:end="463:29">fopen</name><argument_list pos:start="463:30" pos:end="463:48">(<argument pos:start="463:31" pos:end="463:41"><expr pos:start="463:31" pos:end="463:41"><name pos:start="463:31" pos:end="463:41">logfilename</name></expr></argument>, <argument pos:start="463:44" pos:end="463:47"><expr pos:start="463:44" pos:end="463:47"><literal type="string" pos:start="463:44" pos:end="463:47">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="465:21" pos:end="471:21"><if pos:start="465:21" pos:end="471:21">if <condition pos:start="465:24" pos:end="465:27">(<expr pos:start="465:25" pos:end="465:26"><operator pos:start="465:25" pos:end="465:25">!</operator><name pos:start="465:26" pos:end="465:26">f</name></expr>)</condition> <block pos:start="465:29" pos:end="471:21">{<block_content pos:start="467:25" pos:end="469:40">

                        <expr_stmt pos:start="467:25" pos:end="467:126"><expr pos:start="467:25" pos:end="467:125"><call pos:start="467:25" pos:end="467:125"><name pos:start="467:25" pos:end="467:31">fprintf</name><argument_list pos:start="467:32" pos:end="467:125">(<argument pos:start="467:33" pos:end="467:38"><expr pos:start="467:33" pos:end="467:38"><name pos:start="467:33" pos:end="467:38">stderr</name></expr></argument>, <argument pos:start="467:41" pos:end="467:94"><expr pos:start="467:41" pos:end="467:94"><literal type="string" pos:start="467:41" pos:end="467:94">"Cannot write log file '%s' for pass-1 encoding: %s\n"</literal></expr></argument>, <argument pos:start="467:97" pos:end="467:107"><expr pos:start="467:97" pos:end="467:107"><name pos:start="467:97" pos:end="467:107">logfilename</name></expr></argument>, <argument pos:start="467:110" pos:end="467:124"><expr pos:start="467:110" pos:end="467:124"><call pos:start="467:110" pos:end="467:124"><name pos:start="467:110" pos:end="467:117">strerror</name><argument_list pos:start="467:118" pos:end="467:124">(<argument pos:start="467:119" pos:end="467:123"><expr pos:start="467:119" pos:end="467:123"><name pos:start="467:119" pos:end="467:123">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="469:25" pos:end="469:40"><expr pos:start="469:25" pos:end="469:39"><call pos:start="469:25" pos:end="469:39"><name pos:start="469:25" pos:end="469:36">exit_program</name><argument_list pos:start="469:37" pos:end="469:39">(<argument pos:start="469:38" pos:end="469:38"><expr pos:start="469:38" pos:end="469:38"><literal type="number" pos:start="469:38" pos:end="469:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="473:21" pos:end="473:37"><expr pos:start="473:21" pos:end="473:36"><name pos:start="473:21" pos:end="473:32"><name pos:start="473:21" pos:end="473:23">ost</name><operator pos:start="473:24" pos:end="473:25">-&gt;</operator><name pos:start="473:26" pos:end="473:32">logfile</name></name> <operator pos:start="473:34" pos:end="473:34">=</operator> <name pos:start="473:36" pos:end="473:36">f</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="475:19" pos:end="491:17">else <block pos:start="475:24" pos:end="491:17">{<block_content pos:start="477:21" pos:end="489:48">

                    <decl_stmt pos:start="477:21" pos:end="477:37"><decl pos:start="477:21" pos:end="477:36"><type pos:start="477:21" pos:end="477:27"><name pos:start="477:21" pos:end="477:24">char</name>  <modifier pos:start="477:27" pos:end="477:27">*</modifier></type><name pos:start="477:28" pos:end="477:36">logbuffer</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="479:21" pos:end="479:42"><decl pos:start="479:21" pos:end="479:41"><type pos:start="479:21" pos:end="479:26"><name pos:start="479:21" pos:end="479:26">size_t</name></type> <name pos:start="479:28" pos:end="479:41">logbuffer_size</name></decl>;</decl_stmt>

                    <if_stmt pos:start="481:21" pos:end="487:21"><if pos:start="481:21" pos:end="487:21">if <condition pos:start="481:24" pos:end="481:80">(<expr pos:start="481:25" pos:end="481:79"><call pos:start="481:25" pos:end="481:75"><name pos:start="481:25" pos:end="481:33">read_file</name><argument_list pos:start="481:34" pos:end="481:75">(<argument pos:start="481:35" pos:end="481:45"><expr pos:start="481:35" pos:end="481:45"><name pos:start="481:35" pos:end="481:45">logfilename</name></expr></argument>, <argument pos:start="481:48" pos:end="481:57"><expr pos:start="481:48" pos:end="481:57"><operator pos:start="481:48" pos:end="481:48">&amp;</operator><name pos:start="481:49" pos:end="481:57">logbuffer</name></expr></argument>, <argument pos:start="481:60" pos:end="481:74"><expr pos:start="481:60" pos:end="481:74"><operator pos:start="481:60" pos:end="481:60">&amp;</operator><name pos:start="481:61" pos:end="481:74">logbuffer_size</name></expr></argument>)</argument_list></call> <operator pos:start="481:77" pos:end="481:77">&lt;</operator> <literal type="number" pos:start="481:79" pos:end="481:79">0</literal></expr>)</condition> <block pos:start="481:82" pos:end="487:21">{<block_content pos:start="483:25" pos:end="485:40">

                        <expr_stmt pos:start="483:25" pos:end="483:106"><expr pos:start="483:25" pos:end="483:105"><call pos:start="483:25" pos:end="483:105"><name pos:start="483:25" pos:end="483:31">fprintf</name><argument_list pos:start="483:32" pos:end="483:105">(<argument pos:start="483:33" pos:end="483:38"><expr pos:start="483:33" pos:end="483:38"><name pos:start="483:33" pos:end="483:38">stderr</name></expr></argument>, <argument pos:start="483:41" pos:end="483:91"><expr pos:start="483:41" pos:end="483:91"><literal type="string" pos:start="483:41" pos:end="483:91">"Error reading log file '%s' for pass-2 encoding\n"</literal></expr></argument>, <argument pos:start="483:94" pos:end="483:104"><expr pos:start="483:94" pos:end="483:104"><name pos:start="483:94" pos:end="483:104">logfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="485:25" pos:end="485:40"><expr pos:start="485:25" pos:end="485:39"><call pos:start="485:25" pos:end="485:39"><name pos:start="485:25" pos:end="485:36">exit_program</name><argument_list pos:start="485:37" pos:end="485:39">(<argument pos:start="485:38" pos:end="485:38"><expr pos:start="485:38" pos:end="485:38"><literal type="number" pos:start="485:38" pos:end="485:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="489:21" pos:end="489:48"><expr pos:start="489:21" pos:end="489:47"><name pos:start="489:21" pos:end="489:35"><name pos:start="489:21" pos:end="489:25">codec</name><operator pos:start="489:26" pos:end="489:27">-&gt;</operator><name pos:start="489:28" pos:end="489:35">stats_in</name></name> <operator pos:start="489:37" pos:end="489:37">=</operator> <name pos:start="489:39" pos:end="489:47">logbuffer</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="497:9" pos:end="503:9"><if pos:start="497:9" pos:end="503:9">if<condition pos:start="497:11" pos:end="497:51">(<expr pos:start="497:12" pos:end="497:50"><name pos:start="497:12" pos:end="497:28"><name pos:start="497:12" pos:end="497:16">codec</name><operator pos:start="497:17" pos:end="497:18">-&gt;</operator><name pos:start="497:19" pos:end="497:28">codec_type</name></name> <operator pos:start="497:30" pos:end="497:31">==</operator> <name pos:start="497:33" pos:end="497:50">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block pos:start="497:52" pos:end="503:9">{<block_content pos:start="499:13" pos:end="501:66">

            <decl_stmt pos:start="499:13" pos:end="499:51"><decl pos:start="499:13" pos:end="499:50"><type pos:start="499:13" pos:end="499:15"><name pos:start="499:13" pos:end="499:15">int</name></type> <name pos:start="499:17" pos:end="499:20">size</name><init pos:start="499:21" pos:end="499:50">= <expr pos:start="499:23" pos:end="499:50"><name pos:start="499:23" pos:end="499:34"><name pos:start="499:23" pos:end="499:27">codec</name><operator pos:start="499:28" pos:end="499:29">-&gt;</operator><name pos:start="499:30" pos:end="499:34">width</name></name> <operator pos:start="499:36" pos:end="499:36">*</operator> <name pos:start="499:38" pos:end="499:50"><name pos:start="499:38" pos:end="499:42">codec</name><operator pos:start="499:43" pos:end="499:44">-&gt;</operator><name pos:start="499:45" pos:end="499:50">height</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="501:13" pos:end="501:66"><expr pos:start="501:13" pos:end="501:65"><name pos:start="501:13" pos:end="501:27">bit_buffer_size</name><operator pos:start="501:28" pos:end="501:28">=</operator> <call pos:start="501:30" pos:end="501:65"><name pos:start="501:30" pos:end="501:34">FFMAX</name><argument_list pos:start="501:35" pos:end="501:65">(<argument pos:start="501:36" pos:end="501:50"><expr pos:start="501:36" pos:end="501:50"><name pos:start="501:36" pos:end="501:50">bit_buffer_size</name></expr></argument>, <argument pos:start="501:53" pos:end="501:64"><expr pos:start="501:53" pos:end="501:64"><literal type="number" pos:start="501:53" pos:end="501:53">6</literal><operator pos:start="501:54" pos:end="501:54">*</operator><name pos:start="501:55" pos:end="501:58">size</name> <operator pos:start="501:60" pos:end="501:60">+</operator> <literal type="number" pos:start="501:62" pos:end="501:64">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="509:5" pos:end="511:48"><if pos:start="509:5" pos:end="511:48">if <condition pos:start="509:8" pos:end="509:20">(<expr pos:start="509:9" pos:end="509:19"><operator pos:start="509:9" pos:end="509:9">!</operator><name pos:start="509:10" pos:end="509:19">bit_buffer</name></expr>)</condition><block type="pseudo" pos:start="511:9" pos:end="511:48"><block_content pos:start="511:9" pos:end="511:48">

        <expr_stmt pos:start="511:9" pos:end="511:48"><expr pos:start="511:9" pos:end="511:47"><name pos:start="511:9" pos:end="511:18">bit_buffer</name> <operator pos:start="511:20" pos:end="511:20">=</operator> <call pos:start="511:22" pos:end="511:47"><name pos:start="511:22" pos:end="511:30">av_malloc</name><argument_list pos:start="511:31" pos:end="511:47">(<argument pos:start="511:32" pos:end="511:46"><expr pos:start="511:32" pos:end="511:46"><name pos:start="511:32" pos:end="511:46">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="513:5" pos:end="521:5"><if pos:start="513:5" pos:end="521:5">if <condition pos:start="513:8" pos:end="513:20">(<expr pos:start="513:9" pos:end="513:19"><operator pos:start="513:9" pos:end="513:9">!</operator><name pos:start="513:10" pos:end="513:19">bit_buffer</name></expr>)</condition> <block pos:start="513:22" pos:end="521:5">{<block_content pos:start="515:9" pos:end="519:31">

        <expr_stmt pos:start="515:9" pos:end="517:33"><expr pos:start="515:9" pos:end="517:32"><call pos:start="515:9" pos:end="517:32"><name pos:start="515:9" pos:end="515:15">fprintf</name><argument_list pos:start="515:16" pos:end="517:32">(<argument pos:start="515:17" pos:end="515:22"><expr pos:start="515:17" pos:end="515:22"><name pos:start="515:17" pos:end="515:22">stderr</name></expr></argument>, <argument pos:start="515:25" pos:end="515:66"><expr pos:start="515:25" pos:end="515:66"><literal type="string" pos:start="515:25" pos:end="515:66">"Cannot allocate %d bytes output buffer\n"</literal></expr></argument>,

                <argument pos:start="517:17" pos:end="517:31"><expr pos:start="517:17" pos:end="517:31"><name pos:start="517:17" pos:end="517:31">bit_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="519:9" pos:end="519:31">return <expr pos:start="519:16" pos:end="519:30"><call pos:start="519:16" pos:end="519:30"><name pos:start="519:16" pos:end="519:22">AVERROR</name><argument_list pos:start="519:23" pos:end="519:30">(<argument pos:start="519:24" pos:end="519:29"><expr pos:start="519:24" pos:end="519:29"><name pos:start="519:24" pos:end="519:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="525:5" pos:end="525:27">/* open each encoder */</comment>

    <for pos:start="527:5" pos:end="593:5">for <control pos:start="527:9" pos:end="527:43">(<init pos:start="527:10" pos:end="527:15"><expr pos:start="527:10" pos:end="527:14"><name pos:start="527:10" pos:end="527:10">i</name> <operator pos:start="527:12" pos:end="527:12">=</operator> <literal type="number" pos:start="527:14" pos:end="527:14">0</literal></expr>;</init> <condition pos:start="527:17" pos:end="527:38"><expr pos:start="527:17" pos:end="527:37"><name pos:start="527:17" pos:end="527:17">i</name> <operator pos:start="527:19" pos:end="527:19">&lt;</operator> <name pos:start="527:21" pos:end="527:37">nb_output_streams</name></expr>;</condition> <incr pos:start="527:40" pos:end="527:42"><expr pos:start="527:40" pos:end="527:42"><name pos:start="527:40" pos:end="527:40">i</name><operator pos:start="527:41" pos:end="527:42">++</operator></expr></incr>)</control> <block pos:start="527:45" pos:end="593:5">{<block_content pos:start="529:9" pos:end="591:9">

        <expr_stmt pos:start="529:9" pos:end="529:33"><expr pos:start="529:9" pos:end="529:32"><name pos:start="529:9" pos:end="529:11">ost</name> <operator pos:start="529:13" pos:end="529:13">=</operator> <operator pos:start="529:15" pos:end="529:15">&amp;</operator><name pos:start="529:16" pos:end="529:32"><name pos:start="529:16" pos:end="529:29">output_streams</name><index pos:start="529:30" pos:end="529:32">[<expr pos:start="529:31" pos:end="529:31"><name pos:start="529:31" pos:end="529:31">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="531:9" pos:end="591:9"><if pos:start="531:9" pos:end="591:9">if <condition pos:start="531:12" pos:end="531:33">(<expr pos:start="531:13" pos:end="531:32"><name pos:start="531:13" pos:end="531:32"><name pos:start="531:13" pos:end="531:15">ost</name><operator pos:start="531:16" pos:end="531:17">-&gt;</operator><name pos:start="531:18" pos:end="531:32">encoding_needed</name></name></expr>)</condition> <block pos:start="531:35" pos:end="591:9">{<block_content pos:start="533:13" pos:end="589:57">

            <decl_stmt pos:start="533:13" pos:end="533:38"><decl pos:start="533:13" pos:end="533:37"><type pos:start="533:13" pos:end="533:21"><name pos:start="533:13" pos:end="533:19">AVCodec</name> <modifier pos:start="533:21" pos:end="533:21">*</modifier></type><name pos:start="533:22" pos:end="533:26">codec</name> <init pos:start="533:28" pos:end="533:37">= <expr pos:start="533:30" pos:end="533:37"><name pos:start="533:30" pos:end="533:37"><name pos:start="533:30" pos:end="533:32">ost</name><operator pos:start="533:33" pos:end="533:34">-&gt;</operator><name pos:start="533:35" pos:end="533:37">enc</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="535:13" pos:end="535:77"><decl pos:start="535:13" pos:end="535:76"><type pos:start="535:13" pos:end="535:28"><name pos:start="535:13" pos:end="535:26">AVCodecContext</name> <modifier pos:start="535:28" pos:end="535:28">*</modifier></type><name pos:start="535:29" pos:end="535:31">dec</name> <init pos:start="535:33" pos:end="535:76">= <expr pos:start="535:35" pos:end="535:76"><name pos:start="535:35" pos:end="535:66"><name pos:start="535:35" pos:end="535:47">input_streams</name><index pos:start="535:48" pos:end="535:66">[<expr pos:start="535:49" pos:end="535:65"><name pos:start="535:49" pos:end="535:65"><name pos:start="535:49" pos:end="535:51">ost</name><operator pos:start="535:52" pos:end="535:53">-&gt;</operator><name pos:start="535:54" pos:end="535:65">source_index</name></name></expr>]</index></name><operator pos:start="535:67" pos:end="535:67">.</operator><name pos:start="535:68" pos:end="535:76"><name pos:start="535:68" pos:end="535:69">st</name><operator pos:start="535:70" pos:end="535:71">-&gt;</operator><name pos:start="535:72" pos:end="535:76">codec</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="537:13" pos:end="547:13"><if pos:start="537:13" pos:end="547:13">if <condition pos:start="537:16" pos:end="537:23">(<expr pos:start="537:17" pos:end="537:22"><operator pos:start="537:17" pos:end="537:17">!</operator><name pos:start="537:18" pos:end="537:22">codec</name></expr>)</condition> <block pos:start="537:25" pos:end="547:13">{<block_content pos:start="539:17" pos:end="545:33">

                <expr_stmt pos:start="539:17" pos:end="541:80"><expr pos:start="539:17" pos:end="541:79"><call pos:start="539:17" pos:end="541:79"><name pos:start="539:17" pos:end="539:24">snprintf</name><argument_list pos:start="539:25" pos:end="541:79">(<argument pos:start="539:26" pos:end="539:30"><expr pos:start="539:26" pos:end="539:30"><name pos:start="539:26" pos:end="539:30">error</name></expr></argument>, <argument pos:start="539:33" pos:end="539:45"><expr pos:start="539:33" pos:end="539:45"><sizeof pos:start="539:33" pos:end="539:45">sizeof<argument_list pos:start="539:39" pos:end="539:45">(<argument pos:start="539:40" pos:end="539:44"><expr pos:start="539:40" pos:end="539:44"><name pos:start="539:40" pos:end="539:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="539:48" pos:end="539:105"><expr pos:start="539:48" pos:end="539:105"><literal type="string" pos:start="539:48" pos:end="539:105">"Encoder (codec id %d) not found for output stream #%d.%d"</literal></expr></argument>,

                         <argument pos:start="541:26" pos:end="541:49"><expr pos:start="541:26" pos:end="541:49"><name pos:start="541:26" pos:end="541:49"><name pos:start="541:26" pos:end="541:28">ost</name><operator pos:start="541:29" pos:end="541:30">-&gt;</operator><name pos:start="541:31" pos:end="541:32">st</name><operator pos:start="541:33" pos:end="541:34">-&gt;</operator><name pos:start="541:35" pos:end="541:39">codec</name><operator pos:start="541:40" pos:end="541:41">-&gt;</operator><name pos:start="541:42" pos:end="541:49">codec_id</name></name></expr></argument>, <argument pos:start="541:52" pos:end="541:66"><expr pos:start="541:52" pos:end="541:66"><name pos:start="541:52" pos:end="541:66"><name pos:start="541:52" pos:end="541:54">ost</name><operator pos:start="541:55" pos:end="541:56">-&gt;</operator><name pos:start="541:57" pos:end="541:66">file_index</name></name></expr></argument>, <argument pos:start="541:69" pos:end="541:78"><expr pos:start="541:69" pos:end="541:78"><name pos:start="541:69" pos:end="541:78"><name pos:start="541:69" pos:end="541:71">ost</name><operator pos:start="541:72" pos:end="541:73">-&gt;</operator><name pos:start="541:74" pos:end="541:78">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="543:17" pos:end="543:38"><expr pos:start="543:17" pos:end="543:37"><name pos:start="543:17" pos:end="543:19">ret</name> <operator pos:start="543:21" pos:end="543:21">=</operator> <call pos:start="543:23" pos:end="543:37"><name pos:start="543:23" pos:end="543:29">AVERROR</name><argument_list pos:start="543:30" pos:end="543:37">(<argument pos:start="543:31" pos:end="543:36"><expr pos:start="543:31" pos:end="543:36"><name pos:start="543:31" pos:end="543:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="545:17" pos:end="545:33">goto <name pos:start="545:22" pos:end="545:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="549:13" pos:end="565:13"><if pos:start="549:13" pos:end="565:13">if <condition pos:start="549:16" pos:end="549:37">(<expr pos:start="549:17" pos:end="549:36"><name pos:start="549:17" pos:end="549:36"><name pos:start="549:17" pos:end="549:19">dec</name><operator pos:start="549:20" pos:end="549:21">-&gt;</operator><name pos:start="549:22" pos:end="549:36">subtitle_header</name></name></expr>)</condition> <block pos:start="549:39" pos:end="565:13">{<block_content pos:start="551:17" pos:end="563:81">

                <expr_stmt pos:start="551:17" pos:end="551:87"><expr pos:start="551:17" pos:end="551:86"><name pos:start="551:17" pos:end="551:47"><name pos:start="551:17" pos:end="551:19">ost</name><operator pos:start="551:20" pos:end="551:21">-&gt;</operator><name pos:start="551:22" pos:end="551:23">st</name><operator pos:start="551:24" pos:end="551:25">-&gt;</operator><name pos:start="551:26" pos:end="551:30">codec</name><operator pos:start="551:31" pos:end="551:32">-&gt;</operator><name pos:start="551:33" pos:end="551:47">subtitle_header</name></name> <operator pos:start="551:49" pos:end="551:49">=</operator> <call pos:start="551:51" pos:end="551:86"><name pos:start="551:51" pos:end="551:59">av_malloc</name><argument_list pos:start="551:60" pos:end="551:86">(<argument pos:start="551:61" pos:end="551:85"><expr pos:start="551:61" pos:end="551:85"><name pos:start="551:61" pos:end="551:85"><name pos:start="551:61" pos:end="551:63">dec</name><operator pos:start="551:64" pos:end="551:65">-&gt;</operator><name pos:start="551:66" pos:end="551:85">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="553:17" pos:end="559:17"><if pos:start="553:17" pos:end="559:17">if <condition pos:start="553:20" pos:end="553:53">(<expr pos:start="553:21" pos:end="553:52"><operator pos:start="553:21" pos:end="553:21">!</operator><name pos:start="553:22" pos:end="553:52"><name pos:start="553:22" pos:end="553:24">ost</name><operator pos:start="553:25" pos:end="553:26">-&gt;</operator><name pos:start="553:27" pos:end="553:28">st</name><operator pos:start="553:29" pos:end="553:30">-&gt;</operator><name pos:start="553:31" pos:end="553:35">codec</name><operator pos:start="553:36" pos:end="553:37">-&gt;</operator><name pos:start="553:38" pos:end="553:52">subtitle_header</name></name></expr>)</condition> <block pos:start="553:55" pos:end="559:17">{<block_content pos:start="555:21" pos:end="557:37">

                    <expr_stmt pos:start="555:21" pos:end="555:42"><expr pos:start="555:21" pos:end="555:41"><name pos:start="555:21" pos:end="555:23">ret</name> <operator pos:start="555:25" pos:end="555:25">=</operator> <call pos:start="555:27" pos:end="555:41"><name pos:start="555:27" pos:end="555:33">AVERROR</name><argument_list pos:start="555:34" pos:end="555:41">(<argument pos:start="555:35" pos:end="555:40"><expr pos:start="555:35" pos:end="555:40"><name pos:start="555:35" pos:end="555:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="557:21" pos:end="557:37">goto <name pos:start="557:26" pos:end="557:36">dump_format</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="561:17" pos:end="561:105"><expr pos:start="561:17" pos:end="561:104"><call pos:start="561:17" pos:end="561:104"><name pos:start="561:17" pos:end="561:22">memcpy</name><argument_list pos:start="561:23" pos:end="561:104">(<argument pos:start="561:24" pos:end="561:54"><expr pos:start="561:24" pos:end="561:54"><name pos:start="561:24" pos:end="561:54"><name pos:start="561:24" pos:end="561:26">ost</name><operator pos:start="561:27" pos:end="561:28">-&gt;</operator><name pos:start="561:29" pos:end="561:30">st</name><operator pos:start="561:31" pos:end="561:32">-&gt;</operator><name pos:start="561:33" pos:end="561:37">codec</name><operator pos:start="561:38" pos:end="561:39">-&gt;</operator><name pos:start="561:40" pos:end="561:54">subtitle_header</name></name></expr></argument>, <argument pos:start="561:57" pos:end="561:76"><expr pos:start="561:57" pos:end="561:76"><name pos:start="561:57" pos:end="561:76"><name pos:start="561:57" pos:end="561:59">dec</name><operator pos:start="561:60" pos:end="561:61">-&gt;</operator><name pos:start="561:62" pos:end="561:76">subtitle_header</name></name></expr></argument>, <argument pos:start="561:79" pos:end="561:103"><expr pos:start="561:79" pos:end="561:103"><name pos:start="561:79" pos:end="561:103"><name pos:start="561:79" pos:end="561:81">dec</name><operator pos:start="561:82" pos:end="561:83">-&gt;</operator><name pos:start="561:84" pos:end="561:103">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="563:17" pos:end="563:81"><expr pos:start="563:17" pos:end="563:80"><name pos:start="563:17" pos:end="563:52"><name pos:start="563:17" pos:end="563:19">ost</name><operator pos:start="563:20" pos:end="563:21">-&gt;</operator><name pos:start="563:22" pos:end="563:23">st</name><operator pos:start="563:24" pos:end="563:25">-&gt;</operator><name pos:start="563:26" pos:end="563:30">codec</name><operator pos:start="563:31" pos:end="563:32">-&gt;</operator><name pos:start="563:33" pos:end="563:52">subtitle_header_size</name></name> <operator pos:start="563:54" pos:end="563:54">=</operator> <name pos:start="563:56" pos:end="563:80"><name pos:start="563:56" pos:end="563:58">dec</name><operator pos:start="563:59" pos:end="563:60">-&gt;</operator><name pos:start="563:61" pos:end="563:80">subtitle_header_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="567:13" pos:end="577:13"><if pos:start="567:13" pos:end="577:13">if <condition pos:start="567:16" pos:end="567:69">(<expr pos:start="567:17" pos:end="567:68"><call pos:start="567:17" pos:end="567:64"><name pos:start="567:17" pos:end="567:29">avcodec_open2</name><argument_list pos:start="567:30" pos:end="567:64">(<argument pos:start="567:31" pos:end="567:44"><expr pos:start="567:31" pos:end="567:44"><name pos:start="567:31" pos:end="567:44"><name pos:start="567:31" pos:end="567:33">ost</name><operator pos:start="567:34" pos:end="567:35">-&gt;</operator><name pos:start="567:36" pos:end="567:37">st</name><operator pos:start="567:38" pos:end="567:39">-&gt;</operator><name pos:start="567:40" pos:end="567:44">codec</name></name></expr></argument>, <argument pos:start="567:47" pos:end="567:51"><expr pos:start="567:47" pos:end="567:51"><name pos:start="567:47" pos:end="567:51">codec</name></expr></argument>, <argument pos:start="567:54" pos:end="567:63"><expr pos:start="567:54" pos:end="567:63"><operator pos:start="567:54" pos:end="567:54">&amp;</operator><name pos:start="567:55" pos:end="567:63"><name pos:start="567:55" pos:end="567:57">ost</name><operator pos:start="567:58" pos:end="567:59">-&gt;</operator><name pos:start="567:60" pos:end="567:63">opts</name></name></expr></argument>)</argument_list></call> <operator pos:start="567:66" pos:end="567:66">&lt;</operator> <literal type="number" pos:start="567:68" pos:end="567:68">0</literal></expr>)</condition> <block pos:start="567:71" pos:end="577:13">{<block_content pos:start="569:17" pos:end="575:33">

                <expr_stmt pos:start="569:17" pos:end="571:53"><expr pos:start="569:17" pos:end="571:52"><call pos:start="569:17" pos:end="571:52"><name pos:start="569:17" pos:end="569:24">snprintf</name><argument_list pos:start="569:25" pos:end="571:52">(<argument pos:start="569:26" pos:end="569:30"><expr pos:start="569:26" pos:end="569:30"><name pos:start="569:26" pos:end="569:30">error</name></expr></argument>, <argument pos:start="569:33" pos:end="569:45"><expr pos:start="569:33" pos:end="569:45"><sizeof pos:start="569:33" pos:end="569:45">sizeof<argument_list pos:start="569:39" pos:end="569:45">(<argument pos:start="569:40" pos:end="569:44"><expr pos:start="569:40" pos:end="569:44"><name pos:start="569:40" pos:end="569:44">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="569:48" pos:end="569:170"><expr pos:start="569:48" pos:end="569:170"><literal type="string" pos:start="569:48" pos:end="569:170">"Error while opening encoder for output stream #%d.%d - maybe incorrect parameters such as bit_rate, rate, width or height"</literal></expr></argument>,

                        <argument pos:start="571:25" pos:end="571:39"><expr pos:start="571:25" pos:end="571:39"><name pos:start="571:25" pos:end="571:39"><name pos:start="571:25" pos:end="571:27">ost</name><operator pos:start="571:28" pos:end="571:29">-&gt;</operator><name pos:start="571:30" pos:end="571:39">file_index</name></name></expr></argument>, <argument pos:start="571:42" pos:end="571:51"><expr pos:start="571:42" pos:end="571:51"><name pos:start="571:42" pos:end="571:51"><name pos:start="571:42" pos:end="571:44">ost</name><operator pos:start="571:45" pos:end="571:46">-&gt;</operator><name pos:start="571:47" pos:end="571:51">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="573:17" pos:end="573:38"><expr pos:start="573:17" pos:end="573:37"><name pos:start="573:17" pos:end="573:19">ret</name> <operator pos:start="573:21" pos:end="573:21">=</operator> <call pos:start="573:23" pos:end="573:37"><name pos:start="573:23" pos:end="573:29">AVERROR</name><argument_list pos:start="573:30" pos:end="573:37">(<argument pos:start="573:31" pos:end="573:36"><expr pos:start="573:31" pos:end="573:36"><name pos:start="573:31" pos:end="573:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="575:17" pos:end="575:33">goto <name pos:start="575:22" pos:end="575:32">dump_format</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="579:13" pos:end="579:57"><expr pos:start="579:13" pos:end="579:56"><call pos:start="579:13" pos:end="579:56"><name pos:start="579:13" pos:end="579:37">assert_codec_experimental</name><argument_list pos:start="579:38" pos:end="579:56">(<argument pos:start="579:39" pos:end="579:52"><expr pos:start="579:39" pos:end="579:52"><name pos:start="579:39" pos:end="579:52"><name pos:start="579:39" pos:end="579:41">ost</name><operator pos:start="579:42" pos:end="579:43">-&gt;</operator><name pos:start="579:44" pos:end="579:45">st</name><operator pos:start="579:46" pos:end="579:47">-&gt;</operator><name pos:start="579:48" pos:end="579:52">codec</name></name></expr></argument>, <argument pos:start="579:55" pos:end="579:55"><expr pos:start="579:55" pos:end="579:55"><literal type="number" pos:start="579:55" pos:end="579:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="581:13" pos:end="581:40"><expr pos:start="581:13" pos:end="581:39"><call pos:start="581:13" pos:end="581:39"><name pos:start="581:13" pos:end="581:28">assert_avoptions</name><argument_list pos:start="581:29" pos:end="581:39">(<argument pos:start="581:30" pos:end="581:38"><expr pos:start="581:30" pos:end="581:38"><name pos:start="581:30" pos:end="581:38"><name pos:start="581:30" pos:end="581:32">ost</name><operator pos:start="581:33" pos:end="581:34">-&gt;</operator><name pos:start="581:35" pos:end="581:38">opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="583:13" pos:end="587:91"><if pos:start="583:13" pos:end="587:91">if <condition pos:start="583:16" pos:end="583:76">(<expr pos:start="583:17" pos:end="583:75"><name pos:start="583:17" pos:end="583:40"><name pos:start="583:17" pos:end="583:19">ost</name><operator pos:start="583:20" pos:end="583:21">-&gt;</operator><name pos:start="583:22" pos:end="583:23">st</name><operator pos:start="583:24" pos:end="583:25">-&gt;</operator><name pos:start="583:26" pos:end="583:30">codec</name><operator pos:start="583:31" pos:end="583:32">-&gt;</operator><name pos:start="583:33" pos:end="583:40">bit_rate</name></name> <operator pos:start="583:42" pos:end="583:43">&amp;&amp;</operator> <name pos:start="583:45" pos:end="583:68"><name pos:start="583:45" pos:end="583:47">ost</name><operator pos:start="583:48" pos:end="583:49">-&gt;</operator><name pos:start="583:50" pos:end="583:51">st</name><operator pos:start="583:52" pos:end="583:53">-&gt;</operator><name pos:start="583:54" pos:end="583:58">codec</name><operator pos:start="583:59" pos:end="583:60">-&gt;</operator><name pos:start="583:61" pos:end="583:68">bit_rate</name></name> <operator pos:start="583:70" pos:end="583:70">&lt;</operator> <literal type="number" pos:start="583:72" pos:end="583:75">1000</literal></expr>)</condition><block type="pseudo" pos:start="585:17" pos:end="587:91"><block_content pos:start="585:17" pos:end="587:91">

                <expr_stmt pos:start="585:17" pos:end="587:91"><expr pos:start="585:17" pos:end="587:90"><call pos:start="585:17" pos:end="587:90"><name pos:start="585:17" pos:end="585:22">av_log</name><argument_list pos:start="585:23" pos:end="587:90">(<argument pos:start="585:24" pos:end="585:27"><expr pos:start="585:24" pos:end="585:27"><name pos:start="585:24" pos:end="585:27">NULL</name></expr></argument>, <argument pos:start="585:30" pos:end="585:43"><expr pos:start="585:30" pos:end="585:43"><name pos:start="585:30" pos:end="585:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="585:46" pos:end="587:89"><expr pos:start="585:46" pos:end="587:89"><literal type="string" pos:start="585:46" pos:end="585:84">"The bitrate parameter is set too low."</literal>

                                             <literal type="string" pos:start="587:46" pos:end="587:89">"It takes bits/s as argument, not kbits/s\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="589:13" pos:end="589:57"><expr pos:start="589:13" pos:end="589:56"><name pos:start="589:13" pos:end="589:22">extra_size</name> <operator pos:start="589:24" pos:end="589:25">+=</operator> <name pos:start="589:27" pos:end="589:56"><name pos:start="589:27" pos:end="589:29">ost</name><operator pos:start="589:30" pos:end="589:31">-&gt;</operator><name pos:start="589:32" pos:end="589:33">st</name><operator pos:start="589:34" pos:end="589:35">-&gt;</operator><name pos:start="589:36" pos:end="589:40">codec</name><operator pos:start="589:41" pos:end="589:42">-&gt;</operator><name pos:start="589:43" pos:end="589:56">extradata_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="597:5" pos:end="597:28">/* init input streams */</comment>

    <for pos:start="599:5" pos:end="603:29">for <control pos:start="599:9" pos:end="599:42">(<init pos:start="599:10" pos:end="599:15"><expr pos:start="599:10" pos:end="599:14"><name pos:start="599:10" pos:end="599:10">i</name> <operator pos:start="599:12" pos:end="599:12">=</operator> <literal type="number" pos:start="599:14" pos:end="599:14">0</literal></expr>;</init> <condition pos:start="599:17" pos:end="599:37"><expr pos:start="599:17" pos:end="599:36"><name pos:start="599:17" pos:end="599:17">i</name> <operator pos:start="599:19" pos:end="599:19">&lt;</operator> <name pos:start="599:21" pos:end="599:36">nb_input_streams</name></expr>;</condition> <incr pos:start="599:39" pos:end="599:41"><expr pos:start="599:39" pos:end="599:41"><name pos:start="599:39" pos:end="599:39">i</name><operator pos:start="599:40" pos:end="599:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="601:9" pos:end="603:29"><block_content pos:start="601:9" pos:end="603:29">

        <if_stmt pos:start="601:9" pos:end="603:29"><if pos:start="601:9" pos:end="603:29">if <condition pos:start="601:12" pos:end="601:102">(<expr pos:start="601:13" pos:end="601:101"><operator pos:start="601:13" pos:end="601:13">(</operator><name pos:start="601:14" pos:end="601:16">ret</name> <operator pos:start="601:18" pos:end="601:18">=</operator> <call pos:start="601:20" pos:end="601:96"><name pos:start="601:20" pos:end="601:36">init_input_stream</name><argument_list pos:start="601:37" pos:end="601:96">(<argument pos:start="601:38" pos:end="601:38"><expr pos:start="601:38" pos:end="601:38"><name pos:start="601:38" pos:end="601:38">i</name></expr></argument>, <argument pos:start="601:41" pos:end="601:54"><expr pos:start="601:41" pos:end="601:54"><name pos:start="601:41" pos:end="601:54">output_streams</name></expr></argument>, <argument pos:start="601:57" pos:end="601:73"><expr pos:start="601:57" pos:end="601:73"><name pos:start="601:57" pos:end="601:73">nb_output_streams</name></expr></argument>, <argument pos:start="601:76" pos:end="601:80"><expr pos:start="601:76" pos:end="601:80"><name pos:start="601:76" pos:end="601:80">error</name></expr></argument>, <argument pos:start="601:83" pos:end="601:95"><expr pos:start="601:83" pos:end="601:95"><sizeof pos:start="601:83" pos:end="601:95">sizeof<argument_list pos:start="601:89" pos:end="601:95">(<argument pos:start="601:90" pos:end="601:94"><expr pos:start="601:90" pos:end="601:94"><name pos:start="601:90" pos:end="601:94">error</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="601:97" pos:end="601:97">)</operator> <operator pos:start="601:99" pos:end="601:99">&lt;</operator> <literal type="number" pos:start="601:101" pos:end="601:101">0</literal></expr>)</condition><block type="pseudo" pos:start="603:13" pos:end="603:29"><block_content pos:start="603:13" pos:end="603:29">

            <goto pos:start="603:13" pos:end="603:29">goto <name pos:start="603:18" pos:end="603:28">dump_format</name>;</goto></block_content></block></if></if_stmt></block_content></block></for>



    <comment type="block" pos:start="607:5" pos:end="607:43">/* open files and write file headers */</comment>

    <for pos:start="609:5" pos:end="631:5">for <control pos:start="609:9" pos:end="609:41">(<init pos:start="609:10" pos:end="609:15"><expr pos:start="609:10" pos:end="609:14"><name pos:start="609:10" pos:end="609:10">i</name> <operator pos:start="609:12" pos:end="609:12">=</operator> <literal type="number" pos:start="609:14" pos:end="609:14">0</literal></expr>;</init> <condition pos:start="609:17" pos:end="609:36"><expr pos:start="609:17" pos:end="609:35"><name pos:start="609:17" pos:end="609:17">i</name> <operator pos:start="609:19" pos:end="609:19">&lt;</operator> <name pos:start="609:21" pos:end="609:35">nb_output_files</name></expr>;</condition> <incr pos:start="609:38" pos:end="609:40"><expr pos:start="609:38" pos:end="609:40"><name pos:start="609:38" pos:end="609:38">i</name><operator pos:start="609:39" pos:end="609:40">++</operator></expr></incr>)</control> <block pos:start="609:43" pos:end="631:5">{<block_content pos:start="611:9" pos:end="629:9">

        <expr_stmt pos:start="611:9" pos:end="611:33"><expr pos:start="611:9" pos:end="611:32"><name pos:start="611:9" pos:end="611:10">os</name> <operator pos:start="611:12" pos:end="611:12">=</operator> <name pos:start="611:14" pos:end="611:28"><name pos:start="611:14" pos:end="611:25">output_files</name><index pos:start="611:26" pos:end="611:28">[<expr pos:start="611:27" pos:end="611:27"><name pos:start="611:27" pos:end="611:27">i</name></expr>]</index></name><operator pos:start="611:29" pos:end="611:29">.</operator><name pos:start="611:30" pos:end="611:32">ctx</name></expr>;</expr_stmt>

        <if_stmt pos:start="613:9" pos:end="621:9"><if pos:start="613:9" pos:end="621:9">if <condition pos:start="613:12" pos:end="613:65">(<expr pos:start="613:13" pos:end="613:64"><call pos:start="613:13" pos:end="613:60"><name pos:start="613:13" pos:end="613:33">avformat_write_header</name><argument_list pos:start="613:34" pos:end="613:60">(<argument pos:start="613:35" pos:end="613:36"><expr pos:start="613:35" pos:end="613:36"><name pos:start="613:35" pos:end="613:36">os</name></expr></argument>, <argument pos:start="613:39" pos:end="613:59"><expr pos:start="613:39" pos:end="613:59"><operator pos:start="613:39" pos:end="613:39">&amp;</operator><name pos:start="613:40" pos:end="613:54"><name pos:start="613:40" pos:end="613:51">output_files</name><index pos:start="613:52" pos:end="613:54">[<expr pos:start="613:53" pos:end="613:53"><name pos:start="613:53" pos:end="613:53">i</name></expr>]</index></name><operator pos:start="613:55" pos:end="613:55">.</operator><name pos:start="613:56" pos:end="613:59">opts</name></expr></argument>)</argument_list></call> <operator pos:start="613:62" pos:end="613:62">&lt;</operator> <literal type="number" pos:start="613:64" pos:end="613:64">0</literal></expr>)</condition> <block pos:start="613:67" pos:end="621:9">{<block_content pos:start="615:13" pos:end="619:29">

            <expr_stmt pos:start="615:13" pos:end="615:123"><expr pos:start="615:13" pos:end="615:122"><call pos:start="615:13" pos:end="615:122"><name pos:start="615:13" pos:end="615:20">snprintf</name><argument_list pos:start="615:21" pos:end="615:122">(<argument pos:start="615:22" pos:end="615:26"><expr pos:start="615:22" pos:end="615:26"><name pos:start="615:22" pos:end="615:26">error</name></expr></argument>, <argument pos:start="615:29" pos:end="615:41"><expr pos:start="615:29" pos:end="615:41"><sizeof pos:start="615:29" pos:end="615:41">sizeof<argument_list pos:start="615:35" pos:end="615:41">(<argument pos:start="615:36" pos:end="615:40"><expr pos:start="615:36" pos:end="615:40"><name pos:start="615:36" pos:end="615:40">error</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="615:44" pos:end="615:118"><expr pos:start="615:44" pos:end="615:118"><literal type="string" pos:start="615:44" pos:end="615:118">"Could not write header for output file #%d (incorrect codec parameters ?)"</literal></expr></argument>, <argument pos:start="615:121" pos:end="615:121"><expr pos:start="615:121" pos:end="615:121"><name pos:start="615:121" pos:end="615:121">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="617:13" pos:end="617:34"><expr pos:start="617:13" pos:end="617:33"><name pos:start="617:13" pos:end="617:15">ret</name> <operator pos:start="617:17" pos:end="617:17">=</operator> <call pos:start="617:19" pos:end="617:33"><name pos:start="617:19" pos:end="617:25">AVERROR</name><argument_list pos:start="617:26" pos:end="617:33">(<argument pos:start="617:27" pos:end="617:32"><expr pos:start="617:27" pos:end="617:32"><name pos:start="617:27" pos:end="617:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="619:13" pos:end="619:29">goto <name pos:start="619:18" pos:end="619:28">dump_format</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="623:9" pos:end="623:47"><expr pos:start="623:9" pos:end="623:46"><call pos:start="623:9" pos:end="623:46"><name pos:start="623:9" pos:end="623:24">assert_avoptions</name><argument_list pos:start="623:25" pos:end="623:46">(<argument pos:start="623:26" pos:end="623:45"><expr pos:start="623:26" pos:end="623:45"><name pos:start="623:26" pos:end="623:40"><name pos:start="623:26" pos:end="623:37">output_files</name><index pos:start="623:38" pos:end="623:40">[<expr pos:start="623:39" pos:end="623:39"><name pos:start="623:39" pos:end="623:39">i</name></expr>]</index></name><operator pos:start="623:41" pos:end="623:41">.</operator><name pos:start="623:42" pos:end="623:45">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="625:9" pos:end="629:9"><if pos:start="625:9" pos:end="629:9">if <condition pos:start="625:12" pos:end="625:45">(<expr pos:start="625:13" pos:end="625:44"><call pos:start="625:13" pos:end="625:44"><name pos:start="625:13" pos:end="625:18">strcmp</name><argument_list pos:start="625:19" pos:end="625:44">(<argument pos:start="625:20" pos:end="625:36"><expr pos:start="625:20" pos:end="625:36"><name pos:start="625:20" pos:end="625:36"><name pos:start="625:20" pos:end="625:21">os</name><operator pos:start="625:22" pos:end="625:23">-&gt;</operator><name pos:start="625:24" pos:end="625:30">oformat</name><operator pos:start="625:31" pos:end="625:32">-&gt;</operator><name pos:start="625:33" pos:end="625:36">name</name></name></expr></argument>, <argument pos:start="625:39" pos:end="625:43"><expr pos:start="625:39" pos:end="625:43"><literal type="string" pos:start="625:39" pos:end="625:43">"rtp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="625:47" pos:end="629:9">{<block_content pos:start="627:13" pos:end="627:25">

            <expr_stmt pos:start="627:13" pos:end="627:25"><expr pos:start="627:13" pos:end="627:24"><name pos:start="627:13" pos:end="627:20">want_sdp</name> <operator pos:start="627:22" pos:end="627:22">=</operator> <literal type="number" pos:start="627:24" pos:end="627:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



 <label pos:start="635:2" pos:end="635:13"><name pos:start="635:2" pos:end="635:12">dump_format</name>:</label>

    <comment type="block" pos:start="637:5" pos:end="639:24">/* dump the file output parameters - cannot be done before in case

       of stream copy */</comment>

    <for pos:start="641:5" pos:end="645:5">for<control pos:start="641:8" pos:end="641:34">(<init pos:start="641:9" pos:end="641:12"><expr pos:start="641:9" pos:end="641:11"><name pos:start="641:9" pos:end="641:9">i</name><operator pos:start="641:10" pos:end="641:10">=</operator><literal type="number" pos:start="641:11" pos:end="641:11">0</literal></expr>;</init><condition pos:start="641:13" pos:end="641:30"><expr pos:start="641:13" pos:end="641:29"><name pos:start="641:13" pos:end="641:13">i</name><operator pos:start="641:14" pos:end="641:14">&lt;</operator><name pos:start="641:15" pos:end="641:29">nb_output_files</name></expr>;</condition><incr pos:start="641:31" pos:end="641:33"><expr pos:start="641:31" pos:end="641:33"><name pos:start="641:31" pos:end="641:31">i</name><operator pos:start="641:32" pos:end="641:33">++</operator></expr></incr>)</control> <block pos:start="641:36" pos:end="645:5">{<block_content pos:start="643:9" pos:end="643:81">

        <expr_stmt pos:start="643:9" pos:end="643:81"><expr pos:start="643:9" pos:end="643:80"><call pos:start="643:9" pos:end="643:80"><name pos:start="643:9" pos:end="643:22">av_dump_format</name><argument_list pos:start="643:23" pos:end="643:80">(<argument pos:start="643:24" pos:end="643:42"><expr pos:start="643:24" pos:end="643:42"><name pos:start="643:24" pos:end="643:38"><name pos:start="643:24" pos:end="643:35">output_files</name><index pos:start="643:36" pos:end="643:38">[<expr pos:start="643:37" pos:end="643:37"><name pos:start="643:37" pos:end="643:37">i</name></expr>]</index></name><operator pos:start="643:39" pos:end="643:39">.</operator><name pos:start="643:40" pos:end="643:42">ctx</name></expr></argument>, <argument pos:start="643:45" pos:end="643:45"><expr pos:start="643:45" pos:end="643:45"><name pos:start="643:45" pos:end="643:45">i</name></expr></argument>, <argument pos:start="643:48" pos:end="643:76"><expr pos:start="643:48" pos:end="643:76"><name pos:start="643:48" pos:end="643:62"><name pos:start="643:48" pos:end="643:59">output_files</name><index pos:start="643:60" pos:end="643:62">[<expr pos:start="643:61" pos:end="643:61"><name pos:start="643:61" pos:end="643:61">i</name></expr>]</index></name><operator pos:start="643:63" pos:end="643:63">.</operator><name pos:start="643:64" pos:end="643:76"><name pos:start="643:64" pos:end="643:66">ctx</name><operator pos:start="643:67" pos:end="643:68">-&gt;</operator><name pos:start="643:69" pos:end="643:76">filename</name></name></expr></argument>, <argument pos:start="643:79" pos:end="643:79"><expr pos:start="643:79" pos:end="643:79"><literal type="number" pos:start="643:79" pos:end="643:79">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="649:5" pos:end="649:33">/* dump the stream mapping */</comment>

    <if_stmt pos:start="651:5" pos:end="693:5"><if pos:start="651:5" pos:end="693:5">if <condition pos:start="651:8" pos:end="651:21">(<expr pos:start="651:9" pos:end="651:20"><name pos:start="651:9" pos:end="651:15">verbose</name> <operator pos:start="651:17" pos:end="651:18">&gt;=</operator> <literal type="number" pos:start="651:20" pos:end="651:20">0</literal></expr>)</condition> <block pos:start="651:23" pos:end="693:5">{<block_content pos:start="653:9" pos:end="691:9">

        <expr_stmt pos:start="653:9" pos:end="653:45"><expr pos:start="653:9" pos:end="653:44"><call pos:start="653:9" pos:end="653:44"><name pos:start="653:9" pos:end="653:15">fprintf</name><argument_list pos:start="653:16" pos:end="653:44">(<argument pos:start="653:17" pos:end="653:22"><expr pos:start="653:17" pos:end="653:22"><name pos:start="653:17" pos:end="653:22">stderr</name></expr></argument>, <argument pos:start="653:25" pos:end="653:43"><expr pos:start="653:25" pos:end="653:43"><literal type="string" pos:start="653:25" pos:end="653:43">"Stream mapping:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="655:9" pos:end="691:9">for <control pos:start="655:13" pos:end="655:47">(<init pos:start="655:14" pos:end="655:19"><expr pos:start="655:14" pos:end="655:18"><name pos:start="655:14" pos:end="655:14">i</name> <operator pos:start="655:16" pos:end="655:16">=</operator> <literal type="number" pos:start="655:18" pos:end="655:18">0</literal></expr>;</init> <condition pos:start="655:21" pos:end="655:42"><expr pos:start="655:21" pos:end="655:41"><name pos:start="655:21" pos:end="655:21">i</name> <operator pos:start="655:23" pos:end="655:23">&lt;</operator> <name pos:start="655:25" pos:end="655:41">nb_output_streams</name></expr>;</condition><incr pos:start="655:43" pos:end="655:46"><expr pos:start="655:43" pos:end="655:46"><name pos:start="655:43" pos:end="655:43">i</name> <operator pos:start="655:45" pos:end="655:46">++</operator></expr></incr>)</control> <block pos:start="655:49" pos:end="691:9">{<block_content pos:start="657:13" pos:end="689:34">

            <expr_stmt pos:start="657:13" pos:end="657:37"><expr pos:start="657:13" pos:end="657:36"><name pos:start="657:13" pos:end="657:15">ost</name> <operator pos:start="657:17" pos:end="657:17">=</operator> <operator pos:start="657:19" pos:end="657:19">&amp;</operator><name pos:start="657:20" pos:end="657:36"><name pos:start="657:20" pos:end="657:33">output_streams</name><index pos:start="657:34" pos:end="657:36">[<expr pos:start="657:35" pos:end="657:35"><name pos:start="657:35" pos:end="657:35">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="659:13" pos:end="667:32"><expr pos:start="659:13" pos:end="667:31"><call pos:start="659:13" pos:end="667:31"><name pos:start="659:13" pos:end="659:19">fprintf</name><argument_list pos:start="659:20" pos:end="667:31">(<argument pos:start="659:21" pos:end="659:26"><expr pos:start="659:21" pos:end="659:26"><name pos:start="659:21" pos:end="659:26">stderr</name></expr></argument>, <argument pos:start="659:29" pos:end="659:55"><expr pos:start="659:29" pos:end="659:55"><literal type="string" pos:start="659:29" pos:end="659:55">"  Stream #%d.%d -&gt; #%d.%d"</literal></expr></argument>,

                    <argument pos:start="661:21" pos:end="661:63"><expr pos:start="661:21" pos:end="661:63"><name pos:start="661:21" pos:end="661:52"><name pos:start="661:21" pos:end="661:33">input_streams</name><index pos:start="661:34" pos:end="661:52">[<expr pos:start="661:35" pos:end="661:51"><name pos:start="661:35" pos:end="661:51"><name pos:start="661:35" pos:end="661:37">ost</name><operator pos:start="661:38" pos:end="661:39">-&gt;</operator><name pos:start="661:40" pos:end="661:51">source_index</name></name></expr>]</index></name><operator pos:start="661:53" pos:end="661:53">.</operator><name pos:start="661:54" pos:end="661:63">file_index</name></expr></argument>,

                    <argument pos:start="663:21" pos:end="663:62"><expr pos:start="663:21" pos:end="663:62"><name pos:start="663:21" pos:end="663:52"><name pos:start="663:21" pos:end="663:33">input_streams</name><index pos:start="663:34" pos:end="663:52">[<expr pos:start="663:35" pos:end="663:51"><name pos:start="663:35" pos:end="663:51"><name pos:start="663:35" pos:end="663:37">ost</name><operator pos:start="663:38" pos:end="663:39">-&gt;</operator><name pos:start="663:40" pos:end="663:51">source_index</name></name></expr>]</index></name><operator pos:start="663:53" pos:end="663:53">.</operator><name pos:start="663:54" pos:end="663:62"><name pos:start="663:54" pos:end="663:55">st</name><operator pos:start="663:56" pos:end="663:57">-&gt;</operator><name pos:start="663:58" pos:end="663:62">index</name></name></expr></argument>,

                    <argument pos:start="665:21" pos:end="665:35"><expr pos:start="665:21" pos:end="665:35"><name pos:start="665:21" pos:end="665:35"><name pos:start="665:21" pos:end="665:23">ost</name><operator pos:start="665:24" pos:end="665:25">-&gt;</operator><name pos:start="665:26" pos:end="665:35">file_index</name></name></expr></argument>,

                    <argument pos:start="667:21" pos:end="667:30"><expr pos:start="667:21" pos:end="667:30"><name pos:start="667:21" pos:end="667:30"><name pos:start="667:21" pos:end="667:23">ost</name><operator pos:start="667:24" pos:end="667:25">-&gt;</operator><name pos:start="667:26" pos:end="667:30">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="669:13" pos:end="675:50"><if pos:start="669:13" pos:end="675:50">if <condition pos:start="669:16" pos:end="669:67">(<expr pos:start="669:17" pos:end="669:66"><name pos:start="669:17" pos:end="669:29"><name pos:start="669:17" pos:end="669:19">ost</name><operator pos:start="669:20" pos:end="669:21">-&gt;</operator><name pos:start="669:22" pos:end="669:29">sync_ist</name></name> <operator pos:start="669:31" pos:end="669:32">!=</operator> <operator pos:start="669:34" pos:end="669:34">&amp;</operator><name pos:start="669:35" pos:end="669:66"><name pos:start="669:35" pos:end="669:47">input_streams</name><index pos:start="669:48" pos:end="669:66">[<expr pos:start="669:49" pos:end="669:65"><name pos:start="669:49" pos:end="669:65"><name pos:start="669:49" pos:end="669:51">ost</name><operator pos:start="669:52" pos:end="669:53">-&gt;</operator><name pos:start="669:54" pos:end="669:65">source_index</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="671:17" pos:end="675:50"><block_content pos:start="671:17" pos:end="675:50">

                <expr_stmt pos:start="671:17" pos:end="675:50"><expr pos:start="671:17" pos:end="675:49"><call pos:start="671:17" pos:end="675:49"><name pos:start="671:17" pos:end="671:23">fprintf</name><argument_list pos:start="671:24" pos:end="675:49">(<argument pos:start="671:25" pos:end="671:30"><expr pos:start="671:25" pos:end="671:30"><name pos:start="671:25" pos:end="671:30">stderr</name></expr></argument>, <argument pos:start="671:33" pos:end="671:48"><expr pos:start="671:33" pos:end="671:48"><literal type="string" pos:start="671:33" pos:end="671:48">" [sync #%d.%d]"</literal></expr></argument>,

                        <argument pos:start="673:25" pos:end="673:49"><expr pos:start="673:25" pos:end="673:49"><name pos:start="673:25" pos:end="673:49"><name pos:start="673:25" pos:end="673:27">ost</name><operator pos:start="673:28" pos:end="673:29">-&gt;</operator><name pos:start="673:30" pos:end="673:37">sync_ist</name><operator pos:start="673:38" pos:end="673:39">-&gt;</operator><name pos:start="673:40" pos:end="673:49">file_index</name></name></expr></argument>,

                        <argument pos:start="675:25" pos:end="675:48"><expr pos:start="675:25" pos:end="675:48"><name pos:start="675:25" pos:end="675:48"><name pos:start="675:25" pos:end="675:27">ost</name><operator pos:start="675:28" pos:end="675:29">-&gt;</operator><name pos:start="675:30" pos:end="675:37">sync_ist</name><operator pos:start="675:38" pos:end="675:39">-&gt;</operator><name pos:start="675:40" pos:end="675:41">st</name><operator pos:start="675:42" pos:end="675:43">-&gt;</operator><name pos:start="675:44" pos:end="675:48">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="677:13" pos:end="687:57"><if pos:start="677:13" pos:end="679:43">if <condition pos:start="677:16" pos:end="677:37">(<expr pos:start="677:17" pos:end="677:36"><name pos:start="677:17" pos:end="677:36"><name pos:start="677:17" pos:end="677:19">ost</name><operator pos:start="677:20" pos:end="677:21">-&gt;</operator><name pos:start="677:22" pos:end="677:23">st</name><operator pos:start="677:24" pos:end="677:25">-&gt;</operator><name pos:start="677:26" pos:end="677:36">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="679:17" pos:end="679:43"><block_content pos:start="679:17" pos:end="679:43">

                <expr_stmt pos:start="679:17" pos:end="679:43"><expr pos:start="679:17" pos:end="679:42"><call pos:start="679:17" pos:end="679:42"><name pos:start="679:17" pos:end="679:23">fprintf</name><argument_list pos:start="679:24" pos:end="679:42">(<argument pos:start="679:25" pos:end="679:30"><expr pos:start="679:25" pos:end="679:30"><name pos:start="679:25" pos:end="679:30">stderr</name></expr></argument>, <argument pos:start="679:33" pos:end="679:41"><expr pos:start="679:33" pos:end="679:41"><literal type="string" pos:start="679:33" pos:end="679:41">" (copy)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="681:13" pos:end="687:57">else<block type="pseudo" pos:start="683:17" pos:end="687:57"><block_content pos:start="683:17" pos:end="687:57">

                <expr_stmt pos:start="683:17" pos:end="687:57"><expr pos:start="683:17" pos:end="687:56"><call pos:start="683:17" pos:end="687:56"><name pos:start="683:17" pos:end="683:23">fprintf</name><argument_list pos:start="683:24" pos:end="687:56">(<argument pos:start="683:25" pos:end="683:30"><expr pos:start="683:25" pos:end="683:30"><name pos:start="683:25" pos:end="683:30">stderr</name></expr></argument>, <argument pos:start="683:33" pos:end="683:45"><expr pos:start="683:33" pos:end="683:45"><literal type="string" pos:start="683:33" pos:end="683:45">" (%s -&gt; %s)"</literal></expr></argument>, <argument pos:start="683:48" pos:end="685:72"><expr pos:start="683:48" pos:end="685:72"><ternary pos:start="683:48" pos:end="685:72"><condition pos:start="683:48" pos:end="683:85"><expr pos:start="683:48" pos:end="683:83"><name pos:start="683:48" pos:end="683:79"><name pos:start="683:48" pos:end="683:60">input_streams</name><index pos:start="683:61" pos:end="683:79">[<expr pos:start="683:62" pos:end="683:78"><name pos:start="683:62" pos:end="683:78"><name pos:start="683:62" pos:end="683:64">ost</name><operator pos:start="683:65" pos:end="683:66">-&gt;</operator><name pos:start="683:67" pos:end="683:78">source_index</name></name></expr>]</index></name><operator pos:start="683:80" pos:end="683:80">.</operator><name pos:start="683:81" pos:end="683:83">dec</name></expr> ?</condition><then pos:start="685:25" pos:end="685:66">

                        <expr pos:start="685:25" pos:end="685:66"><name pos:start="685:25" pos:end="685:56"><name pos:start="685:25" pos:end="685:37">input_streams</name><index pos:start="685:38" pos:end="685:56">[<expr pos:start="685:39" pos:end="685:55"><name pos:start="685:39" pos:end="685:55"><name pos:start="685:39" pos:end="685:41">ost</name><operator pos:start="685:42" pos:end="685:43">-&gt;</operator><name pos:start="685:44" pos:end="685:55">source_index</name></name></expr>]</index></name><operator pos:start="685:57" pos:end="685:57">.</operator><name pos:start="685:58" pos:end="685:66"><name pos:start="685:58" pos:end="685:60">dec</name><operator pos:start="685:61" pos:end="685:62">-&gt;</operator><name pos:start="685:63" pos:end="685:66">name</name></name></expr> </then><else pos:start="685:68" pos:end="685:72">: <expr pos:start="685:70" pos:end="685:72"><literal type="string" pos:start="685:70" pos:end="685:72">"?"</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="687:25" pos:end="687:55"><expr pos:start="687:25" pos:end="687:55"><ternary pos:start="687:25" pos:end="687:55"><condition pos:start="687:25" pos:end="687:34"><expr pos:start="687:25" pos:end="687:32"><name pos:start="687:25" pos:end="687:32"><name pos:start="687:25" pos:end="687:27">ost</name><operator pos:start="687:28" pos:end="687:29">-&gt;</operator><name pos:start="687:30" pos:end="687:32">enc</name></name></expr> ?</condition><then pos:start="687:36" pos:end="687:49"> <expr pos:start="687:36" pos:end="687:49"><name pos:start="687:36" pos:end="687:49"><name pos:start="687:36" pos:end="687:38">ost</name><operator pos:start="687:39" pos:end="687:40">-&gt;</operator><name pos:start="687:41" pos:end="687:43">enc</name><operator pos:start="687:44" pos:end="687:45">-&gt;</operator><name pos:start="687:46" pos:end="687:49">name</name></name></expr> </then><else pos:start="687:51" pos:end="687:55">: <expr pos:start="687:53" pos:end="687:55"><literal type="string" pos:start="687:53" pos:end="687:55">"?"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="689:13" pos:end="689:34"><expr pos:start="689:13" pos:end="689:33"><call pos:start="689:13" pos:end="689:33"><name pos:start="689:13" pos:end="689:19">fprintf</name><argument_list pos:start="689:20" pos:end="689:33">(<argument pos:start="689:21" pos:end="689:26"><expr pos:start="689:21" pos:end="689:26"><name pos:start="689:21" pos:end="689:26">stderr</name></expr></argument>, <argument pos:start="689:29" pos:end="689:32"><expr pos:start="689:29" pos:end="689:32"><literal type="string" pos:start="689:29" pos:end="689:32">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="697:5" pos:end="703:5"><if pos:start="697:5" pos:end="703:5">if <condition pos:start="697:8" pos:end="697:12">(<expr pos:start="697:9" pos:end="697:11"><name pos:start="697:9" pos:end="697:11">ret</name></expr>)</condition> <block pos:start="697:14" pos:end="703:5">{<block_content pos:start="699:9" pos:end="701:19">

        <expr_stmt pos:start="699:9" pos:end="699:39"><expr pos:start="699:9" pos:end="699:38"><call pos:start="699:9" pos:end="699:38"><name pos:start="699:9" pos:end="699:15">fprintf</name><argument_list pos:start="699:16" pos:end="699:38">(<argument pos:start="699:17" pos:end="699:22"><expr pos:start="699:17" pos:end="699:22"><name pos:start="699:17" pos:end="699:22">stderr</name></expr></argument>, <argument pos:start="699:25" pos:end="699:30"><expr pos:start="699:25" pos:end="699:30"><literal type="string" pos:start="699:25" pos:end="699:30">"%s\n"</literal></expr></argument>, <argument pos:start="699:33" pos:end="699:37"><expr pos:start="699:33" pos:end="699:37"><name pos:start="699:33" pos:end="699:37">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="701:9" pos:end="701:19">return <expr pos:start="701:16" pos:end="701:18"><name pos:start="701:16" pos:end="701:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="707:5" pos:end="711:5"><if pos:start="707:5" pos:end="711:5">if <condition pos:start="707:8" pos:end="707:17">(<expr pos:start="707:9" pos:end="707:16"><name pos:start="707:9" pos:end="707:16">want_sdp</name></expr>)</condition> <block pos:start="707:19" pos:end="711:5">{<block_content pos:start="709:9" pos:end="709:49">

        <expr_stmt pos:start="709:9" pos:end="709:49"><expr pos:start="709:9" pos:end="709:48"><call pos:start="709:9" pos:end="709:48"><name pos:start="709:9" pos:end="709:17">print_sdp</name><argument_list pos:start="709:18" pos:end="709:48">(<argument pos:start="709:19" pos:end="709:30"><expr pos:start="709:19" pos:end="709:30"><name pos:start="709:19" pos:end="709:30">output_files</name></expr></argument>, <argument pos:start="709:33" pos:end="709:47"><expr pos:start="709:33" pos:end="709:47"><name pos:start="709:33" pos:end="709:47">nb_output_files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="715:5" pos:end="715:13">return <expr pos:start="715:12" pos:end="715:12"><literal type="number" pos:start="715:12" pos:end="715:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
