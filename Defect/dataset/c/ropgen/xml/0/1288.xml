<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1288.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">MemTxResult</name></type> <name pos:start="1:20" pos:end="1:35">vtd_mem_ir_write</name><parameter_list pos:start="1:36" pos:end="5:53">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:56">hwaddr</name></type> <name pos:start="1:58" pos:end="1:61">addr</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:44">uint64_t</name></type> <name pos:start="3:46" pos:end="3:50">value</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:65"><decl pos:start="3:53" pos:end="3:65"><type pos:start="3:53" pos:end="3:65"><name pos:start="3:53" pos:end="3:60">unsigned</name></type> <name pos:start="3:62" pos:end="3:65">size</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:52"><decl pos:start="5:37" pos:end="5:52"><type pos:start="5:37" pos:end="5:52"><name pos:start="5:37" pos:end="5:46">MemTxAttrs</name></type> <name pos:start="5:48" pos:end="5:52">attrs</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="61:1">{<block_content pos:start="9:5" pos:end="59:20">

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">MSIMessage</name></type> <name pos:start="11:16" pos:end="11:19">from</name> <init pos:start="11:21" pos:end="11:24">= <expr pos:start="11:23" pos:end="11:24"><block pos:start="11:23" pos:end="11:24">{}</block></expr></init></decl>, <decl pos:start="11:27" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:14"/><name pos:start="11:27" pos:end="11:28">to</name> <init pos:start="11:30" pos:end="11:33">= <expr pos:start="11:32" pos:end="11:33"><block pos:start="11:32" pos:end="11:33">{}</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:62"><expr pos:start="15:5" pos:end="15:61"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:8">from</name><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:16">address</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <operator pos:start="15:20" pos:end="15:20">(</operator><name pos:start="15:21" pos:end="15:28">uint64_t</name><operator pos:start="15:29" pos:end="15:29">)</operator> <name pos:start="15:31" pos:end="15:34">addr</name> <operator pos:start="15:36" pos:end="15:36">+</operator> <name pos:start="15:38" pos:end="15:61">VTD_INTERRUPT_ADDR_FIRST</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:8">from</name><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:13">data</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <operator pos:start="17:17" pos:end="17:17">(</operator><name pos:start="17:18" pos:end="17:25">uint32_t</name><operator pos:start="17:26" pos:end="17:26">)</operator> <name pos:start="17:28" pos:end="17:32">value</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:53"><name pos:start="21:11" pos:end="21:33">vtd_interrupt_remap_msi</name><argument_list pos:start="21:34" pos:end="21:53">(<argument pos:start="21:35" pos:end="21:40"><expr pos:start="21:35" pos:end="21:40"><name pos:start="21:35" pos:end="21:40">opaque</name></expr></argument>, <argument pos:start="21:43" pos:end="21:47"><expr pos:start="21:43" pos:end="21:47"><operator pos:start="21:43" pos:end="21:43">&amp;</operator><name pos:start="21:44" pos:end="21:47">from</name></expr></argument>, <argument pos:start="21:50" pos:end="21:52"><expr pos:start="21:50" pos:end="21:52"><operator pos:start="21:50" pos:end="21:50">&amp;</operator><name pos:start="21:51" pos:end="21:52">to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">ret</name></expr>)</condition> <block pos:start="23:14" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:27">

        <comment type="block" pos:start="25:9" pos:end="25:32">/* TODO: report error */</comment>

        <expr_stmt pos:start="27:9" pos:end="29:64"><expr pos:start="27:9" pos:end="29:63"><call pos:start="27:9" pos:end="29:63"><name pos:start="27:9" pos:end="27:19">VTD_DPRINTF</name><argument_list pos:start="27:20" pos:end="29:63">(<argument pos:start="27:21" pos:end="27:27"><expr pos:start="27:21" pos:end="27:27"><name pos:start="27:21" pos:end="27:27">GENERAL</name></expr></argument>, <argument pos:start="27:30" pos:end="29:37"><expr pos:start="27:30" pos:end="29:37"><literal type="string" pos:start="27:30" pos:end="27:58">"int remap fail for addr 0x%"</literal><name pos:start="27:59" pos:end="27:64">PRIx64</name>

                    <literal type="string" pos:start="29:21" pos:end="29:31">" data 0x%"</literal><name pos:start="29:32" pos:end="29:37">PRIx32</name></expr></argument>, <argument pos:start="29:40" pos:end="29:51"><expr pos:start="29:40" pos:end="29:51"><name pos:start="29:40" pos:end="29:51"><name pos:start="29:40" pos:end="29:43">from</name><operator pos:start="29:44" pos:end="29:44">.</operator><name pos:start="29:45" pos:end="29:51">address</name></name></expr></argument>, <argument pos:start="29:54" pos:end="29:62"><expr pos:start="29:54" pos:end="29:62"><name pos:start="29:54" pos:end="29:62"><name pos:start="29:54" pos:end="29:57">from</name><operator pos:start="29:58" pos:end="29:58">.</operator><name pos:start="29:59" pos:end="29:62">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="31:9" pos:end="31:33">/* Drop this interrupt */</comment>

        <return pos:start="33:9" pos:end="33:27">return <expr pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:26">MEMTX_ERROR</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="43:42"><expr pos:start="39:5" pos:end="43:41"><call pos:start="39:5" pos:end="43:41"><name pos:start="39:5" pos:end="39:15">VTD_DPRINTF</name><argument_list pos:start="39:16" pos:end="43:41">(<argument pos:start="39:17" pos:end="39:18"><expr pos:start="39:17" pos:end="39:18"><name pos:start="39:17" pos:end="39:18">IR</name></expr></argument>, <argument pos:start="39:21" pos:end="41:40"><expr pos:start="39:21" pos:end="41:40"><literal type="string" pos:start="39:21" pos:end="39:40">"delivering MSI 0x%"</literal><name pos:start="39:41" pos:end="39:46">PRIx64</name><literal type="string" pos:start="39:47" pos:end="39:52">":0x%"</literal><name pos:start="39:53" pos:end="39:58">PRIx32</name>

                <literal type="string" pos:start="41:17" pos:end="41:40">" for device sid 0x%04x"</literal></expr></argument>,

                <argument pos:start="43:17" pos:end="43:26"><expr pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:18">to</name><operator pos:start="43:19" pos:end="43:19">.</operator><name pos:start="43:20" pos:end="43:26">address</name></name></expr></argument>, <argument pos:start="43:29" pos:end="43:35"><expr pos:start="43:29" pos:end="43:35"><name pos:start="43:29" pos:end="43:35"><name pos:start="43:29" pos:end="43:30">to</name><operator pos:start="43:31" pos:end="43:31">.</operator><name pos:start="43:32" pos:end="43:35">data</name></name></expr></argument>, <argument pos:start="43:38" pos:end="43:40"><expr pos:start="43:38" pos:end="43:40"><name pos:start="43:38" pos:end="43:40">sid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="49:41">(<expr pos:start="47:9" pos:end="49:40"><call pos:start="47:9" pos:end="49:40"><name pos:start="47:9" pos:end="47:24">dma_memory_write</name><argument_list pos:start="47:25" pos:end="49:40">(<argument pos:start="47:26" pos:end="47:46"><expr pos:start="47:26" pos:end="47:46"><operator pos:start="47:26" pos:end="47:26">&amp;</operator><name pos:start="47:27" pos:end="47:46">address_space_memory</name></expr></argument>, <argument pos:start="47:49" pos:end="47:58"><expr pos:start="47:49" pos:end="47:58"><name pos:start="47:49" pos:end="47:58"><name pos:start="47:49" pos:end="47:50">to</name><operator pos:start="47:51" pos:end="47:51">.</operator><name pos:start="47:52" pos:end="47:58">address</name></name></expr></argument>,

                         <argument pos:start="49:26" pos:end="49:33"><expr pos:start="49:26" pos:end="49:33"><operator pos:start="49:26" pos:end="49:26">&amp;</operator><name pos:start="49:27" pos:end="49:33"><name pos:start="49:27" pos:end="49:28">to</name><operator pos:start="49:29" pos:end="49:29">.</operator><name pos:start="49:30" pos:end="49:33">data</name></name></expr></argument>, <argument pos:start="49:36" pos:end="49:39"><expr pos:start="49:36" pos:end="49:39"><name pos:start="49:36" pos:end="49:39">size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:43" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:61">

        <expr_stmt pos:start="51:9" pos:end="53:61"><expr pos:start="51:9" pos:end="53:60"><call pos:start="51:9" pos:end="53:60"><name pos:start="51:9" pos:end="51:19">VTD_DPRINTF</name><argument_list pos:start="51:20" pos:end="53:60">(<argument pos:start="51:21" pos:end="51:27"><expr pos:start="51:21" pos:end="51:27"><name pos:start="51:21" pos:end="51:27">GENERAL</name></expr></argument>, <argument pos:start="51:30" pos:end="53:38"><expr pos:start="51:30" pos:end="53:38"><literal type="string" pos:start="51:30" pos:end="51:55">"error: fail to write 0x%"</literal><name pos:start="51:56" pos:end="51:61">PRIx64</name>

                    <literal type="string" pos:start="53:21" pos:end="53:32">" value 0x%"</literal><name pos:start="53:33" pos:end="53:38">PRIx32</name></expr></argument>, <argument pos:start="53:41" pos:end="53:50"><expr pos:start="53:41" pos:end="53:50"><name pos:start="53:41" pos:end="53:50"><name pos:start="53:41" pos:end="53:42">to</name><operator pos:start="53:43" pos:end="53:43">.</operator><name pos:start="53:44" pos:end="53:50">address</name></name></expr></argument>, <argument pos:start="53:53" pos:end="53:59"><expr pos:start="53:53" pos:end="53:59"><name pos:start="53:53" pos:end="53:59"><name pos:start="53:53" pos:end="53:54">to</name><operator pos:start="53:55" pos:end="53:55">.</operator><name pos:start="53:56" pos:end="53:59">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:20">return <expr pos:start="59:12" pos:end="59:19"><name pos:start="59:12" pos:end="59:19">MEMTX_OK</name></expr>;</return>

</block_content>}</block></function>
</unit>
