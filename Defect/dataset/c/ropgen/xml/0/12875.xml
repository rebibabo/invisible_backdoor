<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12875.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">qdev_set_legacy_property</name><parameter_list pos:start="1:37" pos:end="3:68">(<parameter pos:start="1:38" pos:end="1:53"><decl pos:start="1:38" pos:end="1:53"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:48">DeviceState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">dev</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:65"><decl pos:start="1:56" pos:end="1:65"><type pos:start="1:56" pos:end="1:65"><name pos:start="1:56" pos:end="1:62">Visitor</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">v</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:79"><decl pos:start="1:68" pos:end="1:79"><type pos:start="1:68" pos:end="1:79"><name pos:start="1:68" pos:end="1:71">void</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:79">opaque</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:53"><decl pos:start="3:38" pos:end="3:53"><type pos:start="3:38" pos:end="3:53"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:47">char</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">name</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:67"><decl pos:start="3:56" pos:end="3:67"><type pos:start="3:56" pos:end="3:67"><name pos:start="3:56" pos:end="3:60">Error</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier><modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:67">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:5">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">Property</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">prop</name> <init pos:start="7:20" pos:end="7:27">= <expr pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:27">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:40">(<expr pos:start="11:9" pos:end="11:39"><name pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:11">dev</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:18">state</name></name> <operator pos:start="11:20" pos:end="11:21">!=</operator> <name pos:start="11:23" pos:end="11:39">DEV_STATE_CREATED</name></expr>)</condition> <block pos:start="11:42" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:48"><expr pos:start="13:9" pos:end="13:47"><call pos:start="13:9" pos:end="13:47"><name pos:start="13:9" pos:end="13:17">error_set</name><argument_list pos:start="13:18" pos:end="13:47">(<argument pos:start="13:19" pos:end="13:22"><expr pos:start="13:19" pos:end="13:22"><name pos:start="13:19" pos:end="13:22">errp</name></expr></argument>, <argument pos:start="13:25" pos:end="13:46"><expr pos:start="13:25" pos:end="13:46"><name pos:start="13:25" pos:end="13:46">QERR_PERMISSION_DENIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="57:5"><if pos:start="21:5" pos:end="53:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:12">prop</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:18">info</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:25">parse</name></name></expr>)</condition> <block pos:start="21:28" pos:end="53:5">{<block_content pos:start="23:9" pos:end="51:9">

        <decl_stmt pos:start="23:9" pos:end="23:32"><decl pos:start="23:9" pos:end="23:31"><type pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:13">Error</name> <modifier pos:start="23:15" pos:end="23:15">*</modifier></type><name pos:start="23:16" pos:end="23:24">local_err</name> <init pos:start="23:26" pos:end="23:31">= <expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:25"><decl pos:start="25:9" pos:end="25:24"><type pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:12">char</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:17">ptr</name> <init pos:start="25:19" pos:end="25:24">= <expr pos:start="25:21" pos:end="25:24"><name pos:start="25:21" pos:end="25:24">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:50"><expr pos:start="29:9" pos:end="29:49"><call pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:22">visit_type_str</name><argument_list pos:start="29:23" pos:end="29:49">(<argument pos:start="29:24" pos:end="29:24"><expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">v</name></expr></argument>, <argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:30">ptr</name></expr></argument>, <argument pos:start="29:33" pos:end="29:36"><expr pos:start="29:33" pos:end="29:36"><name pos:start="29:33" pos:end="29:36">name</name></expr></argument>, <argument pos:start="29:39" pos:end="29:48"><expr pos:start="29:39" pos:end="29:48"><operator pos:start="29:39" pos:end="29:39">&amp;</operator><name pos:start="29:40" pos:end="29:48">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="51:9"><if pos:start="31:9" pos:end="47:9">if <condition pos:start="31:12" pos:end="31:23">(<expr pos:start="31:13" pos:end="31:22"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:22">local_err</name></expr>)</condition> <block pos:start="31:25" pos:end="47:9">{<block_content pos:start="33:13" pos:end="45:24">

            <decl_stmt pos:start="33:13" pos:end="33:20"><decl pos:start="33:13" pos:end="33:19"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:19">ret</name></decl>;</decl_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:52"><expr pos:start="35:13" pos:end="35:51"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:51"><name pos:start="35:19" pos:end="35:35"><name pos:start="35:19" pos:end="35:22">prop</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:28">info</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:35">parse</name></name><argument_list pos:start="35:36" pos:end="35:51">(<argument pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><name pos:start="35:37" pos:end="35:39">dev</name></expr></argument>, <argument pos:start="35:42" pos:end="35:45"><expr pos:start="35:42" pos:end="35:45"><name pos:start="35:42" pos:end="35:45">prop</name></expr></argument>, <argument pos:start="35:48" pos:end="35:50"><expr pos:start="35:48" pos:end="35:50"><name pos:start="35:48" pos:end="35:50">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:25">(<expr pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:19">ret</name> <operator pos:start="37:21" pos:end="37:22">!=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>)</condition> <block pos:start="37:27" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:50">

                <expr_stmt pos:start="39:17" pos:end="41:50"><expr pos:start="39:17" pos:end="41:49"><call pos:start="39:17" pos:end="41:49"><name pos:start="39:17" pos:end="39:25">error_set</name><argument_list pos:start="39:26" pos:end="41:49">(<argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><name pos:start="39:27" pos:end="39:30">errp</name></expr></argument>, <argument pos:start="39:33" pos:end="39:60"><expr pos:start="39:33" pos:end="39:60"><name pos:start="39:33" pos:end="39:60">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,

                          <argument pos:start="41:27" pos:end="41:30"><expr pos:start="41:27" pos:end="41:30"><name pos:start="41:27" pos:end="41:30">name</name></expr></argument>, <argument pos:start="41:33" pos:end="41:48"><expr pos:start="41:33" pos:end="41:48"><name pos:start="41:33" pos:end="41:48"><name pos:start="41:33" pos:end="41:36">prop</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:42">info</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:48">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:24"><expr pos:start="45:13" pos:end="45:23"><call pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:18">g_free</name><argument_list pos:start="45:19" pos:end="45:23">(<argument pos:start="45:20" pos:end="45:22"><expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="51:9">else <block pos:start="47:16" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:45">

            <expr_stmt pos:start="49:13" pos:end="49:45"><expr pos:start="49:13" pos:end="49:44"><call pos:start="49:13" pos:end="49:44"><name pos:start="49:13" pos:end="49:27">error_propagate</name><argument_list pos:start="49:28" pos:end="49:44">(<argument pos:start="49:29" pos:end="49:32"><expr pos:start="49:29" pos:end="49:32"><name pos:start="49:29" pos:end="49:32">errp</name></expr></argument>, <argument pos:start="49:35" pos:end="49:43"><expr pos:start="49:35" pos:end="49:43"><name pos:start="49:35" pos:end="49:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="57:5">else <block pos:start="53:12" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:48">

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><call pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:17">error_set</name><argument_list pos:start="55:18" pos:end="55:47">(<argument pos:start="55:19" pos:end="55:22"><expr pos:start="55:19" pos:end="55:22"><name pos:start="55:19" pos:end="55:22">errp</name></expr></argument>, <argument pos:start="55:25" pos:end="55:46"><expr pos:start="55:25" pos:end="55:46"><name pos:start="55:25" pos:end="55:46">QERR_PERMISSION_DENIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
