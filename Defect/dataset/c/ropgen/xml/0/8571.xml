<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8571.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:26">iommu_dma_memory_map</name><parameter_list pos:start="1:27" pos:end="3:44">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:37">DMAContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">dma</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:59"><decl pos:start="1:45" pos:end="1:59"><type pos:start="1:45" pos:end="1:59"><name pos:start="1:45" pos:end="1:54">dma_addr_t</name></type> <name pos:start="1:56" pos:end="1:59">addr</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:76"><decl pos:start="1:62" pos:end="1:76"><type pos:start="1:62" pos:end="1:76"><name pos:start="1:62" pos:end="1:71">dma_addr_t</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:76">len</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:43"><decl pos:start="3:28" pos:end="3:43"><type pos:start="3:28" pos:end="3:43"><name pos:start="3:28" pos:end="3:39">DMADirection</name></type> <name pos:start="3:41" pos:end="3:43">dir</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">target_phys_addr_t</name></type> <name pos:start="9:24" pos:end="9:28">paddr</name></decl>, <decl pos:start="9:31" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:22"/><name pos:start="9:31" pos:end="9:34">plen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:13">buf</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">dma</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:16">map</name></name></expr>)</condition> <block pos:start="15:19" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:45">

        <return pos:start="17:9" pos:end="17:45">return <expr pos:start="17:16" pos:end="17:44"><call pos:start="17:16" pos:end="17:44"><name pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:18">dma</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:23">map</name></name><argument_list pos:start="17:24" pos:end="17:44">(<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">dma</name></expr></argument>, <argument pos:start="17:30" pos:end="17:33"><expr pos:start="17:30" pos:end="17:33"><name pos:start="17:30" pos:end="17:33">addr</name></expr></argument>, <argument pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:38">len</name></expr></argument>, <argument pos:start="17:41" pos:end="17:43"><expr pos:start="17:41" pos:end="17:43"><name pos:start="17:41" pos:end="17:43">dir</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:8">plen</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <operator pos:start="23:12" pos:end="23:12">*</operator><name pos:start="23:13" pos:end="23:15">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:56"><expr pos:start="25:5" pos:end="25:55"><name pos:start="25:5" pos:end="25:7">err</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:55"><name pos:start="25:11" pos:end="25:24"><name pos:start="25:11" pos:end="25:13">dma</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:24">translate</name></name><argument_list pos:start="25:25" pos:end="25:55">(<argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">dma</name></expr></argument>, <argument pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:34">addr</name></expr></argument>, <argument pos:start="25:37" pos:end="25:42"><expr pos:start="25:37" pos:end="25:42"><operator pos:start="25:37" pos:end="25:37">&amp;</operator><name pos:start="25:38" pos:end="25:42">paddr</name></expr></argument>, <argument pos:start="25:45" pos:end="25:49"><expr pos:start="25:45" pos:end="25:49"><operator pos:start="25:45" pos:end="25:45">&amp;</operator><name pos:start="25:46" pos:end="25:49">plen</name></expr></argument>, <argument pos:start="25:52" pos:end="25:54"><expr pos:start="25:52" pos:end="25:54"><name pos:start="25:52" pos:end="25:54">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">err</name></expr>)</condition> <block pos:start="27:14" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:20">

        <return pos:start="29:9" pos:end="29:20">return <expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="43:7">/*

     * If this is true, the virtual region is contiguous,

     * but the translated physical region isn't. We just

     * clamp *len, much like address_space_map() does.

     */</comment>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:20">(<expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:12">plen</name> <operator pos:start="45:14" pos:end="45:14">&lt;</operator> <operator pos:start="45:16" pos:end="45:16">*</operator><name pos:start="45:17" pos:end="45:19">len</name></expr>)</condition> <block pos:start="45:22" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:20">

        <expr_stmt pos:start="47:9" pos:end="47:20"><expr pos:start="47:9" pos:end="47:19"><operator pos:start="47:9" pos:end="47:9">*</operator><name pos:start="47:10" pos:end="47:12">len</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <name pos:start="47:16" pos:end="47:19">plen</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:85"><expr pos:start="53:5" pos:end="53:84"><name pos:start="53:5" pos:end="53:7">buf</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:84"><name pos:start="53:11" pos:end="53:27">address_space_map</name><argument_list pos:start="53:28" pos:end="53:84">(<argument pos:start="53:29" pos:end="53:35"><expr pos:start="53:29" pos:end="53:35"><name pos:start="53:29" pos:end="53:35"><name pos:start="53:29" pos:end="53:31">dma</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:35">as</name></name></expr></argument>, <argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42">paddr</name></expr></argument>, <argument pos:start="53:45" pos:end="53:49"><expr pos:start="53:45" pos:end="53:49"><operator pos:start="53:45" pos:end="53:45">&amp;</operator><name pos:start="53:46" pos:end="53:49">plen</name></expr></argument>, <argument pos:start="53:52" pos:end="53:83"><expr pos:start="53:52" pos:end="53:83"><name pos:start="53:52" pos:end="53:54">dir</name> <operator pos:start="53:56" pos:end="53:57">==</operator> <name pos:start="53:59" pos:end="53:83">DMA_DIRECTION_FROM_DEVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:16"><expr pos:start="55:5" pos:end="55:15"><operator pos:start="55:5" pos:end="55:5">*</operator><name pos:start="55:6" pos:end="55:8">len</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <name pos:start="55:12" pos:end="55:15">plen</name></expr>;</expr_stmt>



    <return pos:start="59:5" pos:end="59:15">return <expr pos:start="59:12" pos:end="59:14"><name pos:start="59:12" pos:end="59:14">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
