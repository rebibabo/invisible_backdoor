<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24923.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">zero_single_l2</name><parameter_list pos:start="1:26" pos:end="3:58">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><name pos:start="1:49" pos:end="1:56">uint64_t</name></type> <name pos:start="1:58" pos:end="1:63">offset</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:46"><decl pos:start="3:27" pos:end="3:46"><type pos:start="3:27" pos:end="3:46"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:46">nb_clusters</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:57"><decl pos:start="3:49" pos:end="3:57"><type pos:start="3:49" pos:end="3:57"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:57">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:23">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">BDRVQcow2State</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:34">= <expr pos:start="7:25" pos:end="7:34"><name pos:start="7:25" pos:end="7:34"><name pos:start="7:25" pos:end="7:26">bs</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint64_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:22">l2_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">l2_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:62"><expr pos:start="19:5" pos:end="19:61"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:61"><name pos:start="19:11" pos:end="19:27">get_cluster_table</name><argument_list pos:start="19:28" pos:end="19:61">(<argument pos:start="19:29" pos:end="19:30"><expr pos:start="19:29" pos:end="19:30"><name pos:start="19:29" pos:end="19:30">bs</name></expr></argument>, <argument pos:start="19:33" pos:end="19:38"><expr pos:start="19:33" pos:end="19:38"><name pos:start="19:33" pos:end="19:38">offset</name></expr></argument>, <argument pos:start="19:41" pos:end="19:49"><expr pos:start="19:41" pos:end="19:49"><operator pos:start="19:41" pos:end="19:41">&amp;</operator><name pos:start="19:42" pos:end="19:49">l2_table</name></expr></argument>, <argument pos:start="19:52" pos:end="19:60"><expr pos:start="19:52" pos:end="19:60"><operator pos:start="19:52" pos:end="19:52">&amp;</operator><name pos:start="19:53" pos:end="19:60">l2_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition> <block pos:start="21:18" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:43">/* Limit nb_clusters to one L2 table */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:15">nb_clusters</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:57"><name pos:start="31:19" pos:end="31:21">MIN</name><argument_list pos:start="31:22" pos:end="31:57">(<argument pos:start="31:23" pos:end="31:33"><expr pos:start="31:23" pos:end="31:33"><name pos:start="31:23" pos:end="31:33">nb_clusters</name></expr></argument>, <argument pos:start="31:36" pos:end="31:56"><expr pos:start="31:36" pos:end="31:56"><name pos:start="31:36" pos:end="31:45"><name pos:start="31:36" pos:end="31:36">s</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:45">l2_size</name></name> <operator pos:start="31:47" pos:end="31:47">-</operator> <name pos:start="31:49" pos:end="31:56">l2_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><call pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:10">assert</name><argument_list pos:start="33:11" pos:end="33:34">(<argument pos:start="33:12" pos:end="33:33"><expr pos:start="33:12" pos:end="33:33"><name pos:start="33:12" pos:end="33:22">nb_clusters</name> <operator pos:start="33:24" pos:end="33:25">&lt;=</operator> <name pos:start="33:27" pos:end="33:33">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="37:5" pos:end="63:5">for <control pos:start="37:9" pos:end="37:37">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:32"><expr pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:31">nb_clusters</name></expr>;</condition> <incr pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:34">i</name><operator pos:start="37:35" pos:end="37:36">++</operator></expr></incr>)</control> <block pos:start="37:39" pos:end="63:5">{<block_content pos:start="39:9" pos:end="61:9">

        <decl_stmt pos:start="39:9" pos:end="39:28"><decl pos:start="39:9" pos:end="39:27"><type pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:16">uint64_t</name></type> <name pos:start="39:18" pos:end="39:27">old_offset</name></decl>;</decl_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:57"><expr pos:start="43:9" pos:end="43:56"><name pos:start="43:9" pos:end="43:18">old_offset</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <call pos:start="43:22" pos:end="43:56"><name pos:start="43:22" pos:end="43:32">be64_to_cpu</name><argument_list pos:start="43:33" pos:end="43:56">(<argument pos:start="43:34" pos:end="43:55"><expr pos:start="43:34" pos:end="43:55"><name pos:start="43:34" pos:end="43:55"><name pos:start="43:34" pos:end="43:41">l2_table</name><index pos:start="43:42" pos:end="43:55">[<expr pos:start="43:43" pos:end="43:54"><name pos:start="43:43" pos:end="43:50">l2_index</name> <operator pos:start="43:52" pos:end="43:52">+</operator> <name pos:start="43:54" pos:end="43:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="47:9" pos:end="47:31">/* Update L2 entries */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:70"><expr pos:start="49:9" pos:end="49:69"><call pos:start="49:9" pos:end="49:69"><name pos:start="49:9" pos:end="49:36">qcow2_cache_entry_mark_dirty</name><argument_list pos:start="49:37" pos:end="49:69">(<argument pos:start="49:38" pos:end="49:39"><expr pos:start="49:38" pos:end="49:39"><name pos:start="49:38" pos:end="49:39">bs</name></expr></argument>, <argument pos:start="49:42" pos:end="49:58"><expr pos:start="49:42" pos:end="49:58"><name pos:start="49:42" pos:end="49:58"><name pos:start="49:42" pos:end="49:42">s</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:58">l2_table_cache</name></name></expr></argument>, <argument pos:start="49:61" pos:end="49:68"><expr pos:start="49:61" pos:end="49:68"><name pos:start="49:61" pos:end="49:68">l2_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="61:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:77">(<expr pos:start="51:13" pos:end="51:76"><name pos:start="51:13" pos:end="51:22">old_offset</name> <operator pos:start="51:24" pos:end="51:24">&amp;</operator> <name pos:start="51:26" pos:end="51:46">QCOW_OFLAG_COMPRESSED</name> <operator pos:start="51:48" pos:end="51:49">||</operator> <name pos:start="51:51" pos:end="51:55">flags</name> <operator pos:start="51:57" pos:end="51:57">&amp;</operator> <name pos:start="51:59" pos:end="51:76">BDRV_REQ_MAY_UNMAP</name></expr>)</condition> <block pos:start="51:79" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:78">

            <expr_stmt pos:start="53:13" pos:end="53:66"><expr pos:start="53:13" pos:end="53:65"><name pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:20">l2_table</name><index pos:start="53:21" pos:end="53:34">[<expr pos:start="53:22" pos:end="53:33"><name pos:start="53:22" pos:end="53:29">l2_index</name> <operator pos:start="53:31" pos:end="53:31">+</operator> <name pos:start="53:33" pos:end="53:33">i</name></expr>]</index></name> <operator pos:start="53:36" pos:end="53:36">=</operator> <call pos:start="53:38" pos:end="53:65"><name pos:start="53:38" pos:end="53:48">cpu_to_be64</name><argument_list pos:start="53:49" pos:end="53:65">(<argument pos:start="53:50" pos:end="53:64"><expr pos:start="53:50" pos:end="53:64"><name pos:start="53:50" pos:end="53:64">QCOW_OFLAG_ZERO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:78"><expr pos:start="55:13" pos:end="55:77"><call pos:start="55:13" pos:end="55:77"><name pos:start="55:13" pos:end="55:35">qcow2_free_any_clusters</name><argument_list pos:start="55:36" pos:end="55:77">(<argument pos:start="55:37" pos:end="55:38"><expr pos:start="55:37" pos:end="55:38"><name pos:start="55:37" pos:end="55:38">bs</name></expr></argument>, <argument pos:start="55:41" pos:end="55:50"><expr pos:start="55:41" pos:end="55:50"><name pos:start="55:41" pos:end="55:50">old_offset</name></expr></argument>, <argument pos:start="55:53" pos:end="55:53"><expr pos:start="55:53" pos:end="55:53"><literal type="number" pos:start="55:53" pos:end="55:53">1</literal></expr></argument>, <argument pos:start="55:56" pos:end="55:76"><expr pos:start="55:56" pos:end="55:76"><name pos:start="55:56" pos:end="55:76">QCOW2_DISCARD_REQUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="61:9">else <block pos:start="57:16" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:67">

            <expr_stmt pos:start="59:13" pos:end="59:67"><expr pos:start="59:13" pos:end="59:66"><name pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:20">l2_table</name><index pos:start="59:21" pos:end="59:34">[<expr pos:start="59:22" pos:end="59:33"><name pos:start="59:22" pos:end="59:29">l2_index</name> <operator pos:start="59:31" pos:end="59:31">+</operator> <name pos:start="59:33" pos:end="59:33">i</name></expr>]</index></name> <operator pos:start="59:36" pos:end="59:37">|=</operator> <call pos:start="59:39" pos:end="59:66"><name pos:start="59:39" pos:end="59:49">cpu_to_be64</name><argument_list pos:start="59:50" pos:end="59:66">(<argument pos:start="59:51" pos:end="59:65"><expr pos:start="59:51" pos:end="59:65"><name pos:start="59:51" pos:end="59:65">QCOW_OFLAG_ZERO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="67:5" pos:end="67:64"><expr pos:start="67:5" pos:end="67:63"><call pos:start="67:5" pos:end="67:63"><name pos:start="67:5" pos:end="67:19">qcow2_cache_put</name><argument_list pos:start="67:20" pos:end="67:63">(<argument pos:start="67:21" pos:end="67:22"><expr pos:start="67:21" pos:end="67:22"><name pos:start="67:21" pos:end="67:22">bs</name></expr></argument>, <argument pos:start="67:25" pos:end="67:41"><expr pos:start="67:25" pos:end="67:41"><name pos:start="67:25" pos:end="67:41"><name pos:start="67:25" pos:end="67:25">s</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:41">l2_table_cache</name></name></expr></argument>, <argument pos:start="67:44" pos:end="67:62"><expr pos:start="67:44" pos:end="67:62"><operator pos:start="67:44" pos:end="67:44">(</operator><name pos:start="67:45" pos:end="67:48">void</name> <operator pos:start="67:50" pos:end="67:50">*</operator><operator pos:start="67:51" pos:end="67:51">*</operator><operator pos:start="67:52" pos:end="67:52">)</operator> <operator pos:start="67:54" pos:end="67:54">&amp;</operator><name pos:start="67:55" pos:end="67:62">l2_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="71:5" pos:end="71:23">return <expr pos:start="71:12" pos:end="71:22"><name pos:start="71:12" pos:end="71:22">nb_clusters</name></expr>;</return>

</block_content>}</block></function>
</unit>
