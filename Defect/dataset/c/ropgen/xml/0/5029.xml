<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5029.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">nbd_config</name><parameter_list pos:start="1:22" pos:end="1:69">(<parameter pos:start="1:23" pos:end="1:37"><decl pos:start="1:23" pos:end="1:37"><type pos:start="1:23" pos:end="1:37"><name pos:start="1:23" pos:end="1:34">BDRVNBDState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:44">QDict</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:53">options</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier><modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:68">export</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="27:5"><if pos:start="9:5" pos:end="27:5">if <condition pos:start="9:8" pos:end="9:71">(<expr pos:start="9:9" pos:end="9:70"><call pos:start="9:9" pos:end="9:37"><name pos:start="9:9" pos:end="9:20">qdict_haskey</name><argument_list pos:start="9:21" pos:end="9:37">(<argument pos:start="9:22" pos:end="9:28"><expr pos:start="9:22" pos:end="9:28"><name pos:start="9:22" pos:end="9:28">options</name></expr></argument>, <argument pos:start="9:31" pos:end="9:36"><expr pos:start="9:31" pos:end="9:36"><literal type="string" pos:start="9:31" pos:end="9:36">"path"</literal></expr></argument>)</argument_list></call> <operator pos:start="9:39" pos:end="9:40">==</operator> <call pos:start="9:42" pos:end="9:70"><name pos:start="9:42" pos:end="9:53">qdict_haskey</name><argument_list pos:start="9:54" pos:end="9:70">(<argument pos:start="9:55" pos:end="9:61"><expr pos:start="9:55" pos:end="9:61"><name pos:start="9:55" pos:end="9:61">options</name></expr></argument>, <argument pos:start="9:64" pos:end="9:69"><expr pos:start="9:64" pos:end="9:69"><literal type="string" pos:start="9:64" pos:end="9:69">"host"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:73" pos:end="27:5">{<block_content pos:start="11:9" pos:end="25:23">

        <if_stmt pos:start="11:9" pos:end="23:9"><if pos:start="11:9" pos:end="17:9">if <condition pos:start="11:12" pos:end="11:42">(<expr pos:start="11:13" pos:end="11:41"><call pos:start="11:13" pos:end="11:41"><name pos:start="11:13" pos:end="11:24">qdict_haskey</name><argument_list pos:start="11:25" pos:end="11:41">(<argument pos:start="11:26" pos:end="11:32"><expr pos:start="11:26" pos:end="11:32"><name pos:start="11:26" pos:end="11:32">options</name></expr></argument>, <argument pos:start="11:35" pos:end="11:40"><expr pos:start="11:35" pos:end="11:40"><literal type="string" pos:start="11:35" pos:end="11:40">"path"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:44" pos:end="17:9">{<block_content pos:start="13:13" pos:end="15:55">

            <expr_stmt pos:start="13:13" pos:end="15:55"><expr pos:start="13:13" pos:end="15:54"><call pos:start="13:13" pos:end="15:54"><name pos:start="13:13" pos:end="13:25">qerror_report</name><argument_list pos:start="13:26" pos:end="15:54">(<argument pos:start="13:27" pos:end="13:51"><expr pos:start="13:27" pos:end="13:51"><name pos:start="13:27" pos:end="13:51">ERROR_CLASS_GENERIC_ERROR</name></expr></argument>, <argument pos:start="13:54" pos:end="15:53"><expr pos:start="13:54" pos:end="15:53"><literal type="string" pos:start="13:54" pos:end="13:77">"path and host may not "</literal>

                          <literal type="string" pos:start="15:27" pos:end="15:53">"be used at the same time."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="17:11" pos:end="23:9">else <block pos:start="17:16" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:48">

            <expr_stmt pos:start="19:13" pos:end="21:48"><expr pos:start="19:13" pos:end="21:47"><call pos:start="19:13" pos:end="21:47"><name pos:start="19:13" pos:end="19:25">qerror_report</name><argument_list pos:start="19:26" pos:end="21:47">(<argument pos:start="19:27" pos:end="19:51"><expr pos:start="19:27" pos:end="19:51"><name pos:start="19:27" pos:end="19:51">ERROR_CLASS_GENERIC_ERROR</name></expr></argument>, <argument pos:start="19:54" pos:end="21:46"><expr pos:start="19:54" pos:end="21:46"><literal type="string" pos:start="19:54" pos:end="19:76">"one of path and host "</literal>

                          <literal type="string" pos:start="21:27" pos:end="21:46">"must be specified."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="25:9" pos:end="25:23">return <expr pos:start="25:16" pos:end="25:22"><operator pos:start="25:16" pos:end="25:16">-</operator><name pos:start="25:17" pos:end="25:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:13">client</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:21">is_unix</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <call pos:start="31:25" pos:end="31:53"><name pos:start="31:25" pos:end="31:36">qdict_haskey</name><argument_list pos:start="31:37" pos:end="31:53">(<argument pos:start="31:38" pos:end="31:44"><expr pos:start="31:38" pos:end="31:44"><name pos:start="31:38" pos:end="31:44">options</name></expr></argument>, <argument pos:start="31:47" pos:end="31:52"><expr pos:start="31:47" pos:end="31:52"><literal type="string" pos:start="31:47" pos:end="31:52">"path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:52"><expr pos:start="33:5" pos:end="35:51"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:18">socket_opts</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <call pos:start="33:22" pos:end="35:51"><name pos:start="33:22" pos:end="33:37">qemu_opts_create</name><argument_list pos:start="33:38" pos:end="35:51">(<argument pos:start="33:39" pos:end="33:54"><expr pos:start="33:39" pos:end="33:54"><operator pos:start="33:39" pos:end="33:39">&amp;</operator><name pos:start="33:40" pos:end="33:54">socket_optslist</name></expr></argument>, <argument pos:start="33:57" pos:end="33:60"><expr pos:start="33:57" pos:end="33:60"><name pos:start="33:57" pos:end="33:60">NULL</name></expr></argument>, <argument pos:start="33:63" pos:end="33:63"><expr pos:start="33:63" pos:end="33:63"><literal type="number" pos:start="33:63" pos:end="33:63">0</literal></expr></argument>,

                                      <argument pos:start="35:39" pos:end="35:50"><expr pos:start="35:39" pos:end="35:50"><operator pos:start="35:39" pos:end="35:39">&amp;</operator><name pos:start="35:40" pos:end="35:50">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:64"><expr pos:start="39:5" pos:end="39:63"><call pos:start="39:5" pos:end="39:63"><name pos:start="39:5" pos:end="39:26">qemu_opts_absorb_qdict</name><argument_list pos:start="39:27" pos:end="39:63">(<argument pos:start="39:28" pos:end="39:41"><expr pos:start="39:28" pos:end="39:41"><name pos:start="39:28" pos:end="39:41"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:41">socket_opts</name></name></expr></argument>, <argument pos:start="39:44" pos:end="39:50"><expr pos:start="39:44" pos:end="39:50"><name pos:start="39:44" pos:end="39:50">options</name></expr></argument>, <argument pos:start="39:53" pos:end="39:62"><expr pos:start="39:53" pos:end="39:62"><operator pos:start="39:53" pos:end="39:53">&amp;</operator><name pos:start="39:54" pos:end="39:62">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:17">local_err</name></expr>)</condition> <block pos:start="41:20" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:23">

        <expr_stmt pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:36"><call pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:25">qerror_report_err</name><argument_list pos:start="43:26" pos:end="43:36">(<argument pos:start="43:27" pos:end="43:35"><expr pos:start="43:27" pos:end="43:35"><name pos:start="43:27" pos:end="43:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><call pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:18">error_free</name><argument_list pos:start="45:19" pos:end="45:29">(<argument pos:start="45:20" pos:end="45:28"><expr pos:start="45:20" pos:end="45:28"><name pos:start="45:20" pos:end="45:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:23">return <expr pos:start="47:16" pos:end="47:22"><operator pos:start="47:16" pos:end="47:16">-</operator><name pos:start="47:17" pos:end="47:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:46">(<expr pos:start="53:9" pos:end="53:45"><operator pos:start="53:9" pos:end="53:9">!</operator><call pos:start="53:10" pos:end="53:45"><name pos:start="53:10" pos:end="53:21">qemu_opt_get</name><argument_list pos:start="53:22" pos:end="53:45">(<argument pos:start="53:23" pos:end="53:36"><expr pos:start="53:23" pos:end="53:36"><name pos:start="53:23" pos:end="53:36"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:36">socket_opts</name></name></expr></argument>, <argument pos:start="53:39" pos:end="53:44"><expr pos:start="53:39" pos:end="53:44"><literal type="string" pos:start="53:39" pos:end="53:44">"port"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:48" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:70">

        <expr_stmt pos:start="55:9" pos:end="55:70"><expr pos:start="55:9" pos:end="55:69"><call pos:start="55:9" pos:end="55:69"><name pos:start="55:9" pos:end="55:27">qemu_opt_set_number</name><argument_list pos:start="55:28" pos:end="55:69">(<argument pos:start="55:29" pos:end="55:42"><expr pos:start="55:29" pos:end="55:42"><name pos:start="55:29" pos:end="55:42"><name pos:start="55:29" pos:end="55:29">s</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:42">socket_opts</name></name></expr></argument>, <argument pos:start="55:45" pos:end="55:50"><expr pos:start="55:45" pos:end="55:50"><literal type="string" pos:start="55:45" pos:end="55:50">"port"</literal></expr></argument>, <argument pos:start="55:53" pos:end="55:68"><expr pos:start="55:53" pos:end="55:68"><name pos:start="55:53" pos:end="55:68">NBD_DEFAULT_PORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:61"><expr pos:start="61:5" pos:end="61:60"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:11">export</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:60"><name pos:start="61:15" pos:end="61:22">g_strdup</name><argument_list pos:start="61:23" pos:end="61:60">(<argument pos:start="61:24" pos:end="61:59"><expr pos:start="61:24" pos:end="61:59"><call pos:start="61:24" pos:end="61:59"><name pos:start="61:24" pos:end="61:40">qdict_get_try_str</name><argument_list pos:start="61:41" pos:end="61:59">(<argument pos:start="61:42" pos:end="61:48"><expr pos:start="61:42" pos:end="61:48"><name pos:start="61:42" pos:end="61:48">options</name></expr></argument>, <argument pos:start="61:51" pos:end="61:58"><expr pos:start="61:51" pos:end="61:58"><literal type="string" pos:start="61:51" pos:end="61:58">"export"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:16">(<expr pos:start="63:9" pos:end="63:15"><operator pos:start="63:9" pos:end="63:9">*</operator><name pos:start="63:10" pos:end="63:15">export</name></expr>)</condition> <block pos:start="63:18" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:37">

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><call pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:17">qdict_del</name><argument_list pos:start="65:18" pos:end="65:36">(<argument pos:start="65:19" pos:end="65:25"><expr pos:start="65:19" pos:end="65:25"><name pos:start="65:19" pos:end="65:25">options</name></expr></argument>, <argument pos:start="65:28" pos:end="65:35"><expr pos:start="65:28" pos:end="65:35"><literal type="string" pos:start="65:28" pos:end="65:35">"export"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
