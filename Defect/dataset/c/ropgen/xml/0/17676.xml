<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17676.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">mvc_fast_memmove</name><parameter_list pos:start="1:29" pos:end="3:42">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:42">CPUS390XState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">env</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:59"><decl pos:start="1:50" pos:end="1:59"><type pos:start="1:50" pos:end="1:59"><name pos:start="1:50" pos:end="1:57">uint32_t</name></type> <name pos:start="1:59" pos:end="1:59">l</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:74"><decl pos:start="1:62" pos:end="1:74"><type pos:start="1:62" pos:end="1:74"><name pos:start="1:62" pos:end="1:69">uint64_t</name></type> <name pos:start="1:71" pos:end="1:74">dest</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:41">src</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:50">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">S390CPU</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">cpu</name> <init pos:start="7:18" pos:end="7:40">= <expr pos:start="7:20" pos:end="7:40"><call pos:start="7:20" pos:end="7:40"><name pos:start="7:20" pos:end="7:35">s390_env_get_cpu</name><argument_list pos:start="7:36" pos:end="7:40">(<argument pos:start="7:37" pos:end="7:39"><expr pos:start="7:37" pos:end="7:39"><name pos:start="7:37" pos:end="7:39">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">hwaddr</name></type> <name pos:start="9:12" pos:end="9:20">dest_phys</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">hwaddr</name></type> <name pos:start="11:12" pos:end="11:19">src_phys</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">hwaddr</name></type> <name pos:start="13:12" pos:end="13:14">len</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><name pos:start="13:18" pos:end="13:18">l</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">void</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:16">dest_p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">void</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:15">src_p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:48"><decl pos:start="19:5" pos:end="19:47"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:16">asc</name> <init pos:start="19:18" pos:end="19:47">= <expr pos:start="19:20" pos:end="19:47"><name pos:start="19:20" pos:end="19:32"><name pos:start="19:20" pos:end="19:22">env</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:27">psw</name><operator pos:start="19:28" pos:end="19:28">.</operator><name pos:start="19:29" pos:end="19:32">mask</name></name> <operator pos:start="19:34" pos:end="19:34">&amp;</operator> <name pos:start="19:36" pos:end="19:47">PSW_MASK_ASC</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:14"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">flags</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:67">(<expr pos:start="25:9" pos:end="25:66"><call pos:start="25:9" pos:end="25:66"><name pos:start="25:9" pos:end="25:21">mmu_translate</name><argument_list pos:start="25:22" pos:end="25:66">(<argument pos:start="25:23" pos:end="25:25"><expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:25">env</name></expr></argument>, <argument pos:start="25:28" pos:end="25:31"><expr pos:start="25:28" pos:end="25:31"><name pos:start="25:28" pos:end="25:31">dest</name></expr></argument>, <argument pos:start="25:34" pos:end="25:34"><expr pos:start="25:34" pos:end="25:34"><literal type="number" pos:start="25:34" pos:end="25:34">1</literal></expr></argument>, <argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:39">asc</name></expr></argument>, <argument pos:start="25:42" pos:end="25:51"><expr pos:start="25:42" pos:end="25:51"><operator pos:start="25:42" pos:end="25:42">&amp;</operator><name pos:start="25:43" pos:end="25:51">dest_phys</name></expr></argument>, <argument pos:start="25:54" pos:end="25:59"><expr pos:start="25:54" pos:end="25:59"><operator pos:start="25:54" pos:end="25:54">&amp;</operator><name pos:start="25:55" pos:end="25:59">flags</name></expr></argument>, <argument pos:start="25:62" pos:end="25:65"><expr pos:start="25:62" pos:end="25:65"><name pos:start="25:62" pos:end="25:65">true</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:69" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:55">

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><call pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:20">cpu_stb_data</name><argument_list pos:start="27:21" pos:end="27:34">(<argument pos:start="27:22" pos:end="27:24"><expr pos:start="27:22" pos:end="27:24"><name pos:start="27:22" pos:end="27:24">env</name></expr></argument>, <argument pos:start="27:27" pos:end="27:30"><expr pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:30">dest</name></expr></argument>, <argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:55"><expr pos:start="29:9" pos:end="29:54"><call pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:17">cpu_abort</name><argument_list pos:start="29:18" pos:end="29:54">(<argument pos:start="29:19" pos:end="29:26"><expr pos:start="29:19" pos:end="29:26"><call pos:start="29:19" pos:end="29:26"><name pos:start="29:19" pos:end="29:21">CPU</name><argument_list pos:start="29:22" pos:end="29:26">(<argument pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:29" pos:end="29:53"><expr pos:start="29:29" pos:end="29:53"><literal type="string" pos:start="29:29" pos:end="29:53">"should never reach here"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:13">dest_phys</name> <operator pos:start="33:15" pos:end="33:16">|=</operator> <name pos:start="33:18" pos:end="33:21">dest</name> <operator pos:start="33:23" pos:end="33:23">&amp;</operator> <operator pos:start="33:25" pos:end="33:25">~</operator><name pos:start="33:26" pos:end="33:41">TARGET_PAGE_MASK</name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:65">(<expr pos:start="37:9" pos:end="37:64"><call pos:start="37:9" pos:end="37:64"><name pos:start="37:9" pos:end="37:21">mmu_translate</name><argument_list pos:start="37:22" pos:end="37:64">(<argument pos:start="37:23" pos:end="37:25"><expr pos:start="37:23" pos:end="37:25"><name pos:start="37:23" pos:end="37:25">env</name></expr></argument>, <argument pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:30">src</name></expr></argument>, <argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr></argument>, <argument pos:start="37:36" pos:end="37:38"><expr pos:start="37:36" pos:end="37:38"><name pos:start="37:36" pos:end="37:38">asc</name></expr></argument>, <argument pos:start="37:41" pos:end="37:49"><expr pos:start="37:41" pos:end="37:49"><operator pos:start="37:41" pos:end="37:41">&amp;</operator><name pos:start="37:42" pos:end="37:49">src_phys</name></expr></argument>, <argument pos:start="37:52" pos:end="37:57"><expr pos:start="37:52" pos:end="37:57"><operator pos:start="37:52" pos:end="37:52">&amp;</operator><name pos:start="37:53" pos:end="37:57">flags</name></expr></argument>, <argument pos:start="37:60" pos:end="37:63"><expr pos:start="37:60" pos:end="37:63"><name pos:start="37:60" pos:end="37:63">true</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:67" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:55">

        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><call pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:21">cpu_ldub_data</name><argument_list pos:start="39:22" pos:end="39:31">(<argument pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><name pos:start="39:23" pos:end="39:25">env</name></expr></argument>, <argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:55"><expr pos:start="41:9" pos:end="41:54"><call pos:start="41:9" pos:end="41:54"><name pos:start="41:9" pos:end="41:17">cpu_abort</name><argument_list pos:start="41:18" pos:end="41:54">(<argument pos:start="41:19" pos:end="41:26"><expr pos:start="41:19" pos:end="41:26"><call pos:start="41:19" pos:end="41:26"><name pos:start="41:19" pos:end="41:21">CPU</name><argument_list pos:start="41:22" pos:end="41:26">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:29" pos:end="41:53"><expr pos:start="41:29" pos:end="41:53"><literal type="string" pos:start="41:29" pos:end="41:53">"should never reach here"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:12">src_phys</name> <operator pos:start="45:14" pos:end="45:15">|=</operator> <name pos:start="45:17" pos:end="45:19">src</name> <operator pos:start="45:21" pos:end="45:21">&amp;</operator> <operator pos:start="45:23" pos:end="45:23">~</operator><name pos:start="45:24" pos:end="45:39">TARGET_PAGE_MASK</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:57"><expr pos:start="49:5" pos:end="49:56"><name pos:start="49:5" pos:end="49:10">dest_p</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <call pos:start="49:14" pos:end="49:56"><name pos:start="49:14" pos:end="49:36">cpu_physical_memory_map</name><argument_list pos:start="49:37" pos:end="49:56">(<argument pos:start="49:38" pos:end="49:46"><expr pos:start="49:38" pos:end="49:46"><name pos:start="49:38" pos:end="49:46">dest_phys</name></expr></argument>, <argument pos:start="49:49" pos:end="49:52"><expr pos:start="49:49" pos:end="49:52"><operator pos:start="49:49" pos:end="49:49">&amp;</operator><name pos:start="49:50" pos:end="49:52">len</name></expr></argument>, <argument pos:start="49:55" pos:end="49:55"><expr pos:start="49:55" pos:end="49:55"><literal type="number" pos:start="49:55" pos:end="49:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:55"><expr pos:start="51:5" pos:end="51:54"><name pos:start="51:5" pos:end="51:9">src_p</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:54"><name pos:start="51:13" pos:end="51:35">cpu_physical_memory_map</name><argument_list pos:start="51:36" pos:end="51:54">(<argument pos:start="51:37" pos:end="51:44"><expr pos:start="51:37" pos:end="51:44"><name pos:start="51:37" pos:end="51:44">src_phys</name></expr></argument>, <argument pos:start="51:47" pos:end="51:50"><expr pos:start="51:47" pos:end="51:50"><operator pos:start="51:47" pos:end="51:47">&amp;</operator><name pos:start="51:48" pos:end="51:50">len</name></expr></argument>, <argument pos:start="51:53" pos:end="51:53"><expr pos:start="51:53" pos:end="51:53"><literal type="number" pos:start="51:53" pos:end="51:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><call pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:11">memmove</name><argument_list pos:start="55:12" pos:end="55:31">(<argument pos:start="55:13" pos:end="55:18"><expr pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:18">dest_p</name></expr></argument>, <argument pos:start="55:21" pos:end="55:25"><expr pos:start="55:21" pos:end="55:25"><name pos:start="55:21" pos:end="55:25">src_p</name></expr></argument>, <argument pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><name pos:start="55:28" pos:end="55:30">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:51"><expr pos:start="59:5" pos:end="59:50"><call pos:start="59:5" pos:end="59:50"><name pos:start="59:5" pos:end="59:29">cpu_physical_memory_unmap</name><argument_list pos:start="59:30" pos:end="59:50">(<argument pos:start="59:31" pos:end="59:36"><expr pos:start="59:31" pos:end="59:36"><name pos:start="59:31" pos:end="59:36">dest_p</name></expr></argument>, <argument pos:start="59:39" pos:end="59:39"><expr pos:start="59:39" pos:end="59:39"><literal type="number" pos:start="59:39" pos:end="59:39">1</literal></expr></argument>, <argument pos:start="59:42" pos:end="59:44"><expr pos:start="59:42" pos:end="59:44"><name pos:start="59:42" pos:end="59:44">len</name></expr></argument>, <argument pos:start="59:47" pos:end="59:49"><expr pos:start="59:47" pos:end="59:49"><name pos:start="59:47" pos:end="59:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:50"><expr pos:start="61:5" pos:end="61:49"><call pos:start="61:5" pos:end="61:49"><name pos:start="61:5" pos:end="61:29">cpu_physical_memory_unmap</name><argument_list pos:start="61:30" pos:end="61:49">(<argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><name pos:start="61:31" pos:end="61:35">src_p</name></expr></argument>, <argument pos:start="61:38" pos:end="61:38"><expr pos:start="61:38" pos:end="61:38"><literal type="number" pos:start="61:38" pos:end="61:38">0</literal></expr></argument>, <argument pos:start="61:41" pos:end="61:43"><expr pos:start="61:41" pos:end="61:43"><name pos:start="61:41" pos:end="61:43">len</name></expr></argument>, <argument pos:start="61:46" pos:end="61:48"><expr pos:start="61:46" pos:end="61:48"><name pos:start="61:46" pos:end="61:48">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
