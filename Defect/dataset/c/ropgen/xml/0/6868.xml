<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6868.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:33">mips_cpu_do_unaligned_access</name><parameter_list pos:start="1:34" pos:end="3:79">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:42">CPUState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">cs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:58"><decl pos:start="1:49" pos:end="1:58"><type pos:start="1:49" pos:end="1:58"><name pos:start="1:49" pos:end="1:53">vaddr</name></type> <name pos:start="1:55" pos:end="1:58">addr</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:46"><decl pos:start="3:35" pos:end="3:46"><type pos:start="3:35" pos:end="3:46"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:46">is_write</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:59"><decl pos:start="3:49" pos:end="3:59"><type pos:start="3:49" pos:end="3:59"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:59">is_user</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:78"><decl pos:start="3:62" pos:end="3:78"><type pos:start="3:62" pos:end="3:78"><name pos:start="3:62" pos:end="3:70">uintptr_t</name></type> <name pos:start="3:72" pos:end="3:78">retaddr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="17:1">{<block_content pos:start="7:5" pos:end="15:78">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">MIPSCPU</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">cpu</name> <init pos:start="7:18" pos:end="7:31">= <expr pos:start="7:20" pos:end="7:31"><call pos:start="7:20" pos:end="7:31"><name pos:start="7:20" pos:end="7:27">MIPS_CPU</name><argument_list pos:start="7:28" pos:end="7:31">(<argument pos:start="7:29" pos:end="7:30"><expr pos:start="7:29" pos:end="7:30"><name pos:start="7:29" pos:end="7:30">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">CPUMIPSState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">env</name> <init pos:start="9:23" pos:end="9:33">= <expr pos:start="9:25" pos:end="9:33"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:33"><name pos:start="9:26" pos:end="9:28">cpu</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:33">env</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:7">env</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:21">CP0_BadVAddr</name></name> <operator pos:start="13:23" pos:end="13:23">=</operator> <name pos:start="13:25" pos:end="13:28">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:78"><expr pos:start="15:5" pos:end="15:77"><call pos:start="15:5" pos:end="15:77"><name pos:start="15:5" pos:end="15:22">do_raise_exception</name><argument_list pos:start="15:23" pos:end="15:77">(<argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:26">env</name></expr></argument>, <argument pos:start="15:29" pos:end="15:67"><expr pos:start="15:29" pos:end="15:67"><ternary pos:start="15:29" pos:end="15:67"><condition pos:start="15:29" pos:end="15:45"><expr pos:start="15:29" pos:end="15:43"><operator pos:start="15:29" pos:end="15:29">(</operator><name pos:start="15:30" pos:end="15:37">is_write</name> <operator pos:start="15:39" pos:end="15:40">==</operator> <literal type="number" pos:start="15:42" pos:end="15:42">1</literal><operator pos:start="15:43" pos:end="15:43">)</operator></expr> ?</condition><then pos:start="15:47" pos:end="15:55"> <expr pos:start="15:47" pos:end="15:55"><name pos:start="15:47" pos:end="15:55">EXCP_AdES</name></expr> </then><else pos:start="15:57" pos:end="15:67">: <expr pos:start="15:59" pos:end="15:67"><name pos:start="15:59" pos:end="15:67">EXCP_AdEL</name></expr></else></ternary></expr></argument>, <argument pos:start="15:70" pos:end="15:76"><expr pos:start="15:70" pos:end="15:76"><name pos:start="15:70" pos:end="15:76">retaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
