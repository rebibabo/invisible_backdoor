<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2845.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">encode_frame</name><parameter_list pos:start="1:24" pos:end="3:66">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:62">avpkt</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:37">AVFrame</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:44">frame</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:65"><decl pos:start="3:47" pos:end="3:65"><type pos:start="3:47" pos:end="3:65"><name pos:start="3:47" pos:end="3:49">int</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:65">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="79:1">{<block_content pos:start="7:5" pos:end="77:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">k</name></decl>, <decl pos:start="7:15" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:21">channel</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">DCAContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">c</name> <init pos:start="9:19" pos:end="9:36">= <expr pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">int16_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:26">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:25">real_channel</name> <init pos:start="13:27" pos:end="13:29">= <expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:19"><if pos:start="17:5" pos:end="19:19">if <condition pos:start="17:8" pos:end="17:85">(<expr pos:start="17:9" pos:end="17:84"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:12">ret</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:83"><name pos:start="17:16" pos:end="17:31">ff_alloc_packet2</name><argument_list pos:start="17:32" pos:end="17:83">(<argument pos:start="17:33" pos:end="17:37"><expr pos:start="17:33" pos:end="17:37"><name pos:start="17:33" pos:end="17:37">avctx</name></expr></argument>, <argument pos:start="17:40" pos:end="17:44"><expr pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:44">avpkt</name></expr></argument>, <argument pos:start="17:47" pos:end="17:82"><expr pos:start="17:47" pos:end="17:82"><name pos:start="17:47" pos:end="17:64">DCA_MAX_FRAME_SIZE</name> <operator pos:start="17:66" pos:end="17:66">+</operator> <name pos:start="17:68" pos:end="17:82">DCA_HEADER_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="17:84" pos:end="17:84">)</operator></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:19"><block_content pos:start="19:9" pos:end="19:19">

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:11">samples</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">(</operator><specifier pos:start="23:16" pos:end="23:20">const</specifier> <name pos:start="23:22" pos:end="23:28">int16_t</name> <operator pos:start="23:30" pos:end="23:30">*</operator><operator pos:start="23:31" pos:end="23:31">)</operator><name pos:start="23:32" pos:end="23:45"><name pos:start="23:32" pos:end="23:36">frame</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:42">data</name><index pos:start="23:43" pos:end="23:45">[<expr pos:start="23:44" pos:end="23:44"><literal type="number" pos:start="23:44" pos:end="23:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="49:5">for <control pos:start="25:9" pos:end="25:38">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:32"><expr pos:start="25:17" pos:end="25:31"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:31">PCM_SAMPLES</name></expr>;</condition> <incr pos:start="25:34" pos:end="25:37"><expr pos:start="25:34" pos:end="25:37"><name pos:start="25:34" pos:end="25:34">i</name> <operator pos:start="25:36" pos:end="25:37">++</operator></expr></incr>)</control> <block pos:start="25:40" pos:end="49:5">{<block_content pos:start="27:9" pos:end="47:9"> <comment type="block" pos:start="25:42" pos:end="25:79">/* i is the decimated sample number */</comment>

        <for pos:start="27:9" pos:end="47:9">for <control pos:start="27:13" pos:end="27:68">(<init pos:start="27:14" pos:end="27:25"><expr pos:start="27:14" pos:end="27:24"><name pos:start="27:14" pos:end="27:20">channel</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>;</init> <condition pos:start="27:27" pos:end="27:57"><expr pos:start="27:27" pos:end="27:56"><name pos:start="27:27" pos:end="27:33">channel</name> <operator pos:start="27:35" pos:end="27:35">&lt;</operator> <name pos:start="27:37" pos:end="27:52"><name pos:start="27:37" pos:end="27:37">c</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:52">prim_channels</name></name> <operator pos:start="27:54" pos:end="27:54">+</operator> <literal type="number" pos:start="27:56" pos:end="27:56">1</literal></expr>;</condition> <incr pos:start="27:59" pos:end="27:67"><expr pos:start="27:59" pos:end="27:67"><name pos:start="27:59" pos:end="27:65">channel</name><operator pos:start="27:66" pos:end="27:67">++</operator></expr></incr>)</control> <block pos:start="27:70" pos:end="47:9">{<block_content pos:start="29:13" pos:end="45:13">

            <expr_stmt pos:start="29:13" pos:end="29:57"><expr pos:start="29:13" pos:end="29:56"><name pos:start="29:13" pos:end="29:24">real_channel</name> <operator pos:start="29:26" pos:end="29:26">=</operator> <name pos:start="29:28" pos:end="29:56"><name pos:start="29:28" pos:end="29:28">c</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:47">channel_order_tab</name><index pos:start="29:48" pos:end="29:56">[<expr pos:start="29:49" pos:end="29:55"><name pos:start="29:49" pos:end="29:55">channel</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="45:13"><if pos:start="31:13" pos:end="45:13">if <condition pos:start="31:16" pos:end="31:34">(<expr pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:28">real_channel</name> <operator pos:start="31:30" pos:end="31:31">&gt;=</operator> <literal type="number" pos:start="31:33" pos:end="31:33">0</literal></expr>)</condition> <block pos:start="31:36" pos:end="45:13">{<block_content pos:start="35:17" pos:end="43:88">

                <comment type="block" pos:start="33:17" pos:end="33:40">/* Get 32 PCM samples */</comment>

                <for pos:start="35:17" pos:end="39:17">for <control pos:start="35:21" pos:end="35:40">(<init pos:start="35:22" pos:end="35:27"><expr pos:start="35:22" pos:end="35:26"><name pos:start="35:22" pos:end="35:22">k</name> <operator pos:start="35:24" pos:end="35:24">=</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>;</init> <condition pos:start="35:29" pos:end="35:35"><expr pos:start="35:29" pos:end="35:34"><name pos:start="35:29" pos:end="35:29">k</name> <operator pos:start="35:31" pos:end="35:31">&lt;</operator> <literal type="number" pos:start="35:33" pos:end="35:34">32</literal></expr>;</condition> <incr pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><name pos:start="35:37" pos:end="35:37">k</name><operator pos:start="35:38" pos:end="35:39">++</operator></expr></incr>)</control> <block pos:start="35:42" pos:end="39:17">{<block_content pos:start="37:21" pos:end="37:88"> <comment type="block" pos:start="35:44" pos:end="35:92">/* k is the sample number in a 32-sample block */</comment>

                    <expr_stmt pos:start="37:21" pos:end="37:88"><expr pos:start="37:21" pos:end="37:87"><name pos:start="37:21" pos:end="37:29"><name pos:start="37:21" pos:end="37:21">c</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:26">pcm</name><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">k</name></expr>]</index></name> <operator pos:start="37:31" pos:end="37:31">=</operator> <name pos:start="37:33" pos:end="37:81"><name pos:start="37:33" pos:end="37:39">samples</name><index pos:start="37:40" pos:end="37:81">[<expr pos:start="37:41" pos:end="37:80"><name pos:start="37:41" pos:end="37:55"><name pos:start="37:41" pos:end="37:45">avctx</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:55">channels</name></name> <operator pos:start="37:57" pos:end="37:57">*</operator> <operator pos:start="37:59" pos:end="37:59">(</operator><literal type="number" pos:start="37:60" pos:end="37:61">32</literal> <operator pos:start="37:63" pos:end="37:63">*</operator> <name pos:start="37:65" pos:end="37:65">i</name> <operator pos:start="37:67" pos:end="37:67">+</operator> <name pos:start="37:69" pos:end="37:69">k</name><operator pos:start="37:70" pos:end="37:70">)</operator> <operator pos:start="37:72" pos:end="37:72">+</operator> <name pos:start="37:74" pos:end="37:80">channel</name></expr>]</index></name> <operator pos:start="37:83" pos:end="37:84">&lt;&lt;</operator> <literal type="number" pos:start="37:86" pos:end="37:87">16</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <comment type="block" pos:start="41:17" pos:end="41:63">/* Put subband samples into the proper place */</comment>

                <expr_stmt pos:start="43:17" pos:end="43:88"><expr pos:start="43:17" pos:end="43:87"><call pos:start="43:17" pos:end="43:87"><name pos:start="43:17" pos:end="43:29">qmf_decompose</name><argument_list pos:start="43:30" pos:end="43:87">(<argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><name pos:start="43:31" pos:end="43:31">c</name></expr></argument>, <argument pos:start="43:34" pos:end="43:39"><expr pos:start="43:34" pos:end="43:39"><name pos:start="43:34" pos:end="43:39"><name pos:start="43:34" pos:end="43:34">c</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:39">pcm</name></name></expr></argument>, <argument pos:start="43:42" pos:end="43:72"><expr pos:start="43:42" pos:end="43:72"><operator pos:start="43:42" pos:end="43:42">&amp;</operator><name pos:start="43:43" pos:end="43:72"><name pos:start="43:43" pos:end="43:43">c</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:52">subband</name><index pos:start="43:53" pos:end="43:55">[<expr pos:start="43:54" pos:end="43:54"><name pos:start="43:54" pos:end="43:54">i</name></expr>]</index><index pos:start="43:56" pos:end="43:69">[<expr pos:start="43:57" pos:end="43:68"><name pos:start="43:57" pos:end="43:68">real_channel</name></expr>]</index><index pos:start="43:70" pos:end="43:72">[<expr pos:start="43:71" pos:end="43:71"><literal type="number" pos:start="43:71" pos:end="43:71">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:75" pos:end="43:86"><expr pos:start="43:75" pos:end="43:86"><name pos:start="43:75" pos:end="43:86">real_channel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="53:5" pos:end="65:5"><if pos:start="53:5" pos:end="65:5">if <condition pos:start="53:8" pos:end="53:23">(<expr pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:9">c</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:22">lfe_channel</name></name></expr>)</condition> <block pos:start="53:25" pos:end="65:5">{<block_content pos:start="55:9" pos:end="63:9">

        <for pos:start="55:9" pos:end="63:9">for <control pos:start="55:13" pos:end="55:45">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:40"><expr pos:start="55:21" pos:end="55:39"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:35">PCM_SAMPLES</name> <operator pos:start="55:37" pos:end="55:37">/</operator> <literal type="number" pos:start="55:39" pos:end="55:39">2</literal></expr>;</condition> <incr pos:start="55:42" pos:end="55:44"><expr pos:start="55:42" pos:end="55:44"><name pos:start="55:42" pos:end="55:42">i</name><operator pos:start="55:43" pos:end="55:44">++</operator></expr></incr>)</control> <block pos:start="55:47" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:55">

            <for pos:start="57:13" pos:end="59:101">for <control pos:start="57:17" pos:end="57:51">(<init pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:22"><name pos:start="57:18" pos:end="57:18">k</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</init> <condition pos:start="57:25" pos:end="57:46"><expr pos:start="57:25" pos:end="57:45"><name pos:start="57:25" pos:end="57:25">k</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <name pos:start="57:29" pos:end="57:45">LFE_INTERPOLATION</name></expr>;</condition> <incr pos:start="57:48" pos:end="57:50"><expr pos:start="57:48" pos:end="57:50"><name pos:start="57:48" pos:end="57:48">k</name><operator pos:start="57:49" pos:end="57:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:17" pos:end="59:101"><block_content pos:start="59:17" pos:end="59:101"> <comment type="block" pos:start="57:53" pos:end="57:101">/* k is the sample number in a 32-sample block */</comment>

                <expr_stmt pos:start="59:17" pos:end="59:101"><expr pos:start="59:17" pos:end="59:100"><name pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:17">c</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:22">pcm</name><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">k</name></expr>]</index></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:94"><name pos:start="59:29" pos:end="59:35">samples</name><index pos:start="59:36" pos:end="59:94">[<expr pos:start="59:37" pos:end="59:93"><name pos:start="59:37" pos:end="59:51"><name pos:start="59:37" pos:end="59:41">avctx</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:51">channels</name></name> <operator pos:start="59:53" pos:end="59:53">*</operator> <operator pos:start="59:55" pos:end="59:55">(</operator><name pos:start="59:56" pos:end="59:72">LFE_INTERPOLATION</name><operator pos:start="59:73" pos:end="59:73">*</operator><name pos:start="59:74" pos:end="59:74">i</name><operator pos:start="59:75" pos:end="59:75">+</operator><name pos:start="59:76" pos:end="59:76">k</name><operator pos:start="59:77" pos:end="59:77">)</operator> <operator pos:start="59:79" pos:end="59:79">+</operator> <name pos:start="59:81" pos:end="59:93"><name pos:start="59:81" pos:end="59:81">c</name><operator pos:start="59:82" pos:end="59:83">-&gt;</operator><name pos:start="59:84" pos:end="59:93">lfe_offset</name></name></expr>]</index></name> <operator pos:start="59:96" pos:end="59:97">&lt;&lt;</operator> <literal type="number" pos:start="59:99" pos:end="59:100">16</literal></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="61:13" pos:end="61:55"><expr pos:start="61:13" pos:end="61:54"><name pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:13">c</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:23">lfe_data</name><index pos:start="61:24" pos:end="61:26">[<expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">i</name></expr>]</index></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <call pos:start="61:30" pos:end="61:54"><name pos:start="61:30" pos:end="61:43">lfe_downsample</name><argument_list pos:start="61:44" pos:end="61:54">(<argument pos:start="61:45" pos:end="61:45"><expr pos:start="61:45" pos:end="61:45"><name pos:start="61:45" pos:end="61:45">c</name></expr></argument>, <argument pos:start="61:48" pos:end="61:53"><expr pos:start="61:48" pos:end="61:53"><name pos:start="61:48" pos:end="61:53"><name pos:start="61:48" pos:end="61:48">c</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:53">pcm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:42"><expr pos:start="69:5" pos:end="69:41"><call pos:start="69:5" pos:end="69:41"><name pos:start="69:5" pos:end="69:13">put_frame</name><argument_list pos:start="69:14" pos:end="69:41">(<argument pos:start="69:15" pos:end="69:15"><expr pos:start="69:15" pos:end="69:15"><name pos:start="69:15" pos:end="69:15">c</name></expr></argument>, <argument pos:start="69:18" pos:end="69:27"><expr pos:start="69:18" pos:end="69:27"><name pos:start="69:18" pos:end="69:27"><name pos:start="69:18" pos:end="69:18">c</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:27">subband</name></name></expr></argument>, <argument pos:start="69:30" pos:end="69:40"><expr pos:start="69:30" pos:end="69:40"><name pos:start="69:30" pos:end="69:40"><name pos:start="69:30" pos:end="69:34">avpkt</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:40">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:36"><expr pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:15"><name pos:start="73:5" pos:end="73:9">avpkt</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:15">size</name></name>     <operator pos:start="73:21" pos:end="73:21">=</operator> <name pos:start="73:23" pos:end="73:35"><name pos:start="73:23" pos:end="73:23">c</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:35">frame_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:24"><expr pos:start="75:5" pos:end="75:23"><operator pos:start="75:5" pos:end="75:5">*</operator><name pos:start="75:6" pos:end="75:19">got_packet_ptr</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <literal type="number" pos:start="75:23" pos:end="75:23">1</literal></expr>;</expr_stmt>

    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
