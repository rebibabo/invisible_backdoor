<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13414.c" pos:tabs="8"><function pos:start="1:1" pos:end="473:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">render_slice</name><parameter_list pos:start="1:25" pos:end="1:56">(<parameter pos:start="1:26" pos:end="1:44"><decl pos:start="1:26" pos:end="1:44"><type pos:start="1:26" pos:end="1:44"><name pos:start="1:26" pos:end="1:41">Vp3DecodeContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:55"><decl pos:start="1:47" pos:end="1:55"><type pos:start="1:47" pos:end="1:55"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:55">slice</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="473:1">{<block_content pos:start="5:5" pos:end="471:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">m</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>  <comment type="block" pos:start="9:13" pos:end="9:44">/* indicates current fragment */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int16_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:24">dequantizer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:11">DCTELEM</name> <name pos:start="13:13" pos:end="13:21">__align16</name></type> <name pos:start="13:23" pos:end="13:31"><name pos:start="13:23" pos:end="13:27">block</name><index pos:start="13:28" pos:end="13:31">[<expr pos:start="13:29" pos:end="13:30"><literal type="number" pos:start="13:29" pos:end="13:30">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">char</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:31">output_plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:17">char</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:29">last_plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">char</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:31">golden_plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:15"><decl pos:start="21:5" pos:end="21:14"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:14">stride</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:53"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:16">motion_x</name> <init pos:start="23:18" pos:end="23:29">= <expr pos:start="23:20" pos:end="23:29"><literal type="number" pos:start="23:20" pos:end="23:29">0xdeadbeef</literal></expr></init></decl>, <decl pos:start="23:32" pos:end="23:52"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:32" pos:end="23:39">motion_y</name> <init pos:start="23:41" pos:end="23:52">= <expr pos:start="23:43" pos:end="23:52"><literal type="number" pos:start="23:43" pos:end="23:52">0xdeadbeef</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:47"><decl pos:start="25:5" pos:end="25:26"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:26">upper_motion_limit</name></decl>, <decl pos:start="25:29" pos:end="25:46"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:29" pos:end="25:46">lower_motion_limit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:29"><decl pos:start="27:5" pos:end="27:28"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:28">motion_halfpel_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:27"><decl pos:start="29:5" pos:end="29:26"><type pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:11">uint8_t</name> <modifier pos:start="29:13" pos:end="29:13">*</modifier></type><name pos:start="29:14" pos:end="29:26">motion_source</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:14"><decl pos:start="31:5" pos:end="31:13"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:13">plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:20"><decl pos:start="33:5" pos:end="33:19"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:19">plane_width</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:21"><decl pos:start="35:5" pos:end="35:20"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:20">plane_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:21"><decl pos:start="37:5" pos:end="37:20"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:20">slice_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:67"><decl pos:start="39:5" pos:end="39:66"><type pos:start="39:5" pos:end="39:7"><name pos:start="39:5" pos:end="39:7">int</name></type> <name pos:start="39:9" pos:end="39:32">current_macroblock_entry</name> <init pos:start="39:34" pos:end="39:66">= <expr pos:start="39:36" pos:end="39:66"><name pos:start="39:36" pos:end="39:40">slice</name> <operator pos:start="39:42" pos:end="39:42">*</operator> <name pos:start="39:44" pos:end="39:62"><name pos:start="39:44" pos:end="39:44">s</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:62">macroblock_width</name></name> <operator pos:start="39:64" pos:end="39:64">*</operator> <literal type="number" pos:start="39:66" pos:end="39:66">6</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="43:5" pos:end="45:15"><if pos:start="43:5" pos:end="45:15">if <condition pos:start="43:8" pos:end="43:38">(<expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:13">slice</name> <operator pos:start="43:15" pos:end="43:16">&gt;=</operator> <name pos:start="43:18" pos:end="43:37"><name pos:start="43:18" pos:end="43:18">s</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:37">macroblock_height</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:15"><block_content pos:start="45:9" pos:end="45:15">

        <return pos:start="45:9" pos:end="45:15">return;</return></block_content></block></if></if_stmt>



    <for pos:start="49:5" pos:end="433:5">for <control pos:start="49:9" pos:end="49:39">(<init pos:start="49:10" pos:end="49:19"><expr pos:start="49:10" pos:end="49:18"><name pos:start="49:10" pos:end="49:14">plane</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:30"><expr pos:start="49:21" pos:end="49:29"><name pos:start="49:21" pos:end="49:25">plane</name> <operator pos:start="49:27" pos:end="49:27">&lt;</operator> <literal type="number" pos:start="49:29" pos:end="49:29">3</literal></expr>;</condition> <incr pos:start="49:32" pos:end="49:38"><expr pos:start="49:32" pos:end="49:38"><name pos:start="49:32" pos:end="49:36">plane</name><operator pos:start="49:37" pos:end="49:38">++</operator></expr></incr>)</control> <block pos:start="49:41" pos:end="433:5">{<block_content pos:start="55:9" pos:end="431:9">



        <comment type="block" pos:start="53:9" pos:end="53:46">/* set up plane-specific parameters */</comment>

        <if_stmt pos:start="55:9" pos:end="133:9"><if pos:start="55:9" pos:end="81:9">if <condition pos:start="55:12" pos:end="55:23">(<expr pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:17">plane</name> <operator pos:start="55:19" pos:end="55:20">==</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>)</condition> <block pos:start="55:25" pos:end="81:9">{<block_content pos:start="57:13" pos:end="79:70">

            <expr_stmt pos:start="57:13" pos:end="57:52"><expr pos:start="57:13" pos:end="57:51"><name pos:start="57:13" pos:end="57:24">output_plane</name> <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:51"><name pos:start="57:28" pos:end="57:28">s</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:43">current_frame</name><operator pos:start="57:44" pos:end="57:44">.</operator><name pos:start="57:45" pos:end="57:48">data</name><index pos:start="57:49" pos:end="57:51">[<expr pos:start="57:50" pos:end="57:50"><literal type="number" pos:start="57:50" pos:end="57:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:47"><expr pos:start="59:13" pos:end="59:46"><name pos:start="59:13" pos:end="59:22">last_plane</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:46"><name pos:start="59:26" pos:end="59:26">s</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:38">last_frame</name><operator pos:start="59:39" pos:end="59:39">.</operator><name pos:start="59:40" pos:end="59:43">data</name><index pos:start="59:44" pos:end="59:46">[<expr pos:start="59:45" pos:end="59:45"><literal type="number" pos:start="59:45" pos:end="59:45">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:51"><expr pos:start="61:13" pos:end="61:50"><name pos:start="61:13" pos:end="61:24">golden_plane</name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:50"><name pos:start="61:28" pos:end="61:28">s</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:42">golden_frame</name><operator pos:start="61:43" pos:end="61:43">.</operator><name pos:start="61:44" pos:end="61:47">data</name><index pos:start="61:48" pos:end="61:50">[<expr pos:start="61:49" pos:end="61:49"><literal type="number" pos:start="61:49" pos:end="61:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:50"><expr pos:start="63:13" pos:end="63:49"><name pos:start="63:13" pos:end="63:18">stride</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:49"><name pos:start="63:22" pos:end="63:22">s</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:37">current_frame</name><operator pos:start="63:38" pos:end="63:38">.</operator><name pos:start="63:39" pos:end="63:46">linesize</name><index pos:start="63:47" pos:end="63:49">[<expr pos:start="63:48" pos:end="63:48"><literal type="number" pos:start="63:48" pos:end="63:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="65:52"><if pos:start="65:13" pos:end="65:52">if <condition pos:start="65:16" pos:end="65:34">(<expr pos:start="65:17" pos:end="65:33"><operator pos:start="65:17" pos:end="65:17">!</operator><name pos:start="65:18" pos:end="65:33"><name pos:start="65:18" pos:end="65:18">s</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:33">flipped_image</name></name></expr>)</condition><block type="pseudo" pos:start="65:36" pos:end="65:52"><block_content pos:start="65:36" pos:end="65:52"> <expr_stmt pos:start="65:36" pos:end="65:52"><expr pos:start="65:36" pos:end="65:51"><name pos:start="65:36" pos:end="65:41">stride</name> <operator pos:start="65:43" pos:end="65:43">=</operator> <operator pos:start="65:45" pos:end="65:45">-</operator><name pos:start="65:46" pos:end="65:51">stride</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:66"><expr pos:start="67:13" pos:end="67:65"><name pos:start="67:13" pos:end="67:30">upper_motion_limit</name> <operator pos:start="67:32" pos:end="67:32">=</operator> <literal type="number" pos:start="67:34" pos:end="67:34">7</literal> <operator pos:start="67:36" pos:end="67:36">*</operator> <name pos:start="67:38" pos:end="67:65"><name pos:start="67:38" pos:end="67:38">s</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:53">current_frame</name><operator pos:start="67:54" pos:end="67:54">.</operator><name pos:start="67:55" pos:end="67:62">linesize</name><index pos:start="67:63" pos:end="67:65">[<expr pos:start="67:64" pos:end="67:64"><literal type="number" pos:start="67:64" pos:end="67:64">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:89"><expr pos:start="69:13" pos:end="69:88"><name pos:start="69:13" pos:end="69:30">lower_motion_limit</name> <operator pos:start="69:32" pos:end="69:32">=</operator> <name pos:start="69:34" pos:end="69:42"><name pos:start="69:34" pos:end="69:34">s</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:42">height</name></name> <operator pos:start="69:44" pos:end="69:44">*</operator> <name pos:start="69:46" pos:end="69:73"><name pos:start="69:46" pos:end="69:46">s</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:61">current_frame</name><operator pos:start="69:62" pos:end="69:62">.</operator><name pos:start="69:63" pos:end="69:70">linesize</name><index pos:start="69:71" pos:end="69:73">[<expr pos:start="69:72" pos:end="69:72"><literal type="number" pos:start="69:72" pos:end="69:72">0</literal></expr>]</index></name> <operator pos:start="69:75" pos:end="69:75">+</operator> <name pos:start="69:77" pos:end="69:84"><name pos:start="69:77" pos:end="69:77">s</name><operator pos:start="69:78" pos:end="69:79">-&gt;</operator><name pos:start="69:80" pos:end="69:84">width</name></name> <operator pos:start="69:86" pos:end="69:86">-</operator> <literal type="number" pos:start="69:88" pos:end="69:88">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:44"><expr pos:start="71:13" pos:end="71:43"><name pos:start="71:13" pos:end="71:13">y</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <name pos:start="71:17" pos:end="71:21">slice</name> <operator pos:start="71:23" pos:end="71:23">*</operator> <name pos:start="71:25" pos:end="71:39">FRAGMENT_PIXELS</name> <operator pos:start="71:41" pos:end="71:41">*</operator> <literal type="number" pos:start="71:43" pos:end="71:43">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:35"><expr pos:start="73:13" pos:end="73:34"><name pos:start="73:13" pos:end="73:23">plane_width</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:34"><name pos:start="73:27" pos:end="73:27">s</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:34">width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:37"><expr pos:start="75:13" pos:end="75:36"><name pos:start="75:13" pos:end="75:24">plane_height</name> <operator pos:start="75:26" pos:end="75:26">=</operator> <name pos:start="75:28" pos:end="75:36"><name pos:start="75:28" pos:end="75:28">s</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:36">height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:51"><expr pos:start="77:13" pos:end="77:50"><name pos:start="77:13" pos:end="77:24">slice_height</name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:28">y</name> <operator pos:start="77:30" pos:end="77:30">+</operator> <name pos:start="77:32" pos:end="77:46">FRAGMENT_PIXELS</name> <operator pos:start="77:48" pos:end="77:48">*</operator> <literal type="number" pos:start="77:50" pos:end="77:50">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:70"><expr pos:start="79:13" pos:end="79:69"><name pos:start="79:13" pos:end="79:13">i</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:69"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:39">macroblock_fragments</name><index pos:start="79:40" pos:end="79:69">[<expr pos:start="79:41" pos:end="79:68"><name pos:start="79:41" pos:end="79:64">current_macroblock_entry</name> <operator pos:start="79:66" pos:end="79:66">+</operator> <literal type="number" pos:start="79:68" pos:end="79:68">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="81:11" pos:end="107:9">else if <condition pos:start="81:19" pos:end="81:30">(<expr pos:start="81:20" pos:end="81:29"><name pos:start="81:20" pos:end="81:24">plane</name> <operator pos:start="81:26" pos:end="81:27">==</operator> <literal type="number" pos:start="81:29" pos:end="81:29">1</literal></expr>)</condition> <block pos:start="81:32" pos:end="107:9">{<block_content pos:start="83:13" pos:end="105:70">

            <expr_stmt pos:start="83:13" pos:end="83:52"><expr pos:start="83:13" pos:end="83:51"><name pos:start="83:13" pos:end="83:24">output_plane</name> <operator pos:start="83:26" pos:end="83:26">=</operator> <name pos:start="83:28" pos:end="83:51"><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:43">current_frame</name><operator pos:start="83:44" pos:end="83:44">.</operator><name pos:start="83:45" pos:end="83:48">data</name><index pos:start="83:49" pos:end="83:51">[<expr pos:start="83:50" pos:end="83:50"><literal type="number" pos:start="83:50" pos:end="83:50">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:47"><expr pos:start="85:13" pos:end="85:46"><name pos:start="85:13" pos:end="85:22">last_plane</name> <operator pos:start="85:24" pos:end="85:24">=</operator> <name pos:start="85:26" pos:end="85:46"><name pos:start="85:26" pos:end="85:26">s</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:38">last_frame</name><operator pos:start="85:39" pos:end="85:39">.</operator><name pos:start="85:40" pos:end="85:43">data</name><index pos:start="85:44" pos:end="85:46">[<expr pos:start="85:45" pos:end="85:45"><literal type="number" pos:start="85:45" pos:end="85:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:51"><expr pos:start="87:13" pos:end="87:50"><name pos:start="87:13" pos:end="87:24">golden_plane</name> <operator pos:start="87:26" pos:end="87:26">=</operator> <name pos:start="87:28" pos:end="87:50"><name pos:start="87:28" pos:end="87:28">s</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:42">golden_frame</name><operator pos:start="87:43" pos:end="87:43">.</operator><name pos:start="87:44" pos:end="87:47">data</name><index pos:start="87:48" pos:end="87:50">[<expr pos:start="87:49" pos:end="87:49"><literal type="number" pos:start="87:49" pos:end="87:49">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:50"><expr pos:start="89:13" pos:end="89:49"><name pos:start="89:13" pos:end="89:18">stride</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:49"><name pos:start="89:22" pos:end="89:22">s</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:37">current_frame</name><operator pos:start="89:38" pos:end="89:38">.</operator><name pos:start="89:39" pos:end="89:46">linesize</name><index pos:start="89:47" pos:end="89:49">[<expr pos:start="89:48" pos:end="89:48"><literal type="number" pos:start="89:48" pos:end="89:48">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="91:52"><if pos:start="91:13" pos:end="91:52">if <condition pos:start="91:16" pos:end="91:34">(<expr pos:start="91:17" pos:end="91:33"><operator pos:start="91:17" pos:end="91:17">!</operator><name pos:start="91:18" pos:end="91:33"><name pos:start="91:18" pos:end="91:18">s</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:33">flipped_image</name></name></expr>)</condition><block type="pseudo" pos:start="91:36" pos:end="91:52"><block_content pos:start="91:36" pos:end="91:52"> <expr_stmt pos:start="91:36" pos:end="91:52"><expr pos:start="91:36" pos:end="91:51"><name pos:start="91:36" pos:end="91:41">stride</name> <operator pos:start="91:43" pos:end="91:43">=</operator> <operator pos:start="91:45" pos:end="91:45">-</operator><name pos:start="91:46" pos:end="91:51">stride</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:66"><expr pos:start="93:13" pos:end="93:65"><name pos:start="93:13" pos:end="93:30">upper_motion_limit</name> <operator pos:start="93:32" pos:end="93:32">=</operator> <literal type="number" pos:start="93:34" pos:end="93:34">7</literal> <operator pos:start="93:36" pos:end="93:36">*</operator> <name pos:start="93:38" pos:end="93:65"><name pos:start="93:38" pos:end="93:38">s</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:53">current_frame</name><operator pos:start="93:54" pos:end="93:54">.</operator><name pos:start="93:55" pos:end="93:62">linesize</name><index pos:start="93:63" pos:end="93:65">[<expr pos:start="93:64" pos:end="93:64"><literal type="number" pos:start="93:64" pos:end="93:64">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:101"><expr pos:start="95:13" pos:end="95:100"><name pos:start="95:13" pos:end="95:30">lower_motion_limit</name> <operator pos:start="95:32" pos:end="95:32">=</operator> <operator pos:start="95:34" pos:end="95:34">(</operator><name pos:start="95:35" pos:end="95:43"><name pos:start="95:35" pos:end="95:35">s</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:43">height</name></name> <operator pos:start="95:45" pos:end="95:45">/</operator> <literal type="number" pos:start="95:47" pos:end="95:47">2</literal><operator pos:start="95:48" pos:end="95:48">)</operator> <operator pos:start="95:50" pos:end="95:50">*</operator> <name pos:start="95:52" pos:end="95:79"><name pos:start="95:52" pos:end="95:52">s</name><operator pos:start="95:53" pos:end="95:54">-&gt;</operator><name pos:start="95:55" pos:end="95:67">current_frame</name><operator pos:start="95:68" pos:end="95:68">.</operator><name pos:start="95:69" pos:end="95:76">linesize</name><index pos:start="95:77" pos:end="95:79">[<expr pos:start="95:78" pos:end="95:78"><literal type="number" pos:start="95:78" pos:end="95:78">1</literal></expr>]</index></name> <operator pos:start="95:81" pos:end="95:81">+</operator> <operator pos:start="95:83" pos:end="95:83">(</operator><name pos:start="95:84" pos:end="95:91"><name pos:start="95:84" pos:end="95:84">s</name><operator pos:start="95:85" pos:end="95:86">-&gt;</operator><name pos:start="95:87" pos:end="95:91">width</name></name> <operator pos:start="95:93" pos:end="95:93">/</operator> <literal type="number" pos:start="95:95" pos:end="95:95">2</literal><operator pos:start="95:96" pos:end="95:96">)</operator> <operator pos:start="95:98" pos:end="95:98">-</operator> <literal type="number" pos:start="95:100" pos:end="95:100">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:40"><expr pos:start="97:13" pos:end="97:39"><name pos:start="97:13" pos:end="97:13">y</name> <operator pos:start="97:15" pos:end="97:15">=</operator> <name pos:start="97:17" pos:end="97:21">slice</name> <operator pos:start="97:23" pos:end="97:23">*</operator> <name pos:start="97:25" pos:end="97:39">FRAGMENT_PIXELS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:39"><expr pos:start="99:13" pos:end="99:38"><name pos:start="99:13" pos:end="99:23">plane_width</name> <operator pos:start="99:25" pos:end="99:25">=</operator> <name pos:start="99:27" pos:end="99:34"><name pos:start="99:27" pos:end="99:27">s</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:34">width</name></name> <operator pos:start="99:36" pos:end="99:36">/</operator> <literal type="number" pos:start="99:38" pos:end="99:38">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:41"><expr pos:start="101:13" pos:end="101:40"><name pos:start="101:13" pos:end="101:24">plane_height</name> <operator pos:start="101:26" pos:end="101:26">=</operator> <name pos:start="101:28" pos:end="101:36"><name pos:start="101:28" pos:end="101:28">s</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:36">height</name></name> <operator pos:start="101:38" pos:end="101:38">/</operator> <literal type="number" pos:start="101:40" pos:end="101:40">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:47"><expr pos:start="103:13" pos:end="103:46"><name pos:start="103:13" pos:end="103:24">slice_height</name> <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:28">y</name> <operator pos:start="103:30" pos:end="103:30">+</operator> <name pos:start="103:32" pos:end="103:46">FRAGMENT_PIXELS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:70"><expr pos:start="105:13" pos:end="105:69"><name pos:start="105:13" pos:end="105:13">i</name> <operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:69"><name pos:start="105:17" pos:end="105:17">s</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:39">macroblock_fragments</name><index pos:start="105:40" pos:end="105:69">[<expr pos:start="105:41" pos:end="105:68"><name pos:start="105:41" pos:end="105:64">current_macroblock_entry</name> <operator pos:start="105:66" pos:end="105:66">+</operator> <literal type="number" pos:start="105:68" pos:end="105:68">4</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="107:11" pos:end="133:9">else <block pos:start="107:16" pos:end="133:9">{<block_content pos:start="109:13" pos:end="131:70">

            <expr_stmt pos:start="109:13" pos:end="109:52"><expr pos:start="109:13" pos:end="109:51"><name pos:start="109:13" pos:end="109:24">output_plane</name> <operator pos:start="109:26" pos:end="109:26">=</operator> <name pos:start="109:28" pos:end="109:51"><name pos:start="109:28" pos:end="109:28">s</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:43">current_frame</name><operator pos:start="109:44" pos:end="109:44">.</operator><name pos:start="109:45" pos:end="109:48">data</name><index pos:start="109:49" pos:end="109:51">[<expr pos:start="109:50" pos:end="109:50"><literal type="number" pos:start="109:50" pos:end="109:50">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:47"><expr pos:start="111:13" pos:end="111:46"><name pos:start="111:13" pos:end="111:22">last_plane</name> <operator pos:start="111:24" pos:end="111:24">=</operator> <name pos:start="111:26" pos:end="111:46"><name pos:start="111:26" pos:end="111:26">s</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:38">last_frame</name><operator pos:start="111:39" pos:end="111:39">.</operator><name pos:start="111:40" pos:end="111:43">data</name><index pos:start="111:44" pos:end="111:46">[<expr pos:start="111:45" pos:end="111:45"><literal type="number" pos:start="111:45" pos:end="111:45">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:51"><expr pos:start="113:13" pos:end="113:50"><name pos:start="113:13" pos:end="113:24">golden_plane</name> <operator pos:start="113:26" pos:end="113:26">=</operator> <name pos:start="113:28" pos:end="113:50"><name pos:start="113:28" pos:end="113:28">s</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:42">golden_frame</name><operator pos:start="113:43" pos:end="113:43">.</operator><name pos:start="113:44" pos:end="113:47">data</name><index pos:start="113:48" pos:end="113:50">[<expr pos:start="113:49" pos:end="113:49"><literal type="number" pos:start="113:49" pos:end="113:49">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:50"><expr pos:start="115:13" pos:end="115:49"><name pos:start="115:13" pos:end="115:18">stride</name> <operator pos:start="115:20" pos:end="115:20">=</operator> <name pos:start="115:22" pos:end="115:49"><name pos:start="115:22" pos:end="115:22">s</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:37">current_frame</name><operator pos:start="115:38" pos:end="115:38">.</operator><name pos:start="115:39" pos:end="115:46">linesize</name><index pos:start="115:47" pos:end="115:49">[<expr pos:start="115:48" pos:end="115:48"><literal type="number" pos:start="115:48" pos:end="115:48">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="117:52"><if pos:start="117:13" pos:end="117:52">if <condition pos:start="117:16" pos:end="117:34">(<expr pos:start="117:17" pos:end="117:33"><operator pos:start="117:17" pos:end="117:17">!</operator><name pos:start="117:18" pos:end="117:33"><name pos:start="117:18" pos:end="117:18">s</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:33">flipped_image</name></name></expr>)</condition><block type="pseudo" pos:start="117:36" pos:end="117:52"><block_content pos:start="117:36" pos:end="117:52"> <expr_stmt pos:start="117:36" pos:end="117:52"><expr pos:start="117:36" pos:end="117:51"><name pos:start="117:36" pos:end="117:41">stride</name> <operator pos:start="117:43" pos:end="117:43">=</operator> <operator pos:start="117:45" pos:end="117:45">-</operator><name pos:start="117:46" pos:end="117:51">stride</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:66"><expr pos:start="119:13" pos:end="119:65"><name pos:start="119:13" pos:end="119:30">upper_motion_limit</name> <operator pos:start="119:32" pos:end="119:32">=</operator> <literal type="number" pos:start="119:34" pos:end="119:34">7</literal> <operator pos:start="119:36" pos:end="119:36">*</operator> <name pos:start="119:38" pos:end="119:65"><name pos:start="119:38" pos:end="119:38">s</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:53">current_frame</name><operator pos:start="119:54" pos:end="119:54">.</operator><name pos:start="119:55" pos:end="119:62">linesize</name><index pos:start="119:63" pos:end="119:65">[<expr pos:start="119:64" pos:end="119:64"><literal type="number" pos:start="119:64" pos:end="119:64">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:101"><expr pos:start="121:13" pos:end="121:100"><name pos:start="121:13" pos:end="121:30">lower_motion_limit</name> <operator pos:start="121:32" pos:end="121:32">=</operator> <operator pos:start="121:34" pos:end="121:34">(</operator><name pos:start="121:35" pos:end="121:43"><name pos:start="121:35" pos:end="121:35">s</name><operator pos:start="121:36" pos:end="121:37">-&gt;</operator><name pos:start="121:38" pos:end="121:43">height</name></name> <operator pos:start="121:45" pos:end="121:45">/</operator> <literal type="number" pos:start="121:47" pos:end="121:47">2</literal><operator pos:start="121:48" pos:end="121:48">)</operator> <operator pos:start="121:50" pos:end="121:50">*</operator> <name pos:start="121:52" pos:end="121:79"><name pos:start="121:52" pos:end="121:52">s</name><operator pos:start="121:53" pos:end="121:54">-&gt;</operator><name pos:start="121:55" pos:end="121:67">current_frame</name><operator pos:start="121:68" pos:end="121:68">.</operator><name pos:start="121:69" pos:end="121:76">linesize</name><index pos:start="121:77" pos:end="121:79">[<expr pos:start="121:78" pos:end="121:78"><literal type="number" pos:start="121:78" pos:end="121:78">2</literal></expr>]</index></name> <operator pos:start="121:81" pos:end="121:81">+</operator> <operator pos:start="121:83" pos:end="121:83">(</operator><name pos:start="121:84" pos:end="121:91"><name pos:start="121:84" pos:end="121:84">s</name><operator pos:start="121:85" pos:end="121:86">-&gt;</operator><name pos:start="121:87" pos:end="121:91">width</name></name> <operator pos:start="121:93" pos:end="121:93">/</operator> <literal type="number" pos:start="121:95" pos:end="121:95">2</literal><operator pos:start="121:96" pos:end="121:96">)</operator> <operator pos:start="121:98" pos:end="121:98">-</operator> <literal type="number" pos:start="121:100" pos:end="121:100">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:40"><expr pos:start="123:13" pos:end="123:39"><name pos:start="123:13" pos:end="123:13">y</name> <operator pos:start="123:15" pos:end="123:15">=</operator> <name pos:start="123:17" pos:end="123:21">slice</name> <operator pos:start="123:23" pos:end="123:23">*</operator> <name pos:start="123:25" pos:end="123:39">FRAGMENT_PIXELS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:39"><expr pos:start="125:13" pos:end="125:38"><name pos:start="125:13" pos:end="125:23">plane_width</name> <operator pos:start="125:25" pos:end="125:25">=</operator> <name pos:start="125:27" pos:end="125:34"><name pos:start="125:27" pos:end="125:27">s</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:34">width</name></name> <operator pos:start="125:36" pos:end="125:36">/</operator> <literal type="number" pos:start="125:38" pos:end="125:38">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:41"><expr pos:start="127:13" pos:end="127:40"><name pos:start="127:13" pos:end="127:24">plane_height</name> <operator pos:start="127:26" pos:end="127:26">=</operator> <name pos:start="127:28" pos:end="127:36"><name pos:start="127:28" pos:end="127:28">s</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:36">height</name></name> <operator pos:start="127:38" pos:end="127:38">/</operator> <literal type="number" pos:start="127:40" pos:end="127:40">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:47"><expr pos:start="129:13" pos:end="129:46"><name pos:start="129:13" pos:end="129:24">slice_height</name> <operator pos:start="129:26" pos:end="129:26">=</operator> <name pos:start="129:28" pos:end="129:28">y</name> <operator pos:start="129:30" pos:end="129:30">+</operator> <name pos:start="129:32" pos:end="129:46">FRAGMENT_PIXELS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:70"><expr pos:start="131:13" pos:end="131:69"><name pos:start="131:13" pos:end="131:13">i</name> <operator pos:start="131:15" pos:end="131:15">=</operator> <name pos:start="131:17" pos:end="131:69"><name pos:start="131:17" pos:end="131:17">s</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:39">macroblock_fragments</name><index pos:start="131:40" pos:end="131:69">[<expr pos:start="131:41" pos:end="131:68"><name pos:start="131:41" pos:end="131:64">current_macroblock_entry</name> <operator pos:start="131:66" pos:end="131:66">+</operator> <literal type="number" pos:start="131:68" pos:end="131:68">5</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    

        <if_stmt pos:start="137:9" pos:end="139:19"><if pos:start="137:9" pos:end="139:19">if<condition pos:start="137:11" pos:end="137:30">(<expr pos:start="137:12" pos:end="137:29"><call pos:start="137:12" pos:end="137:22"><name pos:start="137:12" pos:end="137:14">ABS</name><argument_list pos:start="137:15" pos:end="137:22">(<argument pos:start="137:16" pos:end="137:21"><expr pos:start="137:16" pos:end="137:21"><name pos:start="137:16" pos:end="137:21">stride</name></expr></argument>)</argument_list></call> <operator pos:start="137:24" pos:end="137:24">&gt;</operator> <literal type="number" pos:start="137:26" pos:end="137:29">2048</literal></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:19"><block_content pos:start="139:13" pos:end="139:19">

            <return pos:start="139:13" pos:end="139:19">return;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="139:21" pos:end="139:51">//various tables are fixed size</comment>



        <comment type="block" pos:start="143:9" pos:end="143:66">/* for each fragment row in the slice (both of them)... */</comment>

        <for pos:start="145:9" pos:end="431:9">for <control pos:start="145:13" pos:end="145:40">(<init pos:start="145:14" pos:end="145:14">;</init> <condition pos:start="145:16" pos:end="145:32"><expr pos:start="145:16" pos:end="145:31"><name pos:start="145:16" pos:end="145:16">y</name> <operator pos:start="145:18" pos:end="145:18">&lt;</operator> <name pos:start="145:20" pos:end="145:31">slice_height</name></expr>;</condition> <incr pos:start="145:34" pos:end="145:39"><expr pos:start="145:34" pos:end="145:39"><name pos:start="145:34" pos:end="145:34">y</name> <operator pos:start="145:36" pos:end="145:37">+=</operator> <literal type="number" pos:start="145:39" pos:end="145:39">8</literal></expr></incr>)</control> <block pos:start="145:42" pos:end="431:9">{<block_content pos:start="151:13" pos:end="429:13">



            <comment type="block" pos:start="149:13" pos:end="149:47">/* for each fragment in a row... */</comment>

            <for pos:start="151:13" pos:end="429:13">for <control pos:start="151:17" pos:end="151:53">(<init pos:start="151:18" pos:end="151:23"><expr pos:start="151:18" pos:end="151:22"><name pos:start="151:18" pos:end="151:18">x</name> <operator pos:start="151:20" pos:end="151:20">=</operator> <literal type="number" pos:start="151:22" pos:end="151:22">0</literal></expr>;</init> <condition pos:start="151:25" pos:end="151:40"><expr pos:start="151:25" pos:end="151:39"><name pos:start="151:25" pos:end="151:25">x</name> <operator pos:start="151:27" pos:end="151:27">&lt;</operator> <name pos:start="151:29" pos:end="151:39">plane_width</name></expr>;</condition> <incr pos:start="151:42" pos:end="151:52"><expr pos:start="151:42" pos:end="151:47"><name pos:start="151:42" pos:end="151:42">x</name> <operator pos:start="151:44" pos:end="151:45">+=</operator> <literal type="number" pos:start="151:47" pos:end="151:47">8</literal></expr><operator pos:start="151:48" pos:end="151:48">,</operator> <expr pos:start="151:50" pos:end="151:52"><name pos:start="151:50" pos:end="151:50">i</name><operator pos:start="151:51" pos:end="151:52">++</operator></expr></incr>)</control> <block pos:start="151:55" pos:end="429:13">{<block_content pos:start="155:17" pos:end="427:17">



                <if_stmt pos:start="155:17" pos:end="161:17"><if pos:start="155:17" pos:end="161:17">if <condition pos:start="155:20" pos:end="155:56">(<expr pos:start="155:21" pos:end="155:55"><operator pos:start="155:21" pos:end="155:21">(</operator><name pos:start="155:22" pos:end="155:22">i</name> <operator pos:start="155:24" pos:end="155:24">&lt;</operator> <literal type="number" pos:start="155:26" pos:end="155:26">0</literal><operator pos:start="155:27" pos:end="155:27">)</operator> <operator pos:start="155:29" pos:end="155:30">||</operator> <operator pos:start="155:32" pos:end="155:32">(</operator><name pos:start="155:33" pos:end="155:33">i</name> <operator pos:start="155:35" pos:end="155:36">&gt;=</operator> <name pos:start="155:38" pos:end="155:54"><name pos:start="155:38" pos:end="155:38">s</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:54">fragment_count</name></name><operator pos:start="155:55" pos:end="155:55">)</operator></expr>)</condition> <block pos:start="155:58" pos:end="161:17">{<block_content pos:start="157:21" pos:end="159:27">

                    <expr_stmt pos:start="157:21" pos:end="157:106"><expr pos:start="157:21" pos:end="157:105"><call pos:start="157:21" pos:end="157:105"><name pos:start="157:21" pos:end="157:26">av_log</name><argument_list pos:start="157:27" pos:end="157:105">(<argument pos:start="157:28" pos:end="157:35"><expr pos:start="157:28" pos:end="157:35"><name pos:start="157:28" pos:end="157:35"><name pos:start="157:28" pos:end="157:28">s</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:35">avctx</name></name></expr></argument>, <argument pos:start="157:38" pos:end="157:49"><expr pos:start="157:38" pos:end="157:49"><name pos:start="157:38" pos:end="157:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:52" pos:end="157:101"><expr pos:start="157:52" pos:end="157:101"><literal type="string" pos:start="157:52" pos:end="157:101">"  vp3:render_slice(): bad fragment number (%d)\n"</literal></expr></argument>, <argument pos:start="157:104" pos:end="157:104"><expr pos:start="157:104" pos:end="157:104"><name pos:start="157:104" pos:end="157:104">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="159:21" pos:end="159:27">return;</return>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="165:17" pos:end="165:55">/* transform if this block was coded */</comment>

                <if_stmt pos:start="167:17" pos:end="427:17"><if pos:start="167:17" pos:end="411:17">if <condition pos:start="167:20" pos:end="169:68">(<expr pos:start="167:21" pos:end="169:67"><operator pos:start="167:21" pos:end="167:21">(</operator><name pos:start="167:22" pos:end="167:40"><name pos:start="167:22" pos:end="167:22">s</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:37">all_fragments</name><index pos:start="167:38" pos:end="167:40">[<expr pos:start="167:39" pos:end="167:39"><name pos:start="167:39" pos:end="167:39">i</name></expr>]</index></name><operator pos:start="167:41" pos:end="167:41">.</operator><name pos:start="167:42" pos:end="167:54">coding_method</name> <operator pos:start="167:56" pos:end="167:57">!=</operator> <name pos:start="167:59" pos:end="167:67">MODE_COPY</name><operator pos:start="167:68" pos:end="167:68">)</operator> <operator pos:start="167:70" pos:end="167:71">&amp;&amp;</operator>

                    <operator pos:start="169:21" pos:end="169:21">!</operator><operator pos:start="169:22" pos:end="169:22">(</operator><operator pos:start="169:23" pos:end="169:23">(</operator><name pos:start="169:24" pos:end="169:38"><name pos:start="169:24" pos:end="169:24">s</name><operator pos:start="169:25" pos:end="169:26">-&gt;</operator><name pos:start="169:27" pos:end="169:31">avctx</name><operator pos:start="169:32" pos:end="169:33">-&gt;</operator><name pos:start="169:34" pos:end="169:38">flags</name></name> <operator pos:start="169:40" pos:end="169:40">&amp;</operator> <name pos:start="169:42" pos:end="169:56">CODEC_FLAG_GRAY</name><operator pos:start="169:57" pos:end="169:57">)</operator> <operator pos:start="169:59" pos:end="169:60">&amp;&amp;</operator> <name pos:start="169:62" pos:end="169:66">plane</name><operator pos:start="169:67" pos:end="169:67">)</operator></expr>)</condition> <block pos:start="169:70" pos:end="411:17">{<block_content pos:start="173:21" pos:end="407:37">



                    <if_stmt pos:start="173:21" pos:end="181:50"><if pos:start="173:21" pos:end="177:52">if <condition pos:start="173:24" pos:end="175:78">(<expr pos:start="173:25" pos:end="175:77"><operator pos:start="173:25" pos:end="173:25">(</operator><name pos:start="173:26" pos:end="173:44"><name pos:start="173:26" pos:end="173:26">s</name><operator pos:start="173:27" pos:end="173:28">-&gt;</operator><name pos:start="173:29" pos:end="173:41">all_fragments</name><index pos:start="173:42" pos:end="173:44">[<expr pos:start="173:43" pos:end="173:43"><name pos:start="173:43" pos:end="173:43">i</name></expr>]</index></name><operator pos:start="173:45" pos:end="173:45">.</operator><name pos:start="173:46" pos:end="173:58">coding_method</name> <operator pos:start="173:60" pos:end="173:61">==</operator> <name pos:start="173:63" pos:end="173:79">MODE_USING_GOLDEN</name><operator pos:start="173:80" pos:end="173:80">)</operator> <operator pos:start="173:82" pos:end="173:83">||</operator>

                        <operator pos:start="175:25" pos:end="175:25">(</operator><name pos:start="175:26" pos:end="175:44"><name pos:start="175:26" pos:end="175:26">s</name><operator pos:start="175:27" pos:end="175:28">-&gt;</operator><name pos:start="175:29" pos:end="175:41">all_fragments</name><index pos:start="175:42" pos:end="175:44">[<expr pos:start="175:43" pos:end="175:43"><name pos:start="175:43" pos:end="175:43">i</name></expr>]</index></name><operator pos:start="175:45" pos:end="175:45">.</operator><name pos:start="175:46" pos:end="175:58">coding_method</name> <operator pos:start="175:60" pos:end="175:61">==</operator> <name pos:start="175:63" pos:end="175:76">MODE_GOLDEN_MV</name><operator pos:start="175:77" pos:end="175:77">)</operator></expr>)</condition><block type="pseudo" pos:start="177:25" pos:end="177:52"><block_content pos:start="177:25" pos:end="177:52">

                        <expr_stmt pos:start="177:25" pos:end="177:52"><expr pos:start="177:25" pos:end="177:51"><name pos:start="177:25" pos:end="177:37">motion_source</name><operator pos:start="177:38" pos:end="177:38">=</operator> <name pos:start="177:40" pos:end="177:51">golden_plane</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="179:21" pos:end="181:50">else<block type="pseudo" pos:start="181:25" pos:end="181:50"><block_content pos:start="181:25" pos:end="181:50"> 

                        <expr_stmt pos:start="181:25" pos:end="181:50"><expr pos:start="181:25" pos:end="181:49"><name pos:start="181:25" pos:end="181:37">motion_source</name><operator pos:start="181:38" pos:end="181:38">=</operator> <name pos:start="181:40" pos:end="181:49">last_plane</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="185:21" pos:end="185:69"><expr pos:start="185:21" pos:end="185:68"><name pos:start="185:21" pos:end="185:33">motion_source</name> <operator pos:start="185:35" pos:end="185:36">+=</operator> <name pos:start="185:38" pos:end="185:56"><name pos:start="185:38" pos:end="185:38">s</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:53">all_fragments</name><index pos:start="185:54" pos:end="185:56">[<expr pos:start="185:55" pos:end="185:55"><name pos:start="185:55" pos:end="185:55">i</name></expr>]</index></name><operator pos:start="185:57" pos:end="185:57">.</operator><name pos:start="185:58" pos:end="185:68">first_pixel</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="187:21" pos:end="187:45"><expr pos:start="187:21" pos:end="187:44"><name pos:start="187:21" pos:end="187:40">motion_halfpel_index</name> <operator pos:start="187:42" pos:end="187:42">=</operator> <literal type="number" pos:start="187:44" pos:end="187:44">0</literal></expr>;</expr_stmt>



                    <comment type="block" pos:start="191:21" pos:end="193:54">/* sort out the motion vector if this fragment is coded

                     * using a motion vector method */</comment>

                    <if_stmt pos:start="195:21" pos:end="253:21"><if pos:start="195:21" pos:end="253:21">if <condition pos:start="195:24" pos:end="197:81">(<expr pos:start="195:25" pos:end="197:80"><operator pos:start="195:25" pos:end="195:25">(</operator><name pos:start="195:26" pos:end="195:44"><name pos:start="195:26" pos:end="195:26">s</name><operator pos:start="195:27" pos:end="195:28">-&gt;</operator><name pos:start="195:29" pos:end="195:41">all_fragments</name><index pos:start="195:42" pos:end="195:44">[<expr pos:start="195:43" pos:end="195:43"><name pos:start="195:43" pos:end="195:43">i</name></expr>]</index></name><operator pos:start="195:45" pos:end="195:45">.</operator><name pos:start="195:46" pos:end="195:58">coding_method</name> <operator pos:start="195:60" pos:end="195:60">&gt;</operator> <name pos:start="195:62" pos:end="195:71">MODE_INTRA</name><operator pos:start="195:72" pos:end="195:72">)</operator> <operator pos:start="195:74" pos:end="195:75">&amp;&amp;</operator>

                        <operator pos:start="197:25" pos:end="197:25">(</operator><name pos:start="197:26" pos:end="197:44"><name pos:start="197:26" pos:end="197:26">s</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:41">all_fragments</name><index pos:start="197:42" pos:end="197:44">[<expr pos:start="197:43" pos:end="197:43"><name pos:start="197:43" pos:end="197:43">i</name></expr>]</index></name><operator pos:start="197:45" pos:end="197:45">.</operator><name pos:start="197:46" pos:end="197:58">coding_method</name> <operator pos:start="197:60" pos:end="197:61">!=</operator> <name pos:start="197:63" pos:end="197:79">MODE_USING_GOLDEN</name><operator pos:start="197:80" pos:end="197:80">)</operator></expr>)</condition> <block pos:start="197:83" pos:end="253:21">{<block_content pos:start="199:25" pos:end="251:25">

                        <decl_stmt pos:start="199:25" pos:end="199:41"><decl pos:start="199:25" pos:end="199:33"><type pos:start="199:25" pos:end="199:27"><name pos:start="199:25" pos:end="199:27">int</name></type> <name pos:start="199:29" pos:end="199:33">src_x</name></decl>, <decl pos:start="199:36" pos:end="199:40"><type ref="prev" pos:start="199:25" pos:end="199:27"/><name pos:start="199:36" pos:end="199:40">src_y</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="201:25" pos:end="201:64"><expr pos:start="201:25" pos:end="201:63"><name pos:start="201:25" pos:end="201:32">motion_x</name> <operator pos:start="201:34" pos:end="201:34">=</operator> <name pos:start="201:36" pos:end="201:54"><name pos:start="201:36" pos:end="201:36">s</name><operator pos:start="201:37" pos:end="201:38">-&gt;</operator><name pos:start="201:39" pos:end="201:51">all_fragments</name><index pos:start="201:52" pos:end="201:54">[<expr pos:start="201:53" pos:end="201:53"><name pos:start="201:53" pos:end="201:53">i</name></expr>]</index></name><operator pos:start="201:55" pos:end="201:55">.</operator><name pos:start="201:56" pos:end="201:63">motion_x</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="203:25" pos:end="203:64"><expr pos:start="203:25" pos:end="203:63"><name pos:start="203:25" pos:end="203:32">motion_y</name> <operator pos:start="203:34" pos:end="203:34">=</operator> <name pos:start="203:36" pos:end="203:54"><name pos:start="203:36" pos:end="203:36">s</name><operator pos:start="203:37" pos:end="203:38">-&gt;</operator><name pos:start="203:39" pos:end="203:51">all_fragments</name><index pos:start="203:52" pos:end="203:54">[<expr pos:start="203:53" pos:end="203:53"><name pos:start="203:53" pos:end="203:53">i</name></expr>]</index></name><operator pos:start="203:55" pos:end="203:55">.</operator><name pos:start="203:56" pos:end="203:63">motion_y</name></expr>;</expr_stmt>

                        <if_stmt pos:start="205:25" pos:end="211:25"><if pos:start="205:25" pos:end="211:25">if<condition pos:start="205:27" pos:end="205:33">(<expr pos:start="205:28" pos:end="205:32"><name pos:start="205:28" pos:end="205:32">plane</name></expr>)</condition><block pos:start="205:34" pos:end="211:25">{<block_content pos:start="207:29" pos:end="209:67">

                            <expr_stmt pos:start="207:29" pos:end="207:67"><expr pos:start="207:29" pos:end="207:66"><name pos:start="207:29" pos:end="207:36">motion_x</name><operator pos:start="207:37" pos:end="207:37">=</operator> <operator pos:start="207:39" pos:end="207:39">(</operator><name pos:start="207:40" pos:end="207:47">motion_x</name><operator pos:start="207:48" pos:end="207:49">&gt;&gt;</operator><literal type="number" pos:start="207:50" pos:end="207:50">1</literal><operator pos:start="207:51" pos:end="207:51">)</operator> <operator pos:start="207:53" pos:end="207:53">|</operator> <operator pos:start="207:55" pos:end="207:55">(</operator><name pos:start="207:56" pos:end="207:63">motion_x</name><operator pos:start="207:64" pos:end="207:64">&amp;</operator><literal type="number" pos:start="207:65" pos:end="207:65">1</literal><operator pos:start="207:66" pos:end="207:66">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="209:29" pos:end="209:67"><expr pos:start="209:29" pos:end="209:66"><name pos:start="209:29" pos:end="209:36">motion_y</name><operator pos:start="209:37" pos:end="209:37">=</operator> <operator pos:start="209:39" pos:end="209:39">(</operator><name pos:start="209:40" pos:end="209:47">motion_y</name><operator pos:start="209:48" pos:end="209:49">&gt;&gt;</operator><literal type="number" pos:start="209:50" pos:end="209:50">1</literal><operator pos:start="209:51" pos:end="209:51">)</operator> <operator pos:start="209:53" pos:end="209:53">|</operator> <operator pos:start="209:55" pos:end="209:55">(</operator><name pos:start="209:56" pos:end="209:63">motion_y</name><operator pos:start="209:64" pos:end="209:64">&amp;</operator><literal type="number" pos:start="209:65" pos:end="209:65">1</literal><operator pos:start="209:66" pos:end="209:66">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>



                        <expr_stmt pos:start="215:25" pos:end="215:49"><expr pos:start="215:25" pos:end="215:48"><name pos:start="215:25" pos:end="215:29">src_x</name><operator pos:start="215:30" pos:end="215:30">=</operator> <operator pos:start="215:32" pos:end="215:32">(</operator><name pos:start="215:33" pos:end="215:40">motion_x</name><operator pos:start="215:41" pos:end="215:42">&gt;&gt;</operator><literal type="number" pos:start="215:43" pos:end="215:43">1</literal><operator pos:start="215:44" pos:end="215:44">)</operator> <operator pos:start="215:46" pos:end="215:46">+</operator> <name pos:start="215:48" pos:end="215:48">x</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="217:25" pos:end="217:49"><expr pos:start="217:25" pos:end="217:48"><name pos:start="217:25" pos:end="217:29">src_y</name><operator pos:start="217:30" pos:end="217:30">=</operator> <operator pos:start="217:32" pos:end="217:32">(</operator><name pos:start="217:33" pos:end="217:40">motion_y</name><operator pos:start="217:41" pos:end="217:42">&gt;&gt;</operator><literal type="number" pos:start="217:43" pos:end="217:43">1</literal><operator pos:start="217:44" pos:end="217:44">)</operator> <operator pos:start="217:46" pos:end="217:46">+</operator> <name pos:start="217:48" pos:end="217:48">y</name></expr>;</expr_stmt>

                        <if_stmt pos:start="219:25" pos:end="221:127"><if pos:start="219:25" pos:end="221:127">if <condition pos:start="219:28" pos:end="219:67">(<expr pos:start="219:29" pos:end="219:66"><operator pos:start="219:29" pos:end="219:29">(</operator><name pos:start="219:30" pos:end="219:37">motion_x</name> <operator pos:start="219:39" pos:end="219:40">==</operator> <literal type="number" pos:start="219:42" pos:end="219:44">127</literal><operator pos:start="219:45" pos:end="219:45">)</operator> <operator pos:start="219:47" pos:end="219:48">||</operator> <operator pos:start="219:50" pos:end="219:50">(</operator><name pos:start="219:51" pos:end="219:58">motion_y</name> <operator pos:start="219:60" pos:end="219:61">==</operator> <literal type="number" pos:start="219:63" pos:end="219:65">127</literal><operator pos:start="219:66" pos:end="219:66">)</operator></expr>)</condition><block type="pseudo" pos:start="221:29" pos:end="221:127"><block_content pos:start="221:29" pos:end="221:127">

                            <expr_stmt pos:start="221:29" pos:end="221:127"><expr pos:start="221:29" pos:end="221:126"><call pos:start="221:29" pos:end="221:126"><name pos:start="221:29" pos:end="221:34">av_log</name><argument_list pos:start="221:35" pos:end="221:126">(<argument pos:start="221:36" pos:end="221:43"><expr pos:start="221:36" pos:end="221:43"><name pos:start="221:36" pos:end="221:43"><name pos:start="221:36" pos:end="221:36">s</name><operator pos:start="221:37" pos:end="221:38">-&gt;</operator><name pos:start="221:39" pos:end="221:43">avctx</name></name></expr></argument>, <argument pos:start="221:46" pos:end="221:57"><expr pos:start="221:46" pos:end="221:57"><name pos:start="221:46" pos:end="221:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="221:60" pos:end="221:105"><expr pos:start="221:60" pos:end="221:105"><literal type="string" pos:start="221:60" pos:end="221:105">" help! got invalid motion vector! (%X, %X)\n"</literal></expr></argument>, <argument pos:start="221:108" pos:end="221:115"><expr pos:start="221:108" pos:end="221:115"><name pos:start="221:108" pos:end="221:115">motion_x</name></expr></argument>, <argument pos:start="221:118" pos:end="221:125"><expr pos:start="221:118" pos:end="221:125"><name pos:start="221:118" pos:end="221:125">motion_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="225:25" pos:end="225:63"><expr pos:start="225:25" pos:end="225:62"><name pos:start="225:25" pos:end="225:44">motion_halfpel_index</name> <operator pos:start="225:46" pos:end="225:46">=</operator> <name pos:start="225:48" pos:end="225:55">motion_x</name> <operator pos:start="225:57" pos:end="225:57">&amp;</operator> <literal type="number" pos:start="225:59" pos:end="225:62">0x01</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="227:25" pos:end="227:57"><expr pos:start="227:25" pos:end="227:56"><name pos:start="227:25" pos:end="227:37">motion_source</name> <operator pos:start="227:39" pos:end="227:40">+=</operator> <operator pos:start="227:42" pos:end="227:42">(</operator><name pos:start="227:43" pos:end="227:50">motion_x</name> <operator pos:start="227:52" pos:end="227:53">&gt;&gt;</operator> <literal type="number" pos:start="227:55" pos:end="227:55">1</literal><operator pos:start="227:56" pos:end="227:56">)</operator></expr>;</expr_stmt>



                        <expr_stmt pos:start="231:25" pos:end="231:71"><expr pos:start="231:25" pos:end="231:70"><name pos:start="231:25" pos:end="231:44">motion_halfpel_index</name> <operator pos:start="231:46" pos:end="231:47">|=</operator> <operator pos:start="231:49" pos:end="231:49">(</operator><name pos:start="231:50" pos:end="231:57">motion_y</name> <operator pos:start="231:59" pos:end="231:59">&amp;</operator> <literal type="number" pos:start="231:61" pos:end="231:64">0x01</literal><operator pos:start="231:65" pos:end="231:65">)</operator> <operator pos:start="231:67" pos:end="231:68">&lt;&lt;</operator> <literal type="number" pos:start="231:70" pos:end="231:70">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="233:25" pos:end="233:68"><expr pos:start="233:25" pos:end="233:67"><name pos:start="233:25" pos:end="233:37">motion_source</name> <operator pos:start="233:39" pos:end="233:40">+=</operator> <operator pos:start="233:42" pos:end="233:42">(</operator><operator pos:start="233:43" pos:end="233:43">(</operator><name pos:start="233:44" pos:end="233:51">motion_y</name> <operator pos:start="233:53" pos:end="233:54">&gt;&gt;</operator> <literal type="number" pos:start="233:56" pos:end="233:56">1</literal><operator pos:start="233:57" pos:end="233:57">)</operator> <operator pos:start="233:59" pos:end="233:59">*</operator> <name pos:start="233:61" pos:end="233:66">stride</name><operator pos:start="233:67" pos:end="233:67">)</operator></expr>;</expr_stmt>



                        <if_stmt pos:start="237:25" pos:end="251:25"><if pos:start="237:25" pos:end="251:25">if<condition pos:start="237:27" pos:end="237:103">(<expr pos:start="237:28" pos:end="237:102"><name pos:start="237:28" pos:end="237:32">src_x</name><operator pos:start="237:33" pos:end="237:33">&lt;</operator><literal type="number" pos:start="237:34" pos:end="237:34">0</literal> <operator pos:start="237:36" pos:end="237:37">||</operator> <name pos:start="237:39" pos:end="237:43">src_y</name><operator pos:start="237:44" pos:end="237:44">&lt;</operator><literal type="number" pos:start="237:45" pos:end="237:45">0</literal> <operator pos:start="237:47" pos:end="237:48">||</operator> <name pos:start="237:50" pos:end="237:54">src_x</name> <operator pos:start="237:56" pos:end="237:56">+</operator> <literal type="number" pos:start="237:58" pos:end="237:58">9</literal> <operator pos:start="237:60" pos:end="237:61">&gt;=</operator> <name pos:start="237:63" pos:end="237:73">plane_width</name> <operator pos:start="237:75" pos:end="237:76">||</operator> <name pos:start="237:78" pos:end="237:82">src_y</name> <operator pos:start="237:84" pos:end="237:84">+</operator> <literal type="number" pos:start="237:86" pos:end="237:86">9</literal> <operator pos:start="237:88" pos:end="237:89">&gt;=</operator> <name pos:start="237:91" pos:end="237:102">plane_height</name></expr>)</condition><block pos:start="237:104" pos:end="251:25">{<block_content pos:start="239:29" pos:end="249:48">

                            <decl_stmt pos:start="239:29" pos:end="239:62"><decl pos:start="239:29" pos:end="239:61"><type pos:start="239:29" pos:end="239:37"><name pos:start="239:29" pos:end="239:35">uint8_t</name> <modifier pos:start="239:37" pos:end="239:37">*</modifier></type><name pos:start="239:38" pos:end="239:41">temp</name><init pos:start="239:42" pos:end="239:61">= <expr pos:start="239:44" pos:end="239:61"><name pos:start="239:44" pos:end="239:61"><name pos:start="239:44" pos:end="239:44">s</name><operator pos:start="239:45" pos:end="239:46">-&gt;</operator><name pos:start="239:47" pos:end="239:61">edge_emu_buffer</name></name></expr></init></decl>;</decl_stmt>

                            <if_stmt pos:start="241:29" pos:end="243:50"><if pos:start="241:29" pos:end="241:58">if<condition pos:start="241:31" pos:end="241:40">(<expr pos:start="241:32" pos:end="241:39"><name pos:start="241:32" pos:end="241:37">stride</name><operator pos:start="241:38" pos:end="241:38">&lt;</operator><literal type="number" pos:start="241:39" pos:end="241:39">0</literal></expr>)</condition><block type="pseudo" pos:start="241:42" pos:end="241:58"><block_content pos:start="241:42" pos:end="241:58"> <expr_stmt pos:start="241:42" pos:end="241:58"><expr pos:start="241:42" pos:end="241:57"><name pos:start="241:42" pos:end="241:45">temp</name> <operator pos:start="241:47" pos:end="241:48">-=</operator> <literal type="number" pos:start="241:50" pos:end="241:50">9</literal><operator pos:start="241:51" pos:end="241:51">*</operator><name pos:start="241:52" pos:end="241:57">stride</name></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="243:29" pos:end="243:50">else<block type="pseudo" pos:start="243:34" pos:end="243:50"><block_content pos:start="243:34" pos:end="243:50"> <expr_stmt pos:start="243:34" pos:end="243:50"><expr pos:start="243:34" pos:end="243:49"><name pos:start="243:34" pos:end="243:37">temp</name> <operator pos:start="243:39" pos:end="243:40">+=</operator> <literal type="number" pos:start="243:42" pos:end="243:42">9</literal><operator pos:start="243:43" pos:end="243:43">*</operator><name pos:start="243:44" pos:end="243:49">stride</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                            <expr_stmt pos:start="247:29" pos:end="247:124"><expr pos:start="247:29" pos:end="247:123"><call pos:start="247:29" pos:end="247:123"><name pos:start="247:29" pos:end="247:47">ff_emulated_edge_mc</name><argument_list pos:start="247:48" pos:end="247:123">(<argument pos:start="247:49" pos:end="247:52"><expr pos:start="247:49" pos:end="247:52"><name pos:start="247:49" pos:end="247:52">temp</name></expr></argument>, <argument pos:start="247:55" pos:end="247:67"><expr pos:start="247:55" pos:end="247:67"><name pos:start="247:55" pos:end="247:67">motion_source</name></expr></argument>, <argument pos:start="247:70" pos:end="247:75"><expr pos:start="247:70" pos:end="247:75"><name pos:start="247:70" pos:end="247:75">stride</name></expr></argument>, <argument pos:start="247:78" pos:end="247:78"><expr pos:start="247:78" pos:end="247:78"><literal type="number" pos:start="247:78" pos:end="247:78">9</literal></expr></argument>, <argument pos:start="247:81" pos:end="247:81"><expr pos:start="247:81" pos:end="247:81"><literal type="number" pos:start="247:81" pos:end="247:81">9</literal></expr></argument>, <argument pos:start="247:84" pos:end="247:88"><expr pos:start="247:84" pos:end="247:88"><name pos:start="247:84" pos:end="247:88">src_x</name></expr></argument>, <argument pos:start="247:91" pos:end="247:95"><expr pos:start="247:91" pos:end="247:95"><name pos:start="247:91" pos:end="247:95">src_y</name></expr></argument>, <argument pos:start="247:98" pos:end="247:108"><expr pos:start="247:98" pos:end="247:108"><name pos:start="247:98" pos:end="247:108">plane_width</name></expr></argument>, <argument pos:start="247:111" pos:end="247:122"><expr pos:start="247:111" pos:end="247:122"><name pos:start="247:111" pos:end="247:122">plane_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="249:29" pos:end="249:48"><expr pos:start="249:29" pos:end="249:47"><name pos:start="249:29" pos:end="249:41">motion_source</name><operator pos:start="249:42" pos:end="249:42">=</operator> <name pos:start="249:44" pos:end="249:47">temp</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                



                    <comment type="block" pos:start="259:21" pos:end="261:54">/* first, take care of copying a block from either the

                     * previous or the golden frame */</comment>

                    <if_stmt pos:start="263:21" pos:end="309:21"><if pos:start="263:21" pos:end="299:21">if <condition pos:start="263:24" pos:end="263:72">(<expr pos:start="263:25" pos:end="263:71"><name pos:start="263:25" pos:end="263:43"><name pos:start="263:25" pos:end="263:25">s</name><operator pos:start="263:26" pos:end="263:27">-&gt;</operator><name pos:start="263:28" pos:end="263:40">all_fragments</name><index pos:start="263:41" pos:end="263:43">[<expr pos:start="263:42" pos:end="263:42"><name pos:start="263:42" pos:end="263:42">i</name></expr>]</index></name><operator pos:start="263:44" pos:end="263:44">.</operator><name pos:start="263:45" pos:end="263:57">coding_method</name> <operator pos:start="263:59" pos:end="263:60">!=</operator> <name pos:start="263:62" pos:end="263:71">MODE_INTRA</name></expr>)</condition> <block pos:start="263:74" pos:end="299:21">{<block_content pos:start="273:25" pos:end="297:55">

                        <comment type="block" pos:start="265:25" pos:end="271:70">/* Note, it is possible to implement all MC cases with 

                           put_no_rnd_pixels_l2 which would look more like the 

                           VP3 source but this would be slower as 

                           put_no_rnd_pixels_tab is better optimzed */</comment>

                        <if_stmt pos:start="273:25" pos:end="295:25"><if pos:start="273:25" pos:end="281:25">if<condition pos:start="273:27" pos:end="273:53">(<expr pos:start="273:28" pos:end="273:52"><name pos:start="273:28" pos:end="273:47">motion_halfpel_index</name> <operator pos:start="273:49" pos:end="273:50">!=</operator> <literal type="number" pos:start="273:52" pos:end="273:52">3</literal></expr>)</condition><block pos:start="273:54" pos:end="281:25">{<block_content pos:start="275:29" pos:end="279:58">

                            <expr_stmt pos:start="275:29" pos:end="279:58"><expr pos:start="275:29" pos:end="279:57"><name pos:start="275:29" pos:end="275:81"><name pos:start="275:29" pos:end="275:29">s</name><operator pos:start="275:30" pos:end="275:31">-&gt;</operator><name pos:start="275:32" pos:end="275:34">dsp</name><operator pos:start="275:35" pos:end="275:35">.</operator><name pos:start="275:36" pos:end="275:56">put_no_rnd_pixels_tab</name><index pos:start="275:57" pos:end="275:59">[<expr pos:start="275:58" pos:end="275:58"><literal type="number" pos:start="275:58" pos:end="275:58">1</literal></expr>]</index><index pos:start="275:60" pos:end="275:81">[<expr pos:start="275:61" pos:end="275:80"><name pos:start="275:61" pos:end="275:80">motion_halfpel_index</name></expr>]</index></name><operator pos:start="275:82" pos:end="275:82">(</operator>

                                <name pos:start="277:33" pos:end="277:44">output_plane</name> <operator pos:start="277:46" pos:end="277:46">+</operator> <name pos:start="277:48" pos:end="277:66"><name pos:start="277:48" pos:end="277:48">s</name><operator pos:start="277:49" pos:end="277:50">-&gt;</operator><name pos:start="277:51" pos:end="277:63">all_fragments</name><index pos:start="277:64" pos:end="277:66">[<expr pos:start="277:65" pos:end="277:65"><name pos:start="277:65" pos:end="277:65">i</name></expr>]</index></name><operator pos:start="277:67" pos:end="277:67">.</operator><name pos:start="277:68" pos:end="277:78">first_pixel</name><operator pos:start="277:79" pos:end="277:79">,</operator>

                                <name pos:start="279:33" pos:end="279:45">motion_source</name><operator pos:start="279:46" pos:end="279:46">,</operator> <name pos:start="279:48" pos:end="279:53">stride</name><operator pos:start="279:54" pos:end="279:54">,</operator> <literal type="number" pos:start="279:56" pos:end="279:56">8</literal><operator pos:start="279:57" pos:end="279:57">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></if><else pos:start="281:26" pos:end="295:25">else<block pos:start="281:30" pos:end="295:25">{<block_content pos:start="283:29" pos:end="293:43">

                            <decl_stmt pos:start="283:29" pos:end="283:61"><decl pos:start="283:29" pos:end="283:60"><type pos:start="283:29" pos:end="283:31"><name pos:start="283:29" pos:end="283:31">int</name></type> <name pos:start="283:33" pos:end="283:33">d</name><init pos:start="283:34" pos:end="283:60">= <expr pos:start="283:36" pos:end="283:60"><operator pos:start="283:36" pos:end="283:36">(</operator><name pos:start="283:37" pos:end="283:44">motion_x</name> <operator pos:start="283:46" pos:end="283:46">^</operator> <name pos:start="283:48" pos:end="283:55">motion_y</name><operator pos:start="283:56" pos:end="283:56">)</operator><operator pos:start="283:57" pos:end="283:58">&gt;&gt;</operator><literal type="number" pos:start="283:59" pos:end="283:60">31</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="283:63" pos:end="283:118">// d is 0 if motion_x and _y have the same sign, else -1</comment>

                            <expr_stmt pos:start="285:29" pos:end="293:43"><expr pos:start="285:29" pos:end="293:42"><name pos:start="285:29" pos:end="285:58"><name pos:start="285:29" pos:end="285:29">s</name><operator pos:start="285:30" pos:end="285:31">-&gt;</operator><name pos:start="285:32" pos:end="285:34">dsp</name><operator pos:start="285:35" pos:end="285:35">.</operator><name pos:start="285:36" pos:end="285:55">put_no_rnd_pixels_l2</name><index pos:start="285:56" pos:end="285:58">[<expr pos:start="285:57" pos:end="285:57"><literal type="number" pos:start="285:57" pos:end="285:57">1</literal></expr>]</index></name><operator pos:start="285:59" pos:end="285:59">(</operator>

                                <name pos:start="287:33" pos:end="287:44">output_plane</name> <operator pos:start="287:46" pos:end="287:46">+</operator> <name pos:start="287:48" pos:end="287:66"><name pos:start="287:48" pos:end="287:48">s</name><operator pos:start="287:49" pos:end="287:50">-&gt;</operator><name pos:start="287:51" pos:end="287:63">all_fragments</name><index pos:start="287:64" pos:end="287:66">[<expr pos:start="287:65" pos:end="287:65"><name pos:start="287:65" pos:end="287:65">i</name></expr>]</index></name><operator pos:start="287:67" pos:end="287:67">.</operator><name pos:start="287:68" pos:end="287:78">first_pixel</name><operator pos:start="287:79" pos:end="287:79">,</operator>

                                <name pos:start="289:33" pos:end="289:45">motion_source</name> <operator pos:start="289:47" pos:end="289:47">-</operator> <name pos:start="289:49" pos:end="289:49">d</name><operator pos:start="289:50" pos:end="289:50">,</operator> 

                                <name pos:start="291:33" pos:end="291:45">motion_source</name> <operator pos:start="291:47" pos:end="291:47">+</operator> <name pos:start="291:49" pos:end="291:54">stride</name> <operator pos:start="291:56" pos:end="291:56">+</operator> <literal type="number" pos:start="291:58" pos:end="291:60">1</literal> <operator pos:start="291:60" pos:end="291:60">+</operator> <name pos:start="291:62" pos:end="291:62">d</name><operator pos:start="291:63" pos:end="291:63">,</operator> 

                                <name pos:start="293:33" pos:end="293:38">stride</name><operator pos:start="293:39" pos:end="293:39">,</operator> <literal type="number" pos:start="293:41" pos:end="293:41">8</literal><operator pos:start="293:42" pos:end="293:42">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="297:25" pos:end="297:55"><expr pos:start="297:25" pos:end="297:54"><name pos:start="297:25" pos:end="297:35">dequantizer</name> <operator pos:start="297:37" pos:end="297:37">=</operator> <name pos:start="297:39" pos:end="297:54"><name pos:start="297:39" pos:end="297:39">s</name><operator pos:start="297:40" pos:end="297:41">-&gt;</operator><name pos:start="297:42" pos:end="297:54">inter_dequant</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="299:22" pos:end="309:21">else<block pos:start="299:26" pos:end="309:21">{<block_content pos:start="301:25" pos:end="307:61">

                        <if_stmt pos:start="301:25" pos:end="307:61"><if pos:start="301:25" pos:end="303:61">if <condition pos:start="301:28" pos:end="301:39">(<expr pos:start="301:29" pos:end="301:38"><name pos:start="301:29" pos:end="301:33">plane</name> <operator pos:start="301:35" pos:end="301:36">==</operator> <literal type="number" pos:start="301:38" pos:end="301:38">0</literal></expr>)</condition><block type="pseudo" pos:start="303:29" pos:end="303:61"><block_content pos:start="303:29" pos:end="303:61">

                            <expr_stmt pos:start="303:29" pos:end="303:61"><expr pos:start="303:29" pos:end="303:60"><name pos:start="303:29" pos:end="303:39">dequantizer</name> <operator pos:start="303:41" pos:end="303:41">=</operator> <name pos:start="303:43" pos:end="303:60"><name pos:start="303:43" pos:end="303:43">s</name><operator pos:start="303:44" pos:end="303:45">-&gt;</operator><name pos:start="303:46" pos:end="303:60">intra_y_dequant</name></name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="305:25" pos:end="307:61">else<block type="pseudo" pos:start="307:29" pos:end="307:61"><block_content pos:start="307:29" pos:end="307:61">

                            <expr_stmt pos:start="307:29" pos:end="307:61"><expr pos:start="307:29" pos:end="307:60"><name pos:start="307:29" pos:end="307:39">dequantizer</name> <operator pos:start="307:41" pos:end="307:41">=</operator> <name pos:start="307:43" pos:end="307:60"><name pos:start="307:43" pos:end="307:43">s</name><operator pos:start="307:44" pos:end="307:45">-&gt;</operator><name pos:start="307:46" pos:end="307:60">intra_c_dequant</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>



                    <comment type="block" pos:start="313:21" pos:end="313:57">/* dequantize the DCT coefficients */</comment>

                    <expr_stmt pos:start="315:21" pos:end="319:53"><expr pos:start="315:21" pos:end="319:52"><call pos:start="315:21" pos:end="319:52"><name pos:start="315:21" pos:end="315:30">debug_idct</name><argument_list pos:start="315:31" pos:end="319:52">(<argument pos:start="315:32" pos:end="315:86"><expr pos:start="315:32" pos:end="315:86"><literal type="string" pos:start="315:32" pos:end="315:86">"fragment %d, coding mode %d, DC = %d, dequant = %d:\n"</literal></expr></argument>, 

                        <argument pos:start="317:25" pos:end="317:25"><expr pos:start="317:25" pos:end="317:25"><name pos:start="317:25" pos:end="317:25">i</name></expr></argument>, <argument pos:start="317:28" pos:end="317:60"><expr pos:start="317:28" pos:end="317:60"><name pos:start="317:28" pos:end="317:46"><name pos:start="317:28" pos:end="317:28">s</name><operator pos:start="317:29" pos:end="317:30">-&gt;</operator><name pos:start="317:31" pos:end="317:43">all_fragments</name><index pos:start="317:44" pos:end="317:46">[<expr pos:start="317:45" pos:end="317:45"><name pos:start="317:45" pos:end="317:45">i</name></expr>]</index></name><operator pos:start="317:47" pos:end="317:47">.</operator><name pos:start="317:48" pos:end="317:60">coding_method</name></expr></argument>, 

                        <argument pos:start="319:25" pos:end="319:35"><expr pos:start="319:25" pos:end="319:35"><call pos:start="319:25" pos:end="319:35"><name pos:start="319:25" pos:end="319:32">DC_COEFF</name><argument_list pos:start="319:33" pos:end="319:35">(<argument pos:start="319:34" pos:end="319:34"><expr pos:start="319:34" pos:end="319:34"><name pos:start="319:34" pos:end="319:34">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="319:38" pos:end="319:51"><expr pos:start="319:38" pos:end="319:51"><name pos:start="319:38" pos:end="319:51"><name pos:start="319:38" pos:end="319:48">dequantizer</name><index pos:start="319:49" pos:end="319:51">[<expr pos:start="319:50" pos:end="319:50"><literal type="number" pos:start="319:50" pos:end="319:50">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="323:21" pos:end="351:21"><if pos:start="323:21" pos:end="337:21">if<condition pos:start="323:23" pos:end="323:56">(<expr pos:start="323:24" pos:end="323:55"><name pos:start="323:24" pos:end="323:42"><name pos:start="323:24" pos:end="323:24">s</name><operator pos:start="323:25" pos:end="323:26">-&gt;</operator><name pos:start="323:27" pos:end="323:31">avctx</name><operator pos:start="323:32" pos:end="323:33">-&gt;</operator><name pos:start="323:34" pos:end="323:42">idct_algo</name></name><operator pos:start="323:43" pos:end="323:44">==</operator><name pos:start="323:45" pos:end="323:55">FF_IDCT_VP3</name></expr>)</condition><block pos:start="323:57" pos:end="337:21">{<block_content pos:start="325:25" pos:end="335:25">

                        <decl_stmt pos:start="325:25" pos:end="325:52"><decl pos:start="325:25" pos:end="325:51"><type pos:start="325:25" pos:end="325:31"><name pos:start="325:25" pos:end="325:29">Coeff</name> <modifier pos:start="325:31" pos:end="325:31">*</modifier></type><name pos:start="325:32" pos:end="325:36">coeff</name><init pos:start="325:37" pos:end="325:51">= <expr pos:start="325:39" pos:end="325:51"><name pos:start="325:39" pos:end="325:47"><name pos:start="325:39" pos:end="325:39">s</name><operator pos:start="325:40" pos:end="325:41">-&gt;</operator><name pos:start="325:42" pos:end="325:47">coeffs</name></name> <operator pos:start="325:49" pos:end="325:49">+</operator> <name pos:start="325:51" pos:end="325:51">i</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="327:25" pos:end="327:56"><expr pos:start="327:25" pos:end="327:55"><call pos:start="327:25" pos:end="327:55"><name pos:start="327:25" pos:end="327:30">memset</name><argument_list pos:start="327:31" pos:end="327:55">(<argument pos:start="327:32" pos:end="327:36"><expr pos:start="327:32" pos:end="327:36"><name pos:start="327:32" pos:end="327:36">block</name></expr></argument>, <argument pos:start="327:39" pos:end="327:39"><expr pos:start="327:39" pos:end="327:39"><literal type="number" pos:start="327:39" pos:end="327:39">0</literal></expr></argument>, <argument pos:start="327:42" pos:end="327:54"><expr pos:start="327:42" pos:end="327:54"><sizeof pos:start="327:42" pos:end="327:54">sizeof<argument_list pos:start="327:48" pos:end="327:54">(<argument pos:start="327:49" pos:end="327:53"><expr pos:start="327:49" pos:end="327:53"><name pos:start="327:49" pos:end="327:53">block</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <while pos:start="329:25" pos:end="335:25">while<condition pos:start="329:30" pos:end="329:42">(<expr pos:start="329:31" pos:end="329:41"><name pos:start="329:31" pos:end="329:41"><name pos:start="329:31" pos:end="329:35">coeff</name><operator pos:start="329:36" pos:end="329:37">-&gt;</operator><name pos:start="329:38" pos:end="329:41">next</name></name></expr>)</condition><block pos:start="329:43" pos:end="335:25">{<block_content pos:start="331:29" pos:end="333:47">

                            <expr_stmt pos:start="331:29" pos:end="331:90"><expr pos:start="331:29" pos:end="331:89"><name pos:start="331:29" pos:end="331:47"><name pos:start="331:29" pos:end="331:33">block</name><index pos:start="331:34" pos:end="331:47">[<expr pos:start="331:35" pos:end="331:46"><name pos:start="331:35" pos:end="331:46"><name pos:start="331:35" pos:end="331:39">coeff</name><operator pos:start="331:40" pos:end="331:41">-&gt;</operator><name pos:start="331:42" pos:end="331:46">index</name></name></expr>]</index></name><operator pos:start="331:48" pos:end="331:48">=</operator> <name pos:start="331:50" pos:end="331:61"><name pos:start="331:50" pos:end="331:54">coeff</name><operator pos:start="331:55" pos:end="331:56">-&gt;</operator><name pos:start="331:57" pos:end="331:61">coeff</name></name> <operator pos:start="331:63" pos:end="331:63">*</operator> <name pos:start="331:65" pos:end="331:89"><name pos:start="331:65" pos:end="331:75">dequantizer</name><index pos:start="331:76" pos:end="331:89">[<expr pos:start="331:77" pos:end="331:88"><name pos:start="331:77" pos:end="331:88"><name pos:start="331:77" pos:end="331:81">coeff</name><operator pos:start="331:82" pos:end="331:83">-&gt;</operator><name pos:start="331:84" pos:end="331:88">index</name></name></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="333:29" pos:end="333:47"><expr pos:start="333:29" pos:end="333:46"><name pos:start="333:29" pos:end="333:33">coeff</name><operator pos:start="333:34" pos:end="333:34">=</operator> <name pos:start="333:36" pos:end="333:46"><name pos:start="333:36" pos:end="333:40">coeff</name><operator pos:start="333:41" pos:end="333:42">-&gt;</operator><name pos:start="333:43" pos:end="333:46">next</name></name></expr>;</expr_stmt>

                        </block_content>}</block></while>

                    </block_content>}</block></if><else pos:start="337:22" pos:end="351:21">else<block pos:start="337:26" pos:end="351:21">{<block_content pos:start="339:25" pos:end="349:25">

                        <decl_stmt pos:start="339:25" pos:end="339:52"><decl pos:start="339:25" pos:end="339:51"><type pos:start="339:25" pos:end="339:31"><name pos:start="339:25" pos:end="339:29">Coeff</name> <modifier pos:start="339:31" pos:end="339:31">*</modifier></type><name pos:start="339:32" pos:end="339:36">coeff</name><init pos:start="339:37" pos:end="339:51">= <expr pos:start="339:39" pos:end="339:51"><name pos:start="339:39" pos:end="339:47"><name pos:start="339:39" pos:end="339:39">s</name><operator pos:start="339:40" pos:end="339:41">-&gt;</operator><name pos:start="339:42" pos:end="339:47">coeffs</name></name> <operator pos:start="339:49" pos:end="339:49">+</operator> <name pos:start="339:51" pos:end="339:51">i</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="341:25" pos:end="341:56"><expr pos:start="341:25" pos:end="341:55"><call pos:start="341:25" pos:end="341:55"><name pos:start="341:25" pos:end="341:30">memset</name><argument_list pos:start="341:31" pos:end="341:55">(<argument pos:start="341:32" pos:end="341:36"><expr pos:start="341:32" pos:end="341:36"><name pos:start="341:32" pos:end="341:36">block</name></expr></argument>, <argument pos:start="341:39" pos:end="341:39"><expr pos:start="341:39" pos:end="341:39"><literal type="number" pos:start="341:39" pos:end="341:39">0</literal></expr></argument>, <argument pos:start="341:42" pos:end="341:54"><expr pos:start="341:42" pos:end="341:54"><sizeof pos:start="341:42" pos:end="341:54">sizeof<argument_list pos:start="341:48" pos:end="341:54">(<argument pos:start="341:49" pos:end="341:53"><expr pos:start="341:49" pos:end="341:53"><name pos:start="341:49" pos:end="341:53">block</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <while pos:start="343:25" pos:end="349:25">while<condition pos:start="343:30" pos:end="343:42">(<expr pos:start="343:31" pos:end="343:41"><name pos:start="343:31" pos:end="343:41"><name pos:start="343:31" pos:end="343:35">coeff</name><operator pos:start="343:36" pos:end="343:37">-&gt;</operator><name pos:start="343:38" pos:end="343:41">next</name></name></expr>)</condition><block pos:start="343:43" pos:end="349:25">{<block_content pos:start="345:29" pos:end="347:47">

                            <expr_stmt pos:start="345:29" pos:end="345:99"><expr pos:start="345:29" pos:end="345:98"><name pos:start="345:29" pos:end="345:47"><name pos:start="345:29" pos:end="345:33">block</name><index pos:start="345:34" pos:end="345:47">[<expr pos:start="345:35" pos:end="345:46"><name pos:start="345:35" pos:end="345:46"><name pos:start="345:35" pos:end="345:39">coeff</name><operator pos:start="345:40" pos:end="345:41">-&gt;</operator><name pos:start="345:42" pos:end="345:46">index</name></name></expr>]</index></name><operator pos:start="345:48" pos:end="345:48">=</operator> <operator pos:start="345:50" pos:end="345:50">(</operator><name pos:start="345:51" pos:end="345:62"><name pos:start="345:51" pos:end="345:55">coeff</name><operator pos:start="345:56" pos:end="345:57">-&gt;</operator><name pos:start="345:58" pos:end="345:62">coeff</name></name> <operator pos:start="345:64" pos:end="345:64">*</operator> <name pos:start="345:66" pos:end="345:90"><name pos:start="345:66" pos:end="345:76">dequantizer</name><index pos:start="345:77" pos:end="345:90">[<expr pos:start="345:78" pos:end="345:89"><name pos:start="345:78" pos:end="345:89"><name pos:start="345:78" pos:end="345:82">coeff</name><operator pos:start="345:83" pos:end="345:84">-&gt;</operator><name pos:start="345:85" pos:end="345:89">index</name></name></expr>]</index></name> <operator pos:start="345:92" pos:end="345:92">+</operator> <literal type="number" pos:start="345:94" pos:end="345:94">2</literal><operator pos:start="345:95" pos:end="345:95">)</operator><operator pos:start="345:96" pos:end="345:97">&gt;&gt;</operator><literal type="number" pos:start="345:98" pos:end="345:98">2</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="347:29" pos:end="347:47"><expr pos:start="347:29" pos:end="347:46"><name pos:start="347:29" pos:end="347:33">coeff</name><operator pos:start="347:34" pos:end="347:34">=</operator> <name pos:start="347:36" pos:end="347:46"><name pos:start="347:36" pos:end="347:40">coeff</name><operator pos:start="347:41" pos:end="347:42">-&gt;</operator><name pos:start="347:43" pos:end="347:46">next</name></name></expr>;</expr_stmt>

                        </block_content>}</block></while>

                    </block_content>}</block></else></if_stmt>



                    <comment type="block" pos:start="355:21" pos:end="355:71">/* invert DCT and place (or add) in final output */</comment>

                

                    <if_stmt pos:start="359:21" pos:end="383:21"><if pos:start="359:21" pos:end="373:21">if <condition pos:start="359:24" pos:end="359:72">(<expr pos:start="359:25" pos:end="359:71"><name pos:start="359:25" pos:end="359:43"><name pos:start="359:25" pos:end="359:25">s</name><operator pos:start="359:26" pos:end="359:27">-&gt;</operator><name pos:start="359:28" pos:end="359:40">all_fragments</name><index pos:start="359:41" pos:end="359:43">[<expr pos:start="359:42" pos:end="359:42"><name pos:start="359:42" pos:end="359:42">i</name></expr>]</index></name><operator pos:start="359:44" pos:end="359:44">.</operator><name pos:start="359:45" pos:end="359:57">coding_method</name> <operator pos:start="359:59" pos:end="359:60">==</operator> <name pos:start="359:62" pos:end="359:71">MODE_INTRA</name></expr>)</condition> <block pos:start="359:74" pos:end="373:21">{<block_content pos:start="361:25" pos:end="371:35">

                        <if_stmt pos:start="361:25" pos:end="363:47"><if pos:start="361:25" pos:end="363:47">if<condition pos:start="361:27" pos:end="361:60">(<expr pos:start="361:28" pos:end="361:59"><name pos:start="361:28" pos:end="361:46"><name pos:start="361:28" pos:end="361:28">s</name><operator pos:start="361:29" pos:end="361:30">-&gt;</operator><name pos:start="361:31" pos:end="361:35">avctx</name><operator pos:start="361:36" pos:end="361:37">-&gt;</operator><name pos:start="361:38" pos:end="361:46">idct_algo</name></name><operator pos:start="361:47" pos:end="361:48">!=</operator><name pos:start="361:49" pos:end="361:59">FF_IDCT_VP3</name></expr>)</condition><block type="pseudo" pos:start="363:29" pos:end="363:47"><block_content pos:start="363:29" pos:end="363:47">

                            <expr_stmt pos:start="363:29" pos:end="363:47"><expr pos:start="363:29" pos:end="363:46"><name pos:start="363:29" pos:end="363:36"><name pos:start="363:29" pos:end="363:33">block</name><index pos:start="363:34" pos:end="363:36">[<expr pos:start="363:35" pos:end="363:35"><literal type="number" pos:start="363:35" pos:end="363:35">0</literal></expr>]</index></name> <operator pos:start="363:38" pos:end="363:39">+=</operator> <literal type="number" pos:start="363:41" pos:end="363:43">128</literal><operator pos:start="363:44" pos:end="363:45">&lt;&lt;</operator><literal type="number" pos:start="363:46" pos:end="363:46">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="365:25" pos:end="371:35"><expr pos:start="365:25" pos:end="371:34"><call pos:start="365:25" pos:end="371:34"><name pos:start="365:25" pos:end="365:39"><name pos:start="365:25" pos:end="365:25">s</name><operator pos:start="365:26" pos:end="365:27">-&gt;</operator><name pos:start="365:28" pos:end="365:30">dsp</name><operator pos:start="365:31" pos:end="365:31">.</operator><name pos:start="365:32" pos:end="365:39">idct_put</name></name><argument_list pos:start="365:40" pos:end="371:34">(

                            <argument pos:start="367:29" pos:end="367:74"><expr pos:start="367:29" pos:end="367:74"><name pos:start="367:29" pos:end="367:40">output_plane</name> <operator pos:start="367:42" pos:end="367:42">+</operator> <name pos:start="367:44" pos:end="367:62"><name pos:start="367:44" pos:end="367:44">s</name><operator pos:start="367:45" pos:end="367:46">-&gt;</operator><name pos:start="367:47" pos:end="367:59">all_fragments</name><index pos:start="367:60" pos:end="367:62">[<expr pos:start="367:61" pos:end="367:61"><name pos:start="367:61" pos:end="367:61">i</name></expr>]</index></name><operator pos:start="367:63" pos:end="367:63">.</operator><name pos:start="367:64" pos:end="367:74">first_pixel</name></expr></argument>,

                            <argument pos:start="369:29" pos:end="369:34"><expr pos:start="369:29" pos:end="369:34"><name pos:start="369:29" pos:end="369:34">stride</name></expr></argument>,

                            <argument pos:start="371:29" pos:end="371:33"><expr pos:start="371:29" pos:end="371:33"><name pos:start="371:29" pos:end="371:33">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="373:23" pos:end="383:21">else <block pos:start="373:28" pos:end="383:21">{<block_content pos:start="375:25" pos:end="381:35">

                        <expr_stmt pos:start="375:25" pos:end="381:35"><expr pos:start="375:25" pos:end="381:34"><call pos:start="375:25" pos:end="381:34"><name pos:start="375:25" pos:end="375:39"><name pos:start="375:25" pos:end="375:25">s</name><operator pos:start="375:26" pos:end="375:27">-&gt;</operator><name pos:start="375:28" pos:end="375:30">dsp</name><operator pos:start="375:31" pos:end="375:31">.</operator><name pos:start="375:32" pos:end="375:39">idct_add</name></name><argument_list pos:start="375:40" pos:end="381:34">(

                            <argument pos:start="377:29" pos:end="377:74"><expr pos:start="377:29" pos:end="377:74"><name pos:start="377:29" pos:end="377:40">output_plane</name> <operator pos:start="377:42" pos:end="377:42">+</operator> <name pos:start="377:44" pos:end="377:62"><name pos:start="377:44" pos:end="377:44">s</name><operator pos:start="377:45" pos:end="377:46">-&gt;</operator><name pos:start="377:47" pos:end="377:59">all_fragments</name><index pos:start="377:60" pos:end="377:62">[<expr pos:start="377:61" pos:end="377:61"><name pos:start="377:61" pos:end="377:61">i</name></expr>]</index></name><operator pos:start="377:63" pos:end="377:63">.</operator><name pos:start="377:64" pos:end="377:74">first_pixel</name></expr></argument>,

                            <argument pos:start="379:29" pos:end="379:34"><expr pos:start="379:29" pos:end="379:34"><name pos:start="379:29" pos:end="379:34">stride</name></expr></argument>,

                            <argument pos:start="381:29" pos:end="381:33"><expr pos:start="381:29" pos:end="381:33"><name pos:start="381:29" pos:end="381:33">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <expr_stmt pos:start="387:21" pos:end="391:39"><expr pos:start="387:21" pos:end="391:38"><call pos:start="387:21" pos:end="391:38"><name pos:start="387:21" pos:end="387:30">debug_idct</name><argument_list pos:start="387:31" pos:end="391:38">(<argument pos:start="387:32" pos:end="387:57"><expr pos:start="387:32" pos:end="387:57"><literal type="string" pos:start="387:32" pos:end="387:57">"block after idct_%s():\n"</literal></expr></argument>,

                        <argument pos:start="389:25" pos:end="391:37"><expr pos:start="389:25" pos:end="391:37"><ternary pos:start="389:25" pos:end="391:37"><condition pos:start="389:25" pos:end="389:74"><expr pos:start="389:25" pos:end="389:73"><operator pos:start="389:25" pos:end="389:25">(</operator><name pos:start="389:26" pos:end="389:44"><name pos:start="389:26" pos:end="389:26">s</name><operator pos:start="389:27" pos:end="389:28">-&gt;</operator><name pos:start="389:29" pos:end="389:41">all_fragments</name><index pos:start="389:42" pos:end="389:44">[<expr pos:start="389:43" pos:end="389:43"><name pos:start="389:43" pos:end="389:43">i</name></expr>]</index></name><operator pos:start="389:45" pos:end="389:45">.</operator><name pos:start="389:46" pos:end="389:58">coding_method</name> <operator pos:start="389:60" pos:end="389:61">==</operator> <name pos:start="389:63" pos:end="389:72">MODE_INTRA</name><operator pos:start="389:73" pos:end="389:73">)</operator></expr>?</condition><then pos:start="391:25" pos:end="391:29">

                        <expr pos:start="391:25" pos:end="391:29"><literal type="string" pos:start="391:25" pos:end="391:29">"put"</literal></expr> </then><else pos:start="391:31" pos:end="391:37">: <expr pos:start="391:33" pos:end="391:37"><literal type="string" pos:start="391:33" pos:end="391:37">"add"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="393:21" pos:end="405:21">for <control pos:start="393:25" pos:end="393:43">(<init pos:start="393:26" pos:end="393:31"><expr pos:start="393:26" pos:end="393:30"><name pos:start="393:26" pos:end="393:26">m</name> <operator pos:start="393:28" pos:end="393:28">=</operator> <literal type="number" pos:start="393:30" pos:end="393:30">0</literal></expr>;</init> <condition pos:start="393:33" pos:end="393:38"><expr pos:start="393:33" pos:end="393:37"><name pos:start="393:33" pos:end="393:33">m</name> <operator pos:start="393:35" pos:end="393:35">&lt;</operator> <literal type="number" pos:start="393:37" pos:end="393:37">8</literal></expr>;</condition> <incr pos:start="393:40" pos:end="393:42"><expr pos:start="393:40" pos:end="393:42"><name pos:start="393:40" pos:end="393:40">m</name><operator pos:start="393:41" pos:end="393:42">++</operator></expr></incr>)</control> <block pos:start="393:45" pos:end="405:21">{<block_content pos:start="395:25" pos:end="403:41">

                        <for pos:start="395:25" pos:end="401:25">for <control pos:start="395:29" pos:end="395:47">(<init pos:start="395:30" pos:end="395:35"><expr pos:start="395:30" pos:end="395:34"><name pos:start="395:30" pos:end="395:30">n</name> <operator pos:start="395:32" pos:end="395:32">=</operator> <literal type="number" pos:start="395:34" pos:end="395:34">0</literal></expr>;</init> <condition pos:start="395:37" pos:end="395:42"><expr pos:start="395:37" pos:end="395:41"><name pos:start="395:37" pos:end="395:37">n</name> <operator pos:start="395:39" pos:end="395:39">&lt;</operator> <literal type="number" pos:start="395:41" pos:end="395:41">8</literal></expr>;</condition> <incr pos:start="395:44" pos:end="395:46"><expr pos:start="395:44" pos:end="395:46"><name pos:start="395:44" pos:end="395:44">n</name><operator pos:start="395:45" pos:end="395:46">++</operator></expr></incr>)</control> <block pos:start="395:49" pos:end="401:25">{<block_content pos:start="397:29" pos:end="399:85">

                            <expr_stmt pos:start="397:29" pos:end="399:85"><expr pos:start="397:29" pos:end="399:84"><call pos:start="397:29" pos:end="399:84"><name pos:start="397:29" pos:end="397:38">debug_idct</name><argument_list pos:start="397:39" pos:end="399:84">(<argument pos:start="397:40" pos:end="397:45"><expr pos:start="397:40" pos:end="397:45"><literal type="string" pos:start="397:40" pos:end="397:45">" %3d"</literal></expr></argument>, <argument pos:start="397:48" pos:end="399:83"><expr pos:start="397:48" pos:end="399:83"><operator pos:start="397:48" pos:end="397:48">*</operator><operator pos:start="397:49" pos:end="397:49">(</operator><name pos:start="397:50" pos:end="397:61">output_plane</name> <operator pos:start="397:63" pos:end="397:63">+</operator> 

                                <name pos:start="399:33" pos:end="399:51"><name pos:start="399:33" pos:end="399:33">s</name><operator pos:start="399:34" pos:end="399:35">-&gt;</operator><name pos:start="399:36" pos:end="399:48">all_fragments</name><index pos:start="399:49" pos:end="399:51">[<expr pos:start="399:50" pos:end="399:50"><name pos:start="399:50" pos:end="399:50">i</name></expr>]</index></name><operator pos:start="399:52" pos:end="399:52">.</operator><name pos:start="399:53" pos:end="399:63">first_pixel</name> <operator pos:start="399:65" pos:end="399:65">+</operator> <operator pos:start="399:67" pos:end="399:67">(</operator><name pos:start="399:68" pos:end="399:68">m</name> <operator pos:start="399:70" pos:end="399:70">*</operator> <name pos:start="399:72" pos:end="399:77">stride</name> <operator pos:start="399:79" pos:end="399:79">+</operator> <name pos:start="399:81" pos:end="399:81">n</name><operator pos:start="399:82" pos:end="399:82">)</operator><operator pos:start="399:83" pos:end="399:83">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="403:25" pos:end="403:41"><expr pos:start="403:25" pos:end="403:40"><call pos:start="403:25" pos:end="403:40"><name pos:start="403:25" pos:end="403:34">debug_idct</name><argument_list pos:start="403:35" pos:end="403:40">(<argument pos:start="403:36" pos:end="403:39"><expr pos:start="403:36" pos:end="403:39"><literal type="string" pos:start="403:36" pos:end="403:39">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="407:21" pos:end="407:37"><expr pos:start="407:21" pos:end="407:36"><call pos:start="407:21" pos:end="407:36"><name pos:start="407:21" pos:end="407:30">debug_idct</name><argument_list pos:start="407:31" pos:end="407:36">(<argument pos:start="407:32" pos:end="407:35"><expr pos:start="407:32" pos:end="407:35"><literal type="string" pos:start="407:32" pos:end="407:35">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                </block_content>}</block></if> <else pos:start="411:19" pos:end="427:17">else <block pos:start="411:24" pos:end="427:17">{<block_content pos:start="417:21" pos:end="423:35">



                    <comment type="block" pos:start="415:21" pos:end="415:63">/* copy directly from the previous frame */</comment>

                    <expr_stmt pos:start="417:21" pos:end="423:35"><expr pos:start="417:21" pos:end="423:34"><name pos:start="417:21" pos:end="417:47"><name pos:start="417:21" pos:end="417:21">s</name><operator pos:start="417:22" pos:end="417:23">-&gt;</operator><name pos:start="417:24" pos:end="417:26">dsp</name><operator pos:start="417:27" pos:end="417:27">.</operator><name pos:start="417:28" pos:end="417:41">put_pixels_tab</name><index pos:start="417:42" pos:end="417:44">[<expr pos:start="417:43" pos:end="417:43"><literal type="number" pos:start="417:43" pos:end="417:43">1</literal></expr>]</index><index pos:start="417:45" pos:end="417:47">[<expr pos:start="417:46" pos:end="417:46"><literal type="number" pos:start="417:46" pos:end="417:46">0</literal></expr>]</index></name><operator pos:start="417:48" pos:end="417:48">(</operator>

                        <name pos:start="419:25" pos:end="419:36">output_plane</name> <operator pos:start="419:38" pos:end="419:38">+</operator> <name pos:start="419:40" pos:end="419:58"><name pos:start="419:40" pos:end="419:40">s</name><operator pos:start="419:41" pos:end="419:42">-&gt;</operator><name pos:start="419:43" pos:end="419:55">all_fragments</name><index pos:start="419:56" pos:end="419:58">[<expr pos:start="419:57" pos:end="419:57"><name pos:start="419:57" pos:end="419:57">i</name></expr>]</index></name><operator pos:start="419:59" pos:end="419:59">.</operator><name pos:start="419:60" pos:end="419:70">first_pixel</name><operator pos:start="419:71" pos:end="419:71">,</operator>

                        <name pos:start="421:25" pos:end="421:34">last_plane</name> <operator pos:start="421:36" pos:end="421:36">+</operator> <name pos:start="421:38" pos:end="421:56"><name pos:start="421:38" pos:end="421:38">s</name><operator pos:start="421:39" pos:end="421:40">-&gt;</operator><name pos:start="421:41" pos:end="421:53">all_fragments</name><index pos:start="421:54" pos:end="421:56">[<expr pos:start="421:55" pos:end="421:55"><name pos:start="421:55" pos:end="421:55">i</name></expr>]</index></name><operator pos:start="421:57" pos:end="421:57">.</operator><name pos:start="421:58" pos:end="421:68">first_pixel</name><operator pos:start="421:69" pos:end="421:69">,</operator>

                        <name pos:start="423:25" pos:end="423:30">stride</name><operator pos:start="423:31" pos:end="423:31">,</operator> <literal type="number" pos:start="423:33" pos:end="423:33">8</literal><operator pos:start="423:34" pos:end="423:34">)</operator></expr>;</expr_stmt>



                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="block" pos:start="437:5" pos:end="437:47">/* future loop filter logic goes here... */</comment>

    <comment type="block" pos:start="439:5" pos:end="451:7">/* algorithm: 

     *   if (slice != 0) 

     *     run filter on 1st row of Y slice

     *     run filter on U slice

     *     run filter on V slice

     *   run filter on 2nd row of Y slice

     */</comment>



     <comment type="block" pos:start="455:6" pos:end="455:61">/* this looks like a good place for slice dispatch... */</comment>

     <comment type="block" pos:start="457:6" pos:end="467:8">/* algorithm:

      *   if (slice &gt; 0)

      *     dispatch (slice - 1);

      *   if (slice == s-&gt;macroblock_height - 1)

      *     dispatch (slice);  // handle last slice

      */</comment>



    <expr_stmt pos:start="471:5" pos:end="471:13"><expr pos:start="471:5" pos:end="471:12"><call pos:start="471:5" pos:end="471:12"><name pos:start="471:5" pos:end="471:10">emms_c</name><argument_list pos:start="471:11" pos:end="471:12">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
