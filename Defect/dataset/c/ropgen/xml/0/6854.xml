<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6854.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:20">helper_fres</name> <parameter_list pos:start="1:22" pos:end="1:35">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:30"><name pos:start="1:23" pos:end="1:30">uint64_t</name></type> <name pos:start="1:32" pos:end="1:34">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:19">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:15">CPU_DoubleU</name></type> <name pos:start="5:17" pos:end="5:20">fone</name></decl>, <decl pos:start="5:23" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:15"/><name pos:start="5:23" pos:end="5:26">farg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">float32</name></type> <name pos:start="7:13" pos:end="7:15">f32</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:36"><expr pos:start="9:5" pos:end="9:35"><name pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:8">fone</name><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:11">ll</name></name> <operator pos:start="9:13" pos:end="9:13">=</operator> <literal type="number" pos:start="9:15" pos:end="9:35">0x3FF0000000000000ULL</literal></expr>;</expr_stmt> <comment type="block" pos:start="9:38" pos:end="9:46">/* 1.0 */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:18"><expr pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:8">farg</name><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:11">ll</name></name> <operator pos:start="11:13" pos:end="11:13">=</operator> <name pos:start="11:15" pos:end="11:17">arg</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="35:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:51">(<expr pos:start="15:9" pos:end="15:50"><call pos:start="15:9" pos:end="15:50"><name pos:start="15:9" pos:end="15:16">unlikely</name><argument_list pos:start="15:17" pos:end="15:50">(<argument pos:start="15:18" pos:end="15:49"><expr pos:start="15:18" pos:end="15:49"><call pos:start="15:18" pos:end="15:49"><name pos:start="15:18" pos:end="15:41">float64_is_signaling_nan</name><argument_list pos:start="15:42" pos:end="15:49">(<argument pos:start="15:43" pos:end="15:48"><expr pos:start="15:43" pos:end="15:48"><name pos:start="15:43" pos:end="15:48"><name pos:start="15:43" pos:end="15:46">farg</name><operator pos:start="15:47" pos:end="15:47">.</operator><name pos:start="15:48" pos:end="15:48">d</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:53" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:64">

        <comment type="block" pos:start="17:9" pos:end="17:29">/* sNaN reciprocal */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:64"><expr pos:start="19:9" pos:end="19:63"><name pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:12">farg</name><operator pos:start="19:13" pos:end="19:13">.</operator><name pos:start="19:14" pos:end="19:15">ll</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:63"><name pos:start="19:19" pos:end="19:39">fload_invalid_op_excp</name><argument_list pos:start="19:40" pos:end="19:63">(<argument pos:start="19:41" pos:end="19:62"><expr pos:start="19:41" pos:end="19:62"><name pos:start="19:41" pos:end="19:62">POWERPC_EXCP_FP_VXSNAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="27:5">else if <condition pos:start="21:15" pos:end="21:49">(<expr pos:start="21:16" pos:end="21:48"><call pos:start="21:16" pos:end="21:48"><name pos:start="21:16" pos:end="21:23">unlikely</name><argument_list pos:start="21:24" pos:end="21:48">(<argument pos:start="21:25" pos:end="21:47"><expr pos:start="21:25" pos:end="21:47"><call pos:start="21:25" pos:end="21:47"><name pos:start="21:25" pos:end="21:39">float64_is_zero</name><argument_list pos:start="21:40" pos:end="21:47">(<argument pos:start="21:41" pos:end="21:46"><expr pos:start="21:41" pos:end="21:46"><name pos:start="21:41" pos:end="21:46"><name pos:start="21:41" pos:end="21:44">farg</name><operator pos:start="21:45" pos:end="21:45">.</operator><name pos:start="21:46" pos:end="21:46">d</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:51" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:57">

        <comment type="block" pos:start="23:9" pos:end="23:29">/* Zero reciprocal */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:57"><expr pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:12">farg</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:15">ll</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:56"><name pos:start="25:19" pos:end="25:40">float_zero_divide_excp</name><argument_list pos:start="25:41" pos:end="25:56">(<argument pos:start="25:42" pos:end="25:47"><expr pos:start="25:42" pos:end="25:47"><name pos:start="25:42" pos:end="25:47"><name pos:start="25:42" pos:end="25:45">fone</name><operator pos:start="25:46" pos:end="25:46">.</operator><name pos:start="25:47" pos:end="25:47">d</name></name></expr></argument>, <argument pos:start="25:50" pos:end="25:55"><expr pos:start="25:50" pos:end="25:55"><name pos:start="25:50" pos:end="25:55"><name pos:start="25:50" pos:end="25:53">farg</name><operator pos:start="25:54" pos:end="25:54">.</operator><name pos:start="25:55" pos:end="25:55">d</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="35:5">else <block pos:start="27:12" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:58">

        <expr_stmt pos:start="29:9" pos:end="29:62"><expr pos:start="29:9" pos:end="29:61"><name pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:12">farg</name><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:14">d</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:61"><name pos:start="29:18" pos:end="29:28">float64_div</name><argument_list pos:start="29:29" pos:end="29:61">(<argument pos:start="29:30" pos:end="29:35"><expr pos:start="29:30" pos:end="29:35"><name pos:start="29:30" pos:end="29:35"><name pos:start="29:30" pos:end="29:33">fone</name><operator pos:start="29:34" pos:end="29:34">.</operator><name pos:start="29:35" pos:end="29:35">d</name></name></expr></argument>, <argument pos:start="29:38" pos:end="29:43"><expr pos:start="29:38" pos:end="29:43"><name pos:start="29:38" pos:end="29:43"><name pos:start="29:38" pos:end="29:41">farg</name><operator pos:start="29:42" pos:end="29:42">.</operator><name pos:start="29:43" pos:end="29:43">d</name></name></expr></argument>, <argument pos:start="29:46" pos:end="29:60"><expr pos:start="29:46" pos:end="29:60"><operator pos:start="29:46" pos:end="29:46">&amp;</operator><name pos:start="29:47" pos:end="29:60"><name pos:start="29:47" pos:end="29:49">env</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:60">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:11">f32</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:57"><name pos:start="31:15" pos:end="31:32">float64_to_float32</name><argument_list pos:start="31:33" pos:end="31:57">(<argument pos:start="31:34" pos:end="31:39"><expr pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:37">farg</name><operator pos:start="31:38" pos:end="31:38">.</operator><name pos:start="31:39" pos:end="31:39">d</name></name></expr></argument>, <argument pos:start="31:42" pos:end="31:56"><expr pos:start="31:42" pos:end="31:56"><operator pos:start="31:42" pos:end="31:42">&amp;</operator><name pos:start="31:43" pos:end="31:56"><name pos:start="31:43" pos:end="31:45">env</name><operator pos:start="31:46" pos:end="31:47">-&gt;</operator><name pos:start="31:48" pos:end="31:56">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:58"><expr pos:start="33:9" pos:end="33:57"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:12">farg</name><operator pos:start="33:13" pos:end="33:13">.</operator><name pos:start="33:14" pos:end="33:14">d</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:57"><name pos:start="33:18" pos:end="33:35">float32_to_float64</name><argument_list pos:start="33:36" pos:end="33:57">(<argument pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><name pos:start="33:37" pos:end="33:39">f32</name></expr></argument>, <argument pos:start="33:42" pos:end="33:56"><expr pos:start="33:42" pos:end="33:56"><operator pos:start="33:42" pos:end="33:42">&amp;</operator><name pos:start="33:43" pos:end="33:56"><name pos:start="33:43" pos:end="33:45">env</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:56">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="37:5" pos:end="37:19">return <expr pos:start="37:12" pos:end="37:18"><name pos:start="37:12" pos:end="37:18"><name pos:start="37:12" pos:end="37:15">farg</name><operator pos:start="37:16" pos:end="37:16">.</operator><name pos:start="37:17" pos:end="37:18">ll</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
