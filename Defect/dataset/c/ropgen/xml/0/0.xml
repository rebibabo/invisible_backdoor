<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/0.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:30">vdadec_init</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:14">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">VDADecoderContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">ctx</name> <init pos:start="5:28" pos:end="5:45">= <expr pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:34">avctx</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">vda_context</name></name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:31">vda_ctx</name> <init pos:start="7:33" pos:end="7:47">= <expr pos:start="7:35" pos:end="7:47"><operator pos:start="7:35" pos:end="7:35">&amp;</operator><name pos:start="7:36" pos:end="7:47"><name pos:start="7:36" pos:end="7:38">ctx</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:47">vda_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">OSStatus</name></type> <name pos:start="9:14" pos:end="9:19">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:30"><expr pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:7">ctx</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:25">h264_initialized</name></name> <operator pos:start="15:27" pos:end="15:27">=</operator> <literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:32">/* init pix_fmts of codec */</comment>

    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:38">(<expr pos:start="21:9" pos:end="21:37"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:37"><name pos:start="21:10" pos:end="21:28">ff_h264_vda_decoder</name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:37">pix_fmts</name></name></expr>)</condition> <block pos:start="21:40" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:55">

        <if_stmt pos:start="23:9" pos:end="29:55"><if pos:start="23:9" pos:end="25:66">if <condition pos:start="23:12" pos:end="23:80">(<expr pos:start="23:13" pos:end="23:79"><name pos:start="23:13" pos:end="23:42">kCFCoreFoundationVersionNumber</name> <operator pos:start="23:44" pos:end="23:44">&lt;</operator> <name pos:start="23:46" pos:end="23:79">kCFCoreFoundationVersionNumber10_7</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:66"><block_content pos:start="25:13" pos:end="25:66">

            <expr_stmt pos:start="25:13" pos:end="25:66"><expr pos:start="25:13" pos:end="25:65"><name pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:31">ff_h264_vda_decoder</name><operator pos:start="25:32" pos:end="25:32">.</operator><name pos:start="25:33" pos:end="25:40">pix_fmts</name></name> <operator pos:start="25:42" pos:end="25:42">=</operator> <name pos:start="25:44" pos:end="25:65">vda_pixfmts_prior_10_7</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="27:9" pos:end="29:55">else<block type="pseudo" pos:start="29:13" pos:end="29:55"><block_content pos:start="29:13" pos:end="29:55">

            <expr_stmt pos:start="29:13" pos:end="29:55"><expr pos:start="29:13" pos:end="29:54"><name pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:31">ff_h264_vda_decoder</name><operator pos:start="29:32" pos:end="29:32">.</operator><name pos:start="29:33" pos:end="29:40">pix_fmts</name></name> <operator pos:start="29:42" pos:end="29:42">=</operator> <name pos:start="29:44" pos:end="29:54">vda_pixfmts</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:18">/* init vda */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><call pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:10">memset</name><argument_list pos:start="37:11" pos:end="37:50">(<argument pos:start="37:12" pos:end="37:18"><expr pos:start="37:12" pos:end="37:18"><name pos:start="37:12" pos:end="37:18">vda_ctx</name></expr></argument>, <argument pos:start="37:21" pos:end="37:21"><expr pos:start="37:21" pos:end="37:21"><literal type="number" pos:start="37:21" pos:end="37:21">0</literal></expr></argument>, <argument pos:start="37:24" pos:end="37:49"><expr pos:start="37:24" pos:end="37:49"><sizeof pos:start="37:24" pos:end="37:49">sizeof<argument_list pos:start="37:30" pos:end="37:49">(<argument pos:start="37:31" pos:end="37:48"><expr pos:start="37:31" pos:end="37:48">struct <name pos:start="37:38" pos:end="37:48">vda_context</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:34"><expr pos:start="39:5" pos:end="39:33"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:11">vda_ctx</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:18">width</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:33"><name pos:start="39:22" pos:end="39:26">avctx</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:33">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:11">vda_ctx</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:19">height</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:35"><name pos:start="41:23" pos:end="41:27">avctx</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:35">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:11">vda_ctx</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:19">format</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <literal type="char" pos:start="43:23" pos:end="43:28">'avc1'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:30"><name pos:start="45:5" pos:end="45:11">vda_ctx</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:30">use_sync_decoding</name></name> <operator pos:start="45:32" pos:end="45:32">=</operator> <literal type="number" pos:start="45:34" pos:end="45:34">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:32"><expr pos:start="47:5" pos:end="47:31"><name pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:11">vda_ctx</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:27">use_ref_buffer</name></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <literal type="number" pos:start="47:31" pos:end="47:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:68"><expr pos:start="49:5" pos:end="49:67"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:7">ctx</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:16">pix_fmt</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:67"><name pos:start="49:20" pos:end="49:36"><name pos:start="49:20" pos:end="49:24">avctx</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:36">get_format</name></name><argument_list pos:start="49:37" pos:end="49:67">(<argument pos:start="49:38" pos:end="49:42"><expr pos:start="49:38" pos:end="49:42"><name pos:start="49:38" pos:end="49:42">avctx</name></expr></argument>, <argument pos:start="49:45" pos:end="49:66"><expr pos:start="49:45" pos:end="49:66"><name pos:start="49:45" pos:end="49:66"><name pos:start="49:45" pos:end="49:49">avctx</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:56">codec</name><operator pos:start="49:57" pos:end="49:58">-&gt;</operator><name pos:start="49:59" pos:end="49:66">pix_fmts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="51:5" pos:end="83:5">switch <condition pos:start="51:12" pos:end="51:25">(<expr pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:15">ctx</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:24">pix_fmt</name></name></expr>)</condition> <block pos:start="51:27" pos:end="83:5">{<block_content pos:start="53:5" pos:end="81:20">

    <case pos:start="53:5" pos:end="53:28">case <expr pos:start="53:10" pos:end="53:27"><name pos:start="53:10" pos:end="53:27">AV_PIX_FMT_UYVY422</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:42"><expr pos:start="55:9" pos:end="55:41"><name pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:15">vda_ctx</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:32">cv_pix_fmt_type</name></name> <operator pos:start="55:34" pos:end="55:34">=</operator> <literal type="char" pos:start="55:36" pos:end="55:41">'2vuy'</literal></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:28">case <expr pos:start="59:10" pos:end="59:27"><name pos:start="59:10" pos:end="59:27">AV_PIX_FMT_YUYV422</name></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:42"><expr pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:15">vda_ctx</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:32">cv_pix_fmt_type</name></name> <operator pos:start="61:34" pos:end="61:34">=</operator> <literal type="char" pos:start="61:36" pos:end="61:41">'yuvs'</literal></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:25">case <expr pos:start="65:10" pos:end="65:24"><name pos:start="65:10" pos:end="65:24">AV_PIX_FMT_NV12</name></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:42"><expr pos:start="67:9" pos:end="67:41"><name pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:15">vda_ctx</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:32">cv_pix_fmt_type</name></name> <operator pos:start="67:34" pos:end="67:34">=</operator> <literal type="char" pos:start="67:36" pos:end="67:41">'420v'</literal></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:28">case <expr pos:start="71:10" pos:end="71:27"><name pos:start="71:10" pos:end="71:27">AV_PIX_FMT_YUV420P</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:42"><expr pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:15">vda_ctx</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:32">cv_pix_fmt_type</name></name> <operator pos:start="73:34" pos:end="73:34">=</operator> <literal type="char" pos:start="73:36" pos:end="73:41">'y420'</literal></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <default pos:start="77:5" pos:end="77:12">default:</default>

        <expr_stmt pos:start="79:9" pos:end="79:86"><expr pos:start="79:9" pos:end="79:85"><call pos:start="79:9" pos:end="79:85"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:85">(<argument pos:start="79:16" pos:end="79:20"><expr pos:start="79:16" pos:end="79:20"><name pos:start="79:16" pos:end="79:20">avctx</name></expr></argument>, <argument pos:start="79:23" pos:end="79:34"><expr pos:start="79:23" pos:end="79:34"><name pos:start="79:23" pos:end="79:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:37" pos:end="79:68"><expr pos:start="79:37" pos:end="79:68"><literal type="string" pos:start="79:37" pos:end="79:68">"Unsupported pixel format: %d\n"</literal></expr></argument>, <argument pos:start="79:71" pos:end="79:84"><expr pos:start="79:71" pos:end="79:84"><name pos:start="79:71" pos:end="79:84"><name pos:start="79:71" pos:end="79:75">avctx</name><operator pos:start="79:76" pos:end="79:77">-&gt;</operator><name pos:start="79:78" pos:end="79:84">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:20">goto <name pos:start="81:14" pos:end="81:19">failed</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="85:5" pos:end="87:76"><expr pos:start="85:5" pos:end="87:75"><name pos:start="85:5" pos:end="85:10">status</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <call pos:start="85:14" pos:end="87:75"><name pos:start="85:14" pos:end="85:34">ff_vda_create_decoder</name><argument_list pos:start="85:35" pos:end="87:75">(<argument pos:start="85:36" pos:end="85:42"><expr pos:start="85:36" pos:end="85:42"><name pos:start="85:36" pos:end="85:42">vda_ctx</name></expr></argument>,

                                   <argument pos:start="87:36" pos:end="87:51"><expr pos:start="87:36" pos:end="87:51"><name pos:start="87:36" pos:end="87:51"><name pos:start="87:36" pos:end="87:40">avctx</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:51">extradata</name></name></expr></argument>, <argument pos:start="87:54" pos:end="87:74"><expr pos:start="87:54" pos:end="87:74"><name pos:start="87:54" pos:end="87:74"><name pos:start="87:54" pos:end="87:58">avctx</name><operator pos:start="87:59" pos:end="87:60">-&gt;</operator><name pos:start="87:61" pos:end="87:74">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="97:5">if <condition pos:start="89:8" pos:end="89:35">(<expr pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:14">status</name> <operator pos:start="89:16" pos:end="89:17">!=</operator> <name pos:start="89:19" pos:end="89:34">kVDADecoderNoErr</name></expr>)</condition> <block pos:start="89:37" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:20">

        <expr_stmt pos:start="91:9" pos:end="93:61"><expr pos:start="91:9" pos:end="93:60"><call pos:start="91:9" pos:end="93:60"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="93:60">(<argument pos:start="91:16" pos:end="91:20"><expr pos:start="91:16" pos:end="91:20"><name pos:start="91:16" pos:end="91:20">avctx</name></expr></argument>, <argument pos:start="91:23" pos:end="91:34"><expr pos:start="91:23" pos:end="91:34"><name pos:start="91:23" pos:end="91:34">AV_LOG_ERROR</name></expr></argument>,

                <argument pos:start="93:17" pos:end="93:51"><expr pos:start="93:17" pos:end="93:51"><literal type="string" pos:start="93:17" pos:end="93:51">"Failed to init VDA decoder: %d.\n"</literal></expr></argument>, <argument pos:start="93:54" pos:end="93:59"><expr pos:start="93:54" pos:end="93:59"><name pos:start="93:54" pos:end="93:59">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:20">goto <name pos:start="95:14" pos:end="95:19">failed</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:37"><expr pos:start="99:5" pos:end="99:36"><name pos:start="99:5" pos:end="99:26"><name pos:start="99:5" pos:end="99:9">avctx</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:26">hwaccel_context</name></name> <operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:36">vda_ctx</name></expr>;</expr_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:36">/* changes callback functions */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:21"><name pos:start="105:5" pos:end="105:9">avctx</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:21">get_format</name></name> <operator pos:start="105:23" pos:end="105:23">=</operator> <name pos:start="105:25" pos:end="105:34">get_format</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="110:0"><expr pos:start="107:5" pos:end="107:36"><name pos:start="107:5" pos:end="107:22"><name pos:start="107:5" pos:end="107:9">avctx</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:22">get_buffer2</name></name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:36">get_buffer2</name></expr>;</expr_stmt>

<cpp:if pos:start="109:1" pos:end="109:21">#<cpp:directive pos:start="109:2" pos:end="109:3">if</cpp:directive> <expr pos:start="109:5" pos:end="109:21"><name pos:start="109:5" pos:end="109:21">FF_API_GET_BUFFER</name></expr></cpp:if>

    <comment type="line" pos:start="111:5" pos:end="111:43">// force the old get_buffer to be empty</comment>

    <expr_stmt pos:start="113:5" pos:end="116:0"><expr pos:start="113:5" pos:end="113:28"><name pos:start="113:5" pos:end="113:21"><name pos:start="113:5" pos:end="113:9">avctx</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:21">get_buffer</name></name> <operator pos:start="113:23" pos:end="113:23">=</operator> <name pos:start="113:25" pos:end="113:28">NULL</name></expr>;</expr_stmt>

<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="119:5" pos:end="119:28">/* init H.264 decoder */</comment>

    <expr_stmt pos:start="121:5" pos:end="121:38"><expr pos:start="121:5" pos:end="121:37"><name pos:start="121:5" pos:end="121:7">ret</name> <operator pos:start="121:9" pos:end="121:9">=</operator> <call pos:start="121:11" pos:end="121:37"><name pos:start="121:11" pos:end="121:30"><name pos:start="121:11" pos:end="121:25">ff_h264_decoder</name><operator pos:start="121:26" pos:end="121:26">.</operator><name pos:start="121:27" pos:end="121:30">init</name></name><argument_list pos:start="121:31" pos:end="121:37">(<argument pos:start="121:32" pos:end="121:36"><expr pos:start="121:32" pos:end="121:36"><name pos:start="121:32" pos:end="121:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="129:5"><if pos:start="123:5" pos:end="129:5">if <condition pos:start="123:8" pos:end="123:16">(<expr pos:start="123:9" pos:end="123:15"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">&lt;</operator> <literal type="number" pos:start="123:15" pos:end="123:15">0</literal></expr>)</condition> <block pos:start="123:18" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:20">

        <expr_stmt pos:start="125:9" pos:end="125:71"><expr pos:start="125:9" pos:end="125:70"><call pos:start="125:9" pos:end="125:70"><name pos:start="125:9" pos:end="125:14">av_log</name><argument_list pos:start="125:15" pos:end="125:70">(<argument pos:start="125:16" pos:end="125:20"><expr pos:start="125:16" pos:end="125:20"><name pos:start="125:16" pos:end="125:20">avctx</name></expr></argument>, <argument pos:start="125:23" pos:end="125:34"><expr pos:start="125:23" pos:end="125:34"><name pos:start="125:23" pos:end="125:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:37" pos:end="125:69"><expr pos:start="125:37" pos:end="125:69"><literal type="string" pos:start="125:37" pos:end="125:69">"Failed to open H.264 decoder.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="127:9" pos:end="127:20">goto <name pos:start="127:14" pos:end="127:19">failed</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:30"><expr pos:start="131:5" pos:end="131:29"><name pos:start="131:5" pos:end="131:25"><name pos:start="131:5" pos:end="131:7">ctx</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:25">h264_initialized</name></name> <operator pos:start="131:27" pos:end="131:27">=</operator> <literal type="number" pos:start="131:29" pos:end="131:29">1</literal></expr>;</expr_stmt>



    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>



<label pos:start="139:1" pos:end="139:7"><name pos:start="139:1" pos:end="139:6">failed</name>:</label>

    <expr_stmt pos:start="141:5" pos:end="141:24"><expr pos:start="141:5" pos:end="141:23"><call pos:start="141:5" pos:end="141:23"><name pos:start="141:5" pos:end="141:16">vdadec_close</name><argument_list pos:start="141:17" pos:end="141:23">(<argument pos:start="141:18" pos:end="141:22"><expr pos:start="141:18" pos:end="141:22"><name pos:start="141:18" pos:end="141:22">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="143:5" pos:end="143:14">return <expr pos:start="143:12" pos:end="143:13"><operator pos:start="143:12" pos:end="143:12">-</operator><literal type="number" pos:start="143:13" pos:end="143:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
