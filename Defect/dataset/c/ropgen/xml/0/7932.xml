<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7932.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">xilinx_spips_flush_txfifo</name><parameter_list pos:start="1:38" pos:end="1:53">(<parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:49">XilinxSPIPS</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:5">

    <for pos:start="5:5" pos:end="107:5">for <control pos:start="5:9" pos:end="5:12">(<init pos:start="5:10" pos:end="5:10">;</init><condition pos:start="5:11" pos:end="5:11">;</condition><incr/>)</control> <block pos:start="5:14" pos:end="107:5">{<block_content pos:start="7:9" pos:end="105:9">

        <decl_stmt pos:start="7:9" pos:end="7:14"><decl pos:start="7:9" pos:end="7:13"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:19"><decl pos:start="9:9" pos:end="9:18"><type pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:15">uint8_t</name></type> <name pos:start="9:17" pos:end="9:18">rx</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:23"><decl pos:start="11:9" pos:end="11:22"><type pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:15">uint8_t</name></type> <name pos:start="11:17" pos:end="11:18">tx</name> <init pos:start="11:20" pos:end="11:22">= <expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="15:9" pos:end="55:9">for <control pos:start="15:13" pos:end="15:53">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">i</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:48"><expr pos:start="15:21" pos:end="15:47"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <call pos:start="15:25" pos:end="15:47"><name pos:start="15:25" pos:end="15:44">num_effective_busses</name><argument_list pos:start="15:45" pos:end="15:47">(<argument pos:start="15:46" pos:end="15:46"><expr pos:start="15:46" pos:end="15:46"><name pos:start="15:46" pos:end="15:46">s</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="15:50" pos:end="15:52"><expr pos:start="15:50" pos:end="15:52"><operator pos:start="15:50" pos:end="15:51">++</operator><name pos:start="15:52" pos:end="15:52">i</name></expr></incr>)</control> <block pos:start="15:55" pos:end="55:9">{<block_content pos:start="17:13" pos:end="53:13">

            <if_stmt pos:start="17:13" pos:end="33:13"><if pos:start="17:13" pos:end="33:13">if <condition pos:start="17:16" pos:end="17:55">(<expr pos:start="17:17" pos:end="17:54"><operator pos:start="17:17" pos:end="17:17">!</operator><name pos:start="17:18" pos:end="17:18">i</name> <operator pos:start="17:20" pos:end="17:21">||</operator> <name pos:start="17:23" pos:end="17:36"><name pos:start="17:23" pos:end="17:23">s</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:36">snoop_state</name></name> <operator pos:start="17:38" pos:end="17:39">==</operator> <name pos:start="17:41" pos:end="17:54">SNOOP_STRIPING</name></expr>)</condition> <block pos:start="17:57" pos:end="33:13">{<block_content pos:start="19:17" pos:end="31:17">

                <if_stmt pos:start="19:17" pos:end="31:17"><if pos:start="19:17" pos:end="27:17">if <condition pos:start="19:20" pos:end="19:48">(<expr pos:start="19:21" pos:end="19:47"><call pos:start="19:21" pos:end="19:47"><name pos:start="19:21" pos:end="19:34">fifo8_is_empty</name><argument_list pos:start="19:35" pos:end="19:47">(<argument pos:start="19:36" pos:end="19:46"><expr pos:start="19:36" pos:end="19:46"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:46"><name pos:start="19:37" pos:end="19:37">s</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:46">tx_fifo</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:50" pos:end="27:17">{<block_content pos:start="21:21" pos:end="25:27">

                    <expr_stmt pos:start="21:21" pos:end="21:68"><expr pos:start="21:21" pos:end="21:67"><name pos:start="21:21" pos:end="21:42"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:27">regs</name><index pos:start="21:28" pos:end="21:42">[<expr pos:start="21:29" pos:end="21:41"><name pos:start="21:29" pos:end="21:41">R_INTR_STATUS</name></expr>]</index></name> <operator pos:start="21:44" pos:end="21:45">|=</operator> <name pos:start="21:47" pos:end="21:67">IXR_TX_FIFO_UNDERFLOW</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="23:21" pos:end="23:47"><expr pos:start="23:21" pos:end="23:46"><call pos:start="23:21" pos:end="23:46"><name pos:start="23:21" pos:end="23:43">xilinx_spips_update_ixr</name><argument_list pos:start="23:44" pos:end="23:46">(<argument pos:start="23:45" pos:end="23:45"><expr pos:start="23:45" pos:end="23:45"><name pos:start="23:45" pos:end="23:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="25:21" pos:end="25:27">return;</return>

                </block_content>}</block></if> <else pos:start="27:19" pos:end="31:17">else <block pos:start="27:24" pos:end="31:17">{<block_content pos:start="29:21" pos:end="29:48">

                    <expr_stmt pos:start="29:21" pos:end="29:48"><expr pos:start="29:21" pos:end="29:47"><name pos:start="29:21" pos:end="29:22">tx</name> <operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="29:47"><name pos:start="29:26" pos:end="29:34">fifo8_pop</name><argument_list pos:start="29:35" pos:end="29:47">(<argument pos:start="29:36" pos:end="29:46"><expr pos:start="29:36" pos:end="29:46"><operator pos:start="29:36" pos:end="29:36">&amp;</operator><name pos:start="29:37" pos:end="29:46"><name pos:start="29:37" pos:end="29:37">s</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:46">tx_fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:55"><expr pos:start="35:13" pos:end="35:54"><name pos:start="35:13" pos:end="35:14">rx</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:54"><name pos:start="35:18" pos:end="35:29">ssi_transfer</name><argument_list pos:start="35:30" pos:end="35:54">(<argument pos:start="35:31" pos:end="35:39"><expr pos:start="35:31" pos:end="35:39"><name pos:start="35:31" pos:end="35:39"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:36">spi</name><index pos:start="35:37" pos:end="35:39">[<expr pos:start="35:38" pos:end="35:38"><name pos:start="35:38" pos:end="35:38">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:42" pos:end="35:53"><expr pos:start="35:42" pos:end="35:53"><operator pos:start="35:42" pos:end="35:42">(</operator><name pos:start="35:43" pos:end="35:50">uint32_t</name><operator pos:start="35:51" pos:end="35:51">)</operator><name pos:start="35:52" pos:end="35:53">tx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:54"><expr pos:start="37:13" pos:end="37:53"><call pos:start="37:13" pos:end="37:53"><name pos:start="37:13" pos:end="37:20">DB_PRINT</name><argument_list pos:start="37:21" pos:end="37:53">(<argument pos:start="37:22" pos:end="37:44"><expr pos:start="37:22" pos:end="37:44"><literal type="string" pos:start="37:22" pos:end="37:44">"tx = %02x rx = %02x\n"</literal></expr></argument>, <argument pos:start="37:47" pos:end="37:48"><expr pos:start="37:47" pos:end="37:48"><name pos:start="37:47" pos:end="37:48">tx</name></expr></argument>, <argument pos:start="37:51" pos:end="37:52"><expr pos:start="37:51" pos:end="37:52"><name pos:start="37:51" pos:end="37:52">rx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="53:13"><if pos:start="39:13" pos:end="53:13">if <condition pos:start="39:16" pos:end="39:55">(<expr pos:start="39:17" pos:end="39:54"><operator pos:start="39:17" pos:end="39:17">!</operator><name pos:start="39:18" pos:end="39:18">i</name> <operator pos:start="39:20" pos:end="39:21">||</operator> <name pos:start="39:23" pos:end="39:36"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:36">snoop_state</name></name> <operator pos:start="39:38" pos:end="39:39">==</operator> <name pos:start="39:41" pos:end="39:54">SNOOP_STRIPING</name></expr>)</condition> <block pos:start="39:57" pos:end="53:13">{<block_content pos:start="41:17" pos:end="51:17">

                <if_stmt pos:start="41:17" pos:end="51:17"><if pos:start="41:17" pos:end="47:17">if <condition pos:start="41:20" pos:end="41:47">(<expr pos:start="41:21" pos:end="41:46"><call pos:start="41:21" pos:end="41:46"><name pos:start="41:21" pos:end="41:33">fifo8_is_full</name><argument_list pos:start="41:34" pos:end="41:46">(<argument pos:start="41:35" pos:end="41:45"><expr pos:start="41:35" pos:end="41:45"><operator pos:start="41:35" pos:end="41:35">&amp;</operator><name pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:36">s</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:45">rx_fifo</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:49" pos:end="47:17">{<block_content pos:start="43:21" pos:end="45:49">

                    <expr_stmt pos:start="43:21" pos:end="43:67"><expr pos:start="43:21" pos:end="43:66"><name pos:start="43:21" pos:end="43:42"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:27">regs</name><index pos:start="43:28" pos:end="43:42">[<expr pos:start="43:29" pos:end="43:41"><name pos:start="43:29" pos:end="43:41">R_INTR_STATUS</name></expr>]</index></name> <operator pos:start="43:44" pos:end="43:45">|=</operator> <name pos:start="43:47" pos:end="43:66">IXR_RX_FIFO_OVERFLOW</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:49"><expr pos:start="45:21" pos:end="45:48"><call pos:start="45:21" pos:end="45:48"><name pos:start="45:21" pos:end="45:28">DB_PRINT</name><argument_list pos:start="45:29" pos:end="45:48">(<argument pos:start="45:30" pos:end="45:47"><expr pos:start="45:30" pos:end="45:47"><literal type="string" pos:start="45:30" pos:end="45:47">"rx FIFO overflow"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="47:19" pos:end="51:17">else <block pos:start="47:24" pos:end="51:17">{<block_content pos:start="49:21" pos:end="49:57">

                    <expr_stmt pos:start="49:21" pos:end="49:57"><expr pos:start="49:21" pos:end="49:56"><call pos:start="49:21" pos:end="49:56"><name pos:start="49:21" pos:end="49:30">fifo8_push</name><argument_list pos:start="49:31" pos:end="49:56">(<argument pos:start="49:32" pos:end="49:42"><expr pos:start="49:32" pos:end="49:42"><operator pos:start="49:32" pos:end="49:32">&amp;</operator><name pos:start="49:33" pos:end="49:42"><name pos:start="49:33" pos:end="49:33">s</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:42">rx_fifo</name></name></expr></argument>, <argument pos:start="49:45" pos:end="49:55"><expr pos:start="49:45" pos:end="49:55"><operator pos:start="49:45" pos:end="49:45">(</operator><name pos:start="49:46" pos:end="49:52">uint8_t</name><operator pos:start="49:53" pos:end="49:53">)</operator><name pos:start="49:54" pos:end="49:55">rx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <switch pos:start="59:9" pos:end="105:9">switch <condition pos:start="59:16" pos:end="59:31">(<expr pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:30">snoop_state</name></name></expr>)</condition> <block pos:start="59:33" pos:end="105:9">{<block_content pos:start="61:9" pos:end="103:29">

        <case pos:start="61:9" pos:end="61:30">case <expr pos:start="61:14" pos:end="61:29"><operator pos:start="61:14" pos:end="61:14">(</operator><name pos:start="61:15" pos:end="61:28">SNOOP_CHECKING</name><operator pos:start="61:29" pos:end="61:29">)</operator></expr>:</case>

            <switch pos:start="63:13" pos:end="91:13">switch <condition pos:start="63:20" pos:end="63:23">(<expr pos:start="63:21" pos:end="63:22"><name pos:start="63:21" pos:end="63:22">tx</name></expr>)</condition> <block pos:start="63:25" pos:end="91:13">{<block_content pos:start="65:13" pos:end="89:44"> <comment type="block" pos:start="63:27" pos:end="63:52">/* new instruction code */</comment>

            <case pos:start="65:13" pos:end="65:22">case <expr pos:start="65:18" pos:end="65:21"><literal type="number" pos:start="65:18" pos:end="65:21">0x0b</literal></expr>:</case> <comment type="block" pos:start="65:24" pos:end="65:58">/* dual/quad output read DOR/QOR */</comment>

            <case pos:start="67:13" pos:end="67:22">case <expr pos:start="67:18" pos:end="67:21"><literal type="number" pos:start="67:18" pos:end="67:21">0x6b</literal></expr>:</case>

                <expr_stmt pos:start="69:17" pos:end="69:35"><expr pos:start="69:17" pos:end="69:34"><name pos:start="69:17" pos:end="69:30"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:30">snoop_state</name></name> <operator pos:start="69:32" pos:end="69:32">=</operator> <literal type="number" pos:start="69:34" pos:end="69:34">4</literal></expr>;</expr_stmt>

                <break pos:start="71:17" pos:end="71:22">break;</break>

            <comment type="block" pos:start="73:13" pos:end="73:68">/* FIXME: these vary between vendor - set to spansion */</comment>

            <case pos:start="75:13" pos:end="75:22">case <expr pos:start="75:18" pos:end="75:21"><literal type="number" pos:start="75:18" pos:end="75:21">0xbb</literal></expr>:</case> <comment type="block" pos:start="75:24" pos:end="75:60">/* high performance dual read DIOR */</comment>

                <expr_stmt pos:start="77:17" pos:end="77:35"><expr pos:start="77:17" pos:end="77:34"><name pos:start="77:17" pos:end="77:30"><name pos:start="77:17" pos:end="77:17">s</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:30">snoop_state</name></name> <operator pos:start="77:32" pos:end="77:32">=</operator> <literal type="number" pos:start="77:34" pos:end="77:34">4</literal></expr>;</expr_stmt>

                <break pos:start="79:17" pos:end="79:22">break;</break>

            <case pos:start="81:13" pos:end="81:22">case <expr pos:start="81:18" pos:end="81:21"><literal type="number" pos:start="81:18" pos:end="81:21">0xeb</literal></expr>:</case> <comment type="block" pos:start="81:24" pos:end="81:60">/* high performance quad read QIOR */</comment>

                <expr_stmt pos:start="83:17" pos:end="83:35"><expr pos:start="83:17" pos:end="83:34"><name pos:start="83:17" pos:end="83:30"><name pos:start="83:17" pos:end="83:17">s</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:30">snoop_state</name></name> <operator pos:start="83:32" pos:end="83:32">=</operator> <literal type="number" pos:start="83:34" pos:end="83:34">6</literal></expr>;</expr_stmt>

                <break pos:start="85:17" pos:end="85:22">break;</break>

            <default pos:start="87:13" pos:end="87:20">default:</default>

                <expr_stmt pos:start="89:17" pos:end="89:44"><expr pos:start="89:17" pos:end="89:43"><name pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:30">snoop_state</name></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:43">SNOOP_NONE</name></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:30">case <expr pos:start="95:14" pos:end="95:29"><operator pos:start="95:14" pos:end="95:14">(</operator><name pos:start="95:15" pos:end="95:28">SNOOP_STRIPING</name><operator pos:start="95:29" pos:end="95:29">)</operator></expr>:</case>

        <case pos:start="97:9" pos:end="97:26">case <expr pos:start="97:14" pos:end="97:25"><operator pos:start="97:14" pos:end="97:14">(</operator><name pos:start="97:15" pos:end="97:24">SNOOP_NONE</name><operator pos:start="97:25" pos:end="97:25">)</operator></expr>:</case>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <default pos:start="101:9" pos:end="101:16">default:</default>

            <expr_stmt pos:start="103:13" pos:end="103:29"><expr pos:start="103:13" pos:end="103:28"><name pos:start="103:13" pos:end="103:26"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:26">snoop_state</name></name><operator pos:start="103:27" pos:end="103:28">--</operator></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
