<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1892.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:24">drop_sync</name><parameter_list pos:start="1:25" pos:end="1:45">(<parameter pos:start="1:26" pos:end="1:31"><decl pos:start="1:26" pos:end="1:31"><type pos:start="1:26" pos:end="1:31"><name pos:start="1:26" pos:end="1:28">int</name></type> <name pos:start="1:30" pos:end="1:31">fd</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:39">size_t</name></type> <name pos:start="1:41" pos:end="1:44">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:19">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">ssize_t</name></type> <name pos:start="5:13" pos:end="5:15">ret</name></decl>, <decl pos:start="5:18" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:18" pos:end="5:24">dropped</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:19">buffer</name> <init pos:start="7:21" pos:end="7:48">= <expr pos:start="7:23" pos:end="7:48"><call pos:start="7:23" pos:end="7:48"><name pos:start="7:23" pos:end="7:30">g_malloc</name><argument_list pos:start="7:31" pos:end="7:48">(<argument pos:start="7:32" pos:end="7:47"><expr pos:start="7:32" pos:end="7:47"><call pos:start="7:32" pos:end="7:47"><name pos:start="7:32" pos:end="7:34">MIN</name><argument_list pos:start="7:35" pos:end="7:47">(<argument pos:start="7:36" pos:end="7:40"><expr pos:start="7:36" pos:end="7:40"><literal type="number" pos:start="7:36" pos:end="7:40">65536</literal></expr></argument>, <argument pos:start="7:43" pos:end="7:46"><expr pos:start="7:43" pos:end="7:46"><name pos:start="7:43" pos:end="7:46">size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="29:5">while <condition pos:start="11:11" pos:end="11:20">(<expr pos:start="11:12" pos:end="11:19"><name pos:start="11:12" pos:end="11:15">size</name> <operator pos:start="11:17" pos:end="11:17">&gt;</operator> <literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr>)</condition> <block pos:start="11:22" pos:end="29:5">{<block_content pos:start="13:9" pos:end="27:20">

        <expr_stmt pos:start="13:9" pos:end="13:54"><expr pos:start="13:9" pos:end="13:53"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:53"><name pos:start="13:15" pos:end="13:23">read_sync</name><argument_list pos:start="13:24" pos:end="13:53">(<argument pos:start="13:25" pos:end="13:26"><expr pos:start="13:25" pos:end="13:26"><name pos:start="13:25" pos:end="13:26">fd</name></expr></argument>, <argument pos:start="13:29" pos:end="13:34"><expr pos:start="13:29" pos:end="13:34"><name pos:start="13:29" pos:end="13:34">buffer</name></expr></argument>, <argument pos:start="13:37" pos:end="13:52"><expr pos:start="13:37" pos:end="13:52"><call pos:start="13:37" pos:end="13:52"><name pos:start="13:37" pos:end="13:39">MIN</name><argument_list pos:start="13:40" pos:end="13:52">(<argument pos:start="13:41" pos:end="13:45"><expr pos:start="13:41" pos:end="13:45"><literal type="number" pos:start="13:41" pos:end="13:45">65536</literal></expr></argument>, <argument pos:start="13:48" pos:end="13:51"><expr pos:start="13:48" pos:end="13:51"><name pos:start="13:48" pos:end="13:51">size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:20">(<expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:15">ret</name> <operator pos:start="15:17" pos:end="15:17">&lt;</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>)</condition> <block pos:start="15:22" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:23">

            <expr_stmt pos:start="17:13" pos:end="17:27"><expr pos:start="17:13" pos:end="17:26"><call pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:18">g_free</name><argument_list pos:start="17:19" pos:end="17:26">(<argument pos:start="17:20" pos:end="17:25"><expr pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:25">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><call pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:14">assert</name><argument_list pos:start="25:15" pos:end="25:27">(<argument pos:start="25:16" pos:end="25:26"><expr pos:start="25:16" pos:end="25:26"><name pos:start="25:16" pos:end="25:18">ret</name> <operator pos:start="25:20" pos:end="25:21">&lt;=</operator> <name pos:start="25:23" pos:end="25:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:20"><expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:12">size</name> <operator pos:start="27:14" pos:end="27:15">-=</operator> <name pos:start="27:17" pos:end="27:19">ret</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><call pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:10">g_free</name><argument_list pos:start="33:11" pos:end="33:18">(<argument pos:start="33:12" pos:end="33:17"><expr pos:start="33:12" pos:end="33:17"><name pos:start="33:12" pos:end="33:17">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="35:5" pos:end="35:19">return <expr pos:start="35:12" pos:end="35:18"><name pos:start="35:12" pos:end="35:18">dropped</name></expr>;</return>

</block_content>}</block></function>
</unit>
