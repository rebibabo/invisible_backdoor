<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26258.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">filter_mirror_setup</name><parameter_list pos:start="1:32" pos:end="1:65">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:46">NetFilterState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">nf</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:57">Error</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">MirrorState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:38">= <expr pos:start="5:22" pos:end="5:38"><call pos:start="5:22" pos:end="5:38"><name pos:start="5:22" pos:end="5:34">FILTER_MIRROR</name><argument_list pos:start="5:35" pos:end="5:38">(<argument pos:start="5:36" pos:end="5:37"><expr pos:start="5:36" pos:end="5:37"><name pos:start="5:36" pos:end="5:37">nf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:19">(<expr pos:start="9:9" pos:end="9:18"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:10">s</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:18">outdev</name></name></expr>)</condition> <block pos:start="9:21" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:15">

        <expr_stmt pos:start="11:9" pos:end="13:35"><expr pos:start="11:9" pos:end="13:34"><call pos:start="11:9" pos:end="13:34"><name pos:start="11:9" pos:end="11:18">error_setg</name><argument_list pos:start="11:19" pos:end="13:34">(<argument pos:start="11:20" pos:end="11:23"><expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">errp</name></expr></argument>, <argument pos:start="11:26" pos:end="13:33"><expr pos:start="11:26" pos:end="13:33"><literal type="string" pos:start="11:26" pos:end="11:63">"filter filter mirror needs 'outdev' "</literal>

                   <literal type="string" pos:start="13:20" pos:end="13:33">"property set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:14">chr_out</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:41"><name pos:start="21:18" pos:end="21:30">qemu_chr_find</name><argument_list pos:start="21:31" pos:end="21:41">(<argument pos:start="21:32" pos:end="21:40"><expr pos:start="21:32" pos:end="21:40"><name pos:start="21:32" pos:end="21:40"><name pos:start="21:32" pos:end="21:32">s</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:40">outdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:27">(<expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">chr_out</name></name> <operator pos:start="23:20" pos:end="23:21">==</operator> <name pos:start="23:23" pos:end="23:26">NULL</name></expr>)</condition> <block pos:start="23:29" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:15">

        <expr_stmt pos:start="25:9" pos:end="27:54"><expr pos:start="25:9" pos:end="27:53"><call pos:start="25:9" pos:end="27:53"><name pos:start="25:9" pos:end="25:17">error_set</name><argument_list pos:start="25:18" pos:end="27:53">(<argument pos:start="25:19" pos:end="25:22"><expr pos:start="25:19" pos:end="25:22"><name pos:start="25:19" pos:end="25:22">errp</name></expr></argument>, <argument pos:start="25:25" pos:end="25:52"><expr pos:start="25:25" pos:end="25:52"><name pos:start="25:25" pos:end="25:52">ERROR_CLASS_DEVICE_NOT_FOUND</name></expr></argument>,

                  <argument pos:start="27:19" pos:end="27:41"><expr pos:start="27:19" pos:end="27:41"><literal type="string" pos:start="27:19" pos:end="27:41">"Device '%s' not found"</literal></expr></argument>, <argument pos:start="27:44" pos:end="27:52"><expr pos:start="27:44" pos:end="27:52"><name pos:start="27:44" pos:end="27:52"><name pos:start="27:44" pos:end="27:44">s</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:52">outdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:43">(<expr pos:start="35:9" pos:end="35:42"><call pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:25">qemu_chr_fe_claim</name><argument_list pos:start="35:26" pos:end="35:37">(<argument pos:start="35:27" pos:end="35:36"><expr pos:start="35:27" pos:end="35:36"><name pos:start="35:27" pos:end="35:36"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:36">chr_out</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:39" pos:end="35:40">!=</operator> <literal type="number" pos:start="35:42" pos:end="35:42">0</literal></expr>)</condition> <block pos:start="35:45" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:15">

        <expr_stmt pos:start="37:9" pos:end="37:56"><expr pos:start="37:9" pos:end="37:55"><call pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:18">error_setg</name><argument_list pos:start="37:19" pos:end="37:55">(<argument pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">errp</name></expr></argument>, <argument pos:start="37:26" pos:end="37:43"><expr pos:start="37:26" pos:end="37:43"><name pos:start="37:26" pos:end="37:43">QERR_DEVICE_IN_USE</name></expr></argument>, <argument pos:start="37:46" pos:end="37:54"><expr pos:start="37:46" pos:end="37:54"><name pos:start="37:46" pos:end="37:54"><name pos:start="37:46" pos:end="37:46">s</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:54">outdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
