<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10210.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">BlockDriverState</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:50">bdrv_append_temp_snapshot</name><parameter_list pos:start="1:51" pos:end="7:64">(<parameter pos:start="1:52" pos:end="1:71"><decl pos:start="1:52" pos:end="1:71"><type pos:start="1:52" pos:end="1:71"><name pos:start="1:52" pos:end="1:67">BlockDriverState</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:71">bs</name></decl></parameter>,

                                                   <parameter pos:start="3:52" pos:end="3:60"><decl pos:start="3:52" pos:end="3:60"><type pos:start="3:52" pos:end="3:60"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:60">flags</name></decl></parameter>,

                                                   <parameter pos:start="5:52" pos:end="5:74"><decl pos:start="5:52" pos:end="5:74"><type pos:start="5:52" pos:end="5:74"><name pos:start="5:52" pos:end="5:56">QDict</name> <modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:74">snapshot_options</name></decl></parameter>,

                                                   <parameter pos:start="7:52" pos:end="7:63"><decl pos:start="7:52" pos:end="7:63"><type pos:start="7:52" pos:end="7:63"><name pos:start="7:52" pos:end="7:56">Error</name> <modifier pos:start="7:58" pos:end="7:58">*</modifier><modifier pos:start="7:59" pos:end="7:59">*</modifier></type><name pos:start="7:60" pos:end="7:63">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="143:1">{<block_content pos:start="13:5" pos:end="141:16">

    <comment type="block" pos:start="11:5" pos:end="11:73">/* TODO: extra byte is a hack to ensure MAX_PATH space on Windows. */</comment>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:22">tmp_filename</name> <init pos:start="13:24" pos:end="13:48">= <expr pos:start="13:26" pos:end="13:48"><call pos:start="13:26" pos:end="13:48"><name pos:start="13:26" pos:end="13:34">g_malloc0</name><argument_list pos:start="13:35" pos:end="13:48">(<argument pos:start="13:36" pos:end="13:47"><expr pos:start="13:36" pos:end="13:47"><name pos:start="13:36" pos:end="13:43">PATH_MAX</name> <operator pos:start="13:45" pos:end="13:45">+</operator> <literal type="number" pos:start="13:47" pos:end="13:47">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:22">total_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">QemuOpts</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:18">opts</name> <init pos:start="17:20" pos:end="17:25">= <expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:33"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:20">BlockDriverState</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:33">bs_snapshot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:9">Error</name> <modifier pos:start="21:11" pos:end="21:11">*</modifier></type><name pos:start="21:12" pos:end="21:20">local_err</name> <init pos:start="21:22" pos:end="21:27">= <expr pos:start="21:24" pos:end="21:27"><name pos:start="21:24" pos:end="21:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:12"><decl pos:start="23:5" pos:end="23:11"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="29:48">/* if snapshot, we create a temporary backing file and open it

       instead of opening 'filename' directly */</comment>



    <comment type="block" pos:start="33:5" pos:end="33:46">/* Get the required size from the image */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:14">total_size</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:35"><name pos:start="35:18" pos:end="35:31">bdrv_getlength</name><argument_list pos:start="35:32" pos:end="35:35">(<argument pos:start="35:33" pos:end="35:34"><expr pos:start="35:33" pos:end="35:34"><name pos:start="35:33" pos:end="35:34">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:23">(<expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:18">total_size</name> <operator pos:start="37:20" pos:end="37:20">&lt;</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>)</condition> <block pos:start="37:25" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:17">

        <expr_stmt pos:start="39:9" pos:end="39:72"><expr pos:start="39:9" pos:end="39:71"><call pos:start="39:9" pos:end="39:71"><name pos:start="39:9" pos:end="39:24">error_setg_errno</name><argument_list pos:start="39:25" pos:end="39:71">(<argument pos:start="39:26" pos:end="39:29"><expr pos:start="39:26" pos:end="39:29"><name pos:start="39:26" pos:end="39:29">errp</name></expr></argument>, <argument pos:start="39:32" pos:end="39:42"><expr pos:start="39:32" pos:end="39:42"><operator pos:start="39:32" pos:end="39:32">-</operator><name pos:start="39:33" pos:end="39:42">total_size</name></expr></argument>, <argument pos:start="39:45" pos:end="39:70"><expr pos:start="39:45" pos:end="39:70"><literal type="string" pos:start="39:45" pos:end="39:70">"Could not get image size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:17">goto <name pos:start="41:14" pos:end="41:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:36">/* Create the temporary image */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:55"><expr pos:start="49:5" pos:end="49:54"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:54"><name pos:start="49:11" pos:end="49:26">get_tmp_filename</name><argument_list pos:start="49:27" pos:end="49:54">(<argument pos:start="49:28" pos:end="49:39"><expr pos:start="49:28" pos:end="49:39"><name pos:start="49:28" pos:end="49:39">tmp_filename</name></expr></argument>, <argument pos:start="49:42" pos:end="49:53"><expr pos:start="49:42" pos:end="49:53"><name pos:start="49:42" pos:end="49:49">PATH_MAX</name> <operator pos:start="49:51" pos:end="49:51">+</operator> <literal type="number" pos:start="49:53" pos:end="49:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition> <block pos:start="51:18" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:17">

        <expr_stmt pos:start="53:9" pos:end="53:73"><expr pos:start="53:9" pos:end="53:72"><call pos:start="53:9" pos:end="53:72"><name pos:start="53:9" pos:end="53:24">error_setg_errno</name><argument_list pos:start="53:25" pos:end="53:72">(<argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><name pos:start="53:26" pos:end="53:29">errp</name></expr></argument>, <argument pos:start="53:32" pos:end="53:35"><expr pos:start="53:32" pos:end="53:35"><operator pos:start="53:32" pos:end="53:32">-</operator><name pos:start="53:33" pos:end="53:35">ret</name></expr></argument>, <argument pos:start="53:38" pos:end="53:71"><expr pos:start="53:38" pos:end="53:71"><literal type="string" pos:start="53:38" pos:end="53:71">"Could not get temporary filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="55:9" pos:end="55:17">goto <name pos:start="55:14" pos:end="55:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="63:42"><expr pos:start="61:5" pos:end="63:41"><name pos:start="61:5" pos:end="61:8">opts</name> <operator pos:start="61:10" pos:end="61:10">=</operator> <call pos:start="61:12" pos:end="63:41"><name pos:start="61:12" pos:end="61:27">qemu_opts_create</name><argument_list pos:start="61:28" pos:end="63:41">(<argument pos:start="61:29" pos:end="61:50"><expr pos:start="61:29" pos:end="61:50"><name pos:start="61:29" pos:end="61:50"><name pos:start="61:29" pos:end="61:38">bdrv_qcow2</name><operator pos:start="61:39" pos:end="61:39">.</operator><name pos:start="61:40" pos:end="61:50">create_opts</name></name></expr></argument>, <argument pos:start="61:53" pos:end="61:56"><expr pos:start="61:53" pos:end="61:56"><name pos:start="61:53" pos:end="61:56">NULL</name></expr></argument>, <argument pos:start="61:59" pos:end="61:59"><expr pos:start="61:59" pos:end="61:59"><literal type="number" pos:start="61:59" pos:end="61:59">0</literal></expr></argument>,

                            <argument pos:start="63:29" pos:end="63:40"><expr pos:start="63:29" pos:end="63:40"><operator pos:start="63:29" pos:end="63:29">&amp;</operator><name pos:start="63:30" pos:end="63:40">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:72"><expr pos:start="65:5" pos:end="65:71"><call pos:start="65:5" pos:end="65:71"><name pos:start="65:5" pos:end="65:23">qemu_opt_set_number</name><argument_list pos:start="65:24" pos:end="65:71">(<argument pos:start="65:25" pos:end="65:28"><expr pos:start="65:25" pos:end="65:28"><name pos:start="65:25" pos:end="65:28">opts</name></expr></argument>, <argument pos:start="65:31" pos:end="65:44"><expr pos:start="65:31" pos:end="65:44"><name pos:start="65:31" pos:end="65:44">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="65:47" pos:end="65:56"><expr pos:start="65:47" pos:end="65:56"><name pos:start="65:47" pos:end="65:56">total_size</name></expr></argument>, <argument pos:start="65:59" pos:end="65:70"><expr pos:start="65:59" pos:end="65:70"><operator pos:start="65:59" pos:end="65:59">&amp;</operator><name pos:start="65:60" pos:end="65:70">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:61"><expr pos:start="67:5" pos:end="67:60"><name pos:start="67:5" pos:end="67:7">ret</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="67:60"><name pos:start="67:11" pos:end="67:21">bdrv_create</name><argument_list pos:start="67:22" pos:end="67:60">(<argument pos:start="67:23" pos:end="67:33"><expr pos:start="67:23" pos:end="67:33"><operator pos:start="67:23" pos:end="67:23">&amp;</operator><name pos:start="67:24" pos:end="67:33">bdrv_qcow2</name></expr></argument>, <argument pos:start="67:36" pos:end="67:47"><expr pos:start="67:36" pos:end="67:47"><name pos:start="67:36" pos:end="67:47">tmp_filename</name></expr></argument>, <argument pos:start="67:50" pos:end="67:53"><expr pos:start="67:50" pos:end="67:53"><name pos:start="67:50" pos:end="67:53">opts</name></expr></argument>, <argument pos:start="67:56" pos:end="67:59"><expr pos:start="67:56" pos:end="67:59"><name pos:start="67:56" pos:end="67:59">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:24"><expr pos:start="69:5" pos:end="69:23"><call pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:17">qemu_opts_del</name><argument_list pos:start="69:18" pos:end="69:23">(<argument pos:start="69:19" pos:end="69:22"><expr pos:start="69:19" pos:end="69:22"><name pos:start="69:19" pos:end="69:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="71:16">(<expr pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">&lt;</operator> <literal type="number" pos:start="71:15" pos:end="71:15">0</literal></expr>)</condition> <block pos:start="71:18" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:17">

        <expr_stmt pos:start="73:9" pos:end="75:36"><expr pos:start="73:9" pos:end="75:35"><call pos:start="73:9" pos:end="75:35"><name pos:start="73:9" pos:end="73:21">error_prepend</name><argument_list pos:start="73:22" pos:end="75:35">(<argument pos:start="73:23" pos:end="73:26"><expr pos:start="73:23" pos:end="73:26"><name pos:start="73:23" pos:end="73:26">errp</name></expr></argument>, <argument pos:start="73:29" pos:end="73:71"><expr pos:start="73:29" pos:end="73:71"><literal type="string" pos:start="73:29" pos:end="73:71">"Could not create temporary overlay '%s': "</literal></expr></argument>,

                      <argument pos:start="75:23" pos:end="75:34"><expr pos:start="75:23" pos:end="75:34"><name pos:start="75:23" pos:end="75:34">tmp_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:17">goto <name pos:start="77:14" pos:end="77:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:54">/* Prepare options QDict for the temporary file */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:59"><expr pos:start="85:5" pos:end="85:58"><call pos:start="85:5" pos:end="85:58"><name pos:start="85:5" pos:end="85:17">qdict_put_str</name><argument_list pos:start="85:18" pos:end="85:58">(<argument pos:start="85:19" pos:end="85:34"><expr pos:start="85:19" pos:end="85:34"><name pos:start="85:19" pos:end="85:34">snapshot_options</name></expr></argument>, <argument pos:start="85:37" pos:end="85:49"><expr pos:start="85:37" pos:end="85:49"><literal type="string" pos:start="85:37" pos:end="85:49">"file.driver"</literal></expr></argument>, <argument pos:start="85:52" pos:end="85:57"><expr pos:start="85:52" pos:end="85:57"><literal type="string" pos:start="85:52" pos:end="85:57">"file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:67"><expr pos:start="87:5" pos:end="87:66"><call pos:start="87:5" pos:end="87:66"><name pos:start="87:5" pos:end="87:17">qdict_put_str</name><argument_list pos:start="87:18" pos:end="87:66">(<argument pos:start="87:19" pos:end="87:34"><expr pos:start="87:19" pos:end="87:34"><name pos:start="87:19" pos:end="87:34">snapshot_options</name></expr></argument>, <argument pos:start="87:37" pos:end="87:51"><expr pos:start="87:37" pos:end="87:51"><literal type="string" pos:start="87:37" pos:end="87:51">"file.filename"</literal></expr></argument>, <argument pos:start="87:54" pos:end="87:65"><expr pos:start="87:54" pos:end="87:65"><name pos:start="87:54" pos:end="87:65">tmp_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:55"><expr pos:start="89:5" pos:end="89:54"><call pos:start="89:5" pos:end="89:54"><name pos:start="89:5" pos:end="89:17">qdict_put_str</name><argument_list pos:start="89:18" pos:end="89:54">(<argument pos:start="89:19" pos:end="89:34"><expr pos:start="89:19" pos:end="89:34"><name pos:start="89:19" pos:end="89:34">snapshot_options</name></expr></argument>, <argument pos:start="89:37" pos:end="89:44"><expr pos:start="89:37" pos:end="89:44"><literal type="string" pos:start="89:37" pos:end="89:44">"driver"</literal></expr></argument>, <argument pos:start="89:47" pos:end="89:53"><expr pos:start="89:47" pos:end="89:53"><literal type="string" pos:start="89:47" pos:end="89:53">"qcow2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:71"><expr pos:start="93:5" pos:end="93:70"><name pos:start="93:5" pos:end="93:15">bs_snapshot</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="93:70"><name pos:start="93:19" pos:end="93:27">bdrv_open</name><argument_list pos:start="93:28" pos:end="93:70">(<argument pos:start="93:29" pos:end="93:32"><expr pos:start="93:29" pos:end="93:32"><name pos:start="93:29" pos:end="93:32">NULL</name></expr></argument>, <argument pos:start="93:35" pos:end="93:38"><expr pos:start="93:35" pos:end="93:38"><name pos:start="93:35" pos:end="93:38">NULL</name></expr></argument>, <argument pos:start="93:41" pos:end="93:56"><expr pos:start="93:41" pos:end="93:56"><name pos:start="93:41" pos:end="93:56">snapshot_options</name></expr></argument>, <argument pos:start="93:59" pos:end="93:63"><expr pos:start="93:59" pos:end="93:63"><name pos:start="93:59" pos:end="93:63">flags</name></expr></argument>, <argument pos:start="93:66" pos:end="93:69"><expr pos:start="93:66" pos:end="93:69"><name pos:start="93:66" pos:end="93:69">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:28"><expr pos:start="95:5" pos:end="95:27"><name pos:start="95:5" pos:end="95:20">snapshot_options</name> <operator pos:start="95:22" pos:end="95:22">=</operator> <name pos:start="95:24" pos:end="95:27">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="103:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:21">(<expr pos:start="97:9" pos:end="97:20"><operator pos:start="97:9" pos:end="97:9">!</operator><name pos:start="97:10" pos:end="97:20">bs_snapshot</name></expr>)</condition> <block pos:start="97:23" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:17">

        <expr_stmt pos:start="99:9" pos:end="99:22"><expr pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <operator pos:start="99:15" pos:end="99:15">-</operator><name pos:start="99:16" pos:end="99:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="101:9" pos:end="101:17">goto <name pos:start="101:14" pos:end="101:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="107:5" pos:end="111:49">/* bdrv_append() consumes a strong reference to bs_snapshot (i.e. it will

     * call bdrv_unref() on it), so in order to be able to return one, we have

     * to increase bs_snapshot's refcount here */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:26"><expr pos:start="113:5" pos:end="113:25"><call pos:start="113:5" pos:end="113:25"><name pos:start="113:5" pos:end="113:12">bdrv_ref</name><argument_list pos:start="113:13" pos:end="113:25">(<argument pos:start="113:14" pos:end="113:24"><expr pos:start="113:14" pos:end="113:24"><name pos:start="113:14" pos:end="113:24">bs_snapshot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:45"><expr pos:start="115:5" pos:end="115:44"><call pos:start="115:5" pos:end="115:44"><name pos:start="115:5" pos:end="115:15">bdrv_append</name><argument_list pos:start="115:16" pos:end="115:44">(<argument pos:start="115:17" pos:end="115:27"><expr pos:start="115:17" pos:end="115:27"><name pos:start="115:17" pos:end="115:27">bs_snapshot</name></expr></argument>, <argument pos:start="115:30" pos:end="115:31"><expr pos:start="115:30" pos:end="115:31"><name pos:start="115:30" pos:end="115:31">bs</name></expr></argument>, <argument pos:start="115:34" pos:end="115:43"><expr pos:start="115:34" pos:end="115:43"><operator pos:start="115:34" pos:end="115:34">&amp;</operator><name pos:start="115:35" pos:end="115:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="125:5"><if pos:start="117:5" pos:end="125:5">if <condition pos:start="117:8" pos:end="117:18">(<expr pos:start="117:9" pos:end="117:17"><name pos:start="117:9" pos:end="117:17">local_err</name></expr>)</condition> <block pos:start="117:20" pos:end="125:5">{<block_content pos:start="119:9" pos:end="123:17">

        <expr_stmt pos:start="119:9" pos:end="119:41"><expr pos:start="119:9" pos:end="119:40"><call pos:start="119:9" pos:end="119:40"><name pos:start="119:9" pos:end="119:23">error_propagate</name><argument_list pos:start="119:24" pos:end="119:40">(<argument pos:start="119:25" pos:end="119:28"><expr pos:start="119:25" pos:end="119:28"><name pos:start="119:25" pos:end="119:28">errp</name></expr></argument>, <argument pos:start="119:31" pos:end="119:39"><expr pos:start="119:31" pos:end="119:39"><name pos:start="119:31" pos:end="119:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:22"><expr pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:11">ret</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <operator pos:start="121:15" pos:end="121:15">-</operator><name pos:start="121:16" pos:end="121:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="123:9" pos:end="123:17">goto <name pos:start="123:14" pos:end="123:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:25"><expr pos:start="129:5" pos:end="129:24"><call pos:start="129:5" pos:end="129:24"><name pos:start="129:5" pos:end="129:10">g_free</name><argument_list pos:start="129:11" pos:end="129:24">(<argument pos:start="129:12" pos:end="129:23"><expr pos:start="129:12" pos:end="129:23"><name pos:start="129:12" pos:end="129:23">tmp_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="131:5" pos:end="131:23">return <expr pos:start="131:12" pos:end="131:22"><name pos:start="131:12" pos:end="131:22">bs_snapshot</name></expr>;</return>



<label pos:start="135:1" pos:end="135:4"><name pos:start="135:1" pos:end="135:3">out</name>:</label>

    <expr_stmt pos:start="137:5" pos:end="137:30"><expr pos:start="137:5" pos:end="137:29"><call pos:start="137:5" pos:end="137:29"><name pos:start="137:5" pos:end="137:11">QDECREF</name><argument_list pos:start="137:12" pos:end="137:29">(<argument pos:start="137:13" pos:end="137:28"><expr pos:start="137:13" pos:end="137:28"><name pos:start="137:13" pos:end="137:28">snapshot_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:25"><expr pos:start="139:5" pos:end="139:24"><call pos:start="139:5" pos:end="139:24"><name pos:start="139:5" pos:end="139:10">g_free</name><argument_list pos:start="139:11" pos:end="139:24">(<argument pos:start="139:12" pos:end="139:23"><expr pos:start="139:12" pos:end="139:23"><name pos:start="139:12" pos:end="139:23">tmp_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="141:5" pos:end="141:16">return <expr pos:start="141:12" pos:end="141:15"><name pos:start="141:12" pos:end="141:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
