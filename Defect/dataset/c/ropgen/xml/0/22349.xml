<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22349.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">vmsvga_screen_dump</name><parameter_list pos:start="1:31" pos:end="3:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:65"><decl pos:start="1:46" pos:end="1:65"><type pos:start="1:46" pos:end="1:65"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:65">filename</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:79"><decl pos:start="1:68" pos:end="1:79"><type pos:start="1:68" pos:end="1:79"><name pos:start="1:68" pos:end="1:71">bool</name></type> <name pos:start="1:73" pos:end="1:79">cswitch</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:36">Error</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier><modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:43">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:5">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:25">vmsvga_state_s</name></name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:28">s</name> <init pos:start="7:30" pos:end="7:37">= <expr pos:start="7:32" pos:end="7:37"><name pos:start="7:32" pos:end="7:37">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:63"><decl pos:start="9:5" pos:end="9:62"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">DisplaySurface</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">surface</name> <init pos:start="9:29" pos:end="9:62">= <expr pos:start="9:31" pos:end="9:62"><call pos:start="9:31" pos:end="9:62"><name pos:start="9:31" pos:end="9:50">qemu_console_surface</name><argument_list pos:start="9:51" pos:end="9:62">(<argument pos:start="9:52" pos:end="9:61"><expr pos:start="9:52" pos:end="9:61"><name pos:start="9:52" pos:end="9:61"><name pos:start="9:52" pos:end="9:52">s</name><operator pos:start="9:53" pos:end="9:54">-&gt;</operator><name pos:start="9:55" pos:end="9:57">vga</name><operator pos:start="9:58" pos:end="9:58">.</operator><name pos:start="9:59" pos:end="9:61">con</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:19">(<expr pos:start="13:9" pos:end="13:18"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:10">s</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:18">enable</name></name></expr>)</condition> <block pos:start="13:21" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:61"><expr pos:start="15:9" pos:end="15:60"><call pos:start="15:9" pos:end="15:60"><name pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">vga</name><operator pos:start="15:15" pos:end="15:15">.</operator><name pos:start="15:16" pos:end="15:26">screen_dump</name></name><argument_list pos:start="15:27" pos:end="15:60">(<argument pos:start="15:28" pos:end="15:34"><expr pos:start="15:28" pos:end="15:34"><operator pos:start="15:28" pos:end="15:28">&amp;</operator><name pos:start="15:29" pos:end="15:34"><name pos:start="15:29" pos:end="15:29">s</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:34">vga</name></name></expr></argument>, <argument pos:start="15:37" pos:end="15:44"><expr pos:start="15:37" pos:end="15:44"><name pos:start="15:37" pos:end="15:44">filename</name></expr></argument>, <argument pos:start="15:47" pos:end="15:53"><expr pos:start="15:47" pos:end="15:53"><name pos:start="15:47" pos:end="15:53">cswitch</name></expr></argument>, <argument pos:start="15:56" pos:end="15:59"><expr pos:start="15:56" pos:end="15:59"><name pos:start="15:56" pos:end="15:59">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="41:5"><if pos:start="23:5" pos:end="41:5">if <condition pos:start="23:8" pos:end="23:46">(<expr pos:start="23:9" pos:end="23:45"><call pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:30">surface_bits_per_pixel</name><argument_list pos:start="23:31" pos:end="23:39">(<argument pos:start="23:32" pos:end="23:38"><expr pos:start="23:32" pos:end="23:38"><name pos:start="23:32" pos:end="23:38">surface</name></expr></argument>)</argument_list></call> <operator pos:start="23:41" pos:end="23:42">==</operator> <literal type="number" pos:start="23:44" pos:end="23:45">32</literal></expr>)</condition> <block pos:start="23:48" pos:end="41:5">{<block_content pos:start="25:9" pos:end="39:19">

        <decl_stmt pos:start="25:9" pos:end="35:57"><decl pos:start="25:9" pos:end="35:56"><type pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:22">DisplaySurface</name> <modifier pos:start="25:24" pos:end="25:24">*</modifier></type><name pos:start="25:25" pos:end="25:26">ds</name> <init pos:start="25:28" pos:end="35:56">= <expr pos:start="25:30" pos:end="35:56"><call pos:start="25:30" pos:end="35:56"><name pos:start="25:30" pos:end="25:60">qemu_create_displaysurface_from</name><argument_list pos:start="25:61" pos:end="35:56">(

                                 <argument pos:start="27:34" pos:end="27:55"><expr pos:start="27:34" pos:end="27:55"><call pos:start="27:34" pos:end="27:55"><name pos:start="27:34" pos:end="27:46">surface_width</name><argument_list pos:start="27:47" pos:end="27:55">(<argument pos:start="27:48" pos:end="27:54"><expr pos:start="27:48" pos:end="27:54"><name pos:start="27:48" pos:end="27:54">surface</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="29:34" pos:end="29:56"><expr pos:start="29:34" pos:end="29:56"><call pos:start="29:34" pos:end="29:56"><name pos:start="29:34" pos:end="29:47">surface_height</name><argument_list pos:start="29:48" pos:end="29:56">(<argument pos:start="29:49" pos:end="29:55"><expr pos:start="29:49" pos:end="29:55"><name pos:start="29:49" pos:end="29:55">surface</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="31:34" pos:end="31:35"><expr pos:start="31:34" pos:end="31:35"><literal type="number" pos:start="31:34" pos:end="31:35">32</literal></expr></argument>,

                                 <argument pos:start="33:34" pos:end="33:56"><expr pos:start="33:34" pos:end="33:56"><call pos:start="33:34" pos:end="33:56"><name pos:start="33:34" pos:end="33:47">surface_stride</name><argument_list pos:start="33:48" pos:end="33:56">(<argument pos:start="33:49" pos:end="33:55"><expr pos:start="33:49" pos:end="33:55"><name pos:start="33:49" pos:end="33:55">surface</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="35:34" pos:end="35:48"><expr pos:start="35:34" pos:end="35:48"><name pos:start="35:34" pos:end="35:48"><name pos:start="35:34" pos:end="35:34">s</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:39">vga</name><operator pos:start="35:40" pos:end="35:40">.</operator><name pos:start="35:41" pos:end="35:48">vram_ptr</name></name></expr></argument>, <argument pos:start="35:51" pos:end="35:55"><expr pos:start="35:51" pos:end="35:55"><name pos:start="35:51" pos:end="35:55">false</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:37"><expr pos:start="37:9" pos:end="37:36"><call pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:16">ppm_save</name><argument_list pos:start="37:17" pos:end="37:36">(<argument pos:start="37:18" pos:end="37:25"><expr pos:start="37:18" pos:end="37:25"><name pos:start="37:18" pos:end="37:25">filename</name></expr></argument>, <argument pos:start="37:28" pos:end="37:29"><expr pos:start="37:28" pos:end="37:29"><name pos:start="37:28" pos:end="37:29">ds</name></expr></argument>, <argument pos:start="37:32" pos:end="37:35"><expr pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:35">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:19"><expr pos:start="39:9" pos:end="39:18"><call pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:14">g_free</name><argument_list pos:start="39:15" pos:end="39:18">(<argument pos:start="39:16" pos:end="39:17"><expr pos:start="39:16" pos:end="39:17"><name pos:start="39:16" pos:end="39:17">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
