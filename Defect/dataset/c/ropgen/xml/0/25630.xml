<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25630.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">v9fs_rename</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:28">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:15">err</name> <init pos:start="7:17" pos:end="7:19">= <expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:17">offset</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">V9fsString</name></type> <name pos:start="11:16" pos:end="11:19">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int32_t</name></type> <name pos:start="13:13" pos:end="13:21">newdirfid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">V9fsFidState</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">V9fsPDU</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:16">pdu</name> <init pos:start="17:18" pos:end="17:25">= <expr pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:13">V9fsState</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:16">s</name> <init pos:start="19:18" pos:end="19:25">= <expr pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:22">pdu</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:25">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:63"><expr pos:start="23:5" pos:end="23:62"><call pos:start="23:5" pos:end="23:62"><name pos:start="23:5" pos:end="23:17">pdu_unmarshal</name><argument_list pos:start="23:18" pos:end="23:62">(<argument pos:start="23:19" pos:end="23:21"><expr pos:start="23:19" pos:end="23:21"><name pos:start="23:19" pos:end="23:21">pdu</name></expr></argument>, <argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">offset</name></expr></argument>, <argument pos:start="23:32" pos:end="23:36"><expr pos:start="23:32" pos:end="23:36"><literal type="string" pos:start="23:32" pos:end="23:36">"dds"</literal></expr></argument>, <argument pos:start="23:39" pos:end="23:42"><expr pos:start="23:39" pos:end="23:42"><operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:42">fid</name></expr></argument>, <argument pos:start="23:45" pos:end="23:54"><expr pos:start="23:45" pos:end="23:54"><operator pos:start="23:45" pos:end="23:45">&amp;</operator><name pos:start="23:46" pos:end="23:54">newdirfid</name></expr></argument>, <argument pos:start="23:57" pos:end="23:61"><expr pos:start="23:57" pos:end="23:61"><operator pos:start="23:57" pos:end="23:57">&amp;</operator><name pos:start="23:58" pos:end="23:61">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:8">fidp</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:28"><name pos:start="27:12" pos:end="27:18">get_fid</name><argument_list pos:start="27:19" pos:end="27:28">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">pdu</name></expr></argument>, <argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:12">fidp</name> <operator pos:start="29:14" pos:end="29:15">==</operator> <name pos:start="29:17" pos:end="29:20">NULL</name></expr>)</condition> <block pos:start="29:23" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:23">

        <expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:11">err</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <operator pos:start="31:15" pos:end="31:15">-</operator><name pos:start="31:16" pos:end="31:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:23">goto <name pos:start="33:14" pos:end="33:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:42"><expr pos:start="37:5" pos:end="37:41"><call pos:start="37:5" pos:end="37:41"><name pos:start="37:5" pos:end="37:10">BUG_ON</name><argument_list pos:start="37:11" pos:end="37:41">(<argument pos:start="37:12" pos:end="37:40"><expr pos:start="37:12" pos:end="37:40"><name pos:start="37:12" pos:end="37:25"><name pos:start="37:12" pos:end="37:15">fidp</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:25">fid_type</name></name> <operator pos:start="37:27" pos:end="37:28">!=</operator> <name pos:start="37:30" pos:end="37:40">P9_FID_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:59">/* if fs driver is not path based, return EOPNOTSUPP */</comment>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:62">(<expr pos:start="41:9" pos:end="41:61"><operator pos:start="41:9" pos:end="41:9">!</operator><operator pos:start="41:10" pos:end="41:10">(</operator><name pos:start="41:11" pos:end="41:34"><name pos:start="41:11" pos:end="41:13">pdu</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:21">ctx</name><operator pos:start="41:22" pos:end="41:22">.</operator><name pos:start="41:23" pos:end="41:34">export_flags</name></name> <operator pos:start="41:36" pos:end="41:36">&amp;</operator> <name pos:start="41:38" pos:end="41:60">V9FS_PATHNAME_FSCONTEXT</name><operator pos:start="41:61" pos:end="41:61">)</operator></expr>)</condition> <block pos:start="41:64" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:17">

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <operator pos:start="43:15" pos:end="43:15">-</operator><name pos:start="43:16" pos:end="43:25">EOPNOTSUPP</name></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:17">goto <name pos:start="45:14" pos:end="45:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:28"><expr pos:start="49:5" pos:end="49:27"><call pos:start="49:5" pos:end="49:27"><name pos:start="49:5" pos:end="49:24">v9fs_path_write_lock</name><argument_list pos:start="49:25" pos:end="49:27">(<argument pos:start="49:26" pos:end="49:26"><expr pos:start="49:26" pos:end="49:26"><name pos:start="49:26" pos:end="49:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:60"><expr pos:start="51:5" pos:end="51:59"><name pos:start="51:5" pos:end="51:7">err</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:59"><name pos:start="51:11" pos:end="51:30">v9fs_complete_rename</name><argument_list pos:start="51:31" pos:end="51:59">(<argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">pdu</name></expr></argument>, <argument pos:start="51:37" pos:end="51:40"><expr pos:start="51:37" pos:end="51:40"><name pos:start="51:37" pos:end="51:40">fidp</name></expr></argument>, <argument pos:start="51:43" pos:end="51:51"><expr pos:start="51:43" pos:end="51:51"><name pos:start="51:43" pos:end="51:51">newdirfid</name></expr></argument>, <argument pos:start="51:54" pos:end="51:58"><expr pos:start="51:54" pos:end="51:58"><operator pos:start="51:54" pos:end="51:54">&amp;</operator><name pos:start="51:55" pos:end="51:58">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:24"><expr pos:start="53:5" pos:end="53:23"><call pos:start="53:5" pos:end="53:23"><name pos:start="53:5" pos:end="53:20">v9fs_path_unlock</name><argument_list pos:start="53:21" pos:end="53:23">(<argument pos:start="53:22" pos:end="53:22"><expr pos:start="53:22" pos:end="53:22"><name pos:start="53:22" pos:end="53:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:13">(<expr pos:start="55:9" pos:end="55:12"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:12">err</name></expr>)</condition> <block pos:start="55:15" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:21">

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:11">err</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:20">offset</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="61:1" pos:end="61:4"><name pos:start="61:1" pos:end="61:3">out</name>:</label>

    <expr_stmt pos:start="63:5" pos:end="63:23"><expr pos:start="63:5" pos:end="63:22"><call pos:start="63:5" pos:end="63:22"><name pos:start="63:5" pos:end="63:11">put_fid</name><argument_list pos:start="63:12" pos:end="63:22">(<argument pos:start="63:13" pos:end="63:15"><expr pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">pdu</name></expr></argument>, <argument pos:start="63:18" pos:end="63:21"><expr pos:start="63:18" pos:end="63:21"><name pos:start="63:18" pos:end="63:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="65:1" pos:end="65:10"><name pos:start="65:1" pos:end="65:9">out_nofid</name>:</label>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><call pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:16">complete_pdu</name><argument_list pos:start="67:17" pos:end="67:29">(<argument pos:start="67:18" pos:end="67:18"><expr pos:start="67:18" pos:end="67:18"><name pos:start="67:18" pos:end="67:18">s</name></expr></argument>, <argument pos:start="67:21" pos:end="67:23"><expr pos:start="67:21" pos:end="67:23"><name pos:start="67:21" pos:end="67:23">pdu</name></expr></argument>, <argument pos:start="67:26" pos:end="67:28"><expr pos:start="67:26" pos:end="67:28"><name pos:start="67:26" pos:end="67:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:28"><expr pos:start="69:5" pos:end="69:27"><call pos:start="69:5" pos:end="69:27"><name pos:start="69:5" pos:end="69:20">v9fs_string_free</name><argument_list pos:start="69:21" pos:end="69:27">(<argument pos:start="69:22" pos:end="69:26"><expr pos:start="69:22" pos:end="69:26"><operator pos:start="69:22" pos:end="69:22">&amp;</operator><name pos:start="69:23" pos:end="69:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
