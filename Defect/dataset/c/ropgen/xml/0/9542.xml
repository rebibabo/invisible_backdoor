<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9542.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">helper_ltr_T0</name><parameter_list pos:start="1:19" pos:end="1:24">(<parameter pos:start="1:20" pos:end="1:23"><decl pos:start="1:20" pos:end="1:23"><type pos:start="1:20" pos:end="1:23"><name pos:start="1:20" pos:end="1:23">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:32">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">selector</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">SegmentCache</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">dt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:15">e1</name></decl>, <decl pos:start="9:18" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:18" pos:end="9:19">e2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">index</name></decl>, <decl pos:start="11:16" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:19">type</name></decl>, <decl pos:start="11:22" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:32">entry_limit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:20">ptr</name></decl>;</decl_stmt>

    

    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:12">selector</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:17">T0</name> <operator pos:start="17:19" pos:end="17:19">&amp;</operator> <literal type="number" pos:start="17:21" pos:end="17:26">0xffff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="99:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:33">(<expr pos:start="19:9" pos:end="19:32"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:17">selector</name> <operator pos:start="19:19" pos:end="19:19">&amp;</operator> <literal type="number" pos:start="19:21" pos:end="19:26">0xfffc</literal><operator pos:start="19:27" pos:end="19:27">)</operator> <operator pos:start="19:29" pos:end="19:30">==</operator> <literal type="number" pos:start="19:32" pos:end="19:32">0</literal></expr>)</condition> <block pos:start="19:35" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:26">

        <comment type="block" pos:start="21:9" pos:end="21:44">/* NULL selector case: invalid TR */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:15">tr</name><operator pos:start="23:16" pos:end="23:16">.</operator><name pos:start="23:17" pos:end="23:20">base</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <literal type="number" pos:start="23:24" pos:end="23:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:15">tr</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:21">limit</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:11">env</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:15">tr</name><operator pos:start="27:16" pos:end="27:16">.</operator><name pos:start="27:17" pos:end="27:21">flags</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="99:5">else <block pos:start="29:12" pos:end="99:5">{<block_content pos:start="31:9" pos:end="97:32">

        <if_stmt pos:start="31:9" pos:end="33:63"><if pos:start="31:9" pos:end="33:63">if <condition pos:start="31:12" pos:end="31:27">(<expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:20">selector</name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <literal type="number" pos:start="31:24" pos:end="31:26">0x4</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:63"><block_content pos:start="33:13" pos:end="33:63">

            <expr_stmt pos:start="33:13" pos:end="33:63"><expr pos:start="33:13" pos:end="33:62"><call pos:start="33:13" pos:end="33:62"><name pos:start="33:13" pos:end="33:31">raise_exception_err</name><argument_list pos:start="33:32" pos:end="33:62">(<argument pos:start="33:33" pos:end="33:42"><expr pos:start="33:33" pos:end="33:42"><name pos:start="33:33" pos:end="33:42">EXCP0D_GPF</name></expr></argument>, <argument pos:start="33:45" pos:end="33:61"><expr pos:start="33:45" pos:end="33:61"><name pos:start="33:45" pos:end="33:52">selector</name> <operator pos:start="33:54" pos:end="33:54">&amp;</operator> <literal type="number" pos:start="33:56" pos:end="33:61">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:10">dt</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <operator pos:start="35:14" pos:end="35:14">&amp;</operator><name pos:start="35:15" pos:end="35:22"><name pos:start="35:15" pos:end="35:17">env</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:22">gdt</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="40:0"><expr pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:13">index</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:24">selector</name> <operator pos:start="37:26" pos:end="37:26">&amp;</operator> <operator pos:start="37:28" pos:end="37:28">~</operator><literal type="number" pos:start="37:29" pos:end="37:29">7</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="39:1" pos:end="39:20">#<cpp:directive pos:start="39:2" pos:end="39:6">ifdef</cpp:directive> <name pos:start="39:8" pos:end="39:20">TARGET_X86_64</name></cpp:ifdef>

        <if_stmt pos:start="41:9" pos:end="49:28"><if pos:start="41:9" pos:end="43:29">if <condition pos:start="41:12" pos:end="41:38">(<expr pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:15">env</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:23">hflags</name></name> <operator pos:start="41:25" pos:end="41:25">&amp;</operator> <name pos:start="41:27" pos:end="41:37">HF_LMA_MASK</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:29"><block_content pos:start="43:13" pos:end="43:29">

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:23">entry_limit</name> <operator pos:start="43:25" pos:end="43:25">=</operator> <literal type="number" pos:start="43:27" pos:end="43:28">15</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="45:9" pos:end="49:28">else<block type="pseudo" pos:start="49:13" pos:end="49:28"><block_content pos:start="49:13" pos:end="49:28">

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>            

            <expr_stmt pos:start="49:13" pos:end="49:28"><expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:23">entry_limit</name> <operator pos:start="49:25" pos:end="49:25">=</operator> <literal type="number" pos:start="49:27" pos:end="49:27">7</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="51:9" pos:end="53:63"><if pos:start="51:9" pos:end="53:63">if <condition pos:start="51:12" pos:end="51:46">(<expr pos:start="51:13" pos:end="51:45"><operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:18">index</name> <operator pos:start="51:20" pos:end="51:20">+</operator> <name pos:start="51:22" pos:end="51:32">entry_limit</name><operator pos:start="51:33" pos:end="51:33">)</operator> <operator pos:start="51:35" pos:end="51:35">&gt;</operator> <name pos:start="51:37" pos:end="51:45"><name pos:start="51:37" pos:end="51:38">dt</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:45">limit</name></name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:63"><block_content pos:start="53:13" pos:end="53:63">

            <expr_stmt pos:start="53:13" pos:end="53:63"><expr pos:start="53:13" pos:end="53:62"><call pos:start="53:13" pos:end="53:62"><name pos:start="53:13" pos:end="53:31">raise_exception_err</name><argument_list pos:start="53:32" pos:end="53:62">(<argument pos:start="53:33" pos:end="53:42"><expr pos:start="53:33" pos:end="53:42"><name pos:start="53:33" pos:end="53:42">EXCP0D_GPF</name></expr></argument>, <argument pos:start="53:45" pos:end="53:61"><expr pos:start="53:45" pos:end="53:61"><name pos:start="53:45" pos:end="53:52">selector</name> <operator pos:start="53:54" pos:end="53:54">&amp;</operator> <literal type="number" pos:start="53:56" pos:end="53:61">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:11">ptr</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:22"><name pos:start="55:15" pos:end="55:16">dt</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:22">base</name></name> <operator pos:start="55:24" pos:end="55:24">+</operator> <name pos:start="55:26" pos:end="55:30">index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:10">e1</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="57:28"><name pos:start="57:14" pos:end="57:23">ldl_kernel</name><argument_list pos:start="57:24" pos:end="57:28">(<argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:27">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:10">e2</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <call pos:start="59:14" pos:end="59:32"><name pos:start="59:14" pos:end="59:23">ldl_kernel</name><argument_list pos:start="59:24" pos:end="59:32">(<argument pos:start="59:25" pos:end="59:31"><expr pos:start="59:25" pos:end="59:31"><name pos:start="59:25" pos:end="59:27">ptr</name> <operator pos:start="59:29" pos:end="59:29">+</operator> <literal type="number" pos:start="59:31" pos:end="59:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:12">type</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:18">e2</name> <operator pos:start="61:20" pos:end="61:21">&gt;&gt;</operator> <name pos:start="61:23" pos:end="61:37">DESC_TYPE_SHIFT</name><operator pos:start="61:38" pos:end="61:38">)</operator> <operator pos:start="61:40" pos:end="61:40">&amp;</operator> <literal type="number" pos:start="61:42" pos:end="61:44">0xf</literal></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="67:63"><if pos:start="63:9" pos:end="67:63">if <condition pos:start="63:12" pos:end="65:37">(<expr pos:start="63:13" pos:end="65:36"><operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:15">e2</name> <operator pos:start="63:17" pos:end="63:17">&amp;</operator> <name pos:start="63:19" pos:end="63:29">DESC_S_MASK</name><operator pos:start="63:30" pos:end="63:30">)</operator> <operator pos:start="63:32" pos:end="63:33">||</operator> 

            <operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:17">type</name> <operator pos:start="65:19" pos:end="65:20">!=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">1</literal> <operator pos:start="65:24" pos:end="65:25">&amp;&amp;</operator> <name pos:start="65:27" pos:end="65:30">type</name> <operator pos:start="65:32" pos:end="65:33">!=</operator> <literal type="number" pos:start="65:35" pos:end="65:35">9</literal><operator pos:start="65:36" pos:end="65:36">)</operator></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:63"><block_content pos:start="67:13" pos:end="67:63">

            <expr_stmt pos:start="67:13" pos:end="67:63"><expr pos:start="67:13" pos:end="67:62"><call pos:start="67:13" pos:end="67:62"><name pos:start="67:13" pos:end="67:31">raise_exception_err</name><argument_list pos:start="67:32" pos:end="67:62">(<argument pos:start="67:33" pos:end="67:42"><expr pos:start="67:33" pos:end="67:42"><name pos:start="67:33" pos:end="67:42">EXCP0D_GPF</name></expr></argument>, <argument pos:start="67:45" pos:end="67:61"><expr pos:start="67:45" pos:end="67:61"><name pos:start="67:45" pos:end="67:52">selector</name> <operator pos:start="67:54" pos:end="67:54">&amp;</operator> <literal type="number" pos:start="67:56" pos:end="67:61">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="74:0"><if pos:start="69:9" pos:end="74:0">if <condition pos:start="69:12" pos:end="69:32">(<expr pos:start="69:13" pos:end="69:31"><operator pos:start="69:13" pos:end="69:13">!</operator><operator pos:start="69:14" pos:end="69:14">(</operator><name pos:start="69:15" pos:end="69:16">e2</name> <operator pos:start="69:18" pos:end="69:18">&amp;</operator> <name pos:start="69:20" pos:end="69:30">DESC_P_MASK</name><operator pos:start="69:31" pos:end="69:31">)</operator></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="74:0"><block_content pos:start="71:13" pos:end="74:0">

            <expr_stmt pos:start="71:13" pos:end="74:0"><expr pos:start="71:13" pos:end="71:64"><call pos:start="71:13" pos:end="71:64"><name pos:start="71:13" pos:end="71:31">raise_exception_err</name><argument_list pos:start="71:32" pos:end="71:64">(<argument pos:start="71:33" pos:end="71:44"><expr pos:start="71:33" pos:end="71:44"><name pos:start="71:33" pos:end="71:44">EXCP0B_NOSEG</name></expr></argument>, <argument pos:start="71:47" pos:end="71:63"><expr pos:start="71:47" pos:end="71:63"><name pos:start="71:47" pos:end="71:54">selector</name> <operator pos:start="71:56" pos:end="71:56">&amp;</operator> <literal type="number" pos:start="71:58" pos:end="71:63">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="73:1" pos:end="73:20">#<cpp:directive pos:start="73:2" pos:end="73:6">ifdef</cpp:directive> <name pos:start="73:8" pos:end="73:20">TARGET_X86_64</name></cpp:ifdef>

        <if_stmt pos:start="75:9" pos:end="93:9"><if pos:start="75:9" pos:end="85:9">if <condition pos:start="75:12" pos:end="75:38">(<expr pos:start="75:13" pos:end="75:37"><name pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:15">env</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:23">hflags</name></name> <operator pos:start="75:25" pos:end="75:25">&amp;</operator> <name pos:start="75:27" pos:end="75:37">HF_LMA_MASK</name></expr>)</condition> <block pos:start="75:40" pos:end="85:9">{<block_content pos:start="77:13" pos:end="83:51">

            <decl_stmt pos:start="77:13" pos:end="77:24"><decl pos:start="77:13" pos:end="77:23"><type pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:20">uint32_t</name></type> <name pos:start="77:22" pos:end="77:23">e3</name></decl>;</decl_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:37"><expr pos:start="79:13" pos:end="79:36"><name pos:start="79:13" pos:end="79:14">e3</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <call pos:start="79:18" pos:end="79:36"><name pos:start="79:18" pos:end="79:27">ldl_kernel</name><argument_list pos:start="79:28" pos:end="79:36">(<argument pos:start="79:29" pos:end="79:35"><expr pos:start="79:29" pos:end="79:35"><name pos:start="79:29" pos:end="79:31">ptr</name> <operator pos:start="79:33" pos:end="79:33">+</operator> <literal type="number" pos:start="79:35" pos:end="79:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:52"><expr pos:start="81:13" pos:end="81:51"><call pos:start="81:13" pos:end="81:51"><name pos:start="81:13" pos:end="81:33">load_seg_cache_raw_dt</name><argument_list pos:start="81:34" pos:end="81:51">(<argument pos:start="81:35" pos:end="81:42"><expr pos:start="81:35" pos:end="81:42"><operator pos:start="81:35" pos:end="81:35">&amp;</operator><name pos:start="81:36" pos:end="81:42"><name pos:start="81:36" pos:end="81:38">env</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:42">tr</name></name></expr></argument>, <argument pos:start="81:45" pos:end="81:46"><expr pos:start="81:45" pos:end="81:46"><name pos:start="81:45" pos:end="81:46">e1</name></expr></argument>, <argument pos:start="81:49" pos:end="81:50"><expr pos:start="81:49" pos:end="81:50"><name pos:start="81:49" pos:end="81:50">e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:51"><expr pos:start="83:13" pos:end="83:50"><name pos:start="83:13" pos:end="83:24"><name pos:start="83:13" pos:end="83:15">env</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:19">tr</name><operator pos:start="83:20" pos:end="83:20">.</operator><name pos:start="83:21" pos:end="83:24">base</name></name> <operator pos:start="83:26" pos:end="83:27">|=</operator> <operator pos:start="83:29" pos:end="83:29">(</operator><name pos:start="83:30" pos:end="83:41">target_ulong</name><operator pos:start="83:42" pos:end="83:42">)</operator><name pos:start="83:43" pos:end="83:44">e3</name> <operator pos:start="83:46" pos:end="83:47">&lt;&lt;</operator> <literal type="number" pos:start="83:49" pos:end="83:50">32</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="93:9">else 

<cpp:endif pos:start="87:1" pos:end="87:6">#<cpp:directive pos:start="87:2" pos:end="87:6">endif</cpp:directive></cpp:endif>

        <block pos:start="89:9" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:52">

            <expr_stmt pos:start="91:13" pos:end="91:52"><expr pos:start="91:13" pos:end="91:51"><call pos:start="91:13" pos:end="91:51"><name pos:start="91:13" pos:end="91:33">load_seg_cache_raw_dt</name><argument_list pos:start="91:34" pos:end="91:51">(<argument pos:start="91:35" pos:end="91:42"><expr pos:start="91:35" pos:end="91:42"><operator pos:start="91:35" pos:end="91:35">&amp;</operator><name pos:start="91:36" pos:end="91:42"><name pos:start="91:36" pos:end="91:38">env</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:42">tr</name></name></expr></argument>, <argument pos:start="91:45" pos:end="91:46"><expr pos:start="91:45" pos:end="91:46"><name pos:start="91:45" pos:end="91:46">e1</name></expr></argument>, <argument pos:start="91:49" pos:end="91:50"><expr pos:start="91:49" pos:end="91:50"><name pos:start="91:49" pos:end="91:50">e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:33"><expr pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:10">e2</name> <operator pos:start="95:12" pos:end="95:13">|=</operator> <name pos:start="95:15" pos:end="95:32">DESC_TSS_BUSY_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:32"><expr pos:start="97:9" pos:end="97:31"><call pos:start="97:9" pos:end="97:31"><name pos:start="97:9" pos:end="97:18">stl_kernel</name><argument_list pos:start="97:19" pos:end="97:31">(<argument pos:start="97:20" pos:end="97:26"><expr pos:start="97:20" pos:end="97:26"><name pos:start="97:20" pos:end="97:22">ptr</name> <operator pos:start="97:24" pos:end="97:24">+</operator> <literal type="number" pos:start="97:26" pos:end="97:26">4</literal></expr></argument>, <argument pos:start="97:29" pos:end="97:30"><expr pos:start="97:29" pos:end="97:30"><name pos:start="97:29" pos:end="97:30">e2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:32"><expr pos:start="101:5" pos:end="101:31"><name pos:start="101:5" pos:end="101:20"><name pos:start="101:5" pos:end="101:7">env</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:11">tr</name><operator pos:start="101:12" pos:end="101:12">.</operator><name pos:start="101:13" pos:end="101:20">selector</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:31">selector</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
