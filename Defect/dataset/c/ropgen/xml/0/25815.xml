<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25815.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">nvme_init</name><parameter_list pos:start="1:21" pos:end="1:40">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:32"><name pos:start="1:22" pos:end="1:30">PCIDevice</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:39">pci_dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="179:1">{<block_content pos:start="5:5" pos:end="177:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">NvmeCtrl</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">n</name> <init pos:start="5:17" pos:end="5:31">= <expr pos:start="5:19" pos:end="5:31"><call pos:start="5:19" pos:end="5:31"><name pos:start="5:19" pos:end="5:22">NVME</name><argument_list pos:start="5:23" pos:end="5:31">(<argument pos:start="5:24" pos:end="5:30"><expr pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:30">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">NvmeIdCtrl</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">id</name> <init pos:start="7:20" pos:end="7:32">= <expr pos:start="7:22" pos:end="7:32"><operator pos:start="7:22" pos:end="7:22">&amp;</operator><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:23">n</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:32">id_ctrl</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:19">bs_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:21">pci_conf</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:22">(<expr pos:start="19:9" pos:end="19:21"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:20"><name pos:start="19:11" pos:end="19:11">n</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:17">conf</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:20">bs</name></name><operator pos:start="19:21" pos:end="19:21">)</operator></expr>)</condition> <block pos:start="19:24" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:11">bs_size</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:40"><name pos:start="27:15" pos:end="27:28">bdrv_getlength</name><argument_list pos:start="27:29" pos:end="27:40">(<argument pos:start="27:30" pos:end="27:39"><expr pos:start="27:30" pos:end="27:39"><name pos:start="27:30" pos:end="27:39"><name pos:start="27:30" pos:end="27:30">n</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:36">conf</name><operator pos:start="27:37" pos:end="27:37">.</operator><name pos:start="27:38" pos:end="27:39">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:15">bs_size</name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>)</condition> <block pos:start="29:22" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:18">

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><call pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:18">blkconf_serial</name><argument_list pos:start="37:19" pos:end="37:40">(<argument pos:start="37:20" pos:end="37:27"><expr pos:start="37:20" pos:end="37:27"><operator pos:start="37:20" pos:end="37:20">&amp;</operator><name pos:start="37:21" pos:end="37:27"><name pos:start="37:21" pos:end="37:21">n</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:27">conf</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:39"><expr pos:start="37:30" pos:end="37:39"><operator pos:start="37:30" pos:end="37:30">&amp;</operator><name pos:start="37:31" pos:end="37:39"><name pos:start="37:31" pos:end="37:31">n</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:39">serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:19">(<expr pos:start="39:9" pos:end="39:18"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:18"><name pos:start="39:10" pos:end="39:10">n</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:18">serial</name></name></expr>)</condition> <block pos:start="39:21" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:31"><expr pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:12">pci_conf</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <name pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:22">pci_dev</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:30">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:31"><name pos:start="49:5" pos:end="49:12">pci_conf</name><index pos:start="49:13" pos:end="49:31">[<expr pos:start="49:14" pos:end="49:30"><name pos:start="49:14" pos:end="49:30">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="49:33" pos:end="49:33">=</operator> <literal type="number" pos:start="49:35" pos:end="49:35">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:56"><expr pos:start="51:5" pos:end="51:55"><call pos:start="51:5" pos:end="51:55"><name pos:start="51:5" pos:end="51:33">pci_config_set_prog_interface</name><argument_list pos:start="51:34" pos:end="51:55">(<argument pos:start="51:35" pos:end="51:49"><expr pos:start="51:35" pos:end="51:49"><name pos:start="51:35" pos:end="51:49"><name pos:start="51:35" pos:end="51:41">pci_dev</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:49">config</name></name></expr></argument>, <argument pos:start="51:52" pos:end="51:54"><expr pos:start="51:52" pos:end="51:54"><literal type="number" pos:start="51:52" pos:end="51:54">0x2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:69"><expr pos:start="53:5" pos:end="53:68"><call pos:start="53:5" pos:end="53:68"><name pos:start="53:5" pos:end="53:24">pci_config_set_class</name><argument_list pos:start="53:25" pos:end="53:68">(<argument pos:start="53:26" pos:end="53:40"><expr pos:start="53:26" pos:end="53:40"><name pos:start="53:26" pos:end="53:40"><name pos:start="53:26" pos:end="53:32">pci_dev</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:40">config</name></name></expr></argument>, <argument pos:start="53:43" pos:end="53:67"><expr pos:start="53:43" pos:end="53:67"><name pos:start="53:43" pos:end="53:67">PCI_CLASS_STORAGE_EXPRESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:49"><expr pos:start="55:5" pos:end="55:48"><call pos:start="55:5" pos:end="55:48"><name pos:start="55:5" pos:end="55:26">pcie_endpoint_cap_init</name><argument_list pos:start="55:27" pos:end="55:48">(<argument pos:start="55:28" pos:end="55:41"><expr pos:start="55:28" pos:end="55:41"><operator pos:start="55:28" pos:end="55:28">&amp;</operator><name pos:start="55:29" pos:end="55:41"><name pos:start="55:29" pos:end="55:29">n</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:41">parent_obj</name></name></expr></argument>, <argument pos:start="55:44" pos:end="55:47"><expr pos:start="55:44" pos:end="55:47"><literal type="number" pos:start="55:44" pos:end="55:47">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:26"><expr pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:5">n</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:21">num_namespaces</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <literal type="number" pos:start="59:25" pos:end="59:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:23"><expr pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:5">n</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:17">num_queues</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:22">64</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:70"><expr pos:start="63:5" pos:end="63:69"><name pos:start="63:5" pos:end="63:15"><name pos:start="63:5" pos:end="63:5">n</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:15">reg_size</name></name> <operator pos:start="63:17" pos:end="63:17">=</operator> <literal type="number" pos:start="63:19" pos:end="63:19">1</literal> <operator pos:start="63:21" pos:end="63:22">&lt;&lt;</operator> <call pos:start="63:24" pos:end="63:69"><name pos:start="63:24" pos:end="63:31">qemu_fls</name><argument_list pos:start="63:32" pos:end="63:69">(<argument pos:start="63:33" pos:end="63:68"><expr pos:start="63:33" pos:end="63:68"><literal type="number" pos:start="63:33" pos:end="63:40">0x1004</literal> <operator pos:start="63:40" pos:end="63:40">+</operator> <literal type="number" pos:start="63:42" pos:end="63:42">2</literal> <operator pos:start="63:44" pos:end="63:44">*</operator> <operator pos:start="63:46" pos:end="63:46">(</operator><name pos:start="63:47" pos:end="63:59"><name pos:start="63:47" pos:end="63:47">n</name><operator pos:start="63:48" pos:end="63:49">-&gt;</operator><name pos:start="63:50" pos:end="63:59">num_queues</name></name> <operator pos:start="63:61" pos:end="63:61">+</operator> <literal type="number" pos:start="63:63" pos:end="63:63">1</literal><operator pos:start="63:64" pos:end="63:64">)</operator> <operator pos:start="63:66" pos:end="63:66">*</operator> <literal type="number" pos:start="63:68" pos:end="63:68">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:55"><expr pos:start="65:5" pos:end="65:54"><name pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:5">n</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:14">ns_size</name></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <name pos:start="65:18" pos:end="65:24">bs_size</name> <operator pos:start="65:26" pos:end="65:26">/</operator> <operator pos:start="65:28" pos:end="65:28">(</operator><name pos:start="65:29" pos:end="65:36">uint64_t</name><operator pos:start="65:37" pos:end="65:37">)</operator><name pos:start="65:38" pos:end="65:54"><name pos:start="65:38" pos:end="65:38">n</name><operator pos:start="65:39" pos:end="65:40">-&gt;</operator><name pos:start="65:41" pos:end="65:54">num_namespaces</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:61"><expr pos:start="69:5" pos:end="69:60"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:5">n</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:17">namespaces</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="69:60"><name pos:start="69:21" pos:end="69:26">g_new0</name><argument_list pos:start="69:27" pos:end="69:60">(<argument pos:start="69:28" pos:end="69:40"><expr pos:start="69:28" pos:end="69:40"><name pos:start="69:28" pos:end="69:40">NvmeNamespace</name></expr></argument>, <argument pos:start="69:43" pos:end="69:59"><expr pos:start="69:43" pos:end="69:59"><name pos:start="69:43" pos:end="69:59"><name pos:start="69:43" pos:end="69:43">n</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:59">num_namespaces</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:48"><expr pos:start="71:5" pos:end="71:47"><name pos:start="71:5" pos:end="71:9"><name pos:start="71:5" pos:end="71:5">n</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:9">sq</name></name> <operator pos:start="71:11" pos:end="71:11">=</operator> <call pos:start="71:13" pos:end="71:47"><name pos:start="71:13" pos:end="71:18">g_new0</name><argument_list pos:start="71:19" pos:end="71:47">(<argument pos:start="71:20" pos:end="71:31"><expr pos:start="71:20" pos:end="71:31"><name pos:start="71:20" pos:end="71:29">NvmeSQueue</name> <operator pos:start="71:31" pos:end="71:31">*</operator></expr></argument>, <argument pos:start="71:34" pos:end="71:46"><expr pos:start="71:34" pos:end="71:46"><name pos:start="71:34" pos:end="71:46"><name pos:start="71:34" pos:end="71:34">n</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:46">num_queues</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:48"><expr pos:start="73:5" pos:end="73:47"><name pos:start="73:5" pos:end="73:9"><name pos:start="73:5" pos:end="73:5">n</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:9">cq</name></name> <operator pos:start="73:11" pos:end="73:11">=</operator> <call pos:start="73:13" pos:end="73:47"><name pos:start="73:13" pos:end="73:18">g_new0</name><argument_list pos:start="73:19" pos:end="73:47">(<argument pos:start="73:20" pos:end="73:31"><expr pos:start="73:20" pos:end="73:31"><name pos:start="73:20" pos:end="73:29">NvmeCQueue</name> <operator pos:start="73:31" pos:end="73:31">*</operator></expr></argument>, <argument pos:start="73:34" pos:end="73:46"><expr pos:start="73:34" pos:end="73:46"><name pos:start="73:34" pos:end="73:46"><name pos:start="73:34" pos:end="73:34">n</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:46">num_queues</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="79:47"><expr pos:start="77:5" pos:end="79:46"><call pos:start="77:5" pos:end="79:46"><name pos:start="77:5" pos:end="77:25">memory_region_init_io</name><argument_list pos:start="77:26" pos:end="79:46">(<argument pos:start="77:27" pos:end="77:35"><expr pos:start="77:27" pos:end="77:35"><operator pos:start="77:27" pos:end="77:27">&amp;</operator><name pos:start="77:28" pos:end="77:35"><name pos:start="77:28" pos:end="77:28">n</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:35">iomem</name></name></expr></argument>, <argument pos:start="77:38" pos:end="77:46"><expr pos:start="77:38" pos:end="77:46"><call pos:start="77:38" pos:end="77:46"><name pos:start="77:38" pos:end="77:43">OBJECT</name><argument_list pos:start="77:44" pos:end="77:46">(<argument pos:start="77:45" pos:end="77:45"><expr pos:start="77:45" pos:end="77:45"><name pos:start="77:45" pos:end="77:45">n</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:49" pos:end="77:62"><expr pos:start="77:49" pos:end="77:62"><operator pos:start="77:49" pos:end="77:49">&amp;</operator><name pos:start="77:50" pos:end="77:62">nvme_mmio_ops</name></expr></argument>, <argument pos:start="77:65" pos:end="77:65"><expr pos:start="77:65" pos:end="77:65"><name pos:start="77:65" pos:end="77:65">n</name></expr></argument>,

                          <argument pos:start="79:27" pos:end="79:32"><expr pos:start="79:27" pos:end="79:32"><literal type="string" pos:start="79:27" pos:end="79:32">"nvme"</literal></expr></argument>, <argument pos:start="79:35" pos:end="79:45"><expr pos:start="79:35" pos:end="79:45"><name pos:start="79:35" pos:end="79:45"><name pos:start="79:35" pos:end="79:35">n</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:45">reg_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="85:19"><expr pos:start="81:5" pos:end="85:18"><call pos:start="81:5" pos:end="85:18"><name pos:start="81:5" pos:end="81:20">pci_register_bar</name><argument_list pos:start="81:21" pos:end="85:18">(<argument pos:start="81:22" pos:end="81:35"><expr pos:start="81:22" pos:end="81:35"><operator pos:start="81:22" pos:end="81:22">&amp;</operator><name pos:start="81:23" pos:end="81:35"><name pos:start="81:23" pos:end="81:23">n</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:35">parent_obj</name></name></expr></argument>, <argument pos:start="81:38" pos:end="81:38"><expr pos:start="81:38" pos:end="81:38"><literal type="number" pos:start="81:38" pos:end="81:38">0</literal></expr></argument>,

        <argument pos:start="83:9" pos:end="83:68"><expr pos:start="83:9" pos:end="83:68"><name pos:start="83:9" pos:end="83:37">PCI_BASE_ADDRESS_SPACE_MEMORY</name> <operator pos:start="83:39" pos:end="83:39">|</operator> <name pos:start="83:41" pos:end="83:68">PCI_BASE_ADDRESS_MEM_TYPE_64</name></expr></argument>,

        <argument pos:start="85:9" pos:end="85:17"><expr pos:start="85:9" pos:end="85:17"><operator pos:start="85:9" pos:end="85:9">&amp;</operator><name pos:start="85:10" pos:end="85:17"><name pos:start="85:10" pos:end="85:10">n</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:17">iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:62"><expr pos:start="87:5" pos:end="87:61"><call pos:start="87:5" pos:end="87:61"><name pos:start="87:5" pos:end="87:27">msix_init_exclusive_bar</name><argument_list pos:start="87:28" pos:end="87:61">(<argument pos:start="87:29" pos:end="87:42"><expr pos:start="87:29" pos:end="87:42"><operator pos:start="87:29" pos:end="87:29">&amp;</operator><name pos:start="87:30" pos:end="87:42"><name pos:start="87:30" pos:end="87:30">n</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:42">parent_obj</name></name></expr></argument>, <argument pos:start="87:45" pos:end="87:57"><expr pos:start="87:45" pos:end="87:57"><name pos:start="87:45" pos:end="87:57"><name pos:start="87:45" pos:end="87:45">n</name><operator pos:start="87:46" pos:end="87:47">-&gt;</operator><name pos:start="87:48" pos:end="87:57">num_queues</name></name></expr></argument>, <argument pos:start="87:60" pos:end="87:60"><expr pos:start="87:60" pos:end="87:60"><literal type="number" pos:start="87:60" pos:end="87:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:66"><expr pos:start="91:5" pos:end="91:65"><name pos:start="91:5" pos:end="91:11"><name pos:start="91:5" pos:end="91:6">id</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:11">vid</name></name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:65"><name pos:start="91:15" pos:end="91:25">cpu_to_le16</name><argument_list pos:start="91:26" pos:end="91:65">(<argument pos:start="91:27" pos:end="91:64"><expr pos:start="91:27" pos:end="91:64"><call pos:start="91:27" pos:end="91:64"><name pos:start="91:27" pos:end="91:38">pci_get_word</name><argument_list pos:start="91:39" pos:end="91:64">(<argument pos:start="91:40" pos:end="91:63"><expr pos:start="91:40" pos:end="91:63"><name pos:start="91:40" pos:end="91:47">pci_conf</name> <operator pos:start="91:49" pos:end="91:49">+</operator> <name pos:start="91:51" pos:end="91:63">PCI_VENDOR_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:78"><expr pos:start="93:5" pos:end="93:77"><name pos:start="93:5" pos:end="93:13"><name pos:start="93:5" pos:end="93:6">id</name><operator pos:start="93:7" pos:end="93:8">-&gt;</operator><name pos:start="93:9" pos:end="93:13">ssvid</name></name> <operator pos:start="93:15" pos:end="93:15">=</operator> <call pos:start="93:17" pos:end="93:77"><name pos:start="93:17" pos:end="93:27">cpu_to_le16</name><argument_list pos:start="93:28" pos:end="93:77">(<argument pos:start="93:29" pos:end="93:76"><expr pos:start="93:29" pos:end="93:76"><call pos:start="93:29" pos:end="93:76"><name pos:start="93:29" pos:end="93:40">pci_get_word</name><argument_list pos:start="93:41" pos:end="93:76">(<argument pos:start="93:42" pos:end="93:75"><expr pos:start="93:42" pos:end="93:75"><name pos:start="93:42" pos:end="93:49">pci_conf</name> <operator pos:start="93:51" pos:end="93:51">+</operator> <name pos:start="93:53" pos:end="93:75">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:69"><expr pos:start="95:5" pos:end="95:68"><call pos:start="95:5" pos:end="95:68"><name pos:start="95:5" pos:end="95:13">strpadcpy</name><argument_list pos:start="95:14" pos:end="95:68">(<argument pos:start="95:15" pos:end="95:28"><expr pos:start="95:15" pos:end="95:28"><operator pos:start="95:15" pos:end="95:15">(</operator><name pos:start="95:16" pos:end="95:19">char</name> <operator pos:start="95:21" pos:end="95:21">*</operator><operator pos:start="95:22" pos:end="95:22">)</operator><name pos:start="95:23" pos:end="95:28"><name pos:start="95:23" pos:end="95:24">id</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:28">mn</name></name></expr></argument>, <argument pos:start="95:31" pos:end="95:44"><expr pos:start="95:31" pos:end="95:44"><sizeof pos:start="95:31" pos:end="95:44">sizeof<argument_list pos:start="95:37" pos:end="95:44">(<argument pos:start="95:38" pos:end="95:43"><expr pos:start="95:38" pos:end="95:43"><name pos:start="95:38" pos:end="95:43"><name pos:start="95:38" pos:end="95:39">id</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:43">mn</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="95:47" pos:end="95:62"><expr pos:start="95:47" pos:end="95:62"><literal type="string" pos:start="95:47" pos:end="95:62">"QEMU NVMe Ctrl"</literal></expr></argument>, <argument pos:start="95:65" pos:end="95:67"><expr pos:start="95:65" pos:end="95:67"><literal type="char" pos:start="95:65" pos:end="95:67">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:58"><expr pos:start="97:5" pos:end="97:57"><call pos:start="97:5" pos:end="97:57"><name pos:start="97:5" pos:end="97:13">strpadcpy</name><argument_list pos:start="97:14" pos:end="97:57">(<argument pos:start="97:15" pos:end="97:28"><expr pos:start="97:15" pos:end="97:28"><operator pos:start="97:15" pos:end="97:15">(</operator><name pos:start="97:16" pos:end="97:19">char</name> <operator pos:start="97:21" pos:end="97:21">*</operator><operator pos:start="97:22" pos:end="97:22">)</operator><name pos:start="97:23" pos:end="97:28"><name pos:start="97:23" pos:end="97:24">id</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:28">fr</name></name></expr></argument>, <argument pos:start="97:31" pos:end="97:44"><expr pos:start="97:31" pos:end="97:44"><sizeof pos:start="97:31" pos:end="97:44">sizeof<argument_list pos:start="97:37" pos:end="97:44">(<argument pos:start="97:38" pos:end="97:43"><expr pos:start="97:38" pos:end="97:43"><name pos:start="97:38" pos:end="97:43"><name pos:start="97:38" pos:end="97:39">id</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:43">fr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="97:47" pos:end="97:51"><expr pos:start="97:47" pos:end="97:51"><literal type="string" pos:start="97:47" pos:end="97:51">"1.0"</literal></expr></argument>, <argument pos:start="97:54" pos:end="97:56"><expr pos:start="97:54" pos:end="97:56"><literal type="char" pos:start="97:54" pos:end="97:56">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:62"><expr pos:start="99:5" pos:end="99:61"><call pos:start="99:5" pos:end="99:61"><name pos:start="99:5" pos:end="99:13">strpadcpy</name><argument_list pos:start="99:14" pos:end="99:61">(<argument pos:start="99:15" pos:end="99:28"><expr pos:start="99:15" pos:end="99:28"><operator pos:start="99:15" pos:end="99:15">(</operator><name pos:start="99:16" pos:end="99:19">char</name> <operator pos:start="99:21" pos:end="99:21">*</operator><operator pos:start="99:22" pos:end="99:22">)</operator><name pos:start="99:23" pos:end="99:28"><name pos:start="99:23" pos:end="99:24">id</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:28">sn</name></name></expr></argument>, <argument pos:start="99:31" pos:end="99:44"><expr pos:start="99:31" pos:end="99:44"><sizeof pos:start="99:31" pos:end="99:44">sizeof<argument_list pos:start="99:37" pos:end="99:44">(<argument pos:start="99:38" pos:end="99:43"><expr pos:start="99:38" pos:end="99:43"><name pos:start="99:38" pos:end="99:43"><name pos:start="99:38" pos:end="99:39">id</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:43">sn</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="99:47" pos:end="99:55"><expr pos:start="99:47" pos:end="99:55"><name pos:start="99:47" pos:end="99:55"><name pos:start="99:47" pos:end="99:47">n</name><operator pos:start="99:48" pos:end="99:49">-&gt;</operator><name pos:start="99:50" pos:end="99:55">serial</name></name></expr></argument>, <argument pos:start="99:58" pos:end="99:60"><expr pos:start="99:58" pos:end="99:60"><literal type="char" pos:start="99:58" pos:end="99:60">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:16"><expr pos:start="101:5" pos:end="101:15"><name pos:start="101:5" pos:end="101:11"><name pos:start="101:5" pos:end="101:6">id</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:11">rab</name></name> <operator pos:start="101:13" pos:end="101:13">=</operator> <literal type="number" pos:start="101:15" pos:end="101:15">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:23"><expr pos:start="103:5" pos:end="103:22"><name pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:6">id</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:12">ieee</name><index pos:start="103:13" pos:end="103:15">[<expr pos:start="103:14" pos:end="103:14"><literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr>]</index></name> <operator pos:start="103:17" pos:end="103:17">=</operator> <literal type="number" pos:start="103:19" pos:end="103:22">0x00</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:23"><expr pos:start="105:5" pos:end="105:22"><name pos:start="105:5" pos:end="105:15"><name pos:start="105:5" pos:end="105:6">id</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:12">ieee</name><index pos:start="105:13" pos:end="105:15">[<expr pos:start="105:14" pos:end="105:14"><literal type="number" pos:start="105:14" pos:end="105:14">1</literal></expr>]</index></name> <operator pos:start="105:17" pos:end="105:17">=</operator> <literal type="number" pos:start="105:19" pos:end="105:22">0x02</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:23"><expr pos:start="107:5" pos:end="107:22"><name pos:start="107:5" pos:end="107:15"><name pos:start="107:5" pos:end="107:6">id</name><operator pos:start="107:7" pos:end="107:8">-&gt;</operator><name pos:start="107:9" pos:end="107:12">ieee</name><index pos:start="107:13" pos:end="107:15">[<expr pos:start="107:14" pos:end="107:14"><literal type="number" pos:start="107:14" pos:end="107:14">2</literal></expr>]</index></name> <operator pos:start="107:17" pos:end="107:17">=</operator> <literal type="number" pos:start="107:19" pos:end="107:22">0xb3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:30"><expr pos:start="109:5" pos:end="109:29"><name pos:start="109:5" pos:end="109:12"><name pos:start="109:5" pos:end="109:6">id</name><operator pos:start="109:7" pos:end="109:8">-&gt;</operator><name pos:start="109:9" pos:end="109:12">oacs</name></name> <operator pos:start="109:14" pos:end="109:14">=</operator> <call pos:start="109:16" pos:end="109:29"><name pos:start="109:16" pos:end="109:26">cpu_to_le16</name><argument_list pos:start="109:27" pos:end="109:29">(<argument pos:start="109:28" pos:end="109:28"><expr pos:start="109:28" pos:end="109:28"><literal type="number" pos:start="109:28" pos:end="109:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:22"><expr pos:start="111:5" pos:end="111:21"><name pos:start="111:5" pos:end="111:12"><name pos:start="111:5" pos:end="111:6">id</name><operator pos:start="111:7" pos:end="111:8">-&gt;</operator><name pos:start="111:9" pos:end="111:12">frmw</name></name> <operator pos:start="111:14" pos:end="111:14">=</operator> <literal type="number" pos:start="111:16" pos:end="111:16">7</literal> <operator pos:start="111:18" pos:end="111:19">&lt;&lt;</operator> <literal type="number" pos:start="111:21" pos:end="111:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:21"><expr pos:start="113:5" pos:end="113:20"><name pos:start="113:5" pos:end="113:11"><name pos:start="113:5" pos:end="113:6">id</name><operator pos:start="113:7" pos:end="113:8">-&gt;</operator><name pos:start="113:9" pos:end="113:11">lpa</name></name> <operator pos:start="113:13" pos:end="113:13">=</operator> <literal type="number" pos:start="113:15" pos:end="113:15">1</literal> <operator pos:start="113:17" pos:end="113:18">&lt;&lt;</operator> <literal type="number" pos:start="113:20" pos:end="113:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:32"><expr pos:start="115:5" pos:end="115:31"><name pos:start="115:5" pos:end="115:12"><name pos:start="115:5" pos:end="115:6">id</name><operator pos:start="115:7" pos:end="115:8">-&gt;</operator><name pos:start="115:9" pos:end="115:12">sqes</name></name> <operator pos:start="115:14" pos:end="115:14">=</operator> <operator pos:start="115:16" pos:end="115:16">(</operator><literal type="number" pos:start="115:17" pos:end="115:19">0x6</literal> <operator pos:start="115:21" pos:end="115:22">&lt;&lt;</operator> <literal type="number" pos:start="115:24" pos:end="115:24">4</literal><operator pos:start="115:25" pos:end="115:25">)</operator> <operator pos:start="115:27" pos:end="115:27">|</operator> <literal type="number" pos:start="115:29" pos:end="115:31">0x6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:32"><expr pos:start="117:5" pos:end="117:31"><name pos:start="117:5" pos:end="117:12"><name pos:start="117:5" pos:end="117:6">id</name><operator pos:start="117:7" pos:end="117:8">-&gt;</operator><name pos:start="117:9" pos:end="117:12">cqes</name></name> <operator pos:start="117:14" pos:end="117:14">=</operator> <operator pos:start="117:16" pos:end="117:16">(</operator><literal type="number" pos:start="117:17" pos:end="117:19">0x4</literal> <operator pos:start="117:21" pos:end="117:22">&lt;&lt;</operator> <literal type="number" pos:start="117:24" pos:end="117:24">4</literal><operator pos:start="117:25" pos:end="117:25">)</operator> <operator pos:start="117:27" pos:end="117:27">|</operator> <literal type="number" pos:start="117:29" pos:end="117:31">0x4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:44"><expr pos:start="119:5" pos:end="119:43"><name pos:start="119:5" pos:end="119:10"><name pos:start="119:5" pos:end="119:6">id</name><operator pos:start="119:7" pos:end="119:8">-&gt;</operator><name pos:start="119:9" pos:end="119:10">nn</name></name> <operator pos:start="119:12" pos:end="119:12">=</operator> <call pos:start="119:14" pos:end="119:43"><name pos:start="119:14" pos:end="119:24">cpu_to_le32</name><argument_list pos:start="119:25" pos:end="119:43">(<argument pos:start="119:26" pos:end="119:42"><expr pos:start="119:26" pos:end="119:42"><name pos:start="119:26" pos:end="119:42"><name pos:start="119:26" pos:end="119:26">n</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:42">num_namespaces</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:39"><expr pos:start="121:5" pos:end="121:38"><name pos:start="121:5" pos:end="121:14"><name pos:start="121:5" pos:end="121:6">id</name><operator pos:start="121:7" pos:end="121:8">-&gt;</operator><name pos:start="121:9" pos:end="121:11">psd</name><index pos:start="121:12" pos:end="121:14">[<expr pos:start="121:13" pos:end="121:13"><literal type="number" pos:start="121:13" pos:end="121:13">0</literal></expr>]</index></name><operator pos:start="121:15" pos:end="121:15">.</operator><name pos:start="121:16" pos:end="121:17">mp</name> <operator pos:start="121:19" pos:end="121:19">=</operator> <call pos:start="121:21" pos:end="121:38"><name pos:start="121:21" pos:end="121:31">cpu_to_le16</name><argument_list pos:start="121:32" pos:end="121:38">(<argument pos:start="121:33" pos:end="121:37"><expr pos:start="121:33" pos:end="121:37"><literal type="number" pos:start="121:33" pos:end="121:37">0x9c4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:41"><expr pos:start="123:5" pos:end="123:40"><name pos:start="123:5" pos:end="123:14"><name pos:start="123:5" pos:end="123:6">id</name><operator pos:start="123:7" pos:end="123:8">-&gt;</operator><name pos:start="123:9" pos:end="123:11">psd</name><index pos:start="123:12" pos:end="123:14">[<expr pos:start="123:13" pos:end="123:13"><literal type="number" pos:start="123:13" pos:end="123:13">0</literal></expr>]</index></name><operator pos:start="123:15" pos:end="123:15">.</operator><name pos:start="123:16" pos:end="123:20">enlat</name> <operator pos:start="123:22" pos:end="123:22">=</operator> <call pos:start="123:24" pos:end="123:40"><name pos:start="123:24" pos:end="123:34">cpu_to_le32</name><argument_list pos:start="123:35" pos:end="123:40">(<argument pos:start="123:36" pos:end="123:39"><expr pos:start="123:36" pos:end="123:39"><literal type="number" pos:start="123:36" pos:end="123:39">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:40"><expr pos:start="125:5" pos:end="125:39"><name pos:start="125:5" pos:end="125:14"><name pos:start="125:5" pos:end="125:6">id</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:11">psd</name><index pos:start="125:12" pos:end="125:14">[<expr pos:start="125:13" pos:end="125:13"><literal type="number" pos:start="125:13" pos:end="125:13">0</literal></expr>]</index></name><operator pos:start="125:15" pos:end="125:15">.</operator><name pos:start="125:16" pos:end="125:20">exlat</name> <operator pos:start="125:22" pos:end="125:22">=</operator> <call pos:start="125:24" pos:end="125:39"><name pos:start="125:24" pos:end="125:34">cpu_to_le32</name><argument_list pos:start="125:35" pos:end="125:39">(<argument pos:start="125:36" pos:end="125:38"><expr pos:start="125:36" pos:end="125:38"><literal type="number" pos:start="125:36" pos:end="125:38">0x4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:19"><expr pos:start="129:5" pos:end="129:18"><name pos:start="129:5" pos:end="129:14"><name pos:start="129:5" pos:end="129:5">n</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:10">bar</name><operator pos:start="129:11" pos:end="129:11">.</operator><name pos:start="129:12" pos:end="129:14">cap</name></name> <operator pos:start="129:16" pos:end="129:16">=</operator> <literal type="number" pos:start="129:18" pos:end="129:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:41"><expr pos:start="131:5" pos:end="131:40"><call pos:start="131:5" pos:end="131:40"><name pos:start="131:5" pos:end="131:21">NVME_CAP_SET_MQES</name><argument_list pos:start="131:22" pos:end="131:40">(<argument pos:start="131:23" pos:end="131:32"><expr pos:start="131:23" pos:end="131:32"><name pos:start="131:23" pos:end="131:32"><name pos:start="131:23" pos:end="131:23">n</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:28">bar</name><operator pos:start="131:29" pos:end="131:29">.</operator><name pos:start="131:30" pos:end="131:32">cap</name></name></expr></argument>, <argument pos:start="131:35" pos:end="131:39"><expr pos:start="131:35" pos:end="131:39"><literal type="number" pos:start="131:35" pos:end="131:39">0x7ff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:36"><expr pos:start="133:5" pos:end="133:35"><call pos:start="133:5" pos:end="133:35"><name pos:start="133:5" pos:end="133:20">NVME_CAP_SET_CQR</name><argument_list pos:start="133:21" pos:end="133:35">(<argument pos:start="133:22" pos:end="133:31"><expr pos:start="133:22" pos:end="133:31"><name pos:start="133:22" pos:end="133:31"><name pos:start="133:22" pos:end="133:22">n</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:27">bar</name><operator pos:start="133:28" pos:end="133:28">.</operator><name pos:start="133:29" pos:end="133:31">cap</name></name></expr></argument>, <argument pos:start="133:34" pos:end="133:34"><expr pos:start="133:34" pos:end="133:34"><literal type="number" pos:start="133:34" pos:end="133:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:36"><expr pos:start="135:5" pos:end="135:35"><call pos:start="135:5" pos:end="135:35"><name pos:start="135:5" pos:end="135:20">NVME_CAP_SET_AMS</name><argument_list pos:start="135:21" pos:end="135:35">(<argument pos:start="135:22" pos:end="135:31"><expr pos:start="135:22" pos:end="135:31"><name pos:start="135:22" pos:end="135:31"><name pos:start="135:22" pos:end="135:22">n</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:27">bar</name><operator pos:start="135:28" pos:end="135:28">.</operator><name pos:start="135:29" pos:end="135:31">cap</name></name></expr></argument>, <argument pos:start="135:34" pos:end="135:34"><expr pos:start="135:34" pos:end="135:34"><literal type="number" pos:start="135:34" pos:end="135:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:37"><expr pos:start="137:5" pos:end="137:36"><call pos:start="137:5" pos:end="137:36"><name pos:start="137:5" pos:end="137:19">NVME_CAP_SET_TO</name><argument_list pos:start="137:20" pos:end="137:36">(<argument pos:start="137:21" pos:end="137:30"><expr pos:start="137:21" pos:end="137:30"><name pos:start="137:21" pos:end="137:30"><name pos:start="137:21" pos:end="137:21">n</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:26">bar</name><operator pos:start="137:27" pos:end="137:27">.</operator><name pos:start="137:28" pos:end="137:30">cap</name></name></expr></argument>, <argument pos:start="137:33" pos:end="137:35"><expr pos:start="137:33" pos:end="137:35"><literal type="number" pos:start="137:33" pos:end="137:35">0xf</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:36"><expr pos:start="139:5" pos:end="139:35"><call pos:start="139:5" pos:end="139:35"><name pos:start="139:5" pos:end="139:20">NVME_CAP_SET_CSS</name><argument_list pos:start="139:21" pos:end="139:35">(<argument pos:start="139:22" pos:end="139:31"><expr pos:start="139:22" pos:end="139:31"><name pos:start="139:22" pos:end="139:31"><name pos:start="139:22" pos:end="139:22">n</name><operator pos:start="139:23" pos:end="139:24">-&gt;</operator><name pos:start="139:25" pos:end="139:27">bar</name><operator pos:start="139:28" pos:end="139:28">.</operator><name pos:start="139:29" pos:end="139:31">cap</name></name></expr></argument>, <argument pos:start="139:34" pos:end="139:34"><expr pos:start="139:34" pos:end="139:34"><literal type="number" pos:start="139:34" pos:end="139:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:27"><expr pos:start="143:5" pos:end="143:26"><name pos:start="143:5" pos:end="143:13"><name pos:start="143:5" pos:end="143:5">n</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:10">bar</name><operator pos:start="143:11" pos:end="143:11">.</operator><name pos:start="143:12" pos:end="143:13">vs</name></name> <operator pos:start="143:15" pos:end="143:15">=</operator> <literal type="number" pos:start="143:17" pos:end="143:26">0x00010001</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:36"><expr pos:start="145:5" pos:end="145:35"><name pos:start="145:5" pos:end="145:16"><name pos:start="145:5" pos:end="145:5">n</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:10">bar</name><operator pos:start="145:11" pos:end="145:11">.</operator><name pos:start="145:12" pos:end="145:16">intmc</name></name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:31"><name pos:start="145:20" pos:end="145:20">n</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:25">bar</name><operator pos:start="145:26" pos:end="145:26">.</operator><name pos:start="145:27" pos:end="145:31">intms</name></name> <operator pos:start="145:33" pos:end="145:33">=</operator> <literal type="number" pos:start="145:35" pos:end="145:35">0</literal></expr>;</expr_stmt>



    <for pos:start="149:5" pos:end="175:5">for <control pos:start="149:9" pos:end="149:43">(<init pos:start="149:10" pos:end="149:15"><expr pos:start="149:10" pos:end="149:14"><name pos:start="149:10" pos:end="149:10">i</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <literal type="number" pos:start="149:14" pos:end="149:14">0</literal></expr>;</init> <condition pos:start="149:17" pos:end="149:38"><expr pos:start="149:17" pos:end="149:37"><name pos:start="149:17" pos:end="149:17">i</name> <operator pos:start="149:19" pos:end="149:19">&lt;</operator> <name pos:start="149:21" pos:end="149:37"><name pos:start="149:21" pos:end="149:21">n</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:37">num_namespaces</name></name></expr>;</condition> <incr pos:start="149:40" pos:end="149:42"><expr pos:start="149:40" pos:end="149:42"><name pos:start="149:40" pos:end="149:40">i</name><operator pos:start="149:41" pos:end="149:42">++</operator></expr></incr>)</control> <block pos:start="149:45" pos:end="175:5">{<block_content pos:start="151:9" pos:end="173:73">

        <decl_stmt pos:start="151:9" pos:end="151:46"><decl pos:start="151:9" pos:end="151:45"><type pos:start="151:9" pos:end="151:23"><name pos:start="151:9" pos:end="151:21">NvmeNamespace</name> <modifier pos:start="151:23" pos:end="151:23">*</modifier></type><name pos:start="151:24" pos:end="151:25">ns</name> <init pos:start="151:27" pos:end="151:45">= <expr pos:start="151:29" pos:end="151:45"><operator pos:start="151:29" pos:end="151:29">&amp;</operator><name pos:start="151:30" pos:end="151:45"><name pos:start="151:30" pos:end="151:30">n</name><operator pos:start="151:31" pos:end="151:32">-&gt;</operator><name pos:start="151:33" pos:end="151:42">namespaces</name><index pos:start="151:43" pos:end="151:45">[<expr pos:start="151:44" pos:end="151:44"><name pos:start="151:44" pos:end="151:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="153:9" pos:end="153:37"><decl pos:start="153:9" pos:end="153:36"><type pos:start="153:9" pos:end="153:18"><name pos:start="153:9" pos:end="153:16">NvmeIdNs</name> <modifier pos:start="153:18" pos:end="153:18">*</modifier></type><name pos:start="153:19" pos:end="153:23">id_ns</name> <init pos:start="153:25" pos:end="153:36">= <expr pos:start="153:27" pos:end="153:36"><operator pos:start="153:27" pos:end="153:27">&amp;</operator><name pos:start="153:28" pos:end="153:36"><name pos:start="153:28" pos:end="153:29">ns</name><operator pos:start="153:30" pos:end="153:31">-&gt;</operator><name pos:start="153:32" pos:end="153:36">id_ns</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:26"><expr pos:start="155:9" pos:end="155:25"><name pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:13">id_ns</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:21">nsfeat</name></name> <operator pos:start="155:23" pos:end="155:23">=</operator> <literal type="number" pos:start="155:25" pos:end="155:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:25"><expr pos:start="157:9" pos:end="157:24"><name pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:13">id_ns</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:20">nlbaf</name></name> <operator pos:start="157:22" pos:end="157:22">=</operator> <literal type="number" pos:start="157:24" pos:end="157:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:25"><expr pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:20"><name pos:start="159:9" pos:end="159:13">id_ns</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:20">flbas</name></name> <operator pos:start="159:22" pos:end="159:22">=</operator> <literal type="number" pos:start="159:24" pos:end="159:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:22"><expr pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:17"><name pos:start="161:9" pos:end="161:13">id_ns</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:17">mc</name></name> <operator pos:start="161:19" pos:end="161:19">=</operator> <literal type="number" pos:start="161:21" pos:end="161:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:23"><expr pos:start="163:9" pos:end="163:22"><name pos:start="163:9" pos:end="163:18"><name pos:start="163:9" pos:end="163:13">id_ns</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:18">dpc</name></name> <operator pos:start="163:20" pos:end="163:20">=</operator> <literal type="number" pos:start="163:22" pos:end="163:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:23"><expr pos:start="165:9" pos:end="165:22"><name pos:start="165:9" pos:end="165:18"><name pos:start="165:9" pos:end="165:13">id_ns</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:18">dps</name></name> <operator pos:start="165:20" pos:end="165:20">=</operator> <literal type="number" pos:start="165:22" pos:end="165:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:45"><expr pos:start="167:9" pos:end="167:44"><name pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:13">id_ns</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:19">lbaf</name><index pos:start="167:20" pos:end="167:22">[<expr pos:start="167:21" pos:end="167:21"><literal type="number" pos:start="167:21" pos:end="167:21">0</literal></expr>]</index></name><operator pos:start="167:23" pos:end="167:23">.</operator><name pos:start="167:24" pos:end="167:25">ds</name> <operator pos:start="167:27" pos:end="167:27">=</operator> <name pos:start="167:29" pos:end="167:44">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="173:73"><expr pos:start="169:9" pos:end="173:72"><name pos:start="169:9" pos:end="169:19"><name pos:start="169:9" pos:end="169:13">id_ns</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:19">ncap</name></name>  <operator pos:start="169:22" pos:end="169:22">=</operator> <name pos:start="169:24" pos:end="169:34"><name pos:start="169:24" pos:end="169:28">id_ns</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:34">nuse</name></name> <operator pos:start="169:36" pos:end="169:36">=</operator> <name pos:start="169:38" pos:end="169:48"><name pos:start="169:38" pos:end="169:42">id_ns</name><operator pos:start="169:43" pos:end="169:44">-&gt;</operator><name pos:start="169:45" pos:end="169:48">nsze</name></name> <operator pos:start="169:50" pos:end="169:50">=</operator>

            <call pos:start="171:13" pos:end="173:72"><name pos:start="171:13" pos:end="171:23">cpu_to_le64</name><argument_list pos:start="171:24" pos:end="173:72">(<argument pos:start="171:25" pos:end="173:71"><expr pos:start="171:25" pos:end="173:71"><name pos:start="171:25" pos:end="171:34"><name pos:start="171:25" pos:end="171:25">n</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:34">ns_size</name></name> <operator pos:start="171:36" pos:end="171:37">&gt;&gt;</operator>

                <name pos:start="173:17" pos:end="173:68"><name pos:start="173:17" pos:end="173:21">id_ns</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:27">lbaf</name><index pos:start="173:28" pos:end="173:68">[<expr pos:start="173:29" pos:end="173:67"><call pos:start="173:29" pos:end="173:67"><name pos:start="173:29" pos:end="173:50">NVME_ID_NS_FLBAS_INDEX</name><argument_list pos:start="173:51" pos:end="173:67">(<argument pos:start="173:52" pos:end="173:66"><expr pos:start="173:52" pos:end="173:66"><name pos:start="173:52" pos:end="173:66"><name pos:start="173:52" pos:end="173:53">ns</name><operator pos:start="173:54" pos:end="173:55">-&gt;</operator><name pos:start="173:56" pos:end="173:60">id_ns</name><operator pos:start="173:61" pos:end="173:61">.</operator><name pos:start="173:62" pos:end="173:66">flbas</name></name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="173:69" pos:end="173:69">.</operator><name pos:start="173:70" pos:end="173:71">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="177:5" pos:end="177:13">return <expr pos:start="177:12" pos:end="177:12"><literal type="number" pos:start="177:12" pos:end="177:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
