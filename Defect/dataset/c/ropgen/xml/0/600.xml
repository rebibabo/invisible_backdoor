<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/600.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">l2x0_priv_write</name><parameter_list pos:start="1:28" pos:end="3:58">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:67"><decl pos:start="1:43" pos:end="1:67"><type pos:start="1:43" pos:end="1:67"><name pos:start="1:43" pos:end="1:60">target_phys_addr_t</name></type> <name pos:start="1:62" pos:end="1:67">offset</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:36">uint64_t</name></type> <name pos:start="3:38" pos:end="3:42">value</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:57"><decl pos:start="3:45" pos:end="3:57"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:52">unsigned</name></type> <name pos:start="3:54" pos:end="3:57">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:5">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">l2x0_state</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:40">= <expr pos:start="7:21" pos:end="7:40"><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:31">l2x0_state</name> <operator pos:start="7:33" pos:end="7:33">*</operator><operator pos:start="7:34" pos:end="7:34">)</operator><name pos:start="7:35" pos:end="7:40">opaque</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:20"><expr pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:10">offset</name> <operator pos:start="9:12" pos:end="9:13">&amp;=</operator> <literal type="number" pos:start="9:15" pos:end="9:19">0xfff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:42">(<expr pos:start="11:9" pos:end="11:41"><name pos:start="11:9" pos:end="11:14">offset</name> <operator pos:start="11:16" pos:end="11:17">&gt;=</operator> <literal type="number" pos:start="11:19" pos:end="11:23">0x730</literal> <operator pos:start="11:25" pos:end="11:26">&amp;&amp;</operator> <name pos:start="11:28" pos:end="11:33">offset</name> <operator pos:start="11:35" pos:end="11:35">&lt;</operator> <literal type="number" pos:start="11:37" pos:end="11:41">0x800</literal></expr>)</condition> <block pos:start="11:44" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <comment type="block" pos:start="13:9" pos:end="13:20">/* ignore */</comment>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="19:5" pos:end="75:5">switch <condition pos:start="19:12" pos:end="19:19">(<expr pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:18">offset</name></expr>)</condition> <block pos:start="19:21" pos:end="75:5">{<block_content pos:start="21:5" pos:end="73:14">

    <case pos:start="21:5" pos:end="21:15">case <expr pos:start="21:10" pos:end="21:14"><literal type="number" pos:start="21:10" pos:end="21:14">0x100</literal></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">ctrl</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:23">value</name> <operator pos:start="23:25" pos:end="23:25">&amp;</operator> <literal type="number" pos:start="23:27" pos:end="23:27">1</literal></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:15">case <expr pos:start="27:10" pos:end="27:14"><literal type="number" pos:start="27:10" pos:end="27:14">0x104</literal></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:19">aux_ctrl</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:27">value</name></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:15">case <expr pos:start="33:10" pos:end="33:14"><literal type="number" pos:start="33:10" pos:end="33:14">0x108</literal></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:19">tag_ctrl</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <name pos:start="35:23" pos:end="35:27">value</name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:15">case <expr pos:start="39:10" pos:end="39:14"><literal type="number" pos:start="39:10" pos:end="39:14">0x10C</literal></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:20">data_ctrl</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:28">value</name></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:15">case <expr pos:start="45:10" pos:end="45:14"><literal type="number" pos:start="45:10" pos:end="45:14">0xC00</literal></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:32"><expr pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:23">filter_start</name></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:31">value</name></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:15">case <expr pos:start="51:10" pos:end="51:14"><literal type="number" pos:start="51:10" pos:end="51:14">0xC04</literal></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:21">filter_end</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:29">value</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:15">case <expr pos:start="57:10" pos:end="57:14"><literal type="number" pos:start="57:10" pos:end="57:14">0xF40</literal></expr>:</case>

        <return pos:start="59:9" pos:end="59:15">return;</return>

    <case pos:start="61:5" pos:end="61:15">case <expr pos:start="61:10" pos:end="61:14"><literal type="number" pos:start="61:10" pos:end="61:14">0xF60</literal></expr>:</case>

        <return pos:start="63:9" pos:end="63:15">return;</return>

    <case pos:start="65:5" pos:end="65:15">case <expr pos:start="65:10" pos:end="65:14"><literal type="number" pos:start="65:10" pos:end="65:14">0xF80</literal></expr>:</case>

        <return pos:start="67:9" pos:end="67:15">return;</return>

    <default pos:start="69:5" pos:end="69:12">default:</default>

        <expr_stmt pos:start="71:9" pos:end="71:73"><expr pos:start="71:9" pos:end="71:72"><call pos:start="71:9" pos:end="71:72"><name pos:start="71:9" pos:end="71:15">fprintf</name><argument_list pos:start="71:16" pos:end="71:72">(<argument pos:start="71:17" pos:end="71:22"><expr pos:start="71:17" pos:end="71:22"><name pos:start="71:17" pos:end="71:22">stderr</name></expr></argument>, <argument pos:start="71:25" pos:end="71:58"><expr pos:start="71:25" pos:end="71:58"><literal type="string" pos:start="71:25" pos:end="71:58">"l2x0_priv_write: Bad offset %x\n"</literal></expr></argument>, <argument pos:start="71:61" pos:end="71:71"><expr pos:start="71:61" pos:end="71:71"><operator pos:start="71:61" pos:end="71:61">(</operator><name pos:start="71:62" pos:end="71:64">int</name><operator pos:start="71:65" pos:end="71:65">)</operator><name pos:start="71:66" pos:end="71:71">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
