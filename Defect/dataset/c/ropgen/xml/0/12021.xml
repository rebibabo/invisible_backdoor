<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12021.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">handle_sigp</name><parameter_list pos:start="1:23" pos:end="1:71">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:30">S390CPU</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">cpu</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:56"><decl pos:start="1:38" pos:end="1:56"><type pos:start="1:38" pos:end="1:56"><name pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:43">struct</name> <name pos:start="1:45" pos:end="1:51">kvm_run</name></name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">run</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:65">uint8_t</name></type> <name pos:start="1:67" pos:end="1:70">ipa1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">CPUS390XState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">env</name> <init pos:start="5:24" pos:end="5:34">= <expr pos:start="5:26" pos:end="5:34"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:34"><name pos:start="5:27" pos:end="5:29">cpu</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:22">order_code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:21">cpu_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">r</name> <init pos:start="11:11" pos:end="11:14">= <expr pos:start="11:13" pos:end="11:14"><operator pos:start="11:13" pos:end="11:13">-</operator><literal type="number" pos:start="11:14" pos:end="11:14">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">S390CPU</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:23">target_cpu</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:25">cpu_synchronize_state</name><argument_list pos:start="17:26" pos:end="17:35">(<argument pos:start="17:27" pos:end="17:34"><expr pos:start="17:27" pos:end="17:34"><call pos:start="17:27" pos:end="17:34"><name pos:start="17:27" pos:end="17:29">CPU</name><argument_list pos:start="17:30" pos:end="17:34">(<argument pos:start="17:31" pos:end="17:33"><expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:33">cpu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:24">/* get order code */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:80"><expr pos:start="23:5" pos:end="23:79"><name pos:start="23:5" pos:end="23:14">order_code</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:61"><name pos:start="23:18" pos:end="23:35">decode_basedisp_rs</name><argument_list pos:start="23:36" pos:end="23:61">(<argument pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><name pos:start="23:37" pos:end="23:39">env</name></expr></argument>, <argument pos:start="23:42" pos:end="23:60"><expr pos:start="23:42" pos:end="23:60"><name pos:start="23:42" pos:end="23:60"><name pos:start="23:42" pos:end="23:44">run</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:56">s390_sieic</name><operator pos:start="23:57" pos:end="23:57">.</operator><name pos:start="23:58" pos:end="23:60">ipb</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:63" pos:end="23:63">&amp;</operator> <name pos:start="23:65" pos:end="23:79">SIGP_ORDER_MASK</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:12">cpu_addr</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:37"><name pos:start="27:16" pos:end="27:18">env</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:24">regs</name><index pos:start="27:25" pos:end="27:37">[<expr pos:start="27:26" pos:end="27:36"><name pos:start="27:26" pos:end="27:29">ipa1</name> <operator pos:start="27:31" pos:end="27:31">&amp;</operator> <literal type="number" pos:start="27:33" pos:end="27:36">0x0f</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:14">target_cpu</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:46"><name pos:start="29:18" pos:end="29:36">s390_cpu_addr2state</name><argument_list pos:start="29:37" pos:end="29:46">(<argument pos:start="29:38" pos:end="29:45"><expr pos:start="29:38" pos:end="29:45"><name pos:start="29:38" pos:end="29:45">cpu_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:27">(<expr pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:18">target_cpu</name> <operator pos:start="31:20" pos:end="31:21">==</operator> <name pos:start="31:23" pos:end="31:26">NULL</name></expr>)</condition> <block pos:start="31:29" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:17">

        <goto pos:start="33:9" pos:end="33:17">goto <name pos:start="33:14" pos:end="33:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="39:5" pos:end="71:5">switch <condition pos:start="39:12" pos:end="39:23">(<expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:22">order_code</name></expr>)</condition> <block pos:start="39:25" pos:end="71:5">{<block_content pos:start="41:5" pos:end="69:14">

    <case pos:start="41:5" pos:end="41:20">case <expr pos:start="41:10" pos:end="41:19"><name pos:start="41:10" pos:end="41:19">SIGP_START</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:43"><expr pos:start="43:9" pos:end="43:42"><name pos:start="43:9" pos:end="43:9">r</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:30">kvm_s390_cpu_start</name><argument_list pos:start="43:31" pos:end="43:42">(<argument pos:start="43:32" pos:end="43:41"><expr pos:start="43:32" pos:end="43:41"><name pos:start="43:32" pos:end="43:41">target_cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:22">case <expr pos:start="47:10" pos:end="47:21"><name pos:start="47:10" pos:end="47:21">SIGP_RESTART</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:45"><expr pos:start="49:9" pos:end="49:44"><name pos:start="49:9" pos:end="49:9">r</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="49:44"><name pos:start="49:13" pos:end="49:32">kvm_s390_cpu_restart</name><argument_list pos:start="49:33" pos:end="49:44">(<argument pos:start="49:34" pos:end="49:43"><expr pos:start="49:34" pos:end="49:43"><name pos:start="49:34" pos:end="49:43">target_cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:23">case <expr pos:start="53:10" pos:end="53:22"><name pos:start="53:10" pos:end="53:22">SIGP_SET_ARCH</name></expr>:</case>

        <comment type="block" pos:start="55:9" pos:end="55:35">/* make the caller panic */</comment>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    <case pos:start="59:5" pos:end="59:32">case <expr pos:start="59:10" pos:end="59:31"><name pos:start="59:10" pos:end="59:31">SIGP_INITIAL_CPU_RESET</name></expr>:</case>

        <expr_stmt pos:start="61:9" pos:end="61:47"><expr pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:9">r</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <call pos:start="61:13" pos:end="61:46"><name pos:start="61:13" pos:end="61:34">s390_cpu_initial_reset</name><argument_list pos:start="61:35" pos:end="61:46">(<argument pos:start="61:36" pos:end="61:45"><expr pos:start="61:36" pos:end="61:45"><name pos:start="61:36" pos:end="61:45">target_cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <default pos:start="65:5" pos:end="65:12">default:</default>

        <expr_stmt pos:start="67:9" pos:end="67:65"><expr pos:start="67:9" pos:end="67:64"><call pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:15">fprintf</name><argument_list pos:start="67:16" pos:end="67:64">(<argument pos:start="67:17" pos:end="67:22"><expr pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:22">stderr</name></expr></argument>, <argument pos:start="67:25" pos:end="67:51"><expr pos:start="67:25" pos:end="67:51"><literal type="string" pos:start="67:25" pos:end="67:51">"KVM: unknown SIGP: 0x%x\n"</literal></expr></argument>, <argument pos:start="67:54" pos:end="67:63"><expr pos:start="67:54" pos:end="67:63"><name pos:start="67:54" pos:end="67:63">order_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    </block_content>}</block></switch>



<label pos:start="75:1" pos:end="75:4"><name pos:start="75:1" pos:end="75:3">out</name>:</label>

    <expr_stmt pos:start="77:5" pos:end="77:26"><expr pos:start="77:5" pos:end="77:25"><call pos:start="77:5" pos:end="77:25"><name pos:start="77:5" pos:end="77:9">setcc</name><argument_list pos:start="77:10" pos:end="77:25">(<argument pos:start="77:11" pos:end="77:13"><expr pos:start="77:11" pos:end="77:13"><name pos:start="77:11" pos:end="77:13">cpu</name></expr></argument>, <argument pos:start="77:16" pos:end="77:24"><expr pos:start="77:16" pos:end="77:24"><ternary pos:start="77:16" pos:end="77:24"><condition pos:start="77:16" pos:end="77:18"><expr pos:start="77:16" pos:end="77:16"><name pos:start="77:16" pos:end="77:16">r</name></expr> ?</condition><then pos:start="77:20" pos:end="77:20"> <expr pos:start="77:20" pos:end="77:20"><literal type="number" pos:start="77:20" pos:end="77:20">3</literal></expr> </then><else pos:start="77:22" pos:end="77:24">: <expr pos:start="77:24" pos:end="77:24"><literal type="number" pos:start="77:24" pos:end="77:24">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
