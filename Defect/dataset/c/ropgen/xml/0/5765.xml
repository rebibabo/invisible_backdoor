<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5765.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">http_read</name><parameter_list pos:start="1:21" pos:end="1:59">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:31">URLContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">h</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:43">uint8_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">buf</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:58"><decl pos:start="1:51" pos:end="1:58"><type pos:start="1:51" pos:end="1:58"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:58">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:24">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">HTTPContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">h</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">size1</name></decl>, <decl pos:start="7:16" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:18">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:9">size1</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <name pos:start="11:13" pos:end="11:16">size</name></expr>;</expr_stmt>

    <while pos:start="13:5" pos:end="49:5">while <condition pos:start="13:11" pos:end="13:20">(<expr pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:15">size</name> <operator pos:start="13:17" pos:end="13:17">&gt;</operator> <literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr>)</condition> <block pos:start="13:22" pos:end="49:5">{<block_content pos:start="17:9" pos:end="47:19">

        <comment type="block" pos:start="15:9" pos:end="15:48">/* read bytes from input buffer first */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:38"><expr pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:11">len</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:24"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:24">buf_end</name></name> <operator pos:start="17:26" pos:end="17:26">-</operator> <name pos:start="17:28" pos:end="17:37"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:37">buf_ptr</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="43:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:20">(<expr pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:15">len</name> <operator pos:start="19:17" pos:end="19:17">&gt;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>)</condition> <block pos:start="19:22" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:30">

            <if_stmt pos:start="21:13" pos:end="23:27"><if pos:start="21:13" pos:end="23:27">if <condition pos:start="21:16" pos:end="21:27">(<expr pos:start="21:17" pos:end="21:26"><name pos:start="21:17" pos:end="21:19">len</name> <operator pos:start="21:21" pos:end="21:21">&gt;</operator> <name pos:start="21:23" pos:end="21:26">size</name></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:27"><block_content pos:start="23:17" pos:end="23:27">

                <expr_stmt pos:start="23:17" pos:end="23:27"><expr pos:start="23:17" pos:end="23:26"><name pos:start="23:17" pos:end="23:19">len</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:26">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:41"><expr pos:start="25:13" pos:end="25:40"><call pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:18">memcpy</name><argument_list pos:start="25:19" pos:end="25:40">(<argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">buf</name></expr></argument>, <argument pos:start="25:25" pos:end="25:34"><expr pos:start="25:25" pos:end="25:34"><name pos:start="25:25" pos:end="25:34"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:34">buf_ptr</name></name></expr></argument>, <argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:39">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:30"><expr pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:22">buf_ptr</name></name> <operator pos:start="27:24" pos:end="27:25">+=</operator> <name pos:start="27:27" pos:end="27:29">len</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="43:9">else <block pos:start="29:16" pos:end="43:9">{<block_content pos:start="31:13" pos:end="41:13">

            <expr_stmt pos:start="31:13" pos:end="31:46"><expr pos:start="31:13" pos:end="31:45"><name pos:start="31:13" pos:end="31:15">len</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:45"><name pos:start="31:19" pos:end="31:26">url_read</name> <argument_list pos:start="31:28" pos:end="31:45">(<argument pos:start="31:29" pos:end="31:33"><expr pos:start="31:29" pos:end="31:33"><name pos:start="31:29" pos:end="31:33"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:33">hd</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:38"><expr pos:start="31:36" pos:end="31:38"><name pos:start="31:36" pos:end="31:38">buf</name></expr></argument>, <argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><name pos:start="31:41" pos:end="31:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="41:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:24">(<expr pos:start="33:17" pos:end="33:23"><name pos:start="33:17" pos:end="33:19">len</name> <operator pos:start="33:21" pos:end="33:21">&lt;</operator> <literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr>)</condition> <block pos:start="33:26" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:27">

                <return pos:start="35:17" pos:end="35:27">return <expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">len</name></expr>;</return>

            </block_content>}</block></if> <if type="elseif" pos:start="37:15" pos:end="41:13">else if <condition pos:start="37:23" pos:end="37:32">(<expr pos:start="37:24" pos:end="37:31"><name pos:start="37:24" pos:end="37:26">len</name> <operator pos:start="37:28" pos:end="37:29">==</operator> <literal type="number" pos:start="37:31" pos:end="37:31">0</literal></expr>)</condition> <block pos:start="37:34" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:22">

                <break pos:start="39:17" pos:end="39:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:20"><expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:12">size</name> <operator pos:start="45:14" pos:end="45:15">-=</operator> <name pos:start="45:17" pos:end="45:19">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:19"><expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:11">buf</name> <operator pos:start="47:13" pos:end="47:14">+=</operator> <name pos:start="47:16" pos:end="47:18">len</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="51:5" pos:end="51:24">return <expr pos:start="51:12" pos:end="51:23"><name pos:start="51:12" pos:end="51:16">size1</name> <operator pos:start="51:18" pos:end="51:18">-</operator> <name pos:start="51:20" pos:end="51:23">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
