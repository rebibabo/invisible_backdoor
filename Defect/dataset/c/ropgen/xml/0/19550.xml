<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19550.c" pos:tabs="8"><function pos:start="1:1" pos:end="269:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:45">avcodec_decode_audio4</name><parameter_list pos:start="1:46" pos:end="7:68">(<parameter pos:start="1:47" pos:end="1:67"><decl pos:start="1:47" pos:end="1:67"><type pos:start="1:47" pos:end="1:67"><name pos:start="1:47" pos:end="1:60">AVCodecContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avctx</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:60"><decl pos:start="3:47" pos:end="3:60"><type pos:start="3:47" pos:end="3:60"><name pos:start="3:47" pos:end="3:53">AVFrame</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">frame</name></decl></parameter>,

                                              <parameter pos:start="5:47" pos:end="5:64"><decl pos:start="5:47" pos:end="5:64"><type pos:start="5:47" pos:end="5:64"><name pos:start="5:47" pos:end="5:49">int</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:64">got_frame_ptr</name></decl></parameter>,

                                              <parameter pos:start="7:47" pos:end="7:67"><decl pos:start="7:47" pos:end="7:67"><type pos:start="7:47" pos:end="7:67"><specifier pos:start="7:47" pos:end="7:51">const</specifier> <name pos:start="7:53" pos:end="7:60">AVPacket</name> <modifier pos:start="7:62" pos:end="7:62">*</modifier></type><name pos:start="7:63" pos:end="7:67">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="269:1">{<block_content pos:start="11:5" pos:end="267:15">

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">AVCodecInternal</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:25">avci</name> <init pos:start="11:27" pos:end="11:43">= <expr pos:start="11:29" pos:end="11:43"><name pos:start="11:29" pos:end="11:43"><name pos:start="11:29" pos:end="11:33">avctx</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:43">internal</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><operator pos:start="17:5" pos:end="17:5">*</operator><name pos:start="17:6" pos:end="17:18">got_frame_ptr</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:36">(<expr pos:start="21:9" pos:end="21:35"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:20"><name pos:start="21:10" pos:end="21:14">avpkt</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:20">data</name></name> <operator pos:start="21:22" pos:end="21:23">&amp;&amp;</operator> <name pos:start="21:25" pos:end="21:35"><name pos:start="21:25" pos:end="21:29">avpkt</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:35">size</name></name></expr>)</condition> <block pos:start="21:38" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:31">

        <expr_stmt pos:start="23:9" pos:end="23:78"><expr pos:start="23:9" pos:end="23:77"><call pos:start="23:9" pos:end="23:77"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:77">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:37" pos:end="23:76"><expr pos:start="23:37" pos:end="23:76"><literal type="string" pos:start="23:37" pos:end="23:76">"invalid packet: NULL data, size != 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="31:31"><if pos:start="29:5" pos:end="31:31">if <condition pos:start="29:8" pos:end="29:22">(<expr pos:start="29:9" pos:end="29:21"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:21"><name pos:start="29:10" pos:end="29:14">avctx</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:21">codec</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:49">(<expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:20">codec</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:26">type</name></name> <operator pos:start="33:28" pos:end="33:29">!=</operator> <name pos:start="33:31" pos:end="33:48">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="33:51" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:31">

        <expr_stmt pos:start="35:9" pos:end="35:70"><expr pos:start="35:9" pos:end="35:69"><call pos:start="35:9" pos:end="35:69"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:69">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:37" pos:end="35:68"><expr pos:start="35:37" pos:end="35:68"><literal type="string" pos:start="35:37" pos:end="35:68">"Invalid media type for audio\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:26"><expr pos:start="43:5" pos:end="43:25"><call pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:18">av_frame_unref</name><argument_list pos:start="43:19" pos:end="43:25">(<argument pos:start="43:20" pos:end="43:24"><expr pos:start="43:20" pos:end="43:24"><name pos:start="43:20" pos:end="43:24">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="263:5"><if pos:start="47:5" pos:end="263:5">if <condition pos:start="47:8" pos:end="47:119">(<expr pos:start="47:9" pos:end="47:118"><operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:35"><name pos:start="47:10" pos:end="47:14">avctx</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:21">codec</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:35">capabilities</name></name> <operator pos:start="47:37" pos:end="47:37">&amp;</operator> <name pos:start="47:39" pos:end="47:53">CODEC_CAP_DELAY</name><operator pos:start="47:54" pos:end="47:54">)</operator> <operator pos:start="47:56" pos:end="47:57">||</operator> <name pos:start="47:59" pos:end="47:69"><name pos:start="47:59" pos:end="47:63">avpkt</name><operator pos:start="47:64" pos:end="47:65">-&gt;</operator><name pos:start="47:66" pos:end="47:69">size</name></name> <operator pos:start="47:71" pos:end="47:72">||</operator> <operator pos:start="47:74" pos:end="47:74">(</operator><name pos:start="47:75" pos:end="47:99"><name pos:start="47:75" pos:end="47:79">avctx</name><operator pos:start="47:80" pos:end="47:81">-&gt;</operator><name pos:start="47:82" pos:end="47:99">active_thread_type</name></name> <operator pos:start="47:101" pos:end="47:101">&amp;</operator> <name pos:start="47:103" pos:end="47:117">FF_THREAD_FRAME</name><operator pos:start="47:118" pos:end="47:118">)</operator></expr>)</condition> <block pos:start="47:121" pos:end="263:5">{<block_content pos:start="49:9" pos:end="261:34">

        <decl_stmt pos:start="49:9" pos:end="49:22"><decl pos:start="49:9" pos:end="49:21"><type pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:15">uint8_t</name> <modifier pos:start="49:17" pos:end="49:17">*</modifier></type><name pos:start="49:18" pos:end="49:21">side</name></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:22"><decl pos:start="51:9" pos:end="51:21"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:21">side_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:37"><decl pos:start="53:9" pos:end="53:36"><type pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:16">uint32_t</name></type> <name pos:start="53:18" pos:end="53:32">discard_padding</name> <init pos:start="53:34" pos:end="53:36">= <expr pos:start="53:36" pos:end="53:36"><literal type="number" pos:start="53:36" pos:end="53:36">0</literal></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:start="55:9" pos:end="55:48">// copy to ensure we do not change avpkt</comment>

        <decl_stmt pos:start="57:9" pos:end="57:30"><decl pos:start="57:9" pos:end="57:29"><type pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:16">AVPacket</name></type> <name pos:start="57:18" pos:end="57:20">tmp</name> <init pos:start="57:22" pos:end="57:29">= <expr pos:start="57:24" pos:end="57:29"><operator pos:start="57:24" pos:end="57:24">*</operator><name pos:start="57:25" pos:end="57:29">avpkt</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:56"><decl pos:start="59:9" pos:end="59:55"><type pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">int</name></type> <name pos:start="59:13" pos:end="59:21">did_split</name> <init pos:start="59:23" pos:end="59:55">= <expr pos:start="59:25" pos:end="59:55"><call pos:start="59:25" pos:end="59:55"><name pos:start="59:25" pos:end="59:49">av_packet_split_side_data</name><argument_list pos:start="59:50" pos:end="59:55">(<argument pos:start="59:51" pos:end="59:54"><expr pos:start="59:51" pos:end="59:54"><operator pos:start="59:51" pos:end="59:51">&amp;</operator><name pos:start="59:52" pos:end="59:54">tmp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:46"><expr pos:start="61:9" pos:end="61:45"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:45"><name pos:start="61:15" pos:end="61:32">apply_param_change</name><argument_list pos:start="61:33" pos:end="61:45">(<argument pos:start="61:34" pos:end="61:38"><expr pos:start="61:34" pos:end="61:38"><name pos:start="61:34" pos:end="61:38">avctx</name></expr></argument>, <argument pos:start="61:41" pos:end="61:44"><expr pos:start="61:41" pos:end="61:44"><operator pos:start="61:41" pos:end="61:41">&amp;</operator><name pos:start="61:42" pos:end="61:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="71:9"><if pos:start="63:9" pos:end="71:9">if <condition pos:start="63:12" pos:end="63:20">(<expr pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:17">&lt;</operator> <literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>)</condition> <block pos:start="63:22" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:26">

            <expr_stmt pos:start="65:13" pos:end="65:79"><expr pos:start="65:13" pos:end="65:78"><call pos:start="65:13" pos:end="65:78"><name pos:start="65:13" pos:end="65:18">av_log</name><argument_list pos:start="65:19" pos:end="65:78">(<argument pos:start="65:20" pos:end="65:24"><expr pos:start="65:20" pos:end="65:24"><name pos:start="65:20" pos:end="65:24">avctx</name></expr></argument>, <argument pos:start="65:27" pos:end="65:38"><expr pos:start="65:27" pos:end="65:38"><name pos:start="65:27" pos:end="65:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:41" pos:end="65:77"><expr pos:start="65:41" pos:end="65:77"><literal type="string" pos:start="65:41" pos:end="65:77">"Error applying parameter changes.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="69:26"><if pos:start="67:13" pos:end="69:26">if <condition pos:start="67:16" pos:end="67:55">(<expr pos:start="67:17" pos:end="67:54"><name pos:start="67:17" pos:end="67:38"><name pos:start="67:17" pos:end="67:21">avctx</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:38">err_recognition</name></name> <operator pos:start="67:40" pos:end="67:40">&amp;</operator> <name pos:start="67:42" pos:end="67:54">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:26"><block_content pos:start="69:17" pos:end="69:26">

                <goto pos:start="69:17" pos:end="69:26">goto <name pos:start="69:22" pos:end="69:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:36"><expr pos:start="75:9" pos:end="75:35"><name pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:13">avctx</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:23">internal</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:28">pkt</name></name> <operator pos:start="75:30" pos:end="75:30">=</operator> <operator pos:start="75:32" pos:end="75:32">&amp;</operator><name pos:start="75:33" pos:end="75:35">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="87:9"><if pos:start="77:9" pos:end="79:76">if <condition pos:start="77:12" pos:end="77:72">(<expr pos:start="77:13" pos:end="77:71"><name pos:start="77:13" pos:end="77:24">HAVE_THREADS</name> <operator pos:start="77:26" pos:end="77:27">&amp;&amp;</operator> <name pos:start="77:29" pos:end="77:53"><name pos:start="77:29" pos:end="77:33">avctx</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:53">active_thread_type</name></name> <operator pos:start="77:55" pos:end="77:55">&amp;</operator> <name pos:start="77:57" pos:end="77:71">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:76"><block_content pos:start="79:13" pos:end="79:76">

            <expr_stmt pos:start="79:13" pos:end="79:76"><expr pos:start="79:13" pos:end="79:75"><name pos:start="79:13" pos:end="79:15">ret</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <call pos:start="79:19" pos:end="79:75"><name pos:start="79:19" pos:end="79:40">ff_thread_decode_frame</name><argument_list pos:start="79:41" pos:end="79:75">(<argument pos:start="79:42" pos:end="79:46"><expr pos:start="79:42" pos:end="79:46"><name pos:start="79:42" pos:end="79:46">avctx</name></expr></argument>, <argument pos:start="79:49" pos:end="79:53"><expr pos:start="79:49" pos:end="79:53"><name pos:start="79:49" pos:end="79:53">frame</name></expr></argument>, <argument pos:start="79:56" pos:end="79:68"><expr pos:start="79:56" pos:end="79:68"><name pos:start="79:56" pos:end="79:68">got_frame_ptr</name></expr></argument>, <argument pos:start="79:71" pos:end="79:74"><expr pos:start="79:71" pos:end="79:74"><operator pos:start="79:71" pos:end="79:71">&amp;</operator><name pos:start="79:72" pos:end="79:74">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="81:9" pos:end="87:9">else <block pos:start="81:14" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:40">

            <expr_stmt pos:start="83:13" pos:end="83:74"><expr pos:start="83:13" pos:end="83:73"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:73"><name pos:start="83:19" pos:end="83:38"><name pos:start="83:19" pos:end="83:23">avctx</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:30">codec</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:38">decode</name></name><argument_list pos:start="83:39" pos:end="83:73">(<argument pos:start="83:40" pos:end="83:44"><expr pos:start="83:40" pos:end="83:44"><name pos:start="83:40" pos:end="83:44">avctx</name></expr></argument>, <argument pos:start="83:47" pos:end="83:51"><expr pos:start="83:47" pos:end="83:51"><name pos:start="83:47" pos:end="83:51">frame</name></expr></argument>, <argument pos:start="83:54" pos:end="83:66"><expr pos:start="83:54" pos:end="83:66"><name pos:start="83:54" pos:end="83:66">got_frame_ptr</name></expr></argument>, <argument pos:start="83:69" pos:end="83:72"><expr pos:start="83:69" pos:end="83:72"><operator pos:start="83:69" pos:end="83:69">&amp;</operator><name pos:start="83:70" pos:end="83:72">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:40"><expr pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:17">frame</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:26">pkt_dts</name></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:39"><name pos:start="85:30" pos:end="85:34">avpkt</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:39">dts</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="89:9" pos:end="119:9"><if pos:start="89:9" pos:end="119:9">if <condition pos:start="89:12" pos:end="89:39">(<expr pos:start="89:13" pos:end="89:38"><name pos:start="89:13" pos:end="89:15">ret</name> <operator pos:start="89:17" pos:end="89:18">&gt;=</operator> <literal type="number" pos:start="89:20" pos:end="89:20">0</literal> <operator pos:start="89:22" pos:end="89:23">&amp;&amp;</operator> <operator pos:start="89:25" pos:end="89:25">*</operator><name pos:start="89:26" pos:end="89:38">got_frame_ptr</name></expr>)</condition> <block pos:start="89:41" pos:end="119:9">{<block_content pos:start="91:13" pos:end="117:56">

            <expr_stmt pos:start="91:13" pos:end="91:54"><expr pos:start="91:13" pos:end="91:53"><call pos:start="91:13" pos:end="91:53"><name pos:start="91:13" pos:end="91:39">add_metadata_from_side_data</name><argument_list pos:start="91:40" pos:end="91:53">(<argument pos:start="91:41" pos:end="91:45"><expr pos:start="91:41" pos:end="91:45"><name pos:start="91:41" pos:end="91:45">avctx</name></expr></argument>, <argument pos:start="91:48" pos:end="91:52"><expr pos:start="91:48" pos:end="91:52"><name pos:start="91:48" pos:end="91:52">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:34"><expr pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:31"><name pos:start="93:13" pos:end="93:17">avctx</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:31">frame_number</name></name><operator pos:start="93:32" pos:end="93:33">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="101:82"><expr pos:start="95:13" pos:end="101:81"><call pos:start="95:13" pos:end="101:81"><name pos:start="95:13" pos:end="95:46">av_frame_set_best_effort_timestamp</name><argument_list pos:start="95:47" pos:end="101:81">(<argument pos:start="95:48" pos:end="95:52"><expr pos:start="95:48" pos:end="95:52"><name pos:start="95:48" pos:end="95:52">frame</name></expr></argument>,

                                               <argument pos:start="97:48" pos:end="101:80"><expr pos:start="97:48" pos:end="101:80"><call pos:start="97:48" pos:end="101:80"><name pos:start="97:48" pos:end="97:64">guess_correct_pts</name><argument_list pos:start="97:65" pos:end="101:80">(<argument pos:start="97:66" pos:end="97:70"><expr pos:start="97:66" pos:end="97:70"><name pos:start="97:66" pos:end="97:70">avctx</name></expr></argument>,

                                                                 <argument pos:start="99:66" pos:end="99:79"><expr pos:start="99:66" pos:end="99:79"><name pos:start="99:66" pos:end="99:79"><name pos:start="99:66" pos:end="99:70">frame</name><operator pos:start="99:71" pos:end="99:72">-&gt;</operator><name pos:start="99:73" pos:end="99:79">pkt_pts</name></name></expr></argument>,

                                                                 <argument pos:start="101:66" pos:end="101:79"><expr pos:start="101:66" pos:end="101:79"><name pos:start="101:66" pos:end="101:79"><name pos:start="101:66" pos:end="101:70">frame</name><operator pos:start="101:71" pos:end="101:72">-&gt;</operator><name pos:start="101:73" pos:end="101:79">pkt_dts</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="105:50"><if pos:start="103:13" pos:end="105:50">if <condition pos:start="103:16" pos:end="103:52">(<expr pos:start="103:17" pos:end="103:51"><name pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:21">frame</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:29">format</name></name> <operator pos:start="103:31" pos:end="103:32">==</operator> <name pos:start="103:34" pos:end="103:51">AV_SAMPLE_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:50"><block_content pos:start="105:17" pos:end="105:50">

                <expr_stmt pos:start="105:17" pos:end="105:50"><expr pos:start="105:17" pos:end="105:49"><name pos:start="105:17" pos:end="105:29"><name pos:start="105:17" pos:end="105:21">frame</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:29">format</name></name> <operator pos:start="105:31" pos:end="105:31">=</operator> <name pos:start="105:33" pos:end="105:49"><name pos:start="105:33" pos:end="105:37">avctx</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:49">sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="107:13" pos:end="109:62"><if pos:start="107:13" pos:end="109:62">if <condition pos:start="107:16" pos:end="107:39">(<expr pos:start="107:17" pos:end="107:38"><operator pos:start="107:17" pos:end="107:17">!</operator><name pos:start="107:18" pos:end="107:38"><name pos:start="107:18" pos:end="107:22">frame</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:38">channel_layout</name></name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:62"><block_content pos:start="109:17" pos:end="109:62">

                <expr_stmt pos:start="109:17" pos:end="109:62"><expr pos:start="109:17" pos:end="109:61"><name pos:start="109:17" pos:end="109:37"><name pos:start="109:17" pos:end="109:21">frame</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:37">channel_layout</name></name> <operator pos:start="109:39" pos:end="109:39">=</operator> <name pos:start="109:41" pos:end="109:61"><name pos:start="109:41" pos:end="109:45">avctx</name><operator pos:start="109:46" pos:end="109:47">-&gt;</operator><name pos:start="109:48" pos:end="109:61">channel_layout</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="111:13" pos:end="113:62"><if pos:start="111:13" pos:end="113:62">if <condition pos:start="111:16" pos:end="111:46">(<expr pos:start="111:17" pos:end="111:45"><operator pos:start="111:17" pos:end="111:17">!</operator><call pos:start="111:18" pos:end="111:45"><name pos:start="111:18" pos:end="111:38">av_frame_get_channels</name><argument_list pos:start="111:39" pos:end="111:45">(<argument pos:start="111:40" pos:end="111:44"><expr pos:start="111:40" pos:end="111:44"><name pos:start="111:40" pos:end="111:44">frame</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:62"><block_content pos:start="113:17" pos:end="113:62">

                <expr_stmt pos:start="113:17" pos:end="113:62"><expr pos:start="113:17" pos:end="113:61"><call pos:start="113:17" pos:end="113:61"><name pos:start="113:17" pos:end="113:37">av_frame_set_channels</name><argument_list pos:start="113:38" pos:end="113:61">(<argument pos:start="113:39" pos:end="113:43"><expr pos:start="113:39" pos:end="113:43"><name pos:start="113:39" pos:end="113:43">frame</name></expr></argument>, <argument pos:start="113:46" pos:end="113:60"><expr pos:start="113:46" pos:end="113:60"><name pos:start="113:46" pos:end="113:60"><name pos:start="113:46" pos:end="113:50">avctx</name><operator pos:start="113:51" pos:end="113:52">-&gt;</operator><name pos:start="113:53" pos:end="113:60">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="115:13" pos:end="117:56"><if pos:start="115:13" pos:end="117:56">if <condition pos:start="115:16" pos:end="115:36">(<expr pos:start="115:17" pos:end="115:35"><operator pos:start="115:17" pos:end="115:17">!</operator><name pos:start="115:18" pos:end="115:35"><name pos:start="115:18" pos:end="115:22">frame</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:35">sample_rate</name></name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:56"><block_content pos:start="117:17" pos:end="117:56">

                <expr_stmt pos:start="117:17" pos:end="117:56"><expr pos:start="117:17" pos:end="117:55"><name pos:start="117:17" pos:end="117:34"><name pos:start="117:17" pos:end="117:21">frame</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:34">sample_rate</name></name> <operator pos:start="117:36" pos:end="117:36">=</operator> <name pos:start="117:38" pos:end="117:55"><name pos:start="117:38" pos:end="117:42">avctx</name><operator pos:start="117:43" pos:end="117:44">-&gt;</operator><name pos:start="117:45" pos:end="117:55">sample_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:98"><expr pos:start="123:9" pos:end="123:97"><name pos:start="123:9" pos:end="123:12">side</name><operator pos:start="123:13" pos:end="123:13">=</operator> <call pos:start="123:15" pos:end="123:97"><name pos:start="123:15" pos:end="123:37">av_packet_get_side_data</name><argument_list pos:start="123:38" pos:end="123:97">(<argument pos:start="123:39" pos:end="123:58"><expr pos:start="123:39" pos:end="123:58"><name pos:start="123:39" pos:end="123:58"><name pos:start="123:39" pos:end="123:43">avctx</name><operator pos:start="123:44" pos:end="123:45">-&gt;</operator><name pos:start="123:46" pos:end="123:53">internal</name><operator pos:start="123:54" pos:end="123:55">-&gt;</operator><name pos:start="123:56" pos:end="123:58">pkt</name></name></expr></argument>, <argument pos:start="123:61" pos:end="123:84"><expr pos:start="123:61" pos:end="123:84"><name pos:start="123:61" pos:end="123:84">AV_PKT_DATA_SKIP_SAMPLES</name></expr></argument>, <argument pos:start="123:87" pos:end="123:96"><expr pos:start="123:87" pos:end="123:96"><operator pos:start="123:87" pos:end="123:87">&amp;</operator><name pos:start="123:88" pos:end="123:96">side_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="135:9"><if pos:start="125:9" pos:end="135:9">if<condition pos:start="125:11" pos:end="125:33">(<expr pos:start="125:12" pos:end="125:32"><name pos:start="125:12" pos:end="125:15">side</name> <operator pos:start="125:17" pos:end="125:18">&amp;&amp;</operator> <name pos:start="125:20" pos:end="125:28">side_size</name><operator pos:start="125:29" pos:end="125:30">&gt;=</operator><literal type="number" pos:start="125:31" pos:end="125:32">10</literal></expr>)</condition> <block pos:start="125:35" pos:end="135:9">{<block_content pos:start="127:13" pos:end="133:48">

            <expr_stmt pos:start="127:13" pos:end="127:58"><expr pos:start="127:13" pos:end="127:57"><name pos:start="127:13" pos:end="127:41"><name pos:start="127:13" pos:end="127:17">avctx</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:27">internal</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:41">skip_samples</name></name> <operator pos:start="127:43" pos:end="127:43">=</operator> <call pos:start="127:45" pos:end="127:57"><name pos:start="127:45" pos:end="127:51">AV_RL32</name><argument_list pos:start="127:52" pos:end="127:57">(<argument pos:start="127:53" pos:end="127:56"><expr pos:start="127:53" pos:end="127:56"><name pos:start="127:53" pos:end="127:56">side</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="131:50"><expr pos:start="129:13" pos:end="131:49"><call pos:start="129:13" pos:end="131:49"><name pos:start="129:13" pos:end="129:18">av_log</name><argument_list pos:start="129:19" pos:end="131:49">(<argument pos:start="129:20" pos:end="129:24"><expr pos:start="129:20" pos:end="129:24"><name pos:start="129:20" pos:end="129:24">avctx</name></expr></argument>, <argument pos:start="129:27" pos:end="129:38"><expr pos:start="129:27" pos:end="129:38"><name pos:start="129:27" pos:end="129:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="129:41" pos:end="129:76"><expr pos:start="129:41" pos:end="129:76"><literal type="string" pos:start="129:41" pos:end="129:76">"skip %d samples due to side data\n"</literal></expr></argument>,

                   <argument pos:start="131:20" pos:end="131:48"><expr pos:start="131:20" pos:end="131:48"><name pos:start="131:20" pos:end="131:48"><name pos:start="131:20" pos:end="131:24">avctx</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:34">internal</name><operator pos:start="131:35" pos:end="131:36">-&gt;</operator><name pos:start="131:37" pos:end="131:48">skip_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:48"><expr pos:start="133:13" pos:end="133:47"><name pos:start="133:13" pos:end="133:27">discard_padding</name> <operator pos:start="133:29" pos:end="133:29">=</operator> <call pos:start="133:31" pos:end="133:47"><name pos:start="133:31" pos:end="133:37">AV_RL32</name><argument_list pos:start="133:38" pos:end="133:47">(<argument pos:start="133:39" pos:end="133:46"><expr pos:start="133:39" pos:end="133:46"><name pos:start="133:39" pos:end="133:42">side</name> <operator pos:start="133:44" pos:end="133:44">+</operator> <literal type="number" pos:start="133:46" pos:end="133:46">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="137:9" pos:end="191:9"><if pos:start="137:9" pos:end="191:9">if <condition pos:start="137:12" pos:end="137:60">(<expr pos:start="137:13" pos:end="137:59"><name pos:start="137:13" pos:end="137:41"><name pos:start="137:13" pos:end="137:17">avctx</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:27">internal</name><operator pos:start="137:28" pos:end="137:29">-&gt;</operator><name pos:start="137:30" pos:end="137:41">skip_samples</name></name> <operator pos:start="137:43" pos:end="137:44">&amp;&amp;</operator> <operator pos:start="137:46" pos:end="137:46">*</operator><name pos:start="137:47" pos:end="137:59">got_frame_ptr</name></expr>)</condition> <block pos:start="137:62" pos:end="191:9">{<block_content pos:start="139:13" pos:end="189:13">

            <if_stmt pos:start="139:13" pos:end="189:13"><if pos:start="139:13" pos:end="149:13">if<condition pos:start="139:15" pos:end="139:66">(<expr pos:start="139:16" pos:end="139:65"><name pos:start="139:16" pos:end="139:32"><name pos:start="139:16" pos:end="139:20">frame</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:32">nb_samples</name></name> <operator pos:start="139:34" pos:end="139:35">&lt;=</operator> <name pos:start="139:37" pos:end="139:65"><name pos:start="139:37" pos:end="139:41">avctx</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:51">internal</name><operator pos:start="139:52" pos:end="139:53">-&gt;</operator><name pos:start="139:54" pos:end="139:65">skip_samples</name></name></expr>)</condition><block pos:start="139:67" pos:end="149:13">{<block_content pos:start="141:17" pos:end="147:54">

                <expr_stmt pos:start="141:17" pos:end="141:35"><expr pos:start="141:17" pos:end="141:34"><operator pos:start="141:17" pos:end="141:17">*</operator><name pos:start="141:18" pos:end="141:30">got_frame_ptr</name> <operator pos:start="141:32" pos:end="141:32">=</operator> <literal type="number" pos:start="141:34" pos:end="141:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:67"><expr pos:start="143:17" pos:end="143:66"><name pos:start="143:17" pos:end="143:45"><name pos:start="143:17" pos:end="143:21">avctx</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:31">internal</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:45">skip_samples</name></name> <operator pos:start="143:47" pos:end="143:48">-=</operator> <name pos:start="143:50" pos:end="143:66"><name pos:start="143:50" pos:end="143:54">frame</name><operator pos:start="143:55" pos:end="143:56">-&gt;</operator><name pos:start="143:57" pos:end="143:66">nb_samples</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="147:54"><expr pos:start="145:17" pos:end="147:53"><call pos:start="145:17" pos:end="147:53"><name pos:start="145:17" pos:end="145:22">av_log</name><argument_list pos:start="145:23" pos:end="147:53">(<argument pos:start="145:24" pos:end="145:28"><expr pos:start="145:24" pos:end="145:28"><name pos:start="145:24" pos:end="145:28">avctx</name></expr></argument>, <argument pos:start="145:31" pos:end="145:42"><expr pos:start="145:31" pos:end="145:42"><name pos:start="145:31" pos:end="145:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="145:45" pos:end="145:79"><expr pos:start="145:45" pos:end="145:79"><literal type="string" pos:start="145:45" pos:end="145:79">"skip whole frame, skip left: %d\n"</literal></expr></argument>,

                       <argument pos:start="147:24" pos:end="147:52"><expr pos:start="147:24" pos:end="147:52"><name pos:start="147:24" pos:end="147:52"><name pos:start="147:24" pos:end="147:28">avctx</name><operator pos:start="147:29" pos:end="147:30">-&gt;</operator><name pos:start="147:31" pos:end="147:38">internal</name><operator pos:start="147:39" pos:end="147:40">-&gt;</operator><name pos:start="147:41" pos:end="147:52">skip_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="149:15" pos:end="189:13">else <block pos:start="149:20" pos:end="189:13">{<block_content pos:start="151:17" pos:end="187:50">

                <expr_stmt pos:start="151:17" pos:end="153:115"><expr pos:start="151:17" pos:end="153:114"><call pos:start="151:17" pos:end="153:114"><name pos:start="151:17" pos:end="151:31">av_samples_copy</name><argument_list pos:start="151:32" pos:end="153:114">(<argument pos:start="151:33" pos:end="151:52"><expr pos:start="151:33" pos:end="151:52"><name pos:start="151:33" pos:end="151:52"><name pos:start="151:33" pos:end="151:37">frame</name><operator pos:start="151:38" pos:end="151:39">-&gt;</operator><name pos:start="151:40" pos:end="151:52">extended_data</name></name></expr></argument>, <argument pos:start="151:55" pos:end="151:74"><expr pos:start="151:55" pos:end="151:74"><name pos:start="151:55" pos:end="151:74"><name pos:start="151:55" pos:end="151:59">frame</name><operator pos:start="151:60" pos:end="151:61">-&gt;</operator><name pos:start="151:62" pos:end="151:74">extended_data</name></name></expr></argument>, <argument pos:start="151:77" pos:end="151:77"><expr pos:start="151:77" pos:end="151:77"><literal type="number" pos:start="151:77" pos:end="151:77">0</literal></expr></argument>, <argument pos:start="151:80" pos:end="151:108"><expr pos:start="151:80" pos:end="151:108"><name pos:start="151:80" pos:end="151:108"><name pos:start="151:80" pos:end="151:84">avctx</name><operator pos:start="151:85" pos:end="151:86">-&gt;</operator><name pos:start="151:87" pos:end="151:94">internal</name><operator pos:start="151:95" pos:end="151:96">-&gt;</operator><name pos:start="151:97" pos:end="151:108">skip_samples</name></name></expr></argument>,

                                <argument pos:start="153:33" pos:end="153:81"><expr pos:start="153:33" pos:end="153:81"><name pos:start="153:33" pos:end="153:49"><name pos:start="153:33" pos:end="153:37">frame</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:49">nb_samples</name></name> <operator pos:start="153:51" pos:end="153:51">-</operator> <name pos:start="153:53" pos:end="153:81"><name pos:start="153:53" pos:end="153:57">avctx</name><operator pos:start="153:58" pos:end="153:59">-&gt;</operator><name pos:start="153:60" pos:end="153:67">internal</name><operator pos:start="153:68" pos:end="153:69">-&gt;</operator><name pos:start="153:70" pos:end="153:81">skip_samples</name></name></expr></argument>, <argument pos:start="153:84" pos:end="153:98"><expr pos:start="153:84" pos:end="153:98"><name pos:start="153:84" pos:end="153:98"><name pos:start="153:84" pos:end="153:88">avctx</name><operator pos:start="153:89" pos:end="153:90">-&gt;</operator><name pos:start="153:91" pos:end="153:98">channels</name></name></expr></argument>, <argument pos:start="153:101" pos:end="153:113"><expr pos:start="153:101" pos:end="153:113"><name pos:start="153:101" pos:end="153:113"><name pos:start="153:101" pos:end="153:105">frame</name><operator pos:start="153:106" pos:end="153:107">-&gt;</operator><name pos:start="153:108" pos:end="153:113">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="155:17" pos:end="179:17"><if pos:start="155:17" pos:end="175:17">if<condition pos:start="155:19" pos:end="155:65">(<expr pos:start="155:20" pos:end="155:64"><name pos:start="155:20" pos:end="155:42"><name pos:start="155:20" pos:end="155:24">avctx</name><operator pos:start="155:25" pos:end="155:26">-&gt;</operator><name pos:start="155:27" pos:end="155:38">pkt_timebase</name><operator pos:start="155:39" pos:end="155:39">.</operator><name pos:start="155:40" pos:end="155:42">num</name></name> <operator pos:start="155:44" pos:end="155:45">&amp;&amp;</operator> <name pos:start="155:47" pos:end="155:64"><name pos:start="155:47" pos:end="155:51">avctx</name><operator pos:start="155:52" pos:end="155:53">-&gt;</operator><name pos:start="155:54" pos:end="155:64">sample_rate</name></name></expr>)</condition> <block pos:start="155:67" pos:end="175:17">{<block_content pos:start="157:21" pos:end="173:101">

                    <decl_stmt pos:start="157:21" pos:end="161:72"><decl pos:start="157:21" pos:end="161:71"><type pos:start="157:21" pos:end="157:27"><name pos:start="157:21" pos:end="157:27">int64_t</name></type> <name pos:start="157:29" pos:end="157:35">diff_ts</name> <init pos:start="157:37" pos:end="161:71">= <macro pos:start="157:39" pos:end="161:71"><name pos:start="157:39" pos:end="157:50">av_rescale_q</name><argument_list pos:start="157:51" pos:end="161:71">(<argument pos:start="157:52" pos:end="157:80">avctx-&gt;internal-&gt;skip_samples</argument>,

                                                   <argument pos:start="159:52" pos:end="159:65">(AVRational){<literal type="number" pos:start="159:65" pos:end="159:65">1</literal></argument>, <argument pos:start="159:68" pos:end="159:86">avctx-&gt;sample_rate}</argument>,

                                                   <argument pos:start="161:52" pos:end="161:70">avctx-&gt;pkt_timebase</argument>)</argument_list></macro></init></decl>;</decl_stmt>

                    <if_stmt pos:start="163:21" pos:end="165:50"><if pos:start="163:21" pos:end="165:50">if<condition pos:start="163:23" pos:end="163:54">(<expr pos:start="163:24" pos:end="163:53"><name pos:start="163:24" pos:end="163:37"><name pos:start="163:24" pos:end="163:28">frame</name><operator pos:start="163:29" pos:end="163:30">-&gt;</operator><name pos:start="163:31" pos:end="163:37">pkt_pts</name></name><operator pos:start="163:38" pos:end="163:39">!=</operator><name pos:start="163:40" pos:end="163:53">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="165:25" pos:end="165:50"><block_content pos:start="165:25" pos:end="165:50">

                        <expr_stmt pos:start="165:25" pos:end="165:50"><expr pos:start="165:25" pos:end="165:49"><name pos:start="165:25" pos:end="165:38"><name pos:start="165:25" pos:end="165:29">frame</name><operator pos:start="165:30" pos:end="165:31">-&gt;</operator><name pos:start="165:32" pos:end="165:38">pkt_pts</name></name> <operator pos:start="165:40" pos:end="165:41">+=</operator> <name pos:start="165:43" pos:end="165:49">diff_ts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="167:21" pos:end="169:50"><if pos:start="167:21" pos:end="169:50">if<condition pos:start="167:23" pos:end="167:54">(<expr pos:start="167:24" pos:end="167:53"><name pos:start="167:24" pos:end="167:37"><name pos:start="167:24" pos:end="167:28">frame</name><operator pos:start="167:29" pos:end="167:30">-&gt;</operator><name pos:start="167:31" pos:end="167:37">pkt_dts</name></name><operator pos:start="167:38" pos:end="167:39">!=</operator><name pos:start="167:40" pos:end="167:53">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="169:25" pos:end="169:50"><block_content pos:start="169:25" pos:end="169:50">

                        <expr_stmt pos:start="169:25" pos:end="169:50"><expr pos:start="169:25" pos:end="169:49"><name pos:start="169:25" pos:end="169:38"><name pos:start="169:25" pos:end="169:29">frame</name><operator pos:start="169:30" pos:end="169:31">-&gt;</operator><name pos:start="169:32" pos:end="169:38">pkt_dts</name></name> <operator pos:start="169:40" pos:end="169:41">+=</operator> <name pos:start="169:43" pos:end="169:49">diff_ts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="171:21" pos:end="173:101"><if pos:start="171:21" pos:end="173:101">if <condition pos:start="171:24" pos:end="171:68">(<expr pos:start="171:25" pos:end="171:67"><call pos:start="171:25" pos:end="171:56"><name pos:start="171:25" pos:end="171:49">av_frame_get_pkt_duration</name><argument_list pos:start="171:50" pos:end="171:56">(<argument pos:start="171:51" pos:end="171:55"><expr pos:start="171:51" pos:end="171:55"><name pos:start="171:51" pos:end="171:55">frame</name></expr></argument>)</argument_list></call> <operator pos:start="171:58" pos:end="171:59">&gt;=</operator> <name pos:start="171:61" pos:end="171:67">diff_ts</name></expr>)</condition><block type="pseudo" pos:start="173:25" pos:end="173:101"><block_content pos:start="173:25" pos:end="173:101">

                        <expr_stmt pos:start="173:25" pos:end="173:101"><expr pos:start="173:25" pos:end="173:100"><call pos:start="173:25" pos:end="173:100"><name pos:start="173:25" pos:end="173:49">av_frame_set_pkt_duration</name><argument_list pos:start="173:50" pos:end="173:100">(<argument pos:start="173:51" pos:end="173:55"><expr pos:start="173:51" pos:end="173:55"><name pos:start="173:51" pos:end="173:55">frame</name></expr></argument>, <argument pos:start="173:58" pos:end="173:99"><expr pos:start="173:58" pos:end="173:99"><call pos:start="173:58" pos:end="173:89"><name pos:start="173:58" pos:end="173:82">av_frame_get_pkt_duration</name><argument_list pos:start="173:83" pos:end="173:89">(<argument pos:start="173:84" pos:end="173:88"><expr pos:start="173:84" pos:end="173:88"><name pos:start="173:84" pos:end="173:88">frame</name></expr></argument>)</argument_list></call> <operator pos:start="173:91" pos:end="173:91">-</operator> <name pos:start="173:93" pos:end="173:99">diff_ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="175:19" pos:end="179:17">else <block pos:start="175:24" pos:end="179:17">{<block_content pos:start="177:21" pos:end="177:104">

                    <expr_stmt pos:start="177:21" pos:end="177:104"><expr pos:start="177:21" pos:end="177:103"><call pos:start="177:21" pos:end="177:103"><name pos:start="177:21" pos:end="177:26">av_log</name><argument_list pos:start="177:27" pos:end="177:103">(<argument pos:start="177:28" pos:end="177:32"><expr pos:start="177:28" pos:end="177:32"><name pos:start="177:28" pos:end="177:32">avctx</name></expr></argument>, <argument pos:start="177:35" pos:end="177:48"><expr pos:start="177:35" pos:end="177:48"><name pos:start="177:35" pos:end="177:48">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="177:51" pos:end="177:102"><expr pos:start="177:51" pos:end="177:102"><literal type="string" pos:start="177:51" pos:end="177:102">"Could not update timestamps for skipped samples.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="181:17" pos:end="183:73"><expr pos:start="181:17" pos:end="183:72"><call pos:start="181:17" pos:end="183:72"><name pos:start="181:17" pos:end="181:22">av_log</name><argument_list pos:start="181:23" pos:end="183:72">(<argument pos:start="181:24" pos:end="181:28"><expr pos:start="181:24" pos:end="181:28"><name pos:start="181:24" pos:end="181:28">avctx</name></expr></argument>, <argument pos:start="181:31" pos:end="181:42"><expr pos:start="181:31" pos:end="181:42"><name pos:start="181:31" pos:end="181:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="181:45" pos:end="181:66"><expr pos:start="181:45" pos:end="181:66"><literal type="string" pos:start="181:45" pos:end="181:66">"skip %d/%d samples\n"</literal></expr></argument>,

                       <argument pos:start="183:24" pos:end="183:52"><expr pos:start="183:24" pos:end="183:52"><name pos:start="183:24" pos:end="183:52"><name pos:start="183:24" pos:end="183:28">avctx</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:38">internal</name><operator pos:start="183:39" pos:end="183:40">-&gt;</operator><name pos:start="183:41" pos:end="183:52">skip_samples</name></name></expr></argument>, <argument pos:start="183:55" pos:end="183:71"><expr pos:start="183:55" pos:end="183:71"><name pos:start="183:55" pos:end="183:71"><name pos:start="183:55" pos:end="183:59">frame</name><operator pos:start="183:60" pos:end="183:61">-&gt;</operator><name pos:start="183:62" pos:end="183:71">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:67"><expr pos:start="185:17" pos:end="185:66"><name pos:start="185:17" pos:end="185:33"><name pos:start="185:17" pos:end="185:21">frame</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:33">nb_samples</name></name> <operator pos:start="185:35" pos:end="185:36">-=</operator> <name pos:start="185:38" pos:end="185:66"><name pos:start="185:38" pos:end="185:42">avctx</name><operator pos:start="185:43" pos:end="185:44">-&gt;</operator><name pos:start="185:45" pos:end="185:52">internal</name><operator pos:start="185:53" pos:end="185:54">-&gt;</operator><name pos:start="185:55" pos:end="185:66">skip_samples</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:50"><expr pos:start="187:17" pos:end="187:49"><name pos:start="187:17" pos:end="187:45"><name pos:start="187:17" pos:end="187:21">avctx</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:31">internal</name><operator pos:start="187:32" pos:end="187:33">-&gt;</operator><name pos:start="187:34" pos:end="187:45">skip_samples</name></name> <operator pos:start="187:47" pos:end="187:47">=</operator> <literal type="number" pos:start="187:49" pos:end="187:49">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="195:9" pos:end="229:9"><if pos:start="195:9" pos:end="229:9">if <condition pos:start="195:12" pos:end="195:90">(<expr pos:start="195:13" pos:end="195:89"><name pos:start="195:13" pos:end="195:27">discard_padding</name> <operator pos:start="195:29" pos:end="195:29">&gt;</operator> <literal type="number" pos:start="195:31" pos:end="195:31">0</literal> <operator pos:start="195:33" pos:end="195:34">&amp;&amp;</operator> <name pos:start="195:36" pos:end="195:50">discard_padding</name> <operator pos:start="195:52" pos:end="195:53">&lt;=</operator> <name pos:start="195:55" pos:end="195:71"><name pos:start="195:55" pos:end="195:59">frame</name><operator pos:start="195:60" pos:end="195:61">-&gt;</operator><name pos:start="195:62" pos:end="195:71">nb_samples</name></name> <operator pos:start="195:73" pos:end="195:74">&amp;&amp;</operator> <operator pos:start="195:76" pos:end="195:76">*</operator><name pos:start="195:77" pos:end="195:89">got_frame_ptr</name></expr>)</condition> <block pos:start="195:92" pos:end="229:9">{<block_content pos:start="197:13" pos:end="227:13">

            <if_stmt pos:start="197:13" pos:end="227:13"><if pos:start="197:13" pos:end="201:13">if <condition pos:start="197:16" pos:end="197:53">(<expr pos:start="197:17" pos:end="197:52"><name pos:start="197:17" pos:end="197:31">discard_padding</name> <operator pos:start="197:33" pos:end="197:34">==</operator> <name pos:start="197:36" pos:end="197:52"><name pos:start="197:36" pos:end="197:40">frame</name><operator pos:start="197:41" pos:end="197:42">-&gt;</operator><name pos:start="197:43" pos:end="197:52">nb_samples</name></name></expr>)</condition> <block pos:start="197:55" pos:end="201:13">{<block_content pos:start="199:17" pos:end="199:35">

                <expr_stmt pos:start="199:17" pos:end="199:35"><expr pos:start="199:17" pos:end="199:34"><operator pos:start="199:17" pos:end="199:17">*</operator><name pos:start="199:18" pos:end="199:30">got_frame_ptr</name> <operator pos:start="199:32" pos:end="199:32">=</operator> <literal type="number" pos:start="199:34" pos:end="199:34">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="201:15" pos:end="227:13">else <block pos:start="201:20" pos:end="227:13">{<block_content pos:start="203:17" pos:end="225:53">

                <if_stmt pos:start="203:17" pos:end="219:17"><if pos:start="203:17" pos:end="215:17">if<condition pos:start="203:19" pos:end="203:65">(<expr pos:start="203:20" pos:end="203:64"><name pos:start="203:20" pos:end="203:42"><name pos:start="203:20" pos:end="203:24">avctx</name><operator pos:start="203:25" pos:end="203:26">-&gt;</operator><name pos:start="203:27" pos:end="203:38">pkt_timebase</name><operator pos:start="203:39" pos:end="203:39">.</operator><name pos:start="203:40" pos:end="203:42">num</name></name> <operator pos:start="203:44" pos:end="203:45">&amp;&amp;</operator> <name pos:start="203:47" pos:end="203:64"><name pos:start="203:47" pos:end="203:51">avctx</name><operator pos:start="203:52" pos:end="203:53">-&gt;</operator><name pos:start="203:54" pos:end="203:64">sample_rate</name></name></expr>)</condition> <block pos:start="203:67" pos:end="215:17">{<block_content pos:start="205:21" pos:end="213:101">

                    <decl_stmt pos:start="205:21" pos:end="209:72"><decl pos:start="205:21" pos:end="209:71"><type pos:start="205:21" pos:end="205:27"><name pos:start="205:21" pos:end="205:27">int64_t</name></type> <name pos:start="205:29" pos:end="205:35">diff_ts</name> <init pos:start="205:37" pos:end="209:71">= <macro pos:start="205:39" pos:end="209:71"><name pos:start="205:39" pos:end="205:50">av_rescale_q</name><argument_list pos:start="205:51" pos:end="209:71">(<argument pos:start="205:52" pos:end="205:86">frame-&gt;nb_samples - discard_padding</argument>,

                                                   <argument pos:start="207:52" pos:end="207:65">(AVRational){<literal type="number" pos:start="207:65" pos:end="207:65">1</literal></argument>, <argument pos:start="207:68" pos:end="207:86">avctx-&gt;sample_rate}</argument>,

                                                   <argument pos:start="209:52" pos:end="209:70">avctx-&gt;pkt_timebase</argument>)</argument_list></macro></init></decl>;</decl_stmt>

                    <if_stmt pos:start="211:21" pos:end="213:101"><if pos:start="211:21" pos:end="213:101">if <condition pos:start="211:24" pos:end="211:68">(<expr pos:start="211:25" pos:end="211:67"><call pos:start="211:25" pos:end="211:56"><name pos:start="211:25" pos:end="211:49">av_frame_get_pkt_duration</name><argument_list pos:start="211:50" pos:end="211:56">(<argument pos:start="211:51" pos:end="211:55"><expr pos:start="211:51" pos:end="211:55"><name pos:start="211:51" pos:end="211:55">frame</name></expr></argument>)</argument_list></call> <operator pos:start="211:58" pos:end="211:59">&gt;=</operator> <name pos:start="211:61" pos:end="211:67">diff_ts</name></expr>)</condition><block type="pseudo" pos:start="213:25" pos:end="213:101"><block_content pos:start="213:25" pos:end="213:101">

                        <expr_stmt pos:start="213:25" pos:end="213:101"><expr pos:start="213:25" pos:end="213:100"><call pos:start="213:25" pos:end="213:100"><name pos:start="213:25" pos:end="213:49">av_frame_set_pkt_duration</name><argument_list pos:start="213:50" pos:end="213:100">(<argument pos:start="213:51" pos:end="213:55"><expr pos:start="213:51" pos:end="213:55"><name pos:start="213:51" pos:end="213:55">frame</name></expr></argument>, <argument pos:start="213:58" pos:end="213:99"><expr pos:start="213:58" pos:end="213:99"><call pos:start="213:58" pos:end="213:89"><name pos:start="213:58" pos:end="213:82">av_frame_get_pkt_duration</name><argument_list pos:start="213:83" pos:end="213:89">(<argument pos:start="213:84" pos:end="213:88"><expr pos:start="213:84" pos:end="213:88"><name pos:start="213:84" pos:end="213:88">frame</name></expr></argument>)</argument_list></call> <operator pos:start="213:91" pos:end="213:91">-</operator> <name pos:start="213:93" pos:end="213:99">diff_ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="215:19" pos:end="219:17">else <block pos:start="215:24" pos:end="219:17">{<block_content pos:start="217:21" pos:end="217:106">

                    <expr_stmt pos:start="217:21" pos:end="217:106"><expr pos:start="217:21" pos:end="217:105"><call pos:start="217:21" pos:end="217:105"><name pos:start="217:21" pos:end="217:26">av_log</name><argument_list pos:start="217:27" pos:end="217:105">(<argument pos:start="217:28" pos:end="217:32"><expr pos:start="217:28" pos:end="217:32"><name pos:start="217:28" pos:end="217:32">avctx</name></expr></argument>, <argument pos:start="217:35" pos:end="217:48"><expr pos:start="217:35" pos:end="217:48"><name pos:start="217:35" pos:end="217:48">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="217:51" pos:end="217:104"><expr pos:start="217:51" pos:end="217:104"><literal type="string" pos:start="217:51" pos:end="217:104">"Could not update timestamps for discarded samples.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="221:17" pos:end="223:59"><expr pos:start="221:17" pos:end="223:58"><call pos:start="221:17" pos:end="223:58"><name pos:start="221:17" pos:end="221:22">av_log</name><argument_list pos:start="221:23" pos:end="223:58">(<argument pos:start="221:24" pos:end="221:28"><expr pos:start="221:24" pos:end="221:28"><name pos:start="221:24" pos:end="221:28">avctx</name></expr></argument>, <argument pos:start="221:31" pos:end="221:42"><expr pos:start="221:31" pos:end="221:42"><name pos:start="221:31" pos:end="221:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="221:45" pos:end="221:69"><expr pos:start="221:45" pos:end="221:69"><literal type="string" pos:start="221:45" pos:end="221:69">"discard %d/%d samples\n"</literal></expr></argument>,

                       <argument pos:start="223:24" pos:end="223:38"><expr pos:start="223:24" pos:end="223:38"><name pos:start="223:24" pos:end="223:38">discard_padding</name></expr></argument>, <argument pos:start="223:41" pos:end="223:57"><expr pos:start="223:41" pos:end="223:57"><name pos:start="223:41" pos:end="223:57"><name pos:start="223:41" pos:end="223:45">frame</name><operator pos:start="223:46" pos:end="223:47">-&gt;</operator><name pos:start="223:48" pos:end="223:57">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:53"><expr pos:start="225:17" pos:end="225:52"><name pos:start="225:17" pos:end="225:33"><name pos:start="225:17" pos:end="225:21">frame</name><operator pos:start="225:22" pos:end="225:23">-&gt;</operator><name pos:start="225:24" pos:end="225:33">nb_samples</name></name> <operator pos:start="225:35" pos:end="225:36">-=</operator> <name pos:start="225:38" pos:end="225:52">discard_padding</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

<label pos:start="231:1" pos:end="231:5"><name pos:start="231:1" pos:end="231:4">fail</name>:</label>

        <expr_stmt pos:start="233:9" pos:end="233:36"><expr pos:start="233:9" pos:end="233:35"><name pos:start="233:9" pos:end="233:28"><name pos:start="233:9" pos:end="233:13">avctx</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:23">internal</name><operator pos:start="233:24" pos:end="233:25">-&gt;</operator><name pos:start="233:26" pos:end="233:28">pkt</name></name> <operator pos:start="233:30" pos:end="233:30">=</operator> <name pos:start="233:32" pos:end="233:35">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="235:9" pos:end="243:9"><if pos:start="235:9" pos:end="243:9">if <condition pos:start="235:12" pos:end="235:22">(<expr pos:start="235:13" pos:end="235:21"><name pos:start="235:13" pos:end="235:21">did_split</name></expr>)</condition> <block pos:start="235:24" pos:end="243:9">{<block_content pos:start="237:13" pos:end="241:34">

            <expr_stmt pos:start="237:13" pos:end="237:43"><expr pos:start="237:13" pos:end="237:42"><call pos:start="237:13" pos:end="237:42"><name pos:start="237:13" pos:end="237:36">av_packet_free_side_data</name><argument_list pos:start="237:37" pos:end="237:42">(<argument pos:start="237:38" pos:end="237:41"><expr pos:start="237:38" pos:end="237:41"><operator pos:start="237:38" pos:end="237:38">&amp;</operator><name pos:start="237:39" pos:end="237:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="239:13" pos:end="241:34"><if pos:start="239:13" pos:end="241:34">if<condition pos:start="239:15" pos:end="239:31">(<expr pos:start="239:16" pos:end="239:30"><name pos:start="239:16" pos:end="239:18">ret</name> <operator pos:start="239:20" pos:end="239:21">==</operator> <name pos:start="239:23" pos:end="239:30"><name pos:start="239:23" pos:end="239:25">tmp</name><operator pos:start="239:26" pos:end="239:26">.</operator><name pos:start="239:27" pos:end="239:30">size</name></name></expr>)</condition><block type="pseudo" pos:start="241:17" pos:end="241:34"><block_content pos:start="241:17" pos:end="241:34">

                <expr_stmt pos:start="241:17" pos:end="241:34"><expr pos:start="241:17" pos:end="241:33"><name pos:start="241:17" pos:end="241:19">ret</name> <operator pos:start="241:21" pos:end="241:21">=</operator> <name pos:start="241:23" pos:end="241:33"><name pos:start="241:23" pos:end="241:27">avpkt</name><operator pos:start="241:28" pos:end="241:29">-&gt;</operator><name pos:start="241:30" pos:end="241:33">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="247:9" pos:end="261:34"><if pos:start="247:9" pos:end="259:9">if <condition pos:start="247:12" pos:end="247:39">(<expr pos:start="247:13" pos:end="247:38"><name pos:start="247:13" pos:end="247:15">ret</name> <operator pos:start="247:17" pos:end="247:18">&gt;=</operator> <literal type="number" pos:start="247:20" pos:end="247:20">0</literal> <operator pos:start="247:22" pos:end="247:23">&amp;&amp;</operator> <operator pos:start="247:25" pos:end="247:25">*</operator><name pos:start="247:26" pos:end="247:38">got_frame_ptr</name></expr>)</condition> <block pos:start="247:41" pos:end="259:9">{<block_content pos:start="249:13" pos:end="257:13">

            <if_stmt pos:start="249:13" pos:end="257:13"><if pos:start="249:13" pos:end="257:13">if <condition pos:start="249:16" pos:end="249:42">(<expr pos:start="249:17" pos:end="249:41"><operator pos:start="249:17" pos:end="249:17">!</operator><name pos:start="249:18" pos:end="249:41"><name pos:start="249:18" pos:end="249:22">avctx</name><operator pos:start="249:23" pos:end="249:24">-&gt;</operator><name pos:start="249:25" pos:end="249:41">refcounted_frames</name></name></expr>)</condition> <block pos:start="249:44" pos:end="257:13">{<block_content pos:start="251:17" pos:end="255:31">

                <decl_stmt pos:start="251:17" pos:end="251:56"><decl pos:start="251:17" pos:end="251:55"><type pos:start="251:17" pos:end="251:19"><name pos:start="251:17" pos:end="251:19">int</name></type> <name pos:start="251:21" pos:end="251:23">err</name> <init pos:start="251:25" pos:end="251:55">= <expr pos:start="251:27" pos:end="251:55"><call pos:start="251:27" pos:end="251:55"><name pos:start="251:27" pos:end="251:42">unrefcount_frame</name><argument_list pos:start="251:43" pos:end="251:55">(<argument pos:start="251:44" pos:end="251:47"><expr pos:start="251:44" pos:end="251:47"><name pos:start="251:44" pos:end="251:47">avci</name></expr></argument>, <argument pos:start="251:50" pos:end="251:54"><expr pos:start="251:50" pos:end="251:54"><name pos:start="251:50" pos:end="251:54">frame</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="253:17" pos:end="255:31"><if pos:start="253:17" pos:end="255:31">if <condition pos:start="253:20" pos:end="253:28">(<expr pos:start="253:21" pos:end="253:27"><name pos:start="253:21" pos:end="253:23">err</name> <operator pos:start="253:25" pos:end="253:25">&lt;</operator> <literal type="number" pos:start="253:27" pos:end="253:27">0</literal></expr>)</condition><block type="pseudo" pos:start="255:21" pos:end="255:31"><block_content pos:start="255:21" pos:end="255:31">

                    <return pos:start="255:21" pos:end="255:31">return <expr pos:start="255:28" pos:end="255:30"><name pos:start="255:28" pos:end="255:30">err</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="259:11" pos:end="261:34">else<block type="pseudo" pos:start="261:13" pos:end="261:34"><block_content pos:start="261:13" pos:end="261:34">

            <expr_stmt pos:start="261:13" pos:end="261:34"><expr pos:start="261:13" pos:end="261:33"><call pos:start="261:13" pos:end="261:33"><name pos:start="261:13" pos:end="261:26">av_frame_unref</name><argument_list pos:start="261:27" pos:end="261:33">(<argument pos:start="261:28" pos:end="261:32"><expr pos:start="261:28" pos:end="261:32"><name pos:start="261:28" pos:end="261:32">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="267:5" pos:end="267:15">return <expr pos:start="267:12" pos:end="267:14"><name pos:start="267:12" pos:end="267:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
