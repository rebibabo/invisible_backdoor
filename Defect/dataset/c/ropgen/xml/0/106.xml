<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/106.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">fetch_active_ports_list</name><parameter_list pos:start="1:35" pos:end="3:77">(<parameter pos:start="1:36" pos:end="1:46"><decl pos:start="1:36" pos:end="1:46"><type pos:start="1:36" pos:end="1:46"><name pos:start="1:36" pos:end="1:43">QEMUFile</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">f</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:50"><decl pos:start="3:36" pos:end="3:50"><type pos:start="3:36" pos:end="3:50"><name pos:start="3:36" pos:end="3:47">VirtIOSerial</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:50">s</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:76"><decl pos:start="3:53" pos:end="3:76"><type pos:start="3:53" pos:end="3:76"><name pos:start="3:53" pos:end="3:60">uint32_t</name></type> <name pos:start="3:62" pos:end="3:76">nr_active_ports</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:13">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:52"><expr pos:start="11:5" pos:end="11:51"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:16">post_load</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <call pos:start="11:20" pos:end="11:51"><name pos:start="11:20" pos:end="11:28">g_malloc0</name><argument_list pos:start="11:29" pos:end="11:51">(<argument pos:start="11:30" pos:end="11:50"><expr pos:start="11:30" pos:end="11:50"><sizeof pos:start="11:30" pos:end="11:50">sizeof<argument_list pos:start="11:36" pos:end="11:50">(<argument pos:start="11:37" pos:end="11:49"><expr pos:start="11:37" pos:end="11:49"><operator pos:start="11:37" pos:end="11:37">*</operator><name pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:38">s</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:49">post_load</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:16">post_load</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:33">nr_active_ports</name></name> <operator pos:start="13:35" pos:end="13:35">=</operator> <name pos:start="13:37" pos:end="13:51">nr_active_ports</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:70"><expr pos:start="15:5" pos:end="17:69"><name pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:16">post_load</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:27">connected</name></name> <operator pos:start="15:29" pos:end="15:29">=</operator>

        <call pos:start="17:9" pos:end="17:69"><name pos:start="17:9" pos:end="17:17">g_malloc0</name><argument_list pos:start="17:18" pos:end="17:69">(<argument pos:start="17:19" pos:end="17:68"><expr pos:start="17:19" pos:end="17:68"><sizeof pos:start="17:19" pos:end="17:50">sizeof<argument_list pos:start="17:25" pos:end="17:50">(<argument pos:start="17:26" pos:end="17:49"><expr pos:start="17:26" pos:end="17:49"><operator pos:start="17:26" pos:end="17:26">*</operator><name pos:start="17:27" pos:end="17:49"><name pos:start="17:27" pos:end="17:27">s</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:38">post_load</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:49">connected</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="17:52" pos:end="17:52">*</operator> <name pos:start="17:54" pos:end="17:68">nr_active_ports</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="25:47"><expr pos:start="21:5" pos:end="25:46"><name pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:16">post_load</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:23">timer</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="25:46"><name pos:start="21:27" pos:end="21:38">timer_new_ns</name><argument_list pos:start="21:39" pos:end="25:46">(<argument pos:start="21:40" pos:end="21:57"><expr pos:start="21:40" pos:end="21:57"><name pos:start="21:40" pos:end="21:57">QEMU_CLOCK_VIRTUAL</name></expr></argument>,

                                            <argument pos:start="23:45" pos:end="23:76"><expr pos:start="23:45" pos:end="23:76"><name pos:start="23:45" pos:end="23:76">virtio_serial_post_load_timer_cb</name></expr></argument>,

                                            <argument pos:start="25:45" pos:end="25:45"><expr pos:start="25:45" pos:end="25:45"><name pos:start="25:45" pos:end="25:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:42">/* Items in struct VirtIOSerialPort */</comment>

    <for pos:start="31:5" pos:end="89:5">for <control pos:start="31:9" pos:end="31:41">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:36"><expr pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:35">nr_active_ports</name></expr>;</condition> <incr pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:38">i</name><operator pos:start="31:39" pos:end="31:40">++</operator></expr></incr>)</control> <block pos:start="31:43" pos:end="89:5">{<block_content pos:start="33:9" pos:end="87:9">

        <decl_stmt pos:start="33:9" pos:end="33:31"><decl pos:start="33:9" pos:end="33:30"><type pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:24">VirtIOSerialPort</name> <modifier pos:start="33:26" pos:end="33:26">*</modifier></type><name pos:start="33:27" pos:end="33:30">port</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:29"><decl pos:start="35:9" pos:end="35:28"><type pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:16">uint32_t</name></type> <name pos:start="35:18" pos:end="35:28">elem_popped</name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:20"><decl pos:start="37:9" pos:end="37:19"><type pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">uint32_t</name></type> <name pos:start="37:18" pos:end="37:19">id</name></decl>;</decl_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:10">id</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:29"><name pos:start="41:14" pos:end="41:26">qemu_get_be32</name><argument_list pos:start="41:27" pos:end="41:29">(<argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:12">port</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:37"><name pos:start="43:16" pos:end="43:30">find_port_by_id</name><argument_list pos:start="43:31" pos:end="43:37">(<argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">s</name></expr></argument>, <argument pos:start="43:35" pos:end="43:36"><expr pos:start="43:35" pos:end="43:36"><name pos:start="43:35" pos:end="43:36">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:18">(<expr pos:start="45:13" pos:end="45:17"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:17">port</name></expr>)</condition> <block pos:start="45:20" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:27">

            <return pos:start="47:13" pos:end="47:27">return <expr pos:start="47:20" pos:end="47:26"><operator pos:start="47:20" pos:end="47:20">-</operator><name pos:start="47:21" pos:end="47:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:12">port</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:29">guest_connected</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <call pos:start="53:33" pos:end="53:48"><name pos:start="53:33" pos:end="53:45">qemu_get_byte</name><argument_list pos:start="53:46" pos:end="53:48">(<argument pos:start="53:47" pos:end="53:47"><expr pos:start="53:47" pos:end="53:47"><name pos:start="53:47" pos:end="53:47">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:47"><expr pos:start="55:9" pos:end="55:46"><name pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:20">post_load</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:31">connected</name><index pos:start="55:32" pos:end="55:34">[<expr pos:start="55:33" pos:end="55:33"><name pos:start="55:33" pos:end="55:33">i</name></expr>]</index></name><operator pos:start="55:35" pos:end="55:35">.</operator><name pos:start="55:36" pos:end="55:39">port</name> <operator pos:start="55:41" pos:end="55:41">=</operator> <name pos:start="55:43" pos:end="55:46">port</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:69"><expr pos:start="57:9" pos:end="57:68"><name pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:20">post_load</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:31">connected</name><index pos:start="57:32" pos:end="57:34">[<expr pos:start="57:33" pos:end="57:33"><name pos:start="57:33" pos:end="57:33">i</name></expr>]</index></name><operator pos:start="57:35" pos:end="57:35">.</operator><name pos:start="57:36" pos:end="57:49">host_connected</name> <operator pos:start="57:51" pos:end="57:51">=</operator> <call pos:start="57:53" pos:end="57:68"><name pos:start="57:53" pos:end="57:65">qemu_get_byte</name><argument_list pos:start="57:66" pos:end="57:68">(<argument pos:start="57:67" pos:end="57:67"><expr pos:start="57:67" pos:end="57:67"><name pos:start="57:67" pos:end="57:67">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:40"><expr pos:start="61:9" pos:end="61:39"><call pos:start="61:9" pos:end="61:39"><name pos:start="61:9" pos:end="61:22">qemu_get_be32s</name><argument_list pos:start="61:23" pos:end="61:39">(<argument pos:start="61:24" pos:end="61:24"><expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">f</name></expr></argument>, <argument pos:start="61:27" pos:end="61:38"><expr pos:start="61:27" pos:end="61:38"><operator pos:start="61:27" pos:end="61:27">&amp;</operator><name pos:start="61:28" pos:end="61:38">elem_popped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="87:9"><if pos:start="63:9" pos:end="87:9">if <condition pos:start="63:12" pos:end="63:24">(<expr pos:start="63:13" pos:end="63:23"><name pos:start="63:13" pos:end="63:23">elem_popped</name></expr>)</condition> <block pos:start="63:26" pos:end="87:9">{<block_content pos:start="65:13" pos:end="85:53">

            <expr_stmt pos:start="65:13" pos:end="65:46"><expr pos:start="65:13" pos:end="65:45"><call pos:start="65:13" pos:end="65:45"><name pos:start="65:13" pos:end="65:26">qemu_get_be32s</name><argument_list pos:start="65:27" pos:end="65:45">(<argument pos:start="65:28" pos:end="65:28"><expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">f</name></expr></argument>, <argument pos:start="65:31" pos:end="65:44"><expr pos:start="65:31" pos:end="65:44"><operator pos:start="65:31" pos:end="65:31">&amp;</operator><name pos:start="65:32" pos:end="65:44"><name pos:start="65:32" pos:end="65:35">port</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:44">iov_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:49"><expr pos:start="67:13" pos:end="67:48"><call pos:start="67:13" pos:end="67:48"><name pos:start="67:13" pos:end="67:26">qemu_get_be64s</name><argument_list pos:start="67:27" pos:end="67:48">(<argument pos:start="67:28" pos:end="67:28"><expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">f</name></expr></argument>, <argument pos:start="67:31" pos:end="67:47"><expr pos:start="67:31" pos:end="67:47"><operator pos:start="67:31" pos:end="67:31">&amp;</operator><name pos:start="67:32" pos:end="67:47"><name pos:start="67:32" pos:end="67:35">port</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:47">iov_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="71:13" pos:end="73:72"><expr pos:start="71:13" pos:end="73:71"><name pos:start="71:13" pos:end="71:22"><name pos:start="71:13" pos:end="71:16">port</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:22">elem</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator>

                <call pos:start="73:17" pos:end="73:71"><name pos:start="73:17" pos:end="73:42">qemu_get_virtqueue_element</name><argument_list pos:start="73:43" pos:end="73:71">(<argument pos:start="73:44" pos:end="73:44"><expr pos:start="73:44" pos:end="73:44"><name pos:start="73:44" pos:end="73:44">f</name></expr></argument>, <argument pos:start="73:47" pos:end="73:70"><expr pos:start="73:47" pos:end="73:70"><sizeof pos:start="73:47" pos:end="73:70">sizeof<argument_list pos:start="73:53" pos:end="73:70">(<argument pos:start="73:54" pos:end="73:69"><expr pos:start="73:54" pos:end="73:69"><name pos:start="73:54" pos:end="73:69">VirtQueueElement</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="77:13" pos:end="83:15">/*

             *  Port was throttled on source machine.  Let's

             *  unthrottle it here so data starts flowing again.

             */</comment>

            <expr_stmt pos:start="85:13" pos:end="85:53"><expr pos:start="85:13" pos:end="85:52"><call pos:start="85:13" pos:end="85:52"><name pos:start="85:13" pos:end="85:39">virtio_serial_throttle_port</name><argument_list pos:start="85:40" pos:end="85:52">(<argument pos:start="85:41" pos:end="85:44"><expr pos:start="85:41" pos:end="85:44"><name pos:start="85:41" pos:end="85:44">port</name></expr></argument>, <argument pos:start="85:47" pos:end="85:51"><expr pos:start="85:47" pos:end="85:51"><name pos:start="85:47" pos:end="85:51">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="91:5" pos:end="91:38"><expr pos:start="91:5" pos:end="91:37"><call pos:start="91:5" pos:end="91:37"><name pos:start="91:5" pos:end="91:13">timer_mod</name><argument_list pos:start="91:14" pos:end="91:37">(<argument pos:start="91:15" pos:end="91:33"><expr pos:start="91:15" pos:end="91:33"><name pos:start="91:15" pos:end="91:33"><name pos:start="91:15" pos:end="91:15">s</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:26">post_load</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:33">timer</name></name></expr></argument>, <argument pos:start="91:36" pos:end="91:36"><expr pos:start="91:36" pos:end="91:36"><literal type="number" pos:start="91:36" pos:end="91:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
