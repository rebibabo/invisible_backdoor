<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16790.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">openpic_load</name><parameter_list pos:start="1:24" pos:end="1:66">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:32">QEMUFile</name><modifier pos:start="1:33" pos:end="1:33">*</modifier></type> <name pos:start="1:35" pos:end="1:35">f</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">opaque</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:65">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">OpenPICState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">opp</name> <init pos:start="5:23" pos:end="5:46">= <expr pos:start="5:25" pos:end="5:46"><operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:37">OpenPICState</name> <operator pos:start="5:39" pos:end="5:39">*</operator><operator pos:start="5:40" pos:end="5:40">)</operator><name pos:start="5:41" pos:end="5:46">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:23"><if pos:start="11:5" pos:end="13:23">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:18">version_id</name> <operator pos:start="11:20" pos:end="11:21">!=</operator> <literal type="number" pos:start="11:23" pos:end="11:23">1</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:23"><block_content pos:start="13:9" pos:end="13:23">

        <return pos:start="13:9" pos:end="13:23">return <expr pos:start="13:16" pos:end="13:22"><operator pos:start="13:16" pos:end="13:16">-</operator><name pos:start="13:17" pos:end="13:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><call pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:18">qemu_get_be32s</name><argument_list pos:start="17:19" pos:end="17:33">(<argument pos:start="17:20" pos:end="17:20"><expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">f</name></expr></argument>, <argument pos:start="17:23" pos:end="17:32"><expr pos:start="17:23" pos:end="17:32"><operator pos:start="17:23" pos:end="17:23">&amp;</operator><name pos:start="17:24" pos:end="17:32"><name pos:start="17:24" pos:end="17:26">opp</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:32">glbc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><call pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:18">qemu_get_be32s</name><argument_list pos:start="19:19" pos:end="19:33">(<argument pos:start="19:20" pos:end="19:20"><expr pos:start="19:20" pos:end="19:20"><name pos:start="19:20" pos:end="19:20">f</name></expr></argument>, <argument pos:start="19:23" pos:end="19:32"><expr pos:start="19:23" pos:end="19:32"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:26">opp</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:32">veni</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><call pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:18">qemu_get_be32s</name><argument_list pos:start="21:19" pos:end="21:33">(<argument pos:start="21:20" pos:end="21:20"><expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">f</name></expr></argument>, <argument pos:start="21:23" pos:end="21:32"><expr pos:start="21:23" pos:end="21:32"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:32"><name pos:start="21:24" pos:end="21:26">opp</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:32">pint</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><call pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:18">qemu_get_be32s</name><argument_list pos:start="23:19" pos:end="23:33">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">f</name></expr></argument>, <argument pos:start="23:23" pos:end="23:32"><expr pos:start="23:23" pos:end="23:32"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:26">opp</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:32">spve</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><call pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:18">qemu_get_be32s</name><argument_list pos:start="25:19" pos:end="25:33">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">f</name></expr></argument>, <argument pos:start="25:23" pos:end="25:32"><expr pos:start="25:23" pos:end="25:32"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:26">opp</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:32">tifr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="39:5">for <control pos:start="29:9" pos:end="29:38">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:33"><expr pos:start="29:17" pos:end="29:32"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:23">opp</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:32">max_irq</name></name></expr>;</condition> <incr pos:start="29:35" pos:end="29:37"><expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:35">i</name><operator pos:start="29:36" pos:end="29:37">++</operator></expr></incr>)</control> <block pos:start="29:40" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:49">

        <expr_stmt pos:start="31:9" pos:end="31:45"><expr pos:start="31:9" pos:end="31:44"><call pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:22">qemu_get_be32s</name><argument_list pos:start="31:23" pos:end="31:44">(<argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">f</name></expr></argument>, <argument pos:start="31:27" pos:end="31:43"><expr pos:start="31:27" pos:end="31:43"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:38"><name pos:start="31:28" pos:end="31:30">opp</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:35">src</name><index pos:start="31:36" pos:end="31:38">[<expr pos:start="31:37" pos:end="31:37"><name pos:start="31:37" pos:end="31:37">i</name></expr>]</index></name><operator pos:start="31:39" pos:end="31:39">.</operator><name pos:start="31:40" pos:end="31:43">ipvp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><call pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:22">qemu_get_be32s</name><argument_list pos:start="33:23" pos:end="33:43">(<argument pos:start="33:24" pos:end="33:24"><expr pos:start="33:24" pos:end="33:24"><name pos:start="33:24" pos:end="33:24">f</name></expr></argument>, <argument pos:start="33:27" pos:end="33:42"><expr pos:start="33:27" pos:end="33:42"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:38"><name pos:start="33:28" pos:end="33:30">opp</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:35">src</name><index pos:start="33:36" pos:end="33:38">[<expr pos:start="33:37" pos:end="33:37"><name pos:start="33:37" pos:end="33:37">i</name></expr>]</index></name><operator pos:start="33:39" pos:end="33:39">.</operator><name pos:start="33:40" pos:end="33:42">ide</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:50"><expr pos:start="35:9" pos:end="35:49"><call pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:23">qemu_get_sbe32s</name><argument_list pos:start="35:24" pos:end="35:49">(<argument pos:start="35:25" pos:end="35:25"><expr pos:start="35:25" pos:end="35:25"><name pos:start="35:25" pos:end="35:25">f</name></expr></argument>, <argument pos:start="35:28" pos:end="35:48"><expr pos:start="35:28" pos:end="35:48"><operator pos:start="35:28" pos:end="35:28">&amp;</operator><name pos:start="35:29" pos:end="35:39"><name pos:start="35:29" pos:end="35:31">opp</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:36">src</name><index pos:start="35:37" pos:end="35:39">[<expr pos:start="35:38" pos:end="35:38"><name pos:start="35:38" pos:end="35:38">i</name></expr>]</index></name><operator pos:start="35:40" pos:end="35:40">.</operator><name pos:start="35:41" pos:end="35:48">last_cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><call pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:23">qemu_get_sbe32s</name><argument_list pos:start="37:24" pos:end="37:48">(<argument pos:start="37:25" pos:end="37:25"><expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">f</name></expr></argument>, <argument pos:start="37:28" pos:end="37:47"><expr pos:start="37:28" pos:end="37:47"><operator pos:start="37:28" pos:end="37:28">&amp;</operator><name pos:start="37:29" pos:end="37:39"><name pos:start="37:29" pos:end="37:31">opp</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:36">src</name><index pos:start="37:37" pos:end="37:39">[<expr pos:start="37:38" pos:end="37:38"><name pos:start="37:38" pos:end="37:38">i</name></expr>]</index></name><operator pos:start="37:40" pos:end="37:40">.</operator><name pos:start="37:41" pos:end="37:47">pending</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><call pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:18">qemu_get_be32s</name><argument_list pos:start="43:19" pos:end="43:36">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">f</name></expr></argument>, <argument pos:start="43:23" pos:end="43:35"><expr pos:start="43:23" pos:end="43:35"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:35"><name pos:start="43:24" pos:end="43:26">opp</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:35">nb_cpus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="57:5">for <control pos:start="47:9" pos:end="47:38">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:33"><expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:23">opp</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:32">nb_cpus</name></name></expr>;</condition> <incr pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><name pos:start="47:35" pos:end="47:35">i</name><operator pos:start="47:36" pos:end="47:37">++</operator></expr></incr>)</control> <block pos:start="47:40" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:58">

        <expr_stmt pos:start="49:9" pos:end="49:45"><expr pos:start="49:9" pos:end="49:44"><call pos:start="49:9" pos:end="49:44"><name pos:start="49:9" pos:end="49:22">qemu_get_be32s</name><argument_list pos:start="49:23" pos:end="49:44">(<argument pos:start="49:24" pos:end="49:24"><expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">f</name></expr></argument>, <argument pos:start="49:27" pos:end="49:43"><expr pos:start="49:27" pos:end="49:43"><operator pos:start="49:27" pos:end="49:27">&amp;</operator><name pos:start="49:28" pos:end="49:38"><name pos:start="49:28" pos:end="49:30">opp</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:35">dst</name><index pos:start="49:36" pos:end="49:38">[<expr pos:start="49:37" pos:end="49:37"><name pos:start="49:37" pos:end="49:37">i</name></expr>]</index></name><operator pos:start="49:39" pos:end="49:39">.</operator><name pos:start="49:40" pos:end="49:43">pctp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><call pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:22">qemu_get_be32s</name><argument_list pos:start="51:23" pos:end="51:44">(<argument pos:start="51:24" pos:end="51:24"><expr pos:start="51:24" pos:end="51:24"><name pos:start="51:24" pos:end="51:24">f</name></expr></argument>, <argument pos:start="51:27" pos:end="51:43"><expr pos:start="51:27" pos:end="51:43"><operator pos:start="51:27" pos:end="51:27">&amp;</operator><name pos:start="51:28" pos:end="51:38"><name pos:start="51:28" pos:end="51:30">opp</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:35">dst</name><index pos:start="51:36" pos:end="51:38">[<expr pos:start="51:37" pos:end="51:37"><name pos:start="51:37" pos:end="51:37">i</name></expr>]</index></name><operator pos:start="51:39" pos:end="51:39">.</operator><name pos:start="51:40" pos:end="51:43">pcsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:55"><expr pos:start="53:9" pos:end="53:54"><call pos:start="53:9" pos:end="53:54"><name pos:start="53:9" pos:end="53:30">openpic_load_IRQ_queue</name><argument_list pos:start="53:31" pos:end="53:54">(<argument pos:start="53:32" pos:end="53:32"><expr pos:start="53:32" pos:end="53:32"><name pos:start="53:32" pos:end="53:32">f</name></expr></argument>, <argument pos:start="53:35" pos:end="53:53"><expr pos:start="53:35" pos:end="53:53"><operator pos:start="53:35" pos:end="53:35">&amp;</operator><name pos:start="53:36" pos:end="53:46"><name pos:start="53:36" pos:end="53:38">opp</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:43">dst</name><index pos:start="53:44" pos:end="53:46">[<expr pos:start="53:45" pos:end="53:45"><name pos:start="53:45" pos:end="53:45">i</name></expr>]</index></name><operator pos:start="53:47" pos:end="53:47">.</operator><name pos:start="53:48" pos:end="53:53">raised</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:58"><expr pos:start="55:9" pos:end="55:57"><call pos:start="55:9" pos:end="55:57"><name pos:start="55:9" pos:end="55:30">openpic_load_IRQ_queue</name><argument_list pos:start="55:31" pos:end="55:57">(<argument pos:start="55:32" pos:end="55:32"><expr pos:start="55:32" pos:end="55:32"><name pos:start="55:32" pos:end="55:32">f</name></expr></argument>, <argument pos:start="55:35" pos:end="55:56"><expr pos:start="55:35" pos:end="55:56"><operator pos:start="55:35" pos:end="55:35">&amp;</operator><name pos:start="55:36" pos:end="55:46"><name pos:start="55:36" pos:end="55:38">opp</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:43">dst</name><index pos:start="55:44" pos:end="55:46">[<expr pos:start="55:45" pos:end="55:45"><name pos:start="55:45" pos:end="55:45">i</name></expr>]</index></name><operator pos:start="55:47" pos:end="55:47">.</operator><name pos:start="55:48" pos:end="55:56">servicing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="61:5" pos:end="67:5">for <control pos:start="61:9" pos:end="61:33">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:28"><expr pos:start="61:17" pos:end="61:27"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:27">MAX_TMR</name></expr>;</condition> <incr pos:start="61:30" pos:end="61:32"><expr pos:start="61:30" pos:end="61:32"><name pos:start="61:30" pos:end="61:30">i</name><operator pos:start="61:31" pos:end="61:32">++</operator></expr></incr>)</control> <block pos:start="61:35" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:48">

        <expr_stmt pos:start="63:9" pos:end="63:48"><expr pos:start="63:9" pos:end="63:47"><call pos:start="63:9" pos:end="63:47"><name pos:start="63:9" pos:end="63:22">qemu_get_be32s</name><argument_list pos:start="63:23" pos:end="63:47">(<argument pos:start="63:24" pos:end="63:24"><expr pos:start="63:24" pos:end="63:24"><name pos:start="63:24" pos:end="63:24">f</name></expr></argument>, <argument pos:start="63:27" pos:end="63:46"><expr pos:start="63:27" pos:end="63:46"><operator pos:start="63:27" pos:end="63:27">&amp;</operator><name pos:start="63:28" pos:end="63:41"><name pos:start="63:28" pos:end="63:30">opp</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:38">timers</name><index pos:start="63:39" pos:end="63:41">[<expr pos:start="63:40" pos:end="63:40"><name pos:start="63:40" pos:end="63:40">i</name></expr>]</index></name><operator pos:start="63:42" pos:end="63:42">.</operator><name pos:start="63:43" pos:end="63:46">ticc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:48"><expr pos:start="65:9" pos:end="65:47"><call pos:start="65:9" pos:end="65:47"><name pos:start="65:9" pos:end="65:22">qemu_get_be32s</name><argument_list pos:start="65:23" pos:end="65:47">(<argument pos:start="65:24" pos:end="65:24"><expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">f</name></expr></argument>, <argument pos:start="65:27" pos:end="65:46"><expr pos:start="65:27" pos:end="65:46"><operator pos:start="65:27" pos:end="65:27">&amp;</operator><name pos:start="65:28" pos:end="65:41"><name pos:start="65:28" pos:end="65:30">opp</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:38">timers</name><index pos:start="65:39" pos:end="65:41">[<expr pos:start="65:40" pos:end="65:40"><name pos:start="65:40" pos:end="65:40">i</name></expr>]</index></name><operator pos:start="65:42" pos:end="65:42">.</operator><name pos:start="65:43" pos:end="65:46">tibc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
