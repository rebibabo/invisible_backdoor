<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5591.c" pos:tabs="8"><function pos:start="1:1" pos:end="617:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">xvid_encode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="617:1">{<block_content pos:start="5:5" pos:end="615:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">xerr</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">xvid_flags</name> <init pos:start="7:20" pos:end="7:33">= <expr pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:26">avctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:33">flags</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:23">xvid_context</name></name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:26">x</name> <init pos:start="9:28" pos:end="9:45">= <expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint16_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:19">intra</name></decl>, <decl pos:start="11:22" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:14"><modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:27">inter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:11"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">fd</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:48"><decl pos:start="17:5" pos:end="17:47"><type pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:24">xvid_plugin_single_t</name></type> <name pos:start="17:26" pos:end="17:31">single</name>         <init pos:start="17:41" pos:end="17:47">= <expr pos:start="17:43" pos:end="17:47"><block pos:start="17:43" pos:end="17:47">{ <expr pos:start="17:45" pos:end="17:45"><literal type="number" pos:start="17:45" pos:end="17:45">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:48"><decl pos:start="19:5" pos:end="19:47"><type pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:24">xvid_ff_pass1</name></name></type> <name pos:start="19:26" pos:end="19:33">rc2pass1</name>       <init pos:start="19:41" pos:end="19:47">= <expr pos:start="19:43" pos:end="19:47"><block pos:start="19:43" pos:end="19:47">{ <expr pos:start="19:45" pos:end="19:45"><literal type="number" pos:start="19:45" pos:end="19:45">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:48"><decl pos:start="21:5" pos:end="21:47"><type pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:24">xvid_plugin_2pass2_t</name></type> <name pos:start="21:26" pos:end="21:33">rc2pass2</name>       <init pos:start="21:41" pos:end="21:47">= <expr pos:start="21:43" pos:end="21:47"><block pos:start="21:43" pos:end="21:47">{ <expr pos:start="21:45" pos:end="21:45"><literal type="number" pos:start="21:45" pos:end="21:45">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:48"><decl pos:start="23:5" pos:end="23:47"><type pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:29">xvid_plugin_lumimasking_t</name></type> <name pos:start="23:31" pos:end="23:39">masking_l</name> <init pos:start="23:41" pos:end="23:47">= <expr pos:start="23:43" pos:end="23:47"><block pos:start="23:43" pos:end="23:47">{ <expr pos:start="23:45" pos:end="23:45"><literal type="number" pos:start="23:45" pos:end="23:45">0</literal></expr> }</block></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="23:50" pos:end="23:71">/* For lumi masking */</comment>

    <decl_stmt pos:start="25:5" pos:end="25:48"><decl pos:start="25:5" pos:end="25:47"><type pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:29">xvid_plugin_lumimasking_t</name></type> <name pos:start="25:31" pos:end="25:39">masking_v</name> <init pos:start="25:41" pos:end="25:47">= <expr pos:start="25:43" pos:end="25:47"><block pos:start="25:43" pos:end="25:47">{ <expr pos:start="25:45" pos:end="25:45"><literal type="number" pos:start="25:45" pos:end="25:45">0</literal></expr> }</block></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="25:50" pos:end="25:70">/* For variance AQ */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:48"><decl pos:start="27:5" pos:end="27:47"><type pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:22">xvid_plugin_ssim_t</name></type> <name pos:start="27:24" pos:end="27:27">ssim</name>             <init pos:start="27:41" pos:end="27:47">= <expr pos:start="27:43" pos:end="27:47"><block pos:start="27:43" pos:end="27:47">{ <expr pos:start="27:45" pos:end="27:45"><literal type="number" pos:start="27:45" pos:end="27:45">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:48"><decl pos:start="29:5" pos:end="29:47"><type pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:19">xvid_gbl_init_t</name></type> <name pos:start="29:21" pos:end="29:33">xvid_gbl_init</name>       <init pos:start="29:41" pos:end="29:47">= <expr pos:start="29:43" pos:end="29:47"><block pos:start="29:43" pos:end="29:47">{ <expr pos:start="29:45" pos:end="29:45"><literal type="number" pos:start="29:45" pos:end="29:45">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:48"><decl pos:start="31:5" pos:end="31:47"><type pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:21">xvid_enc_create_t</name></type> <name pos:start="31:23" pos:end="31:37">xvid_enc_create</name>   <init pos:start="31:41" pos:end="31:47">= <expr pos:start="31:43" pos:end="31:47"><block pos:start="31:43" pos:end="31:47">{ <expr pos:start="31:45" pos:end="31:45"><literal type="number" pos:start="31:45" pos:end="31:45">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:33"><decl pos:start="33:5" pos:end="33:32"><type pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:21">xvid_enc_plugin_t</name></type> <name pos:start="33:23" pos:end="33:32"><name pos:start="33:23" pos:end="33:29">plugins</name><index pos:start="33:30" pos:end="33:32">[<expr pos:start="33:31" pos:end="33:31"><literal type="number" pos:start="33:31" pos:end="33:31">7</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:53">/* Bring in VOP flags from avconv command-line */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:5">x</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:16">vop_flags</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:35">XVID_VOP_HALFPEL</name></expr>;</expr_stmt> <comment type="block" pos:start="39:38" pos:end="39:63">/* Bare minimum quality */</comment>

    <if_stmt pos:start="41:5" pos:end="43:41"><if pos:start="41:5" pos:end="43:41">if <condition pos:start="41:8" pos:end="41:36">(<expr pos:start="41:9" pos:end="41:35"><name pos:start="41:9" pos:end="41:18">xvid_flags</name> <operator pos:start="41:20" pos:end="41:20">&amp;</operator> <name pos:start="41:22" pos:end="41:35">CODEC_FLAG_4MV</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:41"><block_content pos:start="43:9" pos:end="43:41">

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:9">x</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:20">vop_flags</name></name> <operator pos:start="43:22" pos:end="43:23">|=</operator> <name pos:start="43:25" pos:end="43:40">XVID_VOP_INTER4V</name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="43:43" pos:end="43:55">/* Level 3 */</comment>

    <if_stmt pos:start="45:5" pos:end="47:46"><if pos:start="45:5" pos:end="47:46">if <condition pos:start="45:8" pos:end="45:23">(<expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:13">avctx</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:22">trellis</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:46"><block_content pos:start="47:9" pos:end="47:46">

        <expr_stmt pos:start="47:9" pos:end="47:46"><expr pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:9">x</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:20">vop_flags</name></name> <operator pos:start="47:22" pos:end="47:23">|=</operator> <name pos:start="47:25" pos:end="47:45">XVID_VOP_TRELLISQUANT</name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="47:48" pos:end="47:60">/* Level 5 */</comment>

    <if_stmt pos:start="49:5" pos:end="51:42"><if pos:start="49:5" pos:end="51:42">if <condition pos:start="49:8" pos:end="49:40">(<expr pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:18">xvid_flags</name> <operator pos:start="49:20" pos:end="49:20">&amp;</operator> <name pos:start="49:22" pos:end="49:39">CODEC_FLAG_AC_PRED</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:42"><block_content pos:start="51:9" pos:end="51:42">

        <expr_stmt pos:start="51:9" pos:end="51:42"><expr pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:9">x</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:20">vop_flags</name></name> <operator pos:start="51:22" pos:end="51:23">|=</operator> <name pos:start="51:25" pos:end="51:41">XVID_VOP_HQACPRED</name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="51:44" pos:end="51:56">/* Level 6 */</comment>

    <if_stmt pos:start="53:5" pos:end="55:43"><if pos:start="53:5" pos:end="55:43">if <condition pos:start="53:8" pos:end="53:37">(<expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:18">xvid_flags</name> <operator pos:start="53:20" pos:end="53:20">&amp;</operator> <name pos:start="53:22" pos:end="53:36">CODEC_FLAG_GRAY</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:43"><block_content pos:start="55:9" pos:end="55:43">

        <expr_stmt pos:start="55:9" pos:end="55:43"><expr pos:start="55:9" pos:end="55:42"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">x</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:20">vop_flags</name></name> <operator pos:start="55:22" pos:end="55:23">|=</operator> <name pos:start="55:25" pos:end="55:42">XVID_VOP_GREYSCALE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:48">/* Decide which ME quality setting to use */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:20"><expr pos:start="61:5" pos:end="61:19"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:5">x</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:15">me_flags</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>;</expr_stmt>

    <switch pos:start="63:5" pos:end="103:5">switch <condition pos:start="63:12" pos:end="63:29">(<expr pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:17">avctx</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:28">me_method</name></name></expr>)</condition> <block pos:start="63:31" pos:end="103:5">{<block_content pos:start="65:5" pos:end="101:14">

    <case pos:start="65:5" pos:end="65:17">case <expr pos:start="65:10" pos:end="65:16"><name pos:start="65:10" pos:end="65:16">ME_FULL</name></expr>:</case>   <comment type="block" pos:start="65:21" pos:end="65:35">/* Quality 6 */</comment>

        <expr_stmt pos:start="67:9" pos:end="69:42"><expr pos:start="67:9" pos:end="69:41"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:9">x</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:19">me_flags</name></name> <operator pos:start="67:21" pos:end="67:22">|=</operator> <name pos:start="67:24" pos:end="67:42">XVID_ME_EXTSEARCH16</name> <operator pos:start="67:44" pos:end="67:44">|</operator>

                       <name pos:start="69:24" pos:end="69:41">XVID_ME_EXTSEARCH8</name></expr>;</expr_stmt>



    <case pos:start="73:5" pos:end="73:17">case <expr pos:start="73:10" pos:end="73:16"><name pos:start="73:10" pos:end="73:16">ME_EPZS</name></expr>:</case>   <comment type="block" pos:start="73:21" pos:end="73:35">/* Quality 4 */</comment>

        <expr_stmt pos:start="75:9" pos:end="81:43"><expr pos:start="75:9" pos:end="81:42"><name pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:9">x</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:19">me_flags</name></name> <operator pos:start="75:21" pos:end="75:22">|=</operator> <name pos:start="75:24" pos:end="75:47">XVID_ME_ADVANCEDDIAMOND8</name> <operator pos:start="75:49" pos:end="75:49">|</operator>

                       <name pos:start="77:24" pos:end="77:45">XVID_ME_HALFPELREFINE8</name>   <operator pos:start="77:49" pos:end="77:49">|</operator>

                       <name pos:start="79:24" pos:end="79:42">XVID_ME_CHROMA_PVOP</name>      <operator pos:start="79:49" pos:end="79:49">|</operator>

                       <name pos:start="81:24" pos:end="81:42">XVID_ME_CHROMA_BVOP</name></expr>;</expr_stmt>



    <case pos:start="85:5" pos:end="85:16">case <expr pos:start="85:10" pos:end="85:15"><name pos:start="85:10" pos:end="85:15">ME_LOG</name></expr>:</case>    <comment type="block" pos:start="85:21" pos:end="85:35">/* Quality 2 */</comment>

    <case pos:start="87:5" pos:end="87:18">case <expr pos:start="87:10" pos:end="87:17"><name pos:start="87:10" pos:end="87:17">ME_PHODS</name></expr>:</case>

    <case pos:start="89:5" pos:end="89:15">case <expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:14">ME_X1</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="93:47"><expr pos:start="91:9" pos:end="93:46"><name pos:start="91:9" pos:end="91:19"><name pos:start="91:9" pos:end="91:9">x</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:19">me_flags</name></name> <operator pos:start="91:21" pos:end="91:22">|=</operator> <name pos:start="91:24" pos:end="91:48">XVID_ME_ADVANCEDDIAMOND16</name> <operator pos:start="91:50" pos:end="91:50">|</operator>

                       <name pos:start="93:24" pos:end="93:46">XVID_ME_HALFPELREFINE16</name></expr>;</expr_stmt>



    <case pos:start="97:5" pos:end="97:17">case <expr pos:start="97:10" pos:end="97:16"><name pos:start="97:10" pos:end="97:16">ME_ZERO</name></expr>:</case>   <comment type="block" pos:start="97:21" pos:end="97:35">/* Quality 0 */</comment>

    <default pos:start="99:5" pos:end="99:12">default:</default>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="107:5" pos:end="107:44">/* Decide how we should decide blocks */</comment>

    <switch pos:start="109:5" pos:end="144:0">switch <condition pos:start="109:12" pos:end="109:31">(<expr pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:17">avctx</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:30">mb_decision</name></name></expr>)</condition> <block pos:start="109:33" pos:end="144:0">{<block_content pos:start="111:5" pos:end="135:14">

    <case pos:start="111:5" pos:end="111:11">case <expr pos:start="111:10" pos:end="111:10"><literal type="number" pos:start="111:10" pos:end="111:10">2</literal></expr>:</case>

        <expr_stmt pos:start="113:9" pos:end="113:50"><expr pos:start="113:9" pos:end="113:49"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:9">x</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:20">vop_flags</name></name> <operator pos:start="113:22" pos:end="113:23">|=</operator>  <name pos:start="113:26" pos:end="113:49">XVID_VOP_MODEDECISION_RD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="121:52"><expr pos:start="115:9" pos:end="121:51"><name pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:9">x</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:19">me_flags</name></name>  <operator pos:start="115:22" pos:end="115:23">|=</operator>  <name pos:start="115:26" pos:end="115:50">XVID_ME_HALFPELREFINE8_RD</name>    <operator pos:start="115:55" pos:end="115:55">|</operator>

                         <name pos:start="117:26" pos:end="117:53">XVID_ME_QUARTERPELREFINE8_RD</name> <operator pos:start="117:55" pos:end="117:55">|</operator>

                         <name pos:start="119:26" pos:end="119:45">XVID_ME_EXTSEARCH_RD</name>         <operator pos:start="119:55" pos:end="119:55">|</operator>

                         <name pos:start="121:26" pos:end="121:51">XVID_ME_CHECKPREDICTION_RD</name></expr>;</expr_stmt>

    <case pos:start="123:5" pos:end="123:11">case <expr pos:start="123:10" pos:end="123:10"><literal type="number" pos:start="123:10" pos:end="123:10">1</literal></expr>:</case>

        <if_stmt pos:start="125:9" pos:end="127:58"><if pos:start="125:9" pos:end="127:58">if <condition pos:start="125:12" pos:end="125:55">(<expr pos:start="125:13" pos:end="125:54"><operator pos:start="125:13" pos:end="125:13">!</operator><operator pos:start="125:14" pos:end="125:14">(</operator><name pos:start="125:15" pos:end="125:26"><name pos:start="125:15" pos:end="125:15">x</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:26">vop_flags</name></name> <operator pos:start="125:28" pos:end="125:28">&amp;</operator> <name pos:start="125:30" pos:end="125:53">XVID_VOP_MODEDECISION_RD</name><operator pos:start="125:54" pos:end="125:54">)</operator></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:58"><block_content pos:start="127:13" pos:end="127:58">

            <expr_stmt pos:start="127:13" pos:end="127:58"><expr pos:start="127:13" pos:end="127:57"><name pos:start="127:13" pos:end="127:24"><name pos:start="127:13" pos:end="127:13">x</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:24">vop_flags</name></name> <operator pos:start="127:26" pos:end="127:27">|=</operator> <name pos:start="127:29" pos:end="127:57">XVID_VOP_FAST_MODEDECISION_RD</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="131:53"><expr pos:start="129:9" pos:end="131:52"><name pos:start="129:9" pos:end="129:19"><name pos:start="129:9" pos:end="129:9">x</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:19">me_flags</name></name> <operator pos:start="129:21" pos:end="129:22">|=</operator> <name pos:start="129:24" pos:end="129:49">XVID_ME_HALFPELREFINE16_RD</name> <operator pos:start="129:51" pos:end="129:51">|</operator>

                       <name pos:start="131:24" pos:end="131:52">XVID_ME_QUARTERPELREFINE16_RD</name></expr>;</expr_stmt>

    <default pos:start="133:5" pos:end="133:12">default:</default>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="141:5" pos:end="141:53">/* Bring in VOL flags from avconv command-line */</comment>

<cpp:if pos:start="143:1" pos:end="143:14">#<cpp:directive pos:start="143:2" pos:end="143:3">if</cpp:directive> <expr pos:start="143:5" pos:end="143:14"><name pos:start="143:5" pos:end="143:14">FF_API_GMC</name></expr></cpp:if>

    <if_stmt pos:start="145:5" pos:end="150:0"><if pos:start="145:5" pos:end="150:0">if <condition pos:start="145:8" pos:end="145:38">(<expr pos:start="145:9" pos:end="145:37"><name pos:start="145:9" pos:end="145:20"><name pos:start="145:9" pos:end="145:13">avctx</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:20">flags</name></name> <operator pos:start="145:22" pos:end="145:22">&amp;</operator> <name pos:start="145:24" pos:end="145:37">CODEC_FLAG_GMC</name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="150:0"><block_content pos:start="147:9" pos:end="150:0">

        <expr_stmt pos:start="147:9" pos:end="150:0"><expr pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:14"><name pos:start="147:9" pos:end="147:9">x</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:14">gmc</name></name> <operator pos:start="147:16" pos:end="147:16">=</operator> <literal type="number" pos:start="147:18" pos:end="147:18">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="149:1" pos:end="149:6">#<cpp:directive pos:start="149:2" pos:end="149:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="153:5" pos:end="153:21"><expr pos:start="153:5" pos:end="153:20"><name pos:start="153:5" pos:end="153:16"><name pos:start="153:5" pos:end="153:5">x</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:16">vol_flags</name></name> <operator pos:start="153:18" pos:end="153:18">=</operator> <literal type="number" pos:start="153:20" pos:end="153:20">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="161:5"><if pos:start="155:5" pos:end="161:5">if <condition pos:start="155:8" pos:end="155:15">(<expr pos:start="155:9" pos:end="155:14"><name pos:start="155:9" pos:end="155:14"><name pos:start="155:9" pos:end="155:9">x</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:14">gmc</name></name></expr>)</condition> <block pos:start="155:17" pos:end="161:5">{<block_content pos:start="157:9" pos:end="159:43">

        <expr_stmt pos:start="157:9" pos:end="157:37"><expr pos:start="157:9" pos:end="157:36"><name pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:9">x</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:20">vol_flags</name></name> <operator pos:start="157:22" pos:end="157:23">|=</operator> <name pos:start="157:25" pos:end="157:36">XVID_VOL_GMC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:43"><expr pos:start="159:9" pos:end="159:42"><name pos:start="159:9" pos:end="159:19"><name pos:start="159:9" pos:end="159:9">x</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:19">me_flags</name></name>  <operator pos:start="159:22" pos:end="159:23">|=</operator> <name pos:start="159:25" pos:end="159:42">XVID_ME_GME_REFINE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="163:5" pos:end="173:5"><if pos:start="163:5" pos:end="173:5">if <condition pos:start="163:8" pos:end="163:37">(<expr pos:start="163:9" pos:end="163:36"><name pos:start="163:9" pos:end="163:18">xvid_flags</name> <operator pos:start="163:20" pos:end="163:20">&amp;</operator> <name pos:start="163:22" pos:end="163:36">CODEC_FLAG_QPEL</name></expr>)</condition> <block pos:start="163:39" pos:end="173:5">{<block_content pos:start="165:9" pos:end="171:53">

        <expr_stmt pos:start="165:9" pos:end="165:44"><expr pos:start="165:9" pos:end="165:43"><name pos:start="165:9" pos:end="165:20"><name pos:start="165:9" pos:end="165:9">x</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:20">vol_flags</name></name> <operator pos:start="165:22" pos:end="165:23">|=</operator> <name pos:start="165:25" pos:end="165:43">XVID_VOL_QUARTERPEL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:51"><expr pos:start="167:9" pos:end="167:50"><name pos:start="167:9" pos:end="167:19"><name pos:start="167:9" pos:end="167:9">x</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:19">me_flags</name></name>  <operator pos:start="167:22" pos:end="167:23">|=</operator> <name pos:start="167:25" pos:end="167:50">XVID_ME_QUARTERPELREFINE16</name></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="171:53"><if pos:start="169:9" pos:end="171:53">if <condition pos:start="169:12" pos:end="169:44">(<expr pos:start="169:13" pos:end="169:43"><name pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:13">x</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:24">vop_flags</name></name> <operator pos:start="169:26" pos:end="169:26">&amp;</operator> <name pos:start="169:28" pos:end="169:43">XVID_VOP_INTER4V</name></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:53"><block_content pos:start="171:13" pos:end="171:53">

            <expr_stmt pos:start="171:13" pos:end="171:53"><expr pos:start="171:13" pos:end="171:52"><name pos:start="171:13" pos:end="171:23"><name pos:start="171:13" pos:end="171:13">x</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:23">me_flags</name></name> <operator pos:start="171:25" pos:end="171:26">|=</operator> <name pos:start="171:28" pos:end="171:52">XVID_ME_QUARTERPELREFINE8</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:43"><expr pos:start="177:5" pos:end="177:42"><name pos:start="177:5" pos:end="177:25"><name pos:start="177:5" pos:end="177:17">xvid_gbl_init</name><operator pos:start="177:18" pos:end="177:18">.</operator><name pos:start="177:19" pos:end="177:25">version</name></name>   <operator pos:start="177:29" pos:end="177:29">=</operator> <name pos:start="177:31" pos:end="177:42">XVID_VERSION</name></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:32"><expr pos:start="179:5" pos:end="179:31"><name pos:start="179:5" pos:end="179:23"><name pos:start="179:5" pos:end="179:17">xvid_gbl_init</name><operator pos:start="179:18" pos:end="179:18">.</operator><name pos:start="179:19" pos:end="179:23">debug</name></name>     <operator pos:start="179:29" pos:end="179:29">=</operator> <literal type="number" pos:start="179:31" pos:end="179:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:32"><expr pos:start="181:5" pos:end="181:31"><name pos:start="181:5" pos:end="181:27"><name pos:start="181:5" pos:end="181:17">xvid_gbl_init</name><operator pos:start="181:18" pos:end="181:18">.</operator><name pos:start="181:19" pos:end="181:27">cpu_flags</name></name> <operator pos:start="181:29" pos:end="181:29">=</operator> <literal type="number" pos:start="181:31" pos:end="181:31">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="185:5" pos:end="185:20">/* Initialize */</comment>

    <expr_stmt pos:start="187:5" pos:end="187:59"><expr pos:start="187:5" pos:end="187:58"><call pos:start="187:5" pos:end="187:58"><name pos:start="187:5" pos:end="187:15">xvid_global</name><argument_list pos:start="187:16" pos:end="187:58">(<argument pos:start="187:17" pos:end="187:20"><expr pos:start="187:17" pos:end="187:20"><name pos:start="187:17" pos:end="187:20">NULL</name></expr></argument>, <argument pos:start="187:23" pos:end="187:35"><expr pos:start="187:23" pos:end="187:35"><name pos:start="187:23" pos:end="187:35">XVID_GBL_INIT</name></expr></argument>, <argument pos:start="187:38" pos:end="187:51"><expr pos:start="187:38" pos:end="187:51"><operator pos:start="187:38" pos:end="187:38">&amp;</operator><name pos:start="187:39" pos:end="187:51">xvid_gbl_init</name></expr></argument>, <argument pos:start="187:54" pos:end="187:57"><expr pos:start="187:54" pos:end="187:57"><name pos:start="187:54" pos:end="187:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="191:5" pos:end="191:38">/* Create the encoder reference */</comment>

    <expr_stmt pos:start="193:5" pos:end="193:43"><expr pos:start="193:5" pos:end="193:42"><name pos:start="193:5" pos:end="193:27"><name pos:start="193:5" pos:end="193:19">xvid_enc_create</name><operator pos:start="193:20" pos:end="193:20">.</operator><name pos:start="193:21" pos:end="193:27">version</name></name> <operator pos:start="193:29" pos:end="193:29">=</operator> <name pos:start="193:31" pos:end="193:42">XVID_VERSION</name></expr>;</expr_stmt>



    <comment type="block" pos:start="197:5" pos:end="197:38">/* Store the desired frame size */</comment>

    <expr_stmt pos:start="199:5" pos:end="201:42"><expr pos:start="199:5" pos:end="201:41"><name pos:start="199:5" pos:end="199:25"><name pos:start="199:5" pos:end="199:19">xvid_enc_create</name><operator pos:start="199:20" pos:end="199:20">.</operator><name pos:start="199:21" pos:end="199:25">width</name></name>  <operator pos:start="199:28" pos:end="199:28">=</operator>

    <name pos:start="201:5" pos:end="201:12"><name pos:start="201:5" pos:end="201:5">x</name><operator pos:start="201:6" pos:end="201:7">-&gt;</operator><name pos:start="201:8" pos:end="201:12">xsize</name></name>               <operator pos:start="201:28" pos:end="201:28">=</operator> <name pos:start="201:30" pos:end="201:41"><name pos:start="201:30" pos:end="201:34">avctx</name><operator pos:start="201:35" pos:end="201:36">-&gt;</operator><name pos:start="201:37" pos:end="201:41">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="205:43"><expr pos:start="203:5" pos:end="205:42"><name pos:start="203:5" pos:end="203:26"><name pos:start="203:5" pos:end="203:19">xvid_enc_create</name><operator pos:start="203:20" pos:end="203:20">.</operator><name pos:start="203:21" pos:end="203:26">height</name></name> <operator pos:start="203:28" pos:end="203:28">=</operator>

    <name pos:start="205:5" pos:end="205:12"><name pos:start="205:5" pos:end="205:5">x</name><operator pos:start="205:6" pos:end="205:7">-&gt;</operator><name pos:start="205:8" pos:end="205:12">ysize</name></name>               <operator pos:start="205:28" pos:end="205:28">=</operator> <name pos:start="205:30" pos:end="205:42"><name pos:start="205:30" pos:end="205:34">avctx</name><operator pos:start="205:35" pos:end="205:36">-&gt;</operator><name pos:start="205:37" pos:end="205:42">height</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="209:5" pos:end="209:54">/* Xvid can determine the proper profile to use */</comment>

    <comment type="block" pos:start="211:5" pos:end="211:54">/* xvid_enc_create.profile = XVID_PROFILE_S_L3; */</comment>



    <comment type="block" pos:start="215:5" pos:end="215:28">/* We don't use zones */</comment>

    <expr_stmt pos:start="217:5" pos:end="217:37"><expr pos:start="217:5" pos:end="217:36"><name pos:start="217:5" pos:end="217:25"><name pos:start="217:5" pos:end="217:19">xvid_enc_create</name><operator pos:start="217:20" pos:end="217:20">.</operator><name pos:start="217:21" pos:end="217:25">zones</name></name>     <operator pos:start="217:31" pos:end="217:31">=</operator> <name pos:start="217:33" pos:end="217:36">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:34"><expr pos:start="219:5" pos:end="219:33"><name pos:start="219:5" pos:end="219:29"><name pos:start="219:5" pos:end="219:19">xvid_enc_create</name><operator pos:start="219:20" pos:end="219:20">.</operator><name pos:start="219:21" pos:end="219:29">num_zones</name></name> <operator pos:start="219:31" pos:end="219:31">=</operator> <literal type="number" pos:start="219:33" pos:end="219:33">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="223:5" pos:end="223:54"><expr pos:start="223:5" pos:end="223:53"><name pos:start="223:5" pos:end="223:31"><name pos:start="223:5" pos:end="223:19">xvid_enc_create</name><operator pos:start="223:20" pos:end="223:20">.</operator><name pos:start="223:21" pos:end="223:31">num_threads</name></name> <operator pos:start="223:33" pos:end="223:33">=</operator> <name pos:start="223:35" pos:end="223:53"><name pos:start="223:35" pos:end="223:39">avctx</name><operator pos:start="223:40" pos:end="223:41">-&gt;</operator><name pos:start="223:42" pos:end="223:53">thread_count</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="227:5" pos:end="227:42"><expr pos:start="227:5" pos:end="227:41"><name pos:start="227:5" pos:end="227:27"><name pos:start="227:5" pos:end="227:19">xvid_enc_create</name><operator pos:start="227:20" pos:end="227:20">.</operator><name pos:start="227:21" pos:end="227:27">plugins</name></name>     <operator pos:start="227:33" pos:end="227:33">=</operator> <name pos:start="227:35" pos:end="227:41">plugins</name></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:36"><expr pos:start="229:5" pos:end="229:35"><name pos:start="229:5" pos:end="229:31"><name pos:start="229:5" pos:end="229:19">xvid_enc_create</name><operator pos:start="229:20" pos:end="229:20">.</operator><name pos:start="229:21" pos:end="229:31">num_plugins</name></name> <operator pos:start="229:33" pos:end="229:33">=</operator> <literal type="number" pos:start="229:35" pos:end="229:35">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="233:5" pos:end="233:28">/* Initialize Buffers */</comment>

    <expr_stmt pos:start="235:5" pos:end="235:32"><expr pos:start="235:5" pos:end="235:31"><name pos:start="235:5" pos:end="235:20"><name pos:start="235:5" pos:end="235:5">x</name><operator pos:start="235:6" pos:end="235:7">-&gt;</operator><name pos:start="235:8" pos:end="235:20">twopassbuffer</name></name>     <operator pos:start="235:26" pos:end="235:26">=</operator> <name pos:start="235:28" pos:end="235:31">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:32"><expr pos:start="237:5" pos:end="237:31"><name pos:start="237:5" pos:end="237:24"><name pos:start="237:5" pos:end="237:5">x</name><operator pos:start="237:6" pos:end="237:7">-&gt;</operator><name pos:start="237:8" pos:end="237:24">old_twopassbuffer</name></name> <operator pos:start="237:26" pos:end="237:26">=</operator> <name pos:start="237:28" pos:end="237:31">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:32"><expr pos:start="239:5" pos:end="239:31"><name pos:start="239:5" pos:end="239:18"><name pos:start="239:5" pos:end="239:5">x</name><operator pos:start="239:6" pos:end="239:7">-&gt;</operator><name pos:start="239:8" pos:end="239:18">twopassfile</name></name>       <operator pos:start="239:26" pos:end="239:26">=</operator> <name pos:start="239:28" pos:end="239:31">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="243:5" pos:end="347:5"><if pos:start="243:5" pos:end="275:5">if <condition pos:start="243:8" pos:end="243:38">(<expr pos:start="243:9" pos:end="243:37"><name pos:start="243:9" pos:end="243:18">xvid_flags</name> <operator pos:start="243:20" pos:end="243:20">&amp;</operator> <name pos:start="243:22" pos:end="243:37">CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="243:40" pos:end="275:5">{<block_content pos:start="245:9" pos:end="273:38">

        <expr_stmt pos:start="245:9" pos:end="245:44"><expr pos:start="245:9" pos:end="245:43"><name pos:start="245:9" pos:end="245:24"><name pos:start="245:9" pos:end="245:16">rc2pass1</name><operator pos:start="245:17" pos:end="245:17">.</operator><name pos:start="245:18" pos:end="245:24">version</name></name>     <operator pos:start="245:30" pos:end="245:30">=</operator> <name pos:start="245:32" pos:end="245:43">XVID_VERSION</name></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:33"><expr pos:start="247:9" pos:end="247:32"><name pos:start="247:9" pos:end="247:24"><name pos:start="247:9" pos:end="247:16">rc2pass1</name><operator pos:start="247:17" pos:end="247:17">.</operator><name pos:start="247:18" pos:end="247:24">context</name></name>     <operator pos:start="247:30" pos:end="247:30">=</operator> <name pos:start="247:32" pos:end="247:32">x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:54"><expr pos:start="249:9" pos:end="249:53"><name pos:start="249:9" pos:end="249:24"><name pos:start="249:9" pos:end="249:9">x</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:24">twopassbuffer</name></name>     <operator pos:start="249:30" pos:end="249:30">=</operator> <call pos:start="249:32" pos:end="249:53"><name pos:start="249:32" pos:end="249:40">av_malloc</name><argument_list pos:start="249:41" pos:end="249:53">(<argument pos:start="249:42" pos:end="249:52"><expr pos:start="249:42" pos:end="249:52"><name pos:start="249:42" pos:end="249:52">BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:54"><expr pos:start="251:9" pos:end="251:53"><name pos:start="251:9" pos:end="251:28"><name pos:start="251:9" pos:end="251:9">x</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:28">old_twopassbuffer</name></name> <operator pos:start="251:30" pos:end="251:30">=</operator> <call pos:start="251:32" pos:end="251:53"><name pos:start="251:32" pos:end="251:40">av_malloc</name><argument_list pos:start="251:41" pos:end="251:53">(<argument pos:start="251:42" pos:end="251:52"><expr pos:start="251:42" pos:end="251:52"><name pos:start="251:42" pos:end="251:52">BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="253:9" pos:end="261:9"><if pos:start="253:9" pos:end="261:9">if <condition pos:start="253:12" pos:end="253:55">(<expr pos:start="253:13" pos:end="253:54"><operator pos:start="253:13" pos:end="253:13">!</operator><name pos:start="253:14" pos:end="253:29"><name pos:start="253:14" pos:end="253:14">x</name><operator pos:start="253:15" pos:end="253:16">-&gt;</operator><name pos:start="253:17" pos:end="253:29">twopassbuffer</name></name> <operator pos:start="253:31" pos:end="253:32">||</operator> <operator pos:start="253:34" pos:end="253:34">!</operator><name pos:start="253:35" pos:end="253:54"><name pos:start="253:35" pos:end="253:35">x</name><operator pos:start="253:36" pos:end="253:37">-&gt;</operator><name pos:start="253:38" pos:end="253:54">old_twopassbuffer</name></name></expr>)</condition> <block pos:start="253:57" pos:end="261:9">{<block_content pos:start="255:13" pos:end="259:35">

            <expr_stmt pos:start="255:13" pos:end="257:65"><expr pos:start="255:13" pos:end="257:64"><call pos:start="255:13" pos:end="257:64"><name pos:start="255:13" pos:end="255:18">av_log</name><argument_list pos:start="255:19" pos:end="257:64">(<argument pos:start="255:20" pos:end="255:24"><expr pos:start="255:20" pos:end="255:24"><name pos:start="255:20" pos:end="255:24">avctx</name></expr></argument>, <argument pos:start="255:27" pos:end="255:38"><expr pos:start="255:27" pos:end="255:38"><name pos:start="255:27" pos:end="255:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="257:20" pos:end="257:63"><expr pos:start="257:20" pos:end="257:63"><literal type="string" pos:start="257:20" pos:end="257:63">"Xvid: Cannot allocate 2-pass log buffers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="259:13" pos:end="259:35">return <expr pos:start="259:20" pos:end="259:34"><call pos:start="259:20" pos:end="259:34"><name pos:start="259:20" pos:end="259:26">AVERROR</name><argument_list pos:start="259:27" pos:end="259:34">(<argument pos:start="259:28" pos:end="259:33"><expr pos:start="259:28" pos:end="259:33"><name pos:start="259:28" pos:end="259:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="263:9" pos:end="265:36"><expr pos:start="263:9" pos:end="265:35"><name pos:start="263:9" pos:end="263:27"><name pos:start="263:9" pos:end="263:9">x</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:24">twopassbuffer</name><index pos:start="263:25" pos:end="263:27">[<expr pos:start="263:26" pos:end="263:26"><literal type="number" pos:start="263:26" pos:end="263:26">0</literal></expr>]</index></name>     <operator pos:start="263:33" pos:end="263:33">=</operator>

        <name pos:start="265:9" pos:end="265:31"><name pos:start="265:9" pos:end="265:9">x</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:28">old_twopassbuffer</name><index pos:start="265:29" pos:end="265:31">[<expr pos:start="265:30" pos:end="265:30"><literal type="number" pos:start="265:30" pos:end="265:30">0</literal></expr>]</index></name> <operator pos:start="265:33" pos:end="265:33">=</operator> <literal type="number" pos:start="265:35" pos:end="265:35">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="269:9" pos:end="269:67"><expr pos:start="269:9" pos:end="269:66"><name pos:start="269:9" pos:end="269:44"><name pos:start="269:9" pos:end="269:15">plugins</name><index pos:start="269:16" pos:end="269:44">[<expr pos:start="269:17" pos:end="269:43"><name pos:start="269:17" pos:end="269:43"><name pos:start="269:17" pos:end="269:31">xvid_enc_create</name><operator pos:start="269:32" pos:end="269:32">.</operator><name pos:start="269:33" pos:end="269:43">num_plugins</name></name></expr>]</index></name><operator pos:start="269:45" pos:end="269:45">.</operator><name pos:start="269:46" pos:end="269:49">func</name>  <operator pos:start="269:52" pos:end="269:52">=</operator> <name pos:start="269:54" pos:end="269:66">xvid_ff_2pass</name></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:63"><expr pos:start="271:9" pos:end="271:62"><name pos:start="271:9" pos:end="271:44"><name pos:start="271:9" pos:end="271:15">plugins</name><index pos:start="271:16" pos:end="271:44">[<expr pos:start="271:17" pos:end="271:43"><name pos:start="271:17" pos:end="271:43"><name pos:start="271:17" pos:end="271:31">xvid_enc_create</name><operator pos:start="271:32" pos:end="271:32">.</operator><name pos:start="271:33" pos:end="271:43">num_plugins</name></name></expr>]</index></name><operator pos:start="271:45" pos:end="271:45">.</operator><name pos:start="271:46" pos:end="271:50">param</name> <operator pos:start="271:52" pos:end="271:52">=</operator> <operator pos:start="271:54" pos:end="271:54">&amp;</operator><name pos:start="271:55" pos:end="271:62">rc2pass1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:38"><expr pos:start="273:9" pos:end="273:37"><name pos:start="273:9" pos:end="273:35"><name pos:start="273:9" pos:end="273:23">xvid_enc_create</name><operator pos:start="273:24" pos:end="273:24">.</operator><name pos:start="273:25" pos:end="273:35">num_plugins</name></name><operator pos:start="273:36" pos:end="273:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="275:7" pos:end="331:5">else if <condition pos:start="275:15" pos:end="275:45">(<expr pos:start="275:16" pos:end="275:44"><name pos:start="275:16" pos:end="275:25">xvid_flags</name> <operator pos:start="275:27" pos:end="275:27">&amp;</operator> <name pos:start="275:29" pos:end="275:44">CODEC_FLAG_PASS2</name></expr>)</condition> <block pos:start="275:47" pos:end="331:5">{<block_content pos:start="277:9" pos:end="329:38">

        <expr_stmt pos:start="277:9" pos:end="277:40"><expr pos:start="277:9" pos:end="277:39"><name pos:start="277:9" pos:end="277:24"><name pos:start="277:9" pos:end="277:16">rc2pass2</name><operator pos:start="277:17" pos:end="277:17">.</operator><name pos:start="277:18" pos:end="277:24">version</name></name> <operator pos:start="277:26" pos:end="277:26">=</operator> <name pos:start="277:28" pos:end="277:39">XVID_VERSION</name></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:43"><expr pos:start="279:9" pos:end="279:42"><name pos:start="279:9" pos:end="279:24"><name pos:start="279:9" pos:end="279:16">rc2pass2</name><operator pos:start="279:17" pos:end="279:17">.</operator><name pos:start="279:18" pos:end="279:24">bitrate</name></name> <operator pos:start="279:26" pos:end="279:26">=</operator> <name pos:start="279:28" pos:end="279:42"><name pos:start="279:28" pos:end="279:32">avctx</name><operator pos:start="279:33" pos:end="279:34">-&gt;</operator><name pos:start="279:35" pos:end="279:42">bit_rate</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="283:9" pos:end="283:53"><expr pos:start="283:9" pos:end="283:52"><name pos:start="283:9" pos:end="283:10">fd</name> <operator pos:start="283:12" pos:end="283:12">=</operator> <call pos:start="283:14" pos:end="283:52"><name pos:start="283:14" pos:end="283:24">ff_tempfile</name><argument_list pos:start="283:25" pos:end="283:52">(<argument pos:start="283:26" pos:end="283:34"><expr pos:start="283:26" pos:end="283:34"><literal type="string" pos:start="283:26" pos:end="283:34">"xvidff."</literal></expr></argument>, <argument pos:start="283:37" pos:end="283:51"><expr pos:start="283:37" pos:end="283:51"><operator pos:start="283:37" pos:end="283:37">&amp;</operator><name pos:start="283:38" pos:end="283:51"><name pos:start="283:38" pos:end="283:38">x</name><operator pos:start="283:39" pos:end="283:40">-&gt;</operator><name pos:start="283:41" pos:end="283:51">twopassfile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="285:9" pos:end="291:9"><if pos:start="285:9" pos:end="291:9">if <condition pos:start="285:12" pos:end="285:19">(<expr pos:start="285:13" pos:end="285:18"><name pos:start="285:13" pos:end="285:14">fd</name> <operator pos:start="285:16" pos:end="285:16">&lt;</operator> <literal type="number" pos:start="285:18" pos:end="285:18">0</literal></expr>)</condition> <block pos:start="285:21" pos:end="291:9">{<block_content pos:start="287:13" pos:end="289:22">

            <expr_stmt pos:start="287:13" pos:end="287:76"><expr pos:start="287:13" pos:end="287:75"><call pos:start="287:13" pos:end="287:75"><name pos:start="287:13" pos:end="287:18">av_log</name><argument_list pos:start="287:19" pos:end="287:75">(<argument pos:start="287:20" pos:end="287:24"><expr pos:start="287:20" pos:end="287:24"><name pos:start="287:20" pos:end="287:24">avctx</name></expr></argument>, <argument pos:start="287:27" pos:end="287:38"><expr pos:start="287:27" pos:end="287:38"><name pos:start="287:27" pos:end="287:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="287:41" pos:end="287:74"><expr pos:start="287:41" pos:end="287:74"><literal type="string" pos:start="287:41" pos:end="287:74">"Xvid: Cannot write 2-pass pipe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="289:13" pos:end="289:22">return <expr pos:start="289:20" pos:end="289:21"><name pos:start="289:20" pos:end="289:21">fd</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="295:9" pos:end="303:9"><if pos:start="295:9" pos:end="303:9">if <condition pos:start="295:12" pos:end="295:29">(<expr pos:start="295:13" pos:end="295:28"><operator pos:start="295:13" pos:end="295:13">!</operator><name pos:start="295:14" pos:end="295:28"><name pos:start="295:14" pos:end="295:18">avctx</name><operator pos:start="295:19" pos:end="295:20">-&gt;</operator><name pos:start="295:21" pos:end="295:28">stats_in</name></name></expr>)</condition> <block pos:start="295:31" pos:end="303:9">{<block_content pos:start="297:13" pos:end="301:39">

            <expr_stmt pos:start="297:13" pos:end="299:75"><expr pos:start="297:13" pos:end="299:74"><call pos:start="297:13" pos:end="299:74"><name pos:start="297:13" pos:end="297:18">av_log</name><argument_list pos:start="297:19" pos:end="299:74">(<argument pos:start="297:20" pos:end="297:24"><expr pos:start="297:20" pos:end="297:24"><name pos:start="297:20" pos:end="297:24">avctx</name></expr></argument>, <argument pos:start="297:27" pos:end="297:38"><expr pos:start="297:27" pos:end="297:38"><name pos:start="297:27" pos:end="297:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="299:20" pos:end="299:73"><expr pos:start="299:20" pos:end="299:73"><literal type="string" pos:start="299:20" pos:end="299:73">"Xvid: No 2-pass information loaded for second pass\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="301:13" pos:end="301:39">return <expr pos:start="301:20" pos:end="301:38"><name pos:start="301:20" pos:end="301:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="307:9" pos:end="317:9"><if pos:start="307:9" pos:end="317:9">if <condition pos:start="307:12" pos:end="309:64">(<expr pos:start="307:13" pos:end="309:63"><call pos:start="307:13" pos:end="307:35"><name pos:start="307:13" pos:end="307:18">strlen</name><argument_list pos:start="307:19" pos:end="307:35">(<argument pos:start="307:20" pos:end="307:34"><expr pos:start="307:20" pos:end="307:34"><name pos:start="307:20" pos:end="307:34"><name pos:start="307:20" pos:end="307:24">avctx</name><operator pos:start="307:25" pos:end="307:26">-&gt;</operator><name pos:start="307:27" pos:end="307:34">stats_in</name></name></expr></argument>)</argument_list></call> <operator pos:start="307:37" pos:end="307:37">&gt;</operator>

            <call pos:start="309:13" pos:end="309:63"><name pos:start="309:13" pos:end="309:17">write</name><argument_list pos:start="309:18" pos:end="309:63">(<argument pos:start="309:19" pos:end="309:20"><expr pos:start="309:19" pos:end="309:20"><name pos:start="309:19" pos:end="309:20">fd</name></expr></argument>, <argument pos:start="309:23" pos:end="309:37"><expr pos:start="309:23" pos:end="309:37"><name pos:start="309:23" pos:end="309:37"><name pos:start="309:23" pos:end="309:27">avctx</name><operator pos:start="309:28" pos:end="309:29">-&gt;</operator><name pos:start="309:30" pos:end="309:37">stats_in</name></name></expr></argument>, <argument pos:start="309:40" pos:end="309:62"><expr pos:start="309:40" pos:end="309:62"><call pos:start="309:40" pos:end="309:62"><name pos:start="309:40" pos:end="309:45">strlen</name><argument_list pos:start="309:46" pos:end="309:62">(<argument pos:start="309:47" pos:end="309:61"><expr pos:start="309:47" pos:end="309:61"><name pos:start="309:47" pos:end="309:61"><name pos:start="309:47" pos:end="309:51">avctx</name><operator pos:start="309:52" pos:end="309:53">-&gt;</operator><name pos:start="309:54" pos:end="309:61">stats_in</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="309:66" pos:end="317:9">{<block_content pos:start="311:13" pos:end="315:32">

            <expr_stmt pos:start="311:13" pos:end="311:22"><expr pos:start="311:13" pos:end="311:21"><call pos:start="311:13" pos:end="311:21"><name pos:start="311:13" pos:end="311:17">close</name><argument_list pos:start="311:18" pos:end="311:21">(<argument pos:start="311:19" pos:end="311:20"><expr pos:start="311:19" pos:end="311:20"><name pos:start="311:19" pos:end="311:20">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:79"><expr pos:start="313:13" pos:end="313:78"><call pos:start="313:13" pos:end="313:78"><name pos:start="313:13" pos:end="313:18">av_log</name><argument_list pos:start="313:19" pos:end="313:78">(<argument pos:start="313:20" pos:end="313:24"><expr pos:start="313:20" pos:end="313:24"><name pos:start="313:20" pos:end="313:24">avctx</name></expr></argument>, <argument pos:start="313:27" pos:end="313:38"><expr pos:start="313:27" pos:end="313:38"><name pos:start="313:27" pos:end="313:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="313:41" pos:end="313:77"><expr pos:start="313:41" pos:end="313:77"><literal type="string" pos:start="313:41" pos:end="313:77">"Xvid: Cannot write to 2-pass pipe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="315:13" pos:end="315:32">return <expr pos:start="315:20" pos:end="315:31"><call pos:start="315:20" pos:end="315:31"><name pos:start="315:20" pos:end="315:26">AVERROR</name><argument_list pos:start="315:27" pos:end="315:31">(<argument pos:start="315:28" pos:end="315:30"><expr pos:start="315:28" pos:end="315:30"><name pos:start="315:28" pos:end="315:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="321:9" pos:end="321:18"><expr pos:start="321:9" pos:end="321:17"><call pos:start="321:9" pos:end="321:17"><name pos:start="321:9" pos:end="321:13">close</name><argument_list pos:start="321:14" pos:end="321:17">(<argument pos:start="321:15" pos:end="321:16"><expr pos:start="321:15" pos:end="321:16"><name pos:start="321:15" pos:end="321:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:68"><expr pos:start="323:9" pos:end="323:67"><name pos:start="323:9" pos:end="323:25"><name pos:start="323:9" pos:end="323:16">rc2pass2</name><operator pos:start="323:17" pos:end="323:17">.</operator><name pos:start="323:18" pos:end="323:25">filename</name></name>                          <operator pos:start="323:52" pos:end="323:52">=</operator> <name pos:start="323:54" pos:end="323:67"><name pos:start="323:54" pos:end="323:54">x</name><operator pos:start="323:55" pos:end="323:56">-&gt;</operator><name pos:start="323:57" pos:end="323:67">twopassfile</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:72"><expr pos:start="325:9" pos:end="325:71"><name pos:start="325:9" pos:end="325:44"><name pos:start="325:9" pos:end="325:15">plugins</name><index pos:start="325:16" pos:end="325:44">[<expr pos:start="325:17" pos:end="325:43"><name pos:start="325:17" pos:end="325:43"><name pos:start="325:17" pos:end="325:31">xvid_enc_create</name><operator pos:start="325:32" pos:end="325:32">.</operator><name pos:start="325:33" pos:end="325:43">num_plugins</name></name></expr>]</index></name><operator pos:start="325:45" pos:end="325:45">.</operator><name pos:start="325:46" pos:end="325:49">func</name>  <operator pos:start="325:52" pos:end="325:52">=</operator> <name pos:start="325:54" pos:end="325:71">xvid_plugin_2pass2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="327:9" pos:end="327:63"><expr pos:start="327:9" pos:end="327:62"><name pos:start="327:9" pos:end="327:44"><name pos:start="327:9" pos:end="327:15">plugins</name><index pos:start="327:16" pos:end="327:44">[<expr pos:start="327:17" pos:end="327:43"><name pos:start="327:17" pos:end="327:43"><name pos:start="327:17" pos:end="327:31">xvid_enc_create</name><operator pos:start="327:32" pos:end="327:32">.</operator><name pos:start="327:33" pos:end="327:43">num_plugins</name></name></expr>]</index></name><operator pos:start="327:45" pos:end="327:45">.</operator><name pos:start="327:46" pos:end="327:50">param</name> <operator pos:start="327:52" pos:end="327:52">=</operator> <operator pos:start="327:54" pos:end="327:54">&amp;</operator><name pos:start="327:55" pos:end="327:62">rc2pass2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:38"><expr pos:start="329:9" pos:end="329:37"><name pos:start="329:9" pos:end="329:35"><name pos:start="329:9" pos:end="329:23">xvid_enc_create</name><operator pos:start="329:24" pos:end="329:24">.</operator><name pos:start="329:25" pos:end="329:35">num_plugins</name></name><operator pos:start="329:36" pos:end="329:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="331:7" pos:end="347:5">else if <condition pos:start="331:15" pos:end="331:49">(<expr pos:start="331:16" pos:end="331:48"><operator pos:start="331:16" pos:end="331:16">!</operator><operator pos:start="331:17" pos:end="331:17">(</operator><name pos:start="331:18" pos:end="331:27">xvid_flags</name> <operator pos:start="331:29" pos:end="331:29">&amp;</operator> <name pos:start="331:31" pos:end="331:47">CODEC_FLAG_QSCALE</name><operator pos:start="331:48" pos:end="331:48">)</operator></expr>)</condition> <block pos:start="331:51" pos:end="347:5">{<block_content pos:start="335:9" pos:end="345:38">

        <comment type="block" pos:start="333:9" pos:end="333:42">/* Single Pass Bitrate Control! */</comment>

        <expr_stmt pos:start="335:9" pos:end="335:38"><expr pos:start="335:9" pos:end="335:37"><name pos:start="335:9" pos:end="335:22"><name pos:start="335:9" pos:end="335:14">single</name><operator pos:start="335:15" pos:end="335:15">.</operator><name pos:start="335:16" pos:end="335:22">version</name></name> <operator pos:start="335:24" pos:end="335:24">=</operator> <name pos:start="335:26" pos:end="335:37">XVID_VERSION</name></expr>;</expr_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:41"><expr pos:start="337:9" pos:end="337:40"><name pos:start="337:9" pos:end="337:22"><name pos:start="337:9" pos:end="337:14">single</name><operator pos:start="337:15" pos:end="337:15">.</operator><name pos:start="337:16" pos:end="337:22">bitrate</name></name> <operator pos:start="337:24" pos:end="337:24">=</operator> <name pos:start="337:26" pos:end="337:40"><name pos:start="337:26" pos:end="337:30">avctx</name><operator pos:start="337:31" pos:end="337:32">-&gt;</operator><name pos:start="337:33" pos:end="337:40">bit_rate</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="341:9" pos:end="341:72"><expr pos:start="341:9" pos:end="341:71"><name pos:start="341:9" pos:end="341:44"><name pos:start="341:9" pos:end="341:15">plugins</name><index pos:start="341:16" pos:end="341:44">[<expr pos:start="341:17" pos:end="341:43"><name pos:start="341:17" pos:end="341:43"><name pos:start="341:17" pos:end="341:31">xvid_enc_create</name><operator pos:start="341:32" pos:end="341:32">.</operator><name pos:start="341:33" pos:end="341:43">num_plugins</name></name></expr>]</index></name><operator pos:start="341:45" pos:end="341:45">.</operator><name pos:start="341:46" pos:end="341:49">func</name>  <operator pos:start="341:52" pos:end="341:52">=</operator> <name pos:start="341:54" pos:end="341:71">xvid_plugin_single</name></expr>;</expr_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:61"><expr pos:start="343:9" pos:end="343:60"><name pos:start="343:9" pos:end="343:44"><name pos:start="343:9" pos:end="343:15">plugins</name><index pos:start="343:16" pos:end="343:44">[<expr pos:start="343:17" pos:end="343:43"><name pos:start="343:17" pos:end="343:43"><name pos:start="343:17" pos:end="343:31">xvid_enc_create</name><operator pos:start="343:32" pos:end="343:32">.</operator><name pos:start="343:33" pos:end="343:43">num_plugins</name></name></expr>]</index></name><operator pos:start="343:45" pos:end="343:45">.</operator><name pos:start="343:46" pos:end="343:50">param</name> <operator pos:start="343:52" pos:end="343:52">=</operator> <operator pos:start="343:54" pos:end="343:54">&amp;</operator><name pos:start="343:55" pos:end="343:60">single</name></expr>;</expr_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:38"><expr pos:start="345:9" pos:end="345:37"><name pos:start="345:9" pos:end="345:35"><name pos:start="345:9" pos:end="345:23">xvid_enc_create</name><operator pos:start="345:24" pos:end="345:24">.</operator><name pos:start="345:25" pos:end="345:35">num_plugins</name></name><operator pos:start="345:36" pos:end="345:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="351:5" pos:end="353:23"><if pos:start="351:5" pos:end="353:23">if <condition pos:start="351:8" pos:end="351:35">(<expr pos:start="351:9" pos:end="351:34"><name pos:start="351:9" pos:end="351:27"><name pos:start="351:9" pos:end="351:13">avctx</name><operator pos:start="351:14" pos:end="351:15">-&gt;</operator><name pos:start="351:16" pos:end="351:27">lumi_masking</name></name> <operator pos:start="351:29" pos:end="351:30">!=</operator> <literal type="number" pos:start="351:32" pos:end="351:34">0.0</literal></expr>)</condition><block type="pseudo" pos:start="353:9" pos:end="353:23"><block_content pos:start="353:9" pos:end="353:23">

        <expr_stmt pos:start="353:9" pos:end="353:23"><expr pos:start="353:9" pos:end="353:22"><name pos:start="353:9" pos:end="353:18"><name pos:start="353:9" pos:end="353:9">x</name><operator pos:start="353:10" pos:end="353:11">-&gt;</operator><name pos:start="353:12" pos:end="353:18">lumi_aq</name></name> <operator pos:start="353:20" pos:end="353:20">=</operator> <literal type="number" pos:start="353:22" pos:end="353:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="357:5" pos:end="365:5"><if pos:start="357:5" pos:end="365:5">if <condition pos:start="357:8" pos:end="357:37">(<expr pos:start="357:9" pos:end="357:36"><name pos:start="357:9" pos:end="357:18"><name pos:start="357:9" pos:end="357:9">x</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:18">lumi_aq</name></name> <operator pos:start="357:20" pos:end="357:21">&amp;&amp;</operator> <name pos:start="357:23" pos:end="357:36"><name pos:start="357:23" pos:end="357:23">x</name><operator pos:start="357:24" pos:end="357:25">-&gt;</operator><name pos:start="357:26" pos:end="357:36">variance_aq</name></name></expr>)</condition> <block pos:start="357:39" pos:end="365:5">{<block_content pos:start="359:9" pos:end="363:64">

        <expr_stmt pos:start="359:9" pos:end="359:27"><expr pos:start="359:9" pos:end="359:26"><name pos:start="359:9" pos:end="359:22"><name pos:start="359:9" pos:end="359:9">x</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:22">variance_aq</name></name> <operator pos:start="359:24" pos:end="359:24">=</operator> <literal type="number" pos:start="359:26" pos:end="359:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="363:64"><expr pos:start="361:9" pos:end="363:63"><call pos:start="361:9" pos:end="363:63"><name pos:start="361:9" pos:end="361:14">av_log</name><argument_list pos:start="361:15" pos:end="363:63">(<argument pos:start="361:16" pos:end="361:20"><expr pos:start="361:16" pos:end="361:20"><name pos:start="361:16" pos:end="361:20">avctx</name></expr></argument>, <argument pos:start="361:23" pos:end="361:36"><expr pos:start="361:23" pos:end="361:36"><name pos:start="361:23" pos:end="361:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="363:16" pos:end="363:62"><expr pos:start="363:16" pos:end="363:62"><literal type="string" pos:start="363:16" pos:end="363:62">"variance_aq is ignored when lumi_aq is set.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="369:5" pos:end="369:27">/* Luminance Masking */</comment>

    <if_stmt pos:start="371:5" pos:end="389:5"><if pos:start="371:5" pos:end="389:5">if <condition pos:start="371:8" pos:end="371:19">(<expr pos:start="371:9" pos:end="371:18"><name pos:start="371:9" pos:end="371:18"><name pos:start="371:9" pos:end="371:9">x</name><operator pos:start="371:10" pos:end="371:11">-&gt;</operator><name pos:start="371:12" pos:end="371:18">lumi_aq</name></name></expr>)</condition> <block pos:start="371:21" pos:end="389:5">{<block_content pos:start="373:9" pos:end="387:38">

        <expr_stmt pos:start="373:9" pos:end="373:54"><expr pos:start="373:9" pos:end="373:53"><name pos:start="373:9" pos:end="373:24"><name pos:start="373:9" pos:end="373:17">masking_l</name><operator pos:start="373:18" pos:end="373:18">.</operator><name pos:start="373:19" pos:end="373:24">method</name></name>                          <operator pos:start="373:51" pos:end="373:51">=</operator> <literal type="number" pos:start="373:53" pos:end="373:53">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:76"><expr pos:start="375:9" pos:end="375:75"><name pos:start="375:9" pos:end="375:44"><name pos:start="375:9" pos:end="375:15">plugins</name><index pos:start="375:16" pos:end="375:44">[<expr pos:start="375:17" pos:end="375:43"><name pos:start="375:17" pos:end="375:43"><name pos:start="375:17" pos:end="375:31">xvid_enc_create</name><operator pos:start="375:32" pos:end="375:32">.</operator><name pos:start="375:33" pos:end="375:43">num_plugins</name></name></expr>]</index></name><operator pos:start="375:45" pos:end="375:45">.</operator><name pos:start="375:46" pos:end="375:49">func</name> <operator pos:start="375:51" pos:end="375:51">=</operator> <name pos:start="375:53" pos:end="375:75">xvid_plugin_lumimasking</name></expr>;</expr_stmt>



        <comment type="block" pos:start="379:9" pos:end="381:78">/* The old behavior is that when avctx-&gt;lumi_masking is specified,

         * plugins[...].param = NULL. Trying to keep the old behavior here. */</comment>

        <expr_stmt pos:start="383:9" pos:end="385:52"><expr pos:start="383:9" pos:end="385:51"><name pos:start="383:9" pos:end="383:44"><name pos:start="383:9" pos:end="383:15">plugins</name><index pos:start="383:16" pos:end="383:44">[<expr pos:start="383:17" pos:end="383:43"><name pos:start="383:17" pos:end="383:43"><name pos:start="383:17" pos:end="383:31">xvid_enc_create</name><operator pos:start="383:32" pos:end="383:32">.</operator><name pos:start="383:33" pos:end="383:43">num_plugins</name></name></expr>]</index></name><operator pos:start="383:45" pos:end="383:45">.</operator><name pos:start="383:46" pos:end="383:50">param</name> <operator pos:start="383:52" pos:end="383:52">=</operator>

            <ternary pos:start="385:13" pos:end="385:51"><condition pos:start="385:13" pos:end="385:33"><expr pos:start="385:13" pos:end="385:31"><name pos:start="385:13" pos:end="385:31"><name pos:start="385:13" pos:end="385:17">avctx</name><operator pos:start="385:18" pos:end="385:19">-&gt;</operator><name pos:start="385:20" pos:end="385:31">lumi_masking</name></name></expr> ?</condition><then pos:start="385:35" pos:end="385:38"> <expr pos:start="385:35" pos:end="385:38"><name pos:start="385:35" pos:end="385:38">NULL</name></expr> </then><else pos:start="385:40" pos:end="385:51">: <expr pos:start="385:42" pos:end="385:51"><operator pos:start="385:42" pos:end="385:42">&amp;</operator><name pos:start="385:43" pos:end="385:51">masking_l</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="387:9" pos:end="387:38"><expr pos:start="387:9" pos:end="387:37"><name pos:start="387:9" pos:end="387:35"><name pos:start="387:9" pos:end="387:23">xvid_enc_create</name><operator pos:start="387:24" pos:end="387:24">.</operator><name pos:start="387:25" pos:end="387:35">num_plugins</name></name><operator pos:start="387:36" pos:end="387:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="393:5" pos:end="393:21">/* Variance AQ */</comment>

    <if_stmt pos:start="395:5" pos:end="405:5"><if pos:start="395:5" pos:end="405:5">if <condition pos:start="395:8" pos:end="395:23">(<expr pos:start="395:9" pos:end="395:22"><name pos:start="395:9" pos:end="395:22"><name pos:start="395:9" pos:end="395:9">x</name><operator pos:start="395:10" pos:end="395:11">-&gt;</operator><name pos:start="395:12" pos:end="395:22">variance_aq</name></name></expr>)</condition> <block pos:start="395:25" pos:end="405:5">{<block_content pos:start="397:9" pos:end="403:38">

        <expr_stmt pos:start="397:9" pos:end="397:55"><expr pos:start="397:9" pos:end="397:54"><name pos:start="397:9" pos:end="397:24"><name pos:start="397:9" pos:end="397:17">masking_v</name><operator pos:start="397:18" pos:end="397:18">.</operator><name pos:start="397:19" pos:end="397:24">method</name></name>                           <operator pos:start="397:52" pos:end="397:52">=</operator> <literal type="number" pos:start="397:54" pos:end="397:54">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:77"><expr pos:start="399:9" pos:end="399:76"><name pos:start="399:9" pos:end="399:44"><name pos:start="399:9" pos:end="399:15">plugins</name><index pos:start="399:16" pos:end="399:44">[<expr pos:start="399:17" pos:end="399:43"><name pos:start="399:17" pos:end="399:43"><name pos:start="399:17" pos:end="399:31">xvid_enc_create</name><operator pos:start="399:32" pos:end="399:32">.</operator><name pos:start="399:33" pos:end="399:43">num_plugins</name></name></expr>]</index></name><operator pos:start="399:45" pos:end="399:45">.</operator><name pos:start="399:46" pos:end="399:49">func</name>  <operator pos:start="399:52" pos:end="399:52">=</operator> <name pos:start="399:54" pos:end="399:76">xvid_plugin_lumimasking</name></expr>;</expr_stmt>

        <expr_stmt pos:start="401:9" pos:end="401:64"><expr pos:start="401:9" pos:end="401:63"><name pos:start="401:9" pos:end="401:44"><name pos:start="401:9" pos:end="401:15">plugins</name><index pos:start="401:16" pos:end="401:44">[<expr pos:start="401:17" pos:end="401:43"><name pos:start="401:17" pos:end="401:43"><name pos:start="401:17" pos:end="401:31">xvid_enc_create</name><operator pos:start="401:32" pos:end="401:32">.</operator><name pos:start="401:33" pos:end="401:43">num_plugins</name></name></expr>]</index></name><operator pos:start="401:45" pos:end="401:45">.</operator><name pos:start="401:46" pos:end="401:50">param</name> <operator pos:start="401:52" pos:end="401:52">=</operator> <operator pos:start="401:54" pos:end="401:54">&amp;</operator><name pos:start="401:55" pos:end="401:63">masking_v</name></expr>;</expr_stmt>

        <expr_stmt pos:start="403:9" pos:end="403:38"><expr pos:start="403:9" pos:end="403:37"><name pos:start="403:9" pos:end="403:35"><name pos:start="403:9" pos:end="403:23">xvid_enc_create</name><operator pos:start="403:24" pos:end="403:24">.</operator><name pos:start="403:25" pos:end="403:35">num_plugins</name></name><operator pos:start="403:36" pos:end="403:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="409:5" pos:end="409:14">/* SSIM */</comment>

    <if_stmt pos:start="411:5" pos:end="427:5"><if pos:start="411:5" pos:end="427:5">if <condition pos:start="411:8" pos:end="411:16">(<expr pos:start="411:9" pos:end="411:15"><name pos:start="411:9" pos:end="411:15"><name pos:start="411:9" pos:end="411:9">x</name><operator pos:start="411:10" pos:end="411:11">-&gt;</operator><name pos:start="411:12" pos:end="411:15">ssim</name></name></expr>)</condition> <block pos:start="411:18" pos:end="427:5">{<block_content pos:start="413:9" pos:end="425:38">

        <expr_stmt pos:start="413:9" pos:end="413:70"><expr pos:start="413:9" pos:end="413:69"><name pos:start="413:9" pos:end="413:44"><name pos:start="413:9" pos:end="413:15">plugins</name><index pos:start="413:16" pos:end="413:44">[<expr pos:start="413:17" pos:end="413:43"><name pos:start="413:17" pos:end="413:43"><name pos:start="413:17" pos:end="413:31">xvid_enc_create</name><operator pos:start="413:32" pos:end="413:32">.</operator><name pos:start="413:33" pos:end="413:43">num_plugins</name></name></expr>]</index></name><operator pos:start="413:45" pos:end="413:45">.</operator><name pos:start="413:46" pos:end="413:49">func</name>  <operator pos:start="413:52" pos:end="413:52">=</operator> <name pos:start="413:54" pos:end="413:69">xvid_plugin_ssim</name></expr>;</expr_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:66"><expr pos:start="415:9" pos:end="415:65"><name pos:start="415:9" pos:end="415:24"><name pos:start="415:9" pos:end="415:12">ssim</name><operator pos:start="415:13" pos:end="415:13">.</operator><name pos:start="415:14" pos:end="415:24">b_printstat</name></name>                           <operator pos:start="415:52" pos:end="415:52">=</operator> <name pos:start="415:54" pos:end="415:60"><name pos:start="415:54" pos:end="415:54">x</name><operator pos:start="415:55" pos:end="415:56">-&gt;</operator><name pos:start="415:57" pos:end="415:60">ssim</name></name> <operator pos:start="415:62" pos:end="415:63">==</operator> <literal type="number" pos:start="415:65" pos:end="415:65">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="417:9" pos:end="417:65"><expr pos:start="417:9" pos:end="417:64"><name pos:start="417:9" pos:end="417:16"><name pos:start="417:9" pos:end="417:12">ssim</name><operator pos:start="417:13" pos:end="417:13">.</operator><name pos:start="417:14" pos:end="417:16">acc</name></name>                                   <operator pos:start="417:52" pos:end="417:52">=</operator> <name pos:start="417:54" pos:end="417:64"><name pos:start="417:54" pos:end="417:54">x</name><operator pos:start="417:55" pos:end="417:56">-&gt;</operator><name pos:start="417:57" pos:end="417:64">ssim_acc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:77"><expr pos:start="419:9" pos:end="419:76"><name pos:start="419:9" pos:end="419:22"><name pos:start="419:9" pos:end="419:12">ssim</name><operator pos:start="419:13" pos:end="419:13">.</operator><name pos:start="419:14" pos:end="419:22">cpu_flags</name></name>                             <operator pos:start="419:52" pos:end="419:52">=</operator> <name pos:start="419:54" pos:end="419:76"><name pos:start="419:54" pos:end="419:66">xvid_gbl_init</name><operator pos:start="419:67" pos:end="419:67">.</operator><name pos:start="419:68" pos:end="419:76">cpu_flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="421:9" pos:end="421:55"><expr pos:start="421:9" pos:end="421:54"><name pos:start="421:9" pos:end="421:24"><name pos:start="421:9" pos:end="421:12">ssim</name><operator pos:start="421:13" pos:end="421:13">.</operator><name pos:start="421:14" pos:end="421:24">b_visualize</name></name>                           <operator pos:start="421:52" pos:end="421:52">=</operator> <literal type="number" pos:start="421:54" pos:end="421:54">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:59"><expr pos:start="423:9" pos:end="423:58"><name pos:start="423:9" pos:end="423:44"><name pos:start="423:9" pos:end="423:15">plugins</name><index pos:start="423:16" pos:end="423:44">[<expr pos:start="423:17" pos:end="423:43"><name pos:start="423:17" pos:end="423:43"><name pos:start="423:17" pos:end="423:31">xvid_enc_create</name><operator pos:start="423:32" pos:end="423:32">.</operator><name pos:start="423:33" pos:end="423:43">num_plugins</name></name></expr>]</index></name><operator pos:start="423:45" pos:end="423:45">.</operator><name pos:start="423:46" pos:end="423:50">param</name> <operator pos:start="423:52" pos:end="423:52">=</operator> <operator pos:start="423:54" pos:end="423:54">&amp;</operator><name pos:start="423:55" pos:end="423:58">ssim</name></expr>;</expr_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:38"><expr pos:start="425:9" pos:end="425:37"><name pos:start="425:9" pos:end="425:35"><name pos:start="425:9" pos:end="425:23">xvid_enc_create</name><operator pos:start="425:24" pos:end="425:24">.</operator><name pos:start="425:25" pos:end="425:35">num_plugins</name></name><operator pos:start="425:36" pos:end="425:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="431:5" pos:end="431:35">/* Frame Rate and Key Frames */</comment>

    <expr_stmt pos:start="433:5" pos:end="433:34"><expr pos:start="433:5" pos:end="433:33"><call pos:start="433:5" pos:end="433:33"><name pos:start="433:5" pos:end="433:26">xvid_correct_framerate</name><argument_list pos:start="433:27" pos:end="433:33">(<argument pos:start="433:28" pos:end="433:32"><expr pos:start="433:28" pos:end="433:32"><name pos:start="433:28" pos:end="433:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="435:5" pos:end="435:49"><expr pos:start="435:5" pos:end="435:48"><name pos:start="435:5" pos:end="435:25"><name pos:start="435:5" pos:end="435:19">xvid_enc_create</name><operator pos:start="435:20" pos:end="435:20">.</operator><name pos:start="435:21" pos:end="435:25">fincr</name></name> <operator pos:start="435:27" pos:end="435:27">=</operator> <name pos:start="435:29" pos:end="435:48"><name pos:start="435:29" pos:end="435:33">avctx</name><operator pos:start="435:34" pos:end="435:35">-&gt;</operator><name pos:start="435:36" pos:end="435:44">time_base</name><operator pos:start="435:45" pos:end="435:45">.</operator><name pos:start="435:46" pos:end="435:48">num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="437:5" pos:end="437:49"><expr pos:start="437:5" pos:end="437:48"><name pos:start="437:5" pos:end="437:25"><name pos:start="437:5" pos:end="437:19">xvid_enc_create</name><operator pos:start="437:20" pos:end="437:20">.</operator><name pos:start="437:21" pos:end="437:25">fbase</name></name> <operator pos:start="437:27" pos:end="437:27">=</operator> <name pos:start="437:29" pos:end="437:48"><name pos:start="437:29" pos:end="437:33">avctx</name><operator pos:start="437:34" pos:end="437:35">-&gt;</operator><name pos:start="437:36" pos:end="437:44">time_base</name><operator pos:start="437:45" pos:end="437:45">.</operator><name pos:start="437:46" pos:end="437:48">den</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="439:5" pos:end="445:47"><if pos:start="439:5" pos:end="441:59">if <condition pos:start="439:8" pos:end="439:28">(<expr pos:start="439:9" pos:end="439:27"><name pos:start="439:9" pos:end="439:23"><name pos:start="439:9" pos:end="439:13">avctx</name><operator pos:start="439:14" pos:end="439:15">-&gt;</operator><name pos:start="439:16" pos:end="439:23">gop_size</name></name> <operator pos:start="439:25" pos:end="439:25">&gt;</operator> <literal type="number" pos:start="439:27" pos:end="439:27">0</literal></expr>)</condition><block type="pseudo" pos:start="441:9" pos:end="441:59"><block_content pos:start="441:9" pos:end="441:59">

        <expr_stmt pos:start="441:9" pos:end="441:59"><expr pos:start="441:9" pos:end="441:58"><name pos:start="441:9" pos:end="441:40"><name pos:start="441:9" pos:end="441:23">xvid_enc_create</name><operator pos:start="441:24" pos:end="441:24">.</operator><name pos:start="441:25" pos:end="441:40">max_key_interval</name></name> <operator pos:start="441:42" pos:end="441:42">=</operator> <name pos:start="441:44" pos:end="441:58"><name pos:start="441:44" pos:end="441:48">avctx</name><operator pos:start="441:49" pos:end="441:50">-&gt;</operator><name pos:start="441:51" pos:end="441:58">gop_size</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="443:5" pos:end="445:47">else<block type="pseudo" pos:start="445:9" pos:end="445:47"><block_content pos:start="445:9" pos:end="445:47">

        <expr_stmt pos:start="445:9" pos:end="445:47"><expr pos:start="445:9" pos:end="445:46"><name pos:start="445:9" pos:end="445:40"><name pos:start="445:9" pos:end="445:23">xvid_enc_create</name><operator pos:start="445:24" pos:end="445:24">.</operator><name pos:start="445:25" pos:end="445:40">max_key_interval</name></name> <operator pos:start="445:42" pos:end="445:42">=</operator> <literal type="number" pos:start="445:44" pos:end="445:46">240</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="445:49" pos:end="445:73">/* Xvid's best default */</comment>



    <comment type="block" pos:start="449:5" pos:end="449:16">/* Quants */</comment>

    <if_stmt pos:start="451:5" pos:end="457:22"><if pos:start="451:5" pos:end="453:22">if <condition pos:start="451:8" pos:end="451:39">(<expr pos:start="451:9" pos:end="451:38"><name pos:start="451:9" pos:end="451:18">xvid_flags</name> <operator pos:start="451:20" pos:end="451:20">&amp;</operator> <name pos:start="451:22" pos:end="451:38">CODEC_FLAG_QSCALE</name></expr>)</condition><block type="pseudo" pos:start="453:9" pos:end="453:22"><block_content pos:start="453:9" pos:end="453:22">

        <expr_stmt pos:start="453:9" pos:end="453:22"><expr pos:start="453:9" pos:end="453:21"><name pos:start="453:9" pos:end="453:17"><name pos:start="453:9" pos:end="453:9">x</name><operator pos:start="453:10" pos:end="453:11">-&gt;</operator><name pos:start="453:12" pos:end="453:17">qscale</name></name> <operator pos:start="453:19" pos:end="453:19">=</operator> <literal type="number" pos:start="453:21" pos:end="453:21">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="455:5" pos:end="457:22">else<block type="pseudo" pos:start="457:9" pos:end="457:22"><block_content pos:start="457:9" pos:end="457:22">

        <expr_stmt pos:start="457:9" pos:end="457:22"><expr pos:start="457:9" pos:end="457:21"><name pos:start="457:9" pos:end="457:17"><name pos:start="457:9" pos:end="457:9">x</name><operator pos:start="457:10" pos:end="457:11">-&gt;</operator><name pos:start="457:12" pos:end="457:17">qscale</name></name> <operator pos:start="457:19" pos:end="457:19">=</operator> <literal type="number" pos:start="457:21" pos:end="457:21">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="461:5" pos:end="461:47"><expr pos:start="461:5" pos:end="461:46"><name pos:start="461:5" pos:end="461:32"><name pos:start="461:5" pos:end="461:19">xvid_enc_create</name><operator pos:start="461:20" pos:end="461:20">.</operator><name pos:start="461:21" pos:end="461:29">min_quant</name><index pos:start="461:30" pos:end="461:32">[<expr pos:start="461:31" pos:end="461:31"><literal type="number" pos:start="461:31" pos:end="461:31">0</literal></expr>]</index></name> <operator pos:start="461:34" pos:end="461:34">=</operator> <name pos:start="461:36" pos:end="461:46"><name pos:start="461:36" pos:end="461:40">avctx</name><operator pos:start="461:41" pos:end="461:42">-&gt;</operator><name pos:start="461:43" pos:end="461:46">qmin</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="463:5" pos:end="463:47"><expr pos:start="463:5" pos:end="463:46"><name pos:start="463:5" pos:end="463:32"><name pos:start="463:5" pos:end="463:19">xvid_enc_create</name><operator pos:start="463:20" pos:end="463:20">.</operator><name pos:start="463:21" pos:end="463:29">min_quant</name><index pos:start="463:30" pos:end="463:32">[<expr pos:start="463:31" pos:end="463:31"><literal type="number" pos:start="463:31" pos:end="463:31">1</literal></expr>]</index></name> <operator pos:start="463:34" pos:end="463:34">=</operator> <name pos:start="463:36" pos:end="463:46"><name pos:start="463:36" pos:end="463:40">avctx</name><operator pos:start="463:41" pos:end="463:42">-&gt;</operator><name pos:start="463:43" pos:end="463:46">qmin</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="465:5" pos:end="465:47"><expr pos:start="465:5" pos:end="465:46"><name pos:start="465:5" pos:end="465:32"><name pos:start="465:5" pos:end="465:19">xvid_enc_create</name><operator pos:start="465:20" pos:end="465:20">.</operator><name pos:start="465:21" pos:end="465:29">min_quant</name><index pos:start="465:30" pos:end="465:32">[<expr pos:start="465:31" pos:end="465:31"><literal type="number" pos:start="465:31" pos:end="465:31">2</literal></expr>]</index></name> <operator pos:start="465:34" pos:end="465:34">=</operator> <name pos:start="465:36" pos:end="465:46"><name pos:start="465:36" pos:end="465:40">avctx</name><operator pos:start="465:41" pos:end="465:42">-&gt;</operator><name pos:start="465:43" pos:end="465:46">qmin</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="467:5" pos:end="467:47"><expr pos:start="467:5" pos:end="467:46"><name pos:start="467:5" pos:end="467:32"><name pos:start="467:5" pos:end="467:19">xvid_enc_create</name><operator pos:start="467:20" pos:end="467:20">.</operator><name pos:start="467:21" pos:end="467:29">max_quant</name><index pos:start="467:30" pos:end="467:32">[<expr pos:start="467:31" pos:end="467:31"><literal type="number" pos:start="467:31" pos:end="467:31">0</literal></expr>]</index></name> <operator pos:start="467:34" pos:end="467:34">=</operator> <name pos:start="467:36" pos:end="467:46"><name pos:start="467:36" pos:end="467:40">avctx</name><operator pos:start="467:41" pos:end="467:42">-&gt;</operator><name pos:start="467:43" pos:end="467:46">qmax</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="469:5" pos:end="469:47"><expr pos:start="469:5" pos:end="469:46"><name pos:start="469:5" pos:end="469:32"><name pos:start="469:5" pos:end="469:19">xvid_enc_create</name><operator pos:start="469:20" pos:end="469:20">.</operator><name pos:start="469:21" pos:end="469:29">max_quant</name><index pos:start="469:30" pos:end="469:32">[<expr pos:start="469:31" pos:end="469:31"><literal type="number" pos:start="469:31" pos:end="469:31">1</literal></expr>]</index></name> <operator pos:start="469:34" pos:end="469:34">=</operator> <name pos:start="469:36" pos:end="469:46"><name pos:start="469:36" pos:end="469:40">avctx</name><operator pos:start="469:41" pos:end="469:42">-&gt;</operator><name pos:start="469:43" pos:end="469:46">qmax</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="471:5" pos:end="471:47"><expr pos:start="471:5" pos:end="471:46"><name pos:start="471:5" pos:end="471:32"><name pos:start="471:5" pos:end="471:19">xvid_enc_create</name><operator pos:start="471:20" pos:end="471:20">.</operator><name pos:start="471:21" pos:end="471:29">max_quant</name><index pos:start="471:30" pos:end="471:32">[<expr pos:start="471:31" pos:end="471:31"><literal type="number" pos:start="471:31" pos:end="471:31">2</literal></expr>]</index></name> <operator pos:start="471:34" pos:end="471:34">=</operator> <name pos:start="471:36" pos:end="471:46"><name pos:start="471:36" pos:end="471:40">avctx</name><operator pos:start="471:41" pos:end="471:42">-&gt;</operator><name pos:start="471:43" pos:end="471:46">qmax</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="475:5" pos:end="475:24">/* Quant Matrices */</comment>

    <expr_stmt pos:start="477:5" pos:end="479:27"><expr pos:start="477:5" pos:end="479:26"><name pos:start="477:5" pos:end="477:19"><name pos:start="477:5" pos:end="477:5">x</name><operator pos:start="477:6" pos:end="477:7">-&gt;</operator><name pos:start="477:8" pos:end="477:19">intra_matrix</name></name> <operator pos:start="477:21" pos:end="477:21">=</operator>

    <name pos:start="479:5" pos:end="479:19"><name pos:start="479:5" pos:end="479:5">x</name><operator pos:start="479:6" pos:end="479:7">-&gt;</operator><name pos:start="479:8" pos:end="479:19">inter_matrix</name></name> <operator pos:start="479:21" pos:end="479:21">=</operator> <name pos:start="479:23" pos:end="479:26">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="481:5" pos:end="483:43"><if pos:start="481:5" pos:end="483:43">if <condition pos:start="481:8" pos:end="481:26">(<expr pos:start="481:9" pos:end="481:25"><name pos:start="481:9" pos:end="481:25"><name pos:start="481:9" pos:end="481:13">avctx</name><operator pos:start="481:14" pos:end="481:15">-&gt;</operator><name pos:start="481:16" pos:end="481:25">mpeg_quant</name></name></expr>)</condition><block type="pseudo" pos:start="483:9" pos:end="483:43"><block_content pos:start="483:9" pos:end="483:43">

        <expr_stmt pos:start="483:9" pos:end="483:43"><expr pos:start="483:9" pos:end="483:42"><name pos:start="483:9" pos:end="483:20"><name pos:start="483:9" pos:end="483:9">x</name><operator pos:start="483:10" pos:end="483:11">-&gt;</operator><name pos:start="483:12" pos:end="483:20">vol_flags</name></name> <operator pos:start="483:22" pos:end="483:23">|=</operator> <name pos:start="483:25" pos:end="483:42">XVID_VOL_MPEGQUANT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="485:5" pos:end="533:5"><if pos:start="485:5" pos:end="533:5">if <condition pos:start="485:8" pos:end="485:53">(<expr pos:start="485:9" pos:end="485:52"><operator pos:start="485:9" pos:end="485:9">(</operator><name pos:start="485:10" pos:end="485:28"><name pos:start="485:10" pos:end="485:14">avctx</name><operator pos:start="485:15" pos:end="485:16">-&gt;</operator><name pos:start="485:17" pos:end="485:28">intra_matrix</name></name> <operator pos:start="485:30" pos:end="485:31">||</operator> <name pos:start="485:33" pos:end="485:51"><name pos:start="485:33" pos:end="485:37">avctx</name><operator pos:start="485:38" pos:end="485:39">-&gt;</operator><name pos:start="485:40" pos:end="485:51">inter_matrix</name></name><operator pos:start="485:52" pos:end="485:52">)</operator></expr>)</condition> <block pos:start="485:55" pos:end="533:5">{<block_content pos:start="487:9" pos:end="531:9">

        <expr_stmt pos:start="487:9" pos:end="487:43"><expr pos:start="487:9" pos:end="487:42"><name pos:start="487:9" pos:end="487:20"><name pos:start="487:9" pos:end="487:9">x</name><operator pos:start="487:10" pos:end="487:11">-&gt;</operator><name pos:start="487:12" pos:end="487:20">vol_flags</name></name> <operator pos:start="487:22" pos:end="487:23">|=</operator> <name pos:start="487:25" pos:end="487:42">XVID_VOL_MPEGQUANT</name></expr>;</expr_stmt>



        <if_stmt pos:start="491:9" pos:end="503:25"><if pos:start="491:9" pos:end="501:9">if <condition pos:start="491:12" pos:end="491:32">(<expr pos:start="491:13" pos:end="491:31"><name pos:start="491:13" pos:end="491:31"><name pos:start="491:13" pos:end="491:17">avctx</name><operator pos:start="491:18" pos:end="491:19">-&gt;</operator><name pos:start="491:20" pos:end="491:31">intra_matrix</name></name></expr>)</condition> <block pos:start="491:34" pos:end="501:9">{<block_content pos:start="493:13" pos:end="499:39">

            <expr_stmt pos:start="493:13" pos:end="493:50"><expr pos:start="493:13" pos:end="493:49"><name pos:start="493:13" pos:end="493:17">intra</name>           <operator pos:start="493:29" pos:end="493:29">=</operator> <name pos:start="493:31" pos:end="493:49"><name pos:start="493:31" pos:end="493:35">avctx</name><operator pos:start="493:36" pos:end="493:37">-&gt;</operator><name pos:start="493:38" pos:end="493:49">intra_matrix</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="495:13" pos:end="495:68"><expr pos:start="495:13" pos:end="495:67"><name pos:start="495:13" pos:end="495:27"><name pos:start="495:13" pos:end="495:13">x</name><operator pos:start="495:14" pos:end="495:15">-&gt;</operator><name pos:start="495:16" pos:end="495:27">intra_matrix</name></name> <operator pos:start="495:29" pos:end="495:29">=</operator> <call pos:start="495:31" pos:end="495:67"><name pos:start="495:31" pos:end="495:39">av_malloc</name><argument_list pos:start="495:40" pos:end="495:67">(<argument pos:start="495:41" pos:end="495:66"><expr pos:start="495:41" pos:end="495:66">sizeof<operator pos:start="495:47" pos:end="495:47">(</operator><name pos:start="495:48" pos:end="495:55">unsigned</name> <name pos:start="495:57" pos:end="495:60">char</name><operator pos:start="495:61" pos:end="495:61">)</operator> <operator pos:start="495:63" pos:end="495:63">*</operator> <literal type="number" pos:start="495:65" pos:end="495:66">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="497:13" pos:end="499:39"><if pos:start="497:13" pos:end="499:39">if <condition pos:start="497:16" pos:end="497:33">(<expr pos:start="497:17" pos:end="497:32"><operator pos:start="497:17" pos:end="497:17">!</operator><name pos:start="497:18" pos:end="497:32"><name pos:start="497:18" pos:end="497:18">x</name><operator pos:start="497:19" pos:end="497:20">-&gt;</operator><name pos:start="497:21" pos:end="497:32">intra_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="499:17" pos:end="499:39"><block_content pos:start="499:17" pos:end="499:39">

                <return pos:start="499:17" pos:end="499:39">return <expr pos:start="499:24" pos:end="499:38"><call pos:start="499:24" pos:end="499:38"><name pos:start="499:24" pos:end="499:30">AVERROR</name><argument_list pos:start="499:31" pos:end="499:38">(<argument pos:start="499:32" pos:end="499:37"><expr pos:start="499:32" pos:end="499:37"><name pos:start="499:32" pos:end="499:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="501:11" pos:end="503:25">else<block type="pseudo" pos:start="503:13" pos:end="503:25"><block_content pos:start="503:13" pos:end="503:25">

            <expr_stmt pos:start="503:13" pos:end="503:25"><expr pos:start="503:13" pos:end="503:24"><name pos:start="503:13" pos:end="503:17">intra</name> <operator pos:start="503:19" pos:end="503:19">=</operator> <name pos:start="503:21" pos:end="503:24">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="505:9" pos:end="517:25"><if pos:start="505:9" pos:end="515:9">if <condition pos:start="505:12" pos:end="505:32">(<expr pos:start="505:13" pos:end="505:31"><name pos:start="505:13" pos:end="505:31"><name pos:start="505:13" pos:end="505:17">avctx</name><operator pos:start="505:18" pos:end="505:19">-&gt;</operator><name pos:start="505:20" pos:end="505:31">inter_matrix</name></name></expr>)</condition> <block pos:start="505:34" pos:end="515:9">{<block_content pos:start="507:13" pos:end="513:39">

            <expr_stmt pos:start="507:13" pos:end="507:50"><expr pos:start="507:13" pos:end="507:49"><name pos:start="507:13" pos:end="507:17">inter</name>           <operator pos:start="507:29" pos:end="507:29">=</operator> <name pos:start="507:31" pos:end="507:49"><name pos:start="507:31" pos:end="507:35">avctx</name><operator pos:start="507:36" pos:end="507:37">-&gt;</operator><name pos:start="507:38" pos:end="507:49">inter_matrix</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="509:13" pos:end="509:68"><expr pos:start="509:13" pos:end="509:67"><name pos:start="509:13" pos:end="509:27"><name pos:start="509:13" pos:end="509:13">x</name><operator pos:start="509:14" pos:end="509:15">-&gt;</operator><name pos:start="509:16" pos:end="509:27">inter_matrix</name></name> <operator pos:start="509:29" pos:end="509:29">=</operator> <call pos:start="509:31" pos:end="509:67"><name pos:start="509:31" pos:end="509:39">av_malloc</name><argument_list pos:start="509:40" pos:end="509:67">(<argument pos:start="509:41" pos:end="509:66"><expr pos:start="509:41" pos:end="509:66">sizeof<operator pos:start="509:47" pos:end="509:47">(</operator><name pos:start="509:48" pos:end="509:55">unsigned</name> <name pos:start="509:57" pos:end="509:60">char</name><operator pos:start="509:61" pos:end="509:61">)</operator> <operator pos:start="509:63" pos:end="509:63">*</operator> <literal type="number" pos:start="509:65" pos:end="509:66">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="511:13" pos:end="513:39"><if pos:start="511:13" pos:end="513:39">if <condition pos:start="511:16" pos:end="511:33">(<expr pos:start="511:17" pos:end="511:32"><operator pos:start="511:17" pos:end="511:17">!</operator><name pos:start="511:18" pos:end="511:32"><name pos:start="511:18" pos:end="511:18">x</name><operator pos:start="511:19" pos:end="511:20">-&gt;</operator><name pos:start="511:21" pos:end="511:32">inter_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="513:17" pos:end="513:39"><block_content pos:start="513:17" pos:end="513:39">

                <return pos:start="513:17" pos:end="513:39">return <expr pos:start="513:24" pos:end="513:38"><call pos:start="513:24" pos:end="513:38"><name pos:start="513:24" pos:end="513:30">AVERROR</name><argument_list pos:start="513:31" pos:end="513:38">(<argument pos:start="513:32" pos:end="513:37"><expr pos:start="513:32" pos:end="513:37"><name pos:start="513:32" pos:end="513:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="515:11" pos:end="517:25">else<block type="pseudo" pos:start="517:13" pos:end="517:25"><block_content pos:start="517:13" pos:end="517:25">

            <expr_stmt pos:start="517:13" pos:end="517:25"><expr pos:start="517:13" pos:end="517:24"><name pos:start="517:13" pos:end="517:17">inter</name> <operator pos:start="517:19" pos:end="517:19">=</operator> <name pos:start="517:21" pos:end="517:24">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <for pos:start="521:9" pos:end="531:9">for <control pos:start="521:13" pos:end="521:32">(<init pos:start="521:14" pos:end="521:19"><expr pos:start="521:14" pos:end="521:18"><name pos:start="521:14" pos:end="521:14">i</name> <operator pos:start="521:16" pos:end="521:16">=</operator> <literal type="number" pos:start="521:18" pos:end="521:18">0</literal></expr>;</init> <condition pos:start="521:21" pos:end="521:27"><expr pos:start="521:21" pos:end="521:26"><name pos:start="521:21" pos:end="521:21">i</name> <operator pos:start="521:23" pos:end="521:23">&lt;</operator> <literal type="number" pos:start="521:25" pos:end="521:26">64</literal></expr>;</condition> <incr pos:start="521:29" pos:end="521:31"><expr pos:start="521:29" pos:end="521:31"><name pos:start="521:29" pos:end="521:29">i</name><operator pos:start="521:30" pos:end="521:31">++</operator></expr></incr>)</control> <block pos:start="521:34" pos:end="531:9">{<block_content pos:start="523:13" pos:end="529:62">

            <if_stmt pos:start="523:13" pos:end="525:62"><if pos:start="523:13" pos:end="525:62">if <condition pos:start="523:16" pos:end="523:22">(<expr pos:start="523:17" pos:end="523:21"><name pos:start="523:17" pos:end="523:21">intra</name></expr>)</condition><block type="pseudo" pos:start="525:17" pos:end="525:62"><block_content pos:start="525:17" pos:end="525:62">

                <expr_stmt pos:start="525:17" pos:end="525:62"><expr pos:start="525:17" pos:end="525:61"><name pos:start="525:17" pos:end="525:34"><name pos:start="525:17" pos:end="525:17">x</name><operator pos:start="525:18" pos:end="525:19">-&gt;</operator><name pos:start="525:20" pos:end="525:31">intra_matrix</name><index pos:start="525:32" pos:end="525:34">[<expr pos:start="525:33" pos:end="525:33"><name pos:start="525:33" pos:end="525:33">i</name></expr>]</index></name> <operator pos:start="525:36" pos:end="525:36">=</operator> <operator pos:start="525:38" pos:end="525:38">(</operator><name pos:start="525:39" pos:end="525:46">unsigned</name> <name pos:start="525:48" pos:end="525:51">char</name><operator pos:start="525:52" pos:end="525:52">)</operator> <name pos:start="525:54" pos:end="525:61"><name pos:start="525:54" pos:end="525:58">intra</name><index pos:start="525:59" pos:end="525:61">[<expr pos:start="525:60" pos:end="525:60"><name pos:start="525:60" pos:end="525:60">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="527:13" pos:end="529:62"><if pos:start="527:13" pos:end="529:62">if <condition pos:start="527:16" pos:end="527:22">(<expr pos:start="527:17" pos:end="527:21"><name pos:start="527:17" pos:end="527:21">inter</name></expr>)</condition><block type="pseudo" pos:start="529:17" pos:end="529:62"><block_content pos:start="529:17" pos:end="529:62">

                <expr_stmt pos:start="529:17" pos:end="529:62"><expr pos:start="529:17" pos:end="529:61"><name pos:start="529:17" pos:end="529:34"><name pos:start="529:17" pos:end="529:17">x</name><operator pos:start="529:18" pos:end="529:19">-&gt;</operator><name pos:start="529:20" pos:end="529:31">inter_matrix</name><index pos:start="529:32" pos:end="529:34">[<expr pos:start="529:33" pos:end="529:33"><name pos:start="529:33" pos:end="529:33">i</name></expr>]</index></name> <operator pos:start="529:36" pos:end="529:36">=</operator> <operator pos:start="529:38" pos:end="529:38">(</operator><name pos:start="529:39" pos:end="529:46">unsigned</name> <name pos:start="529:48" pos:end="529:51">char</name><operator pos:start="529:52" pos:end="529:52">)</operator> <name pos:start="529:54" pos:end="529:61"><name pos:start="529:54" pos:end="529:58">inter</name><index pos:start="529:59" pos:end="529:61">[<expr pos:start="529:60" pos:end="529:60"><name pos:start="529:60" pos:end="529:60">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="537:5" pos:end="537:23">/* Misc Settings */</comment>

    <expr_stmt pos:start="539:5" pos:end="539:41"><expr pos:start="539:5" pos:end="539:40"><name pos:start="539:5" pos:end="539:36"><name pos:start="539:5" pos:end="539:19">xvid_enc_create</name><operator pos:start="539:20" pos:end="539:20">.</operator><name pos:start="539:21" pos:end="539:36">frame_drop_ratio</name></name> <operator pos:start="539:38" pos:end="539:38">=</operator> <literal type="number" pos:start="539:40" pos:end="539:40">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="541:5" pos:end="541:41"><expr pos:start="541:5" pos:end="541:40"><name pos:start="541:5" pos:end="541:26"><name pos:start="541:5" pos:end="541:19">xvid_enc_create</name><operator pos:start="541:20" pos:end="541:20">.</operator><name pos:start="541:21" pos:end="541:26">global</name></name>           <operator pos:start="541:38" pos:end="541:38">=</operator> <literal type="number" pos:start="541:40" pos:end="541:40">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="543:5" pos:end="545:57"><if pos:start="543:5" pos:end="545:57">if <condition pos:start="543:8" pos:end="543:43">(<expr pos:start="543:9" pos:end="543:42"><name pos:start="543:9" pos:end="543:18">xvid_flags</name> <operator pos:start="543:20" pos:end="543:20">&amp;</operator> <name pos:start="543:22" pos:end="543:42">CODEC_FLAG_CLOSED_GOP</name></expr>)</condition><block type="pseudo" pos:start="545:9" pos:end="545:57"><block_content pos:start="545:9" pos:end="545:57">

        <expr_stmt pos:start="545:9" pos:end="545:57"><expr pos:start="545:9" pos:end="545:56"><name pos:start="545:9" pos:end="545:30"><name pos:start="545:9" pos:end="545:23">xvid_enc_create</name><operator pos:start="545:24" pos:end="545:24">.</operator><name pos:start="545:25" pos:end="545:30">global</name></name> <operator pos:start="545:32" pos:end="545:33">|=</operator> <name pos:start="545:35" pos:end="545:56">XVID_GLOBAL_CLOSED_GOP</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="549:5" pos:end="549:57">/* Determines which codec mode we are operating in */</comment>

    <expr_stmt pos:start="551:5" pos:end="551:33"><expr pos:start="551:5" pos:end="551:32"><name pos:start="551:5" pos:end="551:20"><name pos:start="551:5" pos:end="551:9">avctx</name><operator pos:start="551:10" pos:end="551:11">-&gt;</operator><name pos:start="551:12" pos:end="551:20">extradata</name></name>      <operator pos:start="551:27" pos:end="551:27">=</operator> <name pos:start="551:29" pos:end="551:32">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="553:5" pos:end="553:30"><expr pos:start="553:5" pos:end="553:29"><name pos:start="553:5" pos:end="553:25"><name pos:start="553:5" pos:end="553:9">avctx</name><operator pos:start="553:10" pos:end="553:11">-&gt;</operator><name pos:start="553:12" pos:end="553:25">extradata_size</name></name> <operator pos:start="553:27" pos:end="553:27">=</operator> <literal type="number" pos:start="553:29" pos:end="553:29">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="555:5" pos:end="573:5"><if pos:start="555:5" pos:end="563:5">if <condition pos:start="555:8" pos:end="555:46">(<expr pos:start="555:9" pos:end="555:45"><name pos:start="555:9" pos:end="555:18">xvid_flags</name> <operator pos:start="555:20" pos:end="555:20">&amp;</operator> <name pos:start="555:22" pos:end="555:45">CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="555:48" pos:end="563:5">{<block_content pos:start="559:9" pos:end="561:48">

        <comment type="block" pos:start="557:9" pos:end="557:55">/* In this case, we are claiming to be MPEG4 */</comment>

        <expr_stmt pos:start="559:9" pos:end="559:32"><expr pos:start="559:9" pos:end="559:31"><name pos:start="559:9" pos:end="559:27"><name pos:start="559:9" pos:end="559:9">x</name><operator pos:start="559:10" pos:end="559:11">-&gt;</operator><name pos:start="559:12" pos:end="559:27">quicktime_format</name></name> <operator pos:start="559:29" pos:end="559:29">=</operator> <literal type="number" pos:start="559:31" pos:end="559:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="561:9" pos:end="561:48"><expr pos:start="561:9" pos:end="561:47"><name pos:start="561:9" pos:end="561:23"><name pos:start="561:9" pos:end="561:13">avctx</name><operator pos:start="561:14" pos:end="561:15">-&gt;</operator><name pos:start="561:16" pos:end="561:23">codec_id</name></name>     <operator pos:start="561:29" pos:end="561:29">=</operator> <name pos:start="561:31" pos:end="561:47">AV_CODEC_ID_MPEG4</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="563:7" pos:end="573:5">else <block pos:start="563:12" pos:end="573:5">{<block_content pos:start="567:9" pos:end="571:47">

        <comment type="block" pos:start="565:9" pos:end="565:40">/* We are claiming to be Xvid */</comment>

        <expr_stmt pos:start="567:9" pos:end="567:32"><expr pos:start="567:9" pos:end="567:31"><name pos:start="567:9" pos:end="567:27"><name pos:start="567:9" pos:end="567:9">x</name><operator pos:start="567:10" pos:end="567:11">-&gt;</operator><name pos:start="567:12" pos:end="567:27">quicktime_format</name></name> <operator pos:start="567:29" pos:end="567:29">=</operator> <literal type="number" pos:start="567:31" pos:end="567:31">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="569:9" pos:end="571:47"><if pos:start="569:9" pos:end="571:47">if <condition pos:start="569:12" pos:end="569:30">(<expr pos:start="569:13" pos:end="569:29"><operator pos:start="569:13" pos:end="569:13">!</operator><name pos:start="569:14" pos:end="569:29"><name pos:start="569:14" pos:end="569:18">avctx</name><operator pos:start="569:19" pos:end="569:20">-&gt;</operator><name pos:start="569:21" pos:end="569:29">codec_tag</name></name></expr>)</condition><block type="pseudo" pos:start="571:13" pos:end="571:47"><block_content pos:start="571:13" pos:end="571:47">

            <expr_stmt pos:start="571:13" pos:end="571:47"><expr pos:start="571:13" pos:end="571:46"><name pos:start="571:13" pos:end="571:28"><name pos:start="571:13" pos:end="571:17">avctx</name><operator pos:start="571:18" pos:end="571:19">-&gt;</operator><name pos:start="571:20" pos:end="571:28">codec_tag</name></name> <operator pos:start="571:30" pos:end="571:30">=</operator> <call pos:start="571:32" pos:end="571:46"><name pos:start="571:32" pos:end="571:38">AV_RL32</name><argument_list pos:start="571:39" pos:end="571:46">(<argument pos:start="571:40" pos:end="571:45"><expr pos:start="571:40" pos:end="571:45"><literal type="string" pos:start="571:40" pos:end="571:45">"xvid"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="577:5" pos:end="577:17">/* Bframes */</comment>

    <expr_stmt pos:start="579:5" pos:end="579:56"><expr pos:start="579:5" pos:end="579:55"><name pos:start="579:5" pos:end="579:31"><name pos:start="579:5" pos:end="579:19">xvid_enc_create</name><operator pos:start="579:20" pos:end="579:20">.</operator><name pos:start="579:21" pos:end="579:31">max_bframes</name></name>   <operator pos:start="579:35" pos:end="579:35">=</operator> <name pos:start="579:37" pos:end="579:55"><name pos:start="579:37" pos:end="579:41">avctx</name><operator pos:start="579:42" pos:end="579:43">-&gt;</operator><name pos:start="579:44" pos:end="579:55">max_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="581:5" pos:end="581:64"><expr pos:start="581:5" pos:end="581:63"><name pos:start="581:5" pos:end="581:33"><name pos:start="581:5" pos:end="581:19">xvid_enc_create</name><operator pos:start="581:20" pos:end="581:20">.</operator><name pos:start="581:21" pos:end="581:33">bquant_offset</name></name> <operator pos:start="581:35" pos:end="581:35">=</operator> <literal type="number" pos:start="581:37" pos:end="581:39">100</literal> <operator pos:start="581:41" pos:end="581:41">*</operator> <name pos:start="581:43" pos:end="581:63"><name pos:start="581:43" pos:end="581:47">avctx</name><operator pos:start="581:48" pos:end="581:49">-&gt;</operator><name pos:start="581:50" pos:end="581:63">b_quant_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="583:5" pos:end="583:64"><expr pos:start="583:5" pos:end="583:63"><name pos:start="583:5" pos:end="583:32"><name pos:start="583:5" pos:end="583:19">xvid_enc_create</name><operator pos:start="583:20" pos:end="583:20">.</operator><name pos:start="583:21" pos:end="583:32">bquant_ratio</name></name>  <operator pos:start="583:35" pos:end="583:35">=</operator> <literal type="number" pos:start="583:37" pos:end="583:39">100</literal> <operator pos:start="583:41" pos:end="583:41">*</operator> <name pos:start="583:43" pos:end="583:63"><name pos:start="583:43" pos:end="583:47">avctx</name><operator pos:start="583:48" pos:end="583:49">-&gt;</operator><name pos:start="583:50" pos:end="583:63">b_quant_factor</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="585:5" pos:end="587:53"><if pos:start="585:5" pos:end="587:53">if <condition pos:start="585:8" pos:end="585:56">(<expr pos:start="585:9" pos:end="585:55"><name pos:start="585:9" pos:end="585:27"><name pos:start="585:9" pos:end="585:13">avctx</name><operator pos:start="585:14" pos:end="585:15">-&gt;</operator><name pos:start="585:16" pos:end="585:27">max_b_frames</name></name> <operator pos:start="585:29" pos:end="585:29">&gt;</operator> <literal type="number" pos:start="585:31" pos:end="585:31">0</literal> <operator pos:start="585:33" pos:end="585:34">&amp;&amp;</operator> <operator pos:start="585:36" pos:end="585:36">!</operator><name pos:start="585:37" pos:end="585:55"><name pos:start="585:37" pos:end="585:37">x</name><operator pos:start="585:38" pos:end="585:39">-&gt;</operator><name pos:start="585:40" pos:end="585:55">quicktime_format</name></name></expr>)</condition><block type="pseudo" pos:start="587:9" pos:end="587:53"><block_content pos:start="587:9" pos:end="587:53">

        <expr_stmt pos:start="587:9" pos:end="587:53"><expr pos:start="587:9" pos:end="587:52"><name pos:start="587:9" pos:end="587:30"><name pos:start="587:9" pos:end="587:23">xvid_enc_create</name><operator pos:start="587:24" pos:end="587:24">.</operator><name pos:start="587:25" pos:end="587:30">global</name></name> <operator pos:start="587:32" pos:end="587:33">|=</operator> <name pos:start="587:35" pos:end="587:52">XVID_GLOBAL_PACKED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="591:5" pos:end="591:32">/* Create encoder context */</comment>

    <expr_stmt pos:start="593:5" pos:end="593:70"><expr pos:start="593:5" pos:end="593:69"><name pos:start="593:5" pos:end="593:8">xerr</name> <operator pos:start="593:10" pos:end="593:10">=</operator> <call pos:start="593:12" pos:end="593:69"><name pos:start="593:12" pos:end="593:22">xvid_encore</name><argument_list pos:start="593:23" pos:end="593:69">(<argument pos:start="593:24" pos:end="593:27"><expr pos:start="593:24" pos:end="593:27"><name pos:start="593:24" pos:end="593:27">NULL</name></expr></argument>, <argument pos:start="593:30" pos:end="593:44"><expr pos:start="593:30" pos:end="593:44"><name pos:start="593:30" pos:end="593:44">XVID_ENC_CREATE</name></expr></argument>, <argument pos:start="593:47" pos:end="593:62"><expr pos:start="593:47" pos:end="593:62"><operator pos:start="593:47" pos:end="593:47">&amp;</operator><name pos:start="593:48" pos:end="593:62">xvid_enc_create</name></expr></argument>, <argument pos:start="593:65" pos:end="593:68"><expr pos:start="593:65" pos:end="593:68"><name pos:start="593:65" pos:end="593:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="595:5" pos:end="601:5"><if pos:start="595:5" pos:end="601:5">if <condition pos:start="595:8" pos:end="595:13">(<expr pos:start="595:9" pos:end="595:12"><name pos:start="595:9" pos:end="595:12">xerr</name></expr>)</condition> <block pos:start="595:15" pos:end="601:5">{<block_content pos:start="597:9" pos:end="599:18">

        <expr_stmt pos:start="597:9" pos:end="597:82"><expr pos:start="597:9" pos:end="597:81"><call pos:start="597:9" pos:end="597:81"><name pos:start="597:9" pos:end="597:14">av_log</name><argument_list pos:start="597:15" pos:end="597:81">(<argument pos:start="597:16" pos:end="597:20"><expr pos:start="597:16" pos:end="597:20"><name pos:start="597:16" pos:end="597:20">avctx</name></expr></argument>, <argument pos:start="597:23" pos:end="597:34"><expr pos:start="597:23" pos:end="597:34"><name pos:start="597:23" pos:end="597:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="597:37" pos:end="597:80"><expr pos:start="597:37" pos:end="597:80"><literal type="string" pos:start="597:37" pos:end="597:80">"Xvid: Could not create encoder reference\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="599:9" pos:end="599:18">return <expr pos:start="599:16" pos:end="599:17"><operator pos:start="599:16" pos:end="599:16">-</operator><literal type="number" pos:start="599:17" pos:end="599:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="605:5" pos:end="605:48"><expr pos:start="605:5" pos:end="605:47"><name pos:start="605:5" pos:end="605:21"><name pos:start="605:5" pos:end="605:5">x</name><operator pos:start="605:6" pos:end="605:7">-&gt;</operator><name pos:start="605:8" pos:end="605:21">encoder_handle</name></name>  <operator pos:start="605:24" pos:end="605:24">=</operator> <name pos:start="605:26" pos:end="605:47"><name pos:start="605:26" pos:end="605:40">xvid_enc_create</name><operator pos:start="605:41" pos:end="605:41">.</operator><name pos:start="605:42" pos:end="605:47">handle</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="607:5" pos:end="607:42"><expr pos:start="607:5" pos:end="607:41"><name pos:start="607:5" pos:end="607:22"><name pos:start="607:5" pos:end="607:9">avctx</name><operator pos:start="607:10" pos:end="607:11">-&gt;</operator><name pos:start="607:12" pos:end="607:22">coded_frame</name></name> <operator pos:start="607:24" pos:end="607:24">=</operator> <call pos:start="607:26" pos:end="607:41"><name pos:start="607:26" pos:end="607:39">av_frame_alloc</name><argument_list pos:start="607:40" pos:end="607:41">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="609:5" pos:end="611:31"><if pos:start="609:5" pos:end="611:31">if <condition pos:start="609:8" pos:end="609:28">(<expr pos:start="609:9" pos:end="609:27"><operator pos:start="609:9" pos:end="609:9">!</operator><name pos:start="609:10" pos:end="609:27"><name pos:start="609:10" pos:end="609:14">avctx</name><operator pos:start="609:15" pos:end="609:16">-&gt;</operator><name pos:start="609:17" pos:end="609:27">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="611:9" pos:end="611:31"><block_content pos:start="611:9" pos:end="611:31">

        <return pos:start="611:9" pos:end="611:31">return <expr pos:start="611:16" pos:end="611:30"><call pos:start="611:16" pos:end="611:30"><name pos:start="611:16" pos:end="611:22">AVERROR</name><argument_list pos:start="611:23" pos:end="611:30">(<argument pos:start="611:24" pos:end="611:29"><expr pos:start="611:24" pos:end="611:29"><name pos:start="611:24" pos:end="611:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="615:5" pos:end="615:13">return <expr pos:start="615:12" pos:end="615:12"><literal type="number" pos:start="615:12" pos:end="615:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
