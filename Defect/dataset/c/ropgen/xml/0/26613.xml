<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26613.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_stco</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:21" pos:end="9:27">entries</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:9">c</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:13">fc</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:25">nb_streams</name></name> <operator pos:start="13:27" pos:end="13:27">&lt;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:44"><name pos:start="17:10" pos:end="17:10">c</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:14">fc</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:23">streams</name><index pos:start="17:24" pos:end="17:44">[<expr pos:start="17:25" pos:end="17:43"><name pos:start="17:25" pos:end="17:41"><name pos:start="17:25" pos:end="17:25">c</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:29">fc</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:41">nb_streams</name></name><operator pos:start="17:42" pos:end="17:42">-</operator><literal type="number" pos:start="17:43" pos:end="17:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:6">sc</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:11">st</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">priv_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:16"><expr pos:start="23:5" pos:end="23:15"><call pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:11">avio_r8</name><argument_list pos:start="23:12" pos:end="23:15">(<argument pos:start="23:13" pos:end="23:14"><expr pos:start="23:13" pos:end="23:14"><name pos:start="23:13" pos:end="23:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:18" pos:end="23:30">/* version */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><call pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:13">avio_rb24</name><argument_list pos:start="25:14" pos:end="25:17">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:20" pos:end="25:30">/* flags */</comment>



    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:11">entries</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:27"><name pos:start="29:15" pos:end="29:23">avio_rb32</name><argument_list pos:start="29:24" pos:end="29:27">(<argument pos:start="29:25" pos:end="29:26"><expr pos:start="29:25" pos:end="29:26"><name pos:start="29:25" pos:end="29:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="35:17"><if pos:start="33:5" pos:end="35:17">if <condition pos:start="33:8" pos:end="33:17">(<expr pos:start="33:9" pos:end="33:16"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:16">entries</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:35"><if pos:start="37:5" pos:end="39:35">if <condition pos:start="37:8" pos:end="37:44">(<expr pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:15">entries</name> <operator pos:start="37:17" pos:end="37:18">&gt;=</operator> <name pos:start="37:20" pos:end="37:27">UINT_MAX</name><operator pos:start="37:28" pos:end="37:28">/</operator><sizeof pos:start="37:29" pos:end="37:43">sizeof<argument_list pos:start="37:35" pos:end="37:43">(<argument pos:start="37:36" pos:end="37:42"><expr pos:start="37:36" pos:end="37:42"><name pos:start="37:36" pos:end="37:42">int64_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:35"><block_content pos:start="39:9" pos:end="39:35">

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:61"><expr pos:start="43:5" pos:end="43:60"><name pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:6">sc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:21">chunk_offsets</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <call pos:start="43:25" pos:end="43:60"><name pos:start="43:25" pos:end="43:33">av_malloc</name><argument_list pos:start="43:34" pos:end="43:60">(<argument pos:start="43:35" pos:end="43:59"><expr pos:start="43:35" pos:end="43:59"><name pos:start="43:35" pos:end="43:41">entries</name> <operator pos:start="43:43" pos:end="43:43">*</operator> <sizeof pos:start="43:45" pos:end="43:59">sizeof<argument_list pos:start="43:51" pos:end="43:59">(<argument pos:start="43:52" pos:end="43:58"><expr pos:start="43:52" pos:end="43:58"><name pos:start="43:52" pos:end="43:58">int64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:31"><if pos:start="45:5" pos:end="47:31">if <condition pos:start="45:8" pos:end="45:27">(<expr pos:start="45:9" pos:end="45:26"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:26"><name pos:start="45:10" pos:end="45:11">sc</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:26">chunk_offsets</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:31"><block_content pos:start="47:9" pos:end="47:31">

        <return pos:start="47:9" pos:end="47:31">return <expr pos:start="47:16" pos:end="47:30"><call pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:22">AVERROR</name><argument_list pos:start="47:23" pos:end="47:30">(<argument pos:start="47:24" pos:end="47:29"><expr pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:30"><expr pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:6">sc</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:19">chunk_count</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:29">entries</name></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="67:35"><if pos:start="53:5" pos:end="57:49">if      <condition pos:start="53:13" pos:end="53:49">(<expr pos:start="53:14" pos:end="53:48"><name pos:start="53:14" pos:end="53:22"><name pos:start="53:14" pos:end="53:17">atom</name><operator pos:start="53:18" pos:end="53:18">.</operator><name pos:start="53:19" pos:end="53:22">type</name></name> <operator pos:start="53:24" pos:end="53:25">==</operator> <call pos:start="53:27" pos:end="53:48"><name pos:start="53:27" pos:end="53:31">MKTAG</name><argument_list pos:start="53:32" pos:end="53:48">(<argument pos:start="53:33" pos:end="53:35"><expr pos:start="53:33" pos:end="53:35"><literal type="char" pos:start="53:33" pos:end="53:35">'s'</literal></expr></argument>,<argument pos:start="53:37" pos:end="53:39"><expr pos:start="53:37" pos:end="53:39"><literal type="char" pos:start="53:37" pos:end="53:39">'t'</literal></expr></argument>,<argument pos:start="53:41" pos:end="53:43"><expr pos:start="53:41" pos:end="53:43"><literal type="char" pos:start="53:41" pos:end="53:43">'c'</literal></expr></argument>,<argument pos:start="53:45" pos:end="53:47"><expr pos:start="53:45" pos:end="53:47"><literal type="char" pos:start="53:45" pos:end="53:47">'o'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="57:49"><block_content pos:start="55:9" pos:end="57:49">

        <for pos:start="55:9" pos:end="57:49">for <control pos:start="55:13" pos:end="55:33">(<init pos:start="55:14" pos:end="55:17"><expr pos:start="55:14" pos:end="55:16"><name pos:start="55:14" pos:end="55:14">i</name><operator pos:start="55:15" pos:end="55:15">=</operator><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>;</init> <condition pos:start="55:19" pos:end="55:28"><expr pos:start="55:19" pos:end="55:27"><name pos:start="55:19" pos:end="55:19">i</name><operator pos:start="55:20" pos:end="55:20">&lt;</operator><name pos:start="55:21" pos:end="55:27">entries</name></expr>;</condition> <incr pos:start="55:30" pos:end="55:32"><expr pos:start="55:30" pos:end="55:32"><name pos:start="55:30" pos:end="55:30">i</name><operator pos:start="55:31" pos:end="55:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:13" pos:end="57:49"><block_content pos:start="57:13" pos:end="57:49">

            <expr_stmt pos:start="57:13" pos:end="57:49"><expr pos:start="57:13" pos:end="57:48"><name pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:14">sc</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:29">chunk_offsets</name><index pos:start="57:30" pos:end="57:32">[<expr pos:start="57:31" pos:end="57:31"><name pos:start="57:31" pos:end="57:31">i</name></expr>]</index></name> <operator pos:start="57:34" pos:end="57:34">=</operator> <call pos:start="57:36" pos:end="57:48"><name pos:start="57:36" pos:end="57:44">avio_rb32</name><argument_list pos:start="57:45" pos:end="57:48">(<argument pos:start="57:46" pos:end="57:47"><expr pos:start="57:46" pos:end="57:47"><name pos:start="57:46" pos:end="57:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if>

    <if type="elseif" pos:start="59:5" pos:end="63:49">else if <condition pos:start="59:13" pos:end="59:49">(<expr pos:start="59:14" pos:end="59:48"><name pos:start="59:14" pos:end="59:22"><name pos:start="59:14" pos:end="59:17">atom</name><operator pos:start="59:18" pos:end="59:18">.</operator><name pos:start="59:19" pos:end="59:22">type</name></name> <operator pos:start="59:24" pos:end="59:25">==</operator> <call pos:start="59:27" pos:end="59:48"><name pos:start="59:27" pos:end="59:31">MKTAG</name><argument_list pos:start="59:32" pos:end="59:48">(<argument pos:start="59:33" pos:end="59:35"><expr pos:start="59:33" pos:end="59:35"><literal type="char" pos:start="59:33" pos:end="59:35">'c'</literal></expr></argument>,<argument pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><literal type="char" pos:start="59:37" pos:end="59:39">'o'</literal></expr></argument>,<argument pos:start="59:41" pos:end="59:43"><expr pos:start="59:41" pos:end="59:43"><literal type="char" pos:start="59:41" pos:end="59:43">'6'</literal></expr></argument>,<argument pos:start="59:45" pos:end="59:47"><expr pos:start="59:45" pos:end="59:47"><literal type="char" pos:start="59:45" pos:end="59:47">'4'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="63:49"><block_content pos:start="61:9" pos:end="63:49">

        <for pos:start="61:9" pos:end="63:49">for <control pos:start="61:13" pos:end="61:33">(<init pos:start="61:14" pos:end="61:17"><expr pos:start="61:14" pos:end="61:16"><name pos:start="61:14" pos:end="61:14">i</name><operator pos:start="61:15" pos:end="61:15">=</operator><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</init> <condition pos:start="61:19" pos:end="61:28"><expr pos:start="61:19" pos:end="61:27"><name pos:start="61:19" pos:end="61:19">i</name><operator pos:start="61:20" pos:end="61:20">&lt;</operator><name pos:start="61:21" pos:end="61:27">entries</name></expr>;</condition> <incr pos:start="61:30" pos:end="61:32"><expr pos:start="61:30" pos:end="61:32"><name pos:start="61:30" pos:end="61:30">i</name><operator pos:start="61:31" pos:end="61:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="63:13" pos:end="63:49"><block_content pos:start="63:13" pos:end="63:49">

            <expr_stmt pos:start="63:13" pos:end="63:49"><expr pos:start="63:13" pos:end="63:48"><name pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:14">sc</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:29">chunk_offsets</name><index pos:start="63:30" pos:end="63:32">[<expr pos:start="63:31" pos:end="63:31"><name pos:start="63:31" pos:end="63:31">i</name></expr>]</index></name> <operator pos:start="63:34" pos:end="63:34">=</operator> <call pos:start="63:36" pos:end="63:48"><name pos:start="63:36" pos:end="63:44">avio_rb64</name><argument_list pos:start="63:45" pos:end="63:48">(<argument pos:start="63:46" pos:end="63:47"><expr pos:start="63:46" pos:end="63:47"><name pos:start="63:46" pos:end="63:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if>

    <else pos:start="65:5" pos:end="67:35">else<block type="pseudo" pos:start="67:9" pos:end="67:35"><block_content pos:start="67:9" pos:end="67:35">

        <return pos:start="67:9" pos:end="67:35">return <expr pos:start="67:16" pos:end="67:34"><name pos:start="67:16" pos:end="67:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></else></if_stmt>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
