<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24437.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">parse_cmdline</name><parameter_list pos:start="1:26" pos:end="3:52">(<parameter pos:start="1:27" pos:end="1:45"><decl pos:start="1:27" pos:end="1:45"><type pos:start="1:27" pos:end="1:45"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:45">cmdline</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:38"><decl pos:start="3:26" pos:end="3:38"><type pos:start="3:26" pos:end="3:38"><name pos:start="3:26" pos:end="3:28">int</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:38">pnb_args</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:51"><decl pos:start="3:41" pos:end="3:51"><type pos:start="3:41" pos:end="3:51"><name pos:start="3:41" pos:end="3:44">char</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier><modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:51">args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:24">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">nb_args</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:20">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:18"><name pos:start="11:10" pos:end="11:12">buf</name><index pos:start="11:13" pos:end="11:18">[<expr pos:start="11:14" pos:end="11:17"><literal type="number" pos:start="11:14" pos:end="11:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:5">p</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <name pos:start="15:9" pos:end="15:15">cmdline</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:16"><expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:11">nb_args</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="43:5">for<control pos:start="19:8" pos:end="19:11">(<init pos:start="19:9" pos:end="19:9">;</init><condition pos:start="19:10" pos:end="19:10">;</condition><incr/>)</control> <block pos:start="19:13" pos:end="43:5">{<block_content pos:start="21:9" pos:end="41:18">

        <while pos:start="21:9" pos:end="23:16">while <condition pos:start="21:15" pos:end="21:32">(<expr pos:start="21:16" pos:end="21:31"><call pos:start="21:16" pos:end="21:31"><name pos:start="21:16" pos:end="21:27">qemu_isspace</name><argument_list pos:start="21:28" pos:end="21:31">(<argument pos:start="21:29" pos:end="21:30"><expr pos:start="21:29" pos:end="21:30"><operator pos:start="21:29" pos:end="21:29">*</operator><name pos:start="21:30" pos:end="21:30">p</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:16"><block_content pos:start="23:13" pos:end="23:16">

            <expr_stmt pos:start="23:13" pos:end="23:16"><expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:13">p</name><operator pos:start="23:14" pos:end="23:15">++</operator></expr>;</expr_stmt></block_content></block></while>

        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:23">(<expr pos:start="25:13" pos:end="25:22"><operator pos:start="25:13" pos:end="25:13">*</operator><name pos:start="25:14" pos:end="25:14">p</name> <operator pos:start="25:16" pos:end="25:17">==</operator> <literal type="char" pos:start="25:19" pos:end="25:22">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="31:18"><if pos:start="29:9" pos:end="31:18">if <condition pos:start="29:12" pos:end="29:32">(<expr pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:19">nb_args</name> <operator pos:start="29:21" pos:end="29:22">&gt;=</operator> <name pos:start="29:24" pos:end="29:31">MAX_ARGS</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:18"><block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:43"><name pos:start="33:15" pos:end="33:21">get_str</name><argument_list pos:start="33:22" pos:end="33:43">(<argument pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><name pos:start="33:23" pos:end="33:25">buf</name></expr></argument>, <argument pos:start="33:28" pos:end="33:38"><expr pos:start="33:28" pos:end="33:38"><sizeof pos:start="33:28" pos:end="33:38">sizeof<argument_list pos:start="33:34" pos:end="33:38">(<argument pos:start="33:35" pos:end="33:37"><expr pos:start="33:35" pos:end="33:37"><name pos:start="33:35" pos:end="33:37">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:41" pos:end="33:42"><expr pos:start="33:41" pos:end="33:42"><operator pos:start="33:41" pos:end="33:41">&amp;</operator><name pos:start="33:42" pos:end="33:42">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:12">args</name><index pos:start="35:13" pos:end="35:21">[<expr pos:start="35:14" pos:end="35:20"><name pos:start="35:14" pos:end="35:20">nb_args</name></expr>]</index></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:37"><name pos:start="35:25" pos:end="35:32">g_strdup</name><argument_list pos:start="35:33" pos:end="35:37">(<argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:36">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:18"><expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:15">nb_args</name><operator pos:start="37:16" pos:end="37:17">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:18"><if pos:start="39:9" pos:end="41:18">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:18"><block_content pos:start="41:13" pos:end="41:18">

            <break pos:start="41:13" pos:end="41:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:13">pnb_args</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:23">nb_args</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
