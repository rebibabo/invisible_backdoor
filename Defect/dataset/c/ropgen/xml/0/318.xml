<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/318.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">CPUState</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:21">cpu_mb_init</name> <parameter_list pos:start="1:23" pos:end="1:45">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:35"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:44">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:15">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:14"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:30">tcg_initialized</name> <init pos:start="7:32" pos:end="7:34">= <expr pos:start="7:34" pos:end="7:34"><literal type="number" pos:start="7:34" pos:end="7:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:7">env</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:40"><name pos:start="13:11" pos:end="13:22">qemu_mallocz</name><argument_list pos:start="13:23" pos:end="13:40">(<argument pos:start="13:24" pos:end="13:39"><expr pos:start="13:24" pos:end="13:39"><sizeof pos:start="13:24" pos:end="13:39">sizeof<argument_list pos:start="13:30" pos:end="13:39">(<argument pos:start="13:31" pos:end="13:38"><expr pos:start="13:31" pos:end="13:38"><name pos:start="13:31" pos:end="13:38">CPUState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><call pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:17">cpu_exec_init</name><argument_list pos:start="17:18" pos:end="17:22">(<argument pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><call pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:13">cpu_reset</name><argument_list pos:start="19:14" pos:end="19:18">(<argument pos:start="19:15" pos:end="19:17"><expr pos:start="19:15" pos:end="19:17"><name pos:start="19:15" pos:end="19:17">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="39:36"><expr pos:start="23:5" pos:end="39:35"><name pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:7">env</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:12">pvr</name><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:17">regs</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>]</index></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:41">PVR0_PVR_FULL_MASK</name> \

                       <operator pos:start="25:24" pos:end="25:24">|</operator> <name pos:start="25:26" pos:end="25:45">PVR0_USE_BARREL_MASK</name> \

                       <operator pos:start="27:24" pos:end="27:24">|</operator> <name pos:start="27:26" pos:end="27:42">PVR0_USE_DIV_MASK</name> \

                       <operator pos:start="29:24" pos:end="29:24">|</operator> <name pos:start="29:26" pos:end="29:45">PVR0_USE_HW_MUL_MASK</name> \

                       <operator pos:start="31:24" pos:end="31:24">|</operator> <name pos:start="31:26" pos:end="31:42">PVR0_USE_EXC_MASK</name> \

                       <operator pos:start="33:24" pos:end="33:24">|</operator> <name pos:start="33:26" pos:end="33:45">PVR0_USE_ICACHE_MASK</name> \

                       <operator pos:start="35:24" pos:end="35:24">|</operator> <name pos:start="35:26" pos:end="35:45">PVR0_USE_DCACHE_MASK</name> \

                       <operator pos:start="37:24" pos:end="37:24">|</operator> <name pos:start="37:26" pos:end="37:37">PVR0_USE_MMU</name> \

                       <operator pos:start="39:24" pos:end="39:24">|</operator> <operator pos:start="39:26" pos:end="39:26">(</operator><literal type="number" pos:start="39:27" pos:end="39:29">0xb</literal> <operator pos:start="39:31" pos:end="39:32">&lt;&lt;</operator> <literal type="number" pos:start="39:34" pos:end="39:34">8</literal><operator pos:start="39:35" pos:end="39:35">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="61:28"><expr pos:start="41:5" pos:end="61:27"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:7">env</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:12">pvr</name><operator pos:start="41:13" pos:end="41:13">.</operator><name pos:start="41:14" pos:end="41:17">regs</name><index pos:start="41:18" pos:end="41:20">[<expr pos:start="41:19" pos:end="41:19"><literal type="number" pos:start="41:19" pos:end="41:19">2</literal></expr>]</index></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:38">PVR2_D_OPB_MASK</name> \

                        <operator pos:start="43:25" pos:end="43:25">|</operator> <name pos:start="43:27" pos:end="43:41">PVR2_D_LMB_MASK</name> \

                        <operator pos:start="45:25" pos:end="45:25">|</operator> <name pos:start="45:27" pos:end="45:41">PVR2_I_OPB_MASK</name> \

                        <operator pos:start="47:25" pos:end="47:25">|</operator> <name pos:start="47:27" pos:end="47:41">PVR2_I_LMB_MASK</name> \

                        <operator pos:start="49:25" pos:end="49:25">|</operator> <name pos:start="49:27" pos:end="49:44">PVR2_USE_MSR_INSTR</name> \

                        <operator pos:start="51:25" pos:end="51:25">|</operator> <name pos:start="51:27" pos:end="51:45">PVR2_USE_PCMP_INSTR</name> \

                        <operator pos:start="53:25" pos:end="53:25">|</operator> <name pos:start="53:27" pos:end="53:46">PVR2_USE_BARREL_MASK</name> \

                        <operator pos:start="55:25" pos:end="55:25">|</operator> <name pos:start="55:27" pos:end="55:43">PVR2_USE_DIV_MASK</name> \

                        <operator pos:start="57:25" pos:end="57:25">|</operator> <name pos:start="57:27" pos:end="57:46">PVR2_USE_HW_MUL_MASK</name> \

                        <operator pos:start="59:25" pos:end="59:25">|</operator> <name pos:start="59:27" pos:end="59:45">PVR2_USE_MUL64_MASK</name> \

                        <operator pos:start="61:25" pos:end="61:25">|</operator> <literal type="number" pos:start="61:27" pos:end="61:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:7">env</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:12">pvr</name><operator pos:start="63:13" pos:end="63:13">.</operator><name pos:start="63:14" pos:end="63:17">regs</name><index pos:start="63:18" pos:end="63:21">[<expr pos:start="63:19" pos:end="63:20"><literal type="number" pos:start="63:19" pos:end="63:20">10</literal></expr>]</index></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:34">0x0c000000</literal></expr>;</expr_stmt> <comment type="block" pos:start="63:37" pos:end="63:76">/* Default to spartan 3a dsp family.  */</comment>

    <expr_stmt pos:start="65:5" pos:end="68:0"><expr pos:start="65:5" pos:end="65:50"><name pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:7">env</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:12">pvr</name><operator pos:start="65:13" pos:end="65:13">.</operator><name pos:start="65:14" pos:end="65:17">regs</name><index pos:start="65:18" pos:end="65:21">[<expr pos:start="65:19" pos:end="65:20"><literal type="number" pos:start="65:19" pos:end="65:20">11</literal></expr>]</index></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:37">PVR11_USE_MMU</name> <operator pos:start="65:39" pos:end="65:39">|</operator> <operator pos:start="65:41" pos:end="65:41">(</operator><literal type="number" pos:start="65:42" pos:end="65:43">16</literal> <operator pos:start="65:45" pos:end="65:46">&lt;&lt;</operator> <literal type="number" pos:start="65:48" pos:end="65:49">17</literal><operator pos:start="65:50" pos:end="65:50">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="67:1" pos:end="67:30">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:30"><operator pos:start="67:5" pos:end="67:5">!</operator><call pos:start="67:6" pos:end="67:30"><name pos:start="67:6" pos:end="67:12">defined</name><argument_list pos:start="67:13" pos:end="67:30">(<argument pos:start="67:14" pos:end="67:29"><expr pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="69:5" pos:end="69:23"><expr pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:7">env</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:12">mmu</name><operator pos:start="69:13" pos:end="69:13">.</operator><name pos:start="69:14" pos:end="69:18">c_mmu</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:34"><expr pos:start="71:5" pos:end="71:33"><name pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:7">env</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:12">mmu</name><operator pos:start="71:13" pos:end="71:13">.</operator><name pos:start="71:14" pos:end="71:29">c_mmu_tlb_access</name></name> <operator pos:start="71:31" pos:end="71:31">=</operator> <literal type="number" pos:start="71:33" pos:end="71:33">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="76:0"><expr pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:7">env</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:12">mmu</name><operator pos:start="73:13" pos:end="73:13">.</operator><name pos:start="73:14" pos:end="73:24">c_mmu_zones</name></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <literal type="number" pos:start="73:28" pos:end="73:29">16</literal></expr>;</expr_stmt>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="79:5" pos:end="81:19"><if pos:start="79:5" pos:end="81:19">if <condition pos:start="79:8" pos:end="79:24">(<expr pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:23">tcg_initialized</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:19"><block_content pos:start="81:9" pos:end="81:19">

        <return pos:start="81:9" pos:end="81:19">return <expr pos:start="81:16" pos:end="81:18"><name pos:start="81:16" pos:end="81:18">env</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:24"><expr pos:start="85:5" pos:end="85:23"><name pos:start="85:5" pos:end="85:19">tcg_initialized</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <literal type="number" pos:start="85:23" pos:end="85:23">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:55"><expr pos:start="89:5" pos:end="89:54"><name pos:start="89:5" pos:end="89:11">cpu_env</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:54"><name pos:start="89:15" pos:end="89:36">tcg_global_reg_new_ptr</name><argument_list pos:start="89:37" pos:end="89:54">(<argument pos:start="89:38" pos:end="89:46"><expr pos:start="89:38" pos:end="89:46"><name pos:start="89:38" pos:end="89:46">TCG_AREG0</name></expr></argument>, <argument pos:start="89:49" pos:end="89:53"><expr pos:start="89:49" pos:end="89:53"><literal type="string" pos:start="89:49" pos:end="89:53">"env"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="97:30"><expr pos:start="93:5" pos:end="97:29"><name pos:start="93:5" pos:end="93:13">env_debug</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <call pos:start="93:17" pos:end="97:29"><name pos:start="93:17" pos:end="93:34">tcg_global_mem_new</name><argument_list pos:start="93:35" pos:end="97:29">(<argument pos:start="93:36" pos:end="93:44"><expr pos:start="93:36" pos:end="93:44"><name pos:start="93:36" pos:end="93:44">TCG_AREG0</name></expr></argument>, 

                    <argument pos:start="95:21" pos:end="95:45"><expr pos:start="95:21" pos:end="95:45"><call pos:start="95:21" pos:end="95:45"><name pos:start="95:21" pos:end="95:28">offsetof</name><argument_list pos:start="95:29" pos:end="95:45">(<argument pos:start="95:30" pos:end="95:37"><expr pos:start="95:30" pos:end="95:37"><name pos:start="95:30" pos:end="95:37">CPUState</name></expr></argument>, <argument pos:start="95:40" pos:end="95:44"><expr pos:start="95:40" pos:end="95:44"><name pos:start="95:40" pos:end="95:44">debug</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="97:21" pos:end="97:28"><expr pos:start="97:21" pos:end="97:28"><literal type="string" pos:start="97:21" pos:end="97:28">"debug0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="103:30"><expr pos:start="99:5" pos:end="103:29"><name pos:start="99:5" pos:end="99:14">env_iflags</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <call pos:start="99:18" pos:end="103:29"><name pos:start="99:18" pos:end="99:35">tcg_global_mem_new</name><argument_list pos:start="99:36" pos:end="103:29">(<argument pos:start="99:37" pos:end="99:45"><expr pos:start="99:37" pos:end="99:45"><name pos:start="99:37" pos:end="99:45">TCG_AREG0</name></expr></argument>, 

                    <argument pos:start="101:21" pos:end="101:46"><expr pos:start="101:21" pos:end="101:46"><call pos:start="101:21" pos:end="101:46"><name pos:start="101:21" pos:end="101:28">offsetof</name><argument_list pos:start="101:29" pos:end="101:46">(<argument pos:start="101:30" pos:end="101:37"><expr pos:start="101:30" pos:end="101:37"><name pos:start="101:30" pos:end="101:37">CPUState</name></expr></argument>, <argument pos:start="101:40" pos:end="101:45"><expr pos:start="101:40" pos:end="101:45"><name pos:start="101:40" pos:end="101:45">iflags</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="103:21" pos:end="103:28"><expr pos:start="103:21" pos:end="103:28"><literal type="string" pos:start="103:21" pos:end="103:28">"iflags"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="109:27"><expr pos:start="105:5" pos:end="109:26"><name pos:start="105:5" pos:end="105:11">env_imm</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="109:26"><name pos:start="105:15" pos:end="105:32">tcg_global_mem_new</name><argument_list pos:start="105:33" pos:end="109:26">(<argument pos:start="105:34" pos:end="105:42"><expr pos:start="105:34" pos:end="105:42"><name pos:start="105:34" pos:end="105:42">TCG_AREG0</name></expr></argument>, 

                    <argument pos:start="107:21" pos:end="107:43"><expr pos:start="107:21" pos:end="107:43"><call pos:start="107:21" pos:end="107:43"><name pos:start="107:21" pos:end="107:28">offsetof</name><argument_list pos:start="107:29" pos:end="107:43">(<argument pos:start="107:30" pos:end="107:37"><expr pos:start="107:30" pos:end="107:37"><name pos:start="107:30" pos:end="107:37">CPUState</name></expr></argument>, <argument pos:start="107:40" pos:end="107:42"><expr pos:start="107:40" pos:end="107:42"><name pos:start="107:40" pos:end="107:42">imm</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="109:21" pos:end="109:25"><expr pos:start="109:21" pos:end="109:25"><literal type="string" pos:start="109:21" pos:end="109:25">"imm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="115:32"><expr pos:start="111:5" pos:end="115:31"><name pos:start="111:5" pos:end="111:15">env_btarget</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <call pos:start="111:19" pos:end="115:31"><name pos:start="111:19" pos:end="111:36">tcg_global_mem_new</name><argument_list pos:start="111:37" pos:end="115:31">(<argument pos:start="111:38" pos:end="111:46"><expr pos:start="111:38" pos:end="111:46"><name pos:start="111:38" pos:end="111:46">TCG_AREG0</name></expr></argument>,

                     <argument pos:start="113:22" pos:end="113:48"><expr pos:start="113:22" pos:end="113:48"><call pos:start="113:22" pos:end="113:48"><name pos:start="113:22" pos:end="113:29">offsetof</name><argument_list pos:start="113:30" pos:end="113:48">(<argument pos:start="113:31" pos:end="113:38"><expr pos:start="113:31" pos:end="113:38"><name pos:start="113:31" pos:end="113:38">CPUState</name></expr></argument>, <argument pos:start="113:41" pos:end="113:47"><expr pos:start="113:41" pos:end="113:47"><name pos:start="113:41" pos:end="113:47">btarget</name></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="115:22" pos:end="115:30"><expr pos:start="115:22" pos:end="115:30"><literal type="string" pos:start="115:22" pos:end="115:30">"btarget"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="121:31"><expr pos:start="117:5" pos:end="121:30"><name pos:start="117:5" pos:end="117:14">env_btaken</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <call pos:start="117:18" pos:end="121:30"><name pos:start="117:18" pos:end="117:35">tcg_global_mem_new</name><argument_list pos:start="117:36" pos:end="121:30">(<argument pos:start="117:37" pos:end="117:45"><expr pos:start="117:37" pos:end="117:45"><name pos:start="117:37" pos:end="117:45">TCG_AREG0</name></expr></argument>,

                     <argument pos:start="119:22" pos:end="119:47"><expr pos:start="119:22" pos:end="119:47"><call pos:start="119:22" pos:end="119:47"><name pos:start="119:22" pos:end="119:29">offsetof</name><argument_list pos:start="119:30" pos:end="119:47">(<argument pos:start="119:31" pos:end="119:38"><expr pos:start="119:31" pos:end="119:38"><name pos:start="119:31" pos:end="119:38">CPUState</name></expr></argument>, <argument pos:start="119:41" pos:end="119:46"><expr pos:start="119:41" pos:end="119:46"><name pos:start="119:41" pos:end="119:46">btaken</name></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="121:22" pos:end="121:29"><expr pos:start="121:22" pos:end="121:29"><literal type="string" pos:start="121:22" pos:end="121:29">"btaken"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="123:5" pos:end="131:5">for <control pos:start="123:9" pos:end="123:43">(<init pos:start="123:10" pos:end="123:15"><expr pos:start="123:10" pos:end="123:14"><name pos:start="123:10" pos:end="123:10">i</name> <operator pos:start="123:12" pos:end="123:12">=</operator> <literal type="number" pos:start="123:14" pos:end="123:14">0</literal></expr>;</init> <condition pos:start="123:17" pos:end="123:38"><expr pos:start="123:17" pos:end="123:37"><name pos:start="123:17" pos:end="123:17">i</name> <operator pos:start="123:19" pos:end="123:19">&lt;</operator> <call pos:start="123:21" pos:end="123:37"><name pos:start="123:21" pos:end="123:30">ARRAY_SIZE</name><argument_list pos:start="123:31" pos:end="123:37">(<argument pos:start="123:32" pos:end="123:36"><expr pos:start="123:32" pos:end="123:36"><name pos:start="123:32" pos:end="123:36">cpu_R</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="123:40" pos:end="123:42"><expr pos:start="123:40" pos:end="123:42"><name pos:start="123:40" pos:end="123:40">i</name><operator pos:start="123:41" pos:end="123:42">++</operator></expr></incr>)</control> <block pos:start="123:45" pos:end="131:5">{<block_content pos:start="125:9" pos:end="129:39">

        <expr_stmt pos:start="125:9" pos:end="129:39"><expr pos:start="125:9" pos:end="129:38"><name pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:13">cpu_R</name><index pos:start="125:14" pos:end="125:16">[<expr pos:start="125:15" pos:end="125:15"><name pos:start="125:15" pos:end="125:15">i</name></expr>]</index></name> <operator pos:start="125:18" pos:end="125:18">=</operator> <call pos:start="125:20" pos:end="129:38"><name pos:start="125:20" pos:end="125:37">tcg_global_mem_new</name><argument_list pos:start="125:38" pos:end="129:38">(<argument pos:start="125:39" pos:end="125:47"><expr pos:start="125:39" pos:end="125:47"><name pos:start="125:39" pos:end="125:47">TCG_AREG0</name></expr></argument>,

                          <argument pos:start="127:27" pos:end="127:53"><expr pos:start="127:27" pos:end="127:53"><call pos:start="127:27" pos:end="127:53"><name pos:start="127:27" pos:end="127:34">offsetof</name><argument_list pos:start="127:35" pos:end="127:53">(<argument pos:start="127:36" pos:end="127:43"><expr pos:start="127:36" pos:end="127:43"><name pos:start="127:36" pos:end="127:43">CPUState</name></expr></argument>, <argument pos:start="127:46" pos:end="127:52"><expr pos:start="127:46" pos:end="127:52"><name pos:start="127:46" pos:end="127:52"><name pos:start="127:46" pos:end="127:49">regs</name><index pos:start="127:50" pos:end="127:52">[<expr pos:start="127:51" pos:end="127:51"><name pos:start="127:51" pos:end="127:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="129:27" pos:end="129:37"><expr pos:start="129:27" pos:end="129:37"><name pos:start="129:27" pos:end="129:37"><name pos:start="129:27" pos:end="129:34">regnames</name><index pos:start="129:35" pos:end="129:37">[<expr pos:start="129:36" pos:end="129:36"><name pos:start="129:36" pos:end="129:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="133:5" pos:end="146:0">for <control pos:start="133:9" pos:end="133:44">(<init pos:start="133:10" pos:end="133:15"><expr pos:start="133:10" pos:end="133:14"><name pos:start="133:10" pos:end="133:10">i</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <literal type="number" pos:start="133:14" pos:end="133:14">0</literal></expr>;</init> <condition pos:start="133:17" pos:end="133:39"><expr pos:start="133:17" pos:end="133:38"><name pos:start="133:17" pos:end="133:17">i</name> <operator pos:start="133:19" pos:end="133:19">&lt;</operator> <call pos:start="133:21" pos:end="133:38"><name pos:start="133:21" pos:end="133:30">ARRAY_SIZE</name><argument_list pos:start="133:31" pos:end="133:38">(<argument pos:start="133:32" pos:end="133:37"><expr pos:start="133:32" pos:end="133:37"><name pos:start="133:32" pos:end="133:37">cpu_SR</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="133:41" pos:end="133:43"><expr pos:start="133:41" pos:end="133:43"><name pos:start="133:41" pos:end="133:41">i</name><operator pos:start="133:42" pos:end="133:43">++</operator></expr></incr>)</control> <block pos:start="133:46" pos:end="146:0">{<block_content pos:start="135:9" pos:end="139:47">

        <expr_stmt pos:start="135:9" pos:end="139:47"><expr pos:start="135:9" pos:end="139:46"><name pos:start="135:9" pos:end="135:17"><name pos:start="135:9" pos:end="135:14">cpu_SR</name><index pos:start="135:15" pos:end="135:17">[<expr pos:start="135:16" pos:end="135:16"><name pos:start="135:16" pos:end="135:16">i</name></expr>]</index></name> <operator pos:start="135:19" pos:end="135:19">=</operator> <call pos:start="135:21" pos:end="139:46"><name pos:start="135:21" pos:end="135:38">tcg_global_mem_new</name><argument_list pos:start="135:39" pos:end="139:46">(<argument pos:start="135:40" pos:end="135:48"><expr pos:start="135:40" pos:end="135:48"><name pos:start="135:40" pos:end="135:48">TCG_AREG0</name></expr></argument>,

                          <argument pos:start="137:27" pos:end="137:54"><expr pos:start="137:27" pos:end="137:54"><call pos:start="137:27" pos:end="137:54"><name pos:start="137:27" pos:end="137:34">offsetof</name><argument_list pos:start="137:35" pos:end="137:54">(<argument pos:start="137:36" pos:end="137:43"><expr pos:start="137:36" pos:end="137:43"><name pos:start="137:36" pos:end="137:43">CPUState</name></expr></argument>, <argument pos:start="137:46" pos:end="137:53"><expr pos:start="137:46" pos:end="137:53"><name pos:start="137:46" pos:end="137:53"><name pos:start="137:46" pos:end="137:50">sregs</name><index pos:start="137:51" pos:end="137:53">[<expr pos:start="137:52" pos:end="137:52"><name pos:start="137:52" pos:end="137:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="139:27" pos:end="139:45"><expr pos:start="139:27" pos:end="139:45"><name pos:start="139:27" pos:end="139:45"><name pos:start="139:27" pos:end="139:42">special_regnames</name><index pos:start="139:43" pos:end="139:45">[<expr pos:start="139:44" pos:end="139:44"><name pos:start="139:44" pos:end="139:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:define pos:start="143:1" pos:end="143:20">#<cpp:directive pos:start="143:2" pos:end="143:7">define</cpp:directive> <cpp:macro pos:start="143:9" pos:end="143:18"><name pos:start="143:9" pos:end="143:18">GEN_HELPER</name></cpp:macro> <cpp:value pos:start="143:20" pos:end="143:20">2</cpp:value></cpp:define>

<cpp:include pos:start="145:1" pos:end="145:19">#<cpp:directive pos:start="145:2" pos:end="145:8">include</cpp:directive> <cpp:file pos:start="145:10" pos:end="145:19">"helper.h"</cpp:file></cpp:include>



    <return pos:start="149:5" pos:end="149:15">return <expr pos:start="149:12" pos:end="149:14"><name pos:start="149:12" pos:end="149:14">env</name></expr>;</return>

</block_content>}</block></function>
</unit>
