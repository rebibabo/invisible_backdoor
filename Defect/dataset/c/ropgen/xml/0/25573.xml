<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25573.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">do_blockdev_backup</name><parameter_list pos:start="1:24" pos:end="1:79">(<parameter pos:start="1:25" pos:end="1:46"><decl pos:start="1:25" pos:end="1:46"><type pos:start="1:25" pos:end="1:46"><name pos:start="1:25" pos:end="1:38">BlockdevBackup</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">backup</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><name pos:start="1:49" pos:end="1:59">BlockJobTxn</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">txn</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:71">Error</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier><modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:78">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:37">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:31">target_bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">AioContext</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:27">aio_context</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:26"><name pos:start="15:10" pos:end="15:15">backup</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:26">has_speed</name></name></expr>)</condition> <block pos:start="15:29" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:26">

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:14">backup</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:21">speed</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:37">(<expr pos:start="21:9" pos:end="21:36"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:36"><name pos:start="21:10" pos:end="21:15">backup</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:36">has_on_source_error</name></name></expr>)</condition> <block pos:start="21:39" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:59">

        <expr_stmt pos:start="23:9" pos:end="23:59"><expr pos:start="23:9" pos:end="23:58"><name pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:14">backup</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:31">on_source_error</name></name> <operator pos:start="23:33" pos:end="23:33">=</operator> <name pos:start="23:35" pos:end="23:58">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:37">(<expr pos:start="27:9" pos:end="27:36"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:36"><name pos:start="27:10" pos:end="27:15">backup</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:36">has_on_target_error</name></name></expr>)</condition> <block pos:start="27:39" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:59">

        <expr_stmt pos:start="29:9" pos:end="29:59"><expr pos:start="29:9" pos:end="29:58"><name pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:14">backup</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:31">on_target_error</name></name> <operator pos:start="29:33" pos:end="29:33">=</operator> <name pos:start="29:35" pos:end="29:58">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:28">(<expr pos:start="33:9" pos:end="33:27"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:27"><name pos:start="33:10" pos:end="33:15">backup</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:27">has_job_id</name></name></expr>)</condition> <block pos:start="33:30" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:30">

        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:14">backup</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:22">job_id</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:29">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:6">bs</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <call pos:start="41:10" pos:end="41:46"><name pos:start="41:10" pos:end="41:24">qmp_get_root_bs</name><argument_list pos:start="41:25" pos:end="41:46">(<argument pos:start="41:26" pos:end="41:39"><expr pos:start="41:26" pos:end="41:39"><name pos:start="41:26" pos:end="41:39"><name pos:start="41:26" pos:end="41:31">backup</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:39">device</name></name></expr></argument>, <argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:12">(<expr pos:start="43:9" pos:end="43:11"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:11">bs</name></expr>)</condition> <block pos:start="43:14" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:15">

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:43"><expr pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:15">aio_context</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="51:42"><name pos:start="51:19" pos:end="51:38">bdrv_get_aio_context</name><argument_list pos:start="51:39" pos:end="51:42">(<argument pos:start="51:40" pos:end="51:41"><expr pos:start="51:40" pos:end="51:41"><name pos:start="51:40" pos:end="51:41">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><call pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:23">aio_context_acquire</name><argument_list pos:start="53:24" pos:end="53:36">(<argument pos:start="53:25" pos:end="53:35"><expr pos:start="53:25" pos:end="53:35"><name pos:start="53:25" pos:end="53:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:69"><expr pos:start="57:5" pos:end="57:68"><name pos:start="57:5" pos:end="57:13">target_bs</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="57:68"><name pos:start="57:17" pos:end="57:30">bdrv_lookup_bs</name><argument_list pos:start="57:31" pos:end="57:68">(<argument pos:start="57:32" pos:end="57:45"><expr pos:start="57:32" pos:end="57:45"><name pos:start="57:32" pos:end="57:45"><name pos:start="57:32" pos:end="57:37">backup</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:45">target</name></name></expr></argument>, <argument pos:start="57:48" pos:end="57:61"><expr pos:start="57:48" pos:end="57:61"><name pos:start="57:48" pos:end="57:61"><name pos:start="57:48" pos:end="57:53">backup</name><operator pos:start="57:54" pos:end="57:55">-&gt;</operator><name pos:start="57:56" pos:end="57:61">target</name></name></expr></argument>, <argument pos:start="57:64" pos:end="57:67"><expr pos:start="57:64" pos:end="57:67"><name pos:start="57:64" pos:end="57:67">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:19">(<expr pos:start="59:9" pos:end="59:18"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:18">target_bs</name></expr>)</condition> <block pos:start="59:21" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:17">

        <goto pos:start="61:9" pos:end="61:17">goto <name pos:start="61:14" pos:end="61:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="87:5"><if pos:start="67:5" pos:end="87:5">if <condition pos:start="67:8" pos:end="67:55">(<expr pos:start="67:9" pos:end="67:54"><call pos:start="67:9" pos:end="67:39"><name pos:start="67:9" pos:end="67:28">bdrv_get_aio_context</name><argument_list pos:start="67:29" pos:end="67:39">(<argument pos:start="67:30" pos:end="67:38"><expr pos:start="67:30" pos:end="67:38"><name pos:start="67:30" pos:end="67:38">target_bs</name></expr></argument>)</argument_list></call> <operator pos:start="67:41" pos:end="67:42">!=</operator> <name pos:start="67:44" pos:end="67:54">aio_context</name></expr>)</condition> <block pos:start="67:57" pos:end="87:5">{<block_content pos:start="69:9" pos:end="85:9">

        <if_stmt pos:start="69:9" pos:end="85:9"><if pos:start="69:9" pos:end="77:9">if <condition pos:start="69:12" pos:end="69:37">(<expr pos:start="69:13" pos:end="69:36"><operator pos:start="69:13" pos:end="69:13">!</operator><call pos:start="69:14" pos:end="69:36"><name pos:start="69:14" pos:end="69:25">bdrv_has_blk</name><argument_list pos:start="69:26" pos:end="69:36">(<argument pos:start="69:27" pos:end="69:35"><expr pos:start="69:27" pos:end="69:35"><name pos:start="69:27" pos:end="69:35">target_bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:39" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:57">

            <comment type="block" pos:start="71:13" pos:end="73:29">/* The target BDS is not attached, we can safely move it to another

             * AioContext. */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:57"><expr pos:start="75:13" pos:end="75:56"><call pos:start="75:13" pos:end="75:56"><name pos:start="75:13" pos:end="75:32">bdrv_set_aio_context</name><argument_list pos:start="75:33" pos:end="75:56">(<argument pos:start="75:34" pos:end="75:42"><expr pos:start="75:34" pos:end="75:42"><name pos:start="75:34" pos:end="75:42">target_bs</name></expr></argument>, <argument pos:start="75:45" pos:end="75:55"><expr pos:start="75:45" pos:end="75:55"><name pos:start="75:45" pos:end="75:55">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="85:9">else <block pos:start="77:16" pos:end="85:9">{<block_content pos:start="79:13" pos:end="83:21">

            <expr_stmt pos:start="79:13" pos:end="81:40"><expr pos:start="79:13" pos:end="81:39"><call pos:start="79:13" pos:end="81:39"><name pos:start="79:13" pos:end="79:22">error_setg</name><argument_list pos:start="79:23" pos:end="81:39">(<argument pos:start="79:24" pos:end="79:27"><expr pos:start="79:24" pos:end="79:27"><name pos:start="79:24" pos:end="79:27">errp</name></expr></argument>, <argument pos:start="79:30" pos:end="81:38"><expr pos:start="79:30" pos:end="81:38"><literal type="string" pos:start="79:30" pos:end="79:77">"Target is attached to a different thread from "</literal>

                             <literal type="string" pos:start="81:30" pos:end="81:38">"source."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="83:13" pos:end="83:21">goto <name pos:start="83:18" pos:end="83:20">out</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="93:52"><expr pos:start="89:5" pos:end="93:51"><call pos:start="89:5" pos:end="93:51"><name pos:start="89:5" pos:end="89:16">backup_start</name><argument_list pos:start="89:17" pos:end="93:51">(<argument pos:start="89:18" pos:end="89:31"><expr pos:start="89:18" pos:end="89:31"><name pos:start="89:18" pos:end="89:31"><name pos:start="89:18" pos:end="89:23">backup</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:31">job_id</name></name></expr></argument>, <argument pos:start="89:34" pos:end="89:35"><expr pos:start="89:34" pos:end="89:35"><name pos:start="89:34" pos:end="89:35">bs</name></expr></argument>, <argument pos:start="89:38" pos:end="89:46"><expr pos:start="89:38" pos:end="89:46"><name pos:start="89:38" pos:end="89:46">target_bs</name></expr></argument>, <argument pos:start="89:49" pos:end="89:61"><expr pos:start="89:49" pos:end="89:61"><name pos:start="89:49" pos:end="89:61"><name pos:start="89:49" pos:end="89:54">backup</name><operator pos:start="89:55" pos:end="89:56">-&gt;</operator><name pos:start="89:57" pos:end="89:61">speed</name></name></expr></argument>, <argument pos:start="89:64" pos:end="89:75"><expr pos:start="89:64" pos:end="89:75"><name pos:start="89:64" pos:end="89:75"><name pos:start="89:64" pos:end="89:69">backup</name><operator pos:start="89:70" pos:end="89:71">-&gt;</operator><name pos:start="89:72" pos:end="89:75">sync</name></name></expr></argument>,

                 <argument pos:start="91:18" pos:end="91:21"><expr pos:start="91:18" pos:end="91:21"><name pos:start="91:18" pos:end="91:21">NULL</name></expr></argument>, <argument pos:start="91:24" pos:end="91:46"><expr pos:start="91:24" pos:end="91:46"><name pos:start="91:24" pos:end="91:46"><name pos:start="91:24" pos:end="91:29">backup</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:46">on_source_error</name></name></expr></argument>, <argument pos:start="91:49" pos:end="91:71"><expr pos:start="91:49" pos:end="91:71"><name pos:start="91:49" pos:end="91:71"><name pos:start="91:49" pos:end="91:54">backup</name><operator pos:start="91:55" pos:end="91:56">-&gt;</operator><name pos:start="91:57" pos:end="91:71">on_target_error</name></name></expr></argument>,

                 <argument pos:start="93:18" pos:end="93:29"><expr pos:start="93:18" pos:end="93:29"><name pos:start="93:18" pos:end="93:29">block_job_cb</name></expr></argument>, <argument pos:start="93:32" pos:end="93:33"><expr pos:start="93:32" pos:end="93:33"><name pos:start="93:32" pos:end="93:33">bs</name></expr></argument>, <argument pos:start="93:36" pos:end="93:38"><expr pos:start="93:36" pos:end="93:38"><name pos:start="93:36" pos:end="93:38">txn</name></expr></argument>, <argument pos:start="93:41" pos:end="93:50"><expr pos:start="93:41" pos:end="93:50"><operator pos:start="93:41" pos:end="93:41">&amp;</operator><name pos:start="93:42" pos:end="93:50">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="99:5"><if pos:start="95:5" pos:end="99:5">if <condition pos:start="95:8" pos:end="95:26">(<expr pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:17">local_err</name> <operator pos:start="95:19" pos:end="95:20">!=</operator> <name pos:start="95:22" pos:end="95:25">NULL</name></expr>)</condition> <block pos:start="95:28" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:41">

        <expr_stmt pos:start="97:9" pos:end="97:41"><expr pos:start="97:9" pos:end="97:40"><call pos:start="97:9" pos:end="97:40"><name pos:start="97:9" pos:end="97:23">error_propagate</name><argument_list pos:start="97:24" pos:end="97:40">(<argument pos:start="97:25" pos:end="97:28"><expr pos:start="97:25" pos:end="97:28"><name pos:start="97:25" pos:end="97:28">errp</name></expr></argument>, <argument pos:start="97:31" pos:end="97:39"><expr pos:start="97:31" pos:end="97:39"><name pos:start="97:31" pos:end="97:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="101:1" pos:end="101:4"><name pos:start="101:1" pos:end="101:3">out</name>:</label>

    <expr_stmt pos:start="103:5" pos:end="103:37"><expr pos:start="103:5" pos:end="103:36"><call pos:start="103:5" pos:end="103:36"><name pos:start="103:5" pos:end="103:23">aio_context_release</name><argument_list pos:start="103:24" pos:end="103:36">(<argument pos:start="103:25" pos:end="103:35"><expr pos:start="103:25" pos:end="103:35"><name pos:start="103:25" pos:end="103:35">aio_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
