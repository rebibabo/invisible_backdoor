<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8139.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:32">nvic_sysreg_read</name><parameter_list pos:start="1:33" pos:end="3:47">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:70"><decl pos:start="1:48" pos:end="1:70"><type pos:start="1:48" pos:end="1:70"><name pos:start="1:48" pos:end="1:65">target_phys_addr_t</name></type> <name pos:start="1:67" pos:end="1:70">addr</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:46"><decl pos:start="3:34" pos:end="3:46"><type pos:start="3:34" pos:end="3:46"><name pos:start="3:34" pos:end="3:41">unsigned</name></type> <name pos:start="3:43" pos:end="3:46">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="15:5" pos:end="35:73">

    <comment type="block" pos:start="7:5" pos:end="13:7">/* At the moment we only support the ID registers for byte/word access.

     * This is not strictly correct as a few of the other registers also

     * allow byte access.

     */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:19">offset</name> <init pos:start="15:21" pos:end="15:26">= <expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:26">addr</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:14">offset</name> <operator pos:start="17:16" pos:end="17:17">&gt;=</operator> <literal type="number" pos:start="17:19" pos:end="17:23">0xfe0</literal></expr>)</condition> <block pos:start="17:26" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:46">

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:23">(<expr pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:18">offset</name> <operator pos:start="19:20" pos:end="19:20">&amp;</operator> <literal type="number" pos:start="19:22" pos:end="19:22">3</literal></expr>)</condition> <block pos:start="19:25" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:21">

            <return pos:start="21:13" pos:end="21:21">return <expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="25:9" pos:end="25:46">return <expr pos:start="25:16" pos:end="25:45"><name pos:start="25:16" pos:end="25:45"><name pos:start="25:16" pos:end="25:22">nvic_id</name><index pos:start="25:23" pos:end="25:45">[<expr pos:start="25:24" pos:end="25:44"><operator pos:start="25:24" pos:end="25:24">(</operator><name pos:start="25:25" pos:end="25:30">offset</name> <operator pos:start="25:32" pos:end="25:32">-</operator> <literal type="number" pos:start="25:34" pos:end="25:38">0xfe0</literal><operator pos:start="25:39" pos:end="25:39">)</operator> <operator pos:start="25:41" pos:end="25:42">&gt;&gt;</operator> <literal type="number" pos:start="25:44" pos:end="25:44">2</literal></expr>]</index></name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:12">size</name> <operator pos:start="29:14" pos:end="29:15">==</operator> <literal type="number" pos:start="29:17" pos:end="29:17">4</literal></expr>)</condition> <block pos:start="29:20" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:42">

        <return pos:start="31:9" pos:end="31:42">return <expr pos:start="31:16" pos:end="31:41"><call pos:start="31:16" pos:end="31:41"><name pos:start="31:16" pos:end="31:25">nvic_readl</name><argument_list pos:start="31:26" pos:end="31:41">(<argument pos:start="31:27" pos:end="31:32"><expr pos:start="31:27" pos:end="31:32"><name pos:start="31:27" pos:end="31:32">opaque</name></expr></argument>, <argument pos:start="31:35" pos:end="31:40"><expr pos:start="31:35" pos:end="31:40"><name pos:start="31:35" pos:end="31:40">offset</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:73"><expr pos:start="35:5" pos:end="35:72"><call pos:start="35:5" pos:end="35:72"><name pos:start="35:5" pos:end="35:12">hw_error</name><argument_list pos:start="35:13" pos:end="35:72">(<argument pos:start="35:14" pos:end="35:57"><expr pos:start="35:14" pos:end="35:57"><literal type="string" pos:start="35:14" pos:end="35:57">"NVIC: Bad read of size %d at offset 0x%x\n"</literal></expr></argument>, <argument pos:start="35:60" pos:end="35:63"><expr pos:start="35:60" pos:end="35:63"><name pos:start="35:60" pos:end="35:63">size</name></expr></argument>, <argument pos:start="35:66" pos:end="35:71"><expr pos:start="35:66" pos:end="35:71"><name pos:start="35:66" pos:end="35:71">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
