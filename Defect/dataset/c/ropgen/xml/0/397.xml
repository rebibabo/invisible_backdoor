<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/397.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">floppy_probe_device</name><parameter_list pos:start="1:31" pos:end="1:52">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:43"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:51">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:16">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">fd</name></decl>, <decl pos:start="5:13" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">prio</name> <init pos:start="7:14" pos:end="7:16">= <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:24">floppy_struct</name></name></type> <name pos:start="9:26" pos:end="9:32">fdparam</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:15">stat</name></name></type> <name pos:start="11:17" pos:end="11:18">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:44">(<expr pos:start="15:9" pos:end="15:43"><call pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:16">strstart</name><argument_list pos:start="15:17" pos:end="15:43">(<argument pos:start="15:18" pos:end="15:25"><expr pos:start="15:18" pos:end="15:25"><name pos:start="15:18" pos:end="15:25">filename</name></expr></argument>, <argument pos:start="15:28" pos:end="15:36"><expr pos:start="15:28" pos:end="15:36"><literal type="string" pos:start="15:28" pos:end="15:36">"/dev/fd"</literal></expr></argument>, <argument pos:start="15:39" pos:end="15:42"><expr pos:start="15:39" pos:end="15:42"><name pos:start="15:39" pos:end="15:42">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <expr_stmt pos:start="17:9" pos:end="17:18"><expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:12">prio</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <literal type="number" pos:start="17:16" pos:end="17:17">50</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:47"><expr pos:start="21:5" pos:end="21:46"><name pos:start="21:5" pos:end="21:6">fd</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:46"><name pos:start="21:10" pos:end="21:13">open</name><argument_list pos:start="21:14" pos:end="21:46">(<argument pos:start="21:15" pos:end="21:22"><expr pos:start="21:15" pos:end="21:22"><name pos:start="21:15" pos:end="21:22">filename</name></expr></argument>, <argument pos:start="21:25" pos:end="21:45"><expr pos:start="21:25" pos:end="21:45"><name pos:start="21:25" pos:end="21:32">O_RDONLY</name> <operator pos:start="21:34" pos:end="21:34">|</operator> <name pos:start="21:36" pos:end="21:45">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:10">fd</name> <operator pos:start="23:12" pos:end="23:12">&lt;</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>)</condition> <block pos:start="23:17" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <goto pos:start="25:9" pos:end="25:17">goto <name pos:start="25:14" pos:end="25:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:24"><name pos:start="29:11" pos:end="29:15">fstat</name><argument_list pos:start="29:16" pos:end="29:24">(<argument pos:start="29:17" pos:end="29:18"><expr pos:start="29:17" pos:end="29:18"><name pos:start="29:17" pos:end="29:18">fd</name></expr></argument>, <argument pos:start="29:21" pos:end="29:23"><expr pos:start="29:21" pos:end="29:23"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:23">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:42">(<expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:14">==</operator> <operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal> <operator pos:start="31:19" pos:end="31:20">||</operator> <operator pos:start="31:22" pos:end="31:22">!</operator><call pos:start="31:23" pos:end="31:41"><name pos:start="31:23" pos:end="31:29">S_ISBLK</name><argument_list pos:start="31:30" pos:end="31:41">(<argument pos:start="31:31" pos:end="31:40"><expr pos:start="31:31" pos:end="31:40"><name pos:start="31:31" pos:end="31:40"><name pos:start="31:31" pos:end="31:32">st</name><operator pos:start="31:33" pos:end="31:33">.</operator><name pos:start="31:34" pos:end="31:40">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:44" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:18">

        <goto pos:start="33:9" pos:end="33:18">goto <name pos:start="33:14" pos:end="33:17">outc</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:55">/* Attempt to detect via a floppy specific ioctl */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:39"><name pos:start="41:11" pos:end="41:15">ioctl</name><argument_list pos:start="41:16" pos:end="41:39">(<argument pos:start="41:17" pos:end="41:18"><expr pos:start="41:17" pos:end="41:18"><name pos:start="41:17" pos:end="41:18">fd</name></expr></argument>, <argument pos:start="41:21" pos:end="41:28"><expr pos:start="41:21" pos:end="41:28"><name pos:start="41:21" pos:end="41:28">FDGETPRM</name></expr></argument>, <argument pos:start="41:31" pos:end="41:38"><expr pos:start="41:31" pos:end="41:38"><operator pos:start="41:31" pos:end="41:31">&amp;</operator><name pos:start="41:32" pos:end="41:38">fdparam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:19"><if pos:start="43:5" pos:end="45:19">if <condition pos:start="43:8" pos:end="43:17">(<expr pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:14">&gt;=</operator> <literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:19"><block_content pos:start="45:9" pos:end="45:19">

        <expr_stmt pos:start="45:9" pos:end="45:19"><expr pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:12">prio</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <literal type="number" pos:start="45:16" pos:end="45:18">100</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="49:1" pos:end="49:5"><name pos:start="49:1" pos:end="49:4">outc</name>:</label>

    <expr_stmt pos:start="51:5" pos:end="51:14"><expr pos:start="51:5" pos:end="51:13"><call pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:9">close</name><argument_list pos:start="51:10" pos:end="51:13">(<argument pos:start="51:11" pos:end="51:12"><expr pos:start="51:11" pos:end="51:12"><name pos:start="51:11" pos:end="51:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="53:1" pos:end="53:4"><name pos:start="53:1" pos:end="53:3">out</name>:</label>

    <return pos:start="55:5" pos:end="55:16">return <expr pos:start="55:12" pos:end="55:15"><name pos:start="55:12" pos:end="55:15">prio</name></expr>;</return>

</block_content>}</block></function>
</unit>
