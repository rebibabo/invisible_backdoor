<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8293.c" pos:tabs="8"><function pos:start="1:1" pos:end="227:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">imx_fec_write</name><parameter_list pos:start="1:26" pos:end="3:56">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:51"><decl pos:start="1:41" pos:end="1:51"><type pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:46">hwaddr</name></type> <name pos:start="1:48" pos:end="1:51">addr</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:40">value</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:50">unsigned</name></type> <name pos:start="3:52" pos:end="3:55">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="227:1">{<block_content pos:start="7:5" pos:end="225:22">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">IMXFECState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:36">= <expr pos:start="7:22" pos:end="7:36"><call pos:start="7:22" pos:end="7:36"><name pos:start="7:22" pos:end="7:28">IMX_FEC</name><argument_list pos:start="7:29" pos:end="7:36">(<argument pos:start="7:30" pos:end="7:35"><expr pos:start="7:30" pos:end="7:35"><name pos:start="7:30" pos:end="7:35">opaque</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:74"><expr pos:start="11:5" pos:end="11:73"><call pos:start="11:5" pos:end="11:73"><name pos:start="11:5" pos:end="11:14">FEC_PRINTF</name><argument_list pos:start="11:15" pos:end="11:73">(<argument pos:start="11:16" pos:end="11:54"><expr pos:start="11:16" pos:end="11:54"><literal type="string" pos:start="11:16" pos:end="11:37">"writing 0x%08x @ 0x%"</literal> <name pos:start="11:39" pos:end="11:49">HWADDR_PRIx</name> <literal type="string" pos:start="11:51" pos:end="11:54">"\n"</literal></expr></argument>, <argument pos:start="11:57" pos:end="11:66"><expr pos:start="11:57" pos:end="11:66"><operator pos:start="11:57" pos:end="11:57">(</operator><name pos:start="11:58" pos:end="11:60">int</name><operator pos:start="11:61" pos:end="11:61">)</operator><name pos:start="11:62" pos:end="11:66">value</name></expr></argument>, <argument pos:start="11:69" pos:end="11:72"><expr pos:start="11:69" pos:end="11:72"><name pos:start="11:69" pos:end="11:72">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="15:5" pos:end="221:5">switch <condition pos:start="15:12" pos:end="15:25">(<expr pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:16">addr</name> <operator pos:start="15:18" pos:end="15:18">&amp;</operator> <literal type="number" pos:start="15:20" pos:end="15:24">0x3ff</literal></expr>)</condition> <block pos:start="15:27" pos:end="221:5">{<block_content pos:start="17:5" pos:end="219:14">

    <case pos:start="17:5" pos:end="17:15">case <expr pos:start="17:10" pos:end="17:14"><literal type="number" pos:start="17:10" pos:end="17:14">0x004</literal></expr>:</case> <comment type="block" pos:start="17:17" pos:end="17:25">/* EIR */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:25"><expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:14">eir</name></name> <operator pos:start="19:16" pos:end="19:17">&amp;=</operator> <operator pos:start="19:19" pos:end="19:19">~</operator><name pos:start="19:20" pos:end="19:24">value</name></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:15">case <expr pos:start="23:10" pos:end="23:14"><literal type="number" pos:start="23:10" pos:end="23:14">0x008</literal></expr>:</case> <comment type="block" pos:start="23:17" pos:end="23:26">/* EIMR */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:15">eimr</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:23">value</name></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:15">case <expr pos:start="29:10" pos:end="29:14"><literal type="number" pos:start="29:10" pos:end="29:14">0x010</literal></expr>:</case> <comment type="block" pos:start="29:17" pos:end="29:26">/* RDAR */</comment>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:48">(<expr pos:start="31:13" pos:end="31:47"><operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:19"><name pos:start="31:14" pos:end="31:14">s</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:19">ecr</name></name> <operator pos:start="31:21" pos:end="31:21">&amp;</operator> <name pos:start="31:23" pos:end="31:28">FEC_EN</name><operator pos:start="31:29" pos:end="31:29">)</operator> <operator pos:start="31:31" pos:end="31:32">&amp;&amp;</operator> <operator pos:start="31:34" pos:end="31:34">!</operator><name pos:start="31:35" pos:end="31:47"><name pos:start="31:35" pos:end="31:35">s</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:47">rx_enabled</name></name></expr>)</condition> <block pos:start="31:50" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:33">

            <expr_stmt pos:start="33:13" pos:end="33:33"><expr pos:start="33:13" pos:end="33:32"><call pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:29">imx_fec_enable_rx</name><argument_list pos:start="33:30" pos:end="33:32">(<argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><name pos:start="33:31" pos:end="33:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:15">case <expr pos:start="39:10" pos:end="39:14"><literal type="number" pos:start="39:10" pos:end="39:14">0x014</literal></expr>:</case> <comment type="block" pos:start="39:17" pos:end="39:26">/* TDAR */</comment>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:28">(<expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:18">ecr</name></name> <operator pos:start="41:20" pos:end="41:20">&amp;</operator> <name pos:start="41:22" pos:end="41:27">FEC_EN</name></expr>)</condition> <block pos:start="41:30" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:29">

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><call pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:25">imx_fec_do_tx</name><argument_list pos:start="43:26" pos:end="43:28">(<argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:15">case <expr pos:start="49:10" pos:end="49:14"><literal type="number" pos:start="49:10" pos:end="49:14">0x024</literal></expr>:</case> <comment type="block" pos:start="49:17" pos:end="49:25">/* ECR */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:14">ecr</name></name> <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:22">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:30">(<expr pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:17">value</name> <operator pos:start="53:19" pos:end="53:19">&amp;</operator> <name pos:start="53:21" pos:end="53:29">FEC_RESET</name></expr>)</condition> <block pos:start="53:32" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:37">

            <expr_stmt pos:start="55:13" pos:end="55:37"><expr pos:start="55:13" pos:end="55:36"><call pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:25">imx_fec_reset</name><argument_list pos:start="55:26" pos:end="55:36">(<argument pos:start="55:27" pos:end="55:35"><expr pos:start="55:27" pos:end="55:35"><call pos:start="55:27" pos:end="55:35"><name pos:start="55:27" pos:end="55:32">DEVICE</name><argument_list pos:start="55:33" pos:end="55:35">(<argument pos:start="55:34" pos:end="55:34"><expr pos:start="55:34" pos:end="55:34"><name pos:start="55:34" pos:end="55:34">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:35">(<expr pos:start="59:13" pos:end="59:34"><operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:19"><name pos:start="59:14" pos:end="59:14">s</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:19">ecr</name></name> <operator pos:start="59:21" pos:end="59:21">&amp;</operator> <name pos:start="59:23" pos:end="59:28">FEC_EN</name><operator pos:start="59:29" pos:end="59:29">)</operator> <operator pos:start="59:31" pos:end="59:32">==</operator> <literal type="number" pos:start="59:34" pos:end="59:34">0</literal></expr>)</condition> <block pos:start="59:37" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:30">

            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:25">rx_enabled</name></name> <operator pos:start="61:27" pos:end="61:27">=</operator> <literal type="number" pos:start="61:29" pos:end="61:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:15">case <expr pos:start="67:10" pos:end="67:14"><literal type="number" pos:start="67:10" pos:end="67:14">0x040</literal></expr>:</case> <comment type="block" pos:start="67:17" pos:end="67:26">/* MMFR */</comment>

        <comment type="block" pos:start="69:9" pos:end="69:29">/* store the value */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:24"><expr pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:15">mmfr</name></name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:23">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:36">(<expr pos:start="73:13" pos:end="73:35"><call pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:21">extract32</name><argument_list pos:start="73:22" pos:end="73:35">(<argument pos:start="73:23" pos:end="73:27"><expr pos:start="73:23" pos:end="73:27"><name pos:start="73:23" pos:end="73:27">value</name></expr></argument>, <argument pos:start="73:30" pos:end="73:31"><expr pos:start="73:30" pos:end="73:31"><literal type="number" pos:start="73:30" pos:end="73:31">28</literal></expr></argument>, <argument pos:start="73:34" pos:end="73:34"><expr pos:start="73:34" pos:end="73:34"><literal type="number" pos:start="73:34" pos:end="73:34">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:38" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:78">

            <expr_stmt pos:start="75:13" pos:end="75:78"><expr pos:start="75:13" pos:end="75:77"><call pos:start="75:13" pos:end="75:77"><name pos:start="75:13" pos:end="75:24">do_phy_write</name><argument_list pos:start="75:25" pos:end="75:77">(<argument pos:start="75:26" pos:end="75:26"><expr pos:start="75:26" pos:end="75:26"><name pos:start="75:26" pos:end="75:26">s</name></expr></argument>, <argument pos:start="75:29" pos:end="75:51"><expr pos:start="75:29" pos:end="75:51"><call pos:start="75:29" pos:end="75:51"><name pos:start="75:29" pos:end="75:37">extract32</name><argument_list pos:start="75:38" pos:end="75:51">(<argument pos:start="75:39" pos:end="75:43"><expr pos:start="75:39" pos:end="75:43"><name pos:start="75:39" pos:end="75:43">value</name></expr></argument>, <argument pos:start="75:46" pos:end="75:47"><expr pos:start="75:46" pos:end="75:47"><literal type="number" pos:start="75:46" pos:end="75:47">18</literal></expr></argument>, <argument pos:start="75:50" pos:end="75:50"><expr pos:start="75:50" pos:end="75:50"><literal type="number" pos:start="75:50" pos:end="75:50">9</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:54" pos:end="75:76"><expr pos:start="75:54" pos:end="75:76"><call pos:start="75:54" pos:end="75:76"><name pos:start="75:54" pos:end="75:62">extract32</name><argument_list pos:start="75:63" pos:end="75:76">(<argument pos:start="75:64" pos:end="75:68"><expr pos:start="75:64" pos:end="75:68"><name pos:start="75:64" pos:end="75:68">value</name></expr></argument>, <argument pos:start="75:71" pos:end="75:71"><expr pos:start="75:71" pos:end="75:71"><literal type="number" pos:start="75:71" pos:end="75:71">0</literal></expr></argument>, <argument pos:start="75:74" pos:end="75:75"><expr pos:start="75:74" pos:end="75:75"><literal type="number" pos:start="75:74" pos:end="75:75">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="81:9">else <block pos:start="77:16" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:62">

            <expr_stmt pos:start="79:13" pos:end="79:62"><expr pos:start="79:13" pos:end="79:61"><name pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:13">s</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:19">mmfr</name></name> <operator pos:start="79:21" pos:end="79:21">=</operator> <call pos:start="79:23" pos:end="79:61"><name pos:start="79:23" pos:end="79:33">do_phy_read</name><argument_list pos:start="79:34" pos:end="79:61">(<argument pos:start="79:35" pos:end="79:35"><expr pos:start="79:35" pos:end="79:35"><name pos:start="79:35" pos:end="79:35">s</name></expr></argument>, <argument pos:start="79:38" pos:end="79:60"><expr pos:start="79:38" pos:end="79:60"><call pos:start="79:38" pos:end="79:60"><name pos:start="79:38" pos:end="79:46">extract32</name><argument_list pos:start="79:47" pos:end="79:60">(<argument pos:start="79:48" pos:end="79:52"><expr pos:start="79:48" pos:end="79:52"><name pos:start="79:48" pos:end="79:52">value</name></expr></argument>, <argument pos:start="79:55" pos:end="79:56"><expr pos:start="79:55" pos:end="79:56"><literal type="number" pos:start="79:55" pos:end="79:56">18</literal></expr></argument>, <argument pos:start="79:59" pos:end="79:59"><expr pos:start="79:59" pos:end="79:59"><literal type="number" pos:start="79:59" pos:end="79:59">9</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="83:9" pos:end="83:62">/* raise the interrupt as the PHY operation is done */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:30"><expr pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:14"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:14">eir</name></name> <operator pos:start="85:16" pos:end="85:17">|=</operator> <name pos:start="85:19" pos:end="85:29">FEC_INT_MII</name></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:15">case <expr pos:start="89:10" pos:end="89:14"><literal type="number" pos:start="89:10" pos:end="89:14">0x044</literal></expr>:</case> <comment type="block" pos:start="89:17" pos:end="89:26">/* MSCR */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:31"><expr pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:15">mscr</name></name> <operator pos:start="91:17" pos:end="91:17">=</operator> <name pos:start="91:19" pos:end="91:23">value</name> <operator pos:start="91:25" pos:end="91:25">&amp;</operator> <literal type="number" pos:start="91:27" pos:end="91:30">0xfe</literal></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:15">case <expr pos:start="95:10" pos:end="95:14"><literal type="number" pos:start="95:10" pos:end="95:14">0x064</literal></expr>:</case> <comment type="block" pos:start="95:17" pos:end="95:26">/* MIBC */</comment>

        <comment type="block" pos:start="97:9" pos:end="97:35">/* TODO: Implement MIB.  */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:56"><expr pos:start="99:9" pos:end="99:55"><name pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:15">mibc</name></name> <operator pos:start="99:17" pos:end="99:17">=</operator> <ternary pos:start="99:19" pos:end="99:55"><condition pos:start="99:19" pos:end="99:40"><expr pos:start="99:19" pos:end="99:38"><operator pos:start="99:19" pos:end="99:19">(</operator><name pos:start="99:20" pos:end="99:24">value</name> <operator pos:start="99:26" pos:end="99:26">&amp;</operator> <literal type="number" pos:start="99:28" pos:end="99:37">0x80000000</literal><operator pos:start="99:38" pos:end="99:38">)</operator></expr> ?</condition><then pos:start="99:42" pos:end="99:51"> <expr pos:start="99:42" pos:end="99:51"><literal type="number" pos:start="99:42" pos:end="99:51">0xc0000000</literal></expr> </then><else pos:start="99:53" pos:end="99:55">: <expr pos:start="99:55" pos:end="99:55"><literal type="number" pos:start="99:55" pos:end="99:55">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:15">case <expr pos:start="103:10" pos:end="103:14"><literal type="number" pos:start="103:10" pos:end="103:14">0x084</literal></expr>:</case> <comment type="block" pos:start="103:17" pos:end="103:25">/* RCR */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:36"><expr pos:start="105:9" pos:end="105:35"><name pos:start="105:9" pos:end="105:14"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:14">rcr</name></name> <operator pos:start="105:16" pos:end="105:16">=</operator> <name pos:start="105:18" pos:end="105:22">value</name> <operator pos:start="105:24" pos:end="105:24">&amp;</operator> <literal type="number" pos:start="105:26" pos:end="105:35">0x07ff003f</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="107:9" pos:end="107:41">/* TODO: Implement LOOP mode.  */</comment>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:15">case <expr pos:start="111:10" pos:end="111:14"><literal type="number" pos:start="111:10" pos:end="111:14">0x0c4</literal></expr>:</case> <comment type="block" pos:start="111:17" pos:end="111:25">/* TCR */</comment>

        <comment type="block" pos:start="113:9" pos:end="113:65">/* We transmit immediately, so raise GRA immediately.  */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:23"><expr pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:14"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:14">tcr</name></name> <operator pos:start="115:16" pos:end="115:16">=</operator> <name pos:start="115:18" pos:end="115:22">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="121:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:22">(<expr pos:start="117:13" pos:end="117:21"><name pos:start="117:13" pos:end="117:17">value</name> <operator pos:start="117:19" pos:end="117:19">&amp;</operator> <literal type="number" pos:start="117:21" pos:end="117:21">1</literal></expr>)</condition> <block pos:start="117:24" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:34">

            <expr_stmt pos:start="119:13" pos:end="119:34"><expr pos:start="119:13" pos:end="119:33"><name pos:start="119:13" pos:end="119:18"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:18">eir</name></name> <operator pos:start="119:20" pos:end="119:21">|=</operator> <name pos:start="119:23" pos:end="119:33">FEC_INT_GRA</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <case pos:start="125:5" pos:end="125:15">case <expr pos:start="125:10" pos:end="125:14"><literal type="number" pos:start="125:10" pos:end="125:14">0x0e4</literal></expr>:</case> <comment type="block" pos:start="125:17" pos:end="125:26">/* PALR */</comment>

        <expr_stmt pos:start="127:9" pos:end="127:43"><expr pos:start="127:9" pos:end="127:42"><name pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:15">conf</name><operator pos:start="127:16" pos:end="127:16">.</operator><name pos:start="127:17" pos:end="127:23">macaddr</name><operator pos:start="127:24" pos:end="127:24">.</operator><name pos:start="127:25" pos:end="127:25">a</name><index pos:start="127:26" pos:end="127:28">[<expr pos:start="127:27" pos:end="127:27"><literal type="number" pos:start="127:27" pos:end="127:27">0</literal></expr>]</index></name> <operator pos:start="127:30" pos:end="127:30">=</operator> <name pos:start="127:32" pos:end="127:36">value</name> <operator pos:start="127:38" pos:end="127:39">&gt;&gt;</operator> <literal type="number" pos:start="127:41" pos:end="127:42">24</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:43"><expr pos:start="129:9" pos:end="129:42"><name pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:15">conf</name><operator pos:start="129:16" pos:end="129:16">.</operator><name pos:start="129:17" pos:end="129:23">macaddr</name><operator pos:start="129:24" pos:end="129:24">.</operator><name pos:start="129:25" pos:end="129:25">a</name><index pos:start="129:26" pos:end="129:28">[<expr pos:start="129:27" pos:end="129:27"><literal type="number" pos:start="129:27" pos:end="129:27">1</literal></expr>]</index></name> <operator pos:start="129:30" pos:end="129:30">=</operator> <name pos:start="129:32" pos:end="129:36">value</name> <operator pos:start="129:38" pos:end="129:39">&gt;&gt;</operator> <literal type="number" pos:start="129:41" pos:end="129:42">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:42"><expr pos:start="131:9" pos:end="131:41"><name pos:start="131:9" pos:end="131:28"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:15">conf</name><operator pos:start="131:16" pos:end="131:16">.</operator><name pos:start="131:17" pos:end="131:23">macaddr</name><operator pos:start="131:24" pos:end="131:24">.</operator><name pos:start="131:25" pos:end="131:25">a</name><index pos:start="131:26" pos:end="131:28">[<expr pos:start="131:27" pos:end="131:27"><literal type="number" pos:start="131:27" pos:end="131:27">2</literal></expr>]</index></name> <operator pos:start="131:30" pos:end="131:30">=</operator> <name pos:start="131:32" pos:end="131:36">value</name> <operator pos:start="131:38" pos:end="131:39">&gt;&gt;</operator> <literal type="number" pos:start="131:41" pos:end="131:41">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:37"><expr pos:start="133:9" pos:end="133:36"><name pos:start="133:9" pos:end="133:28"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:15">conf</name><operator pos:start="133:16" pos:end="133:16">.</operator><name pos:start="133:17" pos:end="133:23">macaddr</name><operator pos:start="133:24" pos:end="133:24">.</operator><name pos:start="133:25" pos:end="133:25">a</name><index pos:start="133:26" pos:end="133:28">[<expr pos:start="133:27" pos:end="133:27"><literal type="number" pos:start="133:27" pos:end="133:27">3</literal></expr>]</index></name> <operator pos:start="133:30" pos:end="133:30">=</operator> <name pos:start="133:32" pos:end="133:36">value</name></expr>;</expr_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    <case pos:start="137:5" pos:end="137:15">case <expr pos:start="137:10" pos:end="137:14"><literal type="number" pos:start="137:10" pos:end="137:14">0x0e8</literal></expr>:</case> <comment type="block" pos:start="137:17" pos:end="137:26">/* PAUR */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:43"><expr pos:start="139:9" pos:end="139:42"><name pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:15">conf</name><operator pos:start="139:16" pos:end="139:16">.</operator><name pos:start="139:17" pos:end="139:23">macaddr</name><operator pos:start="139:24" pos:end="139:24">.</operator><name pos:start="139:25" pos:end="139:25">a</name><index pos:start="139:26" pos:end="139:28">[<expr pos:start="139:27" pos:end="139:27"><literal type="number" pos:start="139:27" pos:end="139:27">4</literal></expr>]</index></name> <operator pos:start="139:30" pos:end="139:30">=</operator> <name pos:start="139:32" pos:end="139:36">value</name> <operator pos:start="139:38" pos:end="139:39">&gt;&gt;</operator> <literal type="number" pos:start="139:41" pos:end="139:42">24</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:43"><expr pos:start="141:9" pos:end="141:42"><name pos:start="141:9" pos:end="141:28"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:15">conf</name><operator pos:start="141:16" pos:end="141:16">.</operator><name pos:start="141:17" pos:end="141:23">macaddr</name><operator pos:start="141:24" pos:end="141:24">.</operator><name pos:start="141:25" pos:end="141:25">a</name><index pos:start="141:26" pos:end="141:28">[<expr pos:start="141:27" pos:end="141:27"><literal type="number" pos:start="141:27" pos:end="141:27">5</literal></expr>]</index></name> <operator pos:start="141:30" pos:end="141:30">=</operator> <name pos:start="141:32" pos:end="141:36">value</name> <operator pos:start="141:38" pos:end="141:39">&gt;&gt;</operator> <literal type="number" pos:start="141:41" pos:end="141:42">16</literal></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    <case pos:start="145:5" pos:end="145:15">case <expr pos:start="145:10" pos:end="145:14"><literal type="number" pos:start="145:10" pos:end="145:14">0x0ec</literal></expr>:</case> <comment type="block" pos:start="145:17" pos:end="145:26">/* OPDR */</comment>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:15">case <expr pos:start="149:10" pos:end="149:14"><literal type="number" pos:start="149:10" pos:end="149:14">0x118</literal></expr>:</case> <comment type="block" pos:start="149:17" pos:end="149:26">/* IAUR */</comment>

    <case pos:start="151:5" pos:end="151:15">case <expr pos:start="151:10" pos:end="151:14"><literal type="number" pos:start="151:10" pos:end="151:14">0x11c</literal></expr>:</case> <comment type="block" pos:start="151:17" pos:end="151:26">/* IALR */</comment>

    <case pos:start="153:5" pos:end="153:15">case <expr pos:start="153:10" pos:end="153:14"><literal type="number" pos:start="153:10" pos:end="153:14">0x120</literal></expr>:</case> <comment type="block" pos:start="153:17" pos:end="153:26">/* GAUR */</comment>

    <case pos:start="155:5" pos:end="155:15">case <expr pos:start="155:10" pos:end="155:14"><literal type="number" pos:start="155:10" pos:end="155:14">0x124</literal></expr>:</case> <comment type="block" pos:start="155:17" pos:end="155:26">/* GALR */</comment>

        <comment type="block" pos:start="157:9" pos:end="157:50">/* TODO: implement MAC hash filtering.  */</comment>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <case pos:start="161:5" pos:end="161:15">case <expr pos:start="161:10" pos:end="161:14"><literal type="number" pos:start="161:10" pos:end="161:14">0x144</literal></expr>:</case> <comment type="block" pos:start="161:17" pos:end="161:26">/* TFWR */</comment>

        <expr_stmt pos:start="163:9" pos:end="163:28"><expr pos:start="163:9" pos:end="163:27"><name pos:start="163:9" pos:end="163:15"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:15">tfwr</name></name> <operator pos:start="163:17" pos:end="163:17">=</operator> <name pos:start="163:19" pos:end="163:23">value</name> <operator pos:start="163:25" pos:end="163:25">&amp;</operator> <literal type="number" pos:start="163:27" pos:end="163:27">3</literal></expr>;</expr_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:15">case <expr pos:start="167:10" pos:end="167:14"><literal type="number" pos:start="167:10" pos:end="167:14">0x14c</literal></expr>:</case> <comment type="block" pos:start="167:17" pos:end="167:26">/* FRBR */</comment>

        <comment type="block" pos:start="169:9" pos:end="169:35">/* FRBR writes ignored.  */</comment>

        <break pos:start="171:9" pos:end="171:14">break;</break>

    <case pos:start="173:5" pos:end="173:15">case <expr pos:start="173:10" pos:end="173:14"><literal type="number" pos:start="173:10" pos:end="173:14">0x150</literal></expr>:</case> <comment type="block" pos:start="173:17" pos:end="173:26">/* FRSR */</comment>

        <expr_stmt pos:start="175:9" pos:end="175:42"><expr pos:start="175:9" pos:end="175:41"><name pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:9">s</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:15">frsr</name></name> <operator pos:start="175:17" pos:end="175:17">=</operator> <operator pos:start="175:19" pos:end="175:19">(</operator><name pos:start="175:20" pos:end="175:24">value</name> <operator pos:start="175:26" pos:end="175:26">&amp;</operator> <literal type="number" pos:start="175:28" pos:end="175:32">0x3fc</literal><operator pos:start="175:33" pos:end="175:33">)</operator> <operator pos:start="175:35" pos:end="175:35">|</operator> <literal type="number" pos:start="175:37" pos:end="175:41">0x400</literal></expr>;</expr_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <case pos:start="179:5" pos:end="179:15">case <expr pos:start="179:10" pos:end="179:14"><literal type="number" pos:start="179:10" pos:end="179:14">0x180</literal></expr>:</case> <comment type="block" pos:start="179:17" pos:end="179:27">/* ERDSR */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:30"><expr pos:start="181:9" pos:end="181:29"><name pos:start="181:9" pos:end="181:16"><name pos:start="181:9" pos:end="181:9">s</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:16">erdsr</name></name> <operator pos:start="181:18" pos:end="181:18">=</operator> <name pos:start="181:20" pos:end="181:24">value</name> <operator pos:start="181:26" pos:end="181:26">&amp;</operator> <operator pos:start="181:28" pos:end="181:28">~</operator><literal type="number" pos:start="181:29" pos:end="181:29">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:36"><expr pos:start="183:9" pos:end="183:35"><name pos:start="183:9" pos:end="183:24"><name pos:start="183:9" pos:end="183:9">s</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:24">rx_descriptor</name></name> <operator pos:start="183:26" pos:end="183:26">=</operator> <name pos:start="183:28" pos:end="183:35"><name pos:start="183:28" pos:end="183:28">s</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:35">erdsr</name></name></expr>;</expr_stmt>

        <break pos:start="185:9" pos:end="185:14">break;</break>

    <case pos:start="187:5" pos:end="187:15">case <expr pos:start="187:10" pos:end="187:14"><literal type="number" pos:start="187:10" pos:end="187:14">0x184</literal></expr>:</case> <comment type="block" pos:start="187:17" pos:end="187:27">/* ETDSR */</comment>

        <expr_stmt pos:start="189:9" pos:end="189:30"><expr pos:start="189:9" pos:end="189:29"><name pos:start="189:9" pos:end="189:16"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:16">etdsr</name></name> <operator pos:start="189:18" pos:end="189:18">=</operator> <name pos:start="189:20" pos:end="189:24">value</name> <operator pos:start="189:26" pos:end="189:26">&amp;</operator> <operator pos:start="189:28" pos:end="189:28">~</operator><literal type="number" pos:start="189:29" pos:end="189:29">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:36"><expr pos:start="191:9" pos:end="191:35"><name pos:start="191:9" pos:end="191:24"><name pos:start="191:9" pos:end="191:9">s</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:24">tx_descriptor</name></name> <operator pos:start="191:26" pos:end="191:26">=</operator> <name pos:start="191:28" pos:end="191:35"><name pos:start="191:28" pos:end="191:28">s</name><operator pos:start="191:29" pos:end="191:30">-&gt;</operator><name pos:start="191:31" pos:end="191:35">etdsr</name></name></expr>;</expr_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <case pos:start="195:5" pos:end="195:15">case <expr pos:start="195:10" pos:end="195:14"><literal type="number" pos:start="195:10" pos:end="195:14">0x188</literal></expr>:</case> <comment type="block" pos:start="195:17" pos:end="195:27">/* EMRBR */</comment>

        <expr_stmt pos:start="197:9" pos:end="197:33"><expr pos:start="197:9" pos:end="197:32"><name pos:start="197:9" pos:end="197:16"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:16">emrbr</name></name> <operator pos:start="197:18" pos:end="197:18">=</operator> <name pos:start="197:20" pos:end="197:24">value</name> <operator pos:start="197:26" pos:end="197:26">&amp;</operator> <literal type="number" pos:start="197:28" pos:end="197:32">0x7f0</literal></expr>;</expr_stmt>

        <break pos:start="199:9" pos:end="199:14">break;</break>

    <case pos:start="201:5" pos:end="201:15">case <expr pos:start="201:10" pos:end="201:14"><literal type="number" pos:start="201:10" pos:end="201:14">0x300</literal></expr>:</case> <comment type="block" pos:start="201:17" pos:end="201:33">/* MIIGSK_CFGR */</comment>

        <expr_stmt pos:start="203:9" pos:end="203:38"><expr pos:start="203:9" pos:end="203:37"><name pos:start="203:9" pos:end="203:22"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:22">miigsk_cfgr</name></name> <operator pos:start="203:24" pos:end="203:24">=</operator> <name pos:start="203:26" pos:end="203:30">value</name> <operator pos:start="203:32" pos:end="203:32">&amp;</operator> <literal type="number" pos:start="203:34" pos:end="203:37">0x53</literal></expr>;</expr_stmt>

        <break pos:start="205:9" pos:end="205:14">break;</break>

    <case pos:start="207:5" pos:end="207:15">case <expr pos:start="207:10" pos:end="207:14"><literal type="number" pos:start="207:10" pos:end="207:14">0x308</literal></expr>:</case> <comment type="block" pos:start="207:17" pos:end="207:32">/* MIIGSK_ENR */</comment>

        <expr_stmt pos:start="209:9" pos:end="209:48"><expr pos:start="209:9" pos:end="209:47"><name pos:start="209:9" pos:end="209:21"><name pos:start="209:9" pos:end="209:9">s</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:21">miigsk_enr</name></name> <operator pos:start="209:23" pos:end="209:23">=</operator> <ternary pos:start="209:25" pos:end="209:47"><condition pos:start="209:25" pos:end="209:39"><expr pos:start="209:25" pos:end="209:37"><operator pos:start="209:25" pos:end="209:25">(</operator><name pos:start="209:26" pos:end="209:30">value</name> <operator pos:start="209:32" pos:end="209:32">&amp;</operator> <literal type="number" pos:start="209:34" pos:end="209:36">0x2</literal><operator pos:start="209:37" pos:end="209:37">)</operator></expr> ?</condition><then pos:start="209:41" pos:end="209:43"> <expr pos:start="209:41" pos:end="209:43"><literal type="number" pos:start="209:41" pos:end="209:43">0x6</literal></expr> </then><else pos:start="209:45" pos:end="209:47">: <expr pos:start="209:47" pos:end="209:47"><literal type="number" pos:start="209:47" pos:end="209:47">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="211:9" pos:end="211:14">break;</break>

    <default pos:start="213:5" pos:end="213:12">default:</default>

        <expr_stmt pos:start="215:9" pos:end="217:70"><expr pos:start="215:9" pos:end="217:69"><call pos:start="215:9" pos:end="217:69"><name pos:start="215:9" pos:end="215:21">qemu_log_mask</name><argument_list pos:start="215:22" pos:end="217:69">(<argument pos:start="215:23" pos:end="215:37"><expr pos:start="215:23" pos:end="215:37"><name pos:start="215:23" pos:end="215:37">LOG_GUEST_ERROR</name></expr></argument>, <argument pos:start="215:40" pos:end="217:38"><expr pos:start="215:40" pos:end="217:38"><literal type="string" pos:start="215:40" pos:end="215:74">"[%s]%s: Bad address at offset 0x%"</literal>

                      <name pos:start="217:23" pos:end="217:33">HWADDR_PRIx</name> <literal type="string" pos:start="217:35" pos:end="217:38">"\n"</literal></expr></argument>, <argument pos:start="217:41" pos:end="217:52"><expr pos:start="217:41" pos:end="217:52"><name pos:start="217:41" pos:end="217:52">TYPE_IMX_FEC</name></expr></argument>, <argument pos:start="217:55" pos:end="217:62"><expr pos:start="217:55" pos:end="217:62"><name pos:start="217:55" pos:end="217:62">__func__</name></expr></argument>, <argument pos:start="217:65" pos:end="217:68"><expr pos:start="217:65" pos:end="217:68"><name pos:start="217:65" pos:end="217:68">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="219:9" pos:end="219:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="225:5" pos:end="225:22"><expr pos:start="225:5" pos:end="225:21"><call pos:start="225:5" pos:end="225:21"><name pos:start="225:5" pos:end="225:18">imx_fec_update</name><argument_list pos:start="225:19" pos:end="225:21">(<argument pos:start="225:20" pos:end="225:20"><expr pos:start="225:20" pos:end="225:20"><name pos:start="225:20" pos:end="225:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
