<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20962.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">ppm_save</name><parameter_list pos:start="1:14" pos:end="1:76">(<parameter pos:start="1:15" pos:end="1:34"><decl pos:start="1:15" pos:end="1:34"><type pos:start="1:15" pos:end="1:34"><specifier pos:start="1:15" pos:end="1:19">const</specifier> <name pos:start="1:21" pos:end="1:24">char</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:34">filename</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:61"><decl pos:start="1:37" pos:end="1:61"><type pos:start="1:37" pos:end="1:61"><name pos:start="1:37" pos:end="1:57"><name pos:start="1:37" pos:end="1:42">struct</name> <name pos:start="1:44" pos:end="1:57">DisplaySurface</name></name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">ds</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:75"><decl pos:start="1:64" pos:end="1:75"><type pos:start="1:64" pos:end="1:75"><name pos:start="1:64" pos:end="1:68">Error</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier><modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:13">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">width</name> <init pos:start="5:15" pos:end="5:49">= <expr pos:start="5:17" pos:end="5:49"><call pos:start="5:17" pos:end="5:49"><name pos:start="5:17" pos:end="5:38">pixman_image_get_width</name><argument_list pos:start="5:39" pos:end="5:49">(<argument pos:start="5:40" pos:end="5:48"><expr pos:start="5:40" pos:end="5:48"><name pos:start="5:40" pos:end="5:48"><name pos:start="5:40" pos:end="5:41">ds</name><operator pos:start="5:42" pos:end="5:43">-&gt;</operator><name pos:start="5:44" pos:end="5:48">image</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">height</name> <init pos:start="7:16" pos:end="7:51">= <expr pos:start="7:18" pos:end="7:51"><call pos:start="7:18" pos:end="7:51"><name pos:start="7:18" pos:end="7:40">pixman_image_get_height</name><argument_list pos:start="7:41" pos:end="7:51">(<argument pos:start="7:42" pos:end="7:50"><expr pos:start="7:42" pos:end="7:50"><name pos:start="7:42" pos:end="7:50"><name pos:start="7:42" pos:end="7:43">ds</name><operator pos:start="7:44" pos:end="7:45">-&gt;</operator><name pos:start="7:46" pos:end="7:50">image</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">FILE</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:11">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">pixman_image_t</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:27">linebuf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><call pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:18">trace_ppm_save</name><argument_list pos:start="19:19" pos:end="19:32">(<argument pos:start="19:20" pos:end="19:27"><expr pos:start="19:20" pos:end="19:27"><name pos:start="19:20" pos:end="19:27">filename</name></expr></argument>, <argument pos:start="19:30" pos:end="19:31"><expr pos:start="19:30" pos:end="19:31"><name pos:start="19:30" pos:end="19:31">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:5">f</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:13">fopen</name><argument_list pos:start="21:14" pos:end="21:29">(<argument pos:start="21:15" pos:end="21:22"><expr pos:start="21:15" pos:end="21:22"><name pos:start="21:15" pos:end="21:22">filename</name></expr></argument>, <argument pos:start="21:25" pos:end="21:28"><expr pos:start="21:25" pos:end="21:28"><literal type="string" pos:start="21:25" pos:end="21:28">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:11">(<expr pos:start="23:9" pos:end="23:10"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:10">f</name></expr>)</condition> <block pos:start="23:13" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:15">

        <expr_stmt pos:start="25:9" pos:end="27:36"><expr pos:start="25:9" pos:end="27:35"><call pos:start="25:9" pos:end="27:35"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="27:35">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="25:55"><expr pos:start="25:26" pos:end="25:55"><literal type="string" pos:start="25:26" pos:end="25:55">"failed to open file '%s': %s"</literal></expr></argument>, <argument pos:start="25:58" pos:end="25:65"><expr pos:start="25:58" pos:end="25:65"><name pos:start="25:58" pos:end="25:65">filename</name></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:34"><expr pos:start="27:20" pos:end="27:34"><call pos:start="27:20" pos:end="27:34"><name pos:start="27:20" pos:end="27:27">strerror</name><argument_list pos:start="27:28" pos:end="27:34">(<argument pos:start="27:29" pos:end="27:33"><expr pos:start="27:29" pos:end="27:33"><name pos:start="27:29" pos:end="27:33">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:60"><expr pos:start="33:5" pos:end="33:59"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:59"><name pos:start="33:11" pos:end="33:17">fprintf</name><argument_list pos:start="33:18" pos:end="33:59">(<argument pos:start="33:19" pos:end="33:19"><expr pos:start="33:19" pos:end="33:19"><name pos:start="33:19" pos:end="33:19">f</name></expr></argument>, <argument pos:start="33:22" pos:end="33:38"><expr pos:start="33:22" pos:end="33:38"><literal type="string" pos:start="33:22" pos:end="33:38">"P6\n%d %d\n%d\n"</literal></expr></argument>, <argument pos:start="33:41" pos:end="33:45"><expr pos:start="33:41" pos:end="33:45"><name pos:start="33:41" pos:end="33:45">width</name></expr></argument>, <argument pos:start="33:48" pos:end="33:53"><expr pos:start="33:48" pos:end="33:53"><name pos:start="33:48" pos:end="33:53">height</name></expr></argument>, <argument pos:start="33:56" pos:end="33:58"><expr pos:start="33:56" pos:end="33:58"><literal type="number" pos:start="33:56" pos:end="33:58">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>)</condition> <block pos:start="35:18" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:23">

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:15">linebuf</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:22">NULL</name></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:23">goto <name pos:start="39:14" pos:end="39:22">write_err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:66"><expr pos:start="43:5" pos:end="43:65"><name pos:start="43:5" pos:end="43:11">linebuf</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:65"><name pos:start="43:15" pos:end="43:40">qemu_pixman_linebuf_create</name><argument_list pos:start="43:41" pos:end="43:65">(<argument pos:start="43:42" pos:end="43:57"><expr pos:start="43:42" pos:end="43:57"><name pos:start="43:42" pos:end="43:57">PIXMAN_BE_r8g8b8</name></expr></argument>, <argument pos:start="43:60" pos:end="43:64"><expr pos:start="43:60" pos:end="43:64"><name pos:start="43:60" pos:end="43:64">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="45:5" pos:end="63:5">for <control pos:start="45:9" pos:end="45:32">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">y</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:27"><expr pos:start="45:17" pos:end="45:26"><name pos:start="45:17" pos:end="45:17">y</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:26">height</name></expr>;</condition> <incr pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:29">y</name><operator pos:start="45:30" pos:end="45:31">++</operator></expr></incr>)</control> <block pos:start="45:34" pos:end="63:5">{<block_content pos:start="47:9" pos:end="61:9">

        <expr_stmt pos:start="47:9" pos:end="47:66"><expr pos:start="47:9" pos:end="47:65"><call pos:start="47:9" pos:end="47:65"><name pos:start="47:9" pos:end="47:32">qemu_pixman_linebuf_fill</name><argument_list pos:start="47:33" pos:end="47:65">(<argument pos:start="47:34" pos:end="47:40"><expr pos:start="47:34" pos:end="47:40"><name pos:start="47:34" pos:end="47:40">linebuf</name></expr></argument>, <argument pos:start="47:43" pos:end="47:51"><expr pos:start="47:43" pos:end="47:51"><name pos:start="47:43" pos:end="47:51"><name pos:start="47:43" pos:end="47:44">ds</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:51">image</name></name></expr></argument>, <argument pos:start="47:54" pos:end="47:58"><expr pos:start="47:54" pos:end="47:58"><name pos:start="47:54" pos:end="47:58">width</name></expr></argument>, <argument pos:start="47:61" pos:end="47:61"><expr pos:start="47:61" pos:end="47:61"><literal type="number" pos:start="47:61" pos:end="47:61">0</literal></expr></argument>, <argument pos:start="47:64" pos:end="47:64"><expr pos:start="47:64" pos:end="47:64"><name pos:start="47:64" pos:end="47:64">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:20"><expr pos:start="49:9" pos:end="49:19"><call pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:16">clearerr</name><argument_list pos:start="49:17" pos:end="49:19">(<argument pos:start="49:18" pos:end="49:18"><expr pos:start="49:18" pos:end="49:18"><name pos:start="49:18" pos:end="49:18">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="53:58"><expr pos:start="51:9" pos:end="53:57"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="53:57"><name pos:start="51:15" pos:end="51:20">fwrite</name><argument_list pos:start="51:21" pos:end="53:57">(<argument pos:start="51:22" pos:end="51:51"><expr pos:start="51:22" pos:end="51:51"><call pos:start="51:22" pos:end="51:51"><name pos:start="51:22" pos:end="51:42">pixman_image_get_data</name><argument_list pos:start="51:43" pos:end="51:51">(<argument pos:start="51:44" pos:end="51:50"><expr pos:start="51:44" pos:end="51:50"><name pos:start="51:44" pos:end="51:50">linebuf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:54" pos:end="51:54"><expr pos:start="51:54" pos:end="51:54"><literal type="number" pos:start="51:54" pos:end="51:54">1</literal></expr></argument>,

                     <argument pos:start="53:22" pos:end="53:53"><expr pos:start="53:22" pos:end="53:53"><call pos:start="53:22" pos:end="53:53"><name pos:start="53:22" pos:end="53:44">pixman_image_get_stride</name><argument_list pos:start="53:45" pos:end="53:53">(<argument pos:start="53:46" pos:end="53:52"><expr pos:start="53:46" pos:end="53:52"><name pos:start="53:46" pos:end="53:52">linebuf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:56" pos:end="53:56"><expr pos:start="53:56" pos:end="53:56"><name pos:start="53:56" pos:end="53:56">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:18"><expr pos:start="55:9" pos:end="55:17"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:13">void</name><operator pos:start="55:14" pos:end="55:14">)</operator><name pos:start="55:15" pos:end="55:17">ret</name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:22">(<expr pos:start="57:13" pos:end="57:21"><call pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:18">ferror</name><argument_list pos:start="57:19" pos:end="57:21">(<argument pos:start="57:20" pos:end="57:20"><expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:24" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:27">

            <goto pos:start="59:13" pos:end="59:27">goto <name pos:start="59:18" pos:end="59:26">write_err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



<label pos:start="67:1" pos:end="67:4"><name pos:start="67:1" pos:end="67:3">out</name>:</label>

    <expr_stmt pos:start="69:5" pos:end="69:37"><expr pos:start="69:5" pos:end="69:36"><call pos:start="69:5" pos:end="69:36"><name pos:start="69:5" pos:end="69:27">qemu_pixman_image_unref</name><argument_list pos:start="69:28" pos:end="69:36">(<argument pos:start="69:29" pos:end="69:35"><expr pos:start="69:29" pos:end="69:35"><name pos:start="69:29" pos:end="69:35">linebuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:14"><expr pos:start="71:5" pos:end="71:13"><call pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:10">fclose</name><argument_list pos:start="71:11" pos:end="71:13">(<argument pos:start="71:12" pos:end="71:12"><expr pos:start="71:12" pos:end="71:12"><name pos:start="71:12" pos:end="71:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:11">return;</return>



<label pos:start="77:1" pos:end="77:10"><name pos:start="77:1" pos:end="77:9">write_err</name>:</label>

    <expr_stmt pos:start="79:5" pos:end="81:32"><expr pos:start="79:5" pos:end="81:31"><call pos:start="79:5" pos:end="81:31"><name pos:start="79:5" pos:end="79:14">error_setg</name><argument_list pos:start="79:15" pos:end="81:31">(<argument pos:start="79:16" pos:end="79:19"><expr pos:start="79:16" pos:end="79:19"><name pos:start="79:16" pos:end="79:19">errp</name></expr></argument>, <argument pos:start="79:22" pos:end="79:55"><expr pos:start="79:22" pos:end="79:55"><literal type="string" pos:start="79:22" pos:end="79:55">"failed to write to file '%s': %s"</literal></expr></argument>, <argument pos:start="79:58" pos:end="79:65"><expr pos:start="79:58" pos:end="79:65"><name pos:start="79:58" pos:end="79:65">filename</name></expr></argument>,

               <argument pos:start="81:16" pos:end="81:30"><expr pos:start="81:16" pos:end="81:30"><call pos:start="81:16" pos:end="81:30"><name pos:start="81:16" pos:end="81:23">strerror</name><argument_list pos:start="81:24" pos:end="81:30">(<argument pos:start="81:25" pos:end="81:29"><expr pos:start="81:25" pos:end="81:29"><name pos:start="81:25" pos:end="81:29">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:21"><expr pos:start="83:5" pos:end="83:20"><call pos:start="83:5" pos:end="83:20"><name pos:start="83:5" pos:end="83:10">unlink</name><argument_list pos:start="83:11" pos:end="83:20">(<argument pos:start="83:12" pos:end="83:19"><expr pos:start="83:12" pos:end="83:19"><name pos:start="83:12" pos:end="83:19">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <goto pos:start="85:5" pos:end="85:13">goto <name pos:start="85:10" pos:end="85:12">out</name>;</goto>

</block_content>}</block></function>
</unit>
