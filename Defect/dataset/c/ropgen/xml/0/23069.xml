<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23069.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">mpeg4_decode_partitioned_mb</name><parameter_list pos:start="1:39" pos:end="1:79">(<parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:53">MpegEncContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:78"><decl pos:start="1:59" pos:end="1:78"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:65">DCTELEM</name></type> <name pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:71">block</name><index pos:start="1:72" pos:end="1:74">[<expr pos:start="1:73" pos:end="1:73"><literal type="number" pos:start="1:73" pos:end="1:73">6</literal></expr>]</index><index pos:start="1:75" pos:end="1:78">[<expr pos:start="1:76" pos:end="1:77"><literal type="number" pos:start="1:76" pos:end="1:77">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="191:1">{<block_content pos:start="5:5" pos:end="189:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">cbp</name></decl>, <decl pos:start="5:14" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:20">mb_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:16">xy</name><init pos:start="7:17" pos:end="7:47">= <expr pos:start="7:19" pos:end="7:47"><name pos:start="7:19" pos:end="7:25"><name pos:start="7:19" pos:end="7:19">s</name><operator pos:start="7:20" pos:end="7:21">-&gt;</operator><name pos:start="7:22" pos:end="7:25">mb_x</name></name> <operator pos:start="7:27" pos:end="7:27">+</operator> <name pos:start="7:29" pos:end="7:35"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:35">mb_y</name></name><operator pos:start="7:36" pos:end="7:36">*</operator><name pos:start="7:37" pos:end="7:47"><name pos:start="7:37" pos:end="7:37">s</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:47">mb_width</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:28"><expr pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:11">mb_type</name><operator pos:start="11:12" pos:end="11:12">=</operator> <name pos:start="11:14" pos:end="11:27"><name pos:start="11:14" pos:end="11:14">s</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:23">mb_type</name><index pos:start="11:24" pos:end="11:27">[<expr pos:start="11:25" pos:end="11:26"><name pos:start="11:25" pos:end="11:26">xy</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">cbp</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <name pos:start="13:11" pos:end="13:26"><name pos:start="13:11" pos:end="13:11">s</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:22">cbp_table</name><index pos:start="13:23" pos:end="13:26">[<expr pos:start="13:24" pos:end="13:25"><name pos:start="13:24" pos:end="13:25">xy</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if<condition pos:start="17:7" pos:end="17:56">(<expr pos:start="17:8" pos:end="17:55"><name pos:start="17:8" pos:end="17:42"><name pos:start="17:8" pos:end="17:8">s</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:25">current_picture</name><operator pos:start="17:26" pos:end="17:26">.</operator><name pos:start="17:27" pos:end="17:38">qscale_table</name><index pos:start="17:39" pos:end="17:42">[<expr pos:start="17:40" pos:end="17:41"><name pos:start="17:40" pos:end="17:41">xy</name></expr>]</index></name> <operator pos:start="17:44" pos:end="17:45">!=</operator> <name pos:start="17:47" pos:end="17:55"><name pos:start="17:47" pos:end="17:47">s</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:55">qscale</name></name></expr>)</condition><block pos:start="17:57" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:56">

        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">qscale</name></name><operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:54"><name pos:start="19:20" pos:end="19:20">s</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:37">current_picture</name><operator pos:start="19:38" pos:end="19:38">.</operator><name pos:start="19:39" pos:end="19:50">qscale_table</name><index pos:start="19:51" pos:end="19:54">[<expr pos:start="19:52" pos:end="19:53"><name pos:start="19:52" pos:end="19:53">xy</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:56"><expr pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:21">y_dc_scale</name></name><operator pos:start="21:22" pos:end="21:22">=</operator> <name pos:start="21:24" pos:end="21:55"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:42">y_dc_scale_table</name><index pos:start="21:43" pos:end="21:55">[ <expr pos:start="21:45" pos:end="21:53"><name pos:start="21:45" pos:end="21:53"><name pos:start="21:45" pos:end="21:45">s</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:53">qscale</name></name></expr> ]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:56"><expr pos:start="23:9" pos:end="23:55"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:21">c_dc_scale</name></name><operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:55"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:42">c_dc_scale_table</name><index pos:start="23:43" pos:end="23:55">[ <expr pos:start="23:45" pos:end="23:53"><name pos:start="23:45" pos:end="23:53"><name pos:start="23:45" pos:end="23:45">s</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:53">qscale</name></name></expr> ]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="29:5" pos:end="155:5"><if pos:start="29:5" pos:end="129:5">if <condition pos:start="29:8" pos:end="29:55">(<expr pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:20">pict_type</name></name> <operator pos:start="29:22" pos:end="29:23">==</operator> <name pos:start="29:25" pos:end="29:30">P_TYPE</name> <operator pos:start="29:32" pos:end="29:33">||</operator> <name pos:start="29:35" pos:end="29:46"><name pos:start="29:35" pos:end="29:35">s</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:46">pict_type</name></name><operator pos:start="29:47" pos:end="29:48">==</operator><name pos:start="29:49" pos:end="29:54">S_TYPE</name></expr>)</condition> <block pos:start="29:57" pos:end="129:5">{<block_content pos:start="31:9" pos:end="127:9">

        <decl_stmt pos:start="31:9" pos:end="31:14"><decl pos:start="31:9" pos:end="31:13"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">i</name></decl>;</decl_stmt>

        <for pos:start="33:9" pos:end="39:9">for<control pos:start="33:12" pos:end="33:26">(<init pos:start="33:13" pos:end="33:16"><expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:13">i</name><operator pos:start="33:14" pos:end="33:14">=</operator><literal type="number" pos:start="33:15" pos:end="33:15">0</literal></expr>;</init> <condition pos:start="33:18" pos:end="33:21"><expr pos:start="33:18" pos:end="33:20"><name pos:start="33:18" pos:end="33:18">i</name><operator pos:start="33:19" pos:end="33:19">&lt;</operator><literal type="number" pos:start="33:20" pos:end="33:20">4</literal></expr>;</condition> <incr pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><name pos:start="33:23" pos:end="33:23">i</name><operator pos:start="33:24" pos:end="33:25">++</operator></expr></incr>)</control><block pos:start="33:27" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:67">

            <expr_stmt pos:start="35:13" pos:end="35:67"><expr pos:start="35:13" pos:end="35:66"><name pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:17">mv</name><index pos:start="35:18" pos:end="35:20">[<expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>]</index><index pos:start="35:21" pos:end="35:23">[<expr pos:start="35:22" pos:end="35:22"><name pos:start="35:22" pos:end="35:22">i</name></expr>]</index><index pos:start="35:24" pos:end="35:26">[<expr pos:start="35:25" pos:end="35:25"><literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>]</index></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:66"><name pos:start="35:30" pos:end="35:30">s</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:42">motion_val</name><index pos:start="35:43" pos:end="35:63">[ <expr pos:start="35:45" pos:end="35:61"><name pos:start="35:45" pos:end="35:61"><name pos:start="35:45" pos:end="35:45">s</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:58">block_index</name><index pos:start="35:59" pos:end="35:61">[<expr pos:start="35:60" pos:end="35:60"><name pos:start="35:60" pos:end="35:60">i</name></expr>]</index></name></expr> ]</index><index pos:start="35:64" pos:end="35:66">[<expr pos:start="35:65" pos:end="35:65"><literal type="number" pos:start="35:65" pos:end="35:65">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:67"><expr pos:start="37:13" pos:end="37:66"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:17">mv</name><index pos:start="37:18" pos:end="37:20">[<expr pos:start="37:19" pos:end="37:19"><literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>]</index><index pos:start="37:21" pos:end="37:23">[<expr pos:start="37:22" pos:end="37:22"><name pos:start="37:22" pos:end="37:22">i</name></expr>]</index><index pos:start="37:24" pos:end="37:26">[<expr pos:start="37:25" pos:end="37:25"><literal type="number" pos:start="37:25" pos:end="37:25">1</literal></expr>]</index></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:66"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:42">motion_val</name><index pos:start="37:43" pos:end="37:63">[ <expr pos:start="37:45" pos:end="37:61"><name pos:start="37:45" pos:end="37:61"><name pos:start="37:45" pos:end="37:45">s</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:58">block_index</name><index pos:start="37:59" pos:end="37:61">[<expr pos:start="37:60" pos:end="37:60"><name pos:start="37:60" pos:end="37:60">i</name></expr>]</index></name></expr> ]</index><index pos:start="37:64" pos:end="37:66">[<expr pos:start="37:65" pos:end="37:65"><literal type="number" pos:start="37:65" pos:end="37:65">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="41:9" pos:end="41:44"><expr pos:start="41:9" pos:end="41:43"><name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:19">mb_intra</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:29">mb_type</name><operator pos:start="41:30" pos:end="41:30">&amp;</operator><name pos:start="41:31" pos:end="41:43">MB_TYPE_INTRA</name></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="127:9"><if pos:start="45:9" pos:end="71:9">if <condition pos:start="45:12" pos:end="45:35">(<expr pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:19">mb_type</name><operator pos:start="45:20" pos:end="45:20">&amp;</operator><name pos:start="45:21" pos:end="45:34">MB_TYPE_SKIPED</name></expr>)</condition> <block pos:start="45:37" pos:end="71:9">{<block_content pos:start="49:13" pos:end="69:13">

            <comment type="block" pos:start="47:13" pos:end="47:25">/* skip mb */</comment>

            <for pos:start="49:13" pos:end="51:44">for<control pos:start="49:16" pos:end="49:28">(<init pos:start="49:17" pos:end="49:20"><expr pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:17">i</name><operator pos:start="49:18" pos:end="49:18">=</operator><literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>;</init><condition pos:start="49:21" pos:end="49:24"><expr pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:21">i</name><operator pos:start="49:22" pos:end="49:22">&lt;</operator><literal type="number" pos:start="49:23" pos:end="49:23">6</literal></expr>;</condition><incr pos:start="49:25" pos:end="49:27"><expr pos:start="49:25" pos:end="49:27"><name pos:start="49:25" pos:end="49:25">i</name><operator pos:start="49:26" pos:end="49:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="51:17" pos:end="51:44"><block_content pos:start="51:17" pos:end="51:44">

                <expr_stmt pos:start="51:17" pos:end="51:44"><expr pos:start="51:17" pos:end="51:43"><name pos:start="51:17" pos:end="51:38"><name pos:start="51:17" pos:end="51:17">s</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:35">block_last_index</name><index pos:start="51:36" pos:end="51:38">[<expr pos:start="51:37" pos:end="51:37"><name pos:start="51:37" pos:end="51:37">i</name></expr>]</index></name> <operator pos:start="51:40" pos:end="51:40">=</operator> <operator pos:start="51:42" pos:end="51:42">-</operator><literal type="number" pos:start="51:43" pos:end="51:43">1</literal></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="53:13" pos:end="53:39"><expr pos:start="53:13" pos:end="53:38"><name pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:21">mv_dir</name></name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:38">MV_DIR_FORWARD</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:39"><expr pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:22">mv_type</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:38">MV_TYPE_16X16</name></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="69:13"><if pos:start="57:13" pos:end="63:13">if<condition pos:start="57:15" pos:end="57:71">(<expr pos:start="57:16" pos:end="57:70"><name pos:start="57:16" pos:end="57:27"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:27">pict_type</name></name><operator pos:start="57:28" pos:end="57:29">==</operator><name pos:start="57:30" pos:end="57:35">S_TYPE</name> <operator pos:start="57:37" pos:end="57:38">&amp;&amp;</operator> <name pos:start="57:40" pos:end="57:58"><name pos:start="57:40" pos:end="57:40">s</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:58">vol_sprite_usage</name></name><operator pos:start="57:59" pos:end="57:60">==</operator><name pos:start="57:61" pos:end="57:70">GMC_SPRITE</name></expr>)</condition><block pos:start="57:72" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:33">

                <expr_stmt pos:start="59:17" pos:end="59:27"><expr pos:start="59:17" pos:end="59:26"><name pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:24">mcsel</name></name><operator pos:start="59:25" pos:end="59:25">=</operator><literal type="number" pos:start="59:26" pos:end="59:26">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:33"><expr pos:start="61:17" pos:end="61:32"><name pos:start="61:17" pos:end="61:28"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:28">mb_skiped</name></name> <operator pos:start="61:30" pos:end="61:30">=</operator> <literal type="number" pos:start="61:32" pos:end="61:32">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="63:14" pos:end="69:13">else<block pos:start="63:18" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:33">

                <expr_stmt pos:start="65:17" pos:end="65:27"><expr pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:24"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:24">mcsel</name></name><operator pos:start="65:25" pos:end="65:25">=</operator><literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:33"><expr pos:start="67:17" pos:end="67:32"><name pos:start="67:17" pos:end="67:28"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:28">mb_skiped</name></name> <operator pos:start="67:30" pos:end="67:30">=</operator> <literal type="number" pos:start="67:32" pos:end="67:32">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="71:10" pos:end="93:9">else if<condition pos:start="71:17" pos:end="71:29">(<expr pos:start="71:18" pos:end="71:28"><name pos:start="71:18" pos:end="71:28"><name pos:start="71:18" pos:end="71:18">s</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:28">mb_intra</name></name></expr>)</condition><block pos:start="71:30" pos:end="93:9">{<block_content pos:start="73:13" pos:end="91:13">

            <expr_stmt pos:start="73:13" pos:end="73:50"><expr pos:start="73:13" pos:end="73:49"><name pos:start="73:13" pos:end="73:22"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:22">ac_pred</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:46"><name pos:start="73:26" pos:end="73:26">s</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:42">pred_dir_table</name><index pos:start="73:43" pos:end="73:46">[<expr pos:start="73:44" pos:end="73:45"><name pos:start="73:44" pos:end="73:45">xy</name></expr>]</index></name><operator pos:start="73:47" pos:end="73:48">&gt;&gt;</operator><literal type="number" pos:start="73:49" pos:end="73:49">7</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="77:13" pos:end="77:35">/* decode each block */</comment>

            <for pos:start="79:13" pos:end="91:13">for <control pos:start="79:17" pos:end="79:35">(<init pos:start="79:18" pos:end="79:23"><expr pos:start="79:18" pos:end="79:22"><name pos:start="79:18" pos:end="79:18">i</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</init> <condition pos:start="79:25" pos:end="79:30"><expr pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:25">i</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <literal type="number" pos:start="79:29" pos:end="79:29">6</literal></expr>;</condition> <incr pos:start="79:32" pos:end="79:34"><expr pos:start="79:32" pos:end="79:34"><name pos:start="79:32" pos:end="79:32">i</name><operator pos:start="79:33" pos:end="79:34">++</operator></expr></incr>)</control> <block pos:start="79:37" pos:end="91:13">{<block_content pos:start="81:17" pos:end="89:25">

                <if_stmt pos:start="81:17" pos:end="87:17"><if pos:start="81:17" pos:end="87:17">if<condition pos:start="81:19" pos:end="81:69">(<expr pos:start="81:20" pos:end="81:68"><call pos:start="81:20" pos:end="81:64"><name pos:start="81:20" pos:end="81:37">mpeg4_decode_block</name><argument_list pos:start="81:38" pos:end="81:64">(<argument pos:start="81:39" pos:end="81:39"><expr pos:start="81:39" pos:end="81:39"><name pos:start="81:39" pos:end="81:39">s</name></expr></argument>, <argument pos:start="81:42" pos:end="81:49"><expr pos:start="81:42" pos:end="81:49"><name pos:start="81:42" pos:end="81:49"><name pos:start="81:42" pos:end="81:46">block</name><index pos:start="81:47" pos:end="81:49">[<expr pos:start="81:48" pos:end="81:48"><name pos:start="81:48" pos:end="81:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="81:52" pos:end="81:52"><expr pos:start="81:52" pos:end="81:52"><name pos:start="81:52" pos:end="81:52">i</name></expr></argument>, <argument pos:start="81:55" pos:end="81:60"><expr pos:start="81:55" pos:end="81:60"><name pos:start="81:55" pos:end="81:57">cbp</name><operator pos:start="81:58" pos:end="81:58">&amp;</operator><literal type="number" pos:start="81:59" pos:end="81:60">32</literal></expr></argument>, <argument pos:start="81:63" pos:end="81:63"><expr pos:start="81:63" pos:end="81:63"><literal type="number" pos:start="81:63" pos:end="81:63">1</literal></expr></argument>)</argument_list></call> <operator pos:start="81:66" pos:end="81:66">&lt;</operator> <literal type="number" pos:start="81:68" pos:end="81:68">0</literal></expr>)</condition><block pos:start="81:70" pos:end="87:17">{<block_content pos:start="83:21" pos:end="85:30">

                    <expr_stmt pos:start="83:21" pos:end="83:86"><expr pos:start="83:21" pos:end="83:85"><call pos:start="83:21" pos:end="83:85"><name pos:start="83:21" pos:end="83:27">fprintf</name><argument_list pos:start="83:28" pos:end="83:85">(<argument pos:start="83:29" pos:end="83:34"><expr pos:start="83:29" pos:end="83:34"><name pos:start="83:29" pos:end="83:34">stderr</name></expr></argument>, <argument pos:start="83:37" pos:end="83:66"><expr pos:start="83:37" pos:end="83:66"><literal type="string" pos:start="83:37" pos:end="83:66">"texture corrupted at %d %d\n"</literal></expr></argument>, <argument pos:start="83:69" pos:end="83:75"><expr pos:start="83:69" pos:end="83:75"><name pos:start="83:69" pos:end="83:75"><name pos:start="83:69" pos:end="83:69">s</name><operator pos:start="83:70" pos:end="83:71">-&gt;</operator><name pos:start="83:72" pos:end="83:75">mb_x</name></name></expr></argument>, <argument pos:start="83:78" pos:end="83:84"><expr pos:start="83:78" pos:end="83:84"><name pos:start="83:78" pos:end="83:84"><name pos:start="83:78" pos:end="83:78">s</name><operator pos:start="83:79" pos:end="83:80">-&gt;</operator><name pos:start="83:81" pos:end="83:84">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="85:21" pos:end="85:30">return <expr pos:start="85:28" pos:end="85:29"><operator pos:start="85:28" pos:end="85:28">-</operator><literal type="number" pos:start="85:29" pos:end="85:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:25"><expr pos:start="89:17" pos:end="89:24"><name pos:start="89:17" pos:end="89:19">cbp</name><operator pos:start="89:20" pos:end="89:21">+=</operator><name pos:start="89:22" pos:end="89:24">cbp</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if><if type="elseif" pos:start="93:10" pos:end="127:9">else if<condition pos:start="93:17" pos:end="93:30">(<expr pos:start="93:18" pos:end="93:29"><operator pos:start="93:18" pos:end="93:18">!</operator><name pos:start="93:19" pos:end="93:29"><name pos:start="93:19" pos:end="93:19">s</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:29">mb_intra</name></name></expr>)</condition><block pos:start="93:31" pos:end="127:9">{<block_content pos:start="99:13" pos:end="125:13">

<comment type="line" pos:start="95:1" pos:end="95:58">//            s-&gt;mcsel= 0; //FIXME do we need to init that</comment>

            

            <expr_stmt pos:start="99:13" pos:end="99:39"><expr pos:start="99:13" pos:end="99:38"><name pos:start="99:13" pos:end="99:21"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:21">mv_dir</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:38">MV_DIR_FORWARD</name></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="109:13"><if pos:start="101:13" pos:end="105:13">if <condition pos:start="101:16" pos:end="101:40">(<expr pos:start="101:17" pos:end="101:39"><name pos:start="101:17" pos:end="101:23">mb_type</name><operator pos:start="101:24" pos:end="101:24">&amp;</operator><name pos:start="101:25" pos:end="101:39">MB_TYPE_INTER4V</name></expr>)</condition> <block pos:start="101:42" pos:end="105:13">{<block_content pos:start="103:17" pos:end="103:41">

                <expr_stmt pos:start="103:17" pos:end="103:41"><expr pos:start="103:17" pos:end="103:40"><name pos:start="103:17" pos:end="103:26"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:26">mv_type</name></name> <operator pos:start="103:28" pos:end="103:28">=</operator> <name pos:start="103:30" pos:end="103:40">MV_TYPE_8X8</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="105:15" pos:end="109:13">else <block pos:start="105:20" pos:end="109:13">{<block_content pos:start="107:17" pos:end="107:43">

                <expr_stmt pos:start="107:17" pos:end="107:43"><expr pos:start="107:17" pos:end="107:42"><name pos:start="107:17" pos:end="107:26"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:26">mv_type</name></name> <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:42">MV_TYPE_16X16</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <comment type="block" pos:start="111:13" pos:end="111:35">/* decode each block */</comment>

            <for pos:start="113:13" pos:end="125:13">for <control pos:start="113:17" pos:end="113:35">(<init pos:start="113:18" pos:end="113:23"><expr pos:start="113:18" pos:end="113:22"><name pos:start="113:18" pos:end="113:18">i</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <literal type="number" pos:start="113:22" pos:end="113:22">0</literal></expr>;</init> <condition pos:start="113:25" pos:end="113:30"><expr pos:start="113:25" pos:end="113:29"><name pos:start="113:25" pos:end="113:25">i</name> <operator pos:start="113:27" pos:end="113:27">&lt;</operator> <literal type="number" pos:start="113:29" pos:end="113:29">6</literal></expr>;</condition> <incr pos:start="113:32" pos:end="113:34"><expr pos:start="113:32" pos:end="113:34"><name pos:start="113:32" pos:end="113:32">i</name><operator pos:start="113:33" pos:end="113:34">++</operator></expr></incr>)</control> <block pos:start="113:37" pos:end="125:13">{<block_content pos:start="115:17" pos:end="123:25">

                <if_stmt pos:start="115:17" pos:end="121:17"><if pos:start="115:17" pos:end="121:17">if<condition pos:start="115:19" pos:end="115:69">(<expr pos:start="115:20" pos:end="115:68"><call pos:start="115:20" pos:end="115:64"><name pos:start="115:20" pos:end="115:37">mpeg4_decode_block</name><argument_list pos:start="115:38" pos:end="115:64">(<argument pos:start="115:39" pos:end="115:39"><expr pos:start="115:39" pos:end="115:39"><name pos:start="115:39" pos:end="115:39">s</name></expr></argument>, <argument pos:start="115:42" pos:end="115:49"><expr pos:start="115:42" pos:end="115:49"><name pos:start="115:42" pos:end="115:49"><name pos:start="115:42" pos:end="115:46">block</name><index pos:start="115:47" pos:end="115:49">[<expr pos:start="115:48" pos:end="115:48"><name pos:start="115:48" pos:end="115:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="115:52" pos:end="115:52"><expr pos:start="115:52" pos:end="115:52"><name pos:start="115:52" pos:end="115:52">i</name></expr></argument>, <argument pos:start="115:55" pos:end="115:60"><expr pos:start="115:55" pos:end="115:60"><name pos:start="115:55" pos:end="115:57">cbp</name><operator pos:start="115:58" pos:end="115:58">&amp;</operator><literal type="number" pos:start="115:59" pos:end="115:60">32</literal></expr></argument>, <argument pos:start="115:63" pos:end="115:63"><expr pos:start="115:63" pos:end="115:63"><literal type="number" pos:start="115:63" pos:end="115:63">0</literal></expr></argument>)</argument_list></call> <operator pos:start="115:66" pos:end="115:66">&lt;</operator> <literal type="number" pos:start="115:68" pos:end="115:68">0</literal></expr>)</condition><block pos:start="115:70" pos:end="121:17">{<block_content pos:start="117:21" pos:end="119:30">

                    <expr_stmt pos:start="117:21" pos:end="117:123"><expr pos:start="117:21" pos:end="117:122"><call pos:start="117:21" pos:end="117:122"><name pos:start="117:21" pos:end="117:27">fprintf</name><argument_list pos:start="117:28" pos:end="117:122">(<argument pos:start="117:29" pos:end="117:34"><expr pos:start="117:29" pos:end="117:34"><name pos:start="117:29" pos:end="117:34">stderr</name></expr></argument>, <argument pos:start="117:37" pos:end="117:103"><expr pos:start="117:37" pos:end="117:103"><literal type="string" pos:start="117:37" pos:end="117:103">"texture corrupted at %d %d (trying to continue with mc/dc only)\n"</literal></expr></argument>, <argument pos:start="117:106" pos:end="117:112"><expr pos:start="117:106" pos:end="117:112"><name pos:start="117:106" pos:end="117:112"><name pos:start="117:106" pos:end="117:106">s</name><operator pos:start="117:107" pos:end="117:108">-&gt;</operator><name pos:start="117:109" pos:end="117:112">mb_x</name></name></expr></argument>, <argument pos:start="117:115" pos:end="117:121"><expr pos:start="117:115" pos:end="117:121"><name pos:start="117:115" pos:end="117:121"><name pos:start="117:115" pos:end="117:115">s</name><operator pos:start="117:116" pos:end="117:117">-&gt;</operator><name pos:start="117:118" pos:end="117:121">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="119:21" pos:end="119:30">return <expr pos:start="119:28" pos:end="119:29"><operator pos:start="119:28" pos:end="119:28">-</operator><literal type="number" pos:start="119:29" pos:end="119:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:25"><expr pos:start="123:17" pos:end="123:24"><name pos:start="123:17" pos:end="123:19">cbp</name><operator pos:start="123:20" pos:end="123:21">+=</operator><name pos:start="123:22" pos:end="123:24">cbp</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="129:7" pos:end="155:5">else <block pos:start="129:12" pos:end="155:5">{<block_content pos:start="131:9" pos:end="153:9"> <comment type="block" pos:start="129:14" pos:end="129:26">/* I-Frame */</comment>

        <decl_stmt pos:start="131:9" pos:end="131:14"><decl pos:start="131:9" pos:end="131:13"><type pos:start="131:9" pos:end="131:11"><name pos:start="131:9" pos:end="131:11">int</name></type> <name pos:start="131:13" pos:end="131:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:24"><expr pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:19">mb_intra</name></name> <operator pos:start="133:21" pos:end="133:21">=</operator> <literal type="number" pos:start="133:23" pos:end="133:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:46"><expr pos:start="135:9" pos:end="135:45"><name pos:start="135:9" pos:end="135:18"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:18">ac_pred</name></name> <operator pos:start="135:20" pos:end="135:20">=</operator> <name pos:start="135:22" pos:end="135:42"><name pos:start="135:22" pos:end="135:22">s</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:38">pred_dir_table</name><index pos:start="135:39" pos:end="135:42">[<expr pos:start="135:40" pos:end="135:41"><name pos:start="135:40" pos:end="135:41">xy</name></expr>]</index></name><operator pos:start="135:43" pos:end="135:44">&gt;&gt;</operator><literal type="number" pos:start="135:45" pos:end="135:45">7</literal></expr>;</expr_stmt>

        

        <comment type="block" pos:start="139:9" pos:end="139:31">/* decode each block */</comment>

        <for pos:start="141:9" pos:end="153:9">for <control pos:start="141:13" pos:end="141:31">(<init pos:start="141:14" pos:end="141:19"><expr pos:start="141:14" pos:end="141:18"><name pos:start="141:14" pos:end="141:14">i</name> <operator pos:start="141:16" pos:end="141:16">=</operator> <literal type="number" pos:start="141:18" pos:end="141:18">0</literal></expr>;</init> <condition pos:start="141:21" pos:end="141:26"><expr pos:start="141:21" pos:end="141:25"><name pos:start="141:21" pos:end="141:21">i</name> <operator pos:start="141:23" pos:end="141:23">&lt;</operator> <literal type="number" pos:start="141:25" pos:end="141:25">6</literal></expr>;</condition> <incr pos:start="141:28" pos:end="141:30"><expr pos:start="141:28" pos:end="141:30"><name pos:start="141:28" pos:end="141:28">i</name><operator pos:start="141:29" pos:end="141:30">++</operator></expr></incr>)</control> <block pos:start="141:33" pos:end="153:9">{<block_content pos:start="143:13" pos:end="151:21">

            <if_stmt pos:start="143:13" pos:end="149:13"><if pos:start="143:13" pos:end="149:13">if<condition pos:start="143:15" pos:end="143:65">(<expr pos:start="143:16" pos:end="143:64"><call pos:start="143:16" pos:end="143:60"><name pos:start="143:16" pos:end="143:33">mpeg4_decode_block</name><argument_list pos:start="143:34" pos:end="143:60">(<argument pos:start="143:35" pos:end="143:35"><expr pos:start="143:35" pos:end="143:35"><name pos:start="143:35" pos:end="143:35">s</name></expr></argument>, <argument pos:start="143:38" pos:end="143:45"><expr pos:start="143:38" pos:end="143:45"><name pos:start="143:38" pos:end="143:45"><name pos:start="143:38" pos:end="143:42">block</name><index pos:start="143:43" pos:end="143:45">[<expr pos:start="143:44" pos:end="143:44"><name pos:start="143:44" pos:end="143:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="143:48" pos:end="143:48"><expr pos:start="143:48" pos:end="143:48"><name pos:start="143:48" pos:end="143:48">i</name></expr></argument>, <argument pos:start="143:51" pos:end="143:56"><expr pos:start="143:51" pos:end="143:56"><name pos:start="143:51" pos:end="143:53">cbp</name><operator pos:start="143:54" pos:end="143:54">&amp;</operator><literal type="number" pos:start="143:55" pos:end="143:56">32</literal></expr></argument>, <argument pos:start="143:59" pos:end="143:59"><expr pos:start="143:59" pos:end="143:59"><literal type="number" pos:start="143:59" pos:end="143:59">1</literal></expr></argument>)</argument_list></call> <operator pos:start="143:62" pos:end="143:62">&lt;</operator> <literal type="number" pos:start="143:64" pos:end="143:64">0</literal></expr>)</condition><block pos:start="143:66" pos:end="149:13">{<block_content pos:start="145:17" pos:end="147:26">

                <expr_stmt pos:start="145:17" pos:end="145:116"><expr pos:start="145:17" pos:end="145:115"><call pos:start="145:17" pos:end="145:115"><name pos:start="145:17" pos:end="145:23">fprintf</name><argument_list pos:start="145:24" pos:end="145:115">(<argument pos:start="145:25" pos:end="145:30"><expr pos:start="145:25" pos:end="145:30"><name pos:start="145:25" pos:end="145:30">stderr</name></expr></argument>, <argument pos:start="145:33" pos:end="145:96"><expr pos:start="145:33" pos:end="145:96"><literal type="string" pos:start="145:33" pos:end="145:96">"texture corrupted at %d %d (trying to continue with dc only)\n"</literal></expr></argument>, <argument pos:start="145:99" pos:end="145:105"><expr pos:start="145:99" pos:end="145:105"><name pos:start="145:99" pos:end="145:105"><name pos:start="145:99" pos:end="145:99">s</name><operator pos:start="145:100" pos:end="145:101">-&gt;</operator><name pos:start="145:102" pos:end="145:105">mb_x</name></name></expr></argument>, <argument pos:start="145:108" pos:end="145:114"><expr pos:start="145:108" pos:end="145:114"><name pos:start="145:108" pos:end="145:114"><name pos:start="145:108" pos:end="145:108">s</name><operator pos:start="145:109" pos:end="145:110">-&gt;</operator><name pos:start="145:111" pos:end="145:114">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="147:17" pos:end="147:26">return <expr pos:start="147:24" pos:end="147:25"><operator pos:start="147:24" pos:end="147:24">-</operator><literal type="number" pos:start="147:25" pos:end="147:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:21"><expr pos:start="151:13" pos:end="151:20"><name pos:start="151:13" pos:end="151:15">cbp</name><operator pos:start="151:16" pos:end="151:17">+=</operator><name pos:start="151:18" pos:end="151:20">cbp</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:42"><expr pos:start="159:5" pos:end="159:41"><name pos:start="159:5" pos:end="159:29"><name pos:start="159:5" pos:end="159:5">s</name><operator pos:start="159:6" pos:end="159:7">-&gt;</operator><name pos:start="159:8" pos:end="159:25">error_status_table</name><index pos:start="159:26" pos:end="159:29">[<expr pos:start="159:27" pos:end="159:28"><name pos:start="159:27" pos:end="159:28">xy</name></expr>]</index></name><operator pos:start="159:30" pos:end="159:31">&amp;=</operator> <operator pos:start="159:33" pos:end="159:33">~</operator><name pos:start="159:34" pos:end="159:41">AC_ERROR</name></expr>;</expr_stmt>



    <comment type="block" pos:start="163:5" pos:end="163:35">/* per-MB end of slice check */</comment>



    <if_stmt pos:start="167:5" pos:end="189:5"><if pos:start="167:5" pos:end="179:5">if<condition pos:start="167:7" pos:end="167:29">(<expr pos:start="167:8" pos:end="167:28"><operator pos:start="167:8" pos:end="167:9">--</operator><name pos:start="167:10" pos:end="167:23"><name pos:start="167:10" pos:end="167:10">s</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:23">mb_num_left</name></name> <operator pos:start="167:25" pos:end="167:26">&lt;=</operator> <literal type="number" pos:start="167:28" pos:end="167:28">0</literal></expr>)</condition><block pos:start="167:30" pos:end="179:5">{<block_content pos:start="171:9" pos:end="177:31">

<comment type="line" pos:start="169:1" pos:end="169:84">//printf("%06X %d\n", show_bits(&amp;s-&gt;gb, 24), s-&gt;gb.size*8 - get_bits_count(&amp;s-&gt;gb));</comment>

        <if_stmt pos:start="171:9" pos:end="177:31"><if pos:start="171:9" pos:end="173:29">if<condition pos:start="171:11" pos:end="171:30">(<expr pos:start="171:12" pos:end="171:29"><call pos:start="171:12" pos:end="171:29"><name pos:start="171:12" pos:end="171:26">mpeg4_is_resync</name><argument_list pos:start="171:27" pos:end="171:29">(<argument pos:start="171:28" pos:end="171:28"><expr pos:start="171:28" pos:end="171:28"><name pos:start="171:28" pos:end="171:28">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:29"><block_content pos:start="173:13" pos:end="173:29">

            <return pos:start="173:13" pos:end="173:29">return <expr pos:start="173:20" pos:end="173:28"><name pos:start="173:20" pos:end="173:28">SLICE_END</name></expr>;</return></block_content></block></if>

        <else pos:start="175:9" pos:end="177:31">else<block type="pseudo" pos:start="177:13" pos:end="177:31"><block_content pos:start="177:13" pos:end="177:31">

            <return pos:start="177:13" pos:end="177:31">return <expr pos:start="177:20" pos:end="177:30"><name pos:start="177:20" pos:end="177:30">SLICE_NOEND</name></expr>;</return></block_content></block></else></if_stmt>     

    </block_content>}</block></if><else pos:start="179:6" pos:end="189:5">else<block pos:start="179:10" pos:end="189:5">{<block_content pos:start="181:9" pos:end="187:28">

        <if_stmt pos:start="181:9" pos:end="187:28"><if pos:start="181:9" pos:end="183:29">if<condition pos:start="181:11" pos:end="181:52">(<expr pos:start="181:12" pos:end="181:51"><name pos:start="181:12" pos:end="181:29"><name pos:start="181:12" pos:end="181:12">s</name><operator pos:start="181:13" pos:end="181:14">-&gt;</operator><name pos:start="181:15" pos:end="181:23">cbp_table</name><index pos:start="181:24" pos:end="181:29">[<expr pos:start="181:25" pos:end="181:28"><name pos:start="181:25" pos:end="181:26">xy</name><operator pos:start="181:27" pos:end="181:27">+</operator><literal type="number" pos:start="181:28" pos:end="181:28">1</literal></expr>]</index></name> <operator pos:start="181:31" pos:end="181:32">&amp;&amp;</operator> <call pos:start="181:34" pos:end="181:51"><name pos:start="181:34" pos:end="181:48">mpeg4_is_resync</name><argument_list pos:start="181:49" pos:end="181:51">(<argument pos:start="181:50" pos:end="181:50"><expr pos:start="181:50" pos:end="181:50"><name pos:start="181:50" pos:end="181:50">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:29"><block_content pos:start="183:13" pos:end="183:29">

            <return pos:start="183:13" pos:end="183:29">return <expr pos:start="183:20" pos:end="183:28"><name pos:start="183:20" pos:end="183:28">SLICE_END</name></expr>;</return></block_content></block></if>

        <else pos:start="185:9" pos:end="187:28">else<block type="pseudo" pos:start="187:13" pos:end="187:28"><block_content pos:start="187:13" pos:end="187:28">

            <return pos:start="187:13" pos:end="187:28">return <expr pos:start="187:20" pos:end="187:27"><name pos:start="187:20" pos:end="187:27">SLICE_OK</name></expr>;</return></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
