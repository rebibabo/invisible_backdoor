<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/881.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">spapr_cpu_core_unrealizefn</name><parameter_list pos:start="1:39" pos:end="1:70">(<parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:50">DeviceState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">dev</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:62">Error</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:24">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">sPAPRCPUCore</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">sc</name> <init pos:start="5:22" pos:end="5:50">= <expr pos:start="5:24" pos:end="5:50"><call pos:start="5:24" pos:end="5:50"><name pos:start="5:24" pos:end="5:37">SPAPR_CPU_CORE</name><argument_list pos:start="5:38" pos:end="5:50">(<argument pos:start="5:39" pos:end="5:49"><expr pos:start="5:39" pos:end="5:49"><call pos:start="5:39" pos:end="5:49"><name pos:start="5:39" pos:end="5:44">OBJECT</name><argument_list pos:start="5:45" pos:end="5:49">(<argument pos:start="5:46" pos:end="5:48"><expr pos:start="5:46" pos:end="5:48"><name pos:start="5:46" pos:end="5:48">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:67"><decl pos:start="7:5" pos:end="7:66"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">sPAPRCPUCoreClass</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">scc</name> <init pos:start="7:28" pos:end="7:66">= <expr pos:start="7:30" pos:end="7:66"><call pos:start="7:30" pos:end="7:66"><name pos:start="7:30" pos:end="7:53">SPAPR_CPU_CORE_GET_CLASS</name><argument_list pos:start="7:54" pos:end="7:66">(<argument pos:start="7:55" pos:end="7:65"><expr pos:start="7:55" pos:end="7:65"><call pos:start="7:55" pos:end="7:65"><name pos:start="7:55" pos:end="7:60">OBJECT</name><argument_list pos:start="7:61" pos:end="7:65">(<argument pos:start="7:62" pos:end="7:64"><expr pos:start="7:62" pos:end="7:64"><name pos:start="7:62" pos:end="7:64">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:63"><decl pos:start="9:5" pos:end="9:62"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:15">size</name> <init pos:start="9:17" pos:end="9:62">= <expr pos:start="9:19" pos:end="9:62"><call pos:start="9:19" pos:end="9:62"><name pos:start="9:19" pos:end="9:47">object_type_get_instance_size</name><argument_list pos:start="9:48" pos:end="9:62">(<argument pos:start="9:49" pos:end="9:61"><expr pos:start="9:49" pos:end="9:61"><name pos:start="9:49" pos:end="9:61"><name pos:start="9:49" pos:end="9:51">scc</name><operator pos:start="9:52" pos:end="9:53">-&gt;</operator><name pos:start="9:54" pos:end="9:61">cpu_type</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">CPUCore</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:15">cc</name> <init pos:start="11:17" pos:end="11:31">= <expr pos:start="11:19" pos:end="11:31"><call pos:start="11:19" pos:end="11:31"><name pos:start="11:19" pos:end="11:26">CPU_CORE</name><argument_list pos:start="11:27" pos:end="11:31">(<argument pos:start="11:28" pos:end="11:30"><expr pos:start="11:28" pos:end="11:30"><name pos:start="11:28" pos:end="11:30">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="37:5">for <control pos:start="17:9" pos:end="17:40">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:35"><expr pos:start="17:17" pos:end="17:34"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:34"><name pos:start="17:21" pos:end="17:22">cc</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:34">nr_threads</name></name></expr>;</condition> <incr pos:start="17:37" pos:end="17:39"><expr pos:start="17:37" pos:end="17:39"><name pos:start="17:37" pos:end="17:37">i</name><operator pos:start="17:38" pos:end="17:39">++</operator></expr></incr>)</control> <block pos:start="17:42" pos:end="37:5">{<block_content pos:start="19:9" pos:end="35:29">

        <decl_stmt pos:start="19:9" pos:end="19:43"><decl pos:start="19:9" pos:end="19:42"><type pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:12">void</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">obj</name> <init pos:start="19:19" pos:end="19:42">= <expr pos:start="19:21" pos:end="19:42"><name pos:start="19:21" pos:end="19:31"><name pos:start="19:21" pos:end="19:22">sc</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:31">threads</name></name> <operator pos:start="19:33" pos:end="19:33">+</operator> <name pos:start="19:35" pos:end="19:35">i</name> <operator pos:start="19:37" pos:end="19:37">*</operator> <name pos:start="19:39" pos:end="19:42">size</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:39"><decl pos:start="21:9" pos:end="21:38"><type pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:19">DeviceState</name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:24">dev</name> <init pos:start="21:26" pos:end="21:38">= <expr pos:start="21:28" pos:end="21:38"><call pos:start="21:28" pos:end="21:38"><name pos:start="21:28" pos:end="21:33">DEVICE</name><argument_list pos:start="21:34" pos:end="21:38">(<argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:37">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:32"><decl pos:start="23:9" pos:end="23:31"><type pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:16">CPUState</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:20">cs</name> <init pos:start="23:22" pos:end="23:31">= <expr pos:start="23:24" pos:end="23:31"><call pos:start="23:24" pos:end="23:31"><name pos:start="23:24" pos:end="23:26">CPU</name><argument_list pos:start="23:27" pos:end="23:31">(<argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:42"><decl pos:start="25:9" pos:end="25:41"><type pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:18">PowerPCCPU</name> <modifier pos:start="25:20" pos:end="25:20">*</modifier></type><name pos:start="25:21" pos:end="25:23">cpu</name> <init pos:start="25:25" pos:end="25:41">= <expr pos:start="25:27" pos:end="25:41"><call pos:start="25:27" pos:end="25:41"><name pos:start="25:27" pos:end="25:37">POWERPC_CPU</name><argument_list pos:start="25:38" pos:end="25:41">(<argument pos:start="25:39" pos:end="25:40"><expr pos:start="25:39" pos:end="25:40"><name pos:start="25:39" pos:end="25:40">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><call pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:25">spapr_cpu_destroy</name><argument_list pos:start="29:26" pos:end="29:30">(<argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><call pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:23">object_unparent</name><argument_list pos:start="31:24" pos:end="31:34">(<argument pos:start="31:25" pos:end="31:33"><expr pos:start="31:25" pos:end="31:33"><name pos:start="31:25" pos:end="31:33"><name pos:start="31:25" pos:end="31:27">cpu</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:33">intc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><call pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:23">cpu_remove_sync</name><argument_list pos:start="33:24" pos:end="33:27">(<argument pos:start="33:25" pos:end="33:26"><expr pos:start="33:25" pos:end="33:26"><name pos:start="33:25" pos:end="33:26">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><call pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:23">object_unparent</name><argument_list pos:start="35:24" pos:end="35:28">(<argument pos:start="35:25" pos:end="35:27"><expr pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:27">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><call pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:10">g_free</name><argument_list pos:start="39:11" pos:end="39:23">(<argument pos:start="39:12" pos:end="39:22"><expr pos:start="39:12" pos:end="39:22"><name pos:start="39:12" pos:end="39:22"><name pos:start="39:12" pos:end="39:13">sc</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">threads</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
