<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15643.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">QObject</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:28">parse_object</name><parameter_list pos:start="1:29" pos:end="1:82">(<parameter pos:start="1:30" pos:end="1:52"><decl pos:start="1:30" pos:end="1:52"><type pos:start="1:30" pos:end="1:52"><name pos:start="1:30" pos:end="1:46">JSONParserContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">ctxt</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:68"><decl pos:start="1:55" pos:end="1:68"><type pos:start="1:55" pos:end="1:68"><name pos:start="1:55" pos:end="1:59">QList</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier><modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:68">tokens</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:81"><decl pos:start="1:71" pos:end="1:81"><type pos:start="1:71" pos:end="1:81"><name pos:start="1:71" pos:end="1:77">va_list</name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:81">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:16">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">QDict</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:15">dict</name> <init pos:start="5:17" pos:end="5:22">= <expr pos:start="5:19" pos:end="5:22"><name pos:start="5:19" pos:end="5:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">QObject</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">token</name></decl>, <decl pos:start="7:21" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">peek</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">QList</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:18">working</name> <init pos:start="9:20" pos:end="9:40">= <expr pos:start="9:22" pos:end="9:40"><call pos:start="9:22" pos:end="9:40"><name pos:start="9:22" pos:end="9:31">qlist_copy</name><argument_list pos:start="9:32" pos:end="9:40">(<argument pos:start="9:33" pos:end="9:39"><expr pos:start="9:33" pos:end="9:39"><operator pos:start="9:33" pos:end="9:33">*</operator><name pos:start="9:34" pos:end="9:39">tokens</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:9">token</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:30"><name pos:start="13:13" pos:end="13:21">qlist_pop</name><argument_list pos:start="13:22" pos:end="13:30">(<argument pos:start="13:23" pos:end="13:29"><expr pos:start="13:23" pos:end="13:29"><name pos:start="13:23" pos:end="13:29">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:22">(<expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:13">token</name> <operator pos:start="15:15" pos:end="15:16">==</operator> <name pos:start="15:18" pos:end="15:21">NULL</name></expr>)</condition> <block pos:start="15:24" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <goto pos:start="17:9" pos:end="17:17">goto <name pos:start="17:14" pos:end="17:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:39">(<expr pos:start="23:9" pos:end="23:38"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:38"><name pos:start="23:10" pos:end="23:26">token_is_operator</name><argument_list pos:start="23:27" pos:end="23:38">(<argument pos:start="23:28" pos:end="23:32"><expr pos:start="23:28" pos:end="23:32"><name pos:start="23:28" pos:end="23:32">token</name></expr></argument>, <argument pos:start="23:35" pos:end="23:37"><expr pos:start="23:35" pos:end="23:37"><literal type="char" pos:start="23:35" pos:end="23:37">'{'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:41" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <goto pos:start="25:9" pos:end="25:17">goto <name pos:start="25:14" pos:end="25:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><call pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:18">qobject_decref</name><argument_list pos:start="29:19" pos:end="29:25">(<argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:24">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:9">token</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:16">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:8">dict</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:22"><name pos:start="35:12" pos:end="35:20">qdict_new</name><argument_list pos:start="35:21" pos:end="35:22">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:8">peek</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:30"><name pos:start="39:12" pos:end="39:21">qlist_peek</name><argument_list pos:start="39:22" pos:end="39:30">(<argument pos:start="39:23" pos:end="39:29"><expr pos:start="39:23" pos:end="39:29"><name pos:start="39:23" pos:end="39:29">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:12">peek</name> <operator pos:start="41:14" pos:end="41:15">==</operator> <name pos:start="41:17" pos:end="41:20">NULL</name></expr>)</condition> <block pos:start="41:23" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:17">

        <expr_stmt pos:start="43:9" pos:end="43:49"><expr pos:start="43:9" pos:end="43:48"><call pos:start="43:9" pos:end="43:48"><name pos:start="43:9" pos:end="43:19">parse_error</name><argument_list pos:start="43:20" pos:end="43:48">(<argument pos:start="43:21" pos:end="43:24"><expr pos:start="43:21" pos:end="43:24"><name pos:start="43:21" pos:end="43:24">ctxt</name></expr></argument>, <argument pos:start="43:27" pos:end="43:30"><expr pos:start="43:27" pos:end="43:30"><name pos:start="43:27" pos:end="43:30">NULL</name></expr></argument>, <argument pos:start="43:33" pos:end="43:47"><expr pos:start="43:33" pos:end="43:47"><literal type="string" pos:start="43:33" pos:end="43:47">"premature EOI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:17">goto <name pos:start="45:14" pos:end="45:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="121:5"><if pos:start="51:5" pos:end="113:5">if <condition pos:start="51:8" pos:end="51:38">(<expr pos:start="51:9" pos:end="51:37"><operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:37"><name pos:start="51:10" pos:end="51:26">token_is_operator</name><argument_list pos:start="51:27" pos:end="51:37">(<argument pos:start="51:28" pos:end="51:31"><expr pos:start="51:28" pos:end="51:31"><name pos:start="51:28" pos:end="51:31">peek</name></expr></argument>, <argument pos:start="51:34" pos:end="51:36"><expr pos:start="51:34" pos:end="51:36"><literal type="char" pos:start="51:34" pos:end="51:36">'}'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:40" pos:end="113:5">{<block_content pos:start="53:9" pos:end="111:21">

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:55">(<expr pos:start="53:13" pos:end="53:54"><call pos:start="53:13" pos:end="53:48"><name pos:start="53:13" pos:end="53:22">parse_pair</name><argument_list pos:start="53:23" pos:end="53:48">(<argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">ctxt</name></expr></argument>, <argument pos:start="53:30" pos:end="53:33"><expr pos:start="53:30" pos:end="53:33"><name pos:start="53:30" pos:end="53:33">dict</name></expr></argument>, <argument pos:start="53:36" pos:end="53:43"><expr pos:start="53:36" pos:end="53:43"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:43">working</name></expr></argument>, <argument pos:start="53:46" pos:end="53:47"><expr pos:start="53:46" pos:end="53:47"><name pos:start="53:46" pos:end="53:47">ap</name></expr></argument>)</argument_list></call> <operator pos:start="53:50" pos:end="53:51">==</operator> <operator pos:start="53:53" pos:end="53:53">-</operator><literal type="number" pos:start="53:54" pos:end="53:54">1</literal></expr>)</condition> <block pos:start="53:57" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:21">

            <goto pos:start="55:13" pos:end="55:21">goto <name pos:start="55:18" pos:end="55:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:35"><expr pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:13">token</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <call pos:start="61:17" pos:end="61:34"><name pos:start="61:17" pos:end="61:25">qlist_pop</name><argument_list pos:start="61:26" pos:end="61:34">(<argument pos:start="61:27" pos:end="61:33"><expr pos:start="61:27" pos:end="61:33"><name pos:start="61:27" pos:end="61:33">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:26">(<expr pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:17">token</name> <operator pos:start="63:19" pos:end="63:20">==</operator> <name pos:start="63:22" pos:end="63:25">NULL</name></expr>)</condition> <block pos:start="63:28" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:21">

            <expr_stmt pos:start="65:13" pos:end="65:53"><expr pos:start="65:13" pos:end="65:52"><call pos:start="65:13" pos:end="65:52"><name pos:start="65:13" pos:end="65:23">parse_error</name><argument_list pos:start="65:24" pos:end="65:52">(<argument pos:start="65:25" pos:end="65:28"><expr pos:start="65:25" pos:end="65:28"><name pos:start="65:25" pos:end="65:28">ctxt</name></expr></argument>, <argument pos:start="65:31" pos:end="65:34"><expr pos:start="65:31" pos:end="65:34"><name pos:start="65:31" pos:end="65:34">NULL</name></expr></argument>, <argument pos:start="65:37" pos:end="65:51"><expr pos:start="65:37" pos:end="65:51"><literal type="string" pos:start="65:37" pos:end="65:51">"premature EOI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="67:13" pos:end="67:21">goto <name pos:start="67:18" pos:end="67:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <while pos:start="73:9" pos:end="107:9">while <condition pos:start="73:15" pos:end="73:46">(<expr pos:start="73:16" pos:end="73:45"><operator pos:start="73:16" pos:end="73:16">!</operator><call pos:start="73:17" pos:end="73:45"><name pos:start="73:17" pos:end="73:33">token_is_operator</name><argument_list pos:start="73:34" pos:end="73:45">(<argument pos:start="73:35" pos:end="73:39"><expr pos:start="73:35" pos:end="73:39"><name pos:start="73:35" pos:end="73:39">token</name></expr></argument>, <argument pos:start="73:42" pos:end="73:44"><expr pos:start="73:42" pos:end="73:44"><literal type="char" pos:start="73:42" pos:end="73:44">'}'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:48" pos:end="107:9">{<block_content pos:start="75:13" pos:end="105:13">

            <if_stmt pos:start="75:13" pos:end="81:13"><if pos:start="75:13" pos:end="81:13">if <condition pos:start="75:16" pos:end="75:47">(<expr pos:start="75:17" pos:end="75:46"><operator pos:start="75:17" pos:end="75:17">!</operator><call pos:start="75:18" pos:end="75:46"><name pos:start="75:18" pos:end="75:34">token_is_operator</name><argument_list pos:start="75:35" pos:end="75:46">(<argument pos:start="75:36" pos:end="75:40"><expr pos:start="75:36" pos:end="75:40"><name pos:start="75:36" pos:end="75:40">token</name></expr></argument>, <argument pos:start="75:43" pos:end="75:45"><expr pos:start="75:43" pos:end="75:45"><literal type="char" pos:start="75:43" pos:end="75:45">','</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:49" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:25">

                <expr_stmt pos:start="77:17" pos:end="77:71"><expr pos:start="77:17" pos:end="77:70"><call pos:start="77:17" pos:end="77:70"><name pos:start="77:17" pos:end="77:27">parse_error</name><argument_list pos:start="77:28" pos:end="77:70">(<argument pos:start="77:29" pos:end="77:32"><expr pos:start="77:29" pos:end="77:32"><name pos:start="77:29" pos:end="77:32">ctxt</name></expr></argument>, <argument pos:start="77:35" pos:end="77:39"><expr pos:start="77:35" pos:end="77:39"><name pos:start="77:35" pos:end="77:39">token</name></expr></argument>, <argument pos:start="77:42" pos:end="77:69"><expr pos:start="77:42" pos:end="77:69"><literal type="string" pos:start="77:42" pos:end="77:69">"expected separator in dict"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="79:17" pos:end="79:25">goto <name pos:start="79:22" pos:end="79:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:34"><expr pos:start="83:13" pos:end="83:33"><call pos:start="83:13" pos:end="83:33"><name pos:start="83:13" pos:end="83:26">qobject_decref</name><argument_list pos:start="83:27" pos:end="83:33">(<argument pos:start="83:28" pos:end="83:32"><expr pos:start="83:28" pos:end="83:32"><name pos:start="83:28" pos:end="83:32">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:25"><expr pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:17">token</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:24">NULL</name></expr>;</expr_stmt>



            <if_stmt pos:start="89:13" pos:end="93:13"><if pos:start="89:13" pos:end="93:13">if <condition pos:start="89:16" pos:end="89:59">(<expr pos:start="89:17" pos:end="89:58"><call pos:start="89:17" pos:end="89:52"><name pos:start="89:17" pos:end="89:26">parse_pair</name><argument_list pos:start="89:27" pos:end="89:52">(<argument pos:start="89:28" pos:end="89:31"><expr pos:start="89:28" pos:end="89:31"><name pos:start="89:28" pos:end="89:31">ctxt</name></expr></argument>, <argument pos:start="89:34" pos:end="89:37"><expr pos:start="89:34" pos:end="89:37"><name pos:start="89:34" pos:end="89:37">dict</name></expr></argument>, <argument pos:start="89:40" pos:end="89:47"><expr pos:start="89:40" pos:end="89:47"><operator pos:start="89:40" pos:end="89:40">&amp;</operator><name pos:start="89:41" pos:end="89:47">working</name></expr></argument>, <argument pos:start="89:50" pos:end="89:51"><expr pos:start="89:50" pos:end="89:51"><name pos:start="89:50" pos:end="89:51">ap</name></expr></argument>)</argument_list></call> <operator pos:start="89:54" pos:end="89:55">==</operator> <operator pos:start="89:57" pos:end="89:57">-</operator><literal type="number" pos:start="89:58" pos:end="89:58">1</literal></expr>)</condition> <block pos:start="89:61" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:25">

                <goto pos:start="91:17" pos:end="91:25">goto <name pos:start="91:22" pos:end="91:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:39"><expr pos:start="97:13" pos:end="97:38"><name pos:start="97:13" pos:end="97:17">token</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <call pos:start="97:21" pos:end="97:38"><name pos:start="97:21" pos:end="97:29">qlist_pop</name><argument_list pos:start="97:30" pos:end="97:38">(<argument pos:start="97:31" pos:end="97:37"><expr pos:start="97:31" pos:end="97:37"><name pos:start="97:31" pos:end="97:37">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="105:13"><if pos:start="99:13" pos:end="105:13">if <condition pos:start="99:16" pos:end="99:30">(<expr pos:start="99:17" pos:end="99:29"><name pos:start="99:17" pos:end="99:21">token</name> <operator pos:start="99:23" pos:end="99:24">==</operator> <name pos:start="99:26" pos:end="99:29">NULL</name></expr>)</condition> <block pos:start="99:32" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:25">

                <expr_stmt pos:start="101:17" pos:end="101:57"><expr pos:start="101:17" pos:end="101:56"><call pos:start="101:17" pos:end="101:56"><name pos:start="101:17" pos:end="101:27">parse_error</name><argument_list pos:start="101:28" pos:end="101:56">(<argument pos:start="101:29" pos:end="101:32"><expr pos:start="101:29" pos:end="101:32"><name pos:start="101:29" pos:end="101:32">ctxt</name></expr></argument>, <argument pos:start="101:35" pos:end="101:38"><expr pos:start="101:35" pos:end="101:38"><name pos:start="101:35" pos:end="101:38">NULL</name></expr></argument>, <argument pos:start="101:41" pos:end="101:55"><expr pos:start="101:41" pos:end="101:55"><literal type="string" pos:start="101:41" pos:end="101:55">"premature EOI"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="103:17" pos:end="103:25">goto <name pos:start="103:22" pos:end="103:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="109:9" pos:end="109:30"><expr pos:start="109:9" pos:end="109:29"><call pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:22">qobject_decref</name><argument_list pos:start="109:23" pos:end="109:29">(<argument pos:start="109:24" pos:end="109:28"><expr pos:start="109:24" pos:end="109:28"><name pos:start="109:24" pos:end="109:28">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:21"><expr pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:13">token</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <name pos:start="111:17" pos:end="111:20">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="113:7" pos:end="121:5">else <block pos:start="113:12" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:21">

        <expr_stmt pos:start="115:9" pos:end="115:35"><expr pos:start="115:9" pos:end="115:34"><name pos:start="115:9" pos:end="115:13">token</name> <operator pos:start="115:15" pos:end="115:15">=</operator> <call pos:start="115:17" pos:end="115:34"><name pos:start="115:17" pos:end="115:25">qlist_pop</name><argument_list pos:start="115:26" pos:end="115:34">(<argument pos:start="115:27" pos:end="115:33"><expr pos:start="115:27" pos:end="115:33"><name pos:start="115:27" pos:end="115:33">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:30"><expr pos:start="117:9" pos:end="117:29"><call pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:22">qobject_decref</name><argument_list pos:start="117:23" pos:end="117:29">(<argument pos:start="117:24" pos:end="117:28"><expr pos:start="117:24" pos:end="117:28"><name pos:start="117:24" pos:end="117:28">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:21"><expr pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:13">token</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <name pos:start="119:17" pos:end="119:20">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:21"><expr pos:start="125:5" pos:end="125:20"><call pos:start="125:5" pos:end="125:20"><name pos:start="125:5" pos:end="125:11">QDECREF</name><argument_list pos:start="125:12" pos:end="125:20">(<argument pos:start="125:13" pos:end="125:19"><expr pos:start="125:13" pos:end="125:19"><operator pos:start="125:13" pos:end="125:13">*</operator><name pos:start="125:14" pos:end="125:19">tokens</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:22"><expr pos:start="127:5" pos:end="127:21"><operator pos:start="127:5" pos:end="127:5">*</operator><name pos:start="127:6" pos:end="127:11">tokens</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <name pos:start="127:15" pos:end="127:21">working</name></expr>;</expr_stmt>



    <return pos:start="131:5" pos:end="131:25">return <expr pos:start="131:12" pos:end="131:24"><call pos:start="131:12" pos:end="131:24"><name pos:start="131:12" pos:end="131:18">QOBJECT</name><argument_list pos:start="131:19" pos:end="131:24">(<argument pos:start="131:20" pos:end="131:23"><expr pos:start="131:20" pos:end="131:23"><name pos:start="131:20" pos:end="131:23">dict</name></expr></argument>)</argument_list></call></expr>;</return>



<label pos:start="135:1" pos:end="135:4"><name pos:start="135:1" pos:end="135:3">out</name>:</label>

    <expr_stmt pos:start="137:5" pos:end="137:26"><expr pos:start="137:5" pos:end="137:25"><call pos:start="137:5" pos:end="137:25"><name pos:start="137:5" pos:end="137:18">qobject_decref</name><argument_list pos:start="137:19" pos:end="137:25">(<argument pos:start="137:20" pos:end="137:24"><expr pos:start="137:20" pos:end="137:24"><name pos:start="137:20" pos:end="137:24">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:21"><expr pos:start="139:5" pos:end="139:20"><call pos:start="139:5" pos:end="139:20"><name pos:start="139:5" pos:end="139:11">QDECREF</name><argument_list pos:start="139:12" pos:end="139:20">(<argument pos:start="139:13" pos:end="139:19"><expr pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:19">working</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:18"><expr pos:start="141:5" pos:end="141:17"><call pos:start="141:5" pos:end="141:17"><name pos:start="141:5" pos:end="141:11">QDECREF</name><argument_list pos:start="141:12" pos:end="141:17">(<argument pos:start="141:13" pos:end="141:16"><expr pos:start="141:13" pos:end="141:16"><name pos:start="141:13" pos:end="141:16">dict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="143:5" pos:end="143:16">return <expr pos:start="143:12" pos:end="143:15"><name pos:start="143:12" pos:end="143:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
