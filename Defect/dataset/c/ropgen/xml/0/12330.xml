<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12330.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:19"><name pos:start="1:1" pos:end="1:19">MemoryRegionSection</name></type> <name pos:start="1:21" pos:end="1:38">memory_region_find</name><parameter_list pos:start="1:39" pos:end="3:66">(<parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:51">MemoryRegion</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">mr</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:50"><decl pos:start="3:40" pos:end="3:50"><type pos:start="3:40" pos:end="3:50"><name pos:start="3:40" pos:end="3:45">hwaddr</name></type> <name pos:start="3:47" pos:end="3:50">addr</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:65"><decl pos:start="3:53" pos:end="3:65"><type pos:start="3:53" pos:end="3:65"><name pos:start="3:53" pos:end="3:60">uint64_t</name></type> <name pos:start="3:62" pos:end="3:65">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:15">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:23">MemoryRegionSection</name></type> <name pos:start="7:25" pos:end="7:27">ret</name> <init pos:start="7:29" pos:end="7:44">= <expr pos:start="7:31" pos:end="7:44"><block pos:start="7:31" pos:end="7:44">{ <expr pos:start="7:33" pos:end="7:42"><operator pos:start="7:33" pos:end="7:33">.</operator><name pos:start="7:34" pos:end="7:35">mr</name> <operator pos:start="7:37" pos:end="7:37">=</operator> <name pos:start="7:39" pos:end="7:42">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">MemoryRegion</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">root</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">AddressSpace</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">as</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">AddrRange</name></type> <name pos:start="13:15" pos:end="13:19">range</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">FlatView</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:18">view</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">FlatRange</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:17">fr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:8">addr</name> <operator pos:start="21:10" pos:end="21:11">+=</operator> <name pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:14">mr</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:20">addr</name></name></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="29:5">for <control pos:start="23:9" pos:end="23:35">(<init pos:start="23:10" pos:end="23:19"><expr pos:start="23:10" pos:end="23:18"><name pos:start="23:10" pos:end="23:13">root</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:18">mr</name></expr>;</init> <condition pos:start="23:21" pos:end="23:33"><expr pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:24">root</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:32">parent</name></name></expr>;</condition> <incr/>)</control> <block pos:start="23:37" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:27">

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:12">root</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:19">root</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:27">parent</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:27"><expr pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:12">addr</name> <operator pos:start="27:14" pos:end="27:15">+=</operator> <name pos:start="27:17" pos:end="27:26"><name pos:start="27:17" pos:end="27:20">root</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:26">addr</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:6">as</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:45"><name pos:start="33:10" pos:end="33:39">memory_region_to_address_space</name><argument_list pos:start="33:40" pos:end="33:45">(<argument pos:start="33:41" pos:end="33:44"><expr pos:start="33:41" pos:end="33:44"><name pos:start="33:41" pos:end="33:44">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:69"><expr pos:start="35:5" pos:end="35:68"><name pos:start="35:5" pos:end="35:9">range</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:68"><name pos:start="35:13" pos:end="35:26">addrrange_make</name><argument_list pos:start="35:27" pos:end="35:68">(<argument pos:start="35:28" pos:end="35:46"><expr pos:start="35:28" pos:end="35:46"><call pos:start="35:28" pos:end="35:46"><name pos:start="35:28" pos:end="35:40">int128_make64</name><argument_list pos:start="35:41" pos:end="35:46">(<argument pos:start="35:42" pos:end="35:45"><expr pos:start="35:42" pos:end="35:45"><name pos:start="35:42" pos:end="35:45">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:49" pos:end="35:67"><expr pos:start="35:49" pos:end="35:67"><call pos:start="35:49" pos:end="35:67"><name pos:start="35:49" pos:end="35:61">int128_make64</name><argument_list pos:start="35:62" pos:end="35:67">(<argument pos:start="35:63" pos:end="35:66"><expr pos:start="35:63" pos:end="35:66"><name pos:start="35:63" pos:end="35:66">size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:8">view</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <name pos:start="39:12" pos:end="39:26"><name pos:start="39:12" pos:end="39:13">as</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:26">current_map</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:6">fr</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <call pos:start="41:10" pos:end="41:37"><name pos:start="41:10" pos:end="41:24">flatview_lookup</name><argument_list pos:start="41:25" pos:end="41:37">(<argument pos:start="41:26" pos:end="41:29"><expr pos:start="41:26" pos:end="41:29"><name pos:start="41:26" pos:end="41:29">view</name></expr></argument>, <argument pos:start="41:32" pos:end="41:36"><expr pos:start="41:32" pos:end="41:36"><name pos:start="41:32" pos:end="41:36">range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:12">(<expr pos:start="43:9" pos:end="43:11"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:11">fr</name></expr>)</condition> <block pos:start="43:14" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:19">

        <return pos:start="45:9" pos:end="45:19">return <expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="51:5" pos:end="55:5">while <condition pos:start="51:11" pos:end="51:73">(<expr pos:start="51:12" pos:end="51:72"><name pos:start="51:12" pos:end="51:13">fr</name> <operator pos:start="51:15" pos:end="51:15">&gt;</operator> <name pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:20">view</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:28">ranges</name></name> <operator pos:start="51:30" pos:end="51:31">&amp;&amp;</operator> <call pos:start="51:33" pos:end="51:72"><name pos:start="51:33" pos:end="51:52">addrrange_intersects</name><argument_list pos:start="51:53" pos:end="51:72">(<argument pos:start="51:54" pos:end="51:64"><expr pos:start="51:54" pos:end="51:64"><name pos:start="51:54" pos:end="51:59"><name pos:start="51:54" pos:end="51:55">fr</name><index pos:start="51:56" pos:end="51:59">[<expr pos:start="51:57" pos:end="51:58"><operator pos:start="51:57" pos:end="51:57">-</operator><literal type="number" pos:start="51:58" pos:end="51:58">1</literal></expr>]</index></name><operator pos:start="51:60" pos:end="51:60">.</operator><name pos:start="51:61" pos:end="51:64">addr</name></expr></argument>, <argument pos:start="51:67" pos:end="51:71"><expr pos:start="51:67" pos:end="51:71"><name pos:start="51:67" pos:end="51:71">range</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:75" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:13">

        <expr_stmt pos:start="53:9" pos:end="53:13"><expr pos:start="53:9" pos:end="53:12"><operator pos:start="53:9" pos:end="53:10">--</operator><name pos:start="53:11" pos:end="53:12">fr</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="59:5" pos:end="59:20"><expr pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:10"><name pos:start="59:5" pos:end="59:7">ret</name><operator pos:start="59:8" pos:end="59:8">.</operator><name pos:start="59:9" pos:end="59:10">mr</name></name> <operator pos:start="59:12" pos:end="59:12">=</operator> <name pos:start="59:14" pos:end="59:19"><name pos:start="59:14" pos:end="59:15">fr</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:19">mr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:27"><expr pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:7">ret</name><operator pos:start="61:8" pos:end="61:8">.</operator><name pos:start="61:9" pos:end="61:21">address_space</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:26">as</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:52"><expr pos:start="63:5" pos:end="63:51"><name pos:start="63:5" pos:end="63:9">range</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <call pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:34">addrrange_intersection</name><argument_list pos:start="63:35" pos:end="63:51">(<argument pos:start="63:36" pos:end="63:40"><expr pos:start="63:36" pos:end="63:40"><name pos:start="63:36" pos:end="63:40">range</name></expr></argument>, <argument pos:start="63:43" pos:end="63:50"><expr pos:start="63:43" pos:end="63:50"><name pos:start="63:43" pos:end="63:50"><name pos:start="63:43" pos:end="63:44">fr</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:50">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:52"><expr pos:start="65:5" pos:end="65:51"><name pos:start="65:5" pos:end="65:28"><name pos:start="65:5" pos:end="65:7">ret</name><operator pos:start="65:8" pos:end="65:8">.</operator><name pos:start="65:9" pos:end="65:28">offset_within_region</name></name> <operator pos:start="65:30" pos:end="65:30">=</operator> <name pos:start="65:32" pos:end="65:51"><name pos:start="65:32" pos:end="65:33">fr</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:51">offset_in_region</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="69:73"><expr pos:start="67:5" pos:end="69:72"><name pos:start="67:5" pos:end="67:28"><name pos:start="67:5" pos:end="67:7">ret</name><operator pos:start="67:8" pos:end="67:8">.</operator><name pos:start="67:9" pos:end="67:28">offset_within_region</name></name> <operator pos:start="67:30" pos:end="67:31">+=</operator> <call pos:start="67:33" pos:end="69:72"><name pos:start="67:33" pos:end="67:44">int128_get64</name><argument_list pos:start="67:45" pos:end="69:72">(<argument pos:start="67:46" pos:end="69:71"><expr pos:start="67:46" pos:end="69:71"><call pos:start="67:46" pos:end="69:71"><name pos:start="67:46" pos:end="67:55">int128_sub</name><argument_list pos:start="67:56" pos:end="69:71">(<argument pos:start="67:57" pos:end="67:67"><expr pos:start="67:57" pos:end="67:67"><name pos:start="67:57" pos:end="67:67"><name pos:start="67:57" pos:end="67:61">range</name><operator pos:start="67:62" pos:end="67:62">.</operator><name pos:start="67:63" pos:end="67:67">start</name></name></expr></argument>,

                                                        <argument pos:start="69:57" pos:end="69:70"><expr pos:start="69:57" pos:end="69:70"><name pos:start="69:57" pos:end="69:70"><name pos:start="69:57" pos:end="69:58">fr</name><operator pos:start="69:59" pos:end="69:60">-&gt;</operator><name pos:start="69:61" pos:end="69:64">addr</name><operator pos:start="69:65" pos:end="69:65">.</operator><name pos:start="69:66" pos:end="69:70">start</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:26"><expr pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:12"><name pos:start="71:5" pos:end="71:7">ret</name><operator pos:start="71:8" pos:end="71:8">.</operator><name pos:start="71:9" pos:end="71:12">size</name></name> <operator pos:start="71:14" pos:end="71:14">=</operator> <name pos:start="71:16" pos:end="71:25"><name pos:start="71:16" pos:end="71:20">range</name><operator pos:start="71:21" pos:end="71:21">.</operator><name pos:start="71:22" pos:end="71:25">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:64"><expr pos:start="73:5" pos:end="73:63"><name pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:7">ret</name><operator pos:start="73:8" pos:end="73:8">.</operator><name pos:start="73:9" pos:end="73:35">offset_within_address_space</name></name> <operator pos:start="73:37" pos:end="73:37">=</operator> <call pos:start="73:39" pos:end="73:63"><name pos:start="73:39" pos:end="73:50">int128_get64</name><argument_list pos:start="73:51" pos:end="73:63">(<argument pos:start="73:52" pos:end="73:62"><expr pos:start="73:52" pos:end="73:62"><name pos:start="73:52" pos:end="73:62"><name pos:start="73:52" pos:end="73:56">range</name><operator pos:start="73:57" pos:end="73:57">.</operator><name pos:start="73:58" pos:end="73:62">start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:32"><expr pos:start="75:5" pos:end="75:31"><name pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:7">ret</name><operator pos:start="75:8" pos:end="75:8">.</operator><name pos:start="75:9" pos:end="75:16">readonly</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:31"><name pos:start="75:20" pos:end="75:21">fr</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:31">readonly</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:30"><expr pos:start="77:5" pos:end="77:29"><call pos:start="77:5" pos:end="77:29"><name pos:start="77:5" pos:end="77:21">memory_region_ref</name><argument_list pos:start="77:22" pos:end="77:29">(<argument pos:start="77:23" pos:end="77:28"><expr pos:start="77:23" pos:end="77:28"><name pos:start="77:23" pos:end="77:28"><name pos:start="77:23" pos:end="77:25">ret</name><operator pos:start="77:26" pos:end="77:26">.</operator><name pos:start="77:27" pos:end="77:28">mr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="81:5" pos:end="81:15">return <expr pos:start="81:12" pos:end="81:14"><name pos:start="81:12" pos:end="81:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
