<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14730.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">aio_read_f</name><parameter_list pos:start="1:22" pos:end="1:63">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:34">BlockBackend</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">blk</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:49"><decl pos:start="1:42" pos:end="1:49"><type pos:start="1:42" pos:end="1:49"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:49">argc</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier><modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">nr_iov</name></decl>, <decl pos:start="5:17" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:17">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:18">aio_ctx</name></name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">ctx</name> <init pos:start="7:25" pos:end="7:51">= <expr pos:start="7:27" pos:end="7:51"><call pos:start="7:27" pos:end="7:51"><name pos:start="7:27" pos:end="7:32">g_new0</name><argument_list pos:start="7:33" pos:end="7:51">(<argument pos:start="7:34" pos:end="7:47"><expr pos:start="7:34" pos:end="7:47">struct <name pos:start="7:41" pos:end="7:47">aio_ctx</name></expr></argument>, <argument pos:start="7:50" pos:end="7:50"><expr pos:start="7:50" pos:end="7:50"><literal type="number" pos:start="7:50" pos:end="7:50">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:19"><expr pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:7">ctx</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:12">blk</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:18">blk</name></expr>;</expr_stmt>

    <while pos:start="13:5" pos:end="59:5">while <condition pos:start="13:11" pos:end="13:52">(<expr pos:start="13:12" pos:end="13:51"><operator pos:start="13:12" pos:end="13:12">(</operator><name pos:start="13:13" pos:end="13:13">c</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:43"><name pos:start="13:17" pos:end="13:22">getopt</name><argument_list pos:start="13:23" pos:end="13:43">(<argument pos:start="13:24" pos:end="13:27"><expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">argc</name></expr></argument>, <argument pos:start="13:30" pos:end="13:33"><expr pos:start="13:30" pos:end="13:33"><name pos:start="13:30" pos:end="13:33">argv</name></expr></argument>, <argument pos:start="13:36" pos:end="13:42"><expr pos:start="13:36" pos:end="13:42"><literal type="string" pos:start="13:36" pos:end="13:42">"CP:qv"</literal></expr></argument>)</argument_list></call><operator pos:start="13:44" pos:end="13:44">)</operator> <operator pos:start="13:46" pos:end="13:47">!=</operator> <name pos:start="13:49" pos:end="13:51">EOF</name></expr>)</condition> <block pos:start="13:54" pos:end="59:5">{<block_content pos:start="15:9" pos:end="57:9">

        <switch pos:start="15:9" pos:end="57:9">switch <condition pos:start="15:16" pos:end="15:18">(<expr pos:start="15:17" pos:end="15:17"><name pos:start="15:17" pos:end="15:17">c</name></expr>)</condition> <block pos:start="15:20" pos:end="57:9">{<block_content pos:start="17:9" pos:end="55:55">

        <case pos:start="17:9" pos:end="17:17">case <expr pos:start="17:14" pos:end="17:16"><literal type="char" pos:start="17:14" pos:end="17:16">'C'</literal></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:27"><expr pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:15">ctx</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:22">Cflag</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <literal type="number" pos:start="19:26" pos:end="19:26">1</literal></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>

        <case pos:start="23:9" pos:end="23:17">case <expr pos:start="23:14" pos:end="23:16"><literal type="char" pos:start="23:14" pos:end="23:16">'P'</literal></expr>:</case>

            <expr_stmt pos:start="25:13" pos:end="25:27"><expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:15">ctx</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:22">Pflag</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <literal type="number" pos:start="25:26" pos:end="25:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:49"><expr pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:15">ctx</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:24">pattern</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <call pos:start="27:28" pos:end="27:48"><name pos:start="27:28" pos:end="27:40">parse_pattern</name><argument_list pos:start="27:41" pos:end="27:48">(<argument pos:start="27:42" pos:end="27:47"><expr pos:start="27:42" pos:end="27:47"><name pos:start="27:42" pos:end="27:47">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="35:13"><if pos:start="29:13" pos:end="35:13">if <condition pos:start="29:16" pos:end="29:33">(<expr pos:start="29:17" pos:end="29:32"><name pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:19">ctx</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:28">pattern</name></name> <operator pos:start="29:30" pos:end="29:30">&lt;</operator> <literal type="number" pos:start="29:32" pos:end="29:32">0</literal></expr>)</condition> <block pos:start="29:35" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:25">

                <expr_stmt pos:start="31:17" pos:end="31:28"><expr pos:start="31:17" pos:end="31:27"><call pos:start="31:17" pos:end="31:27"><name pos:start="31:17" pos:end="31:22">g_free</name><argument_list pos:start="31:23" pos:end="31:27">(<argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="33:17" pos:end="33:25">return <expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:17">case <expr pos:start="39:14" pos:end="39:16"><literal type="char" pos:start="39:14" pos:end="39:16">'q'</literal></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:27"><expr pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:15">ctx</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:22">qflag</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:26">1</literal></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:17">case <expr pos:start="45:14" pos:end="45:16"><literal type="char" pos:start="45:14" pos:end="45:16">'v'</literal></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:27"><expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:15">ctx</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:22">vflag</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <default pos:start="51:9" pos:end="51:16">default:</default>

            <expr_stmt pos:start="53:13" pos:end="53:24"><expr pos:start="53:13" pos:end="53:23"><call pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:18">g_free</name><argument_list pos:start="53:19" pos:end="53:23">(<argument pos:start="53:20" pos:end="53:22"><expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:55">return <expr pos:start="55:20" pos:end="55:54"><call pos:start="55:20" pos:end="55:54"><name pos:start="55:20" pos:end="55:39">qemuio_command_usage</name><argument_list pos:start="55:40" pos:end="55:54">(<argument pos:start="55:41" pos:end="55:53"><expr pos:start="55:41" pos:end="55:53"><operator pos:start="55:41" pos:end="55:41">&amp;</operator><name pos:start="55:42" pos:end="55:53">aio_read_cmd</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:26">(<expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:14">optind</name> <operator pos:start="63:16" pos:end="63:16">&gt;</operator> <name pos:start="63:18" pos:end="63:21">argc</name> <operator pos:start="63:23" pos:end="63:23">-</operator> <literal type="number" pos:start="63:25" pos:end="63:25">2</literal></expr>)</condition> <block pos:start="63:28" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:51">

        <expr_stmt pos:start="65:9" pos:end="65:20"><expr pos:start="65:9" pos:end="65:19"><call pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:14">g_free</name><argument_list pos:start="65:15" pos:end="65:19">(<argument pos:start="65:16" pos:end="65:18"><expr pos:start="65:16" pos:end="65:18"><name pos:start="65:16" pos:end="65:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:51">return <expr pos:start="67:16" pos:end="67:50"><call pos:start="67:16" pos:end="67:50"><name pos:start="67:16" pos:end="67:35">qemuio_command_usage</name><argument_list pos:start="67:36" pos:end="67:50">(<argument pos:start="67:37" pos:end="67:49"><expr pos:start="67:37" pos:end="67:49"><operator pos:start="67:37" pos:end="67:37">&amp;</operator><name pos:start="67:38" pos:end="67:49">aio_read_cmd</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:39"><expr pos:start="73:5" pos:end="73:38"><name pos:start="73:5" pos:end="73:15"><name pos:start="73:5" pos:end="73:7">ctx</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:15">offset</name></name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:38"><name pos:start="73:19" pos:end="73:24">cvtnum</name><argument_list pos:start="73:25" pos:end="73:38">(<argument pos:start="73:26" pos:end="73:37"><expr pos:start="73:26" pos:end="73:37"><name pos:start="73:26" pos:end="73:37"><name pos:start="73:26" pos:end="73:29">argv</name><index pos:start="73:30" pos:end="73:37">[<expr pos:start="73:31" pos:end="73:36"><name pos:start="73:31" pos:end="73:36">optind</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if <condition pos:start="75:8" pos:end="75:24">(<expr pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:11">ctx</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:19">offset</name></name> <operator pos:start="75:21" pos:end="75:21">&lt;</operator> <literal type="number" pos:start="75:23" pos:end="75:23">0</literal></expr>)</condition> <block pos:start="75:26" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:17">

        <expr_stmt pos:start="77:9" pos:end="77:68"><expr pos:start="77:9" pos:end="77:67"><call pos:start="77:9" pos:end="77:67"><name pos:start="77:9" pos:end="77:14">printf</name><argument_list pos:start="77:15" pos:end="77:67">(<argument pos:start="77:16" pos:end="77:52"><expr pos:start="77:16" pos:end="77:52"><literal type="string" pos:start="77:16" pos:end="77:52">"non-numeric length argument -- %s\n"</literal></expr></argument>, <argument pos:start="77:55" pos:end="77:66"><expr pos:start="77:55" pos:end="77:66"><name pos:start="77:55" pos:end="77:66"><name pos:start="77:55" pos:end="77:58">argv</name><index pos:start="77:59" pos:end="77:66">[<expr pos:start="77:60" pos:end="77:65"><name pos:start="77:60" pos:end="77:65">optind</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:20"><expr pos:start="79:9" pos:end="79:19"><call pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:14">g_free</name><argument_list pos:start="79:15" pos:end="79:19">(<argument pos:start="79:16" pos:end="79:18"><expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:17">return <expr pos:start="81:16" pos:end="81:16"><literal type="number" pos:start="81:16" pos:end="81:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:13"><expr pos:start="85:5" pos:end="85:12"><name pos:start="85:5" pos:end="85:10">optind</name><operator pos:start="85:11" pos:end="85:12">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="89:5" pos:end="99:5"><if pos:start="89:5" pos:end="99:5">if <condition pos:start="89:8" pos:end="89:28">(<expr pos:start="89:9" pos:end="89:27"><name pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:11">ctx</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:19">offset</name></name> <operator pos:start="89:21" pos:end="89:21">&amp;</operator> <literal type="number" pos:start="89:23" pos:end="89:27">0x1ff</literal></expr>)</condition> <block pos:start="89:30" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:17">

        <expr_stmt pos:start="91:9" pos:end="93:28"><expr pos:start="91:9" pos:end="93:27"><call pos:start="91:9" pos:end="93:27"><name pos:start="91:9" pos:end="91:14">printf</name><argument_list pos:start="91:15" pos:end="93:27">(<argument pos:start="91:16" pos:end="91:59"><expr pos:start="91:16" pos:end="91:59"><literal type="string" pos:start="91:16" pos:end="91:25">"offset %"</literal> <name pos:start="91:27" pos:end="91:32">PRId64</name> <literal type="string" pos:start="91:34" pos:end="91:59">" is not sector aligned\n"</literal></expr></argument>,

               <argument pos:start="93:16" pos:end="93:26"><expr pos:start="93:16" pos:end="93:26"><name pos:start="93:16" pos:end="93:26"><name pos:start="93:16" pos:end="93:18">ctx</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:26">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:20"><expr pos:start="95:9" pos:end="95:19"><call pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:14">g_free</name><argument_list pos:start="95:15" pos:end="95:19">(<argument pos:start="95:16" pos:end="95:18"><expr pos:start="95:16" pos:end="95:18"><name pos:start="95:16" pos:end="95:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:17">return <expr pos:start="97:16" pos:end="97:16"><literal type="number" pos:start="97:16" pos:end="97:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:27"><expr pos:start="103:5" pos:end="103:26"><name pos:start="103:5" pos:end="103:10">nr_iov</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <name pos:start="103:14" pos:end="103:17">argc</name> <operator pos:start="103:19" pos:end="103:19">-</operator> <name pos:start="103:21" pos:end="103:26">optind</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:74"><expr pos:start="105:5" pos:end="105:73"><name pos:start="105:5" pos:end="105:12"><name pos:start="105:5" pos:end="105:7">ctx</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:12">buf</name></name> <operator pos:start="105:14" pos:end="105:14">=</operator> <call pos:start="105:16" pos:end="105:73"><name pos:start="105:16" pos:end="105:27">create_iovec</name><argument_list pos:start="105:28" pos:end="105:73">(<argument pos:start="105:29" pos:end="105:31"><expr pos:start="105:29" pos:end="105:31"><name pos:start="105:29" pos:end="105:31">blk</name></expr></argument>, <argument pos:start="105:34" pos:end="105:43"><expr pos:start="105:34" pos:end="105:43"><operator pos:start="105:34" pos:end="105:34">&amp;</operator><name pos:start="105:35" pos:end="105:43"><name pos:start="105:35" pos:end="105:37">ctx</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:43">qiov</name></name></expr></argument>, <argument pos:start="105:46" pos:end="105:58"><expr pos:start="105:46" pos:end="105:58"><operator pos:start="105:46" pos:end="105:46">&amp;</operator><name pos:start="105:47" pos:end="105:58"><name pos:start="105:47" pos:end="105:50">argv</name><index pos:start="105:51" pos:end="105:58">[<expr pos:start="105:52" pos:end="105:57"><name pos:start="105:52" pos:end="105:57">optind</name></expr>]</index></name></expr></argument>, <argument pos:start="105:61" pos:end="105:66"><expr pos:start="105:61" pos:end="105:66"><name pos:start="105:61" pos:end="105:66">nr_iov</name></expr></argument>, <argument pos:start="105:69" pos:end="105:72"><expr pos:start="105:69" pos:end="105:72"><literal type="number" pos:start="105:69" pos:end="105:72">0xab</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="113:5"><if pos:start="107:5" pos:end="113:5">if <condition pos:start="107:8" pos:end="107:25">(<expr pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:16"><name pos:start="107:9" pos:end="107:11">ctx</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:16">buf</name></name> <operator pos:start="107:18" pos:end="107:19">==</operator> <name pos:start="107:21" pos:end="107:24">NULL</name></expr>)</condition> <block pos:start="107:27" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:17">

        <expr_stmt pos:start="109:9" pos:end="109:20"><expr pos:start="109:9" pos:end="109:19"><call pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:14">g_free</name><argument_list pos:start="109:15" pos:end="109:19">(<argument pos:start="109:16" pos:end="109:18"><expr pos:start="109:16" pos:end="109:18"><name pos:start="109:16" pos:end="109:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="111:9" pos:end="111:17">return <expr pos:start="111:16" pos:end="111:16"><literal type="number" pos:start="111:16" pos:end="111:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:33"><expr pos:start="117:5" pos:end="117:32"><call pos:start="117:5" pos:end="117:32"><name pos:start="117:5" pos:end="117:16">gettimeofday</name><argument_list pos:start="117:17" pos:end="117:32">(<argument pos:start="117:18" pos:end="117:25"><expr pos:start="117:18" pos:end="117:25"><operator pos:start="117:18" pos:end="117:18">&amp;</operator><name pos:start="117:19" pos:end="117:25"><name pos:start="117:19" pos:end="117:21">ctx</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:25">t1</name></name></expr></argument>, <argument pos:start="117:28" pos:end="117:31"><expr pos:start="117:28" pos:end="117:31"><name pos:start="117:28" pos:end="117:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="121:38"><expr pos:start="119:5" pos:end="121:37"><call pos:start="119:5" pos:end="121:37"><name pos:start="119:5" pos:end="119:20">block_acct_start</name><argument_list pos:start="119:21" pos:end="121:37">(<argument pos:start="119:22" pos:end="119:39"><expr pos:start="119:22" pos:end="119:39"><call pos:start="119:22" pos:end="119:39"><name pos:start="119:22" pos:end="119:34">blk_get_stats</name><argument_list pos:start="119:35" pos:end="119:39">(<argument pos:start="119:36" pos:end="119:38"><expr pos:start="119:36" pos:end="119:38"><name pos:start="119:36" pos:end="119:38">blk</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:42" pos:end="119:51"><expr pos:start="119:42" pos:end="119:51"><operator pos:start="119:42" pos:end="119:42">&amp;</operator><name pos:start="119:43" pos:end="119:51"><name pos:start="119:43" pos:end="119:45">ctx</name><operator pos:start="119:46" pos:end="119:47">-&gt;</operator><name pos:start="119:48" pos:end="119:51">acct</name></name></expr></argument>, <argument pos:start="119:54" pos:end="119:67"><expr pos:start="119:54" pos:end="119:67"><name pos:start="119:54" pos:end="119:67"><name pos:start="119:54" pos:end="119:56">ctx</name><operator pos:start="119:57" pos:end="119:58">-&gt;</operator><name pos:start="119:59" pos:end="119:62">qiov</name><operator pos:start="119:63" pos:end="119:63">.</operator><name pos:start="119:64" pos:end="119:67">size</name></name></expr></argument>,

                     <argument pos:start="121:22" pos:end="121:36"><expr pos:start="121:22" pos:end="121:36"><name pos:start="121:22" pos:end="121:36">BLOCK_ACCT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="125:59"><expr pos:start="123:5" pos:end="125:58"><call pos:start="123:5" pos:end="125:58"><name pos:start="123:5" pos:end="123:17">blk_aio_readv</name><argument_list pos:start="123:18" pos:end="125:58">(<argument pos:start="123:19" pos:end="123:21"><expr pos:start="123:19" pos:end="123:21"><name pos:start="123:19" pos:end="123:21">blk</name></expr></argument>, <argument pos:start="123:24" pos:end="123:39"><expr pos:start="123:24" pos:end="123:39"><name pos:start="123:24" pos:end="123:34"><name pos:start="123:24" pos:end="123:26">ctx</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:34">offset</name></name> <operator pos:start="123:36" pos:end="123:37">&gt;&gt;</operator> <literal type="number" pos:start="123:39" pos:end="123:39">9</literal></expr></argument>, <argument pos:start="123:42" pos:end="123:51"><expr pos:start="123:42" pos:end="123:51"><operator pos:start="123:42" pos:end="123:42">&amp;</operator><name pos:start="123:43" pos:end="123:51"><name pos:start="123:43" pos:end="123:45">ctx</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:51">qiov</name></name></expr></argument>,

                  <argument pos:start="125:19" pos:end="125:37"><expr pos:start="125:19" pos:end="125:37"><name pos:start="125:19" pos:end="125:32"><name pos:start="125:19" pos:end="125:21">ctx</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:27">qiov</name><operator pos:start="125:28" pos:end="125:28">.</operator><name pos:start="125:29" pos:end="125:32">size</name></name> <operator pos:start="125:34" pos:end="125:35">&gt;&gt;</operator> <literal type="number" pos:start="125:37" pos:end="125:37">9</literal></expr></argument>, <argument pos:start="125:40" pos:end="125:52"><expr pos:start="125:40" pos:end="125:52"><name pos:start="125:40" pos:end="125:52">aio_read_done</name></expr></argument>, <argument pos:start="125:55" pos:end="125:57"><expr pos:start="125:55" pos:end="125:57"><name pos:start="125:55" pos:end="125:57">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
