<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11088.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">flac_write_block_comment</name><parameter_list pos:start="1:36" pos:end="3:65">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><name pos:start="1:37" pos:end="1:47">AVIOContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">pb</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><name pos:start="1:54" pos:end="1:65">AVDictionary</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier><modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:69">m</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:50">last_block</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">bitexact</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:13">

    <decl_stmt pos:start="7:5" pos:end="7:65"><decl pos:start="7:5" pos:end="7:64"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">vendor</name> <init pos:start="7:24" pos:end="7:64">= <expr pos:start="7:26" pos:end="7:64"><ternary pos:start="7:26" pos:end="7:64"><condition pos:start="7:26" pos:end="7:35"><expr pos:start="7:26" pos:end="7:33"><name pos:start="7:26" pos:end="7:33">bitexact</name></expr> ?</condition><then pos:start="7:37" pos:end="7:44"> <expr pos:start="7:37" pos:end="7:44"><literal type="string" pos:start="7:37" pos:end="7:44">"ffmpeg"</literal></expr> </then><else pos:start="7:46" pos:end="7:64">: <expr pos:start="7:48" pos:end="7:64"><name pos:start="7:48" pos:end="7:64">LIBAVFORMAT_IDENT</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:20">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">p</name></decl>, <decl pos:start="11:17" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">p0</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:62"><expr pos:start="15:5" pos:end="15:61"><call pos:start="15:5" pos:end="15:61"><name pos:start="15:5" pos:end="15:20">ff_metadata_conv</name><argument_list pos:start="15:21" pos:end="15:61">(<argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">m</name></expr></argument>, <argument pos:start="15:25" pos:end="15:54"><expr pos:start="15:25" pos:end="15:54"><name pos:start="15:25" pos:end="15:54">ff_vorbiscomment_metadata_conv</name></expr></argument>, <argument pos:start="15:57" pos:end="15:60"><expr pos:start="15:57" pos:end="15:60"><name pos:start="15:57" pos:end="15:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:7">len</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:45"><name pos:start="19:11" pos:end="19:33">ff_vorbiscomment_length</name><argument_list pos:start="19:34" pos:end="19:45">(<argument pos:start="19:35" pos:end="19:36"><expr pos:start="19:35" pos:end="19:36"><operator pos:start="19:35" pos:end="19:35">*</operator><name pos:start="19:36" pos:end="19:36">m</name></expr></argument>, <argument pos:start="19:39" pos:end="19:44"><expr pos:start="19:39" pos:end="19:44"><name pos:start="19:39" pos:end="19:44">vendor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:6">p0</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:25"><name pos:start="21:10" pos:end="21:18">av_malloc</name><argument_list pos:start="21:19" pos:end="21:25">(<argument pos:start="21:20" pos:end="21:24"><expr pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:22">len</name><operator pos:start="21:23" pos:end="21:23">+</operator><literal type="number" pos:start="21:24" pos:end="21:24">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:31"><if pos:start="23:5" pos:end="25:31">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:11">p0</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:11"><expr pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:5">p</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <name pos:start="27:9" pos:end="27:10">p0</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><call pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:23">bytestream_put_byte</name><argument_list pos:start="31:24" pos:end="31:53">(<argument pos:start="31:25" pos:end="31:26"><expr pos:start="31:25" pos:end="31:26"><operator pos:start="31:25" pos:end="31:25">&amp;</operator><name pos:start="31:26" pos:end="31:26">p</name></expr></argument>, <argument pos:start="31:29" pos:end="31:52"><expr pos:start="31:29" pos:end="31:52"><ternary pos:start="31:29" pos:end="31:52"><condition pos:start="31:29" pos:end="31:40"><expr pos:start="31:29" pos:end="31:38"><name pos:start="31:29" pos:end="31:38">last_block</name></expr> ?</condition><then pos:start="31:42" pos:end="31:45"> <expr pos:start="31:42" pos:end="31:45"><literal type="number" pos:start="31:42" pos:end="31:45">0x84</literal></expr> </then><else pos:start="31:47" pos:end="31:52">: <expr pos:start="31:49" pos:end="31:52"><literal type="number" pos:start="31:49" pos:end="31:52">0x04</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><call pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:23">bytestream_put_be24</name><argument_list pos:start="33:24" pos:end="33:32">(<argument pos:start="33:25" pos:end="33:26"><expr pos:start="33:25" pos:end="33:26"><operator pos:start="33:25" pos:end="33:25">&amp;</operator><name pos:start="33:26" pos:end="33:26">p</name></expr></argument>, <argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><call pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:26">ff_vorbiscomment_write</name><argument_list pos:start="35:27" pos:end="35:41">(<argument pos:start="35:28" pos:end="35:29"><expr pos:start="35:28" pos:end="35:29"><operator pos:start="35:28" pos:end="35:28">&amp;</operator><name pos:start="35:29" pos:end="35:29">p</name></expr></argument>, <argument pos:start="35:32" pos:end="35:32"><expr pos:start="35:32" pos:end="35:32"><name pos:start="35:32" pos:end="35:32">m</name></expr></argument>, <argument pos:start="35:35" pos:end="35:40"><expr pos:start="35:35" pos:end="35:40"><name pos:start="35:35" pos:end="35:40">vendor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:30"><expr pos:start="39:5" pos:end="39:29"><call pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:14">avio_write</name><argument_list pos:start="39:15" pos:end="39:29">(<argument pos:start="39:16" pos:end="39:17"><expr pos:start="39:16" pos:end="39:17"><name pos:start="39:16" pos:end="39:17">pb</name></expr></argument>, <argument pos:start="39:20" pos:end="39:21"><expr pos:start="39:20" pos:end="39:21"><name pos:start="39:20" pos:end="39:21">p0</name></expr></argument>, <argument pos:start="39:24" pos:end="39:28"><expr pos:start="39:24" pos:end="39:28"><name pos:start="39:24" pos:end="39:26">len</name><operator pos:start="39:27" pos:end="39:27">+</operator><literal type="number" pos:start="39:28" pos:end="39:28">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><call pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:12">av_freep</name><argument_list pos:start="41:13" pos:end="41:17">(<argument pos:start="41:14" pos:end="41:16"><expr pos:start="41:14" pos:end="41:16"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:16">p0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:13"><expr pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:5">p</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <name pos:start="43:9" pos:end="43:12">NULL</name></expr>;</expr_stmt>



    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
