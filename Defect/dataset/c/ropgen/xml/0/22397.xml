<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22397.c" pos:tabs="8"><function pos:start="1:1" pos:end="309:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">cris_mmu_translate_page</name><parameter_list pos:start="1:35" pos:end="5:56">(<parameter pos:start="1:36" pos:end="1:64"><decl pos:start="1:36" pos:end="1:64"><type pos:start="1:36" pos:end="1:64"><name pos:start="1:36" pos:end="1:59"><name pos:start="1:36" pos:end="1:41">struct</name> <name pos:start="1:43" pos:end="1:59">cris_mmu_result_t</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">res</name></decl></parameter>,

				   <parameter pos:start="3:36" pos:end="3:48"><decl pos:start="3:36" pos:end="3:48"><type pos:start="3:36" pos:end="3:48"><name pos:start="3:36" pos:end="3:43">CPUState</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">env</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:64"><decl pos:start="3:51" pos:end="3:64"><type pos:start="3:51" pos:end="3:64"><name pos:start="3:51" pos:end="3:58">uint32_t</name></type> <name pos:start="3:60" pos:end="3:64">vaddr</name></decl></parameter>,

				   <parameter pos:start="5:36" pos:end="5:41"><decl pos:start="5:36" pos:end="5:41"><type pos:start="5:36" pos:end="5:41"><name pos:start="5:36" pos:end="5:38">int</name></type> <name pos:start="5:40" pos:end="5:41">rw</name></decl></parameter>, <parameter pos:start="5:44" pos:end="5:55"><decl pos:start="5:44" pos:end="5:55"><type pos:start="5:44" pos:end="5:55"><name pos:start="5:44" pos:end="5:46">int</name></type> <name pos:start="5:48" pos:end="5:55">usermode</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="309:1">{<block_content pos:start="9:9" pos:end="307:22">

	<decl_stmt pos:start="9:9" pos:end="9:27"><decl pos:start="9:9" pos:end="9:26"><type pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:16">unsigned</name> <name pos:start="9:18" pos:end="9:20">int</name></type> <name pos:start="9:22" pos:end="9:26">vpage</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:25"><decl pos:start="11:9" pos:end="11:24"><type pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:16">unsigned</name> <name pos:start="11:18" pos:end="11:20">int</name></type> <name pos:start="11:22" pos:end="11:24">idx</name></decl>;</decl_stmt>

	<decl_stmt pos:start="13:9" pos:end="13:24"><decl pos:start="13:9" pos:end="13:19"><type pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:16">uint32_t</name></type> <name pos:start="13:18" pos:end="13:19">lo</name></decl>, <decl pos:start="13:22" pos:end="13:23"><type ref="prev" pos:start="13:9" pos:end="13:16"/><name pos:start="13:22" pos:end="13:23">hi</name></decl>;</decl_stmt>

	<decl_stmt pos:start="15:9" pos:end="15:38"><decl pos:start="15:9" pos:end="15:24"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">uint32_t</name></type> <name pos:start="15:18" pos:end="15:24">tlb_vpn</name></decl>, <decl pos:start="15:27" pos:end="15:37"><type ref="prev" pos:start="15:9" pos:end="15:16"/><name pos:start="15:27" pos:end="15:33">tlb_pfn</name> <init pos:start="15:35" pos:end="15:37">= <expr pos:start="15:37" pos:end="15:37"><literal type="number" pos:start="15:37" pos:end="15:37">0</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="17:9" pos:end="17:55"><decl pos:start="17:9" pos:end="17:19"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:19">tlb_pid</name></decl>, <decl pos:start="17:22" pos:end="17:26"><type ref="prev" pos:start="17:9" pos:end="17:11"/><name pos:start="17:22" pos:end="17:26">tlb_g</name></decl>, <decl pos:start="17:29" pos:end="17:33"><type ref="prev" pos:start="17:9" pos:end="17:11"/><name pos:start="17:29" pos:end="17:33">tlb_v</name></decl>, <decl pos:start="17:36" pos:end="17:40"><type ref="prev" pos:start="17:9" pos:end="17:11"/><name pos:start="17:36" pos:end="17:40">tlb_k</name></decl>, <decl pos:start="17:43" pos:end="17:47"><type ref="prev" pos:start="17:9" pos:end="17:11"/><name pos:start="17:43" pos:end="17:47">tlb_w</name></decl>, <decl pos:start="17:50" pos:end="17:54"><type ref="prev" pos:start="17:9" pos:end="17:11"/><name pos:start="17:50" pos:end="17:54">tlb_x</name></decl>;</decl_stmt>

	<decl_stmt pos:start="19:9" pos:end="19:39"><decl pos:start="19:9" pos:end="19:17"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:17">cfg_v</name></decl>, <decl pos:start="19:20" pos:end="19:24"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:20" pos:end="19:24">cfg_k</name></decl>, <decl pos:start="19:27" pos:end="19:31"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:27" pos:end="19:31">cfg_w</name></decl>, <decl pos:start="19:34" pos:end="19:38"><type ref="prev" pos:start="19:9" pos:end="19:11"/><name pos:start="19:34" pos:end="19:38">cfg_x</name></decl>;</decl_stmt>	

	<decl_stmt pos:start="21:9" pos:end="21:27"><decl pos:start="21:9" pos:end="21:15"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:15">set</name></decl>, <decl pos:start="21:18" pos:end="21:26"><type ref="prev" pos:start="21:9" pos:end="21:11"/><name pos:start="21:18" pos:end="21:22">match</name> <init pos:start="21:24" pos:end="21:26">= <expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="23:9" pos:end="23:25"><decl pos:start="23:9" pos:end="23:24"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">uint32_t</name></type> <name pos:start="23:18" pos:end="23:24">r_cause</name></decl>;</decl_stmt>

	<decl_stmt pos:start="25:9" pos:end="25:23"><decl pos:start="25:9" pos:end="25:22"><type pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16">uint32_t</name></type> <name pos:start="25:18" pos:end="25:22">r_cfg</name></decl>;</decl_stmt>

	<decl_stmt pos:start="27:9" pos:end="27:20"><decl pos:start="27:9" pos:end="27:19"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:19">rwcause</name></decl>;</decl_stmt>

	<decl_stmt pos:start="29:9" pos:end="29:20"><decl pos:start="29:9" pos:end="29:19"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:15">mmu</name> <init pos:start="29:17" pos:end="29:19">= <expr pos:start="29:19" pos:end="29:19"><literal type="number" pos:start="29:19" pos:end="29:19">1</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="29:22" pos:end="29:48">/* Data mmu is default.  */</comment>

	<decl_stmt pos:start="31:9" pos:end="31:22"><decl pos:start="31:9" pos:end="31:21"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:21">vect_base</name></decl>;</decl_stmt>



	<expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:15">r_cause</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:44"><name pos:start="35:19" pos:end="35:21">env</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:28">sregs</name><index pos:start="35:29" pos:end="35:44">[<expr pos:start="35:30" pos:end="35:43"><name pos:start="35:30" pos:end="35:43">SFR_R_MM_CAUSE</name></expr>]</index></name></expr>;</expr_stmt>

	<expr_stmt pos:start="37:9" pos:end="37:42"><expr pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:13">r_cfg</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:41"><name pos:start="37:17" pos:end="37:19">env</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:26">sregs</name><index pos:start="37:27" pos:end="37:41">[<expr pos:start="37:28" pos:end="37:40"><name pos:start="37:28" pos:end="37:40">SFR_RW_MM_CFG</name></expr>]</index></name></expr>;</expr_stmt>



	<switch pos:start="41:9" pos:end="51:9">switch <condition pos:start="41:16" pos:end="41:19">(<expr pos:start="41:17" pos:end="41:18"><name pos:start="41:17" pos:end="41:18">rw</name></expr>)</condition> <block pos:start="41:21" pos:end="51:9">{<block_content pos:start="43:17" pos:end="49:59">

		<case pos:start="43:17" pos:end="43:23">case <expr pos:start="43:22" pos:end="43:22"><literal type="number" pos:start="43:22" pos:end="43:22">2</literal></expr>:</case> <expr_stmt pos:start="43:25" pos:end="43:52"><expr pos:start="43:25" pos:end="43:51"><name pos:start="43:25" pos:end="43:31">rwcause</name> <operator pos:start="43:33" pos:end="43:33">=</operator> <name pos:start="43:35" pos:end="43:51">CRIS_MMU_ERR_EXEC</name></expr>;</expr_stmt> <expr_stmt pos:start="43:54" pos:end="43:61"><expr pos:start="43:54" pos:end="43:60"><name pos:start="43:54" pos:end="43:56">mmu</name> <operator pos:start="43:58" pos:end="43:58">=</operator> <literal type="number" pos:start="43:60" pos:end="43:60">0</literal></expr>;</expr_stmt> <break pos:start="43:63" pos:end="43:68">break;</break>

		<case pos:start="45:17" pos:end="45:23">case <expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">1</literal></expr>:</case> <expr_stmt pos:start="45:25" pos:end="45:53"><expr pos:start="45:25" pos:end="45:52"><name pos:start="45:25" pos:end="45:31">rwcause</name> <operator pos:start="45:33" pos:end="45:33">=</operator> <name pos:start="45:35" pos:end="45:52">CRIS_MMU_ERR_WRITE</name></expr>;</expr_stmt> <break pos:start="45:55" pos:end="45:60">break;</break>

		<default pos:start="47:17" pos:end="47:24">default:</default>

		<case pos:start="49:17" pos:end="49:23">case <expr pos:start="49:22" pos:end="49:22"><literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr>:</case> <expr_stmt pos:start="49:25" pos:end="49:52"><expr pos:start="49:25" pos:end="49:51"><name pos:start="49:25" pos:end="49:31">rwcause</name> <operator pos:start="49:33" pos:end="49:33">=</operator> <name pos:start="49:35" pos:end="49:51">CRIS_MMU_ERR_READ</name></expr>;</expr_stmt> <break pos:start="49:54" pos:end="49:59">break;</break>

	</block_content>}</block></switch>



	<comment type="block" pos:start="55:9" pos:end="55:51">/* I exception vectors 4 - 7, D 8 - 11.  */</comment>

	<expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:17">vect_base</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <operator pos:start="57:21" pos:end="57:21">(</operator><name pos:start="57:22" pos:end="57:24">mmu</name> <operator pos:start="57:26" pos:end="57:26">+</operator> <literal type="number" pos:start="57:28" pos:end="57:28">1</literal><operator pos:start="57:29" pos:end="57:29">)</operator> <operator pos:start="57:31" pos:end="57:31">*</operator> <literal type="number" pos:start="57:33" pos:end="57:33">4</literal></expr>;</expr_stmt>



	<expr_stmt pos:start="61:9" pos:end="94:0"><expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:13">vpage</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:21">vaddr</name> <operator pos:start="61:23" pos:end="61:24">&gt;&gt;</operator> <literal type="number" pos:start="61:26" pos:end="61:27">13</literal></expr>;</expr_stmt>



	<comment type="block" pos:start="65:9" pos:end="67:33">/* We know the index which to check on each set.

	   Scan both I and D.  */</comment>

<cpp:if pos:start="69:1" pos:end="69:5">#<cpp:directive pos:start="69:2" pos:end="69:3">if</cpp:directive> <expr pos:start="69:5" pos:end="69:5"><literal type="number" pos:start="69:5" pos:end="69:5">0</literal></expr></cpp:if>

	for (set = 0; set &lt; 4; set++) {

		for (idx = 0; idx &lt; 16; idx++) {

			lo = env-&gt;tlbsets[mmu][set][idx].lo;

			hi = env-&gt;tlbsets[mmu][set][idx].hi;

			tlb_vpn = EXTRACT_FIELD(hi, 13, 31);

			tlb_pfn = EXTRACT_FIELD(lo, 13, 31);



			printf ("TLB: [%d][%d] hi=%x lo=%x v=%x p=%x\n", 

					set, idx, hi, lo, tlb_vpn, tlb_pfn);

		}

	}

<cpp:endif pos:start="93:1" pos:end="93:6">#<cpp:directive pos:start="93:2" pos:end="93:6">endif</cpp:directive></cpp:endif>



	<expr_stmt pos:start="97:9" pos:end="97:25"><expr pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:11">idx</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <name pos:start="97:15" pos:end="97:19">vpage</name> <operator pos:start="97:21" pos:end="97:21">&amp;</operator> <literal type="number" pos:start="97:23" pos:end="97:24">15</literal></expr>;</expr_stmt>

	<for pos:start="99:9" pos:end="127:9">for <control pos:start="99:13" pos:end="99:37">(<init pos:start="99:14" pos:end="99:21"><expr pos:start="99:14" pos:end="99:20"><name pos:start="99:14" pos:end="99:16">set</name> <operator pos:start="99:18" pos:end="99:18">=</operator> <literal type="number" pos:start="99:20" pos:end="99:20">0</literal></expr>;</init> <condition pos:start="99:23" pos:end="99:30"><expr pos:start="99:23" pos:end="99:29"><name pos:start="99:23" pos:end="99:25">set</name> <operator pos:start="99:27" pos:end="99:27">&lt;</operator> <literal type="number" pos:start="99:29" pos:end="99:29">4</literal></expr>;</condition> <incr pos:start="99:32" pos:end="99:36"><expr pos:start="99:32" pos:end="99:36"><name pos:start="99:32" pos:end="99:34">set</name><operator pos:start="99:35" pos:end="99:36">++</operator></expr></incr>)</control>

	<block pos:start="101:9" pos:end="127:9">{<block_content pos:start="103:17" pos:end="125:17">

		<expr_stmt pos:start="103:17" pos:end="103:52"><expr pos:start="103:17" pos:end="103:51"><name pos:start="103:17" pos:end="103:18">lo</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:48"><name pos:start="103:22" pos:end="103:24">env</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:33">tlbsets</name><index pos:start="103:34" pos:end="103:38">[<expr pos:start="103:35" pos:end="103:37"><name pos:start="103:35" pos:end="103:37">mmu</name></expr>]</index><index pos:start="103:39" pos:end="103:43">[<expr pos:start="103:40" pos:end="103:42"><name pos:start="103:40" pos:end="103:42">set</name></expr>]</index><index pos:start="103:44" pos:end="103:48">[<expr pos:start="103:45" pos:end="103:47"><name pos:start="103:45" pos:end="103:47">idx</name></expr>]</index></name><operator pos:start="103:49" pos:end="103:49">.</operator><name pos:start="103:50" pos:end="103:51">lo</name></expr>;</expr_stmt>

		<expr_stmt pos:start="105:17" pos:end="105:52"><expr pos:start="105:17" pos:end="105:51"><name pos:start="105:17" pos:end="105:18">hi</name> <operator pos:start="105:20" pos:end="105:20">=</operator> <name pos:start="105:22" pos:end="105:48"><name pos:start="105:22" pos:end="105:24">env</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:33">tlbsets</name><index pos:start="105:34" pos:end="105:38">[<expr pos:start="105:35" pos:end="105:37"><name pos:start="105:35" pos:end="105:37">mmu</name></expr>]</index><index pos:start="105:39" pos:end="105:43">[<expr pos:start="105:40" pos:end="105:42"><name pos:start="105:40" pos:end="105:42">set</name></expr>]</index><index pos:start="105:44" pos:end="105:48">[<expr pos:start="105:45" pos:end="105:47"><name pos:start="105:45" pos:end="105:47">idx</name></expr>]</index></name><operator pos:start="105:49" pos:end="105:49">.</operator><name pos:start="105:50" pos:end="105:51">hi</name></expr>;</expr_stmt>



		<expr_stmt pos:start="109:17" pos:end="109:52"><expr pos:start="109:17" pos:end="109:51"><name pos:start="109:17" pos:end="109:23">tlb_vpn</name> <operator pos:start="109:25" pos:end="109:25">=</operator> <call pos:start="109:27" pos:end="109:51"><name pos:start="109:27" pos:end="109:39">EXTRACT_FIELD</name><argument_list pos:start="109:40" pos:end="109:51">(<argument pos:start="109:41" pos:end="109:42"><expr pos:start="109:41" pos:end="109:42"><name pos:start="109:41" pos:end="109:42">hi</name></expr></argument>, <argument pos:start="109:45" pos:end="109:46"><expr pos:start="109:45" pos:end="109:46"><literal type="number" pos:start="109:45" pos:end="109:46">13</literal></expr></argument>, <argument pos:start="109:49" pos:end="109:50"><expr pos:start="109:49" pos:end="109:50"><literal type="number" pos:start="109:49" pos:end="109:50">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="111:17" pos:end="111:52"><expr pos:start="111:17" pos:end="111:51"><name pos:start="111:17" pos:end="111:23">tlb_pfn</name> <operator pos:start="111:25" pos:end="111:25">=</operator> <call pos:start="111:27" pos:end="111:51"><name pos:start="111:27" pos:end="111:39">EXTRACT_FIELD</name><argument_list pos:start="111:40" pos:end="111:51">(<argument pos:start="111:41" pos:end="111:42"><expr pos:start="111:41" pos:end="111:42"><name pos:start="111:41" pos:end="111:42">lo</name></expr></argument>, <argument pos:start="111:45" pos:end="111:46"><expr pos:start="111:45" pos:end="111:46"><literal type="number" pos:start="111:45" pos:end="111:46">13</literal></expr></argument>, <argument pos:start="111:49" pos:end="111:50"><expr pos:start="111:49" pos:end="111:50"><literal type="number" pos:start="111:49" pos:end="111:50">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<expr_stmt pos:start="115:17" pos:end="117:74"><expr pos:start="115:17" pos:end="117:73"><call pos:start="115:17" pos:end="117:73"><name pos:start="115:17" pos:end="115:17">D</name><argument_list pos:start="115:18" pos:end="117:73">(<argument pos:start="115:19" pos:end="117:72"><expr pos:start="115:19" pos:end="117:72"><call pos:start="115:19" pos:end="117:72"><name pos:start="115:19" pos:end="115:24">printf</name><argument_list pos:start="115:25" pos:end="117:72">(<argument pos:start="115:26" pos:end="115:76"><expr pos:start="115:26" pos:end="115:76"><literal type="string" pos:start="115:26" pos:end="115:76">"TLB[%d][%d] v=%x vpage=%x -&gt; pfn=%x lo=%x hi=%x\n"</literal></expr></argument>, 

				<argument pos:start="117:33" pos:end="117:33"><expr pos:start="117:33" pos:end="117:33"><name pos:start="117:33" pos:end="117:33">i</name></expr></argument>, <argument pos:start="117:36" pos:end="117:38"><expr pos:start="117:36" pos:end="117:38"><name pos:start="117:36" pos:end="117:38">idx</name></expr></argument>, <argument pos:start="117:41" pos:end="117:47"><expr pos:start="117:41" pos:end="117:47"><name pos:start="117:41" pos:end="117:47">tlb_vpn</name></expr></argument>, <argument pos:start="117:50" pos:end="117:54"><expr pos:start="117:50" pos:end="117:54"><name pos:start="117:50" pos:end="117:54">vpage</name></expr></argument>, <argument pos:start="117:57" pos:end="117:63"><expr pos:start="117:57" pos:end="117:63"><name pos:start="117:57" pos:end="117:63">tlb_pfn</name></expr></argument>, <argument pos:start="117:66" pos:end="117:67"><expr pos:start="117:66" pos:end="117:67"><name pos:start="117:66" pos:end="117:67">lo</name></expr></argument>, <argument pos:start="117:70" pos:end="117:71"><expr pos:start="117:70" pos:end="117:71"><name pos:start="117:70" pos:end="117:71">hi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="119:17" pos:end="125:17"><if pos:start="119:17" pos:end="125:17">if <condition pos:start="119:20" pos:end="119:37">(<expr pos:start="119:21" pos:end="119:36"><name pos:start="119:21" pos:end="119:27">tlb_vpn</name> <operator pos:start="119:29" pos:end="119:30">==</operator> <name pos:start="119:32" pos:end="119:36">vpage</name></expr>)</condition> <block pos:start="119:39" pos:end="125:17">{<block_content pos:start="121:25" pos:end="123:30">

			<expr_stmt pos:start="121:25" pos:end="121:34"><expr pos:start="121:25" pos:end="121:33"><name pos:start="121:25" pos:end="121:29">match</name> <operator pos:start="121:31" pos:end="121:31">=</operator> <literal type="number" pos:start="121:33" pos:end="121:33">1</literal></expr>;</expr_stmt>

			<break pos:start="123:25" pos:end="123:30">break;</break>

		</block_content>}</block></if></if_stmt>

	</block_content>}</block></for>



	<expr_stmt pos:start="131:9" pos:end="131:32"><expr pos:start="131:9" pos:end="131:31"><name pos:start="131:9" pos:end="131:19"><name pos:start="131:9" pos:end="131:11">res</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:19">bf_vec</name></name> <operator pos:start="131:21" pos:end="131:21">=</operator> <name pos:start="131:23" pos:end="131:31">vect_base</name></expr>;</expr_stmt>

	<if_stmt pos:start="133:9" pos:end="243:9"><if pos:start="133:9" pos:end="243:9">if <condition pos:start="133:12" pos:end="133:18">(<expr pos:start="133:13" pos:end="133:17"><name pos:start="133:13" pos:end="133:17">match</name></expr>)</condition> <block pos:start="133:20" pos:end="243:9">{<block_content pos:start="135:17" pos:end="241:50">

		<expr_stmt pos:start="135:17" pos:end="135:54"><expr pos:start="135:17" pos:end="135:53"><name pos:start="135:17" pos:end="135:21">cfg_w</name>  <operator pos:start="135:24" pos:end="135:24">=</operator> <call pos:start="135:26" pos:end="135:53"><name pos:start="135:26" pos:end="135:38">EXTRACT_FIELD</name><argument_list pos:start="135:39" pos:end="135:53">(<argument pos:start="135:40" pos:end="135:44"><expr pos:start="135:40" pos:end="135:44"><name pos:start="135:40" pos:end="135:44">r_cfg</name></expr></argument>, <argument pos:start="135:47" pos:end="135:48"><expr pos:start="135:47" pos:end="135:48"><literal type="number" pos:start="135:47" pos:end="135:48">19</literal></expr></argument>, <argument pos:start="135:51" pos:end="135:52"><expr pos:start="135:51" pos:end="135:52"><literal type="number" pos:start="135:51" pos:end="135:52">19</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="137:17" pos:end="137:54"><expr pos:start="137:17" pos:end="137:53"><name pos:start="137:17" pos:end="137:21">cfg_k</name>  <operator pos:start="137:24" pos:end="137:24">=</operator> <call pos:start="137:26" pos:end="137:53"><name pos:start="137:26" pos:end="137:38">EXTRACT_FIELD</name><argument_list pos:start="137:39" pos:end="137:53">(<argument pos:start="137:40" pos:end="137:44"><expr pos:start="137:40" pos:end="137:44"><name pos:start="137:40" pos:end="137:44">r_cfg</name></expr></argument>, <argument pos:start="137:47" pos:end="137:48"><expr pos:start="137:47" pos:end="137:48"><literal type="number" pos:start="137:47" pos:end="137:48">18</literal></expr></argument>, <argument pos:start="137:51" pos:end="137:52"><expr pos:start="137:51" pos:end="137:52"><literal type="number" pos:start="137:51" pos:end="137:52">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="139:17" pos:end="139:54"><expr pos:start="139:17" pos:end="139:53"><name pos:start="139:17" pos:end="139:21">cfg_x</name>  <operator pos:start="139:24" pos:end="139:24">=</operator> <call pos:start="139:26" pos:end="139:53"><name pos:start="139:26" pos:end="139:38">EXTRACT_FIELD</name><argument_list pos:start="139:39" pos:end="139:53">(<argument pos:start="139:40" pos:end="139:44"><expr pos:start="139:40" pos:end="139:44"><name pos:start="139:40" pos:end="139:44">r_cfg</name></expr></argument>, <argument pos:start="139:47" pos:end="139:48"><expr pos:start="139:47" pos:end="139:48"><literal type="number" pos:start="139:47" pos:end="139:48">17</literal></expr></argument>, <argument pos:start="139:51" pos:end="139:52"><expr pos:start="139:51" pos:end="139:52"><literal type="number" pos:start="139:51" pos:end="139:52">17</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="141:17" pos:end="141:54"><expr pos:start="141:17" pos:end="141:53"><name pos:start="141:17" pos:end="141:21">cfg_v</name>  <operator pos:start="141:24" pos:end="141:24">=</operator> <call pos:start="141:26" pos:end="141:53"><name pos:start="141:26" pos:end="141:38">EXTRACT_FIELD</name><argument_list pos:start="141:39" pos:end="141:53">(<argument pos:start="141:40" pos:end="141:44"><expr pos:start="141:40" pos:end="141:44"><name pos:start="141:40" pos:end="141:44">r_cfg</name></expr></argument>, <argument pos:start="141:47" pos:end="141:48"><expr pos:start="141:47" pos:end="141:48"><literal type="number" pos:start="141:47" pos:end="141:48">16</literal></expr></argument>, <argument pos:start="141:51" pos:end="141:52"><expr pos:start="141:51" pos:end="141:52"><literal type="number" pos:start="141:51" pos:end="141:52">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<expr_stmt pos:start="145:17" pos:end="145:50"><expr pos:start="145:17" pos:end="145:49"><name pos:start="145:17" pos:end="145:23">tlb_pid</name> <operator pos:start="145:25" pos:end="145:25">=</operator> <call pos:start="145:27" pos:end="145:49"><name pos:start="145:27" pos:end="145:39">EXTRACT_FIELD</name><argument_list pos:start="145:40" pos:end="145:49">(<argument pos:start="145:41" pos:end="145:42"><expr pos:start="145:41" pos:end="145:42"><name pos:start="145:41" pos:end="145:42">hi</name></expr></argument>, <argument pos:start="145:45" pos:end="145:45"><expr pos:start="145:45" pos:end="145:45"><literal type="number" pos:start="145:45" pos:end="145:45">0</literal></expr></argument>, <argument pos:start="145:48" pos:end="145:48"><expr pos:start="145:48" pos:end="145:48"><literal type="number" pos:start="145:48" pos:end="145:48">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="147:17" pos:end="147:52"><expr pos:start="147:17" pos:end="147:51"><name pos:start="147:17" pos:end="147:23">tlb_pfn</name> <operator pos:start="147:25" pos:end="147:25">=</operator> <call pos:start="147:27" pos:end="147:51"><name pos:start="147:27" pos:end="147:39">EXTRACT_FIELD</name><argument_list pos:start="147:40" pos:end="147:51">(<argument pos:start="147:41" pos:end="147:42"><expr pos:start="147:41" pos:end="147:42"><name pos:start="147:41" pos:end="147:42">lo</name></expr></argument>, <argument pos:start="147:45" pos:end="147:46"><expr pos:start="147:45" pos:end="147:46"><literal type="number" pos:start="147:45" pos:end="147:46">13</literal></expr></argument>, <argument pos:start="147:49" pos:end="147:50"><expr pos:start="147:49" pos:end="147:50"><literal type="number" pos:start="147:49" pos:end="147:50">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="149:17" pos:end="149:49"><expr pos:start="149:17" pos:end="149:48"><name pos:start="149:17" pos:end="149:21">tlb_g</name>  <operator pos:start="149:24" pos:end="149:24">=</operator> <call pos:start="149:26" pos:end="149:48"><name pos:start="149:26" pos:end="149:38">EXTRACT_FIELD</name><argument_list pos:start="149:39" pos:end="149:48">(<argument pos:start="149:40" pos:end="149:41"><expr pos:start="149:40" pos:end="149:41"><name pos:start="149:40" pos:end="149:41">lo</name></expr></argument>, <argument pos:start="149:44" pos:end="149:44"><expr pos:start="149:44" pos:end="149:44"><literal type="number" pos:start="149:44" pos:end="149:44">4</literal></expr></argument>, <argument pos:start="149:47" pos:end="149:47"><expr pos:start="149:47" pos:end="149:47"><literal type="number" pos:start="149:47" pos:end="149:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="151:17" pos:end="151:48"><expr pos:start="151:17" pos:end="151:47"><name pos:start="151:17" pos:end="151:21">tlb_v</name> <operator pos:start="151:23" pos:end="151:23">=</operator> <call pos:start="151:25" pos:end="151:47"><name pos:start="151:25" pos:end="151:37">EXTRACT_FIELD</name><argument_list pos:start="151:38" pos:end="151:47">(<argument pos:start="151:39" pos:end="151:40"><expr pos:start="151:39" pos:end="151:40"><name pos:start="151:39" pos:end="151:40">lo</name></expr></argument>, <argument pos:start="151:43" pos:end="151:43"><expr pos:start="151:43" pos:end="151:43"><literal type="number" pos:start="151:43" pos:end="151:43">3</literal></expr></argument>, <argument pos:start="151:46" pos:end="151:46"><expr pos:start="151:46" pos:end="151:46"><literal type="number" pos:start="151:46" pos:end="151:46">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="153:17" pos:end="153:48"><expr pos:start="153:17" pos:end="153:47"><name pos:start="153:17" pos:end="153:21">tlb_k</name> <operator pos:start="153:23" pos:end="153:23">=</operator> <call pos:start="153:25" pos:end="153:47"><name pos:start="153:25" pos:end="153:37">EXTRACT_FIELD</name><argument_list pos:start="153:38" pos:end="153:47">(<argument pos:start="153:39" pos:end="153:40"><expr pos:start="153:39" pos:end="153:40"><name pos:start="153:39" pos:end="153:40">lo</name></expr></argument>, <argument pos:start="153:43" pos:end="153:43"><expr pos:start="153:43" pos:end="153:43"><literal type="number" pos:start="153:43" pos:end="153:43">2</literal></expr></argument>, <argument pos:start="153:46" pos:end="153:46"><expr pos:start="153:46" pos:end="153:46"><literal type="number" pos:start="153:46" pos:end="153:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="155:17" pos:end="155:48"><expr pos:start="155:17" pos:end="155:47"><name pos:start="155:17" pos:end="155:21">tlb_w</name> <operator pos:start="155:23" pos:end="155:23">=</operator> <call pos:start="155:25" pos:end="155:47"><name pos:start="155:25" pos:end="155:37">EXTRACT_FIELD</name><argument_list pos:start="155:38" pos:end="155:47">(<argument pos:start="155:39" pos:end="155:40"><expr pos:start="155:39" pos:end="155:40"><name pos:start="155:39" pos:end="155:40">lo</name></expr></argument>, <argument pos:start="155:43" pos:end="155:43"><expr pos:start="155:43" pos:end="155:43"><literal type="number" pos:start="155:43" pos:end="155:43">1</literal></expr></argument>, <argument pos:start="155:46" pos:end="155:46"><expr pos:start="155:46" pos:end="155:46"><literal type="number" pos:start="155:46" pos:end="155:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="157:17" pos:end="157:48"><expr pos:start="157:17" pos:end="157:47"><name pos:start="157:17" pos:end="157:21">tlb_x</name> <operator pos:start="157:23" pos:end="157:23">=</operator> <call pos:start="157:25" pos:end="157:47"><name pos:start="157:25" pos:end="157:37">EXTRACT_FIELD</name><argument_list pos:start="157:38" pos:end="157:47">(<argument pos:start="157:39" pos:end="157:40"><expr pos:start="157:39" pos:end="157:40"><name pos:start="157:39" pos:end="157:40">lo</name></expr></argument>, <argument pos:start="157:43" pos:end="157:43"><expr pos:start="157:43" pos:end="157:43"><literal type="number" pos:start="157:43" pos:end="157:43">0</literal></expr></argument>, <argument pos:start="157:46" pos:end="157:46"><expr pos:start="157:46" pos:end="157:46"><literal type="number" pos:start="157:46" pos:end="157:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<comment type="block" pos:start="161:17" pos:end="179:18">/*

		set_exception_vector(0x04, i_mmu_refill);

		set_exception_vector(0x05, i_mmu_invalid);

		set_exception_vector(0x06, i_mmu_access);

		set_exception_vector(0x07, i_mmu_execute);

		set_exception_vector(0x08, d_mmu_refill);

		set_exception_vector(0x09, d_mmu_invalid);

		set_exception_vector(0x0a, d_mmu_access);

		set_exception_vector(0x0b, d_mmu_write);

		*/</comment>

		<if_stmt pos:start="181:17" pos:end="213:17"><if pos:start="181:17" pos:end="193:17">if <condition pos:start="181:20" pos:end="183:62">(<expr pos:start="181:21" pos:end="183:61"><operator pos:start="181:21" pos:end="181:21">!</operator><name pos:start="181:22" pos:end="181:26">tlb_g</name> 

		    <operator pos:start="183:21" pos:end="183:22">&amp;&amp;</operator> <name pos:start="183:24" pos:end="183:30">tlb_pid</name> <operator pos:start="183:32" pos:end="183:33">!=</operator> <operator pos:start="183:35" pos:end="183:35">(</operator><name pos:start="183:36" pos:end="183:53"><name pos:start="183:36" pos:end="183:38">env</name><operator pos:start="183:39" pos:end="183:40">-&gt;</operator><name pos:start="183:41" pos:end="183:45">pregs</name><index pos:start="183:46" pos:end="183:53">[<expr pos:start="183:47" pos:end="183:52"><name pos:start="183:47" pos:end="183:52">PR_PID</name></expr>]</index></name> <operator pos:start="183:55" pos:end="183:55">&amp;</operator> <literal type="number" pos:start="183:57" pos:end="183:60">0xff</literal><operator pos:start="183:61" pos:end="183:61">)</operator></expr>)</condition> <block pos:start="183:64" pos:end="193:17">{<block_content pos:start="185:25" pos:end="191:48">

			<expr_stmt pos:start="185:25" pos:end="187:72"><expr pos:start="185:25" pos:end="187:71"><call pos:start="185:25" pos:end="187:71"><name pos:start="185:25" pos:end="185:25">D</name><argument_list pos:start="185:26" pos:end="187:71">(<argument pos:start="185:27" pos:end="187:70"><expr pos:start="185:27" pos:end="187:70"><call pos:start="185:27" pos:end="187:70"><name pos:start="185:27" pos:end="185:32">printf</name> <argument_list pos:start="185:34" pos:end="187:70">(<argument pos:start="185:35" pos:end="185:64"><expr pos:start="185:35" pos:end="185:64"><literal type="string" pos:start="185:35" pos:end="185:64">"tlb: wrong pid %x %x pc=%x\n"</literal></expr></argument>, 

				 <argument pos:start="187:34" pos:end="187:40"><expr pos:start="187:34" pos:end="187:40"><name pos:start="187:34" pos:end="187:40">tlb_pid</name></expr></argument>, <argument pos:start="187:43" pos:end="187:60"><expr pos:start="187:43" pos:end="187:60"><name pos:start="187:43" pos:end="187:60"><name pos:start="187:43" pos:end="187:45">env</name><operator pos:start="187:46" pos:end="187:47">-&gt;</operator><name pos:start="187:48" pos:end="187:52">pregs</name><index pos:start="187:53" pos:end="187:60">[<expr pos:start="187:54" pos:end="187:59"><name pos:start="187:54" pos:end="187:59">PR_PID</name></expr>]</index></name></expr></argument>, <argument pos:start="187:63" pos:end="187:69"><expr pos:start="187:63" pos:end="187:69"><name pos:start="187:63" pos:end="187:69"><name pos:start="187:63" pos:end="187:65">env</name><operator pos:start="187:66" pos:end="187:67">-&gt;</operator><name pos:start="187:68" pos:end="187:69">pc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="189:25" pos:end="189:34"><expr pos:start="189:25" pos:end="189:33"><name pos:start="189:25" pos:end="189:29">match</name> <operator pos:start="189:31" pos:end="189:31">=</operator> <literal type="number" pos:start="189:33" pos:end="189:33">0</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="191:25" pos:end="191:48"><expr pos:start="191:25" pos:end="191:47"><name pos:start="191:25" pos:end="191:35"><name pos:start="191:25" pos:end="191:27">res</name><operator pos:start="191:28" pos:end="191:29">-&gt;</operator><name pos:start="191:30" pos:end="191:35">bf_vec</name></name> <operator pos:start="191:37" pos:end="191:37">=</operator> <name pos:start="191:39" pos:end="191:47">vect_base</name></expr>;</expr_stmt>

		</block_content>}</block></if> <if type="elseif" pos:start="193:19" pos:end="203:17">else if <condition pos:start="193:27" pos:end="193:54">(<expr pos:start="193:28" pos:end="193:53"><name pos:start="193:28" pos:end="193:29">rw</name> <operator pos:start="193:31" pos:end="193:32">==</operator> <literal type="number" pos:start="193:34" pos:end="193:34">1</literal> <operator pos:start="193:36" pos:end="193:37">&amp;&amp;</operator> <name pos:start="193:39" pos:end="193:43">cfg_w</name> <operator pos:start="193:45" pos:end="193:46">&amp;&amp;</operator> <operator pos:start="193:48" pos:end="193:48">!</operator><name pos:start="193:49" pos:end="193:53">tlb_w</name></expr>)</condition> <block pos:start="193:56" pos:end="203:17">{<block_content pos:start="195:25" pos:end="201:52">

			<expr_stmt pos:start="195:25" pos:end="197:44"><expr pos:start="195:25" pos:end="197:43"><call pos:start="195:25" pos:end="197:43"><name pos:start="195:25" pos:end="195:25">D</name><argument_list pos:start="195:26" pos:end="197:43">(<argument pos:start="195:27" pos:end="197:42"><expr pos:start="195:27" pos:end="197:42"><call pos:start="195:27" pos:end="197:42"><name pos:start="195:27" pos:end="195:32">printf</name> <argument_list pos:start="195:34" pos:end="197:42">(<argument pos:start="195:35" pos:end="195:67"><expr pos:start="195:35" pos:end="195:67"><literal type="string" pos:start="195:35" pos:end="195:67">"tlb: write protected %x lo=%x\n"</literal></expr></argument>, 

				<argument pos:start="197:33" pos:end="197:37"><expr pos:start="197:33" pos:end="197:37"><name pos:start="197:33" pos:end="197:37">vaddr</name></expr></argument>, <argument pos:start="197:40" pos:end="197:41"><expr pos:start="197:40" pos:end="197:41"><name pos:start="197:40" pos:end="197:41">lo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="199:25" pos:end="199:34"><expr pos:start="199:25" pos:end="199:33"><name pos:start="199:25" pos:end="199:29">match</name> <operator pos:start="199:31" pos:end="199:31">=</operator> <literal type="number" pos:start="199:33" pos:end="199:33">0</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="201:25" pos:end="201:52"><expr pos:start="201:25" pos:end="201:51"><name pos:start="201:25" pos:end="201:35"><name pos:start="201:25" pos:end="201:27">res</name><operator pos:start="201:28" pos:end="201:29">-&gt;</operator><name pos:start="201:30" pos:end="201:35">bf_vec</name></name> <operator pos:start="201:37" pos:end="201:37">=</operator> <name pos:start="201:39" pos:end="201:47">vect_base</name> <operator pos:start="201:49" pos:end="201:49">+</operator> <literal type="number" pos:start="201:51" pos:end="201:51">3</literal></expr>;</expr_stmt>

		</block_content>}</block></if> <if type="elseif" pos:start="203:19" pos:end="213:17">else if <condition pos:start="203:27" pos:end="203:43">(<expr pos:start="203:28" pos:end="203:42"><name pos:start="203:28" pos:end="203:32">cfg_v</name> <operator pos:start="203:34" pos:end="203:35">&amp;&amp;</operator> <operator pos:start="203:37" pos:end="203:37">!</operator><name pos:start="203:38" pos:end="203:42">tlb_v</name></expr>)</condition> <block pos:start="203:45" pos:end="213:17">{<block_content pos:start="205:25" pos:end="211:52">

			<expr_stmt pos:start="205:25" pos:end="205:63"><expr pos:start="205:25" pos:end="205:62"><call pos:start="205:25" pos:end="205:62"><name pos:start="205:25" pos:end="205:25">D</name><argument_list pos:start="205:26" pos:end="205:62">(<argument pos:start="205:27" pos:end="205:61"><expr pos:start="205:27" pos:end="205:61"><call pos:start="205:27" pos:end="205:61"><name pos:start="205:27" pos:end="205:32">printf</name> <argument_list pos:start="205:34" pos:end="205:61">(<argument pos:start="205:35" pos:end="205:53"><expr pos:start="205:35" pos:end="205:53"><literal type="string" pos:start="205:35" pos:end="205:53">"tlb: invalid %x\n"</literal></expr></argument>, <argument pos:start="205:56" pos:end="205:60"><expr pos:start="205:56" pos:end="205:60"><name pos:start="205:56" pos:end="205:60">vaddr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="207:25" pos:end="207:59"><expr pos:start="207:25" pos:end="207:58"><call pos:start="207:25" pos:end="207:58"><name pos:start="207:25" pos:end="207:33">set_field</name><argument_list pos:start="207:34" pos:end="207:58">(<argument pos:start="207:35" pos:end="207:42"><expr pos:start="207:35" pos:end="207:42"><operator pos:start="207:35" pos:end="207:35">&amp;</operator><name pos:start="207:36" pos:end="207:42">r_cause</name></expr></argument>, <argument pos:start="207:45" pos:end="207:51"><expr pos:start="207:45" pos:end="207:51"><name pos:start="207:45" pos:end="207:51">rwcause</name></expr></argument>, <argument pos:start="207:54" pos:end="207:54"><expr pos:start="207:54" pos:end="207:54"><literal type="number" pos:start="207:54" pos:end="207:54">8</literal></expr></argument>, <argument pos:start="207:57" pos:end="207:57"><expr pos:start="207:57" pos:end="207:57"><literal type="number" pos:start="207:57" pos:end="207:57">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="209:25" pos:end="209:34"><expr pos:start="209:25" pos:end="209:33"><name pos:start="209:25" pos:end="209:29">match</name> <operator pos:start="209:31" pos:end="209:31">=</operator> <literal type="number" pos:start="209:33" pos:end="209:33">0</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="211:25" pos:end="211:52"><expr pos:start="211:25" pos:end="211:51"><name pos:start="211:25" pos:end="211:35"><name pos:start="211:25" pos:end="211:27">res</name><operator pos:start="211:28" pos:end="211:29">-&gt;</operator><name pos:start="211:30" pos:end="211:35">bf_vec</name></name> <operator pos:start="211:37" pos:end="211:37">=</operator> <name pos:start="211:39" pos:end="211:47">vect_base</name> <operator pos:start="211:49" pos:end="211:49">+</operator> <literal type="number" pos:start="211:51" pos:end="211:51">1</literal></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>



		<expr_stmt pos:start="217:17" pos:end="217:30"><expr pos:start="217:17" pos:end="217:29"><name pos:start="217:17" pos:end="217:25"><name pos:start="217:17" pos:end="217:19">res</name><operator pos:start="217:20" pos:end="217:21">-&gt;</operator><name pos:start="217:22" pos:end="217:25">prot</name></name> <operator pos:start="217:27" pos:end="217:27">=</operator> <literal type="number" pos:start="217:29" pos:end="217:29">0</literal></expr>;</expr_stmt>

		<if_stmt pos:start="219:17" pos:end="235:46"><if pos:start="219:17" pos:end="231:17">if <condition pos:start="219:20" pos:end="219:26">(<expr pos:start="219:21" pos:end="219:25"><name pos:start="219:21" pos:end="219:25">match</name></expr>)</condition> <block pos:start="219:28" pos:end="231:17">{<block_content pos:start="221:25" pos:end="229:55">

			<expr_stmt pos:start="221:25" pos:end="221:47"><expr pos:start="221:25" pos:end="221:46"><name pos:start="221:25" pos:end="221:33"><name pos:start="221:25" pos:end="221:27">res</name><operator pos:start="221:28" pos:end="221:29">-&gt;</operator><name pos:start="221:30" pos:end="221:33">prot</name></name> <operator pos:start="221:35" pos:end="221:36">|=</operator> <name pos:start="221:38" pos:end="221:46">PAGE_READ</name></expr>;</expr_stmt>

			<if_stmt pos:start="223:25" pos:end="225:56"><if pos:start="223:25" pos:end="225:56">if <condition pos:start="223:28" pos:end="223:34">(<expr pos:start="223:29" pos:end="223:33"><name pos:start="223:29" pos:end="223:33">tlb_w</name></expr>)</condition><block type="pseudo" pos:start="225:33" pos:end="225:56"><block_content pos:start="225:33" pos:end="225:56">

				<expr_stmt pos:start="225:33" pos:end="225:56"><expr pos:start="225:33" pos:end="225:55"><name pos:start="225:33" pos:end="225:41"><name pos:start="225:33" pos:end="225:35">res</name><operator pos:start="225:36" pos:end="225:37">-&gt;</operator><name pos:start="225:38" pos:end="225:41">prot</name></name> <operator pos:start="225:43" pos:end="225:44">|=</operator> <name pos:start="225:46" pos:end="225:55">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

			<if_stmt pos:start="227:25" pos:end="229:55"><if pos:start="227:25" pos:end="229:55">if <condition pos:start="227:28" pos:end="227:34">(<expr pos:start="227:29" pos:end="227:33"><name pos:start="227:29" pos:end="227:33">tlb_x</name></expr>)</condition><block type="pseudo" pos:start="229:33" pos:end="229:55"><block_content pos:start="229:33" pos:end="229:55">

				<expr_stmt pos:start="229:33" pos:end="229:55"><expr pos:start="229:33" pos:end="229:54"><name pos:start="229:33" pos:end="229:41"><name pos:start="229:33" pos:end="229:35">res</name><operator pos:start="229:36" pos:end="229:37">-&gt;</operator><name pos:start="229:38" pos:end="229:41">prot</name></name> <operator pos:start="229:43" pos:end="229:44">|=</operator> <name pos:start="229:46" pos:end="229:54">PAGE_EXEC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		</block_content>}</block></if>

		<else pos:start="233:17" pos:end="235:46">else<block type="pseudo" pos:start="235:25" pos:end="235:46"><block_content pos:start="235:25" pos:end="235:46">

			<expr_stmt pos:start="235:25" pos:end="235:46"><expr pos:start="235:25" pos:end="235:45"><call pos:start="235:25" pos:end="235:45"><name pos:start="235:25" pos:end="235:25">D</name><argument_list pos:start="235:26" pos:end="235:45">(<argument pos:start="235:27" pos:end="235:44"><expr pos:start="235:27" pos:end="235:44"><call pos:start="235:27" pos:end="235:44"><name pos:start="235:27" pos:end="235:34">dump_tlb</name><argument_list pos:start="235:35" pos:end="235:44">(<argument pos:start="235:36" pos:end="235:38"><expr pos:start="235:36" pos:end="235:38"><name pos:start="235:36" pos:end="235:38">env</name></expr></argument>, <argument pos:start="235:41" pos:end="235:43"><expr pos:start="235:41" pos:end="235:43"><name pos:start="235:41" pos:end="235:43">mmu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



		<expr_stmt pos:start="239:17" pos:end="239:50"><expr pos:start="239:17" pos:end="239:49"><name pos:start="239:17" pos:end="239:44"><name pos:start="239:17" pos:end="239:19">env</name><operator pos:start="239:20" pos:end="239:21">-&gt;</operator><name pos:start="239:22" pos:end="239:26">sregs</name><index pos:start="239:27" pos:end="239:44">[<expr pos:start="239:28" pos:end="239:43"><name pos:start="239:28" pos:end="239:43">SFR_RW_MM_TLB_HI</name></expr>]</index></name> <operator pos:start="239:46" pos:end="239:46">=</operator> <name pos:start="239:48" pos:end="239:49">hi</name></expr>;</expr_stmt>

		<expr_stmt pos:start="241:17" pos:end="241:50"><expr pos:start="241:17" pos:end="241:49"><name pos:start="241:17" pos:end="241:44"><name pos:start="241:17" pos:end="241:19">env</name><operator pos:start="241:20" pos:end="241:21">-&gt;</operator><name pos:start="241:22" pos:end="241:26">sregs</name><index pos:start="241:27" pos:end="241:44">[<expr pos:start="241:28" pos:end="241:43"><name pos:start="241:28" pos:end="241:43">SFR_RW_MM_TLB_LO</name></expr>]</index></name> <operator pos:start="241:46" pos:end="241:46">=</operator> <name pos:start="241:48" pos:end="241:49">lo</name></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>



	<if_stmt pos:start="247:9" pos:end="279:9"><if pos:start="247:9" pos:end="279:9">if <condition pos:start="247:12" pos:end="247:19">(<expr pos:start="247:13" pos:end="247:18"><operator pos:start="247:13" pos:end="247:13">!</operator><name pos:start="247:14" pos:end="247:18">match</name></expr>)</condition> <block pos:start="247:21" pos:end="279:9">{<block_content pos:start="251:17" pos:end="277:69">

		<comment type="block" pos:start="249:17" pos:end="249:28">/* miss.  */</comment>

		<expr_stmt pos:start="251:17" pos:end="251:33"><expr pos:start="251:17" pos:end="251:32"><name pos:start="251:17" pos:end="251:19">idx</name> <operator pos:start="251:21" pos:end="251:21">=</operator> <name pos:start="251:23" pos:end="251:27">vpage</name> <operator pos:start="251:29" pos:end="251:29">&amp;</operator> <literal type="number" pos:start="251:31" pos:end="251:32">15</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="253:17" pos:end="253:24"><expr pos:start="253:17" pos:end="253:23"><name pos:start="253:17" pos:end="253:19">set</name> <operator pos:start="253:21" pos:end="253:21">=</operator> <literal type="number" pos:start="253:23" pos:end="253:23">0</literal></expr>;</expr_stmt>



		<comment type="block" pos:start="257:17" pos:end="257:44">/* Update RW_MM_TLB_SEL.  */</comment>

		<expr_stmt pos:start="259:17" pos:end="259:50"><expr pos:start="259:17" pos:end="259:49"><name pos:start="259:17" pos:end="259:45"><name pos:start="259:17" pos:end="259:19">env</name><operator pos:start="259:20" pos:end="259:21">-&gt;</operator><name pos:start="259:22" pos:end="259:26">sregs</name><index pos:start="259:27" pos:end="259:45">[<expr pos:start="259:28" pos:end="259:44"><name pos:start="259:28" pos:end="259:44">SFR_RW_MM_TLB_SEL</name></expr>]</index></name> <operator pos:start="259:47" pos:end="259:47">=</operator> <literal type="number" pos:start="259:49" pos:end="259:49">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="261:17" pos:end="261:69"><expr pos:start="261:17" pos:end="261:68"><call pos:start="261:17" pos:end="261:68"><name pos:start="261:17" pos:end="261:25">set_field</name><argument_list pos:start="261:26" pos:end="261:68">(<argument pos:start="261:27" pos:end="261:56"><expr pos:start="261:27" pos:end="261:56"><operator pos:start="261:27" pos:end="261:27">&amp;</operator><name pos:start="261:28" pos:end="261:56"><name pos:start="261:28" pos:end="261:30">env</name><operator pos:start="261:31" pos:end="261:32">-&gt;</operator><name pos:start="261:33" pos:end="261:37">sregs</name><index pos:start="261:38" pos:end="261:56">[<expr pos:start="261:39" pos:end="261:55"><name pos:start="261:39" pos:end="261:55">SFR_RW_MM_TLB_SEL</name></expr>]</index></name></expr></argument>, <argument pos:start="261:59" pos:end="261:61"><expr pos:start="261:59" pos:end="261:61"><name pos:start="261:59" pos:end="261:61">idx</name></expr></argument>, <argument pos:start="261:64" pos:end="261:64"><expr pos:start="261:64" pos:end="261:64"><literal type="number" pos:start="261:64" pos:end="261:64">0</literal></expr></argument>, <argument pos:start="261:67" pos:end="261:67"><expr pos:start="261:67" pos:end="261:67"><literal type="number" pos:start="261:67" pos:end="261:67">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="263:17" pos:end="263:69"><expr pos:start="263:17" pos:end="263:68"><call pos:start="263:17" pos:end="263:68"><name pos:start="263:17" pos:end="263:25">set_field</name><argument_list pos:start="263:26" pos:end="263:68">(<argument pos:start="263:27" pos:end="263:56"><expr pos:start="263:27" pos:end="263:56"><operator pos:start="263:27" pos:end="263:27">&amp;</operator><name pos:start="263:28" pos:end="263:56"><name pos:start="263:28" pos:end="263:30">env</name><operator pos:start="263:31" pos:end="263:32">-&gt;</operator><name pos:start="263:33" pos:end="263:37">sregs</name><index pos:start="263:38" pos:end="263:56">[<expr pos:start="263:39" pos:end="263:55"><name pos:start="263:39" pos:end="263:55">SFR_RW_MM_TLB_SEL</name></expr>]</index></name></expr></argument>, <argument pos:start="263:59" pos:end="263:61"><expr pos:start="263:59" pos:end="263:61"><name pos:start="263:59" pos:end="263:61">set</name></expr></argument>, <argument pos:start="263:64" pos:end="263:64"><expr pos:start="263:64" pos:end="263:64"><literal type="number" pos:start="263:64" pos:end="263:64">4</literal></expr></argument>, <argument pos:start="263:67" pos:end="263:67"><expr pos:start="263:67" pos:end="263:67"><literal type="number" pos:start="263:67" pos:end="263:67">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<comment type="block" pos:start="267:17" pos:end="267:42">/* Update RW_MM_CAUSE.  */</comment>

		<expr_stmt pos:start="269:17" pos:end="269:51"><expr pos:start="269:17" pos:end="269:50"><call pos:start="269:17" pos:end="269:50"><name pos:start="269:17" pos:end="269:25">set_field</name><argument_list pos:start="269:26" pos:end="269:50">(<argument pos:start="269:27" pos:end="269:34"><expr pos:start="269:27" pos:end="269:34"><operator pos:start="269:27" pos:end="269:27">&amp;</operator><name pos:start="269:28" pos:end="269:34">r_cause</name></expr></argument>, <argument pos:start="269:37" pos:end="269:43"><expr pos:start="269:37" pos:end="269:43"><name pos:start="269:37" pos:end="269:43">rwcause</name></expr></argument>, <argument pos:start="269:46" pos:end="269:46"><expr pos:start="269:46" pos:end="269:46"><literal type="number" pos:start="269:46" pos:end="269:46">8</literal></expr></argument>, <argument pos:start="269:49" pos:end="269:49"><expr pos:start="269:49" pos:end="269:49"><literal type="number" pos:start="269:49" pos:end="269:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="271:17" pos:end="271:51"><expr pos:start="271:17" pos:end="271:50"><call pos:start="271:17" pos:end="271:50"><name pos:start="271:17" pos:end="271:25">set_field</name><argument_list pos:start="271:26" pos:end="271:50">(<argument pos:start="271:27" pos:end="271:34"><expr pos:start="271:27" pos:end="271:34"><operator pos:start="271:27" pos:end="271:27">&amp;</operator><name pos:start="271:28" pos:end="271:34">r_cause</name></expr></argument>, <argument pos:start="271:37" pos:end="271:41"><expr pos:start="271:37" pos:end="271:41"><name pos:start="271:37" pos:end="271:41">vpage</name></expr></argument>, <argument pos:start="271:44" pos:end="271:45"><expr pos:start="271:44" pos:end="271:45"><literal type="number" pos:start="271:44" pos:end="271:45">13</literal></expr></argument>, <argument pos:start="271:48" pos:end="271:49"><expr pos:start="271:48" pos:end="271:49"><literal type="number" pos:start="271:48" pos:end="271:49">19</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="273:17" pos:end="273:62"><expr pos:start="273:17" pos:end="273:61"><call pos:start="273:17" pos:end="273:61"><name pos:start="273:17" pos:end="273:25">set_field</name><argument_list pos:start="273:26" pos:end="273:61">(<argument pos:start="273:27" pos:end="273:34"><expr pos:start="273:27" pos:end="273:34"><operator pos:start="273:27" pos:end="273:27">&amp;</operator><name pos:start="273:28" pos:end="273:34">r_cause</name></expr></argument>, <argument pos:start="273:37" pos:end="273:54"><expr pos:start="273:37" pos:end="273:54"><name pos:start="273:37" pos:end="273:54"><name pos:start="273:37" pos:end="273:39">env</name><operator pos:start="273:40" pos:end="273:41">-&gt;</operator><name pos:start="273:42" pos:end="273:46">pregs</name><index pos:start="273:47" pos:end="273:54">[<expr pos:start="273:48" pos:end="273:53"><name pos:start="273:48" pos:end="273:53">PR_PID</name></expr>]</index></name></expr></argument>, <argument pos:start="273:57" pos:end="273:57"><expr pos:start="273:57" pos:end="273:57"><literal type="number" pos:start="273:57" pos:end="273:57">0</literal></expr></argument>, <argument pos:start="273:60" pos:end="273:60"><expr pos:start="273:60" pos:end="273:60"><literal type="number" pos:start="273:60" pos:end="273:60">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="275:17" pos:end="275:53"><expr pos:start="275:17" pos:end="275:52"><name pos:start="275:17" pos:end="275:42"><name pos:start="275:17" pos:end="275:19">env</name><operator pos:start="275:20" pos:end="275:21">-&gt;</operator><name pos:start="275:22" pos:end="275:26">sregs</name><index pos:start="275:27" pos:end="275:42">[<expr pos:start="275:28" pos:end="275:41"><name pos:start="275:28" pos:end="275:41">SFR_R_MM_CAUSE</name></expr>]</index></name> <operator pos:start="275:44" pos:end="275:44">=</operator> <name pos:start="275:46" pos:end="275:52">r_cause</name></expr>;</expr_stmt>

		<expr_stmt pos:start="277:17" pos:end="277:69"><expr pos:start="277:17" pos:end="277:68"><call pos:start="277:17" pos:end="277:68"><name pos:start="277:17" pos:end="277:17">D</name><argument_list pos:start="277:18" pos:end="277:68">(<argument pos:start="277:19" pos:end="277:67"><expr pos:start="277:19" pos:end="277:67"><call pos:start="277:19" pos:end="277:67"><name pos:start="277:19" pos:end="277:24">printf</name><argument_list pos:start="277:25" pos:end="277:67">(<argument pos:start="277:26" pos:end="277:50"><expr pos:start="277:26" pos:end="277:50"><literal type="string" pos:start="277:26" pos:end="277:50">"refill vaddr=%x pc=%x\n"</literal></expr></argument>, <argument pos:start="277:53" pos:end="277:57"><expr pos:start="277:53" pos:end="277:57"><name pos:start="277:53" pos:end="277:57">vaddr</name></expr></argument>, <argument pos:start="277:60" pos:end="277:66"><expr pos:start="277:60" pos:end="277:66"><name pos:start="277:60" pos:end="277:66"><name pos:start="277:60" pos:end="277:62">env</name><operator pos:start="277:63" pos:end="277:64">-&gt;</operator><name pos:start="277:65" pos:end="277:66">pc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>





	<expr_stmt pos:start="285:9" pos:end="301:66"><expr pos:start="285:9" pos:end="301:65"><call pos:start="285:9" pos:end="301:65"><name pos:start="285:9" pos:end="285:9">D</name><argument_list pos:start="285:10" pos:end="301:65">(<argument pos:start="285:11" pos:end="301:64"><expr pos:start="285:11" pos:end="301:64"><call pos:start="285:11" pos:end="301:64"><name pos:start="285:11" pos:end="285:16">printf</name> <argument_list pos:start="285:18" pos:end="301:64">(<argument pos:start="285:19" pos:end="287:53"><expr pos:start="285:19" pos:end="287:53"><literal type="string" pos:start="285:19" pos:end="285:79">"%s rw=%d mtch=%d pc=%x va=%x vpn=%x tlbvpn=%x pfn=%x pid=%x"</literal>

		  <literal type="string" pos:start="287:19" pos:end="287:53">" %x cause=%x sel=%x sp=%x %x %x\n"</literal></expr></argument>,

		  <argument pos:start="289:19" pos:end="289:26"><expr pos:start="289:19" pos:end="289:26"><name pos:start="289:19" pos:end="289:26">__func__</name></expr></argument>, <argument pos:start="289:29" pos:end="289:30"><expr pos:start="289:29" pos:end="289:30"><name pos:start="289:29" pos:end="289:30">rw</name></expr></argument>, <argument pos:start="289:33" pos:end="289:37"><expr pos:start="289:33" pos:end="289:37"><name pos:start="289:33" pos:end="289:37">match</name></expr></argument>, <argument pos:start="289:40" pos:end="289:46"><expr pos:start="289:40" pos:end="289:46"><name pos:start="289:40" pos:end="289:46"><name pos:start="289:40" pos:end="289:42">env</name><operator pos:start="289:43" pos:end="289:44">-&gt;</operator><name pos:start="289:45" pos:end="289:46">pc</name></name></expr></argument>,

		  <argument pos:start="291:19" pos:end="291:23"><expr pos:start="291:19" pos:end="291:23"><name pos:start="291:19" pos:end="291:23">vaddr</name></expr></argument>, <argument pos:start="291:26" pos:end="291:30"><expr pos:start="291:26" pos:end="291:30"><name pos:start="291:26" pos:end="291:30">vpage</name></expr></argument>,

		  <argument pos:start="293:19" pos:end="293:25"><expr pos:start="293:19" pos:end="293:25"><name pos:start="293:19" pos:end="293:25">tlb_vpn</name></expr></argument>, <argument pos:start="293:28" pos:end="293:34"><expr pos:start="293:28" pos:end="293:34"><name pos:start="293:28" pos:end="293:34">tlb_pfn</name></expr></argument>, <argument pos:start="293:37" pos:end="293:43"><expr pos:start="293:37" pos:end="293:43"><name pos:start="293:37" pos:end="293:43">tlb_pid</name></expr></argument>, 

		  <argument pos:start="295:19" pos:end="295:36"><expr pos:start="295:19" pos:end="295:36"><name pos:start="295:19" pos:end="295:36"><name pos:start="295:19" pos:end="295:21">env</name><operator pos:start="295:22" pos:end="295:23">-&gt;</operator><name pos:start="295:24" pos:end="295:28">pregs</name><index pos:start="295:29" pos:end="295:36">[<expr pos:start="295:30" pos:end="295:35"><name pos:start="295:30" pos:end="295:35">PR_PID</name></expr>]</index></name></expr></argument>,

		  <argument pos:start="297:19" pos:end="297:25"><expr pos:start="297:19" pos:end="297:25"><name pos:start="297:19" pos:end="297:25">r_cause</name></expr></argument>,

		  <argument pos:start="299:19" pos:end="299:47"><expr pos:start="299:19" pos:end="299:47"><name pos:start="299:19" pos:end="299:47"><name pos:start="299:19" pos:end="299:21">env</name><operator pos:start="299:22" pos:end="299:23">-&gt;</operator><name pos:start="299:24" pos:end="299:28">sregs</name><index pos:start="299:29" pos:end="299:47">[<expr pos:start="299:30" pos:end="299:46"><name pos:start="299:30" pos:end="299:46">SFR_RW_MM_TLB_SEL</name></expr>]</index></name></expr></argument>,

		  <argument pos:start="301:19" pos:end="301:33"><expr pos:start="301:19" pos:end="301:33"><name pos:start="301:19" pos:end="301:33"><name pos:start="301:19" pos:end="301:21">env</name><operator pos:start="301:22" pos:end="301:23">-&gt;</operator><name pos:start="301:24" pos:end="301:27">regs</name><index pos:start="301:28" pos:end="301:33">[<expr pos:start="301:29" pos:end="301:32"><name pos:start="301:29" pos:end="301:32">R_SP</name></expr>]</index></name></expr></argument>, <argument pos:start="301:36" pos:end="301:53"><expr pos:start="301:36" pos:end="301:53"><name pos:start="301:36" pos:end="301:53"><name pos:start="301:36" pos:end="301:38">env</name><operator pos:start="301:39" pos:end="301:40">-&gt;</operator><name pos:start="301:41" pos:end="301:45">pregs</name><index pos:start="301:46" pos:end="301:53">[<expr pos:start="301:47" pos:end="301:52"><name pos:start="301:47" pos:end="301:52">PR_USP</name></expr>]</index></name></expr></argument>, <argument pos:start="301:56" pos:end="301:63"><expr pos:start="301:56" pos:end="301:63"><name pos:start="301:56" pos:end="301:63"><name pos:start="301:56" pos:end="301:58">env</name><operator pos:start="301:59" pos:end="301:60">-&gt;</operator><name pos:start="301:61" pos:end="301:63">ksp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<expr_stmt pos:start="305:9" pos:end="305:27"><expr pos:start="305:9" pos:end="305:26"><name pos:start="305:9" pos:end="305:16"><name pos:start="305:9" pos:end="305:11">res</name><operator pos:start="305:12" pos:end="305:13">-&gt;</operator><name pos:start="305:14" pos:end="305:16">pfn</name></name> <operator pos:start="305:18" pos:end="305:18">=</operator> <name pos:start="305:20" pos:end="305:26">tlb_pfn</name></expr>;</expr_stmt>

	<return pos:start="307:9" pos:end="307:22">return <expr pos:start="307:16" pos:end="307:21"><operator pos:start="307:16" pos:end="307:16">!</operator><name pos:start="307:17" pos:end="307:21">match</name></expr>;</return>

</block_content>}</block></function>
</unit>
