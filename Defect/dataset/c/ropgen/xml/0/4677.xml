<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4677.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">avpicture_layout</name><parameter_list pos:start="1:21" pos:end="5:56">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:36">AVPicture</name><modifier pos:start="1:37" pos:end="1:37">*</modifier></type> <name pos:start="1:39" pos:end="1:41">src</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:69"><decl pos:start="1:44" pos:end="1:69"><type pos:start="1:44" pos:end="1:69"><name pos:start="1:44" pos:end="1:61"><name pos:start="1:44" pos:end="1:47">enum</name> <name pos:start="1:49" pos:end="1:61">AVPixelFormat</name></name></type> <name pos:start="1:63" pos:end="1:69">pix_fmt</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:30"><decl pos:start="3:22" pos:end="3:30"><type pos:start="3:22" pos:end="3:30"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:30">width</name></decl></parameter>, <parameter pos:start="3:33" pos:end="3:42"><decl pos:start="3:33" pos:end="3:42"><type pos:start="3:33" pos:end="3:42"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:42">height</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:40"><decl pos:start="5:22" pos:end="5:40"><type pos:start="5:22" pos:end="5:40"><name pos:start="5:22" pos:end="5:29">unsigned</name> <name pos:start="5:31" pos:end="5:34">char</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:40">dest</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:55"><decl pos:start="5:43" pos:end="5:55"><type pos:start="5:43" pos:end="5:55"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:55">dest_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="69:1">{<block_content pos:start="9:5" pos:end="67:16">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:23">nb_planes</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>, <decl pos:start="9:30" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:41"><name pos:start="9:30" pos:end="9:38">linesizes</name><index pos:start="9:39" pos:end="9:41">[<expr pos:start="9:40" pos:end="9:40"><literal type="number" pos:start="9:40" pos:end="9:40">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:65"><type pos:start="11:5" pos:end="11:30"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:28">AVPixFmtDescriptor</name> <modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:34">desc</name> <init pos:start="11:36" pos:end="11:65">= <expr pos:start="11:38" pos:end="11:65"><call pos:start="11:38" pos:end="11:65"><name pos:start="11:38" pos:end="11:56">av_pix_fmt_desc_get</name><argument_list pos:start="11:57" pos:end="11:65">(<argument pos:start="11:58" pos:end="11:64"><expr pos:start="11:58" pos:end="11:64"><name pos:start="11:58" pos:end="11:64">pix_fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:58"><decl pos:start="13:5" pos:end="13:57"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">size</name> <init pos:start="13:14" pos:end="13:57">= <expr pos:start="13:16" pos:end="13:57"><call pos:start="13:16" pos:end="13:57"><name pos:start="13:16" pos:end="13:33">avpicture_get_size</name><argument_list pos:start="13:34" pos:end="13:57">(<argument pos:start="13:35" pos:end="13:41"><expr pos:start="13:35" pos:end="13:41"><name pos:start="13:35" pos:end="13:41">pix_fmt</name></expr></argument>, <argument pos:start="13:44" pos:end="13:48"><expr pos:start="13:44" pos:end="13:48"><name pos:start="13:44" pos:end="13:48">width</name></expr></argument>, <argument pos:start="13:51" pos:end="13:56"><expr pos:start="13:51" pos:end="13:56"><name pos:start="13:51" pos:end="13:56">height</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:37">(<expr pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:12">size</name> <operator pos:start="17:14" pos:end="17:14">&gt;</operator> <name pos:start="17:16" pos:end="17:24">dest_size</name> <operator pos:start="17:26" pos:end="17:27">||</operator> <name pos:start="17:29" pos:end="17:32">size</name> <operator pos:start="17:34" pos:end="17:34">&lt;</operator> <literal type="number" pos:start="17:36" pos:end="17:36">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="23:5" pos:end="25:58">for <control pos:start="23:9" pos:end="23:45">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:40"><expr pos:start="23:17" pos:end="23:39"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:39"><name pos:start="23:21" pos:end="23:24">desc</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:39">nb_components</name></name></expr>;</condition> <incr pos:start="23:42" pos:end="23:44"><expr pos:start="23:42" pos:end="23:44"><name pos:start="23:42" pos:end="23:42">i</name><operator pos:start="23:43" pos:end="23:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:9" pos:end="25:58"><block_content pos:start="25:9" pos:end="25:58">

        <expr_stmt pos:start="25:9" pos:end="25:58"><expr pos:start="25:9" pos:end="25:57"><name pos:start="25:9" pos:end="25:17">nb_planes</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <call pos:start="25:21" pos:end="25:57"><name pos:start="25:21" pos:end="25:25">FFMAX</name><argument_list pos:start="25:26" pos:end="25:57">(<argument pos:start="25:27" pos:end="25:45"><expr pos:start="25:27" pos:end="25:45"><name pos:start="25:27" pos:end="25:39"><name pos:start="25:27" pos:end="25:30">desc</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:36">comp</name><index pos:start="25:37" pos:end="25:39">[<expr pos:start="25:38" pos:end="25:38"><name pos:start="25:38" pos:end="25:38">i</name></expr>]</index></name><operator pos:start="25:40" pos:end="25:40">.</operator><name pos:start="25:41" pos:end="25:45">plane</name></expr></argument>, <argument pos:start="25:48" pos:end="25:56"><expr pos:start="25:48" pos:end="25:56"><name pos:start="25:48" pos:end="25:56">nb_planes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="29:5" pos:end="29:16"><expr pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:13">nb_planes</name><operator pos:start="29:14" pos:end="29:15">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:55"><expr pos:start="33:5" pos:end="33:54"><call pos:start="33:5" pos:end="33:54"><name pos:start="33:5" pos:end="33:27">av_image_fill_linesizes</name><argument_list pos:start="33:28" pos:end="33:54">(<argument pos:start="33:29" pos:end="33:37"><expr pos:start="33:29" pos:end="33:37"><name pos:start="33:29" pos:end="33:37">linesizes</name></expr></argument>, <argument pos:start="33:40" pos:end="33:46"><expr pos:start="33:40" pos:end="33:46"><name pos:start="33:40" pos:end="33:46">pix_fmt</name></expr></argument>, <argument pos:start="33:49" pos:end="33:53"><expr pos:start="33:49" pos:end="33:53"><name pos:start="33:49" pos:end="33:53">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="55:5">for <control pos:start="35:9" pos:end="35:35">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:30"><expr pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:29">nb_planes</name></expr>;</condition> <incr pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><name pos:start="35:32" pos:end="35:32">i</name><operator pos:start="35:33" pos:end="35:34">++</operator></expr></incr>)</control> <block pos:start="35:37" pos:end="55:5">{<block_content pos:start="37:9" pos:end="53:9">

        <decl_stmt pos:start="37:9" pos:end="37:68"><decl pos:start="37:9" pos:end="37:13"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:13">h</name></decl>, <decl pos:start="37:16" pos:end="37:67"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:16" pos:end="37:20">shift</name> <init pos:start="37:22" pos:end="37:67">= <expr pos:start="37:24" pos:end="37:67"><ternary pos:start="37:24" pos:end="37:67"><condition pos:start="37:24" pos:end="37:43"><expr pos:start="37:24" pos:end="37:41"><operator pos:start="37:24" pos:end="37:24">(</operator><name pos:start="37:25" pos:end="37:25">i</name> <operator pos:start="37:27" pos:end="37:28">==</operator> <literal type="number" pos:start="37:30" pos:end="37:30">1</literal> <operator pos:start="37:32" pos:end="37:33">||</operator> <name pos:start="37:35" pos:end="37:35">i</name> <operator pos:start="37:37" pos:end="37:38">==</operator> <literal type="number" pos:start="37:40" pos:end="37:40">2</literal><operator pos:start="37:41" pos:end="37:41">)</operator></expr> ?</condition><then pos:start="37:45" pos:end="37:63"> <expr pos:start="37:45" pos:end="37:63"><name pos:start="37:45" pos:end="37:63"><name pos:start="37:45" pos:end="37:48">desc</name><operator pos:start="37:49" pos:end="37:50">-&gt;</operator><name pos:start="37:51" pos:end="37:63">log2_chroma_h</name></name></expr> </then><else pos:start="37:65" pos:end="37:67">: <expr pos:start="37:67" pos:end="37:67"><literal type="number" pos:start="37:67" pos:end="37:67">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:46"><decl pos:start="39:9" pos:end="39:45"><type pos:start="39:9" pos:end="39:29"><specifier pos:start="39:9" pos:end="39:13">const</specifier> <name pos:start="39:15" pos:end="39:22">unsigned</name> <name pos:start="39:24" pos:end="39:27">char</name> <modifier pos:start="39:29" pos:end="39:29">*</modifier></type><name pos:start="39:30" pos:end="39:30">s</name> <init pos:start="39:32" pos:end="39:45">= <expr pos:start="39:34" pos:end="39:45"><name pos:start="39:34" pos:end="39:45"><name pos:start="39:34" pos:end="39:36">src</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:42">data</name><index pos:start="39:43" pos:end="39:45">[<expr pos:start="39:44" pos:end="39:44"><name pos:start="39:44" pos:end="39:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:9">h</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:19">height</name> <operator pos:start="41:21" pos:end="41:21">+</operator> <operator pos:start="41:23" pos:end="41:23">(</operator><literal type="number" pos:start="41:24" pos:end="41:24">1</literal> <operator pos:start="41:26" pos:end="41:27">&lt;&lt;</operator> <name pos:start="41:29" pos:end="41:33">shift</name><operator pos:start="41:34" pos:end="41:34">)</operator> <operator pos:start="41:36" pos:end="41:36">-</operator> <literal type="number" pos:start="41:38" pos:end="41:38">1</literal><operator pos:start="41:39" pos:end="41:39">)</operator> <operator pos:start="41:41" pos:end="41:42">&gt;&gt;</operator> <name pos:start="41:44" pos:end="41:48">shift</name></expr>;</expr_stmt>



        <for pos:start="45:9" pos:end="53:9">for <control pos:start="45:13" pos:end="45:31">(<init pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:14">j</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:26"><expr pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:21">j</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <name pos:start="45:25" pos:end="45:25">h</name></expr>;</condition> <incr pos:start="45:28" pos:end="45:30"><expr pos:start="45:28" pos:end="45:30"><name pos:start="45:28" pos:end="45:28">j</name><operator pos:start="45:29" pos:end="45:30">++</operator></expr></incr>)</control> <block pos:start="45:33" pos:end="53:9">{<block_content pos:start="47:13" pos:end="51:34">

            <expr_stmt pos:start="47:13" pos:end="47:42"><expr pos:start="47:13" pos:end="47:41"><call pos:start="47:13" pos:end="47:41"><name pos:start="47:13" pos:end="47:18">memcpy</name><argument_list pos:start="47:19" pos:end="47:41">(<argument pos:start="47:20" pos:end="47:23"><expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">dest</name></expr></argument>, <argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><name pos:start="47:26" pos:end="47:26">s</name></expr></argument>, <argument pos:start="47:29" pos:end="47:40"><expr pos:start="47:29" pos:end="47:40"><name pos:start="47:29" pos:end="47:40"><name pos:start="47:29" pos:end="47:37">linesizes</name><index pos:start="47:38" pos:end="47:40">[<expr pos:start="47:39" pos:end="47:39"><name pos:start="47:39" pos:end="47:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:33"><expr pos:start="49:13" pos:end="49:32"><name pos:start="49:13" pos:end="49:16">dest</name> <operator pos:start="49:18" pos:end="49:19">+=</operator> <name pos:start="49:21" pos:end="49:32"><name pos:start="49:21" pos:end="49:29">linesizes</name><index pos:start="49:30" pos:end="49:32">[<expr pos:start="49:31" pos:end="49:31"><name pos:start="49:31" pos:end="49:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:34"><expr pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:13">s</name> <operator pos:start="51:15" pos:end="51:16">+=</operator> <name pos:start="51:18" pos:end="51:33"><name pos:start="51:18" pos:end="51:20">src</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:30">linesize</name><index pos:start="51:31" pos:end="51:33">[<expr pos:start="51:32" pos:end="51:32"><name pos:start="51:32" pos:end="51:32">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="59:5" pos:end="63:38"><if pos:start="59:5" pos:end="63:38">if <condition pos:start="59:8" pos:end="59:42">(<expr pos:start="59:9" pos:end="59:41"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:12">desc</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:19">flags</name></name> <operator pos:start="59:21" pos:end="59:21">&amp;</operator> <name pos:start="59:23" pos:end="59:41">AV_PIX_FMT_FLAG_PAL</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="63:38"><block_content pos:start="61:9" pos:end="63:38">

        <expr_stmt pos:start="61:9" pos:end="63:38"><expr pos:start="61:9" pos:end="63:37"><call pos:start="61:9" pos:end="63:37"><name pos:start="61:9" pos:end="61:14">memcpy</name><argument_list pos:start="61:15" pos:end="63:37">(<argument pos:start="61:16" pos:end="61:57"><expr pos:start="61:16" pos:end="61:57"><operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:24">unsigned</name> <name pos:start="61:26" pos:end="61:29">char</name> <operator pos:start="61:31" pos:end="61:31">*</operator><operator pos:start="61:32" pos:end="61:32">)</operator><operator pos:start="61:33" pos:end="61:33">(</operator><operator pos:start="61:34" pos:end="61:34">(</operator><operator pos:start="61:35" pos:end="61:35">(</operator><name pos:start="61:36" pos:end="61:41">size_t</name><operator pos:start="61:42" pos:end="61:42">)</operator><name pos:start="61:43" pos:end="61:46">dest</name> <operator pos:start="61:48" pos:end="61:48">+</operator> <literal type="number" pos:start="61:50" pos:end="61:50">3</literal><operator pos:start="61:51" pos:end="61:51">)</operator> <operator pos:start="61:53" pos:end="61:53">&amp;</operator> <operator pos:start="61:55" pos:end="61:55">~</operator><literal type="number" pos:start="61:56" pos:end="61:56">3</literal><operator pos:start="61:57" pos:end="61:57">)</operator></expr></argument>,

               <argument pos:start="63:16" pos:end="63:27"><expr pos:start="63:16" pos:end="63:27"><name pos:start="63:16" pos:end="63:27"><name pos:start="63:16" pos:end="63:18">src</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:24">data</name><index pos:start="63:25" pos:end="63:27">[<expr pos:start="63:26" pos:end="63:26"><literal type="number" pos:start="63:26" pos:end="63:26">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:30" pos:end="63:36"><expr pos:start="63:30" pos:end="63:36"><literal type="number" pos:start="63:30" pos:end="63:32">256</literal> <operator pos:start="63:34" pos:end="63:34">*</operator> <literal type="number" pos:start="63:36" pos:end="63:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:16">return <expr pos:start="67:12" pos:end="67:15"><name pos:start="67:12" pos:end="67:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
