<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6011.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:49"><name pos:start="1:1" pos:end="1:18">blkdebug_co_preadv</name><argument_list pos:start="1:19" pos:end="3:49">(<argument pos:start="1:20" pos:end="1:39">BlockDriverState *bs</argument>, <argument pos:start="1:42" pos:end="1:56">uint64_t offset</argument>, <argument pos:start="1:59" pos:end="1:72">uint64_t bytes</argument>,

                   <argument pos:start="3:20" pos:end="3:37">QEMUIOVector *qiov</argument>, <argument pos:start="3:40" pos:end="3:48">int flags</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:64">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">BDRVBlkdebugState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:37">= <expr pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:29">bs</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:37">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">BlkdebugRule</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">rule</name> <init pos:start="9:24" pos:end="9:29">= <expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:45">/* Sanity check block layer guarantees */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:62"><expr pos:start="15:5" pos:end="15:61"><call pos:start="15:5" pos:end="15:61"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:61">(<argument pos:start="15:12" pos:end="15:60"><expr pos:start="15:12" pos:end="15:60"><call pos:start="15:12" pos:end="15:60"><name pos:start="15:12" pos:end="15:26">QEMU_IS_ALIGNED</name><argument_list pos:start="15:27" pos:end="15:60">(<argument pos:start="15:28" pos:end="15:33"><expr pos:start="15:28" pos:end="15:33"><name pos:start="15:28" pos:end="15:33">offset</name></expr></argument>, <argument pos:start="15:36" pos:end="15:59"><expr pos:start="15:36" pos:end="15:59"><name pos:start="15:36" pos:end="15:59"><name pos:start="15:36" pos:end="15:37">bs</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:41">bl</name><operator pos:start="15:42" pos:end="15:42">.</operator><name pos:start="15:43" pos:end="15:59">request_alignment</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:61"><expr pos:start="17:5" pos:end="17:60"><call pos:start="17:5" pos:end="17:60"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:60">(<argument pos:start="17:12" pos:end="17:59"><expr pos:start="17:12" pos:end="17:59"><call pos:start="17:12" pos:end="17:59"><name pos:start="17:12" pos:end="17:26">QEMU_IS_ALIGNED</name><argument_list pos:start="17:27" pos:end="17:59">(<argument pos:start="17:28" pos:end="17:32"><expr pos:start="17:28" pos:end="17:32"><name pos:start="17:28" pos:end="17:32">bytes</name></expr></argument>, <argument pos:start="17:35" pos:end="17:58"><expr pos:start="17:35" pos:end="17:58"><name pos:start="17:35" pos:end="17:58"><name pos:start="17:35" pos:end="17:36">bs</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:40">bl</name><operator pos:start="17:41" pos:end="17:41">.</operator><name pos:start="17:42" pos:end="17:58">request_alignment</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:28">(<expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:10">bs</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:14">bl</name><operator pos:start="19:15" pos:end="19:15">.</operator><name pos:start="19:16" pos:end="19:27">max_transfer</name></name></expr>)</condition> <block pos:start="19:30" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:45">

        <expr_stmt pos:start="21:9" pos:end="21:45"><expr pos:start="21:9" pos:end="21:44"><call pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:14">assert</name><argument_list pos:start="21:15" pos:end="21:44">(<argument pos:start="21:16" pos:end="21:43"><expr pos:start="21:16" pos:end="21:43"><name pos:start="21:16" pos:end="21:20">bytes</name> <operator pos:start="21:22" pos:end="21:23">&lt;=</operator> <name pos:start="21:25" pos:end="21:43"><name pos:start="21:25" pos:end="21:26">bs</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:30">bl</name><operator pos:start="21:31" pos:end="21:31">.</operator><name pos:start="21:32" pos:end="21:43">max_transfer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="27:5" pos:end="27:57"><name pos:start="27:5" pos:end="27:20">QSIMPLEQ_FOREACH</name><argument_list pos:start="27:21" pos:end="27:57">(<argument pos:start="27:22" pos:end="27:25">rule</argument>, <argument pos:start="27:28" pos:end="27:43">&amp;s-&gt;active_rules</argument>, <argument pos:start="27:46" pos:end="27:56">active_next</argument>)</argument_list></macro> <block pos:start="27:59" pos:end="43:5">{<block_content pos:start="29:9" pos:end="41:9">

        <decl_stmt pos:start="29:9" pos:end="29:61"><decl pos:start="29:9" pos:end="29:60"><type pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:16">uint64_t</name></type> <name pos:start="29:18" pos:end="29:30">inject_offset</name> <init pos:start="29:32" pos:end="29:60">= <expr pos:start="29:34" pos:end="29:60"><name pos:start="29:34" pos:end="29:60"><name pos:start="29:34" pos:end="29:37">rule</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:46">options</name><operator pos:start="29:47" pos:end="29:47">.</operator><name pos:start="29:48" pos:end="29:53">inject</name><operator pos:start="29:54" pos:end="29:54">.</operator><name pos:start="29:55" pos:end="29:60">offset</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="35:72">(<expr pos:start="33:13" pos:end="35:71"><name pos:start="33:13" pos:end="33:25">inject_offset</name> <operator pos:start="33:27" pos:end="33:28">==</operator> <operator pos:start="33:30" pos:end="33:30">-</operator><literal type="number" pos:start="33:31" pos:end="33:31">1</literal> <operator pos:start="33:33" pos:end="33:34">||</operator>

            <operator pos:start="35:13" pos:end="35:13">(</operator><name pos:start="35:14" pos:end="35:26">inject_offset</name> <operator pos:start="35:28" pos:end="35:29">&gt;=</operator> <name pos:start="35:31" pos:end="35:36">offset</name> <operator pos:start="35:38" pos:end="35:39">&amp;&amp;</operator> <name pos:start="35:41" pos:end="35:53">inject_offset</name> <operator pos:start="35:55" pos:end="35:55">&lt;</operator> <name pos:start="35:57" pos:end="35:62">offset</name> <operator pos:start="35:64" pos:end="35:64">+</operator> <name pos:start="35:66" pos:end="35:70">bytes</name><operator pos:start="35:71" pos:end="35:71">)</operator></expr>)</condition>

        <block pos:start="37:9" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:18">

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:43">(<expr pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:12">rule</name> <operator pos:start="47:14" pos:end="47:15">&amp;&amp;</operator> <name pos:start="47:17" pos:end="47:42"><name pos:start="47:17" pos:end="47:20">rule</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:29">options</name><operator pos:start="47:30" pos:end="47:30">.</operator><name pos:start="47:31" pos:end="47:36">inject</name><operator pos:start="47:37" pos:end="47:37">.</operator><name pos:start="47:38" pos:end="47:42">error</name></name></expr>)</condition> <block pos:start="47:45" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:38">

        <return pos:start="49:9" pos:end="49:38">return <expr pos:start="49:16" pos:end="49:37"><call pos:start="49:16" pos:end="49:37"><name pos:start="49:16" pos:end="49:27">inject_error</name><argument_list pos:start="49:28" pos:end="49:37">(<argument pos:start="49:29" pos:end="49:30"><expr pos:start="49:29" pos:end="49:30"><name pos:start="49:29" pos:end="49:30">bs</name></expr></argument>, <argument pos:start="49:33" pos:end="49:36"><expr pos:start="49:33" pos:end="49:36"><name pos:start="49:33" pos:end="49:36">rule</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="55:5" pos:end="55:64">return <expr pos:start="55:12" pos:end="55:63"><call pos:start="55:12" pos:end="55:63"><name pos:start="55:12" pos:end="55:25">bdrv_co_preadv</name><argument_list pos:start="55:26" pos:end="55:63">(<argument pos:start="55:27" pos:end="55:34"><expr pos:start="55:27" pos:end="55:34"><name pos:start="55:27" pos:end="55:34"><name pos:start="55:27" pos:end="55:28">bs</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:34">file</name></name></expr></argument>, <argument pos:start="55:37" pos:end="55:42"><expr pos:start="55:37" pos:end="55:42"><name pos:start="55:37" pos:end="55:42">offset</name></expr></argument>, <argument pos:start="55:45" pos:end="55:49"><expr pos:start="55:45" pos:end="55:49"><name pos:start="55:45" pos:end="55:49">bytes</name></expr></argument>, <argument pos:start="55:52" pos:end="55:55"><expr pos:start="55:52" pos:end="55:55"><name pos:start="55:52" pos:end="55:55">qiov</name></expr></argument>, <argument pos:start="55:58" pos:end="55:62"><expr pos:start="55:58" pos:end="55:62"><name pos:start="55:58" pos:end="55:62">flags</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block>
</unit>
