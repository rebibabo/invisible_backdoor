<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22404.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">scsi_write_same_complete</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:49">opaque</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:17">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">WriteSameCBData</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:25">data</name> <init pos:start="5:27" pos:end="5:34">= <expr pos:start="5:29" pos:end="5:34"><name pos:start="5:29" pos:end="5:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">SCSIDiskReq</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">r</name> <init pos:start="7:20" pos:end="7:28">= <expr pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:28"><name pos:start="7:22" pos:end="7:25">data</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:28">r</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:65"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">SCSIDiskState</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name> <init pos:start="9:22" pos:end="9:65">= <expr pos:start="9:24" pos:end="9:65"><call pos:start="9:24" pos:end="9:65"><name pos:start="9:24" pos:end="9:32">DO_UPCAST</name><argument_list pos:start="9:33" pos:end="9:65">(<argument pos:start="9:34" pos:end="9:46"><expr pos:start="9:34" pos:end="9:46"><name pos:start="9:34" pos:end="9:46">SCSIDiskState</name></expr></argument>, <argument pos:start="9:49" pos:end="9:52"><expr pos:start="9:49" pos:end="9:52"><name pos:start="9:49" pos:end="9:52">qdev</name></expr></argument>, <argument pos:start="9:55" pos:end="9:64"><expr pos:start="9:55" pos:end="9:64"><name pos:start="9:55" pos:end="9:64"><name pos:start="9:55" pos:end="9:55">r</name><operator pos:start="9:56" pos:end="9:57">-&gt;</operator><name pos:start="9:58" pos:end="9:60">req</name><operator pos:start="9:61" pos:end="9:61">.</operator><name pos:start="9:62" pos:end="9:64">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><call pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:32">(<argument pos:start="13:12" pos:end="13:31"><expr pos:start="13:12" pos:end="13:31"><name pos:start="13:12" pos:end="13:23"><name pos:start="13:12" pos:end="13:12">r</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:17">req</name><operator pos:start="13:18" pos:end="13:18">.</operator><name pos:start="13:19" pos:end="13:23">aiocb</name></name> <operator pos:start="13:25" pos:end="13:26">!=</operator> <name pos:start="13:28" pos:end="13:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:5">r</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:10">req</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:16">aiocb</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <name pos:start="15:20" pos:end="15:23">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:9">r</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:14">req</name><operator pos:start="17:15" pos:end="17:15">.</operator><name pos:start="17:16" pos:end="17:26">io_canceled</name></name></expr>)</condition> <block pos:start="17:29" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:18">

        <expr_stmt pos:start="19:9" pos:end="19:42"><expr pos:start="19:9" pos:end="19:41"><call pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:32">scsi_req_cancel_complete</name><argument_list pos:start="19:33" pos:end="19:41">(<argument pos:start="19:34" pos:end="19:40"><expr pos:start="19:34" pos:end="19:40"><operator pos:start="19:34" pos:end="19:34">&amp;</operator><name pos:start="19:35" pos:end="19:40"><name pos:start="19:35" pos:end="19:35">r</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:40">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="21:9" pos:end="21:18">goto <name pos:start="21:14" pos:end="21:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:9">

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:48">(<expr pos:start="29:13" pos:end="29:47"><call pos:start="29:13" pos:end="29:47"><name pos:start="29:13" pos:end="29:32">scsi_handle_rw_error</name><argument_list pos:start="29:33" pos:end="29:47">(<argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">r</name></expr></argument>, <argument pos:start="29:37" pos:end="29:40"><expr pos:start="29:37" pos:end="29:40"><operator pos:start="29:37" pos:end="29:37">-</operator><name pos:start="29:38" pos:end="29:40">ret</name></expr></argument>, <argument pos:start="29:43" pos:end="29:46"><expr pos:start="29:43" pos:end="29:46"><name pos:start="29:43" pos:end="29:46">true</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:50" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:22">

            <goto pos:start="31:13" pos:end="31:22">goto <name pos:start="31:18" pos:end="31:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:63"><expr pos:start="39:5" pos:end="39:62"><call pos:start="39:5" pos:end="39:62"><name pos:start="39:5" pos:end="39:19">block_acct_done</name><argument_list pos:start="39:20" pos:end="39:62">(<argument pos:start="39:21" pos:end="39:51"><expr pos:start="39:21" pos:end="39:51"><call pos:start="39:21" pos:end="39:51"><name pos:start="39:21" pos:end="39:33">blk_get_stats</name><argument_list pos:start="39:34" pos:end="39:51">(<argument pos:start="39:35" pos:end="39:50"><expr pos:start="39:35" pos:end="39:50"><name pos:start="39:35" pos:end="39:50"><name pos:start="39:35" pos:end="39:35">s</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:41">qdev</name><operator pos:start="39:42" pos:end="39:42">.</operator><name pos:start="39:43" pos:end="39:46">conf</name><operator pos:start="39:47" pos:end="39:47">.</operator><name pos:start="39:48" pos:end="39:50">blk</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:54" pos:end="39:61"><expr pos:start="39:54" pos:end="39:61"><operator pos:start="39:54" pos:end="39:54">&amp;</operator><name pos:start="39:55" pos:end="39:61"><name pos:start="39:55" pos:end="39:55">r</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:61">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:48"><expr pos:start="43:5" pos:end="43:47"><name pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:8">data</name><operator pos:start="43:9" pos:end="43:10">-&gt;</operator><name pos:start="43:11" pos:end="43:20">nb_sectors</name></name> <operator pos:start="43:22" pos:end="43:23">-=</operator> <name pos:start="43:25" pos:end="43:41"><name pos:start="43:25" pos:end="43:28">data</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:33">iov</name><operator pos:start="43:34" pos:end="43:34">.</operator><name pos:start="43:35" pos:end="43:41">iov_len</name></name> <operator pos:start="43:43" pos:end="43:43">/</operator> <literal type="number" pos:start="43:45" pos:end="43:47">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:44"><expr pos:start="45:5" pos:end="45:43"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:8">data</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:16">sector</name></name> <operator pos:start="45:18" pos:end="45:19">+=</operator> <name pos:start="45:21" pos:end="45:37"><name pos:start="45:21" pos:end="45:24">data</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:29">iov</name><operator pos:start="45:30" pos:end="45:30">.</operator><name pos:start="45:31" pos:end="45:37">iov_len</name></name> <operator pos:start="45:39" pos:end="45:39">/</operator> <literal type="number" pos:start="45:41" pos:end="45:43">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:71"><expr pos:start="47:5" pos:end="47:70"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:8">data</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:13">iov</name><operator pos:start="47:14" pos:end="47:14">.</operator><name pos:start="47:15" pos:end="47:21">iov_len</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:70"><name pos:start="47:25" pos:end="47:27">MIN</name><argument_list pos:start="47:28" pos:end="47:70">(<argument pos:start="47:29" pos:end="47:50"><expr pos:start="47:29" pos:end="47:50"><name pos:start="47:29" pos:end="47:44"><name pos:start="47:29" pos:end="47:32">data</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:44">nb_sectors</name></name> <operator pos:start="47:46" pos:end="47:46">*</operator> <literal type="number" pos:start="47:48" pos:end="47:50">512</literal></expr></argument>, <argument pos:start="47:53" pos:end="47:69"><expr pos:start="47:53" pos:end="47:69"><name pos:start="47:53" pos:end="47:69"><name pos:start="47:53" pos:end="47:56">data</name><operator pos:start="47:57" pos:end="47:58">-&gt;</operator><name pos:start="47:59" pos:end="47:61">iov</name><operator pos:start="47:62" pos:end="47:62">.</operator><name pos:start="47:63" pos:end="47:69">iov_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="71:5"><if pos:start="49:5" pos:end="71:5">if <condition pos:start="49:8" pos:end="49:26">(<expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:12">data</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:17">iov</name><operator pos:start="49:18" pos:end="49:18">.</operator><name pos:start="49:19" pos:end="49:25">iov_len</name></name></expr>)</condition> <block pos:start="49:28" pos:end="71:5">{<block_content pos:start="51:9" pos:end="69:15">

        <expr_stmt pos:start="51:9" pos:end="53:62"><expr pos:start="51:9" pos:end="53:61"><call pos:start="51:9" pos:end="53:61"><name pos:start="51:9" pos:end="51:24">block_acct_start</name><argument_list pos:start="51:25" pos:end="53:61">(<argument pos:start="51:26" pos:end="51:56"><expr pos:start="51:26" pos:end="51:56"><call pos:start="51:26" pos:end="51:56"><name pos:start="51:26" pos:end="51:38">blk_get_stats</name><argument_list pos:start="51:39" pos:end="51:56">(<argument pos:start="51:40" pos:end="51:55"><expr pos:start="51:40" pos:end="51:55"><name pos:start="51:40" pos:end="51:55"><name pos:start="51:40" pos:end="51:40">s</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:46">qdev</name><operator pos:start="51:47" pos:end="51:47">.</operator><name pos:start="51:48" pos:end="51:51">conf</name><operator pos:start="51:52" pos:end="51:52">.</operator><name pos:start="51:53" pos:end="51:55">blk</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:59" pos:end="51:66"><expr pos:start="51:59" pos:end="51:66"><operator pos:start="51:59" pos:end="51:59">&amp;</operator><name pos:start="51:60" pos:end="51:66"><name pos:start="51:60" pos:end="51:60">r</name><operator pos:start="51:61" pos:end="51:62">-&gt;</operator><name pos:start="51:63" pos:end="51:66">acct</name></name></expr></argument>,

                         <argument pos:start="53:26" pos:end="53:42"><expr pos:start="53:26" pos:end="53:42"><name pos:start="53:26" pos:end="53:42"><name pos:start="53:26" pos:end="53:29">data</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:34">iov</name><operator pos:start="53:35" pos:end="53:35">.</operator><name pos:start="53:36" pos:end="53:42">iov_len</name></name></expr></argument>, <argument pos:start="53:45" pos:end="53:60"><expr pos:start="53:45" pos:end="53:60"><name pos:start="53:45" pos:end="53:60">BLOCK_ACCT_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="55:9" pos:end="57:52">/* Reinitialize qiov, to handle unaligned WRITE SAME request

         * where final qiov may need smaller size */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:61"><expr pos:start="59:9" pos:end="59:60"><call pos:start="59:9" pos:end="59:60"><name pos:start="59:9" pos:end="59:32">qemu_iovec_init_external</name><argument_list pos:start="59:33" pos:end="59:60">(<argument pos:start="59:34" pos:end="59:44"><expr pos:start="59:34" pos:end="59:44"><operator pos:start="59:34" pos:end="59:34">&amp;</operator><name pos:start="59:35" pos:end="59:44"><name pos:start="59:35" pos:end="59:38">data</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:44">qiov</name></name></expr></argument>, <argument pos:start="59:47" pos:end="59:56"><expr pos:start="59:47" pos:end="59:56"><operator pos:start="59:47" pos:end="59:47">&amp;</operator><name pos:start="59:48" pos:end="59:56"><name pos:start="59:48" pos:end="59:51">data</name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:56">iov</name></name></expr></argument>, <argument pos:start="59:59" pos:end="59:59"><expr pos:start="59:59" pos:end="59:59"><literal type="number" pos:start="59:59" pos:end="59:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="67:71"><expr pos:start="61:9" pos:end="67:70"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:9">r</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:14">req</name><operator pos:start="61:15" pos:end="61:15">.</operator><name pos:start="61:16" pos:end="61:20">aiocb</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <call pos:start="61:24" pos:end="67:70"><name pos:start="61:24" pos:end="61:38">blk_aio_pwritev</name><argument_list pos:start="61:39" pos:end="67:70">(<argument pos:start="61:40" pos:end="61:55"><expr pos:start="61:40" pos:end="61:55"><name pos:start="61:40" pos:end="61:55"><name pos:start="61:40" pos:end="61:40">s</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:46">qdev</name><operator pos:start="61:47" pos:end="61:47">.</operator><name pos:start="61:48" pos:end="61:51">conf</name><operator pos:start="61:52" pos:end="61:52">.</operator><name pos:start="61:53" pos:end="61:55">blk</name></name></expr></argument>,

                                       <argument pos:start="63:40" pos:end="63:71"><expr pos:start="63:40" pos:end="63:71"><name pos:start="63:40" pos:end="63:51"><name pos:start="63:40" pos:end="63:43">data</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:51">sector</name></name> <operator pos:start="63:53" pos:end="63:54">&lt;&lt;</operator> <name pos:start="63:56" pos:end="63:71">BDRV_SECTOR_BITS</name></expr></argument>,

                                       <argument pos:start="65:40" pos:end="65:50"><expr pos:start="65:40" pos:end="65:50"><operator pos:start="65:40" pos:end="65:40">&amp;</operator><name pos:start="65:41" pos:end="65:50"><name pos:start="65:41" pos:end="65:44">data</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:50">qiov</name></name></expr></argument>, <argument pos:start="65:53" pos:end="65:53"><expr pos:start="65:53" pos:end="65:53"><literal type="number" pos:start="65:53" pos:end="65:53">0</literal></expr></argument>,

                                       <argument pos:start="67:40" pos:end="67:63"><expr pos:start="67:40" pos:end="67:63"><name pos:start="67:40" pos:end="67:63">scsi_write_same_complete</name></expr></argument>, <argument pos:start="67:66" pos:end="67:69"><expr pos:start="67:66" pos:end="67:69"><name pos:start="67:66" pos:end="67:69">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:37"><expr pos:start="75:5" pos:end="75:36"><call pos:start="75:5" pos:end="75:36"><name pos:start="75:5" pos:end="75:21">scsi_req_complete</name><argument_list pos:start="75:22" pos:end="75:36">(<argument pos:start="75:23" pos:end="75:29"><expr pos:start="75:23" pos:end="75:29"><operator pos:start="75:23" pos:end="75:23">&amp;</operator><name pos:start="75:24" pos:end="75:29"><name pos:start="75:24" pos:end="75:24">r</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:29">req</name></name></expr></argument>, <argument pos:start="75:32" pos:end="75:35"><expr pos:start="75:32" pos:end="75:35"><name pos:start="75:32" pos:end="75:35">GOOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="79:1" pos:end="79:5"><name pos:start="79:1" pos:end="79:4">done</name>:</label>

    <expr_stmt pos:start="81:5" pos:end="81:28"><expr pos:start="81:5" pos:end="81:27"><call pos:start="81:5" pos:end="81:27"><name pos:start="81:5" pos:end="81:18">scsi_req_unref</name><argument_list pos:start="81:19" pos:end="81:27">(<argument pos:start="81:20" pos:end="81:26"><expr pos:start="81:20" pos:end="81:26"><operator pos:start="81:20" pos:end="81:20">&amp;</operator><name pos:start="81:21" pos:end="81:26"><name pos:start="81:21" pos:end="81:21">r</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:26">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:35"><expr pos:start="83:5" pos:end="83:34"><call pos:start="83:5" pos:end="83:34"><name pos:start="83:5" pos:end="83:14">qemu_vfree</name><argument_list pos:start="83:15" pos:end="83:34">(<argument pos:start="83:16" pos:end="83:33"><expr pos:start="83:16" pos:end="83:33"><name pos:start="83:16" pos:end="83:33"><name pos:start="83:16" pos:end="83:19">data</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:24">iov</name><operator pos:start="83:25" pos:end="83:25">.</operator><name pos:start="83:26" pos:end="83:33">iov_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:17"><expr pos:start="85:5" pos:end="85:16"><call pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:10">g_free</name><argument_list pos:start="85:11" pos:end="85:16">(<argument pos:start="85:12" pos:end="85:15"><expr pos:start="85:12" pos:end="85:15"><name pos:start="85:12" pos:end="85:15">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
