<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26815.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">spapr_vio_check_reg</name><parameter_list pos:start="1:31" pos:end="1:78">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:45">VIOsPAPRDevice</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">sdev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:77"><decl pos:start="1:54" pos:end="1:77"><type pos:start="1:54" pos:end="1:77"><name pos:start="1:54" pos:end="1:71">VIOsPAPRDeviceInfo</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VIOsPAPRDevice</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:30">other_sdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">qdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">VIOsPAPRBus</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">sbus</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:62"><expr pos:start="13:5" pos:end="13:61"><name pos:start="13:5" pos:end="13:8">sbus</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:61"><name pos:start="13:12" pos:end="13:20">DO_UPCAST</name><argument_list pos:start="13:21" pos:end="13:61">(<argument pos:start="13:22" pos:end="13:32"><expr pos:start="13:22" pos:end="13:32"><name pos:start="13:22" pos:end="13:32">VIOsPAPRBus</name></expr></argument>, <argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><name pos:start="13:35" pos:end="13:37">bus</name></expr></argument>, <argument pos:start="13:40" pos:end="13:60"><expr pos:start="13:40" pos:end="13:60"><name pos:start="13:40" pos:end="13:60"><name pos:start="13:40" pos:end="13:43">sdev</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:49">qdev</name><operator pos:start="13:50" pos:end="13:50">.</operator><name pos:start="13:51" pos:end="13:60">parent_bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="25:7">/*

     * Check two device aren't given clashing addresses by the user (or some

     * other mechanism). We have to open code this because we have to check

     * for matches with devices other than us.

     */</comment>

    <macro pos:start="27:5" pos:end="27:54"><name pos:start="27:5" pos:end="27:18">QTAILQ_FOREACH</name><argument_list pos:start="27:19" pos:end="27:54">(<argument pos:start="27:20" pos:end="27:23">qdev</argument>, <argument pos:start="27:26" pos:end="27:44">&amp;sbus-&gt;bus.children</argument>, <argument pos:start="27:47" pos:end="27:53">sibling</argument>)</argument_list></macro> <block pos:start="27:56" pos:end="43:5">{<block_content pos:start="29:9" pos:end="41:9">

        <expr_stmt pos:start="29:9" pos:end="29:59"><expr pos:start="29:9" pos:end="29:58"><name pos:start="29:9" pos:end="29:18">other_sdev</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="29:58"><name pos:start="29:22" pos:end="29:30">DO_UPCAST</name><argument_list pos:start="29:31" pos:end="29:58">(<argument pos:start="29:32" pos:end="29:45"><expr pos:start="29:32" pos:end="29:45"><name pos:start="29:32" pos:end="29:45">VIOsPAPRDevice</name></expr></argument>, <argument pos:start="29:48" pos:end="29:51"><expr pos:start="29:48" pos:end="29:51"><name pos:start="29:48" pos:end="29:51">qdev</name></expr></argument>, <argument pos:start="29:54" pos:end="29:57"><expr pos:start="29:54" pos:end="29:57"><name pos:start="29:54" pos:end="29:57">qdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="33:63">(<expr pos:start="33:13" pos:end="33:62"><name pos:start="33:13" pos:end="33:22">other_sdev</name> <operator pos:start="33:24" pos:end="33:25">!=</operator> <name pos:start="33:27" pos:end="33:30">sdev</name> <operator pos:start="33:32" pos:end="33:33">&amp;&amp;</operator> <name pos:start="33:35" pos:end="33:49"><name pos:start="33:35" pos:end="33:44">other_sdev</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:49">reg</name></name> <operator pos:start="33:51" pos:end="33:52">==</operator> <name pos:start="33:54" pos:end="33:62"><name pos:start="33:54" pos:end="33:57">sdev</name><operator pos:start="33:58" pos:end="33:59">-&gt;</operator><name pos:start="33:60" pos:end="33:62">reg</name></name></expr>)</condition> <block pos:start="33:65" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:27">

            <expr_stmt pos:start="35:13" pos:end="37:77"><expr pos:start="35:13" pos:end="37:76"><call pos:start="35:13" pos:end="37:76"><name pos:start="35:13" pos:end="35:19">fprintf</name><argument_list pos:start="35:20" pos:end="37:76">(<argument pos:start="35:21" pos:end="35:26"><expr pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:26">stderr</name></expr></argument>, <argument pos:start="35:29" pos:end="35:78"><expr pos:start="35:29" pos:end="35:78"><literal type="string" pos:start="35:29" pos:end="35:78">"vio: %s and %s devices conflict at address %#x\n"</literal></expr></argument>,

                    <argument pos:start="37:21" pos:end="37:35"><expr pos:start="37:21" pos:end="37:35"><name pos:start="37:21" pos:end="37:35"><name pos:start="37:21" pos:end="37:24">info</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:30">qdev</name><operator pos:start="37:31" pos:end="37:31">.</operator><name pos:start="37:32" pos:end="37:35">name</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:64"><expr pos:start="37:38" pos:end="37:64"><name pos:start="37:38" pos:end="37:64"><name pos:start="37:38" pos:end="37:47">other_sdev</name><operator pos:start="37:48" pos:end="37:49">-&gt;</operator><name pos:start="37:50" pos:end="37:53">qdev</name><operator pos:start="37:54" pos:end="37:54">.</operator><name pos:start="37:55" pos:end="37:58">info</name><operator pos:start="37:59" pos:end="37:60">-&gt;</operator><name pos:start="37:61" pos:end="37:64">name</name></name></expr></argument>, <argument pos:start="37:67" pos:end="37:75"><expr pos:start="37:67" pos:end="37:75"><name pos:start="37:67" pos:end="37:75"><name pos:start="37:67" pos:end="37:70">sdev</name><operator pos:start="37:71" pos:end="37:72">-&gt;</operator><name pos:start="37:73" pos:end="37:75">reg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:27">return <expr pos:start="39:20" pos:end="39:26"><operator pos:start="39:20" pos:end="39:20">-</operator><name pos:start="39:21" pos:end="39:26">EEXIST</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
