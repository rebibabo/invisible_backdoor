<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17437.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mjpeg_decode_com</name><parameter_list pos:start="1:28" pos:end="1:50">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:46">MJpegDecodeContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">UINT8</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:15">cbuf</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:40">/* XXX: verify len field validity */</comment>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:20">len</name> <init pos:start="13:22" pos:end="13:45">= <expr pos:start="13:24" pos:end="13:45"><call pos:start="13:24" pos:end="13:43"><name pos:start="13:24" pos:end="13:31">get_bits</name><argument_list pos:start="13:32" pos:end="13:43">(<argument pos:start="13:33" pos:end="13:38"><expr pos:start="13:33" pos:end="13:38"><operator pos:start="13:33" pos:end="13:33">&amp;</operator><name pos:start="13:34" pos:end="13:38"><name pos:start="13:34" pos:end="13:34">s</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:38">gb</name></name></expr></argument>, <argument pos:start="13:41" pos:end="13:42"><expr pos:start="13:41" pos:end="13:42"><literal type="number" pos:start="13:41" pos:end="13:42">16</literal></expr></argument>)</argument_list></call><operator pos:start="13:44" pos:end="13:44">-</operator><literal type="number" pos:start="13:45" pos:end="13:45">2</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:8">cbuf</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:27"><name pos:start="15:12" pos:end="15:20">av_malloc</name><argument_list pos:start="15:21" pos:end="15:27">(<argument pos:start="15:22" pos:end="15:26"><expr pos:start="15:22" pos:end="15:26"><name pos:start="15:22" pos:end="15:24">len</name><operator pos:start="15:25" pos:end="15:25">+</operator><literal type="number" pos:start="15:26" pos:end="15:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="19:5" pos:end="21:38">for <control pos:start="19:9" pos:end="19:29">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:24"><expr pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:23">len</name></expr>;</condition> <incr pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:26">i</name><operator pos:start="19:27" pos:end="19:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:9" pos:end="21:38"><block_content pos:start="21:9" pos:end="21:38">

	<expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:12">cbuf</name><index pos:start="21:13" pos:end="21:15">[<expr pos:start="21:14" pos:end="21:14"><name pos:start="21:14" pos:end="21:14">i</name></expr>]</index></name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:37"><name pos:start="21:19" pos:end="21:26">get_bits</name><argument_list pos:start="21:27" pos:end="21:37">(<argument pos:start="21:28" pos:end="21:33"><expr pos:start="21:28" pos:end="21:33"><operator pos:start="21:28" pos:end="21:28">&amp;</operator><name pos:start="21:29" pos:end="21:33"><name pos:start="21:29" pos:end="21:29">s</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:33">gb</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:36"><expr pos:start="21:36" pos:end="21:36"><literal type="number" pos:start="21:36" pos:end="21:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <if_stmt pos:start="23:5" pos:end="29:20"><if pos:start="23:5" pos:end="25:22">if <condition pos:start="23:8" pos:end="23:26">(<expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:12">cbuf</name><index pos:start="23:13" pos:end="23:17">[<expr pos:start="23:14" pos:end="23:16"><name pos:start="23:14" pos:end="23:14">i</name><operator pos:start="23:15" pos:end="23:15">-</operator><literal type="number" pos:start="23:16" pos:end="23:16">1</literal></expr>]</index></name> <operator pos:start="23:19" pos:end="23:20">==</operator> <literal type="char" pos:start="23:22" pos:end="23:25">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:22"><block_content pos:start="25:9" pos:end="25:22">

	<expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:12">cbuf</name><index pos:start="25:13" pos:end="25:17">[<expr pos:start="25:14" pos:end="25:16"><name pos:start="25:14" pos:end="25:14">i</name><operator pos:start="25:15" pos:end="25:15">-</operator><literal type="number" pos:start="25:16" pos:end="25:16">1</literal></expr>]</index></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="27:5" pos:end="29:20">else<block type="pseudo" pos:start="29:9" pos:end="29:20"><block_content pos:start="29:9" pos:end="29:20">

	<expr_stmt pos:start="29:9" pos:end="29:20"><expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:12">cbuf</name><index pos:start="29:13" pos:end="29:15">[<expr pos:start="29:14" pos:end="29:14"><name pos:start="29:14" pos:end="29:14">i</name></expr>]</index></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><call pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:10">printf</name><argument_list pos:start="33:11" pos:end="33:41">(<argument pos:start="33:12" pos:end="33:34"><expr pos:start="33:12" pos:end="33:34"><literal type="string" pos:start="33:12" pos:end="33:34">"mjpeg comment: '%s'\n"</literal></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">cbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:58">/* buggy avid, it puts EOI only at every 10th frame */</comment>

    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:30">(<expr pos:start="39:9" pos:end="39:29"><operator pos:start="39:9" pos:end="39:9">!</operator><call pos:start="39:10" pos:end="39:29"><name pos:start="39:10" pos:end="39:15">strcmp</name><argument_list pos:start="39:16" pos:end="39:29">(<argument pos:start="39:17" pos:end="39:20"><expr pos:start="39:17" pos:end="39:20"><name pos:start="39:17" pos:end="39:20">cbuf</name></expr></argument>, <argument pos:start="39:23" pos:end="39:28"><expr pos:start="39:23" pos:end="39:28"><literal type="string" pos:start="39:23" pos:end="39:28">"AVID"</literal></expr></argument>)</argument_list></call></expr>)</condition>

    <block pos:start="41:5" pos:end="49:5">{<block_content pos:start="43:9" pos:end="43:26">

	<expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:21">buggy_avid</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <literal type="number" pos:start="43:25" pos:end="43:25">1</literal></expr>;</expr_stmt>

<comment type="line" pos:start="45:1" pos:end="45:29">//	if (s-&gt;first_picture)</comment>

<comment type="line" pos:start="47:1" pos:end="47:56">//	    printf("mjpeg: workarounding buggy AVID\n");</comment>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="53:5" pos:end="53:18"><expr pos:start="53:5" pos:end="53:17"><call pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:11">av_free</name><argument_list pos:start="53:12" pos:end="53:17">(<argument pos:start="53:13" pos:end="53:16"><expr pos:start="53:13" pos:end="53:16"><name pos:start="53:13" pos:end="53:16">cbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
