<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5830.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">pci_update_mappings</name><parameter_list pos:start="1:32" pos:end="1:45">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:41">PCIDevice</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:22">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">PCIIORegion</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">pcibus_t</name></type> <name pos:start="9:14" pos:end="9:21">new_addr</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="73:5">for<control pos:start="13:8" pos:end="13:40">(<init pos:start="13:9" pos:end="13:14"><expr pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:9">i</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr>;</init> <condition pos:start="13:16" pos:end="13:35"><expr pos:start="13:16" pos:end="13:34"><name pos:start="13:16" pos:end="13:16">i</name> <operator pos:start="13:18" pos:end="13:18">&lt;</operator> <name pos:start="13:20" pos:end="13:34">PCI_NUM_REGIONS</name></expr>;</condition> <incr pos:start="13:37" pos:end="13:39"><expr pos:start="13:37" pos:end="13:39"><name pos:start="13:37" pos:end="13:37">i</name><operator pos:start="13:38" pos:end="13:39">++</operator></expr></incr>)</control> <block pos:start="13:42" pos:end="73:5">{<block_content pos:start="15:9" pos:end="71:9">

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:9">r</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <operator pos:start="15:13" pos:end="15:13">&amp;</operator><name pos:start="15:14" pos:end="15:29"><name pos:start="15:14" pos:end="15:14">d</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:26">io_regions</name><index pos:start="15:27" pos:end="15:29">[<expr pos:start="15:28" pos:end="15:28"><name pos:start="15:28" pos:end="15:28">i</name></expr>]</index></name></expr>;</expr_stmt>



        <comment type="block" pos:start="19:9" pos:end="19:42">/* this region isn't registered */</comment>

        <if_stmt pos:start="21:9" pos:end="23:21"><if pos:start="21:9" pos:end="23:21">if <condition pos:start="21:12" pos:end="21:21">(<expr pos:start="21:13" pos:end="21:20"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:20"><name pos:start="21:14" pos:end="21:14">r</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:20">size</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:59"><expr pos:start="27:9" pos:end="27:58"><name pos:start="27:9" pos:end="27:16">new_addr</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:58"><name pos:start="27:20" pos:end="27:34">pci_bar_address</name><argument_list pos:start="27:35" pos:end="27:58">(<argument pos:start="27:36" pos:end="27:36"><expr pos:start="27:36" pos:end="27:36"><name pos:start="27:36" pos:end="27:36">d</name></expr></argument>, <argument pos:start="27:39" pos:end="27:39"><expr pos:start="27:39" pos:end="27:39"><name pos:start="27:39" pos:end="27:39">i</name></expr></argument>, <argument pos:start="27:42" pos:end="27:48"><expr pos:start="27:42" pos:end="27:48"><name pos:start="27:42" pos:end="27:48"><name pos:start="27:42" pos:end="27:42">r</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:48">type</name></name></expr></argument>, <argument pos:start="27:51" pos:end="27:57"><expr pos:start="27:51" pos:end="27:57"><name pos:start="27:51" pos:end="27:57"><name pos:start="27:51" pos:end="27:51">r</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:57">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="31:9" pos:end="31:36">/* This bar isn't changed */</comment>

        <if_stmt pos:start="33:9" pos:end="35:21"><if pos:start="33:9" pos:end="35:21">if <condition pos:start="33:12" pos:end="33:32">(<expr pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:20">new_addr</name> <operator pos:start="33:22" pos:end="33:23">==</operator> <name pos:start="33:25" pos:end="33:31"><name pos:start="33:25" pos:end="33:25">r</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:31">addr</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:21"><block_content pos:start="35:13" pos:end="35:21">

            <continue pos:start="35:13" pos:end="35:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="block" pos:start="39:9" pos:end="39:37">/* now do the real mapping */</comment>

        <if_stmt pos:start="41:9" pos:end="53:9"><if pos:start="41:9" pos:end="53:9">if <condition pos:start="41:12" pos:end="41:40">(<expr pos:start="41:13" pos:end="41:39"><name pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:13">r</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:19">addr</name></name> <operator pos:start="41:21" pos:end="41:22">!=</operator> <name pos:start="41:24" pos:end="41:39">PCI_BAR_UNMAPPED</name></expr>)</condition> <block pos:start="41:42" pos:end="53:9">{<block_content pos:start="43:13" pos:end="51:69">

            <expr_stmt pos:start="43:13" pos:end="49:63"><expr pos:start="43:13" pos:end="49:62"><call pos:start="43:13" pos:end="49:62"><name pos:start="43:13" pos:end="43:41">trace_pci_update_mappings_del</name><argument_list pos:start="43:42" pos:end="49:62">(<argument pos:start="43:43" pos:end="43:43"><expr pos:start="43:43" pos:end="43:43"><name pos:start="43:43" pos:end="43:43">d</name></expr></argument>, <argument pos:start="43:46" pos:end="43:64"><expr pos:start="43:46" pos:end="43:64"><call pos:start="43:46" pos:end="43:64"><name pos:start="43:46" pos:end="43:56">pci_bus_num</name><argument_list pos:start="43:57" pos:end="43:64">(<argument pos:start="43:58" pos:end="43:63"><expr pos:start="43:58" pos:end="43:63"><name pos:start="43:58" pos:end="43:63"><name pos:start="43:58" pos:end="43:58">d</name><operator pos:start="43:59" pos:end="43:60">-&gt;</operator><name pos:start="43:61" pos:end="43:63">bus</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                          <argument pos:start="45:43" pos:end="45:60"><expr pos:start="45:43" pos:end="45:60"><call pos:start="45:43" pos:end="45:60"><name pos:start="45:43" pos:end="45:50">PCI_SLOT</name><argument_list pos:start="45:51" pos:end="45:60">(<argument pos:start="45:52" pos:end="45:59"><expr pos:start="45:52" pos:end="45:59"><name pos:start="45:52" pos:end="45:59"><name pos:start="45:52" pos:end="45:52">d</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:59">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                          <argument pos:start="47:43" pos:end="47:60"><expr pos:start="47:43" pos:end="47:60"><call pos:start="47:43" pos:end="47:60"><name pos:start="47:43" pos:end="47:50">PCI_FUNC</name><argument_list pos:start="47:51" pos:end="47:60">(<argument pos:start="47:52" pos:end="47:59"><expr pos:start="47:52" pos:end="47:59"><name pos:start="47:52" pos:end="47:59"><name pos:start="47:52" pos:end="47:52">d</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:59">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                          <argument pos:start="49:43" pos:end="49:43"><expr pos:start="49:43" pos:end="49:43"><name pos:start="49:43" pos:end="49:43">i</name></expr></argument>, <argument pos:start="49:46" pos:end="49:52"><expr pos:start="49:46" pos:end="49:52"><name pos:start="49:46" pos:end="49:52"><name pos:start="49:46" pos:end="49:46">r</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:52">addr</name></name></expr></argument>, <argument pos:start="49:55" pos:end="49:61"><expr pos:start="49:55" pos:end="49:61"><name pos:start="49:55" pos:end="49:61"><name pos:start="49:55" pos:end="49:55">r</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:61">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:69"><expr pos:start="51:13" pos:end="51:68"><call pos:start="51:13" pos:end="51:68"><name pos:start="51:13" pos:end="51:39">memory_region_del_subregion</name><argument_list pos:start="51:40" pos:end="51:68">(<argument pos:start="51:41" pos:end="51:56"><expr pos:start="51:41" pos:end="51:56"><name pos:start="51:41" pos:end="51:56"><name pos:start="51:41" pos:end="51:41">r</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:56">address_space</name></name></expr></argument>, <argument pos:start="51:59" pos:end="51:67"><expr pos:start="51:59" pos:end="51:67"><name pos:start="51:59" pos:end="51:67"><name pos:start="51:59" pos:end="51:59">r</name><operator pos:start="51:60" pos:end="51:61">-&gt;</operator><name pos:start="51:62" pos:end="51:67">memory</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:27"><expr pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:9">r</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:15">addr</name></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:26">new_addr</name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="71:9"><if pos:start="57:9" pos:end="71:9">if <condition pos:start="57:12" pos:end="57:40">(<expr pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:13">r</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:19">addr</name></name> <operator pos:start="57:21" pos:end="57:22">!=</operator> <name pos:start="57:24" pos:end="57:39">PCI_BAR_UNMAPPED</name></expr>)</condition> <block pos:start="57:42" pos:end="71:9">{<block_content pos:start="59:13" pos:end="69:71">

            <expr_stmt pos:start="59:13" pos:end="65:63"><expr pos:start="59:13" pos:end="65:62"><call pos:start="59:13" pos:end="65:62"><name pos:start="59:13" pos:end="59:41">trace_pci_update_mappings_add</name><argument_list pos:start="59:42" pos:end="65:62">(<argument pos:start="59:43" pos:end="59:43"><expr pos:start="59:43" pos:end="59:43"><name pos:start="59:43" pos:end="59:43">d</name></expr></argument>, <argument pos:start="59:46" pos:end="59:64"><expr pos:start="59:46" pos:end="59:64"><call pos:start="59:46" pos:end="59:64"><name pos:start="59:46" pos:end="59:56">pci_bus_num</name><argument_list pos:start="59:57" pos:end="59:64">(<argument pos:start="59:58" pos:end="59:63"><expr pos:start="59:58" pos:end="59:63"><name pos:start="59:58" pos:end="59:63"><name pos:start="59:58" pos:end="59:58">d</name><operator pos:start="59:59" pos:end="59:60">-&gt;</operator><name pos:start="59:61" pos:end="59:63">bus</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                          <argument pos:start="61:43" pos:end="61:60"><expr pos:start="61:43" pos:end="61:60"><call pos:start="61:43" pos:end="61:60"><name pos:start="61:43" pos:end="61:50">PCI_SLOT</name><argument_list pos:start="61:51" pos:end="61:60">(<argument pos:start="61:52" pos:end="61:59"><expr pos:start="61:52" pos:end="61:59"><name pos:start="61:52" pos:end="61:59"><name pos:start="61:52" pos:end="61:52">d</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:59">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                          <argument pos:start="63:43" pos:end="63:60"><expr pos:start="63:43" pos:end="63:60"><call pos:start="63:43" pos:end="63:60"><name pos:start="63:43" pos:end="63:50">PCI_FUNC</name><argument_list pos:start="63:51" pos:end="63:60">(<argument pos:start="63:52" pos:end="63:59"><expr pos:start="63:52" pos:end="63:59"><name pos:start="63:52" pos:end="63:59"><name pos:start="63:52" pos:end="63:52">d</name><operator pos:start="63:53" pos:end="63:54">-&gt;</operator><name pos:start="63:55" pos:end="63:59">devfn</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                          <argument pos:start="65:43" pos:end="65:43"><expr pos:start="65:43" pos:end="65:43"><name pos:start="65:43" pos:end="65:43">i</name></expr></argument>, <argument pos:start="65:46" pos:end="65:52"><expr pos:start="65:46" pos:end="65:52"><name pos:start="65:46" pos:end="65:52"><name pos:start="65:46" pos:end="65:46">r</name><operator pos:start="65:47" pos:end="65:48">-&gt;</operator><name pos:start="65:49" pos:end="65:52">addr</name></name></expr></argument>, <argument pos:start="65:55" pos:end="65:61"><expr pos:start="65:55" pos:end="65:61"><name pos:start="65:55" pos:end="65:61"><name pos:start="65:55" pos:end="65:55">r</name><operator pos:start="65:56" pos:end="65:57">-&gt;</operator><name pos:start="65:58" pos:end="65:61">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="69:71"><expr pos:start="67:13" pos:end="69:70"><call pos:start="67:13" pos:end="69:70"><name pos:start="67:13" pos:end="67:47">memory_region_add_subregion_overlap</name><argument_list pos:start="67:48" pos:end="69:70">(<argument pos:start="67:49" pos:end="67:64"><expr pos:start="67:49" pos:end="67:64"><name pos:start="67:49" pos:end="67:64"><name pos:start="67:49" pos:end="67:49">r</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:64">address_space</name></name></expr></argument>,

                                                <argument pos:start="69:49" pos:end="69:55"><expr pos:start="69:49" pos:end="69:55"><name pos:start="69:49" pos:end="69:55"><name pos:start="69:49" pos:end="69:49">r</name><operator pos:start="69:50" pos:end="69:51">-&gt;</operator><name pos:start="69:52" pos:end="69:55">addr</name></name></expr></argument>, <argument pos:start="69:58" pos:end="69:66"><expr pos:start="69:58" pos:end="69:66"><name pos:start="69:58" pos:end="69:66"><name pos:start="69:58" pos:end="69:58">r</name><operator pos:start="69:59" pos:end="69:60">-&gt;</operator><name pos:start="69:61" pos:end="69:66">memory</name></name></expr></argument>, <argument pos:start="69:69" pos:end="69:69"><expr pos:start="69:69" pos:end="69:69"><literal type="number" pos:start="69:69" pos:end="69:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="77:5" pos:end="77:22"><expr pos:start="77:5" pos:end="77:21"><call pos:start="77:5" pos:end="77:21"><name pos:start="77:5" pos:end="77:18">pci_update_vga</name><argument_list pos:start="77:19" pos:end="77:21">(<argument pos:start="77:20" pos:end="77:20"><expr pos:start="77:20" pos:end="77:20"><name pos:start="77:20" pos:end="77:20">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
