<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16859.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:29">omap_pwl_read</name><parameter_list pos:start="1:30" pos:end="3:44">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:67"><decl pos:start="1:45" pos:end="1:67"><type pos:start="1:45" pos:end="1:67"><name pos:start="1:45" pos:end="1:62">target_phys_addr_t</name></type> <name pos:start="1:64" pos:end="1:67">addr</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:43"><decl pos:start="3:31" pos:end="3:43"><type pos:start="3:31" pos:end="3:43"><name pos:start="3:31" pos:end="3:38">unsigned</name></type> <name pos:start="3:40" pos:end="3:43">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:13">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">omap_pwl_s</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:55">= <expr pos:start="7:28" pos:end="7:55"><operator pos:start="7:28" pos:end="7:28">(</operator>struct <name pos:start="7:36" pos:end="7:45">omap_pwl_s</name> <operator pos:start="7:47" pos:end="7:47">*</operator><operator pos:start="7:48" pos:end="7:48">)</operator> <name pos:start="7:50" pos:end="7:55">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:42">= <expr pos:start="9:18" pos:end="9:42"><name pos:start="9:18" pos:end="9:21">addr</name> <operator pos:start="9:23" pos:end="9:23">&amp;</operator> <name pos:start="9:25" pos:end="9:42">OMAP_MPUI_REG_MASK</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">size</name> <operator pos:start="13:14" pos:end="13:15">!=</operator> <literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>)</condition> <block pos:start="13:20" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:49">

        <return pos:start="15:9" pos:end="15:49">return <expr pos:start="15:16" pos:end="15:48"><call pos:start="15:16" pos:end="15:48"><name pos:start="15:16" pos:end="15:34">omap_badwidth_read8</name><argument_list pos:start="15:35" pos:end="15:48">(<argument pos:start="15:36" pos:end="15:41"><expr pos:start="15:36" pos:end="15:41"><name pos:start="15:36" pos:end="15:41">opaque</name></expr></argument>, <argument pos:start="15:44" pos:end="15:47"><expr pos:start="15:44" pos:end="15:47"><name pos:start="15:44" pos:end="15:47">addr</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="21:5" pos:end="31:5">switch <condition pos:start="21:12" pos:end="21:19">(<expr pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:18">offset</name></expr>)</condition> <block pos:start="21:21" pos:end="31:5">{<block_content pos:start="23:5" pos:end="29:25">

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="23:17" pos:end="23:31">/* PWL_LEVEL */</comment>

        <return pos:start="25:9" pos:end="25:24">return <expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">level</name></name></expr>;</return>

    <case pos:start="27:5" pos:end="27:14">case <expr pos:start="27:10" pos:end="27:13"><literal type="number" pos:start="27:10" pos:end="27:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="27:17" pos:end="27:30">/* PWL_CTRL */</comment>

        <return pos:start="29:9" pos:end="29:25">return <expr pos:start="29:16" pos:end="29:24"><name pos:start="29:16" pos:end="29:24"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:24">enable</name></name></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><call pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:16">OMAP_BAD_REG</name><argument_list pos:start="33:17" pos:end="33:22">(<argument pos:start="33:18" pos:end="33:21"><expr pos:start="33:18" pos:end="33:21"><name pos:start="33:18" pos:end="33:21">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
