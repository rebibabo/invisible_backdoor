<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19590.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">get_str</name><parameter_list pos:start="1:19" pos:end="1:60">(<parameter pos:start="1:20" pos:end="1:28"><decl pos:start="1:20" pos:end="1:28"><type pos:start="1:20" pos:end="1:28"><name pos:start="1:20" pos:end="1:23">char</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:28">buf</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:33">int</name></type> <name pos:start="1:35" pos:end="1:42">buf_size</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:59"><decl pos:start="1:45" pos:end="1:59"><type pos:start="1:45" pos:end="1:59"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier><modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">pp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">c</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:12"><expr pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">q</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <name pos:start="13:9" pos:end="13:11">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:12"><expr pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:5">p</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <operator pos:start="15:9" pos:end="15:9">*</operator><name pos:start="15:10" pos:end="15:11">pp</name></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="19:12">while <condition pos:start="17:11" pos:end="17:28">(<expr pos:start="17:12" pos:end="17:27"><call pos:start="17:12" pos:end="17:27"><name pos:start="17:12" pos:end="17:23">qemu_isspace</name><argument_list pos:start="17:24" pos:end="17:27">(<argument pos:start="17:25" pos:end="17:26"><expr pos:start="17:25" pos:end="17:26"><operator pos:start="17:25" pos:end="17:25">*</operator><name pos:start="17:26" pos:end="17:26">p</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:12"><block_content pos:start="19:9" pos:end="19:12">

        <expr_stmt pos:start="19:9" pos:end="19:12"><expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:9">p</name><operator pos:start="19:10" pos:end="19:11">++</operator></expr>;</expr_stmt></block_content></block></while>

    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:19">(<expr pos:start="21:9" pos:end="21:18"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:10">p</name> <operator pos:start="21:12" pos:end="21:13">==</operator> <literal type="char" pos:start="21:15" pos:end="21:18">'\0'</literal></expr>)</condition> <block pos:start="21:21" pos:end="31:5">{<block_content pos:start="23:5" pos:end="29:18">

    <label pos:start="23:5" pos:end="23:9"><name pos:start="23:5" pos:end="23:8">fail</name>:</label>

        <expr_stmt pos:start="25:9" pos:end="25:18"><expr pos:start="25:9" pos:end="25:17"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:10">q</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="char" pos:start="25:14" pos:end="25:17">'\0'</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:11">pp</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:15">p</name></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="119:5"><if pos:start="33:5" pos:end="105:5">if <condition pos:start="33:8" pos:end="33:19">(<expr pos:start="33:9" pos:end="33:18"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:10">p</name> <operator pos:start="33:12" pos:end="33:13">==</operator> <literal type="char" pos:start="33:15" pos:end="33:18">'\"'</literal></expr>)</condition> <block pos:start="33:21" pos:end="105:5">{<block_content pos:start="35:9" pos:end="103:12">

        <expr_stmt pos:start="35:9" pos:end="35:12"><expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:9">p</name><operator pos:start="35:10" pos:end="35:11">++</operator></expr>;</expr_stmt>

        <while pos:start="37:9" pos:end="93:9">while <condition pos:start="37:15" pos:end="37:40">(<expr pos:start="37:16" pos:end="37:39"><operator pos:start="37:16" pos:end="37:16">*</operator><name pos:start="37:17" pos:end="37:17">p</name> <operator pos:start="37:19" pos:end="37:20">!=</operator> <literal type="char" pos:start="37:22" pos:end="37:25">'\0'</literal> <operator pos:start="37:27" pos:end="37:28">&amp;&amp;</operator> <operator pos:start="37:30" pos:end="37:30">*</operator><name pos:start="37:31" pos:end="37:31">p</name> <operator pos:start="37:33" pos:end="37:34">!=</operator> <literal type="char" pos:start="37:36" pos:end="37:39">'\"'</literal></expr>)</condition> <block pos:start="37:42" pos:end="93:9">{<block_content pos:start="39:13" pos:end="91:13">

            <if_stmt pos:start="39:13" pos:end="91:13"><if pos:start="39:13" pos:end="81:13">if <condition pos:start="39:16" pos:end="39:27">(<expr pos:start="39:17" pos:end="39:26"><operator pos:start="39:17" pos:end="39:17">*</operator><name pos:start="39:18" pos:end="39:18">p</name> <operator pos:start="39:20" pos:end="39:21">==</operator> <literal type="char" pos:start="39:23" pos:end="39:26">'\\'</literal></expr>)</condition> <block pos:start="39:29" pos:end="81:13">{<block_content pos:start="41:17" pos:end="79:17">

                <expr_stmt pos:start="41:17" pos:end="41:20"><expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:17">p</name><operator pos:start="41:18" pos:end="41:19">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:25"><expr pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:17">c</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <operator pos:start="43:21" pos:end="43:21">*</operator><name pos:start="43:22" pos:end="43:22">p</name><operator pos:start="43:23" pos:end="43:24">++</operator></expr>;</expr_stmt>

                <switch pos:start="45:17" pos:end="73:17">switch<condition pos:start="45:23" pos:end="45:25">(<expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">c</name></expr>)</condition> <block pos:start="45:27" pos:end="73:17">{<block_content pos:start="47:17" pos:end="71:30">

                <case pos:start="47:17" pos:end="47:25">case <expr pos:start="47:22" pos:end="47:24"><literal type="char" pos:start="47:22" pos:end="47:24">'n'</literal></expr>:</case>

                    <expr_stmt pos:start="49:21" pos:end="49:29"><expr pos:start="49:21" pos:end="49:28"><name pos:start="49:21" pos:end="49:21">c</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="char" pos:start="49:25" pos:end="49:28">'\n'</literal></expr>;</expr_stmt>

                    <break pos:start="51:21" pos:end="51:26">break;</break>

                <case pos:start="53:17" pos:end="53:25">case <expr pos:start="53:22" pos:end="53:24"><literal type="char" pos:start="53:22" pos:end="53:24">'r'</literal></expr>:</case>

                    <expr_stmt pos:start="55:21" pos:end="55:29"><expr pos:start="55:21" pos:end="55:28"><name pos:start="55:21" pos:end="55:21">c</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="char" pos:start="55:25" pos:end="55:28">'\r'</literal></expr>;</expr_stmt>

                    <break pos:start="57:21" pos:end="57:26">break;</break>

                <case pos:start="59:17" pos:end="59:26">case <expr pos:start="59:22" pos:end="59:25"><literal type="char" pos:start="59:22" pos:end="59:25">'\\'</literal></expr>:</case>

                <case pos:start="61:17" pos:end="61:26">case <expr pos:start="61:22" pos:end="61:25"><literal type="char" pos:start="61:22" pos:end="61:25">'\''</literal></expr>:</case>

                <case pos:start="63:17" pos:end="63:26">case <expr pos:start="63:22" pos:end="63:25"><literal type="char" pos:start="63:22" pos:end="63:25">'\"'</literal></expr>:</case>

                    <break pos:start="65:21" pos:end="65:26">break;</break>

                <default pos:start="67:17" pos:end="67:24">default:</default>

                    <expr_stmt pos:start="69:21" pos:end="69:72"><expr pos:start="69:21" pos:end="69:71"><call pos:start="69:21" pos:end="69:71"><name pos:start="69:21" pos:end="69:31">qemu_printf</name><argument_list pos:start="69:32" pos:end="69:71">(<argument pos:start="69:33" pos:end="69:67"><expr pos:start="69:33" pos:end="69:67"><literal type="string" pos:start="69:33" pos:end="69:67">"unsupported escape code: '\\%c'\n"</literal></expr></argument>, <argument pos:start="69:70" pos:end="69:70"><expr pos:start="69:70" pos:end="69:70"><name pos:start="69:70" pos:end="69:70">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="71:21" pos:end="71:30">goto <name pos:start="71:26" pos:end="71:29">fail</name>;</goto>

                </block_content>}</block></switch>

                <if_stmt pos:start="75:17" pos:end="79:17"><if pos:start="75:17" pos:end="79:17">if <condition pos:start="75:20" pos:end="75:45">(<expr pos:start="75:21" pos:end="75:44"><operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:22">q</name> <operator pos:start="75:24" pos:end="75:24">-</operator> <name pos:start="75:26" pos:end="75:28">buf</name><operator pos:start="75:29" pos:end="75:29">)</operator> <operator pos:start="75:31" pos:end="75:31">&lt;</operator> <name pos:start="75:33" pos:end="75:40">buf_size</name> <operator pos:start="75:42" pos:end="75:42">-</operator> <literal type="number" pos:start="75:44" pos:end="75:44">1</literal></expr>)</condition> <block pos:start="75:47" pos:end="79:17">{<block_content pos:start="77:21" pos:end="77:29">

                    <expr_stmt pos:start="77:21" pos:end="77:29"><expr pos:start="77:21" pos:end="77:28"><operator pos:start="77:21" pos:end="77:21">*</operator><name pos:start="77:22" pos:end="77:22">q</name><operator pos:start="77:23" pos:end="77:24">++</operator> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:28">c</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="81:15" pos:end="91:13">else <block pos:start="81:20" pos:end="91:13">{<block_content pos:start="83:17" pos:end="89:20">

                <if_stmt pos:start="83:17" pos:end="87:17"><if pos:start="83:17" pos:end="87:17">if <condition pos:start="83:20" pos:end="83:45">(<expr pos:start="83:21" pos:end="83:44"><operator pos:start="83:21" pos:end="83:21">(</operator><name pos:start="83:22" pos:end="83:22">q</name> <operator pos:start="83:24" pos:end="83:24">-</operator> <name pos:start="83:26" pos:end="83:28">buf</name><operator pos:start="83:29" pos:end="83:29">)</operator> <operator pos:start="83:31" pos:end="83:31">&lt;</operator> <name pos:start="83:33" pos:end="83:40">buf_size</name> <operator pos:start="83:42" pos:end="83:42">-</operator> <literal type="number" pos:start="83:44" pos:end="83:44">1</literal></expr>)</condition> <block pos:start="83:47" pos:end="87:17">{<block_content pos:start="85:21" pos:end="85:30">

                    <expr_stmt pos:start="85:21" pos:end="85:30"><expr pos:start="85:21" pos:end="85:29"><operator pos:start="85:21" pos:end="85:21">*</operator><name pos:start="85:22" pos:end="85:22">q</name><operator pos:start="85:23" pos:end="85:24">++</operator> <operator pos:start="85:26" pos:end="85:26">=</operator> <operator pos:start="85:28" pos:end="85:28">*</operator><name pos:start="85:29" pos:end="85:29">p</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:20"><expr pos:start="89:17" pos:end="89:19"><name pos:start="89:17" pos:end="89:17">p</name><operator pos:start="89:18" pos:end="89:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="95:9" pos:end="101:9"><if pos:start="95:9" pos:end="101:9">if <condition pos:start="95:12" pos:end="95:23">(<expr pos:start="95:13" pos:end="95:22"><operator pos:start="95:13" pos:end="95:13">*</operator><name pos:start="95:14" pos:end="95:14">p</name> <operator pos:start="95:16" pos:end="95:17">!=</operator> <literal type="char" pos:start="95:19" pos:end="95:22">'\"'</literal></expr>)</condition> <block pos:start="95:25" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:22">

            <expr_stmt pos:start="97:13" pos:end="97:49"><expr pos:start="97:13" pos:end="97:48"><call pos:start="97:13" pos:end="97:48"><name pos:start="97:13" pos:end="97:23">qemu_printf</name><argument_list pos:start="97:24" pos:end="97:48">(<argument pos:start="97:25" pos:end="97:47"><expr pos:start="97:25" pos:end="97:47"><literal type="string" pos:start="97:25" pos:end="97:47">"unterminated string\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="99:13" pos:end="99:22">goto <name pos:start="99:18" pos:end="99:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:12"><expr pos:start="103:9" pos:end="103:11"><name pos:start="103:9" pos:end="103:9">p</name><operator pos:start="103:10" pos:end="103:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="105:7" pos:end="119:5">else <block pos:start="105:12" pos:end="119:5">{<block_content pos:start="107:9" pos:end="117:9">

        <while pos:start="107:9" pos:end="117:9">while <condition pos:start="107:15" pos:end="107:47">(<expr pos:start="107:16" pos:end="107:46"><operator pos:start="107:16" pos:end="107:16">*</operator><name pos:start="107:17" pos:end="107:17">p</name> <operator pos:start="107:19" pos:end="107:20">!=</operator> <literal type="char" pos:start="107:22" pos:end="107:25">'\0'</literal> <operator pos:start="107:27" pos:end="107:28">&amp;&amp;</operator> <operator pos:start="107:30" pos:end="107:30">!</operator><call pos:start="107:31" pos:end="107:46"><name pos:start="107:31" pos:end="107:42">qemu_isspace</name><argument_list pos:start="107:43" pos:end="107:46">(<argument pos:start="107:44" pos:end="107:45"><expr pos:start="107:44" pos:end="107:45"><operator pos:start="107:44" pos:end="107:44">*</operator><name pos:start="107:45" pos:end="107:45">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:49" pos:end="117:9">{<block_content pos:start="109:13" pos:end="115:16">

            <if_stmt pos:start="109:13" pos:end="113:13"><if pos:start="109:13" pos:end="113:13">if <condition pos:start="109:16" pos:end="109:41">(<expr pos:start="109:17" pos:end="109:40"><operator pos:start="109:17" pos:end="109:17">(</operator><name pos:start="109:18" pos:end="109:18">q</name> <operator pos:start="109:20" pos:end="109:20">-</operator> <name pos:start="109:22" pos:end="109:24">buf</name><operator pos:start="109:25" pos:end="109:25">)</operator> <operator pos:start="109:27" pos:end="109:27">&lt;</operator> <name pos:start="109:29" pos:end="109:36">buf_size</name> <operator pos:start="109:38" pos:end="109:38">-</operator> <literal type="number" pos:start="109:40" pos:end="109:40">1</literal></expr>)</condition> <block pos:start="109:43" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:26">

                <expr_stmt pos:start="111:17" pos:end="111:26"><expr pos:start="111:17" pos:end="111:25"><operator pos:start="111:17" pos:end="111:17">*</operator><name pos:start="111:18" pos:end="111:18">q</name><operator pos:start="111:19" pos:end="111:20">++</operator> <operator pos:start="111:22" pos:end="111:22">=</operator> <operator pos:start="111:24" pos:end="111:24">*</operator><name pos:start="111:25" pos:end="111:25">p</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:16"><expr pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:13">p</name><operator pos:start="115:14" pos:end="115:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:14"><expr pos:start="121:5" pos:end="121:13"><operator pos:start="121:5" pos:end="121:5">*</operator><name pos:start="121:6" pos:end="121:6">q</name> <operator pos:start="121:8" pos:end="121:8">=</operator> <literal type="char" pos:start="121:10" pos:end="121:13">'\0'</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:12"><expr pos:start="123:5" pos:end="123:11"><operator pos:start="123:5" pos:end="123:5">*</operator><name pos:start="123:6" pos:end="123:7">pp</name> <operator pos:start="123:9" pos:end="123:9">=</operator> <name pos:start="123:11" pos:end="123:11">p</name></expr>;</expr_stmt>

    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
