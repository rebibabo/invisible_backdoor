<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25031.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">tcx_rblit_writel</name><parameter_list pos:start="1:29" pos:end="3:53">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:54"><decl pos:start="1:44" pos:end="1:54"><type pos:start="1:44" pos:end="1:54"><name pos:start="1:44" pos:end="1:49">hwaddr</name></type> <name pos:start="1:51" pos:end="1:54">addr</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:37"><decl pos:start="3:26" pos:end="3:37"><type pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:33">uint64_t</name></type> <name pos:start="3:35" pos:end="3:37">val</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:52"><decl pos:start="3:40" pos:end="3:52"><type pos:start="3:40" pos:end="3:52"><name pos:start="3:40" pos:end="3:47">unsigned</name></type> <name pos:start="3:49" pos:end="3:52">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:5">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">TCXState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:24">= <expr pos:start="7:19" pos:end="7:24"><name pos:start="7:19" pos:end="7:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">adsr</name></decl>, <decl pos:start="9:20" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:20" pos:end="9:22">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="63:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:14">addr</name> <operator pos:start="15:16" pos:end="15:16">&amp;</operator> <literal type="number" pos:start="15:18" pos:end="15:18">4</literal><operator pos:start="15:19" pos:end="15:19">)</operator></expr>)</condition> <block pos:start="15:22" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:25">

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">tmpblit</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:24">val</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="63:5">else <block pos:start="19:12" pos:end="63:5">{<block_content pos:start="21:9" pos:end="61:57">

        <expr_stmt pos:start="21:9" pos:end="21:37"><expr pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:12">addr</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><name pos:start="21:17" pos:end="21:20">addr</name> <operator pos:start="21:22" pos:end="21:23">&gt;&gt;</operator> <literal type="number" pos:start="21:25" pos:end="21:25">3</literal><operator pos:start="21:26" pos:end="21:26">)</operator> <operator pos:start="21:28" pos:end="21:28">&amp;</operator> <literal type="number" pos:start="21:30" pos:end="21:36">0xfffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:12">adsr</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:18">val</name> <operator pos:start="23:20" pos:end="23:20">&amp;</operator> <literal type="number" pos:start="23:22" pos:end="23:29">0xffffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:11">len</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <operator pos:start="25:15" pos:end="25:15">(</operator><operator pos:start="25:16" pos:end="25:16">(</operator><name pos:start="25:17" pos:end="25:19">val</name> <operator pos:start="25:21" pos:end="25:22">&gt;&gt;</operator> <literal type="number" pos:start="25:24" pos:end="25:25">24</literal><operator pos:start="25:26" pos:end="25:26">)</operator> <operator pos:start="25:28" pos:end="25:28">&amp;</operator> <literal type="number" pos:start="25:30" pos:end="25:33">0x1f</literal><operator pos:start="25:34" pos:end="25:34">)</operator> <operator pos:start="25:36" pos:end="25:36">+</operator> <literal type="number" pos:start="25:38" pos:end="25:38">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="59:9"><if pos:start="27:9" pos:end="47:9">if <condition pos:start="27:12" pos:end="27:29">(<expr pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:16">adsr</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <literal type="number" pos:start="27:21" pos:end="27:28">0xffffff</literal></expr>)</condition> <block pos:start="27:31" pos:end="47:9">{<block_content pos:start="29:13" pos:end="45:13">

            <expr_stmt pos:start="29:13" pos:end="29:52"><expr pos:start="29:13" pos:end="29:51"><call pos:start="29:13" pos:end="29:51"><name pos:start="29:13" pos:end="29:18">memset</name><argument_list pos:start="29:19" pos:end="29:51">(<argument pos:start="29:20" pos:end="29:33"><expr pos:start="29:20" pos:end="29:33"><operator pos:start="29:20" pos:end="29:20">&amp;</operator><name pos:start="29:21" pos:end="29:33"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:27">vram</name><index pos:start="29:28" pos:end="29:33">[<expr pos:start="29:29" pos:end="29:32"><name pos:start="29:29" pos:end="29:32">addr</name></expr>]</index></name></expr></argument>, <argument pos:start="29:36" pos:end="29:45"><expr pos:start="29:36" pos:end="29:45"><name pos:start="29:36" pos:end="29:45"><name pos:start="29:36" pos:end="29:36">s</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:45">tmpblit</name></name></expr></argument>, <argument pos:start="29:48" pos:end="29:50"><expr pos:start="29:48" pos:end="29:50"><name pos:start="29:48" pos:end="29:50">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="45:13"><if pos:start="31:13" pos:end="45:13">if <condition pos:start="31:16" pos:end="31:31">(<expr pos:start="31:17" pos:end="31:30"><name pos:start="31:17" pos:end="31:24"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:24">depth</name></name> <operator pos:start="31:26" pos:end="31:27">==</operator> <literal type="number" pos:start="31:29" pos:end="31:30">24</literal></expr>)</condition> <block pos:start="31:33" pos:end="45:13">{<block_content pos:start="33:17" pos:end="43:17">

                <expr_stmt pos:start="33:17" pos:end="33:44"><expr pos:start="33:17" pos:end="33:43"><name pos:start="33:17" pos:end="33:19">val</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <name pos:start="33:23" pos:end="33:32"><name pos:start="33:23" pos:end="33:23">s</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:32">tmpblit</name></name> <operator pos:start="33:34" pos:end="33:34">&amp;</operator> <literal type="number" pos:start="33:36" pos:end="33:43">0xffffff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:39"><expr pos:start="35:17" pos:end="35:38"><name pos:start="35:17" pos:end="35:19">val</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:38"><name pos:start="35:23" pos:end="35:33">cpu_to_be32</name><argument_list pos:start="35:34" pos:end="35:38">(<argument pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:37">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="37:17" pos:end="43:17">for <control pos:start="37:21" pos:end="37:41">(<init pos:start="37:22" pos:end="37:27"><expr pos:start="37:22" pos:end="37:26"><name pos:start="37:22" pos:end="37:22">i</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr>;</init> <condition pos:start="37:29" pos:end="37:36"><expr pos:start="37:29" pos:end="37:35"><name pos:start="37:29" pos:end="37:29">i</name> <operator pos:start="37:31" pos:end="37:31">&lt;</operator> <name pos:start="37:33" pos:end="37:35">len</name></expr>;</condition> <incr pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><name pos:start="37:38" pos:end="37:38">i</name><operator pos:start="37:39" pos:end="37:40">++</operator></expr></incr>)</control> <block pos:start="37:43" pos:end="43:17">{<block_content pos:start="39:21" pos:end="41:46">

                    <expr_stmt pos:start="39:21" pos:end="39:46"><expr pos:start="39:21" pos:end="39:45"><name pos:start="39:21" pos:end="39:39"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:29">vram24</name><index pos:start="39:30" pos:end="39:39">[<expr pos:start="39:31" pos:end="39:38"><name pos:start="39:31" pos:end="39:34">addr</name> <operator pos:start="39:36" pos:end="39:36">+</operator> <name pos:start="39:38" pos:end="39:38">i</name></expr>]</index></name> <operator pos:start="39:41" pos:end="39:41">=</operator> <name pos:start="39:43" pos:end="39:45">val</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="41:21" pos:end="41:46"><expr pos:start="41:21" pos:end="41:45"><name pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:29">cplane</name><index pos:start="41:30" pos:end="41:39">[<expr pos:start="41:31" pos:end="41:38"><name pos:start="41:31" pos:end="41:34">addr</name> <operator pos:start="41:36" pos:end="41:36">+</operator> <name pos:start="41:38" pos:end="41:38">i</name></expr>]</index></name> <operator pos:start="41:41" pos:end="41:41">=</operator> <name pos:start="41:43" pos:end="41:45">val</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="59:9">else <block pos:start="47:16" pos:end="59:9">{<block_content pos:start="49:13" pos:end="57:13">

            <expr_stmt pos:start="49:13" pos:end="49:56"><expr pos:start="49:13" pos:end="49:55"><call pos:start="49:13" pos:end="49:55"><name pos:start="49:13" pos:end="49:18">memcpy</name><argument_list pos:start="49:19" pos:end="49:55">(<argument pos:start="49:20" pos:end="49:33"><expr pos:start="49:20" pos:end="49:33"><operator pos:start="49:20" pos:end="49:20">&amp;</operator><name pos:start="49:21" pos:end="49:33"><name pos:start="49:21" pos:end="49:21">s</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:27">vram</name><index pos:start="49:28" pos:end="49:33">[<expr pos:start="49:29" pos:end="49:32"><name pos:start="49:29" pos:end="49:32">addr</name></expr>]</index></name></expr></argument>, <argument pos:start="49:36" pos:end="49:49"><expr pos:start="49:36" pos:end="49:49"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:49"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:43">vram</name><index pos:start="49:44" pos:end="49:49">[<expr pos:start="49:45" pos:end="49:48"><name pos:start="49:45" pos:end="49:48">adsr</name></expr>]</index></name></expr></argument>, <argument pos:start="49:52" pos:end="49:54"><expr pos:start="49:52" pos:end="49:54"><name pos:start="49:52" pos:end="49:54">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="57:13"><if pos:start="51:13" pos:end="57:13">if <condition pos:start="51:16" pos:end="51:31">(<expr pos:start="51:17" pos:end="51:30"><name pos:start="51:17" pos:end="51:24"><name pos:start="51:17" pos:end="51:17">s</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:24">depth</name></name> <operator pos:start="51:26" pos:end="51:27">==</operator> <literal type="number" pos:start="51:29" pos:end="51:30">24</literal></expr>)</condition> <block pos:start="51:33" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:68">

                <expr_stmt pos:start="53:17" pos:end="53:68"><expr pos:start="53:17" pos:end="53:67"><call pos:start="53:17" pos:end="53:67"><name pos:start="53:17" pos:end="53:22">memcpy</name><argument_list pos:start="53:23" pos:end="53:67">(<argument pos:start="53:24" pos:end="53:39"><expr pos:start="53:24" pos:end="53:39"><operator pos:start="53:24" pos:end="53:24">&amp;</operator><name pos:start="53:25" pos:end="53:39"><name pos:start="53:25" pos:end="53:25">s</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:33">vram24</name><index pos:start="53:34" pos:end="53:39">[<expr pos:start="53:35" pos:end="53:38"><name pos:start="53:35" pos:end="53:38">addr</name></expr>]</index></name></expr></argument>, <argument pos:start="53:42" pos:end="53:57"><expr pos:start="53:42" pos:end="53:57"><operator pos:start="53:42" pos:end="53:42">&amp;</operator><name pos:start="53:43" pos:end="53:57"><name pos:start="53:43" pos:end="53:43">s</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:51">vram24</name><index pos:start="53:52" pos:end="53:57">[<expr pos:start="53:53" pos:end="53:56"><name pos:start="53:53" pos:end="53:56">adsr</name></expr>]</index></name></expr></argument>, <argument pos:start="53:60" pos:end="53:66"><expr pos:start="53:60" pos:end="53:66"><name pos:start="53:60" pos:end="53:62">len</name> <operator pos:start="53:64" pos:end="53:64">*</operator> <literal type="number" pos:start="53:66" pos:end="53:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:68"><expr pos:start="55:17" pos:end="55:67"><call pos:start="55:17" pos:end="55:67"><name pos:start="55:17" pos:end="55:22">memcpy</name><argument_list pos:start="55:23" pos:end="55:67">(<argument pos:start="55:24" pos:end="55:39"><expr pos:start="55:24" pos:end="55:39"><operator pos:start="55:24" pos:end="55:24">&amp;</operator><name pos:start="55:25" pos:end="55:39"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:33">cplane</name><index pos:start="55:34" pos:end="55:39">[<expr pos:start="55:35" pos:end="55:38"><name pos:start="55:35" pos:end="55:38">addr</name></expr>]</index></name></expr></argument>, <argument pos:start="55:42" pos:end="55:57"><expr pos:start="55:42" pos:end="55:57"><operator pos:start="55:42" pos:end="55:42">&amp;</operator><name pos:start="55:43" pos:end="55:57"><name pos:start="55:43" pos:end="55:43">s</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:51">cplane</name><index pos:start="55:52" pos:end="55:57">[<expr pos:start="55:53" pos:end="55:56"><name pos:start="55:53" pos:end="55:56">adsr</name></expr>]</index></name></expr></argument>, <argument pos:start="55:60" pos:end="55:66"><expr pos:start="55:60" pos:end="55:66"><name pos:start="55:60" pos:end="55:62">len</name> <operator pos:start="55:64" pos:end="55:64">*</operator> <literal type="number" pos:start="55:66" pos:end="55:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:57"><expr pos:start="61:9" pos:end="61:56"><call pos:start="61:9" pos:end="61:56"><name pos:start="61:9" pos:end="61:31">memory_region_set_dirty</name><argument_list pos:start="61:32" pos:end="61:56">(<argument pos:start="61:33" pos:end="61:44"><expr pos:start="61:33" pos:end="61:44"><operator pos:start="61:33" pos:end="61:33">&amp;</operator><name pos:start="61:34" pos:end="61:44"><name pos:start="61:34" pos:end="61:34">s</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:44">vram_mem</name></name></expr></argument>, <argument pos:start="61:47" pos:end="61:50"><expr pos:start="61:47" pos:end="61:50"><name pos:start="61:47" pos:end="61:50">addr</name></expr></argument>, <argument pos:start="61:53" pos:end="61:55"><expr pos:start="61:53" pos:end="61:55"><name pos:start="61:53" pos:end="61:55">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
