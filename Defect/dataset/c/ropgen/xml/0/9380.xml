<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9380.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">ppc_get_compat_smt_threads</name><parameter_list pos:start="1:31" pos:end="1:47">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:41">PowerPCCPU</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">cpu</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:33">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:25">= <expr pos:start="5:15" pos:end="5:25"><name pos:start="5:15" pos:end="5:25">smp_threads</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:53"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">PowerPCCPUClass</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">pcc</name> <init pos:start="7:26" pos:end="7:53">= <expr pos:start="7:28" pos:end="7:53"><call pos:start="7:28" pos:end="7:53"><name pos:start="7:28" pos:end="7:48">POWERPC_CPU_GET_CLASS</name><argument_list pos:start="7:49" pos:end="7:53">(<argument pos:start="7:50" pos:end="7:52"><expr pos:start="7:50" pos:end="7:52"><name pos:start="7:50" pos:end="7:52">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="45:5">switch <condition pos:start="11:12" pos:end="11:29">(<expr pos:start="11:13" pos:end="11:28"><name pos:start="11:13" pos:end="11:28"><name pos:start="11:13" pos:end="11:15">cpu</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:28">cpu_version</name></name></expr>)</condition> <block pos:start="11:31" pos:end="45:5">{<block_content pos:start="13:5" pos:end="43:14">

    <case pos:start="13:5" pos:end="13:34">case <expr pos:start="13:10" pos:end="13:33"><name pos:start="13:10" pos:end="13:33">CPU_POWERPC_LOGICAL_2_05</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:16"><expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <literal type="number" pos:start="15:15" pos:end="15:15">2</literal></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>

    <case pos:start="19:5" pos:end="19:34">case <expr pos:start="19:10" pos:end="19:33"><name pos:start="19:10" pos:end="19:33">CPU_POWERPC_LOGICAL_2_06</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <literal type="number" pos:start="21:15" pos:end="21:15">4</literal></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:34">case <expr pos:start="25:10" pos:end="25:33"><name pos:start="25:10" pos:end="25:33">CPU_POWERPC_LOGICAL_2_07</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <literal type="number" pos:start="27:15" pos:end="27:15">8</literal></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <default pos:start="31:5" pos:end="31:12">default:</default>

        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:44">(<expr pos:start="33:13" pos:end="33:43"><name pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:15">pcc</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:25">pcr_mask</name></name> <operator pos:start="33:27" pos:end="33:27">&amp;</operator> <name pos:start="33:29" pos:end="33:43">PCR_COMPAT_2_06</name></expr>)</condition> <block pos:start="33:46" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:20">

            <expr_stmt pos:start="35:13" pos:end="35:20"><expr pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <literal type="number" pos:start="35:19" pos:end="35:19">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="37:11" pos:end="41:9">else if <condition pos:start="37:19" pos:end="37:51">(<expr pos:start="37:20" pos:end="37:50"><name pos:start="37:20" pos:end="37:32"><name pos:start="37:20" pos:end="37:22">pcc</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:32">pcr_mask</name></name> <operator pos:start="37:34" pos:end="37:34">&amp;</operator> <name pos:start="37:36" pos:end="37:50">PCR_COMPAT_2_05</name></expr>)</condition> <block pos:start="37:53" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:20">

            <expr_stmt pos:start="39:13" pos:end="39:20"><expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <literal type="number" pos:start="39:19" pos:end="39:19">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="49:5" pos:end="49:33">return <expr pos:start="49:12" pos:end="49:32"><call pos:start="49:12" pos:end="49:32"><name pos:start="49:12" pos:end="49:14">MIN</name><argument_list pos:start="49:15" pos:end="49:32">(<argument pos:start="49:16" pos:end="49:18"><expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">ret</name></expr></argument>, <argument pos:start="49:21" pos:end="49:31"><expr pos:start="49:21" pos:end="49:31"><name pos:start="49:21" pos:end="49:31">smp_threads</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
