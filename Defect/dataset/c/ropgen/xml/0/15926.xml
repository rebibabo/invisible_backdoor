<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15926.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">sparc64_set_context</name><parameter_list pos:start="1:25" pos:end="1:44">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:40"><name pos:start="1:26" pos:end="1:38">CPUSPARCState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="197:1">{<block_content pos:start="5:5" pos:end="195:30">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">abi_ulong</name></type> <name pos:start="5:15" pos:end="5:22">ucp_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:26">target_ucontext</name></name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:31">ucp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">target_mc_gregset_t</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:28">grp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">abi_ulong</name></type> <name pos:start="11:15" pos:end="11:16">pc</name></decl>, <decl pos:start="11:19" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:13"/><name pos:start="11:19" pos:end="11:21">npc</name></decl>, <decl pos:start="11:24" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:13"/><name pos:start="11:24" pos:end="11:29">tstate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">abi_ulong</name></type> <name pos:start="13:15" pos:end="13:16">fp</name></decl>, <decl pos:start="13:19" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:13"/><name pos:start="13:19" pos:end="13:20">i7</name></decl>, <decl pos:start="13:23" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:13"/><name pos:start="13:23" pos:end="13:28">w_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:18">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:12">ucp_addr</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:36"><name pos:start="21:16" pos:end="21:18">env</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:27">regwptr</name><index pos:start="21:28" pos:end="21:36">[<expr pos:start="21:29" pos:end="21:35"><name pos:start="21:29" pos:end="21:35">UREG_I0</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:24"><if pos:start="23:5" pos:end="25:24">if <condition pos:start="23:8" pos:end="23:57">(<expr pos:start="23:9" pos:end="23:56"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:56"><name pos:start="23:10" pos:end="23:25">lock_user_struct</name><argument_list pos:start="23:26" pos:end="23:56">(<argument pos:start="23:27" pos:end="23:37"><expr pos:start="23:27" pos:end="23:37"><name pos:start="23:27" pos:end="23:37">VERIFY_READ</name></expr></argument>, <argument pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><name pos:start="23:40" pos:end="23:42">ucp</name></expr></argument>, <argument pos:start="23:45" pos:end="23:52"><expr pos:start="23:45" pos:end="23:52"><name pos:start="23:45" pos:end="23:52">ucp_addr</name></expr></argument>, <argument pos:start="23:55" pos:end="23:55"><expr pos:start="23:55" pos:end="23:55"><literal type="number" pos:start="23:55" pos:end="23:55">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:24"><block_content pos:start="25:9" pos:end="25:24">

        <goto pos:start="25:9" pos:end="25:24">goto <name pos:start="25:14" pos:end="25:23">do_sigsegv</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:7">grp</name>  <operator pos:start="27:10" pos:end="27:10">=</operator> <operator pos:start="27:12" pos:end="27:12">&amp;</operator><name pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:15">ucp</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:29">tuc_mcontext</name><operator pos:start="27:30" pos:end="27:30">.</operator><name pos:start="27:31" pos:end="27:38">mc_gregs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:44"><expr pos:start="29:5" pos:end="29:43"><name pos:start="29:5" pos:end="29:7">err</name>  <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:43"><name pos:start="29:12" pos:end="29:21">__get_user</name><argument_list pos:start="29:22" pos:end="29:43">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">pc</name></expr></argument>, <argument pos:start="29:27" pos:end="29:42"><expr pos:start="29:27" pos:end="29:42"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><operator pos:start="29:28" pos:end="29:28">(</operator><operator pos:start="29:29" pos:end="29:29">(</operator><operator pos:start="29:30" pos:end="29:30">*</operator><name pos:start="29:31" pos:end="29:33">grp</name><operator pos:start="29:34" pos:end="29:34">)</operator><index pos:start="29:35" pos:end="29:41">[<expr pos:start="29:36" pos:end="29:40"><name pos:start="29:36" pos:end="29:40">MC_PC</name></expr>]</index><operator pos:start="29:42" pos:end="29:42">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:7">err</name> <operator pos:start="31:9" pos:end="31:10">|=</operator> <call pos:start="31:12" pos:end="31:45"><name pos:start="31:12" pos:end="31:21">__get_user</name><argument_list pos:start="31:22" pos:end="31:45">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">npc</name></expr></argument>, <argument pos:start="31:28" pos:end="31:44"><expr pos:start="31:28" pos:end="31:44"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><operator pos:start="31:29" pos:end="31:29">(</operator><operator pos:start="31:30" pos:end="31:30">(</operator><operator pos:start="31:31" pos:end="31:31">*</operator><name pos:start="31:32" pos:end="31:34">grp</name><operator pos:start="31:35" pos:end="31:35">)</operator><index pos:start="31:36" pos:end="31:43">[<expr pos:start="31:37" pos:end="31:42"><name pos:start="31:37" pos:end="31:42">MC_NPC</name></expr>]</index><operator pos:start="31:44" pos:end="31:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:24"><if pos:start="33:5" pos:end="35:24">if <condition pos:start="33:8" pos:end="33:32">(<expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:11">err</name> <operator pos:start="33:13" pos:end="33:14">||</operator> <operator pos:start="33:16" pos:end="33:16">(</operator><operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:19">pc</name> <operator pos:start="33:21" pos:end="33:21">|</operator> <name pos:start="33:23" pos:end="33:25">npc</name><operator pos:start="33:26" pos:end="33:26">)</operator> <operator pos:start="33:28" pos:end="33:28">&amp;</operator> <literal type="number" pos:start="33:30" pos:end="33:30">3</literal><operator pos:start="33:31" pos:end="33:31">)</operator></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:24"><block_content pos:start="35:9" pos:end="35:24">

        <goto pos:start="35:9" pos:end="35:24">goto <name pos:start="35:14" pos:end="35:23">do_sigsegv</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="75:5"><if pos:start="37:5" pos:end="75:5">if <condition pos:start="37:8" pos:end="37:30">(<expr pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:11">env</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:20">regwptr</name><index pos:start="37:21" pos:end="37:29">[<expr pos:start="37:22" pos:end="37:28"><name pos:start="37:22" pos:end="37:28">UREG_I1</name></expr>]</index></name></expr>)</condition> <block pos:start="37:32" pos:end="75:5">{<block_content pos:start="39:9" pos:end="73:45">

        <decl_stmt pos:start="39:9" pos:end="39:35"><decl pos:start="39:9" pos:end="39:34"><type pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:23">target_sigset_t</name></type> <name pos:start="39:25" pos:end="39:34">target_set</name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:21"><decl pos:start="41:9" pos:end="41:20"><type pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16">sigset_t</name></type> <name pos:start="41:18" pos:end="41:20">set</name></decl>;</decl_stmt>



        <if_stmt pos:start="45:9" pos:end="69:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:35">(<expr pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:29">TARGET_NSIG_WORDS</name> <operator pos:start="45:31" pos:end="45:32">==</operator> <literal type="number" pos:start="45:34" pos:end="45:34">1</literal></expr>)</condition> <block pos:start="45:37" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:32">

            <if_stmt pos:start="47:13" pos:end="49:32"><if pos:start="47:13" pos:end="49:32">if <condition pos:start="47:16" pos:end="47:72">(<expr pos:start="47:17" pos:end="47:71"><call pos:start="47:17" pos:end="47:71"><name pos:start="47:17" pos:end="47:26">__get_user</name><argument_list pos:start="47:27" pos:end="47:71">(<argument pos:start="47:28" pos:end="47:44"><expr pos:start="47:28" pos:end="47:44"><name pos:start="47:28" pos:end="47:44"><name pos:start="47:28" pos:end="47:37">target_set</name><operator pos:start="47:38" pos:end="47:38">.</operator><name pos:start="47:39" pos:end="47:41">sig</name><index pos:start="47:42" pos:end="47:44">[<expr pos:start="47:43" pos:end="47:43"><literal type="number" pos:start="47:43" pos:end="47:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:47" pos:end="47:70"><expr pos:start="47:47" pos:end="47:70"><operator pos:start="47:47" pos:end="47:47">&amp;</operator><name pos:start="47:48" pos:end="47:70"><name pos:start="47:48" pos:end="47:50">ucp</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:63">tuc_sigmask</name><operator pos:start="47:64" pos:end="47:64">.</operator><name pos:start="47:65" pos:end="47:67">sig</name><index pos:start="47:68" pos:end="47:70">[<expr pos:start="47:69" pos:end="47:69"><literal type="number" pos:start="47:69" pos:end="47:69">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:32"><block_content pos:start="49:17" pos:end="49:32">

                <goto pos:start="49:17" pos:end="49:32">goto <name pos:start="49:22" pos:end="49:31">do_sigsegv</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="69:9">else <block pos:start="51:16" pos:end="69:9">{<block_content pos:start="53:13" pos:end="67:32">

            <decl_stmt pos:start="53:13" pos:end="53:33"><decl pos:start="53:13" pos:end="53:26"><type pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:21">abi_ulong</name> <modifier pos:start="53:23" pos:end="53:23">*</modifier></type><name pos:start="53:24" pos:end="53:26">src</name></decl>, <decl pos:start="53:29" pos:end="53:32"><type ref="prev" pos:start="53:13" pos:end="53:23"><modifier pos:start="53:29" pos:end="53:29">*</modifier></type><name pos:start="53:30" pos:end="53:32">dst</name></decl>;</decl_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:39"><expr pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:15">src</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:38"><name pos:start="55:19" pos:end="55:21">ucp</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:34">tuc_sigmask</name><operator pos:start="55:35" pos:end="55:35">.</operator><name pos:start="55:36" pos:end="55:38">sig</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:33"><expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:15">dst</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:32"><name pos:start="57:19" pos:end="57:28">target_set</name><operator pos:start="57:29" pos:end="57:29">.</operator><name pos:start="57:30" pos:end="57:32">sig</name></name></expr>;</expr_stmt>

            <for pos:start="59:13" pos:end="63:13">for <control pos:start="59:17" pos:end="59:65">(<init pos:start="59:18" pos:end="59:23"><expr pos:start="59:18" pos:end="59:22"><name pos:start="59:18" pos:end="59:18">i</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</init> <condition pos:start="59:25" pos:end="59:46"><expr pos:start="59:25" pos:end="59:45"><name pos:start="59:25" pos:end="59:25">i</name> <operator pos:start="59:27" pos:end="59:27">&lt;</operator> <name pos:start="59:29" pos:end="59:45">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="59:48" pos:end="59:64"><expr pos:start="59:48" pos:end="59:50"><name pos:start="59:48" pos:end="59:48">i</name><operator pos:start="59:49" pos:end="59:50">++</operator></expr><operator pos:start="59:51" pos:end="59:51">,</operator> <expr pos:start="59:53" pos:end="59:57"><name pos:start="59:53" pos:end="59:55">dst</name><operator pos:start="59:56" pos:end="59:57">++</operator></expr><operator pos:start="59:58" pos:end="59:58">,</operator> <expr pos:start="59:60" pos:end="59:64"><name pos:start="59:60" pos:end="59:62">src</name><operator pos:start="59:63" pos:end="59:64">++</operator></expr></incr>)</control> <block pos:start="59:67" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:45">

                <expr_stmt pos:start="61:17" pos:end="61:45"><expr pos:start="61:17" pos:end="61:44"><name pos:start="61:17" pos:end="61:19">err</name> <operator pos:start="61:21" pos:end="61:22">|=</operator> <call pos:start="61:24" pos:end="61:44"><name pos:start="61:24" pos:end="61:33">__get_user</name><argument_list pos:start="61:34" pos:end="61:44">(<argument pos:start="61:35" pos:end="61:38"><expr pos:start="61:35" pos:end="61:38"><operator pos:start="61:35" pos:end="61:35">*</operator><name pos:start="61:36" pos:end="61:38">dst</name></expr></argument>, <argument pos:start="61:41" pos:end="61:43"><expr pos:start="61:41" pos:end="61:43"><name pos:start="61:41" pos:end="61:43">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="65:13" pos:end="67:32"><if pos:start="65:13" pos:end="67:32">if <condition pos:start="65:16" pos:end="65:20">(<expr pos:start="65:17" pos:end="65:19"><name pos:start="65:17" pos:end="65:19">err</name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:32"><block_content pos:start="67:17" pos:end="67:32">

                <goto pos:start="67:17" pos:end="67:32">goto <name pos:start="67:22" pos:end="67:31">do_sigsegv</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:58"><expr pos:start="71:9" pos:end="71:57"><call pos:start="71:9" pos:end="71:57"><name pos:start="71:9" pos:end="71:38">target_to_host_sigset_internal</name><argument_list pos:start="71:39" pos:end="71:57">(<argument pos:start="71:40" pos:end="71:43"><expr pos:start="71:40" pos:end="71:43"><operator pos:start="71:40" pos:end="71:40">&amp;</operator><name pos:start="71:41" pos:end="71:43">set</name></expr></argument>, <argument pos:start="71:46" pos:end="71:56"><expr pos:start="71:46" pos:end="71:56"><operator pos:start="71:46" pos:end="71:46">&amp;</operator><name pos:start="71:47" pos:end="71:56">target_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:45"><expr pos:start="73:9" pos:end="73:44"><call pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:19">sigprocmask</name><argument_list pos:start="73:20" pos:end="73:44">(<argument pos:start="73:21" pos:end="73:31"><expr pos:start="73:21" pos:end="73:31"><name pos:start="73:21" pos:end="73:31">SIG_SETMASK</name></expr></argument>, <argument pos:start="73:34" pos:end="73:37"><expr pos:start="73:34" pos:end="73:37"><operator pos:start="73:34" pos:end="73:34">&amp;</operator><name pos:start="73:35" pos:end="73:37">set</name></expr></argument>, <argument pos:start="73:40" pos:end="73:43"><expr pos:start="73:40" pos:end="73:43"><name pos:start="73:40" pos:end="73:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:17"><expr pos:start="77:5" pos:end="77:16"><name pos:start="77:5" pos:end="77:11"><name pos:start="77:5" pos:end="77:7">env</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:11">pc</name></name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:16">pc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:19"><expr pos:start="79:5" pos:end="79:18"><name pos:start="79:5" pos:end="79:12"><name pos:start="79:5" pos:end="79:7">env</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:12">npc</name></name> <operator pos:start="79:14" pos:end="79:14">=</operator> <name pos:start="79:16" pos:end="79:18">npc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:47"><expr pos:start="81:5" pos:end="81:46"><name pos:start="81:5" pos:end="81:7">err</name> <operator pos:start="81:9" pos:end="81:10">|=</operator> <call pos:start="81:12" pos:end="81:46"><name pos:start="81:12" pos:end="81:21">__get_user</name><argument_list pos:start="81:22" pos:end="81:46">(<argument pos:start="81:23" pos:end="81:28"><expr pos:start="81:23" pos:end="81:28"><name pos:start="81:23" pos:end="81:28"><name pos:start="81:23" pos:end="81:25">env</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:28">y</name></name></expr></argument>, <argument pos:start="81:31" pos:end="81:45"><expr pos:start="81:31" pos:end="81:45"><operator pos:start="81:31" pos:end="81:31">&amp;</operator><operator pos:start="81:32" pos:end="81:32">(</operator><operator pos:start="81:33" pos:end="81:33">(</operator><operator pos:start="81:34" pos:end="81:34">*</operator><name pos:start="81:35" pos:end="81:37">grp</name><operator pos:start="81:38" pos:end="81:38">)</operator><index pos:start="81:39" pos:end="81:44">[<expr pos:start="81:40" pos:end="81:43"><name pos:start="81:40" pos:end="81:43">MC_Y</name></expr>]</index><operator pos:start="81:45" pos:end="81:45">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:52"><expr pos:start="83:5" pos:end="83:51"><name pos:start="83:5" pos:end="83:7">err</name> <operator pos:start="83:9" pos:end="83:10">|=</operator> <call pos:start="83:12" pos:end="83:51"><name pos:start="83:12" pos:end="83:21">__get_user</name><argument_list pos:start="83:22" pos:end="83:51">(<argument pos:start="83:23" pos:end="83:28"><expr pos:start="83:23" pos:end="83:28"><name pos:start="83:23" pos:end="83:28">tstate</name></expr></argument>, <argument pos:start="83:31" pos:end="83:50"><expr pos:start="83:31" pos:end="83:50"><operator pos:start="83:31" pos:end="83:31">&amp;</operator><operator pos:start="83:32" pos:end="83:32">(</operator><operator pos:start="83:33" pos:end="83:33">(</operator><operator pos:start="83:34" pos:end="83:34">*</operator><name pos:start="83:35" pos:end="83:37">grp</name><operator pos:start="83:38" pos:end="83:38">)</operator><index pos:start="83:39" pos:end="83:49">[<expr pos:start="83:40" pos:end="83:48"><name pos:start="83:40" pos:end="83:48">MC_TSTATE</name></expr>]</index><operator pos:start="83:50" pos:end="83:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:37"><expr pos:start="85:5" pos:end="85:36"><name pos:start="85:5" pos:end="85:12"><name pos:start="85:5" pos:end="85:7">env</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:12">asi</name></name> <operator pos:start="85:14" pos:end="85:14">=</operator> <operator pos:start="85:16" pos:end="85:16">(</operator><name pos:start="85:17" pos:end="85:22">tstate</name> <operator pos:start="85:24" pos:end="85:25">&gt;&gt;</operator> <literal type="number" pos:start="85:27" pos:end="85:28">24</literal><operator pos:start="85:29" pos:end="85:29">)</operator> <operator pos:start="85:31" pos:end="85:31">&amp;</operator> <literal type="number" pos:start="85:33" pos:end="85:36">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:35"><expr pos:start="87:5" pos:end="87:34"><call pos:start="87:5" pos:end="87:34"><name pos:start="87:5" pos:end="87:15">cpu_put_ccr</name><argument_list pos:start="87:16" pos:end="87:34">(<argument pos:start="87:17" pos:end="87:19"><expr pos:start="87:17" pos:end="87:19"><name pos:start="87:17" pos:end="87:19">env</name></expr></argument>, <argument pos:start="87:22" pos:end="87:33"><expr pos:start="87:22" pos:end="87:33"><name pos:start="87:22" pos:end="87:27">tstate</name> <operator pos:start="87:29" pos:end="87:30">&gt;&gt;</operator> <literal type="number" pos:start="87:32" pos:end="87:33">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:38"><expr pos:start="89:5" pos:end="89:37"><call pos:start="89:5" pos:end="89:37"><name pos:start="89:5" pos:end="89:17">cpu_put_cwp64</name><argument_list pos:start="89:18" pos:end="89:37">(<argument pos:start="89:19" pos:end="89:21"><expr pos:start="89:19" pos:end="89:21"><name pos:start="89:19" pos:end="89:21">env</name></expr></argument>, <argument pos:start="89:24" pos:end="89:36"><expr pos:start="89:24" pos:end="89:36"><name pos:start="89:24" pos:end="89:29">tstate</name> <operator pos:start="89:31" pos:end="89:31">&amp;</operator> <literal type="number" pos:start="89:33" pos:end="89:36">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:55"><expr pos:start="91:5" pos:end="91:54"><name pos:start="91:5" pos:end="91:7">err</name> <operator pos:start="91:9" pos:end="91:10">|=</operator> <call pos:start="91:12" pos:end="91:54"><name pos:start="91:12" pos:end="91:21">__get_user</name><argument_list pos:start="91:22" pos:end="91:54">(<argument pos:start="91:23" pos:end="91:35"><expr pos:start="91:23" pos:end="91:35"><name pos:start="91:23" pos:end="91:35"><name pos:start="91:23" pos:end="91:25">env</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:32">gregs</name><index pos:start="91:33" pos:end="91:35">[<expr pos:start="91:34" pos:end="91:34"><literal type="number" pos:start="91:34" pos:end="91:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="91:38" pos:end="91:53"><expr pos:start="91:38" pos:end="91:53"><operator pos:start="91:38" pos:end="91:38">(</operator><operator pos:start="91:39" pos:end="91:39">&amp;</operator><operator pos:start="91:40" pos:end="91:40">(</operator><operator pos:start="91:41" pos:end="91:41">*</operator><name pos:start="91:42" pos:end="91:44">grp</name><operator pos:start="91:45" pos:end="91:45">)</operator><index pos:start="91:46" pos:end="91:52">[<expr pos:start="91:47" pos:end="91:51"><name pos:start="91:47" pos:end="91:51">MC_G1</name></expr>]</index><operator pos:start="91:53" pos:end="91:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:55"><expr pos:start="93:5" pos:end="93:54"><name pos:start="93:5" pos:end="93:7">err</name> <operator pos:start="93:9" pos:end="93:10">|=</operator> <call pos:start="93:12" pos:end="93:54"><name pos:start="93:12" pos:end="93:21">__get_user</name><argument_list pos:start="93:22" pos:end="93:54">(<argument pos:start="93:23" pos:end="93:35"><expr pos:start="93:23" pos:end="93:35"><name pos:start="93:23" pos:end="93:35"><name pos:start="93:23" pos:end="93:25">env</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:32">gregs</name><index pos:start="93:33" pos:end="93:35">[<expr pos:start="93:34" pos:end="93:34"><literal type="number" pos:start="93:34" pos:end="93:34">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="93:38" pos:end="93:53"><expr pos:start="93:38" pos:end="93:53"><operator pos:start="93:38" pos:end="93:38">(</operator><operator pos:start="93:39" pos:end="93:39">&amp;</operator><operator pos:start="93:40" pos:end="93:40">(</operator><operator pos:start="93:41" pos:end="93:41">*</operator><name pos:start="93:42" pos:end="93:44">grp</name><operator pos:start="93:45" pos:end="93:45">)</operator><index pos:start="93:46" pos:end="93:52">[<expr pos:start="93:47" pos:end="93:51"><name pos:start="93:47" pos:end="93:51">MC_G2</name></expr>]</index><operator pos:start="93:53" pos:end="93:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:55"><expr pos:start="95:5" pos:end="95:54"><name pos:start="95:5" pos:end="95:7">err</name> <operator pos:start="95:9" pos:end="95:10">|=</operator> <call pos:start="95:12" pos:end="95:54"><name pos:start="95:12" pos:end="95:21">__get_user</name><argument_list pos:start="95:22" pos:end="95:54">(<argument pos:start="95:23" pos:end="95:35"><expr pos:start="95:23" pos:end="95:35"><name pos:start="95:23" pos:end="95:35"><name pos:start="95:23" pos:end="95:25">env</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:32">gregs</name><index pos:start="95:33" pos:end="95:35">[<expr pos:start="95:34" pos:end="95:34"><literal type="number" pos:start="95:34" pos:end="95:34">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="95:38" pos:end="95:53"><expr pos:start="95:38" pos:end="95:53"><operator pos:start="95:38" pos:end="95:38">(</operator><operator pos:start="95:39" pos:end="95:39">&amp;</operator><operator pos:start="95:40" pos:end="95:40">(</operator><operator pos:start="95:41" pos:end="95:41">*</operator><name pos:start="95:42" pos:end="95:44">grp</name><operator pos:start="95:45" pos:end="95:45">)</operator><index pos:start="95:46" pos:end="95:52">[<expr pos:start="95:47" pos:end="95:51"><name pos:start="95:47" pos:end="95:51">MC_G3</name></expr>]</index><operator pos:start="95:53" pos:end="95:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:55"><expr pos:start="97:5" pos:end="97:54"><name pos:start="97:5" pos:end="97:7">err</name> <operator pos:start="97:9" pos:end="97:10">|=</operator> <call pos:start="97:12" pos:end="97:54"><name pos:start="97:12" pos:end="97:21">__get_user</name><argument_list pos:start="97:22" pos:end="97:54">(<argument pos:start="97:23" pos:end="97:35"><expr pos:start="97:23" pos:end="97:35"><name pos:start="97:23" pos:end="97:35"><name pos:start="97:23" pos:end="97:25">env</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:32">gregs</name><index pos:start="97:33" pos:end="97:35">[<expr pos:start="97:34" pos:end="97:34"><literal type="number" pos:start="97:34" pos:end="97:34">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:38" pos:end="97:53"><expr pos:start="97:38" pos:end="97:53"><operator pos:start="97:38" pos:end="97:38">(</operator><operator pos:start="97:39" pos:end="97:39">&amp;</operator><operator pos:start="97:40" pos:end="97:40">(</operator><operator pos:start="97:41" pos:end="97:41">*</operator><name pos:start="97:42" pos:end="97:44">grp</name><operator pos:start="97:45" pos:end="97:45">)</operator><index pos:start="97:46" pos:end="97:52">[<expr pos:start="97:47" pos:end="97:51"><name pos:start="97:47" pos:end="97:51">MC_G4</name></expr>]</index><operator pos:start="97:53" pos:end="97:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:55"><expr pos:start="99:5" pos:end="99:54"><name pos:start="99:5" pos:end="99:7">err</name> <operator pos:start="99:9" pos:end="99:10">|=</operator> <call pos:start="99:12" pos:end="99:54"><name pos:start="99:12" pos:end="99:21">__get_user</name><argument_list pos:start="99:22" pos:end="99:54">(<argument pos:start="99:23" pos:end="99:35"><expr pos:start="99:23" pos:end="99:35"><name pos:start="99:23" pos:end="99:35"><name pos:start="99:23" pos:end="99:25">env</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:32">gregs</name><index pos:start="99:33" pos:end="99:35">[<expr pos:start="99:34" pos:end="99:34"><literal type="number" pos:start="99:34" pos:end="99:34">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="99:38" pos:end="99:53"><expr pos:start="99:38" pos:end="99:53"><operator pos:start="99:38" pos:end="99:38">(</operator><operator pos:start="99:39" pos:end="99:39">&amp;</operator><operator pos:start="99:40" pos:end="99:40">(</operator><operator pos:start="99:41" pos:end="99:41">*</operator><name pos:start="99:42" pos:end="99:44">grp</name><operator pos:start="99:45" pos:end="99:45">)</operator><index pos:start="99:46" pos:end="99:52">[<expr pos:start="99:47" pos:end="99:51"><name pos:start="99:47" pos:end="99:51">MC_G5</name></expr>]</index><operator pos:start="99:53" pos:end="99:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:55"><expr pos:start="101:5" pos:end="101:54"><name pos:start="101:5" pos:end="101:7">err</name> <operator pos:start="101:9" pos:end="101:10">|=</operator> <call pos:start="101:12" pos:end="101:54"><name pos:start="101:12" pos:end="101:21">__get_user</name><argument_list pos:start="101:22" pos:end="101:54">(<argument pos:start="101:23" pos:end="101:35"><expr pos:start="101:23" pos:end="101:35"><name pos:start="101:23" pos:end="101:35"><name pos:start="101:23" pos:end="101:25">env</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:32">gregs</name><index pos:start="101:33" pos:end="101:35">[<expr pos:start="101:34" pos:end="101:34"><literal type="number" pos:start="101:34" pos:end="101:34">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:38" pos:end="101:53"><expr pos:start="101:38" pos:end="101:53"><operator pos:start="101:38" pos:end="101:38">(</operator><operator pos:start="101:39" pos:end="101:39">&amp;</operator><operator pos:start="101:40" pos:end="101:40">(</operator><operator pos:start="101:41" pos:end="101:41">*</operator><name pos:start="101:42" pos:end="101:44">grp</name><operator pos:start="101:45" pos:end="101:45">)</operator><index pos:start="101:46" pos:end="101:52">[<expr pos:start="101:47" pos:end="101:51"><name pos:start="101:47" pos:end="101:51">MC_G6</name></expr>]</index><operator pos:start="101:53" pos:end="101:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:55"><expr pos:start="103:5" pos:end="103:54"><name pos:start="103:5" pos:end="103:7">err</name> <operator pos:start="103:9" pos:end="103:10">|=</operator> <call pos:start="103:12" pos:end="103:54"><name pos:start="103:12" pos:end="103:21">__get_user</name><argument_list pos:start="103:22" pos:end="103:54">(<argument pos:start="103:23" pos:end="103:35"><expr pos:start="103:23" pos:end="103:35"><name pos:start="103:23" pos:end="103:35"><name pos:start="103:23" pos:end="103:25">env</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:32">gregs</name><index pos:start="103:33" pos:end="103:35">[<expr pos:start="103:34" pos:end="103:34"><literal type="number" pos:start="103:34" pos:end="103:34">7</literal></expr>]</index></name></expr></argument>, <argument pos:start="103:38" pos:end="103:53"><expr pos:start="103:38" pos:end="103:53"><operator pos:start="103:38" pos:end="103:38">(</operator><operator pos:start="103:39" pos:end="103:39">&amp;</operator><operator pos:start="103:40" pos:end="103:40">(</operator><operator pos:start="103:41" pos:end="103:41">*</operator><name pos:start="103:42" pos:end="103:44">grp</name><operator pos:start="103:45" pos:end="103:45">)</operator><index pos:start="103:46" pos:end="103:52">[<expr pos:start="103:47" pos:end="103:51"><name pos:start="103:47" pos:end="103:51">MC_G7</name></expr>]</index><operator pos:start="103:53" pos:end="103:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:63"><expr pos:start="105:5" pos:end="105:62"><name pos:start="105:5" pos:end="105:7">err</name> <operator pos:start="105:9" pos:end="105:10">|=</operator> <call pos:start="105:12" pos:end="105:62"><name pos:start="105:12" pos:end="105:21">__get_user</name><argument_list pos:start="105:22" pos:end="105:62">(<argument pos:start="105:23" pos:end="105:43"><expr pos:start="105:23" pos:end="105:43"><name pos:start="105:23" pos:end="105:43"><name pos:start="105:23" pos:end="105:25">env</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:34">regwptr</name><index pos:start="105:35" pos:end="105:43">[<expr pos:start="105:36" pos:end="105:42"><name pos:start="105:36" pos:end="105:42">UREG_I0</name></expr>]</index></name></expr></argument>, <argument pos:start="105:46" pos:end="105:61"><expr pos:start="105:46" pos:end="105:61"><operator pos:start="105:46" pos:end="105:46">(</operator><operator pos:start="105:47" pos:end="105:47">&amp;</operator><operator pos:start="105:48" pos:end="105:48">(</operator><operator pos:start="105:49" pos:end="105:49">*</operator><name pos:start="105:50" pos:end="105:52">grp</name><operator pos:start="105:53" pos:end="105:53">)</operator><index pos:start="105:54" pos:end="105:60">[<expr pos:start="105:55" pos:end="105:59"><name pos:start="105:55" pos:end="105:59">MC_O0</name></expr>]</index><operator pos:start="105:61" pos:end="105:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:63"><expr pos:start="107:5" pos:end="107:62"><name pos:start="107:5" pos:end="107:7">err</name> <operator pos:start="107:9" pos:end="107:10">|=</operator> <call pos:start="107:12" pos:end="107:62"><name pos:start="107:12" pos:end="107:21">__get_user</name><argument_list pos:start="107:22" pos:end="107:62">(<argument pos:start="107:23" pos:end="107:43"><expr pos:start="107:23" pos:end="107:43"><name pos:start="107:23" pos:end="107:43"><name pos:start="107:23" pos:end="107:25">env</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:34">regwptr</name><index pos:start="107:35" pos:end="107:43">[<expr pos:start="107:36" pos:end="107:42"><name pos:start="107:36" pos:end="107:42">UREG_I1</name></expr>]</index></name></expr></argument>, <argument pos:start="107:46" pos:end="107:61"><expr pos:start="107:46" pos:end="107:61"><operator pos:start="107:46" pos:end="107:46">(</operator><operator pos:start="107:47" pos:end="107:47">&amp;</operator><operator pos:start="107:48" pos:end="107:48">(</operator><operator pos:start="107:49" pos:end="107:49">*</operator><name pos:start="107:50" pos:end="107:52">grp</name><operator pos:start="107:53" pos:end="107:53">)</operator><index pos:start="107:54" pos:end="107:60">[<expr pos:start="107:55" pos:end="107:59"><name pos:start="107:55" pos:end="107:59">MC_O1</name></expr>]</index><operator pos:start="107:61" pos:end="107:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:63"><expr pos:start="109:5" pos:end="109:62"><name pos:start="109:5" pos:end="109:7">err</name> <operator pos:start="109:9" pos:end="109:10">|=</operator> <call pos:start="109:12" pos:end="109:62"><name pos:start="109:12" pos:end="109:21">__get_user</name><argument_list pos:start="109:22" pos:end="109:62">(<argument pos:start="109:23" pos:end="109:43"><expr pos:start="109:23" pos:end="109:43"><name pos:start="109:23" pos:end="109:43"><name pos:start="109:23" pos:end="109:25">env</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:34">regwptr</name><index pos:start="109:35" pos:end="109:43">[<expr pos:start="109:36" pos:end="109:42"><name pos:start="109:36" pos:end="109:42">UREG_I2</name></expr>]</index></name></expr></argument>, <argument pos:start="109:46" pos:end="109:61"><expr pos:start="109:46" pos:end="109:61"><operator pos:start="109:46" pos:end="109:46">(</operator><operator pos:start="109:47" pos:end="109:47">&amp;</operator><operator pos:start="109:48" pos:end="109:48">(</operator><operator pos:start="109:49" pos:end="109:49">*</operator><name pos:start="109:50" pos:end="109:52">grp</name><operator pos:start="109:53" pos:end="109:53">)</operator><index pos:start="109:54" pos:end="109:60">[<expr pos:start="109:55" pos:end="109:59"><name pos:start="109:55" pos:end="109:59">MC_O2</name></expr>]</index><operator pos:start="109:61" pos:end="109:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:63"><expr pos:start="111:5" pos:end="111:62"><name pos:start="111:5" pos:end="111:7">err</name> <operator pos:start="111:9" pos:end="111:10">|=</operator> <call pos:start="111:12" pos:end="111:62"><name pos:start="111:12" pos:end="111:21">__get_user</name><argument_list pos:start="111:22" pos:end="111:62">(<argument pos:start="111:23" pos:end="111:43"><expr pos:start="111:23" pos:end="111:43"><name pos:start="111:23" pos:end="111:43"><name pos:start="111:23" pos:end="111:25">env</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:34">regwptr</name><index pos:start="111:35" pos:end="111:43">[<expr pos:start="111:36" pos:end="111:42"><name pos:start="111:36" pos:end="111:42">UREG_I3</name></expr>]</index></name></expr></argument>, <argument pos:start="111:46" pos:end="111:61"><expr pos:start="111:46" pos:end="111:61"><operator pos:start="111:46" pos:end="111:46">(</operator><operator pos:start="111:47" pos:end="111:47">&amp;</operator><operator pos:start="111:48" pos:end="111:48">(</operator><operator pos:start="111:49" pos:end="111:49">*</operator><name pos:start="111:50" pos:end="111:52">grp</name><operator pos:start="111:53" pos:end="111:53">)</operator><index pos:start="111:54" pos:end="111:60">[<expr pos:start="111:55" pos:end="111:59"><name pos:start="111:55" pos:end="111:59">MC_O3</name></expr>]</index><operator pos:start="111:61" pos:end="111:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:63"><expr pos:start="113:5" pos:end="113:62"><name pos:start="113:5" pos:end="113:7">err</name> <operator pos:start="113:9" pos:end="113:10">|=</operator> <call pos:start="113:12" pos:end="113:62"><name pos:start="113:12" pos:end="113:21">__get_user</name><argument_list pos:start="113:22" pos:end="113:62">(<argument pos:start="113:23" pos:end="113:43"><expr pos:start="113:23" pos:end="113:43"><name pos:start="113:23" pos:end="113:43"><name pos:start="113:23" pos:end="113:25">env</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:34">regwptr</name><index pos:start="113:35" pos:end="113:43">[<expr pos:start="113:36" pos:end="113:42"><name pos:start="113:36" pos:end="113:42">UREG_I4</name></expr>]</index></name></expr></argument>, <argument pos:start="113:46" pos:end="113:61"><expr pos:start="113:46" pos:end="113:61"><operator pos:start="113:46" pos:end="113:46">(</operator><operator pos:start="113:47" pos:end="113:47">&amp;</operator><operator pos:start="113:48" pos:end="113:48">(</operator><operator pos:start="113:49" pos:end="113:49">*</operator><name pos:start="113:50" pos:end="113:52">grp</name><operator pos:start="113:53" pos:end="113:53">)</operator><index pos:start="113:54" pos:end="113:60">[<expr pos:start="113:55" pos:end="113:59"><name pos:start="113:55" pos:end="113:59">MC_O4</name></expr>]</index><operator pos:start="113:61" pos:end="113:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:63"><expr pos:start="115:5" pos:end="115:62"><name pos:start="115:5" pos:end="115:7">err</name> <operator pos:start="115:9" pos:end="115:10">|=</operator> <call pos:start="115:12" pos:end="115:62"><name pos:start="115:12" pos:end="115:21">__get_user</name><argument_list pos:start="115:22" pos:end="115:62">(<argument pos:start="115:23" pos:end="115:43"><expr pos:start="115:23" pos:end="115:43"><name pos:start="115:23" pos:end="115:43"><name pos:start="115:23" pos:end="115:25">env</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:34">regwptr</name><index pos:start="115:35" pos:end="115:43">[<expr pos:start="115:36" pos:end="115:42"><name pos:start="115:36" pos:end="115:42">UREG_I5</name></expr>]</index></name></expr></argument>, <argument pos:start="115:46" pos:end="115:61"><expr pos:start="115:46" pos:end="115:61"><operator pos:start="115:46" pos:end="115:46">(</operator><operator pos:start="115:47" pos:end="115:47">&amp;</operator><operator pos:start="115:48" pos:end="115:48">(</operator><operator pos:start="115:49" pos:end="115:49">*</operator><name pos:start="115:50" pos:end="115:52">grp</name><operator pos:start="115:53" pos:end="115:53">)</operator><index pos:start="115:54" pos:end="115:60">[<expr pos:start="115:55" pos:end="115:59"><name pos:start="115:55" pos:end="115:59">MC_O5</name></expr>]</index><operator pos:start="115:61" pos:end="115:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:63"><expr pos:start="117:5" pos:end="117:62"><name pos:start="117:5" pos:end="117:7">err</name> <operator pos:start="117:9" pos:end="117:10">|=</operator> <call pos:start="117:12" pos:end="117:62"><name pos:start="117:12" pos:end="117:21">__get_user</name><argument_list pos:start="117:22" pos:end="117:62">(<argument pos:start="117:23" pos:end="117:43"><expr pos:start="117:23" pos:end="117:43"><name pos:start="117:23" pos:end="117:43"><name pos:start="117:23" pos:end="117:25">env</name><operator pos:start="117:26" pos:end="117:27">-&gt;</operator><name pos:start="117:28" pos:end="117:34">regwptr</name><index pos:start="117:35" pos:end="117:43">[<expr pos:start="117:36" pos:end="117:42"><name pos:start="117:36" pos:end="117:42">UREG_I6</name></expr>]</index></name></expr></argument>, <argument pos:start="117:46" pos:end="117:61"><expr pos:start="117:46" pos:end="117:61"><operator pos:start="117:46" pos:end="117:46">(</operator><operator pos:start="117:47" pos:end="117:47">&amp;</operator><operator pos:start="117:48" pos:end="117:48">(</operator><operator pos:start="117:49" pos:end="117:49">*</operator><name pos:start="117:50" pos:end="117:52">grp</name><operator pos:start="117:53" pos:end="117:53">)</operator><index pos:start="117:54" pos:end="117:60">[<expr pos:start="117:55" pos:end="117:59"><name pos:start="117:55" pos:end="117:59">MC_O6</name></expr>]</index><operator pos:start="117:61" pos:end="117:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:63"><expr pos:start="119:5" pos:end="119:62"><name pos:start="119:5" pos:end="119:7">err</name> <operator pos:start="119:9" pos:end="119:10">|=</operator> <call pos:start="119:12" pos:end="119:62"><name pos:start="119:12" pos:end="119:21">__get_user</name><argument_list pos:start="119:22" pos:end="119:62">(<argument pos:start="119:23" pos:end="119:43"><expr pos:start="119:23" pos:end="119:43"><name pos:start="119:23" pos:end="119:43"><name pos:start="119:23" pos:end="119:25">env</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:34">regwptr</name><index pos:start="119:35" pos:end="119:43">[<expr pos:start="119:36" pos:end="119:42"><name pos:start="119:36" pos:end="119:42">UREG_I7</name></expr>]</index></name></expr></argument>, <argument pos:start="119:46" pos:end="119:61"><expr pos:start="119:46" pos:end="119:61"><operator pos:start="119:46" pos:end="119:46">(</operator><operator pos:start="119:47" pos:end="119:47">&amp;</operator><operator pos:start="119:48" pos:end="119:48">(</operator><operator pos:start="119:49" pos:end="119:49">*</operator><name pos:start="119:50" pos:end="119:52">grp</name><operator pos:start="119:53" pos:end="119:53">)</operator><index pos:start="119:54" pos:end="119:60">[<expr pos:start="119:55" pos:end="119:59"><name pos:start="119:55" pos:end="119:59">MC_O7</name></expr>]</index><operator pos:start="119:61" pos:end="119:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:54"><expr pos:start="123:5" pos:end="123:53"><name pos:start="123:5" pos:end="123:7">err</name> <operator pos:start="123:9" pos:end="123:10">|=</operator> <call pos:start="123:12" pos:end="123:53"><name pos:start="123:12" pos:end="123:21">__get_user</name><argument_list pos:start="123:22" pos:end="123:53">(<argument pos:start="123:23" pos:end="123:24"><expr pos:start="123:23" pos:end="123:24"><name pos:start="123:23" pos:end="123:24">fp</name></expr></argument>, <argument pos:start="123:27" pos:end="123:52"><expr pos:start="123:27" pos:end="123:52"><operator pos:start="123:27" pos:end="123:27">&amp;</operator><operator pos:start="123:28" pos:end="123:28">(</operator><name pos:start="123:29" pos:end="123:51"><name pos:start="123:29" pos:end="123:31">ucp</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:45">tuc_mcontext</name><operator pos:start="123:46" pos:end="123:46">.</operator><name pos:start="123:47" pos:end="123:51">mc_fp</name></name><operator pos:start="123:52" pos:end="123:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:54"><expr pos:start="125:5" pos:end="125:53"><name pos:start="125:5" pos:end="125:7">err</name> <operator pos:start="125:9" pos:end="125:10">|=</operator> <call pos:start="125:12" pos:end="125:53"><name pos:start="125:12" pos:end="125:21">__get_user</name><argument_list pos:start="125:22" pos:end="125:53">(<argument pos:start="125:23" pos:end="125:24"><expr pos:start="125:23" pos:end="125:24"><name pos:start="125:23" pos:end="125:24">i7</name></expr></argument>, <argument pos:start="125:27" pos:end="125:52"><expr pos:start="125:27" pos:end="125:52"><operator pos:start="125:27" pos:end="125:27">&amp;</operator><operator pos:start="125:28" pos:end="125:28">(</operator><name pos:start="125:29" pos:end="125:51"><name pos:start="125:29" pos:end="125:31">ucp</name><operator pos:start="125:32" pos:end="125:33">-&gt;</operator><name pos:start="125:34" pos:end="125:45">tuc_mcontext</name><operator pos:start="125:46" pos:end="125:46">.</operator><name pos:start="125:47" pos:end="125:51">mc_i7</name></name><operator pos:start="125:52" pos:end="125:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:53"><expr pos:start="129:5" pos:end="129:52"><name pos:start="129:5" pos:end="129:10">w_addr</name> <operator pos:start="129:12" pos:end="129:12">=</operator> <name pos:start="129:14" pos:end="129:30">TARGET_STACK_BIAS</name><operator pos:start="129:31" pos:end="129:31">+</operator><name pos:start="129:32" pos:end="129:52"><name pos:start="129:32" pos:end="129:34">env</name><operator pos:start="129:35" pos:end="129:36">-&gt;</operator><name pos:start="129:37" pos:end="129:43">regwptr</name><index pos:start="129:44" pos:end="129:52">[<expr pos:start="129:45" pos:end="129:51"><name pos:start="129:45" pos:end="129:51">UREG_I6</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="135:24"><if pos:start="131:5" pos:end="135:24">if <condition pos:start="131:8" pos:end="133:33">(<expr pos:start="131:9" pos:end="133:32"><call pos:start="131:9" pos:end="133:27"><name pos:start="131:9" pos:end="131:16">put_user</name><argument_list pos:start="131:17" pos:end="133:27">(<argument pos:start="131:18" pos:end="131:19"><expr pos:start="131:18" pos:end="131:19"><name pos:start="131:18" pos:end="131:19">fp</name></expr></argument>, <argument pos:start="131:22" pos:end="131:72"><expr pos:start="131:22" pos:end="131:72"><name pos:start="131:22" pos:end="131:27">w_addr</name> <operator pos:start="131:29" pos:end="131:29">+</operator> <call pos:start="131:31" pos:end="131:72"><name pos:start="131:31" pos:end="131:38">offsetof</name><argument_list pos:start="131:39" pos:end="131:72">(<argument pos:start="131:40" pos:end="131:63"><expr pos:start="131:40" pos:end="131:63">struct <name pos:start="131:47" pos:end="131:63">target_reg_window</name></expr></argument>, <argument pos:start="131:66" pos:end="131:71"><expr pos:start="131:66" pos:end="131:71"><name pos:start="131:66" pos:end="131:71"><name pos:start="131:66" pos:end="131:68">ins</name><index pos:start="131:69" pos:end="131:71">[<expr pos:start="131:70" pos:end="131:70"><literal type="number" pos:start="131:70" pos:end="131:70">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, 

                 <argument pos:start="133:18" pos:end="133:26"><expr pos:start="133:18" pos:end="133:26"><name pos:start="133:18" pos:end="133:26">abi_ulong</name></expr></argument>)</argument_list></call> <operator pos:start="133:29" pos:end="133:30">!=</operator> <literal type="number" pos:start="133:32" pos:end="133:32">0</literal></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:24"><block_content pos:start="135:9" pos:end="135:24">

        <goto pos:start="135:9" pos:end="135:24">goto <name pos:start="135:14" pos:end="135:23">do_sigsegv</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="137:5" pos:end="141:24"><if pos:start="137:5" pos:end="141:24">if <condition pos:start="137:8" pos:end="139:33">(<expr pos:start="137:9" pos:end="139:32"><call pos:start="137:9" pos:end="139:27"><name pos:start="137:9" pos:end="137:16">put_user</name><argument_list pos:start="137:17" pos:end="139:27">(<argument pos:start="137:18" pos:end="137:19"><expr pos:start="137:18" pos:end="137:19"><name pos:start="137:18" pos:end="137:19">i7</name></expr></argument>, <argument pos:start="137:22" pos:end="137:72"><expr pos:start="137:22" pos:end="137:72"><name pos:start="137:22" pos:end="137:27">w_addr</name> <operator pos:start="137:29" pos:end="137:29">+</operator> <call pos:start="137:31" pos:end="137:72"><name pos:start="137:31" pos:end="137:38">offsetof</name><argument_list pos:start="137:39" pos:end="137:72">(<argument pos:start="137:40" pos:end="137:63"><expr pos:start="137:40" pos:end="137:63">struct <name pos:start="137:47" pos:end="137:63">target_reg_window</name></expr></argument>, <argument pos:start="137:66" pos:end="137:71"><expr pos:start="137:66" pos:end="137:71"><name pos:start="137:66" pos:end="137:71"><name pos:start="137:66" pos:end="137:68">ins</name><index pos:start="137:69" pos:end="137:71">[<expr pos:start="137:70" pos:end="137:70"><literal type="number" pos:start="137:70" pos:end="137:70">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, 

                 <argument pos:start="139:18" pos:end="139:26"><expr pos:start="139:18" pos:end="139:26"><name pos:start="139:18" pos:end="139:26">abi_ulong</name></expr></argument>)</argument_list></call> <operator pos:start="139:29" pos:end="139:30">!=</operator> <literal type="number" pos:start="139:32" pos:end="139:32">0</literal></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:24"><block_content pos:start="141:9" pos:end="141:24">

        <goto pos:start="141:9" pos:end="141:24">goto <name pos:start="141:14" pos:end="141:23">do_sigsegv</name>;</goto></block_content></block></if></if_stmt>

    <comment type="block" pos:start="143:5" pos:end="151:7">/* FIXME this does not match how the kernel handles the FPU in

     * its sparc64_set_context implementation. In particular the FPU

     * is only restored if fenab is non-zero in:

     *   __get_user(fenab, &amp;(ucp-&gt;tuc_mcontext.mc_fpregs.mcfpu_enab));

     */</comment>

    <expr_stmt pos:start="153:5" pos:end="153:76"><expr pos:start="153:5" pos:end="153:75"><name pos:start="153:5" pos:end="153:7">err</name> <operator pos:start="153:9" pos:end="153:10">|=</operator> <call pos:start="153:12" pos:end="153:75"><name pos:start="153:12" pos:end="153:21">__get_user</name><argument_list pos:start="153:22" pos:end="153:75">(<argument pos:start="153:23" pos:end="153:31"><expr pos:start="153:23" pos:end="153:31"><name pos:start="153:23" pos:end="153:31"><name pos:start="153:23" pos:end="153:25">env</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:31">fprs</name></name></expr></argument>, <argument pos:start="153:34" pos:end="153:74"><expr pos:start="153:34" pos:end="153:74"><operator pos:start="153:34" pos:end="153:34">&amp;</operator><operator pos:start="153:35" pos:end="153:35">(</operator><name pos:start="153:36" pos:end="153:73"><name pos:start="153:36" pos:end="153:38">ucp</name><operator pos:start="153:39" pos:end="153:40">-&gt;</operator><name pos:start="153:41" pos:end="153:52">tuc_mcontext</name><operator pos:start="153:53" pos:end="153:53">.</operator><name pos:start="153:54" pos:end="153:62">mc_fpregs</name><operator pos:start="153:63" pos:end="153:63">.</operator><name pos:start="153:64" pos:end="153:73">mcfpu_fprs</name></name><operator pos:start="153:74" pos:end="153:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <block pos:start="155:5" pos:end="173:5">{<block_content pos:start="157:9" pos:end="171:9">

        <decl_stmt pos:start="157:9" pos:end="157:70"><decl pos:start="157:9" pos:end="157:69"><type pos:start="157:9" pos:end="157:18"><name pos:start="157:9" pos:end="157:16">uint32_t</name> <modifier pos:start="157:18" pos:end="157:18">*</modifier></type><name pos:start="157:19" pos:end="157:21">src</name> <init pos:start="157:23" pos:end="157:69">= <expr pos:start="157:25" pos:end="157:69"><name pos:start="157:25" pos:end="157:69"><name pos:start="157:25" pos:end="157:27">ucp</name><operator pos:start="157:28" pos:end="157:29">-&gt;</operator><name pos:start="157:30" pos:end="157:41">tuc_mcontext</name><operator pos:start="157:42" pos:end="157:42">.</operator><name pos:start="157:43" pos:end="157:51">mc_fpregs</name><operator pos:start="157:52" pos:end="157:52">.</operator><name pos:start="157:53" pos:end="157:63">mcfpu_fregs</name><operator pos:start="157:64" pos:end="157:64">.</operator><name pos:start="157:65" pos:end="157:69">sregs</name></name></expr></init></decl>;</decl_stmt>

        <for pos:start="159:9" pos:end="171:9">for <control pos:start="159:13" pos:end="159:39">(<init pos:start="159:14" pos:end="159:19"><expr pos:start="159:14" pos:end="159:18"><name pos:start="159:14" pos:end="159:14">i</name> <operator pos:start="159:16" pos:end="159:16">=</operator> <literal type="number" pos:start="159:18" pos:end="159:18">0</literal></expr>;</init> <condition pos:start="159:21" pos:end="159:27"><expr pos:start="159:21" pos:end="159:26"><name pos:start="159:21" pos:end="159:21">i</name> <operator pos:start="159:23" pos:end="159:23">&lt;</operator> <literal type="number" pos:start="159:25" pos:end="159:26">64</literal></expr>;</condition> <incr pos:start="159:29" pos:end="159:38"><expr pos:start="159:29" pos:end="159:31"><name pos:start="159:29" pos:end="159:29">i</name><operator pos:start="159:30" pos:end="159:31">++</operator></expr><operator pos:start="159:32" pos:end="159:32">,</operator> <expr pos:start="159:34" pos:end="159:38"><name pos:start="159:34" pos:end="159:36">src</name><operator pos:start="159:37" pos:end="159:38">++</operator></expr></incr>)</control> <block pos:start="159:41" pos:end="171:9">{<block_content pos:start="161:13" pos:end="169:13">

            <if_stmt pos:start="161:13" pos:end="169:13"><if pos:start="161:13" pos:end="165:13">if <condition pos:start="161:16" pos:end="161:22">(<expr pos:start="161:17" pos:end="161:21"><name pos:start="161:17" pos:end="161:17">i</name> <operator pos:start="161:19" pos:end="161:19">&amp;</operator> <literal type="number" pos:start="161:21" pos:end="161:21">1</literal></expr>)</condition> <block pos:start="161:24" pos:end="165:13">{<block_content pos:start="163:17" pos:end="163:62">

                <expr_stmt pos:start="163:17" pos:end="163:62"><expr pos:start="163:17" pos:end="163:61"><name pos:start="163:17" pos:end="163:19">err</name> <operator pos:start="163:21" pos:end="163:22">|=</operator> <call pos:start="163:24" pos:end="163:61"><name pos:start="163:24" pos:end="163:33">__get_user</name><argument_list pos:start="163:34" pos:end="163:61">(<argument pos:start="163:35" pos:end="163:55"><expr pos:start="163:35" pos:end="163:55"><name pos:start="163:35" pos:end="163:47"><name pos:start="163:35" pos:end="163:37">env</name><operator pos:start="163:38" pos:end="163:39">-&gt;</operator><name pos:start="163:40" pos:end="163:42">fpr</name><index pos:start="163:43" pos:end="163:47">[<expr pos:start="163:44" pos:end="163:46"><name pos:start="163:44" pos:end="163:44">i</name><operator pos:start="163:45" pos:end="163:45">/</operator><literal type="number" pos:start="163:46" pos:end="163:46">2</literal></expr>]</index></name><operator pos:start="163:48" pos:end="163:48">.</operator><name pos:start="163:49" pos:end="163:55"><name pos:start="163:49" pos:end="163:49">l</name><operator pos:start="163:50" pos:end="163:50">.</operator><name pos:start="163:51" pos:end="163:55">lower</name></name></expr></argument>, <argument pos:start="163:58" pos:end="163:60"><expr pos:start="163:58" pos:end="163:60"><name pos:start="163:58" pos:end="163:60">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="165:15" pos:end="169:13">else <block pos:start="165:20" pos:end="169:13">{<block_content pos:start="167:17" pos:end="167:62">

                <expr_stmt pos:start="167:17" pos:end="167:62"><expr pos:start="167:17" pos:end="167:61"><name pos:start="167:17" pos:end="167:19">err</name> <operator pos:start="167:21" pos:end="167:22">|=</operator> <call pos:start="167:24" pos:end="167:61"><name pos:start="167:24" pos:end="167:33">__get_user</name><argument_list pos:start="167:34" pos:end="167:61">(<argument pos:start="167:35" pos:end="167:55"><expr pos:start="167:35" pos:end="167:55"><name pos:start="167:35" pos:end="167:47"><name pos:start="167:35" pos:end="167:37">env</name><operator pos:start="167:38" pos:end="167:39">-&gt;</operator><name pos:start="167:40" pos:end="167:42">fpr</name><index pos:start="167:43" pos:end="167:47">[<expr pos:start="167:44" pos:end="167:46"><name pos:start="167:44" pos:end="167:44">i</name><operator pos:start="167:45" pos:end="167:45">/</operator><literal type="number" pos:start="167:46" pos:end="167:46">2</literal></expr>]</index></name><operator pos:start="167:48" pos:end="167:48">.</operator><name pos:start="167:49" pos:end="167:55"><name pos:start="167:49" pos:end="167:49">l</name><operator pos:start="167:50" pos:end="167:50">.</operator><name pos:start="167:51" pos:end="167:55">upper</name></name></expr></argument>, <argument pos:start="167:58" pos:end="167:60"><expr pos:start="167:58" pos:end="167:60"><name pos:start="167:58" pos:end="167:60">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block>

    <expr_stmt pos:start="175:5" pos:end="177:64"><expr pos:start="175:5" pos:end="177:63"><name pos:start="175:5" pos:end="175:7">err</name> <operator pos:start="175:9" pos:end="175:10">|=</operator> <call pos:start="175:12" pos:end="177:63"><name pos:start="175:12" pos:end="175:21">__get_user</name><argument_list pos:start="175:22" pos:end="177:63">(<argument pos:start="175:23" pos:end="175:30"><expr pos:start="175:23" pos:end="175:30"><name pos:start="175:23" pos:end="175:30"><name pos:start="175:23" pos:end="175:25">env</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:30">fsr</name></name></expr></argument>,

                      <argument pos:start="177:23" pos:end="177:62"><expr pos:start="177:23" pos:end="177:62"><operator pos:start="177:23" pos:end="177:23">&amp;</operator><operator pos:start="177:24" pos:end="177:24">(</operator><name pos:start="177:25" pos:end="177:61"><name pos:start="177:25" pos:end="177:27">ucp</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:41">tuc_mcontext</name><operator pos:start="177:42" pos:end="177:42">.</operator><name pos:start="177:43" pos:end="177:51">mc_fpregs</name><operator pos:start="177:52" pos:end="177:52">.</operator><name pos:start="177:53" pos:end="177:61">mcfpu_fsr</name></name><operator pos:start="177:62" pos:end="177:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="181:64"><expr pos:start="179:5" pos:end="181:63"><name pos:start="179:5" pos:end="179:7">err</name> <operator pos:start="179:9" pos:end="179:10">|=</operator> <call pos:start="179:12" pos:end="181:63"><name pos:start="179:12" pos:end="179:21">__get_user</name><argument_list pos:start="179:22" pos:end="181:63">(<argument pos:start="179:23" pos:end="179:30"><expr pos:start="179:23" pos:end="179:30"><name pos:start="179:23" pos:end="179:30"><name pos:start="179:23" pos:end="179:25">env</name><operator pos:start="179:26" pos:end="179:27">-&gt;</operator><name pos:start="179:28" pos:end="179:30">gsr</name></name></expr></argument>,

                      <argument pos:start="181:23" pos:end="181:62"><expr pos:start="181:23" pos:end="181:62"><operator pos:start="181:23" pos:end="181:23">&amp;</operator><operator pos:start="181:24" pos:end="181:24">(</operator><name pos:start="181:25" pos:end="181:61"><name pos:start="181:25" pos:end="181:27">ucp</name><operator pos:start="181:28" pos:end="181:29">-&gt;</operator><name pos:start="181:30" pos:end="181:41">tuc_mcontext</name><operator pos:start="181:42" pos:end="181:42">.</operator><name pos:start="181:43" pos:end="181:51">mc_fpregs</name><operator pos:start="181:52" pos:end="181:52">.</operator><name pos:start="181:53" pos:end="181:61">mcfpu_gsr</name></name><operator pos:start="181:62" pos:end="181:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="183:5" pos:end="185:24"><if pos:start="183:5" pos:end="185:24">if <condition pos:start="183:8" pos:end="183:12">(<expr pos:start="183:9" pos:end="183:11"><name pos:start="183:9" pos:end="183:11">err</name></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="185:24"><block_content pos:start="185:9" pos:end="185:24">

        <goto pos:start="185:9" pos:end="185:24">goto <name pos:start="185:14" pos:end="185:23">do_sigsegv</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:41"><expr pos:start="187:5" pos:end="187:40"><call pos:start="187:5" pos:end="187:40"><name pos:start="187:5" pos:end="187:22">unlock_user_struct</name><argument_list pos:start="187:23" pos:end="187:40">(<argument pos:start="187:24" pos:end="187:26"><expr pos:start="187:24" pos:end="187:26"><name pos:start="187:24" pos:end="187:26">ucp</name></expr></argument>, <argument pos:start="187:29" pos:end="187:36"><expr pos:start="187:29" pos:end="187:36"><name pos:start="187:29" pos:end="187:36">ucp_addr</name></expr></argument>, <argument pos:start="187:39" pos:end="187:39"><expr pos:start="187:39" pos:end="187:39"><literal type="number" pos:start="187:39" pos:end="187:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="189:5" pos:end="189:11">return;</return>

 <label pos:start="191:2" pos:end="191:12"><name pos:start="191:2" pos:end="191:11">do_sigsegv</name>:</label>

    <expr_stmt pos:start="193:5" pos:end="193:41"><expr pos:start="193:5" pos:end="193:40"><call pos:start="193:5" pos:end="193:40"><name pos:start="193:5" pos:end="193:22">unlock_user_struct</name><argument_list pos:start="193:23" pos:end="193:40">(<argument pos:start="193:24" pos:end="193:26"><expr pos:start="193:24" pos:end="193:26"><name pos:start="193:24" pos:end="193:26">ucp</name></expr></argument>, <argument pos:start="193:29" pos:end="193:36"><expr pos:start="193:29" pos:end="193:36"><name pos:start="193:29" pos:end="193:36">ucp_addr</name></expr></argument>, <argument pos:start="193:39" pos:end="193:39"><expr pos:start="193:39" pos:end="193:39"><literal type="number" pos:start="193:39" pos:end="193:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:30"><expr pos:start="195:5" pos:end="195:29"><call pos:start="195:5" pos:end="195:29"><name pos:start="195:5" pos:end="195:13">force_sig</name><argument_list pos:start="195:14" pos:end="195:29">(<argument pos:start="195:15" pos:end="195:28"><expr pos:start="195:15" pos:end="195:28"><name pos:start="195:15" pos:end="195:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
