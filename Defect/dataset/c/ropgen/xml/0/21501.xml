<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21501.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">vnc_display_init</name><parameter_list pos:start="1:22" pos:end="1:37">(<parameter pos:start="1:23" pos:end="1:36"><decl pos:start="1:23" pos:end="1:36"><type pos:start="1:23" pos:end="1:34"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:32">char</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:45">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VncDisplay</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">vs</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:37">(<expr pos:start="9:9" pos:end="9:36"><call pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:24">vnc_display_find</name><argument_list pos:start="9:25" pos:end="9:28">(<argument pos:start="9:26" pos:end="9:27"><expr pos:start="9:26" pos:end="9:27"><name pos:start="9:26" pos:end="9:27">id</name></expr></argument>)</argument_list></call> <operator pos:start="9:30" pos:end="9:31">!=</operator> <name pos:start="9:33" pos:end="9:36">NULL</name></expr>)</condition> <block pos:start="9:39" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:6">vs</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:31"><name pos:start="15:10" pos:end="15:18">g_malloc0</name><argument_list pos:start="15:19" pos:end="15:31">(<argument pos:start="15:20" pos:end="15:30"><expr pos:start="15:20" pos:end="15:30"><sizeof pos:start="15:20" pos:end="15:30">sizeof<argument_list pos:start="15:26" pos:end="15:30">(<argument pos:start="15:27" pos:end="15:29"><expr pos:start="15:27" pos:end="15:29"><operator pos:start="15:27" pos:end="15:27">*</operator><name pos:start="15:28" pos:end="15:29">vs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:6">vs</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:10">id</name></name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:23"><name pos:start="19:14" pos:end="19:19">strdup</name><argument_list pos:start="19:20" pos:end="19:23">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:48"><expr pos:start="21:5" pos:end="21:47"><call pos:start="21:5" pos:end="21:47"><name pos:start="21:5" pos:end="21:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="21:23" pos:end="21:47">(<argument pos:start="21:24" pos:end="21:36"><expr pos:start="21:24" pos:end="21:36"><operator pos:start="21:24" pos:end="21:24">&amp;</operator><name pos:start="21:25" pos:end="21:36">vnc_displays</name></expr></argument>, <argument pos:start="21:39" pos:end="21:40"><expr pos:start="21:39" pos:end="21:40"><name pos:start="21:39" pos:end="21:40">vs</name></expr></argument>, <argument pos:start="21:43" pos:end="21:46"><expr pos:start="21:43" pos:end="21:46"><name pos:start="21:43" pos:end="21:46">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="28:0"><expr pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:6">vs</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:13">lsock</name></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <operator pos:start="25:17" pos:end="25:17">-</operator><literal type="number" pos:start="25:18" pos:end="25:18">1</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="27:1" pos:end="27:20">#<cpp:directive pos:start="27:2" pos:end="27:6">ifdef</cpp:directive> <name pos:start="27:8" pos:end="27:20">CONFIG_VNC_WS</name></cpp:ifdef>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:6">vs</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:16">lwebsock</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <operator pos:start="29:20" pos:end="29:20">-</operator><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><call pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:15">QTAILQ_INIT</name><argument_list pos:start="35:16" pos:end="35:29">(<argument pos:start="35:17" pos:end="35:28"><expr pos:start="35:17" pos:end="35:28"><operator pos:start="35:17" pos:end="35:17">&amp;</operator><name pos:start="35:18" pos:end="35:28"><name pos:start="35:18" pos:end="35:19">vs</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:28">clients</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:6">vs</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:15">expires</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:26">TIME_MAX</name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:24">(<expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:23">keyboard_layout</name></expr>)</condition> <block pos:start="41:26" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:76">

        <expr_stmt pos:start="43:9" pos:end="43:48"><expr pos:start="43:9" pos:end="43:47"><call pos:start="43:9" pos:end="43:47"><name pos:start="43:9" pos:end="43:30">trace_vnc_key_map_init</name><argument_list pos:start="43:31" pos:end="43:47">(<argument pos:start="43:32" pos:end="43:46"><expr pos:start="43:32" pos:end="43:46"><name pos:start="43:32" pos:end="43:46">keyboard_layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:76"><expr pos:start="45:9" pos:end="45:75"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:10">vs</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:22">kbd_layout</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:75"><name pos:start="45:26" pos:end="45:45">init_keyboard_layout</name><argument_list pos:start="45:46" pos:end="45:75">(<argument pos:start="45:47" pos:end="45:57"><expr pos:start="45:47" pos:end="45:57"><name pos:start="45:47" pos:end="45:57">name2keysym</name></expr></argument>, <argument pos:start="45:60" pos:end="45:74"><expr pos:start="45:60" pos:end="45:74"><name pos:start="45:60" pos:end="45:74">keyboard_layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:68">

        <expr_stmt pos:start="49:9" pos:end="49:68"><expr pos:start="49:9" pos:end="49:67"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:10">vs</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:22">kbd_layout</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <call pos:start="49:26" pos:end="49:67"><name pos:start="49:26" pos:end="49:45">init_keyboard_layout</name><argument_list pos:start="49:46" pos:end="49:67">(<argument pos:start="49:47" pos:end="49:57"><expr pos:start="49:47" pos:end="49:57"><name pos:start="49:47" pos:end="49:57">name2keysym</name></expr></argument>, <argument pos:start="49:60" pos:end="49:66"><expr pos:start="49:60" pos:end="49:66"><literal type="string" pos:start="49:60" pos:end="49:66">"en-us"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="55:5" pos:end="57:16"><if pos:start="55:5" pos:end="57:16">if <condition pos:start="55:8" pos:end="55:24">(<expr pos:start="55:9" pos:end="55:23"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:23"><name pos:start="55:10" pos:end="55:11">vs</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:23">kbd_layout</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:16"><block_content pos:start="57:9" pos:end="57:16">

        <expr_stmt pos:start="57:9" pos:end="57:16"><expr pos:start="57:9" pos:end="57:15"><call pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:12">exit</name><argument_list pos:start="57:13" pos:end="57:15">(<argument pos:start="57:14" pos:end="57:14"><expr pos:start="57:14" pos:end="57:14"><literal type="number" pos:start="57:14" pos:end="57:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:32"><expr pos:start="61:5" pos:end="61:31"><call pos:start="61:5" pos:end="61:31"><name pos:start="61:5" pos:end="61:19">qemu_mutex_init</name><argument_list pos:start="61:20" pos:end="61:31">(<argument pos:start="61:21" pos:end="61:30"><expr pos:start="61:21" pos:end="61:30"><operator pos:start="61:21" pos:end="61:21">&amp;</operator><name pos:start="61:22" pos:end="61:30"><name pos:start="61:22" pos:end="61:23">vs</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:30">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:30"><expr pos:start="63:5" pos:end="63:29"><call pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:27">vnc_start_worker_thread</name><argument_list pos:start="63:28" pos:end="63:29">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:27"><expr pos:start="67:5" pos:end="67:26"><name pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:6">vs</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:11">dcl</name><operator pos:start="67:12" pos:end="67:12">.</operator><name pos:start="67:13" pos:end="67:15">ops</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <operator pos:start="67:19" pos:end="67:19">&amp;</operator><name pos:start="67:20" pos:end="67:26">dcl_ops</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:45"><expr pos:start="69:5" pos:end="69:44"><call pos:start="69:5" pos:end="69:44"><name pos:start="69:5" pos:end="69:34">register_displaychangelistener</name><argument_list pos:start="69:35" pos:end="69:44">(<argument pos:start="69:36" pos:end="69:43"><expr pos:start="69:36" pos:end="69:43"><operator pos:start="69:36" pos:end="69:36">&amp;</operator><name pos:start="69:37" pos:end="69:43"><name pos:start="69:37" pos:end="69:38">vs</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:43">dcl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
