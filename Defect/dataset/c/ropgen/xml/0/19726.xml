<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19726.c" pos:tabs="8"><function pos:start="1:1" pos:end="239:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">dts_probe</name><parameter_list pos:start="1:21" pos:end="1:36">(<parameter pos:start="1:22" pos:end="1:35"><decl pos:start="1:22" pos:end="1:35"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">AVProbeData</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="239:1">{<block_content pos:start="5:5" pos:end="237:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name></decl>, <decl pos:start="5:25" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:29">bufp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">state</name> <init pos:start="7:20" pos:end="7:23">= <expr pos:start="7:22" pos:end="7:23"><operator pos:start="7:22" pos:end="7:22">-</operator><literal type="number" pos:start="7:23" pos:end="7:23">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:15">markers</name><index pos:start="9:16" pos:end="9:21">[<expr pos:start="9:17" pos:end="9:20"><literal type="number" pos:start="9:17" pos:end="9:17">4</literal><operator pos:start="9:18" pos:end="9:18">*</operator><literal type="number" pos:start="9:19" pos:end="9:20">16</literal></expr>]</index></name> <init pos:start="9:23" pos:end="9:27">= <expr pos:start="9:25" pos:end="9:27"><block pos:start="9:25" pos:end="9:27">{<expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">exss_markers</name> <init pos:start="11:22" pos:end="11:24">= <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr></init></decl>, <decl pos:start="11:27" pos:end="11:42"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:27" pos:end="11:38">exss_nextpos</name> <init pos:start="11:40" pos:end="11:42">= <expr pos:start="11:42" pos:end="11:42"><literal type="number" pos:start="11:42" pos:end="11:42">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">sum</name></decl>, <decl pos:start="13:14" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:16">max</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:21">pos</name></decl>, <decl pos:start="13:24" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:24">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:16">diff</name> <init pos:start="15:18" pos:end="15:20">= <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:59"><decl pos:start="17:5" pos:end="17:58"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:50"><name pos:start="17:13" pos:end="17:15">hdr</name><index pos:start="17:16" pos:end="17:50">[<expr pos:start="17:17" pos:end="17:49"><literal type="number" pos:start="17:17" pos:end="17:18">12</literal> <operator pos:start="17:20" pos:end="17:20">+</operator> <name pos:start="17:22" pos:end="17:49">AV_INPUT_BUFFER_PADDING_SIZE</name></expr>]</index></name> <init pos:start="17:52" pos:end="17:58">= <expr pos:start="17:54" pos:end="17:58"><block pos:start="17:54" pos:end="17:58">{ <expr pos:start="17:56" pos:end="17:56"><literal type="number" pos:start="17:56" pos:end="17:56">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="203:5">for <control pos:start="21:9" pos:end="21:73">(<init pos:start="21:10" pos:end="21:40"><expr pos:start="21:10" pos:end="21:39"><name pos:start="21:10" pos:end="21:12">pos</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:39"><name pos:start="21:16" pos:end="21:20">FFMIN</name><argument_list pos:start="21:21" pos:end="21:39">(<argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><literal type="number" pos:start="21:22" pos:end="21:25">4096</literal></expr></argument>, <argument pos:start="21:28" pos:end="21:38"><expr pos:start="21:28" pos:end="21:38"><name pos:start="21:28" pos:end="21:38"><name pos:start="21:28" pos:end="21:28">p</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:38">buf_size</name></name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="21:42" pos:end="21:63"><expr pos:start="21:42" pos:end="21:62"><name pos:start="21:42" pos:end="21:44">pos</name> <operator pos:start="21:46" pos:end="21:46">&lt;</operator> <name pos:start="21:48" pos:end="21:58"><name pos:start="21:48" pos:end="21:48">p</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:58">buf_size</name></name> <operator pos:start="21:60" pos:end="21:60">-</operator> <literal type="number" pos:start="21:62" pos:end="21:62">2</literal></expr>;</condition> <incr pos:start="21:65" pos:end="21:72"><expr pos:start="21:65" pos:end="21:72"><name pos:start="21:65" pos:end="21:67">pos</name> <operator pos:start="21:69" pos:end="21:70">+=</operator> <literal type="number" pos:start="21:72" pos:end="21:72">2</literal></expr></incr>)</control> <block pos:start="21:75" pos:end="203:5">{<block_content pos:start="23:9" pos:end="201:27">

        <decl_stmt pos:start="23:9" pos:end="23:67"><decl pos:start="23:9" pos:end="23:18"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:18">marker</name></decl>, <decl pos:start="23:21" pos:end="23:33"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:21" pos:end="23:33">sample_blocks</name></decl>, <decl pos:start="23:36" pos:end="23:46"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:36" pos:end="23:46">sample_rate</name></decl>, <decl pos:start="23:49" pos:end="23:55"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:49" pos:end="23:55">sr_code</name></decl>, <decl pos:start="23:58" pos:end="23:66"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:58" pos:end="23:66">framesize</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:36"><decl pos:start="25:9" pos:end="25:15"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:15">lfe</name></decl>, <decl pos:start="25:18" pos:end="25:25"><type ref="prev" pos:start="25:9" pos:end="25:11"/><name pos:start="25:18" pos:end="25:25">wide_hdr</name></decl>, <decl pos:start="25:28" pos:end="25:35"><type ref="prev" pos:start="25:9" pos:end="25:11"/><name pos:start="25:28" pos:end="25:35">hdr_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:25"><decl pos:start="27:9" pos:end="27:24"><type pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:21">GetBitContext</name></type> <name pos:start="27:23" pos:end="27:24">gb</name></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:12">bufp</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:18">buf</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:27"><name pos:start="31:22" pos:end="31:22">p</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:27">buf</name></name> <operator pos:start="31:29" pos:end="31:29">+</operator> <name pos:start="31:31" pos:end="31:33">pos</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:13">state</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:22">state</name> <operator pos:start="33:24" pos:end="33:25">&lt;&lt;</operator> <literal type="number" pos:start="33:27" pos:end="33:28">16</literal><operator pos:start="33:29" pos:end="33:29">)</operator> <operator pos:start="33:31" pos:end="33:31">|</operator> <call pos:start="33:33" pos:end="33:58"><name pos:start="33:33" pos:end="33:51">bytestream_get_be16</name><argument_list pos:start="33:52" pos:end="33:58">(<argument pos:start="33:53" pos:end="33:57"><expr pos:start="33:53" pos:end="33:57"><operator pos:start="33:53" pos:end="33:53">&amp;</operator><name pos:start="33:54" pos:end="33:57">bufp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="37:9" pos:end="39:77"><if pos:start="37:9" pos:end="39:77">if <condition pos:start="37:12" pos:end="37:21">(<expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:15">pos</name> <operator pos:start="37:17" pos:end="37:18">&gt;=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">4</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:77"><block_content pos:start="39:13" pos:end="39:77">

            <expr_stmt pos:start="39:13" pos:end="39:77"><expr pos:start="39:13" pos:end="39:76"><name pos:start="39:13" pos:end="39:16">diff</name> <operator pos:start="39:18" pos:end="39:19">+=</operator> <call pos:start="39:21" pos:end="39:76"><name pos:start="39:21" pos:end="39:25">FFABS</name><argument_list pos:start="39:26" pos:end="39:76">(<argument pos:start="39:27" pos:end="39:75"><expr pos:start="39:27" pos:end="39:75"><operator pos:start="39:27" pos:end="39:27">(</operator><operator pos:start="39:28" pos:end="39:28">(</operator><name pos:start="39:29" pos:end="39:35">int16_t</name><operator pos:start="39:36" pos:end="39:36">)</operator><call pos:start="39:37" pos:end="39:48"><name pos:start="39:37" pos:end="39:43">AV_RL16</name><argument_list pos:start="39:44" pos:end="39:48">(<argument pos:start="39:45" pos:end="39:47"><expr pos:start="39:45" pos:end="39:47"><name pos:start="39:45" pos:end="39:47">buf</name></expr></argument>)</argument_list></call><operator pos:start="39:49" pos:end="39:49">)</operator> <operator pos:start="39:51" pos:end="39:51">-</operator> <operator pos:start="39:53" pos:end="39:53">(</operator><name pos:start="39:54" pos:end="39:60">int16_t</name><operator pos:start="39:61" pos:end="39:61">)</operator><call pos:start="39:62" pos:end="39:75"><name pos:start="39:62" pos:end="39:68">AV_RL16</name><argument_list pos:start="39:69" pos:end="39:75">(<argument pos:start="39:70" pos:end="39:74"><expr pos:start="39:70" pos:end="39:74"><name pos:start="39:70" pos:end="39:72">buf</name><operator pos:start="39:73" pos:end="39:73">-</operator><literal type="number" pos:start="39:74" pos:end="39:74">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="43:9" pos:end="43:40">/* extension substream (EXSS) */</comment>

        <if_stmt pos:start="45:9" pos:end="95:9"><if pos:start="45:9" pos:end="95:9">if <condition pos:start="45:12" pos:end="45:44">(<expr pos:start="45:13" pos:end="45:43"><name pos:start="45:13" pos:end="45:17">state</name> <operator pos:start="45:19" pos:end="45:20">==</operator> <name pos:start="45:22" pos:end="45:43">DCA_SYNCWORD_SUBSTREAM</name></expr>)</condition> <block pos:start="45:46" pos:end="95:9">{<block_content pos:start="47:13" pos:end="93:21">

            <if_stmt pos:start="47:13" pos:end="49:25"><if pos:start="47:13" pos:end="49:25">if <condition pos:start="47:16" pos:end="47:35">(<expr pos:start="47:17" pos:end="47:34"><name pos:start="47:17" pos:end="47:19">pos</name> <operator pos:start="47:21" pos:end="47:21">&lt;</operator> <name pos:start="47:23" pos:end="47:34">exss_nextpos</name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:25"><block_content pos:start="49:17" pos:end="49:25">

                <continue pos:start="49:17" pos:end="49:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="53:13" pos:end="53:44"><expr pos:start="53:13" pos:end="53:43"><call pos:start="53:13" pos:end="53:43"><name pos:start="53:13" pos:end="53:25">init_get_bits</name><argument_list pos:start="53:26" pos:end="53:43">(<argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><operator pos:start="53:27" pos:end="53:27">&amp;</operator><name pos:start="53:28" pos:end="53:29">gb</name></expr></argument>, <argument pos:start="53:32" pos:end="53:38"><expr pos:start="53:32" pos:end="53:38"><name pos:start="53:32" pos:end="53:34">buf</name> <operator pos:start="53:36" pos:end="53:36">-</operator> <literal type="number" pos:start="53:38" pos:end="53:38">2</literal></expr></argument>, <argument pos:start="53:41" pos:end="53:42"><expr pos:start="53:41" pos:end="53:42"><literal type="number" pos:start="53:41" pos:end="53:42">96</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><call pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:26">skip_bits_long</name><argument_list pos:start="55:27" pos:end="55:35">(<argument pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><operator pos:start="55:28" pos:end="55:28">&amp;</operator><name pos:start="55:29" pos:end="55:30">gb</name></expr></argument>, <argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><literal type="number" pos:start="55:33" pos:end="55:34">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="59:13" pos:end="59:39"><expr pos:start="59:13" pos:end="59:38"><name pos:start="59:13" pos:end="59:20">wide_hdr</name>  <operator pos:start="59:23" pos:end="59:23">=</operator> <call pos:start="59:25" pos:end="59:38"><name pos:start="59:25" pos:end="59:33">get_bits1</name><argument_list pos:start="59:34" pos:end="59:38">(<argument pos:start="59:35" pos:end="59:37"><expr pos:start="59:35" pos:end="59:37"><operator pos:start="59:35" pos:end="59:35">&amp;</operator><name pos:start="59:36" pos:end="59:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:61"><expr pos:start="61:13" pos:end="61:60"><name pos:start="61:13" pos:end="61:20">hdr_size</name>  <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:56"><name pos:start="61:25" pos:end="61:32">get_bits</name><argument_list pos:start="61:33" pos:end="61:56">(<argument pos:start="61:34" pos:end="61:36"><expr pos:start="61:34" pos:end="61:36"><operator pos:start="61:34" pos:end="61:34">&amp;</operator><name pos:start="61:35" pos:end="61:36">gb</name></expr></argument>,  <argument pos:start="61:40" pos:end="61:55"><expr pos:start="61:40" pos:end="61:55"><literal type="number" pos:start="61:40" pos:end="61:42">8</literal> <operator pos:start="61:42" pos:end="61:42">+</operator> <literal type="number" pos:start="61:44" pos:end="61:44">4</literal> <operator pos:start="61:46" pos:end="61:46">*</operator> <name pos:start="61:48" pos:end="61:55">wide_hdr</name></expr></argument>)</argument_list></call> <operator pos:start="61:58" pos:end="61:58">+</operator> <literal type="number" pos:start="61:60" pos:end="61:60">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:61"><expr pos:start="63:13" pos:end="63:60"><name pos:start="63:13" pos:end="63:21">framesize</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <call pos:start="63:25" pos:end="63:56"><name pos:start="63:25" pos:end="63:32">get_bits</name><argument_list pos:start="63:33" pos:end="63:56">(<argument pos:start="63:34" pos:end="63:36"><expr pos:start="63:34" pos:end="63:36"><operator pos:start="63:34" pos:end="63:34">&amp;</operator><name pos:start="63:35" pos:end="63:36">gb</name></expr></argument>, <argument pos:start="63:39" pos:end="63:55"><expr pos:start="63:39" pos:end="63:55"><literal type="number" pos:start="63:39" pos:end="63:42">16</literal> <operator pos:start="63:42" pos:end="63:42">+</operator> <literal type="number" pos:start="63:44" pos:end="63:44">4</literal> <operator pos:start="63:46" pos:end="63:46">*</operator> <name pos:start="63:48" pos:end="63:55">wide_hdr</name></expr></argument>)</argument_list></call> <operator pos:start="63:58" pos:end="63:58">+</operator> <literal type="number" pos:start="63:60" pos:end="63:60">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="67:25"><if pos:start="65:13" pos:end="67:25">if <condition pos:start="65:16" pos:end="65:46">(<expr pos:start="65:17" pos:end="65:45"><name pos:start="65:17" pos:end="65:24">hdr_size</name> <operator pos:start="65:26" pos:end="65:26">&amp;</operator> <literal type="number" pos:start="65:28" pos:end="65:28">3</literal> <operator pos:start="65:30" pos:end="65:31">||</operator> <name pos:start="65:33" pos:end="65:41">framesize</name> <operator pos:start="65:43" pos:end="65:43">&amp;</operator> <literal type="number" pos:start="65:45" pos:end="65:45">3</literal></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:25"><block_content pos:start="67:17" pos:end="67:25">

                <continue pos:start="67:17" pos:end="67:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="69:13" pos:end="71:25"><if pos:start="69:13" pos:end="71:25">if <condition pos:start="69:16" pos:end="69:54">(<expr pos:start="69:17" pos:end="69:53"><name pos:start="69:17" pos:end="69:24">hdr_size</name> <operator pos:start="69:26" pos:end="69:26">&lt;</operator> <literal type="number" pos:start="69:28" pos:end="69:29">16</literal> <operator pos:start="69:31" pos:end="69:32">||</operator> <name pos:start="69:34" pos:end="69:42">framesize</name> <operator pos:start="69:44" pos:end="69:44">&lt;</operator> <name pos:start="69:46" pos:end="69:53">hdr_size</name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:25"><block_content pos:start="71:17" pos:end="71:25">

                <continue pos:start="71:17" pos:end="71:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="73:13" pos:end="75:25"><if pos:start="73:13" pos:end="75:25">if <condition pos:start="73:16" pos:end="73:49">(<expr pos:start="73:17" pos:end="73:48"><name pos:start="73:17" pos:end="73:19">pos</name> <operator pos:start="73:21" pos:end="73:21">-</operator> <literal type="number" pos:start="73:23" pos:end="73:25">2</literal> <operator pos:start="73:25" pos:end="73:25">+</operator> <name pos:start="73:27" pos:end="73:34">hdr_size</name> <operator pos:start="73:36" pos:end="73:36">&gt;</operator> <name pos:start="73:38" pos:end="73:48"><name pos:start="73:38" pos:end="73:38">p</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:48">buf_size</name></name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:25"><block_content pos:start="75:17" pos:end="75:25">

                <continue pos:start="75:17" pos:end="75:25">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="77:13" pos:end="79:25"><if pos:start="77:13" pos:end="79:25">if <condition pos:start="77:16" pos:end="77:89">(<expr pos:start="77:17" pos:end="77:88"><call pos:start="77:17" pos:end="77:88"><name pos:start="77:17" pos:end="77:22">av_crc</name><argument_list pos:start="77:23" pos:end="77:88">(<argument pos:start="77:24" pos:end="77:56"><expr pos:start="77:24" pos:end="77:56"><call pos:start="77:24" pos:end="77:56"><name pos:start="77:24" pos:end="77:39">av_crc_get_table</name><argument_list pos:start="77:40" pos:end="77:56">(<argument pos:start="77:41" pos:end="77:55"><expr pos:start="77:41" pos:end="77:55"><name pos:start="77:41" pos:end="77:55">AV_CRC_16_CCITT</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:59" pos:end="77:64"><expr pos:start="77:59" pos:end="77:64"><literal type="number" pos:start="77:59" pos:end="77:64">0xffff</literal></expr></argument>, <argument pos:start="77:67" pos:end="77:73"><expr pos:start="77:67" pos:end="77:73"><name pos:start="77:67" pos:end="77:69">buf</name> <operator pos:start="77:71" pos:end="77:71">+</operator> <literal type="number" pos:start="77:73" pos:end="77:73">3</literal></expr></argument>, <argument pos:start="77:76" pos:end="77:87"><expr pos:start="77:76" pos:end="77:87"><name pos:start="77:76" pos:end="77:83">hdr_size</name> <operator pos:start="77:85" pos:end="77:85">-</operator> <literal type="number" pos:start="77:87" pos:end="77:87">5</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:25"><block_content pos:start="79:17" pos:end="79:25">

                <continue pos:start="79:17" pos:end="79:25">continue;</continue></block_content></block></if></if_stmt>



            <if_stmt pos:start="83:13" pos:end="89:58"><if pos:start="83:13" pos:end="85:31">if <condition pos:start="83:16" pos:end="83:36">(<expr pos:start="83:17" pos:end="83:35"><name pos:start="83:17" pos:end="83:19">pos</name> <operator pos:start="83:21" pos:end="83:22">==</operator> <name pos:start="83:24" pos:end="83:35">exss_nextpos</name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:31"><block_content pos:start="85:17" pos:end="85:31">

                <expr_stmt pos:start="85:17" pos:end="85:31"><expr pos:start="85:17" pos:end="85:30"><name pos:start="85:17" pos:end="85:28">exss_markers</name><operator pos:start="85:29" pos:end="85:30">++</operator></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="87:13" pos:end="89:58">else<block type="pseudo" pos:start="89:17" pos:end="89:58"><block_content pos:start="89:17" pos:end="89:58">

                <expr_stmt pos:start="89:17" pos:end="89:58"><expr pos:start="89:17" pos:end="89:57"><name pos:start="89:17" pos:end="89:28">exss_markers</name> <operator pos:start="89:30" pos:end="89:30">=</operator> <call pos:start="89:32" pos:end="89:57"><name pos:start="89:32" pos:end="89:36">FFMAX</name><argument_list pos:start="89:37" pos:end="89:57">(<argument pos:start="89:38" pos:end="89:38"><expr pos:start="89:38" pos:end="89:38"><literal type="number" pos:start="89:38" pos:end="89:38">1</literal></expr></argument>, <argument pos:start="89:41" pos:end="89:56"><expr pos:start="89:41" pos:end="89:56"><name pos:start="89:41" pos:end="89:52">exss_markers</name> <operator pos:start="89:54" pos:end="89:54">-</operator> <literal type="number" pos:start="89:56" pos:end="89:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:43"><expr pos:start="91:13" pos:end="91:42"><name pos:start="91:13" pos:end="91:24">exss_nextpos</name> <operator pos:start="91:26" pos:end="91:26">=</operator> <name pos:start="91:28" pos:end="91:30">pos</name> <operator pos:start="91:32" pos:end="91:32">+</operator> <name pos:start="91:34" pos:end="91:42">framesize</name></expr>;</expr_stmt>

            <continue pos:start="93:13" pos:end="93:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="99:9" pos:end="99:31">/* regular bitstream */</comment>

        <if_stmt pos:start="101:9" pos:end="135:21"><if pos:start="101:9" pos:end="105:23">if <condition pos:start="101:12" pos:end="103:60">(<expr pos:start="101:13" pos:end="103:59"><name pos:start="101:13" pos:end="101:17">state</name> <operator pos:start="101:19" pos:end="101:20">==</operator> <name pos:start="101:22" pos:end="101:41">DCA_SYNCWORD_CORE_BE</name> <operator pos:start="101:43" pos:end="101:44">&amp;&amp;</operator>

            <operator pos:start="103:13" pos:end="103:13">(</operator><call pos:start="103:14" pos:end="103:39"><name pos:start="103:14" pos:end="103:32">bytestream_get_be16</name><argument_list pos:start="103:33" pos:end="103:39">(<argument pos:start="103:34" pos:end="103:38"><expr pos:start="103:34" pos:end="103:38"><operator pos:start="103:34" pos:end="103:34">&amp;</operator><name pos:start="103:35" pos:end="103:38">bufp</name></expr></argument>)</argument_list></call> <operator pos:start="103:41" pos:end="103:41">&amp;</operator> <literal type="number" pos:start="103:43" pos:end="103:48">0xFC00</literal><operator pos:start="103:49" pos:end="103:49">)</operator> <operator pos:start="103:51" pos:end="103:52">==</operator> <literal type="number" pos:start="103:54" pos:end="103:59">0xFC00</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:23"><block_content pos:start="105:13" pos:end="105:23">

            <expr_stmt pos:start="105:13" pos:end="105:23"><expr pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:18">marker</name> <operator pos:start="105:20" pos:end="105:20">=</operator> <literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="107:9" pos:end="111:23">else if <condition pos:start="107:17" pos:end="109:65">(<expr pos:start="107:18" pos:end="109:64"><name pos:start="107:18" pos:end="107:22">state</name> <operator pos:start="107:24" pos:end="107:25">==</operator> <name pos:start="107:27" pos:end="107:46">DCA_SYNCWORD_CORE_LE</name> <operator pos:start="107:48" pos:end="107:49">&amp;&amp;</operator>

                 <operator pos:start="109:18" pos:end="109:18">(</operator><call pos:start="109:19" pos:end="109:44"><name pos:start="109:19" pos:end="109:37">bytestream_get_be16</name><argument_list pos:start="109:38" pos:end="109:44">(<argument pos:start="109:39" pos:end="109:43"><expr pos:start="109:39" pos:end="109:43"><operator pos:start="109:39" pos:end="109:39">&amp;</operator><name pos:start="109:40" pos:end="109:43">bufp</name></expr></argument>)</argument_list></call> <operator pos:start="109:46" pos:end="109:46">&amp;</operator> <literal type="number" pos:start="109:48" pos:end="109:53">0x00FC</literal><operator pos:start="109:54" pos:end="109:54">)</operator> <operator pos:start="109:56" pos:end="109:57">==</operator> <literal type="number" pos:start="109:59" pos:end="109:64">0x00FC</literal></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:23"><block_content pos:start="111:13" pos:end="111:23">

            <expr_stmt pos:start="111:13" pos:end="111:23"><expr pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:18">marker</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <literal type="number" pos:start="111:22" pos:end="111:22">1</literal></expr>;</expr_stmt></block_content></block></if>



        <comment type="block" pos:start="115:9" pos:end="115:42">/* 14 bits big-endian bitstream */</comment>

        <if type="elseif" pos:start="117:9" pos:end="121:23">else if <condition pos:start="117:17" pos:end="119:65">(<expr pos:start="117:18" pos:end="119:64"><name pos:start="117:18" pos:end="117:22">state</name> <operator pos:start="117:24" pos:end="117:25">==</operator> <name pos:start="117:27" pos:end="117:50">DCA_SYNCWORD_CORE_14B_BE</name> <operator pos:start="117:52" pos:end="117:53">&amp;&amp;</operator>

                 <operator pos:start="119:18" pos:end="119:18">(</operator><call pos:start="119:19" pos:end="119:44"><name pos:start="119:19" pos:end="119:37">bytestream_get_be16</name><argument_list pos:start="119:38" pos:end="119:44">(<argument pos:start="119:39" pos:end="119:43"><expr pos:start="119:39" pos:end="119:43"><operator pos:start="119:39" pos:end="119:39">&amp;</operator><name pos:start="119:40" pos:end="119:43">bufp</name></expr></argument>)</argument_list></call> <operator pos:start="119:46" pos:end="119:46">&amp;</operator> <literal type="number" pos:start="119:48" pos:end="119:53">0xFFF0</literal><operator pos:start="119:54" pos:end="119:54">)</operator> <operator pos:start="119:56" pos:end="119:57">==</operator> <literal type="number" pos:start="119:59" pos:end="119:64">0x07F0</literal></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:23"><block_content pos:start="121:13" pos:end="121:23">

            <expr_stmt pos:start="121:13" pos:end="121:23"><expr pos:start="121:13" pos:end="121:22"><name pos:start="121:13" pos:end="121:18">marker</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <literal type="number" pos:start="121:22" pos:end="121:22">2</literal></expr>;</expr_stmt></block_content></block></if>



        <comment type="block" pos:start="125:9" pos:end="125:45">/* 14 bits little-endian bitstream */</comment>

        <if type="elseif" pos:start="127:9" pos:end="131:23">else if <condition pos:start="127:17" pos:end="129:65">(<expr pos:start="127:18" pos:end="129:64"><name pos:start="127:18" pos:end="127:22">state</name> <operator pos:start="127:24" pos:end="127:25">==</operator> <name pos:start="127:27" pos:end="127:50">DCA_SYNCWORD_CORE_14B_LE</name> <operator pos:start="127:52" pos:end="127:53">&amp;&amp;</operator>

                 <operator pos:start="129:18" pos:end="129:18">(</operator><call pos:start="129:19" pos:end="129:44"><name pos:start="129:19" pos:end="129:37">bytestream_get_be16</name><argument_list pos:start="129:38" pos:end="129:44">(<argument pos:start="129:39" pos:end="129:43"><expr pos:start="129:39" pos:end="129:43"><operator pos:start="129:39" pos:end="129:39">&amp;</operator><name pos:start="129:40" pos:end="129:43">bufp</name></expr></argument>)</argument_list></call> <operator pos:start="129:46" pos:end="129:46">&amp;</operator> <literal type="number" pos:start="129:48" pos:end="129:53">0xF0FF</literal><operator pos:start="129:54" pos:end="129:54">)</operator> <operator pos:start="129:56" pos:end="129:57">==</operator> <literal type="number" pos:start="129:59" pos:end="129:64">0xF007</literal></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:23"><block_content pos:start="131:13" pos:end="131:23">

            <expr_stmt pos:start="131:13" pos:end="131:23"><expr pos:start="131:13" pos:end="131:22"><name pos:start="131:13" pos:end="131:18">marker</name> <operator pos:start="131:20" pos:end="131:20">=</operator> <literal type="number" pos:start="131:22" pos:end="131:22">3</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="133:9" pos:end="135:21">else<block type="pseudo" pos:start="135:13" pos:end="135:21"><block_content pos:start="135:13" pos:end="135:21">

            <continue pos:start="135:13" pos:end="135:21">continue;</continue></block_content></block></else></if_stmt>



        <if_stmt pos:start="139:9" pos:end="141:21"><if pos:start="139:9" pos:end="141:21">if <condition pos:start="139:12" pos:end="139:65">(<expr pos:start="139:13" pos:end="139:64"><call pos:start="139:13" pos:end="139:60"><name pos:start="139:13" pos:end="139:40">avpriv_dca_convert_bitstream</name><argument_list pos:start="139:41" pos:end="139:60">(<argument pos:start="139:42" pos:end="139:46"><expr pos:start="139:42" pos:end="139:46"><name pos:start="139:42" pos:end="139:44">buf</name><operator pos:start="139:45" pos:end="139:45">-</operator><literal type="number" pos:start="139:46" pos:end="139:46">2</literal></expr></argument>, <argument pos:start="139:49" pos:end="139:50"><expr pos:start="139:49" pos:end="139:50"><literal type="number" pos:start="139:49" pos:end="139:50">12</literal></expr></argument>, <argument pos:start="139:53" pos:end="139:55"><expr pos:start="139:53" pos:end="139:55"><name pos:start="139:53" pos:end="139:55">hdr</name></expr></argument>, <argument pos:start="139:58" pos:end="139:59"><expr pos:start="139:58" pos:end="139:59"><literal type="number" pos:start="139:58" pos:end="139:59">12</literal></expr></argument>)</argument_list></call> <operator pos:start="139:62" pos:end="139:62">&lt;</operator> <literal type="number" pos:start="139:64" pos:end="139:64">0</literal></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:21"><block_content pos:start="141:13" pos:end="141:21">

            <continue pos:start="141:13" pos:end="141:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:36"><expr pos:start="145:9" pos:end="145:35"><call pos:start="145:9" pos:end="145:35"><name pos:start="145:9" pos:end="145:21">init_get_bits</name><argument_list pos:start="145:22" pos:end="145:35">(<argument pos:start="145:23" pos:end="145:25"><expr pos:start="145:23" pos:end="145:25"><operator pos:start="145:23" pos:end="145:23">&amp;</operator><name pos:start="145:24" pos:end="145:25">gb</name></expr></argument>, <argument pos:start="145:28" pos:end="145:30"><expr pos:start="145:28" pos:end="145:30"><name pos:start="145:28" pos:end="145:30">hdr</name></expr></argument>, <argument pos:start="145:33" pos:end="145:34"><expr pos:start="145:33" pos:end="145:34"><literal type="number" pos:start="145:33" pos:end="145:34">96</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:32"><expr pos:start="147:9" pos:end="147:31"><call pos:start="147:9" pos:end="147:31"><name pos:start="147:9" pos:end="147:22">skip_bits_long</name><argument_list pos:start="147:23" pos:end="147:31">(<argument pos:start="147:24" pos:end="147:26"><expr pos:start="147:24" pos:end="147:26"><operator pos:start="147:24" pos:end="147:24">&amp;</operator><name pos:start="147:25" pos:end="147:26">gb</name></expr></argument>, <argument pos:start="147:29" pos:end="147:30"><expr pos:start="147:29" pos:end="147:30"><literal type="number" pos:start="147:29" pos:end="147:30">39</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:45"><expr pos:start="151:9" pos:end="151:44"><name pos:start="151:9" pos:end="151:21">sample_blocks</name> <operator pos:start="151:23" pos:end="151:23">=</operator> <call pos:start="151:25" pos:end="151:40"><name pos:start="151:25" pos:end="151:32">get_bits</name><argument_list pos:start="151:33" pos:end="151:40">(<argument pos:start="151:34" pos:end="151:36"><expr pos:start="151:34" pos:end="151:36"><operator pos:start="151:34" pos:end="151:34">&amp;</operator><name pos:start="151:35" pos:end="151:36">gb</name></expr></argument>, <argument pos:start="151:39" pos:end="151:39"><expr pos:start="151:39" pos:end="151:39"><literal type="number" pos:start="151:39" pos:end="151:39">7</literal></expr></argument>)</argument_list></call> <operator pos:start="151:42" pos:end="151:42">+</operator> <literal type="number" pos:start="151:44" pos:end="151:44">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="153:9" pos:end="155:21"><if pos:start="153:9" pos:end="155:21">if <condition pos:start="153:12" pos:end="153:30">(<expr pos:start="153:13" pos:end="153:29"><name pos:start="153:13" pos:end="153:25">sample_blocks</name> <operator pos:start="153:27" pos:end="153:27">&lt;</operator> <literal type="number" pos:start="153:29" pos:end="153:29">8</literal></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:21"><block_content pos:start="155:13" pos:end="155:21">

            <continue pos:start="155:13" pos:end="155:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="159:9" pos:end="159:42"><expr pos:start="159:9" pos:end="159:41"><name pos:start="159:9" pos:end="159:17">framesize</name> <operator pos:start="159:19" pos:end="159:19">=</operator> <call pos:start="159:21" pos:end="159:37"><name pos:start="159:21" pos:end="159:28">get_bits</name><argument_list pos:start="159:29" pos:end="159:37">(<argument pos:start="159:30" pos:end="159:32"><expr pos:start="159:30" pos:end="159:32"><operator pos:start="159:30" pos:end="159:30">&amp;</operator><name pos:start="159:31" pos:end="159:32">gb</name></expr></argument>, <argument pos:start="159:35" pos:end="159:36"><expr pos:start="159:35" pos:end="159:36"><literal type="number" pos:start="159:35" pos:end="159:36">14</literal></expr></argument>)</argument_list></call> <operator pos:start="159:39" pos:end="159:39">+</operator> <literal type="number" pos:start="159:41" pos:end="159:41">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="161:9" pos:end="163:21"><if pos:start="161:9" pos:end="163:21">if <condition pos:start="161:12" pos:end="161:27">(<expr pos:start="161:13" pos:end="161:26"><name pos:start="161:13" pos:end="161:21">framesize</name> <operator pos:start="161:23" pos:end="161:23">&lt;</operator> <literal type="number" pos:start="161:25" pos:end="161:26">95</literal></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:21"><block_content pos:start="163:13" pos:end="163:21">

            <continue pos:start="163:13" pos:end="163:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:26"><expr pos:start="167:9" pos:end="167:25"><call pos:start="167:9" pos:end="167:25"><name pos:start="167:9" pos:end="167:17">skip_bits</name><argument_list pos:start="167:18" pos:end="167:25">(<argument pos:start="167:19" pos:end="167:21"><expr pos:start="167:19" pos:end="167:21"><operator pos:start="167:19" pos:end="167:19">&amp;</operator><name pos:start="167:20" pos:end="167:21">gb</name></expr></argument>, <argument pos:start="167:24" pos:end="167:24"><expr pos:start="167:24" pos:end="167:24"><literal type="number" pos:start="167:24" pos:end="167:24">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:35"><expr pos:start="169:9" pos:end="169:34"><name pos:start="169:9" pos:end="169:15">sr_code</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <call pos:start="169:19" pos:end="169:34"><name pos:start="169:19" pos:end="169:26">get_bits</name><argument_list pos:start="169:27" pos:end="169:34">(<argument pos:start="169:28" pos:end="169:30"><expr pos:start="169:28" pos:end="169:30"><operator pos:start="169:28" pos:end="169:28">&amp;</operator><name pos:start="169:29" pos:end="169:30">gb</name></expr></argument>, <argument pos:start="169:33" pos:end="169:33"><expr pos:start="169:33" pos:end="169:33"><literal type="number" pos:start="169:33" pos:end="169:33">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:55"><expr pos:start="171:9" pos:end="171:54"><name pos:start="171:9" pos:end="171:19">sample_rate</name> <operator pos:start="171:21" pos:end="171:21">=</operator> <name pos:start="171:23" pos:end="171:54"><name pos:start="171:23" pos:end="171:45">avpriv_dca_sample_rates</name><index pos:start="171:46" pos:end="171:54">[<expr pos:start="171:47" pos:end="171:53"><name pos:start="171:47" pos:end="171:53">sr_code</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="175:21"><if pos:start="173:9" pos:end="175:21">if <condition pos:start="173:12" pos:end="173:29">(<expr pos:start="173:13" pos:end="173:28"><name pos:start="173:13" pos:end="173:23">sample_rate</name> <operator pos:start="173:25" pos:end="173:26">==</operator> <literal type="number" pos:start="173:28" pos:end="173:28">0</literal></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:21"><block_content pos:start="175:13" pos:end="175:21">

            <continue pos:start="175:13" pos:end="175:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:25"><expr pos:start="179:9" pos:end="179:24"><call pos:start="179:9" pos:end="179:24"><name pos:start="179:9" pos:end="179:16">get_bits</name><argument_list pos:start="179:17" pos:end="179:24">(<argument pos:start="179:18" pos:end="179:20"><expr pos:start="179:18" pos:end="179:20"><operator pos:start="179:18" pos:end="179:18">&amp;</operator><name pos:start="179:19" pos:end="179:20">gb</name></expr></argument>, <argument pos:start="179:23" pos:end="179:23"><expr pos:start="179:23" pos:end="179:23"><literal type="number" pos:start="179:23" pos:end="179:23">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="181:9" pos:end="183:21"><if pos:start="181:9" pos:end="183:21">if <condition pos:start="181:12" pos:end="181:29">(<expr pos:start="181:13" pos:end="181:28"><call pos:start="181:13" pos:end="181:28"><name pos:start="181:13" pos:end="181:20">get_bits</name><argument_list pos:start="181:21" pos:end="181:28">(<argument pos:start="181:22" pos:end="181:24"><expr pos:start="181:22" pos:end="181:24"><operator pos:start="181:22" pos:end="181:22">&amp;</operator><name pos:start="181:23" pos:end="181:24">gb</name></expr></argument>, <argument pos:start="181:27" pos:end="181:27"><expr pos:start="181:27" pos:end="181:27"><literal type="number" pos:start="181:27" pos:end="181:27">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:21"><block_content pos:start="183:13" pos:end="183:21">

            <continue pos:start="183:13" pos:end="183:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="187:9" pos:end="187:31"><expr pos:start="187:9" pos:end="187:30"><call pos:start="187:9" pos:end="187:30"><name pos:start="187:9" pos:end="187:22">skip_bits_long</name><argument_list pos:start="187:23" pos:end="187:30">(<argument pos:start="187:24" pos:end="187:26"><expr pos:start="187:24" pos:end="187:26"><operator pos:start="187:24" pos:end="187:24">&amp;</operator><name pos:start="187:25" pos:end="187:26">gb</name></expr></argument>, <argument pos:start="187:29" pos:end="187:29"><expr pos:start="187:29" pos:end="187:29"><literal type="number" pos:start="187:29" pos:end="187:29">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:31"><expr pos:start="189:9" pos:end="189:30"><name pos:start="189:9" pos:end="189:11">lfe</name> <operator pos:start="189:13" pos:end="189:13">=</operator> <call pos:start="189:15" pos:end="189:30"><name pos:start="189:15" pos:end="189:22">get_bits</name><argument_list pos:start="189:23" pos:end="189:30">(<argument pos:start="189:24" pos:end="189:26"><expr pos:start="189:24" pos:end="189:26"><operator pos:start="189:24" pos:end="189:24">&amp;</operator><name pos:start="189:25" pos:end="189:26">gb</name></expr></argument>, <argument pos:start="189:29" pos:end="189:29"><expr pos:start="189:29" pos:end="189:29"><literal type="number" pos:start="189:29" pos:end="189:29">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="193:21"><if pos:start="191:9" pos:end="193:21">if <condition pos:start="191:12" pos:end="191:20">(<expr pos:start="191:13" pos:end="191:19"><name pos:start="191:13" pos:end="191:15">lfe</name> <operator pos:start="191:17" pos:end="191:17">&gt;</operator> <literal type="number" pos:start="191:19" pos:end="191:19">2</literal></expr>)</condition><block type="pseudo" pos:start="193:13" pos:end="193:21"><block_content pos:start="193:13" pos:end="193:21">

            <continue pos:start="193:13" pos:end="193:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="197:9" pos:end="197:29"><expr pos:start="197:9" pos:end="197:28"><name pos:start="197:9" pos:end="197:14">marker</name> <operator pos:start="197:16" pos:end="197:17">+=</operator> <literal type="number" pos:start="197:19" pos:end="197:19">4</literal><operator pos:start="197:20" pos:end="197:20">*</operator> <name pos:start="197:22" pos:end="197:28">sr_code</name></expr>;</expr_stmt>



        <expr_stmt pos:start="201:9" pos:end="201:27"><expr pos:start="201:9" pos:end="201:26"><name pos:start="201:9" pos:end="201:23"><name pos:start="201:9" pos:end="201:15">markers</name><index pos:start="201:16" pos:end="201:23">[<expr pos:start="201:17" pos:end="201:22"><name pos:start="201:17" pos:end="201:22">marker</name></expr>]</index></name> <operator pos:start="201:25" pos:end="201:26">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="207:5" pos:end="209:43"><if pos:start="207:5" pos:end="209:43">if <condition pos:start="207:8" pos:end="207:25">(<expr pos:start="207:9" pos:end="207:24"><name pos:start="207:9" pos:end="207:20">exss_markers</name> <operator pos:start="207:22" pos:end="207:22">&gt;</operator> <literal type="number" pos:start="207:24" pos:end="207:24">3</literal></expr>)</condition><block type="pseudo" pos:start="209:9" pos:end="209:43"><block_content pos:start="209:9" pos:end="209:43">

        <return pos:start="209:9" pos:end="209:43">return <expr pos:start="209:16" pos:end="209:42"><name pos:start="209:16" pos:end="209:38">AVPROBE_SCORE_EXTENSION</name> <operator pos:start="209:40" pos:end="209:40">+</operator> <literal type="number" pos:start="209:42" pos:end="209:42">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:18"><expr pos:start="213:5" pos:end="213:17"><name pos:start="213:5" pos:end="213:7">sum</name> <operator pos:start="213:9" pos:end="213:9">=</operator> <name pos:start="213:11" pos:end="213:13">max</name> <operator pos:start="213:15" pos:end="213:15">=</operator> <literal type="number" pos:start="213:17" pos:end="213:17">0</literal></expr>;</expr_stmt>

    <for pos:start="215:5" pos:end="223:5">for <control pos:start="215:9" pos:end="215:45">(<init pos:start="215:10" pos:end="215:13"><expr pos:start="215:10" pos:end="215:12"><name pos:start="215:10" pos:end="215:10">i</name><operator pos:start="215:11" pos:end="215:11">=</operator><literal type="number" pos:start="215:12" pos:end="215:12">0</literal></expr>;</init> <condition pos:start="215:15" pos:end="215:40"><expr pos:start="215:15" pos:end="215:39"><name pos:start="215:15" pos:end="215:15">i</name><operator pos:start="215:16" pos:end="215:16">&lt;</operator><call pos:start="215:17" pos:end="215:39"><name pos:start="215:17" pos:end="215:30">FF_ARRAY_ELEMS</name><argument_list pos:start="215:31" pos:end="215:39">(<argument pos:start="215:32" pos:end="215:38"><expr pos:start="215:32" pos:end="215:38"><name pos:start="215:32" pos:end="215:38">markers</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="215:42" pos:end="215:44"><expr pos:start="215:42" pos:end="215:44"><name pos:start="215:42" pos:end="215:42">i</name><operator pos:start="215:43" pos:end="215:44">++</operator></expr></incr>)</control> <block pos:start="215:47" pos:end="223:5">{<block_content pos:start="217:9" pos:end="221:20">

        <expr_stmt pos:start="217:9" pos:end="217:26"><expr pos:start="217:9" pos:end="217:25"><name pos:start="217:9" pos:end="217:11">sum</name> <operator pos:start="217:13" pos:end="217:14">+=</operator> <name pos:start="217:16" pos:end="217:25"><name pos:start="217:16" pos:end="217:22">markers</name><index pos:start="217:23" pos:end="217:25">[<expr pos:start="217:24" pos:end="217:24"><name pos:start="217:24" pos:end="217:24">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="219:9" pos:end="221:20"><if pos:start="219:9" pos:end="221:20">if <condition pos:start="219:12" pos:end="219:38">(<expr pos:start="219:13" pos:end="219:37"><name pos:start="219:13" pos:end="219:24"><name pos:start="219:13" pos:end="219:19">markers</name><index pos:start="219:20" pos:end="219:24">[<expr pos:start="219:21" pos:end="219:23"><name pos:start="219:21" pos:end="219:23">max</name></expr>]</index></name> <operator pos:start="219:26" pos:end="219:26">&lt;</operator> <name pos:start="219:28" pos:end="219:37"><name pos:start="219:28" pos:end="219:34">markers</name><index pos:start="219:35" pos:end="219:37">[<expr pos:start="219:36" pos:end="219:36"><name pos:start="219:36" pos:end="219:36">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:20"><block_content pos:start="221:13" pos:end="221:20">

            <expr_stmt pos:start="221:13" pos:end="221:20"><expr pos:start="221:13" pos:end="221:19"><name pos:start="221:13" pos:end="221:15">max</name> <operator pos:start="221:17" pos:end="221:17">=</operator> <name pos:start="221:19" pos:end="221:19">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="227:5" pos:end="233:43"><if pos:start="227:5" pos:end="233:43">if <condition pos:start="227:8" pos:end="231:33">(<expr pos:start="227:9" pos:end="231:32"><name pos:start="227:9" pos:end="227:20"><name pos:start="227:9" pos:end="227:15">markers</name><index pos:start="227:16" pos:end="227:20">[<expr pos:start="227:17" pos:end="227:19"><name pos:start="227:17" pos:end="227:19">max</name></expr>]</index></name> <operator pos:start="227:22" pos:end="227:22">&gt;</operator> <literal type="number" pos:start="227:24" pos:end="227:24">3</literal> <operator pos:start="227:26" pos:end="227:27">&amp;&amp;</operator> <name pos:start="227:29" pos:end="227:39"><name pos:start="227:29" pos:end="227:29">p</name><operator pos:start="227:30" pos:end="227:31">-&gt;</operator><name pos:start="227:32" pos:end="227:39">buf_size</name></name> <operator pos:start="227:41" pos:end="227:41">/</operator> <name pos:start="227:43" pos:end="227:54"><name pos:start="227:43" pos:end="227:49">markers</name><index pos:start="227:50" pos:end="227:54">[<expr pos:start="227:51" pos:end="227:53"><name pos:start="227:51" pos:end="227:53">max</name></expr>]</index></name> <operator pos:start="227:56" pos:end="227:56">&lt;</operator> <literal type="number" pos:start="227:58" pos:end="227:59">32</literal><operator pos:start="227:60" pos:end="227:60">*</operator><literal type="number" pos:start="227:61" pos:end="227:64">1024</literal> <operator pos:start="227:66" pos:end="227:67">&amp;&amp;</operator>

        <name pos:start="229:9" pos:end="229:20"><name pos:start="229:9" pos:end="229:15">markers</name><index pos:start="229:16" pos:end="229:20">[<expr pos:start="229:17" pos:end="229:19"><name pos:start="229:17" pos:end="229:19">max</name></expr>]</index></name> <operator pos:start="229:22" pos:end="229:22">*</operator> <literal type="number" pos:start="229:24" pos:end="229:24">4</literal> <operator pos:start="229:26" pos:end="229:26">&gt;</operator> <name pos:start="229:28" pos:end="229:30">sum</name> <operator pos:start="229:32" pos:end="229:32">*</operator> <literal type="number" pos:start="229:34" pos:end="229:34">3</literal> <operator pos:start="229:36" pos:end="229:37">&amp;&amp;</operator>

        <name pos:start="231:9" pos:end="231:12">diff</name> <operator pos:start="231:14" pos:end="231:14">/</operator> <name pos:start="231:16" pos:end="231:26"><name pos:start="231:16" pos:end="231:16">p</name><operator pos:start="231:17" pos:end="231:18">-&gt;</operator><name pos:start="231:19" pos:end="231:26">buf_size</name></name> <operator pos:start="231:28" pos:end="231:28">&gt;</operator> <literal type="number" pos:start="231:30" pos:end="231:32">200</literal></expr>)</condition><block type="pseudo" pos:start="233:9" pos:end="233:43"><block_content pos:start="233:9" pos:end="233:43">

        <return pos:start="233:9" pos:end="233:43">return <expr pos:start="233:16" pos:end="233:42"><name pos:start="233:16" pos:end="233:38">AVPROBE_SCORE_EXTENSION</name> <operator pos:start="233:40" pos:end="233:40">+</operator> <literal type="number" pos:start="233:42" pos:end="233:42">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="237:5" pos:end="237:13">return <expr pos:start="237:12" pos:end="237:12"><literal type="number" pos:start="237:12" pos:end="237:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
