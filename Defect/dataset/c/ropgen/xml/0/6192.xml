<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6192.c" pos:tabs="8"><function pos:start="1:1" pos:end="233:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_ivi_decode_frame</name><parameter_list pos:start="1:24" pos:end="3:40">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:62">int</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:73">got_frame</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:39"><decl pos:start="3:25" pos:end="3:39"><type pos:start="3:25" pos:end="3:39"><name pos:start="3:25" pos:end="3:32">AVPacket</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:39">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="233:1">{<block_content pos:start="7:5" pos:end="231:20">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">IVI45DecContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">ctx</name> <init pos:start="7:26" pos:end="7:43">= <expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:32">avctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:21"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name>   <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">buf</name> <init pos:start="9:26" pos:end="9:38">= <expr pos:start="9:28" pos:end="9:38"><name pos:start="9:28" pos:end="9:38"><name pos:start="9:28" pos:end="9:32">avpkt</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:38">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:11">AVFrame</name>       <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:24">frame</name> <init pos:start="11:26" pos:end="11:31">= <expr pos:start="11:28" pos:end="11:31"><name pos:start="11:28" pos:end="11:31">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type>             <name pos:start="13:21" pos:end="13:28">buf_size</name> <init pos:start="13:30" pos:end="13:42">= <expr pos:start="13:32" pos:end="13:42"><name pos:start="13:32" pos:end="13:42"><name pos:start="13:32" pos:end="13:36">avpkt</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:42">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type>             <name pos:start="15:21" pos:end="15:26">result</name></decl>, <decl pos:start="15:29" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:29" pos:end="15:29">p</name></decl>, <decl pos:start="15:32" pos:end="15:32"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:32" pos:end="15:32">b</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:47"><expr pos:start="19:5" pos:end="19:46"><call pos:start="19:5" pos:end="19:46"><name pos:start="19:5" pos:end="19:17">init_get_bits</name><argument_list pos:start="19:18" pos:end="19:46">(<argument pos:start="19:19" pos:end="19:26"><expr pos:start="19:19" pos:end="19:26"><operator pos:start="19:19" pos:end="19:19">&amp;</operator><name pos:start="19:20" pos:end="19:26"><name pos:start="19:20" pos:end="19:22">ctx</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:26">gb</name></name></expr></argument>, <argument pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:31">buf</name></expr></argument>, <argument pos:start="19:34" pos:end="19:45"><expr pos:start="19:34" pos:end="19:45"><name pos:start="19:34" pos:end="19:41">buf_size</name> <operator pos:start="19:43" pos:end="19:43">*</operator> <literal type="number" pos:start="19:45" pos:end="19:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:7">ctx</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:19">frame_data</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:25">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:7">ctx</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:19">frame_size</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:30">buf_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:10">result</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:44"><name pos:start="27:14" pos:end="27:32"><name pos:start="27:14" pos:end="27:16">ctx</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:32">decode_pic_hdr</name></name><argument_list pos:start="27:33" pos:end="27:44">(<argument pos:start="27:34" pos:end="27:36"><expr pos:start="27:34" pos:end="27:36"><name pos:start="27:34" pos:end="27:36">ctx</name></expr></argument>, <argument pos:start="27:39" pos:end="27:43"><expr pos:start="27:39" pos:end="27:43"><name pos:start="27:39" pos:end="27:43">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:15">(<expr pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:14">result</name></expr>)</condition> <block pos:start="29:17" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:22">

        <expr_stmt pos:start="31:9" pos:end="33:68"><expr pos:start="31:9" pos:end="33:67"><call pos:start="31:9" pos:end="33:67"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="33:67">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">avctx</name></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="33:16" pos:end="33:58"><expr pos:start="33:16" pos:end="33:58"><literal type="string" pos:start="33:16" pos:end="33:58">"Error while decoding picture header: %d\n"</literal></expr></argument>, <argument pos:start="33:61" pos:end="33:66"><expr pos:start="33:61" pos:end="33:66"><name pos:start="33:61" pos:end="33:66">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:22">return <expr pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:21">result</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:35"><if pos:start="39:5" pos:end="41:35">if <condition pos:start="39:8" pos:end="39:25">(<expr pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:11">ctx</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:24">gop_invalid</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:35"><block_content pos:start="41:9" pos:end="41:35">

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="65:5"><if pos:start="45:5" pos:end="65:5">if <condition pos:start="45:8" pos:end="47:52">(<expr pos:start="45:9" pos:end="47:51"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:13">avctx</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:23">codec_id</name></name> <operator pos:start="45:25" pos:end="45:26">==</operator> <name pos:start="45:28" pos:end="45:45">AV_CODEC_ID_INDEO4</name> <operator pos:start="45:47" pos:end="45:48">&amp;&amp;</operator>

        <name pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:11">ctx</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:23">frame_type</name></name> <operator pos:start="47:25" pos:end="47:26">==</operator> <name pos:start="47:28" pos:end="47:51">IVI4_FRAMETYPE_NULL_LAST</name></expr>)</condition> <block pos:start="47:54" pos:end="65:5">{<block_content pos:start="49:9" pos:end="63:24">

        <if_stmt pos:start="49:9" pos:end="61:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:29">(<expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:15">ctx</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:28">got_p_frame</name></name></expr>)</condition> <block pos:start="49:31" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:33">

            <expr_stmt pos:start="51:13" pos:end="51:50"><expr pos:start="51:13" pos:end="51:49"><call pos:start="51:13" pos:end="51:49"><name pos:start="51:13" pos:end="51:29">av_frame_move_ref</name><argument_list pos:start="51:30" pos:end="51:49">(<argument pos:start="51:31" pos:end="51:34"><expr pos:start="51:31" pos:end="51:34"><name pos:start="51:31" pos:end="51:34">data</name></expr></argument>, <argument pos:start="51:37" pos:end="51:48"><expr pos:start="51:37" pos:end="51:48"><name pos:start="51:37" pos:end="51:48"><name pos:start="51:37" pos:end="51:39">ctx</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:48">p_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:27"><expr pos:start="53:13" pos:end="53:26"><operator pos:start="53:13" pos:end="53:13">*</operator><name pos:start="53:14" pos:end="53:22">got_frame</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <literal type="number" pos:start="53:26" pos:end="53:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:15">ctx</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:28">got_p_frame</name></name> <operator pos:start="55:30" pos:end="55:30">=</operator> <literal type="number" pos:start="55:32" pos:end="55:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="61:9">else <block pos:start="57:16" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:27">

            <expr_stmt pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:26"><operator pos:start="59:13" pos:end="59:13">*</operator><name pos:start="59:14" pos:end="59:22">got_frame</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="63:9" pos:end="63:24">return <expr pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:43">(<expr pos:start="69:9" pos:end="69:42"><name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:11">ctx</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:22">gop_flags</name></name> <operator pos:start="69:24" pos:end="69:24">&amp;</operator> <name pos:start="69:26" pos:end="69:42">IVI5_IS_PROTECTED</name></expr>)</condition> <block pos:start="69:45" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:36">

        <expr_stmt pos:start="71:9" pos:end="71:75"><expr pos:start="71:9" pos:end="71:74"><call pos:start="71:9" pos:end="71:74"><name pos:start="71:9" pos:end="71:37">avpriv_report_missing_feature</name><argument_list pos:start="71:38" pos:end="71:74">(<argument pos:start="71:39" pos:end="71:43"><expr pos:start="71:39" pos:end="71:43"><name pos:start="71:39" pos:end="71:43">avctx</name></expr></argument>, <argument pos:start="71:46" pos:end="71:73"><expr pos:start="71:46" pos:end="71:73"><literal type="string" pos:start="71:46" pos:end="71:73">"Password-protected clip!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:36">return <expr pos:start="73:16" pos:end="73:35"><name pos:start="73:16" pos:end="73:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:30">(<expr pos:start="79:9" pos:end="79:29"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:23"><name pos:start="79:10" pos:end="79:12">ctx</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:20">planes</name><index pos:start="79:21" pos:end="79:23">[<expr pos:start="79:22" pos:end="79:22"><literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>]</index></name><operator pos:start="79:24" pos:end="79:24">.</operator><name pos:start="79:25" pos:end="79:29">bands</name></expr>)</condition> <block pos:start="79:32" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:35">

        <expr_stmt pos:start="81:9" pos:end="81:74"><expr pos:start="81:9" pos:end="81:73"><call pos:start="81:9" pos:end="81:73"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:73">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20">avctx</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:37" pos:end="81:72"><expr pos:start="81:37" pos:end="81:72"><literal type="string" pos:start="81:37" pos:end="81:72">"Color planes not initialized yet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:35">return <expr pos:start="83:16" pos:end="83:34"><name pos:start="83:16" pos:end="83:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:29"><expr pos:start="89:5" pos:end="89:28"><call pos:start="89:5" pos:end="89:28"><name pos:start="89:5" pos:end="89:23"><name pos:start="89:5" pos:end="89:7">ctx</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:23">switch_buffers</name></name><argument_list pos:start="89:24" pos:end="89:28">(<argument pos:start="89:25" pos:end="89:27"><expr pos:start="89:25" pos:end="89:27"><name pos:start="89:25" pos:end="89:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="93:5" pos:end="93:20">//{ START_TIMER;</comment>



    <if_stmt pos:start="97:5" pos:end="135:5"><if pos:start="97:5" pos:end="119:5">if <condition pos:start="97:8" pos:end="97:35">(<expr pos:start="97:9" pos:end="97:34"><call pos:start="97:9" pos:end="97:34"><name pos:start="97:9" pos:end="97:29"><name pos:start="97:9" pos:end="97:11">ctx</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:29">is_nonnull_frame</name></name><argument_list pos:start="97:30" pos:end="97:34">(<argument pos:start="97:31" pos:end="97:33"><expr pos:start="97:31" pos:end="97:33"><name pos:start="97:31" pos:end="97:33">ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:37" pos:end="119:5">{<block_content pos:start="99:9" pos:end="117:9">

        <for pos:start="99:9" pos:end="117:9">for <control pos:start="99:13" pos:end="99:31">(<init pos:start="99:14" pos:end="99:19"><expr pos:start="99:14" pos:end="99:18"><name pos:start="99:14" pos:end="99:14">p</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr>;</init> <condition pos:start="99:21" pos:end="99:26"><expr pos:start="99:21" pos:end="99:25"><name pos:start="99:21" pos:end="99:21">p</name> <operator pos:start="99:23" pos:end="99:23">&lt;</operator> <literal type="number" pos:start="99:25" pos:end="99:25">3</literal></expr>;</condition> <incr pos:start="99:28" pos:end="99:30"><expr pos:start="99:28" pos:end="99:30"><name pos:start="99:28" pos:end="99:28">p</name><operator pos:start="99:29" pos:end="99:30">++</operator></expr></incr>)</control> <block pos:start="99:33" pos:end="117:9">{<block_content pos:start="101:13" pos:end="115:13">

            <for pos:start="101:13" pos:end="115:13">for <control pos:start="101:17" pos:end="101:58">(<init pos:start="101:18" pos:end="101:23"><expr pos:start="101:18" pos:end="101:22"><name pos:start="101:18" pos:end="101:18">b</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <literal type="number" pos:start="101:22" pos:end="101:22">0</literal></expr>;</init> <condition pos:start="101:25" pos:end="101:53"><expr pos:start="101:25" pos:end="101:52"><name pos:start="101:25" pos:end="101:25">b</name> <operator pos:start="101:27" pos:end="101:27">&lt;</operator> <name pos:start="101:29" pos:end="101:42"><name pos:start="101:29" pos:end="101:31">ctx</name><operator pos:start="101:32" pos:end="101:33">-&gt;</operator><name pos:start="101:34" pos:end="101:39">planes</name><index pos:start="101:40" pos:end="101:42">[<expr pos:start="101:41" pos:end="101:41"><name pos:start="101:41" pos:end="101:41">p</name></expr>]</index></name><operator pos:start="101:43" pos:end="101:43">.</operator><name pos:start="101:44" pos:end="101:52">num_bands</name></expr>;</condition> <incr pos:start="101:55" pos:end="101:57"><expr pos:start="101:55" pos:end="101:57"><name pos:start="101:55" pos:end="101:55">b</name><operator pos:start="101:56" pos:end="101:57">++</operator></expr></incr>)</control> <block pos:start="101:60" pos:end="115:13">{<block_content pos:start="103:17" pos:end="113:17">

                <expr_stmt pos:start="103:17" pos:end="103:75"><expr pos:start="103:17" pos:end="103:74"><name pos:start="103:17" pos:end="103:22">result</name> <operator pos:start="103:24" pos:end="103:24">=</operator> <call pos:start="103:26" pos:end="103:74"><name pos:start="103:26" pos:end="103:36">decode_band</name><argument_list pos:start="103:37" pos:end="103:74">(<argument pos:start="103:38" pos:end="103:40"><expr pos:start="103:38" pos:end="103:40"><name pos:start="103:38" pos:end="103:40">ctx</name></expr></argument>, <argument pos:start="103:43" pos:end="103:66"><expr pos:start="103:43" pos:end="103:66"><operator pos:start="103:43" pos:end="103:43">&amp;</operator><name pos:start="103:44" pos:end="103:57"><name pos:start="103:44" pos:end="103:46">ctx</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:54">planes</name><index pos:start="103:55" pos:end="103:57">[<expr pos:start="103:56" pos:end="103:56"><name pos:start="103:56" pos:end="103:56">p</name></expr>]</index></name><operator pos:start="103:58" pos:end="103:58">.</operator><name pos:start="103:59" pos:end="103:66"><name pos:start="103:59" pos:end="103:63">bands</name><index pos:start="103:64" pos:end="103:66">[<expr pos:start="103:65" pos:end="103:65"><name pos:start="103:65" pos:end="103:65">b</name></expr>]</index></name></expr></argument>, <argument pos:start="103:69" pos:end="103:73"><expr pos:start="103:69" pos:end="103:73"><name pos:start="103:69" pos:end="103:73">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="105:17" pos:end="113:17"><if pos:start="105:17" pos:end="113:17">if <condition pos:start="105:20" pos:end="105:31">(<expr pos:start="105:21" pos:end="105:30"><name pos:start="105:21" pos:end="105:26">result</name> <operator pos:start="105:28" pos:end="105:28">&lt;</operator> <literal type="number" pos:start="105:30" pos:end="105:30">0</literal></expr>)</condition> <block pos:start="105:33" pos:end="113:17">{<block_content pos:start="107:21" pos:end="111:34">

                    <expr_stmt pos:start="107:21" pos:end="109:79"><expr pos:start="107:21" pos:end="109:78"><call pos:start="107:21" pos:end="109:78"><name pos:start="107:21" pos:end="107:26">av_log</name><argument_list pos:start="107:27" pos:end="109:78">(<argument pos:start="107:28" pos:end="107:32"><expr pos:start="107:28" pos:end="107:32"><name pos:start="107:28" pos:end="107:32">avctx</name></expr></argument>, <argument pos:start="107:35" pos:end="107:46"><expr pos:start="107:35" pos:end="107:46"><name pos:start="107:35" pos:end="107:46">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="109:28" pos:end="109:71"><expr pos:start="109:28" pos:end="109:71"><literal type="string" pos:start="109:28" pos:end="109:71">"Error while decoding band: %d, plane: %d\n"</literal></expr></argument>, <argument pos:start="109:74" pos:end="109:74"><expr pos:start="109:74" pos:end="109:74"><name pos:start="109:74" pos:end="109:74">b</name></expr></argument>, <argument pos:start="109:77" pos:end="109:77"><expr pos:start="109:77" pos:end="109:77"><name pos:start="109:77" pos:end="109:77">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="111:21" pos:end="111:34">return <expr pos:start="111:28" pos:end="111:33"><name pos:start="111:28" pos:end="111:33">result</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="135:5">else <block pos:start="119:12" pos:end="135:5">{<block_content pos:start="121:9" pos:end="133:9">

        <if_stmt pos:start="121:9" pos:end="123:39"><if pos:start="121:9" pos:end="123:39">if <condition pos:start="121:12" pos:end="121:29">(<expr pos:start="121:13" pos:end="121:28"><name pos:start="121:13" pos:end="121:28"><name pos:start="121:13" pos:end="121:15">ctx</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:28">is_scalable</name></name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:39"><block_content pos:start="123:13" pos:end="123:39">

            <return pos:start="123:13" pos:end="123:39">return <expr pos:start="123:20" pos:end="123:38"><name pos:start="123:20" pos:end="123:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="127:9" pos:end="133:9">for <control pos:start="127:13" pos:end="127:31">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">p</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:26"><expr pos:start="127:21" pos:end="127:25"><name pos:start="127:21" pos:end="127:21">p</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <literal type="number" pos:start="127:25" pos:end="127:25">3</literal></expr>;</condition> <incr pos:start="127:28" pos:end="127:30"><expr pos:start="127:28" pos:end="127:30"><name pos:start="127:28" pos:end="127:28">p</name><operator pos:start="127:29" pos:end="127:30">++</operator></expr></incr>)</control> <block pos:start="127:33" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:43">

            <if_stmt pos:start="129:13" pos:end="131:43"><if pos:start="129:13" pos:end="131:43">if <condition pos:start="129:16" pos:end="129:45">(<expr pos:start="129:17" pos:end="129:44"><operator pos:start="129:17" pos:end="129:17">!</operator><name pos:start="129:18" pos:end="129:31"><name pos:start="129:18" pos:end="129:20">ctx</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:28">planes</name><index pos:start="129:29" pos:end="129:31">[<expr pos:start="129:30" pos:end="129:30"><name pos:start="129:30" pos:end="129:30">p</name></expr>]</index></name><operator pos:start="129:32" pos:end="129:32">.</operator><name pos:start="129:33" pos:end="129:40"><name pos:start="129:33" pos:end="129:37">bands</name><index pos:start="129:38" pos:end="129:40">[<expr pos:start="129:39" pos:end="129:39"><literal type="number" pos:start="129:39" pos:end="129:39">0</literal></expr>]</index></name><operator pos:start="129:41" pos:end="129:41">.</operator><name pos:start="129:42" pos:end="129:44">buf</name></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:43"><block_content pos:start="131:17" pos:end="131:43">

                <return pos:start="131:17" pos:end="131:43">return <expr pos:start="131:24" pos:end="131:42"><name pos:start="131:24" pos:end="131:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="139:5" pos:end="139:36">//STOP_TIMER("decode_planes"); }</comment>



    <expr_stmt pos:start="143:5" pos:end="143:83"><expr pos:start="143:5" pos:end="143:82"><name pos:start="143:5" pos:end="143:10">result</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <call pos:start="143:14" pos:end="143:82"><name pos:start="143:14" pos:end="143:30">ff_set_dimensions</name><argument_list pos:start="143:31" pos:end="143:82">(<argument pos:start="143:32" pos:end="143:36"><expr pos:start="143:32" pos:end="143:36"><name pos:start="143:32" pos:end="143:36">avctx</name></expr></argument>, <argument pos:start="143:39" pos:end="143:58"><expr pos:start="143:39" pos:end="143:58"><name pos:start="143:39" pos:end="143:52"><name pos:start="143:39" pos:end="143:41">ctx</name><operator pos:start="143:42" pos:end="143:43">-&gt;</operator><name pos:start="143:44" pos:end="143:49">planes</name><index pos:start="143:50" pos:end="143:52">[<expr pos:start="143:51" pos:end="143:51"><literal type="number" pos:start="143:51" pos:end="143:51">0</literal></expr>]</index></name><operator pos:start="143:53" pos:end="143:53">.</operator><name pos:start="143:54" pos:end="143:58">width</name></expr></argument>, <argument pos:start="143:61" pos:end="143:81"><expr pos:start="143:61" pos:end="143:81"><name pos:start="143:61" pos:end="143:74"><name pos:start="143:61" pos:end="143:63">ctx</name><operator pos:start="143:64" pos:end="143:65">-&gt;</operator><name pos:start="143:66" pos:end="143:71">planes</name><index pos:start="143:72" pos:end="143:74">[<expr pos:start="143:73" pos:end="143:73"><literal type="number" pos:start="143:73" pos:end="143:73">0</literal></expr>]</index></name><operator pos:start="143:75" pos:end="143:75">.</operator><name pos:start="143:76" pos:end="143:81">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="147:22"><if pos:start="145:5" pos:end="147:22">if <condition pos:start="145:8" pos:end="145:19">(<expr pos:start="145:9" pos:end="145:18"><name pos:start="145:9" pos:end="145:14">result</name> <operator pos:start="145:16" pos:end="145:16">&lt;</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:22"><block_content pos:start="147:9" pos:end="147:22">

        <return pos:start="147:9" pos:end="147:22">return <expr pos:start="147:16" pos:end="147:21"><name pos:start="147:16" pos:end="147:21">result</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="151:5" pos:end="157:5"><if pos:start="151:5" pos:end="157:5">if <condition pos:start="151:8" pos:end="151:54">(<expr pos:start="151:9" pos:end="151:53"><operator pos:start="151:9" pos:end="151:9">(</operator><name pos:start="151:10" pos:end="151:15">result</name> <operator pos:start="151:17" pos:end="151:17">=</operator> <call pos:start="151:19" pos:end="151:48"><name pos:start="151:19" pos:end="151:31">ff_get_buffer</name><argument_list pos:start="151:32" pos:end="151:48">(<argument pos:start="151:33" pos:end="151:37"><expr pos:start="151:33" pos:end="151:37"><name pos:start="151:33" pos:end="151:37">avctx</name></expr></argument>, <argument pos:start="151:40" pos:end="151:44"><expr pos:start="151:40" pos:end="151:44"><name pos:start="151:40" pos:end="151:44">frame</name></expr></argument>, <argument pos:start="151:47" pos:end="151:47"><expr pos:start="151:47" pos:end="151:47"><literal type="number" pos:start="151:47" pos:end="151:47">0</literal></expr></argument>)</argument_list></call><operator pos:start="151:49" pos:end="151:49">)</operator> <operator pos:start="151:51" pos:end="151:51">&lt;</operator> <literal type="number" pos:start="151:53" pos:end="151:53">0</literal></expr>)</condition> <block pos:start="151:56" pos:end="157:5">{<block_content pos:start="153:9" pos:end="155:22">

        <expr_stmt pos:start="153:9" pos:end="153:61"><expr pos:start="153:9" pos:end="153:60"><call pos:start="153:9" pos:end="153:60"><name pos:start="153:9" pos:end="153:14">av_log</name><argument_list pos:start="153:15" pos:end="153:60">(<argument pos:start="153:16" pos:end="153:20"><expr pos:start="153:16" pos:end="153:20"><name pos:start="153:16" pos:end="153:20">avctx</name></expr></argument>, <argument pos:start="153:23" pos:end="153:34"><expr pos:start="153:23" pos:end="153:34"><name pos:start="153:23" pos:end="153:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="153:37" pos:end="153:59"><expr pos:start="153:37" pos:end="153:59"><literal type="string" pos:start="153:37" pos:end="153:59">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="155:9" pos:end="155:22">return <expr pos:start="155:16" pos:end="155:21"><name pos:start="155:16" pos:end="155:21">result</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="161:5" pos:end="175:5"><if pos:start="161:5" pos:end="171:5">if <condition pos:start="161:8" pos:end="161:25">(<expr pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:11">ctx</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:24">is_scalable</name></name></expr>)</condition> <block pos:start="161:27" pos:end="171:5">{<block_content pos:start="163:9" pos:end="169:87">

        <if_stmt pos:start="163:9" pos:end="169:87"><if pos:start="163:9" pos:end="165:87">if <condition pos:start="163:12" pos:end="163:50">(<expr pos:start="163:13" pos:end="163:49"><name pos:start="163:13" pos:end="163:27"><name pos:start="163:13" pos:end="163:17">avctx</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:27">codec_id</name></name> <operator pos:start="163:29" pos:end="163:30">==</operator> <name pos:start="163:32" pos:end="163:49">AV_CODEC_ID_INDEO4</name></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:87"><block_content pos:start="165:13" pos:end="165:87">

            <expr_stmt pos:start="165:13" pos:end="165:87"><expr pos:start="165:13" pos:end="165:86"><call pos:start="165:13" pos:end="165:86"><name pos:start="165:13" pos:end="165:33">ff_ivi_recompose_haar</name><argument_list pos:start="165:34" pos:end="165:86">(<argument pos:start="165:35" pos:end="165:49"><expr pos:start="165:35" pos:end="165:49"><operator pos:start="165:35" pos:end="165:35">&amp;</operator><name pos:start="165:36" pos:end="165:49"><name pos:start="165:36" pos:end="165:38">ctx</name><operator pos:start="165:39" pos:end="165:40">-&gt;</operator><name pos:start="165:41" pos:end="165:46">planes</name><index pos:start="165:47" pos:end="165:49">[<expr pos:start="165:48" pos:end="165:48"><literal type="number" pos:start="165:48" pos:end="165:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:52" pos:end="165:65"><expr pos:start="165:52" pos:end="165:65"><name pos:start="165:52" pos:end="165:65"><name pos:start="165:52" pos:end="165:56">frame</name><operator pos:start="165:57" pos:end="165:58">-&gt;</operator><name pos:start="165:59" pos:end="165:62">data</name><index pos:start="165:63" pos:end="165:65">[<expr pos:start="165:64" pos:end="165:64"><literal type="number" pos:start="165:64" pos:end="165:64">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:68" pos:end="165:85"><expr pos:start="165:68" pos:end="165:85"><name pos:start="165:68" pos:end="165:85"><name pos:start="165:68" pos:end="165:72">frame</name><operator pos:start="165:73" pos:end="165:74">-&gt;</operator><name pos:start="165:75" pos:end="165:82">linesize</name><index pos:start="165:83" pos:end="165:85">[<expr pos:start="165:84" pos:end="165:84"><literal type="number" pos:start="165:84" pos:end="165:84">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="167:9" pos:end="169:87">else<block type="pseudo" pos:start="169:13" pos:end="169:87"><block_content pos:start="169:13" pos:end="169:87">

            <expr_stmt pos:start="169:13" pos:end="169:87"><expr pos:start="169:13" pos:end="169:86"><call pos:start="169:13" pos:end="169:86"><name pos:start="169:13" pos:end="169:30">ff_ivi_recompose53</name>   <argument_list pos:start="169:34" pos:end="169:86">(<argument pos:start="169:35" pos:end="169:49"><expr pos:start="169:35" pos:end="169:49"><operator pos:start="169:35" pos:end="169:35">&amp;</operator><name pos:start="169:36" pos:end="169:49"><name pos:start="169:36" pos:end="169:38">ctx</name><operator pos:start="169:39" pos:end="169:40">-&gt;</operator><name pos:start="169:41" pos:end="169:46">planes</name><index pos:start="169:47" pos:end="169:49">[<expr pos:start="169:48" pos:end="169:48"><literal type="number" pos:start="169:48" pos:end="169:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="169:52" pos:end="169:65"><expr pos:start="169:52" pos:end="169:65"><name pos:start="169:52" pos:end="169:65"><name pos:start="169:52" pos:end="169:56">frame</name><operator pos:start="169:57" pos:end="169:58">-&gt;</operator><name pos:start="169:59" pos:end="169:62">data</name><index pos:start="169:63" pos:end="169:65">[<expr pos:start="169:64" pos:end="169:64"><literal type="number" pos:start="169:64" pos:end="169:64">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="169:68" pos:end="169:85"><expr pos:start="169:68" pos:end="169:85"><name pos:start="169:68" pos:end="169:85"><name pos:start="169:68" pos:end="169:72">frame</name><operator pos:start="169:73" pos:end="169:74">-&gt;</operator><name pos:start="169:75" pos:end="169:82">linesize</name><index pos:start="169:83" pos:end="169:85">[<expr pos:start="169:84" pos:end="169:84"><literal type="number" pos:start="169:84" pos:end="169:84">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="171:7" pos:end="175:5">else <block pos:start="171:12" pos:end="175:5">{<block_content pos:start="173:9" pos:end="173:78">

        <expr_stmt pos:start="173:9" pos:end="173:78"><expr pos:start="173:9" pos:end="173:77"><call pos:start="173:9" pos:end="173:77"><name pos:start="173:9" pos:end="173:24">ivi_output_plane</name><argument_list pos:start="173:25" pos:end="173:77">(<argument pos:start="173:26" pos:end="173:40"><expr pos:start="173:26" pos:end="173:40"><operator pos:start="173:26" pos:end="173:26">&amp;</operator><name pos:start="173:27" pos:end="173:40"><name pos:start="173:27" pos:end="173:29">ctx</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:37">planes</name><index pos:start="173:38" pos:end="173:40">[<expr pos:start="173:39" pos:end="173:39"><literal type="number" pos:start="173:39" pos:end="173:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:43" pos:end="173:56"><expr pos:start="173:43" pos:end="173:56"><name pos:start="173:43" pos:end="173:56"><name pos:start="173:43" pos:end="173:47">frame</name><operator pos:start="173:48" pos:end="173:49">-&gt;</operator><name pos:start="173:50" pos:end="173:53">data</name><index pos:start="173:54" pos:end="173:56">[<expr pos:start="173:55" pos:end="173:55"><literal type="number" pos:start="173:55" pos:end="173:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:59" pos:end="173:76"><expr pos:start="173:59" pos:end="173:76"><name pos:start="173:59" pos:end="173:76"><name pos:start="173:59" pos:end="173:63">frame</name><operator pos:start="173:64" pos:end="173:65">-&gt;</operator><name pos:start="173:66" pos:end="173:73">linesize</name><index pos:start="173:74" pos:end="173:76">[<expr pos:start="173:75" pos:end="173:75"><literal type="number" pos:start="173:75" pos:end="173:75">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:74"><expr pos:start="179:5" pos:end="179:73"><call pos:start="179:5" pos:end="179:73"><name pos:start="179:5" pos:end="179:20">ivi_output_plane</name><argument_list pos:start="179:21" pos:end="179:73">(<argument pos:start="179:22" pos:end="179:36"><expr pos:start="179:22" pos:end="179:36"><operator pos:start="179:22" pos:end="179:22">&amp;</operator><name pos:start="179:23" pos:end="179:36"><name pos:start="179:23" pos:end="179:25">ctx</name><operator pos:start="179:26" pos:end="179:27">-&gt;</operator><name pos:start="179:28" pos:end="179:33">planes</name><index pos:start="179:34" pos:end="179:36">[<expr pos:start="179:35" pos:end="179:35"><literal type="number" pos:start="179:35" pos:end="179:35">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="179:39" pos:end="179:52"><expr pos:start="179:39" pos:end="179:52"><name pos:start="179:39" pos:end="179:52"><name pos:start="179:39" pos:end="179:43">frame</name><operator pos:start="179:44" pos:end="179:45">-&gt;</operator><name pos:start="179:46" pos:end="179:49">data</name><index pos:start="179:50" pos:end="179:52">[<expr pos:start="179:51" pos:end="179:51"><literal type="number" pos:start="179:51" pos:end="179:51">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="179:55" pos:end="179:72"><expr pos:start="179:55" pos:end="179:72"><name pos:start="179:55" pos:end="179:72"><name pos:start="179:55" pos:end="179:59">frame</name><operator pos:start="179:60" pos:end="179:61">-&gt;</operator><name pos:start="179:62" pos:end="179:69">linesize</name><index pos:start="179:70" pos:end="179:72">[<expr pos:start="179:71" pos:end="179:71"><literal type="number" pos:start="179:71" pos:end="179:71">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:74"><expr pos:start="181:5" pos:end="181:73"><call pos:start="181:5" pos:end="181:73"><name pos:start="181:5" pos:end="181:20">ivi_output_plane</name><argument_list pos:start="181:21" pos:end="181:73">(<argument pos:start="181:22" pos:end="181:36"><expr pos:start="181:22" pos:end="181:36"><operator pos:start="181:22" pos:end="181:22">&amp;</operator><name pos:start="181:23" pos:end="181:36"><name pos:start="181:23" pos:end="181:25">ctx</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:33">planes</name><index pos:start="181:34" pos:end="181:36">[<expr pos:start="181:35" pos:end="181:35"><literal type="number" pos:start="181:35" pos:end="181:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="181:39" pos:end="181:52"><expr pos:start="181:39" pos:end="181:52"><name pos:start="181:39" pos:end="181:52"><name pos:start="181:39" pos:end="181:43">frame</name><operator pos:start="181:44" pos:end="181:45">-&gt;</operator><name pos:start="181:46" pos:end="181:49">data</name><index pos:start="181:50" pos:end="181:52">[<expr pos:start="181:51" pos:end="181:51"><literal type="number" pos:start="181:51" pos:end="181:51">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="181:55" pos:end="181:72"><expr pos:start="181:55" pos:end="181:72"><name pos:start="181:55" pos:end="181:72"><name pos:start="181:55" pos:end="181:59">frame</name><operator pos:start="181:60" pos:end="181:61">-&gt;</operator><name pos:start="181:62" pos:end="181:69">linesize</name><index pos:start="181:70" pos:end="181:72">[<expr pos:start="181:71" pos:end="181:71"><literal type="number" pos:start="181:71" pos:end="181:71">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:19"><expr pos:start="185:5" pos:end="185:18"><operator pos:start="185:5" pos:end="185:5">*</operator><name pos:start="185:6" pos:end="185:14">got_frame</name> <operator pos:start="185:16" pos:end="185:16">=</operator> <literal type="number" pos:start="185:18" pos:end="185:18">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="189:5" pos:end="197:7">/* If the bidirectional mode is enabled, next I and the following P

     * frame will be sent together. Unfortunately the approach below seems

     * to be the only way to handle the B-frames mode.

     * That's exactly the same Intel decoders do.

     */</comment>

    <if_stmt pos:start="199:5" pos:end="227:5"><if pos:start="199:5" pos:end="227:5">if <condition pos:start="199:8" pos:end="201:48">(<expr pos:start="199:9" pos:end="201:47"><name pos:start="199:9" pos:end="199:23"><name pos:start="199:9" pos:end="199:13">avctx</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:23">codec_id</name></name> <operator pos:start="199:25" pos:end="199:26">==</operator> <name pos:start="199:28" pos:end="199:45">AV_CODEC_ID_INDEO4</name> <operator pos:start="199:47" pos:end="199:48">&amp;&amp;</operator>

        <name pos:start="201:9" pos:end="201:23"><name pos:start="201:9" pos:end="201:11">ctx</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:23">frame_type</name></name> <operator pos:start="201:25" pos:end="201:26">==</operator> <name pos:start="201:28" pos:end="201:47">IVI4_FRAMETYPE_INTRA</name></expr>)</condition> <block pos:start="201:50" pos:end="227:5">{<block_content pos:start="203:9" pos:end="225:9">

        <decl_stmt pos:start="203:9" pos:end="203:17"><decl pos:start="203:9" pos:end="203:16"><type pos:start="203:9" pos:end="203:11"><name pos:start="203:9" pos:end="203:11">int</name></type> <name pos:start="203:13" pos:end="203:16">left</name></decl>;</decl_stmt>



        <while pos:start="207:9" pos:end="207:38">while <condition pos:start="207:15" pos:end="207:37">(<expr pos:start="207:16" pos:end="207:36"><call pos:start="207:16" pos:end="207:36"><name pos:start="207:16" pos:end="207:23">get_bits</name><argument_list pos:start="207:24" pos:end="207:36">(<argument pos:start="207:25" pos:end="207:32"><expr pos:start="207:25" pos:end="207:32"><operator pos:start="207:25" pos:end="207:25">&amp;</operator><name pos:start="207:26" pos:end="207:32"><name pos:start="207:26" pos:end="207:28">ctx</name><operator pos:start="207:29" pos:end="207:30">-&gt;</operator><name pos:start="207:31" pos:end="207:32">gb</name></name></expr></argument>, <argument pos:start="207:35" pos:end="207:35"><expr pos:start="207:35" pos:end="207:35"><literal type="number" pos:start="207:35" pos:end="207:35">8</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="207:38" pos:end="207:38"><block_content pos:start="207:38" pos:end="207:38"><empty_stmt pos:start="207:38" pos:end="207:38">;</empty_stmt></block_content></block></while> <comment type="line" pos:start="207:40" pos:end="207:61">// skip version string</comment>

        <expr_stmt pos:start="209:9" pos:end="209:47"><expr pos:start="209:9" pos:end="209:46"><name pos:start="209:9" pos:end="209:12">left</name> <operator pos:start="209:14" pos:end="209:14">=</operator> <call pos:start="209:16" pos:end="209:39"><name pos:start="209:16" pos:end="209:29">get_bits_count</name><argument_list pos:start="209:30" pos:end="209:39">(<argument pos:start="209:31" pos:end="209:38"><expr pos:start="209:31" pos:end="209:38"><operator pos:start="209:31" pos:end="209:31">&amp;</operator><name pos:start="209:32" pos:end="209:38"><name pos:start="209:32" pos:end="209:34">ctx</name><operator pos:start="209:35" pos:end="209:36">-&gt;</operator><name pos:start="209:37" pos:end="209:38">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="209:41" pos:end="209:41">&amp;</operator> <literal type="number" pos:start="209:43" pos:end="209:46">0x18</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:44"><expr pos:start="211:9" pos:end="211:43"><call pos:start="211:9" pos:end="211:43"><name pos:start="211:9" pos:end="211:22">skip_bits_long</name><argument_list pos:start="211:23" pos:end="211:43">(<argument pos:start="211:24" pos:end="211:31"><expr pos:start="211:24" pos:end="211:31"><operator pos:start="211:24" pos:end="211:24">&amp;</operator><name pos:start="211:25" pos:end="211:31"><name pos:start="211:25" pos:end="211:27">ctx</name><operator pos:start="211:28" pos:end="211:29">-&gt;</operator><name pos:start="211:30" pos:end="211:31">gb</name></name></expr></argument>, <argument pos:start="211:34" pos:end="211:42"><expr pos:start="211:34" pos:end="211:42"><literal type="number" pos:start="211:34" pos:end="211:37">64</literal> <operator pos:start="211:37" pos:end="211:37">-</operator> <name pos:start="211:39" pos:end="211:42">left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="213:9" pos:end="225:9"><if pos:start="213:9" pos:end="225:9">if <condition pos:start="213:12" pos:end="215:52">(<expr pos:start="213:13" pos:end="215:51"><call pos:start="213:13" pos:end="213:35"><name pos:start="213:13" pos:end="213:25">get_bits_left</name><argument_list pos:start="213:26" pos:end="213:35">(<argument pos:start="213:27" pos:end="213:34"><expr pos:start="213:27" pos:end="213:34"><operator pos:start="213:27" pos:end="213:27">&amp;</operator><name pos:start="213:28" pos:end="213:34"><name pos:start="213:28" pos:end="213:30">ctx</name><operator pos:start="213:31" pos:end="213:32">-&gt;</operator><name pos:start="213:33" pos:end="213:34">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="213:37" pos:end="213:37">&gt;</operator> <literal type="number" pos:start="213:39" pos:end="213:40">18</literal> <operator pos:start="213:42" pos:end="213:43">&amp;&amp;</operator>

            <call pos:start="215:13" pos:end="215:40"><name pos:start="215:13" pos:end="215:26">show_bits_long</name><argument_list pos:start="215:27" pos:end="215:40">(<argument pos:start="215:28" pos:end="215:35"><expr pos:start="215:28" pos:end="215:35"><operator pos:start="215:28" pos:end="215:28">&amp;</operator><name pos:start="215:29" pos:end="215:35"><name pos:start="215:29" pos:end="215:31">ctx</name><operator pos:start="215:32" pos:end="215:33">-&gt;</operator><name pos:start="215:34" pos:end="215:35">gb</name></name></expr></argument>, <argument pos:start="215:38" pos:end="215:39"><expr pos:start="215:38" pos:end="215:39"><literal type="number" pos:start="215:38" pos:end="215:39">21</literal></expr></argument>)</argument_list></call> <operator pos:start="215:42" pos:end="215:43">==</operator> <literal type="number" pos:start="215:45" pos:end="215:51">0xBFFF8</literal></expr>)</condition> <block pos:start="215:54" pos:end="225:9">{<block_content pos:start="217:13" pos:end="223:78"> <comment type="line" pos:start="215:56" pos:end="215:81">// syncheader + inter type</comment>

            <decl_stmt pos:start="217:13" pos:end="217:25"><decl pos:start="217:13" pos:end="217:24"><type pos:start="217:13" pos:end="217:20"><name pos:start="217:13" pos:end="217:20">AVPacket</name></type> <name pos:start="217:22" pos:end="217:24">pkt</name></decl>;</decl_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:69"><expr pos:start="219:13" pos:end="219:68"><name pos:start="219:13" pos:end="219:20"><name pos:start="219:13" pos:end="219:15">pkt</name><operator pos:start="219:16" pos:end="219:16">.</operator><name pos:start="219:17" pos:end="219:20">data</name></name> <operator pos:start="219:22" pos:end="219:22">=</operator> <name pos:start="219:24" pos:end="219:34"><name pos:start="219:24" pos:end="219:28">avpkt</name><operator pos:start="219:29" pos:end="219:30">-&gt;</operator><name pos:start="219:31" pos:end="219:34">data</name></name> <operator pos:start="219:36" pos:end="219:36">+</operator> <operator pos:start="219:38" pos:end="219:38">(</operator><call pos:start="219:39" pos:end="219:62"><name pos:start="219:39" pos:end="219:52">get_bits_count</name><argument_list pos:start="219:53" pos:end="219:62">(<argument pos:start="219:54" pos:end="219:61"><expr pos:start="219:54" pos:end="219:61"><operator pos:start="219:54" pos:end="219:54">&amp;</operator><name pos:start="219:55" pos:end="219:61"><name pos:start="219:55" pos:end="219:57">ctx</name><operator pos:start="219:58" pos:end="219:59">-&gt;</operator><name pos:start="219:60" pos:end="219:61">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="219:64" pos:end="219:65">&gt;&gt;</operator> <literal type="number" pos:start="219:67" pos:end="219:67">3</literal><operator pos:start="219:68" pos:end="219:68">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:52"><expr pos:start="221:13" pos:end="221:51"><name pos:start="221:13" pos:end="221:20"><name pos:start="221:13" pos:end="221:15">pkt</name><operator pos:start="221:16" pos:end="221:16">.</operator><name pos:start="221:17" pos:end="221:20">size</name></name> <operator pos:start="221:22" pos:end="221:22">=</operator> <call pos:start="221:24" pos:end="221:46"><name pos:start="221:24" pos:end="221:36">get_bits_left</name><argument_list pos:start="221:37" pos:end="221:46">(<argument pos:start="221:38" pos:end="221:45"><expr pos:start="221:38" pos:end="221:45"><operator pos:start="221:38" pos:end="221:38">&amp;</operator><name pos:start="221:39" pos:end="221:45"><name pos:start="221:39" pos:end="221:41">ctx</name><operator pos:start="221:42" pos:end="221:43">-&gt;</operator><name pos:start="221:44" pos:end="221:45">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="221:48" pos:end="221:49">&gt;&gt;</operator> <literal type="number" pos:start="221:51" pos:end="221:51">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:78"><expr pos:start="223:13" pos:end="223:77"><call pos:start="223:13" pos:end="223:77"><name pos:start="223:13" pos:end="223:31">ff_ivi_decode_frame</name><argument_list pos:start="223:32" pos:end="223:77">(<argument pos:start="223:33" pos:end="223:37"><expr pos:start="223:33" pos:end="223:37"><name pos:start="223:33" pos:end="223:37">avctx</name></expr></argument>, <argument pos:start="223:40" pos:end="223:51"><expr pos:start="223:40" pos:end="223:51"><name pos:start="223:40" pos:end="223:51"><name pos:start="223:40" pos:end="223:42">ctx</name><operator pos:start="223:43" pos:end="223:44">-&gt;</operator><name pos:start="223:45" pos:end="223:51">p_frame</name></name></expr></argument>, <argument pos:start="223:54" pos:end="223:70"><expr pos:start="223:54" pos:end="223:70"><operator pos:start="223:54" pos:end="223:54">&amp;</operator><name pos:start="223:55" pos:end="223:70"><name pos:start="223:55" pos:end="223:57">ctx</name><operator pos:start="223:58" pos:end="223:59">-&gt;</operator><name pos:start="223:60" pos:end="223:70">got_p_frame</name></name></expr></argument>, <argument pos:start="223:73" pos:end="223:76"><expr pos:start="223:73" pos:end="223:76"><operator pos:start="223:73" pos:end="223:73">&amp;</operator><name pos:start="223:74" pos:end="223:76">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="231:5" pos:end="231:20">return <expr pos:start="231:12" pos:end="231:19"><name pos:start="231:12" pos:end="231:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
