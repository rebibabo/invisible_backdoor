<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7381.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">bdrv_detach_aio_context</name><parameter_list pos:start="1:29" pos:end="1:50">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:45">BlockDriverState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:27">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">BdrvAioNotifier</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">baf</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:16"><name pos:start="9:10" pos:end="9:11">bs</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:16">drv</name></name></expr>)</condition> <block pos:start="9:19" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:17">QLIST_FOREACH</name><argument_list pos:start="17:18" pos:end="17:48">(<argument pos:start="17:19" pos:end="17:21">baf</argument>, <argument pos:start="17:24" pos:end="17:41">&amp;bs-&gt;aio_notifiers</argument>, <argument pos:start="17:44" pos:end="17:47">list</argument>)</argument_list></macro> <block pos:start="17:50" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:45">

        <expr_stmt pos:start="19:9" pos:end="19:45"><expr pos:start="19:9" pos:end="19:44"><call pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:11">baf</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:31">detach_aio_context</name></name><argument_list pos:start="19:32" pos:end="19:44">(<argument pos:start="19:33" pos:end="19:43"><expr pos:start="19:33" pos:end="19:43"><name pos:start="19:33" pos:end="19:43"><name pos:start="19:33" pos:end="19:35">baf</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:43">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:30">(<expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:10">bs</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:29">io_limits_enabled</name></name></expr>)</condition> <block pos:start="25:32" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:65">

        <expr_stmt pos:start="27:9" pos:end="27:65"><expr pos:start="27:9" pos:end="27:64"><call pos:start="27:9" pos:end="27:64"><name pos:start="27:9" pos:end="27:42">throttle_timers_detach_aio_context</name><argument_list pos:start="27:43" pos:end="27:64">(<argument pos:start="27:44" pos:end="27:63"><expr pos:start="27:44" pos:end="27:63"><operator pos:start="27:44" pos:end="27:44">&amp;</operator><name pos:start="27:45" pos:end="27:63"><name pos:start="27:45" pos:end="27:46">bs</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:63">throttle_timers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:41">(<expr pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:10">bs</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:15">drv</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:40">bdrv_detach_aio_context</name></name></expr>)</condition> <block pos:start="31:43" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:45">

        <expr_stmt pos:start="33:9" pos:end="33:45"><expr pos:start="33:9" pos:end="33:44"><call pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:10">bs</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:15">drv</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:40">bdrv_detach_aio_context</name></name><argument_list pos:start="33:41" pos:end="33:44">(<argument pos:start="33:42" pos:end="33:43"><expr pos:start="33:42" pos:end="33:43"><name pos:start="33:42" pos:end="33:43">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:10">bs</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:16">file</name></name></expr>)</condition> <block pos:start="37:19" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:46">

        <expr_stmt pos:start="39:9" pos:end="39:46"><expr pos:start="39:9" pos:end="39:45"><call pos:start="39:9" pos:end="39:45"><name pos:start="39:9" pos:end="39:31">bdrv_detach_aio_context</name><argument_list pos:start="39:32" pos:end="39:45">(<argument pos:start="39:33" pos:end="39:44"><expr pos:start="39:33" pos:end="39:44"><name pos:start="39:33" pos:end="39:44"><name pos:start="39:33" pos:end="39:34">bs</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:40">file</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:44">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:20">(<expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:10">bs</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:19">backing</name></name></expr>)</condition> <block pos:start="43:22" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:49">

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><call pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:31">bdrv_detach_aio_context</name><argument_list pos:start="45:32" pos:end="45:48">(<argument pos:start="45:33" pos:end="45:47"><expr pos:start="45:33" pos:end="45:47"><name pos:start="45:33" pos:end="45:47"><name pos:start="45:33" pos:end="45:34">bs</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:43">backing</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:47">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:6">bs</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:19">aio_context</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:26">NULL</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
