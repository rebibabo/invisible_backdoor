<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20547.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:44"><name pos:start="1:1" pos:end="1:9">dma_write</name><argument_list pos:start="1:10" pos:end="3:44">(<argument pos:start="1:11" pos:end="1:22">void *opaque</argument>, <argument pos:start="1:25" pos:end="1:47">target_phys_addr_t addr</argument>,

	  <argument pos:start="3:11" pos:end="3:24">uint64_t val64</argument>, <argument pos:start="3:27" pos:end="3:43">unsigned int size</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="129:1">{<block_content pos:start="7:9" pos:end="127:9">

        <decl_stmt pos:start="7:9" pos:end="7:42"><decl pos:start="7:9" pos:end="7:41"><type pos:start="7:9" pos:end="7:28"><name pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:14">struct</name> <name pos:start="7:16" pos:end="7:26">fs_dma_ctrl</name></name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:32">ctrl</name> <init pos:start="7:34" pos:end="7:41">= <expr pos:start="7:36" pos:end="7:41"><name pos:start="7:36" pos:end="7:41">opaque</name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:31"><decl pos:start="9:9" pos:end="9:30"><type pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:16">uint32_t</name></type> <name pos:start="9:18" pos:end="9:22">value</name> <init pos:start="9:24" pos:end="9:30">= <expr pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:30">val64</name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:14"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">c</name></decl>;</decl_stmt>



	<if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:22">(<expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:16">size</name> <operator pos:start="15:18" pos:end="15:19">!=</operator> <literal type="number" pos:start="15:21" pos:end="15:21">4</literal></expr>)</condition> <block pos:start="15:24" pos:end="19:9">{<block_content pos:start="17:17" pos:end="17:50">

		<expr_stmt pos:start="17:17" pos:end="17:50"><expr pos:start="17:17" pos:end="17:49"><call pos:start="17:17" pos:end="17:49"><name pos:start="17:17" pos:end="17:28">dma_winvalid</name><argument_list pos:start="17:29" pos:end="17:49">(<argument pos:start="17:30" pos:end="17:35"><expr pos:start="17:30" pos:end="17:35"><name pos:start="17:30" pos:end="17:35">opaque</name></expr></argument>, <argument pos:start="17:38" pos:end="17:41"><expr pos:start="17:38" pos:end="17:41"><name pos:start="17:38" pos:end="17:41">addr</name></expr></argument>, <argument pos:start="17:44" pos:end="17:48"><expr pos:start="17:44" pos:end="17:48"><name pos:start="17:44" pos:end="17:48">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="23:9" pos:end="23:73">/* Make addr relative to this channel and bounded to nr regs.  */</comment>

	<expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:9">c</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:22">fs_channel</name><argument_list pos:start="25:23" pos:end="25:28">(<argument pos:start="25:24" pos:end="25:27"><expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:21"><expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:12">addr</name> <operator pos:start="27:14" pos:end="27:15">&amp;=</operator> <literal type="number" pos:start="27:17" pos:end="27:20">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:19"><expr pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:12">addr</name> <operator pos:start="29:14" pos:end="29:16">&gt;&gt;=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">2</literal></expr>;</expr_stmt>

        <switch pos:start="31:9" pos:end="127:9">switch <condition pos:start="31:16" pos:end="31:21">(<expr pos:start="31:17" pos:end="31:20"><name pos:start="31:17" pos:end="31:20">addr</name></expr>)</condition>

	<block pos:start="33:9" pos:end="127:9">{<block_content pos:start="35:17" pos:end="125:30">

		<case pos:start="35:17" pos:end="35:29">case <expr pos:start="35:22" pos:end="35:28"><name pos:start="35:22" pos:end="35:28">RW_DATA</name></expr>:</case>

			<expr_stmt pos:start="37:25" pos:end="37:61"><expr pos:start="37:25" pos:end="37:60"><name pos:start="37:25" pos:end="37:41"><name pos:start="37:25" pos:end="37:28">ctrl</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:38">channels</name><index pos:start="37:39" pos:end="37:41">[<expr pos:start="37:40" pos:end="37:40"><name pos:start="37:40" pos:end="37:40">c</name></expr>]</index></name><operator pos:start="37:42" pos:end="37:42">.</operator><name pos:start="37:43" pos:end="37:52"><name pos:start="37:43" pos:end="37:46">regs</name><index pos:start="37:47" pos:end="37:52">[<expr pos:start="37:48" pos:end="37:51"><name pos:start="37:48" pos:end="37:51">addr</name></expr>]</index></name> <operator pos:start="37:54" pos:end="37:54">=</operator> <name pos:start="37:56" pos:end="37:60">value</name></expr>;</expr_stmt>

			<break pos:start="39:25" pos:end="39:30">break;</break>



		<case pos:start="43:17" pos:end="43:28">case <expr pos:start="43:22" pos:end="43:27"><name pos:start="43:22" pos:end="43:27">RW_CFG</name></expr>:</case>

			<expr_stmt pos:start="45:25" pos:end="45:61"><expr pos:start="45:25" pos:end="45:60"><name pos:start="45:25" pos:end="45:41"><name pos:start="45:25" pos:end="45:28">ctrl</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:38">channels</name><index pos:start="45:39" pos:end="45:41">[<expr pos:start="45:40" pos:end="45:40"><name pos:start="45:40" pos:end="45:40">c</name></expr>]</index></name><operator pos:start="45:42" pos:end="45:42">.</operator><name pos:start="45:43" pos:end="45:52"><name pos:start="45:43" pos:end="45:46">regs</name><index pos:start="45:47" pos:end="45:52">[<expr pos:start="45:48" pos:end="45:51"><name pos:start="45:48" pos:end="45:51">addr</name></expr>]</index></name> <operator pos:start="45:54" pos:end="45:54">=</operator> <name pos:start="45:56" pos:end="45:60">value</name></expr>;</expr_stmt>

			<expr_stmt pos:start="47:25" pos:end="47:50"><expr pos:start="47:25" pos:end="47:49"><call pos:start="47:25" pos:end="47:49"><name pos:start="47:25" pos:end="47:40">dma_update_state</name><argument_list pos:start="47:41" pos:end="47:49">(<argument pos:start="47:42" pos:end="47:45"><expr pos:start="47:42" pos:end="47:45"><name pos:start="47:42" pos:end="47:45">ctrl</name></expr></argument>, <argument pos:start="47:48" pos:end="47:48"><expr pos:start="47:48" pos:end="47:48"><name pos:start="47:48" pos:end="47:48">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="49:25" pos:end="49:30">break;</break>

		<case pos:start="51:17" pos:end="51:28">case <expr pos:start="51:22" pos:end="51:27"><name pos:start="51:22" pos:end="51:27">RW_CMD</name></expr>:</case>

			<comment type="block" pos:start="53:25" pos:end="53:40">/* continue.  */</comment>

			<if_stmt pos:start="55:25" pos:end="59:49"><if pos:start="55:25" pos:end="59:49">if <condition pos:start="55:28" pos:end="55:39">(<expr pos:start="55:29" pos:end="55:38"><name pos:start="55:29" pos:end="55:33">value</name> <operator pos:start="55:35" pos:end="55:35">&amp;</operator> <operator pos:start="55:37" pos:end="55:37">~</operator><literal type="number" pos:start="55:38" pos:end="55:38">1</literal></expr>)</condition><block type="pseudo" pos:start="57:33" pos:end="59:49"><block_content pos:start="57:33" pos:end="59:49">

				<expr_stmt pos:start="57:33" pos:end="59:49"><expr pos:start="57:33" pos:end="59:48"><call pos:start="57:33" pos:end="59:48"><name pos:start="57:33" pos:end="57:38">printf</name><argument_list pos:start="57:39" pos:end="59:48">(<argument pos:start="57:40" pos:end="57:75"><expr pos:start="57:40" pos:end="57:75"><literal type="string" pos:start="57:40" pos:end="57:75">"Invalid store to ch=%d RW_CMD %x\n"</literal></expr></argument>,

				       <argument pos:start="59:40" pos:end="59:40"><expr pos:start="59:40" pos:end="59:40"><name pos:start="59:40" pos:end="59:40">c</name></expr></argument>, <argument pos:start="59:43" pos:end="59:47"><expr pos:start="59:43" pos:end="59:47"><name pos:start="59:43" pos:end="59:47">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

			<expr_stmt pos:start="61:25" pos:end="61:61"><expr pos:start="61:25" pos:end="61:60"><name pos:start="61:25" pos:end="61:41"><name pos:start="61:25" pos:end="61:28">ctrl</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:38">channels</name><index pos:start="61:39" pos:end="61:41">[<expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">c</name></expr>]</index></name><operator pos:start="61:42" pos:end="61:42">.</operator><name pos:start="61:43" pos:end="61:52"><name pos:start="61:43" pos:end="61:46">regs</name><index pos:start="61:47" pos:end="61:52">[<expr pos:start="61:48" pos:end="61:51"><name pos:start="61:48" pos:end="61:51">addr</name></expr>]</index></name> <operator pos:start="61:54" pos:end="61:54">=</operator> <name pos:start="61:56" pos:end="61:60">value</name></expr>;</expr_stmt>

			<expr_stmt pos:start="63:25" pos:end="63:50"><expr pos:start="63:25" pos:end="63:49"><call pos:start="63:25" pos:end="63:49"><name pos:start="63:25" pos:end="63:40">channel_continue</name><argument_list pos:start="63:41" pos:end="63:49">(<argument pos:start="63:42" pos:end="63:45"><expr pos:start="63:42" pos:end="63:45"><name pos:start="63:42" pos:end="63:45">ctrl</name></expr></argument>, <argument pos:start="63:48" pos:end="63:48"><expr pos:start="63:48" pos:end="63:48"><name pos:start="63:48" pos:end="63:48">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="65:25" pos:end="65:30">break;</break>



		<case pos:start="69:17" pos:end="69:35">case <expr pos:start="69:22" pos:end="69:34"><name pos:start="69:22" pos:end="69:34">RW_SAVED_DATA</name></expr>:</case>

		<case pos:start="71:17" pos:end="71:39">case <expr pos:start="71:22" pos:end="71:38"><name pos:start="71:22" pos:end="71:38">RW_SAVED_DATA_BUF</name></expr>:</case>

		<case pos:start="73:17" pos:end="73:30">case <expr pos:start="73:22" pos:end="73:29"><name pos:start="73:22" pos:end="73:29">RW_GROUP</name></expr>:</case>

		<case pos:start="75:17" pos:end="75:35">case <expr pos:start="75:22" pos:end="75:34"><name pos:start="75:22" pos:end="75:34">RW_GROUP_DOWN</name></expr>:</case>

			<expr_stmt pos:start="77:25" pos:end="77:61"><expr pos:start="77:25" pos:end="77:60"><name pos:start="77:25" pos:end="77:41"><name pos:start="77:25" pos:end="77:28">ctrl</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:38">channels</name><index pos:start="77:39" pos:end="77:41">[<expr pos:start="77:40" pos:end="77:40"><name pos:start="77:40" pos:end="77:40">c</name></expr>]</index></name><operator pos:start="77:42" pos:end="77:42">.</operator><name pos:start="77:43" pos:end="77:52"><name pos:start="77:43" pos:end="77:46">regs</name><index pos:start="77:47" pos:end="77:52">[<expr pos:start="77:48" pos:end="77:51"><name pos:start="77:48" pos:end="77:51">addr</name></expr>]</index></name> <operator pos:start="77:54" pos:end="77:54">=</operator> <name pos:start="77:56" pos:end="77:60">value</name></expr>;</expr_stmt>

			<break pos:start="79:25" pos:end="79:30">break;</break>



		<case pos:start="83:17" pos:end="83:33">case <expr pos:start="83:22" pos:end="83:32"><name pos:start="83:22" pos:end="83:32">RW_ACK_INTR</name></expr>:</case>

		<case pos:start="85:17" pos:end="85:34">case <expr pos:start="85:22" pos:end="85:33"><name pos:start="85:22" pos:end="85:33">RW_INTR_MASK</name></expr>:</case>

			<expr_stmt pos:start="87:25" pos:end="87:61"><expr pos:start="87:25" pos:end="87:60"><name pos:start="87:25" pos:end="87:41"><name pos:start="87:25" pos:end="87:28">ctrl</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:38">channels</name><index pos:start="87:39" pos:end="87:41">[<expr pos:start="87:40" pos:end="87:40"><name pos:start="87:40" pos:end="87:40">c</name></expr>]</index></name><operator pos:start="87:42" pos:end="87:42">.</operator><name pos:start="87:43" pos:end="87:52"><name pos:start="87:43" pos:end="87:46">regs</name><index pos:start="87:47" pos:end="87:52">[<expr pos:start="87:48" pos:end="87:51"><name pos:start="87:48" pos:end="87:51">addr</name></expr>]</index></name> <operator pos:start="87:54" pos:end="87:54">=</operator> <name pos:start="87:56" pos:end="87:60">value</name></expr>;</expr_stmt>

			<expr_stmt pos:start="89:25" pos:end="89:52"><expr pos:start="89:25" pos:end="89:51"><call pos:start="89:25" pos:end="89:51"><name pos:start="89:25" pos:end="89:42">channel_update_irq</name><argument_list pos:start="89:43" pos:end="89:51">(<argument pos:start="89:44" pos:end="89:47"><expr pos:start="89:44" pos:end="89:47"><name pos:start="89:44" pos:end="89:47">ctrl</name></expr></argument>, <argument pos:start="89:50" pos:end="89:50"><expr pos:start="89:50" pos:end="89:50"><name pos:start="89:50" pos:end="89:50">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if_stmt pos:start="91:25" pos:end="93:72"><if pos:start="91:25" pos:end="93:72">if <condition pos:start="91:28" pos:end="91:48">(<expr pos:start="91:29" pos:end="91:47"><name pos:start="91:29" pos:end="91:32">addr</name> <operator pos:start="91:34" pos:end="91:35">==</operator> <name pos:start="91:37" pos:end="91:47">RW_ACK_INTR</name></expr>)</condition><block type="pseudo" pos:start="93:33" pos:end="93:72"><block_content pos:start="93:33" pos:end="93:72">

				<expr_stmt pos:start="93:33" pos:end="93:72"><expr pos:start="93:33" pos:end="93:71"><name pos:start="93:33" pos:end="93:49"><name pos:start="93:33" pos:end="93:36">ctrl</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:46">channels</name><index pos:start="93:47" pos:end="93:49">[<expr pos:start="93:48" pos:end="93:48"><name pos:start="93:48" pos:end="93:48">c</name></expr>]</index></name><operator pos:start="93:50" pos:end="93:50">.</operator><name pos:start="93:51" pos:end="93:67"><name pos:start="93:51" pos:end="93:54">regs</name><index pos:start="93:55" pos:end="93:67">[<expr pos:start="93:56" pos:end="93:66"><name pos:start="93:56" pos:end="93:66">RW_ACK_INTR</name></expr>]</index></name> <operator pos:start="93:69" pos:end="93:69">=</operator> <literal type="number" pos:start="93:71" pos:end="93:71">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

			<break pos:start="95:25" pos:end="95:30">break;</break>



		<case pos:start="99:17" pos:end="99:35">case <expr pos:start="99:22" pos:end="99:34"><name pos:start="99:22" pos:end="99:34">RW_STREAM_CMD</name></expr>:</case>

			<if_stmt pos:start="101:25" pos:end="107:49"><if pos:start="101:25" pos:end="107:49">if <condition pos:start="101:28" pos:end="101:42">(<expr pos:start="101:29" pos:end="101:41"><name pos:start="101:29" pos:end="101:33">value</name> <operator pos:start="101:35" pos:end="101:35">&amp;</operator> <operator pos:start="101:37" pos:end="101:37">~</operator><literal type="number" pos:start="101:38" pos:end="101:41">1023</literal></expr>)</condition><block type="pseudo" pos:start="103:33" pos:end="107:49"><block_content pos:start="103:33" pos:end="107:49">

				<expr_stmt pos:start="103:33" pos:end="107:49"><expr pos:start="103:33" pos:end="107:48"><call pos:start="103:33" pos:end="107:48"><name pos:start="103:33" pos:end="103:38">printf</name><argument_list pos:start="103:39" pos:end="107:48">(<argument pos:start="103:40" pos:end="105:58"><expr pos:start="103:40" pos:end="105:58"><literal type="string" pos:start="103:40" pos:end="103:64">"Invalid store to ch=%d "</literal>

				       <literal type="string" pos:start="105:40" pos:end="105:58">"RW_STREAMCMD %x\n"</literal></expr></argument>,

				       <argument pos:start="107:40" pos:end="107:40"><expr pos:start="107:40" pos:end="107:40"><name pos:start="107:40" pos:end="107:40">c</name></expr></argument>, <argument pos:start="107:43" pos:end="107:47"><expr pos:start="107:43" pos:end="107:47"><name pos:start="107:43" pos:end="107:47">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

			<expr_stmt pos:start="109:25" pos:end="109:61"><expr pos:start="109:25" pos:end="109:60"><name pos:start="109:25" pos:end="109:41"><name pos:start="109:25" pos:end="109:28">ctrl</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:38">channels</name><index pos:start="109:39" pos:end="109:41">[<expr pos:start="109:40" pos:end="109:40"><name pos:start="109:40" pos:end="109:40">c</name></expr>]</index></name><operator pos:start="109:42" pos:end="109:42">.</operator><name pos:start="109:43" pos:end="109:52"><name pos:start="109:43" pos:end="109:46">regs</name><index pos:start="109:47" pos:end="109:52">[<expr pos:start="109:48" pos:end="109:51"><name pos:start="109:48" pos:end="109:51">addr</name></expr>]</index></name> <operator pos:start="109:54" pos:end="109:54">=</operator> <name pos:start="109:56" pos:end="109:60">value</name></expr>;</expr_stmt>

			<expr_stmt pos:start="111:25" pos:end="111:59"><expr pos:start="111:25" pos:end="111:58"><call pos:start="111:25" pos:end="111:58"><name pos:start="111:25" pos:end="111:25">D</name><argument_list pos:start="111:26" pos:end="111:58">(<argument pos:start="111:27" pos:end="111:57"><expr pos:start="111:27" pos:end="111:57"><call pos:start="111:27" pos:end="111:57"><name pos:start="111:27" pos:end="111:32">printf</name><argument_list pos:start="111:33" pos:end="111:57">(<argument pos:start="111:34" pos:end="111:53"><expr pos:start="111:34" pos:end="111:53"><literal type="string" pos:start="111:34" pos:end="111:53">"stream_cmd ch=%d\n"</literal></expr></argument>, <argument pos:start="111:56" pos:end="111:56"><expr pos:start="111:56" pos:end="111:56"><name pos:start="111:56" pos:end="111:56">c</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="113:25" pos:end="113:59"><expr pos:start="113:25" pos:end="113:58"><call pos:start="113:25" pos:end="113:58"><name pos:start="113:25" pos:end="113:42">channel_stream_cmd</name><argument_list pos:start="113:43" pos:end="113:58">(<argument pos:start="113:44" pos:end="113:47"><expr pos:start="113:44" pos:end="113:47"><name pos:start="113:44" pos:end="113:47">ctrl</name></expr></argument>, <argument pos:start="113:50" pos:end="113:50"><expr pos:start="113:50" pos:end="113:50"><name pos:start="113:50" pos:end="113:50">c</name></expr></argument>, <argument pos:start="113:53" pos:end="113:57"><expr pos:start="113:53" pos:end="113:57"><name pos:start="113:53" pos:end="113:57">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="115:25" pos:end="115:30">break;</break>



	        <default pos:start="119:17" pos:end="119:24">default:</default>

			<expr_stmt pos:start="121:25" pos:end="123:52"><expr pos:start="121:25" pos:end="123:51"><call pos:start="121:25" pos:end="123:51"><name pos:start="121:25" pos:end="121:25">D</name><argument_list pos:start="121:26" pos:end="123:51">(<argument pos:start="121:27" pos:end="123:50"><expr pos:start="121:27" pos:end="123:50"><call pos:start="121:27" pos:end="123:50"><name pos:start="121:27" pos:end="121:32">printf</name> <argument_list pos:start="121:34" pos:end="123:50">(<argument pos:start="121:35" pos:end="121:64"><expr pos:start="121:35" pos:end="121:64"><literal type="string" pos:start="121:35" pos:end="121:44">"%s c=%d "</literal> <name pos:start="121:46" pos:end="121:59">TARGET_FMT_plx</name> <literal type="string" pos:start="121:61" pos:end="121:64">"\n"</literal></expr></argument>,

				<argument pos:start="123:33" pos:end="123:40"><expr pos:start="123:33" pos:end="123:40"><name pos:start="123:33" pos:end="123:40">__func__</name></expr></argument>, <argument pos:start="123:43" pos:end="123:43"><expr pos:start="123:43" pos:end="123:43"><name pos:start="123:43" pos:end="123:43">c</name></expr></argument>, <argument pos:start="123:46" pos:end="123:49"><expr pos:start="123:46" pos:end="123:49"><name pos:start="123:46" pos:end="123:49">addr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="125:25" pos:end="125:30">break;</break>

        </block_content>}</block></switch>

</block_content>}</block>
</unit>
