<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6840.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">qemu_strtol</name><parameter_list pos:start="1:16" pos:end="3:29">(<parameter pos:start="1:17" pos:end="1:32"><decl pos:start="1:17" pos:end="1:32"><type pos:start="1:17" pos:end="1:32"><specifier pos:start="1:17" pos:end="1:21">const</specifier> <name pos:start="1:23" pos:end="1:26">char</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:32">nptr</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:53"><decl pos:start="1:35" pos:end="1:53"><type pos:start="1:35" pos:end="1:53"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:44">char</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier><modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">endptr</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:63"><decl pos:start="1:56" pos:end="1:63"><type pos:start="1:56" pos:end="1:63"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:63">base</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:28"><decl pos:start="3:17" pos:end="3:28"><type pos:start="3:17" pos:end="3:28"><name pos:start="3:17" pos:end="3:20">long</name> <modifier pos:start="3:22" pos:end="3:22">*</modifier></type><name pos:start="3:23" pos:end="3:28">result</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:15">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:12">ep</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="29:5"><if pos:start="11:5" pos:end="21:5">if <condition pos:start="11:8" pos:end="11:14">(<expr pos:start="11:9" pos:end="11:13"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:13">nptr</name></expr>)</condition> <block pos:start="11:16" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:22">

        <if_stmt pos:start="13:9" pos:end="17:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:19">(<expr pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:18">endptr</name></expr>)</condition> <block pos:start="13:21" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:27">

            <expr_stmt pos:start="15:13" pos:end="15:27"><expr pos:start="15:13" pos:end="15:26"><operator pos:start="15:13" pos:end="15:13">*</operator><name pos:start="15:14" pos:end="15:19">endptr</name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:26">nptr</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:22"><expr pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:11">err</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <operator pos:start="19:15" pos:end="19:15">-</operator><name pos:start="19:16" pos:end="19:21">EINVAL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="29:5">else <block pos:start="21:12" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:58">

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:13">errno</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:15">result</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:41"><name pos:start="25:19" pos:end="25:24">strtol</name><argument_list pos:start="25:25" pos:end="25:41">(<argument pos:start="25:26" pos:end="25:29"><expr pos:start="25:26" pos:end="25:29"><name pos:start="25:26" pos:end="25:29">nptr</name></expr></argument>, <argument pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><operator pos:start="25:32" pos:end="25:32">&amp;</operator><name pos:start="25:33" pos:end="25:34">ep</name></expr></argument>, <argument pos:start="25:37" pos:end="25:40"><expr pos:start="25:37" pos:end="25:40"><name pos:start="25:37" pos:end="25:40">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:58"><expr pos:start="27:9" pos:end="27:57"><name pos:start="27:9" pos:end="27:11">err</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:57"><name pos:start="27:15" pos:end="27:32">check_strtox_error</name><argument_list pos:start="27:33" pos:end="27:57">(<argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">nptr</name></expr></argument>, <argument pos:start="27:40" pos:end="27:41"><expr pos:start="27:40" pos:end="27:41"><name pos:start="27:40" pos:end="27:41">ep</name></expr></argument>, <argument pos:start="27:44" pos:end="27:49"><expr pos:start="27:44" pos:end="27:49"><name pos:start="27:44" pos:end="27:49">endptr</name></expr></argument>, <argument pos:start="27:52" pos:end="27:56"><expr pos:start="27:52" pos:end="27:56"><name pos:start="27:52" pos:end="27:56">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
