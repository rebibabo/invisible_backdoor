<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12084.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">crystalhd_receive_frame</name><parameter_list pos:start="1:35" pos:end="1:73">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:65">AVFrame</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:72">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">BC_STATUS</name></type> <name pos:start="5:15" pos:end="5:20">bc_ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">BC_DTS_STATUS</name></type> <name pos:start="7:19" pos:end="7:32">decoder_status</name> <init pos:start="7:34" pos:end="7:41">= <expr pos:start="7:36" pos:end="7:41"><block pos:start="7:36" pos:end="7:41">{ <expr pos:start="7:38" pos:end="7:38"><literal type="number" pos:start="7:38" pos:end="7:38">0</literal></expr>, }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">CopyRet</name></type> <name pos:start="9:13" pos:end="9:19">rec_ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">CHDContext</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">priv</name>   <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">HANDLE</name></type> <name pos:start="13:12" pos:end="13:14">dev</name>         <init pos:start="13:24" pos:end="13:34">= <expr pos:start="13:26" pos:end="13:34"><name pos:start="13:26" pos:end="13:34"><name pos:start="13:26" pos:end="13:29">priv</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:34">dev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">got_frame</name> <init pos:start="15:19" pos:end="15:21">= <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:64"><expr pos:start="19:5" pos:end="19:63"><call pos:start="19:5" pos:end="19:63"><name pos:start="19:5" pos:end="19:10">av_log</name><argument_list pos:start="19:11" pos:end="19:63">(<argument pos:start="19:12" pos:end="19:16"><expr pos:start="19:12" pos:end="19:16"><name pos:start="19:12" pos:end="19:16">avctx</name></expr></argument>, <argument pos:start="19:19" pos:end="19:32"><expr pos:start="19:19" pos:end="19:32"><name pos:start="19:19" pos:end="19:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="19:35" pos:end="19:62"><expr pos:start="19:35" pos:end="19:62"><literal type="string" pos:start="19:35" pos:end="19:62">"CrystalHD: receive_frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:10">bc_ret</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:53"><name pos:start="23:14" pos:end="23:31">DtsGetDriverStatus</name><argument_list pos:start="23:32" pos:end="23:53">(<argument pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><name pos:start="23:33" pos:end="23:35">dev</name></expr></argument>, <argument pos:start="23:38" pos:end="23:52"><expr pos:start="23:38" pos:end="23:52"><operator pos:start="23:38" pos:end="23:38">&amp;</operator><name pos:start="23:39" pos:end="23:52">decoder_status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:33">(<expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:14">bc_ret</name> <operator pos:start="25:16" pos:end="25:17">!=</operator> <name pos:start="25:19" pos:end="25:32">BC_STS_SUCCESS</name></expr>)</condition> <block pos:start="25:35" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:75"><expr pos:start="27:9" pos:end="27:74"><call pos:start="27:9" pos:end="27:74"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:74">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:73"><expr pos:start="27:37" pos:end="27:73"><literal type="string" pos:start="27:37" pos:end="27:73">"CrystalHD: GetDriverStatus failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:43">(<expr pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:22">decoder_status</name><operator pos:start="35:23" pos:end="35:23">.</operator><name pos:start="35:24" pos:end="35:37">ReadyListCount</name></name> <operator pos:start="35:39" pos:end="35:40">==</operator> <literal type="number" pos:start="35:42" pos:end="35:42">0</literal></expr>)</condition> <block pos:start="35:45" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:31">

        <expr_stmt pos:start="37:9" pos:end="37:88"><expr pos:start="37:9" pos:end="37:87"><call pos:start="37:9" pos:end="37:87"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:87">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20">avctx</name></expr></argument>, <argument pos:start="37:23" pos:end="37:33"><expr pos:start="37:23" pos:end="37:33"><name pos:start="37:23" pos:end="37:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="37:36" pos:end="37:86"><expr pos:start="37:36" pos:end="37:86"><literal type="string" pos:start="37:36" pos:end="37:86">"CrystalHD: Insufficient frames ready. Returning\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:54"><expr pos:start="45:5" pos:end="45:53"><name pos:start="45:5" pos:end="45:11">rec_ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:53"><name pos:start="45:15" pos:end="45:27">receive_frame</name><argument_list pos:start="45:28" pos:end="45:53">(<argument pos:start="45:29" pos:end="45:33"><expr pos:start="45:29" pos:end="45:33"><name pos:start="45:29" pos:end="45:33">avctx</name></expr></argument>, <argument pos:start="45:36" pos:end="45:40"><expr pos:start="45:36" pos:end="45:40"><name pos:start="45:36" pos:end="45:40">frame</name></expr></argument>, <argument pos:start="45:43" pos:end="45:52"><expr pos:start="45:43" pos:end="45:52"><operator pos:start="45:43" pos:end="45:43">&amp;</operator><name pos:start="45:44" pos:end="45:52">got_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="59:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:29">(<expr pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:15">rec_ret</name> <operator pos:start="47:17" pos:end="47:18">==</operator> <name pos:start="47:20" pos:end="47:28">RET_ERROR</name></expr>)</condition> <block pos:start="47:31" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:18">

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="55:5">else if <condition pos:start="51:15" pos:end="51:30">(<expr pos:start="51:16" pos:end="51:29"><name pos:start="51:16" pos:end="51:24">got_frame</name> <operator pos:start="51:26" pos:end="51:27">==</operator> <literal type="number" pos:start="51:29" pos:end="51:29">0</literal></expr>)</condition> <block pos:start="51:32" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:31">

        <return pos:start="53:9" pos:end="53:31">return <expr pos:start="53:16" pos:end="53:30"><call pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:22">AVERROR</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:17">

        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
