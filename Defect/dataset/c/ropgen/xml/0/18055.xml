<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18055.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">qdev_print_devinfo</name><parameter_list pos:start="1:31" pos:end="1:64">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:42">ObjectClass</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">klass</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:63">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:23">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceClass</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">dc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">bool</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:22">show_no_user</name> <init pos:start="7:24" pos:end="7:31">= <expr pos:start="7:26" pos:end="7:31"><name pos:start="7:26" pos:end="7:31">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:70"><expr pos:start="11:5" pos:end="11:69"><name pos:start="11:5" pos:end="11:6">dc</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:21">DeviceClass</name> <operator pos:start="11:23" pos:end="11:23">*</operator><operator pos:start="11:24" pos:end="11:24">)</operator><call pos:start="11:25" pos:end="11:69"><name pos:start="11:25" pos:end="11:49">object_class_dynamic_cast</name><argument_list pos:start="11:50" pos:end="11:69">(<argument pos:start="11:51" pos:end="11:55"><expr pos:start="11:51" pos:end="11:55"><name pos:start="11:51" pos:end="11:55">klass</name></expr></argument>, <argument pos:start="11:58" pos:end="11:68"><expr pos:start="11:58" pos:end="11:68"><name pos:start="11:58" pos:end="11:68">TYPE_DEVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:63">(<expr pos:start="15:9" pos:end="15:62"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:11">dc</name> <operator pos:start="15:13" pos:end="15:14">||</operator> <operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:28">show_no_user</name> <operator pos:start="15:30" pos:end="15:31">&amp;&amp;</operator> <operator pos:start="15:33" pos:end="15:33">!</operator><operator pos:start="15:34" pos:end="15:34">*</operator><name pos:start="15:35" pos:end="15:46">show_no_user</name> <operator pos:start="15:48" pos:end="15:49">&amp;&amp;</operator> <name pos:start="15:51" pos:end="15:61"><name pos:start="15:51" pos:end="15:52">dc</name><operator pos:start="15:53" pos:end="15:54">-&gt;</operator><name pos:start="15:55" pos:end="15:61">no_user</name></name><operator pos:start="15:62" pos:end="15:62">)</operator></expr>)</condition> <block pos:start="15:65" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:62"><expr pos:start="23:5" pos:end="23:61"><call pos:start="23:5" pos:end="23:61"><name pos:start="23:5" pos:end="23:16">error_printf</name><argument_list pos:start="23:17" pos:end="23:61">(<argument pos:start="23:18" pos:end="23:30"><expr pos:start="23:18" pos:end="23:30"><literal type="string" pos:start="23:18" pos:end="23:30">"name \"%s\""</literal></expr></argument>, <argument pos:start="23:33" pos:end="23:60"><expr pos:start="23:33" pos:end="23:60"><call pos:start="23:33" pos:end="23:60"><name pos:start="23:33" pos:end="23:53">object_class_get_name</name><argument_list pos:start="23:54" pos:end="23:60">(<argument pos:start="23:55" pos:end="23:59"><expr pos:start="23:55" pos:end="23:59"><name pos:start="23:55" pos:end="23:59">klass</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:10">dc</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:20">bus_info</name></name></expr>)</condition> <block pos:start="25:23" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:53">

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><call pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:20">error_printf</name><argument_list pos:start="27:21" pos:end="27:52">(<argument pos:start="27:22" pos:end="27:31"><expr pos:start="27:22" pos:end="27:31"><literal type="string" pos:start="27:22" pos:end="27:31">", bus %s"</literal></expr></argument>, <argument pos:start="27:34" pos:end="27:51"><expr pos:start="27:34" pos:end="27:51"><name pos:start="27:34" pos:end="27:51"><name pos:start="27:34" pos:end="27:35">dc</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:45">bus_info</name><operator pos:start="27:46" pos:end="27:47">-&gt;</operator><name pos:start="27:48" pos:end="27:51">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:18">(<expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:10">dc</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:17">alias</name></name></expr>)</condition> <block pos:start="31:20" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:50">

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><call pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:20">error_printf</name><argument_list pos:start="33:21" pos:end="33:49">(<argument pos:start="33:22" pos:end="33:37"><expr pos:start="33:22" pos:end="33:37"><literal type="string" pos:start="33:22" pos:end="33:37">", alias \"%s\""</literal></expr></argument>, <argument pos:start="33:40" pos:end="33:48"><expr pos:start="33:40" pos:end="33:48"><name pos:start="33:40" pos:end="33:48"><name pos:start="33:40" pos:end="33:41">dc</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:48">alias</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:10">dc</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:16">desc</name></name></expr>)</condition> <block pos:start="37:19" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:48">

        <expr_stmt pos:start="39:9" pos:end="39:48"><expr pos:start="39:9" pos:end="39:47"><call pos:start="39:9" pos:end="39:47"><name pos:start="39:9" pos:end="39:20">error_printf</name><argument_list pos:start="39:21" pos:end="39:47">(<argument pos:start="39:22" pos:end="39:36"><expr pos:start="39:22" pos:end="39:36"><literal type="string" pos:start="39:22" pos:end="39:36">", desc \"%s\""</literal></expr></argument>, <argument pos:start="39:39" pos:end="39:46"><expr pos:start="39:39" pos:end="39:46"><name pos:start="39:39" pos:end="39:46"><name pos:start="39:39" pos:end="39:40">dc</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:46">desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:20">(<expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:10">dc</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:19">no_user</name></name></expr>)</condition> <block pos:start="43:22" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:34">

        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><call pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:20">error_printf</name><argument_list pos:start="45:21" pos:end="45:33">(<argument pos:start="45:22" pos:end="45:32"><expr pos:start="45:22" pos:end="45:32"><literal type="string" pos:start="45:22" pos:end="45:32">", no-user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><call pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:16">error_printf</name><argument_list pos:start="49:17" pos:end="49:22">(<argument pos:start="49:18" pos:end="49:21"><expr pos:start="49:18" pos:end="49:21"><literal type="string" pos:start="49:18" pos:end="49:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
