<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/74.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">virt_acpi_build_update</name><parameter_list pos:start="1:35" pos:end="1:54">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:41"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:53">build_opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:45">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AcpiBuildState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:31">build_state</name> <init pos:start="5:33" pos:end="5:46">= <expr pos:start="5:35" pos:end="5:46"><name pos:start="5:35" pos:end="5:46">build_opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:19">AcpiBuildTables</name></type> <name pos:start="7:21" pos:end="7:26">tables</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:63">/* No state to update or already patched? Nothing to do. */</comment>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:45">(<expr pos:start="13:9" pos:end="13:44"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:20">build_state</name> <operator pos:start="13:22" pos:end="13:23">||</operator> <name pos:start="13:25" pos:end="13:44"><name pos:start="13:25" pos:end="13:35">build_state</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:44">patched</name></name></expr>)</condition> <block pos:start="13:47" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:15">build_state</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:24">patched</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:31">true</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:26">acpi_build_tables_init</name><argument_list pos:start="23:27" pos:end="23:35">(<argument pos:start="23:28" pos:end="23:34"><expr pos:start="23:28" pos:end="23:34"><operator pos:start="23:28" pos:end="23:28">&amp;</operator><name pos:start="23:29" pos:end="23:34">tables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:54"><expr pos:start="27:5" pos:end="27:53"><call pos:start="27:5" pos:end="27:53"><name pos:start="27:5" pos:end="27:19">virt_acpi_build</name><argument_list pos:start="27:20" pos:end="27:53">(<argument pos:start="27:21" pos:end="27:43"><expr pos:start="27:21" pos:end="27:43"><name pos:start="27:21" pos:end="27:43"><name pos:start="27:21" pos:end="27:31">build_state</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:43">guest_info</name></name></expr></argument>, <argument pos:start="27:46" pos:end="27:52"><expr pos:start="27:46" pos:end="27:52"><operator pos:start="27:46" pos:end="27:46">&amp;</operator><name pos:start="27:47" pos:end="27:52">tables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:62"><expr pos:start="31:5" pos:end="31:61"><call pos:start="31:5" pos:end="31:61"><name pos:start="31:5" pos:end="31:19">acpi_ram_update</name><argument_list pos:start="31:20" pos:end="31:61">(<argument pos:start="31:21" pos:end="31:41"><expr pos:start="31:21" pos:end="31:41"><name pos:start="31:21" pos:end="31:41"><name pos:start="31:21" pos:end="31:31">build_state</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:41">table_mr</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:60"><expr pos:start="31:44" pos:end="31:60"><name pos:start="31:44" pos:end="31:60"><name pos:start="31:44" pos:end="31:49">tables</name><operator pos:start="31:50" pos:end="31:50">.</operator><name pos:start="31:51" pos:end="31:60">table_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:55"><expr pos:start="33:5" pos:end="33:54"><call pos:start="33:5" pos:end="33:54"><name pos:start="33:5" pos:end="33:19">acpi_ram_update</name><argument_list pos:start="33:20" pos:end="33:54">(<argument pos:start="33:21" pos:end="33:40"><expr pos:start="33:21" pos:end="33:40"><name pos:start="33:21" pos:end="33:40"><name pos:start="33:21" pos:end="33:31">build_state</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:40">rsdp_mr</name></name></expr></argument>, <argument pos:start="33:43" pos:end="33:53"><expr pos:start="33:43" pos:end="33:53"><name pos:start="33:43" pos:end="33:53"><name pos:start="33:43" pos:end="33:48">tables</name><operator pos:start="33:49" pos:end="33:49">.</operator><name pos:start="33:50" pos:end="33:53">rsdp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:59"><expr pos:start="35:5" pos:end="35:58"><call pos:start="35:5" pos:end="35:58"><name pos:start="35:5" pos:end="35:19">acpi_ram_update</name><argument_list pos:start="35:20" pos:end="35:58">(<argument pos:start="35:21" pos:end="35:42"><expr pos:start="35:21" pos:end="35:42"><name pos:start="35:21" pos:end="35:42"><name pos:start="35:21" pos:end="35:31">build_state</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:42">linker_mr</name></name></expr></argument>, <argument pos:start="35:45" pos:end="35:57"><expr pos:start="35:45" pos:end="35:57"><name pos:start="35:45" pos:end="35:57"><name pos:start="35:45" pos:end="35:50">tables</name><operator pos:start="35:51" pos:end="35:51">.</operator><name pos:start="35:52" pos:end="35:57">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><call pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:29">acpi_build_tables_cleanup</name><argument_list pos:start="41:30" pos:end="41:44">(<argument pos:start="41:31" pos:end="41:37"><expr pos:start="41:31" pos:end="41:37"><operator pos:start="41:31" pos:end="41:31">&amp;</operator><name pos:start="41:32" pos:end="41:37">tables</name></expr></argument>, <argument pos:start="41:40" pos:end="41:43"><expr pos:start="41:40" pos:end="41:43"><name pos:start="41:40" pos:end="41:43">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
