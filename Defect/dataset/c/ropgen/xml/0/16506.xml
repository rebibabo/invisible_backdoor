<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16506.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">size_t</name></type> <name pos:start="1:15" pos:end="1:36">handle_aiocb_rw_linear</name><parameter_list pos:start="1:37" pos:end="1:74">(<parameter pos:start="1:38" pos:end="1:62"><decl pos:start="1:38" pos:end="1:62"><type pos:start="1:38" pos:end="1:62"><name pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:43">struct</name> <name pos:start="1:45" pos:end="1:55">qemu_paiocb</name></name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:62">aiocb</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:73"><decl pos:start="1:65" pos:end="1:73"><type pos:start="1:65" pos:end="1:73"><name pos:start="1:65" pos:end="1:68">char</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:18">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:17">offset</name> <init pos:start="5:19" pos:end="5:21">= <expr pos:start="5:21" pos:end="5:21"><literal type="number" pos:start="5:21" pos:end="5:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:14">len</name></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="53:5">while <condition pos:start="11:11" pos:end="11:38">(<expr pos:start="11:12" pos:end="11:37"><name pos:start="11:12" pos:end="11:17">offset</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:37"><name pos:start="11:21" pos:end="11:25">aiocb</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:37">aio_nbytes</name></name></expr>)</condition> <block pos:start="11:40" pos:end="53:5">{<block_content pos:start="13:10" pos:end="51:23">

         <if_stmt pos:start="13:10" pos:end="31:53"><if pos:start="13:10" pos:end="21:54">if <condition pos:start="13:13" pos:end="13:48">(<expr pos:start="13:14" pos:end="13:47"><name pos:start="13:14" pos:end="13:28"><name pos:start="13:14" pos:end="13:18">aiocb</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:28">aio_type</name></name> <operator pos:start="13:30" pos:end="13:31">==</operator> <name pos:start="13:33" pos:end="13:47">QEMU_PAIO_WRITE</name></expr>)</condition><block type="pseudo" pos:start="15:14" pos:end="21:54"><block_content pos:start="15:14" pos:end="21:54">

             <expr_stmt pos:start="15:14" pos:end="21:54"><expr pos:start="15:14" pos:end="21:53"><name pos:start="15:14" pos:end="15:16">len</name> <operator pos:start="15:18" pos:end="15:18">=</operator> <call pos:start="15:20" pos:end="21:53"><name pos:start="15:20" pos:end="15:25">pwrite</name><argument_list pos:start="15:26" pos:end="21:53">(<argument pos:start="15:27" pos:end="15:43"><expr pos:start="15:27" pos:end="15:43"><name pos:start="15:27" pos:end="15:43"><name pos:start="15:27" pos:end="15:31">aiocb</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:43">aio_fildes</name></name></expr></argument>,

                          <argument pos:start="17:27" pos:end="17:52"><expr pos:start="17:27" pos:end="17:52"><operator pos:start="17:27" pos:end="17:27">(</operator><specifier pos:start="17:28" pos:end="17:32">const</specifier> <name pos:start="17:34" pos:end="17:37">char</name> <operator pos:start="17:39" pos:end="17:39">*</operator><operator pos:start="17:40" pos:end="17:40">)</operator><name pos:start="17:41" pos:end="17:43">buf</name> <operator pos:start="17:45" pos:end="17:45">+</operator> <name pos:start="17:47" pos:end="17:52">offset</name></expr></argument>,

                          <argument pos:start="19:27" pos:end="19:52"><expr pos:start="19:27" pos:end="19:52"><name pos:start="19:27" pos:end="19:43"><name pos:start="19:27" pos:end="19:31">aiocb</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:43">aio_nbytes</name></name> <operator pos:start="19:45" pos:end="19:45">-</operator> <name pos:start="19:47" pos:end="19:52">offset</name></expr></argument>,

                          <argument pos:start="21:27" pos:end="21:52"><expr pos:start="21:27" pos:end="21:52"><name pos:start="21:27" pos:end="21:43"><name pos:start="21:27" pos:end="21:31">aiocb</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:43">aio_offset</name></name> <operator pos:start="21:45" pos:end="21:45">+</operator> <name pos:start="21:47" pos:end="21:52">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

         <else pos:start="23:10" pos:end="31:53">else<block type="pseudo" pos:start="25:14" pos:end="31:53"><block_content pos:start="25:14" pos:end="31:53">

             <expr_stmt pos:start="25:14" pos:end="31:53"><expr pos:start="25:14" pos:end="31:52"><name pos:start="25:14" pos:end="25:16">len</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <call pos:start="25:20" pos:end="31:52"><name pos:start="25:20" pos:end="25:24">pread</name><argument_list pos:start="25:25" pos:end="31:52">(<argument pos:start="25:26" pos:end="25:42"><expr pos:start="25:26" pos:end="25:42"><name pos:start="25:26" pos:end="25:42"><name pos:start="25:26" pos:end="25:30">aiocb</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:42">aio_fildes</name></name></expr></argument>,

                         <argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:28">buf</name> <operator pos:start="27:30" pos:end="27:30">+</operator> <name pos:start="27:32" pos:end="27:37">offset</name></expr></argument>,

                         <argument pos:start="29:26" pos:end="29:51"><expr pos:start="29:26" pos:end="29:51"><name pos:start="29:26" pos:end="29:42"><name pos:start="29:26" pos:end="29:30">aiocb</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:42">aio_nbytes</name></name> <operator pos:start="29:44" pos:end="29:44">-</operator> <name pos:start="29:46" pos:end="29:51">offset</name></expr></argument>,

                         <argument pos:start="31:26" pos:end="31:51"><expr pos:start="31:26" pos:end="31:51"><name pos:start="31:26" pos:end="31:42"><name pos:start="31:26" pos:end="31:30">aiocb</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:42">aio_offset</name></name> <operator pos:start="31:44" pos:end="31:44">+</operator> <name pos:start="31:46" pos:end="31:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



         <if_stmt pos:start="35:10" pos:end="47:19"><if pos:start="35:10" pos:end="37:22">if <condition pos:start="35:13" pos:end="35:41">(<expr pos:start="35:14" pos:end="35:40"><name pos:start="35:14" pos:end="35:16">len</name> <operator pos:start="35:18" pos:end="35:19">==</operator> <operator pos:start="35:21" pos:end="35:21">-</operator><literal type="number" pos:start="35:22" pos:end="35:22">1</literal> <operator pos:start="35:24" pos:end="35:25">&amp;&amp;</operator> <name pos:start="35:27" pos:end="35:31">errno</name> <operator pos:start="35:33" pos:end="35:34">==</operator> <name pos:start="35:36" pos:end="35:40">EINTR</name></expr>)</condition><block type="pseudo" pos:start="37:14" pos:end="37:22"><block_content pos:start="37:14" pos:end="37:22">

             <continue pos:start="37:14" pos:end="37:22">continue;</continue></block_content></block></if>

         <if type="elseif" pos:start="39:10" pos:end="45:10">else if <condition pos:start="39:18" pos:end="39:28">(<expr pos:start="39:19" pos:end="39:27"><name pos:start="39:19" pos:end="39:21">len</name> <operator pos:start="39:23" pos:end="39:24">==</operator> <operator pos:start="39:26" pos:end="39:26">-</operator><literal type="number" pos:start="39:27" pos:end="39:27">1</literal></expr>)</condition> <block pos:start="39:30" pos:end="45:10">{<block_content pos:start="41:14" pos:end="43:19">

             <expr_stmt pos:start="41:14" pos:end="41:29"><expr pos:start="41:14" pos:end="41:28"><name pos:start="41:14" pos:end="41:19">offset</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <operator pos:start="41:23" pos:end="41:23">-</operator><name pos:start="41:24" pos:end="41:28">errno</name></expr>;</expr_stmt>

             <break pos:start="43:14" pos:end="43:19">break;</break>

         </block_content>}</block></if> <if type="elseif" pos:start="45:12" pos:end="47:19">else if <condition pos:start="45:20" pos:end="45:29">(<expr pos:start="45:21" pos:end="45:28"><name pos:start="45:21" pos:end="45:23">len</name> <operator pos:start="45:25" pos:end="45:26">==</operator> <literal type="number" pos:start="45:28" pos:end="45:28">0</literal></expr>)</condition><block type="pseudo" pos:start="47:14" pos:end="47:19"><block_content pos:start="47:14" pos:end="47:19">

             <break pos:start="47:14" pos:end="47:19">break;</break></block_content></block></if></if_stmt>



         <expr_stmt pos:start="51:10" pos:end="51:23"><expr pos:start="51:10" pos:end="51:22"><name pos:start="51:10" pos:end="51:15">offset</name> <operator pos:start="51:17" pos:end="51:18">+=</operator> <name pos:start="51:20" pos:end="51:22">len</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="57:5" pos:end="57:18">return <expr pos:start="57:12" pos:end="57:17"><name pos:start="57:12" pos:end="57:17">offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
