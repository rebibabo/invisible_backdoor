<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22217.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:37">vu9_to_vu12</name>)<parameter_list pos:start="1:39" pos:end="9:72">(<parameter pos:start="1:40" pos:end="1:58"><decl pos:start="1:40" pos:end="1:58"><type pos:start="1:40" pos:end="1:58"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">src1</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:79"><decl pos:start="1:61" pos:end="1:79"><type pos:start="1:61" pos:end="1:79"><specifier pos:start="1:61" pos:end="1:65">const</specifier> <name pos:start="1:67" pos:end="1:73">uint8_t</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:79">src2</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:52"><decl pos:start="3:40" pos:end="3:52"><type pos:start="3:40" pos:end="3:52"><name pos:start="3:40" pos:end="3:46">uint8_t</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">dst1</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:67"><decl pos:start="3:55" pos:end="3:67"><type pos:start="3:55" pos:end="3:67"><name pos:start="3:55" pos:end="3:61">uint8_t</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:67">dst2</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:49"><decl pos:start="5:40" pos:end="5:49"><type pos:start="5:40" pos:end="5:49"><name pos:start="5:40" pos:end="5:43">long</name></type> <name pos:start="5:45" pos:end="5:49">width</name></decl></parameter>, <parameter pos:start="5:52" pos:end="5:62"><decl pos:start="5:52" pos:end="5:62"><type pos:start="5:52" pos:end="5:62"><name pos:start="5:52" pos:end="5:55">long</name></type> <name pos:start="5:57" pos:end="5:62">height</name></decl></parameter>,

                                       <parameter pos:start="7:40" pos:end="7:54"><decl pos:start="7:40" pos:end="7:54"><type pos:start="7:40" pos:end="7:54"><name pos:start="7:40" pos:end="7:43">long</name></type> <name pos:start="7:45" pos:end="7:54">srcStride1</name></decl></parameter>, <parameter pos:start="7:57" pos:end="7:71"><decl pos:start="7:57" pos:end="7:71"><type pos:start="7:57" pos:end="7:71"><name pos:start="7:57" pos:end="7:60">long</name></type> <name pos:start="7:62" pos:end="7:71">srcStride2</name></decl></parameter>,

                                       <parameter pos:start="9:40" pos:end="9:54"><decl pos:start="9:40" pos:end="9:54"><type pos:start="9:40" pos:end="9:54"><name pos:start="9:40" pos:end="9:43">long</name></type> <name pos:start="9:45" pos:end="9:54">dstStride1</name></decl></parameter>, <parameter pos:start="9:57" pos:end="9:71"><decl pos:start="9:57" pos:end="9:71"><type pos:start="9:57" pos:end="9:71"><name pos:start="9:57" pos:end="9:60">long</name></type> <name pos:start="9:62" pos:end="9:71">dstStride2</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="201:1">{<block_content pos:start="13:5" pos:end="200:0">

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">x86_reg</name></type> <name pos:start="13:13" pos:end="13:13">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">long</name></type> <name pos:start="15:10" pos:end="15:10">x</name></decl>,<decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:8"/><name pos:start="15:12" pos:end="15:12">w</name></decl>,<decl pos:start="15:14" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:8"/><name pos:start="15:14" pos:end="15:14">h</name></decl>;</decl_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:14"><expr pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:5">w</name><operator pos:start="17:6" pos:end="17:6">=</operator><name pos:start="17:7" pos:end="17:11">width</name><operator pos:start="17:12" pos:end="17:12">/</operator><literal type="number" pos:start="17:13" pos:end="17:13">2</literal></expr>;</expr_stmt> <expr_stmt pos:start="17:16" pos:end="20:0"><expr pos:start="17:16" pos:end="17:25"><name pos:start="17:16" pos:end="17:16">h</name><operator pos:start="17:17" pos:end="17:17">=</operator><name pos:start="17:18" pos:end="17:23">height</name><operator pos:start="17:24" pos:end="17:24">/</operator><literal type="number" pos:start="17:25" pos:end="17:25">2</literal></expr>;</expr_stmt>

<cpp:if pos:start="19:1" pos:end="19:24">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <asm pos:start="21:5" pos:end="30:0">__asm__ <specifier pos:start="21:13" pos:end="21:20">volatile</specifier>(

        PREFETCH" %0    \n\t"

        PREFETCH" %1    \n\t"

        ::"m"(*(src1+srcStride1)),"m"(*(src2+srcStride2)):"memory");</asm>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    <for pos:start="31:5" pos:end="107:5">for <control pos:start="31:9" pos:end="31:21">(<init pos:start="31:10" pos:end="31:13"><expr pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:10">y</name><operator pos:start="31:11" pos:end="31:11">=</operator><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</init><condition pos:start="31:14" pos:end="31:17"><expr pos:start="31:14" pos:end="31:16"><name pos:start="31:14" pos:end="31:14">y</name><operator pos:start="31:15" pos:end="31:15">&lt;</operator><name pos:start="31:16" pos:end="31:16">h</name></expr>;</condition><incr pos:start="31:18" pos:end="31:20"><expr pos:start="31:18" pos:end="31:20"><name pos:start="31:18" pos:end="31:18">y</name><operator pos:start="31:19" pos:end="31:20">++</operator></expr></incr>)</control> <block pos:start="31:23" pos:end="107:5">{<block_content pos:start="33:9" pos:end="105:45">

        <decl_stmt pos:start="33:9" pos:end="33:49"><decl pos:start="33:9" pos:end="33:48"><type pos:start="33:9" pos:end="33:22"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:21">uint8_t</name><modifier pos:start="33:22" pos:end="33:22">*</modifier></type> <name pos:start="33:24" pos:end="33:25">s1</name><init pos:start="33:26" pos:end="33:48">=<expr pos:start="33:27" pos:end="33:48"><name pos:start="33:27" pos:end="33:30">src1</name><operator pos:start="33:31" pos:end="33:31">+</operator><name pos:start="33:32" pos:end="33:41">srcStride1</name><operator pos:start="33:42" pos:end="33:42">*</operator><operator pos:start="33:43" pos:end="33:43">(</operator><name pos:start="33:44" pos:end="33:44">y</name><operator pos:start="33:45" pos:end="33:46">&gt;&gt;</operator><literal type="number" pos:start="33:47" pos:end="33:47">1</literal><operator pos:start="33:48" pos:end="33:48">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:37"><decl pos:start="35:9" pos:end="35:36"><type pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:15">uint8_t</name><modifier pos:start="35:16" pos:end="35:16">*</modifier></type> <name pos:start="35:18" pos:end="35:18">d</name><init pos:start="35:19" pos:end="35:36">=<expr pos:start="35:20" pos:end="35:36"><name pos:start="35:20" pos:end="35:23">dst1</name><operator pos:start="35:24" pos:end="35:24">+</operator><name pos:start="35:25" pos:end="35:34">dstStride1</name><operator pos:start="35:35" pos:end="35:35">*</operator><name pos:start="35:36" pos:end="35:36">y</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="40:0"><expr pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:9">x</name><operator pos:start="37:10" pos:end="37:10">=</operator><literal type="number" pos:start="37:11" pos:end="37:11">0</literal></expr>;</expr_stmt>

<cpp:if pos:start="39:1" pos:end="39:24">#<cpp:directive pos:start="39:2" pos:end="39:3">if</cpp:directive> <expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

        <for pos:start="41:9" pos:end="104:0">for <control pos:start="41:13" pos:end="41:27">(<init pos:start="41:14" pos:end="41:14">;</init><condition pos:start="41:15" pos:end="41:21"><expr pos:start="41:15" pos:end="41:20"><name pos:start="41:15" pos:end="41:15">x</name><operator pos:start="41:16" pos:end="41:16">&lt;</operator><name pos:start="41:17" pos:end="41:17">w</name><operator pos:start="41:18" pos:end="41:18">-</operator><literal type="number" pos:start="41:19" pos:end="41:20">31</literal></expr>;</condition><incr pos:start="41:22" pos:end="41:26"><expr pos:start="41:22" pos:end="41:26"><name pos:start="41:22" pos:end="41:22">x</name><operator pos:start="41:23" pos:end="41:24">+=</operator><literal type="number" pos:start="41:25" pos:end="41:26">32</literal></expr></incr>)</control> <block pos:start="41:29" pos:end="104:0">{<block_content pos:start="43:13" pos:end="99:27">

            <asm pos:start="43:13" pos:end="99:27">__asm__ <specifier pos:start="43:21" pos:end="43:28">volatile</specifier>(

                PREFETCH"   32%1        \n\t"

                "movq         %1, %%mm0 \n\t"

                "movq        8%1, %%mm2 \n\t"

                "movq       16%1, %%mm4 \n\t"

                "movq       24%1, %%mm6 \n\t"

                "movq      %%mm0, %%mm1 \n\t"

                "movq      %%mm2, %%mm3 \n\t"

                "movq      %%mm4, %%mm5 \n\t"

                "movq      %%mm6, %%mm7 \n\t"

                "punpcklbw %%mm0, %%mm0 \n\t"

                "punpckhbw %%mm1, %%mm1 \n\t"

                "punpcklbw %%mm2, %%mm2 \n\t"

                "punpckhbw %%mm3, %%mm3 \n\t"

                "punpcklbw %%mm4, %%mm4 \n\t"

                "punpckhbw %%mm5, %%mm5 \n\t"

                "punpcklbw %%mm6, %%mm6 \n\t"

                "punpckhbw %%mm7, %%mm7 \n\t"

                MOVNTQ"    %%mm0,   %0  \n\t"

                MOVNTQ"    %%mm1,  8%0  \n\t"

                MOVNTQ"    %%mm2, 16%0  \n\t"

                MOVNTQ"    %%mm3, 24%0  \n\t"

                MOVNTQ"    %%mm4, 32%0  \n\t"

                MOVNTQ"    %%mm5, 40%0  \n\t"

                MOVNTQ"    %%mm6, 48%0  \n\t"

                MOVNTQ"    %%mm7, 56%0"

                :"=m"(d[2*x])

                :"m"(s1[x])

                :"memory");</asm>

        </block_content>}</block></for>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>

        <for pos:start="105:9" pos:end="105:45">for <control pos:start="105:13" pos:end="105:22">(<init pos:start="105:14" pos:end="105:14">;</init><condition pos:start="105:15" pos:end="105:18"><expr pos:start="105:15" pos:end="105:17"><name pos:start="105:15" pos:end="105:15">x</name><operator pos:start="105:16" pos:end="105:16">&lt;</operator><name pos:start="105:17" pos:end="105:17">w</name></expr>;</condition><incr pos:start="105:19" pos:end="105:21"><expr pos:start="105:19" pos:end="105:21"><name pos:start="105:19" pos:end="105:19">x</name><operator pos:start="105:20" pos:end="105:21">++</operator></expr></incr>)</control><block type="pseudo" pos:start="105:24" pos:end="105:45"><block_content pos:start="105:24" pos:end="105:45"> <expr_stmt pos:start="105:24" pos:end="105:45"><expr pos:start="105:24" pos:end="105:44"><name pos:start="105:24" pos:end="105:29"><name pos:start="105:24" pos:end="105:24">d</name><index pos:start="105:25" pos:end="105:29">[<expr pos:start="105:26" pos:end="105:28"><literal type="number" pos:start="105:26" pos:end="105:26">2</literal><operator pos:start="105:27" pos:end="105:27">*</operator><name pos:start="105:28" pos:end="105:28">x</name></expr>]</index></name><operator pos:start="105:30" pos:end="105:30">=</operator><name pos:start="105:31" pos:end="105:38"><name pos:start="105:31" pos:end="105:31">d</name><index pos:start="105:32" pos:end="105:38">[<expr pos:start="105:33" pos:end="105:37"><literal type="number" pos:start="105:33" pos:end="105:33">2</literal><operator pos:start="105:34" pos:end="105:34">*</operator><name pos:start="105:35" pos:end="105:35">x</name><operator pos:start="105:36" pos:end="105:36">+</operator><literal type="number" pos:start="105:37" pos:end="105:37">1</literal></expr>]</index></name><operator pos:start="105:39" pos:end="105:39">=</operator><name pos:start="105:40" pos:end="105:44"><name pos:start="105:40" pos:end="105:41">s1</name><index pos:start="105:42" pos:end="105:44">[<expr pos:start="105:43" pos:end="105:43"><name pos:start="105:43" pos:end="105:43">x</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>

    <for pos:start="109:5" pos:end="188:0">for <control pos:start="109:9" pos:end="109:21">(<init pos:start="109:10" pos:end="109:13"><expr pos:start="109:10" pos:end="109:12"><name pos:start="109:10" pos:end="109:10">y</name><operator pos:start="109:11" pos:end="109:11">=</operator><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</init><condition pos:start="109:14" pos:end="109:17"><expr pos:start="109:14" pos:end="109:16"><name pos:start="109:14" pos:end="109:14">y</name><operator pos:start="109:15" pos:end="109:15">&lt;</operator><name pos:start="109:16" pos:end="109:16">h</name></expr>;</condition><incr pos:start="109:18" pos:end="109:20"><expr pos:start="109:18" pos:end="109:20"><name pos:start="109:18" pos:end="109:18">y</name><operator pos:start="109:19" pos:end="109:20">++</operator></expr></incr>)</control> <block pos:start="109:23" pos:end="188:0">{<block_content pos:start="111:9" pos:end="183:45">

        <decl_stmt pos:start="111:9" pos:end="111:49"><decl pos:start="111:9" pos:end="111:48"><type pos:start="111:9" pos:end="111:22"><specifier pos:start="111:9" pos:end="111:13">const</specifier> <name pos:start="111:15" pos:end="111:21">uint8_t</name><modifier pos:start="111:22" pos:end="111:22">*</modifier></type> <name pos:start="111:24" pos:end="111:25">s2</name><init pos:start="111:26" pos:end="111:48">=<expr pos:start="111:27" pos:end="111:48"><name pos:start="111:27" pos:end="111:30">src2</name><operator pos:start="111:31" pos:end="111:31">+</operator><name pos:start="111:32" pos:end="111:41">srcStride2</name><operator pos:start="111:42" pos:end="111:42">*</operator><operator pos:start="111:43" pos:end="111:43">(</operator><name pos:start="111:44" pos:end="111:44">y</name><operator pos:start="111:45" pos:end="111:46">&gt;&gt;</operator><literal type="number" pos:start="111:47" pos:end="111:47">1</literal><operator pos:start="111:48" pos:end="111:48">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="113:9" pos:end="113:37"><decl pos:start="113:9" pos:end="113:36"><type pos:start="113:9" pos:end="113:16"><name pos:start="113:9" pos:end="113:15">uint8_t</name><modifier pos:start="113:16" pos:end="113:16">*</modifier></type> <name pos:start="113:18" pos:end="113:18">d</name><init pos:start="113:19" pos:end="113:36">=<expr pos:start="113:20" pos:end="113:36"><name pos:start="113:20" pos:end="113:23">dst2</name><operator pos:start="113:24" pos:end="113:24">+</operator><name pos:start="113:25" pos:end="113:34">dstStride2</name><operator pos:start="113:35" pos:end="113:35">*</operator><name pos:start="113:36" pos:end="113:36">y</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="115:9" pos:end="118:0"><expr pos:start="115:9" pos:end="115:11"><name pos:start="115:9" pos:end="115:9">x</name><operator pos:start="115:10" pos:end="115:10">=</operator><literal type="number" pos:start="115:11" pos:end="115:11">0</literal></expr>;</expr_stmt>

<cpp:if pos:start="117:1" pos:end="117:24">#<cpp:directive pos:start="117:2" pos:end="117:3">if</cpp:directive> <expr pos:start="117:5" pos:end="117:24"><name pos:start="117:5" pos:end="117:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

        <for pos:start="119:9" pos:end="182:0">for <control pos:start="119:13" pos:end="119:27">(<init pos:start="119:14" pos:end="119:14">;</init><condition pos:start="119:15" pos:end="119:21"><expr pos:start="119:15" pos:end="119:20"><name pos:start="119:15" pos:end="119:15">x</name><operator pos:start="119:16" pos:end="119:16">&lt;</operator><name pos:start="119:17" pos:end="119:17">w</name><operator pos:start="119:18" pos:end="119:18">-</operator><literal type="number" pos:start="119:19" pos:end="119:20">31</literal></expr>;</condition><incr pos:start="119:22" pos:end="119:26"><expr pos:start="119:22" pos:end="119:26"><name pos:start="119:22" pos:end="119:22">x</name><operator pos:start="119:23" pos:end="119:24">+=</operator><literal type="number" pos:start="119:25" pos:end="119:26">32</literal></expr></incr>)</control> <block pos:start="119:29" pos:end="182:0">{<block_content pos:start="121:13" pos:end="177:27">

            <asm pos:start="121:13" pos:end="177:27">__asm__ <specifier pos:start="121:21" pos:end="121:28">volatile</specifier>(

                PREFETCH"   32%1        \n\t"

                "movq         %1, %%mm0 \n\t"

                "movq        8%1, %%mm2 \n\t"

                "movq       16%1, %%mm4 \n\t"

                "movq       24%1, %%mm6 \n\t"

                "movq      %%mm0, %%mm1 \n\t"

                "movq      %%mm2, %%mm3 \n\t"

                "movq      %%mm4, %%mm5 \n\t"

                "movq      %%mm6, %%mm7 \n\t"

                "punpcklbw %%mm0, %%mm0 \n\t"

                "punpckhbw %%mm1, %%mm1 \n\t"

                "punpcklbw %%mm2, %%mm2 \n\t"

                "punpckhbw %%mm3, %%mm3 \n\t"

                "punpcklbw %%mm4, %%mm4 \n\t"

                "punpckhbw %%mm5, %%mm5 \n\t"

                "punpcklbw %%mm6, %%mm6 \n\t"

                "punpckhbw %%mm7, %%mm7 \n\t"

                MOVNTQ"    %%mm0,   %0  \n\t"

                MOVNTQ"    %%mm1,  8%0  \n\t"

                MOVNTQ"    %%mm2, 16%0  \n\t"

                MOVNTQ"    %%mm3, 24%0  \n\t"

                MOVNTQ"    %%mm4, 32%0  \n\t"

                MOVNTQ"    %%mm5, 40%0  \n\t"

                MOVNTQ"    %%mm6, 48%0  \n\t"

                MOVNTQ"    %%mm7, 56%0"

                :"=m"(d[2*x])

                :"m"(s2[x])

                :"memory");</asm>

        </block_content>}</block></for>

<cpp:endif pos:start="181:1" pos:end="181:6">#<cpp:directive pos:start="181:2" pos:end="181:6">endif</cpp:directive></cpp:endif>

        <for pos:start="183:9" pos:end="183:45">for <control pos:start="183:13" pos:end="183:22">(<init pos:start="183:14" pos:end="183:14">;</init><condition pos:start="183:15" pos:end="183:18"><expr pos:start="183:15" pos:end="183:17"><name pos:start="183:15" pos:end="183:15">x</name><operator pos:start="183:16" pos:end="183:16">&lt;</operator><name pos:start="183:17" pos:end="183:17">w</name></expr>;</condition><incr pos:start="183:19" pos:end="183:21"><expr pos:start="183:19" pos:end="183:21"><name pos:start="183:19" pos:end="183:19">x</name><operator pos:start="183:20" pos:end="183:21">++</operator></expr></incr>)</control><block type="pseudo" pos:start="183:24" pos:end="183:45"><block_content pos:start="183:24" pos:end="183:45"> <expr_stmt pos:start="183:24" pos:end="183:45"><expr pos:start="183:24" pos:end="183:44"><name pos:start="183:24" pos:end="183:29"><name pos:start="183:24" pos:end="183:24">d</name><index pos:start="183:25" pos:end="183:29">[<expr pos:start="183:26" pos:end="183:28"><literal type="number" pos:start="183:26" pos:end="183:26">2</literal><operator pos:start="183:27" pos:end="183:27">*</operator><name pos:start="183:28" pos:end="183:28">x</name></expr>]</index></name><operator pos:start="183:30" pos:end="183:30">=</operator><name pos:start="183:31" pos:end="183:38"><name pos:start="183:31" pos:end="183:31">d</name><index pos:start="183:32" pos:end="183:38">[<expr pos:start="183:33" pos:end="183:37"><literal type="number" pos:start="183:33" pos:end="183:33">2</literal><operator pos:start="183:34" pos:end="183:34">*</operator><name pos:start="183:35" pos:end="183:35">x</name><operator pos:start="183:36" pos:end="183:36">+</operator><literal type="number" pos:start="183:37" pos:end="183:37">1</literal></expr>]</index></name><operator pos:start="183:39" pos:end="183:39">=</operator><name pos:start="183:40" pos:end="183:44"><name pos:start="183:40" pos:end="183:41">s2</name><index pos:start="183:42" pos:end="183:44">[<expr pos:start="183:43" pos:end="183:43"><name pos:start="183:43" pos:end="183:43">x</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>

<cpp:if pos:start="187:1" pos:end="187:24">#<cpp:directive pos:start="187:2" pos:end="187:3">if</cpp:directive> <expr pos:start="187:5" pos:end="187:24"><name pos:start="187:5" pos:end="187:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <asm pos:start="189:5" pos:end="200:0">__asm__(

            EMMS"       \n\t"

            SFENCE"     \n\t"

            ::: "memory"

        );</asm>

<cpp:endif pos:start="199:1" pos:end="199:6">#<cpp:directive pos:start="199:2" pos:end="199:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
