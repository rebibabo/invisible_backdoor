<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17306.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">pci_register_vga</name><parameter_list pos:start="1:22" pos:end="3:63">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:31">PCIDevice</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:40">pci_dev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:59"><decl pos:start="1:43" pos:end="1:59"><type pos:start="1:43" pos:end="1:59"><name pos:start="1:43" pos:end="1:54">MemoryRegion</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">mem</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:41"><decl pos:start="3:23" pos:end="3:41"><type pos:start="3:23" pos:end="3:41"><name pos:start="3:23" pos:end="3:34">MemoryRegion</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:41">io_lo</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:62"><decl pos:start="3:44" pos:end="3:62"><type pos:start="3:44" pos:end="3:62"><name pos:start="3:44" pos:end="3:55">MemoryRegion</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">io_hi</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:28">

    <expr_stmt pos:start="7:5" pos:end="7:30"><expr pos:start="7:5" pos:end="7:29"><call pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:10">assert</name><argument_list pos:start="7:11" pos:end="7:29">(<argument pos:start="7:12" pos:end="7:28"><expr pos:start="7:12" pos:end="7:28"><operator pos:start="7:12" pos:end="7:12">!</operator><name pos:start="7:13" pos:end="7:28"><name pos:start="7:13" pos:end="7:19">pci_dev</name><operator pos:start="7:20" pos:end="7:21">-&gt;</operator><name pos:start="7:22" pos:end="7:28">has_vga</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:61"><expr pos:start="11:5" pos:end="11:60"><call pos:start="11:5" pos:end="11:60"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:60">(<argument pos:start="11:12" pos:end="11:59"><expr pos:start="11:12" pos:end="11:59"><call pos:start="11:12" pos:end="11:34"><name pos:start="11:12" pos:end="11:29">memory_region_size</name><argument_list pos:start="11:30" pos:end="11:34">(<argument pos:start="11:31" pos:end="11:33"><expr pos:start="11:31" pos:end="11:33"><name pos:start="11:31" pos:end="11:33">mem</name></expr></argument>)</argument_list></call> <operator pos:start="11:36" pos:end="11:37">==</operator> <name pos:start="11:39" pos:end="11:59">QEMU_PCI_VGA_MEM_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:49"><expr pos:start="13:5" pos:end="13:48"><name pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:11">pci_dev</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:24">vga_regions</name><index pos:start="13:25" pos:end="13:42">[<expr pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:41">QEMU_PCI_VGA_MEM</name></expr>]</index></name> <operator pos:start="13:44" pos:end="13:44">=</operator> <name pos:start="13:46" pos:end="13:48">mem</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:71"><expr pos:start="15:5" pos:end="17:70"><call pos:start="15:5" pos:end="17:70"><name pos:start="15:5" pos:end="15:39">memory_region_add_subregion_overlap</name><argument_list pos:start="15:40" pos:end="17:70">(<argument pos:start="15:41" pos:end="15:71"><expr pos:start="15:41" pos:end="15:71"><name pos:start="15:41" pos:end="15:71"><name pos:start="15:41" pos:end="15:47">pci_dev</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:52">bus</name><operator pos:start="15:53" pos:end="15:54">-&gt;</operator><name pos:start="15:55" pos:end="15:71">address_space_mem</name></name></expr></argument>,

                                        <argument pos:start="17:41" pos:end="17:61"><expr pos:start="17:41" pos:end="17:61"><name pos:start="17:41" pos:end="17:61">QEMU_PCI_VGA_MEM_BASE</name></expr></argument>, <argument pos:start="17:64" pos:end="17:66"><expr pos:start="17:64" pos:end="17:66"><name pos:start="17:64" pos:end="17:66">mem</name></expr></argument>, <argument pos:start="17:69" pos:end="17:69"><expr pos:start="17:69" pos:end="17:69"><literal type="number" pos:start="17:69" pos:end="17:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:65"><expr pos:start="21:5" pos:end="21:64"><call pos:start="21:5" pos:end="21:64"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:64">(<argument pos:start="21:12" pos:end="21:63"><expr pos:start="21:12" pos:end="21:63"><call pos:start="21:12" pos:end="21:36"><name pos:start="21:12" pos:end="21:29">memory_region_size</name><argument_list pos:start="21:30" pos:end="21:36">(<argument pos:start="21:31" pos:end="21:35"><expr pos:start="21:31" pos:end="21:35"><name pos:start="21:31" pos:end="21:35">io_lo</name></expr></argument>)</argument_list></call> <operator pos:start="21:38" pos:end="21:39">==</operator> <name pos:start="21:41" pos:end="21:63">QEMU_PCI_VGA_IO_LO_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:11">pci_dev</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:24">vga_regions</name><index pos:start="23:25" pos:end="23:44">[<expr pos:start="23:26" pos:end="23:43"><name pos:start="23:26" pos:end="23:43">QEMU_PCI_VGA_IO_LO</name></expr>]</index></name> <operator pos:start="23:46" pos:end="23:46">=</operator> <name pos:start="23:48" pos:end="23:52">io_lo</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:75"><expr pos:start="25:5" pos:end="27:74"><call pos:start="25:5" pos:end="27:74"><name pos:start="25:5" pos:end="25:39">memory_region_add_subregion_overlap</name><argument_list pos:start="25:40" pos:end="27:74">(<argument pos:start="25:41" pos:end="25:70"><expr pos:start="25:41" pos:end="25:70"><name pos:start="25:41" pos:end="25:70"><name pos:start="25:41" pos:end="25:47">pci_dev</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:52">bus</name><operator pos:start="25:53" pos:end="25:54">-&gt;</operator><name pos:start="25:55" pos:end="25:70">address_space_io</name></name></expr></argument>,

                                        <argument pos:start="27:41" pos:end="27:63"><expr pos:start="27:41" pos:end="27:63"><name pos:start="27:41" pos:end="27:63">QEMU_PCI_VGA_IO_LO_BASE</name></expr></argument>, <argument pos:start="27:66" pos:end="27:70"><expr pos:start="27:66" pos:end="27:70"><name pos:start="27:66" pos:end="27:70">io_lo</name></expr></argument>, <argument pos:start="27:73" pos:end="27:73"><expr pos:start="27:73" pos:end="27:73"><literal type="number" pos:start="27:73" pos:end="27:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><call pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:10">assert</name><argument_list pos:start="31:11" pos:end="31:64">(<argument pos:start="31:12" pos:end="31:63"><expr pos:start="31:12" pos:end="31:63"><call pos:start="31:12" pos:end="31:36"><name pos:start="31:12" pos:end="31:29">memory_region_size</name><argument_list pos:start="31:30" pos:end="31:36">(<argument pos:start="31:31" pos:end="31:35"><expr pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:35">io_hi</name></expr></argument>)</argument_list></call> <operator pos:start="31:38" pos:end="31:39">==</operator> <name pos:start="31:41" pos:end="31:63">QEMU_PCI_VGA_IO_HI_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:53"><expr pos:start="33:5" pos:end="33:52"><name pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:11">pci_dev</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:24">vga_regions</name><index pos:start="33:25" pos:end="33:44">[<expr pos:start="33:26" pos:end="33:43"><name pos:start="33:26" pos:end="33:43">QEMU_PCI_VGA_IO_HI</name></expr>]</index></name> <operator pos:start="33:46" pos:end="33:46">=</operator> <name pos:start="33:48" pos:end="33:52">io_hi</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:75"><expr pos:start="35:5" pos:end="37:74"><call pos:start="35:5" pos:end="37:74"><name pos:start="35:5" pos:end="35:39">memory_region_add_subregion_overlap</name><argument_list pos:start="35:40" pos:end="37:74">(<argument pos:start="35:41" pos:end="35:70"><expr pos:start="35:41" pos:end="35:70"><name pos:start="35:41" pos:end="35:70"><name pos:start="35:41" pos:end="35:47">pci_dev</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:52">bus</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:70">address_space_io</name></name></expr></argument>,

                                        <argument pos:start="37:41" pos:end="37:63"><expr pos:start="37:41" pos:end="37:63"><name pos:start="37:41" pos:end="37:63">QEMU_PCI_VGA_IO_HI_BASE</name></expr></argument>, <argument pos:start="37:66" pos:end="37:70"><expr pos:start="37:66" pos:end="37:70"><name pos:start="37:66" pos:end="37:70">io_hi</name></expr></argument>, <argument pos:start="37:73" pos:end="37:73"><expr pos:start="37:73" pos:end="37:73"><literal type="number" pos:start="37:73" pos:end="37:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:11">pci_dev</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:20">has_vga</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:27">true</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><call pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:18">pci_update_vga</name><argument_list pos:start="43:19" pos:end="43:27">(<argument pos:start="43:20" pos:end="43:26"><expr pos:start="43:20" pos:end="43:26"><name pos:start="43:20" pos:end="43:26">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
