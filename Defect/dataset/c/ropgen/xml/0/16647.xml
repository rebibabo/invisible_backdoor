<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16647.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:68"><name pos:start="1:1" pos:end="1:18">make_setup_request</name> <argument_list pos:start="1:20" pos:end="3:68">(<argument pos:start="1:21" pos:end="1:38">AVFormatContext *s</argument>, <argument pos:start="1:41" pos:end="1:56">const char *host</argument>, <argument pos:start="1:59" pos:end="1:66">int port</argument>,

                    <argument pos:start="3:21" pos:end="3:39">int lower_transport</argument>, <argument pos:start="3:42" pos:end="3:67">const char *real_challenge</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="443:1">{<block_content pos:start="7:5" pos:end="441:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">RTSPState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rt</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">rtx</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">j</name></decl>, <decl pos:start="9:17" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:17">i</name></decl>, <decl pos:start="9:20" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:22">err</name></decl>, <decl pos:start="9:25" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:34">interleave</name> <init pos:start="9:36" pos:end="9:38">= <expr pos:start="9:38" pos:end="9:38"><literal type="number" pos:start="9:38" pos:end="9:38">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">RTSPStream</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:23">rtsp_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:21">RTSPMessageHeader</name></type> <name pos:start="13:23" pos:end="13:28">reply1</name></decl>, <decl pos:start="13:31" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:21"><modifier pos:start="13:31" pos:end="13:31">*</modifier></type><name pos:start="13:32" pos:end="13:36">reply</name> <init pos:start="13:38" pos:end="13:46">= <expr pos:start="13:40" pos:end="13:46"><operator pos:start="13:40" pos:end="13:40">&amp;</operator><name pos:start="13:41" pos:end="13:46">reply1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:18"><name pos:start="15:10" pos:end="15:12">cmd</name><index pos:start="15:13" pos:end="15:18">[<expr pos:start="15:14" pos:end="15:17"><literal type="number" pos:start="15:14" pos:end="15:17">2048</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:26">trans_pref</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:31"><if pos:start="21:5" pos:end="23:32">if <condition pos:start="21:8" pos:end="21:44">(<expr pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:10">rt</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:21">transport</name></name> <operator pos:start="21:23" pos:end="21:24">==</operator> <name pos:start="21:26" pos:end="21:43">RTSP_TRANSPORT_RDT</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:32"><block_content pos:start="23:9" pos:end="23:32">

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:18">trans_pref</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="string" pos:start="23:22" pos:end="23:31">"x-pn-tng"</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="25:5" pos:end="27:31">else<block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:18">trans_pref</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="string" pos:start="27:22" pos:end="27:30">"RTP/AVP"</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:35">/* default timeout: 1 minute */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:6">rt</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:15">timeout</name></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <literal type="number" pos:start="33:19" pos:end="33:20">60</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:49">/* for each stream, make the setup request */</comment>

    <comment type="block" pos:start="39:5" pos:end="41:21">/* XXX: we assume the same server is used for the control of each

       RTSP stream */</comment>



    <for pos:start="45:5" pos:end="407:5">for<control pos:start="45:8" pos:end="45:67">(<init pos:start="45:9" pos:end="45:37"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:9">j</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <name pos:start="45:13" pos:end="45:29">RTSP_RTP_PORT_MIN</name></expr><operator pos:start="45:30" pos:end="45:30">,</operator> <expr pos:start="45:32" pos:end="45:36"><name pos:start="45:32" pos:end="45:32">i</name> <operator pos:start="45:34" pos:end="45:34">=</operator> <literal type="number" pos:start="45:36" pos:end="45:36">0</literal></expr>;</init> <condition pos:start="45:39" pos:end="45:62"><expr pos:start="45:39" pos:end="45:61"><name pos:start="45:39" pos:end="45:39">i</name> <operator pos:start="45:41" pos:end="45:41">&lt;</operator> <name pos:start="45:43" pos:end="45:61"><name pos:start="45:43" pos:end="45:44">rt</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:61">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="45:64" pos:end="45:66"><expr pos:start="45:64" pos:end="45:66"><operator pos:start="45:64" pos:end="45:65">++</operator><name pos:start="45:66" pos:end="45:66">i</name></expr></incr>)</control> <block pos:start="45:69" pos:end="407:5">{<block_content pos:start="47:9" pos:end="405:22">

        <decl_stmt pos:start="47:9" pos:end="47:29"><decl pos:start="47:9" pos:end="47:28"><type pos:start="47:9" pos:end="47:12"><name pos:start="47:9" pos:end="47:12">char</name></type> <name pos:start="47:14" pos:end="47:28"><name pos:start="47:14" pos:end="47:22">transport</name><index pos:start="47:23" pos:end="47:28">[<expr pos:start="47:24" pos:end="47:27"><literal type="number" pos:start="47:24" pos:end="47:27">2048</literal></expr>]</index></name></decl>;</decl_stmt>



        <comment type="block" format="doxygen" pos:start="51:9" pos:end="59:11">/**

         * WMS serves all UDP data over a single connection, the RTX, which

         * isn't necessarily the first in the SDP but has to be the first

         * to be set up, else the second/third SETUP will fail with a 461.

         */</comment>

        <if_stmt pos:start="61:9" pos:end="93:42"><if pos:start="61:9" pos:end="91:9">if <condition pos:start="61:12" pos:end="63:48">(<expr pos:start="61:13" pos:end="63:47"><name pos:start="61:13" pos:end="61:27">lower_transport</name> <operator pos:start="61:29" pos:end="61:30">==</operator> <name pos:start="61:32" pos:end="61:55">RTSP_LOWER_TRANSPORT_UDP</name> <operator pos:start="61:57" pos:end="61:58">&amp;&amp;</operator>

             <name pos:start="63:14" pos:end="63:28"><name pos:start="63:14" pos:end="63:15">rt</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:28">server_type</name></name> <operator pos:start="63:30" pos:end="63:31">==</operator> <name pos:start="63:33" pos:end="63:47">RTSP_SERVER_WMS</name></expr>)</condition> <block pos:start="63:50" pos:end="91:9">{<block_content pos:start="65:13" pos:end="89:64">

            <if_stmt pos:start="65:13" pos:end="89:64"><if pos:start="65:13" pos:end="87:13">if <condition pos:start="65:16" pos:end="65:23">(<expr pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:20">==</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>)</condition> <block pos:start="65:25" pos:end="87:13">{<block_content pos:start="69:17" pos:end="85:48">

                <comment type="block" pos:start="67:17" pos:end="67:31">/* rtx first */</comment>

                <for pos:start="69:17" pos:end="79:17">for <control pos:start="69:21" pos:end="69:63">(<init pos:start="69:22" pos:end="69:29"><expr pos:start="69:22" pos:end="69:28"><name pos:start="69:22" pos:end="69:24">rtx</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <literal type="number" pos:start="69:28" pos:end="69:28">0</literal></expr>;</init> <condition pos:start="69:31" pos:end="69:56"><expr pos:start="69:31" pos:end="69:55"><name pos:start="69:31" pos:end="69:33">rtx</name> <operator pos:start="69:35" pos:end="69:35">&lt;</operator> <name pos:start="69:37" pos:end="69:55"><name pos:start="69:37" pos:end="69:38">rt</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:55">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="69:58" pos:end="69:62"><expr pos:start="69:58" pos:end="69:62"><name pos:start="69:58" pos:end="69:60">rtx</name><operator pos:start="69:61" pos:end="69:62">++</operator></expr></incr>)</control> <block pos:start="69:65" pos:end="79:17">{<block_content pos:start="71:21" pos:end="77:30">

                    <decl_stmt pos:start="71:21" pos:end="71:73"><decl pos:start="71:21" pos:end="71:72"><type pos:start="71:21" pos:end="71:23"><name pos:start="71:21" pos:end="71:23">int</name></type> <name pos:start="71:25" pos:end="71:27">len</name> <init pos:start="71:29" pos:end="71:72">= <expr pos:start="71:31" pos:end="71:72"><call pos:start="71:31" pos:end="71:72"><name pos:start="71:31" pos:end="71:36">strlen</name><argument_list pos:start="71:37" pos:end="71:72">(<argument pos:start="71:38" pos:end="71:71"><expr pos:start="71:38" pos:end="71:71"><name pos:start="71:38" pos:end="71:58"><name pos:start="71:38" pos:end="71:39">rt</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:53">rtsp_streams</name><index pos:start="71:54" pos:end="71:58">[<expr pos:start="71:55" pos:end="71:57"><name pos:start="71:55" pos:end="71:57">rtx</name></expr>]</index></name><operator pos:start="71:59" pos:end="71:60">-&gt;</operator><name pos:start="71:61" pos:end="71:71">control_url</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="73:21" pos:end="77:30"><if pos:start="73:21" pos:end="77:30">if <condition pos:start="73:24" pos:end="75:86">(<expr pos:start="73:25" pos:end="75:85"><name pos:start="73:25" pos:end="73:27">len</name> <operator pos:start="73:29" pos:end="73:30">&gt;=</operator> <literal type="number" pos:start="73:32" pos:end="73:32">4</literal> <operator pos:start="73:34" pos:end="73:35">&amp;&amp;</operator>

                        <operator pos:start="75:25" pos:end="75:25">!</operator><call pos:start="75:26" pos:end="75:85"><name pos:start="75:26" pos:end="75:31">strcmp</name><argument_list pos:start="75:32" pos:end="75:85">(<argument pos:start="75:33" pos:end="75:76"><expr pos:start="75:33" pos:end="75:76"><name pos:start="75:33" pos:end="75:53"><name pos:start="75:33" pos:end="75:34">rt</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:48">rtsp_streams</name><index pos:start="75:49" pos:end="75:53">[<expr pos:start="75:50" pos:end="75:52"><name pos:start="75:50" pos:end="75:52">rtx</name></expr>]</index></name><operator pos:start="75:54" pos:end="75:55">-&gt;</operator><name pos:start="75:56" pos:end="75:66">control_url</name> <operator pos:start="75:68" pos:end="75:68">+</operator> <name pos:start="75:70" pos:end="75:72">len</name> <operator pos:start="75:74" pos:end="75:74">-</operator> <literal type="number" pos:start="75:76" pos:end="75:76">4</literal></expr></argument>, <argument pos:start="75:79" pos:end="75:84"><expr pos:start="75:79" pos:end="75:84"><literal type="string" pos:start="75:79" pos:end="75:84">"/rtx"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="77:25" pos:end="77:30"><block_content pos:start="77:25" pos:end="77:30">

                        <break pos:start="77:25" pos:end="77:30">break;</break></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="81:17" pos:end="83:30"><if pos:start="81:17" pos:end="83:30">if <condition pos:start="81:20" pos:end="81:47">(<expr pos:start="81:21" pos:end="81:46"><name pos:start="81:21" pos:end="81:23">rtx</name> <operator pos:start="81:25" pos:end="81:26">==</operator> <name pos:start="81:28" pos:end="81:46"><name pos:start="81:28" pos:end="81:29">rt</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:46">nb_rtsp_streams</name></name></expr>)</condition><block type="pseudo" pos:start="83:21" pos:end="83:30"><block_content pos:start="83:21" pos:end="83:30">

                    <return pos:start="83:21" pos:end="83:30">return <expr pos:start="83:28" pos:end="83:29"><operator pos:start="83:28" pos:end="83:28">-</operator><literal type="number" pos:start="83:29" pos:end="83:29">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="83:32" pos:end="83:49">/* no RTX found */</comment>

                <expr_stmt pos:start="85:17" pos:end="85:48"><expr pos:start="85:17" pos:end="85:47"><name pos:start="85:17" pos:end="85:23">rtsp_st</name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:47"><name pos:start="85:27" pos:end="85:28">rt</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:42">rtsp_streams</name><index pos:start="85:43" pos:end="85:47">[<expr pos:start="85:44" pos:end="85:46"><name pos:start="85:44" pos:end="85:46">rtx</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="87:15" pos:end="89:64">else<block type="pseudo" pos:start="89:17" pos:end="89:64"><block_content pos:start="89:17" pos:end="89:64">

                <expr_stmt pos:start="89:17" pos:end="89:64"><expr pos:start="89:17" pos:end="89:63"><name pos:start="89:17" pos:end="89:23">rtsp_st</name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:63"><name pos:start="89:27" pos:end="89:28">rt</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:42">rtsp_streams</name><index pos:start="89:43" pos:end="89:63">[<expr pos:start="89:44" pos:end="89:62"><ternary pos:start="89:44" pos:end="89:62"><condition pos:start="89:44" pos:end="89:52"><expr pos:start="89:44" pos:end="89:50"><name pos:start="89:44" pos:end="89:44">i</name> <operator pos:start="89:46" pos:end="89:46">&gt;</operator> <name pos:start="89:48" pos:end="89:50">rtx</name></expr> ?</condition><then pos:start="89:54" pos:end="89:54"> <expr pos:start="89:54" pos:end="89:54"><name pos:start="89:54" pos:end="89:54">i</name></expr> </then><else pos:start="89:56" pos:end="89:62">: <expr pos:start="89:58" pos:end="89:62"><name pos:start="89:58" pos:end="89:58">i</name> <operator pos:start="89:60" pos:end="89:60">-</operator> <literal type="number" pos:start="89:62" pos:end="89:62">1</literal></expr></else></ternary></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="91:11" pos:end="93:42">else<block type="pseudo" pos:start="93:13" pos:end="93:42"><block_content pos:start="93:13" pos:end="93:42">

            <expr_stmt pos:start="93:13" pos:end="93:42"><expr pos:start="93:13" pos:end="93:41"><name pos:start="93:13" pos:end="93:19">rtsp_st</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <name pos:start="93:23" pos:end="93:41"><name pos:start="93:23" pos:end="93:24">rt</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:38">rtsp_streams</name><index pos:start="93:39" pos:end="93:41">[<expr pos:start="93:40" pos:end="93:40"><name pos:start="93:40" pos:end="93:40">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="block" pos:start="97:9" pos:end="97:21">/* RTP/UDP */</comment>

        <if_stmt pos:start="99:9" pos:end="221:9"><if pos:start="99:9" pos:end="175:9">if <condition pos:start="99:12" pos:end="99:56">(<expr pos:start="99:13" pos:end="99:55"><name pos:start="99:13" pos:end="99:27">lower_transport</name> <operator pos:start="99:29" pos:end="99:30">==</operator> <name pos:start="99:32" pos:end="99:55">RTSP_LOWER_TRANSPORT_UDP</name></expr>)</condition> <block pos:start="99:58" pos:end="175:9">{<block_content pos:start="101:13" pos:end="173:75">

            <decl_stmt pos:start="101:13" pos:end="101:26"><decl pos:start="101:13" pos:end="101:25"><type pos:start="101:13" pos:end="101:16"><name pos:start="101:13" pos:end="101:16">char</name></type> <name pos:start="101:18" pos:end="101:25"><name pos:start="101:18" pos:end="101:20">buf</name><index pos:start="101:21" pos:end="101:25">[<expr pos:start="101:22" pos:end="101:24"><literal type="number" pos:start="101:22" pos:end="101:24">256</literal></expr>]</index></name></decl>;</decl_stmt>



            <if_stmt pos:start="105:13" pos:end="111:13"><if pos:start="105:13" pos:end="111:13">if <condition pos:start="105:16" pos:end="105:60">(<expr pos:start="105:17" pos:end="105:59"><name pos:start="105:17" pos:end="105:31"><name pos:start="105:17" pos:end="105:18">rt</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:31">server_type</name></name> <operator pos:start="105:33" pos:end="105:34">==</operator> <name pos:start="105:36" pos:end="105:50">RTSP_SERVER_WMS</name> <operator pos:start="105:52" pos:end="105:53">&amp;&amp;</operator> <name pos:start="105:55" pos:end="105:55">i</name> <operator pos:start="105:57" pos:end="105:57">&gt;</operator> <literal type="number" pos:start="105:59" pos:end="105:59">1</literal></expr>)</condition> <block pos:start="105:62" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:31">

                <expr_stmt pos:start="107:17" pos:end="107:60"><expr pos:start="107:17" pos:end="107:59"><name pos:start="107:17" pos:end="107:20">port</name> <operator pos:start="107:22" pos:end="107:22">=</operator> <name pos:start="107:24" pos:end="107:43"><name pos:start="107:24" pos:end="107:28">reply</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:40">transports</name><index pos:start="107:41" pos:end="107:43">[<expr pos:start="107:42" pos:end="107:42"><literal type="number" pos:start="107:42" pos:end="107:42">0</literal></expr>]</index></name><operator pos:start="107:44" pos:end="107:44">.</operator><name pos:start="107:45" pos:end="107:59">client_port_min</name></expr>;</expr_stmt>

                <goto pos:start="109:17" pos:end="109:31">goto <name pos:start="109:22" pos:end="109:30">have_port</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="115:13" pos:end="115:51">/* first try in specified port range */</comment>

            <if_stmt pos:start="117:13" pos:end="133:13"><if pos:start="117:13" pos:end="133:13">if <condition pos:start="117:16" pos:end="117:39">(<expr pos:start="117:17" pos:end="117:38"><name pos:start="117:17" pos:end="117:33">RTSP_RTP_PORT_MIN</name> <operator pos:start="117:35" pos:end="117:36">!=</operator> <literal type="number" pos:start="117:38" pos:end="117:38">0</literal></expr>)</condition> <block pos:start="117:41" pos:end="133:13">{<block_content pos:start="119:17" pos:end="131:17">

                <while pos:start="119:17" pos:end="131:17">while<condition pos:start="119:22" pos:end="119:45">(<expr pos:start="119:23" pos:end="119:44"><name pos:start="119:23" pos:end="119:23">j</name> <operator pos:start="119:25" pos:end="119:26">&lt;=</operator> <name pos:start="119:28" pos:end="119:44">RTSP_RTP_PORT_MAX</name></expr>)</condition> <block pos:start="119:47" pos:end="131:17">{<block_content pos:start="121:21" pos:end="129:21">

                    <expr_stmt pos:start="121:21" pos:end="121:81"><expr pos:start="121:21" pos:end="121:80"><call pos:start="121:21" pos:end="121:80"><name pos:start="121:21" pos:end="121:28">snprintf</name><argument_list pos:start="121:29" pos:end="121:80">(<argument pos:start="121:30" pos:end="121:32"><expr pos:start="121:30" pos:end="121:32"><name pos:start="121:30" pos:end="121:32">buf</name></expr></argument>, <argument pos:start="121:35" pos:end="121:45"><expr pos:start="121:35" pos:end="121:45"><sizeof pos:start="121:35" pos:end="121:45">sizeof<argument_list pos:start="121:41" pos:end="121:45">(<argument pos:start="121:42" pos:end="121:44"><expr pos:start="121:42" pos:end="121:44"><name pos:start="121:42" pos:end="121:44">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="121:48" pos:end="121:70"><expr pos:start="121:48" pos:end="121:70"><literal type="string" pos:start="121:48" pos:end="121:70">"rtp://%s?localport=%d"</literal></expr></argument>, <argument pos:start="121:73" pos:end="121:76"><expr pos:start="121:73" pos:end="121:76"><name pos:start="121:73" pos:end="121:76">host</name></expr></argument>, <argument pos:start="121:79" pos:end="121:79"><expr pos:start="121:79" pos:end="121:79"><name pos:start="121:79" pos:end="121:79">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="123:21" pos:end="123:27"><expr pos:start="123:21" pos:end="123:26"><name pos:start="123:21" pos:end="123:21">j</name> <operator pos:start="123:23" pos:end="123:24">+=</operator> <literal type="number" pos:start="123:26" pos:end="123:26">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="123:29" pos:end="123:83">/* we will use two port by rtp stream (rtp and rtcp) */</comment>

                    <if_stmt pos:start="125:21" pos:end="129:21"><if pos:start="125:21" pos:end="129:21">if <condition pos:start="125:24" pos:end="125:75">(<expr pos:start="125:25" pos:end="125:74"><call pos:start="125:25" pos:end="125:69"><name pos:start="125:25" pos:end="125:32">url_open</name><argument_list pos:start="125:33" pos:end="125:69">(<argument pos:start="125:34" pos:end="125:53"><expr pos:start="125:34" pos:end="125:53"><operator pos:start="125:34" pos:end="125:34">&amp;</operator><name pos:start="125:35" pos:end="125:53"><name pos:start="125:35" pos:end="125:41">rtsp_st</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:53">rtp_handle</name></name></expr></argument>, <argument pos:start="125:56" pos:end="125:58"><expr pos:start="125:56" pos:end="125:58"><name pos:start="125:56" pos:end="125:58">buf</name></expr></argument>, <argument pos:start="125:61" pos:end="125:68"><expr pos:start="125:61" pos:end="125:68"><name pos:start="125:61" pos:end="125:68">URL_RDWR</name></expr></argument>)</argument_list></call> <operator pos:start="125:71" pos:end="125:72">==</operator> <literal type="number" pos:start="125:74" pos:end="125:74">0</literal></expr>)</condition> <block pos:start="125:77" pos:end="129:21">{<block_content pos:start="127:25" pos:end="127:40">

                        <goto pos:start="127:25" pos:end="127:40">goto <name pos:start="127:30" pos:end="127:39">rtp_opened</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>



<comment type="block" pos:start="137:1" pos:end="147:2">/*            then try on any port

**            if (url_open(&amp;rtsp_st-&gt;rtp_handle, "rtp://", URL_RDONLY) &lt; 0) {

**                err = AVERROR_INVALIDDATA;

**                goto fail;

**            }

*/</comment>



        <label pos:start="151:9" pos:end="151:19"><name pos:start="151:9" pos:end="151:18">rtp_opened</name>:</label>

            <expr_stmt pos:start="153:13" pos:end="153:59"><expr pos:start="153:13" pos:end="153:58"><name pos:start="153:13" pos:end="153:16">port</name> <operator pos:start="153:18" pos:end="153:18">=</operator> <call pos:start="153:20" pos:end="153:58"><name pos:start="153:20" pos:end="153:37">rtp_get_local_port</name><argument_list pos:start="153:38" pos:end="153:58">(<argument pos:start="153:39" pos:end="153:57"><expr pos:start="153:39" pos:end="153:57"><name pos:start="153:39" pos:end="153:57"><name pos:start="153:39" pos:end="153:45">rtsp_st</name><operator pos:start="153:46" pos:end="153:47">-&gt;</operator><name pos:start="153:48" pos:end="153:57">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <label pos:start="155:9" pos:end="155:18"><name pos:start="155:9" pos:end="155:17">have_port</name>:</label>

            <expr_stmt pos:start="157:13" pos:end="159:44"><expr pos:start="157:13" pos:end="159:43"><call pos:start="157:13" pos:end="159:43"><name pos:start="157:13" pos:end="157:20">snprintf</name><argument_list pos:start="157:21" pos:end="159:43">(<argument pos:start="157:22" pos:end="157:30"><expr pos:start="157:22" pos:end="157:30"><name pos:start="157:22" pos:end="157:30">transport</name></expr></argument>, <argument pos:start="157:33" pos:end="157:53"><expr pos:start="157:33" pos:end="157:53"><sizeof pos:start="157:33" pos:end="157:49">sizeof<argument_list pos:start="157:39" pos:end="157:49">(<argument pos:start="157:40" pos:end="157:48"><expr pos:start="157:40" pos:end="157:48"><name pos:start="157:40" pos:end="157:48">transport</name></expr></argument>)</argument_list></sizeof> <operator pos:start="157:51" pos:end="157:51">-</operator> <literal type="number" pos:start="157:53" pos:end="157:53">1</literal></expr></argument>,

                     <argument pos:start="159:22" pos:end="159:30"><expr pos:start="159:22" pos:end="159:30"><literal type="string" pos:start="159:22" pos:end="159:30">"%s/UDP;"</literal></expr></argument>, <argument pos:start="159:33" pos:end="159:42"><expr pos:start="159:33" pos:end="159:42"><name pos:start="159:33" pos:end="159:42">trans_pref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="161:13" pos:end="163:69"><if pos:start="161:13" pos:end="163:69">if <condition pos:start="161:16" pos:end="161:52">(<expr pos:start="161:17" pos:end="161:51"><name pos:start="161:17" pos:end="161:31"><name pos:start="161:17" pos:end="161:18">rt</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:31">server_type</name></name> <operator pos:start="161:33" pos:end="161:34">!=</operator> <name pos:start="161:36" pos:end="161:51">RTSP_SERVER_REAL</name></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="163:69"><block_content pos:start="163:17" pos:end="163:69">

                <expr_stmt pos:start="163:17" pos:end="163:69"><expr pos:start="163:17" pos:end="163:68"><call pos:start="163:17" pos:end="163:68"><name pos:start="163:17" pos:end="163:26">av_strlcat</name><argument_list pos:start="163:27" pos:end="163:68">(<argument pos:start="163:28" pos:end="163:36"><expr pos:start="163:28" pos:end="163:36"><name pos:start="163:28" pos:end="163:36">transport</name></expr></argument>, <argument pos:start="163:39" pos:end="163:48"><expr pos:start="163:39" pos:end="163:48"><literal type="string" pos:start="163:39" pos:end="163:48">"unicast;"</literal></expr></argument>, <argument pos:start="163:51" pos:end="163:67"><expr pos:start="163:51" pos:end="163:67"><sizeof pos:start="163:51" pos:end="163:67">sizeof<argument_list pos:start="163:57" pos:end="163:67">(<argument pos:start="163:58" pos:end="163:66"><expr pos:start="163:58" pos:end="163:66"><name pos:start="163:58" pos:end="163:66">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="165:13" pos:end="167:45"><expr pos:start="165:13" pos:end="167:44"><call pos:start="165:13" pos:end="167:44"><name pos:start="165:13" pos:end="165:23">av_strlcatf</name><argument_list pos:start="165:24" pos:end="167:44">(<argument pos:start="165:25" pos:end="165:33"><expr pos:start="165:25" pos:end="165:33"><name pos:start="165:25" pos:end="165:33">transport</name></expr></argument>, <argument pos:start="165:36" pos:end="165:52"><expr pos:start="165:36" pos:end="165:52"><sizeof pos:start="165:36" pos:end="165:52">sizeof<argument_list pos:start="165:42" pos:end="165:52">(<argument pos:start="165:43" pos:end="165:51"><expr pos:start="165:43" pos:end="165:51"><name pos:start="165:43" pos:end="165:51">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="167:22" pos:end="167:37"><expr pos:start="167:22" pos:end="167:37"><literal type="string" pos:start="167:22" pos:end="167:37">"client_port=%d"</literal></expr></argument>, <argument pos:start="167:40" pos:end="167:43"><expr pos:start="167:40" pos:end="167:43"><name pos:start="167:40" pos:end="167:43">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="169:13" pos:end="173:75"><if pos:start="169:13" pos:end="173:75">if <condition pos:start="169:16" pos:end="171:63">(<expr pos:start="169:17" pos:end="171:62"><name pos:start="169:17" pos:end="169:29"><name pos:start="169:17" pos:end="169:18">rt</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:29">transport</name></name> <operator pos:start="169:31" pos:end="169:32">==</operator> <name pos:start="169:34" pos:end="169:51">RTSP_TRANSPORT_RTP</name> <operator pos:start="169:53" pos:end="169:54">&amp;&amp;</operator>

                <operator pos:start="171:17" pos:end="171:17">!</operator><operator pos:start="171:18" pos:end="171:18">(</operator><name pos:start="171:19" pos:end="171:33"><name pos:start="171:19" pos:end="171:20">rt</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:33">server_type</name></name> <operator pos:start="171:35" pos:end="171:36">==</operator> <name pos:start="171:38" pos:end="171:52">RTSP_SERVER_WMS</name> <operator pos:start="171:54" pos:end="171:55">&amp;&amp;</operator> <name pos:start="171:57" pos:end="171:57">i</name> <operator pos:start="171:59" pos:end="171:59">&gt;</operator> <literal type="number" pos:start="171:61" pos:end="171:61">0</literal><operator pos:start="171:62" pos:end="171:62">)</operator></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:75"><block_content pos:start="173:17" pos:end="173:75">

                <expr_stmt pos:start="173:17" pos:end="173:75"><expr pos:start="173:17" pos:end="173:74"><call pos:start="173:17" pos:end="173:74"><name pos:start="173:17" pos:end="173:27">av_strlcatf</name><argument_list pos:start="173:28" pos:end="173:74">(<argument pos:start="173:29" pos:end="173:37"><expr pos:start="173:29" pos:end="173:37"><name pos:start="173:29" pos:end="173:37">transport</name></expr></argument>, <argument pos:start="173:40" pos:end="173:56"><expr pos:start="173:40" pos:end="173:56"><sizeof pos:start="173:40" pos:end="173:56">sizeof<argument_list pos:start="173:46" pos:end="173:56">(<argument pos:start="173:47" pos:end="173:55"><expr pos:start="173:47" pos:end="173:55"><name pos:start="173:47" pos:end="173:55">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="173:59" pos:end="173:63"><expr pos:start="173:59" pos:end="173:63"><literal type="string" pos:start="173:59" pos:end="173:63">"-%d"</literal></expr></argument>, <argument pos:start="173:66" pos:end="173:73"><expr pos:start="173:66" pos:end="173:73"><name pos:start="173:66" pos:end="173:69">port</name> <operator pos:start="173:71" pos:end="173:71">+</operator> <literal type="number" pos:start="173:73" pos:end="173:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if>



        <comment type="block" pos:start="179:9" pos:end="179:21">/* RTP/TCP */</comment>

        <if type="elseif" pos:start="181:9" pos:end="211:9">else if <condition pos:start="181:17" pos:end="181:61">(<expr pos:start="181:18" pos:end="181:60"><name pos:start="181:18" pos:end="181:32">lower_transport</name> <operator pos:start="181:34" pos:end="181:35">==</operator> <name pos:start="181:37" pos:end="181:60">RTSP_LOWER_TRANSPORT_TCP</name></expr>)</condition> <block pos:start="181:63" pos:end="211:9">{<block_content pos:start="189:13" pos:end="209:28">

            <comment type="block" format="doxygen" pos:start="183:13" pos:end="187:73">/** For WMS streams, the application streams are only used for

             * UDP. When trying to set it up for TCP streams, the server

             * will return an error. Therefore, we skip those streams. */</comment>

            <if_stmt pos:start="189:13" pos:end="193:25"><if pos:start="189:13" pos:end="193:25">if <condition pos:start="189:16" pos:end="191:88">(<expr pos:start="189:17" pos:end="191:87"><name pos:start="189:17" pos:end="189:31"><name pos:start="189:17" pos:end="189:18">rt</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:31">server_type</name></name> <operator pos:start="189:33" pos:end="189:34">==</operator> <name pos:start="189:36" pos:end="189:50">RTSP_SERVER_WMS</name> <operator pos:start="189:52" pos:end="189:53">&amp;&amp;</operator>

                <name pos:start="191:17" pos:end="191:49"><name pos:start="191:17" pos:end="191:17">s</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:26">streams</name><index pos:start="191:27" pos:end="191:49">[<expr pos:start="191:28" pos:end="191:48"><name pos:start="191:28" pos:end="191:48"><name pos:start="191:28" pos:end="191:34">rtsp_st</name><operator pos:start="191:35" pos:end="191:36">-&gt;</operator><name pos:start="191:37" pos:end="191:48">stream_index</name></name></expr>]</index></name><operator pos:start="191:50" pos:end="191:51">-&gt;</operator><name pos:start="191:52" pos:end="191:68"><name pos:start="191:52" pos:end="191:56">codec</name><operator pos:start="191:57" pos:end="191:58">-&gt;</operator><name pos:start="191:59" pos:end="191:68">codec_type</name></name> <operator pos:start="191:70" pos:end="191:71">==</operator> <name pos:start="191:73" pos:end="191:87">CODEC_TYPE_DATA</name></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:25"><block_content pos:start="193:17" pos:end="193:25">

                <continue pos:start="193:17" pos:end="193:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="195:13" pos:end="197:44"><expr pos:start="195:13" pos:end="197:43"><call pos:start="195:13" pos:end="197:43"><name pos:start="195:13" pos:end="195:20">snprintf</name><argument_list pos:start="195:21" pos:end="197:43">(<argument pos:start="195:22" pos:end="195:30"><expr pos:start="195:22" pos:end="195:30"><name pos:start="195:22" pos:end="195:30">transport</name></expr></argument>, <argument pos:start="195:33" pos:end="195:53"><expr pos:start="195:33" pos:end="195:53"><sizeof pos:start="195:33" pos:end="195:49">sizeof<argument_list pos:start="195:39" pos:end="195:49">(<argument pos:start="195:40" pos:end="195:48"><expr pos:start="195:40" pos:end="195:48"><name pos:start="195:40" pos:end="195:48">transport</name></expr></argument>)</argument_list></sizeof> <operator pos:start="195:51" pos:end="195:51">-</operator> <literal type="number" pos:start="195:53" pos:end="195:53">1</literal></expr></argument>,

                     <argument pos:start="197:22" pos:end="197:30"><expr pos:start="197:22" pos:end="197:30"><literal type="string" pos:start="197:22" pos:end="197:30">"%s/TCP;"</literal></expr></argument>, <argument pos:start="197:33" pos:end="197:42"><expr pos:start="197:33" pos:end="197:42"><name pos:start="197:33" pos:end="197:42">trans_pref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="199:13" pos:end="201:69"><if pos:start="199:13" pos:end="201:69">if <condition pos:start="199:16" pos:end="199:51">(<expr pos:start="199:17" pos:end="199:50"><name pos:start="199:17" pos:end="199:31"><name pos:start="199:17" pos:end="199:18">rt</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:31">server_type</name></name> <operator pos:start="199:33" pos:end="199:34">==</operator> <name pos:start="199:36" pos:end="199:50">RTSP_SERVER_WMS</name></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:69"><block_content pos:start="201:17" pos:end="201:69">

                <expr_stmt pos:start="201:17" pos:end="201:69"><expr pos:start="201:17" pos:end="201:68"><call pos:start="201:17" pos:end="201:68"><name pos:start="201:17" pos:end="201:26">av_strlcat</name><argument_list pos:start="201:27" pos:end="201:68">(<argument pos:start="201:28" pos:end="201:36"><expr pos:start="201:28" pos:end="201:36"><name pos:start="201:28" pos:end="201:36">transport</name></expr></argument>, <argument pos:start="201:39" pos:end="201:48"><expr pos:start="201:39" pos:end="201:48"><literal type="string" pos:start="201:39" pos:end="201:48">"unicast;"</literal></expr></argument>, <argument pos:start="201:51" pos:end="201:67"><expr pos:start="201:51" pos:end="201:67"><sizeof pos:start="201:51" pos:end="201:67">sizeof<argument_list pos:start="201:57" pos:end="201:67">(<argument pos:start="201:58" pos:end="201:66"><expr pos:start="201:58" pos:end="201:66"><name pos:start="201:58" pos:end="201:66">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="203:13" pos:end="207:52"><expr pos:start="203:13" pos:end="207:51"><call pos:start="203:13" pos:end="207:51"><name pos:start="203:13" pos:end="203:23">av_strlcatf</name><argument_list pos:start="203:24" pos:end="207:51">(<argument pos:start="203:25" pos:end="203:33"><expr pos:start="203:25" pos:end="203:33"><name pos:start="203:25" pos:end="203:33">transport</name></expr></argument>, <argument pos:start="203:36" pos:end="203:52"><expr pos:start="203:36" pos:end="203:52"><sizeof pos:start="203:36" pos:end="203:52">sizeof<argument_list pos:start="203:42" pos:end="203:52">(<argument pos:start="203:43" pos:end="203:51"><expr pos:start="203:43" pos:end="203:51"><name pos:start="203:43" pos:end="203:51">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                        <argument pos:start="205:25" pos:end="205:43"><expr pos:start="205:25" pos:end="205:43"><literal type="string" pos:start="205:25" pos:end="205:43">"interleaved=%d-%d"</literal></expr></argument>,

                        <argument pos:start="207:25" pos:end="207:34"><expr pos:start="207:25" pos:end="207:34"><name pos:start="207:25" pos:end="207:34">interleave</name></expr></argument>, <argument pos:start="207:37" pos:end="207:50"><expr pos:start="207:37" pos:end="207:50"><name pos:start="207:37" pos:end="207:46">interleave</name> <operator pos:start="207:48" pos:end="207:48">+</operator> <literal type="number" pos:start="207:50" pos:end="207:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:28"><expr pos:start="209:13" pos:end="209:27"><name pos:start="209:13" pos:end="209:22">interleave</name> <operator pos:start="209:24" pos:end="209:25">+=</operator> <literal type="number" pos:start="209:27" pos:end="209:27">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if>



        <if type="elseif" pos:start="215:9" pos:end="221:9">else if <condition pos:start="215:17" pos:end="215:71">(<expr pos:start="215:18" pos:end="215:70"><name pos:start="215:18" pos:end="215:32">lower_transport</name> <operator pos:start="215:34" pos:end="215:35">==</operator> <name pos:start="215:37" pos:end="215:70">RTSP_LOWER_TRANSPORT_UDP_MULTICAST</name></expr>)</condition> <block pos:start="215:73" pos:end="221:9">{<block_content pos:start="217:13" pos:end="219:53">

            <expr_stmt pos:start="217:13" pos:end="219:53"><expr pos:start="217:13" pos:end="219:52"><call pos:start="217:13" pos:end="219:52"><name pos:start="217:13" pos:end="217:20">snprintf</name><argument_list pos:start="217:21" pos:end="219:52">(<argument pos:start="217:22" pos:end="217:30"><expr pos:start="217:22" pos:end="217:30"><name pos:start="217:22" pos:end="217:30">transport</name></expr></argument>, <argument pos:start="217:33" pos:end="217:53"><expr pos:start="217:33" pos:end="217:53"><sizeof pos:start="217:33" pos:end="217:49">sizeof<argument_list pos:start="217:39" pos:end="217:49">(<argument pos:start="217:40" pos:end="217:48"><expr pos:start="217:40" pos:end="217:48"><name pos:start="217:40" pos:end="217:48">transport</name></expr></argument>)</argument_list></sizeof> <operator pos:start="217:51" pos:end="217:51">-</operator> <literal type="number" pos:start="217:53" pos:end="217:53">1</literal></expr></argument>,

                     <argument pos:start="219:22" pos:end="219:39"><expr pos:start="219:22" pos:end="219:39"><literal type="string" pos:start="219:22" pos:end="219:39">"%s/UDP;multicast"</literal></expr></argument>, <argument pos:start="219:42" pos:end="219:51"><expr pos:start="219:42" pos:end="219:51"><name pos:start="219:42" pos:end="219:51">trans_pref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="223:9" pos:end="227:67"><if pos:start="223:9" pos:end="227:67">if <condition pos:start="223:12" pos:end="225:47">(<expr pos:start="223:13" pos:end="225:46"><name pos:start="223:13" pos:end="223:27"><name pos:start="223:13" pos:end="223:14">rt</name><operator pos:start="223:15" pos:end="223:16">-&gt;</operator><name pos:start="223:17" pos:end="223:27">server_type</name></name> <operator pos:start="223:29" pos:end="223:30">==</operator> <name pos:start="223:32" pos:end="223:47">RTSP_SERVER_REAL</name> <operator pos:start="223:49" pos:end="223:50">||</operator>

            <name pos:start="225:13" pos:end="225:27"><name pos:start="225:13" pos:end="225:14">rt</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:27">server_type</name></name> <operator pos:start="225:29" pos:end="225:30">==</operator> <name pos:start="225:32" pos:end="225:46">RTSP_SERVER_WMS</name></expr>)</condition><block type="pseudo" pos:start="227:13" pos:end="227:67"><block_content pos:start="227:13" pos:end="227:67">

            <expr_stmt pos:start="227:13" pos:end="227:67"><expr pos:start="227:13" pos:end="227:66"><call pos:start="227:13" pos:end="227:66"><name pos:start="227:13" pos:end="227:22">av_strlcat</name><argument_list pos:start="227:23" pos:end="227:66">(<argument pos:start="227:24" pos:end="227:32"><expr pos:start="227:24" pos:end="227:32"><name pos:start="227:24" pos:end="227:32">transport</name></expr></argument>, <argument pos:start="227:35" pos:end="227:46"><expr pos:start="227:35" pos:end="227:46"><literal type="string" pos:start="227:35" pos:end="227:46">";mode=play"</literal></expr></argument>, <argument pos:start="227:49" pos:end="227:65"><expr pos:start="227:49" pos:end="227:65"><sizeof pos:start="227:49" pos:end="227:65">sizeof<argument_list pos:start="227:55" pos:end="227:65">(<argument pos:start="227:56" pos:end="227:64"><expr pos:start="227:56" pos:end="227:64"><name pos:start="227:56" pos:end="227:64">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="229:9" pos:end="235:50"><expr pos:start="229:9" pos:end="235:49"><call pos:start="229:9" pos:end="235:49"><name pos:start="229:9" pos:end="229:16">snprintf</name><argument_list pos:start="229:17" pos:end="235:49">(<argument pos:start="229:18" pos:end="229:20"><expr pos:start="229:18" pos:end="229:20"><name pos:start="229:18" pos:end="229:20">cmd</name></expr></argument>, <argument pos:start="229:23" pos:end="229:33"><expr pos:start="229:23" pos:end="229:33"><sizeof pos:start="229:23" pos:end="229:33">sizeof<argument_list pos:start="229:29" pos:end="229:33">(<argument pos:start="229:30" pos:end="229:32"><expr pos:start="229:30" pos:end="229:32"><name pos:start="229:30" pos:end="229:32">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                 <argument pos:start="231:18" pos:end="233:36"><expr pos:start="231:18" pos:end="233:36"><literal type="string" pos:start="231:18" pos:end="231:40">"SETUP %s RTSP/1.0\r\n"</literal>

                 <literal type="string" pos:start="233:18" pos:end="233:36">"Transport: %s\r\n"</literal></expr></argument>,

                 <argument pos:start="235:18" pos:end="235:37"><expr pos:start="235:18" pos:end="235:37"><name pos:start="235:18" pos:end="235:37"><name pos:start="235:18" pos:end="235:24">rtsp_st</name><operator pos:start="235:25" pos:end="235:26">-&gt;</operator><name pos:start="235:27" pos:end="235:37">control_url</name></name></expr></argument>, <argument pos:start="235:40" pos:end="235:48"><expr pos:start="235:40" pos:end="235:48"><name pos:start="235:40" pos:end="235:48">transport</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="237:9" pos:end="253:9"><if pos:start="237:9" pos:end="253:9">if <condition pos:start="237:12" pos:end="237:58">(<expr pos:start="237:13" pos:end="237:57"><name pos:start="237:13" pos:end="237:13">i</name> <operator pos:start="237:15" pos:end="237:16">==</operator> <literal type="number" pos:start="237:18" pos:end="237:18">0</literal> <operator pos:start="237:20" pos:end="237:21">&amp;&amp;</operator> <name pos:start="237:23" pos:end="237:37"><name pos:start="237:23" pos:end="237:24">rt</name><operator pos:start="237:25" pos:end="237:26">-&gt;</operator><name pos:start="237:27" pos:end="237:37">server_type</name></name> <operator pos:start="237:39" pos:end="237:40">==</operator> <name pos:start="237:42" pos:end="237:57">RTSP_SERVER_REAL</name></expr>)</condition> <block pos:start="237:60" pos:end="253:9">{<block_content pos:start="239:13" pos:end="251:61">

            <decl_stmt pos:start="239:13" pos:end="239:44"><decl pos:start="239:13" pos:end="239:29"><type pos:start="239:13" pos:end="239:16"><name pos:start="239:13" pos:end="239:16">char</name></type> <name pos:start="239:18" pos:end="239:29"><name pos:start="239:18" pos:end="239:25">real_res</name><index pos:start="239:26" pos:end="239:29">[<expr pos:start="239:27" pos:end="239:28"><literal type="number" pos:start="239:27" pos:end="239:28">41</literal></expr>]</index></name></decl>, <decl pos:start="239:32" pos:end="239:43"><type ref="prev" pos:start="239:13" pos:end="239:16"/><name pos:start="239:32" pos:end="239:43"><name pos:start="239:32" pos:end="239:40">real_csum</name><index pos:start="239:41" pos:end="239:43">[<expr pos:start="239:42" pos:end="239:42"><literal type="number" pos:start="239:42" pos:end="239:42">9</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="241:13" pos:end="243:62"><expr pos:start="241:13" pos:end="243:61"><call pos:start="241:13" pos:end="243:61"><name pos:start="241:13" pos:end="241:45">ff_rdt_calc_response_and_checksum</name><argument_list pos:start="241:46" pos:end="243:61">(<argument pos:start="241:47" pos:end="241:54"><expr pos:start="241:47" pos:end="241:54"><name pos:start="241:47" pos:end="241:54">real_res</name></expr></argument>, <argument pos:start="241:57" pos:end="241:65"><expr pos:start="241:57" pos:end="241:65"><name pos:start="241:57" pos:end="241:65">real_csum</name></expr></argument>,

                                              <argument pos:start="243:47" pos:end="243:60"><expr pos:start="243:47" pos:end="243:60"><name pos:start="243:47" pos:end="243:60">real_challenge</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="251:61"><expr pos:start="245:13" pos:end="251:60"><call pos:start="245:13" pos:end="251:60"><name pos:start="245:13" pos:end="245:23">av_strlcatf</name><argument_list pos:start="245:24" pos:end="251:60">(<argument pos:start="245:25" pos:end="245:27"><expr pos:start="245:25" pos:end="245:27"><name pos:start="245:25" pos:end="245:27">cmd</name></expr></argument>, <argument pos:start="245:30" pos:end="245:40"><expr pos:start="245:30" pos:end="245:40"><sizeof pos:start="245:30" pos:end="245:40">sizeof<argument_list pos:start="245:36" pos:end="245:40">(<argument pos:start="245:37" pos:end="245:39"><expr pos:start="245:37" pos:end="245:39"><name pos:start="245:37" pos:end="245:39">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                        <argument pos:start="247:25" pos:end="249:55"><expr pos:start="247:25" pos:end="249:55"><literal type="string" pos:start="247:25" pos:end="247:42">"If-Match: %s\r\n"</literal>

                        <literal type="string" pos:start="249:25" pos:end="249:55">"RealChallenge2: %s, sd=%s\r\n"</literal></expr></argument>,

                        <argument pos:start="251:25" pos:end="251:38"><expr pos:start="251:25" pos:end="251:38"><name pos:start="251:25" pos:end="251:38"><name pos:start="251:25" pos:end="251:26">rt</name><operator pos:start="251:27" pos:end="251:28">-&gt;</operator><name pos:start="251:29" pos:end="251:38">session_id</name></name></expr></argument>, <argument pos:start="251:41" pos:end="251:48"><expr pos:start="251:41" pos:end="251:48"><name pos:start="251:41" pos:end="251:48">real_res</name></expr></argument>, <argument pos:start="251:51" pos:end="251:59"><expr pos:start="251:51" pos:end="251:59"><name pos:start="251:51" pos:end="251:59">real_csum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:43"><expr pos:start="255:9" pos:end="255:42"><call pos:start="255:9" pos:end="255:42"><name pos:start="255:9" pos:end="255:21">rtsp_send_cmd</name><argument_list pos:start="255:22" pos:end="255:42">(<argument pos:start="255:23" pos:end="255:23"><expr pos:start="255:23" pos:end="255:23"><name pos:start="255:23" pos:end="255:23">s</name></expr></argument>, <argument pos:start="255:26" pos:end="255:28"><expr pos:start="255:26" pos:end="255:28"><name pos:start="255:26" pos:end="255:28">cmd</name></expr></argument>, <argument pos:start="255:31" pos:end="255:35"><expr pos:start="255:31" pos:end="255:35"><name pos:start="255:31" pos:end="255:35">reply</name></expr></argument>, <argument pos:start="255:38" pos:end="255:41"><expr pos:start="255:38" pos:end="255:41"><name pos:start="255:38" pos:end="255:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="257:9" pos:end="271:9"><if pos:start="257:9" pos:end="263:9">if <condition pos:start="257:12" pos:end="257:75">(<expr pos:start="257:13" pos:end="257:74"><name pos:start="257:13" pos:end="257:30"><name pos:start="257:13" pos:end="257:17">reply</name><operator pos:start="257:18" pos:end="257:19">-&gt;</operator><name pos:start="257:20" pos:end="257:30">status_code</name></name> <operator pos:start="257:32" pos:end="257:33">==</operator> <literal type="number" pos:start="257:35" pos:end="257:37">461</literal> <comment type="block" pos:start="257:39" pos:end="257:64">/* Unsupported protocol */</comment> <operator pos:start="257:66" pos:end="257:67">&amp;&amp;</operator> <name pos:start="257:69" pos:end="257:69">i</name> <operator pos:start="257:71" pos:end="257:72">==</operator> <literal type="number" pos:start="257:74" pos:end="257:74">0</literal></expr>)</condition> <block pos:start="257:77" pos:end="263:9">{<block_content pos:start="259:13" pos:end="261:22">

            <expr_stmt pos:start="259:13" pos:end="259:20"><expr pos:start="259:13" pos:end="259:19"><name pos:start="259:13" pos:end="259:15">err</name> <operator pos:start="259:17" pos:end="259:17">=</operator> <literal type="number" pos:start="259:19" pos:end="259:19">1</literal></expr>;</expr_stmt>

            <goto pos:start="261:13" pos:end="261:22">goto <name pos:start="261:18" pos:end="261:21">fail</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="263:11" pos:end="271:9">else if <condition pos:start="263:19" pos:end="265:45">(<expr pos:start="263:20" pos:end="265:44"><name pos:start="263:20" pos:end="263:37"><name pos:start="263:20" pos:end="263:24">reply</name><operator pos:start="263:25" pos:end="263:26">-&gt;</operator><name pos:start="263:27" pos:end="263:37">status_code</name></name> <operator pos:start="263:39" pos:end="263:40">!=</operator> <name pos:start="263:42" pos:end="263:55">RTSP_STATUS_OK</name> <operator pos:start="263:57" pos:end="263:58">||</operator>

                   <name pos:start="265:20" pos:end="265:39"><name pos:start="265:20" pos:end="265:24">reply</name><operator pos:start="265:25" pos:end="265:26">-&gt;</operator><name pos:start="265:27" pos:end="265:39">nb_transports</name></name> <operator pos:start="265:41" pos:end="265:42">!=</operator> <literal type="number" pos:start="265:44" pos:end="265:44">1</literal></expr>)</condition> <block pos:start="265:47" pos:end="271:9">{<block_content pos:start="267:13" pos:end="269:22">

            <expr_stmt pos:start="267:13" pos:end="267:38"><expr pos:start="267:13" pos:end="267:37"><name pos:start="267:13" pos:end="267:15">err</name> <operator pos:start="267:17" pos:end="267:17">=</operator> <name pos:start="267:19" pos:end="267:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="269:13" pos:end="269:22">goto <name pos:start="269:18" pos:end="269:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="275:9" pos:end="275:60">/* XXX: same protocol for all streams is required */</comment>

        <if_stmt pos:start="277:9" pos:end="295:9"><if pos:start="277:9" pos:end="289:9">if <condition pos:start="277:12" pos:end="277:18">(<expr pos:start="277:13" pos:end="277:17"><name pos:start="277:13" pos:end="277:13">i</name> <operator pos:start="277:15" pos:end="277:15">&gt;</operator> <literal type="number" pos:start="277:17" pos:end="277:17">0</literal></expr>)</condition> <block pos:start="277:20" pos:end="289:9">{<block_content pos:start="279:13" pos:end="287:13">

            <if_stmt pos:start="279:13" pos:end="287:13"><if pos:start="279:13" pos:end="287:13">if <condition pos:start="279:16" pos:end="281:64">(<expr pos:start="279:17" pos:end="281:63"><name pos:start="279:17" pos:end="279:36"><name pos:start="279:17" pos:end="279:21">reply</name><operator pos:start="279:22" pos:end="279:23">-&gt;</operator><name pos:start="279:24" pos:end="279:33">transports</name><index pos:start="279:34" pos:end="279:36">[<expr pos:start="279:35" pos:end="279:35"><literal type="number" pos:start="279:35" pos:end="279:35">0</literal></expr>]</index></name><operator pos:start="279:37" pos:end="279:37">.</operator><name pos:start="279:38" pos:end="279:52">lower_transport</name> <operator pos:start="279:54" pos:end="279:55">!=</operator> <name pos:start="279:57" pos:end="279:75"><name pos:start="279:57" pos:end="279:58">rt</name><operator pos:start="279:59" pos:end="279:60">-&gt;</operator><name pos:start="279:61" pos:end="279:75">lower_transport</name></name> <operator pos:start="279:77" pos:end="279:78">||</operator>

                <name pos:start="281:17" pos:end="281:36"><name pos:start="281:17" pos:end="281:21">reply</name><operator pos:start="281:22" pos:end="281:23">-&gt;</operator><name pos:start="281:24" pos:end="281:33">transports</name><index pos:start="281:34" pos:end="281:36">[<expr pos:start="281:35" pos:end="281:35"><literal type="number" pos:start="281:35" pos:end="281:35">0</literal></expr>]</index></name><operator pos:start="281:37" pos:end="281:37">.</operator><name pos:start="281:38" pos:end="281:46">transport</name> <operator pos:start="281:48" pos:end="281:49">!=</operator> <name pos:start="281:51" pos:end="281:63"><name pos:start="281:51" pos:end="281:52">rt</name><operator pos:start="281:53" pos:end="281:54">-&gt;</operator><name pos:start="281:55" pos:end="281:63">transport</name></name></expr>)</condition> <block pos:start="281:66" pos:end="287:13">{<block_content pos:start="283:17" pos:end="285:26">

                <expr_stmt pos:start="283:17" pos:end="283:42"><expr pos:start="283:17" pos:end="283:41"><name pos:start="283:17" pos:end="283:19">err</name> <operator pos:start="283:21" pos:end="283:21">=</operator> <name pos:start="283:23" pos:end="283:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="285:17" pos:end="285:26">goto <name pos:start="285:22" pos:end="285:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="289:11" pos:end="295:9">else <block pos:start="289:16" pos:end="295:9">{<block_content pos:start="291:13" pos:end="293:59">

            <expr_stmt pos:start="291:13" pos:end="291:71"><expr pos:start="291:13" pos:end="291:70"><name pos:start="291:13" pos:end="291:31"><name pos:start="291:13" pos:end="291:14">rt</name><operator pos:start="291:15" pos:end="291:16">-&gt;</operator><name pos:start="291:17" pos:end="291:31">lower_transport</name></name> <operator pos:start="291:33" pos:end="291:33">=</operator> <name pos:start="291:35" pos:end="291:54"><name pos:start="291:35" pos:end="291:39">reply</name><operator pos:start="291:40" pos:end="291:41">-&gt;</operator><name pos:start="291:42" pos:end="291:51">transports</name><index pos:start="291:52" pos:end="291:54">[<expr pos:start="291:53" pos:end="291:53"><literal type="number" pos:start="291:53" pos:end="291:53">0</literal></expr>]</index></name><operator pos:start="291:55" pos:end="291:55">.</operator><name pos:start="291:56" pos:end="291:70">lower_transport</name></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:59"><expr pos:start="293:13" pos:end="293:58"><name pos:start="293:13" pos:end="293:25"><name pos:start="293:13" pos:end="293:14">rt</name><operator pos:start="293:15" pos:end="293:16">-&gt;</operator><name pos:start="293:17" pos:end="293:25">transport</name></name> <operator pos:start="293:27" pos:end="293:27">=</operator> <name pos:start="293:29" pos:end="293:48"><name pos:start="293:29" pos:end="293:33">reply</name><operator pos:start="293:34" pos:end="293:35">-&gt;</operator><name pos:start="293:36" pos:end="293:45">transports</name><index pos:start="293:46" pos:end="293:48">[<expr pos:start="293:47" pos:end="293:47"><literal type="number" pos:start="293:47" pos:end="293:47">0</literal></expr>]</index></name><operator pos:start="293:49" pos:end="293:49">.</operator><name pos:start="293:50" pos:end="293:58">transport</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="299:9" pos:end="299:49">/* close RTP connection if not choosen */</comment>

        <if_stmt pos:start="301:9" pos:end="309:9"><if pos:start="301:9" pos:end="309:9">if <condition pos:start="301:12" pos:end="303:58">(<expr pos:start="301:13" pos:end="303:57"><name pos:start="301:13" pos:end="301:32"><name pos:start="301:13" pos:end="301:17">reply</name><operator pos:start="301:18" pos:end="301:19">-&gt;</operator><name pos:start="301:20" pos:end="301:29">transports</name><index pos:start="301:30" pos:end="301:32">[<expr pos:start="301:31" pos:end="301:31"><literal type="number" pos:start="301:31" pos:end="301:31">0</literal></expr>]</index></name><operator pos:start="301:33" pos:end="301:33">.</operator><name pos:start="301:34" pos:end="301:48">lower_transport</name> <operator pos:start="301:50" pos:end="301:51">!=</operator> <name pos:start="301:53" pos:end="301:76">RTSP_LOWER_TRANSPORT_UDP</name> <operator pos:start="301:78" pos:end="301:79">&amp;&amp;</operator>

            <operator pos:start="303:13" pos:end="303:13">(</operator><name pos:start="303:14" pos:end="303:28">lower_transport</name> <operator pos:start="303:30" pos:end="303:31">==</operator> <name pos:start="303:33" pos:end="303:56">RTSP_LOWER_TRANSPORT_UDP</name><operator pos:start="303:57" pos:end="303:57">)</operator></expr>)</condition> <block pos:start="303:60" pos:end="309:9">{<block_content pos:start="305:13" pos:end="307:39">

            <expr_stmt pos:start="305:13" pos:end="305:43"><expr pos:start="305:13" pos:end="305:42"><call pos:start="305:13" pos:end="305:42"><name pos:start="305:13" pos:end="305:21">url_close</name><argument_list pos:start="305:22" pos:end="305:42">(<argument pos:start="305:23" pos:end="305:41"><expr pos:start="305:23" pos:end="305:41"><name pos:start="305:23" pos:end="305:41"><name pos:start="305:23" pos:end="305:29">rtsp_st</name><operator pos:start="305:30" pos:end="305:31">-&gt;</operator><name pos:start="305:32" pos:end="305:41">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:39"><expr pos:start="307:13" pos:end="307:38"><name pos:start="307:13" pos:end="307:31"><name pos:start="307:13" pos:end="307:19">rtsp_st</name><operator pos:start="307:20" pos:end="307:21">-&gt;</operator><name pos:start="307:22" pos:end="307:31">rtp_handle</name></name> <operator pos:start="307:33" pos:end="307:33">=</operator> <name pos:start="307:35" pos:end="307:38">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="313:9" pos:end="399:9">switch<condition pos:start="313:15" pos:end="313:52">(<expr pos:start="313:16" pos:end="313:51"><name pos:start="313:16" pos:end="313:35"><name pos:start="313:16" pos:end="313:20">reply</name><operator pos:start="313:21" pos:end="313:22">-&gt;</operator><name pos:start="313:23" pos:end="313:32">transports</name><index pos:start="313:33" pos:end="313:35">[<expr pos:start="313:34" pos:end="313:34"><literal type="number" pos:start="313:34" pos:end="313:34">0</literal></expr>]</index></name><operator pos:start="313:36" pos:end="313:36">.</operator><name pos:start="313:37" pos:end="313:51">lower_transport</name></expr>)</condition> <block pos:start="313:54" pos:end="399:9">{<block_content pos:start="315:9" pos:end="397:18">

        <case pos:start="315:9" pos:end="315:38">case <expr pos:start="315:14" pos:end="315:37"><name pos:start="315:14" pos:end="315:37">RTSP_LOWER_TRANSPORT_TCP</name></expr>:</case>

            <expr_stmt pos:start="317:13" pos:end="317:76"><expr pos:start="317:13" pos:end="317:75"><name pos:start="317:13" pos:end="317:36"><name pos:start="317:13" pos:end="317:19">rtsp_st</name><operator pos:start="317:20" pos:end="317:21">-&gt;</operator><name pos:start="317:22" pos:end="317:36">interleaved_min</name></name> <operator pos:start="317:38" pos:end="317:38">=</operator> <name pos:start="317:40" pos:end="317:59"><name pos:start="317:40" pos:end="317:44">reply</name><operator pos:start="317:45" pos:end="317:46">-&gt;</operator><name pos:start="317:47" pos:end="317:56">transports</name><index pos:start="317:57" pos:end="317:59">[<expr pos:start="317:58" pos:end="317:58"><literal type="number" pos:start="317:58" pos:end="317:58">0</literal></expr>]</index></name><operator pos:start="317:60" pos:end="317:60">.</operator><name pos:start="317:61" pos:end="317:75">interleaved_min</name></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:76"><expr pos:start="319:13" pos:end="319:75"><name pos:start="319:13" pos:end="319:36"><name pos:start="319:13" pos:end="319:19">rtsp_st</name><operator pos:start="319:20" pos:end="319:21">-&gt;</operator><name pos:start="319:22" pos:end="319:36">interleaved_max</name></name> <operator pos:start="319:38" pos:end="319:38">=</operator> <name pos:start="319:40" pos:end="319:59"><name pos:start="319:40" pos:end="319:44">reply</name><operator pos:start="319:45" pos:end="319:46">-&gt;</operator><name pos:start="319:47" pos:end="319:56">transports</name><index pos:start="319:57" pos:end="319:59">[<expr pos:start="319:58" pos:end="319:58"><literal type="number" pos:start="319:58" pos:end="319:58">0</literal></expr>]</index></name><operator pos:start="319:60" pos:end="319:60">.</operator><name pos:start="319:61" pos:end="319:75">interleaved_max</name></expr>;</expr_stmt>

            <break pos:start="321:13" pos:end="321:18">break;</break>



        <case pos:start="325:9" pos:end="325:38">case <expr pos:start="325:14" pos:end="325:37"><name pos:start="325:14" pos:end="325:37">RTSP_LOWER_TRANSPORT_UDP</name></expr>:</case>

            <block pos:start="327:13" pos:end="349:13">{<block_content pos:start="329:17" pos:end="347:17">

                <decl_stmt pos:start="329:17" pos:end="329:31"><decl pos:start="329:17" pos:end="329:30"><type pos:start="329:17" pos:end="329:20"><name pos:start="329:17" pos:end="329:20">char</name></type> <name pos:start="329:22" pos:end="329:30"><name pos:start="329:22" pos:end="329:24">url</name><index pos:start="329:25" pos:end="329:30">[<expr pos:start="329:26" pos:end="329:29"><literal type="number" pos:start="329:26" pos:end="329:29">1024</literal></expr>]</index></name></decl>;</decl_stmt>



                <comment type="block" pos:start="333:17" pos:end="333:56">/* XXX: also use address if specified */</comment>

                <expr_stmt pos:start="335:17" pos:end="337:69"><expr pos:start="335:17" pos:end="337:68"><call pos:start="335:17" pos:end="337:68"><name pos:start="335:17" pos:end="335:24">snprintf</name><argument_list pos:start="335:25" pos:end="337:68">(<argument pos:start="335:26" pos:end="335:28"><expr pos:start="335:26" pos:end="335:28"><name pos:start="335:26" pos:end="335:28">url</name></expr></argument>, <argument pos:start="335:31" pos:end="335:41"><expr pos:start="335:31" pos:end="335:41"><sizeof pos:start="335:31" pos:end="335:41">sizeof<argument_list pos:start="335:37" pos:end="335:41">(<argument pos:start="335:38" pos:end="335:40"><expr pos:start="335:38" pos:end="335:40"><name pos:start="335:38" pos:end="335:40">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="335:44" pos:end="335:56"><expr pos:start="335:44" pos:end="335:56"><literal type="string" pos:start="335:44" pos:end="335:56">"rtp://%s:%d"</literal></expr></argument>,

                         <argument pos:start="337:26" pos:end="337:29"><expr pos:start="337:26" pos:end="337:29"><name pos:start="337:26" pos:end="337:29">host</name></expr></argument>, <argument pos:start="337:32" pos:end="337:67"><expr pos:start="337:32" pos:end="337:67"><name pos:start="337:32" pos:end="337:51"><name pos:start="337:32" pos:end="337:36">reply</name><operator pos:start="337:37" pos:end="337:38">-&gt;</operator><name pos:start="337:39" pos:end="337:48">transports</name><index pos:start="337:49" pos:end="337:51">[<expr pos:start="337:50" pos:end="337:50"><literal type="number" pos:start="337:50" pos:end="337:50">0</literal></expr>]</index></name><operator pos:start="337:52" pos:end="337:52">.</operator><name pos:start="337:53" pos:end="337:67">server_port_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="339:17" pos:end="347:17"><if pos:start="339:17" pos:end="347:17">if <condition pos:start="339:20" pos:end="341:69">(<expr pos:start="339:21" pos:end="341:68"><operator pos:start="339:21" pos:end="339:21">!</operator><operator pos:start="339:22" pos:end="339:22">(</operator><name pos:start="339:23" pos:end="339:37"><name pos:start="339:23" pos:end="339:24">rt</name><operator pos:start="339:25" pos:end="339:26">-&gt;</operator><name pos:start="339:27" pos:end="339:37">server_type</name></name> <operator pos:start="339:39" pos:end="339:40">==</operator> <name pos:start="339:42" pos:end="339:56">RTSP_SERVER_WMS</name> <operator pos:start="339:58" pos:end="339:59">&amp;&amp;</operator> <name pos:start="339:61" pos:end="339:61">i</name> <operator pos:start="339:63" pos:end="339:63">&gt;</operator> <literal type="number" pos:start="339:65" pos:end="339:65">1</literal><operator pos:start="339:66" pos:end="339:66">)</operator> <operator pos:start="339:68" pos:end="339:69">&amp;&amp;</operator>

                    <call pos:start="341:21" pos:end="341:64"><name pos:start="341:21" pos:end="341:38">rtp_set_remote_url</name><argument_list pos:start="341:39" pos:end="341:64">(<argument pos:start="341:40" pos:end="341:58"><expr pos:start="341:40" pos:end="341:58"><name pos:start="341:40" pos:end="341:58"><name pos:start="341:40" pos:end="341:46">rtsp_st</name><operator pos:start="341:47" pos:end="341:48">-&gt;</operator><name pos:start="341:49" pos:end="341:58">rtp_handle</name></name></expr></argument>, <argument pos:start="341:61" pos:end="341:63"><expr pos:start="341:61" pos:end="341:63"><name pos:start="341:61" pos:end="341:63">url</name></expr></argument>)</argument_list></call> <operator pos:start="341:66" pos:end="341:66">&lt;</operator> <literal type="number" pos:start="341:68" pos:end="341:68">0</literal></expr>)</condition> <block pos:start="341:71" pos:end="347:17">{<block_content pos:start="343:21" pos:end="345:30">

                    <expr_stmt pos:start="343:21" pos:end="343:46"><expr pos:start="343:21" pos:end="343:45"><name pos:start="343:21" pos:end="343:23">err</name> <operator pos:start="343:25" pos:end="343:25">=</operator> <name pos:start="343:27" pos:end="343:45">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                    <goto pos:start="345:21" pos:end="345:30">goto <name pos:start="345:26" pos:end="345:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="351:13" pos:end="351:18">break;</break>

        <case pos:start="353:9" pos:end="353:48">case <expr pos:start="353:14" pos:end="353:47"><name pos:start="353:14" pos:end="353:47">RTSP_LOWER_TRANSPORT_UDP_MULTICAST</name></expr>:</case>

            <block pos:start="355:13" pos:end="395:13">{<block_content pos:start="357:17" pos:end="393:17">

                <decl_stmt pos:start="357:17" pos:end="357:31"><decl pos:start="357:17" pos:end="357:30"><type pos:start="357:17" pos:end="357:20"><name pos:start="357:17" pos:end="357:20">char</name></type> <name pos:start="357:22" pos:end="357:30"><name pos:start="357:22" pos:end="357:24">url</name><index pos:start="357:25" pos:end="357:30">[<expr pos:start="357:26" pos:end="357:29"><literal type="number" pos:start="357:26" pos:end="357:29">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="359:17" pos:end="359:34"><decl pos:start="359:17" pos:end="359:33"><type pos:start="359:17" pos:end="359:30"><name pos:start="359:17" pos:end="359:30"><name pos:start="359:17" pos:end="359:22">struct</name> <name pos:start="359:24" pos:end="359:30">in_addr</name></name></type> <name pos:start="359:32" pos:end="359:33">in</name></decl>;</decl_stmt>

                <decl_stmt pos:start="361:17" pos:end="361:30"><decl pos:start="361:17" pos:end="361:24"><type pos:start="361:17" pos:end="361:19"><name pos:start="361:17" pos:end="361:19">int</name></type> <name pos:start="361:21" pos:end="361:24">port</name></decl>, <decl pos:start="361:27" pos:end="361:29"><type ref="prev" pos:start="361:17" pos:end="361:19"/><name pos:start="361:27" pos:end="361:29">ttl</name></decl>;</decl_stmt>



                <if_stmt pos:start="365:17" pos:end="381:17"><if pos:start="365:17" pos:end="373:17">if <condition pos:start="365:20" pos:end="365:53">(<expr pos:start="365:21" pos:end="365:52"><name pos:start="365:21" pos:end="365:40"><name pos:start="365:21" pos:end="365:25">reply</name><operator pos:start="365:26" pos:end="365:27">-&gt;</operator><name pos:start="365:28" pos:end="365:37">transports</name><index pos:start="365:38" pos:end="365:40">[<expr pos:start="365:39" pos:end="365:39"><literal type="number" pos:start="365:39" pos:end="365:39">0</literal></expr>]</index></name><operator pos:start="365:41" pos:end="365:41">.</operator><name pos:start="365:42" pos:end="365:52">destination</name></expr>)</condition> <block pos:start="365:55" pos:end="373:17">{<block_content pos:start="367:21" pos:end="371:57">

                    <expr_stmt pos:start="367:21" pos:end="367:72"><expr pos:start="367:21" pos:end="367:71"><name pos:start="367:21" pos:end="367:29"><name pos:start="367:21" pos:end="367:22">in</name><operator pos:start="367:23" pos:end="367:23">.</operator><name pos:start="367:24" pos:end="367:29">s_addr</name></name> <operator pos:start="367:31" pos:end="367:31">=</operator> <call pos:start="367:33" pos:end="367:71"><name pos:start="367:33" pos:end="367:37">htonl</name><argument_list pos:start="367:38" pos:end="367:71">(<argument pos:start="367:39" pos:end="367:70"><expr pos:start="367:39" pos:end="367:70"><name pos:start="367:39" pos:end="367:58"><name pos:start="367:39" pos:end="367:43">reply</name><operator pos:start="367:44" pos:end="367:45">-&gt;</operator><name pos:start="367:46" pos:end="367:55">transports</name><index pos:start="367:56" pos:end="367:58">[<expr pos:start="367:57" pos:end="367:57"><literal type="number" pos:start="367:57" pos:end="367:57">0</literal></expr>]</index></name><operator pos:start="367:59" pos:end="367:59">.</operator><name pos:start="367:60" pos:end="367:70">destination</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="369:21" pos:end="369:62"><expr pos:start="369:21" pos:end="369:61"><name pos:start="369:21" pos:end="369:24">port</name>      <operator pos:start="369:31" pos:end="369:31">=</operator> <name pos:start="369:33" pos:end="369:52"><name pos:start="369:33" pos:end="369:37">reply</name><operator pos:start="369:38" pos:end="369:39">-&gt;</operator><name pos:start="369:40" pos:end="369:49">transports</name><index pos:start="369:50" pos:end="369:52">[<expr pos:start="369:51" pos:end="369:51"><literal type="number" pos:start="369:51" pos:end="369:51">0</literal></expr>]</index></name><operator pos:start="369:53" pos:end="369:53">.</operator><name pos:start="369:54" pos:end="369:61">port_min</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="371:21" pos:end="371:57"><expr pos:start="371:21" pos:end="371:56"><name pos:start="371:21" pos:end="371:23">ttl</name>       <operator pos:start="371:31" pos:end="371:31">=</operator> <name pos:start="371:33" pos:end="371:52"><name pos:start="371:33" pos:end="371:37">reply</name><operator pos:start="371:38" pos:end="371:39">-&gt;</operator><name pos:start="371:40" pos:end="371:49">transports</name><index pos:start="371:50" pos:end="371:52">[<expr pos:start="371:51" pos:end="371:51"><literal type="number" pos:start="371:51" pos:end="371:51">0</literal></expr>]</index></name><operator pos:start="371:53" pos:end="371:53">.</operator><name pos:start="371:54" pos:end="371:56">ttl</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="373:19" pos:end="381:17">else <block pos:start="373:24" pos:end="381:17">{<block_content pos:start="375:21" pos:end="379:49">

                    <expr_stmt pos:start="375:21" pos:end="375:48"><expr pos:start="375:21" pos:end="375:47"><name pos:start="375:21" pos:end="375:22">in</name>        <operator pos:start="375:31" pos:end="375:31">=</operator> <name pos:start="375:33" pos:end="375:47"><name pos:start="375:33" pos:end="375:39">rtsp_st</name><operator pos:start="375:40" pos:end="375:41">-&gt;</operator><name pos:start="375:42" pos:end="375:47">sdp_ip</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="377:21" pos:end="377:50"><expr pos:start="377:21" pos:end="377:49"><name pos:start="377:21" pos:end="377:24">port</name>      <operator pos:start="377:31" pos:end="377:31">=</operator> <name pos:start="377:33" pos:end="377:49"><name pos:start="377:33" pos:end="377:39">rtsp_st</name><operator pos:start="377:40" pos:end="377:41">-&gt;</operator><name pos:start="377:42" pos:end="377:49">sdp_port</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="379:21" pos:end="379:49"><expr pos:start="379:21" pos:end="379:48"><name pos:start="379:21" pos:end="379:23">ttl</name>       <operator pos:start="379:31" pos:end="379:31">=</operator> <name pos:start="379:33" pos:end="379:48"><name pos:start="379:33" pos:end="379:39">rtsp_st</name><operator pos:start="379:40" pos:end="379:41">-&gt;</operator><name pos:start="379:42" pos:end="379:48">sdp_ttl</name></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="383:17" pos:end="385:51"><expr pos:start="383:17" pos:end="385:50"><call pos:start="383:17" pos:end="385:50"><name pos:start="383:17" pos:end="383:24">snprintf</name><argument_list pos:start="383:25" pos:end="385:50">(<argument pos:start="383:26" pos:end="383:28"><expr pos:start="383:26" pos:end="383:28"><name pos:start="383:26" pos:end="383:28">url</name></expr></argument>, <argument pos:start="383:31" pos:end="383:41"><expr pos:start="383:31" pos:end="383:41"><sizeof pos:start="383:31" pos:end="383:41">sizeof<argument_list pos:start="383:37" pos:end="383:41">(<argument pos:start="383:38" pos:end="383:40"><expr pos:start="383:38" pos:end="383:40"><name pos:start="383:38" pos:end="383:40">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="383:44" pos:end="383:63"><expr pos:start="383:44" pos:end="383:63"><literal type="string" pos:start="383:44" pos:end="383:63">"rtp://%s:%d?ttl=%d"</literal></expr></argument>,

                         <argument pos:start="385:26" pos:end="385:38"><expr pos:start="385:26" pos:end="385:38"><call pos:start="385:26" pos:end="385:38"><name pos:start="385:26" pos:end="385:34">inet_ntoa</name><argument_list pos:start="385:35" pos:end="385:38">(<argument pos:start="385:36" pos:end="385:37"><expr pos:start="385:36" pos:end="385:37"><name pos:start="385:36" pos:end="385:37">in</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="385:41" pos:end="385:44"><expr pos:start="385:41" pos:end="385:44"><name pos:start="385:41" pos:end="385:44">port</name></expr></argument>, <argument pos:start="385:47" pos:end="385:49"><expr pos:start="385:47" pos:end="385:49"><name pos:start="385:47" pos:end="385:49">ttl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="387:17" pos:end="393:17"><if pos:start="387:17" pos:end="393:17">if <condition pos:start="387:20" pos:end="387:70">(<expr pos:start="387:21" pos:end="387:69"><call pos:start="387:21" pos:end="387:65"><name pos:start="387:21" pos:end="387:28">url_open</name><argument_list pos:start="387:29" pos:end="387:65">(<argument pos:start="387:30" pos:end="387:49"><expr pos:start="387:30" pos:end="387:49"><operator pos:start="387:30" pos:end="387:30">&amp;</operator><name pos:start="387:31" pos:end="387:49"><name pos:start="387:31" pos:end="387:37">rtsp_st</name><operator pos:start="387:38" pos:end="387:39">-&gt;</operator><name pos:start="387:40" pos:end="387:49">rtp_handle</name></name></expr></argument>, <argument pos:start="387:52" pos:end="387:54"><expr pos:start="387:52" pos:end="387:54"><name pos:start="387:52" pos:end="387:54">url</name></expr></argument>, <argument pos:start="387:57" pos:end="387:64"><expr pos:start="387:57" pos:end="387:64"><name pos:start="387:57" pos:end="387:64">URL_RDWR</name></expr></argument>)</argument_list></call> <operator pos:start="387:67" pos:end="387:67">&lt;</operator> <literal type="number" pos:start="387:69" pos:end="387:69">0</literal></expr>)</condition> <block pos:start="387:72" pos:end="393:17">{<block_content pos:start="389:21" pos:end="391:30">

                    <expr_stmt pos:start="389:21" pos:end="389:46"><expr pos:start="389:21" pos:end="389:45"><name pos:start="389:21" pos:end="389:23">err</name> <operator pos:start="389:25" pos:end="389:25">=</operator> <name pos:start="389:27" pos:end="389:45">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                    <goto pos:start="391:21" pos:end="391:30">goto <name pos:start="391:26" pos:end="391:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="397:13" pos:end="397:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="403:9" pos:end="405:22"><if pos:start="403:9" pos:end="405:22">if <condition pos:start="403:12" pos:end="403:56">(<expr pos:start="403:13" pos:end="403:55"><operator pos:start="403:13" pos:end="403:13">(</operator><name pos:start="403:14" pos:end="403:16">err</name> <operator pos:start="403:18" pos:end="403:18">=</operator> <call pos:start="403:20" pos:end="403:54"><name pos:start="403:20" pos:end="403:42">rtsp_open_transport_ctx</name><argument_list pos:start="403:43" pos:end="403:54">(<argument pos:start="403:44" pos:end="403:44"><expr pos:start="403:44" pos:end="403:44"><name pos:start="403:44" pos:end="403:44">s</name></expr></argument>, <argument pos:start="403:47" pos:end="403:53"><expr pos:start="403:47" pos:end="403:53"><name pos:start="403:47" pos:end="403:53">rtsp_st</name></expr></argument>)</argument_list></call><operator pos:start="403:55" pos:end="403:55">)</operator></expr>)</condition><block type="pseudo" pos:start="405:13" pos:end="405:22"><block_content pos:start="405:13" pos:end="405:22">

            <goto pos:start="405:13" pos:end="405:22">goto <name pos:start="405:18" pos:end="405:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="411:5" pos:end="413:37"><if pos:start="411:5" pos:end="413:37">if <condition pos:start="411:8" pos:end="411:27">(<expr pos:start="411:9" pos:end="411:26"><name pos:start="411:9" pos:end="411:22"><name pos:start="411:9" pos:end="411:13">reply</name><operator pos:start="411:14" pos:end="411:15">-&gt;</operator><name pos:start="411:16" pos:end="411:22">timeout</name></name> <operator pos:start="411:24" pos:end="411:24">&gt;</operator> <literal type="number" pos:start="411:26" pos:end="411:26">0</literal></expr>)</condition><block type="pseudo" pos:start="413:9" pos:end="413:37"><block_content pos:start="413:9" pos:end="413:37">

        <expr_stmt pos:start="413:9" pos:end="413:37"><expr pos:start="413:9" pos:end="413:36"><name pos:start="413:9" pos:end="413:19"><name pos:start="413:9" pos:end="413:10">rt</name><operator pos:start="413:11" pos:end="413:12">-&gt;</operator><name pos:start="413:13" pos:end="413:19">timeout</name></name> <operator pos:start="413:21" pos:end="413:21">=</operator> <name pos:start="413:23" pos:end="413:36"><name pos:start="413:23" pos:end="413:27">reply</name><operator pos:start="413:28" pos:end="413:29">-&gt;</operator><name pos:start="413:30" pos:end="413:36">timeout</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="417:5" pos:end="419:34"><if pos:start="417:5" pos:end="419:34">if <condition pos:start="417:8" pos:end="417:44">(<expr pos:start="417:9" pos:end="417:43"><name pos:start="417:9" pos:end="417:23"><name pos:start="417:9" pos:end="417:10">rt</name><operator pos:start="417:11" pos:end="417:12">-&gt;</operator><name pos:start="417:13" pos:end="417:23">server_type</name></name> <operator pos:start="417:25" pos:end="417:26">==</operator> <name pos:start="417:28" pos:end="417:43">RTSP_SERVER_REAL</name></expr>)</condition><block type="pseudo" pos:start="419:9" pos:end="419:34"><block_content pos:start="419:9" pos:end="419:34">

        <expr_stmt pos:start="419:9" pos:end="419:34"><expr pos:start="419:9" pos:end="419:33"><name pos:start="419:9" pos:end="419:29"><name pos:start="419:9" pos:end="419:10">rt</name><operator pos:start="419:11" pos:end="419:12">-&gt;</operator><name pos:start="419:13" pos:end="419:29">need_subscription</name></name> <operator pos:start="419:31" pos:end="419:31">=</operator> <literal type="number" pos:start="419:33" pos:end="419:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="423:5" pos:end="423:13">return <expr pos:start="423:12" pos:end="423:12"><literal type="number" pos:start="423:12" pos:end="423:12">0</literal></expr>;</return>



<label pos:start="427:1" pos:end="427:5"><name pos:start="427:1" pos:end="427:4">fail</name>:</label>

    <for pos:start="429:5" pos:end="439:5">for <control pos:start="429:9" pos:end="429:41">(<init pos:start="429:10" pos:end="429:13"><expr pos:start="429:10" pos:end="429:12"><name pos:start="429:10" pos:end="429:10">i</name><operator pos:start="429:11" pos:end="429:11">=</operator><literal type="number" pos:start="429:12" pos:end="429:12">0</literal></expr>;</init> <condition pos:start="429:15" pos:end="429:36"><expr pos:start="429:15" pos:end="429:35"><name pos:start="429:15" pos:end="429:15">i</name><operator pos:start="429:16" pos:end="429:16">&lt;</operator><name pos:start="429:17" pos:end="429:35"><name pos:start="429:17" pos:end="429:18">rt</name><operator pos:start="429:19" pos:end="429:20">-&gt;</operator><name pos:start="429:21" pos:end="429:35">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="429:38" pos:end="429:40"><expr pos:start="429:38" pos:end="429:40"><name pos:start="429:38" pos:end="429:38">i</name><operator pos:start="429:39" pos:end="429:40">++</operator></expr></incr>)</control> <block pos:start="429:43" pos:end="439:5">{<block_content pos:start="431:9" pos:end="437:9">

        <if_stmt pos:start="431:9" pos:end="437:9"><if pos:start="431:9" pos:end="437:9">if <condition pos:start="431:12" pos:end="431:44">(<expr pos:start="431:13" pos:end="431:43"><name pos:start="431:13" pos:end="431:31"><name pos:start="431:13" pos:end="431:14">rt</name><operator pos:start="431:15" pos:end="431:16">-&gt;</operator><name pos:start="431:17" pos:end="431:28">rtsp_streams</name><index pos:start="431:29" pos:end="431:31">[<expr pos:start="431:30" pos:end="431:30"><name pos:start="431:30" pos:end="431:30">i</name></expr>]</index></name><operator pos:start="431:32" pos:end="431:33">-&gt;</operator><name pos:start="431:34" pos:end="431:43">rtp_handle</name></expr>)</condition> <block pos:start="431:46" pos:end="437:9">{<block_content pos:start="433:13" pos:end="435:51">

            <expr_stmt pos:start="433:13" pos:end="433:55"><expr pos:start="433:13" pos:end="433:54"><call pos:start="433:13" pos:end="433:54"><name pos:start="433:13" pos:end="433:21">url_close</name><argument_list pos:start="433:22" pos:end="433:54">(<argument pos:start="433:23" pos:end="433:53"><expr pos:start="433:23" pos:end="433:53"><name pos:start="433:23" pos:end="433:41"><name pos:start="433:23" pos:end="433:24">rt</name><operator pos:start="433:25" pos:end="433:26">-&gt;</operator><name pos:start="433:27" pos:end="433:38">rtsp_streams</name><index pos:start="433:39" pos:end="433:41">[<expr pos:start="433:40" pos:end="433:40"><name pos:start="433:40" pos:end="433:40">i</name></expr>]</index></name><operator pos:start="433:42" pos:end="433:43">-&gt;</operator><name pos:start="433:44" pos:end="433:53">rtp_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:51"><expr pos:start="435:13" pos:end="435:50"><name pos:start="435:13" pos:end="435:31"><name pos:start="435:13" pos:end="435:14">rt</name><operator pos:start="435:15" pos:end="435:16">-&gt;</operator><name pos:start="435:17" pos:end="435:28">rtsp_streams</name><index pos:start="435:29" pos:end="435:31">[<expr pos:start="435:30" pos:end="435:30"><name pos:start="435:30" pos:end="435:30">i</name></expr>]</index></name><operator pos:start="435:32" pos:end="435:33">-&gt;</operator><name pos:start="435:34" pos:end="435:43">rtp_handle</name> <operator pos:start="435:45" pos:end="435:45">=</operator> <name pos:start="435:47" pos:end="435:50">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="441:5" pos:end="441:15">return <expr pos:start="441:12" pos:end="441:14"><name pos:start="441:12" pos:end="441:14">err</name></expr>;</return>

</block_content>}</block>
</unit>
