<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1655.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:33">hyscale</name>)<parameter_list pos:start="1:35" pos:end="9:62">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:45">SwsContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">c</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">uint16_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">dst</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:78"><decl pos:start="1:66" pos:end="1:78"><type pos:start="1:66" pos:end="1:78"><name pos:start="1:66" pos:end="1:69">long</name></type> <name pos:start="1:71" pos:end="1:78">dstWidth</name></decl></parameter>, <parameter pos:start="1:81" pos:end="1:98"><decl pos:start="1:81" pos:end="1:98"><type pos:start="1:81" pos:end="1:98"><specifier pos:start="1:81" pos:end="1:85">const</specifier> <name pos:start="1:87" pos:end="1:93">uint8_t</name> <modifier pos:start="1:95" pos:end="1:95">*</modifier></type><name pos:start="1:96" pos:end="1:98">src</name></decl></parameter>, <parameter pos:start="1:101" pos:end="1:108"><decl pos:start="1:101" pos:end="1:108"><type pos:start="1:101" pos:end="1:108"><name pos:start="1:101" pos:end="1:103">int</name></type> <name pos:start="1:105" pos:end="1:108">srcW</name></decl></parameter>, <parameter pos:start="1:111" pos:end="1:118"><decl pos:start="1:111" pos:end="1:118"><type pos:start="1:111" pos:end="1:118"><name pos:start="1:111" pos:end="1:113">int</name></type> <name pos:start="1:115" pos:end="1:118">xInc</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:60"><decl pos:start="3:36" pos:end="3:60"><type pos:start="3:36" pos:end="3:60"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:48">int16_t</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:60">hLumFilter</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:63"><decl pos:start="5:36" pos:end="5:63"><type pos:start="5:36" pos:end="5:63"><specifier pos:start="5:36" pos:end="5:40">const</specifier> <name pos:start="5:42" pos:end="5:48">int16_t</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:63">hLumFilterPos</name></decl></parameter>, <parameter pos:start="5:66" pos:end="5:83"><decl pos:start="5:66" pos:end="5:83"><type pos:start="5:66" pos:end="5:83"><name pos:start="5:66" pos:end="5:68">int</name></type> <name pos:start="5:70" pos:end="5:83">hLumFilterSize</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:60"><decl pos:start="7:36" pos:end="7:60"><type pos:start="7:36" pos:end="7:60"><name pos:start="7:36" pos:end="7:42">uint8_t</name> <modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:60">formatConvBuffer</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:48"><decl pos:start="9:36" pos:end="9:48"><type pos:start="9:36" pos:end="9:48"><name pos:start="9:36" pos:end="9:43">uint32_t</name> <modifier pos:start="9:45" pos:end="9:45">*</modifier></type><name pos:start="9:46" pos:end="9:48">pal</name></decl></parameter>, <parameter pos:start="9:51" pos:end="9:61"><decl pos:start="9:51" pos:end="9:61"><type pos:start="9:51" pos:end="9:61"><name pos:start="9:51" pos:end="9:53">int</name></type> <name pos:start="9:55" pos:end="9:61">isAlpha</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="53:1">{<block_content pos:start="13:5" pos:end="51:36">

    <function_decl pos:start="13:5" pos:end="13:105"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">void</name></type> (<modifier pos:start="13:11" pos:end="13:11">*</modifier><name pos:start="13:12" pos:end="13:17">toYV12</name>)<parameter_list pos:start="13:19" pos:end="13:64">(<parameter pos:start="13:20" pos:end="13:28"><decl pos:start="13:20" pos:end="13:28"><type pos:start="13:20" pos:end="13:28"><name pos:start="13:20" pos:end="13:26">uint8_t</name> <modifier pos:start="13:28" pos:end="13:28">*</modifier></type></decl></parameter>, <parameter pos:start="13:31" pos:end="13:45"><decl pos:start="13:31" pos:end="13:45"><type pos:start="13:31" pos:end="13:45"><specifier pos:start="13:31" pos:end="13:35">const</specifier> <name pos:start="13:37" pos:end="13:43">uint8_t</name> <modifier pos:start="13:45" pos:end="13:45">*</modifier></type></decl></parameter>, <parameter pos:start="13:48" pos:end="13:51"><decl pos:start="13:48" pos:end="13:51"><type pos:start="13:48" pos:end="13:51"><name pos:start="13:48" pos:end="13:51">long</name></type></decl></parameter>, <parameter pos:start="13:54" pos:end="13:63"><decl pos:start="13:54" pos:end="13:63"><type pos:start="13:54" pos:end="13:63"><name pos:start="13:54" pos:end="13:61">uint32_t</name> <modifier pos:start="13:63" pos:end="13:63">*</modifier></type></decl></parameter>)</parameter_list> <init pos:start="13:66" pos:end="13:104">= <expr pos:start="13:68" pos:end="13:89"><ternary pos:start="13:68" pos:end="13:89"><condition pos:start="13:68" pos:end="13:76"><expr pos:start="13:68" pos:end="13:74"><name pos:start="13:68" pos:end="13:74">isAlpha</name></expr> ?</condition><then pos:start="13:78" pos:end="13:89"> <expr pos:start="13:78" pos:end="13:89"><name pos:start="13:78" pos:end="13:89"><name pos:start="13:78" pos:end="13:78">c</name><operator pos:start="13:79" pos:end="13:80">-&gt;</operator><name pos:start="13:81" pos:end="13:89">alpToYV12</name></name></expr></then></ternary></expr> <operator pos:start="13:91" pos:end="13:91">:</operator> <expr pos:start="13:93" pos:end="13:104"><name pos:start="13:93" pos:end="13:104"><name pos:start="13:93" pos:end="13:93">c</name><operator pos:start="13:94" pos:end="13:95">-&gt;</operator><name pos:start="13:96" pos:end="13:104">lumToYV12</name></name></expr></init>;</function_decl>

    <function_decl pos:start="15:5" pos:end="15:79"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">void</name></type> (<modifier pos:start="15:11" pos:end="15:11">*</modifier><name pos:start="15:12" pos:end="15:23">convertRange</name>)<parameter_list pos:start="15:25" pos:end="15:40">(<parameter pos:start="15:26" pos:end="15:34"><decl pos:start="15:26" pos:end="15:34"><type pos:start="15:26" pos:end="15:34"><name pos:start="15:26" pos:end="15:32">int16_t</name> <modifier pos:start="15:34" pos:end="15:34">*</modifier></type></decl></parameter>, <parameter pos:start="15:37" pos:end="15:39"><decl pos:start="15:37" pos:end="15:39"><type pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:39">int</name></type></decl></parameter>)</parameter_list> <init pos:start="15:42" pos:end="15:78">= <expr pos:start="15:44" pos:end="15:57"><ternary pos:start="15:44" pos:end="15:57"><condition pos:start="15:44" pos:end="15:52"><expr pos:start="15:44" pos:end="15:50"><name pos:start="15:44" pos:end="15:50">isAlpha</name></expr> ?</condition><then pos:start="15:54" pos:end="15:57"> <expr pos:start="15:54" pos:end="15:57"><name pos:start="15:54" pos:end="15:57">NULL</name></expr></then></ternary></expr> <operator pos:start="15:59" pos:end="15:59">:</operator> <expr pos:start="15:61" pos:end="15:78"><name pos:start="15:61" pos:end="15:78"><name pos:start="15:61" pos:end="15:61">c</name><operator pos:start="15:62" pos:end="15:63">-&gt;</operator><name pos:start="15:64" pos:end="15:78">lumConvertRange</name></name></expr></init>;</function_decl>



    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:7">src</name> <operator pos:start="19:9" pos:end="19:10">+=</operator> <ternary pos:start="19:12" pos:end="19:54"><condition pos:start="19:12" pos:end="19:20"><expr pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:18">isAlpha</name></expr> ?</condition><then pos:start="19:22" pos:end="19:36"> <expr pos:start="19:22" pos:end="19:36"><name pos:start="19:22" pos:end="19:36"><name pos:start="19:22" pos:end="19:22">c</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:36">alpSrcOffset</name></name></expr> </then><else pos:start="19:38" pos:end="19:54">: <expr pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:40">c</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:54">lumSrcOffset</name></name></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:14">toYV12</name></expr>)</condition> <block pos:start="23:17" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:30">

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><call pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:14">toYV12</name><argument_list pos:start="25:15" pos:end="25:48">(<argument pos:start="25:16" pos:end="25:31"><expr pos:start="25:16" pos:end="25:31"><name pos:start="25:16" pos:end="25:31">formatConvBuffer</name></expr></argument>, <argument pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:36">src</name></expr></argument>, <argument pos:start="25:39" pos:end="25:42"><expr pos:start="25:39" pos:end="25:42"><name pos:start="25:39" pos:end="25:42">srcW</name></expr></argument>, <argument pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><name pos:start="25:45" pos:end="25:47">pal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">src</name><operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:29">formatConvBuffer</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="45:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:9">c</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:19">hScale16</name></name></expr>)</condition> <block pos:start="33:22" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:165">

        <expr_stmt pos:start="35:9" pos:end="35:165"><expr pos:start="35:9" pos:end="35:164"><call pos:start="35:9" pos:end="35:164"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:9">c</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:19">hScale16</name></name><argument_list pos:start="35:20" pos:end="35:164">(<argument pos:start="35:21" pos:end="35:23"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">dst</name></expr></argument>, <argument pos:start="35:26" pos:end="35:33"><expr pos:start="35:26" pos:end="35:33"><name pos:start="35:26" pos:end="35:33">dstWidth</name></expr></argument>, <argument pos:start="35:36" pos:end="35:49"><expr pos:start="35:36" pos:end="35:49"><operator pos:start="35:36" pos:end="35:36">(</operator><name pos:start="35:37" pos:end="35:44">uint16_t</name><operator pos:start="35:45" pos:end="35:45">*</operator><operator pos:start="35:46" pos:end="35:46">)</operator><name pos:start="35:47" pos:end="35:49">src</name></expr></argument>, <argument pos:start="35:52" pos:end="35:55"><expr pos:start="35:52" pos:end="35:55"><name pos:start="35:52" pos:end="35:55">srcW</name></expr></argument>, <argument pos:start="35:58" pos:end="35:61"><expr pos:start="35:58" pos:end="35:61"><name pos:start="35:58" pos:end="35:61">xInc</name></expr></argument>, <argument pos:start="35:64" pos:end="35:73"><expr pos:start="35:64" pos:end="35:73"><name pos:start="35:64" pos:end="35:73">hLumFilter</name></expr></argument>, <argument pos:start="35:76" pos:end="35:88"><expr pos:start="35:76" pos:end="35:88"><name pos:start="35:76" pos:end="35:88">hLumFilterPos</name></expr></argument>, <argument pos:start="35:91" pos:end="35:104"><expr pos:start="35:91" pos:end="35:104"><name pos:start="35:91" pos:end="35:104">hLumFilterSize</name></expr></argument>, <argument pos:start="35:107" pos:end="35:163"><expr pos:start="35:107" pos:end="35:163"><name pos:start="35:107" pos:end="35:142"><name pos:start="35:107" pos:end="35:128">av_pix_fmt_descriptors</name><index pos:start="35:129" pos:end="35:142">[<expr pos:start="35:130" pos:end="35:141"><name pos:start="35:130" pos:end="35:141"><name pos:start="35:130" pos:end="35:130">c</name><operator pos:start="35:131" pos:end="35:132">-&gt;</operator><name pos:start="35:133" pos:end="35:141">srcFormat</name></name></expr>]</index></name><operator pos:start="35:143" pos:end="35:143">.</operator><name pos:start="35:144" pos:end="35:150"><name pos:start="35:144" pos:end="35:147">comp</name><index pos:start="35:148" pos:end="35:150">[<expr pos:start="35:149" pos:end="35:149"><literal type="number" pos:start="35:149" pos:end="35:149">0</literal></expr>]</index></name><operator pos:start="35:151" pos:end="35:151">.</operator><name pos:start="35:152" pos:end="35:163">depth_minus1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="41:5">else if <condition pos:start="37:15" pos:end="37:32">(<expr pos:start="37:16" pos:end="37:31"><operator pos:start="37:16" pos:end="37:16">!</operator><name pos:start="37:17" pos:end="37:31"><name pos:start="37:17" pos:end="37:17">c</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:31">hyscale_fast</name></name></expr>)</condition> <block pos:start="37:34" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:93">

        <expr_stmt pos:start="39:9" pos:end="39:93"><expr pos:start="39:9" pos:end="39:92"><call pos:start="39:9" pos:end="39:92"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:9">c</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">hScale</name></name><argument_list pos:start="39:18" pos:end="39:92">(<argument pos:start="39:19" pos:end="39:21"><expr pos:start="39:19" pos:end="39:21"><name pos:start="39:19" pos:end="39:21">dst</name></expr></argument>, <argument pos:start="39:24" pos:end="39:31"><expr pos:start="39:24" pos:end="39:31"><name pos:start="39:24" pos:end="39:31">dstWidth</name></expr></argument>, <argument pos:start="39:34" pos:end="39:36"><expr pos:start="39:34" pos:end="39:36"><name pos:start="39:34" pos:end="39:36">src</name></expr></argument>, <argument pos:start="39:39" pos:end="39:42"><expr pos:start="39:39" pos:end="39:42"><name pos:start="39:39" pos:end="39:42">srcW</name></expr></argument>, <argument pos:start="39:45" pos:end="39:48"><expr pos:start="39:45" pos:end="39:48"><name pos:start="39:45" pos:end="39:48">xInc</name></expr></argument>, <argument pos:start="39:51" pos:end="39:60"><expr pos:start="39:51" pos:end="39:60"><name pos:start="39:51" pos:end="39:60">hLumFilter</name></expr></argument>, <argument pos:start="39:63" pos:end="39:75"><expr pos:start="39:63" pos:end="39:75"><name pos:start="39:63" pos:end="39:75">hLumFilterPos</name></expr></argument>, <argument pos:start="39:78" pos:end="39:91"><expr pos:start="39:78" pos:end="39:91"><name pos:start="39:78" pos:end="39:91">hLumFilterSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:59"> <comment type="line" pos:start="41:14" pos:end="41:54">// fast bilinear upscale / crap downscale</comment>

        <expr_stmt pos:start="43:9" pos:end="43:59"><expr pos:start="43:9" pos:end="43:58"><call pos:start="43:9" pos:end="43:58"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:9">c</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:23">hyscale_fast</name></name><argument_list pos:start="43:24" pos:end="43:58">(<argument pos:start="43:25" pos:end="43:25"><expr pos:start="43:25" pos:end="43:25"><name pos:start="43:25" pos:end="43:25">c</name></expr></argument>, <argument pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:30">dst</name></expr></argument>, <argument pos:start="43:33" pos:end="43:40"><expr pos:start="43:33" pos:end="43:40"><name pos:start="43:33" pos:end="43:40">dstWidth</name></expr></argument>, <argument pos:start="43:43" pos:end="43:45"><expr pos:start="43:43" pos:end="43:45"><name pos:start="43:43" pos:end="43:45">src</name></expr></argument>, <argument pos:start="43:48" pos:end="43:51"><expr pos:start="43:48" pos:end="43:51"><name pos:start="43:48" pos:end="43:51">srcW</name></expr></argument>, <argument pos:start="43:54" pos:end="43:57"><expr pos:start="43:54" pos:end="43:57"><name pos:start="43:54" pos:end="43:57">xInc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:36"><if pos:start="49:5" pos:end="51:36">if <condition pos:start="49:8" pos:end="49:21">(<expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:20">convertRange</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:36"><block_content pos:start="51:9" pos:end="51:36">

        <expr_stmt pos:start="51:9" pos:end="51:36"><expr pos:start="51:9" pos:end="51:35"><call pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:20">convertRange</name><argument_list pos:start="51:21" pos:end="51:35">(<argument pos:start="51:22" pos:end="51:24"><expr pos:start="51:22" pos:end="51:24"><name pos:start="51:22" pos:end="51:24">dst</name></expr></argument>, <argument pos:start="51:27" pos:end="51:34"><expr pos:start="51:27" pos:end="51:34"><name pos:start="51:27" pos:end="51:34">dstWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
