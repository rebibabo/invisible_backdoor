<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13174.c" pos:tabs="8"><function pos:start="1:1" pos:end="331:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:42">dv_decode_video_segment</name><parameter_list pos:start="1:43" pos:end="5:70">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:57">DVVideoContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">s</name></decl></parameter>, 

                                           <parameter pos:start="3:44" pos:end="3:60"><decl pos:start="3:44" pos:end="3:60"><type pos:start="3:44" pos:end="3:60"><name pos:start="3:44" pos:end="3:50">uint8_t</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:60">buf_ptr1</name></decl></parameter>, 

                                           <parameter pos:start="5:44" pos:end="5:69"><decl pos:start="5:44" pos:end="5:69"><type pos:start="5:44" pos:end="5:69"><specifier pos:start="5:44" pos:end="5:48">const</specifier> <name pos:start="5:50" pos:end="5:57">uint16_t</name> <modifier pos:start="5:59" pos:end="5:59">*</modifier></type><name pos:start="5:60" pos:end="5:69">mb_pos_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="331:1">{<block_content pos:start="9:5" pos:end="329:5">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">quant</name></decl>, <decl pos:start="9:16" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:17">dc</name></decl>, <decl pos:start="9:20" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:27">dct_mode</name></decl>, <decl pos:start="9:30" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:35">class1</name></decl>, <decl pos:start="9:38" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:38" pos:end="9:38">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">mb_index</name></decl>, <decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:22">mb_x</name></decl>, <decl pos:start="11:25" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:28">mb_y</name></decl>, <decl pos:start="11:31" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:31" pos:end="11:31">v</name></decl>, <decl pos:start="11:34" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:34" pos:end="11:43">last_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">DCTELEM</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:18">block</name></decl>, <decl pos:start="13:21" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:27">block1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">c_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:18">y_ptr</name></decl>;</decl_stmt>

    <function_decl pos:start="19:5" pos:end="19:67"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">void</name></type> (<modifier pos:start="19:11" pos:end="19:11">*</modifier><name pos:start="19:12" pos:end="19:19">idct_put</name>)<parameter_list pos:start="19:21" pos:end="19:66">(<parameter pos:start="19:22" pos:end="19:34"><decl pos:start="19:22" pos:end="19:34"><type pos:start="19:22" pos:end="19:34"><name pos:start="19:22" pos:end="19:28">uint8_t</name> <modifier pos:start="19:30" pos:end="19:30">*</modifier></type><name pos:start="19:31" pos:end="19:34">dest</name></decl></parameter>, <parameter pos:start="19:37" pos:end="19:49"><decl pos:start="19:37" pos:end="19:49"><type pos:start="19:37" pos:end="19:49"><name pos:start="19:37" pos:end="19:39">int</name></type> <name pos:start="19:41" pos:end="19:49">line_size</name></decl></parameter>, <parameter pos:start="19:52" pos:end="19:65"><decl pos:start="19:52" pos:end="19:65"><type pos:start="19:52" pos:end="19:65"><name pos:start="19:52" pos:end="19:58">DCTELEM</name> <modifier pos:start="19:60" pos:end="19:60">*</modifier></type><name pos:start="19:61" pos:end="19:65">block</name></decl></parameter>)</parameter_list>;</function_decl>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:20">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:17">PutBitContext</name></type> <name pos:start="23:19" pos:end="23:20">pb</name></decl>, <decl pos:start="23:23" pos:end="23:27"><type ref="prev" pos:start="23:5" pos:end="23:17"/><name pos:start="23:23" pos:end="23:27">vs_pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:17">GetBitContext</name></type> <name pos:start="25:19" pos:end="25:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:40"><decl pos:start="27:5" pos:end="27:28"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:13">BlockInfo</name></type> <name pos:start="27:15" pos:end="27:28"><name pos:start="27:15" pos:end="27:21">mb_data</name><index pos:start="27:22" pos:end="27:28">[<expr pos:start="27:23" pos:end="27:27"><literal type="number" pos:start="27:23" pos:end="27:23">5</literal> <operator pos:start="27:25" pos:end="27:25">*</operator> <literal type="number" pos:start="27:27" pos:end="27:27">6</literal></expr>]</index></name></decl>, <decl pos:start="27:31" pos:end="27:33"><type ref="prev" pos:start="27:5" pos:end="27:13"><modifier pos:start="27:31" pos:end="27:31">*</modifier></type><name pos:start="27:32" pos:end="27:33">mb</name></decl>, <decl pos:start="27:36" pos:end="27:39"><type ref="prev" pos:start="27:5" pos:end="27:13"><modifier pos:start="27:36" pos:end="27:36">*</modifier></type><name pos:start="27:37" pos:end="27:39">mb1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:37"><decl pos:start="29:5" pos:end="29:36"><type pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:11">DCTELEM</name> <name pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:18">sblock</name><index pos:start="29:19" pos:end="29:23">[<expr pos:start="29:20" pos:end="29:22"><literal type="number" pos:start="29:20" pos:end="29:20">5</literal><operator pos:start="29:21" pos:end="29:21">*</operator><literal type="number" pos:start="29:22" pos:end="29:22">6</literal></expr>]</index><index pos:start="29:24" pos:end="29:27">[<expr pos:start="29:25" pos:end="29:26"><literal type="number" pos:start="29:25" pos:end="29:26">64</literal></expr>]</index></name></type> <name pos:start="29:29" pos:end="29:36">__align8</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:34"><decl pos:start="31:5" pos:end="31:33"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">uint8_t</name></type> <name pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:25">mb_bit_buffer</name><index pos:start="31:26" pos:end="31:33">[<expr pos:start="31:27" pos:end="31:32"><literal type="number" pos:start="31:27" pos:end="31:28">80</literal> <operator pos:start="31:30" pos:end="31:30">+</operator> <literal type="number" pos:start="31:32" pos:end="31:32">4</literal></expr>]</index></name></decl>;</decl_stmt> <comment type="block" pos:start="31:36" pos:end="31:57">/* allow some slack */</comment>

    <decl_stmt pos:start="33:5" pos:end="33:38"><decl pos:start="33:5" pos:end="33:37"><type pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:11">uint8_t</name></type> <name pos:start="33:13" pos:end="33:37"><name pos:start="33:13" pos:end="33:25">vs_bit_buffer</name><index pos:start="33:26" pos:end="33:37">[<expr pos:start="33:27" pos:end="33:36"><literal type="number" pos:start="33:27" pos:end="33:27">5</literal> <operator pos:start="33:29" pos:end="33:29">*</operator> <literal type="number" pos:start="33:31" pos:end="33:32">80</literal> <operator pos:start="33:34" pos:end="33:34">+</operator> <literal type="number" pos:start="33:36" pos:end="33:36">4</literal></expr>]</index></name></decl>;</decl_stmt> <comment type="block" pos:start="33:40" pos:end="33:61">/* allow some slack */</comment>

	    

    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><call pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:10">memset</name><argument_list pos:start="37:11" pos:end="37:37">(<argument pos:start="37:12" pos:end="37:17"><expr pos:start="37:12" pos:end="37:17"><name pos:start="37:12" pos:end="37:17">sblock</name></expr></argument>, <argument pos:start="37:20" pos:end="37:20"><expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr></argument>, <argument pos:start="37:23" pos:end="37:36"><expr pos:start="37:23" pos:end="37:36"><sizeof pos:start="37:23" pos:end="37:36">sizeof<argument_list pos:start="37:29" pos:end="37:36">(<argument pos:start="37:30" pos:end="37:35"><expr pos:start="37:30" pos:end="37:35"><name pos:start="37:30" pos:end="37:35">sblock</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:56">/* pass 1 : read DC and AC coefficients in blocks */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:11">buf_ptr</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:22">buf_ptr1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:10">block1</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <operator pos:start="45:14" pos:end="45:14">&amp;</operator><name pos:start="45:15" pos:end="45:26"><name pos:start="45:15" pos:end="45:20">sblock</name><index pos:start="45:21" pos:end="45:23">[<expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>]</index><index pos:start="45:24" pos:end="45:26">[<expr pos:start="45:25" pos:end="45:25"><literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:18"><expr pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:7">mb1</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <name pos:start="47:11" pos:end="47:17">mb_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:49"><expr pos:start="49:5" pos:end="49:48"><call pos:start="49:5" pos:end="49:48"><name pos:start="49:5" pos:end="49:17">init_put_bits</name><argument_list pos:start="49:18" pos:end="49:48">(<argument pos:start="49:19" pos:end="49:24"><expr pos:start="49:19" pos:end="49:24"><operator pos:start="49:19" pos:end="49:19">&amp;</operator><name pos:start="49:20" pos:end="49:24">vs_pb</name></expr></argument>, <argument pos:start="49:27" pos:end="49:39"><expr pos:start="49:27" pos:end="49:39"><name pos:start="49:27" pos:end="49:39">vs_bit_buffer</name></expr></argument>, <argument pos:start="49:42" pos:end="49:47"><expr pos:start="49:42" pos:end="49:47"><literal type="number" pos:start="49:42" pos:end="49:42">5</literal> <operator pos:start="49:44" pos:end="49:44">*</operator> <literal type="number" pos:start="49:46" pos:end="49:47">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="51:5" pos:end="182:0">for<control pos:start="51:8" pos:end="51:75">(<init pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:16">mb_index</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</init> <condition pos:start="51:23" pos:end="51:35"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:30">mb_index</name> <operator pos:start="51:32" pos:end="51:32">&lt;</operator> <literal type="number" pos:start="51:34" pos:end="51:34">5</literal></expr>;</condition> <incr pos:start="51:37" pos:end="51:74"><expr pos:start="51:37" pos:end="51:46"><name pos:start="51:37" pos:end="51:44">mb_index</name><operator pos:start="51:45" pos:end="51:46">++</operator></expr><operator pos:start="51:47" pos:end="51:47">,</operator> <expr pos:start="51:49" pos:end="51:56"><name pos:start="51:49" pos:end="51:51">mb1</name> <operator pos:start="51:53" pos:end="51:54">+=</operator> <literal type="number" pos:start="51:56" pos:end="51:56">6</literal></expr><operator pos:start="51:57" pos:end="51:57">,</operator> <expr pos:start="51:59" pos:end="51:74"><name pos:start="51:59" pos:end="51:64">block1</name> <operator pos:start="51:66" pos:end="51:67">+=</operator> <literal type="number" pos:start="51:69" pos:end="51:69">6</literal> <operator pos:start="51:71" pos:end="51:71">*</operator> <literal type="number" pos:start="51:73" pos:end="51:74">64</literal></expr></incr>)</control> <block pos:start="51:77" pos:end="182:0">{<block_content pos:start="55:9" pos:end="173:34">

        <comment type="block" pos:start="53:9" pos:end="53:25">/* skip header */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:34"><expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:13">quant</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:23">buf_ptr</name><index pos:start="55:24" pos:end="55:26">[<expr pos:start="55:25" pos:end="55:25"><literal type="number" pos:start="55:25" pos:end="55:25">3</literal></expr>]</index></name> <operator pos:start="55:28" pos:end="55:28">&amp;</operator> <literal type="number" pos:start="55:30" pos:end="55:33">0x0f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:15">buf_ptr</name> <operator pos:start="57:17" pos:end="57:18">+=</operator> <literal type="number" pos:start="57:20" pos:end="57:20">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><call pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:21">init_put_bits</name><argument_list pos:start="59:22" pos:end="59:45">(<argument pos:start="59:23" pos:end="59:25"><expr pos:start="59:23" pos:end="59:25"><operator pos:start="59:23" pos:end="59:23">&amp;</operator><name pos:start="59:24" pos:end="59:25">pb</name></expr></argument>, <argument pos:start="59:28" pos:end="59:40"><expr pos:start="59:28" pos:end="59:40"><name pos:start="59:28" pos:end="59:40">mb_bit_buffer</name></expr></argument>, <argument pos:start="59:43" pos:end="59:44"><expr pos:start="59:43" pos:end="59:44"><literal type="number" pos:start="59:43" pos:end="59:44">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:17"><expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:10">mb</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <name pos:start="61:14" pos:end="61:16">mb1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:23"><expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:13">block</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:22">block1</name></expr>;</expr_stmt>

        <for pos:start="65:9" pos:end="138:0">for<control pos:start="65:12" pos:end="65:29">(<init pos:start="65:13" pos:end="65:18"><expr pos:start="65:13" pos:end="65:17"><name pos:start="65:13" pos:end="65:13">j</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <literal type="number" pos:start="65:17" pos:end="65:17">0</literal></expr>;</init><condition pos:start="65:19" pos:end="65:24"><expr pos:start="65:19" pos:end="65:23"><name pos:start="65:19" pos:end="65:19">j</name> <operator pos:start="65:21" pos:end="65:21">&lt;</operator> <literal type="number" pos:start="65:23" pos:end="65:23">6</literal></expr>;</condition> <incr pos:start="65:26" pos:end="65:28"><expr pos:start="65:26" pos:end="65:28"><name pos:start="65:26" pos:end="65:26">j</name><operator pos:start="65:27" pos:end="65:28">++</operator></expr></incr>)</control> <block pos:start="65:31" pos:end="138:0">{<block_content pos:start="67:13" pos:end="129:17">

            <expr_stmt pos:start="67:13" pos:end="67:40"><expr pos:start="67:13" pos:end="67:39"><name pos:start="67:13" pos:end="67:22">last_index</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:39"><name pos:start="67:26" pos:end="67:36">block_sizes</name><index pos:start="67:37" pos:end="67:39">[<expr pos:start="67:38" pos:end="67:38"><name pos:start="67:38" pos:end="67:38">j</name></expr>]</index></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="69:13" pos:end="69:52"><expr pos:start="69:13" pos:end="69:51"><call pos:start="69:13" pos:end="69:51"><name pos:start="69:13" pos:end="69:25">init_get_bits</name><argument_list pos:start="69:26" pos:end="69:51">(<argument pos:start="69:27" pos:end="69:29"><expr pos:start="69:27" pos:end="69:29"><operator pos:start="69:27" pos:end="69:27">&amp;</operator><name pos:start="69:28" pos:end="69:29">gb</name></expr></argument>, <argument pos:start="69:32" pos:end="69:38"><expr pos:start="69:32" pos:end="69:38"><name pos:start="69:32" pos:end="69:38">buf_ptr</name></expr></argument>, <argument pos:start="69:41" pos:end="69:50"><expr pos:start="69:41" pos:end="69:50"><name pos:start="69:41" pos:end="69:50">last_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            

            <comment type="block" pos:start="73:13" pos:end="73:28">/* get the dc */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:35"><expr pos:start="75:13" pos:end="75:34"><name pos:start="75:13" pos:end="75:14">dc</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <call pos:start="75:18" pos:end="75:34"><name pos:start="75:18" pos:end="75:26">get_sbits</name><argument_list pos:start="75:27" pos:end="75:34">(<argument pos:start="75:28" pos:end="75:30"><expr pos:start="75:28" pos:end="75:30"><operator pos:start="75:28" pos:end="75:28">&amp;</operator><name pos:start="75:29" pos:end="75:30">gb</name></expr></argument>, <argument pos:start="75:33" pos:end="75:33"><expr pos:start="75:33" pos:end="75:33"><literal type="number" pos:start="75:33" pos:end="75:33">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:38"><expr pos:start="77:13" pos:end="77:37"><name pos:start="77:13" pos:end="77:20">dct_mode</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <call pos:start="77:24" pos:end="77:37"><name pos:start="77:24" pos:end="77:32">get_bits1</name><argument_list pos:start="77:33" pos:end="77:37">(<argument pos:start="77:34" pos:end="77:36"><expr pos:start="77:34" pos:end="77:36"><operator pos:start="77:34" pos:end="77:34">&amp;</operator><name pos:start="77:35" pos:end="77:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:36"><expr pos:start="79:13" pos:end="79:35"><name pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:14">mb</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:24">dct_mode</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:35">dct_mode</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:52"><expr pos:start="81:13" pos:end="81:51"><name pos:start="81:13" pos:end="81:26"><name pos:start="81:13" pos:end="81:14">mb</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:26">scan_table</name></name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:51"><name pos:start="81:30" pos:end="81:30">s</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:41">dv_zigzag</name><index pos:start="81:42" pos:end="81:51">[<expr pos:start="81:43" pos:end="81:50"><name pos:start="81:43" pos:end="81:50">dct_mode</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:38"><expr pos:start="83:13" pos:end="83:37"><name pos:start="83:13" pos:end="83:18">class1</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <call pos:start="83:22" pos:end="83:37"><name pos:start="83:22" pos:end="83:29">get_bits</name><argument_list pos:start="83:30" pos:end="83:37">(<argument pos:start="83:31" pos:end="83:33"><expr pos:start="83:31" pos:end="83:33"><operator pos:start="83:31" pos:end="83:31">&amp;</operator><name pos:start="83:32" pos:end="83:33">gb</name></expr></argument>, <argument pos:start="83:36" pos:end="83:36"><expr pos:start="83:36" pos:end="83:36"><literal type="number" pos:start="83:36" pos:end="83:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="87:50"><expr pos:start="85:13" pos:end="87:49"><name pos:start="85:13" pos:end="85:27"><name pos:start="85:13" pos:end="85:14">mb</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:27">shift_table</name></name> <operator pos:start="85:29" pos:end="85:29">=</operator> <name pos:start="85:31" pos:end="87:49"><name pos:start="85:31" pos:end="85:31">s</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:46">dv_idct_shift</name><index pos:start="85:47" pos:end="85:59">[<expr pos:start="85:48" pos:end="85:58"><name pos:start="85:48" pos:end="85:53">class1</name> <operator pos:start="85:55" pos:end="85:56">==</operator> <literal type="number" pos:start="85:58" pos:end="85:58">3</literal></expr>]</index><index pos:start="85:60" pos:end="85:69">[<expr pos:start="85:61" pos:end="85:68"><name pos:start="85:61" pos:end="85:68">dct_mode</name></expr>]</index>

                <index pos:start="87:17" pos:end="87:49">[<expr pos:start="87:18" pos:end="87:48"><name pos:start="87:18" pos:end="87:22">quant</name> <operator pos:start="87:24" pos:end="87:24">+</operator> <name pos:start="87:26" pos:end="87:48"><name pos:start="87:26" pos:end="87:40">dv_quant_offset</name><index pos:start="87:41" pos:end="87:48">[<expr pos:start="87:42" pos:end="87:47"><name pos:start="87:42" pos:end="87:47">class1</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:25"><expr pos:start="89:13" pos:end="89:24"><name pos:start="89:13" pos:end="89:14">dc</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:19">dc</name> <operator pos:start="89:21" pos:end="89:22">&lt;&lt;</operator> <literal type="number" pos:start="89:24" pos:end="89:24">2</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="91:13" pos:end="93:31">/* convert to unsigned because 128 is not added in the

               standard IDCT */</comment>

            <expr_stmt pos:start="95:13" pos:end="95:23"><expr pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:14">dc</name> <operator pos:start="95:16" pos:end="95:17">+=</operator> <literal type="number" pos:start="95:19" pos:end="95:22">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:26"><expr pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:20"><name pos:start="97:13" pos:end="97:17">block</name><index pos:start="97:18" pos:end="97:20">[<expr pos:start="97:19" pos:end="97:19"><literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>]</index></name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:25">dc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:39"><expr pos:start="99:13" pos:end="99:38"><name pos:start="99:13" pos:end="99:19">buf_ptr</name> <operator pos:start="99:21" pos:end="99:22">+=</operator> <name pos:start="99:24" pos:end="99:33">last_index</name> <operator pos:start="99:35" pos:end="99:36">&gt;&gt;</operator> <literal type="number" pos:start="99:38" pos:end="99:38">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:24"><expr pos:start="101:13" pos:end="101:23"><name pos:start="101:13" pos:end="101:19"><name pos:start="101:13" pos:end="101:14">mb</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:19">pos</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="108:0"><expr pos:start="103:13" pos:end="103:37"><name pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:14">mb</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:33">partial_bit_count</name></name> <operator pos:start="103:35" pos:end="103:35">=</operator> <literal type="number" pos:start="103:37" pos:end="103:37">0</literal></expr>;</expr_stmt>



<cpp:ifdef pos:start="107:1" pos:end="107:16">#<cpp:directive pos:start="107:2" pos:end="107:6">ifdef</cpp:directive> <name pos:start="107:8" pos:end="107:16">VLC_DEBUG</name></cpp:ifdef>

            <expr_stmt pos:start="109:13" pos:end="112:0"><expr pos:start="109:13" pos:end="109:52"><call pos:start="109:13" pos:end="109:52"><name pos:start="109:13" pos:end="109:18">printf</name><argument_list pos:start="109:19" pos:end="109:52">(<argument pos:start="109:20" pos:end="109:38"><expr pos:start="109:20" pos:end="109:38"><literal type="string" pos:start="109:20" pos:end="109:38">"MB block: %d, %d "</literal></expr></argument>, <argument pos:start="109:41" pos:end="109:48"><expr pos:start="109:41" pos:end="109:48"><name pos:start="109:41" pos:end="109:48">mb_index</name></expr></argument>, <argument pos:start="109:51" pos:end="109:51"><expr pos:start="109:51" pos:end="109:51"><name pos:start="109:51" pos:end="109:51">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="113:13" pos:end="113:41"><expr pos:start="113:13" pos:end="113:40"><call pos:start="113:13" pos:end="113:40"><name pos:start="113:13" pos:end="113:24">dv_decode_ac</name><argument_list pos:start="113:25" pos:end="113:40">(<argument pos:start="113:26" pos:end="113:28"><expr pos:start="113:26" pos:end="113:28"><operator pos:start="113:26" pos:end="113:26">&amp;</operator><name pos:start="113:27" pos:end="113:28">gb</name></expr></argument>, <argument pos:start="113:31" pos:end="113:32"><expr pos:start="113:31" pos:end="113:32"><name pos:start="113:31" pos:end="113:32">mb</name></expr></argument>, <argument pos:start="113:35" pos:end="113:39"><expr pos:start="113:35" pos:end="113:39"><name pos:start="113:35" pos:end="113:39">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="117:13" pos:end="119:35">/* write the remaining bits  in a new buffer only if the

               block is finished */</comment>

            <if_stmt pos:start="121:13" pos:end="123:35"><if pos:start="121:13" pos:end="123:35">if <condition pos:start="121:16" pos:end="121:30">(<expr pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:23"><name pos:start="121:17" pos:end="121:18">mb</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:23">pos</name></name> <operator pos:start="121:25" pos:end="121:26">&gt;=</operator> <literal type="number" pos:start="121:28" pos:end="121:29">64</literal></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:35"><block_content pos:start="123:17" pos:end="123:35">

                <expr_stmt pos:start="123:17" pos:end="123:35"><expr pos:start="123:17" pos:end="123:34"><call pos:start="123:17" pos:end="123:34"><name pos:start="123:17" pos:end="123:24">bit_copy</name><argument_list pos:start="123:25" pos:end="123:34">(<argument pos:start="123:26" pos:end="123:28"><expr pos:start="123:26" pos:end="123:28"><operator pos:start="123:26" pos:end="123:26">&amp;</operator><name pos:start="123:27" pos:end="123:28">pb</name></expr></argument>, <argument pos:start="123:31" pos:end="123:33"><expr pos:start="123:31" pos:end="123:33"><operator pos:start="123:31" pos:end="123:31">&amp;</operator><name pos:start="123:32" pos:end="123:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            

            <expr_stmt pos:start="127:13" pos:end="127:24"><expr pos:start="127:13" pos:end="127:23"><name pos:start="127:13" pos:end="127:17">block</name> <operator pos:start="127:19" pos:end="127:20">+=</operator> <literal type="number" pos:start="127:22" pos:end="127:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:17"><expr pos:start="129:13" pos:end="129:16"><name pos:start="129:13" pos:end="129:14">mb</name><operator pos:start="129:15" pos:end="129:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        

        <comment type="block" pos:start="135:9" pos:end="135:46">/* pass 2 : we can do it just after */</comment>

<cpp:ifdef pos:start="137:1" pos:end="137:16">#<cpp:directive pos:start="137:2" pos:end="137:6">ifdef</cpp:directive> <name pos:start="137:8" pos:end="137:16">VLC_DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="139:9" pos:end="142:0"><expr pos:start="139:9" pos:end="139:75"><call pos:start="139:9" pos:end="139:75"><name pos:start="139:9" pos:end="139:14">printf</name><argument_list pos:start="139:15" pos:end="139:75">(<argument pos:start="139:16" pos:end="139:43"><expr pos:start="139:16" pos:end="139:43"><literal type="string" pos:start="139:16" pos:end="139:43">"***pass 2 size=%d MB#=%d\n"</literal></expr></argument>, <argument pos:start="139:46" pos:end="139:64"><expr pos:start="139:46" pos:end="139:64"><call pos:start="139:46" pos:end="139:64"><name pos:start="139:46" pos:end="139:59">put_bits_count</name><argument_list pos:start="139:60" pos:end="139:64">(<argument pos:start="139:61" pos:end="139:63"><expr pos:start="139:61" pos:end="139:63"><operator pos:start="139:61" pos:end="139:61">&amp;</operator><name pos:start="139:62" pos:end="139:63">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="139:67" pos:end="139:74"><expr pos:start="139:67" pos:end="139:74"><name pos:start="139:67" pos:end="139:74">mb_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="143:9" pos:end="143:23"><expr pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:13">block</name> <operator pos:start="143:15" pos:end="143:15">=</operator> <name pos:start="143:17" pos:end="143:22">block1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:17"><expr pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:10">mb</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <name pos:start="145:14" pos:end="145:16">mb1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:63"><expr pos:start="147:9" pos:end="147:62"><call pos:start="147:9" pos:end="147:62"><name pos:start="147:9" pos:end="147:21">init_get_bits</name><argument_list pos:start="147:22" pos:end="147:62">(<argument pos:start="147:23" pos:end="147:25"><expr pos:start="147:23" pos:end="147:25"><operator pos:start="147:23" pos:end="147:23">&amp;</operator><name pos:start="147:24" pos:end="147:25">gb</name></expr></argument>, <argument pos:start="147:28" pos:end="147:40"><expr pos:start="147:28" pos:end="147:40"><name pos:start="147:28" pos:end="147:40">mb_bit_buffer</name></expr></argument>, <argument pos:start="147:43" pos:end="147:61"><expr pos:start="147:43" pos:end="147:61"><call pos:start="147:43" pos:end="147:61"><name pos:start="147:43" pos:end="147:56">put_bits_count</name><argument_list pos:start="147:57" pos:end="147:61">(<argument pos:start="147:58" pos:end="147:60"><expr pos:start="147:58" pos:end="147:60"><operator pos:start="147:58" pos:end="147:58">&amp;</operator><name pos:start="147:59" pos:end="147:60">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="149:9" pos:end="149:28"><expr pos:start="149:9" pos:end="149:27"><call pos:start="149:9" pos:end="149:27"><name pos:start="149:9" pos:end="149:22">flush_put_bits</name><argument_list pos:start="149:23" pos:end="149:27">(<argument pos:start="149:24" pos:end="149:26"><expr pos:start="149:24" pos:end="149:26"><operator pos:start="149:24" pos:end="149:24">&amp;</operator><name pos:start="149:25" pos:end="149:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="151:9" pos:end="165:9">for<control pos:start="151:12" pos:end="151:48">(<init pos:start="151:13" pos:end="151:18"><expr pos:start="151:13" pos:end="151:17"><name pos:start="151:13" pos:end="151:13">j</name> <operator pos:start="151:15" pos:end="151:15">=</operator> <literal type="number" pos:start="151:17" pos:end="151:17">0</literal></expr>;</init><condition pos:start="151:19" pos:end="151:24"><expr pos:start="151:19" pos:end="151:23"><name pos:start="151:19" pos:end="151:19">j</name> <operator pos:start="151:21" pos:end="151:21">&lt;</operator> <literal type="number" pos:start="151:23" pos:end="151:23">6</literal></expr>;</condition> <incr pos:start="151:26" pos:end="151:47"><expr pos:start="151:26" pos:end="151:28"><name pos:start="151:26" pos:end="151:26">j</name><operator pos:start="151:27" pos:end="151:28">++</operator></expr><operator pos:start="151:29" pos:end="151:29">,</operator> <expr pos:start="151:31" pos:end="151:41"><name pos:start="151:31" pos:end="151:35">block</name> <operator pos:start="151:37" pos:end="151:38">+=</operator> <literal type="number" pos:start="151:40" pos:end="151:41">64</literal></expr><operator pos:start="151:42" pos:end="151:42">,</operator> <expr pos:start="151:44" pos:end="151:47"><name pos:start="151:44" pos:end="151:45">mb</name><operator pos:start="151:46" pos:end="151:47">++</operator></expr></incr>)</control> <block pos:start="151:50" pos:end="165:9">{<block_content pos:start="153:13" pos:end="163:13">

            <if_stmt pos:start="153:13" pos:end="163:13"><if pos:start="153:13" pos:end="163:13">if <condition pos:start="153:16" pos:end="153:55">(<expr pos:start="153:17" pos:end="153:54"><name pos:start="153:17" pos:end="153:23"><name pos:start="153:17" pos:end="153:18">mb</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:23">pos</name></name> <operator pos:start="153:25" pos:end="153:25">&lt;</operator> <literal type="number" pos:start="153:27" pos:end="153:28">64</literal> <operator pos:start="153:30" pos:end="153:31">&amp;&amp;</operator> <call pos:start="153:33" pos:end="153:50"><name pos:start="153:33" pos:end="153:45">get_bits_left</name><argument_list pos:start="153:46" pos:end="153:50">(<argument pos:start="153:47" pos:end="153:49"><expr pos:start="153:47" pos:end="153:49"><operator pos:start="153:47" pos:end="153:47">&amp;</operator><name pos:start="153:48" pos:end="153:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="153:52" pos:end="153:52">&gt;</operator> <literal type="number" pos:start="153:54" pos:end="153:54">0</literal></expr>)</condition> <block pos:start="153:57" pos:end="163:13">{<block_content pos:start="155:17" pos:end="161:26">

                <expr_stmt pos:start="155:17" pos:end="155:45"><expr pos:start="155:17" pos:end="155:44"><call pos:start="155:17" pos:end="155:44"><name pos:start="155:17" pos:end="155:28">dv_decode_ac</name><argument_list pos:start="155:29" pos:end="155:44">(<argument pos:start="155:30" pos:end="155:32"><expr pos:start="155:30" pos:end="155:32"><operator pos:start="155:30" pos:end="155:30">&amp;</operator><name pos:start="155:31" pos:end="155:32">gb</name></expr></argument>, <argument pos:start="155:35" pos:end="155:36"><expr pos:start="155:35" pos:end="155:36"><name pos:start="155:35" pos:end="155:36">mb</name></expr></argument>, <argument pos:start="155:39" pos:end="155:43"><expr pos:start="155:39" pos:end="155:43"><name pos:start="155:39" pos:end="155:43">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="157:17" pos:end="157:74">/* if still not finished, no need to parse other blocks */</comment>

                <if_stmt pos:start="159:17" pos:end="161:26"><if pos:start="159:17" pos:end="161:26">if <condition pos:start="159:20" pos:end="159:33">(<expr pos:start="159:21" pos:end="159:32"><name pos:start="159:21" pos:end="159:27"><name pos:start="159:21" pos:end="159:22">mb</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:27">pos</name></name> <operator pos:start="159:29" pos:end="159:29">&lt;</operator> <literal type="number" pos:start="159:31" pos:end="159:32">64</literal></expr>)</condition><block type="pseudo" pos:start="161:21" pos:end="161:26"><block_content pos:start="161:21" pos:end="161:26">

                    <break pos:start="161:21" pos:end="161:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="167:9" pos:end="169:37">/* all blocks are finished, so the extra bytes can be used at

           the video segment level */</comment>

        <if_stmt pos:start="171:9" pos:end="173:34"><if pos:start="171:9" pos:end="173:34">if <condition pos:start="171:12" pos:end="171:19">(<expr pos:start="171:13" pos:end="171:18"><name pos:start="171:13" pos:end="171:13">j</name> <operator pos:start="171:15" pos:end="171:16">&gt;=</operator> <literal type="number" pos:start="171:18" pos:end="171:18">6</literal></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:34"><block_content pos:start="173:13" pos:end="173:34">

	    <expr_stmt pos:start="173:13" pos:end="173:34"><expr pos:start="173:13" pos:end="173:33"><call pos:start="173:13" pos:end="173:33"><name pos:start="173:13" pos:end="173:20">bit_copy</name><argument_list pos:start="173:21" pos:end="173:33">(<argument pos:start="173:22" pos:end="173:27"><expr pos:start="173:22" pos:end="173:27"><operator pos:start="173:22" pos:end="173:22">&amp;</operator><name pos:start="173:23" pos:end="173:27">vs_pb</name></expr></argument>, <argument pos:start="173:30" pos:end="173:32"><expr pos:start="173:30" pos:end="173:32"><operator pos:start="173:30" pos:end="173:30">&amp;</operator><name pos:start="173:31" pos:end="173:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="179:5" pos:end="179:54">/* we need a pass other the whole video segment */</comment>

<cpp:ifdef pos:start="181:1" pos:end="181:16">#<cpp:directive pos:start="181:2" pos:end="181:6">ifdef</cpp:directive> <name pos:start="181:8" pos:end="181:16">VLC_DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="183:5" pos:end="186:0"><expr pos:start="183:5" pos:end="183:57"><call pos:start="183:5" pos:end="183:57"><name pos:start="183:5" pos:end="183:10">printf</name><argument_list pos:start="183:11" pos:end="183:57">(<argument pos:start="183:12" pos:end="183:32"><expr pos:start="183:12" pos:end="183:32"><literal type="string" pos:start="183:12" pos:end="183:32">"***pass 3 size=%d\n"</literal></expr></argument>, <argument pos:start="183:35" pos:end="183:56"><expr pos:start="183:35" pos:end="183:56"><call pos:start="183:35" pos:end="183:56"><name pos:start="183:35" pos:end="183:48">put_bits_count</name><argument_list pos:start="183:49" pos:end="183:56">(<argument pos:start="183:50" pos:end="183:55"><expr pos:start="183:50" pos:end="183:55"><operator pos:start="183:50" pos:end="183:50">&amp;</operator><name pos:start="183:51" pos:end="183:55">vs_pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="185:1" pos:end="185:6">#<cpp:directive pos:start="185:2" pos:end="185:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="187:5" pos:end="187:26"><expr pos:start="187:5" pos:end="187:25"><name pos:start="187:5" pos:end="187:9">block</name> <operator pos:start="187:11" pos:end="187:11">=</operator> <operator pos:start="187:13" pos:end="187:13">&amp;</operator><name pos:start="187:14" pos:end="187:25"><name pos:start="187:14" pos:end="187:19">sblock</name><index pos:start="187:20" pos:end="187:22">[<expr pos:start="187:21" pos:end="187:21"><literal type="number" pos:start="187:21" pos:end="187:21">0</literal></expr>]</index><index pos:start="187:23" pos:end="187:25">[<expr pos:start="187:24" pos:end="187:24"><literal type="number" pos:start="187:24" pos:end="187:24">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:17"><expr pos:start="189:5" pos:end="189:16"><name pos:start="189:5" pos:end="189:6">mb</name> <operator pos:start="189:8" pos:end="189:8">=</operator> <name pos:start="189:10" pos:end="189:16">mb_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:62"><expr pos:start="191:5" pos:end="191:61"><call pos:start="191:5" pos:end="191:61"><name pos:start="191:5" pos:end="191:17">init_get_bits</name><argument_list pos:start="191:18" pos:end="191:61">(<argument pos:start="191:19" pos:end="191:21"><expr pos:start="191:19" pos:end="191:21"><operator pos:start="191:19" pos:end="191:19">&amp;</operator><name pos:start="191:20" pos:end="191:21">gb</name></expr></argument>, <argument pos:start="191:24" pos:end="191:36"><expr pos:start="191:24" pos:end="191:36"><name pos:start="191:24" pos:end="191:36">vs_bit_buffer</name></expr></argument>, <argument pos:start="191:39" pos:end="191:60"><expr pos:start="191:39" pos:end="191:60"><call pos:start="191:39" pos:end="191:60"><name pos:start="191:39" pos:end="191:52">put_bits_count</name><argument_list pos:start="191:53" pos:end="191:60">(<argument pos:start="191:54" pos:end="191:59"><expr pos:start="191:54" pos:end="191:59"><operator pos:start="191:54" pos:end="191:54">&amp;</operator><name pos:start="191:55" pos:end="191:59">vs_pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:27"><expr pos:start="193:5" pos:end="193:26"><call pos:start="193:5" pos:end="193:26"><name pos:start="193:5" pos:end="193:18">flush_put_bits</name><argument_list pos:start="193:19" pos:end="193:26">(<argument pos:start="193:20" pos:end="193:25"><expr pos:start="193:20" pos:end="193:25"><operator pos:start="193:20" pos:end="193:20">&amp;</operator><name pos:start="193:21" pos:end="193:25">vs_pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="195:5" pos:end="221:5">for<control pos:start="195:8" pos:end="195:47">(<init pos:start="195:9" pos:end="195:21"><expr pos:start="195:9" pos:end="195:20"><name pos:start="195:9" pos:end="195:16">mb_index</name> <operator pos:start="195:18" pos:end="195:18">=</operator> <literal type="number" pos:start="195:20" pos:end="195:20">0</literal></expr>;</init> <condition pos:start="195:23" pos:end="195:35"><expr pos:start="195:23" pos:end="195:34"><name pos:start="195:23" pos:end="195:30">mb_index</name> <operator pos:start="195:32" pos:end="195:32">&lt;</operator> <literal type="number" pos:start="195:34" pos:end="195:34">5</literal></expr>;</condition> <incr pos:start="195:37" pos:end="195:46"><expr pos:start="195:37" pos:end="195:46"><name pos:start="195:37" pos:end="195:44">mb_index</name><operator pos:start="195:45" pos:end="195:46">++</operator></expr></incr>)</control> <block pos:start="195:49" pos:end="221:5">{<block_content pos:start="197:9" pos:end="219:9">

        <for pos:start="197:9" pos:end="219:9">for<control pos:start="197:12" pos:end="197:29">(<init pos:start="197:13" pos:end="197:18"><expr pos:start="197:13" pos:end="197:17"><name pos:start="197:13" pos:end="197:13">j</name> <operator pos:start="197:15" pos:end="197:15">=</operator> <literal type="number" pos:start="197:17" pos:end="197:17">0</literal></expr>;</init><condition pos:start="197:19" pos:end="197:24"><expr pos:start="197:19" pos:end="197:23"><name pos:start="197:19" pos:end="197:19">j</name> <operator pos:start="197:21" pos:end="197:21">&lt;</operator> <literal type="number" pos:start="197:23" pos:end="197:23">6</literal></expr>;</condition> <incr pos:start="197:26" pos:end="197:28"><expr pos:start="197:26" pos:end="197:28"><name pos:start="197:26" pos:end="197:26">j</name><operator pos:start="197:27" pos:end="197:28">++</operator></expr></incr>)</control> <block pos:start="197:31" pos:end="219:9">{<block_content pos:start="199:13" pos:end="217:17">

            <if_stmt pos:start="199:13" pos:end="209:13"><if pos:start="199:13" pos:end="209:13">if <condition pos:start="199:16" pos:end="199:29">(<expr pos:start="199:17" pos:end="199:28"><name pos:start="199:17" pos:end="199:23"><name pos:start="199:17" pos:end="199:18">mb</name><operator pos:start="199:19" pos:end="199:20">-&gt;</operator><name pos:start="199:21" pos:end="199:23">pos</name></name> <operator pos:start="199:25" pos:end="199:25">&lt;</operator> <literal type="number" pos:start="199:27" pos:end="199:28">64</literal></expr>)</condition> <block pos:start="199:31" pos:end="209:13">{<block_content pos:start="203:17" pos:end="207:45">

<cpp:ifdef pos:start="201:1" pos:end="201:16">#<cpp:directive pos:start="201:2" pos:end="201:6">ifdef</cpp:directive> <name pos:start="201:8" pos:end="201:16">VLC_DEBUG</name></cpp:ifdef>

                <expr_stmt pos:start="203:17" pos:end="206:0"><expr pos:start="203:17" pos:end="203:52"><call pos:start="203:17" pos:end="203:52"><name pos:start="203:17" pos:end="203:22">printf</name><argument_list pos:start="203:23" pos:end="203:52">(<argument pos:start="203:24" pos:end="203:38"><expr pos:start="203:24" pos:end="203:38"><literal type="string" pos:start="203:24" pos:end="203:38">"start %d:%d\n"</literal></expr></argument>, <argument pos:start="203:41" pos:end="203:48"><expr pos:start="203:41" pos:end="203:48"><name pos:start="203:41" pos:end="203:48">mb_index</name></expr></argument>, <argument pos:start="203:51" pos:end="203:51"><expr pos:start="203:51" pos:end="203:51"><name pos:start="203:51" pos:end="203:51">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="205:1" pos:end="205:6">#<cpp:directive pos:start="205:2" pos:end="205:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="207:17" pos:end="207:45"><expr pos:start="207:17" pos:end="207:44"><call pos:start="207:17" pos:end="207:44"><name pos:start="207:17" pos:end="207:28">dv_decode_ac</name><argument_list pos:start="207:29" pos:end="207:44">(<argument pos:start="207:30" pos:end="207:32"><expr pos:start="207:30" pos:end="207:32"><operator pos:start="207:30" pos:end="207:30">&amp;</operator><name pos:start="207:31" pos:end="207:32">gb</name></expr></argument>, <argument pos:start="207:35" pos:end="207:36"><expr pos:start="207:35" pos:end="207:36"><name pos:start="207:35" pos:end="207:36">mb</name></expr></argument>, <argument pos:start="207:39" pos:end="207:43"><expr pos:start="207:39" pos:end="207:43"><name pos:start="207:39" pos:end="207:43">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

	    <if_stmt pos:start="211:13" pos:end="213:88"><if pos:start="211:13" pos:end="213:88">if <condition pos:start="211:16" pos:end="211:47">(<expr pos:start="211:17" pos:end="211:46"><name pos:start="211:17" pos:end="211:23"><name pos:start="211:17" pos:end="211:18">mb</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:23">pos</name></name> <operator pos:start="211:25" pos:end="211:26">&gt;=</operator> <literal type="number" pos:start="211:28" pos:end="211:29">64</literal> <operator pos:start="211:31" pos:end="211:32">&amp;&amp;</operator> <name pos:start="211:34" pos:end="211:40"><name pos:start="211:34" pos:end="211:35">mb</name><operator pos:start="211:36" pos:end="211:37">-&gt;</operator><name pos:start="211:38" pos:end="211:40">pos</name></name> <operator pos:start="211:42" pos:end="211:42">&lt;</operator> <literal type="number" pos:start="211:44" pos:end="211:46">127</literal></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:88"><block_content pos:start="213:17" pos:end="213:88">

		<expr_stmt pos:start="213:17" pos:end="213:88"><expr pos:start="213:17" pos:end="213:87"><call pos:start="213:17" pos:end="213:87"><name pos:start="213:17" pos:end="213:22">av_log</name><argument_list pos:start="213:23" pos:end="213:87">(<argument pos:start="213:24" pos:end="213:27"><expr pos:start="213:24" pos:end="213:27"><name pos:start="213:24" pos:end="213:27">NULL</name></expr></argument>, <argument pos:start="213:30" pos:end="213:41"><expr pos:start="213:30" pos:end="213:41"><name pos:start="213:30" pos:end="213:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="213:44" pos:end="213:77"><expr pos:start="213:44" pos:end="213:77"><literal type="string" pos:start="213:44" pos:end="213:77">"AC EOB marker is absent pos=%d\n"</literal></expr></argument>, <argument pos:start="213:80" pos:end="213:86"><expr pos:start="213:80" pos:end="213:86"><name pos:start="213:80" pos:end="213:86"><name pos:start="213:80" pos:end="213:81">mb</name><operator pos:start="213:82" pos:end="213:83">-&gt;</operator><name pos:start="213:84" pos:end="213:86">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:24"><expr pos:start="215:13" pos:end="215:23"><name pos:start="215:13" pos:end="215:17">block</name> <operator pos:start="215:19" pos:end="215:20">+=</operator> <literal type="number" pos:start="215:22" pos:end="215:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:17"><expr pos:start="217:13" pos:end="217:16"><name pos:start="217:13" pos:end="217:14">mb</name><operator pos:start="217:15" pos:end="217:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    

    <comment type="block" pos:start="225:5" pos:end="225:39">/* compute idct and place blocks */</comment>

    <expr_stmt pos:start="227:5" pos:end="227:26"><expr pos:start="227:5" pos:end="227:25"><name pos:start="227:5" pos:end="227:9">block</name> <operator pos:start="227:11" pos:end="227:11">=</operator> <operator pos:start="227:13" pos:end="227:13">&amp;</operator><name pos:start="227:14" pos:end="227:25"><name pos:start="227:14" pos:end="227:19">sblock</name><index pos:start="227:20" pos:end="227:22">[<expr pos:start="227:21" pos:end="227:21"><literal type="number" pos:start="227:21" pos:end="227:21">0</literal></expr>]</index><index pos:start="227:23" pos:end="227:25">[<expr pos:start="227:24" pos:end="227:24"><literal type="number" pos:start="227:24" pos:end="227:24">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:17"><expr pos:start="229:5" pos:end="229:16"><name pos:start="229:5" pos:end="229:6">mb</name> <operator pos:start="229:8" pos:end="229:8">=</operator> <name pos:start="229:10" pos:end="229:16">mb_data</name></expr>;</expr_stmt>

    <for pos:start="231:5" pos:end="329:5">for<control pos:start="231:8" pos:end="231:47">(<init pos:start="231:9" pos:end="231:21"><expr pos:start="231:9" pos:end="231:20"><name pos:start="231:9" pos:end="231:16">mb_index</name> <operator pos:start="231:18" pos:end="231:18">=</operator> <literal type="number" pos:start="231:20" pos:end="231:20">0</literal></expr>;</init> <condition pos:start="231:23" pos:end="231:35"><expr pos:start="231:23" pos:end="231:34"><name pos:start="231:23" pos:end="231:30">mb_index</name> <operator pos:start="231:32" pos:end="231:32">&lt;</operator> <literal type="number" pos:start="231:34" pos:end="231:34">5</literal></expr>;</condition> <incr pos:start="231:37" pos:end="231:46"><expr pos:start="231:37" pos:end="231:46"><name pos:start="231:37" pos:end="231:44">mb_index</name><operator pos:start="231:45" pos:end="231:46">++</operator></expr></incr>)</control> <block pos:start="231:49" pos:end="329:5">{<block_content pos:start="233:9" pos:end="327:9">

        <expr_stmt pos:start="233:9" pos:end="233:26"><expr pos:start="233:9" pos:end="233:25"><name pos:start="233:9" pos:end="233:9">v</name> <operator pos:start="233:11" pos:end="233:11">=</operator> <operator pos:start="233:13" pos:end="233:13">*</operator><name pos:start="233:14" pos:end="233:23">mb_pos_ptr</name><operator pos:start="233:24" pos:end="233:25">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:24"><expr pos:start="235:9" pos:end="235:23"><name pos:start="235:9" pos:end="235:12">mb_x</name> <operator pos:start="235:14" pos:end="235:14">=</operator> <name pos:start="235:16" pos:end="235:16">v</name> <operator pos:start="235:18" pos:end="235:18">&amp;</operator> <literal type="number" pos:start="235:20" pos:end="235:23">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:22"><expr pos:start="237:9" pos:end="237:21"><name pos:start="237:9" pos:end="237:12">mb_y</name> <operator pos:start="237:14" pos:end="237:14">=</operator> <name pos:start="237:16" pos:end="237:16">v</name> <operator pos:start="237:18" pos:end="237:19">&gt;&gt;</operator> <literal type="number" pos:start="237:21" pos:end="237:21">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:86"><expr pos:start="239:9" pos:end="239:85"><name pos:start="239:9" pos:end="239:13">y_ptr</name> <operator pos:start="239:15" pos:end="239:15">=</operator> <name pos:start="239:17" pos:end="239:34"><name pos:start="239:17" pos:end="239:17">s</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:26">picture</name><operator pos:start="239:27" pos:end="239:27">.</operator><name pos:start="239:28" pos:end="239:31">data</name><index pos:start="239:32" pos:end="239:34">[<expr pos:start="239:33" pos:end="239:33"><literal type="number" pos:start="239:33" pos:end="239:33">0</literal></expr>]</index></name> <operator pos:start="239:36" pos:end="239:36">+</operator> <operator pos:start="239:38" pos:end="239:38">(</operator><name pos:start="239:39" pos:end="239:42">mb_y</name> <operator pos:start="239:44" pos:end="239:44">*</operator> <name pos:start="239:46" pos:end="239:67"><name pos:start="239:46" pos:end="239:46">s</name><operator pos:start="239:47" pos:end="239:48">-&gt;</operator><name pos:start="239:49" pos:end="239:55">picture</name><operator pos:start="239:56" pos:end="239:56">.</operator><name pos:start="239:57" pos:end="239:64">linesize</name><index pos:start="239:65" pos:end="239:67">[<expr pos:start="239:66" pos:end="239:66"><literal type="number" pos:start="239:66" pos:end="239:66">0</literal></expr>]</index></name> <operator pos:start="239:69" pos:end="239:69">*</operator> <literal type="number" pos:start="239:71" pos:end="239:71">8</literal><operator pos:start="239:72" pos:end="239:72">)</operator> <operator pos:start="239:74" pos:end="239:74">+</operator> <operator pos:start="239:76" pos:end="239:76">(</operator><name pos:start="239:77" pos:end="239:80">mb_x</name> <operator pos:start="239:82" pos:end="239:82">*</operator> <literal type="number" pos:start="239:84" pos:end="239:84">8</literal><operator pos:start="239:85" pos:end="239:85">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="241:9" pos:end="247:86"><if pos:start="241:9" pos:end="243:79">if <condition pos:start="241:12" pos:end="241:47">(<expr pos:start="241:13" pos:end="241:46"><name pos:start="241:13" pos:end="241:27"><name pos:start="241:13" pos:end="241:13">s</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:18">sys</name><operator pos:start="241:19" pos:end="241:20">-&gt;</operator><name pos:start="241:21" pos:end="241:27">pix_fmt</name></name> <operator pos:start="241:29" pos:end="241:30">==</operator> <name pos:start="241:32" pos:end="241:46">PIX_FMT_YUV411P</name></expr>)</condition><block type="pseudo" pos:start="243:13" pos:end="243:79"><block_content pos:start="243:13" pos:end="243:79">

            <expr_stmt pos:start="243:13" pos:end="243:79"><expr pos:start="243:13" pos:end="243:78"><name pos:start="243:13" pos:end="243:20">c_offset</name> <operator pos:start="243:22" pos:end="243:22">=</operator> <operator pos:start="243:24" pos:end="243:24">(</operator><name pos:start="243:25" pos:end="243:28">mb_y</name> <operator pos:start="243:30" pos:end="243:30">*</operator> <name pos:start="243:32" pos:end="243:53"><name pos:start="243:32" pos:end="243:32">s</name><operator pos:start="243:33" pos:end="243:34">-&gt;</operator><name pos:start="243:35" pos:end="243:41">picture</name><operator pos:start="243:42" pos:end="243:42">.</operator><name pos:start="243:43" pos:end="243:50">linesize</name><index pos:start="243:51" pos:end="243:53">[<expr pos:start="243:52" pos:end="243:52"><literal type="number" pos:start="243:52" pos:end="243:52">1</literal></expr>]</index></name> <operator pos:start="243:55" pos:end="243:55">*</operator> <literal type="number" pos:start="243:57" pos:end="243:57">8</literal><operator pos:start="243:58" pos:end="243:58">)</operator> <operator pos:start="243:60" pos:end="243:60">+</operator> <operator pos:start="243:62" pos:end="243:62">(</operator><operator pos:start="243:63" pos:end="243:63">(</operator><name pos:start="243:64" pos:end="243:67">mb_x</name> <operator pos:start="243:69" pos:end="243:70">&gt;&gt;</operator> <literal type="number" pos:start="243:72" pos:end="243:72">2</literal><operator pos:start="243:73" pos:end="243:73">)</operator> <operator pos:start="243:75" pos:end="243:75">*</operator> <literal type="number" pos:start="243:77" pos:end="243:77">8</literal><operator pos:start="243:78" pos:end="243:78">)</operator></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="245:9" pos:end="247:86">else<block type="pseudo" pos:start="247:13" pos:end="247:86"><block_content pos:start="247:13" pos:end="247:86">

            <expr_stmt pos:start="247:13" pos:end="247:86"><expr pos:start="247:13" pos:end="247:85"><name pos:start="247:13" pos:end="247:20">c_offset</name> <operator pos:start="247:22" pos:end="247:22">=</operator> <operator pos:start="247:24" pos:end="247:24">(</operator><operator pos:start="247:25" pos:end="247:25">(</operator><name pos:start="247:26" pos:end="247:29">mb_y</name> <operator pos:start="247:31" pos:end="247:32">&gt;&gt;</operator> <literal type="number" pos:start="247:34" pos:end="247:34">1</literal><operator pos:start="247:35" pos:end="247:35">)</operator> <operator pos:start="247:37" pos:end="247:37">*</operator> <name pos:start="247:39" pos:end="247:60"><name pos:start="247:39" pos:end="247:39">s</name><operator pos:start="247:40" pos:end="247:41">-&gt;</operator><name pos:start="247:42" pos:end="247:48">picture</name><operator pos:start="247:49" pos:end="247:49">.</operator><name pos:start="247:50" pos:end="247:57">linesize</name><index pos:start="247:58" pos:end="247:60">[<expr pos:start="247:59" pos:end="247:59"><literal type="number" pos:start="247:59" pos:end="247:59">1</literal></expr>]</index></name> <operator pos:start="247:62" pos:end="247:62">*</operator> <literal type="number" pos:start="247:64" pos:end="247:64">8</literal><operator pos:start="247:65" pos:end="247:65">)</operator> <operator pos:start="247:67" pos:end="247:67">+</operator> <operator pos:start="247:69" pos:end="247:69">(</operator><operator pos:start="247:70" pos:end="247:70">(</operator><name pos:start="247:71" pos:end="247:74">mb_x</name> <operator pos:start="247:76" pos:end="247:77">&gt;&gt;</operator> <literal type="number" pos:start="247:79" pos:end="247:79">1</literal><operator pos:start="247:80" pos:end="247:80">)</operator> <operator pos:start="247:82" pos:end="247:82">*</operator> <literal type="number" pos:start="247:84" pos:end="247:84">8</literal><operator pos:start="247:85" pos:end="247:85">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <for pos:start="249:9" pos:end="327:9">for<control pos:start="249:12" pos:end="249:29">(<init pos:start="249:13" pos:end="249:18"><expr pos:start="249:13" pos:end="249:17"><name pos:start="249:13" pos:end="249:13">j</name> <operator pos:start="249:15" pos:end="249:15">=</operator> <literal type="number" pos:start="249:17" pos:end="249:17">0</literal></expr>;</init><condition pos:start="249:19" pos:end="249:24"><expr pos:start="249:19" pos:end="249:23"><name pos:start="249:19" pos:end="249:19">j</name> <operator pos:start="249:21" pos:end="249:21">&lt;</operator> <literal type="number" pos:start="249:23" pos:end="249:23">6</literal></expr>;</condition> <incr pos:start="249:26" pos:end="249:28"><expr pos:start="249:26" pos:end="249:28"><name pos:start="249:26" pos:end="249:26">j</name><operator pos:start="249:27" pos:end="249:28">++</operator></expr></incr>)</control> <block pos:start="249:31" pos:end="327:9">{<block_content pos:start="251:13" pos:end="325:17">

            <expr_stmt pos:start="251:13" pos:end="251:49"><expr pos:start="251:13" pos:end="251:48"><name pos:start="251:13" pos:end="251:20">idct_put</name> <operator pos:start="251:22" pos:end="251:22">=</operator> <name pos:start="251:24" pos:end="251:48"><name pos:start="251:24" pos:end="251:24">s</name><operator pos:start="251:25" pos:end="251:26">-&gt;</operator><name pos:start="251:27" pos:end="251:34">idct_put</name><index pos:start="251:35" pos:end="251:48">[<expr pos:start="251:36" pos:end="251:47"><name pos:start="251:36" pos:end="251:47"><name pos:start="251:36" pos:end="251:37">mb</name><operator pos:start="251:38" pos:end="251:39">-&gt;</operator><name pos:start="251:40" pos:end="251:47">dct_mode</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="253:13" pos:end="321:13"><if pos:start="253:13" pos:end="269:13">if <condition pos:start="253:16" pos:end="253:22">(<expr pos:start="253:17" pos:end="253:21"><name pos:start="253:17" pos:end="253:17">j</name> <operator pos:start="253:19" pos:end="253:19">&lt;</operator> <literal type="number" pos:start="253:21" pos:end="253:21">4</literal></expr>)</condition> <block pos:start="253:24" pos:end="269:13">{<block_content pos:start="255:17" pos:end="267:17">

                <if_stmt pos:start="255:17" pos:end="267:17"><if pos:start="255:17" pos:end="261:17">if <condition pos:start="255:20" pos:end="255:75">(<expr pos:start="255:21" pos:end="255:74"><name pos:start="255:21" pos:end="255:35"><name pos:start="255:21" pos:end="255:21">s</name><operator pos:start="255:22" pos:end="255:23">-&gt;</operator><name pos:start="255:24" pos:end="255:26">sys</name><operator pos:start="255:27" pos:end="255:28">-&gt;</operator><name pos:start="255:29" pos:end="255:35">pix_fmt</name></name> <operator pos:start="255:37" pos:end="255:38">==</operator> <name pos:start="255:40" pos:end="255:54">PIX_FMT_YUV411P</name> <operator pos:start="255:56" pos:end="255:57">&amp;&amp;</operator> <name pos:start="255:59" pos:end="255:62">mb_x</name> <operator pos:start="255:64" pos:end="255:64">&lt;</operator> <operator pos:start="255:66" pos:end="255:66">(</operator><literal type="number" pos:start="255:67" pos:end="255:69">704</literal> <operator pos:start="255:71" pos:end="255:71">/</operator> <literal type="number" pos:start="255:73" pos:end="255:73">8</literal><operator pos:start="255:74" pos:end="255:74">)</operator></expr>)</condition> <block pos:start="255:77" pos:end="261:17">{<block_content pos:start="259:21" pos:end="259:77">

                    <comment type="block" pos:start="257:21" pos:end="257:80">/* NOTE: at end of line, the macroblock is handled as 420 */</comment>

                    <expr_stmt pos:start="259:21" pos:end="259:77"><expr pos:start="259:21" pos:end="259:76"><call pos:start="259:21" pos:end="259:76"><name pos:start="259:21" pos:end="259:28">idct_put</name><argument_list pos:start="259:29" pos:end="259:76">(<argument pos:start="259:30" pos:end="259:44"><expr pos:start="259:30" pos:end="259:44"><name pos:start="259:30" pos:end="259:34">y_ptr</name> <operator pos:start="259:36" pos:end="259:36">+</operator> <operator pos:start="259:38" pos:end="259:38">(</operator><name pos:start="259:39" pos:end="259:39">j</name> <operator pos:start="259:41" pos:end="259:41">*</operator> <literal type="number" pos:start="259:43" pos:end="259:43">8</literal><operator pos:start="259:44" pos:end="259:44">)</operator></expr></argument>, <argument pos:start="259:47" pos:end="259:68"><expr pos:start="259:47" pos:end="259:68"><name pos:start="259:47" pos:end="259:68"><name pos:start="259:47" pos:end="259:47">s</name><operator pos:start="259:48" pos:end="259:49">-&gt;</operator><name pos:start="259:50" pos:end="259:56">picture</name><operator pos:start="259:57" pos:end="259:57">.</operator><name pos:start="259:58" pos:end="259:65">linesize</name><index pos:start="259:66" pos:end="259:68">[<expr pos:start="259:67" pos:end="259:67"><literal type="number" pos:start="259:67" pos:end="259:67">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="259:71" pos:end="259:75"><expr pos:start="259:71" pos:end="259:75"><name pos:start="259:71" pos:end="259:75">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="261:19" pos:end="267:17">else <block pos:start="261:24" pos:end="267:17">{<block_content pos:start="263:21" pos:end="265:60">

                    <expr_stmt pos:start="263:21" pos:end="265:60"><expr pos:start="263:21" pos:end="265:59"><call pos:start="263:21" pos:end="265:59"><name pos:start="263:21" pos:end="263:28">idct_put</name><argument_list pos:start="263:29" pos:end="265:59">(<argument pos:start="263:30" pos:end="263:92"><expr pos:start="263:30" pos:end="263:92"><name pos:start="263:30" pos:end="263:34">y_ptr</name> <operator pos:start="263:36" pos:end="263:36">+</operator> <operator pos:start="263:38" pos:end="263:38">(</operator><operator pos:start="263:39" pos:end="263:39">(</operator><name pos:start="263:40" pos:end="263:40">j</name> <operator pos:start="263:42" pos:end="263:42">&amp;</operator> <literal type="number" pos:start="263:44" pos:end="263:44">1</literal><operator pos:start="263:45" pos:end="263:45">)</operator> <operator pos:start="263:47" pos:end="263:47">*</operator> <literal type="number" pos:start="263:49" pos:end="263:49">8</literal><operator pos:start="263:50" pos:end="263:50">)</operator> <operator pos:start="263:52" pos:end="263:52">+</operator> <operator pos:start="263:54" pos:end="263:54">(</operator><operator pos:start="263:55" pos:end="263:55">(</operator><name pos:start="263:56" pos:end="263:56">j</name> <operator pos:start="263:58" pos:end="263:59">&gt;&gt;</operator> <literal type="number" pos:start="263:61" pos:end="263:61">1</literal><operator pos:start="263:62" pos:end="263:62">)</operator> <operator pos:start="263:64" pos:end="263:64">*</operator> <literal type="number" pos:start="263:66" pos:end="263:66">8</literal> <operator pos:start="263:68" pos:end="263:68">*</operator> <name pos:start="263:70" pos:end="263:91"><name pos:start="263:70" pos:end="263:70">s</name><operator pos:start="263:71" pos:end="263:72">-&gt;</operator><name pos:start="263:73" pos:end="263:79">picture</name><operator pos:start="263:80" pos:end="263:80">.</operator><name pos:start="263:81" pos:end="263:88">linesize</name><index pos:start="263:89" pos:end="263:91">[<expr pos:start="263:90" pos:end="263:90"><literal type="number" pos:start="263:90" pos:end="263:90">0</literal></expr>]</index></name><operator pos:start="263:92" pos:end="263:92">)</operator></expr></argument>,

                             <argument pos:start="265:30" pos:end="265:51"><expr pos:start="265:30" pos:end="265:51"><name pos:start="265:30" pos:end="265:51"><name pos:start="265:30" pos:end="265:30">s</name><operator pos:start="265:31" pos:end="265:32">-&gt;</operator><name pos:start="265:33" pos:end="265:39">picture</name><operator pos:start="265:40" pos:end="265:40">.</operator><name pos:start="265:41" pos:end="265:48">linesize</name><index pos:start="265:49" pos:end="265:51">[<expr pos:start="265:50" pos:end="265:50"><literal type="number" pos:start="265:50" pos:end="265:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="265:54" pos:end="265:58"><expr pos:start="265:54" pos:end="265:58"><name pos:start="265:54" pos:end="265:58">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="269:15" pos:end="321:13">else <block pos:start="269:20" pos:end="321:13">{<block_content pos:start="271:17" pos:end="319:17">

                <if_stmt pos:start="271:17" pos:end="319:17"><if pos:start="271:17" pos:end="311:17">if <condition pos:start="271:20" pos:end="271:76">(<expr pos:start="271:21" pos:end="271:75"><name pos:start="271:21" pos:end="271:35"><name pos:start="271:21" pos:end="271:21">s</name><operator pos:start="271:22" pos:end="271:23">-&gt;</operator><name pos:start="271:24" pos:end="271:26">sys</name><operator pos:start="271:27" pos:end="271:28">-&gt;</operator><name pos:start="271:29" pos:end="271:35">pix_fmt</name></name> <operator pos:start="271:37" pos:end="271:38">==</operator> <name pos:start="271:40" pos:end="271:54">PIX_FMT_YUV411P</name> <operator pos:start="271:56" pos:end="271:57">&amp;&amp;</operator> <name pos:start="271:59" pos:end="271:62">mb_x</name> <operator pos:start="271:64" pos:end="271:65">&gt;=</operator> <operator pos:start="271:67" pos:end="271:67">(</operator><literal type="number" pos:start="271:68" pos:end="271:70">704</literal> <operator pos:start="271:72" pos:end="271:72">/</operator> <literal type="number" pos:start="271:74" pos:end="271:74">8</literal><operator pos:start="271:75" pos:end="271:75">)</operator></expr>)</condition> <block pos:start="271:78" pos:end="311:17">{<block_content pos:start="273:21" pos:end="309:21">

                    <decl_stmt pos:start="273:21" pos:end="273:50"><decl pos:start="273:21" pos:end="273:49"><type pos:start="273:21" pos:end="273:28"><name pos:start="273:21" pos:end="273:28">uint64_t</name></type> <name pos:start="273:30" pos:end="273:49"><name pos:start="273:30" pos:end="273:43">aligned_pixels</name><index pos:start="273:44" pos:end="273:49">[<expr pos:start="273:45" pos:end="273:48"><literal type="number" pos:start="273:45" pos:end="273:46">64</literal><operator pos:start="273:47" pos:end="273:47">/</operator><literal type="number" pos:start="273:48" pos:end="273:48">8</literal></expr>]</index></name></decl>;</decl_stmt>

                    <decl_stmt pos:start="275:21" pos:end="275:62"><decl pos:start="275:21" pos:end="275:61"><type pos:start="275:21" pos:end="275:29"><name pos:start="275:21" pos:end="275:27">uint8_t</name> <modifier pos:start="275:29" pos:end="275:29">*</modifier></type><name pos:start="275:30" pos:end="275:35">pixels</name><init pos:start="275:36" pos:end="275:61">= <expr pos:start="275:38" pos:end="275:61"><operator pos:start="275:38" pos:end="275:38">(</operator><name pos:start="275:39" pos:end="275:45">uint8_t</name><operator pos:start="275:46" pos:end="275:46">*</operator><operator pos:start="275:47" pos:end="275:47">)</operator><name pos:start="275:48" pos:end="275:61">aligned_pixels</name></expr></init></decl>;</decl_stmt>

		    <decl_stmt pos:start="277:21" pos:end="277:50"><decl pos:start="277:21" pos:end="277:34"><type pos:start="277:21" pos:end="277:29"><name pos:start="277:21" pos:end="277:27">uint8_t</name> <modifier pos:start="277:29" pos:end="277:29">*</modifier></type><name pos:start="277:30" pos:end="277:34">c_ptr</name></decl>, <decl pos:start="277:37" pos:end="277:43"><type ref="prev" pos:start="277:21" pos:end="277:29"><modifier pos:start="277:37" pos:end="277:37">*</modifier></type><name pos:start="277:38" pos:end="277:43">c_ptr1</name></decl>, <decl pos:start="277:46" pos:end="277:49"><type ref="prev" pos:start="277:21" pos:end="277:29"><modifier pos:start="277:46" pos:end="277:46">*</modifier></type><name pos:start="277:47" pos:end="277:49">ptr</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="279:21" pos:end="279:36"><decl pos:start="279:21" pos:end="279:25"><type pos:start="279:21" pos:end="279:23"><name pos:start="279:21" pos:end="279:23">int</name></type> <name pos:start="279:25" pos:end="279:25">y</name></decl>, <decl pos:start="279:28" pos:end="279:35"><type ref="prev" pos:start="279:21" pos:end="279:23"/><name pos:start="279:28" pos:end="279:35">linesize</name></decl>;</decl_stmt>

                    <comment type="block" pos:start="281:21" pos:end="281:80">/* NOTE: at end of line, the macroblock is handled as 420 */</comment>

                    <expr_stmt pos:start="283:21" pos:end="283:47"><expr pos:start="283:21" pos:end="283:46"><call pos:start="283:21" pos:end="283:46"><name pos:start="283:21" pos:end="283:28">idct_put</name><argument_list pos:start="283:29" pos:end="283:46">(<argument pos:start="283:30" pos:end="283:35"><expr pos:start="283:30" pos:end="283:35"><name pos:start="283:30" pos:end="283:35">pixels</name></expr></argument>, <argument pos:start="283:38" pos:end="283:38"><expr pos:start="283:38" pos:end="283:38"><literal type="number" pos:start="283:38" pos:end="283:38">8</literal></expr></argument>, <argument pos:start="283:41" pos:end="283:45"><expr pos:start="283:41" pos:end="283:45"><name pos:start="283:41" pos:end="283:45">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="285:21" pos:end="285:58"><expr pos:start="285:21" pos:end="285:57"><name pos:start="285:21" pos:end="285:28">linesize</name> <operator pos:start="285:30" pos:end="285:30">=</operator> <name pos:start="285:32" pos:end="285:57"><name pos:start="285:32" pos:end="285:32">s</name><operator pos:start="285:33" pos:end="285:34">-&gt;</operator><name pos:start="285:35" pos:end="285:41">picture</name><operator pos:start="285:42" pos:end="285:42">.</operator><name pos:start="285:43" pos:end="285:50">linesize</name><index pos:start="285:51" pos:end="285:57">[<expr pos:start="285:52" pos:end="285:56"><literal type="number" pos:start="285:52" pos:end="285:54">6</literal> <operator pos:start="285:54" pos:end="285:54">-</operator> <name pos:start="285:56" pos:end="285:56">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="287:21" pos:end="287:62"><expr pos:start="287:21" pos:end="287:61"><name pos:start="287:21" pos:end="287:25">c_ptr</name> <operator pos:start="287:27" pos:end="287:27">=</operator> <name pos:start="287:29" pos:end="287:50"><name pos:start="287:29" pos:end="287:29">s</name><operator pos:start="287:30" pos:end="287:31">-&gt;</operator><name pos:start="287:32" pos:end="287:38">picture</name><operator pos:start="287:39" pos:end="287:39">.</operator><name pos:start="287:40" pos:end="287:43">data</name><index pos:start="287:44" pos:end="287:50">[<expr pos:start="287:45" pos:end="287:49"><literal type="number" pos:start="287:45" pos:end="287:47">6</literal> <operator pos:start="287:47" pos:end="287:47">-</operator> <name pos:start="287:49" pos:end="287:49">j</name></expr>]</index></name> <operator pos:start="287:52" pos:end="287:52">+</operator> <name pos:start="287:54" pos:end="287:61">c_offset</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="289:21" pos:end="289:33"><expr pos:start="289:21" pos:end="289:32"><name pos:start="289:21" pos:end="289:23">ptr</name> <operator pos:start="289:25" pos:end="289:25">=</operator> <name pos:start="289:27" pos:end="289:32">pixels</name></expr>;</expr_stmt>

                    <for pos:start="291:21" pos:end="309:21">for<control pos:start="291:24" pos:end="291:41">(<init pos:start="291:25" pos:end="291:30"><expr pos:start="291:25" pos:end="291:29"><name pos:start="291:25" pos:end="291:25">y</name> <operator pos:start="291:27" pos:end="291:27">=</operator> <literal type="number" pos:start="291:29" pos:end="291:29">0</literal></expr>;</init><condition pos:start="291:31" pos:end="291:36"><expr pos:start="291:31" pos:end="291:35"><name pos:start="291:31" pos:end="291:31">y</name> <operator pos:start="291:33" pos:end="291:33">&lt;</operator> <literal type="number" pos:start="291:35" pos:end="291:35">8</literal></expr>;</condition> <incr pos:start="291:38" pos:end="291:40"><expr pos:start="291:38" pos:end="291:40"><name pos:start="291:38" pos:end="291:38">y</name><operator pos:start="291:39" pos:end="291:40">++</operator></expr></incr>)</control> <block pos:start="291:43" pos:end="309:21">{<block_content pos:start="295:25" pos:end="307:33">

                        <comment type="block" pos:start="293:25" pos:end="293:45">/* convert to 411P */</comment>

                        <expr_stmt pos:start="295:25" pos:end="295:52"><expr pos:start="295:25" pos:end="295:51"><name pos:start="295:25" pos:end="295:30">c_ptr1</name> <operator pos:start="295:32" pos:end="295:32">=</operator> <name pos:start="295:34" pos:end="295:38">c_ptr</name> <operator pos:start="295:40" pos:end="295:40">+</operator> <literal type="number" pos:start="295:42" pos:end="295:42">8</literal><operator pos:start="295:43" pos:end="295:43">*</operator><name pos:start="295:44" pos:end="295:51">linesize</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="297:25" pos:end="297:41"><expr pos:start="297:25" pos:end="297:40"><name pos:start="297:25" pos:end="297:32"><name pos:start="297:25" pos:end="297:29">c_ptr</name><index pos:start="297:30" pos:end="297:32">[<expr pos:start="297:31" pos:end="297:31"><literal type="number" pos:start="297:31" pos:end="297:31">0</literal></expr>]</index></name><operator pos:start="297:33" pos:end="297:33">=</operator> <name pos:start="297:35" pos:end="297:40"><name pos:start="297:35" pos:end="297:37">ptr</name><index pos:start="297:38" pos:end="297:40">[<expr pos:start="297:39" pos:end="297:39"><literal type="number" pos:start="297:39" pos:end="297:39">0</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt pos:start="297:43" pos:end="297:60"><expr pos:start="297:43" pos:end="297:59"><name pos:start="297:43" pos:end="297:51"><name pos:start="297:43" pos:end="297:48">c_ptr1</name><index pos:start="297:49" pos:end="297:51">[<expr pos:start="297:50" pos:end="297:50"><literal type="number" pos:start="297:50" pos:end="297:50">0</literal></expr>]</index></name><operator pos:start="297:52" pos:end="297:52">=</operator> <name pos:start="297:54" pos:end="297:59"><name pos:start="297:54" pos:end="297:56">ptr</name><index pos:start="297:57" pos:end="297:59">[<expr pos:start="297:58" pos:end="297:58"><literal type="number" pos:start="297:58" pos:end="297:58">4</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="299:25" pos:end="299:41"><expr pos:start="299:25" pos:end="299:40"><name pos:start="299:25" pos:end="299:32"><name pos:start="299:25" pos:end="299:29">c_ptr</name><index pos:start="299:30" pos:end="299:32">[<expr pos:start="299:31" pos:end="299:31"><literal type="number" pos:start="299:31" pos:end="299:31">1</literal></expr>]</index></name><operator pos:start="299:33" pos:end="299:33">=</operator> <name pos:start="299:35" pos:end="299:40"><name pos:start="299:35" pos:end="299:37">ptr</name><index pos:start="299:38" pos:end="299:40">[<expr pos:start="299:39" pos:end="299:39"><literal type="number" pos:start="299:39" pos:end="299:39">1</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt pos:start="299:43" pos:end="299:60"><expr pos:start="299:43" pos:end="299:59"><name pos:start="299:43" pos:end="299:51"><name pos:start="299:43" pos:end="299:48">c_ptr1</name><index pos:start="299:49" pos:end="299:51">[<expr pos:start="299:50" pos:end="299:50"><literal type="number" pos:start="299:50" pos:end="299:50">1</literal></expr>]</index></name><operator pos:start="299:52" pos:end="299:52">=</operator> <name pos:start="299:54" pos:end="299:59"><name pos:start="299:54" pos:end="299:56">ptr</name><index pos:start="299:57" pos:end="299:59">[<expr pos:start="299:58" pos:end="299:58"><literal type="number" pos:start="299:58" pos:end="299:58">5</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="301:25" pos:end="301:41"><expr pos:start="301:25" pos:end="301:40"><name pos:start="301:25" pos:end="301:32"><name pos:start="301:25" pos:end="301:29">c_ptr</name><index pos:start="301:30" pos:end="301:32">[<expr pos:start="301:31" pos:end="301:31"><literal type="number" pos:start="301:31" pos:end="301:31">2</literal></expr>]</index></name><operator pos:start="301:33" pos:end="301:33">=</operator> <name pos:start="301:35" pos:end="301:40"><name pos:start="301:35" pos:end="301:37">ptr</name><index pos:start="301:38" pos:end="301:40">[<expr pos:start="301:39" pos:end="301:39"><literal type="number" pos:start="301:39" pos:end="301:39">2</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt pos:start="301:43" pos:end="301:60"><expr pos:start="301:43" pos:end="301:59"><name pos:start="301:43" pos:end="301:51"><name pos:start="301:43" pos:end="301:48">c_ptr1</name><index pos:start="301:49" pos:end="301:51">[<expr pos:start="301:50" pos:end="301:50"><literal type="number" pos:start="301:50" pos:end="301:50">2</literal></expr>]</index></name><operator pos:start="301:52" pos:end="301:52">=</operator> <name pos:start="301:54" pos:end="301:59"><name pos:start="301:54" pos:end="301:56">ptr</name><index pos:start="301:57" pos:end="301:59">[<expr pos:start="301:58" pos:end="301:58"><literal type="number" pos:start="301:58" pos:end="301:58">6</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="303:25" pos:end="303:41"><expr pos:start="303:25" pos:end="303:40"><name pos:start="303:25" pos:end="303:32"><name pos:start="303:25" pos:end="303:29">c_ptr</name><index pos:start="303:30" pos:end="303:32">[<expr pos:start="303:31" pos:end="303:31"><literal type="number" pos:start="303:31" pos:end="303:31">3</literal></expr>]</index></name><operator pos:start="303:33" pos:end="303:33">=</operator> <name pos:start="303:35" pos:end="303:40"><name pos:start="303:35" pos:end="303:37">ptr</name><index pos:start="303:38" pos:end="303:40">[<expr pos:start="303:39" pos:end="303:39"><literal type="number" pos:start="303:39" pos:end="303:39">3</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt pos:start="303:43" pos:end="303:60"><expr pos:start="303:43" pos:end="303:59"><name pos:start="303:43" pos:end="303:51"><name pos:start="303:43" pos:end="303:48">c_ptr1</name><index pos:start="303:49" pos:end="303:51">[<expr pos:start="303:50" pos:end="303:50"><literal type="number" pos:start="303:50" pos:end="303:50">3</literal></expr>]</index></name><operator pos:start="303:52" pos:end="303:52">=</operator> <name pos:start="303:54" pos:end="303:59"><name pos:start="303:54" pos:end="303:56">ptr</name><index pos:start="303:57" pos:end="303:59">[<expr pos:start="303:58" pos:end="303:58"><literal type="number" pos:start="303:58" pos:end="303:58">7</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="305:25" pos:end="305:42"><expr pos:start="305:25" pos:end="305:41"><name pos:start="305:25" pos:end="305:29">c_ptr</name> <operator pos:start="305:31" pos:end="305:32">+=</operator> <name pos:start="305:34" pos:end="305:41">linesize</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="307:25" pos:end="307:33"><expr pos:start="307:25" pos:end="307:32"><name pos:start="307:25" pos:end="307:27">ptr</name> <operator pos:start="307:29" pos:end="307:30">+=</operator> <literal type="number" pos:start="307:32" pos:end="307:32">8</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="311:19" pos:end="319:17">else <block pos:start="311:24" pos:end="319:17">{<block_content pos:start="315:21" pos:end="317:64">

                    <comment type="block" pos:start="313:21" pos:end="313:68">/* don't ask me why they inverted Cb and Cr ! */</comment>

                    <expr_stmt pos:start="315:21" pos:end="317:64"><expr pos:start="315:21" pos:end="317:63"><call pos:start="315:21" pos:end="317:63"><name pos:start="315:21" pos:end="315:28">idct_put</name><argument_list pos:start="315:29" pos:end="317:63">(<argument pos:start="315:30" pos:end="315:62"><expr pos:start="315:30" pos:end="315:62"><name pos:start="315:30" pos:end="315:51"><name pos:start="315:30" pos:end="315:30">s</name><operator pos:start="315:31" pos:end="315:32">-&gt;</operator><name pos:start="315:33" pos:end="315:39">picture</name><operator pos:start="315:40" pos:end="315:40">.</operator><name pos:start="315:41" pos:end="315:44">data</name><index pos:start="315:45" pos:end="315:51">[<expr pos:start="315:46" pos:end="315:50"><literal type="number" pos:start="315:46" pos:end="315:48">6</literal> <operator pos:start="315:48" pos:end="315:48">-</operator> <name pos:start="315:50" pos:end="315:50">j</name></expr>]</index></name> <operator pos:start="315:53" pos:end="315:53">+</operator> <name pos:start="315:55" pos:end="315:62">c_offset</name></expr></argument>, 

                             <argument pos:start="317:30" pos:end="317:55"><expr pos:start="317:30" pos:end="317:55"><name pos:start="317:30" pos:end="317:55"><name pos:start="317:30" pos:end="317:30">s</name><operator pos:start="317:31" pos:end="317:32">-&gt;</operator><name pos:start="317:33" pos:end="317:39">picture</name><operator pos:start="317:40" pos:end="317:40">.</operator><name pos:start="317:41" pos:end="317:48">linesize</name><index pos:start="317:49" pos:end="317:55">[<expr pos:start="317:50" pos:end="317:54"><literal type="number" pos:start="317:50" pos:end="317:52">6</literal> <operator pos:start="317:52" pos:end="317:52">-</operator> <name pos:start="317:54" pos:end="317:54">j</name></expr>]</index></name></expr></argument>, <argument pos:start="317:58" pos:end="317:62"><expr pos:start="317:58" pos:end="317:62"><name pos:start="317:58" pos:end="317:62">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:24"><expr pos:start="323:13" pos:end="323:23"><name pos:start="323:13" pos:end="323:17">block</name> <operator pos:start="323:19" pos:end="323:20">+=</operator> <literal type="number" pos:start="323:22" pos:end="323:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:17"><expr pos:start="325:13" pos:end="325:16"><name pos:start="325:13" pos:end="325:14">mb</name><operator pos:start="325:15" pos:end="325:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
