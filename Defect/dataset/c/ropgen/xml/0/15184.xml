<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15184.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">cpu_watchpoint_remove</name><parameter_list pos:start="1:26" pos:end="3:36">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:34">CPUState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">env</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><name pos:start="1:42" pos:end="1:53">target_ulong</name></type> <name pos:start="1:55" pos:end="1:58">addr</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:76"><decl pos:start="1:61" pos:end="1:76"><type pos:start="1:61" pos:end="1:76"><name pos:start="1:61" pos:end="1:72">target_ulong</name></type> <name pos:start="1:74" pos:end="1:76">len</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:35"><decl pos:start="3:27" pos:end="3:35"><type pos:start="3:27" pos:end="3:35"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:35">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:19">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:25">len_mask</name> <init pos:start="7:27" pos:end="7:38">= <expr pos:start="7:29" pos:end="7:38"><operator pos:start="7:29" pos:end="7:29">~</operator><operator pos:start="7:30" pos:end="7:30">(</operator><name pos:start="7:31" pos:end="7:33">len</name> <operator pos:start="7:35" pos:end="7:35">-</operator> <literal type="number" pos:start="7:37" pos:end="7:37">1</literal><operator pos:start="7:38" pos:end="7:38">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">CPUWatchpoint</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">wp</name></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:17">TAILQ_FOREACH</name><argument_list pos:start="13:18" pos:end="13:47">(<argument pos:start="13:19" pos:end="13:20">wp</argument>, <argument pos:start="13:23" pos:end="13:39">&amp;env-&gt;watchpoints</argument>, <argument pos:start="13:42" pos:end="13:46">entry</argument>)</argument_list></macro> <block pos:start="13:49" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:9">

        <if_stmt pos:start="15:9" pos:end="23:9"><if pos:start="15:9" pos:end="23:9">if <condition pos:start="15:12" pos:end="17:61">(<expr pos:start="15:13" pos:end="17:60"><name pos:start="15:13" pos:end="15:16">addr</name> <operator pos:start="15:18" pos:end="15:19">==</operator> <name pos:start="15:21" pos:end="15:29"><name pos:start="15:21" pos:end="15:22">wp</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:29">vaddr</name></name> <operator pos:start="15:31" pos:end="15:32">&amp;&amp;</operator> <name pos:start="15:34" pos:end="15:41">len_mask</name> <operator pos:start="15:43" pos:end="15:44">==</operator> <name pos:start="15:46" pos:end="15:57"><name pos:start="15:46" pos:end="15:47">wp</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:57">len_mask</name></name>

                <operator pos:start="17:17" pos:end="17:18">&amp;&amp;</operator> <name pos:start="17:20" pos:end="17:24">flags</name> <operator pos:start="17:26" pos:end="17:27">==</operator> <operator pos:start="17:29" pos:end="17:29">(</operator><name pos:start="17:30" pos:end="17:38"><name pos:start="17:30" pos:end="17:31">wp</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:38">flags</name></name> <operator pos:start="17:40" pos:end="17:40">&amp;</operator> <operator pos:start="17:42" pos:end="17:42">~</operator><name pos:start="17:43" pos:end="17:59">BP_WATCHPOINT_HIT</name><operator pos:start="17:60" pos:end="17:60">)</operator></expr>)</condition> <block pos:start="17:63" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:21">

            <expr_stmt pos:start="19:13" pos:end="19:50"><expr pos:start="19:13" pos:end="19:49"><call pos:start="19:13" pos:end="19:49"><name pos:start="19:13" pos:end="19:40">cpu_watchpoint_remove_by_ref</name><argument_list pos:start="19:41" pos:end="19:49">(<argument pos:start="19:42" pos:end="19:44"><expr pos:start="19:42" pos:end="19:44"><name pos:start="19:42" pos:end="19:44">env</name></expr></argument>, <argument pos:start="19:47" pos:end="19:48"><expr pos:start="19:47" pos:end="19:48"><name pos:start="19:47" pos:end="19:48">wp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="21:13" pos:end="21:21">return <expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <return pos:start="27:5" pos:end="27:19">return <expr pos:start="27:12" pos:end="27:18"><operator pos:start="27:12" pos:end="27:12">-</operator><name pos:start="27:13" pos:end="27:18">ENOENT</name></expr>;</return>

</block_content>}</block></function>
</unit>
