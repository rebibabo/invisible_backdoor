<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18747.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">bonito_writel</name><parameter_list pos:start="1:26" pos:end="1:78">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:63"><decl pos:start="1:41" pos:end="1:63"><type pos:start="1:41" pos:end="1:63"><name pos:start="1:41" pos:end="1:58">target_phys_addr_t</name></type> <name pos:start="1:60" pos:end="1:63">addr</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:73">uint32_t</name></type> <name pos:start="1:75" pos:end="1:77">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">PCIBonitoState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">saddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">reset</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:9">saddr</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <operator pos:start="13:13" pos:end="13:13">(</operator><name pos:start="13:14" pos:end="13:17">addr</name> <operator pos:start="13:19" pos:end="13:19">-</operator> <name pos:start="13:21" pos:end="13:34">BONITO_REGBASE</name><operator pos:start="13:35" pos:end="13:35">)</operator> <operator pos:start="13:37" pos:end="13:38">&gt;&gt;</operator> <literal type="number" pos:start="13:40" pos:end="13:40">2</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:83"><expr pos:start="17:5" pos:end="17:82"><call pos:start="17:5" pos:end="17:82"><name pos:start="17:5" pos:end="17:11">DPRINTF</name><argument_list pos:start="17:12" pos:end="17:82">(<argument pos:start="17:13" pos:end="17:63"><expr pos:start="17:13" pos:end="17:63"><literal type="string" pos:start="17:13" pos:end="17:28">"bonito_writel "</literal><name pos:start="17:29" pos:end="17:42">TARGET_FMT_plx</name><literal type="string" pos:start="17:43" pos:end="17:63">" val %x saddr %x \n"</literal></expr></argument>, <argument pos:start="17:66" pos:end="17:69"><expr pos:start="17:66" pos:end="17:69"><name pos:start="17:66" pos:end="17:69">addr</name></expr></argument>, <argument pos:start="17:72" pos:end="17:74"><expr pos:start="17:72" pos:end="17:74"><name pos:start="17:72" pos:end="17:74">val</name></expr></argument>, <argument pos:start="17:77" pos:end="17:81"><expr pos:start="17:77" pos:end="17:81"><name pos:start="17:77" pos:end="17:81">saddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="119:5">switch <condition pos:start="19:12" pos:end="19:18">(<expr pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:17">saddr</name></expr>)</condition> <block pos:start="19:20" pos:end="119:5">{<block_content pos:start="21:5" pos:end="117:14">

    <case pos:start="21:5" pos:end="21:26">case <expr pos:start="21:10" pos:end="21:25"><name pos:start="21:10" pos:end="21:25">BONITO_BONPONCFG</name></expr>:</case>

    <case pos:start="23:5" pos:end="23:25">case <expr pos:start="23:10" pos:end="23:24"><name pos:start="23:10" pos:end="23:24">BONITO_IODEVCFG</name></expr>:</case>

    <case pos:start="25:5" pos:end="25:22">case <expr pos:start="25:10" pos:end="25:21"><name pos:start="25:10" pos:end="25:21">BONITO_SDCFG</name></expr>:</case>

    <case pos:start="27:5" pos:end="27:23">case <expr pos:start="27:10" pos:end="27:22"><name pos:start="27:10" pos:end="27:22">BONITO_PCIMAP</name></expr>:</case>

    <case pos:start="29:5" pos:end="29:30">case <expr pos:start="29:10" pos:end="29:29"><name pos:start="29:10" pos:end="29:29">BONITO_PCIMEMBASECFG</name></expr>:</case>

    <case pos:start="31:5" pos:end="31:27">case <expr pos:start="31:10" pos:end="31:26"><name pos:start="31:10" pos:end="31:26">BONITO_PCIMAP_CFG</name></expr>:</case>

    <case pos:start="33:5" pos:end="33:25">case <expr pos:start="33:10" pos:end="33:24"><name pos:start="33:10" pos:end="33:24">BONITO_GPIODATA</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:23">case <expr pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:22">BONITO_GPIOIE</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:24">case <expr pos:start="37:10" pos:end="37:23"><name pos:start="37:10" pos:end="37:23">BONITO_INTEDGE</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:25">case <expr pos:start="39:10" pos:end="39:24"><name pos:start="39:10" pos:end="39:24">BONITO_INTSTEER</name></expr>:</case>

    <case pos:start="41:5" pos:end="41:23">case <expr pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:22">BONITO_INTPOL</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:25">case <expr pos:start="43:10" pos:end="43:24"><name pos:start="43:10" pos:end="43:24">BONITO_PCIMAIL0</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:25">case <expr pos:start="45:10" pos:end="45:24"><name pos:start="45:10" pos:end="45:24">BONITO_PCIMAIL1</name></expr>:</case>

    <case pos:start="47:5" pos:end="47:25">case <expr pos:start="47:10" pos:end="47:24"><name pos:start="47:10" pos:end="47:24">BONITO_PCIMAIL2</name></expr>:</case>

    <case pos:start="49:5" pos:end="49:25">case <expr pos:start="49:10" pos:end="49:24"><name pos:start="49:10" pos:end="49:24">BONITO_PCIMAIL3</name></expr>:</case>

    <case pos:start="51:5" pos:end="51:29">case <expr pos:start="51:10" pos:end="51:28"><name pos:start="51:10" pos:end="51:28">BONITO_PCICACHECTRL</name></expr>:</case>

    <case pos:start="53:5" pos:end="53:28">case <expr pos:start="53:10" pos:end="53:27"><name pos:start="53:10" pos:end="53:27">BONITO_PCICACHETAG</name></expr>:</case>

    <case pos:start="55:5" pos:end="55:27">case <expr pos:start="55:10" pos:end="55:26"><name pos:start="55:10" pos:end="55:26">BONITO_PCIBADADDR</name></expr>:</case>

    <case pos:start="57:5" pos:end="57:25">case <expr pos:start="57:10" pos:end="57:24"><name pos:start="57:10" pos:end="57:24">BONITO_PCIMSTAT</name></expr>:</case>

    <case pos:start="59:5" pos:end="59:24">case <expr pos:start="59:10" pos:end="59:23"><name pos:start="59:10" pos:end="59:23">BONITO_TIMECFG</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:23">case <expr pos:start="61:10" pos:end="61:22"><name pos:start="61:10" pos:end="61:22">BONITO_CPUCFG</name></expr>:</case>

    <case pos:start="63:5" pos:end="63:22">case <expr pos:start="63:10" pos:end="63:21"><name pos:start="63:10" pos:end="63:21">BONITO_DQCFG</name></expr>:</case>

    <case pos:start="65:5" pos:end="65:24">case <expr pos:start="65:10" pos:end="65:23"><name pos:start="65:10" pos:end="65:23">BONITO_MEMSIZE</name></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:29"><expr pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:15">regs</name><index pos:start="67:16" pos:end="67:22">[<expr pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:21">saddr</name></expr>]</index></name> <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:28">val</name></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:26">case <expr pos:start="71:10" pos:end="71:25"><name pos:start="71:10" pos:end="71:25">BONITO_BONGENCFG</name></expr>:</case>

        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:53">(<expr pos:start="73:13" pos:end="73:52"><operator pos:start="73:13" pos:end="73:13">!</operator><operator pos:start="73:14" pos:end="73:14">(</operator><name pos:start="73:15" pos:end="73:28"><name pos:start="73:15" pos:end="73:15">s</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:21">regs</name><index pos:start="73:22" pos:end="73:28">[<expr pos:start="73:23" pos:end="73:27"><name pos:start="73:23" pos:end="73:27">saddr</name></expr>]</index></name> <operator pos:start="73:30" pos:end="73:30">&amp;</operator> <literal type="number" pos:start="73:32" pos:end="73:35">0x04</literal><operator pos:start="73:36" pos:end="73:36">)</operator> <operator pos:start="73:38" pos:end="73:39">&amp;&amp;</operator> <operator pos:start="73:41" pos:end="73:41">(</operator><name pos:start="73:42" pos:end="73:44">val</name> <operator pos:start="73:46" pos:end="73:46">&amp;</operator> <literal type="number" pos:start="73:48" pos:end="73:51">0x04</literal><operator pos:start="73:52" pos:end="73:52">)</operator></expr>)</condition> <block pos:start="73:55" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:22">

            <expr_stmt pos:start="75:13" pos:end="75:22"><expr pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:17">reset</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <literal type="number" pos:start="75:21" pos:end="75:21">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="75:24" pos:end="75:63">/* bit 2 jump from 0 to 1 cause reset */</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:15">regs</name><index pos:start="79:16" pos:end="79:22">[<expr pos:start="79:17" pos:end="79:21"><name pos:start="79:17" pos:end="79:21">saddr</name></expr>]</index></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:28">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:18">(<expr pos:start="81:13" pos:end="81:17"><name pos:start="81:13" pos:end="81:17">reset</name></expr>)</condition> <block pos:start="81:20" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:40">

            <expr_stmt pos:start="83:13" pos:end="83:40"><expr pos:start="83:13" pos:end="83:39"><call pos:start="83:13" pos:end="83:39"><name pos:start="83:13" pos:end="83:37">qemu_system_reset_request</name><argument_list pos:start="83:38" pos:end="83:39">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:25">case <expr pos:start="89:10" pos:end="89:24"><name pos:start="89:10" pos:end="89:24">BONITO_INTENSET</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:39"><expr pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:15">regs</name><index pos:start="91:16" pos:end="91:32">[<expr pos:start="91:17" pos:end="91:31"><name pos:start="91:17" pos:end="91:31">BONITO_INTENSET</name></expr>]</index></name> <operator pos:start="91:34" pos:end="91:34">=</operator> <name pos:start="91:36" pos:end="91:38">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:37"><expr pos:start="93:9" pos:end="93:36"><name pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:15">regs</name><index pos:start="93:16" pos:end="93:29">[<expr pos:start="93:17" pos:end="93:28"><name pos:start="93:17" pos:end="93:28">BONITO_INTEN</name></expr>]</index></name> <operator pos:start="93:31" pos:end="93:32">|=</operator> <name pos:start="93:34" pos:end="93:36">val</name></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:25">case <expr pos:start="97:10" pos:end="97:24"><name pos:start="97:10" pos:end="97:24">BONITO_INTENCLR</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:39"><expr pos:start="99:9" pos:end="99:38"><name pos:start="99:9" pos:end="99:32"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:15">regs</name><index pos:start="99:16" pos:end="99:32">[<expr pos:start="99:17" pos:end="99:31"><name pos:start="99:17" pos:end="99:31">BONITO_INTENCLR</name></expr>]</index></name> <operator pos:start="99:34" pos:end="99:34">=</operator> <name pos:start="99:36" pos:end="99:38">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:38"><expr pos:start="101:9" pos:end="101:37"><name pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:15">regs</name><index pos:start="101:16" pos:end="101:29">[<expr pos:start="101:17" pos:end="101:28"><name pos:start="101:17" pos:end="101:28">BONITO_INTEN</name></expr>]</index></name> <operator pos:start="101:31" pos:end="101:32">&amp;=</operator> <operator pos:start="101:34" pos:end="101:34">~</operator><name pos:start="101:35" pos:end="101:37">val</name></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:22">case <expr pos:start="105:10" pos:end="105:21"><name pos:start="105:10" pos:end="105:21">BONITO_INTEN</name></expr>:</case>

    <case pos:start="107:5" pos:end="107:23">case <expr pos:start="107:10" pos:end="107:22"><name pos:start="107:10" pos:end="107:22">BONITO_INTISR</name></expr>:</case>

        <expr_stmt pos:start="109:9" pos:end="109:66"><expr pos:start="109:9" pos:end="109:65"><call pos:start="109:9" pos:end="109:65"><name pos:start="109:9" pos:end="109:15">DPRINTF</name><argument_list pos:start="109:16" pos:end="109:65">(<argument pos:start="109:17" pos:end="109:57"><expr pos:start="109:17" pos:end="109:57"><literal type="string" pos:start="109:17" pos:end="109:57">"write to readonly bonito register %x \n"</literal></expr></argument>, <argument pos:start="109:60" pos:end="109:64"><expr pos:start="109:60" pos:end="109:64"><name pos:start="109:60" pos:end="109:64">saddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="111:9" pos:end="111:14">break;</break>

    <default pos:start="113:5" pos:end="113:12">default:</default>

        <expr_stmt pos:start="115:9" pos:end="115:65"><expr pos:start="115:9" pos:end="115:64"><call pos:start="115:9" pos:end="115:64"><name pos:start="115:9" pos:end="115:15">DPRINTF</name><argument_list pos:start="115:16" pos:end="115:64">(<argument pos:start="115:17" pos:end="115:56"><expr pos:start="115:17" pos:end="115:56"><literal type="string" pos:start="115:17" pos:end="115:56">"write to unknown bonito register %x \n"</literal></expr></argument>, <argument pos:start="115:59" pos:end="115:63"><expr pos:start="115:59" pos:end="115:63"><name pos:start="115:59" pos:end="115:63">saddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
