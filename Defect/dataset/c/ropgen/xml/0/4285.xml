<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4285.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">xvid_ff_2pass_create</name><parameter_list pos:start="1:32" pos:end="3:47">(<parameter pos:start="1:33" pos:end="1:57"><decl pos:start="1:33" pos:end="1:57"><type pos:start="1:33" pos:end="1:57"><name pos:start="1:33" pos:end="1:49">xvid_plg_create_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type> <name pos:start="1:53" pos:end="1:57">param</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:46"><decl pos:start="3:33" pos:end="3:46"><type pos:start="3:33" pos:end="3:46"><name pos:start="3:33" pos:end="3:36">void</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier><modifier pos:start="3:39" pos:end="3:39">*</modifier></type> <name pos:start="3:41" pos:end="3:46">handle</name></decl></parameter>)</parameter_list> <block pos:start="3:49" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:67"><decl pos:start="5:5" pos:end="5:66"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">xvid_ff_pass1</name></name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:27">x</name> <init pos:start="5:29" pos:end="5:66">= <expr pos:start="5:31" pos:end="5:66"><operator pos:start="5:31" pos:end="5:31">(</operator>struct <name pos:start="5:39" pos:end="5:51">xvid_ff_pass1</name> <operator pos:start="5:53" pos:end="5:53">*</operator><operator pos:start="5:54" pos:end="5:54">)</operator><name pos:start="5:55" pos:end="5:66"><name pos:start="5:55" pos:end="5:59">param</name><operator pos:start="5:60" pos:end="5:61">-&gt;</operator><name pos:start="5:62" pos:end="5:66">param</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">log</name> <init pos:start="7:15" pos:end="7:41">= <expr pos:start="7:17" pos:end="7:41"><name pos:start="7:17" pos:end="7:41"><name pos:start="7:17" pos:end="7:17">x</name><operator pos:start="7:18" pos:end="7:19">-&gt;</operator><name pos:start="7:20" pos:end="7:26">context</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:41">twopassbuffer</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:33">/* Do a quick bounds check */</comment>

    <if_stmt pos:start="13:5" pos:end="15:29"><if pos:start="13:5" pos:end="15:29">if<condition pos:start="13:7" pos:end="13:21">( <expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">log</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <name pos:start="13:16" pos:end="13:19">NULL</name></expr> )</condition><block type="pseudo" pos:start="15:9" pos:end="15:29"><block_content pos:start="15:9" pos:end="15:29">

        <return pos:start="15:9" pos:end="15:29">return <expr pos:start="15:16" pos:end="15:28"><name pos:start="15:16" pos:end="15:28">XVID_ERR_FAIL</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:27">/* We use snprintf() */</comment>

    <comment type="block" pos:start="21:5" pos:end="21:65">/* This is because we can safely prevent a buffer overflow */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:7">log</name><index pos:start="23:8" pos:end="23:10">[<expr pos:start="23:9" pos:end="23:9"><literal type="number" pos:start="23:9" pos:end="23:9">0</literal></expr>]</index></name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:56"><expr pos:start="25:5" pos:end="27:55"><call pos:start="25:5" pos:end="27:55"><name pos:start="25:5" pos:end="25:12">snprintf</name><argument_list pos:start="25:13" pos:end="27:55">(<argument pos:start="25:14" pos:end="25:16"><expr pos:start="25:14" pos:end="25:16"><name pos:start="25:14" pos:end="25:16">log</name></expr></argument>, <argument pos:start="25:19" pos:end="25:39"><expr pos:start="25:19" pos:end="25:39"><call pos:start="25:19" pos:end="25:39"><name pos:start="25:19" pos:end="25:34">BUFFER_REMAINING</name><argument_list pos:start="25:35" pos:end="25:39">(<argument pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:38">log</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="27:9" pos:end="27:54"><expr pos:start="27:9" pos:end="27:54"><literal type="string" pos:start="27:9" pos:end="27:54">"# avconv 2-pass log file, using xvid codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="37:42"><expr pos:start="29:5" pos:end="37:41"><call pos:start="29:5" pos:end="37:41"><name pos:start="29:5" pos:end="29:12">snprintf</name><argument_list pos:start="29:13" pos:end="37:41">(<argument pos:start="29:14" pos:end="29:28"><expr pos:start="29:14" pos:end="29:28"><call pos:start="29:14" pos:end="29:28"><name pos:start="29:14" pos:end="29:23">BUFFER_CAT</name><argument_list pos:start="29:24" pos:end="29:28">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">log</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:31" pos:end="29:51"><expr pos:start="29:31" pos:end="29:51"><call pos:start="29:31" pos:end="29:51"><name pos:start="29:31" pos:end="29:46">BUFFER_REMAINING</name><argument_list pos:start="29:47" pos:end="29:51">(<argument pos:start="29:48" pos:end="29:50"><expr pos:start="29:48" pos:end="29:50"><name pos:start="29:48" pos:end="29:50">log</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="31:9" pos:end="31:60"><expr pos:start="31:9" pos:end="31:60"><literal type="string" pos:start="31:9" pos:end="31:60">"# Do not modify. libxvidcore version: %d.%d.%d\n\n"</literal></expr></argument>,

        <argument pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:40"><call pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:26">XVID_VERSION_MAJOR</name><argument_list pos:start="33:27" pos:end="33:40">(<argument pos:start="33:28" pos:end="33:39"><expr pos:start="33:28" pos:end="33:39"><name pos:start="33:28" pos:end="33:39">XVID_VERSION</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:40"><call pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:26">XVID_VERSION_MINOR</name><argument_list pos:start="35:27" pos:end="35:40">(<argument pos:start="35:28" pos:end="35:39"><expr pos:start="35:28" pos:end="35:39"><name pos:start="35:28" pos:end="35:39">XVID_VERSION</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="37:9" pos:end="37:40"><expr pos:start="37:9" pos:end="37:40"><call pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:26">XVID_VERSION_PATCH</name><argument_list pos:start="37:27" pos:end="37:40">(<argument pos:start="37:28" pos:end="37:39"><expr pos:start="37:28" pos:end="37:39"><name pos:start="37:28" pos:end="37:39">XVID_VERSION</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:11">handle</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:24"><name pos:start="41:15" pos:end="41:15">x</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:24">context</name></name></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
