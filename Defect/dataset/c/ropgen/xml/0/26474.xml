<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26474.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">push_samples</name><parameter_list pos:start="1:24" pos:end="1:46">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:36">AVFilterLink</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:45">outlink</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:26">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">ASNSContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">asns</name> <init pos:start="5:23" pos:end="5:42">= <expr pos:start="5:25" pos:end="5:42"><name pos:start="5:25" pos:end="5:42"><name pos:start="5:25" pos:end="5:31">outlink</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:36">src</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:42">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:23">outsamples</name> <init pos:start="7:25" pos:end="7:30">= <expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:27">nb_out_samples</name></decl>, <decl pos:start="9:30" pos:end="9:43"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:43">nb_pad_samples</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">asns</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:17">pad</name></name></expr>)</condition> <block pos:start="13:20" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:96">

        <expr_stmt pos:start="15:9" pos:end="15:83"><expr pos:start="15:9" pos:end="15:82"><name pos:start="15:9" pos:end="15:22">nb_out_samples</name> <operator pos:start="15:24" pos:end="15:24">=</operator> <ternary pos:start="15:26" pos:end="15:82"><condition pos:start="15:26" pos:end="15:57"><expr pos:start="15:26" pos:end="15:55"><call pos:start="15:26" pos:end="15:55"><name pos:start="15:26" pos:end="15:43">av_audio_fifo_size</name><argument_list pos:start="15:44" pos:end="15:55">(<argument pos:start="15:45" pos:end="15:54"><expr pos:start="15:45" pos:end="15:54"><name pos:start="15:45" pos:end="15:54"><name pos:start="15:45" pos:end="15:48">asns</name><operator pos:start="15:49" pos:end="15:50">-&gt;</operator><name pos:start="15:51" pos:end="15:54">fifo</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="15:59" pos:end="15:78"> <expr pos:start="15:59" pos:end="15:78"><name pos:start="15:59" pos:end="15:78"><name pos:start="15:59" pos:end="15:62">asns</name><operator pos:start="15:63" pos:end="15:64">-&gt;</operator><name pos:start="15:65" pos:end="15:78">nb_out_samples</name></name></expr> </then><else pos:start="15:80" pos:end="15:82">: <expr pos:start="15:82" pos:end="15:82"><literal type="number" pos:start="15:82" pos:end="15:82">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:96"><expr pos:start="17:9" pos:end="17:95"><name pos:start="17:9" pos:end="17:22">nb_pad_samples</name> <operator pos:start="17:24" pos:end="17:24">=</operator> <name pos:start="17:26" pos:end="17:39">nb_out_samples</name> <operator pos:start="17:41" pos:end="17:41">-</operator> <call pos:start="17:43" pos:end="17:95"><name pos:start="17:43" pos:end="17:47">FFMIN</name><argument_list pos:start="17:48" pos:end="17:95">(<argument pos:start="17:49" pos:end="17:62"><expr pos:start="17:49" pos:end="17:62"><name pos:start="17:49" pos:end="17:62">nb_out_samples</name></expr></argument>, <argument pos:start="17:65" pos:end="17:94"><expr pos:start="17:65" pos:end="17:94"><call pos:start="17:65" pos:end="17:94"><name pos:start="17:65" pos:end="17:82">av_audio_fifo_size</name><argument_list pos:start="17:83" pos:end="17:94">(<argument pos:start="17:84" pos:end="17:93"><expr pos:start="17:84" pos:end="17:93"><name pos:start="17:84" pos:end="17:93"><name pos:start="17:84" pos:end="17:87">asns</name><operator pos:start="17:88" pos:end="17:89">-&gt;</operator><name pos:start="17:90" pos:end="17:93">fifo</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="25:5">else <block pos:start="19:12" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:27">

        <expr_stmt pos:start="21:9" pos:end="21:85"><expr pos:start="21:9" pos:end="21:84"><name pos:start="21:9" pos:end="21:22">nb_out_samples</name> <operator pos:start="21:24" pos:end="21:24">=</operator> <call pos:start="21:26" pos:end="21:84"><name pos:start="21:26" pos:end="21:30">FFMIN</name><argument_list pos:start="21:31" pos:end="21:84">(<argument pos:start="21:32" pos:end="21:51"><expr pos:start="21:32" pos:end="21:51"><name pos:start="21:32" pos:end="21:51"><name pos:start="21:32" pos:end="21:35">asns</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:51">nb_out_samples</name></name></expr></argument>, <argument pos:start="21:54" pos:end="21:83"><expr pos:start="21:54" pos:end="21:83"><call pos:start="21:54" pos:end="21:83"><name pos:start="21:54" pos:end="21:71">av_audio_fifo_size</name><argument_list pos:start="21:72" pos:end="21:83">(<argument pos:start="21:73" pos:end="21:82"><expr pos:start="21:73" pos:end="21:82"><name pos:start="21:73" pos:end="21:82"><name pos:start="21:73" pos:end="21:76">asns</name><operator pos:start="21:77" pos:end="21:78">-&gt;</operator><name pos:start="21:79" pos:end="21:82">fifo</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:22">nb_pad_samples</name> <operator pos:start="23:24" pos:end="23:24">=</operator> <literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:17"><if pos:start="29:5" pos:end="31:17">if <condition pos:start="29:8" pos:end="29:24">(<expr pos:start="29:9" pos:end="29:23"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:23">nb_out_samples</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:17"><block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:14">outsamples</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <call pos:start="35:18" pos:end="35:61"><name pos:start="35:18" pos:end="35:36">ff_get_audio_buffer</name><argument_list pos:start="35:37" pos:end="35:61">(<argument pos:start="35:38" pos:end="35:44"><expr pos:start="35:38" pos:end="35:44"><name pos:start="35:38" pos:end="35:44">outlink</name></expr></argument>, <argument pos:start="35:47" pos:end="35:60"><expr pos:start="35:47" pos:end="35:60"><name pos:start="35:47" pos:end="35:60">nb_out_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><call pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:14">av_assert0</name><argument_list pos:start="37:15" pos:end="37:26">(<argument pos:start="37:16" pos:end="37:25"><expr pos:start="37:16" pos:end="37:25"><name pos:start="37:16" pos:end="37:25">outsamples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:75"><expr pos:start="41:5" pos:end="43:74"><call pos:start="41:5" pos:end="43:74"><name pos:start="41:5" pos:end="41:22">av_audio_fifo_read</name><argument_list pos:start="41:23" pos:end="43:74">(<argument pos:start="41:24" pos:end="41:33"><expr pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:33"><name pos:start="41:24" pos:end="41:27">asns</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:33">fifo</name></name></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:57"><expr pos:start="43:24" pos:end="43:57"><operator pos:start="43:24" pos:end="43:24">(</operator><name pos:start="43:25" pos:end="43:28">void</name> <operator pos:start="43:30" pos:end="43:30">*</operator><operator pos:start="43:31" pos:end="43:31">*</operator><operator pos:start="43:32" pos:end="43:32">)</operator><name pos:start="43:33" pos:end="43:57"><name pos:start="43:33" pos:end="43:42">outsamples</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:57">extended_data</name></name></expr></argument>, <argument pos:start="43:60" pos:end="43:73"><expr pos:start="43:60" pos:end="43:73"><name pos:start="43:60" pos:end="43:73">nb_out_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:48"><if pos:start="47:5" pos:end="53:48">if <condition pos:start="47:8" pos:end="47:23">(<expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:22">nb_pad_samples</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="53:48"><block_content pos:start="49:9" pos:end="53:48">

        <expr_stmt pos:start="49:9" pos:end="53:48"><expr pos:start="49:9" pos:end="53:47"><call pos:start="49:9" pos:end="53:47"><name pos:start="49:9" pos:end="49:30">av_samples_set_silence</name><argument_list pos:start="49:31" pos:end="53:47">(<argument pos:start="49:32" pos:end="49:56"><expr pos:start="49:32" pos:end="49:56"><name pos:start="49:32" pos:end="49:56"><name pos:start="49:32" pos:end="49:41">outsamples</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:56">extended_data</name></name></expr></argument>, <argument pos:start="49:59" pos:end="49:89"><expr pos:start="49:59" pos:end="49:89"><name pos:start="49:59" pos:end="49:72">nb_out_samples</name> <operator pos:start="49:74" pos:end="49:74">-</operator> <name pos:start="49:76" pos:end="49:89">nb_pad_samples</name></expr></argument>,

                               <argument pos:start="51:32" pos:end="51:45"><expr pos:start="51:32" pos:end="51:45"><name pos:start="51:32" pos:end="51:45">nb_pad_samples</name></expr></argument>, <argument pos:start="51:48" pos:end="51:105"><expr pos:start="51:48" pos:end="51:105"><call pos:start="51:48" pos:end="51:105"><name pos:start="51:48" pos:end="51:80">av_get_channel_layout_nb_channels</name><argument_list pos:start="51:81" pos:end="51:105">(<argument pos:start="51:82" pos:end="51:104"><expr pos:start="51:82" pos:end="51:104"><name pos:start="51:82" pos:end="51:104"><name pos:start="51:82" pos:end="51:88">outlink</name><operator pos:start="51:89" pos:end="51:90">-&gt;</operator><name pos:start="51:91" pos:end="51:104">channel_layout</name></name></expr></argument>)</argument_list></call></expr></argument>,

                               <argument pos:start="53:32" pos:end="53:46"><expr pos:start="53:32" pos:end="53:46"><name pos:start="53:32" pos:end="53:46"><name pos:start="53:32" pos:end="53:38">outlink</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:46">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:48"><expr pos:start="55:5" pos:end="55:47"><name pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:14">outsamples</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:26">nb_samples</name></name>     <operator pos:start="55:32" pos:end="55:32">=</operator> <name pos:start="55:34" pos:end="55:47">nb_out_samples</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:57"><expr pos:start="57:5" pos:end="57:56"><name pos:start="57:5" pos:end="57:30"><name pos:start="57:5" pos:end="57:14">outsamples</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:30">channel_layout</name></name> <operator pos:start="57:32" pos:end="57:32">=</operator> <name pos:start="57:34" pos:end="57:56"><name pos:start="57:34" pos:end="57:40">outlink</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:56">channel_layout</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:54"><expr pos:start="59:5" pos:end="59:53"><name pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:14">outsamples</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:27">sample_rate</name></name>    <operator pos:start="59:32" pos:end="59:32">=</operator> <name pos:start="59:34" pos:end="59:53"><name pos:start="59:34" pos:end="59:40">outlink</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:53">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:41"><expr pos:start="61:5" pos:end="61:40"><name pos:start="61:5" pos:end="61:19"><name pos:start="61:5" pos:end="61:14">outsamples</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:19">pts</name></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:40"><name pos:start="61:23" pos:end="61:26">asns</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:40">next_out_pts</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="67:45"><if pos:start="65:5" pos:end="67:45">if <condition pos:start="65:8" pos:end="65:45">(<expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:12">asns</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:26">next_out_pts</name></name> <operator pos:start="65:28" pos:end="65:29">!=</operator> <name pos:start="65:31" pos:end="65:44">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:45"><block_content pos:start="67:9" pos:end="67:45">

        <expr_stmt pos:start="67:9" pos:end="67:45"><expr pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:12">asns</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:26">next_out_pts</name></name> <operator pos:start="67:28" pos:end="67:29">+=</operator> <name pos:start="67:31" pos:end="67:44">nb_out_samples</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:47"><expr pos:start="71:5" pos:end="71:46"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:46"><name pos:start="71:11" pos:end="71:25">ff_filter_frame</name><argument_list pos:start="71:26" pos:end="71:46">(<argument pos:start="71:27" pos:end="71:33"><expr pos:start="71:27" pos:end="71:33"><name pos:start="71:27" pos:end="71:33">outlink</name></expr></argument>, <argument pos:start="71:36" pos:end="71:45"><expr pos:start="71:36" pos:end="71:45"><name pos:start="71:36" pos:end="71:45">outsamples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:19"><if pos:start="73:5" pos:end="75:19">if <condition pos:start="73:8" pos:end="73:16">(<expr pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">&lt;</operator> <literal type="number" pos:start="73:15" pos:end="73:15">0</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:19"><block_content pos:start="75:9" pos:end="75:19">

        <return pos:start="75:9" pos:end="75:19">return <expr pos:start="75:16" pos:end="75:18"><name pos:start="75:16" pos:end="75:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:29"><expr pos:start="77:5" pos:end="77:28"><name pos:start="77:5" pos:end="77:24"><name pos:start="77:5" pos:end="77:8">asns</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:24">req_fullfilled</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <literal type="number" pos:start="77:28" pos:end="77:28">1</literal></expr>;</expr_stmt>

    <return pos:start="79:5" pos:end="79:26">return <expr pos:start="79:12" pos:end="79:25"><name pos:start="79:12" pos:end="79:25">nb_out_samples</name></expr>;</return>

</block_content>}</block></function>
</unit>
