<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8765.c" pos:tabs="8"><function pos:start="1:1" pos:end="269:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:34">vc1_decode_init</name><parameter_list pos:start="1:35" pos:end="1:57">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="269:1">{<block_content pos:start="5:5" pos:end="267:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VC1Context</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">v</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:26">v</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type> <name pos:start="9:19" pos:end="9:20">gb</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:52">/* save the container output size for WMImage */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:5">v</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:19">output_width</name></name>  <operator pos:start="15:22" pos:end="15:22">=</operator> <name pos:start="15:24" pos:end="15:35"><name pos:start="15:24" pos:end="15:28">avctx</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:35">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:5">v</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:20">output_height</name></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <name pos:start="17:24" pos:end="17:36"><name pos:start="17:24" pos:end="17:28">avctx</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:36">height</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:52">(<expr pos:start="21:9" pos:end="21:51"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:30"><name pos:start="21:10" pos:end="21:14">avctx</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:30">extradata_size</name></name> <operator pos:start="21:32" pos:end="21:33">||</operator> <operator pos:start="21:35" pos:end="21:35">!</operator><name pos:start="21:36" pos:end="21:51"><name pos:start="21:36" pos:end="21:40">avctx</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:51">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:42"><if pos:start="25:5" pos:end="27:70">if <condition pos:start="25:8" pos:end="25:45">(<expr pos:start="25:9" pos:end="25:44"><operator pos:start="25:9" pos:end="25:9">!</operator><operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:22"><name pos:start="25:11" pos:end="25:15">avctx</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:22">flags</name></name> <operator pos:start="25:24" pos:end="25:24">&amp;</operator> <name pos:start="25:26" pos:end="25:43">AV_CODEC_FLAG_GRAY</name><operator pos:start="25:44" pos:end="25:44">)</operator></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:70"><block_content pos:start="27:9" pos:end="27:70">

        <expr_stmt pos:start="27:9" pos:end="27:70"><expr pos:start="27:9" pos:end="27:69"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:22">pix_fmt</name></name> <operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:69"><name pos:start="27:26" pos:end="27:38">ff_get_format</name><argument_list pos:start="27:39" pos:end="27:69">(<argument pos:start="27:40" pos:end="27:44"><expr pos:start="27:40" pos:end="27:44"><name pos:start="27:40" pos:end="27:44">avctx</name></expr></argument>, <argument pos:start="27:47" pos:end="27:68"><expr pos:start="27:47" pos:end="27:68"><name pos:start="27:47" pos:end="27:68"><name pos:start="27:47" pos:end="27:51">avctx</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:58">codec</name><operator pos:start="27:59" pos:end="27:60">-&gt;</operator><name pos:start="27:61" pos:end="27:68">pix_fmts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="29:5" pos:end="31:42">else<block type="pseudo" pos:start="31:9" pos:end="31:42"><block_content pos:start="31:9" pos:end="31:42">

        <expr_stmt pos:start="31:9" pos:end="31:42"><expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:13">avctx</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:22">pix_fmt</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <name pos:start="31:26" pos:end="31:41">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:5">v</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:8">s</name><operator pos:start="33:9" pos:end="33:9">.</operator><name pos:start="33:10" pos:end="33:14">avctx</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:22">avctx</name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:34">(<expr pos:start="37:9" pos:end="37:33"><call pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:26">ff_vc1_init_common</name><argument_list pos:start="37:27" pos:end="37:29">(<argument pos:start="37:28" pos:end="37:28"><expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">v</name></expr></argument>)</argument_list></call> <operator pos:start="37:31" pos:end="37:31">&lt;</operator> <literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><call pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:20">ff_blockdsp_init</name><argument_list pos:start="41:21" pos:end="41:37">(<argument pos:start="41:22" pos:end="41:29"><expr pos:start="41:22" pos:end="41:29"><operator pos:start="41:22" pos:end="41:22">&amp;</operator><name pos:start="41:23" pos:end="41:29"><name pos:start="41:23" pos:end="41:23">s</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:29">bdsp</name></name></expr></argument>, <argument pos:start="41:32" pos:end="41:36"><expr pos:start="41:32" pos:end="41:36"><name pos:start="41:32" pos:end="41:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><call pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:22">ff_h264chroma_init</name><argument_list pos:start="43:23" pos:end="43:41">(<argument pos:start="43:24" pos:end="43:37"><expr pos:start="43:24" pos:end="43:37"><operator pos:start="43:24" pos:end="43:24">&amp;</operator><name pos:start="43:25" pos:end="43:37"><name pos:start="43:25" pos:end="43:25">v</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:37">h264chroma</name></name></expr></argument>, <argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><literal type="number" pos:start="43:40" pos:end="43:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><call pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:19">ff_qpeldsp_init</name><argument_list pos:start="45:20" pos:end="45:29">(<argument pos:start="45:21" pos:end="45:28"><expr pos:start="45:21" pos:end="45:28"><operator pos:start="45:21" pos:end="45:21">&amp;</operator><name pos:start="45:22" pos:end="45:28"><name pos:start="45:22" pos:end="45:22">s</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:28">qdsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="181:5"><if pos:start="49:5" pos:end="89:5">if <condition pos:start="49:8" pos:end="49:88">(<expr pos:start="49:9" pos:end="49:87"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:13">avctx</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:23">codec_id</name></name> <operator pos:start="49:25" pos:end="49:26">==</operator> <name pos:start="49:28" pos:end="49:43">AV_CODEC_ID_WMV3</name> <operator pos:start="49:45" pos:end="49:46">||</operator> <name pos:start="49:48" pos:end="49:62"><name pos:start="49:48" pos:end="49:52">avctx</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:62">codec_id</name></name> <operator pos:start="49:64" pos:end="49:65">==</operator> <name pos:start="49:67" pos:end="49:87">AV_CODEC_ID_WMV3IMAGE</name></expr>)</condition> <block pos:start="49:90" pos:end="89:5">{<block_content pos:start="51:9" pos:end="87:9">

        <decl_stmt pos:start="51:9" pos:end="51:22"><decl pos:start="51:9" pos:end="51:21"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:17">count</name> <init pos:start="51:19" pos:end="51:21">= <expr pos:start="51:21" pos:end="51:21"><literal type="number" pos:start="51:21" pos:end="51:21">0</literal></expr></init></decl>;</decl_stmt>



        <comment type="line" pos:start="55:9" pos:end="55:72">// looks like WMV3 has a sequence header stored in the extradata</comment>

        <comment type="line" pos:start="57:9" pos:end="57:65">// advanced sequence header may be before the first frame</comment>

        <comment type="line" pos:start="59:9" pos:end="59:72">// the last byte of the extradata is a version number, 1 for the</comment>

        <comment type="line" pos:start="61:9" pos:end="61:32">// samples we can decode</comment>



        <expr_stmt pos:start="65:9" pos:end="65:70"><expr pos:start="65:9" pos:end="65:69"><call pos:start="65:9" pos:end="65:69"><name pos:start="65:9" pos:end="65:21">init_get_bits</name><argument_list pos:start="65:22" pos:end="65:69">(<argument pos:start="65:23" pos:end="65:25"><expr pos:start="65:23" pos:end="65:25"><operator pos:start="65:23" pos:end="65:23">&amp;</operator><name pos:start="65:24" pos:end="65:25">gb</name></expr></argument>, <argument pos:start="65:28" pos:end="65:43"><expr pos:start="65:28" pos:end="65:43"><name pos:start="65:28" pos:end="65:43"><name pos:start="65:28" pos:end="65:32">avctx</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:43">extradata</name></name></expr></argument>, <argument pos:start="65:46" pos:end="65:68"><expr pos:start="65:46" pos:end="65:68"><name pos:start="65:46" pos:end="65:66"><name pos:start="65:46" pos:end="65:50">avctx</name><operator pos:start="65:51" pos:end="65:52">-&gt;</operator><name pos:start="65:53" pos:end="65:66">extradata_size</name></name><operator pos:start="65:67" pos:end="65:67">*</operator><literal type="number" pos:start="65:68" pos:end="65:68">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="69:9" pos:end="71:20"><if pos:start="69:9" pos:end="71:20">if <condition pos:start="69:12" pos:end="69:61">(<expr pos:start="69:13" pos:end="69:60"><call pos:start="69:13" pos:end="69:56"><name pos:start="69:13" pos:end="69:41">ff_vc1_decode_sequence_header</name><argument_list pos:start="69:42" pos:end="69:56">(<argument pos:start="69:43" pos:end="69:47"><expr pos:start="69:43" pos:end="69:47"><name pos:start="69:43" pos:end="69:47">avctx</name></expr></argument>, <argument pos:start="69:50" pos:end="69:50"><expr pos:start="69:50" pos:end="69:50"><name pos:start="69:50" pos:end="69:50">v</name></expr></argument>, <argument pos:start="69:53" pos:end="69:55"><expr pos:start="69:53" pos:end="69:55"><operator pos:start="69:53" pos:end="69:53">&amp;</operator><name pos:start="69:54" pos:end="69:55">gb</name></expr></argument>)</argument_list></call> <operator pos:start="69:58" pos:end="69:58">&lt;</operator> <literal type="number" pos:start="69:60" pos:end="69:60">0</literal></expr>)</condition><block type="pseudo" pos:start="71:11" pos:end="71:20"><block_content pos:start="71:11" pos:end="71:20">

          <return pos:start="71:11" pos:end="71:20">return <expr pos:start="71:18" pos:end="71:19"><operator pos:start="71:18" pos:end="71:18">-</operator><literal type="number" pos:start="71:19" pos:end="71:19">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:62"><expr pos:start="75:9" pos:end="75:61"><name pos:start="75:9" pos:end="75:13">count</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <name pos:start="75:17" pos:end="75:37"><name pos:start="75:17" pos:end="75:21">avctx</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:37">extradata_size</name></name><operator pos:start="75:38" pos:end="75:38">*</operator><literal type="number" pos:start="75:39" pos:end="75:41">8</literal> <operator pos:start="75:41" pos:end="75:41">-</operator> <call pos:start="75:43" pos:end="75:61"><name pos:start="75:43" pos:end="75:56">get_bits_count</name><argument_list pos:start="75:57" pos:end="75:61">(<argument pos:start="75:58" pos:end="75:60"><expr pos:start="75:58" pos:end="75:60"><operator pos:start="75:58" pos:end="75:58">&amp;</operator><name pos:start="75:59" pos:end="75:60">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="87:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:22">(<expr pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:17">count</name> <operator pos:start="77:19" pos:end="77:19">&gt;</operator> <literal type="number" pos:start="77:21" pos:end="77:21">0</literal></expr>)</condition> <block pos:start="77:24" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:64">

            <expr_stmt pos:start="79:13" pos:end="81:64"><expr pos:start="79:13" pos:end="81:63"><call pos:start="79:13" pos:end="81:63"><name pos:start="79:13" pos:end="79:18">av_log</name><argument_list pos:start="79:19" pos:end="81:63">(<argument pos:start="79:20" pos:end="79:24"><expr pos:start="79:20" pos:end="79:24"><name pos:start="79:20" pos:end="79:24">avctx</name></expr></argument>, <argument pos:start="79:27" pos:end="79:37"><expr pos:start="79:27" pos:end="79:37"><name pos:start="79:27" pos:end="79:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="79:40" pos:end="79:78"><expr pos:start="79:40" pos:end="79:78"><literal type="string" pos:start="79:40" pos:end="79:78">"Extra data: %i bits left, value: %X\n"</literal></expr></argument>,

                   <argument pos:start="81:20" pos:end="81:24"><expr pos:start="81:20" pos:end="81:24"><name pos:start="81:20" pos:end="81:24">count</name></expr></argument>, <argument pos:start="81:27" pos:end="81:62"><expr pos:start="81:27" pos:end="81:62"><call pos:start="81:27" pos:end="81:62"><name pos:start="81:27" pos:end="81:39">get_bits_long</name><argument_list pos:start="81:40" pos:end="81:62">(<argument pos:start="81:41" pos:end="81:43"><expr pos:start="81:41" pos:end="81:43"><operator pos:start="81:41" pos:end="81:41">&amp;</operator><name pos:start="81:42" pos:end="81:43">gb</name></expr></argument>, <argument pos:start="81:46" pos:end="81:61"><expr pos:start="81:46" pos:end="81:61"><call pos:start="81:46" pos:end="81:61"><name pos:start="81:46" pos:end="81:50">FFMIN</name><argument_list pos:start="81:51" pos:end="81:61">(<argument pos:start="81:52" pos:end="81:56"><expr pos:start="81:52" pos:end="81:56"><name pos:start="81:52" pos:end="81:56">count</name></expr></argument>, <argument pos:start="81:59" pos:end="81:60"><expr pos:start="81:59" pos:end="81:60"><literal type="number" pos:start="81:59" pos:end="81:60">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="83:11" pos:end="87:9">else if <condition pos:start="83:19" pos:end="83:29">(<expr pos:start="83:20" pos:end="83:28"><name pos:start="83:20" pos:end="83:24">count</name> <operator pos:start="83:26" pos:end="83:26">&lt;</operator> <literal type="number" pos:start="83:28" pos:end="83:28">0</literal></expr>)</condition> <block pos:start="83:31" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:77">

            <expr_stmt pos:start="85:13" pos:end="85:77"><expr pos:start="85:13" pos:end="85:76"><call pos:start="85:13" pos:end="85:76"><name pos:start="85:13" pos:end="85:18">av_log</name><argument_list pos:start="85:19" pos:end="85:76">(<argument pos:start="85:20" pos:end="85:24"><expr pos:start="85:20" pos:end="85:24"><name pos:start="85:20" pos:end="85:24">avctx</name></expr></argument>, <argument pos:start="85:27" pos:end="85:37"><expr pos:start="85:27" pos:end="85:37"><name pos:start="85:27" pos:end="85:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="85:40" pos:end="85:67"><expr pos:start="85:40" pos:end="85:67"><literal type="string" pos:start="85:40" pos:end="85:67">"Read %i bits in overflow\n"</literal></expr></argument>, <argument pos:start="85:70" pos:end="85:75"><expr pos:start="85:70" pos:end="85:75"><operator pos:start="85:70" pos:end="85:70">-</operator><name pos:start="85:71" pos:end="85:75">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="181:5">else <block pos:start="89:12" pos:end="181:5">{<block_content pos:start="91:9" pos:end="179:66"> <comment type="line" pos:start="89:14" pos:end="89:29">// VC1/WVC1/WVP2</comment>

        <decl_stmt pos:start="91:9" pos:end="91:48"><decl pos:start="91:9" pos:end="91:47"><type pos:start="91:9" pos:end="91:23"><specifier pos:start="91:9" pos:end="91:13">const</specifier> <name pos:start="91:15" pos:end="91:21">uint8_t</name> <modifier pos:start="91:23" pos:end="91:23">*</modifier></type><name pos:start="91:24" pos:end="91:28">start</name> <init pos:start="91:30" pos:end="91:47">= <expr pos:start="91:32" pos:end="91:47"><name pos:start="91:32" pos:end="91:47"><name pos:start="91:32" pos:end="91:36">avctx</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:47">extradata</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="93:9" pos:end="93:64"><decl pos:start="93:9" pos:end="93:63"><type pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:15">uint8_t</name> <modifier pos:start="93:17" pos:end="93:17">*</modifier></type><name pos:start="93:18" pos:end="93:20">end</name> <init pos:start="93:22" pos:end="93:63">= <expr pos:start="93:24" pos:end="93:63"><name pos:start="93:24" pos:end="93:39"><name pos:start="93:24" pos:end="93:28">avctx</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:39">extradata</name></name> <operator pos:start="93:41" pos:end="93:41">+</operator> <name pos:start="93:43" pos:end="93:63"><name pos:start="93:43" pos:end="93:47">avctx</name><operator pos:start="93:48" pos:end="93:49">-&gt;</operator><name pos:start="93:50" pos:end="93:63">extradata_size</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:28"><decl pos:start="95:9" pos:end="95:27"><type pos:start="95:9" pos:end="95:23"><specifier pos:start="95:9" pos:end="95:13">const</specifier> <name pos:start="95:15" pos:end="95:21">uint8_t</name> <modifier pos:start="95:23" pos:end="95:23">*</modifier></type><name pos:start="95:24" pos:end="95:27">next</name></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:28"><decl pos:start="97:9" pos:end="97:16"><type pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:11">int</name></type> <name pos:start="97:13" pos:end="97:16">size</name></decl>, <decl pos:start="97:19" pos:end="97:27"><type ref="prev" pos:start="97:9" pos:end="97:11"/><name pos:start="97:19" pos:end="97:27">buf2_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="99:9" pos:end="99:29"><decl pos:start="99:9" pos:end="99:28"><type pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:15">uint8_t</name> <modifier pos:start="99:17" pos:end="99:17">*</modifier></type><name pos:start="99:18" pos:end="99:21">buf2</name> <init pos:start="99:23" pos:end="99:28">= <expr pos:start="99:25" pos:end="99:28"><name pos:start="99:25" pos:end="99:28">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="101:52"><decl pos:start="101:9" pos:end="101:31"><type pos:start="101:9" pos:end="101:11"><name pos:start="101:9" pos:end="101:11">int</name></type> <name pos:start="101:13" pos:end="101:27">seq_initialized</name> <init pos:start="101:29" pos:end="101:31">= <expr pos:start="101:31" pos:end="101:31"><literal type="number" pos:start="101:31" pos:end="101:31">0</literal></expr></init></decl>, <decl pos:start="101:34" pos:end="101:51"><type ref="prev" pos:start="101:9" pos:end="101:11"/><name pos:start="101:34" pos:end="101:47">ep_initialized</name> <init pos:start="101:49" pos:end="101:51">= <expr pos:start="101:51" pos:end="101:51"><literal type="number" pos:start="101:51" pos:end="101:51">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:39">(<expr pos:start="105:13" pos:end="105:38"><name pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:17">avctx</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:33">extradata_size</name></name> <operator pos:start="105:35" pos:end="105:35">&lt;</operator> <literal type="number" pos:start="105:37" pos:end="105:38">16</literal></expr>)</condition> <block pos:start="105:41" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:22">

            <expr_stmt pos:start="107:13" pos:end="107:97"><expr pos:start="107:13" pos:end="107:96"><call pos:start="107:13" pos:end="107:96"><name pos:start="107:13" pos:end="107:18">av_log</name><argument_list pos:start="107:19" pos:end="107:96">(<argument pos:start="107:20" pos:end="107:24"><expr pos:start="107:20" pos:end="107:24"><name pos:start="107:20" pos:end="107:24">avctx</name></expr></argument>, <argument pos:start="107:27" pos:end="107:38"><expr pos:start="107:27" pos:end="107:38"><name pos:start="107:27" pos:end="107:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:41" pos:end="107:72"><expr pos:start="107:41" pos:end="107:72"><literal type="string" pos:start="107:41" pos:end="107:72">"Extradata size too small: %i\n"</literal></expr></argument>, <argument pos:start="107:75" pos:end="107:95"><expr pos:start="107:75" pos:end="107:95"><name pos:start="107:75" pos:end="107:95"><name pos:start="107:75" pos:end="107:79">avctx</name><operator pos:start="107:80" pos:end="107:81">-&gt;</operator><name pos:start="107:82" pos:end="107:95">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:22">return <expr pos:start="109:20" pos:end="109:21"><operator pos:start="109:20" pos:end="109:20">-</operator><literal type="number" pos:start="109:21" pos:end="109:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:81"><expr pos:start="115:9" pos:end="115:80"><name pos:start="115:9" pos:end="115:12">buf2</name>  <operator pos:start="115:15" pos:end="115:15">=</operator> <call pos:start="115:17" pos:end="115:80"><name pos:start="115:17" pos:end="115:26">av_mallocz</name><argument_list pos:start="115:27" pos:end="115:80">(<argument pos:start="115:28" pos:end="115:79"><expr pos:start="115:28" pos:end="115:79"><name pos:start="115:28" pos:end="115:48"><name pos:start="115:28" pos:end="115:32">avctx</name><operator pos:start="115:33" pos:end="115:34">-&gt;</operator><name pos:start="115:35" pos:end="115:48">extradata_size</name></name> <operator pos:start="115:50" pos:end="115:50">+</operator> <name pos:start="115:52" pos:end="115:79">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:45"><expr pos:start="117:9" pos:end="117:44"><name pos:start="117:9" pos:end="117:13">start</name> <operator pos:start="117:15" pos:end="117:15">=</operator> <call pos:start="117:17" pos:end="117:44"><name pos:start="117:17" pos:end="117:32">find_next_marker</name><argument_list pos:start="117:33" pos:end="117:44">(<argument pos:start="117:34" pos:end="117:38"><expr pos:start="117:34" pos:end="117:38"><name pos:start="117:34" pos:end="117:38">start</name></expr></argument>, <argument pos:start="117:41" pos:end="117:43"><expr pos:start="117:41" pos:end="117:43"><name pos:start="117:41" pos:end="117:43">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="117:47" pos:end="117:110">// in WVC1 extradata first byte is its size, but can be 0 in mkv</comment>

        <expr_stmt pos:start="119:9" pos:end="119:22"><expr pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:12">next</name>  <operator pos:start="119:15" pos:end="119:15">=</operator> <name pos:start="119:17" pos:end="119:21">start</name></expr>;</expr_stmt>

        <for pos:start="121:9" pos:end="167:9">for <control pos:start="121:13" pos:end="121:40">(<init pos:start="121:14" pos:end="121:14">;</init> <condition pos:start="121:16" pos:end="121:26"><expr pos:start="121:16" pos:end="121:25"><name pos:start="121:16" pos:end="121:19">next</name> <operator pos:start="121:21" pos:end="121:21">&lt;</operator> <name pos:start="121:23" pos:end="121:25">end</name></expr>;</condition> <incr pos:start="121:28" pos:end="121:39"><expr pos:start="121:28" pos:end="121:39"><name pos:start="121:28" pos:end="121:32">start</name> <operator pos:start="121:34" pos:end="121:34">=</operator> <name pos:start="121:36" pos:end="121:39">next</name></expr></incr>)</control> <block pos:start="121:42" pos:end="167:9">{<block_content pos:start="123:13" pos:end="165:13">

            <expr_stmt pos:start="123:13" pos:end="123:52"><expr pos:start="123:13" pos:end="123:51"><name pos:start="123:13" pos:end="123:16">next</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <call pos:start="123:20" pos:end="123:51"><name pos:start="123:20" pos:end="123:35">find_next_marker</name><argument_list pos:start="123:36" pos:end="123:51">(<argument pos:start="123:37" pos:end="123:45"><expr pos:start="123:37" pos:end="123:45"><name pos:start="123:37" pos:end="123:41">start</name> <operator pos:start="123:43" pos:end="123:43">+</operator> <literal type="number" pos:start="123:45" pos:end="123:45">4</literal></expr></argument>, <argument pos:start="123:48" pos:end="123:50"><expr pos:start="123:48" pos:end="123:50"><name pos:start="123:48" pos:end="123:50">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:36"><expr pos:start="125:13" pos:end="125:35"><name pos:start="125:13" pos:end="125:16">size</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:23">next</name> <operator pos:start="125:25" pos:end="125:25">-</operator> <name pos:start="125:27" pos:end="125:31">start</name> <operator pos:start="125:33" pos:end="125:33">-</operator> <literal type="number" pos:start="125:35" pos:end="125:35">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="129:25"><if pos:start="127:13" pos:end="129:25">if <condition pos:start="127:16" pos:end="127:26">(<expr pos:start="127:17" pos:end="127:25"><name pos:start="127:17" pos:end="127:20">size</name> <operator pos:start="127:22" pos:end="127:23">&lt;=</operator> <literal type="number" pos:start="127:25" pos:end="127:25">0</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:25"><block_content pos:start="129:17" pos:end="129:25">

                <continue pos:start="129:17" pos:end="129:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:67"><expr pos:start="131:13" pos:end="131:66"><name pos:start="131:13" pos:end="131:21">buf2_size</name> <operator pos:start="131:23" pos:end="131:23">=</operator> <call pos:start="131:25" pos:end="131:66"><name pos:start="131:25" pos:end="131:43">vc1_unescape_buffer</name><argument_list pos:start="131:44" pos:end="131:66">(<argument pos:start="131:45" pos:end="131:53"><expr pos:start="131:45" pos:end="131:53"><name pos:start="131:45" pos:end="131:49">start</name> <operator pos:start="131:51" pos:end="131:51">+</operator> <literal type="number" pos:start="131:53" pos:end="131:53">4</literal></expr></argument>, <argument pos:start="131:56" pos:end="131:59"><expr pos:start="131:56" pos:end="131:59"><name pos:start="131:56" pos:end="131:59">size</name></expr></argument>, <argument pos:start="131:62" pos:end="131:65"><expr pos:start="131:62" pos:end="131:65"><name pos:start="131:62" pos:end="131:65">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:52"><expr pos:start="133:13" pos:end="133:51"><call pos:start="133:13" pos:end="133:51"><name pos:start="133:13" pos:end="133:25">init_get_bits</name><argument_list pos:start="133:26" pos:end="133:51">(<argument pos:start="133:27" pos:end="133:29"><expr pos:start="133:27" pos:end="133:29"><operator pos:start="133:27" pos:end="133:27">&amp;</operator><name pos:start="133:28" pos:end="133:29">gb</name></expr></argument>, <argument pos:start="133:32" pos:end="133:35"><expr pos:start="133:32" pos:end="133:35"><name pos:start="133:32" pos:end="133:35">buf2</name></expr></argument>, <argument pos:start="133:38" pos:end="133:50"><expr pos:start="133:38" pos:end="133:50"><name pos:start="133:38" pos:end="133:46">buf2_size</name> <operator pos:start="133:48" pos:end="133:48">*</operator> <literal type="number" pos:start="133:50" pos:end="133:50">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="135:13" pos:end="165:13">switch <condition pos:start="135:20" pos:end="135:35">(<expr pos:start="135:21" pos:end="135:34"><call pos:start="135:21" pos:end="135:34"><name pos:start="135:21" pos:end="135:27">AV_RB32</name><argument_list pos:start="135:28" pos:end="135:34">(<argument pos:start="135:29" pos:end="135:33"><expr pos:start="135:29" pos:end="135:33"><name pos:start="135:29" pos:end="135:33">start</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:37" pos:end="165:13">{<block_content pos:start="137:13" pos:end="163:22">

            <case pos:start="137:13" pos:end="137:33">case <expr pos:start="137:18" pos:end="137:32"><name pos:start="137:18" pos:end="137:32">VC1_CODE_SEQHDR</name></expr>:</case>

                <if_stmt pos:start="139:17" pos:end="145:17"><if pos:start="139:17" pos:end="145:17">if <condition pos:start="139:20" pos:end="139:69">(<expr pos:start="139:21" pos:end="139:68"><call pos:start="139:21" pos:end="139:64"><name pos:start="139:21" pos:end="139:49">ff_vc1_decode_sequence_header</name><argument_list pos:start="139:50" pos:end="139:64">(<argument pos:start="139:51" pos:end="139:55"><expr pos:start="139:51" pos:end="139:55"><name pos:start="139:51" pos:end="139:55">avctx</name></expr></argument>, <argument pos:start="139:58" pos:end="139:58"><expr pos:start="139:58" pos:end="139:58"><name pos:start="139:58" pos:end="139:58">v</name></expr></argument>, <argument pos:start="139:61" pos:end="139:63"><expr pos:start="139:61" pos:end="139:63"><operator pos:start="139:61" pos:end="139:61">&amp;</operator><name pos:start="139:62" pos:end="139:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="139:66" pos:end="139:66">&lt;</operator> <literal type="number" pos:start="139:68" pos:end="139:68">0</literal></expr>)</condition> <block pos:start="139:71" pos:end="145:17">{<block_content pos:start="141:21" pos:end="143:30">

                    <expr_stmt pos:start="141:21" pos:end="141:34"><expr pos:start="141:21" pos:end="141:33"><call pos:start="141:21" pos:end="141:33"><name pos:start="141:21" pos:end="141:27">av_free</name><argument_list pos:start="141:28" pos:end="141:33">(<argument pos:start="141:29" pos:end="141:32"><expr pos:start="141:29" pos:end="141:32"><name pos:start="141:29" pos:end="141:32">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="143:21" pos:end="143:30">return <expr pos:start="143:28" pos:end="143:29"><operator pos:start="143:28" pos:end="143:28">-</operator><literal type="number" pos:start="143:29" pos:end="143:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:36"><expr pos:start="147:17" pos:end="147:35"><name pos:start="147:17" pos:end="147:31">seq_initialized</name> <operator pos:start="147:33" pos:end="147:33">=</operator> <literal type="number" pos:start="147:35" pos:end="147:35">1</literal></expr>;</expr_stmt>

                <break pos:start="149:17" pos:end="149:22">break;</break>

            <case pos:start="151:13" pos:end="151:37">case <expr pos:start="151:18" pos:end="151:36"><name pos:start="151:18" pos:end="151:36">VC1_CODE_ENTRYPOINT</name></expr>:</case>

                <if_stmt pos:start="153:17" pos:end="159:17"><if pos:start="153:17" pos:end="159:17">if <condition pos:start="153:20" pos:end="153:65">(<expr pos:start="153:21" pos:end="153:64"><call pos:start="153:21" pos:end="153:60"><name pos:start="153:21" pos:end="153:45">ff_vc1_decode_entry_point</name><argument_list pos:start="153:46" pos:end="153:60">(<argument pos:start="153:47" pos:end="153:51"><expr pos:start="153:47" pos:end="153:51"><name pos:start="153:47" pos:end="153:51">avctx</name></expr></argument>, <argument pos:start="153:54" pos:end="153:54"><expr pos:start="153:54" pos:end="153:54"><name pos:start="153:54" pos:end="153:54">v</name></expr></argument>, <argument pos:start="153:57" pos:end="153:59"><expr pos:start="153:57" pos:end="153:59"><operator pos:start="153:57" pos:end="153:57">&amp;</operator><name pos:start="153:58" pos:end="153:59">gb</name></expr></argument>)</argument_list></call> <operator pos:start="153:62" pos:end="153:62">&lt;</operator> <literal type="number" pos:start="153:64" pos:end="153:64">0</literal></expr>)</condition> <block pos:start="153:67" pos:end="159:17">{<block_content pos:start="155:21" pos:end="157:30">

                    <expr_stmt pos:start="155:21" pos:end="155:34"><expr pos:start="155:21" pos:end="155:33"><call pos:start="155:21" pos:end="155:33"><name pos:start="155:21" pos:end="155:27">av_free</name><argument_list pos:start="155:28" pos:end="155:33">(<argument pos:start="155:29" pos:end="155:32"><expr pos:start="155:29" pos:end="155:32"><name pos:start="155:29" pos:end="155:32">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="157:21" pos:end="157:30">return <expr pos:start="157:28" pos:end="157:29"><operator pos:start="157:28" pos:end="157:28">-</operator><literal type="number" pos:start="157:29" pos:end="157:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:35"><expr pos:start="161:17" pos:end="161:34"><name pos:start="161:17" pos:end="161:30">ep_initialized</name> <operator pos:start="161:32" pos:end="161:32">=</operator> <literal type="number" pos:start="161:34" pos:end="161:34">1</literal></expr>;</expr_stmt>

                <break pos:start="163:17" pos:end="163:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></for>

        <expr_stmt pos:start="169:9" pos:end="169:22"><expr pos:start="169:9" pos:end="169:21"><call pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:15">av_free</name><argument_list pos:start="169:16" pos:end="169:21">(<argument pos:start="169:17" pos:end="169:20"><expr pos:start="169:17" pos:end="169:20"><name pos:start="169:17" pos:end="169:20">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="177:9"><if pos:start="171:9" pos:end="177:9">if <condition pos:start="171:12" pos:end="171:48">(<expr pos:start="171:13" pos:end="171:47"><operator pos:start="171:13" pos:end="171:13">!</operator><name pos:start="171:14" pos:end="171:28">seq_initialized</name> <operator pos:start="171:30" pos:end="171:31">||</operator> <operator pos:start="171:33" pos:end="171:33">!</operator><name pos:start="171:34" pos:end="171:47">ep_initialized</name></expr>)</condition> <block pos:start="171:50" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:22">

            <expr_stmt pos:start="173:13" pos:end="173:66"><expr pos:start="173:13" pos:end="173:65"><call pos:start="173:13" pos:end="173:65"><name pos:start="173:13" pos:end="173:18">av_log</name><argument_list pos:start="173:19" pos:end="173:65">(<argument pos:start="173:20" pos:end="173:24"><expr pos:start="173:20" pos:end="173:24"><name pos:start="173:20" pos:end="173:24">avctx</name></expr></argument>, <argument pos:start="173:27" pos:end="173:38"><expr pos:start="173:27" pos:end="173:38"><name pos:start="173:27" pos:end="173:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="173:41" pos:end="173:64"><expr pos:start="173:41" pos:end="173:64"><literal type="string" pos:start="173:41" pos:end="173:64">"Incomplete extradata\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="175:13" pos:end="175:22">return <expr pos:start="175:20" pos:end="175:21"><operator pos:start="175:20" pos:end="175:20">-</operator><literal type="number" pos:start="175:21" pos:end="175:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:66"><expr pos:start="179:9" pos:end="179:65"><name pos:start="179:9" pos:end="179:21"><name pos:start="179:9" pos:end="179:9">v</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:21">res_sprite</name></name> <operator pos:start="179:23" pos:end="179:23">=</operator> <operator pos:start="179:25" pos:end="179:25">(</operator><name pos:start="179:26" pos:end="179:40"><name pos:start="179:26" pos:end="179:30">avctx</name><operator pos:start="179:31" pos:end="179:32">-&gt;</operator><name pos:start="179:33" pos:end="179:40">codec_id</name></name> <operator pos:start="179:42" pos:end="179:43">==</operator> <name pos:start="179:45" pos:end="179:64">AV_CODEC_ID_VC1IMAGE</name><operator pos:start="179:65" pos:end="179:65">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:46"><expr pos:start="185:5" pos:end="185:45"><name pos:start="185:5" pos:end="185:26"><name pos:start="185:5" pos:end="185:5">v</name><operator pos:start="185:6" pos:end="185:7">-&gt;</operator><name pos:start="185:8" pos:end="185:26">sprite_output_frame</name></name> <operator pos:start="185:28" pos:end="185:28">=</operator> <call pos:start="185:30" pos:end="185:45"><name pos:start="185:30" pos:end="185:43">av_frame_alloc</name><argument_list pos:start="185:44" pos:end="185:45">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="187:5" pos:end="189:31"><if pos:start="187:5" pos:end="189:31">if <condition pos:start="187:8" pos:end="187:32">(<expr pos:start="187:9" pos:end="187:31"><operator pos:start="187:9" pos:end="187:9">!</operator><name pos:start="187:10" pos:end="187:31"><name pos:start="187:10" pos:end="187:10">v</name><operator pos:start="187:11" pos:end="187:12">-&gt;</operator><name pos:start="187:13" pos:end="187:31">sprite_output_frame</name></name></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="189:31"><block_content pos:start="189:9" pos:end="189:31">

        <return pos:start="189:9" pos:end="189:31">return <expr pos:start="189:16" pos:end="189:30"><call pos:start="189:16" pos:end="189:30"><name pos:start="189:16" pos:end="189:22">AVERROR</name><argument_list pos:start="189:23" pos:end="189:30">(<argument pos:start="189:24" pos:end="189:29"><expr pos:start="189:24" pos:end="189:29"><name pos:start="189:24" pos:end="189:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:32"><expr pos:start="193:5" pos:end="193:31"><name pos:start="193:5" pos:end="193:18"><name pos:start="193:5" pos:end="193:9">avctx</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:18">profile</name></name> <operator pos:start="193:20" pos:end="193:20">=</operator> <name pos:start="193:22" pos:end="193:31"><name pos:start="193:22" pos:end="193:22">v</name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:31">profile</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="195:5" pos:end="197:32"><if pos:start="195:5" pos:end="197:32">if <condition pos:start="195:8" pos:end="195:39">(<expr pos:start="195:9" pos:end="195:38"><name pos:start="195:9" pos:end="195:18"><name pos:start="195:9" pos:end="195:9">v</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:18">profile</name></name> <operator pos:start="195:20" pos:end="195:21">==</operator> <name pos:start="195:23" pos:end="195:38">PROFILE_ADVANCED</name></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="197:32"><block_content pos:start="197:9" pos:end="197:32">

        <expr_stmt pos:start="197:9" pos:end="197:32"><expr pos:start="197:9" pos:end="197:31"><name pos:start="197:9" pos:end="197:20"><name pos:start="197:9" pos:end="197:13">avctx</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:20">level</name></name> <operator pos:start="197:22" pos:end="197:22">=</operator> <name pos:start="197:24" pos:end="197:31"><name pos:start="197:24" pos:end="197:24">v</name><operator pos:start="197:25" pos:end="197:26">-&gt;</operator><name pos:start="197:27" pos:end="197:31">level</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:48"><expr pos:start="201:5" pos:end="201:47"><name pos:start="201:5" pos:end="201:23"><name pos:start="201:5" pos:end="201:9">avctx</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:23">has_b_frames</name></name> <operator pos:start="201:25" pos:end="201:25">=</operator> <operator pos:start="201:27" pos:end="201:27">!</operator><operator pos:start="201:28" pos:end="201:28">!</operator><name pos:start="201:29" pos:end="201:47"><name pos:start="201:29" pos:end="201:33">avctx</name><operator pos:start="201:34" pos:end="201:35">-&gt;</operator><name pos:start="201:36" pos:end="201:47">max_b_frames</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="205:5" pos:end="207:47"><if pos:start="205:5" pos:end="207:47">if <condition pos:start="205:8" pos:end="205:71">(<expr pos:start="205:9" pos:end="205:70"><name pos:start="205:9" pos:end="205:21"><name pos:start="205:9" pos:end="205:9">v</name><operator pos:start="205:10" pos:end="205:11">-&gt;</operator><name pos:start="205:12" pos:end="205:21">color_prim</name></name> <operator pos:start="205:23" pos:end="205:24">==</operator> <literal type="number" pos:start="205:26" pos:end="205:26">1</literal> <operator pos:start="205:28" pos:end="205:29">||</operator> <name pos:start="205:31" pos:end="205:43"><name pos:start="205:31" pos:end="205:31">v</name><operator pos:start="205:32" pos:end="205:33">-&gt;</operator><name pos:start="205:34" pos:end="205:43">color_prim</name></name> <operator pos:start="205:45" pos:end="205:46">==</operator> <literal type="number" pos:start="205:48" pos:end="205:48">5</literal> <operator pos:start="205:50" pos:end="205:51">||</operator> <name pos:start="205:53" pos:end="205:65"><name pos:start="205:53" pos:end="205:53">v</name><operator pos:start="205:54" pos:end="205:55">-&gt;</operator><name pos:start="205:56" pos:end="205:65">color_prim</name></name> <operator pos:start="205:67" pos:end="205:68">==</operator> <literal type="number" pos:start="205:70" pos:end="205:70">6</literal></expr>)</condition><block type="pseudo" pos:start="207:9" pos:end="207:47"><block_content pos:start="207:9" pos:end="207:47">

        <expr_stmt pos:start="207:9" pos:end="207:47"><expr pos:start="207:9" pos:end="207:46"><name pos:start="207:9" pos:end="207:30"><name pos:start="207:9" pos:end="207:13">avctx</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:30">color_primaries</name></name> <operator pos:start="207:32" pos:end="207:32">=</operator> <name pos:start="207:34" pos:end="207:46"><name pos:start="207:34" pos:end="207:34">v</name><operator pos:start="207:35" pos:end="207:36">-&gt;</operator><name pos:start="207:37" pos:end="207:46">color_prim</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="209:5" pos:end="211:44"><if pos:start="209:5" pos:end="211:44">if <condition pos:start="209:8" pos:end="209:55">(<expr pos:start="209:9" pos:end="209:54"><name pos:start="209:9" pos:end="209:24"><name pos:start="209:9" pos:end="209:9">v</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:24">transfer_char</name></name> <operator pos:start="209:26" pos:end="209:27">==</operator> <literal type="number" pos:start="209:29" pos:end="209:29">1</literal> <operator pos:start="209:31" pos:end="209:32">||</operator> <name pos:start="209:34" pos:end="209:49"><name pos:start="209:34" pos:end="209:34">v</name><operator pos:start="209:35" pos:end="209:36">-&gt;</operator><name pos:start="209:37" pos:end="209:49">transfer_char</name></name> <operator pos:start="209:51" pos:end="209:52">==</operator> <literal type="number" pos:start="209:54" pos:end="209:54">7</literal></expr>)</condition><block type="pseudo" pos:start="211:9" pos:end="211:44"><block_content pos:start="211:9" pos:end="211:44">

        <expr_stmt pos:start="211:9" pos:end="211:44"><expr pos:start="211:9" pos:end="211:43"><name pos:start="211:9" pos:end="211:24"><name pos:start="211:9" pos:end="211:13">avctx</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:24">color_trc</name></name> <operator pos:start="211:26" pos:end="211:26">=</operator> <name pos:start="211:28" pos:end="211:43"><name pos:start="211:28" pos:end="211:28">v</name><operator pos:start="211:29" pos:end="211:30">-&gt;</operator><name pos:start="211:31" pos:end="211:43">transfer_char</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="213:5" pos:end="215:43"><if pos:start="213:5" pos:end="215:43">if <condition pos:start="213:8" pos:end="213:74">(<expr pos:start="213:9" pos:end="213:73"><name pos:start="213:9" pos:end="213:22"><name pos:start="213:9" pos:end="213:9">v</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:22">matrix_coef</name></name> <operator pos:start="213:24" pos:end="213:25">==</operator> <literal type="number" pos:start="213:27" pos:end="213:27">1</literal> <operator pos:start="213:29" pos:end="213:30">||</operator> <name pos:start="213:32" pos:end="213:45"><name pos:start="213:32" pos:end="213:32">v</name><operator pos:start="213:33" pos:end="213:34">-&gt;</operator><name pos:start="213:35" pos:end="213:45">matrix_coef</name></name> <operator pos:start="213:47" pos:end="213:48">==</operator> <literal type="number" pos:start="213:50" pos:end="213:50">6</literal> <operator pos:start="213:52" pos:end="213:53">||</operator> <name pos:start="213:55" pos:end="213:68"><name pos:start="213:55" pos:end="213:55">v</name><operator pos:start="213:56" pos:end="213:57">-&gt;</operator><name pos:start="213:58" pos:end="213:68">matrix_coef</name></name> <operator pos:start="213:70" pos:end="213:71">==</operator> <literal type="number" pos:start="213:73" pos:end="213:73">7</literal></expr>)</condition><block type="pseudo" pos:start="215:9" pos:end="215:43"><block_content pos:start="215:9" pos:end="215:43">

        <expr_stmt pos:start="215:9" pos:end="215:43"><expr pos:start="215:9" pos:end="215:42"><name pos:start="215:9" pos:end="215:25"><name pos:start="215:9" pos:end="215:13">avctx</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:25">colorspace</name></name> <operator pos:start="215:27" pos:end="215:27">=</operator> <name pos:start="215:29" pos:end="215:42"><name pos:start="215:29" pos:end="215:29">v</name><operator pos:start="215:30" pos:end="215:31">-&gt;</operator><name pos:start="215:32" pos:end="215:42">matrix_coef</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:51"><expr pos:start="219:5" pos:end="219:50"><name pos:start="219:5" pos:end="219:15"><name pos:start="219:5" pos:end="219:5">s</name><operator pos:start="219:6" pos:end="219:7">-&gt;</operator><name pos:start="219:8" pos:end="219:15">mb_width</name></name>  <operator pos:start="219:18" pos:end="219:18">=</operator> <operator pos:start="219:20" pos:end="219:20">(</operator><name pos:start="219:21" pos:end="219:38"><name pos:start="219:21" pos:end="219:25">avctx</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:38">coded_width</name></name>  <operator pos:start="219:41" pos:end="219:41">+</operator> <literal type="number" pos:start="219:43" pos:end="219:44">15</literal><operator pos:start="219:45" pos:end="219:45">)</operator> <operator pos:start="219:47" pos:end="219:48">&gt;&gt;</operator> <literal type="number" pos:start="219:50" pos:end="219:50">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:51"><expr pos:start="221:5" pos:end="221:50"><name pos:start="221:5" pos:end="221:16"><name pos:start="221:5" pos:end="221:5">s</name><operator pos:start="221:6" pos:end="221:7">-&gt;</operator><name pos:start="221:8" pos:end="221:16">mb_height</name></name> <operator pos:start="221:18" pos:end="221:18">=</operator> <operator pos:start="221:20" pos:end="221:20">(</operator><name pos:start="221:21" pos:end="221:39"><name pos:start="221:21" pos:end="221:25">avctx</name><operator pos:start="221:26" pos:end="221:27">-&gt;</operator><name pos:start="221:28" pos:end="221:39">coded_height</name></name> <operator pos:start="221:41" pos:end="221:41">+</operator> <literal type="number" pos:start="221:43" pos:end="221:44">15</literal><operator pos:start="221:45" pos:end="221:45">)</operator> <operator pos:start="221:47" pos:end="221:48">&gt;&gt;</operator> <literal type="number" pos:start="221:50" pos:end="221:50">4</literal></expr>;</expr_stmt>



    <if_stmt pos:start="225:5" pos:end="237:5"><if pos:start="225:5" pos:end="229:5">if <condition pos:start="225:8" pos:end="225:56">(<expr pos:start="225:9" pos:end="225:55"><name pos:start="225:9" pos:end="225:18"><name pos:start="225:9" pos:end="225:9">v</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:18">profile</name></name> <operator pos:start="225:20" pos:end="225:21">==</operator> <name pos:start="225:23" pos:end="225:38">PROFILE_ADVANCED</name> <operator pos:start="225:40" pos:end="225:41">||</operator> <name pos:start="225:43" pos:end="225:55"><name pos:start="225:43" pos:end="225:43">v</name><operator pos:start="225:44" pos:end="225:45">-&gt;</operator><name pos:start="225:46" pos:end="225:55">res_fasttx</name></name></expr>)</condition> <block pos:start="225:58" pos:end="229:5">{<block_content pos:start="227:9" pos:end="227:45">

        <expr_stmt pos:start="227:9" pos:end="227:45"><expr pos:start="227:9" pos:end="227:44"><call pos:start="227:9" pos:end="227:44"><name pos:start="227:9" pos:end="227:41">ff_vc1_init_transposed_scantables</name><argument_list pos:start="227:42" pos:end="227:44">(<argument pos:start="227:43" pos:end="227:43"><expr pos:start="227:43" pos:end="227:43"><name pos:start="227:43" pos:end="227:43">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="229:7" pos:end="237:5">else <block pos:start="229:12" pos:end="237:5">{<block_content pos:start="231:9" pos:end="235:27">

        <expr_stmt pos:start="231:9" pos:end="231:51"><expr pos:start="231:9" pos:end="231:50"><call pos:start="231:9" pos:end="231:50"><name pos:start="231:9" pos:end="231:14">memcpy</name><argument_list pos:start="231:15" pos:end="231:50">(<argument pos:start="231:16" pos:end="231:24"><expr pos:start="231:16" pos:end="231:24"><name pos:start="231:16" pos:end="231:24"><name pos:start="231:16" pos:end="231:16">v</name><operator pos:start="231:17" pos:end="231:18">-&gt;</operator><name pos:start="231:19" pos:end="231:24">zz_8x8</name></name></expr></argument>, <argument pos:start="231:27" pos:end="231:43"><expr pos:start="231:27" pos:end="231:43"><name pos:start="231:27" pos:end="231:43">ff_wmv1_scantable</name></expr></argument>, <argument pos:start="231:46" pos:end="231:49"><expr pos:start="231:46" pos:end="231:49"><literal type="number" pos:start="231:46" pos:end="231:46">4</literal><operator pos:start="231:47" pos:end="231:47">*</operator><literal type="number" pos:start="231:48" pos:end="231:49">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:27"><expr pos:start="233:9" pos:end="233:26"><name pos:start="233:9" pos:end="233:22"><name pos:start="233:9" pos:end="233:9">v</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:22">left_blk_sh</name></name> <operator pos:start="233:24" pos:end="233:24">=</operator> <literal type="number" pos:start="233:26" pos:end="233:26">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:27"><expr pos:start="235:9" pos:end="235:26"><name pos:start="235:9" pos:end="235:21"><name pos:start="235:9" pos:end="235:9">v</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:21">top_blk_sh</name></name>  <operator pos:start="235:24" pos:end="235:24">=</operator> <literal type="number" pos:start="235:26" pos:end="235:26">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="241:5" pos:end="265:5"><if pos:start="241:5" pos:end="265:5">if <condition pos:start="241:8" pos:end="241:92">(<expr pos:start="241:9" pos:end="241:91"><name pos:start="241:9" pos:end="241:23"><name pos:start="241:9" pos:end="241:13">avctx</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:23">codec_id</name></name> <operator pos:start="241:25" pos:end="241:26">==</operator> <name pos:start="241:28" pos:end="241:48">AV_CODEC_ID_WMV3IMAGE</name> <operator pos:start="241:50" pos:end="241:51">||</operator> <name pos:start="241:53" pos:end="241:67"><name pos:start="241:53" pos:end="241:57">avctx</name><operator pos:start="241:58" pos:end="241:59">-&gt;</operator><name pos:start="241:60" pos:end="241:67">codec_id</name></name> <operator pos:start="241:69" pos:end="241:70">==</operator> <name pos:start="241:72" pos:end="241:91">AV_CODEC_ID_VC1IMAGE</name></expr>)</condition> <block pos:start="241:94" pos:end="265:5">{<block_content pos:start="243:9" pos:end="263:50">

        <expr_stmt pos:start="243:9" pos:end="243:46"><expr pos:start="243:9" pos:end="243:45"><name pos:start="243:9" pos:end="243:23"><name pos:start="243:9" pos:end="243:9">v</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:23">sprite_width</name></name>  <operator pos:start="243:26" pos:end="243:26">=</operator> <name pos:start="243:28" pos:end="243:45"><name pos:start="243:28" pos:end="243:32">avctx</name><operator pos:start="243:33" pos:end="243:34">-&gt;</operator><name pos:start="243:35" pos:end="243:45">coded_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:47"><expr pos:start="245:9" pos:end="245:46"><name pos:start="245:9" pos:end="245:24"><name pos:start="245:9" pos:end="245:9">v</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:24">sprite_height</name></name> <operator pos:start="245:26" pos:end="245:26">=</operator> <name pos:start="245:28" pos:end="245:46"><name pos:start="245:28" pos:end="245:32">avctx</name><operator pos:start="245:33" pos:end="245:34">-&gt;</operator><name pos:start="245:35" pos:end="245:46">coded_height</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="249:9" pos:end="249:62"><expr pos:start="249:9" pos:end="249:61"><name pos:start="249:9" pos:end="249:26"><name pos:start="249:9" pos:end="249:13">avctx</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:26">coded_width</name></name>  <operator pos:start="249:29" pos:end="249:29">=</operator> <name pos:start="249:31" pos:end="249:42"><name pos:start="249:31" pos:end="249:35">avctx</name><operator pos:start="249:36" pos:end="249:37">-&gt;</operator><name pos:start="249:38" pos:end="249:42">width</name></name>  <operator pos:start="249:45" pos:end="249:45">=</operator> <name pos:start="249:47" pos:end="249:61"><name pos:start="249:47" pos:end="249:47">v</name><operator pos:start="249:48" pos:end="249:49">-&gt;</operator><name pos:start="249:50" pos:end="249:61">output_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:63"><expr pos:start="251:9" pos:end="251:62"><name pos:start="251:9" pos:end="251:27"><name pos:start="251:9" pos:end="251:13">avctx</name><operator pos:start="251:14" pos:end="251:15">-&gt;</operator><name pos:start="251:16" pos:end="251:27">coded_height</name></name> <operator pos:start="251:29" pos:end="251:29">=</operator> <name pos:start="251:31" pos:end="251:43"><name pos:start="251:31" pos:end="251:35">avctx</name><operator pos:start="251:36" pos:end="251:37">-&gt;</operator><name pos:start="251:38" pos:end="251:43">height</name></name> <operator pos:start="251:45" pos:end="251:45">=</operator> <name pos:start="251:47" pos:end="251:62"><name pos:start="251:47" pos:end="251:47">v</name><operator pos:start="251:48" pos:end="251:49">-&gt;</operator><name pos:start="251:50" pos:end="251:62">output_height</name></name></expr>;</expr_stmt>



        <comment type="line" pos:start="255:9" pos:end="255:34">// prevent 16.16 overflows</comment>

        <if_stmt pos:start="257:9" pos:end="263:50"><if pos:start="257:9" pos:end="263:50">if <condition pos:start="257:12" pos:end="263:39">(<expr pos:start="257:13" pos:end="263:38"><name pos:start="257:13" pos:end="257:27"><name pos:start="257:13" pos:end="257:13">v</name><operator pos:start="257:14" pos:end="257:15">-&gt;</operator><name pos:start="257:16" pos:end="257:27">sprite_width</name></name>  <operator pos:start="257:30" pos:end="257:30">&gt;</operator> <literal type="number" pos:start="257:32" pos:end="257:32">1</literal> <operator pos:start="257:34" pos:end="257:35">&lt;&lt;</operator> <literal type="number" pos:start="257:37" pos:end="257:38">14</literal> <operator pos:start="257:40" pos:end="257:41">||</operator>

            <name pos:start="259:13" pos:end="259:28"><name pos:start="259:13" pos:end="259:13">v</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:28">sprite_height</name></name> <operator pos:start="259:30" pos:end="259:30">&gt;</operator> <literal type="number" pos:start="259:32" pos:end="259:32">1</literal> <operator pos:start="259:34" pos:end="259:35">&lt;&lt;</operator> <literal type="number" pos:start="259:37" pos:end="259:38">14</literal> <operator pos:start="259:40" pos:end="259:41">||</operator>

            <name pos:start="261:13" pos:end="261:27"><name pos:start="261:13" pos:end="261:13">v</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:27">output_width</name></name>  <operator pos:start="261:30" pos:end="261:30">&gt;</operator> <literal type="number" pos:start="261:32" pos:end="261:32">1</literal> <operator pos:start="261:34" pos:end="261:35">&lt;&lt;</operator> <literal type="number" pos:start="261:37" pos:end="261:38">14</literal> <operator pos:start="261:40" pos:end="261:41">||</operator>

            <name pos:start="263:13" pos:end="263:28"><name pos:start="263:13" pos:end="263:13">v</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:28">output_height</name></name> <operator pos:start="263:30" pos:end="263:30">&gt;</operator> <literal type="number" pos:start="263:32" pos:end="263:32">1</literal> <operator pos:start="263:34" pos:end="263:35">&lt;&lt;</operator> <literal type="number" pos:start="263:37" pos:end="263:38">14</literal></expr>)</condition><block type="pseudo" pos:start="263:41" pos:end="263:50"><block_content pos:start="263:41" pos:end="263:50"> <return pos:start="263:41" pos:end="263:50">return <expr pos:start="263:48" pos:end="263:49"><operator pos:start="263:48" pos:end="263:48">-</operator><literal type="number" pos:start="263:49" pos:end="263:49">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="267:5" pos:end="267:13">return <expr pos:start="267:12" pos:end="267:12"><literal type="number" pos:start="267:12" pos:end="267:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
