<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/308.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">omap_tipb_bridge_write</name><parameter_list pos:start="1:35" pos:end="3:65">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:72"><decl pos:start="1:50" pos:end="1:72"><type pos:start="1:50" pos:end="1:72"><name pos:start="1:50" pos:end="1:67">target_phys_addr_t</name></type> <name pos:start="1:69" pos:end="1:72">addr</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:49"><decl pos:start="3:36" pos:end="3:49"><type pos:start="3:36" pos:end="3:49"><name pos:start="3:36" pos:end="3:43">uint64_t</name></type> <name pos:start="3:45" pos:end="3:49">value</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:64"><decl pos:start="3:52" pos:end="3:64"><type pos:start="3:52" pos:end="3:64"><name pos:start="3:52" pos:end="3:59">unsigned</name></type> <name pos:start="3:61" pos:end="3:64">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:5">

    <decl_stmt pos:start="7:5" pos:end="7:72"><decl pos:start="7:5" pos:end="7:71"><type pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:29">omap_tipb_bridge_s</name></name> <modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:32">s</name> <init pos:start="7:34" pos:end="7:71">= <expr pos:start="7:36" pos:end="7:71"><operator pos:start="7:36" pos:end="7:36">(</operator>struct <name pos:start="7:44" pos:end="7:61">omap_tipb_bridge_s</name> <operator pos:start="7:63" pos:end="7:63">*</operator><operator pos:start="7:64" pos:end="7:64">)</operator> <name pos:start="7:66" pos:end="7:71">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:12">size</name> <operator pos:start="11:14" pos:end="11:14">&lt;</operator> <literal type="number" pos:start="11:16" pos:end="11:16">2</literal></expr>)</condition> <block pos:start="11:19" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:58">

        <return pos:start="13:9" pos:end="13:58">return <expr pos:start="13:16" pos:end="13:57"><call pos:start="13:16" pos:end="13:57"><name pos:start="13:16" pos:end="13:36">omap_badwidth_write16</name><argument_list pos:start="13:37" pos:end="13:57">(<argument pos:start="13:38" pos:end="13:43"><expr pos:start="13:38" pos:end="13:43"><name pos:start="13:38" pos:end="13:43">opaque</name></expr></argument>, <argument pos:start="13:46" pos:end="13:49"><expr pos:start="13:46" pos:end="13:49"><name pos:start="13:46" pos:end="13:49">addr</name></expr></argument>, <argument pos:start="13:52" pos:end="13:56"><expr pos:start="13:52" pos:end="13:56"><name pos:start="13:52" pos:end="13:56">value</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="19:5" pos:end="73:5">switch <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">addr</name></expr>)</condition> <block pos:start="19:19" pos:end="73:5">{<block_content pos:start="21:5" pos:end="71:27">

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="21:17" pos:end="21:31">/* TIPB_CNTL */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:36"><expr pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">control</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:26">value</name> <operator pos:start="23:28" pos:end="23:28">&amp;</operator> <literal type="number" pos:start="23:30" pos:end="23:35">0xffff</literal></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>



    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><literal type="number" pos:start="29:10" pos:end="29:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="29:17" pos:end="29:36">/* TIPB_BUS_ALLOC */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">alloc</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:24">value</name> <operator pos:start="31:26" pos:end="31:26">&amp;</operator> <literal type="number" pos:start="31:28" pos:end="31:33">0x003f</literal></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>



    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="37:17" pos:end="37:35">/* MPU_TIPB_CNTL */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">buffer</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:25">value</name> <operator pos:start="39:27" pos:end="39:27">&amp;</operator> <literal type="number" pos:start="39:29" pos:end="39:34">0x0003</literal></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>



    <case pos:start="45:5" pos:end="45:14">case <expr pos:start="45:10" pos:end="45:13"><literal type="number" pos:start="45:10" pos:end="45:13">0x0c</literal></expr>:</case>	<comment type="block" pos:start="45:17" pos:end="45:40">/* ENHANCED_TIPB_CNTL */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:21">width_intr</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <operator pos:start="47:25" pos:end="47:25">!</operator><operator pos:start="47:26" pos:end="47:26">(</operator><name pos:start="47:27" pos:end="47:31">value</name> <operator pos:start="47:33" pos:end="47:33">&amp;</operator> <literal type="number" pos:start="47:35" pos:end="47:35">2</literal><operator pos:start="47:36" pos:end="47:36">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:40"><expr pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:22">enh_control</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:30">value</name> <operator pos:start="49:32" pos:end="49:32">&amp;</operator> <literal type="number" pos:start="49:34" pos:end="49:39">0x000f</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>



    <case pos:start="55:5" pos:end="55:14">case <expr pos:start="55:10" pos:end="55:13"><literal type="number" pos:start="55:10" pos:end="55:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="55:17" pos:end="55:33">/* ADDRESS_DBG */</comment>

    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><literal type="number" pos:start="57:10" pos:end="57:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="57:17" pos:end="57:36">/* DATA_DEBUG_LOW */</comment>

    <case pos:start="59:5" pos:end="59:14">case <expr pos:start="59:10" pos:end="59:13"><literal type="number" pos:start="59:10" pos:end="59:13">0x18</literal></expr>:</case>	<comment type="block" pos:start="59:17" pos:end="59:37">/* DATA_DEBUG_HIGH */</comment>

    <case pos:start="61:5" pos:end="61:14">case <expr pos:start="61:10" pos:end="61:13"><literal type="number" pos:start="61:10" pos:end="61:13">0x1c</literal></expr>:</case>	<comment type="block" pos:start="61:17" pos:end="61:36">/* DEBUG_CNTR_SIG */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><call pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:19">OMAP_RO_REG</name><argument_list pos:start="63:20" pos:end="63:25">(<argument pos:start="63:21" pos:end="63:24"><expr pos:start="63:21" pos:end="63:24"><name pos:start="63:21" pos:end="63:24">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>



    <default pos:start="69:5" pos:end="69:12">default:</default>

        <expr_stmt pos:start="71:9" pos:end="71:27"><expr pos:start="71:9" pos:end="71:26"><call pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:20">OMAP_BAD_REG</name><argument_list pos:start="71:21" pos:end="71:26">(<argument pos:start="71:22" pos:end="71:25"><expr pos:start="71:22" pos:end="71:25"><name pos:start="71:22" pos:end="71:25">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
