<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23578.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">read_pakt_chunk</name><parameter_list pos:start="1:27" pos:end="1:60">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:54">int64_t</name></type> <name pos:start="1:56" pos:end="1:59">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name>      <init pos:start="7:23" pos:end="7:37">= <expr pos:start="7:25" pos:end="7:37"><name pos:start="7:25" pos:end="7:37"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:34">streams</name><index pos:start="7:35" pos:end="7:37">[<expr pos:start="7:36" pos:end="7:36"><literal type="number" pos:start="7:36" pos:end="7:36">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">CaffContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">caf</name>  <init pos:start="9:23" pos:end="9:36">= <expr pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pos</name> <init pos:start="11:17" pos:end="11:19">= <expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr></init></decl>, <decl pos:start="11:22" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:22" pos:end="11:27">ccount</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">num_packets</name></decl>, <decl pos:start="13:22" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:22">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:10">ccount</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:26"><name pos:start="17:14" pos:end="17:22">avio_tell</name><argument_list pos:start="17:23" pos:end="17:26">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:15">num_packets</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:31"><name pos:start="21:19" pos:end="21:27">avio_rb64</name><argument_list pos:start="21:28" pos:end="21:31">(<argument pos:start="21:29" pos:end="21:30"><expr pos:start="21:29" pos:end="21:30"><name pos:start="21:29" pos:end="21:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:35"><if pos:start="23:5" pos:end="25:35">if <condition pos:start="23:8" pos:end="23:74">(<expr pos:start="23:9" pos:end="23:73"><name pos:start="23:9" pos:end="23:19">num_packets</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <literal type="number" pos:start="23:23" pos:end="23:23">0</literal> <operator pos:start="23:25" pos:end="23:26">||</operator> <name pos:start="23:28" pos:end="23:36">INT32_MAX</name> <operator pos:start="23:38" pos:end="23:38">/</operator> <sizeof pos:start="23:40" pos:end="23:59">sizeof<argument_list pos:start="23:46" pos:end="23:59">(<argument pos:start="23:47" pos:end="23:58"><expr pos:start="23:47" pos:end="23:58"><name pos:start="23:47" pos:end="23:58">AVIndexEntry</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:61" pos:end="23:61">&lt;</operator> <name pos:start="23:63" pos:end="23:73">num_packets</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:35"><block_content pos:start="25:9" pos:end="25:35">

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:6">st</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:17">nb_frames</name></name>  <operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="29:34"><name pos:start="29:22" pos:end="29:30">avio_rb64</name><argument_list pos:start="29:31" pos:end="29:34">(<argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><name pos:start="29:32" pos:end="29:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:37" pos:end="29:54">/* valid frames */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:6">st</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:17">nb_frames</name></name> <operator pos:start="31:19" pos:end="31:20">+=</operator> <call pos:start="31:22" pos:end="31:34"><name pos:start="31:22" pos:end="31:30">avio_rb32</name><argument_list pos:start="31:31" pos:end="31:34">(<argument pos:start="31:32" pos:end="31:33"><expr pos:start="31:32" pos:end="31:33"><name pos:start="31:32" pos:end="31:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:37" pos:end="31:56">/* priming frames */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:6">st</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:17">nb_frames</name></name> <operator pos:start="33:19" pos:end="33:20">+=</operator> <call pos:start="33:22" pos:end="33:34"><name pos:start="33:22" pos:end="33:30">avio_rb32</name><argument_list pos:start="33:31" pos:end="33:34">(<argument pos:start="33:32" pos:end="33:33"><expr pos:start="33:32" pos:end="33:33"><name pos:start="33:32" pos:end="33:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:37" pos:end="33:58">/* remainder frames */</comment>



    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:6">st</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:16">duration</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="47:5">for <control pos:start="39:9" pos:end="39:37">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:32"><expr pos:start="39:17" pos:end="39:31"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:31">num_packets</name></expr>;</condition> <incr pos:start="39:34" pos:end="39:36"><expr pos:start="39:34" pos:end="39:36"><name pos:start="39:34" pos:end="39:34">i</name><operator pos:start="39:35" pos:end="39:36">++</operator></expr></incr>)</control> <block pos:start="39:39" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:100">

        <expr_stmt pos:start="41:9" pos:end="41:85"><expr pos:start="41:9" pos:end="41:84"><call pos:start="41:9" pos:end="41:84"><name pos:start="41:9" pos:end="41:26">av_add_index_entry</name><argument_list pos:start="41:27" pos:end="41:84">(<argument pos:start="41:28" pos:end="41:40"><expr pos:start="41:28" pos:end="41:40"><name pos:start="41:28" pos:end="41:40"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:37">streams</name><index pos:start="41:38" pos:end="41:40">[<expr pos:start="41:39" pos:end="41:39"><literal type="number" pos:start="41:39" pos:end="41:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:43" pos:end="41:45"><expr pos:start="41:43" pos:end="41:45"><name pos:start="41:43" pos:end="41:45">pos</name></expr></argument>, <argument pos:start="41:48" pos:end="41:59"><expr pos:start="41:48" pos:end="41:59"><name pos:start="41:48" pos:end="41:59"><name pos:start="41:48" pos:end="41:49">st</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:59">duration</name></name></expr></argument>, <argument pos:start="41:62" pos:end="41:62"><expr pos:start="41:62" pos:end="41:62"><literal type="number" pos:start="41:62" pos:end="41:62">0</literal></expr></argument>, <argument pos:start="41:65" pos:end="41:65"><expr pos:start="41:65" pos:end="41:65"><literal type="number" pos:start="41:65" pos:end="41:65">0</literal></expr></argument>, <argument pos:start="41:68" pos:end="41:83"><expr pos:start="41:68" pos:end="41:83"><name pos:start="41:68" pos:end="41:83">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:89"><expr pos:start="43:9" pos:end="43:88"><name pos:start="43:9" pos:end="43:11">pos</name> <operator pos:start="43:13" pos:end="43:14">+=</operator> <ternary pos:start="43:16" pos:end="43:88"><condition pos:start="43:16" pos:end="43:38"><expr pos:start="43:16" pos:end="43:36"><name pos:start="43:16" pos:end="43:36"><name pos:start="43:16" pos:end="43:18">caf</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:36">bytes_per_packet</name></name></expr> ?</condition><then pos:start="43:40" pos:end="43:60"> <expr pos:start="43:40" pos:end="43:60"><name pos:start="43:40" pos:end="43:60"><name pos:start="43:40" pos:end="43:42">caf</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:60">bytes_per_packet</name></name></expr> </then><else pos:start="43:62" pos:end="43:88">: <expr pos:start="43:64" pos:end="43:88"><call pos:start="43:64" pos:end="43:88"><name pos:start="43:64" pos:end="43:84">ff_mp4_read_descr_len</name><argument_list pos:start="43:85" pos:end="43:88">(<argument pos:start="43:86" pos:end="43:87"><expr pos:start="43:86" pos:end="43:87"><name pos:start="43:86" pos:end="43:87">pb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:100"><expr pos:start="45:9" pos:end="45:99"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:10">st</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:20">duration</name></name> <operator pos:start="45:22" pos:end="45:23">+=</operator> <ternary pos:start="45:25" pos:end="45:99"><condition pos:start="45:25" pos:end="45:48"><expr pos:start="45:25" pos:end="45:46"><name pos:start="45:25" pos:end="45:46"><name pos:start="45:25" pos:end="45:27">caf</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:46">frames_per_packet</name></name></expr> ?</condition><then pos:start="45:50" pos:end="45:71"> <expr pos:start="45:50" pos:end="45:71"><name pos:start="45:50" pos:end="45:71"><name pos:start="45:50" pos:end="45:52">caf</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:71">frames_per_packet</name></name></expr> </then><else pos:start="45:73" pos:end="45:99">: <expr pos:start="45:75" pos:end="45:99"><call pos:start="45:75" pos:end="45:99"><name pos:start="45:75" pos:end="45:95">ff_mp4_read_descr_len</name><argument_list pos:start="45:96" pos:end="45:99">(<argument pos:start="45:97" pos:end="45:98"><expr pos:start="45:97" pos:end="45:98"><name pos:start="45:97" pos:end="45:98">pb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:39">(<expr pos:start="51:9" pos:end="51:38"><call pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:17">avio_tell</name><argument_list pos:start="51:18" pos:end="51:21">(<argument pos:start="51:19" pos:end="51:20"><expr pos:start="51:19" pos:end="51:20"><name pos:start="51:19" pos:end="51:20">pb</name></expr></argument>)</argument_list></call> <operator pos:start="51:23" pos:end="51:23">-</operator> <name pos:start="51:25" pos:end="51:30">ccount</name> <operator pos:start="51:32" pos:end="51:33">!=</operator> <name pos:start="51:35" pos:end="51:38">size</name></expr>)</condition> <block pos:start="51:41" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:18">

        <expr_stmt pos:start="53:9" pos:end="53:64"><expr pos:start="53:9" pos:end="53:63"><call pos:start="53:9" pos:end="53:63"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:63">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">s</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:33" pos:end="53:62"><expr pos:start="53:33" pos:end="53:62"><literal type="string" pos:start="53:33" pos:end="53:62">"error reading packet table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:7">caf</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:18">num_bytes</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:24">pos</name></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
