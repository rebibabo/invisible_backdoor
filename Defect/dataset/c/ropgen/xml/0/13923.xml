<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13923.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">sort_stt</name><parameter_list pos:start="1:20" pos:end="1:53">(<parameter pos:start="1:21" pos:end="1:34"><decl pos:start="1:21" pos:end="1:34"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:31">FFV1Context</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">s</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:43">uint8_t</name></type> <name pos:start="1:45" pos:end="1:52"><name pos:start="1:45" pos:end="1:47">stt</name><index pos:start="1:48" pos:end="1:52">[<expr pos:start="1:49" pos:end="1:51"><literal type="number" pos:start="1:49" pos:end="1:51">256</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:17">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:13">i2</name></decl>, <decl pos:start="5:16" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:22">changed</name></decl>, <decl pos:start="5:25" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:25" pos:end="5:29">print</name> <init pos:start="5:31" pos:end="5:33">= <expr pos:start="5:33" pos:end="5:33"><literal type="number" pos:start="5:33" pos:end="5:33">0</literal></expr></init></decl>;</decl_stmt>



    <do pos:start="9:5" pos:end="89:22">do <block pos:start="9:8" pos:end="89:5">{<block_content pos:start="11:9" pos:end="87:9">

        <expr_stmt pos:start="11:9" pos:end="11:20"><expr pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:15">changed</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr>;</expr_stmt>

        <for pos:start="13:9" pos:end="87:9">for <control pos:start="13:13" pos:end="13:34">(<init pos:start="13:14" pos:end="13:20"><expr pos:start="13:14" pos:end="13:19"><name pos:start="13:14" pos:end="13:14">i</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <literal type="number" pos:start="13:18" pos:end="13:19">12</literal></expr>;</init> <condition pos:start="13:22" pos:end="13:29"><expr pos:start="13:22" pos:end="13:28"><name pos:start="13:22" pos:end="13:22">i</name> <operator pos:start="13:24" pos:end="13:24">&lt;</operator> <literal type="number" pos:start="13:26" pos:end="13:28">244</literal></expr>;</condition> <incr pos:start="13:31" pos:end="13:33"><expr pos:start="13:31" pos:end="13:33"><name pos:start="13:31" pos:end="13:31">i</name><operator pos:start="13:32" pos:end="13:33">++</operator></expr></incr>)</control> <block pos:start="13:36" pos:end="87:9">{<block_content pos:start="15:13" pos:end="85:13">

            <for pos:start="15:13" pos:end="85:13">for <control pos:start="15:17" pos:end="15:58">(<init pos:start="15:18" pos:end="15:28"><expr pos:start="15:18" pos:end="15:27"><name pos:start="15:18" pos:end="15:19">i2</name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:23">i</name> <operator pos:start="15:25" pos:end="15:25">+</operator> <literal type="number" pos:start="15:27" pos:end="15:27">1</literal></expr>;</init> <condition pos:start="15:30" pos:end="15:52"><expr pos:start="15:30" pos:end="15:51"><name pos:start="15:30" pos:end="15:31">i2</name> <operator pos:start="15:33" pos:end="15:33">&lt;</operator> <literal type="number" pos:start="15:35" pos:end="15:37">245</literal> <operator pos:start="15:39" pos:end="15:40">&amp;&amp;</operator> <name pos:start="15:42" pos:end="15:43">i2</name> <operator pos:start="15:45" pos:end="15:45">&lt;</operator> <name pos:start="15:47" pos:end="15:47">i</name> <operator pos:start="15:49" pos:end="15:49">+</operator> <literal type="number" pos:start="15:51" pos:end="15:51">4</literal></expr>;</condition> <incr pos:start="15:54" pos:end="15:57"><expr pos:start="15:54" pos:end="15:57"><name pos:start="15:54" pos:end="15:55">i2</name><operator pos:start="15:56" pos:end="15:57">++</operator></expr></incr>)</control> <block pos:start="15:60" pos:end="85:13">{<block_content pos:start="33:17" pos:end="83:17">



<cpp:define pos:start="19:1" pos:end="23:53">#<cpp:directive pos:start="19:2" pos:end="19:7">define</cpp:directive> <cpp:macro pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:12">COST</name><parameter_list pos:start="19:13" pos:end="19:22">(<parameter pos:start="19:14" pos:end="19:16"><type pos:start="19:14" pos:end="19:16"><name pos:start="19:14" pos:end="19:16">old</name></type></parameter>, <parameter pos:start="19:19" pos:end="19:21"><type pos:start="19:19" pos:end="19:21"><name pos:start="19:19" pos:end="19:21">new</name></type></parameter>)</parameter_list></cpp:macro>                                      \

    <cpp:value pos:start="21:5" pos:end="23:53">s-&gt;rc_stat[old][0] * -log2((256 - (new)) / 256.0) +     \

    s-&gt;rc_stat[old][1] * -log2((new)         / 256.0)</cpp:value></cpp:define>



<cpp:define pos:start="27:1" pos:end="29:51">#<cpp:directive pos:start="27:2" pos:end="27:7">define</cpp:directive> <cpp:macro pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:13">COST2</name><parameter_list pos:start="27:14" pos:end="27:23">(<parameter pos:start="27:15" pos:end="27:17"><type pos:start="27:15" pos:end="27:17"><name pos:start="27:15" pos:end="27:17">old</name></type></parameter>, <parameter pos:start="27:20" pos:end="27:22"><type pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">new</name></type></parameter>)</parameter_list></cpp:macro>                         \

    <cpp:value pos:start="29:5" pos:end="29:51">COST(old, new) + COST(256 - (old), 256 - (new))</cpp:value></cpp:define>



                <decl_stmt pos:start="33:17" pos:end="33:60"><decl pos:start="33:17" pos:end="33:59"><type pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">double</name></type> <name pos:start="33:24" pos:end="33:28">size0</name> <init pos:start="33:30" pos:end="33:59">= <expr pos:start="33:32" pos:end="33:59"><call pos:start="33:32" pos:end="33:43"><name pos:start="33:32" pos:end="33:36">COST2</name><argument_list pos:start="33:37" pos:end="33:43">(<argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><name pos:start="33:38" pos:end="33:38">i</name></expr></argument>,  <argument pos:start="33:42" pos:end="33:42"><expr pos:start="33:42" pos:end="33:42"><name pos:start="33:42" pos:end="33:42">i</name></expr></argument>)</argument_list></call> <operator pos:start="33:45" pos:end="33:45">+</operator> <call pos:start="33:47" pos:end="33:59"><name pos:start="33:47" pos:end="33:51">COST2</name><argument_list pos:start="33:52" pos:end="33:59">(<argument pos:start="33:53" pos:end="33:54"><expr pos:start="33:53" pos:end="33:54"><name pos:start="33:53" pos:end="33:54">i2</name></expr></argument>, <argument pos:start="33:57" pos:end="33:58"><expr pos:start="33:57" pos:end="33:58"><name pos:start="33:57" pos:end="33:58">i2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="35:17" pos:end="35:59"><decl pos:start="35:17" pos:end="35:58"><type pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22">double</name></type> <name pos:start="35:24" pos:end="35:28">sizeX</name> <init pos:start="35:30" pos:end="35:58">= <expr pos:start="35:32" pos:end="35:58"><call pos:start="35:32" pos:end="35:43"><name pos:start="35:32" pos:end="35:36">COST2</name><argument_list pos:start="35:37" pos:end="35:43">(<argument pos:start="35:38" pos:end="35:38"><expr pos:start="35:38" pos:end="35:38"><name pos:start="35:38" pos:end="35:38">i</name></expr></argument>, <argument pos:start="35:41" pos:end="35:42"><expr pos:start="35:41" pos:end="35:42"><name pos:start="35:41" pos:end="35:42">i2</name></expr></argument>)</argument_list></call> <operator pos:start="35:45" pos:end="35:45">+</operator> <call pos:start="35:47" pos:end="35:58"><name pos:start="35:47" pos:end="35:51">COST2</name><argument_list pos:start="35:52" pos:end="35:58">(<argument pos:start="35:53" pos:end="35:54"><expr pos:start="35:53" pos:end="35:54"><name pos:start="35:53" pos:end="35:54">i2</name></expr></argument>, <argument pos:start="35:57" pos:end="35:57"><expr pos:start="35:57" pos:end="35:57"><name pos:start="35:57" pos:end="35:57">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="37:17" pos:end="83:17"><if pos:start="37:17" pos:end="83:17">if <condition pos:start="37:20" pos:end="37:59">(<expr pos:start="37:21" pos:end="37:58"><name pos:start="37:21" pos:end="37:25">sizeX</name> <operator pos:start="37:27" pos:end="37:27">&lt;</operator> <name pos:start="37:29" pos:end="37:33">size0</name> <operator pos:start="37:35" pos:end="37:36">&amp;&amp;</operator> <name pos:start="37:38" pos:end="37:38">i</name> <operator pos:start="37:40" pos:end="37:41">!=</operator> <literal type="number" pos:start="37:43" pos:end="37:45">128</literal> <operator pos:start="37:47" pos:end="37:48">&amp;&amp;</operator> <name pos:start="37:50" pos:end="37:51">i2</name> <operator pos:start="37:53" pos:end="37:54">!=</operator> <literal type="number" pos:start="37:56" pos:end="37:58">128</literal></expr>)</condition> <block pos:start="37:61" pos:end="83:17">{<block_content pos:start="39:21" pos:end="81:40">

                    <decl_stmt pos:start="39:21" pos:end="39:26"><decl pos:start="39:21" pos:end="39:25"><type pos:start="39:21" pos:end="39:23"><name pos:start="39:21" pos:end="39:23">int</name></type> <name pos:start="39:25" pos:end="39:25">j</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="41:21" pos:end="41:49"><expr pos:start="41:21" pos:end="41:48"><call pos:start="41:21" pos:end="41:48"><name pos:start="41:21" pos:end="41:26">FFSWAP</name><argument_list pos:start="41:27" pos:end="41:48">(<argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">int</name></expr></argument>, <argument pos:start="41:33" pos:end="41:38"><expr pos:start="41:33" pos:end="41:38"><name pos:start="41:33" pos:end="41:38"><name pos:start="41:33" pos:end="41:35">stt</name><index pos:start="41:36" pos:end="41:38">[<expr pos:start="41:37" pos:end="41:37"><name pos:start="41:37" pos:end="41:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="41:41" pos:end="41:47"><expr pos:start="41:41" pos:end="41:47"><name pos:start="41:41" pos:end="41:47"><name pos:start="41:41" pos:end="41:43">stt</name><index pos:start="41:44" pos:end="41:47">[<expr pos:start="41:45" pos:end="41:46"><name pos:start="41:45" pos:end="41:46">i2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:69"><expr pos:start="43:21" pos:end="43:68"><call pos:start="43:21" pos:end="43:68"><name pos:start="43:21" pos:end="43:26">FFSWAP</name><argument_list pos:start="43:27" pos:end="43:68">(<argument pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:30">int</name></expr></argument>, <argument pos:start="43:33" pos:end="43:48"><expr pos:start="43:33" pos:end="43:48"><name pos:start="43:33" pos:end="43:48"><name pos:start="43:33" pos:end="43:33">s</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:42">rc_stat</name><index pos:start="43:43" pos:end="43:45">[<expr pos:start="43:44" pos:end="43:44"><name pos:start="43:44" pos:end="43:44">i</name></expr>]</index><index pos:start="43:46" pos:end="43:48">[<expr pos:start="43:47" pos:end="43:47"><literal type="number" pos:start="43:47" pos:end="43:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:51" pos:end="43:67"><expr pos:start="43:51" pos:end="43:67"><name pos:start="43:51" pos:end="43:67"><name pos:start="43:51" pos:end="43:51">s</name><operator pos:start="43:52" pos:end="43:53">-&gt;</operator><name pos:start="43:54" pos:end="43:60">rc_stat</name><index pos:start="43:61" pos:end="43:64">[<expr pos:start="43:62" pos:end="43:63"><name pos:start="43:62" pos:end="43:63">i2</name></expr>]</index><index pos:start="43:65" pos:end="43:67">[<expr pos:start="43:66" pos:end="43:66"><literal type="number" pos:start="43:66" pos:end="43:66">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:69"><expr pos:start="45:21" pos:end="45:68"><call pos:start="45:21" pos:end="45:68"><name pos:start="45:21" pos:end="45:26">FFSWAP</name><argument_list pos:start="45:27" pos:end="45:68">(<argument pos:start="45:28" pos:end="45:30"><expr pos:start="45:28" pos:end="45:30"><name pos:start="45:28" pos:end="45:30">int</name></expr></argument>, <argument pos:start="45:33" pos:end="45:48"><expr pos:start="45:33" pos:end="45:48"><name pos:start="45:33" pos:end="45:48"><name pos:start="45:33" pos:end="45:33">s</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:42">rc_stat</name><index pos:start="45:43" pos:end="45:45">[<expr pos:start="45:44" pos:end="45:44"><name pos:start="45:44" pos:end="45:44">i</name></expr>]</index><index pos:start="45:46" pos:end="45:48">[<expr pos:start="45:47" pos:end="45:47"><literal type="number" pos:start="45:47" pos:end="45:47">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:51" pos:end="45:67"><expr pos:start="45:51" pos:end="45:67"><name pos:start="45:51" pos:end="45:67"><name pos:start="45:51" pos:end="45:51">s</name><operator pos:start="45:52" pos:end="45:53">-&gt;</operator><name pos:start="45:54" pos:end="45:60">rc_stat</name><index pos:start="45:61" pos:end="45:64">[<expr pos:start="45:62" pos:end="45:63"><name pos:start="45:62" pos:end="45:63">i2</name></expr>]</index><index pos:start="45:65" pos:end="45:67">[<expr pos:start="45:66" pos:end="45:66"><literal type="number" pos:start="45:66" pos:end="45:66">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="47:21" pos:end="55:21"><if pos:start="47:21" pos:end="55:21">if <condition pos:start="47:24" pos:end="47:38">(<expr pos:start="47:25" pos:end="47:37"><name pos:start="47:25" pos:end="47:25">i</name> <operator pos:start="47:27" pos:end="47:28">!=</operator> <literal type="number" pos:start="47:30" pos:end="47:34">256</literal> <operator pos:start="47:34" pos:end="47:34">-</operator> <name pos:start="47:36" pos:end="47:37">i2</name></expr>)</condition> <block pos:start="47:40" pos:end="55:21">{<block_content pos:start="49:25" pos:end="53:85">

                        <expr_stmt pos:start="49:25" pos:end="49:65"><expr pos:start="49:25" pos:end="49:64"><call pos:start="49:25" pos:end="49:64"><name pos:start="49:25" pos:end="49:30">FFSWAP</name><argument_list pos:start="49:31" pos:end="49:64">(<argument pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><name pos:start="49:32" pos:end="49:34">int</name></expr></argument>, <argument pos:start="49:37" pos:end="49:48"><expr pos:start="49:37" pos:end="49:48"><name pos:start="49:37" pos:end="49:48"><name pos:start="49:37" pos:end="49:39">stt</name><index pos:start="49:40" pos:end="49:48">[<expr pos:start="49:41" pos:end="49:47"><literal type="number" pos:start="49:41" pos:end="49:45">256</literal> <operator pos:start="49:45" pos:end="49:45">-</operator> <name pos:start="49:47" pos:end="49:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="49:51" pos:end="49:63"><expr pos:start="49:51" pos:end="49:63"><name pos:start="49:51" pos:end="49:63"><name pos:start="49:51" pos:end="49:53">stt</name><index pos:start="49:54" pos:end="49:63">[<expr pos:start="49:55" pos:end="49:62"><literal type="number" pos:start="49:55" pos:end="49:59">256</literal> <operator pos:start="49:59" pos:end="49:59">-</operator> <name pos:start="49:61" pos:end="49:62">i2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="51:25" pos:end="51:85"><expr pos:start="51:25" pos:end="51:84"><call pos:start="51:25" pos:end="51:84"><name pos:start="51:25" pos:end="51:30">FFSWAP</name><argument_list pos:start="51:31" pos:end="51:84">(<argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">int</name></expr></argument>, <argument pos:start="51:37" pos:end="51:58"><expr pos:start="51:37" pos:end="51:58"><name pos:start="51:37" pos:end="51:58"><name pos:start="51:37" pos:end="51:37">s</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:46">rc_stat</name><index pos:start="51:47" pos:end="51:55">[<expr pos:start="51:48" pos:end="51:54"><literal type="number" pos:start="51:48" pos:end="51:52">256</literal> <operator pos:start="51:52" pos:end="51:52">-</operator> <name pos:start="51:54" pos:end="51:54">i</name></expr>]</index><index pos:start="51:56" pos:end="51:58">[<expr pos:start="51:57" pos:end="51:57"><literal type="number" pos:start="51:57" pos:end="51:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:61" pos:end="51:83"><expr pos:start="51:61" pos:end="51:83"><name pos:start="51:61" pos:end="51:83"><name pos:start="51:61" pos:end="51:61">s</name><operator pos:start="51:62" pos:end="51:63">-&gt;</operator><name pos:start="51:64" pos:end="51:70">rc_stat</name><index pos:start="51:71" pos:end="51:80">[<expr pos:start="51:72" pos:end="51:79"><literal type="number" pos:start="51:72" pos:end="51:76">256</literal> <operator pos:start="51:76" pos:end="51:76">-</operator> <name pos:start="51:78" pos:end="51:79">i2</name></expr>]</index><index pos:start="51:81" pos:end="51:83">[<expr pos:start="51:82" pos:end="51:82"><literal type="number" pos:start="51:82" pos:end="51:82">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="53:25" pos:end="53:85"><expr pos:start="53:25" pos:end="53:84"><call pos:start="53:25" pos:end="53:84"><name pos:start="53:25" pos:end="53:30">FFSWAP</name><argument_list pos:start="53:31" pos:end="53:84">(<argument pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><name pos:start="53:32" pos:end="53:34">int</name></expr></argument>, <argument pos:start="53:37" pos:end="53:58"><expr pos:start="53:37" pos:end="53:58"><name pos:start="53:37" pos:end="53:58"><name pos:start="53:37" pos:end="53:37">s</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:46">rc_stat</name><index pos:start="53:47" pos:end="53:55">[<expr pos:start="53:48" pos:end="53:54"><literal type="number" pos:start="53:48" pos:end="53:52">256</literal> <operator pos:start="53:52" pos:end="53:52">-</operator> <name pos:start="53:54" pos:end="53:54">i</name></expr>]</index><index pos:start="53:56" pos:end="53:58">[<expr pos:start="53:57" pos:end="53:57"><literal type="number" pos:start="53:57" pos:end="53:57">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="53:61" pos:end="53:83"><expr pos:start="53:61" pos:end="53:83"><name pos:start="53:61" pos:end="53:83"><name pos:start="53:61" pos:end="53:61">s</name><operator pos:start="53:62" pos:end="53:63">-&gt;</operator><name pos:start="53:64" pos:end="53:70">rc_stat</name><index pos:start="53:71" pos:end="53:80">[<expr pos:start="53:72" pos:end="53:79"><literal type="number" pos:start="53:72" pos:end="53:76">256</literal> <operator pos:start="53:76" pos:end="53:76">-</operator> <name pos:start="53:78" pos:end="53:79">i2</name></expr>]</index><index pos:start="53:81" pos:end="53:83">[<expr pos:start="53:82" pos:end="53:82"><literal type="number" pos:start="53:82" pos:end="53:82">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <for pos:start="57:21" pos:end="79:21">for <control pos:start="57:25" pos:end="57:45">(<init pos:start="57:26" pos:end="57:31"><expr pos:start="57:26" pos:end="57:30"><name pos:start="57:26" pos:end="57:26">j</name> <operator pos:start="57:28" pos:end="57:28">=</operator> <literal type="number" pos:start="57:30" pos:end="57:30">1</literal></expr>;</init> <condition pos:start="57:33" pos:end="57:40"><expr pos:start="57:33" pos:end="57:39"><name pos:start="57:33" pos:end="57:33">j</name> <operator pos:start="57:35" pos:end="57:35">&lt;</operator> <literal type="number" pos:start="57:37" pos:end="57:39">256</literal></expr>;</condition> <incr pos:start="57:42" pos:end="57:44"><expr pos:start="57:42" pos:end="57:44"><name pos:start="57:42" pos:end="57:42">j</name><operator pos:start="57:43" pos:end="57:44">++</operator></expr></incr>)</control> <block pos:start="57:47" pos:end="79:21">{<block_content pos:start="59:25" pos:end="77:25">

                        <if_stmt pos:start="59:25" pos:end="65:39"><if pos:start="59:25" pos:end="61:40">if <condition pos:start="59:28" pos:end="59:40">(<expr pos:start="59:29" pos:end="59:39"><name pos:start="59:29" pos:end="59:34"><name pos:start="59:29" pos:end="59:31">stt</name><index pos:start="59:32" pos:end="59:34">[<expr pos:start="59:33" pos:end="59:33"><name pos:start="59:33" pos:end="59:33">j</name></expr>]</index></name> <operator pos:start="59:36" pos:end="59:37">==</operator> <name pos:start="59:39" pos:end="59:39">i</name></expr>)</condition><block type="pseudo" pos:start="61:29" pos:end="61:40"><block_content pos:start="61:29" pos:end="61:40">

                            <expr_stmt pos:start="61:29" pos:end="61:40"><expr pos:start="61:29" pos:end="61:39"><name pos:start="61:29" pos:end="61:34"><name pos:start="61:29" pos:end="61:31">stt</name><index pos:start="61:32" pos:end="61:34">[<expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">j</name></expr>]</index></name> <operator pos:start="61:36" pos:end="61:36">=</operator> <name pos:start="61:38" pos:end="61:39">i2</name></expr>;</expr_stmt></block_content></block></if>

                        <if type="elseif" pos:start="63:25" pos:end="65:39">else if <condition pos:start="63:33" pos:end="63:46">(<expr pos:start="63:34" pos:end="63:45"><name pos:start="63:34" pos:end="63:39"><name pos:start="63:34" pos:end="63:36">stt</name><index pos:start="63:37" pos:end="63:39">[<expr pos:start="63:38" pos:end="63:38"><name pos:start="63:38" pos:end="63:38">j</name></expr>]</index></name> <operator pos:start="63:41" pos:end="63:42">==</operator> <name pos:start="63:44" pos:end="63:45">i2</name></expr>)</condition><block type="pseudo" pos:start="65:29" pos:end="65:39"><block_content pos:start="65:29" pos:end="65:39">

                            <expr_stmt pos:start="65:29" pos:end="65:39"><expr pos:start="65:29" pos:end="65:38"><name pos:start="65:29" pos:end="65:34"><name pos:start="65:29" pos:end="65:31">stt</name><index pos:start="65:32" pos:end="65:34">[<expr pos:start="65:33" pos:end="65:33"><name pos:start="65:33" pos:end="65:33">j</name></expr>]</index></name> <operator pos:start="65:36" pos:end="65:36">=</operator> <name pos:start="65:38" pos:end="65:38">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="67:25" pos:end="77:25"><if pos:start="67:25" pos:end="77:25">if <condition pos:start="67:28" pos:end="67:42">(<expr pos:start="67:29" pos:end="67:41"><name pos:start="67:29" pos:end="67:29">i</name> <operator pos:start="67:31" pos:end="67:32">!=</operator> <literal type="number" pos:start="67:34" pos:end="67:38">256</literal> <operator pos:start="67:38" pos:end="67:38">-</operator> <name pos:start="67:40" pos:end="67:41">i2</name></expr>)</condition> <block pos:start="67:44" pos:end="77:25">{<block_content pos:start="69:29" pos:end="75:55">

                            <if_stmt pos:start="69:29" pos:end="75:55"><if pos:start="69:29" pos:end="71:56">if <condition pos:start="69:32" pos:end="69:56">(<expr pos:start="69:33" pos:end="69:55"><name pos:start="69:33" pos:end="69:44"><name pos:start="69:33" pos:end="69:35">stt</name><index pos:start="69:36" pos:end="69:44">[<expr pos:start="69:37" pos:end="69:43"><literal type="number" pos:start="69:37" pos:end="69:39">256</literal> <operator pos:start="69:41" pos:end="69:41">-</operator> <name pos:start="69:43" pos:end="69:43">j</name></expr>]</index></name> <operator pos:start="69:46" pos:end="69:47">==</operator> <literal type="number" pos:start="69:49" pos:end="69:53">256</literal> <operator pos:start="69:53" pos:end="69:53">-</operator> <name pos:start="69:55" pos:end="69:55">i</name></expr>)</condition><block type="pseudo" pos:start="71:33" pos:end="71:56"><block_content pos:start="71:33" pos:end="71:56">

                                <expr_stmt pos:start="71:33" pos:end="71:56"><expr pos:start="71:33" pos:end="71:55"><name pos:start="71:33" pos:end="71:44"><name pos:start="71:33" pos:end="71:35">stt</name><index pos:start="71:36" pos:end="71:44">[<expr pos:start="71:37" pos:end="71:43"><literal type="number" pos:start="71:37" pos:end="71:39">256</literal> <operator pos:start="71:41" pos:end="71:41">-</operator> <name pos:start="71:43" pos:end="71:43">j</name></expr>]</index></name> <operator pos:start="71:46" pos:end="71:46">=</operator> <literal type="number" pos:start="71:48" pos:end="71:52">256</literal> <operator pos:start="71:52" pos:end="71:52">-</operator> <name pos:start="71:54" pos:end="71:55">i2</name></expr>;</expr_stmt></block_content></block></if>

                            <if type="elseif" pos:start="73:29" pos:end="75:55">else if <condition pos:start="73:37" pos:end="73:62">(<expr pos:start="73:38" pos:end="73:61"><name pos:start="73:38" pos:end="73:49"><name pos:start="73:38" pos:end="73:40">stt</name><index pos:start="73:41" pos:end="73:49">[<expr pos:start="73:42" pos:end="73:48"><literal type="number" pos:start="73:42" pos:end="73:44">256</literal> <operator pos:start="73:46" pos:end="73:46">-</operator> <name pos:start="73:48" pos:end="73:48">j</name></expr>]</index></name> <operator pos:start="73:51" pos:end="73:52">==</operator> <literal type="number" pos:start="73:54" pos:end="73:58">256</literal> <operator pos:start="73:58" pos:end="73:58">-</operator> <name pos:start="73:60" pos:end="73:61">i2</name></expr>)</condition><block type="pseudo" pos:start="75:33" pos:end="75:55"><block_content pos:start="75:33" pos:end="75:55">

                                <expr_stmt pos:start="75:33" pos:end="75:55"><expr pos:start="75:33" pos:end="75:54"><name pos:start="75:33" pos:end="75:44"><name pos:start="75:33" pos:end="75:35">stt</name><index pos:start="75:36" pos:end="75:44">[<expr pos:start="75:37" pos:end="75:43"><literal type="number" pos:start="75:37" pos:end="75:39">256</literal> <operator pos:start="75:41" pos:end="75:41">-</operator> <name pos:start="75:43" pos:end="75:43">j</name></expr>]</index></name> <operator pos:start="75:46" pos:end="75:46">=</operator> <literal type="number" pos:start="75:48" pos:end="75:52">256</literal> <operator pos:start="75:52" pos:end="75:52">-</operator> <name pos:start="75:54" pos:end="75:54">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="81:21" pos:end="81:40"><expr pos:start="81:21" pos:end="81:39"><name pos:start="81:21" pos:end="81:25">print</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:35">changed</name> <operator pos:start="81:37" pos:end="81:37">=</operator> <literal type="number" pos:start="81:39" pos:end="81:39">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block> while <condition pos:start="89:13" pos:end="89:21">(<expr pos:start="89:14" pos:end="89:20"><name pos:start="89:14" pos:end="89:20">changed</name></expr>)</condition>;</do>

    <return pos:start="91:5" pos:end="91:17">return <expr pos:start="91:12" pos:end="91:16"><name pos:start="91:12" pos:end="91:16">print</name></expr>;</return>

</block_content>}</block></function>
</unit>
