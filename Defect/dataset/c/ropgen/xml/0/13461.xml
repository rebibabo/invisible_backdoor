<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13461.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">av_close_input_file</name><parameter_list pos:start="1:25" pos:end="1:44">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:15">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:34"><if pos:start="9:5" pos:end="11:34">if <condition pos:start="9:8" pos:end="9:31">(<expr pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:18">iformat</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:30">read_close</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:34"><block_content pos:start="11:9" pos:end="11:34">

        <expr_stmt pos:start="11:9" pos:end="11:34"><expr pos:start="11:9" pos:end="11:33"><call pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:18">iformat</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:30">read_close</name></name><argument_list pos:start="11:31" pos:end="11:33">(<argument pos:start="11:32" pos:end="11:32"><expr pos:start="11:32" pos:end="11:32"><name pos:start="11:32" pos:end="11:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="13:5" pos:end="17:5">for<control pos:start="13:8" pos:end="13:32">(<init pos:start="13:9" pos:end="13:12"><expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:9">i</name><operator pos:start="13:10" pos:end="13:10">=</operator><literal type="number" pos:start="13:11" pos:end="13:11">0</literal></expr>;</init><condition pos:start="13:13" pos:end="13:28"><expr pos:start="13:13" pos:end="13:27"><name pos:start="13:13" pos:end="13:13">i</name><operator pos:start="13:14" pos:end="13:14">&lt;</operator><name pos:start="13:15" pos:end="13:27"><name pos:start="13:15" pos:end="13:15">s</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:27">nb_streams</name></name></expr>;</condition><incr pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><name pos:start="13:29" pos:end="13:29">i</name><operator pos:start="13:30" pos:end="13:31">++</operator></expr></incr>)</control> <block pos:start="13:34" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:31">

        <expr_stmt pos:start="15:9" pos:end="15:31"><expr pos:start="15:9" pos:end="15:30"><call pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:15">av_free</name><argument_list pos:start="15:16" pos:end="15:30">(<argument pos:start="15:17" pos:end="15:29"><expr pos:start="15:17" pos:end="15:29"><name pos:start="15:17" pos:end="15:29"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:26">streams</name><index pos:start="15:27" pos:end="15:29">[<expr pos:start="15:28" pos:end="15:28"><name pos:start="15:28" pos:end="15:28">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="19:5" pos:end="39:5"><if pos:start="19:5" pos:end="39:5">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:24">packet_buffer</name></name></expr>)</condition> <block pos:start="19:27" pos:end="39:5">{<block_content pos:start="21:9" pos:end="37:32">

        <decl_stmt pos:start="21:9" pos:end="21:29"><decl pos:start="21:9" pos:end="21:23"><type pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:20">AVPacketList</name> <modifier pos:start="21:22" pos:end="21:22">*</modifier></type><name pos:start="21:23" pos:end="21:23">p</name></decl>, <decl pos:start="21:26" pos:end="21:28"><type ref="prev" pos:start="21:9" pos:end="21:22"><modifier pos:start="21:26" pos:end="21:26">*</modifier></type><name pos:start="21:27" pos:end="21:28">p1</name></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:9">p</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:28">packet_buffer</name></name></expr>;</expr_stmt>

        <while pos:start="25:9" pos:end="35:9">while <condition pos:start="25:15" pos:end="25:25">(<expr pos:start="25:16" pos:end="25:24"><name pos:start="25:16" pos:end="25:16">p</name> <operator pos:start="25:18" pos:end="25:19">!=</operator> <name pos:start="25:21" pos:end="25:24">NULL</name></expr>)</condition> <block pos:start="25:27" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:19">

            <expr_stmt pos:start="27:13" pos:end="27:25"><expr pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:14">p1</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:24"><name pos:start="27:18" pos:end="27:18">p</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:24">next</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:36"><expr pos:start="29:13" pos:end="29:35"><call pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:26">av_free_packet</name><argument_list pos:start="29:27" pos:end="29:35">(<argument pos:start="29:28" pos:end="29:34"><expr pos:start="29:28" pos:end="29:34"><operator pos:start="29:28" pos:end="29:28">&amp;</operator><name pos:start="29:29" pos:end="29:34"><name pos:start="29:29" pos:end="29:29">p</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:34">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:22"><call pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:19">av_free</name><argument_list pos:start="31:20" pos:end="31:22">(<argument pos:start="31:21" pos:end="31:21"><expr pos:start="31:21" pos:end="31:21"><name pos:start="31:21" pos:end="31:21">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:19"><expr pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:13">p</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:18">p1</name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:24">packet_buffer</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:31">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:44">(<expr pos:start="41:9" pos:end="41:43"><operator pos:start="41:9" pos:end="41:9">!</operator><operator pos:start="41:10" pos:end="41:10">(</operator><name pos:start="41:11" pos:end="41:27"><name pos:start="41:11" pos:end="41:11">s</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:20">iformat</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:27">flags</name></name> <operator pos:start="41:29" pos:end="41:29">&amp;</operator> <name pos:start="41:31" pos:end="41:42">AVFMT_NOFILE</name><operator pos:start="41:43" pos:end="41:43">)</operator></expr>)</condition> <block pos:start="41:46" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:27">

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><call pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:18">url_fclose</name><argument_list pos:start="43:19" pos:end="43:26">(<argument pos:start="43:20" pos:end="43:25"><expr pos:start="43:20" pos:end="43:25"><operator pos:start="43:20" pos:end="43:20">&amp;</operator><name pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:26"><expr pos:start="47:5" pos:end="47:25"><call pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:11">av_free</name><argument_list pos:start="47:12" pos:end="47:25">(<argument pos:start="47:13" pos:end="47:24"><expr pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:24">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:15"><expr pos:start="49:5" pos:end="49:14"><call pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:11">av_free</name><argument_list pos:start="49:12" pos:end="49:14">(<argument pos:start="49:13" pos:end="49:13"><expr pos:start="49:13" pos:end="49:13"><name pos:start="49:13" pos:end="49:13">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
