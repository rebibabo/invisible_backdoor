<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16882.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:51">hl_decode_mb_idct_luma</name><parameter_list pos:start="1:52" pos:end="13:75">(<parameter pos:start="1:53" pos:end="1:72"><decl pos:start="1:53" pos:end="1:72"><type pos:start="1:53" pos:end="1:72"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:69">H264Context</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:72">h</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:94"><decl pos:start="1:75" pos:end="1:94"><type pos:start="1:75" pos:end="1:94"><name pos:start="1:75" pos:end="1:90">H264SliceContext</name> <modifier pos:start="1:92" pos:end="1:92">*</modifier></type><name pos:start="1:93" pos:end="1:94">sl</name></decl></parameter>,

                                                    <parameter pos:start="3:53" pos:end="3:63"><decl pos:start="3:53" pos:end="3:63"><type pos:start="3:53" pos:end="3:63"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:63">mb_type</name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:75"><decl pos:start="3:66" pos:end="3:75"><type pos:start="3:66" pos:end="3:75"><name pos:start="3:66" pos:end="3:68">int</name></type> <name pos:start="3:70" pos:end="3:75">simple</name></decl></parameter>,

                                                    <parameter pos:start="5:53" pos:end="5:72"><decl pos:start="5:53" pos:end="5:72"><type pos:start="5:53" pos:end="5:72"><name pos:start="5:53" pos:end="5:55">int</name></type> <name pos:start="5:57" pos:end="5:72">transform_bypass</name></decl></parameter>,

                                                    <parameter pos:start="7:53" pos:end="7:67"><decl pos:start="7:53" pos:end="7:67"><type pos:start="7:53" pos:end="7:67"><name pos:start="7:53" pos:end="7:55">int</name></type> <name pos:start="7:57" pos:end="7:67">pixel_shift</name></decl></parameter>,

                                                    <parameter pos:start="9:53" pos:end="9:75"><decl pos:start="9:53" pos:end="9:75"><type pos:start="9:53" pos:end="9:75"><specifier pos:start="9:53" pos:end="9:57">const</specifier> <name pos:start="9:59" pos:end="9:61">int</name> <modifier pos:start="9:63" pos:end="9:63">*</modifier></type><name pos:start="9:64" pos:end="9:75">block_offset</name></decl></parameter>,

                                                    <parameter pos:start="11:53" pos:end="11:64"><decl pos:start="11:53" pos:end="11:64"><type pos:start="11:53" pos:end="11:64"><name pos:start="11:53" pos:end="11:55">int</name></type> <name pos:start="11:57" pos:end="11:64">linesize</name></decl></parameter>,

                                                    <parameter pos:start="13:53" pos:end="13:67"><decl pos:start="13:53" pos:end="13:67"><type pos:start="13:53" pos:end="13:67"><name pos:start="13:53" pos:end="13:59">uint8_t</name> <modifier pos:start="13:61" pos:end="13:61">*</modifier></type><name pos:start="13:62" pos:end="13:67">dest_y</name></decl></parameter>, <parameter pos:start="13:70" pos:end="13:74"><decl pos:start="13:70" pos:end="13:74"><type pos:start="13:70" pos:end="13:74"><name pos:start="13:70" pos:end="13:72">int</name></type> <name pos:start="13:74" pos:end="13:74">p</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="117:1">{<block_content pos:start="17:5" pos:end="115:5">

    <function_decl pos:start="17:5" pos:end="17:63"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">void</name></type> (<modifier pos:start="17:11" pos:end="17:11">*</modifier><name pos:start="17:12" pos:end="17:19">idct_add</name>)<parameter_list pos:start="17:21" pos:end="17:62">(<parameter pos:start="17:22" pos:end="17:33"><decl pos:start="17:22" pos:end="17:33"><type pos:start="17:22" pos:end="17:33"><name pos:start="17:22" pos:end="17:28">uint8_t</name> <modifier pos:start="17:30" pos:end="17:30">*</modifier></type><name pos:start="17:31" pos:end="17:33">dst</name></decl></parameter>, <parameter pos:start="17:36" pos:end="17:49"><decl pos:start="17:36" pos:end="17:49"><type pos:start="17:36" pos:end="17:49"><name pos:start="17:36" pos:end="17:42">int16_t</name> <modifier pos:start="17:44" pos:end="17:44">*</modifier></type><name pos:start="17:45" pos:end="17:49">block</name></decl></parameter>, <parameter pos:start="17:52" pos:end="17:61"><decl pos:start="17:52" pos:end="17:61"><type pos:start="17:52" pos:end="17:61"><name pos:start="17:52" pos:end="17:54">int</name></type> <name pos:start="17:56" pos:end="17:61">stride</name></decl></parameter>)</parameter_list>;</function_decl>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:16">block_offset</name> <operator pos:start="21:18" pos:end="21:19">+=</operator> <literal type="number" pos:start="21:21" pos:end="21:22">16</literal> <operator pos:start="21:24" pos:end="21:24">*</operator> <name pos:start="21:26" pos:end="21:26">p</name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="115:5"><if pos:start="23:5" pos:end="115:5">if <condition pos:start="23:8" pos:end="23:30">(<expr pos:start="23:9" pos:end="23:29"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:29"><name pos:start="23:10" pos:end="23:20">IS_INTRA4x4</name><argument_list pos:start="23:21" pos:end="23:29">(<argument pos:start="23:22" pos:end="23:28"><expr pos:start="23:22" pos:end="23:28"><name pos:start="23:22" pos:end="23:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:32" pos:end="115:5">{<block_content pos:start="25:9" pos:end="113:9">

        <if_stmt pos:start="25:9" pos:end="113:9"><if pos:start="25:9" pos:end="69:9">if <condition pos:start="25:12" pos:end="25:35">(<expr pos:start="25:13" pos:end="25:34"><call pos:start="25:13" pos:end="25:34"><name pos:start="25:13" pos:end="25:25">IS_INTRA16x16</name><argument_list pos:start="25:26" pos:end="25:34">(<argument pos:start="25:27" pos:end="25:33"><expr pos:start="25:27" pos:end="25:33"><name pos:start="25:27" pos:end="25:33">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:37" pos:end="69:9">{<block_content pos:start="27:13" pos:end="67:13">

            <if_stmt pos:start="27:13" pos:end="67:13"><if pos:start="27:13" pos:end="57:13">if <condition pos:start="27:16" pos:end="27:33">(<expr pos:start="27:17" pos:end="27:32"><name pos:start="27:17" pos:end="27:32">transform_bypass</name></expr>)</condition> <block pos:start="27:35" pos:end="57:13">{<block_content pos:start="29:17" pos:end="55:17">

                <if_stmt pos:start="29:17" pos:end="55:17"><if pos:start="29:17" pos:end="41:17">if <condition pos:start="29:20" pos:end="33:62">(<expr pos:start="29:21" pos:end="33:61"><name pos:start="29:21" pos:end="29:38"><name pos:start="29:21" pos:end="29:21">h</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:26">sps</name><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:38">profile_idc</name></name> <operator pos:start="29:40" pos:end="29:41">==</operator> <literal type="number" pos:start="29:43" pos:end="29:45">244</literal> <operator pos:start="29:47" pos:end="29:48">&amp;&amp;</operator>

                    <operator pos:start="31:21" pos:end="31:21">(</operator><name pos:start="31:22" pos:end="31:45"><name pos:start="31:22" pos:end="31:23">sl</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:45">intra16x16_pred_mode</name></name> <operator pos:start="31:47" pos:end="31:48">==</operator> <name pos:start="31:50" pos:end="31:61">VERT_PRED8x8</name> <operator pos:start="31:63" pos:end="31:64">||</operator>

                     <name pos:start="33:22" pos:end="33:45"><name pos:start="33:22" pos:end="33:23">sl</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:45">intra16x16_pred_mode</name></name> <operator pos:start="33:47" pos:end="33:48">==</operator> <name pos:start="33:50" pos:end="33:60">HOR_PRED8x8</name><operator pos:start="33:61" pos:end="33:61">)</operator></expr>)</condition> <block pos:start="33:64" pos:end="41:17">{<block_content pos:start="35:21" pos:end="39:77">

                    <expr_stmt pos:start="35:21" pos:end="39:77"><expr pos:start="35:21" pos:end="39:76"><name pos:start="35:21" pos:end="35:66"><name pos:start="35:21" pos:end="35:21">h</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:26">hpc</name><operator pos:start="35:27" pos:end="35:27">.</operator><name pos:start="35:28" pos:end="35:40">pred16x16_add</name><index pos:start="35:41" pos:end="35:66">[<expr pos:start="35:42" pos:end="35:65"><name pos:start="35:42" pos:end="35:65"><name pos:start="35:42" pos:end="35:43">sl</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:65">intra16x16_pred_mode</name></name></expr>]</index></name><operator pos:start="35:67" pos:end="35:67">(</operator><name pos:start="35:68" pos:end="35:73">dest_y</name><operator pos:start="35:74" pos:end="35:74">,</operator> <name pos:start="35:76" pos:end="35:87">block_offset</name><operator pos:start="35:88" pos:end="35:88">,</operator>

                                                                   <name pos:start="37:68" pos:end="37:73"><name pos:start="37:68" pos:end="37:69">sl</name><operator pos:start="37:70" pos:end="37:71">-&gt;</operator><name pos:start="37:72" pos:end="37:73">mb</name></name> <operator pos:start="37:75" pos:end="37:75">+</operator> <operator pos:start="37:77" pos:end="37:77">(</operator><name pos:start="37:78" pos:end="37:78">p</name> <operator pos:start="37:80" pos:end="37:80">*</operator> <literal type="number" pos:start="37:82" pos:end="37:84">256</literal> <operator pos:start="37:86" pos:end="37:87">&lt;&lt;</operator> <name pos:start="37:89" pos:end="37:99">pixel_shift</name><operator pos:start="37:100" pos:end="37:100">)</operator><operator pos:start="37:101" pos:end="37:101">,</operator>

                                                                   <name pos:start="39:68" pos:end="39:75">linesize</name><operator pos:start="39:76" pos:end="39:76">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="41:19" pos:end="55:17">else <block pos:start="41:24" pos:end="55:17">{<block_content pos:start="43:21" pos:end="53:72">

                    <for pos:start="43:21" pos:end="53:72">for <control pos:start="43:25" pos:end="43:44">(<init pos:start="43:26" pos:end="43:31"><expr pos:start="43:26" pos:end="43:30"><name pos:start="43:26" pos:end="43:26">i</name> <operator pos:start="43:28" pos:end="43:28">=</operator> <literal type="number" pos:start="43:30" pos:end="43:30">0</literal></expr>;</init> <condition pos:start="43:33" pos:end="43:39"><expr pos:start="43:33" pos:end="43:38"><name pos:start="43:33" pos:end="43:33">i</name> <operator pos:start="43:35" pos:end="43:35">&lt;</operator> <literal type="number" pos:start="43:37" pos:end="43:38">16</literal></expr>;</condition> <incr pos:start="43:41" pos:end="43:43"><expr pos:start="43:41" pos:end="43:43"><name pos:start="43:41" pos:end="43:41">i</name><operator pos:start="43:42" pos:end="43:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:25" pos:end="53:72"><block_content pos:start="45:25" pos:end="53:72">

                        <if_stmt pos:start="45:25" pos:end="53:72"><if pos:start="45:25" pos:end="53:72">if <condition pos:start="45:28" pos:end="47:79">(<expr pos:start="45:29" pos:end="47:78"><name pos:start="45:29" pos:end="45:71"><name pos:start="45:29" pos:end="45:30">sl</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:52">non_zero_count_cache</name><index pos:start="45:53" pos:end="45:71">[<expr pos:start="45:54" pos:end="45:70"><name pos:start="45:54" pos:end="45:70"><name pos:start="45:54" pos:end="45:58">scan8</name><index pos:start="45:59" pos:end="45:70">[<expr pos:start="45:60" pos:end="45:69"><name pos:start="45:60" pos:end="45:60">i</name> <operator pos:start="45:62" pos:end="45:62">+</operator> <name pos:start="45:64" pos:end="45:64">p</name> <operator pos:start="45:66" pos:end="45:66">*</operator> <literal type="number" pos:start="45:68" pos:end="45:69">16</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="45:73" pos:end="45:74">||</operator>

                            <call pos:start="47:29" pos:end="47:78"><name pos:start="47:29" pos:end="47:39">dctcoef_get</name><argument_list pos:start="47:40" pos:end="47:78">(<argument pos:start="47:41" pos:end="47:46"><expr pos:start="47:41" pos:end="47:46"><name pos:start="47:41" pos:end="47:46"><name pos:start="47:41" pos:end="47:42">sl</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:46">mb</name></name></expr></argument>, <argument pos:start="47:49" pos:end="47:59"><expr pos:start="47:49" pos:end="47:59"><name pos:start="47:49" pos:end="47:59">pixel_shift</name></expr></argument>, <argument pos:start="47:62" pos:end="47:77"><expr pos:start="47:62" pos:end="47:77"><name pos:start="47:62" pos:end="47:62">i</name> <operator pos:start="47:64" pos:end="47:64">*</operator> <literal type="number" pos:start="47:66" pos:end="47:69">16</literal> <operator pos:start="47:69" pos:end="47:69">+</operator> <name pos:start="47:71" pos:end="47:71">p</name> <operator pos:start="47:73" pos:end="47:73">*</operator> <literal type="number" pos:start="47:75" pos:end="47:77">256</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:29" pos:end="53:72"><block_content pos:start="49:29" pos:end="53:72">

                            <expr_stmt pos:start="49:29" pos:end="53:72"><expr pos:start="49:29" pos:end="53:71"><call pos:start="49:29" pos:end="53:71"><name pos:start="49:29" pos:end="49:61"><name pos:start="49:29" pos:end="49:29">h</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:38">h264dsp</name><operator pos:start="49:39" pos:end="49:39">.</operator><name pos:start="49:40" pos:end="49:61">h264_add_pixels4_clear</name></name><argument_list pos:start="49:62" pos:end="53:71">(<argument pos:start="49:63" pos:end="49:86"><expr pos:start="49:63" pos:end="49:86"><name pos:start="49:63" pos:end="49:68">dest_y</name> <operator pos:start="49:70" pos:end="49:70">+</operator> <name pos:start="49:72" pos:end="49:86"><name pos:start="49:72" pos:end="49:83">block_offset</name><index pos:start="49:84" pos:end="49:86">[<expr pos:start="49:85" pos:end="49:85"><name pos:start="49:85" pos:end="49:85">i</name></expr>]</index></name></expr></argument>,

                                                              <argument pos:start="51:63" pos:end="51:104"><expr pos:start="51:63" pos:end="51:104"><name pos:start="51:63" pos:end="51:68"><name pos:start="51:63" pos:end="51:64">sl</name><operator pos:start="51:65" pos:end="51:66">-&gt;</operator><name pos:start="51:67" pos:end="51:68">mb</name></name> <operator pos:start="51:70" pos:end="51:70">+</operator> <operator pos:start="51:72" pos:end="51:72">(</operator><name pos:start="51:73" pos:end="51:73">i</name> <operator pos:start="51:75" pos:end="51:75">*</operator> <literal type="number" pos:start="51:77" pos:end="51:80">16</literal> <operator pos:start="51:80" pos:end="51:80">+</operator> <name pos:start="51:82" pos:end="51:82">p</name> <operator pos:start="51:84" pos:end="51:84">*</operator> <literal type="number" pos:start="51:86" pos:end="51:88">256</literal> <operator pos:start="51:90" pos:end="51:91">&lt;&lt;</operator> <name pos:start="51:93" pos:end="51:103">pixel_shift</name><operator pos:start="51:104" pos:end="51:104">)</operator></expr></argument>,

                                                              <argument pos:start="53:63" pos:end="53:70"><expr pos:start="53:63" pos:end="53:70"><name pos:start="53:63" pos:end="53:70">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="67:13">else <block pos:start="57:20" pos:end="67:13">{<block_content pos:start="59:17" pos:end="65:86">

                <expr_stmt pos:start="59:17" pos:end="65:86"><expr pos:start="59:17" pos:end="65:85"><call pos:start="59:17" pos:end="65:85"><name pos:start="59:17" pos:end="59:47"><name pos:start="59:17" pos:end="59:17">h</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:26">h264dsp</name><operator pos:start="59:27" pos:end="59:27">.</operator><name pos:start="59:28" pos:end="59:47">h264_idct_add16intra</name></name><argument_list pos:start="59:48" pos:end="65:85">(<argument pos:start="59:49" pos:end="59:54"><expr pos:start="59:49" pos:end="59:54"><name pos:start="59:49" pos:end="59:54">dest_y</name></expr></argument>, <argument pos:start="59:57" pos:end="59:68"><expr pos:start="59:57" pos:end="59:68"><name pos:start="59:57" pos:end="59:68">block_offset</name></expr></argument>,

                                                <argument pos:start="61:49" pos:end="61:81"><expr pos:start="61:49" pos:end="61:81"><name pos:start="61:49" pos:end="61:54"><name pos:start="61:49" pos:end="61:50">sl</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:54">mb</name></name> <operator pos:start="61:56" pos:end="61:56">+</operator> <operator pos:start="61:58" pos:end="61:58">(</operator><name pos:start="61:59" pos:end="61:59">p</name> <operator pos:start="61:61" pos:end="61:61">*</operator> <literal type="number" pos:start="61:63" pos:end="61:65">256</literal> <operator pos:start="61:67" pos:end="61:68">&lt;&lt;</operator> <name pos:start="61:70" pos:end="61:80">pixel_shift</name><operator pos:start="61:81" pos:end="61:81">)</operator></expr></argument>,

                                                <argument pos:start="63:49" pos:end="63:56"><expr pos:start="63:49" pos:end="63:56"><name pos:start="63:49" pos:end="63:56">linesize</name></expr></argument>,

                                                <argument pos:start="65:49" pos:end="65:84"><expr pos:start="65:49" pos:end="65:84"><name pos:start="65:49" pos:end="65:72"><name pos:start="65:49" pos:end="65:50">sl</name><operator pos:start="65:51" pos:end="65:52">-&gt;</operator><name pos:start="65:53" pos:end="65:72">non_zero_count_cache</name></name> <operator pos:start="65:74" pos:end="65:74">+</operator> <name pos:start="65:76" pos:end="65:76">p</name> <operator pos:start="65:78" pos:end="65:78">*</operator> <literal type="number" pos:start="65:80" pos:end="65:80">5</literal> <operator pos:start="65:82" pos:end="65:82">*</operator> <literal type="number" pos:start="65:84" pos:end="65:84">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="69:11" pos:end="113:9">else if <condition pos:start="69:19" pos:end="69:32">(<expr pos:start="69:20" pos:end="69:31"><name pos:start="69:20" pos:end="69:26"><name pos:start="69:20" pos:end="69:21">sl</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:26">cbp</name></name> <operator pos:start="69:28" pos:end="69:28">&amp;</operator> <literal type="number" pos:start="69:30" pos:end="69:31">15</literal></expr>)</condition> <block pos:start="69:34" pos:end="113:9">{<block_content pos:start="71:13" pos:end="111:13">

            <if_stmt pos:start="71:13" pos:end="111:13"><if pos:start="71:13" pos:end="89:13">if <condition pos:start="71:16" pos:end="71:33">(<expr pos:start="71:17" pos:end="71:32"><name pos:start="71:17" pos:end="71:32">transform_bypass</name></expr>)</condition> <block pos:start="71:35" pos:end="89:13">{<block_content pos:start="73:17" pos:end="87:43">

                <decl_stmt pos:start="73:17" pos:end="73:58"><decl pos:start="73:17" pos:end="73:57"><type pos:start="73:17" pos:end="73:25"><specifier pos:start="73:17" pos:end="73:21">const</specifier> <name pos:start="73:23" pos:end="73:25">int</name></type> <name pos:start="73:27" pos:end="73:28">di</name> <init pos:start="73:30" pos:end="73:57">= <expr pos:start="73:32" pos:end="73:57"><ternary pos:start="73:32" pos:end="73:57"><condition pos:start="73:32" pos:end="73:51"><expr pos:start="73:32" pos:end="73:49"><call pos:start="73:32" pos:end="73:49"><name pos:start="73:32" pos:end="73:40">IS_8x8DCT</name><argument_list pos:start="73:41" pos:end="73:49">(<argument pos:start="73:42" pos:end="73:48"><expr pos:start="73:42" pos:end="73:48"><name pos:start="73:42" pos:end="73:48">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="73:53" pos:end="73:53"> <expr pos:start="73:53" pos:end="73:53"><literal type="number" pos:start="73:53" pos:end="73:53">4</literal></expr> </then><else pos:start="73:55" pos:end="73:57">: <expr pos:start="73:57" pos:end="73:57"><literal type="number" pos:start="73:57" pos:end="73:57">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="75:17" pos:end="77:56"><expr pos:start="75:17" pos:end="77:55"><name pos:start="75:17" pos:end="75:24">idct_add</name> <operator pos:start="75:26" pos:end="75:26">=</operator> <ternary pos:start="75:28" pos:end="77:55"><condition pos:start="75:28" pos:end="75:47"><expr pos:start="75:28" pos:end="75:45"><call pos:start="75:28" pos:end="75:45"><name pos:start="75:28" pos:end="75:36">IS_8x8DCT</name><argument_list pos:start="75:37" pos:end="75:45">(<argument pos:start="75:38" pos:end="75:44"><expr pos:start="75:38" pos:end="75:44"><name pos:start="75:38" pos:end="75:44">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="75:49" pos:end="75:81"> <expr pos:start="75:49" pos:end="75:81"><name pos:start="75:49" pos:end="75:81"><name pos:start="75:49" pos:end="75:49">h</name><operator pos:start="75:50" pos:end="75:51">-&gt;</operator><name pos:start="75:52" pos:end="75:58">h264dsp</name><operator pos:start="75:59" pos:end="75:59">.</operator><name pos:start="75:60" pos:end="75:81">h264_add_pixels8_clear</name></name></expr>

                    </then><else pos:start="77:21" pos:end="77:55">: <expr pos:start="77:23" pos:end="77:55"><name pos:start="77:23" pos:end="77:55"><name pos:start="77:23" pos:end="77:23">h</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:32">h264dsp</name><operator pos:start="77:33" pos:end="77:33">.</operator><name pos:start="77:34" pos:end="77:55">h264_add_pixels4_clear</name></name></expr></else></ternary></expr>;</expr_stmt>

                <for pos:start="79:17" pos:end="87:43">for <control pos:start="79:21" pos:end="79:44">(<init pos:start="79:22" pos:end="79:27"><expr pos:start="79:22" pos:end="79:26"><name pos:start="79:22" pos:end="79:22">i</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <literal type="number" pos:start="79:26" pos:end="79:26">0</literal></expr>;</init> <condition pos:start="79:29" pos:end="79:35"><expr pos:start="79:29" pos:end="79:34"><name pos:start="79:29" pos:end="79:29">i</name> <operator pos:start="79:31" pos:end="79:31">&lt;</operator> <literal type="number" pos:start="79:33" pos:end="79:34">16</literal></expr>;</condition> <incr pos:start="79:37" pos:end="79:43"><expr pos:start="79:37" pos:end="79:43"><name pos:start="79:37" pos:end="79:37">i</name> <operator pos:start="79:39" pos:end="79:40">+=</operator> <name pos:start="79:42" pos:end="79:43">di</name></expr></incr>)</control><block type="pseudo" pos:start="81:21" pos:end="87:43"><block_content pos:start="81:21" pos:end="87:43">

                    <if_stmt pos:start="81:21" pos:end="87:43"><if pos:start="81:21" pos:end="87:43">if <condition pos:start="81:24" pos:end="81:68">(<expr pos:start="81:25" pos:end="81:67"><name pos:start="81:25" pos:end="81:67"><name pos:start="81:25" pos:end="81:26">sl</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:48">non_zero_count_cache</name><index pos:start="81:49" pos:end="81:67">[<expr pos:start="81:50" pos:end="81:66"><name pos:start="81:50" pos:end="81:66"><name pos:start="81:50" pos:end="81:54">scan8</name><index pos:start="81:55" pos:end="81:66">[<expr pos:start="81:56" pos:end="81:65"><name pos:start="81:56" pos:end="81:56">i</name> <operator pos:start="81:58" pos:end="81:58">+</operator> <name pos:start="81:60" pos:end="81:60">p</name> <operator pos:start="81:62" pos:end="81:62">*</operator> <literal type="number" pos:start="81:64" pos:end="81:65">16</literal></expr>]</index></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="83:25" pos:end="87:43"><block_content pos:start="83:25" pos:end="87:43">

                        <expr_stmt pos:start="83:25" pos:end="87:43"><expr pos:start="83:25" pos:end="87:42"><call pos:start="83:25" pos:end="87:42"><name pos:start="83:25" pos:end="83:32">idct_add</name><argument_list pos:start="83:33" pos:end="87:42">(<argument pos:start="83:34" pos:end="83:57"><expr pos:start="83:34" pos:end="83:57"><name pos:start="83:34" pos:end="83:39">dest_y</name> <operator pos:start="83:41" pos:end="83:41">+</operator> <name pos:start="83:43" pos:end="83:57"><name pos:start="83:43" pos:end="83:54">block_offset</name><index pos:start="83:55" pos:end="83:57">[<expr pos:start="83:56" pos:end="83:56"><name pos:start="83:56" pos:end="83:56">i</name></expr>]</index></name></expr></argument>,

                                 <argument pos:start="85:34" pos:end="85:75"><expr pos:start="85:34" pos:end="85:75"><name pos:start="85:34" pos:end="85:39"><name pos:start="85:34" pos:end="85:35">sl</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:39">mb</name></name> <operator pos:start="85:41" pos:end="85:41">+</operator> <operator pos:start="85:43" pos:end="85:43">(</operator><name pos:start="85:44" pos:end="85:44">i</name> <operator pos:start="85:46" pos:end="85:46">*</operator> <literal type="number" pos:start="85:48" pos:end="85:51">16</literal> <operator pos:start="85:51" pos:end="85:51">+</operator> <name pos:start="85:53" pos:end="85:53">p</name> <operator pos:start="85:55" pos:end="85:55">*</operator> <literal type="number" pos:start="85:57" pos:end="85:59">256</literal> <operator pos:start="85:61" pos:end="85:62">&lt;&lt;</operator> <name pos:start="85:64" pos:end="85:74">pixel_shift</name><operator pos:start="85:75" pos:end="85:75">)</operator></expr></argument>,

                                 <argument pos:start="87:34" pos:end="87:41"><expr pos:start="87:34" pos:end="87:41"><name pos:start="87:34" pos:end="87:41">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="89:15" pos:end="111:13">else <block pos:start="89:20" pos:end="111:13">{<block_content pos:start="91:17" pos:end="109:85">

                <if_stmt pos:start="91:17" pos:end="109:85"><if pos:start="91:17" pos:end="99:85">if <condition pos:start="91:20" pos:end="91:39">(<expr pos:start="91:21" pos:end="91:38"><call pos:start="91:21" pos:end="91:38"><name pos:start="91:21" pos:end="91:29">IS_8x8DCT</name><argument_list pos:start="91:30" pos:end="91:38">(<argument pos:start="91:31" pos:end="91:37"><expr pos:start="91:31" pos:end="91:37"><name pos:start="91:31" pos:end="91:37">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="93:21" pos:end="99:85"><block_content pos:start="93:21" pos:end="99:85">

                    <expr_stmt pos:start="93:21" pos:end="99:85"><expr pos:start="93:21" pos:end="99:84"><call pos:start="93:21" pos:end="99:84"><name pos:start="93:21" pos:end="93:46"><name pos:start="93:21" pos:end="93:21">h</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:30">h264dsp</name><operator pos:start="93:31" pos:end="93:31">.</operator><name pos:start="93:32" pos:end="93:46">h264_idct8_add4</name></name><argument_list pos:start="93:47" pos:end="99:84">(<argument pos:start="93:48" pos:end="93:53"><expr pos:start="93:48" pos:end="93:53"><name pos:start="93:48" pos:end="93:53">dest_y</name></expr></argument>, <argument pos:start="93:56" pos:end="93:67"><expr pos:start="93:56" pos:end="93:67"><name pos:start="93:56" pos:end="93:67">block_offset</name></expr></argument>,

                                               <argument pos:start="95:48" pos:end="95:80"><expr pos:start="95:48" pos:end="95:80"><name pos:start="95:48" pos:end="95:53"><name pos:start="95:48" pos:end="95:49">sl</name><operator pos:start="95:50" pos:end="95:51">-&gt;</operator><name pos:start="95:52" pos:end="95:53">mb</name></name> <operator pos:start="95:55" pos:end="95:55">+</operator> <operator pos:start="95:57" pos:end="95:57">(</operator><name pos:start="95:58" pos:end="95:58">p</name> <operator pos:start="95:60" pos:end="95:60">*</operator> <literal type="number" pos:start="95:62" pos:end="95:64">256</literal> <operator pos:start="95:66" pos:end="95:67">&lt;&lt;</operator> <name pos:start="95:69" pos:end="95:79">pixel_shift</name><operator pos:start="95:80" pos:end="95:80">)</operator></expr></argument>,

                                               <argument pos:start="97:48" pos:end="97:55"><expr pos:start="97:48" pos:end="97:55"><name pos:start="97:48" pos:end="97:55">linesize</name></expr></argument>,

                                               <argument pos:start="99:48" pos:end="99:83"><expr pos:start="99:48" pos:end="99:83"><name pos:start="99:48" pos:end="99:71"><name pos:start="99:48" pos:end="99:49">sl</name><operator pos:start="99:50" pos:end="99:51">-&gt;</operator><name pos:start="99:52" pos:end="99:71">non_zero_count_cache</name></name> <operator pos:start="99:73" pos:end="99:73">+</operator> <name pos:start="99:75" pos:end="99:75">p</name> <operator pos:start="99:77" pos:end="99:77">*</operator> <literal type="number" pos:start="99:79" pos:end="99:79">5</literal> <operator pos:start="99:81" pos:end="99:81">*</operator> <literal type="number" pos:start="99:83" pos:end="99:83">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="101:17" pos:end="109:85">else<block type="pseudo" pos:start="103:21" pos:end="109:85"><block_content pos:start="103:21" pos:end="109:85">

                    <expr_stmt pos:start="103:21" pos:end="109:85"><expr pos:start="103:21" pos:end="109:84"><call pos:start="103:21" pos:end="109:84"><name pos:start="103:21" pos:end="103:46"><name pos:start="103:21" pos:end="103:21">h</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:30">h264dsp</name><operator pos:start="103:31" pos:end="103:31">.</operator><name pos:start="103:32" pos:end="103:46">h264_idct_add16</name></name><argument_list pos:start="103:47" pos:end="109:84">(<argument pos:start="103:48" pos:end="103:53"><expr pos:start="103:48" pos:end="103:53"><name pos:start="103:48" pos:end="103:53">dest_y</name></expr></argument>, <argument pos:start="103:56" pos:end="103:67"><expr pos:start="103:56" pos:end="103:67"><name pos:start="103:56" pos:end="103:67">block_offset</name></expr></argument>,

                                               <argument pos:start="105:48" pos:end="105:80"><expr pos:start="105:48" pos:end="105:80"><name pos:start="105:48" pos:end="105:53"><name pos:start="105:48" pos:end="105:49">sl</name><operator pos:start="105:50" pos:end="105:51">-&gt;</operator><name pos:start="105:52" pos:end="105:53">mb</name></name> <operator pos:start="105:55" pos:end="105:55">+</operator> <operator pos:start="105:57" pos:end="105:57">(</operator><name pos:start="105:58" pos:end="105:58">p</name> <operator pos:start="105:60" pos:end="105:60">*</operator> <literal type="number" pos:start="105:62" pos:end="105:64">256</literal> <operator pos:start="105:66" pos:end="105:67">&lt;&lt;</operator> <name pos:start="105:69" pos:end="105:79">pixel_shift</name><operator pos:start="105:80" pos:end="105:80">)</operator></expr></argument>,

                                               <argument pos:start="107:48" pos:end="107:55"><expr pos:start="107:48" pos:end="107:55"><name pos:start="107:48" pos:end="107:55">linesize</name></expr></argument>,

                                               <argument pos:start="109:48" pos:end="109:83"><expr pos:start="109:48" pos:end="109:83"><name pos:start="109:48" pos:end="109:71"><name pos:start="109:48" pos:end="109:49">sl</name><operator pos:start="109:50" pos:end="109:51">-&gt;</operator><name pos:start="109:52" pos:end="109:71">non_zero_count_cache</name></name> <operator pos:start="109:73" pos:end="109:73">+</operator> <name pos:start="109:75" pos:end="109:75">p</name> <operator pos:start="109:77" pos:end="109:77">*</operator> <literal type="number" pos:start="109:79" pos:end="109:79">5</literal> <operator pos:start="109:81" pos:end="109:81">*</operator> <literal type="number" pos:start="109:83" pos:end="109:83">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
