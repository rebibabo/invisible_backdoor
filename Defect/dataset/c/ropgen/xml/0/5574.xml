<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5574.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">sclp_parse</name><parameter_list pos:start="1:22" pos:end="1:42">(<parameter pos:start="1:23" pos:end="1:41"><decl pos:start="1:23" pos:end="1:41"><type pos:start="1:23" pos:end="1:34"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:32">char</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:41">devname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">QemuOptsList</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:24">device</name> <init pos:start="5:26" pos:end="5:51">= <expr pos:start="5:28" pos:end="5:51"><call pos:start="5:28" pos:end="5:51"><name pos:start="5:28" pos:end="5:41">qemu_find_opts</name><argument_list pos:start="5:42" pos:end="5:51">(<argument pos:start="5:43" pos:end="5:50"><expr pos:start="5:43" pos:end="5:50"><literal type="string" pos:start="5:43" pos:end="5:50">"device"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:14"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:20">index</name> <init pos:start="7:22" pos:end="7:24">= <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:14">label</name><index pos:start="9:15" pos:end="9:18">[<expr pos:start="9:16" pos:end="9:17"><literal type="number" pos:start="9:16" pos:end="9:17">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">QemuOpts</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:22">dev_opts</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:37">(<expr pos:start="15:9" pos:end="15:36"><call pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:14">strcmp</name><argument_list pos:start="15:15" pos:end="15:31">(<argument pos:start="15:16" pos:end="15:22"><expr pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:22">devname</name></expr></argument>, <argument pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:30"><literal type="string" pos:start="15:25" pos:end="15:30">"none"</literal></expr></argument>)</argument_list></call> <operator pos:start="15:33" pos:end="15:34">==</operator> <literal type="number" pos:start="15:36" pos:end="15:36">0</literal></expr>)</condition> <block pos:start="15:39" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:13">index</name> <operator pos:start="21:15" pos:end="21:16">==</operator> <name pos:start="21:18" pos:end="21:34">MAX_SCLP_CONSOLES</name></expr>)</condition> <block pos:start="21:37" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:16">

        <expr_stmt pos:start="23:9" pos:end="23:58"><expr pos:start="23:9" pos:end="23:57"><call pos:start="23:9" pos:end="23:57"><name pos:start="23:9" pos:end="23:15">fprintf</name><argument_list pos:start="23:16" pos:end="23:57">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">stderr</name></expr></argument>, <argument pos:start="23:25" pos:end="23:56"><expr pos:start="23:25" pos:end="23:56"><literal type="string" pos:start="23:25" pos:end="23:56">"qemu: too many sclp consoles\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:16"><expr pos:start="25:9" pos:end="25:15"><call pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:12">exit</name><argument_list pos:start="25:13" pos:end="25:15">(<argument pos:start="25:14" pos:end="25:14"><expr pos:start="25:14" pos:end="25:14"><literal type="number" pos:start="25:14" pos:end="25:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><call pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:10">assert</name><argument_list pos:start="31:11" pos:end="31:40">(<argument pos:start="31:12" pos:end="31:39"><expr pos:start="31:12" pos:end="31:39"><name pos:start="31:12" pos:end="31:20">arch_type</name> <operator pos:start="31:22" pos:end="31:23">==</operator> <name pos:start="31:25" pos:end="31:39">QEMU_ARCH_S390X</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:55"><expr pos:start="35:5" pos:end="35:54"><name pos:start="35:5" pos:end="35:12">dev_opts</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:54"><name pos:start="35:16" pos:end="35:31">qemu_opts_create</name><argument_list pos:start="35:32" pos:end="35:54">(<argument pos:start="35:33" pos:end="35:38"><expr pos:start="35:33" pos:end="35:38"><name pos:start="35:33" pos:end="35:38">device</name></expr></argument>, <argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><name pos:start="35:41" pos:end="35:44">NULL</name></expr></argument>, <argument pos:start="35:47" pos:end="35:47"><expr pos:start="35:47" pos:end="35:47"><literal type="number" pos:start="35:47" pos:end="35:47">0</literal></expr></argument>, <argument pos:start="35:50" pos:end="35:53"><expr pos:start="35:50" pos:end="35:53"><name pos:start="35:50" pos:end="35:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:66"><expr pos:start="37:5" pos:end="37:65"><call pos:start="37:5" pos:end="37:65"><name pos:start="37:5" pos:end="37:16">qemu_opt_set</name><argument_list pos:start="37:17" pos:end="37:65">(<argument pos:start="37:18" pos:end="37:25"><expr pos:start="37:18" pos:end="37:25"><name pos:start="37:18" pos:end="37:25">dev_opts</name></expr></argument>, <argument pos:start="37:28" pos:end="37:35"><expr pos:start="37:28" pos:end="37:35"><literal type="string" pos:start="37:28" pos:end="37:35">"driver"</literal></expr></argument>, <argument pos:start="37:38" pos:end="37:50"><expr pos:start="37:38" pos:end="37:50"><literal type="string" pos:start="37:38" pos:end="37:50">"sclpconsole"</literal></expr></argument>, <argument pos:start="37:53" pos:end="37:64"><expr pos:start="37:53" pos:end="37:64"><operator pos:start="37:53" pos:end="37:53">&amp;</operator><name pos:start="37:54" pos:end="37:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:55"><expr pos:start="41:5" pos:end="41:54"><call pos:start="41:5" pos:end="41:54"><name pos:start="41:5" pos:end="41:12">snprintf</name><argument_list pos:start="41:13" pos:end="41:54">(<argument pos:start="41:14" pos:end="41:18"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:18">label</name></expr></argument>, <argument pos:start="41:21" pos:end="41:33"><expr pos:start="41:21" pos:end="41:33"><sizeof pos:start="41:21" pos:end="41:33">sizeof<argument_list pos:start="41:27" pos:end="41:33">(<argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:32">label</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="41:36" pos:end="41:46"><expr pos:start="41:36" pos:end="41:46"><literal type="string" pos:start="41:36" pos:end="41:46">"sclpcon%d"</literal></expr></argument>, <argument pos:start="41:49" pos:end="41:53"><expr pos:start="41:49" pos:end="41:53"><name pos:start="41:49" pos:end="41:53">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:12">sclp_hds</name><index pos:start="43:13" pos:end="43:19">[<expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:18">index</name></expr>]</index></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:56"><name pos:start="43:23" pos:end="43:34">qemu_chr_new</name><argument_list pos:start="43:35" pos:end="43:56">(<argument pos:start="43:36" pos:end="43:40"><expr pos:start="43:36" pos:end="43:40"><name pos:start="43:36" pos:end="43:40">label</name></expr></argument>, <argument pos:start="43:43" pos:end="43:49"><expr pos:start="43:43" pos:end="43:49"><name pos:start="43:43" pos:end="43:49">devname</name></expr></argument>, <argument pos:start="43:52" pos:end="43:55"><expr pos:start="43:52" pos:end="43:55"><name pos:start="43:52" pos:end="43:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:25">(<expr pos:start="45:9" pos:end="45:24"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:24"><name pos:start="45:10" pos:end="45:17">sclp_hds</name><index pos:start="45:18" pos:end="45:24">[<expr pos:start="45:19" pos:end="45:23"><name pos:start="45:19" pos:end="45:23">index</name></expr>]</index></name></expr>)</condition> <block pos:start="45:27" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:18">

        <expr_stmt pos:start="47:9" pos:end="49:57"><expr pos:start="47:9" pos:end="49:56"><call pos:start="47:9" pos:end="49:56"><name pos:start="47:9" pos:end="47:15">fprintf</name><argument_list pos:start="47:16" pos:end="49:56">(<argument pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:22">stderr</name></expr></argument>, <argument pos:start="47:25" pos:end="49:46"><expr pos:start="47:25" pos:end="49:46"><literal type="string" pos:start="47:25" pos:end="47:62">"qemu: could not connect sclp console"</literal>

                <literal type="string" pos:start="49:17" pos:end="49:46">" to character backend '%s'\n"</literal></expr></argument>, <argument pos:start="49:49" pos:end="49:55"><expr pos:start="49:49" pos:end="49:55"><name pos:start="49:49" pos:end="49:55">devname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:59"><expr pos:start="55:5" pos:end="55:58"><call pos:start="55:5" pos:end="55:58"><name pos:start="55:5" pos:end="55:16">qemu_opt_set</name><argument_list pos:start="55:17" pos:end="55:58">(<argument pos:start="55:18" pos:end="55:25"><expr pos:start="55:18" pos:end="55:25"><name pos:start="55:18" pos:end="55:25">dev_opts</name></expr></argument>, <argument pos:start="55:28" pos:end="55:36"><expr pos:start="55:28" pos:end="55:36"><literal type="string" pos:start="55:28" pos:end="55:36">"chardev"</literal></expr></argument>, <argument pos:start="55:39" pos:end="55:43"><expr pos:start="55:39" pos:end="55:43"><name pos:start="55:39" pos:end="55:43">label</name></expr></argument>, <argument pos:start="55:46" pos:end="55:57"><expr pos:start="55:46" pos:end="55:57"><operator pos:start="55:46" pos:end="55:46">&amp;</operator><name pos:start="55:47" pos:end="55:57">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:12"><expr pos:start="59:5" pos:end="59:11"><name pos:start="59:5" pos:end="59:9">index</name><operator pos:start="59:10" pos:end="59:11">++</operator></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
