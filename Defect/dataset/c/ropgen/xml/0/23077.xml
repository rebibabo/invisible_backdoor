<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23077.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:6">size_t</name></type> <name pos:start="1:8" pos:end="1:19">v9fs_marshal</name><parameter_list pos:start="1:20" pos:end="3:52">(<parameter pos:start="1:21" pos:end="1:39"><decl pos:start="1:21" pos:end="1:39"><type pos:start="1:21" pos:end="1:39"><name pos:start="1:21" pos:end="1:32"><name pos:start="1:21" pos:end="1:26">struct</name> <name pos:start="1:28" pos:end="1:32">iovec</name></name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:39">in_sg</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:51">in_num</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:66"><decl pos:start="1:54" pos:end="1:66"><type pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:59">size_t</name></type> <name pos:start="1:61" pos:end="1:66">offset</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:29"><decl pos:start="3:21" pos:end="3:29"><type pos:start="3:21" pos:end="3:29"><name pos:start="3:21" pos:end="3:23">int</name></type> <name pos:start="3:25" pos:end="3:29">bswap</name></decl></parameter>, <parameter pos:start="3:32" pos:end="3:46"><decl pos:start="3:32" pos:end="3:46"><type pos:start="3:32" pos:end="3:46"><specifier pos:start="3:32" pos:end="3:36">const</specifier> <name pos:start="3:38" pos:end="3:41">char</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">fmt</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:51"><decl pos:start="3:49" pos:end="3:51"><type pos:start="3:49" pos:end="3:51"><modifier pos:start="3:49" pos:end="3:51">...</modifier></type></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="189:1">{<block_content pos:start="7:5" pos:end="187:31">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">va_list</name></type> <name pos:start="9:13" pos:end="9:14">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:21">old_offset</name> <init pos:start="11:23" pos:end="11:30">= <expr pos:start="11:25" pos:end="11:30"><name pos:start="11:25" pos:end="11:30">offset</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><call pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:12">va_start</name><argument_list pos:start="15:13" pos:end="15:21">(<argument pos:start="15:14" pos:end="15:15"><expr pos:start="15:14" pos:end="15:15"><name pos:start="15:14" pos:end="15:15">ap</name></expr></argument>, <argument pos:start="15:18" pos:end="15:20"><expr pos:start="15:18" pos:end="15:20"><name pos:start="15:18" pos:end="15:20">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="181:5">for <control pos:start="17:9" pos:end="17:28">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:23"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:19">fmt</name><index pos:start="17:20" pos:end="17:22">[<expr pos:start="17:21" pos:end="17:21"><name pos:start="17:21" pos:end="17:21">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:25">i</name><operator pos:start="17:26" pos:end="17:27">++</operator></expr></incr>)</control> <block pos:start="17:30" pos:end="181:5">{<block_content pos:start="19:9" pos:end="179:9">

        <switch pos:start="19:9" pos:end="179:9">switch <condition pos:start="19:16" pos:end="19:23">(<expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:19">fmt</name><index pos:start="19:20" pos:end="19:22">[<expr pos:start="19:21" pos:end="19:21"><name pos:start="19:21" pos:end="19:21">i</name></expr>]</index></name></expr>)</condition> <block pos:start="19:25" pos:end="179:9">{<block_content pos:start="21:9" pos:end="177:18">

        <case pos:start="21:9" pos:end="21:17">case <expr pos:start="21:14" pos:end="21:16"><literal type="char" pos:start="21:14" pos:end="21:16">'b'</literal></expr>:</case> <block pos:start="21:19" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:18">

            <decl_stmt pos:start="23:13" pos:end="23:42"><decl pos:start="23:13" pos:end="23:41"><type pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:19">uint8_t</name></type> <name pos:start="23:21" pos:end="23:23">val</name> <init pos:start="23:25" pos:end="23:41">= <expr pos:start="23:27" pos:end="23:41"><call pos:start="23:27" pos:end="23:41"><name pos:start="23:27" pos:end="23:32">va_arg</name><argument_list pos:start="23:33" pos:end="23:41">(<argument pos:start="23:34" pos:end="23:35"><expr pos:start="23:34" pos:end="23:35"><name pos:start="23:34" pos:end="23:35">ap</name></expr></argument>, <argument pos:start="23:38" pos:end="23:40"><expr pos:start="23:38" pos:end="23:40"><name pos:start="23:38" pos:end="23:40">int</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:74"><expr pos:start="25:13" pos:end="25:73"><name pos:start="25:13" pos:end="25:18">offset</name> <operator pos:start="25:20" pos:end="25:21">+=</operator> <call pos:start="25:23" pos:end="25:73"><name pos:start="25:23" pos:end="25:31">v9fs_pack</name><argument_list pos:start="25:32" pos:end="25:73">(<argument pos:start="25:33" pos:end="25:37"><expr pos:start="25:33" pos:end="25:37"><name pos:start="25:33" pos:end="25:37">in_sg</name></expr></argument>, <argument pos:start="25:40" pos:end="25:45"><expr pos:start="25:40" pos:end="25:45"><name pos:start="25:40" pos:end="25:45">in_num</name></expr></argument>, <argument pos:start="25:48" pos:end="25:53"><expr pos:start="25:48" pos:end="25:53"><name pos:start="25:48" pos:end="25:53">offset</name></expr></argument>, <argument pos:start="25:56" pos:end="25:59"><expr pos:start="25:56" pos:end="25:59"><operator pos:start="25:56" pos:end="25:56">&amp;</operator><name pos:start="25:57" pos:end="25:59">val</name></expr></argument>, <argument pos:start="25:62" pos:end="25:72"><expr pos:start="25:62" pos:end="25:72"><sizeof pos:start="25:62" pos:end="25:72">sizeof<argument_list pos:start="25:68" pos:end="25:72">(<argument pos:start="25:69" pos:end="25:71"><expr pos:start="25:69" pos:end="25:71"><name pos:start="25:69" pos:end="25:71">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        </block_content>}</block>

        <case pos:start="31:9" pos:end="31:17">case <expr pos:start="31:14" pos:end="31:16"><literal type="char" pos:start="31:14" pos:end="31:16">'w'</literal></expr>:</case> <block pos:start="31:19" pos:end="49:9">{<block_content pos:start="33:13" pos:end="47:18">

            <decl_stmt pos:start="33:13" pos:end="33:25"><decl pos:start="33:13" pos:end="33:24"><type pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:20">uint16_t</name></type> <name pos:start="33:22" pos:end="33:24">val</name></decl>;</decl_stmt>

            <if_stmt pos:start="35:13" pos:end="43:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:22">(<expr pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:21">bswap</name></expr>)</condition> <block pos:start="35:24" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:52">

                <expr_stmt pos:start="37:17" pos:end="37:52"><expr pos:start="37:17" pos:end="37:51"><call pos:start="37:17" pos:end="37:51"><name pos:start="37:17" pos:end="37:28">cpu_to_le16w</name><argument_list pos:start="37:29" pos:end="37:51">(<argument pos:start="37:30" pos:end="37:33"><expr pos:start="37:30" pos:end="37:33"><operator pos:start="37:30" pos:end="37:30">&amp;</operator><name pos:start="37:31" pos:end="37:33">val</name></expr></argument>, <argument pos:start="37:36" pos:end="37:50"><expr pos:start="37:36" pos:end="37:50"><call pos:start="37:36" pos:end="37:50"><name pos:start="37:36" pos:end="37:41">va_arg</name><argument_list pos:start="37:42" pos:end="37:50">(<argument pos:start="37:43" pos:end="37:44"><expr pos:start="37:43" pos:end="37:44"><name pos:start="37:43" pos:end="37:44">ap</name></expr></argument>, <argument pos:start="37:47" pos:end="37:49"><expr pos:start="37:47" pos:end="37:49"><name pos:start="37:47" pos:end="37:49">int</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="39:15" pos:end="43:13">else <block pos:start="39:20" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:39">

                <expr_stmt pos:start="41:17" pos:end="41:39"><expr pos:start="41:17" pos:end="41:38"><name pos:start="41:17" pos:end="41:19">val</name> <operator pos:start="41:21" pos:end="41:21">=</operator>  <call pos:start="41:24" pos:end="41:38"><name pos:start="41:24" pos:end="41:29">va_arg</name><argument_list pos:start="41:30" pos:end="41:38">(<argument pos:start="41:31" pos:end="41:32"><expr pos:start="41:31" pos:end="41:32"><name pos:start="41:31" pos:end="41:32">ap</name></expr></argument>, <argument pos:start="41:35" pos:end="41:37"><expr pos:start="41:35" pos:end="41:37"><name pos:start="41:35" pos:end="41:37">int</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:74"><expr pos:start="45:13" pos:end="45:73"><name pos:start="45:13" pos:end="45:18">offset</name> <operator pos:start="45:20" pos:end="45:21">+=</operator> <call pos:start="45:23" pos:end="45:73"><name pos:start="45:23" pos:end="45:31">v9fs_pack</name><argument_list pos:start="45:32" pos:end="45:73">(<argument pos:start="45:33" pos:end="45:37"><expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:37">in_sg</name></expr></argument>, <argument pos:start="45:40" pos:end="45:45"><expr pos:start="45:40" pos:end="45:45"><name pos:start="45:40" pos:end="45:45">in_num</name></expr></argument>, <argument pos:start="45:48" pos:end="45:53"><expr pos:start="45:48" pos:end="45:53"><name pos:start="45:48" pos:end="45:53">offset</name></expr></argument>, <argument pos:start="45:56" pos:end="45:59"><expr pos:start="45:56" pos:end="45:59"><operator pos:start="45:56" pos:end="45:56">&amp;</operator><name pos:start="45:57" pos:end="45:59">val</name></expr></argument>, <argument pos:start="45:62" pos:end="45:72"><expr pos:start="45:62" pos:end="45:72"><sizeof pos:start="45:62" pos:end="45:72">sizeof<argument_list pos:start="45:68" pos:end="45:72">(<argument pos:start="45:69" pos:end="45:71"><expr pos:start="45:69" pos:end="45:71"><name pos:start="45:69" pos:end="45:71">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block>

        <case pos:start="51:9" pos:end="51:17">case <expr pos:start="51:14" pos:end="51:16"><literal type="char" pos:start="51:14" pos:end="51:16">'d'</literal></expr>:</case> <block pos:start="51:19" pos:end="69:9">{<block_content pos:start="53:13" pos:end="67:18">

            <decl_stmt pos:start="53:13" pos:end="53:25"><decl pos:start="53:13" pos:end="53:24"><type pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:20">uint32_t</name></type> <name pos:start="53:22" pos:end="53:24">val</name></decl>;</decl_stmt>

            <if_stmt pos:start="55:13" pos:end="63:13"><if pos:start="55:13" pos:end="59:13">if <condition pos:start="55:16" pos:end="55:22">(<expr pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:21">bswap</name></expr>)</condition> <block pos:start="55:24" pos:end="59:13">{<block_content pos:start="57:17" pos:end="57:57">

                <expr_stmt pos:start="57:17" pos:end="57:57"><expr pos:start="57:17" pos:end="57:56"><call pos:start="57:17" pos:end="57:56"><name pos:start="57:17" pos:end="57:28">cpu_to_le32w</name><argument_list pos:start="57:29" pos:end="57:56">(<argument pos:start="57:30" pos:end="57:33"><expr pos:start="57:30" pos:end="57:33"><operator pos:start="57:30" pos:end="57:30">&amp;</operator><name pos:start="57:31" pos:end="57:33">val</name></expr></argument>, <argument pos:start="57:36" pos:end="57:55"><expr pos:start="57:36" pos:end="57:55"><call pos:start="57:36" pos:end="57:55"><name pos:start="57:36" pos:end="57:41">va_arg</name><argument_list pos:start="57:42" pos:end="57:55">(<argument pos:start="57:43" pos:end="57:44"><expr pos:start="57:43" pos:end="57:44"><name pos:start="57:43" pos:end="57:44">ap</name></expr></argument>, <argument pos:start="57:47" pos:end="57:54"><expr pos:start="57:47" pos:end="57:54"><name pos:start="57:47" pos:end="57:54">uint32_t</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="59:15" pos:end="63:13">else <block pos:start="59:20" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:44">

                <expr_stmt pos:start="61:17" pos:end="61:44"><expr pos:start="61:17" pos:end="61:43"><name pos:start="61:17" pos:end="61:19">val</name> <operator pos:start="61:21" pos:end="61:21">=</operator>  <call pos:start="61:24" pos:end="61:43"><name pos:start="61:24" pos:end="61:29">va_arg</name><argument_list pos:start="61:30" pos:end="61:43">(<argument pos:start="61:31" pos:end="61:32"><expr pos:start="61:31" pos:end="61:32"><name pos:start="61:31" pos:end="61:32">ap</name></expr></argument>, <argument pos:start="61:35" pos:end="61:42"><expr pos:start="61:35" pos:end="61:42"><name pos:start="61:35" pos:end="61:42">uint32_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:74"><expr pos:start="65:13" pos:end="65:73"><name pos:start="65:13" pos:end="65:18">offset</name> <operator pos:start="65:20" pos:end="65:21">+=</operator> <call pos:start="65:23" pos:end="65:73"><name pos:start="65:23" pos:end="65:31">v9fs_pack</name><argument_list pos:start="65:32" pos:end="65:73">(<argument pos:start="65:33" pos:end="65:37"><expr pos:start="65:33" pos:end="65:37"><name pos:start="65:33" pos:end="65:37">in_sg</name></expr></argument>, <argument pos:start="65:40" pos:end="65:45"><expr pos:start="65:40" pos:end="65:45"><name pos:start="65:40" pos:end="65:45">in_num</name></expr></argument>, <argument pos:start="65:48" pos:end="65:53"><expr pos:start="65:48" pos:end="65:53"><name pos:start="65:48" pos:end="65:53">offset</name></expr></argument>, <argument pos:start="65:56" pos:end="65:59"><expr pos:start="65:56" pos:end="65:59"><operator pos:start="65:56" pos:end="65:56">&amp;</operator><name pos:start="65:57" pos:end="65:59">val</name></expr></argument>, <argument pos:start="65:62" pos:end="65:72"><expr pos:start="65:62" pos:end="65:72"><sizeof pos:start="65:62" pos:end="65:72">sizeof<argument_list pos:start="65:68" pos:end="65:72">(<argument pos:start="65:69" pos:end="65:71"><expr pos:start="65:69" pos:end="65:71"><name pos:start="65:69" pos:end="65:71">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        </block_content>}</block>

        <case pos:start="71:9" pos:end="71:17">case <expr pos:start="71:14" pos:end="71:16"><literal type="char" pos:start="71:14" pos:end="71:16">'q'</literal></expr>:</case> <block pos:start="71:19" pos:end="89:9">{<block_content pos:start="73:13" pos:end="87:18">

            <decl_stmt pos:start="73:13" pos:end="73:25"><decl pos:start="73:13" pos:end="73:24"><type pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:20">uint64_t</name></type> <name pos:start="73:22" pos:end="73:24">val</name></decl>;</decl_stmt>

            <if_stmt pos:start="75:13" pos:end="83:13"><if pos:start="75:13" pos:end="79:13">if <condition pos:start="75:16" pos:end="75:22">(<expr pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:21">bswap</name></expr>)</condition> <block pos:start="75:24" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:57">

                <expr_stmt pos:start="77:17" pos:end="77:57"><expr pos:start="77:17" pos:end="77:56"><call pos:start="77:17" pos:end="77:56"><name pos:start="77:17" pos:end="77:28">cpu_to_le64w</name><argument_list pos:start="77:29" pos:end="77:56">(<argument pos:start="77:30" pos:end="77:33"><expr pos:start="77:30" pos:end="77:33"><operator pos:start="77:30" pos:end="77:30">&amp;</operator><name pos:start="77:31" pos:end="77:33">val</name></expr></argument>, <argument pos:start="77:36" pos:end="77:55"><expr pos:start="77:36" pos:end="77:55"><call pos:start="77:36" pos:end="77:55"><name pos:start="77:36" pos:end="77:41">va_arg</name><argument_list pos:start="77:42" pos:end="77:55">(<argument pos:start="77:43" pos:end="77:44"><expr pos:start="77:43" pos:end="77:44"><name pos:start="77:43" pos:end="77:44">ap</name></expr></argument>, <argument pos:start="77:47" pos:end="77:54"><expr pos:start="77:47" pos:end="77:54"><name pos:start="77:47" pos:end="77:54">uint64_t</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="79:15" pos:end="83:13">else <block pos:start="79:20" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:44">

                <expr_stmt pos:start="81:17" pos:end="81:44"><expr pos:start="81:17" pos:end="81:43"><name pos:start="81:17" pos:end="81:19">val</name> <operator pos:start="81:21" pos:end="81:21">=</operator>  <call pos:start="81:24" pos:end="81:43"><name pos:start="81:24" pos:end="81:29">va_arg</name><argument_list pos:start="81:30" pos:end="81:43">(<argument pos:start="81:31" pos:end="81:32"><expr pos:start="81:31" pos:end="81:32"><name pos:start="81:31" pos:end="81:32">ap</name></expr></argument>, <argument pos:start="81:35" pos:end="81:42"><expr pos:start="81:35" pos:end="81:42"><name pos:start="81:35" pos:end="81:42">uint64_t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:74"><expr pos:start="85:13" pos:end="85:73"><name pos:start="85:13" pos:end="85:18">offset</name> <operator pos:start="85:20" pos:end="85:21">+=</operator> <call pos:start="85:23" pos:end="85:73"><name pos:start="85:23" pos:end="85:31">v9fs_pack</name><argument_list pos:start="85:32" pos:end="85:73">(<argument pos:start="85:33" pos:end="85:37"><expr pos:start="85:33" pos:end="85:37"><name pos:start="85:33" pos:end="85:37">in_sg</name></expr></argument>, <argument pos:start="85:40" pos:end="85:45"><expr pos:start="85:40" pos:end="85:45"><name pos:start="85:40" pos:end="85:45">in_num</name></expr></argument>, <argument pos:start="85:48" pos:end="85:53"><expr pos:start="85:48" pos:end="85:53"><name pos:start="85:48" pos:end="85:53">offset</name></expr></argument>, <argument pos:start="85:56" pos:end="85:59"><expr pos:start="85:56" pos:end="85:59"><operator pos:start="85:56" pos:end="85:56">&amp;</operator><name pos:start="85:57" pos:end="85:59">val</name></expr></argument>, <argument pos:start="85:62" pos:end="85:72"><expr pos:start="85:62" pos:end="85:72"><sizeof pos:start="85:62" pos:end="85:72">sizeof<argument_list pos:start="85:68" pos:end="85:72">(<argument pos:start="85:69" pos:end="85:71"><expr pos:start="85:69" pos:end="85:71"><name pos:start="85:69" pos:end="85:71">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        </block_content>}</block>

        <case pos:start="91:9" pos:end="91:17">case <expr pos:start="91:14" pos:end="91:16"><literal type="char" pos:start="91:14" pos:end="91:16">'s'</literal></expr>:</case> <block pos:start="91:19" pos:end="103:9">{<block_content pos:start="93:13" pos:end="101:18">

            <decl_stmt pos:start="93:13" pos:end="93:55"><decl pos:start="93:13" pos:end="93:54"><type pos:start="93:13" pos:end="93:24"><name pos:start="93:13" pos:end="93:22">V9fsString</name> <modifier pos:start="93:24" pos:end="93:24">*</modifier></type><name pos:start="93:25" pos:end="93:27">str</name> <init pos:start="93:29" pos:end="93:54">= <expr pos:start="93:31" pos:end="93:54"><call pos:start="93:31" pos:end="93:54"><name pos:start="93:31" pos:end="93:36">va_arg</name><argument_list pos:start="93:37" pos:end="93:54">(<argument pos:start="93:38" pos:end="93:39"><expr pos:start="93:38" pos:end="93:39"><name pos:start="93:38" pos:end="93:39">ap</name></expr></argument>, <argument pos:start="93:42" pos:end="93:53"><expr pos:start="93:42" pos:end="93:53"><name pos:start="93:42" pos:end="93:51">V9fsString</name> <operator pos:start="93:53" pos:end="93:53">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="95:13" pos:end="97:44"><expr pos:start="95:13" pos:end="97:43"><name pos:start="95:13" pos:end="95:18">offset</name> <operator pos:start="95:20" pos:end="95:21">+=</operator> <call pos:start="95:23" pos:end="97:43"><name pos:start="95:23" pos:end="95:34">v9fs_marshal</name><argument_list pos:start="95:35" pos:end="97:43">(<argument pos:start="95:36" pos:end="95:40"><expr pos:start="95:36" pos:end="95:40"><name pos:start="95:36" pos:end="95:40">in_sg</name></expr></argument>, <argument pos:start="95:43" pos:end="95:48"><expr pos:start="95:43" pos:end="95:48"><name pos:start="95:43" pos:end="95:48">in_num</name></expr></argument>, <argument pos:start="95:51" pos:end="95:56"><expr pos:start="95:51" pos:end="95:56"><name pos:start="95:51" pos:end="95:56">offset</name></expr></argument>, <argument pos:start="95:59" pos:end="95:63"><expr pos:start="95:59" pos:end="95:63"><name pos:start="95:59" pos:end="95:63">bswap</name></expr></argument>,

                            <argument pos:start="97:29" pos:end="97:31"><expr pos:start="97:29" pos:end="97:31"><literal type="string" pos:start="97:29" pos:end="97:31">"w"</literal></expr></argument>, <argument pos:start="97:34" pos:end="97:42"><expr pos:start="97:34" pos:end="97:42"><name pos:start="97:34" pos:end="97:42"><name pos:start="97:34" pos:end="97:36">str</name><operator pos:start="97:37" pos:end="97:38">-&gt;</operator><name pos:start="97:39" pos:end="97:42">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:77"><expr pos:start="99:13" pos:end="99:76"><name pos:start="99:13" pos:end="99:18">offset</name> <operator pos:start="99:20" pos:end="99:21">+=</operator> <call pos:start="99:23" pos:end="99:76"><name pos:start="99:23" pos:end="99:31">v9fs_pack</name><argument_list pos:start="99:32" pos:end="99:76">(<argument pos:start="99:33" pos:end="99:37"><expr pos:start="99:33" pos:end="99:37"><name pos:start="99:33" pos:end="99:37">in_sg</name></expr></argument>, <argument pos:start="99:40" pos:end="99:45"><expr pos:start="99:40" pos:end="99:45"><name pos:start="99:40" pos:end="99:45">in_num</name></expr></argument>, <argument pos:start="99:48" pos:end="99:53"><expr pos:start="99:48" pos:end="99:53"><name pos:start="99:48" pos:end="99:53">offset</name></expr></argument>, <argument pos:start="99:56" pos:end="99:64"><expr pos:start="99:56" pos:end="99:64"><name pos:start="99:56" pos:end="99:64"><name pos:start="99:56" pos:end="99:58">str</name><operator pos:start="99:59" pos:end="99:60">-&gt;</operator><name pos:start="99:61" pos:end="99:64">data</name></name></expr></argument>, <argument pos:start="99:67" pos:end="99:75"><expr pos:start="99:67" pos:end="99:75"><name pos:start="99:67" pos:end="99:75"><name pos:start="99:67" pos:end="99:69">str</name><operator pos:start="99:70" pos:end="99:71">-&gt;</operator><name pos:start="99:72" pos:end="99:75">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        </block_content>}</block>

        <case pos:start="105:9" pos:end="105:17">case <expr pos:start="105:14" pos:end="105:16"><literal type="char" pos:start="105:14" pos:end="105:16">'Q'</literal></expr>:</case> <block pos:start="105:19" pos:end="115:9">{<block_content pos:start="107:13" pos:end="113:18">

            <decl_stmt pos:start="107:13" pos:end="107:50"><decl pos:start="107:13" pos:end="107:49"><type pos:start="107:13" pos:end="107:21"><name pos:start="107:13" pos:end="107:19">V9fsQID</name> <modifier pos:start="107:21" pos:end="107:21">*</modifier></type><name pos:start="107:22" pos:end="107:25">qidp</name> <init pos:start="107:27" pos:end="107:49">= <expr pos:start="107:29" pos:end="107:49"><call pos:start="107:29" pos:end="107:49"><name pos:start="107:29" pos:end="107:34">va_arg</name><argument_list pos:start="107:35" pos:end="107:49">(<argument pos:start="107:36" pos:end="107:37"><expr pos:start="107:36" pos:end="107:37"><name pos:start="107:36" pos:end="107:37">ap</name></expr></argument>, <argument pos:start="107:40" pos:end="107:48"><expr pos:start="107:40" pos:end="107:48"><name pos:start="107:40" pos:end="107:46">V9fsQID</name> <operator pos:start="107:48" pos:end="107:48">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="109:13" pos:end="111:74"><expr pos:start="109:13" pos:end="111:73"><name pos:start="109:13" pos:end="109:18">offset</name> <operator pos:start="109:20" pos:end="109:21">+=</operator> <call pos:start="109:23" pos:end="111:73"><name pos:start="109:23" pos:end="109:34">v9fs_marshal</name><argument_list pos:start="109:35" pos:end="111:73">(<argument pos:start="109:36" pos:end="109:40"><expr pos:start="109:36" pos:end="109:40"><name pos:start="109:36" pos:end="109:40">in_sg</name></expr></argument>, <argument pos:start="109:43" pos:end="109:48"><expr pos:start="109:43" pos:end="109:48"><name pos:start="109:43" pos:end="109:48">in_num</name></expr></argument>, <argument pos:start="109:51" pos:end="109:56"><expr pos:start="109:51" pos:end="109:56"><name pos:start="109:51" pos:end="109:56">offset</name></expr></argument>, <argument pos:start="109:59" pos:end="109:63"><expr pos:start="109:59" pos:end="109:63"><name pos:start="109:59" pos:end="109:63">bswap</name></expr></argument>, <argument pos:start="109:66" pos:end="109:70"><expr pos:start="109:66" pos:end="109:70"><literal type="string" pos:start="109:66" pos:end="109:70">"bdq"</literal></expr></argument>,

                                   <argument pos:start="111:36" pos:end="111:45"><expr pos:start="111:36" pos:end="111:45"><name pos:start="111:36" pos:end="111:45"><name pos:start="111:36" pos:end="111:39">qidp</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:45">type</name></name></expr></argument>, <argument pos:start="111:48" pos:end="111:60"><expr pos:start="111:48" pos:end="111:60"><name pos:start="111:48" pos:end="111:60"><name pos:start="111:48" pos:end="111:51">qidp</name><operator pos:start="111:52" pos:end="111:53">-&gt;</operator><name pos:start="111:54" pos:end="111:60">version</name></name></expr></argument>, <argument pos:start="111:63" pos:end="111:72"><expr pos:start="111:63" pos:end="111:72"><name pos:start="111:63" pos:end="111:72"><name pos:start="111:63" pos:end="111:66">qidp</name><operator pos:start="111:67" pos:end="111:68">-&gt;</operator><name pos:start="111:69" pos:end="111:72">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        </block_content>}</block>

        <case pos:start="117:9" pos:end="117:17">case <expr pos:start="117:14" pos:end="117:16"><literal type="char" pos:start="117:14" pos:end="117:16">'S'</literal></expr>:</case> <block pos:start="117:19" pos:end="139:9">{<block_content pos:start="119:13" pos:end="137:18">

            <decl_stmt pos:start="119:13" pos:end="119:53"><decl pos:start="119:13" pos:end="119:52"><type pos:start="119:13" pos:end="119:22"><name pos:start="119:13" pos:end="119:20">V9fsStat</name> <modifier pos:start="119:22" pos:end="119:22">*</modifier></type><name pos:start="119:23" pos:end="119:27">statp</name> <init pos:start="119:29" pos:end="119:52">= <expr pos:start="119:31" pos:end="119:52"><call pos:start="119:31" pos:end="119:52"><name pos:start="119:31" pos:end="119:36">va_arg</name><argument_list pos:start="119:37" pos:end="119:52">(<argument pos:start="119:38" pos:end="119:39"><expr pos:start="119:38" pos:end="119:39"><name pos:start="119:38" pos:end="119:39">ap</name></expr></argument>, <argument pos:start="119:42" pos:end="119:51"><expr pos:start="119:42" pos:end="119:51"><name pos:start="119:42" pos:end="119:49">V9fsStat</name> <operator pos:start="119:51" pos:end="119:51">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="121:13" pos:end="135:64"><expr pos:start="121:13" pos:end="135:63"><name pos:start="121:13" pos:end="121:18">offset</name> <operator pos:start="121:20" pos:end="121:21">+=</operator> <call pos:start="121:23" pos:end="135:63"><name pos:start="121:23" pos:end="121:34">v9fs_marshal</name><argument_list pos:start="121:35" pos:end="135:63">(<argument pos:start="121:36" pos:end="121:40"><expr pos:start="121:36" pos:end="121:40"><name pos:start="121:36" pos:end="121:40">in_sg</name></expr></argument>, <argument pos:start="121:43" pos:end="121:48"><expr pos:start="121:43" pos:end="121:48"><name pos:start="121:43" pos:end="121:48">in_num</name></expr></argument>, <argument pos:start="121:51" pos:end="121:56"><expr pos:start="121:51" pos:end="121:56"><name pos:start="121:51" pos:end="121:56">offset</name></expr></argument>, <argument pos:start="121:59" pos:end="121:63"><expr pos:start="121:59" pos:end="121:63"><name pos:start="121:59" pos:end="121:63">bswap</name></expr></argument>,

                                   <argument pos:start="123:36" pos:end="123:53"><expr pos:start="123:36" pos:end="123:53"><literal type="string" pos:start="123:36" pos:end="123:53">"wwdQdddqsssssddd"</literal></expr></argument>,

                                   <argument pos:start="125:36" pos:end="125:46"><expr pos:start="125:36" pos:end="125:46"><name pos:start="125:36" pos:end="125:46"><name pos:start="125:36" pos:end="125:40">statp</name><operator pos:start="125:41" pos:end="125:42">-&gt;</operator><name pos:start="125:43" pos:end="125:46">size</name></name></expr></argument>, <argument pos:start="125:49" pos:end="125:59"><expr pos:start="125:49" pos:end="125:59"><name pos:start="125:49" pos:end="125:59"><name pos:start="125:49" pos:end="125:53">statp</name><operator pos:start="125:54" pos:end="125:55">-&gt;</operator><name pos:start="125:56" pos:end="125:59">type</name></name></expr></argument>, <argument pos:start="125:62" pos:end="125:71"><expr pos:start="125:62" pos:end="125:71"><name pos:start="125:62" pos:end="125:71"><name pos:start="125:62" pos:end="125:66">statp</name><operator pos:start="125:67" pos:end="125:68">-&gt;</operator><name pos:start="125:69" pos:end="125:71">dev</name></name></expr></argument>,

                                   <argument pos:start="127:36" pos:end="127:46"><expr pos:start="127:36" pos:end="127:46"><operator pos:start="127:36" pos:end="127:36">&amp;</operator><name pos:start="127:37" pos:end="127:46"><name pos:start="127:37" pos:end="127:41">statp</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:46">qid</name></name></expr></argument>, <argument pos:start="127:49" pos:end="127:59"><expr pos:start="127:49" pos:end="127:59"><name pos:start="127:49" pos:end="127:59"><name pos:start="127:49" pos:end="127:53">statp</name><operator pos:start="127:54" pos:end="127:55">-&gt;</operator><name pos:start="127:56" pos:end="127:59">mode</name></name></expr></argument>, <argument pos:start="127:62" pos:end="127:73"><expr pos:start="127:62" pos:end="127:73"><name pos:start="127:62" pos:end="127:73"><name pos:start="127:62" pos:end="127:66">statp</name><operator pos:start="127:67" pos:end="127:68">-&gt;</operator><name pos:start="127:69" pos:end="127:73">atime</name></name></expr></argument>,

                                   <argument pos:start="129:36" pos:end="129:47"><expr pos:start="129:36" pos:end="129:47"><name pos:start="129:36" pos:end="129:47"><name pos:start="129:36" pos:end="129:40">statp</name><operator pos:start="129:41" pos:end="129:42">-&gt;</operator><name pos:start="129:43" pos:end="129:47">mtime</name></name></expr></argument>, <argument pos:start="129:50" pos:end="129:62"><expr pos:start="129:50" pos:end="129:62"><name pos:start="129:50" pos:end="129:62"><name pos:start="129:50" pos:end="129:54">statp</name><operator pos:start="129:55" pos:end="129:56">-&gt;</operator><name pos:start="129:57" pos:end="129:62">length</name></name></expr></argument>, <argument pos:start="129:65" pos:end="129:76"><expr pos:start="129:65" pos:end="129:76"><operator pos:start="129:65" pos:end="129:65">&amp;</operator><name pos:start="129:66" pos:end="129:76"><name pos:start="129:66" pos:end="129:70">statp</name><operator pos:start="129:71" pos:end="129:72">-&gt;</operator><name pos:start="129:73" pos:end="129:76">name</name></name></expr></argument>,

                                   <argument pos:start="131:36" pos:end="131:46"><expr pos:start="131:36" pos:end="131:46"><operator pos:start="131:36" pos:end="131:36">&amp;</operator><name pos:start="131:37" pos:end="131:46"><name pos:start="131:37" pos:end="131:41">statp</name><operator pos:start="131:42" pos:end="131:43">-&gt;</operator><name pos:start="131:44" pos:end="131:46">uid</name></name></expr></argument>, <argument pos:start="131:49" pos:end="131:59"><expr pos:start="131:49" pos:end="131:59"><operator pos:start="131:49" pos:end="131:49">&amp;</operator><name pos:start="131:50" pos:end="131:59"><name pos:start="131:50" pos:end="131:54">statp</name><operator pos:start="131:55" pos:end="131:56">-&gt;</operator><name pos:start="131:57" pos:end="131:59">gid</name></name></expr></argument>, <argument pos:start="131:62" pos:end="131:73"><expr pos:start="131:62" pos:end="131:73"><operator pos:start="131:62" pos:end="131:62">&amp;</operator><name pos:start="131:63" pos:end="131:73"><name pos:start="131:63" pos:end="131:67">statp</name><operator pos:start="131:68" pos:end="131:69">-&gt;</operator><name pos:start="131:70" pos:end="131:73">muid</name></name></expr></argument>,

                                   <argument pos:start="133:36" pos:end="133:52"><expr pos:start="133:36" pos:end="133:52"><operator pos:start="133:36" pos:end="133:36">&amp;</operator><name pos:start="133:37" pos:end="133:52"><name pos:start="133:37" pos:end="133:41">statp</name><operator pos:start="133:42" pos:end="133:43">-&gt;</operator><name pos:start="133:44" pos:end="133:52">extension</name></name></expr></argument>, <argument pos:start="133:55" pos:end="133:66"><expr pos:start="133:55" pos:end="133:66"><name pos:start="133:55" pos:end="133:66"><name pos:start="133:55" pos:end="133:59">statp</name><operator pos:start="133:60" pos:end="133:61">-&gt;</operator><name pos:start="133:62" pos:end="133:66">n_uid</name></name></expr></argument>,

                                   <argument pos:start="135:36" pos:end="135:47"><expr pos:start="135:36" pos:end="135:47"><name pos:start="135:36" pos:end="135:47"><name pos:start="135:36" pos:end="135:40">statp</name><operator pos:start="135:41" pos:end="135:42">-&gt;</operator><name pos:start="135:43" pos:end="135:47">n_gid</name></name></expr></argument>, <argument pos:start="135:50" pos:end="135:62"><expr pos:start="135:50" pos:end="135:62"><name pos:start="135:50" pos:end="135:62"><name pos:start="135:50" pos:end="135:54">statp</name><operator pos:start="135:55" pos:end="135:56">-&gt;</operator><name pos:start="135:57" pos:end="135:62">n_muid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        </block_content>}</block>

        <case pos:start="141:9" pos:end="141:17">case <expr pos:start="141:14" pos:end="141:16"><literal type="char" pos:start="141:14" pos:end="141:16">'A'</literal></expr>:</case> <block pos:start="141:19" pos:end="173:9">{<block_content pos:start="143:13" pos:end="171:18">

            <decl_stmt pos:start="143:13" pos:end="143:61"><decl pos:start="143:13" pos:end="143:60"><type pos:start="143:13" pos:end="143:26"><name pos:start="143:13" pos:end="143:24">V9fsStatDotl</name> <modifier pos:start="143:26" pos:end="143:26">*</modifier></type><name pos:start="143:27" pos:end="143:31">statp</name> <init pos:start="143:33" pos:end="143:60">= <expr pos:start="143:35" pos:end="143:60"><call pos:start="143:35" pos:end="143:60"><name pos:start="143:35" pos:end="143:40">va_arg</name><argument_list pos:start="143:41" pos:end="143:60">(<argument pos:start="143:42" pos:end="143:43"><expr pos:start="143:42" pos:end="143:43"><name pos:start="143:42" pos:end="143:43">ap</name></expr></argument>, <argument pos:start="143:46" pos:end="143:59"><expr pos:start="143:46" pos:end="143:59"><name pos:start="143:46" pos:end="143:57">V9fsStatDotl</name> <operator pos:start="143:59" pos:end="143:59">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="145:13" pos:end="169:59"><expr pos:start="145:13" pos:end="169:58"><name pos:start="145:13" pos:end="145:18">offset</name> <operator pos:start="145:20" pos:end="145:21">+=</operator> <call pos:start="145:23" pos:end="169:58"><name pos:start="145:23" pos:end="145:34">v9fs_marshal</name><argument_list pos:start="145:35" pos:end="169:58">(<argument pos:start="145:36" pos:end="145:40"><expr pos:start="145:36" pos:end="145:40"><name pos:start="145:36" pos:end="145:40">in_sg</name></expr></argument>, <argument pos:start="145:43" pos:end="145:48"><expr pos:start="145:43" pos:end="145:48"><name pos:start="145:43" pos:end="145:48">in_num</name></expr></argument>, <argument pos:start="145:51" pos:end="145:56"><expr pos:start="145:51" pos:end="145:56"><name pos:start="145:51" pos:end="145:56">offset</name></expr></argument>, <argument pos:start="145:59" pos:end="145:63"><expr pos:start="145:59" pos:end="145:63"><name pos:start="145:59" pos:end="145:63">bswap</name></expr></argument>,

                                   <argument pos:start="147:36" pos:end="147:57"><expr pos:start="147:36" pos:end="147:57"><literal type="string" pos:start="147:36" pos:end="147:57">"qQdddqqqqqqqqqqqqqqq"</literal></expr></argument>,

                                   <argument pos:start="149:36" pos:end="149:56"><expr pos:start="149:36" pos:end="149:56"><name pos:start="149:36" pos:end="149:56"><name pos:start="149:36" pos:end="149:40">statp</name><operator pos:start="149:41" pos:end="149:42">-&gt;</operator><name pos:start="149:43" pos:end="149:56">st_result_mask</name></name></expr></argument>,

                                   <argument pos:start="151:36" pos:end="151:46"><expr pos:start="151:36" pos:end="151:46"><operator pos:start="151:36" pos:end="151:36">&amp;</operator><name pos:start="151:37" pos:end="151:46"><name pos:start="151:37" pos:end="151:41">statp</name><operator pos:start="151:42" pos:end="151:43">-&gt;</operator><name pos:start="151:44" pos:end="151:46">qid</name></name></expr></argument>, <argument pos:start="151:49" pos:end="151:62"><expr pos:start="151:49" pos:end="151:62"><name pos:start="151:49" pos:end="151:62"><name pos:start="151:49" pos:end="151:53">statp</name><operator pos:start="151:54" pos:end="151:55">-&gt;</operator><name pos:start="151:56" pos:end="151:62">st_mode</name></name></expr></argument>,

                                   <argument pos:start="153:36" pos:end="153:48"><expr pos:start="153:36" pos:end="153:48"><name pos:start="153:36" pos:end="153:48"><name pos:start="153:36" pos:end="153:40">statp</name><operator pos:start="153:41" pos:end="153:42">-&gt;</operator><name pos:start="153:43" pos:end="153:48">st_uid</name></name></expr></argument>, <argument pos:start="153:51" pos:end="153:63"><expr pos:start="153:51" pos:end="153:63"><name pos:start="153:51" pos:end="153:63"><name pos:start="153:51" pos:end="153:55">statp</name><operator pos:start="153:56" pos:end="153:57">-&gt;</operator><name pos:start="153:58" pos:end="153:63">st_gid</name></name></expr></argument>,

                                   <argument pos:start="155:36" pos:end="155:50"><expr pos:start="155:36" pos:end="155:50"><name pos:start="155:36" pos:end="155:50"><name pos:start="155:36" pos:end="155:40">statp</name><operator pos:start="155:41" pos:end="155:42">-&gt;</operator><name pos:start="155:43" pos:end="155:50">st_nlink</name></name></expr></argument>, <argument pos:start="155:53" pos:end="155:66"><expr pos:start="155:53" pos:end="155:66"><name pos:start="155:53" pos:end="155:66"><name pos:start="155:53" pos:end="155:57">statp</name><operator pos:start="155:58" pos:end="155:59">-&gt;</operator><name pos:start="155:60" pos:end="155:66">st_rdev</name></name></expr></argument>,

                                   <argument pos:start="157:36" pos:end="157:49"><expr pos:start="157:36" pos:end="157:49"><name pos:start="157:36" pos:end="157:49"><name pos:start="157:36" pos:end="157:40">statp</name><operator pos:start="157:41" pos:end="157:42">-&gt;</operator><name pos:start="157:43" pos:end="157:49">st_size</name></name></expr></argument>, <argument pos:start="157:52" pos:end="157:68"><expr pos:start="157:52" pos:end="157:68"><name pos:start="157:52" pos:end="157:68"><name pos:start="157:52" pos:end="157:56">statp</name><operator pos:start="157:57" pos:end="157:58">-&gt;</operator><name pos:start="157:59" pos:end="157:68">st_blksize</name></name></expr></argument>,

                                   <argument pos:start="159:36" pos:end="159:51"><expr pos:start="159:36" pos:end="159:51"><name pos:start="159:36" pos:end="159:51"><name pos:start="159:36" pos:end="159:40">statp</name><operator pos:start="159:41" pos:end="159:42">-&gt;</operator><name pos:start="159:43" pos:end="159:51">st_blocks</name></name></expr></argument>, <argument pos:start="159:54" pos:end="159:72"><expr pos:start="159:54" pos:end="159:72"><name pos:start="159:54" pos:end="159:72"><name pos:start="159:54" pos:end="159:58">statp</name><operator pos:start="159:59" pos:end="159:60">-&gt;</operator><name pos:start="159:61" pos:end="159:72">st_atime_sec</name></name></expr></argument>,

                                   <argument pos:start="161:36" pos:end="161:55"><expr pos:start="161:36" pos:end="161:55"><name pos:start="161:36" pos:end="161:55"><name pos:start="161:36" pos:end="161:40">statp</name><operator pos:start="161:41" pos:end="161:42">-&gt;</operator><name pos:start="161:43" pos:end="161:55">st_atime_nsec</name></name></expr></argument>, <argument pos:start="161:58" pos:end="161:76"><expr pos:start="161:58" pos:end="161:76"><name pos:start="161:58" pos:end="161:76"><name pos:start="161:58" pos:end="161:62">statp</name><operator pos:start="161:63" pos:end="161:64">-&gt;</operator><name pos:start="161:65" pos:end="161:76">st_mtime_sec</name></name></expr></argument>,

                                   <argument pos:start="163:36" pos:end="163:55"><expr pos:start="163:36" pos:end="163:55"><name pos:start="163:36" pos:end="163:55"><name pos:start="163:36" pos:end="163:40">statp</name><operator pos:start="163:41" pos:end="163:42">-&gt;</operator><name pos:start="163:43" pos:end="163:55">st_mtime_nsec</name></name></expr></argument>, <argument pos:start="163:58" pos:end="163:76"><expr pos:start="163:58" pos:end="163:76"><name pos:start="163:58" pos:end="163:76"><name pos:start="163:58" pos:end="163:62">statp</name><operator pos:start="163:63" pos:end="163:64">-&gt;</operator><name pos:start="163:65" pos:end="163:76">st_ctime_sec</name></name></expr></argument>,

                                   <argument pos:start="165:36" pos:end="165:55"><expr pos:start="165:36" pos:end="165:55"><name pos:start="165:36" pos:end="165:55"><name pos:start="165:36" pos:end="165:40">statp</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:55">st_ctime_nsec</name></name></expr></argument>, <argument pos:start="165:58" pos:end="165:76"><expr pos:start="165:58" pos:end="165:76"><name pos:start="165:58" pos:end="165:76"><name pos:start="165:58" pos:end="165:62">statp</name><operator pos:start="165:63" pos:end="165:64">-&gt;</operator><name pos:start="165:65" pos:end="165:76">st_btime_sec</name></name></expr></argument>,

                                   <argument pos:start="167:36" pos:end="167:55"><expr pos:start="167:36" pos:end="167:55"><name pos:start="167:36" pos:end="167:55"><name pos:start="167:36" pos:end="167:40">statp</name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:55">st_btime_nsec</name></name></expr></argument>, <argument pos:start="167:58" pos:end="167:70"><expr pos:start="167:58" pos:end="167:70"><name pos:start="167:58" pos:end="167:70"><name pos:start="167:58" pos:end="167:62">statp</name><operator pos:start="167:63" pos:end="167:64">-&gt;</operator><name pos:start="167:65" pos:end="167:70">st_gen</name></name></expr></argument>,

                                   <argument pos:start="169:36" pos:end="169:57"><expr pos:start="169:36" pos:end="169:57"><name pos:start="169:36" pos:end="169:57"><name pos:start="169:36" pos:end="169:40">statp</name><operator pos:start="169:41" pos:end="169:42">-&gt;</operator><name pos:start="169:43" pos:end="169:57">st_data_version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>

        </block_content>}</block>

        <default pos:start="175:9" pos:end="175:16">default:</default>

            <break pos:start="177:13" pos:end="177:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>

    <expr_stmt pos:start="183:5" pos:end="183:15"><expr pos:start="183:5" pos:end="183:14"><call pos:start="183:5" pos:end="183:14"><name pos:start="183:5" pos:end="183:10">va_end</name><argument_list pos:start="183:11" pos:end="183:14">(<argument pos:start="183:12" pos:end="183:13"><expr pos:start="183:12" pos:end="183:13"><name pos:start="183:12" pos:end="183:13">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="187:5" pos:end="187:31">return <expr pos:start="187:12" pos:end="187:30"><name pos:start="187:12" pos:end="187:17">offset</name> <operator pos:start="187:19" pos:end="187:19">-</operator> <name pos:start="187:21" pos:end="187:30">old_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
