<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6066.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">mig_save_device_dirty</name><parameter_list pos:start="1:33" pos:end="3:68">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:40">Monitor</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">mon</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:58"><decl pos:start="1:48" pos:end="1:58"><type pos:start="1:48" pos:end="1:58"><name pos:start="1:48" pos:end="1:55">QEMUFile</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">f</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:53"><decl pos:start="3:34" pos:end="3:53"><type pos:start="3:34" pos:end="3:53"><name pos:start="3:34" pos:end="3:47">BlkMigDevState</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">bmds</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:67"><decl pos:start="3:56" pos:end="3:67"><type pos:start="3:56" pos:end="3:67"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:67">is_async</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:13">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">BlkMigBlock</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">blk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:25">total_sectors</name> <init pos:start="9:27" pos:end="9:47">= <expr pos:start="9:29" pos:end="9:47"><name pos:start="9:29" pos:end="9:47"><name pos:start="9:29" pos:end="9:32">bmds</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:47">total_sectors</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:18">sector</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">nr_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:18">= <expr pos:start="15:15" pos:end="15:18"><operator pos:start="15:15" pos:end="15:15">-</operator><name pos:start="15:16" pos:end="15:18">EIO</name></expr></init></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="117:5">for <control pos:start="19:9" pos:end="19:65">(<init pos:start="19:10" pos:end="19:34"><expr pos:start="19:10" pos:end="19:33"><name pos:start="19:10" pos:end="19:15">sector</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:33"><name pos:start="19:19" pos:end="19:22">bmds</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:33">cur_dirty</name></name></expr>;</init> <condition pos:start="19:36" pos:end="19:64"><expr pos:start="19:36" pos:end="19:63"><name pos:start="19:36" pos:end="19:41">sector</name> <operator pos:start="19:43" pos:end="19:43">&lt;</operator> <name pos:start="19:45" pos:end="19:63"><name pos:start="19:45" pos:end="19:48">bmds</name><operator pos:start="19:49" pos:end="19:50">-&gt;</operator><name pos:start="19:51" pos:end="19:63">total_sectors</name></name></expr>;</condition><incr/>)</control> <block pos:start="19:67" pos:end="117:5">{<block_content pos:start="21:9" pos:end="115:33">

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:44">(<expr pos:start="21:13" pos:end="21:43"><call pos:start="21:13" pos:end="21:43"><name pos:start="21:13" pos:end="21:29">bmds_aio_inflight</name><argument_list pos:start="21:30" pos:end="21:43">(<argument pos:start="21:31" pos:end="21:34"><expr pos:start="21:31" pos:end="21:34"><name pos:start="21:31" pos:end="21:34">bmds</name></expr></argument>, <argument pos:start="21:37" pos:end="21:42"><expr pos:start="21:37" pos:end="21:42"><name pos:start="21:37" pos:end="21:42">sector</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:46" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:29">

            <expr_stmt pos:start="23:13" pos:end="23:29"><expr pos:start="23:13" pos:end="23:28"><call pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:26">qemu_aio_flush</name><argument_list pos:start="23:27" pos:end="23:28">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="111:9"><if pos:start="27:9" pos:end="111:9">if <condition pos:start="27:12" pos:end="27:45">(<expr pos:start="27:13" pos:end="27:44"><call pos:start="27:13" pos:end="27:44"><name pos:start="27:13" pos:end="27:26">bdrv_get_dirty</name><argument_list pos:start="27:27" pos:end="27:44">(<argument pos:start="27:28" pos:end="27:35"><expr pos:start="27:28" pos:end="27:35"><name pos:start="27:28" pos:end="27:35"><name pos:start="27:28" pos:end="27:31">bmds</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:35">bs</name></name></expr></argument>, <argument pos:start="27:38" pos:end="27:43"><expr pos:start="27:38" pos:end="27:43"><name pos:start="27:38" pos:end="27:43">sector</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:47" pos:end="111:9">{<block_content pos:start="31:13" pos:end="109:18">



            <if_stmt pos:start="31:13" pos:end="39:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:70">(<expr pos:start="31:17" pos:end="31:69"><name pos:start="31:17" pos:end="31:29">total_sectors</name> <operator pos:start="31:31" pos:end="31:31">-</operator> <name pos:start="31:33" pos:end="31:38">sector</name> <operator pos:start="31:40" pos:end="31:40">&lt;</operator> <name pos:start="31:42" pos:end="31:69">BDRV_SECTORS_PER_DIRTY_CHUNK</name></expr>)</condition> <block pos:start="31:72" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:52">

                <expr_stmt pos:start="33:17" pos:end="33:52"><expr pos:start="33:17" pos:end="33:51"><name pos:start="33:17" pos:end="33:26">nr_sectors</name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:42">total_sectors</name> <operator pos:start="33:44" pos:end="33:44">-</operator> <name pos:start="33:46" pos:end="33:51">sector</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="35:15" pos:end="39:13">else <block pos:start="35:20" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:58">

                <expr_stmt pos:start="37:17" pos:end="37:58"><expr pos:start="37:17" pos:end="37:57"><name pos:start="37:17" pos:end="37:26">nr_sectors</name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:57">BDRV_SECTORS_PER_DIRTY_CHUNK</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:48"><expr pos:start="41:13" pos:end="41:47"><name pos:start="41:13" pos:end="41:15">blk</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:47"><name pos:start="41:19" pos:end="41:26">g_malloc</name><argument_list pos:start="41:27" pos:end="41:47">(<argument pos:start="41:28" pos:end="41:46"><expr pos:start="41:28" pos:end="41:46"><sizeof pos:start="41:28" pos:end="41:46">sizeof<argument_list pos:start="41:34" pos:end="41:46">(<argument pos:start="41:35" pos:end="41:45"><expr pos:start="41:35" pos:end="41:45"><name pos:start="41:35" pos:end="41:45">BlkMigBlock</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:44"><expr pos:start="43:13" pos:end="43:43"><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:15">blk</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:20">buf</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:43"><name pos:start="43:24" pos:end="43:31">g_malloc</name><argument_list pos:start="43:32" pos:end="43:43">(<argument pos:start="43:33" pos:end="43:42"><expr pos:start="43:33" pos:end="43:42"><name pos:start="43:33" pos:end="43:42">BLOCK_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:29"><expr pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:15">blk</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:21">bmds</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:28">bmds</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:33"><expr pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:15">blk</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:23">sector</name></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:32">sector</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:41"><expr pos:start="49:13" pos:end="49:40"><name pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:15">blk</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:27">nr_sectors</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <name pos:start="49:31" pos:end="49:40">nr_sectors</name></expr>;</expr_stmt>



            <if_stmt pos:start="53:13" pos:end="103:13"><if pos:start="53:13" pos:end="85:13">if <condition pos:start="53:16" pos:end="53:25">(<expr pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:24">is_async</name></expr>)</condition> <block pos:start="53:27" pos:end="85:13">{<block_content pos:start="55:17" pos:end="83:67">

                <expr_stmt pos:start="55:17" pos:end="55:45"><expr pos:start="55:17" pos:end="55:44"><name pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:19">blk</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:24">iov</name><operator pos:start="55:25" pos:end="55:25">.</operator><name pos:start="55:26" pos:end="55:33">iov_base</name></name> <operator pos:start="55:35" pos:end="55:35">=</operator> <name pos:start="55:37" pos:end="55:44"><name pos:start="55:37" pos:end="55:39">blk</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:44">buf</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:65"><expr pos:start="57:17" pos:end="57:64"><name pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:19">blk</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:24">iov</name><operator pos:start="57:25" pos:end="57:25">.</operator><name pos:start="57:26" pos:end="57:32">iov_len</name></name> <operator pos:start="57:34" pos:end="57:34">=</operator> <name pos:start="57:36" pos:end="57:45">nr_sectors</name> <operator pos:start="57:47" pos:end="57:47">*</operator> <name pos:start="57:49" pos:end="57:64">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:67"><expr pos:start="59:17" pos:end="59:66"><call pos:start="59:17" pos:end="59:66"><name pos:start="59:17" pos:end="59:40">qemu_iovec_init_external</name><argument_list pos:start="59:41" pos:end="59:66">(<argument pos:start="59:42" pos:end="59:51"><expr pos:start="59:42" pos:end="59:51"><operator pos:start="59:42" pos:end="59:42">&amp;</operator><name pos:start="59:43" pos:end="59:51"><name pos:start="59:43" pos:end="59:45">blk</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:51">qiov</name></name></expr></argument>, <argument pos:start="59:54" pos:end="59:62"><expr pos:start="59:54" pos:end="59:62"><operator pos:start="59:54" pos:end="59:54">&amp;</operator><name pos:start="59:55" pos:end="59:62"><name pos:start="59:55" pos:end="59:57">blk</name><operator pos:start="59:58" pos:end="59:59">-&gt;</operator><name pos:start="59:60" pos:end="59:62">iov</name></name></expr></argument>, <argument pos:start="59:65" pos:end="59:65"><expr pos:start="59:65" pos:end="59:65"><literal type="number" pos:start="59:65" pos:end="59:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="63:17" pos:end="67:17"><if pos:start="63:17" pos:end="67:17">if <condition pos:start="63:20" pos:end="63:51">(<expr pos:start="63:21" pos:end="63:50"><name pos:start="63:21" pos:end="63:45"><name pos:start="63:21" pos:end="63:35">block_mig_state</name><operator pos:start="63:36" pos:end="63:36">.</operator><name pos:start="63:37" pos:end="63:45">submitted</name></name> <operator pos:start="63:47" pos:end="63:48">==</operator> <literal type="number" pos:start="63:50" pos:end="63:50">0</literal></expr>)</condition> <block pos:start="63:53" pos:end="67:17">{<block_content pos:start="65:21" pos:end="65:83">

                    <expr_stmt pos:start="65:21" pos:end="65:83"><expr pos:start="65:21" pos:end="65:82"><name pos:start="65:21" pos:end="65:52"><name pos:start="65:21" pos:end="65:35">block_mig_state</name><operator pos:start="65:36" pos:end="65:36">.</operator><name pos:start="65:37" pos:end="65:52">prev_time_offset</name></name> <operator pos:start="65:54" pos:end="65:54">=</operator> <call pos:start="65:56" pos:end="65:82"><name pos:start="65:56" pos:end="65:72">qemu_get_clock_ns</name><argument_list pos:start="65:73" pos:end="65:82">(<argument pos:start="65:74" pos:end="65:81"><expr pos:start="65:74" pos:end="65:81"><name pos:start="65:74" pos:end="65:81">rt_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="71:17" pos:end="73:78"><expr pos:start="71:17" pos:end="73:77"><name pos:start="71:17" pos:end="71:26"><name pos:start="71:17" pos:end="71:19">blk</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:26">aiocb</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <call pos:start="71:30" pos:end="73:77"><name pos:start="71:30" pos:end="71:43">bdrv_aio_readv</name><argument_list pos:start="71:44" pos:end="73:77">(<argument pos:start="71:45" pos:end="71:52"><expr pos:start="71:45" pos:end="71:52"><name pos:start="71:45" pos:end="71:52"><name pos:start="71:45" pos:end="71:48">bmds</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:52">bs</name></name></expr></argument>, <argument pos:start="71:55" pos:end="71:60"><expr pos:start="71:55" pos:end="71:60"><name pos:start="71:55" pos:end="71:60">sector</name></expr></argument>, <argument pos:start="71:63" pos:end="71:72"><expr pos:start="71:63" pos:end="71:72"><operator pos:start="71:63" pos:end="71:63">&amp;</operator><name pos:start="71:64" pos:end="71:72"><name pos:start="71:64" pos:end="71:66">blk</name><operator pos:start="71:67" pos:end="71:68">-&gt;</operator><name pos:start="71:69" pos:end="71:72">qiov</name></name></expr></argument>,

                                            <argument pos:start="73:45" pos:end="73:54"><expr pos:start="73:45" pos:end="73:54"><name pos:start="73:45" pos:end="73:54">nr_sectors</name></expr></argument>, <argument pos:start="73:57" pos:end="73:71"><expr pos:start="73:57" pos:end="73:71"><name pos:start="73:57" pos:end="73:71">blk_mig_read_cb</name></expr></argument>, <argument pos:start="73:74" pos:end="73:76"><expr pos:start="73:74" pos:end="73:76"><name pos:start="73:74" pos:end="73:76">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="75:17" pos:end="79:17"><if pos:start="75:17" pos:end="79:17">if <condition pos:start="75:20" pos:end="75:32">(<expr pos:start="75:21" pos:end="75:31"><operator pos:start="75:21" pos:end="75:21">!</operator><name pos:start="75:22" pos:end="75:31"><name pos:start="75:22" pos:end="75:24">blk</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:31">aiocb</name></name></expr>)</condition> <block pos:start="75:34" pos:end="79:17">{<block_content pos:start="77:21" pos:end="77:31">

                    <goto pos:start="77:21" pos:end="77:31">goto <name pos:start="77:26" pos:end="77:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:44"><expr pos:start="81:17" pos:end="81:43"><name pos:start="81:17" pos:end="81:41"><name pos:start="81:17" pos:end="81:31">block_mig_state</name><operator pos:start="81:32" pos:end="81:32">.</operator><name pos:start="81:33" pos:end="81:41">submitted</name></name><operator pos:start="81:42" pos:end="81:43">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:67"><expr pos:start="83:17" pos:end="83:66"><call pos:start="83:17" pos:end="83:66"><name pos:start="83:17" pos:end="83:37">bmds_set_aio_inflight</name><argument_list pos:start="83:38" pos:end="83:66">(<argument pos:start="83:39" pos:end="83:42"><expr pos:start="83:39" pos:end="83:42"><name pos:start="83:39" pos:end="83:42">bmds</name></expr></argument>, <argument pos:start="83:45" pos:end="83:50"><expr pos:start="83:45" pos:end="83:50"><name pos:start="83:45" pos:end="83:50">sector</name></expr></argument>, <argument pos:start="83:53" pos:end="83:62"><expr pos:start="83:53" pos:end="83:62"><name pos:start="83:53" pos:end="83:62">nr_sectors</name></expr></argument>, <argument pos:start="83:65" pos:end="83:65"><expr pos:start="83:65" pos:end="83:65"><literal type="number" pos:start="83:65" pos:end="83:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="85:15" pos:end="103:13">else <block pos:start="85:20" pos:end="103:13">{<block_content pos:start="87:17" pos:end="101:28">

                <expr_stmt pos:start="87:17" pos:end="87:72"><expr pos:start="87:17" pos:end="87:71"><name pos:start="87:17" pos:end="87:19">ret</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <call pos:start="87:23" pos:end="87:71"><name pos:start="87:23" pos:end="87:31">bdrv_read</name><argument_list pos:start="87:32" pos:end="87:71">(<argument pos:start="87:33" pos:end="87:40"><expr pos:start="87:33" pos:end="87:40"><name pos:start="87:33" pos:end="87:40"><name pos:start="87:33" pos:end="87:36">bmds</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:40">bs</name></name></expr></argument>, <argument pos:start="87:43" pos:end="87:48"><expr pos:start="87:43" pos:end="87:48"><name pos:start="87:43" pos:end="87:48">sector</name></expr></argument>, <argument pos:start="87:51" pos:end="87:58"><expr pos:start="87:51" pos:end="87:58"><name pos:start="87:51" pos:end="87:58"><name pos:start="87:51" pos:end="87:53">blk</name><operator pos:start="87:54" pos:end="87:55">-&gt;</operator><name pos:start="87:56" pos:end="87:58">buf</name></name></expr></argument>, <argument pos:start="87:61" pos:end="87:70"><expr pos:start="87:61" pos:end="87:70"><name pos:start="87:61" pos:end="87:70">nr_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="93:17"><if pos:start="89:17" pos:end="93:17">if <condition pos:start="89:20" pos:end="89:28">(<expr pos:start="89:21" pos:end="89:27"><name pos:start="89:21" pos:end="89:23">ret</name> <operator pos:start="89:25" pos:end="89:25">&lt;</operator> <literal type="number" pos:start="89:27" pos:end="89:27">0</literal></expr>)</condition> <block pos:start="89:30" pos:end="93:17">{<block_content pos:start="91:21" pos:end="91:31">

                    <goto pos:start="91:21" pos:end="91:31">goto <name pos:start="91:26" pos:end="91:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:33"><expr pos:start="95:17" pos:end="95:32"><call pos:start="95:17" pos:end="95:32"><name pos:start="95:17" pos:end="95:24">blk_send</name><argument_list pos:start="95:25" pos:end="95:32">(<argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><name pos:start="95:26" pos:end="95:26">f</name></expr></argument>, <argument pos:start="95:29" pos:end="95:31"><expr pos:start="95:29" pos:end="95:31"><name pos:start="95:29" pos:end="95:31">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="99:17" pos:end="99:33"><expr pos:start="99:17" pos:end="99:32"><call pos:start="99:17" pos:end="99:32"><name pos:start="99:17" pos:end="99:22">g_free</name><argument_list pos:start="99:23" pos:end="99:32">(<argument pos:start="99:24" pos:end="99:31"><expr pos:start="99:24" pos:end="99:31"><name pos:start="99:24" pos:end="99:31"><name pos:start="99:24" pos:end="99:26">blk</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:31">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:28"><expr pos:start="101:17" pos:end="101:27"><call pos:start="101:17" pos:end="101:27"><name pos:start="101:17" pos:end="101:22">g_free</name><argument_list pos:start="101:23" pos:end="101:27">(<argument pos:start="101:24" pos:end="101:26"><expr pos:start="101:24" pos:end="101:26"><name pos:start="101:24" pos:end="101:26">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="107:13" pos:end="107:59"><expr pos:start="107:13" pos:end="107:58"><call pos:start="107:13" pos:end="107:58"><name pos:start="107:13" pos:end="107:28">bdrv_reset_dirty</name><argument_list pos:start="107:29" pos:end="107:58">(<argument pos:start="107:30" pos:end="107:37"><expr pos:start="107:30" pos:end="107:37"><name pos:start="107:30" pos:end="107:37"><name pos:start="107:30" pos:end="107:33">bmds</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:37">bs</name></name></expr></argument>, <argument pos:start="107:40" pos:end="107:45"><expr pos:start="107:40" pos:end="107:45"><name pos:start="107:40" pos:end="107:45">sector</name></expr></argument>, <argument pos:start="107:48" pos:end="107:57"><expr pos:start="107:48" pos:end="107:57"><name pos:start="107:48" pos:end="107:57">nr_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:47"><expr pos:start="113:9" pos:end="113:46"><name pos:start="113:9" pos:end="113:14">sector</name> <operator pos:start="113:16" pos:end="113:17">+=</operator> <name pos:start="113:19" pos:end="113:46">BDRV_SECTORS_PER_DIRTY_CHUNK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:33"><expr pos:start="115:9" pos:end="115:32"><name pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:12">bmds</name><operator pos:start="115:13" pos:end="115:14">-&gt;</operator><name pos:start="115:15" pos:end="115:23">cur_dirty</name></name> <operator pos:start="115:25" pos:end="115:25">=</operator> <name pos:start="115:27" pos:end="115:32">sector</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="121:5" pos:end="121:52">return <expr pos:start="121:12" pos:end="121:51"><operator pos:start="121:12" pos:end="121:12">(</operator><name pos:start="121:13" pos:end="121:27"><name pos:start="121:13" pos:end="121:16">bmds</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:27">cur_dirty</name></name> <operator pos:start="121:29" pos:end="121:30">&gt;=</operator> <name pos:start="121:32" pos:end="121:50"><name pos:start="121:32" pos:end="121:35">bmds</name><operator pos:start="121:36" pos:end="121:37">-&gt;</operator><name pos:start="121:38" pos:end="121:50">total_sectors</name></name><operator pos:start="121:51" pos:end="121:51">)</operator></expr>;</return>



<label pos:start="125:1" pos:end="125:6"><name pos:start="125:1" pos:end="125:5">error</name>:</label>

    <expr_stmt pos:start="127:5" pos:end="127:70"><expr pos:start="127:5" pos:end="127:69"><call pos:start="127:5" pos:end="127:69"><name pos:start="127:5" pos:end="127:18">monitor_printf</name><argument_list pos:start="127:19" pos:end="127:69">(<argument pos:start="127:20" pos:end="127:22"><expr pos:start="127:20" pos:end="127:22"><name pos:start="127:20" pos:end="127:22">mon</name></expr></argument>, <argument pos:start="127:25" pos:end="127:60"><expr pos:start="127:25" pos:end="127:60"><literal type="string" pos:start="127:25" pos:end="127:48">"Error reading sector %"</literal> <name pos:start="127:50" pos:end="127:55">PRId64</name> <literal type="string" pos:start="127:57" pos:end="127:60">"\n"</literal></expr></argument>, <argument pos:start="127:63" pos:end="127:68"><expr pos:start="127:63" pos:end="127:68"><name pos:start="127:63" pos:end="127:68">sector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:32"><expr pos:start="129:5" pos:end="129:31"><call pos:start="129:5" pos:end="129:31"><name pos:start="129:5" pos:end="129:23">qemu_file_set_error</name><argument_list pos:start="129:24" pos:end="129:31">(<argument pos:start="129:25" pos:end="129:25"><expr pos:start="129:25" pos:end="129:25"><name pos:start="129:25" pos:end="129:25">f</name></expr></argument>, <argument pos:start="129:28" pos:end="129:30"><expr pos:start="129:28" pos:end="129:30"><name pos:start="129:28" pos:end="129:30">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:21"><expr pos:start="131:5" pos:end="131:20"><call pos:start="131:5" pos:end="131:20"><name pos:start="131:5" pos:end="131:10">g_free</name><argument_list pos:start="131:11" pos:end="131:20">(<argument pos:start="131:12" pos:end="131:19"><expr pos:start="131:12" pos:end="131:19"><name pos:start="131:12" pos:end="131:19"><name pos:start="131:12" pos:end="131:14">blk</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:19">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:16"><expr pos:start="133:5" pos:end="133:15"><call pos:start="133:5" pos:end="133:15"><name pos:start="133:5" pos:end="133:10">g_free</name><argument_list pos:start="133:11" pos:end="133:15">(<argument pos:start="133:12" pos:end="133:14"><expr pos:start="133:12" pos:end="133:14"><name pos:start="133:12" pos:end="133:14">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
