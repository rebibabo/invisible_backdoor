<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8298.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">block_save_live</name><parameter_list pos:start="1:27" pos:end="1:78">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:34">Monitor</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">mon</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:52"><decl pos:start="1:42" pos:end="1:52"><type pos:start="1:42" pos:end="1:52"><name pos:start="1:42" pos:end="1:49">QEMUFile</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">f</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:63"><decl pos:start="1:55" pos:end="1:63"><type pos:start="1:55" pos:end="1:63"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:63">stage</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:69">void</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:77">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="171:1">{<block_content pos:start="5:5" pos:end="169:51">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="11:75"><expr pos:start="9:5" pos:end="11:74"><call pos:start="9:5" pos:end="11:74"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="11:74">(<argument pos:start="9:13" pos:end="9:68"><expr pos:start="9:13" pos:end="9:68"><literal type="string" pos:start="9:13" pos:end="9:68">"Enter save live stage %d submitted %d transferred %d\n"</literal></expr></argument>,

            <argument pos:start="11:13" pos:end="11:17"><expr pos:start="11:13" pos:end="11:17"><name pos:start="11:13" pos:end="11:17">stage</name></expr></argument>, <argument pos:start="11:20" pos:end="11:44"><expr pos:start="11:20" pos:end="11:44"><name pos:start="11:20" pos:end="11:44"><name pos:start="11:20" pos:end="11:34">block_mig_state</name><operator pos:start="11:35" pos:end="11:35">.</operator><name pos:start="11:36" pos:end="11:44">submitted</name></name></expr></argument>, <argument pos:start="11:47" pos:end="11:73"><expr pos:start="11:47" pos:end="11:73"><name pos:start="11:47" pos:end="11:73"><name pos:start="11:47" pos:end="11:61">block_mig_state</name><operator pos:start="11:62" pos:end="11:62">.</operator><name pos:start="11:63" pos:end="11:73">transferred</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:13">stage</name> <operator pos:start="15:15" pos:end="15:15">&lt;</operator> <literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr>)</condition> <block pos:start="15:20" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><call pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:23">blk_mig_cleanup</name><argument_list pos:start="17:24" pos:end="17:28">(<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:40">(<expr pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:23">block_mig_state</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:34">blk_enable</name></name> <operator pos:start="25:36" pos:end="25:37">!=</operator> <literal type="number" pos:start="25:39" pos:end="25:39">1</literal></expr>)</condition> <block pos:start="25:42" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:17">

        <comment type="block" pos:start="27:9" pos:end="27:40">/* no need to migrate storage */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><call pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:21">qemu_put_be64</name><argument_list pos:start="29:22" pos:end="29:42">(<argument pos:start="29:23" pos:end="29:23"><expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">f</name></expr></argument>, <argument pos:start="29:26" pos:end="29:41"><expr pos:start="29:26" pos:end="29:41"><name pos:start="29:26" pos:end="29:41">BLK_MIG_FLAG_EOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:13">stage</name> <operator pos:start="37:15" pos:end="37:16">==</operator> <literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr>)</condition> <block pos:start="37:21" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:30">

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><call pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:26">init_blk_migration</name><argument_list pos:start="39:27" pos:end="39:34">(<argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">mon</name></expr></argument>, <argument pos:start="39:33" pos:end="39:33"><expr pos:start="39:33" pos:end="39:33"><name pos:start="39:33" pos:end="39:33">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="43:9" pos:end="43:38">/* start track dirty blocks */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><call pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:26">set_dirty_tracking</name><argument_list pos:start="45:27" pos:end="45:29">(<argument pos:start="45:28" pos:end="45:28"><expr pos:start="45:28" pos:end="45:28"><literal type="number" pos:start="45:28" pos:end="45:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:18"><expr pos:start="51:5" pos:end="51:17"><call pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:14">flush_blks</name><argument_list pos:start="51:15" pos:end="51:17">(<argument pos:start="51:16" pos:end="51:16"><expr pos:start="51:16" pos:end="51:16"><name pos:start="51:16" pos:end="51:16">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:33"><expr pos:start="55:5" pos:end="55:32"><name pos:start="55:5" pos:end="55:7">ret</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <call pos:start="55:11" pos:end="55:32"><name pos:start="55:11" pos:end="55:29">qemu_file_get_error</name><argument_list pos:start="55:30" pos:end="55:32">(<argument pos:start="55:31" pos:end="55:31"><expr pos:start="55:31" pos:end="55:31"><name pos:start="55:31" pos:end="55:31">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:12">(<expr pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">ret</name></expr>)</condition> <block pos:start="57:14" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:19">

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><call pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:23">blk_mig_cleanup</name><argument_list pos:start="59:24" pos:end="59:28">(<argument pos:start="59:25" pos:end="59:27"><expr pos:start="59:25" pos:end="59:27"><name pos:start="59:25" pos:end="59:27">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:19">return <expr pos:start="61:16" pos:end="61:18"><name pos:start="61:16" pos:end="61:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:33"><expr pos:start="67:5" pos:end="67:32"><call pos:start="67:5" pos:end="67:32"><name pos:start="67:5" pos:end="67:30">blk_mig_reset_dirty_cursor</name><argument_list pos:start="67:31" pos:end="67:32">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="123:5"><if pos:start="71:5" pos:end="123:5">if <condition pos:start="71:8" pos:end="71:19">(<expr pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:13">stage</name> <operator pos:start="71:15" pos:end="71:16">==</operator> <literal type="number" pos:start="71:18" pos:end="71:18">2</literal></expr>)</condition> <block pos:start="71:21" pos:end="123:5">{<block_content pos:start="75:9" pos:end="121:9">

        <comment type="block" pos:start="73:9" pos:end="73:42">/* control the rate of transfer */</comment>

        <while pos:start="75:9" pos:end="105:9">while <condition pos:start="75:15" pos:end="79:43">(<expr pos:start="75:16" pos:end="79:42"><operator pos:start="75:16" pos:end="75:16">(</operator><name pos:start="75:17" pos:end="75:41"><name pos:start="75:17" pos:end="75:31">block_mig_state</name><operator pos:start="75:32" pos:end="75:32">.</operator><name pos:start="75:33" pos:end="75:41">submitted</name></name> <operator pos:start="75:43" pos:end="75:43">+</operator>

                <name pos:start="77:17" pos:end="77:41"><name pos:start="77:17" pos:end="77:31">block_mig_state</name><operator pos:start="77:32" pos:end="77:32">.</operator><name pos:start="77:33" pos:end="77:41">read_done</name></name><operator pos:start="77:42" pos:end="77:42">)</operator> <operator pos:start="77:44" pos:end="77:44">*</operator> <name pos:start="77:46" pos:end="77:55">BLOCK_SIZE</name> <operator pos:start="77:57" pos:end="77:57">&lt;</operator>

               <call pos:start="79:16" pos:end="79:42"><name pos:start="79:16" pos:end="79:39">qemu_file_get_rate_limit</name><argument_list pos:start="79:40" pos:end="79:42">(<argument pos:start="79:41" pos:end="79:41"><expr pos:start="79:41" pos:end="79:41"><name pos:start="79:41" pos:end="79:41">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:45" pos:end="105:9">{<block_content pos:start="81:13" pos:end="103:13">

            <if_stmt pos:start="81:13" pos:end="103:13"><if pos:start="81:13" pos:end="93:13">if <condition pos:start="81:16" pos:end="81:52">(<expr pos:start="81:17" pos:end="81:51"><name pos:start="81:17" pos:end="81:46"><name pos:start="81:17" pos:end="81:31">block_mig_state</name><operator pos:start="81:32" pos:end="81:32">.</operator><name pos:start="81:33" pos:end="81:46">bulk_completed</name></name> <operator pos:start="81:48" pos:end="81:49">==</operator> <literal type="number" pos:start="81:51" pos:end="81:51">0</literal></expr>)</condition> <block pos:start="81:54" pos:end="93:13">{<block_content pos:start="85:17" pos:end="91:17">

                <comment type="block" pos:start="83:17" pos:end="83:49">/* first finish the bulk phase */</comment>

                <if_stmt pos:start="85:17" pos:end="91:17"><if pos:start="85:17" pos:end="91:17">if <condition pos:start="85:20" pos:end="85:59">(<expr pos:start="85:21" pos:end="85:58"><call pos:start="85:21" pos:end="85:53"><name pos:start="85:21" pos:end="85:45">blk_mig_save_bulked_block</name><argument_list pos:start="85:46" pos:end="85:53">(<argument pos:start="85:47" pos:end="85:49"><expr pos:start="85:47" pos:end="85:49"><name pos:start="85:47" pos:end="85:49">mon</name></expr></argument>, <argument pos:start="85:52" pos:end="85:52"><expr pos:start="85:52" pos:end="85:52"><name pos:start="85:52" pos:end="85:52">f</name></expr></argument>)</argument_list></call> <operator pos:start="85:55" pos:end="85:56">==</operator> <literal type="number" pos:start="85:58" pos:end="85:58">0</literal></expr>)</condition> <block pos:start="85:61" pos:end="91:17">{<block_content pos:start="89:21" pos:end="89:55">

                    <comment type="block" pos:start="87:21" pos:end="87:61">/* finished saving bulk on all devices */</comment>

                    <expr_stmt pos:start="89:21" pos:end="89:55"><expr pos:start="89:21" pos:end="89:54"><name pos:start="89:21" pos:end="89:50"><name pos:start="89:21" pos:end="89:35">block_mig_state</name><operator pos:start="89:36" pos:end="89:36">.</operator><name pos:start="89:37" pos:end="89:50">bulk_completed</name></name> <operator pos:start="89:52" pos:end="89:52">=</operator> <literal type="number" pos:start="89:54" pos:end="89:54">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="93:15" pos:end="103:13">else <block pos:start="93:20" pos:end="103:13">{<block_content pos:start="95:17" pos:end="101:17">

                <if_stmt pos:start="95:17" pos:end="101:17"><if pos:start="95:17" pos:end="101:17">if <condition pos:start="95:20" pos:end="95:61">(<expr pos:start="95:21" pos:end="95:60"><call pos:start="95:21" pos:end="95:55"><name pos:start="95:21" pos:end="95:44">blk_mig_save_dirty_block</name><argument_list pos:start="95:45" pos:end="95:55">(<argument pos:start="95:46" pos:end="95:48"><expr pos:start="95:46" pos:end="95:48"><name pos:start="95:46" pos:end="95:48">mon</name></expr></argument>, <argument pos:start="95:51" pos:end="95:51"><expr pos:start="95:51" pos:end="95:51"><name pos:start="95:51" pos:end="95:51">f</name></expr></argument>, <argument pos:start="95:54" pos:end="95:54"><expr pos:start="95:54" pos:end="95:54"><literal type="number" pos:start="95:54" pos:end="95:54">1</literal></expr></argument>)</argument_list></call> <operator pos:start="95:57" pos:end="95:58">==</operator> <literal type="number" pos:start="95:60" pos:end="95:60">0</literal></expr>)</condition> <block pos:start="95:63" pos:end="101:17">{<block_content pos:start="99:21" pos:end="99:26">

                    <comment type="block" pos:start="97:21" pos:end="97:46">/* no more dirty blocks */</comment>

                    <break pos:start="99:21" pos:end="99:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>



        <expr_stmt pos:start="109:9" pos:end="109:22"><expr pos:start="109:9" pos:end="109:21"><call pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:18">flush_blks</name><argument_list pos:start="109:19" pos:end="109:21">(<argument pos:start="109:20" pos:end="109:20"><expr pos:start="109:20" pos:end="109:20"><name pos:start="109:20" pos:end="109:20">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:37"><expr pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:11">ret</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="113:36"><name pos:start="113:15" pos:end="113:33">qemu_file_get_error</name><argument_list pos:start="113:34" pos:end="113:36">(<argument pos:start="113:35" pos:end="113:35"><expr pos:start="113:35" pos:end="113:35"><name pos:start="113:35" pos:end="113:35">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="121:9"><if pos:start="115:9" pos:end="121:9">if <condition pos:start="115:12" pos:end="115:16">(<expr pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:15">ret</name></expr>)</condition> <block pos:start="115:18" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:23">

            <expr_stmt pos:start="117:13" pos:end="117:33"><expr pos:start="117:13" pos:end="117:32"><call pos:start="117:13" pos:end="117:32"><name pos:start="117:13" pos:end="117:27">blk_mig_cleanup</name><argument_list pos:start="117:28" pos:end="117:32">(<argument pos:start="117:29" pos:end="117:31"><expr pos:start="117:29" pos:end="117:31"><name pos:start="117:29" pos:end="117:31">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="119:13" pos:end="119:23">return <expr pos:start="119:20" pos:end="119:22"><name pos:start="119:20" pos:end="119:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="127:5" pos:end="161:5"><if pos:start="127:5" pos:end="161:5">if <condition pos:start="127:8" pos:end="127:19">(<expr pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:13">stage</name> <operator pos:start="127:15" pos:end="127:16">==</operator> <literal type="number" pos:start="127:18" pos:end="127:18">3</literal></expr>)</condition> <block pos:start="127:21" pos:end="161:5">{<block_content pos:start="133:9" pos:end="159:59">

        <comment type="block" pos:start="129:9" pos:end="131:38">/* we know for sure that save bulk is completed and

           all async read completed */</comment>

        <expr_stmt pos:start="133:9" pos:end="133:47"><expr pos:start="133:9" pos:end="133:46"><call pos:start="133:9" pos:end="133:46"><name pos:start="133:9" pos:end="133:14">assert</name><argument_list pos:start="133:15" pos:end="133:46">(<argument pos:start="133:16" pos:end="133:45"><expr pos:start="133:16" pos:end="133:45"><name pos:start="133:16" pos:end="133:40"><name pos:start="133:16" pos:end="133:30">block_mig_state</name><operator pos:start="133:31" pos:end="133:31">.</operator><name pos:start="133:32" pos:end="133:40">submitted</name></name> <operator pos:start="133:42" pos:end="133:43">==</operator> <literal type="number" pos:start="133:45" pos:end="133:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <while pos:start="137:9" pos:end="137:57">while <condition pos:start="137:15" pos:end="137:56">(<expr pos:start="137:16" pos:end="137:55"><call pos:start="137:16" pos:end="137:50"><name pos:start="137:16" pos:end="137:39">blk_mig_save_dirty_block</name><argument_list pos:start="137:40" pos:end="137:50">(<argument pos:start="137:41" pos:end="137:43"><expr pos:start="137:41" pos:end="137:43"><name pos:start="137:41" pos:end="137:43">mon</name></expr></argument>, <argument pos:start="137:46" pos:end="137:46"><expr pos:start="137:46" pos:end="137:46"><name pos:start="137:46" pos:end="137:46">f</name></expr></argument>, <argument pos:start="137:49" pos:end="137:49"><expr pos:start="137:49" pos:end="137:49"><literal type="number" pos:start="137:49" pos:end="137:49">0</literal></expr></argument>)</argument_list></call> <operator pos:start="137:52" pos:end="137:53">!=</operator> <literal type="number" pos:start="137:55" pos:end="137:55">0</literal></expr>)</condition><block type="pseudo" pos:start="137:57" pos:end="137:57"><block_content pos:start="137:57" pos:end="137:57"><empty_stmt pos:start="137:57" pos:end="137:57">;</empty_stmt></block_content></block></while>

        <expr_stmt pos:start="139:9" pos:end="139:29"><expr pos:start="139:9" pos:end="139:28"><call pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:23">blk_mig_cleanup</name><argument_list pos:start="139:24" pos:end="139:28">(<argument pos:start="139:25" pos:end="139:27"><expr pos:start="139:25" pos:end="139:27"><name pos:start="139:25" pos:end="139:27">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="143:9" pos:end="143:31">/* report completion */</comment>

        <expr_stmt pos:start="145:9" pos:end="145:76"><expr pos:start="145:9" pos:end="145:75"><call pos:start="145:9" pos:end="145:75"><name pos:start="145:9" pos:end="145:21">qemu_put_be64</name><argument_list pos:start="145:22" pos:end="145:75">(<argument pos:start="145:23" pos:end="145:23"><expr pos:start="145:23" pos:end="145:23"><name pos:start="145:23" pos:end="145:23">f</name></expr></argument>, <argument pos:start="145:26" pos:end="145:74"><expr pos:start="145:26" pos:end="145:74"><operator pos:start="145:26" pos:end="145:26">(</operator><literal type="number" pos:start="145:27" pos:end="145:29">100</literal> <operator pos:start="145:31" pos:end="145:32">&lt;&lt;</operator> <name pos:start="145:34" pos:end="145:49">BDRV_SECTOR_BITS</name><operator pos:start="145:50" pos:end="145:50">)</operator> <operator pos:start="145:52" pos:end="145:52">|</operator> <name pos:start="145:54" pos:end="145:74">BLK_MIG_FLAG_PROGRESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="149:9" pos:end="149:37"><expr pos:start="149:9" pos:end="149:36"><name pos:start="149:9" pos:end="149:11">ret</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <call pos:start="149:15" pos:end="149:36"><name pos:start="149:15" pos:end="149:33">qemu_file_get_error</name><argument_list pos:start="149:34" pos:end="149:36">(<argument pos:start="149:35" pos:end="149:35"><expr pos:start="149:35" pos:end="149:35"><name pos:start="149:35" pos:end="149:35">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="155:9"><if pos:start="151:9" pos:end="155:9">if <condition pos:start="151:12" pos:end="151:16">(<expr pos:start="151:13" pos:end="151:15"><name pos:start="151:13" pos:end="151:15">ret</name></expr>)</condition> <block pos:start="151:18" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:23">

            <return pos:start="153:13" pos:end="153:23">return <expr pos:start="153:20" pos:end="153:22"><name pos:start="153:20" pos:end="153:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="159:9" pos:end="159:59"><expr pos:start="159:9" pos:end="159:58"><call pos:start="159:9" pos:end="159:58"><name pos:start="159:9" pos:end="159:22">monitor_printf</name><argument_list pos:start="159:23" pos:end="159:58">(<argument pos:start="159:24" pos:end="159:26"><expr pos:start="159:24" pos:end="159:26"><name pos:start="159:24" pos:end="159:26">mon</name></expr></argument>, <argument pos:start="159:29" pos:end="159:57"><expr pos:start="159:29" pos:end="159:57"><literal type="string" pos:start="159:29" pos:end="159:57">"Block migration completed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:39"><expr pos:start="165:5" pos:end="165:38"><call pos:start="165:5" pos:end="165:38"><name pos:start="165:5" pos:end="165:17">qemu_put_be64</name><argument_list pos:start="165:18" pos:end="165:38">(<argument pos:start="165:19" pos:end="165:19"><expr pos:start="165:19" pos:end="165:19"><name pos:start="165:19" pos:end="165:19">f</name></expr></argument>, <argument pos:start="165:22" pos:end="165:37"><expr pos:start="165:22" pos:end="165:37"><name pos:start="165:22" pos:end="165:37">BLK_MIG_FLAG_EOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="169:5" pos:end="169:51">return <expr pos:start="169:12" pos:end="169:50"><operator pos:start="169:12" pos:end="169:12">(</operator><operator pos:start="169:13" pos:end="169:13">(</operator><name pos:start="169:14" pos:end="169:18">stage</name> <operator pos:start="169:20" pos:end="169:21">==</operator> <literal type="number" pos:start="169:23" pos:end="169:23">2</literal><operator pos:start="169:24" pos:end="169:24">)</operator> <operator pos:start="169:26" pos:end="169:27">&amp;&amp;</operator> <call pos:start="169:29" pos:end="169:49"><name pos:start="169:29" pos:end="169:47">is_stage2_completed</name><argument_list pos:start="169:48" pos:end="169:49">()</argument_list></call><operator pos:start="169:50" pos:end="169:50">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
