<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4191.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gen_mtfsf</name><parameter_list pos:start="1:22" pos:end="1:40">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:43">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">TCGv_i32</name></type> <name pos:start="5:14" pos:end="5:15">t0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">L</name> <init pos:start="7:11" pos:end="7:36">= <expr pos:start="7:13" pos:end="7:36"><name pos:start="7:13" pos:end="7:23"><name pos:start="7:13" pos:end="7:15">ctx</name><operator pos:start="7:16" pos:end="7:17">-&gt;</operator><name pos:start="7:18" pos:end="7:23">opcode</name></name> <operator pos:start="7:25" pos:end="7:25">&amp;</operator> <literal type="number" pos:start="7:27" pos:end="7:36">0x02000000</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:36">(<expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:16">unlikely</name><argument_list pos:start="11:17" pos:end="11:35">(<argument pos:start="11:18" pos:end="11:34"><expr pos:start="11:18" pos:end="11:34"><operator pos:start="11:18" pos:end="11:18">!</operator><name pos:start="11:19" pos:end="11:34"><name pos:start="11:19" pos:end="11:21">ctx</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:34">fpu_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:38" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:45"><expr pos:start="13:9" pos:end="13:44"><call pos:start="13:9" pos:end="13:44"><name pos:start="13:9" pos:end="13:21">gen_exception</name><argument_list pos:start="13:22" pos:end="13:44">(<argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:25">ctx</name></expr></argument>, <argument pos:start="13:28" pos:end="13:43"><expr pos:start="13:28" pos:end="13:43"><name pos:start="13:28" pos:end="13:43">POWERPC_EXCP_FPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="19:5" pos:end="19:77">/* NIP cannot be restored if the memory exception comes from an helper */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><call pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:18">gen_update_nip</name><argument_list pos:start="21:19" pos:end="21:37">(<argument pos:start="21:20" pos:end="21:22"><expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">ctx</name></expr></argument>, <argument pos:start="21:25" pos:end="21:36"><expr pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:32"><name pos:start="21:25" pos:end="21:27">ctx</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:32">nip</name></name> <operator pos:start="21:34" pos:end="21:34">-</operator> <literal type="number" pos:start="21:36" pos:end="21:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><call pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:22">gen_reset_fpstatus</name><argument_list pos:start="23:23" pos:end="23:24">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:44"><if pos:start="25:5" pos:end="27:33">if <condition pos:start="25:8" pos:end="25:10">(<expr pos:start="25:9" pos:end="25:9"><name pos:start="25:9" pos:end="25:9">L</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:33"><block_content pos:start="27:9" pos:end="27:33">

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:10">t0</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:32"><name pos:start="27:14" pos:end="27:26">tcg_const_i32</name><argument_list pos:start="27:27" pos:end="27:32">(<argument pos:start="27:28" pos:end="27:31"><expr pos:start="27:28" pos:end="27:31"><literal type="number" pos:start="27:28" pos:end="27:31">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="29:5" pos:end="31:44">else<block type="pseudo" pos:start="31:9" pos:end="31:44"><block_content pos:start="31:9" pos:end="31:44">

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:10">t0</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:43"><name pos:start="31:14" pos:end="31:26">tcg_const_i32</name><argument_list pos:start="31:27" pos:end="31:43">(<argument pos:start="31:28" pos:end="31:42"><expr pos:start="31:28" pos:end="31:42"><call pos:start="31:28" pos:end="31:42"><name pos:start="31:28" pos:end="31:29">FM</name><argument_list pos:start="31:30" pos:end="31:42">(<argument pos:start="31:31" pos:end="31:41"><expr pos:start="31:31" pos:end="31:41"><name pos:start="31:31" pos:end="31:41"><name pos:start="31:31" pos:end="31:33">ctx</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:41">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:66"><expr pos:start="33:5" pos:end="33:65"><call pos:start="33:5" pos:end="33:65"><name pos:start="33:5" pos:end="33:26">gen_helper_store_fpscr</name><argument_list pos:start="33:27" pos:end="33:65">(<argument pos:start="33:28" pos:end="33:34"><expr pos:start="33:28" pos:end="33:34"><name pos:start="33:28" pos:end="33:34">cpu_env</name></expr></argument>, <argument pos:start="33:37" pos:end="33:60"><expr pos:start="33:37" pos:end="33:60"><name pos:start="33:37" pos:end="33:60"><name pos:start="33:37" pos:end="33:43">cpu_fpr</name><index pos:start="33:44" pos:end="33:60">[<expr pos:start="33:45" pos:end="33:59"><call pos:start="33:45" pos:end="33:59"><name pos:start="33:45" pos:end="33:46">rB</name><argument_list pos:start="33:47" pos:end="33:59">(<argument pos:start="33:48" pos:end="33:58"><expr pos:start="33:48" pos:end="33:58"><name pos:start="33:48" pos:end="33:58"><name pos:start="33:48" pos:end="33:50">ctx</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:58">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="33:63" pos:end="33:64"><expr pos:start="33:63" pos:end="33:64"><name pos:start="33:63" pos:end="33:64">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><call pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:21">tcg_temp_free_i32</name><argument_list pos:start="35:22" pos:end="35:25">(<argument pos:start="35:23" pos:end="35:24"><expr pos:start="35:23" pos:end="35:24"><name pos:start="35:23" pos:end="35:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:39">(<expr pos:start="37:9" pos:end="37:38"><call pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:16">unlikely</name><argument_list pos:start="37:17" pos:end="37:38">(<argument pos:start="37:18" pos:end="37:37"><expr pos:start="37:18" pos:end="37:37"><call pos:start="37:18" pos:end="37:32"><name pos:start="37:18" pos:end="37:19">Rc</name><argument_list pos:start="37:20" pos:end="37:32">(<argument pos:start="37:21" pos:end="37:31"><expr pos:start="37:21" pos:end="37:31"><name pos:start="37:21" pos:end="37:31"><name pos:start="37:21" pos:end="37:23">ctx</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:31">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="37:34" pos:end="37:35">!=</operator> <literal type="number" pos:start="37:37" pos:end="37:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:41" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:59">

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><call pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:28">tcg_gen_trunc_tl_i32</name><argument_list pos:start="39:29" pos:end="39:51">(<argument pos:start="39:30" pos:end="39:39"><expr pos:start="39:30" pos:end="39:39"><name pos:start="39:30" pos:end="39:39"><name pos:start="39:30" pos:end="39:36">cpu_crf</name><index pos:start="39:37" pos:end="39:39">[<expr pos:start="39:38" pos:end="39:38"><literal type="number" pos:start="39:38" pos:end="39:38">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:42" pos:end="39:50"><expr pos:start="39:42" pos:end="39:50"><name pos:start="39:42" pos:end="39:50">cpu_fpscr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:59"><expr pos:start="41:9" pos:end="41:58"><call pos:start="41:9" pos:end="41:58"><name pos:start="41:9" pos:end="41:24">tcg_gen_shri_i32</name><argument_list pos:start="41:25" pos:end="41:58">(<argument pos:start="41:26" pos:end="41:35"><expr pos:start="41:26" pos:end="41:35"><name pos:start="41:26" pos:end="41:35"><name pos:start="41:26" pos:end="41:32">cpu_crf</name><index pos:start="41:33" pos:end="41:35">[<expr pos:start="41:34" pos:end="41:34"><literal type="number" pos:start="41:34" pos:end="41:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:38" pos:end="41:47"><expr pos:start="41:38" pos:end="41:47"><name pos:start="41:38" pos:end="41:47"><name pos:start="41:38" pos:end="41:44">cpu_crf</name><index pos:start="41:45" pos:end="41:47">[<expr pos:start="41:46" pos:end="41:46"><literal type="number" pos:start="41:46" pos:end="41:46">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:50" pos:end="41:57"><expr pos:start="41:50" pos:end="41:57"><name pos:start="41:50" pos:end="41:57">FPSCR_OX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="45:5" pos:end="45:43">/* We can raise a differed exception */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:43"><expr pos:start="47:5" pos:end="47:42"><call pos:start="47:5" pos:end="47:42"><name pos:start="47:5" pos:end="47:33">gen_helper_float_check_status</name><argument_list pos:start="47:34" pos:end="47:42">(<argument pos:start="47:35" pos:end="47:41"><expr pos:start="47:35" pos:end="47:41"><name pos:start="47:35" pos:end="47:41">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
