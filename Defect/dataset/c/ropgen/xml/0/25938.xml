<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25938.c" pos:tabs="8"><function pos:start="1:1" pos:end="1259:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">ff_h264_decode_slice_header</name><parameter_list pos:start="1:32" pos:end="1:86">(<parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:43">H264Context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">h</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:68"><decl pos:start="1:49" pos:end="1:68"><type pos:start="1:49" pos:end="1:68"><name pos:start="1:49" pos:end="1:64">H264SliceContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">sl</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:85"><decl pos:start="1:71" pos:end="1:85"><type pos:start="1:71" pos:end="1:85"><name pos:start="1:71" pos:end="1:81">H264Context</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:85">h0</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1259:1">{<block_content pos:start="5:5" pos:end="1257:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:34">first_mb_in_slice</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">pps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:27">slice_type</name></decl>, <decl pos:start="11:30" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:30" pos:end="11:32">tmp</name></decl>, <decl pos:start="11:35" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:35" pos:end="11:35">i</name></decl>, <decl pos:start="11:38" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:38" pos:end="11:38">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:29">default_ref_list_done</name> <init pos:start="13:31" pos:end="13:33">= <expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:26">last_pic_structure</name></decl>, <decl pos:start="15:29" pos:end="15:46"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:29" pos:end="15:46">last_pic_droppable</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">needs_reinit</name> <init pos:start="17:22" pos:end="17:24">= <expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:22">field_pic_flag</name></decl>, <decl pos:start="19:25" pos:end="19:41"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:25" pos:end="19:41">bottom_field_flag</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:55"><expr pos:start="23:5" pos:end="23:54"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:5">h</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:15">qpel_put</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:54"><name pos:start="23:19" pos:end="23:19">h</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:29">h264qpel</name><operator pos:start="23:30" pos:end="23:30">.</operator><name pos:start="23:31" pos:end="23:54">put_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:55"><expr pos:start="25:5" pos:end="25:54"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:5">h</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:15">qpel_avg</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:54"><name pos:start="25:19" pos:end="25:19">h</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:29">h264qpel</name><operator pos:start="25:30" pos:end="25:30">.</operator><name pos:start="25:31" pos:end="25:54">avg_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:21">first_mb_in_slice</name> <operator pos:start="29:23" pos:end="29:23">=</operator> <call pos:start="29:25" pos:end="29:45"><name pos:start="29:25" pos:end="29:37">get_ue_golomb</name><argument_list pos:start="29:38" pos:end="29:45">(<argument pos:start="29:39" pos:end="29:44"><expr pos:start="29:39" pos:end="29:44"><operator pos:start="29:39" pos:end="29:39">&amp;</operator><name pos:start="29:40" pos:end="29:44"><name pos:start="29:40" pos:end="29:40">h</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:44">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="59:5"><if pos:start="33:5" pos:end="59:5">if <condition pos:start="33:8" pos:end="33:31">(<expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:25">first_mb_in_slice</name> <operator pos:start="33:27" pos:end="33:28">==</operator> <literal type="number" pos:start="33:30" pos:end="33:30">0</literal></expr>)</condition> <block pos:start="33:33" pos:end="59:5">{<block_content pos:start="35:9" pos:end="57:9"> <comment type="line" pos:start="33:35" pos:end="33:74">// FIXME better field boundary detection</comment>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:68">(<expr pos:start="35:13" pos:end="35:67"><name pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:14">h0</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:29">current_slice</name></name> <operator pos:start="35:31" pos:end="35:32">&amp;&amp;</operator> <name pos:start="35:34" pos:end="35:47"><name pos:start="35:34" pos:end="35:34">h</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:47">cur_pic_ptr</name></name> <operator pos:start="35:49" pos:end="35:50">&amp;&amp;</operator> <call pos:start="35:52" pos:end="35:67"><name pos:start="35:52" pos:end="35:64">FIELD_PICTURE</name><argument_list pos:start="35:65" pos:end="35:67">(<argument pos:start="35:66" pos:end="35:66"><expr pos:start="35:66" pos:end="35:66"><name pos:start="35:66" pos:end="35:66">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:70" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:40">

            <expr_stmt pos:start="37:13" pos:end="37:40"><expr pos:start="37:13" pos:end="37:39"><call pos:start="37:13" pos:end="37:39"><name pos:start="37:13" pos:end="37:29">ff_h264_field_end</name><argument_list pos:start="37:30" pos:end="37:39">(<argument pos:start="37:31" pos:end="37:31"><expr pos:start="37:31" pos:end="37:31"><name pos:start="37:31" pos:end="37:31">h</name></expr></argument>, <argument pos:start="37:34" pos:end="37:35"><expr pos:start="37:34" pos:end="37:35"><name pos:start="37:34" pos:end="37:35">sl</name></expr></argument>, <argument pos:start="37:38" pos:end="37:38"><expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:10">h0</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:25">current_slice</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <literal type="number" pos:start="43:29" pos:end="43:29">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="57:9"><if pos:start="45:9" pos:end="57:9">if <condition pos:start="45:12" pos:end="45:29">(<expr pos:start="45:13" pos:end="45:28"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:28"><name pos:start="45:14" pos:end="45:15">h0</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:28">first_field</name></name></expr>)</condition> <block pos:start="45:31" pos:end="57:9">{<block_content pos:start="47:13" pos:end="55:34">

            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if <condition pos:start="47:16" pos:end="47:48">(<expr pos:start="47:17" pos:end="47:47"><name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:17">h</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:30">cur_pic_ptr</name></name> <operator pos:start="47:32" pos:end="47:33">&amp;&amp;</operator> <operator pos:start="47:35" pos:end="47:35">!</operator><name pos:start="47:36" pos:end="47:47"><name pos:start="47:36" pos:end="47:36">h</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:47">droppable</name></name></expr>)</condition> <block pos:start="47:50" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:85">

                <expr_stmt pos:start="49:17" pos:end="51:85"><expr pos:start="49:17" pos:end="51:84"><call pos:start="49:17" pos:end="51:84"><name pos:start="49:17" pos:end="49:41">ff_thread_report_progress</name><argument_list pos:start="49:42" pos:end="51:84">(<argument pos:start="49:43" pos:end="49:61"><expr pos:start="49:43" pos:end="49:61"><operator pos:start="49:43" pos:end="49:43">&amp;</operator><name pos:start="49:44" pos:end="49:61"><name pos:start="49:44" pos:end="49:44">h</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:57">cur_pic_ptr</name><operator pos:start="49:58" pos:end="49:59">-&gt;</operator><name pos:start="49:60" pos:end="49:61">tf</name></name></expr></argument>, <argument pos:start="49:64" pos:end="49:70"><expr pos:start="49:64" pos:end="49:70"><name pos:start="49:64" pos:end="49:70">INT_MAX</name></expr></argument>,

                                          <argument pos:start="51:43" pos:end="51:83"><expr pos:start="51:43" pos:end="51:83"><name pos:start="51:43" pos:end="51:62"><name pos:start="51:43" pos:end="51:43">h</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:62">picture_structure</name></name> <operator pos:start="51:64" pos:end="51:65">==</operator> <name pos:start="51:67" pos:end="51:83">PICT_BOTTOM_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:34"><expr pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:13">h</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:26">cur_pic_ptr</name></name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:33">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:42"><expr pos:start="63:5" pos:end="63:41"><name pos:start="63:5" pos:end="63:14">slice_type</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:41"><name pos:start="63:18" pos:end="63:33">get_ue_golomb_31</name><argument_list pos:start="63:34" pos:end="63:41">(<argument pos:start="63:35" pos:end="63:40"><expr pos:start="63:35" pos:end="63:40"><operator pos:start="63:35" pos:end="63:35">&amp;</operator><name pos:start="63:36" pos:end="63:40"><name pos:start="63:36" pos:end="63:36">h</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:40">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="75:5"><if pos:start="65:5" pos:end="75:5">if <condition pos:start="65:8" pos:end="65:23">(<expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:18">slice_type</name> <operator pos:start="65:20" pos:end="65:20">&gt;</operator> <literal type="number" pos:start="65:22" pos:end="65:22">9</literal></expr>)</condition> <block pos:start="65:25" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:35">

        <expr_stmt pos:start="67:9" pos:end="71:45"><expr pos:start="67:9" pos:end="71:44"><call pos:start="67:9" pos:end="71:44"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="71:44">(<argument pos:start="67:16" pos:end="67:23"><expr pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:16">h</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:23">avctx</name></name></expr></argument>, <argument pos:start="67:26" pos:end="67:37"><expr pos:start="67:26" pos:end="67:37"><name pos:start="67:26" pos:end="67:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="69:16" pos:end="69:51"><expr pos:start="69:16" pos:end="69:51"><literal type="string" pos:start="69:16" pos:end="69:51">"slice type %d too large at %d %d\n"</literal></expr></argument>,

               <argument pos:start="71:16" pos:end="71:25"><expr pos:start="71:16" pos:end="71:25"><name pos:start="71:16" pos:end="71:25">slice_type</name></expr></argument>, <argument pos:start="71:28" pos:end="71:34"><expr pos:start="71:28" pos:end="71:34"><name pos:start="71:28" pos:end="71:34"><name pos:start="71:28" pos:end="71:28">h</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:34">mb_x</name></name></expr></argument>, <argument pos:start="71:37" pos:end="71:43"><expr pos:start="71:37" pos:end="71:43"><name pos:start="71:37" pos:end="71:43"><name pos:start="71:37" pos:end="71:37">h</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:43">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:35">return <expr pos:start="73:16" pos:end="73:34"><name pos:start="73:16" pos:end="73:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="85:33"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:23">(<expr pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:18">slice_type</name> <operator pos:start="77:20" pos:end="77:20">&gt;</operator> <literal type="number" pos:start="77:22" pos:end="77:22">4</literal></expr>)</condition> <block pos:start="77:25" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:33">

        <expr_stmt pos:start="79:9" pos:end="79:24"><expr pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:18">slice_type</name> <operator pos:start="79:20" pos:end="79:21">-=</operator> <literal type="number" pos:start="79:23" pos:end="79:23">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:33"><expr pos:start="81:9" pos:end="81:32"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:10">sl</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:28">slice_type_fixed</name></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <literal type="number" pos:start="81:32" pos:end="81:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="85:33">else<block type="pseudo" pos:start="85:9" pos:end="85:33"><block_content pos:start="85:9" pos:end="85:33">

        <expr_stmt pos:start="85:9" pos:end="85:33"><expr pos:start="85:9" pos:end="85:32"><name pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:10">sl</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:28">slice_type_fixed</name></name> <operator pos:start="85:30" pos:end="85:30">=</operator> <literal type="number" pos:start="85:32" pos:end="85:32">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:49"><expr pos:start="89:5" pos:end="89:48"><name pos:start="89:5" pos:end="89:14">slice_type</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:48"><name pos:start="89:18" pos:end="89:36">golomb_to_pict_type</name><index pos:start="89:37" pos:end="89:48">[<expr pos:start="89:38" pos:end="89:47"><name pos:start="89:38" pos:end="89:47">slice_type</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="93:70">(<expr pos:start="91:9" pos:end="93:69"><name pos:start="91:9" pos:end="91:18">slice_type</name> <operator pos:start="91:20" pos:end="91:21">==</operator> <name pos:start="91:23" pos:end="91:39">AV_PICTURE_TYPE_I</name> <operator pos:start="91:41" pos:end="91:42">||</operator>

        <operator pos:start="93:9" pos:end="93:9">(</operator><name pos:start="93:10" pos:end="93:26"><name pos:start="93:10" pos:end="93:11">h0</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:26">current_slice</name></name> <operator pos:start="93:28" pos:end="93:29">!=</operator> <literal type="number" pos:start="93:31" pos:end="93:31">0</literal> <operator pos:start="93:33" pos:end="93:34">&amp;&amp;</operator> <name pos:start="93:36" pos:end="93:45">slice_type</name> <operator pos:start="93:47" pos:end="93:48">==</operator> <name pos:start="93:50" pos:end="93:68"><name pos:start="93:50" pos:end="93:51">h0</name><operator pos:start="93:52" pos:end="93:53">-&gt;</operator><name pos:start="93:54" pos:end="93:68">last_slice_type</name></name><operator pos:start="93:69" pos:end="93:69">)</operator></expr>)</condition> <block pos:start="93:72" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:34">

        <expr_stmt pos:start="95:9" pos:end="95:34"><expr pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:29">default_ref_list_done</name> <operator pos:start="95:31" pos:end="95:31">=</operator> <literal type="number" pos:start="95:33" pos:end="95:33">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:36"><expr pos:start="99:5" pos:end="99:35"><name pos:start="99:5" pos:end="99:18"><name pos:start="99:5" pos:end="99:6">sl</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:18">slice_type</name></name>     <operator pos:start="99:24" pos:end="99:24">=</operator> <name pos:start="99:26" pos:end="99:35">slice_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:40"><expr pos:start="101:5" pos:end="101:39"><name pos:start="101:5" pos:end="101:22"><name pos:start="101:5" pos:end="101:6">sl</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:22">slice_type_nos</name></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <name pos:start="101:26" pos:end="101:35">slice_type</name> <operator pos:start="101:37" pos:end="101:37">&amp;</operator> <literal type="number" pos:start="101:39" pos:end="101:39">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if <condition pos:start="105:8" pos:end="107:48">(<expr pos:start="105:9" pos:end="107:47"><name pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:9">h</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:24">nal_unit_type</name></name>  <operator pos:start="105:27" pos:end="105:28">==</operator> <name pos:start="105:30" pos:end="105:42">NAL_IDR_SLICE</name> <operator pos:start="105:44" pos:end="105:45">&amp;&amp;</operator>

        <name pos:start="107:9" pos:end="107:26"><name pos:start="107:9" pos:end="107:10">sl</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:26">slice_type_nos</name></name> <operator pos:start="107:28" pos:end="107:29">!=</operator> <name pos:start="107:31" pos:end="107:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="107:50" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:35">

        <expr_stmt pos:start="109:9" pos:end="109:82"><expr pos:start="109:9" pos:end="109:81"><call pos:start="109:9" pos:end="109:81"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="109:81">(<argument pos:start="109:16" pos:end="109:23"><expr pos:start="109:16" pos:end="109:23"><name pos:start="109:16" pos:end="109:23"><name pos:start="109:16" pos:end="109:16">h</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:23">avctx</name></name></expr></argument>, <argument pos:start="109:26" pos:end="109:37"><expr pos:start="109:26" pos:end="109:37"><name pos:start="109:26" pos:end="109:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:40" pos:end="109:80"><expr pos:start="109:40" pos:end="109:80"><literal type="string" pos:start="109:40" pos:end="109:80">"A non-intra slice in an IDR NAL unit.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="111:9" pos:end="111:35">return <expr pos:start="111:16" pos:end="111:34"><name pos:start="111:16" pos:end="111:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="117:5" pos:end="117:59">// to make a few old functions happy, it's wrong though</comment>

    <expr_stmt pos:start="119:5" pos:end="119:34"><expr pos:start="119:5" pos:end="119:33"><name pos:start="119:5" pos:end="119:16"><name pos:start="119:5" pos:end="119:5">h</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:16">pict_type</name></name> <operator pos:start="119:18" pos:end="119:18">=</operator> <name pos:start="119:20" pos:end="119:33"><name pos:start="119:20" pos:end="119:21">sl</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:33">slice_type</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:35"><expr pos:start="123:5" pos:end="123:34"><name pos:start="123:5" pos:end="123:10">pps_id</name> <operator pos:start="123:12" pos:end="123:12">=</operator> <call pos:start="123:14" pos:end="123:34"><name pos:start="123:14" pos:end="123:26">get_ue_golomb</name><argument_list pos:start="123:27" pos:end="123:34">(<argument pos:start="123:28" pos:end="123:33"><expr pos:start="123:28" pos:end="123:33"><operator pos:start="123:28" pos:end="123:28">&amp;</operator><name pos:start="123:29" pos:end="123:33"><name pos:start="123:29" pos:end="123:29">h</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="131:5"><if pos:start="125:5" pos:end="131:5">if <condition pos:start="125:8" pos:end="125:32">(<expr pos:start="125:9" pos:end="125:31"><name pos:start="125:9" pos:end="125:14">pps_id</name> <operator pos:start="125:16" pos:end="125:17">&gt;=</operator> <name pos:start="125:19" pos:end="125:31">MAX_PPS_COUNT</name></expr>)</condition> <block pos:start="125:34" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:35">

        <expr_stmt pos:start="127:9" pos:end="127:75"><expr pos:start="127:9" pos:end="127:74"><call pos:start="127:9" pos:end="127:74"><name pos:start="127:9" pos:end="127:14">av_log</name><argument_list pos:start="127:15" pos:end="127:74">(<argument pos:start="127:16" pos:end="127:23"><expr pos:start="127:16" pos:end="127:23"><name pos:start="127:16" pos:end="127:23"><name pos:start="127:16" pos:end="127:16">h</name><operator pos:start="127:17" pos:end="127:18">-&gt;</operator><name pos:start="127:19" pos:end="127:23">avctx</name></name></expr></argument>, <argument pos:start="127:26" pos:end="127:37"><expr pos:start="127:26" pos:end="127:37"><name pos:start="127:26" pos:end="127:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:40" pos:end="127:65"><expr pos:start="127:40" pos:end="127:65"><literal type="string" pos:start="127:40" pos:end="127:65">"pps_id %u out of range\n"</literal></expr></argument>, <argument pos:start="127:68" pos:end="127:73"><expr pos:start="127:68" pos:end="127:73"><name pos:start="127:68" pos:end="127:73">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="129:9" pos:end="129:35">return <expr pos:start="129:16" pos:end="129:34"><name pos:start="129:16" pos:end="129:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="133:5" pos:end="143:5"><if pos:start="133:5" pos:end="143:5">if <condition pos:start="133:8" pos:end="133:33">(<expr pos:start="133:9" pos:end="133:32"><operator pos:start="133:9" pos:end="133:9">!</operator><name pos:start="133:10" pos:end="133:32"><name pos:start="133:10" pos:end="133:11">h0</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:24">pps_buffers</name><index pos:start="133:25" pos:end="133:32">[<expr pos:start="133:26" pos:end="133:31"><name pos:start="133:26" pos:end="133:31">pps_id</name></expr>]</index></name></expr>)</condition> <block pos:start="133:35" pos:end="143:5">{<block_content pos:start="135:9" pos:end="141:35">

        <expr_stmt pos:start="135:9" pos:end="139:23"><expr pos:start="135:9" pos:end="139:22"><call pos:start="135:9" pos:end="139:22"><name pos:start="135:9" pos:end="135:14">av_log</name><argument_list pos:start="135:15" pos:end="139:22">(<argument pos:start="135:16" pos:end="135:23"><expr pos:start="135:16" pos:end="135:23"><name pos:start="135:16" pos:end="135:23"><name pos:start="135:16" pos:end="135:16">h</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:23">avctx</name></name></expr></argument>, <argument pos:start="135:26" pos:end="135:37"><expr pos:start="135:26" pos:end="135:37"><name pos:start="135:26" pos:end="135:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="137:16" pos:end="137:49"><expr pos:start="137:16" pos:end="137:49"><literal type="string" pos:start="137:16" pos:end="137:49">"non-existing PPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="139:16" pos:end="139:21"><expr pos:start="139:16" pos:end="139:21"><name pos:start="139:16" pos:end="139:21">pps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="141:9" pos:end="141:35">return <expr pos:start="141:16" pos:end="141:34"><name pos:start="141:16" pos:end="141:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:38"><expr pos:start="145:5" pos:end="145:37"><name pos:start="145:5" pos:end="145:10"><name pos:start="145:5" pos:end="145:5">h</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:10">pps</name></name> <operator pos:start="145:12" pos:end="145:12">=</operator> <operator pos:start="145:14" pos:end="145:14">*</operator><name pos:start="145:15" pos:end="145:37"><name pos:start="145:15" pos:end="145:16">h0</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:29">pps_buffers</name><index pos:start="145:30" pos:end="145:37">[<expr pos:start="145:31" pos:end="145:36"><name pos:start="145:31" pos:end="145:36">pps_id</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="149:5" pos:end="159:5"><if pos:start="149:5" pos:end="159:5">if <condition pos:start="149:8" pos:end="149:40">(<expr pos:start="149:9" pos:end="149:39"><operator pos:start="149:9" pos:end="149:9">!</operator><name pos:start="149:10" pos:end="149:39"><name pos:start="149:10" pos:end="149:11">h0</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:24">sps_buffers</name><index pos:start="149:25" pos:end="149:39">[<expr pos:start="149:26" pos:end="149:38"><name pos:start="149:26" pos:end="149:38"><name pos:start="149:26" pos:end="149:26">h</name><operator pos:start="149:27" pos:end="149:28">-&gt;</operator><name pos:start="149:29" pos:end="149:31">pps</name><operator pos:start="149:32" pos:end="149:32">.</operator><name pos:start="149:33" pos:end="149:38">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="149:42" pos:end="159:5">{<block_content pos:start="151:9" pos:end="157:35">

        <expr_stmt pos:start="151:9" pos:end="155:30"><expr pos:start="151:9" pos:end="155:29"><call pos:start="151:9" pos:end="155:29"><name pos:start="151:9" pos:end="151:14">av_log</name><argument_list pos:start="151:15" pos:end="155:29">(<argument pos:start="151:16" pos:end="151:23"><expr pos:start="151:16" pos:end="151:23"><name pos:start="151:16" pos:end="151:23"><name pos:start="151:16" pos:end="151:16">h</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:23">avctx</name></name></expr></argument>, <argument pos:start="151:26" pos:end="151:37"><expr pos:start="151:26" pos:end="151:37"><name pos:start="151:26" pos:end="151:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="153:16" pos:end="153:49"><expr pos:start="153:16" pos:end="153:49"><literal type="string" pos:start="153:16" pos:end="153:49">"non-existing SPS %u referenced\n"</literal></expr></argument>,

               <argument pos:start="155:16" pos:end="155:28"><expr pos:start="155:16" pos:end="155:28"><name pos:start="155:16" pos:end="155:28"><name pos:start="155:16" pos:end="155:16">h</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:21">pps</name><operator pos:start="155:22" pos:end="155:22">.</operator><name pos:start="155:23" pos:end="155:28">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="157:9" pos:end="157:35">return <expr pos:start="157:16" pos:end="157:34"><name pos:start="157:16" pos:end="157:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="163:5" pos:end="191:5"><if pos:start="163:5" pos:end="191:5">if <condition pos:start="163:8" pos:end="165:44">(<expr pos:start="163:9" pos:end="165:43"><name pos:start="163:9" pos:end="163:21"><name pos:start="163:9" pos:end="163:9">h</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:14">pps</name><operator pos:start="163:15" pos:end="163:15">.</operator><name pos:start="163:16" pos:end="163:21">sps_id</name></name> <operator pos:start="163:23" pos:end="163:24">!=</operator> <name pos:start="163:26" pos:end="163:38"><name pos:start="163:26" pos:end="163:26">h</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:31">sps</name><operator pos:start="163:32" pos:end="163:32">.</operator><name pos:start="163:33" pos:end="163:38">sps_id</name></name> <operator pos:start="163:40" pos:end="163:41">||</operator>

        <name pos:start="165:9" pos:end="165:38"><name pos:start="165:9" pos:end="165:10">h0</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:23">sps_buffers</name><index pos:start="165:24" pos:end="165:38">[<expr pos:start="165:25" pos:end="165:37"><name pos:start="165:25" pos:end="165:37"><name pos:start="165:25" pos:end="165:25">h</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:30">pps</name><operator pos:start="165:31" pos:end="165:31">.</operator><name pos:start="165:32" pos:end="165:37">sps_id</name></name></expr>]</index></name><operator pos:start="165:39" pos:end="165:40">-&gt;</operator><name pos:start="165:41" pos:end="165:43">new</name></expr>)</condition> <block pos:start="165:46" pos:end="191:5">{<block_content pos:start="167:9" pos:end="189:23">

        <expr_stmt pos:start="167:9" pos:end="167:48"><expr pos:start="167:9" pos:end="167:47"><name pos:start="167:9" pos:end="167:38"><name pos:start="167:9" pos:end="167:10">h0</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:23">sps_buffers</name><index pos:start="167:24" pos:end="167:38">[<expr pos:start="167:25" pos:end="167:37"><name pos:start="167:25" pos:end="167:37"><name pos:start="167:25" pos:end="167:25">h</name><operator pos:start="167:26" pos:end="167:27">-&gt;</operator><name pos:start="167:28" pos:end="167:30">pps</name><operator pos:start="167:31" pos:end="167:31">.</operator><name pos:start="167:32" pos:end="167:37">sps_id</name></name></expr>]</index></name><operator pos:start="167:39" pos:end="167:40">-&gt;</operator><name pos:start="167:41" pos:end="167:43">new</name> <operator pos:start="167:45" pos:end="167:45">=</operator> <literal type="number" pos:start="167:47" pos:end="167:47">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:49"><expr pos:start="171:9" pos:end="171:48"><name pos:start="171:9" pos:end="171:14"><name pos:start="171:9" pos:end="171:9">h</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:14">sps</name></name> <operator pos:start="171:16" pos:end="171:16">=</operator> <operator pos:start="171:18" pos:end="171:18">*</operator><name pos:start="171:19" pos:end="171:48"><name pos:start="171:19" pos:end="171:20">h0</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:33">sps_buffers</name><index pos:start="171:34" pos:end="171:48">[<expr pos:start="171:35" pos:end="171:47"><name pos:start="171:35" pos:end="171:47"><name pos:start="171:35" pos:end="171:35">h</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:40">pps</name><operator pos:start="171:41" pos:end="171:41">.</operator><name pos:start="171:42" pos:end="171:47">sps_id</name></name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="175:9" pos:end="185:9"><if pos:start="175:9" pos:end="185:9">if <condition pos:start="175:12" pos:end="177:61">(<expr pos:start="175:13" pos:end="177:60"><name pos:start="175:13" pos:end="175:29"><name pos:start="175:13" pos:end="175:13">h</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:29">bit_depth_luma</name></name>    <operator pos:start="175:34" pos:end="175:35">!=</operator> <name pos:start="175:37" pos:end="175:57"><name pos:start="175:37" pos:end="175:37">h</name><operator pos:start="175:38" pos:end="175:39">-&gt;</operator><name pos:start="175:40" pos:end="175:42">sps</name><operator pos:start="175:43" pos:end="175:43">.</operator><name pos:start="175:44" pos:end="175:57">bit_depth_luma</name></name> <operator pos:start="175:59" pos:end="175:60">||</operator>

            <name pos:start="177:13" pos:end="177:32"><name pos:start="177:13" pos:end="177:13">h</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:32">chroma_format_idc</name></name> <operator pos:start="177:34" pos:end="177:35">!=</operator> <name pos:start="177:37" pos:end="177:60"><name pos:start="177:37" pos:end="177:37">h</name><operator pos:start="177:38" pos:end="177:39">-&gt;</operator><name pos:start="177:40" pos:end="177:42">sps</name><operator pos:start="177:43" pos:end="177:43">.</operator><name pos:start="177:44" pos:end="177:60">chroma_format_idc</name></name></expr>)</condition> <block pos:start="177:63" pos:end="185:9">{<block_content pos:start="179:13" pos:end="183:37">

            <expr_stmt pos:start="179:13" pos:end="179:57"><expr pos:start="179:13" pos:end="179:56"><name pos:start="179:13" pos:end="179:29"><name pos:start="179:13" pos:end="179:13">h</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:29">bit_depth_luma</name></name>    <operator pos:start="179:34" pos:end="179:34">=</operator> <name pos:start="179:36" pos:end="179:56"><name pos:start="179:36" pos:end="179:36">h</name><operator pos:start="179:37" pos:end="179:38">-&gt;</operator><name pos:start="179:39" pos:end="179:41">sps</name><operator pos:start="179:42" pos:end="179:42">.</operator><name pos:start="179:43" pos:end="179:56">bit_depth_luma</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:60"><expr pos:start="181:13" pos:end="181:59"><name pos:start="181:13" pos:end="181:32"><name pos:start="181:13" pos:end="181:13">h</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:32">chroma_format_idc</name></name> <operator pos:start="181:34" pos:end="181:34">=</operator> <name pos:start="181:36" pos:end="181:59"><name pos:start="181:36" pos:end="181:36">h</name><operator pos:start="181:37" pos:end="181:38">-&gt;</operator><name pos:start="181:39" pos:end="181:41">sps</name><operator pos:start="181:42" pos:end="181:42">.</operator><name pos:start="181:43" pos:end="181:59">chroma_format_idc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:37"><expr pos:start="183:13" pos:end="183:36"><name pos:start="183:13" pos:end="183:24">needs_reinit</name>         <operator pos:start="183:34" pos:end="183:34">=</operator> <literal type="number" pos:start="183:36" pos:end="183:36">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="187:9" pos:end="189:23"><if pos:start="187:9" pos:end="189:23">if <condition pos:start="187:12" pos:end="187:58">(<expr pos:start="187:13" pos:end="187:57"><operator pos:start="187:13" pos:end="187:13">(</operator><name pos:start="187:14" pos:end="187:16">ret</name> <operator pos:start="187:18" pos:end="187:18">=</operator> <call pos:start="187:20" pos:end="187:52"><name pos:start="187:20" pos:end="187:49">ff_h264_set_parameter_from_sps</name><argument_list pos:start="187:50" pos:end="187:52">(<argument pos:start="187:51" pos:end="187:51"><expr pos:start="187:51" pos:end="187:51"><name pos:start="187:51" pos:end="187:51">h</name></expr></argument>)</argument_list></call><operator pos:start="187:53" pos:end="187:53">)</operator> <operator pos:start="187:55" pos:end="187:55">&lt;</operator> <literal type="number" pos:start="187:57" pos:end="187:57">0</literal></expr>)</condition><block type="pseudo" pos:start="189:13" pos:end="189:23"><block_content pos:start="189:13" pos:end="189:23">

            <return pos:start="189:13" pos:end="189:23">return <expr pos:start="189:20" pos:end="189:22"><name pos:start="189:20" pos:end="189:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:53"><expr pos:start="195:5" pos:end="195:52"><name pos:start="195:5" pos:end="195:21"><name pos:start="195:5" pos:end="195:5">h</name><operator pos:start="195:6" pos:end="195:7">-&gt;</operator><name pos:start="195:8" pos:end="195:12">avctx</name><operator pos:start="195:13" pos:end="195:14">-&gt;</operator><name pos:start="195:15" pos:end="195:21">profile</name></name> <operator pos:start="195:23" pos:end="195:23">=</operator> <call pos:start="195:25" pos:end="195:52"><name pos:start="195:25" pos:end="195:43">ff_h264_get_profile</name><argument_list pos:start="195:44" pos:end="195:52">(<argument pos:start="195:45" pos:end="195:51"><expr pos:start="195:45" pos:end="195:51"><operator pos:start="195:45" pos:end="195:45">&amp;</operator><name pos:start="195:46" pos:end="195:51"><name pos:start="195:46" pos:end="195:46">h</name><operator pos:start="195:47" pos:end="195:48">-&gt;</operator><name pos:start="195:49" pos:end="195:51">sps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:41"><expr pos:start="197:5" pos:end="197:40"><name pos:start="197:5" pos:end="197:19"><name pos:start="197:5" pos:end="197:5">h</name><operator pos:start="197:6" pos:end="197:7">-&gt;</operator><name pos:start="197:8" pos:end="197:12">avctx</name><operator pos:start="197:13" pos:end="197:14">-&gt;</operator><name pos:start="197:15" pos:end="197:19">level</name></name>   <operator pos:start="197:23" pos:end="197:23">=</operator> <name pos:start="197:25" pos:end="197:40"><name pos:start="197:25" pos:end="197:25">h</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:30">sps</name><operator pos:start="197:31" pos:end="197:31">.</operator><name pos:start="197:32" pos:end="197:40">level_idc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:47"><expr pos:start="199:5" pos:end="199:46"><name pos:start="199:5" pos:end="199:18"><name pos:start="199:5" pos:end="199:5">h</name><operator pos:start="199:6" pos:end="199:7">-&gt;</operator><name pos:start="199:8" pos:end="199:12">avctx</name><operator pos:start="199:13" pos:end="199:14">-&gt;</operator><name pos:start="199:15" pos:end="199:18">refs</name></name>    <operator pos:start="199:23" pos:end="199:23">=</operator> <name pos:start="199:25" pos:end="199:46"><name pos:start="199:25" pos:end="199:25">h</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:30">sps</name><operator pos:start="199:31" pos:end="199:31">.</operator><name pos:start="199:32" pos:end="199:46">ref_frame_count</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="203:5" pos:end="207:25"><if pos:start="203:5" pos:end="207:25">if <condition pos:start="203:8" pos:end="205:76">(<expr pos:start="203:9" pos:end="205:75"><name pos:start="203:9" pos:end="203:19"><name pos:start="203:9" pos:end="203:9">h</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:19">mb_width</name></name>  <operator pos:start="203:22" pos:end="203:23">!=</operator> <name pos:start="203:25" pos:end="203:39"><name pos:start="203:25" pos:end="203:25">h</name><operator pos:start="203:26" pos:end="203:27">-&gt;</operator><name pos:start="203:28" pos:end="203:30">sps</name><operator pos:start="203:31" pos:end="203:31">.</operator><name pos:start="203:32" pos:end="203:39">mb_width</name></name> <operator pos:start="203:41" pos:end="203:42">||</operator>

        <name pos:start="205:9" pos:end="205:20"><name pos:start="205:9" pos:end="205:9">h</name><operator pos:start="205:10" pos:end="205:11">-&gt;</operator><name pos:start="205:12" pos:end="205:20">mb_height</name></name> <operator pos:start="205:22" pos:end="205:23">!=</operator> <name pos:start="205:25" pos:end="205:40"><name pos:start="205:25" pos:end="205:25">h</name><operator pos:start="205:26" pos:end="205:27">-&gt;</operator><name pos:start="205:28" pos:end="205:30">sps</name><operator pos:start="205:31" pos:end="205:31">.</operator><name pos:start="205:32" pos:end="205:40">mb_height</name></name> <operator pos:start="205:42" pos:end="205:42">*</operator> <operator pos:start="205:44" pos:end="205:44">(</operator><literal type="number" pos:start="205:45" pos:end="205:47">2</literal> <operator pos:start="205:47" pos:end="205:47">-</operator> <name pos:start="205:49" pos:end="205:74"><name pos:start="205:49" pos:end="205:49">h</name><operator pos:start="205:50" pos:end="205:51">-&gt;</operator><name pos:start="205:52" pos:end="205:54">sps</name><operator pos:start="205:55" pos:end="205:55">.</operator><name pos:start="205:56" pos:end="205:74">frame_mbs_only_flag</name></name><operator pos:start="205:75" pos:end="205:75">)</operator></expr>)</condition><block type="pseudo" pos:start="207:9" pos:end="207:25"><block_content pos:start="207:9" pos:end="207:25">

        <expr_stmt pos:start="207:9" pos:end="207:25"><expr pos:start="207:9" pos:end="207:24"><name pos:start="207:9" pos:end="207:20">needs_reinit</name> <operator pos:start="207:22" pos:end="207:22">=</operator> <literal type="number" pos:start="207:24" pos:end="207:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="211:5" pos:end="211:35"><expr pos:start="211:5" pos:end="211:34"><name pos:start="211:5" pos:end="211:15"><name pos:start="211:5" pos:end="211:5">h</name><operator pos:start="211:6" pos:end="211:7">-&gt;</operator><name pos:start="211:8" pos:end="211:15">mb_width</name></name>  <operator pos:start="211:18" pos:end="211:18">=</operator> <name pos:start="211:20" pos:end="211:34"><name pos:start="211:20" pos:end="211:20">h</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:25">sps</name><operator pos:start="211:26" pos:end="211:26">.</operator><name pos:start="211:27" pos:end="211:34">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:71"><expr pos:start="213:5" pos:end="213:70"><name pos:start="213:5" pos:end="213:16"><name pos:start="213:5" pos:end="213:5">h</name><operator pos:start="213:6" pos:end="213:7">-&gt;</operator><name pos:start="213:8" pos:end="213:16">mb_height</name></name> <operator pos:start="213:18" pos:end="213:18">=</operator> <name pos:start="213:20" pos:end="213:35"><name pos:start="213:20" pos:end="213:20">h</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:25">sps</name><operator pos:start="213:26" pos:end="213:26">.</operator><name pos:start="213:27" pos:end="213:35">mb_height</name></name> <operator pos:start="213:37" pos:end="213:37">*</operator> <operator pos:start="213:39" pos:end="213:39">(</operator><literal type="number" pos:start="213:40" pos:end="213:42">2</literal> <operator pos:start="213:42" pos:end="213:42">-</operator> <name pos:start="213:44" pos:end="213:69"><name pos:start="213:44" pos:end="213:44">h</name><operator pos:start="213:45" pos:end="213:46">-&gt;</operator><name pos:start="213:47" pos:end="213:49">sps</name><operator pos:start="213:50" pos:end="213:50">.</operator><name pos:start="213:51" pos:end="213:69">frame_mbs_only_flag</name></name><operator pos:start="213:70" pos:end="213:70">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:46"><expr pos:start="215:5" pos:end="215:45"><name pos:start="215:5" pos:end="215:13"><name pos:start="215:5" pos:end="215:5">h</name><operator pos:start="215:6" pos:end="215:7">-&gt;</operator><name pos:start="215:8" pos:end="215:13">mb_num</name></name>    <operator pos:start="215:18" pos:end="215:18">=</operator> <name pos:start="215:20" pos:end="215:30"><name pos:start="215:20" pos:end="215:20">h</name><operator pos:start="215:21" pos:end="215:22">-&gt;</operator><name pos:start="215:23" pos:end="215:30">mb_width</name></name> <operator pos:start="215:32" pos:end="215:32">*</operator> <name pos:start="215:34" pos:end="215:45"><name pos:start="215:34" pos:end="215:34">h</name><operator pos:start="215:35" pos:end="215:36">-&gt;</operator><name pos:start="215:37" pos:end="215:45">mb_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:35"><expr pos:start="217:5" pos:end="217:34"><name pos:start="217:5" pos:end="217:16"><name pos:start="217:5" pos:end="217:5">h</name><operator pos:start="217:6" pos:end="217:7">-&gt;</operator><name pos:start="217:8" pos:end="217:16">mb_stride</name></name> <operator pos:start="217:18" pos:end="217:18">=</operator> <name pos:start="217:20" pos:end="217:30"><name pos:start="217:20" pos:end="217:20">h</name><operator pos:start="217:21" pos:end="217:22">-&gt;</operator><name pos:start="217:23" pos:end="217:30">mb_width</name></name> <operator pos:start="217:32" pos:end="217:32">+</operator> <literal type="number" pos:start="217:34" pos:end="217:34">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="221:5" pos:end="221:34"><expr pos:start="221:5" pos:end="221:33"><name pos:start="221:5" pos:end="221:15"><name pos:start="221:5" pos:end="221:5">h</name><operator pos:start="221:6" pos:end="221:7">-&gt;</operator><name pos:start="221:8" pos:end="221:15">b_stride</name></name> <operator pos:start="221:17" pos:end="221:17">=</operator> <name pos:start="221:19" pos:end="221:29"><name pos:start="221:19" pos:end="221:19">h</name><operator pos:start="221:20" pos:end="221:21">-&gt;</operator><name pos:start="221:22" pos:end="221:29">mb_width</name></name> <operator pos:start="221:31" pos:end="221:31">*</operator> <literal type="number" pos:start="221:33" pos:end="221:33">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:54"><expr pos:start="225:5" pos:end="225:53"><name pos:start="225:5" pos:end="225:21"><name pos:start="225:5" pos:end="225:5">h</name><operator pos:start="225:6" pos:end="225:7">-&gt;</operator><name pos:start="225:8" pos:end="225:21">chroma_y_shift</name></name> <operator pos:start="225:23" pos:end="225:23">=</operator> <name pos:start="225:25" pos:end="225:48"><name pos:start="225:25" pos:end="225:25">h</name><operator pos:start="225:26" pos:end="225:27">-&gt;</operator><name pos:start="225:28" pos:end="225:30">sps</name><operator pos:start="225:31" pos:end="225:31">.</operator><name pos:start="225:32" pos:end="225:48">chroma_format_idc</name></name> <operator pos:start="225:50" pos:end="225:51">&lt;=</operator> <literal type="number" pos:start="225:53" pos:end="225:53">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="225:56" pos:end="225:74">// 400 uses yuv420p</comment>



    <expr_stmt pos:start="229:5" pos:end="229:33"><expr pos:start="229:5" pos:end="229:32"><name pos:start="229:5" pos:end="229:12"><name pos:start="229:5" pos:end="229:5">h</name><operator pos:start="229:6" pos:end="229:7">-&gt;</operator><name pos:start="229:8" pos:end="229:12">width</name></name>  <operator pos:start="229:15" pos:end="229:15">=</operator> <literal type="number" pos:start="229:17" pos:end="229:18">16</literal> <operator pos:start="229:20" pos:end="229:20">*</operator> <name pos:start="229:22" pos:end="229:32"><name pos:start="229:22" pos:end="229:22">h</name><operator pos:start="229:23" pos:end="229:24">-&gt;</operator><name pos:start="229:25" pos:end="229:32">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:34"><expr pos:start="231:5" pos:end="231:33"><name pos:start="231:5" pos:end="231:13"><name pos:start="231:5" pos:end="231:5">h</name><operator pos:start="231:6" pos:end="231:7">-&gt;</operator><name pos:start="231:8" pos:end="231:13">height</name></name> <operator pos:start="231:15" pos:end="231:15">=</operator> <literal type="number" pos:start="231:17" pos:end="231:18">16</literal> <operator pos:start="231:20" pos:end="231:20">*</operator> <name pos:start="231:22" pos:end="231:33"><name pos:start="231:22" pos:end="231:22">h</name><operator pos:start="231:23" pos:end="231:24">-&gt;</operator><name pos:start="231:25" pos:end="231:33">mb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="235:5" pos:end="235:29"><expr pos:start="235:5" pos:end="235:28"><name pos:start="235:5" pos:end="235:7">ret</name> <operator pos:start="235:9" pos:end="235:9">=</operator> <call pos:start="235:11" pos:end="235:28"><name pos:start="235:11" pos:end="235:25">init_dimensions</name><argument_list pos:start="235:26" pos:end="235:28">(<argument pos:start="235:27" pos:end="235:27"><expr pos:start="235:27" pos:end="235:27"><name pos:start="235:27" pos:end="235:27">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="237:5" pos:end="239:19"><if pos:start="237:5" pos:end="239:19">if <condition pos:start="237:8" pos:end="237:16">(<expr pos:start="237:9" pos:end="237:15"><name pos:start="237:9" pos:end="237:11">ret</name> <operator pos:start="237:13" pos:end="237:13">&lt;</operator> <literal type="number" pos:start="237:15" pos:end="237:15">0</literal></expr>)</condition><block type="pseudo" pos:start="239:9" pos:end="239:19"><block_content pos:start="239:9" pos:end="239:19">

        <return pos:start="239:9" pos:end="239:19">return <expr pos:start="239:16" pos:end="239:18"><name pos:start="239:16" pos:end="239:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="243:5" pos:end="263:5"><if pos:start="243:5" pos:end="263:5">if <condition pos:start="243:8" pos:end="243:46">(<expr pos:start="243:9" pos:end="243:45"><name pos:start="243:9" pos:end="243:45"><name pos:start="243:9" pos:end="243:9">h</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:14">sps</name><operator pos:start="243:15" pos:end="243:15">.</operator><name pos:start="243:16" pos:end="243:45">video_signal_type_present_flag</name></name></expr>)</condition> <block pos:start="243:48" pos:end="263:5">{<block_content pos:start="245:9" pos:end="261:9">

        <expr_stmt pos:start="245:9" pos:end="247:69"><expr pos:start="245:9" pos:end="247:68"><name pos:start="245:9" pos:end="245:29"><name pos:start="245:9" pos:end="245:9">h</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:16">avctx</name><operator pos:start="245:17" pos:end="245:18">-&gt;</operator><name pos:start="245:19" pos:end="245:29">color_range</name></name> <operator pos:start="245:31" pos:end="245:31">=</operator> <ternary pos:start="245:33" pos:end="247:68"><condition pos:start="245:33" pos:end="245:51"><expr pos:start="245:33" pos:end="245:49"><name pos:start="245:33" pos:end="245:49"><name pos:start="245:33" pos:end="245:33">h</name><operator pos:start="245:34" pos:end="245:35">-&gt;</operator><name pos:start="245:36" pos:end="245:38">sps</name><operator pos:start="245:39" pos:end="245:39">.</operator><name pos:start="245:40" pos:end="245:49">full_range</name></name></expr> ?</condition><then pos:start="245:53" pos:end="245:68"> <expr pos:start="245:53" pos:end="245:68"><name pos:start="245:53" pos:end="245:68">AVCOL_RANGE_JPEG</name></expr>

                                                  </then><else pos:start="247:51" pos:end="247:68">: <expr pos:start="247:53" pos:end="247:68"><name pos:start="247:53" pos:end="247:68">AVCOL_RANGE_MPEG</name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="249:9" pos:end="261:9"><if pos:start="249:9" pos:end="261:9">if <condition pos:start="249:12" pos:end="249:51">(<expr pos:start="249:13" pos:end="249:50"><name pos:start="249:13" pos:end="249:50"><name pos:start="249:13" pos:end="249:13">h</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:18">sps</name><operator pos:start="249:19" pos:end="249:19">.</operator><name pos:start="249:20" pos:end="249:50">colour_description_present_flag</name></name></expr>)</condition> <block pos:start="249:53" pos:end="261:9">{<block_content pos:start="251:13" pos:end="259:58">

            <if_stmt pos:start="251:13" pos:end="253:33"><if pos:start="251:13" pos:end="253:33">if <condition pos:start="251:16" pos:end="251:58">(<expr pos:start="251:17" pos:end="251:57"><name pos:start="251:17" pos:end="251:36"><name pos:start="251:17" pos:end="251:17">h</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:24">avctx</name><operator pos:start="251:25" pos:end="251:26">-&gt;</operator><name pos:start="251:27" pos:end="251:36">colorspace</name></name> <operator pos:start="251:38" pos:end="251:39">!=</operator> <name pos:start="251:41" pos:end="251:57"><name pos:start="251:41" pos:end="251:41">h</name><operator pos:start="251:42" pos:end="251:43">-&gt;</operator><name pos:start="251:44" pos:end="251:46">sps</name><operator pos:start="251:47" pos:end="251:47">.</operator><name pos:start="251:48" pos:end="251:57">colorspace</name></name></expr>)</condition><block type="pseudo" pos:start="253:17" pos:end="253:33"><block_content pos:start="253:17" pos:end="253:33">

                <expr_stmt pos:start="253:17" pos:end="253:33"><expr pos:start="253:17" pos:end="253:32"><name pos:start="253:17" pos:end="253:28">needs_reinit</name> <operator pos:start="253:30" pos:end="253:30">=</operator> <literal type="number" pos:start="253:32" pos:end="253:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:63"><expr pos:start="255:13" pos:end="255:62"><name pos:start="255:13" pos:end="255:37"><name pos:start="255:13" pos:end="255:13">h</name><operator pos:start="255:14" pos:end="255:15">-&gt;</operator><name pos:start="255:16" pos:end="255:20">avctx</name><operator pos:start="255:21" pos:end="255:22">-&gt;</operator><name pos:start="255:23" pos:end="255:37">color_primaries</name></name> <operator pos:start="255:39" pos:end="255:39">=</operator> <name pos:start="255:41" pos:end="255:62"><name pos:start="255:41" pos:end="255:41">h</name><operator pos:start="255:42" pos:end="255:43">-&gt;</operator><name pos:start="255:44" pos:end="255:46">sps</name><operator pos:start="255:47" pos:end="255:47">.</operator><name pos:start="255:48" pos:end="255:62">color_primaries</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:57"><expr pos:start="257:13" pos:end="257:56"><name pos:start="257:13" pos:end="257:31"><name pos:start="257:13" pos:end="257:13">h</name><operator pos:start="257:14" pos:end="257:15">-&gt;</operator><name pos:start="257:16" pos:end="257:20">avctx</name><operator pos:start="257:21" pos:end="257:22">-&gt;</operator><name pos:start="257:23" pos:end="257:31">color_trc</name></name>       <operator pos:start="257:39" pos:end="257:39">=</operator> <name pos:start="257:41" pos:end="257:56"><name pos:start="257:41" pos:end="257:41">h</name><operator pos:start="257:42" pos:end="257:43">-&gt;</operator><name pos:start="257:44" pos:end="257:46">sps</name><operator pos:start="257:47" pos:end="257:47">.</operator><name pos:start="257:48" pos:end="257:56">color_trc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:58"><expr pos:start="259:13" pos:end="259:57"><name pos:start="259:13" pos:end="259:32"><name pos:start="259:13" pos:end="259:13">h</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:20">avctx</name><operator pos:start="259:21" pos:end="259:22">-&gt;</operator><name pos:start="259:23" pos:end="259:32">colorspace</name></name>      <operator pos:start="259:39" pos:end="259:39">=</operator> <name pos:start="259:41" pos:end="259:57"><name pos:start="259:41" pos:end="259:41">h</name><operator pos:start="259:42" pos:end="259:43">-&gt;</operator><name pos:start="259:44" pos:end="259:46">sps</name><operator pos:start="259:47" pos:end="259:47">.</operator><name pos:start="259:48" pos:end="259:57">colorspace</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="267:5" pos:end="317:5"><if pos:start="267:5" pos:end="317:5">if <condition pos:start="267:8" pos:end="267:47">(<expr pos:start="267:9" pos:end="267:46"><name pos:start="267:9" pos:end="267:30"><name pos:start="267:9" pos:end="267:9">h</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:30">context_initialized</name></name> <operator pos:start="267:32" pos:end="267:33">&amp;&amp;</operator> <name pos:start="267:35" pos:end="267:46">needs_reinit</name></expr>)</condition> <block pos:start="267:49" pos:end="317:5">{<block_content pos:start="269:9" pos:end="315:9">

        <if_stmt pos:start="269:9" pos:end="285:9"><if pos:start="269:9" pos:end="285:9">if <condition pos:start="269:12" pos:end="269:20">(<expr pos:start="269:13" pos:end="269:19"><name pos:start="269:13" pos:end="269:13">h</name> <operator pos:start="269:15" pos:end="269:16">!=</operator> <name pos:start="269:18" pos:end="269:19">h0</name></expr>)</condition> <block pos:start="269:22" pos:end="285:9">{<block_content pos:start="271:13" pos:end="283:39">

            <expr_stmt pos:start="271:13" pos:end="281:42"><expr pos:start="271:13" pos:end="281:41"><call pos:start="271:13" pos:end="281:41"><name pos:start="271:13" pos:end="271:18">av_log</name><argument_list pos:start="271:19" pos:end="281:41">(<argument pos:start="271:20" pos:end="271:27"><expr pos:start="271:20" pos:end="271:27"><name pos:start="271:20" pos:end="271:27"><name pos:start="271:20" pos:end="271:20">h</name><operator pos:start="271:21" pos:end="271:22">-&gt;</operator><name pos:start="271:23" pos:end="271:27">avctx</name></name></expr></argument>, <argument pos:start="271:30" pos:end="271:41"><expr pos:start="271:30" pos:end="271:41"><name pos:start="271:30" pos:end="271:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="273:20" pos:end="275:31"><expr pos:start="273:20" pos:end="275:31"><literal type="string" pos:start="273:20" pos:end="273:66">"changing width %d -&gt; %d / height %d -&gt; %d on "</literal>

                   <literal type="string" pos:start="275:20" pos:end="275:31">"slice %d\n"</literal></expr></argument>,

                   <argument pos:start="277:20" pos:end="277:27"><expr pos:start="277:20" pos:end="277:27"><name pos:start="277:20" pos:end="277:27"><name pos:start="277:20" pos:end="277:20">h</name><operator pos:start="277:21" pos:end="277:22">-&gt;</operator><name pos:start="277:23" pos:end="277:27">width</name></name></expr></argument>, <argument pos:start="277:30" pos:end="277:50"><expr pos:start="277:30" pos:end="277:50"><name pos:start="277:30" pos:end="277:50"><name pos:start="277:30" pos:end="277:30">h</name><operator pos:start="277:31" pos:end="277:32">-&gt;</operator><name pos:start="277:33" pos:end="277:37">avctx</name><operator pos:start="277:38" pos:end="277:39">-&gt;</operator><name pos:start="277:40" pos:end="277:50">coded_width</name></name></expr></argument>,

                   <argument pos:start="279:20" pos:end="279:28"><expr pos:start="279:20" pos:end="279:28"><name pos:start="279:20" pos:end="279:28"><name pos:start="279:20" pos:end="279:20">h</name><operator pos:start="279:21" pos:end="279:22">-&gt;</operator><name pos:start="279:23" pos:end="279:28">height</name></name></expr></argument>, <argument pos:start="279:31" pos:end="279:52"><expr pos:start="279:31" pos:end="279:52"><name pos:start="279:31" pos:end="279:52"><name pos:start="279:31" pos:end="279:31">h</name><operator pos:start="279:32" pos:end="279:33">-&gt;</operator><name pos:start="279:34" pos:end="279:38">avctx</name><operator pos:start="279:39" pos:end="279:40">-&gt;</operator><name pos:start="279:41" pos:end="279:52">coded_height</name></name></expr></argument>,

                   <argument pos:start="281:20" pos:end="281:40"><expr pos:start="281:20" pos:end="281:40"><name pos:start="281:20" pos:end="281:36"><name pos:start="281:20" pos:end="281:21">h0</name><operator pos:start="281:22" pos:end="281:23">-&gt;</operator><name pos:start="281:24" pos:end="281:36">current_slice</name></name> <operator pos:start="281:38" pos:end="281:38">+</operator> <literal type="number" pos:start="281:40" pos:end="281:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="283:13" pos:end="283:39">return <expr pos:start="283:20" pos:end="283:38"><name pos:start="283:20" pos:end="283:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="289:9" pos:end="289:32"><expr pos:start="289:9" pos:end="289:31"><call pos:start="289:9" pos:end="289:31"><name pos:start="289:9" pos:end="289:28">ff_h264_flush_change</name><argument_list pos:start="289:29" pos:end="289:31">(<argument pos:start="289:30" pos:end="289:30"><expr pos:start="289:30" pos:end="289:30"><name pos:start="289:30" pos:end="289:30">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="293:9" pos:end="295:23"><if pos:start="293:9" pos:end="295:23">if <condition pos:start="293:12" pos:end="293:44">(<expr pos:start="293:13" pos:end="293:43"><operator pos:start="293:13" pos:end="293:13">(</operator><name pos:start="293:14" pos:end="293:16">ret</name> <operator pos:start="293:18" pos:end="293:18">=</operator> <call pos:start="293:20" pos:end="293:38"><name pos:start="293:20" pos:end="293:35">get_pixel_format</name><argument_list pos:start="293:36" pos:end="293:38">(<argument pos:start="293:37" pos:end="293:37"><expr pos:start="293:37" pos:end="293:37"><name pos:start="293:37" pos:end="293:37">h</name></expr></argument>)</argument_list></call><operator pos:start="293:39" pos:end="293:39">)</operator> <operator pos:start="293:41" pos:end="293:41">&lt;</operator> <literal type="number" pos:start="293:43" pos:end="293:43">0</literal></expr>)</condition><block type="pseudo" pos:start="295:13" pos:end="295:23"><block_content pos:start="295:13" pos:end="295:23">

            <return pos:start="295:13" pos:end="295:23">return <expr pos:start="295:20" pos:end="295:22"><name pos:start="295:20" pos:end="295:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:32"><expr pos:start="297:9" pos:end="297:31"><name pos:start="297:9" pos:end="297:25"><name pos:start="297:9" pos:end="297:9">h</name><operator pos:start="297:10" pos:end="297:11">-&gt;</operator><name pos:start="297:12" pos:end="297:16">avctx</name><operator pos:start="297:17" pos:end="297:18">-&gt;</operator><name pos:start="297:19" pos:end="297:25">pix_fmt</name></name> <operator pos:start="297:27" pos:end="297:27">=</operator> <name pos:start="297:29" pos:end="297:31">ret</name></expr>;</expr_stmt>



        <expr_stmt pos:start="301:9" pos:end="303:72"><expr pos:start="301:9" pos:end="303:71"><call pos:start="301:9" pos:end="303:71"><name pos:start="301:9" pos:end="301:14">av_log</name><argument_list pos:start="301:15" pos:end="303:71">(<argument pos:start="301:16" pos:end="301:23"><expr pos:start="301:16" pos:end="301:23"><name pos:start="301:16" pos:end="301:23"><name pos:start="301:16" pos:end="301:16">h</name><operator pos:start="301:17" pos:end="301:18">-&gt;</operator><name pos:start="301:19" pos:end="301:23">avctx</name></name></expr></argument>, <argument pos:start="301:26" pos:end="301:36"><expr pos:start="301:26" pos:end="301:36"><name pos:start="301:26" pos:end="301:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="301:39" pos:end="303:30"><expr pos:start="301:39" pos:end="303:30"><literal type="string" pos:start="301:39" pos:end="301:65">"Reinit context to %dx%d, "</literal>

               <literal type="string" pos:start="303:16" pos:end="303:30">"pix_fmt: %d\n"</literal></expr></argument>, <argument pos:start="303:33" pos:end="303:40"><expr pos:start="303:33" pos:end="303:40"><name pos:start="303:33" pos:end="303:40"><name pos:start="303:33" pos:end="303:33">h</name><operator pos:start="303:34" pos:end="303:35">-&gt;</operator><name pos:start="303:36" pos:end="303:40">width</name></name></expr></argument>, <argument pos:start="303:43" pos:end="303:51"><expr pos:start="303:43" pos:end="303:51"><name pos:start="303:43" pos:end="303:51"><name pos:start="303:43" pos:end="303:43">h</name><operator pos:start="303:44" pos:end="303:45">-&gt;</operator><name pos:start="303:46" pos:end="303:51">height</name></name></expr></argument>, <argument pos:start="303:54" pos:end="303:70"><expr pos:start="303:54" pos:end="303:70"><name pos:start="303:54" pos:end="303:70"><name pos:start="303:54" pos:end="303:54">h</name><operator pos:start="303:55" pos:end="303:56">-&gt;</operator><name pos:start="303:57" pos:end="303:61">avctx</name><operator pos:start="303:62" pos:end="303:63">-&gt;</operator><name pos:start="303:64" pos:end="303:70">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="307:9" pos:end="315:9"><if pos:start="307:9" pos:end="315:9">if <condition pos:start="307:12" pos:end="307:53">(<expr pos:start="307:13" pos:end="307:52"><operator pos:start="307:13" pos:end="307:13">(</operator><name pos:start="307:14" pos:end="307:16">ret</name> <operator pos:start="307:18" pos:end="307:18">=</operator> <call pos:start="307:20" pos:end="307:47"><name pos:start="307:20" pos:end="307:41">h264_slice_header_init</name><argument_list pos:start="307:42" pos:end="307:47">(<argument pos:start="307:43" pos:end="307:43"><expr pos:start="307:43" pos:end="307:43"><name pos:start="307:43" pos:end="307:43">h</name></expr></argument>, <argument pos:start="307:46" pos:end="307:46"><expr pos:start="307:46" pos:end="307:46"><literal type="number" pos:start="307:46" pos:end="307:46">1</literal></expr></argument>)</argument_list></call><operator pos:start="307:48" pos:end="307:48">)</operator> <operator pos:start="307:50" pos:end="307:50">&lt;</operator> <literal type="number" pos:start="307:52" pos:end="307:52">0</literal></expr>)</condition> <block pos:start="307:55" pos:end="315:9">{<block_content pos:start="309:13" pos:end="313:23">

            <expr_stmt pos:start="309:13" pos:end="311:56"><expr pos:start="309:13" pos:end="311:55"><call pos:start="309:13" pos:end="311:55"><name pos:start="309:13" pos:end="309:18">av_log</name><argument_list pos:start="309:19" pos:end="311:55">(<argument pos:start="309:20" pos:end="309:27"><expr pos:start="309:20" pos:end="309:27"><name pos:start="309:20" pos:end="309:27"><name pos:start="309:20" pos:end="309:20">h</name><operator pos:start="309:21" pos:end="309:22">-&gt;</operator><name pos:start="309:23" pos:end="309:27">avctx</name></name></expr></argument>, <argument pos:start="309:30" pos:end="309:41"><expr pos:start="309:30" pos:end="309:41"><name pos:start="309:30" pos:end="309:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="311:20" pos:end="311:54"><expr pos:start="311:20" pos:end="311:54"><literal type="string" pos:start="311:20" pos:end="311:54">"h264_slice_header_init() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="313:13" pos:end="313:23">return <expr pos:start="313:20" pos:end="313:22"><name pos:start="313:20" pos:end="313:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="319:5" pos:end="351:5"><if pos:start="319:5" pos:end="351:5">if <condition pos:start="319:8" pos:end="319:32">(<expr pos:start="319:9" pos:end="319:31"><operator pos:start="319:9" pos:end="319:9">!</operator><name pos:start="319:10" pos:end="319:31"><name pos:start="319:10" pos:end="319:10">h</name><operator pos:start="319:11" pos:end="319:12">-&gt;</operator><name pos:start="319:13" pos:end="319:31">context_initialized</name></name></expr>)</condition> <block pos:start="319:34" pos:end="351:5">{<block_content pos:start="321:9" pos:end="349:9">

        <if_stmt pos:start="321:9" pos:end="329:9"><if pos:start="321:9" pos:end="329:9">if <condition pos:start="321:12" pos:end="321:20">(<expr pos:start="321:13" pos:end="321:19"><name pos:start="321:13" pos:end="321:13">h</name> <operator pos:start="321:15" pos:end="321:16">!=</operator> <name pos:start="321:18" pos:end="321:19">h0</name></expr>)</condition> <block pos:start="321:22" pos:end="329:9">{<block_content pos:start="323:13" pos:end="327:40">

            <expr_stmt pos:start="323:13" pos:end="325:81"><expr pos:start="323:13" pos:end="325:80"><call pos:start="323:13" pos:end="325:80"><name pos:start="323:13" pos:end="323:18">av_log</name><argument_list pos:start="323:19" pos:end="325:80">(<argument pos:start="323:20" pos:end="323:27"><expr pos:start="323:20" pos:end="323:27"><name pos:start="323:20" pos:end="323:27"><name pos:start="323:20" pos:end="323:20">h</name><operator pos:start="323:21" pos:end="323:22">-&gt;</operator><name pos:start="323:23" pos:end="323:27">avctx</name></name></expr></argument>, <argument pos:start="323:30" pos:end="323:41"><expr pos:start="323:30" pos:end="323:41"><name pos:start="323:30" pos:end="323:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="325:20" pos:end="325:79"><expr pos:start="325:20" pos:end="325:79"><literal type="string" pos:start="325:20" pos:end="325:79">"Cannot (re-)initialize context during parallel decoding.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="327:13" pos:end="327:40">return <expr pos:start="327:20" pos:end="327:39"><name pos:start="327:20" pos:end="327:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="333:9" pos:end="335:23"><if pos:start="333:9" pos:end="335:23">if <condition pos:start="333:12" pos:end="333:44">(<expr pos:start="333:13" pos:end="333:43"><operator pos:start="333:13" pos:end="333:13">(</operator><name pos:start="333:14" pos:end="333:16">ret</name> <operator pos:start="333:18" pos:end="333:18">=</operator> <call pos:start="333:20" pos:end="333:38"><name pos:start="333:20" pos:end="333:35">get_pixel_format</name><argument_list pos:start="333:36" pos:end="333:38">(<argument pos:start="333:37" pos:end="333:37"><expr pos:start="333:37" pos:end="333:37"><name pos:start="333:37" pos:end="333:37">h</name></expr></argument>)</argument_list></call><operator pos:start="333:39" pos:end="333:39">)</operator> <operator pos:start="333:41" pos:end="333:41">&lt;</operator> <literal type="number" pos:start="333:43" pos:end="333:43">0</literal></expr>)</condition><block type="pseudo" pos:start="335:13" pos:end="335:23"><block_content pos:start="335:13" pos:end="335:23">

            <return pos:start="335:13" pos:end="335:23">return <expr pos:start="335:20" pos:end="335:22"><name pos:start="335:20" pos:end="335:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:32"><expr pos:start="337:9" pos:end="337:31"><name pos:start="337:9" pos:end="337:25"><name pos:start="337:9" pos:end="337:9">h</name><operator pos:start="337:10" pos:end="337:11">-&gt;</operator><name pos:start="337:12" pos:end="337:16">avctx</name><operator pos:start="337:17" pos:end="337:18">-&gt;</operator><name pos:start="337:19" pos:end="337:25">pix_fmt</name></name> <operator pos:start="337:27" pos:end="337:27">=</operator> <name pos:start="337:29" pos:end="337:31">ret</name></expr>;</expr_stmt>



        <if_stmt pos:start="341:9" pos:end="349:9"><if pos:start="341:9" pos:end="349:9">if <condition pos:start="341:12" pos:end="341:53">(<expr pos:start="341:13" pos:end="341:52"><operator pos:start="341:13" pos:end="341:13">(</operator><name pos:start="341:14" pos:end="341:16">ret</name> <operator pos:start="341:18" pos:end="341:18">=</operator> <call pos:start="341:20" pos:end="341:47"><name pos:start="341:20" pos:end="341:41">h264_slice_header_init</name><argument_list pos:start="341:42" pos:end="341:47">(<argument pos:start="341:43" pos:end="341:43"><expr pos:start="341:43" pos:end="341:43"><name pos:start="341:43" pos:end="341:43">h</name></expr></argument>, <argument pos:start="341:46" pos:end="341:46"><expr pos:start="341:46" pos:end="341:46"><literal type="number" pos:start="341:46" pos:end="341:46">0</literal></expr></argument>)</argument_list></call><operator pos:start="341:48" pos:end="341:48">)</operator> <operator pos:start="341:50" pos:end="341:50">&lt;</operator> <literal type="number" pos:start="341:52" pos:end="341:52">0</literal></expr>)</condition> <block pos:start="341:55" pos:end="349:9">{<block_content pos:start="343:13" pos:end="347:23">

            <expr_stmt pos:start="343:13" pos:end="345:56"><expr pos:start="343:13" pos:end="345:55"><call pos:start="343:13" pos:end="345:55"><name pos:start="343:13" pos:end="343:18">av_log</name><argument_list pos:start="343:19" pos:end="345:55">(<argument pos:start="343:20" pos:end="343:27"><expr pos:start="343:20" pos:end="343:27"><name pos:start="343:20" pos:end="343:27"><name pos:start="343:20" pos:end="343:20">h</name><operator pos:start="343:21" pos:end="343:22">-&gt;</operator><name pos:start="343:23" pos:end="343:27">avctx</name></name></expr></argument>, <argument pos:start="343:30" pos:end="343:41"><expr pos:start="343:30" pos:end="343:41"><name pos:start="343:30" pos:end="343:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="345:20" pos:end="345:54"><expr pos:start="345:20" pos:end="345:54"><literal type="string" pos:start="345:20" pos:end="345:54">"h264_slice_header_init() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="347:13" pos:end="347:23">return <expr pos:start="347:20" pos:end="347:22"><name pos:start="347:20" pos:end="347:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="355:5" pos:end="361:5"><if pos:start="355:5" pos:end="361:5">if <condition pos:start="355:8" pos:end="355:50">(<expr pos:start="355:9" pos:end="355:49"><name pos:start="355:9" pos:end="355:9">h</name> <operator pos:start="355:11" pos:end="355:12">==</operator> <name pos:start="355:14" pos:end="355:15">h0</name> <operator pos:start="355:17" pos:end="355:18">&amp;&amp;</operator> <name pos:start="355:20" pos:end="355:39"><name pos:start="355:20" pos:end="355:20">h</name><operator pos:start="355:21" pos:end="355:22">-&gt;</operator><name pos:start="355:23" pos:end="355:39">dequant_coeff_pps</name></name> <operator pos:start="355:41" pos:end="355:42">!=</operator> <name pos:start="355:44" pos:end="355:49">pps_id</name></expr>)</condition> <block pos:start="355:52" pos:end="361:5">{<block_content pos:start="357:9" pos:end="359:36">

        <expr_stmt pos:start="357:9" pos:end="357:38"><expr pos:start="357:9" pos:end="357:37"><name pos:start="357:9" pos:end="357:28"><name pos:start="357:9" pos:end="357:9">h</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:28">dequant_coeff_pps</name></name> <operator pos:start="357:30" pos:end="357:30">=</operator> <name pos:start="357:32" pos:end="357:37">pps_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:36"><expr pos:start="359:9" pos:end="359:35"><call pos:start="359:9" pos:end="359:35"><name pos:start="359:9" pos:end="359:32">h264_init_dequant_tables</name><argument_list pos:start="359:33" pos:end="359:35">(<argument pos:start="359:34" pos:end="359:34"><expr pos:start="359:34" pos:end="359:34"><name pos:start="359:34" pos:end="359:34">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="365:5" pos:end="365:63"><expr pos:start="365:5" pos:end="365:62"><name pos:start="365:5" pos:end="365:16"><name pos:start="365:5" pos:end="365:5">h</name><operator pos:start="365:6" pos:end="365:7">-&gt;</operator><name pos:start="365:8" pos:end="365:16">frame_num</name></name> <operator pos:start="365:18" pos:end="365:18">=</operator> <call pos:start="365:20" pos:end="365:62"><name pos:start="365:20" pos:end="365:27">get_bits</name><argument_list pos:start="365:28" pos:end="365:62">(<argument pos:start="365:29" pos:end="365:34"><expr pos:start="365:29" pos:end="365:34"><operator pos:start="365:29" pos:end="365:29">&amp;</operator><name pos:start="365:30" pos:end="365:34"><name pos:start="365:30" pos:end="365:30">h</name><operator pos:start="365:31" pos:end="365:32">-&gt;</operator><name pos:start="365:33" pos:end="365:34">gb</name></name></expr></argument>, <argument pos:start="365:37" pos:end="365:61"><expr pos:start="365:37" pos:end="365:61"><name pos:start="365:37" pos:end="365:61"><name pos:start="365:37" pos:end="365:37">h</name><operator pos:start="365:38" pos:end="365:39">-&gt;</operator><name pos:start="365:40" pos:end="365:42">sps</name><operator pos:start="365:43" pos:end="365:43">.</operator><name pos:start="365:44" pos:end="365:61">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="369:5" pos:end="369:27"><expr pos:start="369:5" pos:end="369:26"><name pos:start="369:5" pos:end="369:15"><name pos:start="369:5" pos:end="369:5">h</name><operator pos:start="369:6" pos:end="369:7">-&gt;</operator><name pos:start="369:8" pos:end="369:15">mb_mbaff</name></name>        <operator pos:start="369:24" pos:end="369:24">=</operator> <literal type="number" pos:start="369:26" pos:end="369:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="371:5" pos:end="371:27"><expr pos:start="371:5" pos:end="371:26"><name pos:start="371:5" pos:end="371:19"><name pos:start="371:5" pos:end="371:5">h</name><operator pos:start="371:6" pos:end="371:7">-&gt;</operator><name pos:start="371:8" pos:end="371:19">mb_aff_frame</name></name>    <operator pos:start="371:24" pos:end="371:24">=</operator> <literal type="number" pos:start="371:26" pos:end="371:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="373:5" pos:end="373:47"><expr pos:start="373:5" pos:end="373:46"><name pos:start="373:5" pos:end="373:22">last_pic_structure</name> <operator pos:start="373:24" pos:end="373:24">=</operator> <name pos:start="373:26" pos:end="373:46"><name pos:start="373:26" pos:end="373:27">h0</name><operator pos:start="373:28" pos:end="373:29">-&gt;</operator><name pos:start="373:30" pos:end="373:46">picture_structure</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="375:5" pos:end="375:39"><expr pos:start="375:5" pos:end="375:38"><name pos:start="375:5" pos:end="375:22">last_pic_droppable</name> <operator pos:start="375:24" pos:end="375:24">=</operator> <name pos:start="375:26" pos:end="375:38"><name pos:start="375:26" pos:end="375:27">h0</name><operator pos:start="375:28" pos:end="375:29">-&gt;</operator><name pos:start="375:30" pos:end="375:38">droppable</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="377:5" pos:end="377:45"><expr pos:start="377:5" pos:end="377:44"><name pos:start="377:5" pos:end="377:16"><name pos:start="377:5" pos:end="377:5">h</name><operator pos:start="377:6" pos:end="377:7">-&gt;</operator><name pos:start="377:8" pos:end="377:16">droppable</name></name>       <operator pos:start="377:24" pos:end="377:24">=</operator> <name pos:start="377:26" pos:end="377:39"><name pos:start="377:26" pos:end="377:26">h</name><operator pos:start="377:27" pos:end="377:28">-&gt;</operator><name pos:start="377:29" pos:end="377:39">nal_ref_idc</name></name> <operator pos:start="377:41" pos:end="377:42">==</operator> <literal type="number" pos:start="377:44" pos:end="377:44">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="379:5" pos:end="401:5"><if pos:start="379:5" pos:end="383:5">if <condition pos:start="379:8" pos:end="379:35">(<expr pos:start="379:9" pos:end="379:34"><name pos:start="379:9" pos:end="379:34"><name pos:start="379:9" pos:end="379:9">h</name><operator pos:start="379:10" pos:end="379:11">-&gt;</operator><name pos:start="379:12" pos:end="379:14">sps</name><operator pos:start="379:15" pos:end="379:15">.</operator><name pos:start="379:16" pos:end="379:34">frame_mbs_only_flag</name></name></expr>)</condition> <block pos:start="379:37" pos:end="383:5">{<block_content pos:start="381:9" pos:end="381:42">

        <expr_stmt pos:start="381:9" pos:end="381:42"><expr pos:start="381:9" pos:end="381:41"><name pos:start="381:9" pos:end="381:28"><name pos:start="381:9" pos:end="381:9">h</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:28">picture_structure</name></name> <operator pos:start="381:30" pos:end="381:30">=</operator> <name pos:start="381:32" pos:end="381:41">PICT_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="383:7" pos:end="401:5">else <block pos:start="383:12" pos:end="401:5">{<block_content pos:start="385:9" pos:end="399:9">

        <expr_stmt pos:start="385:9" pos:end="385:43"><expr pos:start="385:9" pos:end="385:42"><name pos:start="385:9" pos:end="385:22">field_pic_flag</name> <operator pos:start="385:24" pos:end="385:24">=</operator> <call pos:start="385:26" pos:end="385:42"><name pos:start="385:26" pos:end="385:34">get_bits1</name><argument_list pos:start="385:35" pos:end="385:42">(<argument pos:start="385:36" pos:end="385:41"><expr pos:start="385:36" pos:end="385:41"><operator pos:start="385:36" pos:end="385:36">&amp;</operator><name pos:start="385:37" pos:end="385:41"><name pos:start="385:37" pos:end="385:37">h</name><operator pos:start="385:38" pos:end="385:39">-&gt;</operator><name pos:start="385:40" pos:end="385:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="387:9" pos:end="399:9"><if pos:start="387:9" pos:end="393:9">if <condition pos:start="387:12" pos:end="387:27">(<expr pos:start="387:13" pos:end="387:26"><name pos:start="387:13" pos:end="387:26">field_pic_flag</name></expr>)</condition> <block pos:start="387:29" pos:end="393:9">{<block_content pos:start="389:13" pos:end="391:70">

            <expr_stmt pos:start="389:13" pos:end="389:50"><expr pos:start="389:13" pos:end="389:49"><name pos:start="389:13" pos:end="389:29">bottom_field_flag</name> <operator pos:start="389:31" pos:end="389:31">=</operator> <call pos:start="389:33" pos:end="389:49"><name pos:start="389:33" pos:end="389:41">get_bits1</name><argument_list pos:start="389:42" pos:end="389:49">(<argument pos:start="389:43" pos:end="389:48"><expr pos:start="389:43" pos:end="389:48"><operator pos:start="389:43" pos:end="389:43">&amp;</operator><name pos:start="389:44" pos:end="389:48"><name pos:start="389:44" pos:end="389:44">h</name><operator pos:start="389:45" pos:end="389:46">-&gt;</operator><name pos:start="389:47" pos:end="389:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:70"><expr pos:start="391:13" pos:end="391:69"><name pos:start="391:13" pos:end="391:32"><name pos:start="391:13" pos:end="391:13">h</name><operator pos:start="391:14" pos:end="391:15">-&gt;</operator><name pos:start="391:16" pos:end="391:32">picture_structure</name></name> <operator pos:start="391:34" pos:end="391:34">=</operator> <name pos:start="391:36" pos:end="391:49">PICT_TOP_FIELD</name> <operator pos:start="391:51" pos:end="391:51">+</operator> <name pos:start="391:53" pos:end="391:69">bottom_field_flag</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="393:11" pos:end="399:9">else <block pos:start="393:16" pos:end="399:9">{<block_content pos:start="395:13" pos:end="397:49">

            <expr_stmt pos:start="395:13" pos:end="395:46"><expr pos:start="395:13" pos:end="395:45"><name pos:start="395:13" pos:end="395:32"><name pos:start="395:13" pos:end="395:13">h</name><operator pos:start="395:14" pos:end="395:15">-&gt;</operator><name pos:start="395:16" pos:end="395:32">picture_structure</name></name> <operator pos:start="395:34" pos:end="395:34">=</operator> <name pos:start="395:36" pos:end="395:45">PICT_FRAME</name></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:49"><expr pos:start="397:13" pos:end="397:48"><name pos:start="397:13" pos:end="397:27"><name pos:start="397:13" pos:end="397:13">h</name><operator pos:start="397:14" pos:end="397:15">-&gt;</operator><name pos:start="397:16" pos:end="397:27">mb_aff_frame</name></name>      <operator pos:start="397:34" pos:end="397:34">=</operator> <name pos:start="397:36" pos:end="397:48"><name pos:start="397:36" pos:end="397:36">h</name><operator pos:start="397:37" pos:end="397:38">-&gt;</operator><name pos:start="397:39" pos:end="397:41">sps</name><operator pos:start="397:42" pos:end="397:42">.</operator><name pos:start="397:43" pos:end="397:48">mb_aff</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="403:5" pos:end="403:67"><expr pos:start="403:5" pos:end="403:66"><name pos:start="403:5" pos:end="403:29"><name pos:start="403:5" pos:end="403:5">h</name><operator pos:start="403:6" pos:end="403:7">-&gt;</operator><name pos:start="403:8" pos:end="403:29">mb_field_decoding_flag</name></name> <operator pos:start="403:31" pos:end="403:31">=</operator> <name pos:start="403:33" pos:end="403:52"><name pos:start="403:33" pos:end="403:33">h</name><operator pos:start="403:34" pos:end="403:35">-&gt;</operator><name pos:start="403:36" pos:end="403:52">picture_structure</name></name> <operator pos:start="403:54" pos:end="403:55">!=</operator> <name pos:start="403:57" pos:end="403:66">PICT_FRAME</name></expr>;</expr_stmt>



    <if_stmt pos:start="407:5" pos:end="743:5"><if pos:start="407:5" pos:end="437:5">if <condition pos:start="407:8" pos:end="407:31">(<expr pos:start="407:9" pos:end="407:30"><name pos:start="407:9" pos:end="407:25"><name pos:start="407:9" pos:end="407:10">h0</name><operator pos:start="407:11" pos:end="407:12">-&gt;</operator><name pos:start="407:13" pos:end="407:25">current_slice</name></name> <operator pos:start="407:27" pos:end="407:28">!=</operator> <literal type="number" pos:start="407:30" pos:end="407:30">0</literal></expr>)</condition> <block pos:start="407:33" pos:end="437:5">{<block_content pos:start="409:9" pos:end="435:9">

        <if_stmt pos:start="409:9" pos:end="435:9"><if pos:start="409:9" pos:end="425:9">if <condition pos:start="409:12" pos:end="411:47">(<expr pos:start="409:13" pos:end="411:46"><name pos:start="409:13" pos:end="409:30">last_pic_structure</name> <operator pos:start="409:32" pos:end="409:33">!=</operator> <name pos:start="409:35" pos:end="409:54"><name pos:start="409:35" pos:end="409:35">h</name><operator pos:start="409:36" pos:end="409:37">-&gt;</operator><name pos:start="409:38" pos:end="409:54">picture_structure</name></name> <operator pos:start="409:56" pos:end="409:57">||</operator>

            <name pos:start="411:13" pos:end="411:30">last_pic_droppable</name> <operator pos:start="411:32" pos:end="411:33">!=</operator> <name pos:start="411:35" pos:end="411:46"><name pos:start="411:35" pos:end="411:35">h</name><operator pos:start="411:36" pos:end="411:37">-&gt;</operator><name pos:start="411:38" pos:end="411:46">droppable</name></name></expr>)</condition> <block pos:start="411:49" pos:end="425:9">{<block_content pos:start="413:13" pos:end="423:39">

            <expr_stmt pos:start="413:13" pos:end="417:61"><expr pos:start="413:13" pos:end="417:60"><call pos:start="413:13" pos:end="417:60"><name pos:start="413:13" pos:end="413:18">av_log</name><argument_list pos:start="413:19" pos:end="417:60">(<argument pos:start="413:20" pos:end="413:27"><expr pos:start="413:20" pos:end="413:27"><name pos:start="413:20" pos:end="413:27"><name pos:start="413:20" pos:end="413:20">h</name><operator pos:start="413:21" pos:end="413:22">-&gt;</operator><name pos:start="413:23" pos:end="413:27">avctx</name></name></expr></argument>, <argument pos:start="413:30" pos:end="413:41"><expr pos:start="413:30" pos:end="413:41"><name pos:start="413:30" pos:end="413:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="415:20" pos:end="415:83"><expr pos:start="415:20" pos:end="415:83"><literal type="string" pos:start="415:20" pos:end="415:83">"Changing field mode (%d -&gt; %d) between slices is not allowed\n"</literal></expr></argument>,

                   <argument pos:start="417:20" pos:end="417:37"><expr pos:start="417:20" pos:end="417:37"><name pos:start="417:20" pos:end="417:37">last_pic_structure</name></expr></argument>, <argument pos:start="417:40" pos:end="417:59"><expr pos:start="417:40" pos:end="417:59"><name pos:start="417:40" pos:end="417:59"><name pos:start="417:40" pos:end="417:40">h</name><operator pos:start="417:41" pos:end="417:42">-&gt;</operator><name pos:start="417:43" pos:end="417:59">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:54"><expr pos:start="419:13" pos:end="419:53"><name pos:start="419:13" pos:end="419:32"><name pos:start="419:13" pos:end="419:13">h</name><operator pos:start="419:14" pos:end="419:15">-&gt;</operator><name pos:start="419:16" pos:end="419:32">picture_structure</name></name> <operator pos:start="419:34" pos:end="419:34">=</operator> <name pos:start="419:36" pos:end="419:53">last_pic_structure</name></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:54"><expr pos:start="421:13" pos:end="421:53"><name pos:start="421:13" pos:end="421:24"><name pos:start="421:13" pos:end="421:13">h</name><operator pos:start="421:14" pos:end="421:15">-&gt;</operator><name pos:start="421:16" pos:end="421:24">droppable</name></name>         <operator pos:start="421:34" pos:end="421:34">=</operator> <name pos:start="421:36" pos:end="421:53">last_pic_droppable</name></expr>;</expr_stmt>

            <return pos:start="423:13" pos:end="423:39">return <expr pos:start="423:20" pos:end="423:38"><name pos:start="423:20" pos:end="423:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="425:11" pos:end="435:9">else if <condition pos:start="425:19" pos:end="425:36">(<expr pos:start="425:20" pos:end="425:35"><operator pos:start="425:20" pos:end="425:20">!</operator><name pos:start="425:21" pos:end="425:35"><name pos:start="425:21" pos:end="425:22">h0</name><operator pos:start="425:23" pos:end="425:24">-&gt;</operator><name pos:start="425:25" pos:end="425:35">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="425:38" pos:end="435:9">{<block_content pos:start="427:13" pos:end="433:39">

            <expr_stmt pos:start="427:13" pos:end="431:42"><expr pos:start="427:13" pos:end="431:41"><call pos:start="427:13" pos:end="431:41"><name pos:start="427:13" pos:end="427:18">av_log</name><argument_list pos:start="427:19" pos:end="431:41">(<argument pos:start="427:20" pos:end="427:27"><expr pos:start="427:20" pos:end="427:27"><name pos:start="427:20" pos:end="427:27"><name pos:start="427:20" pos:end="427:20">h</name><operator pos:start="427:21" pos:end="427:22">-&gt;</operator><name pos:start="427:23" pos:end="427:27">avctx</name></name></expr></argument>, <argument pos:start="427:30" pos:end="427:41"><expr pos:start="427:30" pos:end="427:41"><name pos:start="427:30" pos:end="427:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="429:20" pos:end="429:52"><expr pos:start="429:20" pos:end="429:52"><literal type="string" pos:start="429:20" pos:end="429:52">"unset cur_pic_ptr on slice %d\n"</literal></expr></argument>,

                   <argument pos:start="431:20" pos:end="431:40"><expr pos:start="431:20" pos:end="431:40"><name pos:start="431:20" pos:end="431:36"><name pos:start="431:20" pos:end="431:21">h0</name><operator pos:start="431:22" pos:end="431:23">-&gt;</operator><name pos:start="431:24" pos:end="431:36">current_slice</name></name> <operator pos:start="431:38" pos:end="431:38">+</operator> <literal type="number" pos:start="431:40" pos:end="431:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="433:13" pos:end="433:39">return <expr pos:start="433:20" pos:end="433:38"><name pos:start="433:20" pos:end="433:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="437:7" pos:end="743:5">else <block pos:start="437:12" pos:end="743:5">{<block_content pos:start="443:9" pos:end="741:9">

        <comment type="block" pos:start="439:9" pos:end="441:44">/* Shorten frame num gaps so we don't have to allocate reference

         * frames just to throw them away */</comment>

        <if_stmt pos:start="443:9" pos:end="471:9"><if pos:start="443:9" pos:end="471:9">if <condition pos:start="443:12" pos:end="443:46">(<expr pos:start="443:13" pos:end="443:45"><name pos:start="443:13" pos:end="443:24"><name pos:start="443:13" pos:end="443:13">h</name><operator pos:start="443:14" pos:end="443:15">-&gt;</operator><name pos:start="443:16" pos:end="443:24">frame_num</name></name> <operator pos:start="443:26" pos:end="443:27">!=</operator> <name pos:start="443:29" pos:end="443:45"><name pos:start="443:29" pos:end="443:29">h</name><operator pos:start="443:30" pos:end="443:31">-&gt;</operator><name pos:start="443:32" pos:end="443:45">prev_frame_num</name></name></expr>)</condition> <block pos:start="443:48" pos:end="471:9">{<block_content pos:start="445:13" pos:end="469:13">

            <decl_stmt pos:start="445:13" pos:end="445:58"><decl pos:start="445:13" pos:end="445:57"><type pos:start="445:13" pos:end="445:15"><name pos:start="445:13" pos:end="445:15">int</name></type> <name pos:start="445:17" pos:end="445:37">unwrap_prev_frame_num</name> <init pos:start="445:39" pos:end="445:57">= <expr pos:start="445:41" pos:end="445:57"><name pos:start="445:41" pos:end="445:57"><name pos:start="445:41" pos:end="445:41">h</name><operator pos:start="445:42" pos:end="445:43">-&gt;</operator><name pos:start="445:44" pos:end="445:57">prev_frame_num</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="447:13" pos:end="447:71"><decl pos:start="447:13" pos:end="447:70"><type pos:start="447:13" pos:end="447:15"><name pos:start="447:13" pos:end="447:15">int</name></type> <name pos:start="447:17" pos:end="447:29">max_frame_num</name>         <init pos:start="447:39" pos:end="447:70">= <expr pos:start="447:41" pos:end="447:70"><literal type="number" pos:start="447:41" pos:end="447:41">1</literal> <operator pos:start="447:43" pos:end="447:44">&lt;&lt;</operator> <name pos:start="447:46" pos:end="447:70"><name pos:start="447:46" pos:end="447:46">h</name><operator pos:start="447:47" pos:end="447:48">-&gt;</operator><name pos:start="447:49" pos:end="447:51">sps</name><operator pos:start="447:52" pos:end="447:52">.</operator><name pos:start="447:53" pos:end="447:70">log2_max_frame_num</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="451:13" pos:end="453:55"><if pos:start="451:13" pos:end="453:55">if <condition pos:start="451:16" pos:end="451:53">(<expr pos:start="451:17" pos:end="451:52"><name pos:start="451:17" pos:end="451:37">unwrap_prev_frame_num</name> <operator pos:start="451:39" pos:end="451:39">&gt;</operator> <name pos:start="451:41" pos:end="451:52"><name pos:start="451:41" pos:end="451:41">h</name><operator pos:start="451:42" pos:end="451:43">-&gt;</operator><name pos:start="451:44" pos:end="451:52">frame_num</name></name></expr>)</condition><block type="pseudo" pos:start="453:17" pos:end="453:55"><block_content pos:start="453:17" pos:end="453:55">

                <expr_stmt pos:start="453:17" pos:end="453:55"><expr pos:start="453:17" pos:end="453:54"><name pos:start="453:17" pos:end="453:37">unwrap_prev_frame_num</name> <operator pos:start="453:39" pos:end="453:40">-=</operator> <name pos:start="453:42" pos:end="453:54">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="457:13" pos:end="469:13"><if pos:start="457:13" pos:end="469:13">if <condition pos:start="457:16" pos:end="457:80">(<expr pos:start="457:17" pos:end="457:79"><operator pos:start="457:17" pos:end="457:17">(</operator><name pos:start="457:18" pos:end="457:29"><name pos:start="457:18" pos:end="457:18">h</name><operator pos:start="457:19" pos:end="457:20">-&gt;</operator><name pos:start="457:21" pos:end="457:29">frame_num</name></name> <operator pos:start="457:31" pos:end="457:31">-</operator> <name pos:start="457:33" pos:end="457:53">unwrap_prev_frame_num</name><operator pos:start="457:54" pos:end="457:54">)</operator> <operator pos:start="457:56" pos:end="457:56">&gt;</operator> <name pos:start="457:58" pos:end="457:79"><name pos:start="457:58" pos:end="457:58">h</name><operator pos:start="457:59" pos:end="457:60">-&gt;</operator><name pos:start="457:61" pos:end="457:63">sps</name><operator pos:start="457:64" pos:end="457:64">.</operator><name pos:start="457:65" pos:end="457:79">ref_frame_count</name></name></expr>)</condition> <block pos:start="457:82" pos:end="469:13">{<block_content pos:start="459:17" pos:end="467:58">

                <expr_stmt pos:start="459:17" pos:end="459:84"><expr pos:start="459:17" pos:end="459:83"><name pos:start="459:17" pos:end="459:37">unwrap_prev_frame_num</name> <operator pos:start="459:39" pos:end="459:39">=</operator> <operator pos:start="459:41" pos:end="459:41">(</operator><name pos:start="459:42" pos:end="459:53"><name pos:start="459:42" pos:end="459:42">h</name><operator pos:start="459:43" pos:end="459:44">-&gt;</operator><name pos:start="459:45" pos:end="459:53">frame_num</name></name> <operator pos:start="459:55" pos:end="459:55">-</operator> <name pos:start="459:57" pos:end="459:78"><name pos:start="459:57" pos:end="459:57">h</name><operator pos:start="459:58" pos:end="459:59">-&gt;</operator><name pos:start="459:60" pos:end="459:62">sps</name><operator pos:start="459:63" pos:end="459:63">.</operator><name pos:start="459:64" pos:end="459:78">ref_frame_count</name></name><operator pos:start="459:79" pos:end="459:79">)</operator> <operator pos:start="459:81" pos:end="459:81">-</operator> <literal type="number" pos:start="459:83" pos:end="459:83">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="461:17" pos:end="463:59"><if pos:start="461:17" pos:end="463:59">if <condition pos:start="461:20" pos:end="461:46">(<expr pos:start="461:21" pos:end="461:45"><name pos:start="461:21" pos:end="461:41">unwrap_prev_frame_num</name> <operator pos:start="461:43" pos:end="461:43">&lt;</operator> <literal type="number" pos:start="461:45" pos:end="461:45">0</literal></expr>)</condition><block type="pseudo" pos:start="463:21" pos:end="463:59"><block_content pos:start="463:21" pos:end="463:59">

                    <expr_stmt pos:start="463:21" pos:end="463:59"><expr pos:start="463:21" pos:end="463:58"><name pos:start="463:21" pos:end="463:41">unwrap_prev_frame_num</name> <operator pos:start="463:43" pos:end="463:44">+=</operator> <name pos:start="463:46" pos:end="463:58">max_frame_num</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="467:17" pos:end="467:58"><expr pos:start="467:17" pos:end="467:57"><name pos:start="467:17" pos:end="467:33"><name pos:start="467:17" pos:end="467:17">h</name><operator pos:start="467:18" pos:end="467:19">-&gt;</operator><name pos:start="467:20" pos:end="467:33">prev_frame_num</name></name> <operator pos:start="467:35" pos:end="467:35">=</operator> <name pos:start="467:37" pos:end="467:57">unwrap_prev_frame_num</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="475:9" pos:end="483:59">/* See if we have a decoded first field looking for a pair...

         * Here, we're using that to see if we should mark previously

         * decode frames as "finished".

         * We have to do that before the "dummy" in-between frame allocation,

         * since that can modify s-&gt;current_picture_ptr. */</comment>

        <if_stmt pos:start="485:9" pos:end="573:9"><if pos:start="485:9" pos:end="573:9">if <condition pos:start="485:12" pos:end="485:28">(<expr pos:start="485:13" pos:end="485:27"><name pos:start="485:13" pos:end="485:27"><name pos:start="485:13" pos:end="485:14">h0</name><operator pos:start="485:15" pos:end="485:16">-&gt;</operator><name pos:start="485:17" pos:end="485:27">first_field</name></name></expr>)</condition> <block pos:start="485:30" pos:end="573:9">{<block_content pos:start="487:13" pos:end="571:13">

            <expr_stmt pos:start="487:13" pos:end="487:36"><expr pos:start="487:13" pos:end="487:35"><call pos:start="487:13" pos:end="487:35"><name pos:start="487:13" pos:end="487:18">assert</name><argument_list pos:start="487:19" pos:end="487:35">(<argument pos:start="487:20" pos:end="487:34"><expr pos:start="487:20" pos:end="487:34"><name pos:start="487:20" pos:end="487:34"><name pos:start="487:20" pos:end="487:21">h0</name><operator pos:start="487:22" pos:end="487:23">-&gt;</operator><name pos:start="487:24" pos:end="487:34">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="489:13" pos:end="489:46"><expr pos:start="489:13" pos:end="489:45"><call pos:start="489:13" pos:end="489:45"><name pos:start="489:13" pos:end="489:18">assert</name><argument_list pos:start="489:19" pos:end="489:45">(<argument pos:start="489:20" pos:end="489:44"><expr pos:start="489:20" pos:end="489:44"><name pos:start="489:20" pos:end="489:44"><name pos:start="489:20" pos:end="489:21">h0</name><operator pos:start="489:22" pos:end="489:23">-&gt;</operator><name pos:start="489:24" pos:end="489:34">cur_pic_ptr</name><operator pos:start="489:35" pos:end="489:36">-&gt;</operator><name pos:start="489:37" pos:end="489:37">f</name><operator pos:start="489:38" pos:end="489:38">.</operator><name pos:start="489:39" pos:end="489:41">buf</name><index pos:start="489:42" pos:end="489:44">[<expr pos:start="489:43" pos:end="489:43"><literal type="number" pos:start="489:43" pos:end="489:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:66"><expr pos:start="491:13" pos:end="491:65"><call pos:start="491:13" pos:end="491:65"><name pos:start="491:13" pos:end="491:18">assert</name><argument_list pos:start="491:19" pos:end="491:65">(<argument pos:start="491:20" pos:end="491:64"><expr pos:start="491:20" pos:end="491:64"><name pos:start="491:20" pos:end="491:45"><name pos:start="491:20" pos:end="491:21">h0</name><operator pos:start="491:22" pos:end="491:23">-&gt;</operator><name pos:start="491:24" pos:end="491:34">cur_pic_ptr</name><operator pos:start="491:35" pos:end="491:36">-&gt;</operator><name pos:start="491:37" pos:end="491:45">reference</name></name> <operator pos:start="491:47" pos:end="491:48">!=</operator> <name pos:start="491:50" pos:end="491:64">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="495:13" pos:end="495:66">/* figure out if we have a complementary field pair */</comment>

            <if_stmt pos:start="497:13" pos:end="571:13"><if pos:start="497:13" pos:end="511:13">if <condition pos:start="497:16" pos:end="497:80">(<expr pos:start="497:17" pos:end="497:79"><operator pos:start="497:17" pos:end="497:17">!</operator><call pos:start="497:18" pos:end="497:33"><name pos:start="497:18" pos:end="497:30">FIELD_PICTURE</name><argument_list pos:start="497:31" pos:end="497:33">(<argument pos:start="497:32" pos:end="497:32"><expr pos:start="497:32" pos:end="497:32"><name pos:start="497:32" pos:end="497:32">h</name></expr></argument>)</argument_list></call> <operator pos:start="497:35" pos:end="497:36">||</operator> <name pos:start="497:38" pos:end="497:57"><name pos:start="497:38" pos:end="497:38">h</name><operator pos:start="497:39" pos:end="497:40">-&gt;</operator><name pos:start="497:41" pos:end="497:57">picture_structure</name></name> <operator pos:start="497:59" pos:end="497:60">==</operator> <name pos:start="497:62" pos:end="497:79">last_pic_structure</name></expr>)</condition> <block pos:start="497:82" pos:end="511:13">{<block_content pos:start="503:17" pos:end="509:17">

                <comment type="block" pos:start="499:17" pos:end="501:61">/* Previous field is unmatched. Don't display it, but let it

                 * remain for reference if marked as such. */</comment>

                <if_stmt pos:start="503:17" pos:end="509:17"><if pos:start="503:17" pos:end="509:17">if <condition pos:start="503:20" pos:end="503:76">(<expr pos:start="503:21" pos:end="503:75"><operator pos:start="503:21" pos:end="503:21">!</operator><name pos:start="503:22" pos:end="503:39">last_pic_droppable</name> <operator pos:start="503:41" pos:end="503:42">&amp;&amp;</operator> <name pos:start="503:44" pos:end="503:61">last_pic_structure</name> <operator pos:start="503:63" pos:end="503:64">!=</operator> <name pos:start="503:66" pos:end="503:75">PICT_FRAME</name></expr>)</condition> <block pos:start="503:78" pos:end="509:17">{<block_content pos:start="505:21" pos:end="507:84">

                    <expr_stmt pos:start="505:21" pos:end="507:84"><expr pos:start="505:21" pos:end="507:83"><call pos:start="505:21" pos:end="507:83"><name pos:start="505:21" pos:end="505:45">ff_thread_report_progress</name><argument_list pos:start="505:46" pos:end="507:83">(<argument pos:start="505:47" pos:end="505:66"><expr pos:start="505:47" pos:end="505:66"><operator pos:start="505:47" pos:end="505:47">&amp;</operator><name pos:start="505:48" pos:end="505:66"><name pos:start="505:48" pos:end="505:49">h0</name><operator pos:start="505:50" pos:end="505:51">-&gt;</operator><name pos:start="505:52" pos:end="505:62">cur_pic_ptr</name><operator pos:start="505:63" pos:end="505:64">-&gt;</operator><name pos:start="505:65" pos:end="505:66">tf</name></name></expr></argument>, <argument pos:start="505:69" pos:end="505:75"><expr pos:start="505:69" pos:end="505:75"><name pos:start="505:69" pos:end="505:75">INT_MAX</name></expr></argument>,

                                              <argument pos:start="507:47" pos:end="507:82"><expr pos:start="507:47" pos:end="507:82"><name pos:start="507:47" pos:end="507:64">last_pic_structure</name> <operator pos:start="507:66" pos:end="507:67">==</operator> <name pos:start="507:69" pos:end="507:82">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="511:15" pos:end="571:13">else <block pos:start="511:20" pos:end="571:13">{<block_content pos:start="513:17" pos:end="569:17">

                <if_stmt pos:start="513:17" pos:end="569:17"><if pos:start="513:17" pos:end="531:17">if <condition pos:start="513:20" pos:end="513:63">(<expr pos:start="513:21" pos:end="513:62"><name pos:start="513:21" pos:end="513:46"><name pos:start="513:21" pos:end="513:22">h0</name><operator pos:start="513:23" pos:end="513:24">-&gt;</operator><name pos:start="513:25" pos:end="513:35">cur_pic_ptr</name><operator pos:start="513:36" pos:end="513:37">-&gt;</operator><name pos:start="513:38" pos:end="513:46">frame_num</name></name> <operator pos:start="513:48" pos:end="513:49">!=</operator> <name pos:start="513:51" pos:end="513:62"><name pos:start="513:51" pos:end="513:51">h</name><operator pos:start="513:52" pos:end="513:53">-&gt;</operator><name pos:start="513:54" pos:end="513:62">frame_num</name></name></expr>)</condition> <block pos:start="513:65" pos:end="531:17">{<block_content pos:start="523:21" pos:end="529:21">

                    <comment type="block" pos:start="515:21" pos:end="521:35">/* This and previous field were reference, but had

                     * different frame_nums. Consider this field first in

                     * pair. Throw away previous field except for reference

                     * purposes. */</comment>

                    <if_stmt pos:start="523:21" pos:end="529:21"><if pos:start="523:21" pos:end="529:21">if <condition pos:start="523:24" pos:end="523:80">(<expr pos:start="523:25" pos:end="523:79"><operator pos:start="523:25" pos:end="523:25">!</operator><name pos:start="523:26" pos:end="523:43">last_pic_droppable</name> <operator pos:start="523:45" pos:end="523:46">&amp;&amp;</operator> <name pos:start="523:48" pos:end="523:65">last_pic_structure</name> <operator pos:start="523:67" pos:end="523:68">!=</operator> <name pos:start="523:70" pos:end="523:79">PICT_FRAME</name></expr>)</condition> <block pos:start="523:82" pos:end="529:21">{<block_content pos:start="525:25" pos:end="527:88">

                        <expr_stmt pos:start="525:25" pos:end="527:88"><expr pos:start="525:25" pos:end="527:87"><call pos:start="525:25" pos:end="527:87"><name pos:start="525:25" pos:end="525:49">ff_thread_report_progress</name><argument_list pos:start="525:50" pos:end="527:87">(<argument pos:start="525:51" pos:end="525:70"><expr pos:start="525:51" pos:end="525:70"><operator pos:start="525:51" pos:end="525:51">&amp;</operator><name pos:start="525:52" pos:end="525:70"><name pos:start="525:52" pos:end="525:53">h0</name><operator pos:start="525:54" pos:end="525:55">-&gt;</operator><name pos:start="525:56" pos:end="525:66">cur_pic_ptr</name><operator pos:start="525:67" pos:end="525:68">-&gt;</operator><name pos:start="525:69" pos:end="525:70">tf</name></name></expr></argument>, <argument pos:start="525:73" pos:end="525:79"><expr pos:start="525:73" pos:end="525:79"><name pos:start="525:73" pos:end="525:79">INT_MAX</name></expr></argument>,

                                                  <argument pos:start="527:51" pos:end="527:86"><expr pos:start="527:51" pos:end="527:86"><name pos:start="527:51" pos:end="527:68">last_pic_structure</name> <operator pos:start="527:70" pos:end="527:71">==</operator> <name pos:start="527:73" pos:end="527:86">PICT_TOP_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="531:19" pos:end="569:17">else <block pos:start="531:24" pos:end="569:17">{<block_content pos:start="535:21" pos:end="567:21">

                    <comment type="block" pos:start="533:21" pos:end="533:60">/* Second field in complementary pair */</comment>

                    <if_stmt pos:start="535:21" pos:end="567:21"><if pos:start="535:21" pos:end="555:21">if <condition pos:start="535:24" pos:end="541:68">(<expr pos:start="535:25" pos:end="541:67"><operator pos:start="535:25" pos:end="535:25">!</operator><operator pos:start="535:26" pos:end="535:26">(</operator><operator pos:start="535:27" pos:end="535:27">(</operator><name pos:start="535:28" pos:end="535:45">last_pic_structure</name>   <operator pos:start="535:49" pos:end="535:50">==</operator> <name pos:start="535:52" pos:end="535:65">PICT_TOP_FIELD</name> <operator pos:start="535:67" pos:end="535:68">&amp;&amp;</operator>

                           <name pos:start="537:28" pos:end="537:47"><name pos:start="537:28" pos:end="537:28">h</name><operator pos:start="537:29" pos:end="537:30">-&gt;</operator><name pos:start="537:31" pos:end="537:47">picture_structure</name></name> <operator pos:start="537:49" pos:end="537:50">==</operator> <name pos:start="537:52" pos:end="537:68">PICT_BOTTOM_FIELD</name><operator pos:start="537:69" pos:end="537:69">)</operator> <operator pos:start="537:71" pos:end="537:72">||</operator>

                          <operator pos:start="539:27" pos:end="539:27">(</operator><name pos:start="539:28" pos:end="539:45">last_pic_structure</name>   <operator pos:start="539:49" pos:end="539:50">==</operator> <name pos:start="539:52" pos:end="539:68">PICT_BOTTOM_FIELD</name> <operator pos:start="539:70" pos:end="539:71">&amp;&amp;</operator>

                           <name pos:start="541:28" pos:end="541:47"><name pos:start="541:28" pos:end="541:28">h</name><operator pos:start="541:29" pos:end="541:30">-&gt;</operator><name pos:start="541:31" pos:end="541:47">picture_structure</name></name> <operator pos:start="541:49" pos:end="541:50">==</operator> <name pos:start="541:52" pos:end="541:65">PICT_TOP_FIELD</name><operator pos:start="541:66" pos:end="541:66">)</operator><operator pos:start="541:67" pos:end="541:67">)</operator></expr>)</condition> <block pos:start="541:70" pos:end="555:21">{<block_content pos:start="543:25" pos:end="553:51">

                        <expr_stmt pos:start="543:25" pos:end="547:73"><expr pos:start="543:25" pos:end="547:72"><call pos:start="543:25" pos:end="547:72"><name pos:start="543:25" pos:end="543:30">av_log</name><argument_list pos:start="543:31" pos:end="547:72">(<argument pos:start="543:32" pos:end="543:39"><expr pos:start="543:32" pos:end="543:39"><name pos:start="543:32" pos:end="543:39"><name pos:start="543:32" pos:end="543:32">h</name><operator pos:start="543:33" pos:end="543:34">-&gt;</operator><name pos:start="543:35" pos:end="543:39">avctx</name></name></expr></argument>, <argument pos:start="543:42" pos:end="543:53"><expr pos:start="543:42" pos:end="543:53"><name pos:start="543:42" pos:end="543:53">AV_LOG_ERROR</name></expr></argument>,

                               <argument pos:start="545:32" pos:end="545:71"><expr pos:start="545:32" pos:end="545:71"><literal type="string" pos:start="545:32" pos:end="545:71">"Invalid field mode combination %d/%d\n"</literal></expr></argument>,

                               <argument pos:start="547:32" pos:end="547:49"><expr pos:start="547:32" pos:end="547:49"><name pos:start="547:32" pos:end="547:49">last_pic_structure</name></expr></argument>, <argument pos:start="547:52" pos:end="547:71"><expr pos:start="547:52" pos:end="547:71"><name pos:start="547:52" pos:end="547:71"><name pos:start="547:52" pos:end="547:52">h</name><operator pos:start="547:53" pos:end="547:54">-&gt;</operator><name pos:start="547:55" pos:end="547:71">picture_structure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="549:25" pos:end="549:66"><expr pos:start="549:25" pos:end="549:65"><name pos:start="549:25" pos:end="549:44"><name pos:start="549:25" pos:end="549:25">h</name><operator pos:start="549:26" pos:end="549:27">-&gt;</operator><name pos:start="549:28" pos:end="549:44">picture_structure</name></name> <operator pos:start="549:46" pos:end="549:46">=</operator> <name pos:start="549:48" pos:end="549:65">last_pic_structure</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="551:25" pos:end="551:66"><expr pos:start="551:25" pos:end="551:65"><name pos:start="551:25" pos:end="551:36"><name pos:start="551:25" pos:end="551:25">h</name><operator pos:start="551:26" pos:end="551:27">-&gt;</operator><name pos:start="551:28" pos:end="551:36">droppable</name></name>         <operator pos:start="551:46" pos:end="551:46">=</operator> <name pos:start="551:48" pos:end="551:65">last_pic_droppable</name></expr>;</expr_stmt>

                        <return pos:start="553:25" pos:end="553:51">return <expr pos:start="553:32" pos:end="553:50"><name pos:start="553:32" pos:end="553:50">AVERROR_INVALIDDATA</name></expr>;</return>

                    </block_content>}</block></if> <if type="elseif" pos:start="555:23" pos:end="567:21">else if <condition pos:start="555:31" pos:end="555:66">(<expr pos:start="555:32" pos:end="555:65"><name pos:start="555:32" pos:end="555:49">last_pic_droppable</name> <operator pos:start="555:51" pos:end="555:52">!=</operator> <name pos:start="555:54" pos:end="555:65"><name pos:start="555:54" pos:end="555:54">h</name><operator pos:start="555:55" pos:end="555:56">-&gt;</operator><name pos:start="555:57" pos:end="555:65">droppable</name></name></expr>)</condition> <block pos:start="555:68" pos:end="567:21">{<block_content pos:start="557:25" pos:end="565:52">

                        <expr_stmt pos:start="557:25" pos:end="559:115"><expr pos:start="557:25" pos:end="559:114"><call pos:start="557:25" pos:end="559:114"><name pos:start="557:25" pos:end="557:45">avpriv_request_sample</name><argument_list pos:start="557:46" pos:end="559:114">(<argument pos:start="557:47" pos:end="557:54"><expr pos:start="557:47" pos:end="557:54"><name pos:start="557:47" pos:end="557:54"><name pos:start="557:47" pos:end="557:47">h</name><operator pos:start="557:48" pos:end="557:49">-&gt;</operator><name pos:start="557:50" pos:end="557:54">avctx</name></name></expr></argument>,

                                              <argument pos:start="559:47" pos:end="559:113"><expr pos:start="559:47" pos:end="559:113"><literal type="string" pos:start="559:47" pos:end="559:113">"Found reference and non-reference fields in the same frame, which"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="561:25" pos:end="561:66"><expr pos:start="561:25" pos:end="561:65"><name pos:start="561:25" pos:end="561:44"><name pos:start="561:25" pos:end="561:25">h</name><operator pos:start="561:26" pos:end="561:27">-&gt;</operator><name pos:start="561:28" pos:end="561:44">picture_structure</name></name> <operator pos:start="561:46" pos:end="561:46">=</operator> <name pos:start="561:48" pos:end="561:65">last_pic_structure</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="563:25" pos:end="563:66"><expr pos:start="563:25" pos:end="563:65"><name pos:start="563:25" pos:end="563:36"><name pos:start="563:25" pos:end="563:25">h</name><operator pos:start="563:26" pos:end="563:27">-&gt;</operator><name pos:start="563:28" pos:end="563:36">droppable</name></name>         <operator pos:start="563:46" pos:end="563:46">=</operator> <name pos:start="563:48" pos:end="563:65">last_pic_droppable</name></expr>;</expr_stmt>

                        <return pos:start="565:25" pos:end="565:52">return <expr pos:start="565:32" pos:end="565:51"><name pos:start="565:32" pos:end="565:51">AVERROR_PATCHWELCOME</name></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <while pos:start="577:9" pos:end="661:9">while <condition pos:start="577:15" pos:end="579:90">(<expr pos:start="577:16" pos:end="579:89"><name pos:start="577:16" pos:end="577:27"><name pos:start="577:16" pos:end="577:16">h</name><operator pos:start="577:17" pos:end="577:18">-&gt;</operator><name pos:start="577:19" pos:end="577:27">frame_num</name></name> <operator pos:start="577:29" pos:end="577:30">!=</operator> <name pos:start="577:32" pos:end="577:48"><name pos:start="577:32" pos:end="577:32">h</name><operator pos:start="577:33" pos:end="577:34">-&gt;</operator><name pos:start="577:35" pos:end="577:48">prev_frame_num</name></name> <operator pos:start="577:50" pos:end="577:51">&amp;&amp;</operator>

               <name pos:start="579:16" pos:end="579:27"><name pos:start="579:16" pos:end="579:16">h</name><operator pos:start="579:17" pos:end="579:18">-&gt;</operator><name pos:start="579:19" pos:end="579:27">frame_num</name></name> <operator pos:start="579:29" pos:end="579:30">!=</operator> <operator pos:start="579:32" pos:end="579:32">(</operator><name pos:start="579:33" pos:end="579:49"><name pos:start="579:33" pos:end="579:33">h</name><operator pos:start="579:34" pos:end="579:35">-&gt;</operator><name pos:start="579:36" pos:end="579:49">prev_frame_num</name></name> <operator pos:start="579:51" pos:end="579:51">+</operator> <literal type="number" pos:start="579:53" pos:end="579:53">1</literal><operator pos:start="579:54" pos:end="579:54">)</operator> <operator pos:start="579:56" pos:end="579:56">%</operator> <operator pos:start="579:58" pos:end="579:58">(</operator><literal type="number" pos:start="579:59" pos:end="579:59">1</literal> <operator pos:start="579:61" pos:end="579:62">&lt;&lt;</operator> <name pos:start="579:64" pos:end="579:88"><name pos:start="579:64" pos:end="579:64">h</name><operator pos:start="579:65" pos:end="579:66">-&gt;</operator><name pos:start="579:67" pos:end="579:69">sps</name><operator pos:start="579:70" pos:end="579:70">.</operator><name pos:start="579:71" pos:end="579:88">log2_max_frame_num</name></name><operator pos:start="579:89" pos:end="579:89">)</operator></expr>)</condition> <block pos:start="579:92" pos:end="661:9">{<block_content pos:start="581:13" pos:end="659:13">

            <decl_stmt pos:start="581:13" pos:end="581:76"><decl pos:start="581:13" pos:end="581:75"><type pos:start="581:13" pos:end="581:25"><name pos:start="581:13" pos:end="581:23">H264Picture</name> <modifier pos:start="581:25" pos:end="581:25">*</modifier></type><name pos:start="581:26" pos:end="581:29">prev</name> <init pos:start="581:31" pos:end="581:75">= <expr pos:start="581:33" pos:end="581:75"><ternary pos:start="581:33" pos:end="581:75"><condition pos:start="581:33" pos:end="581:52"><expr pos:start="581:33" pos:end="581:50"><name pos:start="581:33" pos:end="581:50"><name pos:start="581:33" pos:end="581:33">h</name><operator pos:start="581:34" pos:end="581:35">-&gt;</operator><name pos:start="581:36" pos:end="581:50">short_ref_count</name></name></expr> ?</condition><then pos:start="581:54" pos:end="581:68"> <expr pos:start="581:54" pos:end="581:68"><name pos:start="581:54" pos:end="581:68"><name pos:start="581:54" pos:end="581:54">h</name><operator pos:start="581:55" pos:end="581:56">-&gt;</operator><name pos:start="581:57" pos:end="581:65">short_ref</name><index pos:start="581:66" pos:end="581:68">[<expr pos:start="581:67" pos:end="581:67"><literal type="number" pos:start="581:67" pos:end="581:67">0</literal></expr>]</index></name></expr> </then><else pos:start="581:70" pos:end="581:75">: <expr pos:start="581:72" pos:end="581:75"><name pos:start="581:72" pos:end="581:75">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="583:13" pos:end="585:52"><expr pos:start="583:13" pos:end="585:51"><call pos:start="583:13" pos:end="585:51"><name pos:start="583:13" pos:end="583:18">av_log</name><argument_list pos:start="583:19" pos:end="585:51">(<argument pos:start="583:20" pos:end="583:27"><expr pos:start="583:20" pos:end="583:27"><name pos:start="583:20" pos:end="583:27"><name pos:start="583:20" pos:end="583:20">h</name><operator pos:start="583:21" pos:end="583:22">-&gt;</operator><name pos:start="583:23" pos:end="583:27">avctx</name></name></expr></argument>, <argument pos:start="583:30" pos:end="583:41"><expr pos:start="583:30" pos:end="583:41"><name pos:start="583:30" pos:end="583:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="583:44" pos:end="583:66"><expr pos:start="583:44" pos:end="583:66"><literal type="string" pos:start="583:44" pos:end="583:66">"Frame num gap %d %d\n"</literal></expr></argument>,

                   <argument pos:start="585:20" pos:end="585:31"><expr pos:start="585:20" pos:end="585:31"><name pos:start="585:20" pos:end="585:31"><name pos:start="585:20" pos:end="585:20">h</name><operator pos:start="585:21" pos:end="585:22">-&gt;</operator><name pos:start="585:23" pos:end="585:31">frame_num</name></name></expr></argument>, <argument pos:start="585:34" pos:end="585:50"><expr pos:start="585:34" pos:end="585:50"><name pos:start="585:34" pos:end="585:50"><name pos:start="585:34" pos:end="585:34">h</name><operator pos:start="585:35" pos:end="585:36">-&gt;</operator><name pos:start="585:37" pos:end="585:50">prev_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="587:13" pos:end="587:38"><expr pos:start="587:13" pos:end="587:37"><name pos:start="587:13" pos:end="587:15">ret</name> <operator pos:start="587:17" pos:end="587:17">=</operator> <call pos:start="587:19" pos:end="587:37"><name pos:start="587:19" pos:end="587:34">h264_frame_start</name><argument_list pos:start="587:35" pos:end="587:37">(<argument pos:start="587:36" pos:end="587:36"><expr pos:start="587:36" pos:end="587:36"><name pos:start="587:36" pos:end="587:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="589:13" pos:end="595:13"><if pos:start="589:13" pos:end="595:13">if <condition pos:start="589:16" pos:end="589:24">(<expr pos:start="589:17" pos:end="589:23"><name pos:start="589:17" pos:end="589:19">ret</name> <operator pos:start="589:21" pos:end="589:21">&lt;</operator> <literal type="number" pos:start="589:23" pos:end="589:23">0</literal></expr>)</condition> <block pos:start="589:26" pos:end="595:13">{<block_content pos:start="591:17" pos:end="593:27">

                <expr_stmt pos:start="591:17" pos:end="591:36"><expr pos:start="591:17" pos:end="591:35"><name pos:start="591:17" pos:end="591:31"><name pos:start="591:17" pos:end="591:18">h0</name><operator pos:start="591:19" pos:end="591:20">-&gt;</operator><name pos:start="591:21" pos:end="591:31">first_field</name></name> <operator pos:start="591:33" pos:end="591:33">=</operator> <literal type="number" pos:start="591:35" pos:end="591:35">0</literal></expr>;</expr_stmt>

                <return pos:start="593:17" pos:end="593:27">return <expr pos:start="593:24" pos:end="593:26"><name pos:start="593:24" pos:end="593:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="599:13" pos:end="599:32"><expr pos:start="599:13" pos:end="599:31"><name pos:start="599:13" pos:end="599:29"><name pos:start="599:13" pos:end="599:13">h</name><operator pos:start="599:14" pos:end="599:15">-&gt;</operator><name pos:start="599:16" pos:end="599:29">prev_frame_num</name></name><operator pos:start="599:30" pos:end="599:31">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="601:13" pos:end="601:71"><expr pos:start="601:13" pos:end="601:70"><name pos:start="601:13" pos:end="601:29"><name pos:start="601:13" pos:end="601:13">h</name><operator pos:start="601:14" pos:end="601:15">-&gt;</operator><name pos:start="601:16" pos:end="601:29">prev_frame_num</name></name>        <operator pos:start="601:38" pos:end="601:39">%=</operator> <literal type="number" pos:start="601:41" pos:end="601:41">1</literal> <operator pos:start="601:43" pos:end="601:44">&lt;&lt;</operator> <name pos:start="601:46" pos:end="601:70"><name pos:start="601:46" pos:end="601:46">h</name><operator pos:start="601:47" pos:end="601:48">-&gt;</operator><name pos:start="601:49" pos:end="601:51">sps</name><operator pos:start="601:52" pos:end="601:52">.</operator><name pos:start="601:53" pos:end="601:70">log2_max_frame_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="603:13" pos:end="603:58"><expr pos:start="603:13" pos:end="603:57"><name pos:start="603:13" pos:end="603:37"><name pos:start="603:13" pos:end="603:13">h</name><operator pos:start="603:14" pos:end="603:15">-&gt;</operator><name pos:start="603:16" pos:end="603:26">cur_pic_ptr</name><operator pos:start="603:27" pos:end="603:28">-&gt;</operator><name pos:start="603:29" pos:end="603:37">frame_num</name></name> <operator pos:start="603:39" pos:end="603:39">=</operator> <name pos:start="603:41" pos:end="603:57"><name pos:start="603:41" pos:end="603:41">h</name><operator pos:start="603:42" pos:end="603:43">-&gt;</operator><name pos:start="603:44" pos:end="603:57">prev_frame_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="605:13" pos:end="605:71"><expr pos:start="605:13" pos:end="605:70"><call pos:start="605:13" pos:end="605:70"><name pos:start="605:13" pos:end="605:37">ff_thread_report_progress</name><argument_list pos:start="605:38" pos:end="605:70">(<argument pos:start="605:39" pos:end="605:57"><expr pos:start="605:39" pos:end="605:57"><operator pos:start="605:39" pos:end="605:39">&amp;</operator><name pos:start="605:40" pos:end="605:57"><name pos:start="605:40" pos:end="605:40">h</name><operator pos:start="605:41" pos:end="605:42">-&gt;</operator><name pos:start="605:43" pos:end="605:53">cur_pic_ptr</name><operator pos:start="605:54" pos:end="605:55">-&gt;</operator><name pos:start="605:56" pos:end="605:57">tf</name></name></expr></argument>, <argument pos:start="605:60" pos:end="605:66"><expr pos:start="605:60" pos:end="605:66"><name pos:start="605:60" pos:end="605:66">INT_MAX</name></expr></argument>, <argument pos:start="605:69" pos:end="605:69"><expr pos:start="605:69" pos:end="605:69"><literal type="number" pos:start="605:69" pos:end="605:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="607:13" pos:end="607:71"><expr pos:start="607:13" pos:end="607:70"><call pos:start="607:13" pos:end="607:70"><name pos:start="607:13" pos:end="607:37">ff_thread_report_progress</name><argument_list pos:start="607:38" pos:end="607:70">(<argument pos:start="607:39" pos:end="607:57"><expr pos:start="607:39" pos:end="607:57"><operator pos:start="607:39" pos:end="607:39">&amp;</operator><name pos:start="607:40" pos:end="607:57"><name pos:start="607:40" pos:end="607:40">h</name><operator pos:start="607:41" pos:end="607:42">-&gt;</operator><name pos:start="607:43" pos:end="607:53">cur_pic_ptr</name><operator pos:start="607:54" pos:end="607:55">-&gt;</operator><name pos:start="607:56" pos:end="607:57">tf</name></name></expr></argument>, <argument pos:start="607:60" pos:end="607:66"><expr pos:start="607:60" pos:end="607:66"><name pos:start="607:60" pos:end="607:66">INT_MAX</name></expr></argument>, <argument pos:start="607:69" pos:end="607:69"><expr pos:start="607:69" pos:end="607:69"><literal type="number" pos:start="607:69" pos:end="607:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="609:13" pos:end="609:57"><expr pos:start="609:13" pos:end="609:56"><name pos:start="609:13" pos:end="609:15">ret</name> <operator pos:start="609:17" pos:end="609:17">=</operator> <call pos:start="609:19" pos:end="609:56"><name pos:start="609:19" pos:end="609:50">ff_generate_sliding_window_mmcos</name><argument_list pos:start="609:51" pos:end="609:56">(<argument pos:start="609:52" pos:end="609:52"><expr pos:start="609:52" pos:end="609:52"><name pos:start="609:52" pos:end="609:52">h</name></expr></argument>, <argument pos:start="609:55" pos:end="609:55"><expr pos:start="609:55" pos:end="609:55"><literal type="number" pos:start="609:55" pos:end="609:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="611:13" pos:end="613:27"><if pos:start="611:13" pos:end="613:27">if <condition pos:start="611:16" pos:end="611:71">(<expr pos:start="611:17" pos:end="611:70"><name pos:start="611:17" pos:end="611:19">ret</name> <operator pos:start="611:21" pos:end="611:21">&lt;</operator> <literal type="number" pos:start="611:23" pos:end="611:23">0</literal> <operator pos:start="611:25" pos:end="611:26">&amp;&amp;</operator> <operator pos:start="611:28" pos:end="611:28">(</operator><name pos:start="611:29" pos:end="611:53"><name pos:start="611:29" pos:end="611:29">h</name><operator pos:start="611:30" pos:end="611:31">-&gt;</operator><name pos:start="611:32" pos:end="611:36">avctx</name><operator pos:start="611:37" pos:end="611:38">-&gt;</operator><name pos:start="611:39" pos:end="611:53">err_recognition</name></name> <operator pos:start="611:55" pos:end="611:55">&amp;</operator> <name pos:start="611:57" pos:end="611:69">AV_EF_EXPLODE</name><operator pos:start="611:70" pos:end="611:70">)</operator></expr>)</condition><block type="pseudo" pos:start="613:17" pos:end="613:27"><block_content pos:start="613:17" pos:end="613:27">

                <return pos:start="613:17" pos:end="613:27">return <expr pos:start="613:24" pos:end="613:26"><name pos:start="613:24" pos:end="613:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="615:13" pos:end="615:77"><expr pos:start="615:13" pos:end="615:76"><name pos:start="615:13" pos:end="615:15">ret</name> <operator pos:start="615:17" pos:end="615:17">=</operator> <call pos:start="615:19" pos:end="615:76"><name pos:start="615:19" pos:end="615:49">ff_h264_execute_ref_pic_marking</name><argument_list pos:start="615:50" pos:end="615:76">(<argument pos:start="615:51" pos:end="615:51"><expr pos:start="615:51" pos:end="615:51"><name pos:start="615:51" pos:end="615:51">h</name></expr></argument>, <argument pos:start="615:54" pos:end="615:60"><expr pos:start="615:54" pos:end="615:60"><name pos:start="615:54" pos:end="615:60"><name pos:start="615:54" pos:end="615:54">h</name><operator pos:start="615:55" pos:end="615:56">-&gt;</operator><name pos:start="615:57" pos:end="615:60">mmco</name></name></expr></argument>, <argument pos:start="615:63" pos:end="615:75"><expr pos:start="615:63" pos:end="615:75"><name pos:start="615:63" pos:end="615:75"><name pos:start="615:63" pos:end="615:63">h</name><operator pos:start="615:64" pos:end="615:65">-&gt;</operator><name pos:start="615:66" pos:end="615:75">mmco_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="617:13" pos:end="619:27"><if pos:start="617:13" pos:end="619:27">if <condition pos:start="617:16" pos:end="617:71">(<expr pos:start="617:17" pos:end="617:70"><name pos:start="617:17" pos:end="617:19">ret</name> <operator pos:start="617:21" pos:end="617:21">&lt;</operator> <literal type="number" pos:start="617:23" pos:end="617:23">0</literal> <operator pos:start="617:25" pos:end="617:26">&amp;&amp;</operator> <operator pos:start="617:28" pos:end="617:28">(</operator><name pos:start="617:29" pos:end="617:53"><name pos:start="617:29" pos:end="617:29">h</name><operator pos:start="617:30" pos:end="617:31">-&gt;</operator><name pos:start="617:32" pos:end="617:36">avctx</name><operator pos:start="617:37" pos:end="617:38">-&gt;</operator><name pos:start="617:39" pos:end="617:53">err_recognition</name></name> <operator pos:start="617:55" pos:end="617:55">&amp;</operator> <name pos:start="617:57" pos:end="617:69">AV_EF_EXPLODE</name><operator pos:start="617:70" pos:end="617:70">)</operator></expr>)</condition><block type="pseudo" pos:start="619:17" pos:end="619:27"><block_content pos:start="619:17" pos:end="619:27">

                <return pos:start="619:17" pos:end="619:27">return <expr pos:start="619:24" pos:end="619:26"><name pos:start="619:24" pos:end="619:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="621:13" pos:end="633:74">/* Error concealment: If a ref is missing, copy the previous ref

             * in its place.

             * FIXME: Avoiding a memcpy would be nice, but ref handling makes

             * many assumptions about there being no actual duplicates.

             * FIXME: This does not copy padding for out-of-frame motion

             * vectors.  Given we are concealing a lost frame, this probably

             * is not noticeable by comparison, but it should be fixed. */</comment>

            <if_stmt pos:start="635:13" pos:end="659:13"><if pos:start="635:13" pos:end="659:13">if <condition pos:start="635:16" pos:end="635:35">(<expr pos:start="635:17" pos:end="635:34"><name pos:start="635:17" pos:end="635:34"><name pos:start="635:17" pos:end="635:17">h</name><operator pos:start="635:18" pos:end="635:19">-&gt;</operator><name pos:start="635:20" pos:end="635:34">short_ref_count</name></name></expr>)</condition> <block pos:start="635:37" pos:end="659:13">{<block_content pos:start="637:17" pos:end="657:63">

                <if_stmt pos:start="637:17" pos:end="655:17"><if pos:start="637:17" pos:end="655:17">if <condition pos:start="637:20" pos:end="637:25">(<expr pos:start="637:21" pos:end="637:24"><name pos:start="637:21" pos:end="637:24">prev</name></expr>)</condition> <block pos:start="637:27" pos:end="655:17">{<block_content pos:start="639:21" pos:end="653:57">

                    <expr_stmt pos:start="639:21" pos:end="651:53"><expr pos:start="639:21" pos:end="651:52"><call pos:start="639:21" pos:end="651:52"><name pos:start="639:21" pos:end="639:33">av_image_copy</name><argument_list pos:start="639:34" pos:end="651:52">(<argument pos:start="639:35" pos:end="639:57"><expr pos:start="639:35" pos:end="639:57"><name pos:start="639:35" pos:end="639:49"><name pos:start="639:35" pos:end="639:35">h</name><operator pos:start="639:36" pos:end="639:37">-&gt;</operator><name pos:start="639:38" pos:end="639:46">short_ref</name><index pos:start="639:47" pos:end="639:49">[<expr pos:start="639:48" pos:end="639:48"><literal type="number" pos:start="639:48" pos:end="639:48">0</literal></expr>]</index></name><operator pos:start="639:50" pos:end="639:51">-&gt;</operator><name pos:start="639:52" pos:end="639:57"><name pos:start="639:52" pos:end="639:52">f</name><operator pos:start="639:53" pos:end="639:53">.</operator><name pos:start="639:54" pos:end="639:57">data</name></name></expr></argument>,

                                  <argument pos:start="641:35" pos:end="641:61"><expr pos:start="641:35" pos:end="641:61"><name pos:start="641:35" pos:end="641:49"><name pos:start="641:35" pos:end="641:35">h</name><operator pos:start="641:36" pos:end="641:37">-&gt;</operator><name pos:start="641:38" pos:end="641:46">short_ref</name><index pos:start="641:47" pos:end="641:49">[<expr pos:start="641:48" pos:end="641:48"><literal type="number" pos:start="641:48" pos:end="641:48">0</literal></expr>]</index></name><operator pos:start="641:50" pos:end="641:51">-&gt;</operator><name pos:start="641:52" pos:end="641:61"><name pos:start="641:52" pos:end="641:52">f</name><operator pos:start="641:53" pos:end="641:53">.</operator><name pos:start="641:54" pos:end="641:61">linesize</name></name></expr></argument>,

                                  <argument pos:start="643:35" pos:end="643:64"><expr pos:start="643:35" pos:end="643:64"><operator pos:start="643:35" pos:end="643:35">(</operator><specifier pos:start="643:36" pos:end="643:40">const</specifier> <name pos:start="643:42" pos:end="643:48">uint8_t</name> <operator pos:start="643:50" pos:end="643:50">*</operator><operator pos:start="643:51" pos:end="643:51">*</operator><operator pos:start="643:52" pos:end="643:52">)</operator><name pos:start="643:53" pos:end="643:64"><name pos:start="643:53" pos:end="643:56">prev</name><operator pos:start="643:57" pos:end="643:58">-&gt;</operator><name pos:start="643:59" pos:end="643:59">f</name><operator pos:start="643:60" pos:end="643:60">.</operator><name pos:start="643:61" pos:end="643:64">data</name></name></expr></argument>,

                                  <argument pos:start="645:35" pos:end="645:50"><expr pos:start="645:35" pos:end="645:50"><name pos:start="645:35" pos:end="645:50"><name pos:start="645:35" pos:end="645:38">prev</name><operator pos:start="645:39" pos:end="645:40">-&gt;</operator><name pos:start="645:41" pos:end="645:41">f</name><operator pos:start="645:42" pos:end="645:42">.</operator><name pos:start="645:43" pos:end="645:50">linesize</name></name></expr></argument>,

                                  <argument pos:start="647:35" pos:end="647:51"><expr pos:start="647:35" pos:end="647:51"><name pos:start="647:35" pos:end="647:51"><name pos:start="647:35" pos:end="647:35">h</name><operator pos:start="647:36" pos:end="647:37">-&gt;</operator><name pos:start="647:38" pos:end="647:42">avctx</name><operator pos:start="647:43" pos:end="647:44">-&gt;</operator><name pos:start="647:45" pos:end="647:51">pix_fmt</name></name></expr></argument>,

                                  <argument pos:start="649:35" pos:end="649:51"><expr pos:start="649:35" pos:end="649:51"><name pos:start="649:35" pos:end="649:45"><name pos:start="649:35" pos:end="649:35">h</name><operator pos:start="649:36" pos:end="649:37">-&gt;</operator><name pos:start="649:38" pos:end="649:45">mb_width</name></name>  <operator pos:start="649:48" pos:end="649:48">*</operator> <literal type="number" pos:start="649:50" pos:end="649:51">16</literal></expr></argument>,

                                  <argument pos:start="651:35" pos:end="651:51"><expr pos:start="651:35" pos:end="651:51"><name pos:start="651:35" pos:end="651:46"><name pos:start="651:35" pos:end="651:35">h</name><operator pos:start="651:36" pos:end="651:37">-&gt;</operator><name pos:start="651:38" pos:end="651:46">mb_height</name></name> <operator pos:start="651:48" pos:end="651:48">*</operator> <literal type="number" pos:start="651:50" pos:end="651:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="653:21" pos:end="653:57"><expr pos:start="653:21" pos:end="653:56"><name pos:start="653:21" pos:end="653:35"><name pos:start="653:21" pos:end="653:21">h</name><operator pos:start="653:22" pos:end="653:23">-&gt;</operator><name pos:start="653:24" pos:end="653:32">short_ref</name><index pos:start="653:33" pos:end="653:35">[<expr pos:start="653:34" pos:end="653:34"><literal type="number" pos:start="653:34" pos:end="653:34">0</literal></expr>]</index></name><operator pos:start="653:36" pos:end="653:37">-&gt;</operator><name pos:start="653:38" pos:end="653:40">poc</name> <operator pos:start="653:42" pos:end="653:42">=</operator> <name pos:start="653:44" pos:end="653:52"><name pos:start="653:44" pos:end="653:47">prev</name><operator pos:start="653:48" pos:end="653:49">-&gt;</operator><name pos:start="653:50" pos:end="653:52">poc</name></name> <operator pos:start="653:54" pos:end="653:54">+</operator> <literal type="number" pos:start="653:56" pos:end="653:56">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="657:17" pos:end="657:63"><expr pos:start="657:17" pos:end="657:62"><name pos:start="657:17" pos:end="657:31"><name pos:start="657:17" pos:end="657:17">h</name><operator pos:start="657:18" pos:end="657:19">-&gt;</operator><name pos:start="657:20" pos:end="657:28">short_ref</name><index pos:start="657:29" pos:end="657:31">[<expr pos:start="657:30" pos:end="657:30"><literal type="number" pos:start="657:30" pos:end="657:30">0</literal></expr>]</index></name><operator pos:start="657:32" pos:end="657:33">-&gt;</operator><name pos:start="657:34" pos:end="657:42">frame_num</name> <operator pos:start="657:44" pos:end="657:44">=</operator> <name pos:start="657:46" pos:end="657:62"><name pos:start="657:46" pos:end="657:46">h</name><operator pos:start="657:47" pos:end="657:48">-&gt;</operator><name pos:start="657:49" pos:end="657:62">prev_frame_num</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>



        <comment type="block" pos:start="665:9" pos:end="669:46">/* See if we have a decoded first field looking for a pair...

         * We're using that to see whether to continue decoding in that

         * frame, or to allocate a new one. */</comment>

        <if_stmt pos:start="671:9" pos:end="723:9"><if pos:start="671:9" pos:end="717:9">if <condition pos:start="671:12" pos:end="671:28">(<expr pos:start="671:13" pos:end="671:27"><name pos:start="671:13" pos:end="671:27"><name pos:start="671:13" pos:end="671:14">h0</name><operator pos:start="671:15" pos:end="671:16">-&gt;</operator><name pos:start="671:17" pos:end="671:27">first_field</name></name></expr>)</condition> <block pos:start="671:30" pos:end="717:9">{<block_content pos:start="673:13" pos:end="715:13">

            <expr_stmt pos:start="673:13" pos:end="673:36"><expr pos:start="673:13" pos:end="673:35"><call pos:start="673:13" pos:end="673:35"><name pos:start="673:13" pos:end="673:18">assert</name><argument_list pos:start="673:19" pos:end="673:35">(<argument pos:start="673:20" pos:end="673:34"><expr pos:start="673:20" pos:end="673:34"><name pos:start="673:20" pos:end="673:34"><name pos:start="673:20" pos:end="673:21">h0</name><operator pos:start="673:22" pos:end="673:23">-&gt;</operator><name pos:start="673:24" pos:end="673:34">cur_pic_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="675:13" pos:end="675:46"><expr pos:start="675:13" pos:end="675:45"><call pos:start="675:13" pos:end="675:45"><name pos:start="675:13" pos:end="675:18">assert</name><argument_list pos:start="675:19" pos:end="675:45">(<argument pos:start="675:20" pos:end="675:44"><expr pos:start="675:20" pos:end="675:44"><name pos:start="675:20" pos:end="675:44"><name pos:start="675:20" pos:end="675:21">h0</name><operator pos:start="675:22" pos:end="675:23">-&gt;</operator><name pos:start="675:24" pos:end="675:34">cur_pic_ptr</name><operator pos:start="675:35" pos:end="675:36">-&gt;</operator><name pos:start="675:37" pos:end="675:37">f</name><operator pos:start="675:38" pos:end="675:38">.</operator><name pos:start="675:39" pos:end="675:41">buf</name><index pos:start="675:42" pos:end="675:44">[<expr pos:start="675:43" pos:end="675:43"><literal type="number" pos:start="675:43" pos:end="675:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="677:13" pos:end="677:66"><expr pos:start="677:13" pos:end="677:65"><call pos:start="677:13" pos:end="677:65"><name pos:start="677:13" pos:end="677:18">assert</name><argument_list pos:start="677:19" pos:end="677:65">(<argument pos:start="677:20" pos:end="677:64"><expr pos:start="677:20" pos:end="677:64"><name pos:start="677:20" pos:end="677:45"><name pos:start="677:20" pos:end="677:21">h0</name><operator pos:start="677:22" pos:end="677:23">-&gt;</operator><name pos:start="677:24" pos:end="677:34">cur_pic_ptr</name><operator pos:start="677:35" pos:end="677:36">-&gt;</operator><name pos:start="677:37" pos:end="677:45">reference</name></name> <operator pos:start="677:47" pos:end="677:48">!=</operator> <name pos:start="677:50" pos:end="677:64">DELAYED_PIC_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="681:13" pos:end="681:66">/* figure out if we have a complementary field pair */</comment>

            <if_stmt pos:start="683:13" pos:end="715:13"><if pos:start="683:13" pos:end="693:13">if <condition pos:start="683:16" pos:end="683:80">(<expr pos:start="683:17" pos:end="683:79"><operator pos:start="683:17" pos:end="683:17">!</operator><call pos:start="683:18" pos:end="683:33"><name pos:start="683:18" pos:end="683:30">FIELD_PICTURE</name><argument_list pos:start="683:31" pos:end="683:33">(<argument pos:start="683:32" pos:end="683:32"><expr pos:start="683:32" pos:end="683:32"><name pos:start="683:32" pos:end="683:32">h</name></expr></argument>)</argument_list></call> <operator pos:start="683:35" pos:end="683:36">||</operator> <name pos:start="683:38" pos:end="683:57"><name pos:start="683:38" pos:end="683:38">h</name><operator pos:start="683:39" pos:end="683:40">-&gt;</operator><name pos:start="683:41" pos:end="683:57">picture_structure</name></name> <operator pos:start="683:59" pos:end="683:60">==</operator> <name pos:start="683:62" pos:end="683:79">last_pic_structure</name></expr>)</condition> <block pos:start="683:82" pos:end="693:13">{<block_content pos:start="689:17" pos:end="691:51">

                <comment type="block" pos:start="685:17" pos:end="687:61">/* Previous field is unmatched. Don't display it, but let it

                 * remain for reference if marked as such. */</comment>

                <expr_stmt pos:start="689:17" pos:end="689:39"><expr pos:start="689:17" pos:end="689:38"><name pos:start="689:17" pos:end="689:31"><name pos:start="689:17" pos:end="689:18">h0</name><operator pos:start="689:19" pos:end="689:20">-&gt;</operator><name pos:start="689:21" pos:end="689:31">cur_pic_ptr</name></name> <operator pos:start="689:33" pos:end="689:33">=</operator> <name pos:start="689:35" pos:end="689:38">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="691:17" pos:end="691:51"><expr pos:start="691:17" pos:end="691:50"><name pos:start="691:17" pos:end="691:31"><name pos:start="691:17" pos:end="691:18">h0</name><operator pos:start="691:19" pos:end="691:20">-&gt;</operator><name pos:start="691:21" pos:end="691:31">first_field</name></name> <operator pos:start="691:33" pos:end="691:33">=</operator> <call pos:start="691:35" pos:end="691:50"><name pos:start="691:35" pos:end="691:47">FIELD_PICTURE</name><argument_list pos:start="691:48" pos:end="691:50">(<argument pos:start="691:49" pos:end="691:49"><expr pos:start="691:49" pos:end="691:49"><name pos:start="691:49" pos:end="691:49">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="693:15" pos:end="715:13">else <block pos:start="693:20" pos:end="715:13">{<block_content pos:start="695:17" pos:end="713:17">

                <if_stmt pos:start="695:17" pos:end="713:17"><if pos:start="695:17" pos:end="707:17">if <condition pos:start="695:20" pos:end="695:63">(<expr pos:start="695:21" pos:end="695:62"><name pos:start="695:21" pos:end="695:46"><name pos:start="695:21" pos:end="695:22">h0</name><operator pos:start="695:23" pos:end="695:24">-&gt;</operator><name pos:start="695:25" pos:end="695:35">cur_pic_ptr</name><operator pos:start="695:36" pos:end="695:37">-&gt;</operator><name pos:start="695:38" pos:end="695:46">frame_num</name></name> <operator pos:start="695:48" pos:end="695:49">!=</operator> <name pos:start="695:51" pos:end="695:62"><name pos:start="695:51" pos:end="695:51">h</name><operator pos:start="695:52" pos:end="695:53">-&gt;</operator><name pos:start="695:54" pos:end="695:62">frame_num</name></name></expr>)</condition> <block pos:start="695:65" pos:end="707:17">{<block_content pos:start="703:21" pos:end="705:43">

                    <comment type="block" pos:start="697:21" pos:end="701:60">/* This and the previous field had different frame_nums.

                     * Consider this field first in pair. Throw away previous

                     * one except for reference purposes. */</comment>

                    <expr_stmt pos:start="703:21" pos:end="703:40"><expr pos:start="703:21" pos:end="703:39"><name pos:start="703:21" pos:end="703:35"><name pos:start="703:21" pos:end="703:22">h0</name><operator pos:start="703:23" pos:end="703:24">-&gt;</operator><name pos:start="703:25" pos:end="703:35">first_field</name></name> <operator pos:start="703:37" pos:end="703:37">=</operator> <literal type="number" pos:start="703:39" pos:end="703:39">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="705:21" pos:end="705:43"><expr pos:start="705:21" pos:end="705:42"><name pos:start="705:21" pos:end="705:35"><name pos:start="705:21" pos:end="705:22">h0</name><operator pos:start="705:23" pos:end="705:24">-&gt;</operator><name pos:start="705:25" pos:end="705:35">cur_pic_ptr</name></name> <operator pos:start="705:37" pos:end="705:37">=</operator> <name pos:start="705:39" pos:end="705:42">NULL</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="707:19" pos:end="713:17">else <block pos:start="707:24" pos:end="713:17">{<block_content pos:start="711:21" pos:end="711:40">

                    <comment type="block" pos:start="709:21" pos:end="709:60">/* Second field in complementary pair */</comment>

                    <expr_stmt pos:start="711:21" pos:end="711:40"><expr pos:start="711:21" pos:end="711:39"><name pos:start="711:21" pos:end="711:35"><name pos:start="711:21" pos:end="711:22">h0</name><operator pos:start="711:23" pos:end="711:24">-&gt;</operator><name pos:start="711:25" pos:end="711:35">first_field</name></name> <operator pos:start="711:37" pos:end="711:37">=</operator> <literal type="number" pos:start="711:39" pos:end="711:39">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="717:11" pos:end="723:9">else <block pos:start="717:16" pos:end="723:9">{<block_content pos:start="721:13" pos:end="721:47">

            <comment type="block" pos:start="719:13" pos:end="719:74">/* Frame or first field in a potentially complementary pair */</comment>

            <expr_stmt pos:start="721:13" pos:end="721:47"><expr pos:start="721:13" pos:end="721:46"><name pos:start="721:13" pos:end="721:27"><name pos:start="721:13" pos:end="721:14">h0</name><operator pos:start="721:15" pos:end="721:16">-&gt;</operator><name pos:start="721:17" pos:end="721:27">first_field</name></name> <operator pos:start="721:29" pos:end="721:29">=</operator> <call pos:start="721:31" pos:end="721:46"><name pos:start="721:31" pos:end="721:43">FIELD_PICTURE</name><argument_list pos:start="721:44" pos:end="721:46">(<argument pos:start="721:45" pos:end="721:45"><expr pos:start="721:45" pos:end="721:45"><name pos:start="721:45" pos:end="721:45">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="727:9" pos:end="741:9"><if pos:start="727:9" pos:end="737:9">if <condition pos:start="727:12" pos:end="727:49">(<expr pos:start="727:13" pos:end="727:48"><operator pos:start="727:13" pos:end="727:13">!</operator><call pos:start="727:14" pos:end="727:29"><name pos:start="727:14" pos:end="727:26">FIELD_PICTURE</name><argument_list pos:start="727:27" pos:end="727:29">(<argument pos:start="727:28" pos:end="727:28"><expr pos:start="727:28" pos:end="727:28"><name pos:start="727:28" pos:end="727:28">h</name></expr></argument>)</argument_list></call> <operator pos:start="727:31" pos:end="727:32">||</operator> <name pos:start="727:34" pos:end="727:48"><name pos:start="727:34" pos:end="727:35">h0</name><operator pos:start="727:36" pos:end="727:37">-&gt;</operator><name pos:start="727:38" pos:end="727:48">first_field</name></name></expr>)</condition> <block pos:start="727:51" pos:end="737:9">{<block_content pos:start="729:13" pos:end="735:13">

            <if_stmt pos:start="729:13" pos:end="735:13"><if pos:start="729:13" pos:end="735:13">if <condition pos:start="729:16" pos:end="729:40">(<expr pos:start="729:17" pos:end="729:39"><call pos:start="729:17" pos:end="729:35"><name pos:start="729:17" pos:end="729:32">h264_frame_start</name><argument_list pos:start="729:33" pos:end="729:35">(<argument pos:start="729:34" pos:end="729:34"><expr pos:start="729:34" pos:end="729:34"><name pos:start="729:34" pos:end="729:34">h</name></expr></argument>)</argument_list></call> <operator pos:start="729:37" pos:end="729:37">&lt;</operator> <literal type="number" pos:start="729:39" pos:end="729:39">0</literal></expr>)</condition> <block pos:start="729:42" pos:end="735:13">{<block_content pos:start="731:17" pos:end="733:43">

                <expr_stmt pos:start="731:17" pos:end="731:36"><expr pos:start="731:17" pos:end="731:35"><name pos:start="731:17" pos:end="731:31"><name pos:start="731:17" pos:end="731:18">h0</name><operator pos:start="731:19" pos:end="731:20">-&gt;</operator><name pos:start="731:21" pos:end="731:31">first_field</name></name> <operator pos:start="731:33" pos:end="731:33">=</operator> <literal type="number" pos:start="731:35" pos:end="731:35">0</literal></expr>;</expr_stmt>

                <return pos:start="733:17" pos:end="733:43">return <expr pos:start="733:24" pos:end="733:42"><name pos:start="733:24" pos:end="733:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="737:11" pos:end="741:9">else <block pos:start="737:16" pos:end="741:9">{<block_content pos:start="739:13" pos:end="739:42">

            <expr_stmt pos:start="739:13" pos:end="739:42"><expr pos:start="739:13" pos:end="739:41"><call pos:start="739:13" pos:end="739:41"><name pos:start="739:13" pos:end="739:35">release_unused_pictures</name><argument_list pos:start="739:36" pos:end="739:41">(<argument pos:start="739:37" pos:end="739:37"><expr pos:start="739:37" pos:end="739:37"><name pos:start="739:37" pos:end="739:37">h</name></expr></argument>, <argument pos:start="739:40" pos:end="739:40"><expr pos:start="739:40" pos:end="739:40"><literal type="number" pos:start="739:40" pos:end="739:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="745:5" pos:end="747:19"><if pos:start="745:5" pos:end="747:19">if <condition pos:start="745:8" pos:end="745:50">(<expr pos:start="745:9" pos:end="745:49"><name pos:start="745:9" pos:end="745:9">h</name> <operator pos:start="745:11" pos:end="745:12">!=</operator> <name pos:start="745:14" pos:end="745:15">h0</name> <operator pos:start="745:17" pos:end="745:18">&amp;&amp;</operator> <operator pos:start="745:20" pos:end="745:20">(</operator><name pos:start="745:21" pos:end="745:23">ret</name> <operator pos:start="745:25" pos:end="745:25">=</operator> <call pos:start="745:27" pos:end="745:44"><name pos:start="745:27" pos:end="745:37">clone_slice</name><argument_list pos:start="745:38" pos:end="745:44">(<argument pos:start="745:39" pos:end="745:39"><expr pos:start="745:39" pos:end="745:39"><name pos:start="745:39" pos:end="745:39">h</name></expr></argument>, <argument pos:start="745:42" pos:end="745:43"><expr pos:start="745:42" pos:end="745:43"><name pos:start="745:42" pos:end="745:43">h0</name></expr></argument>)</argument_list></call><operator pos:start="745:45" pos:end="745:45">)</operator> <operator pos:start="745:47" pos:end="745:47">&lt;</operator> <literal type="number" pos:start="745:49" pos:end="745:49">0</literal></expr>)</condition><block type="pseudo" pos:start="747:9" pos:end="747:19"><block_content pos:start="747:9" pos:end="747:19">

        <return pos:start="747:9" pos:end="747:19">return <expr pos:start="747:16" pos:end="747:18"><name pos:start="747:16" pos:end="747:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="751:5" pos:end="751:45"><expr pos:start="751:5" pos:end="751:44"><name pos:start="751:5" pos:end="751:29"><name pos:start="751:5" pos:end="751:5">h</name><operator pos:start="751:6" pos:end="751:7">-&gt;</operator><name pos:start="751:8" pos:end="751:18">cur_pic_ptr</name><operator pos:start="751:19" pos:end="751:20">-&gt;</operator><name pos:start="751:21" pos:end="751:29">frame_num</name></name> <operator pos:start="751:31" pos:end="751:31">=</operator> <name pos:start="751:33" pos:end="751:44"><name pos:start="751:33" pos:end="751:33">h</name><operator pos:start="751:34" pos:end="751:35">-&gt;</operator><name pos:start="751:36" pos:end="751:44">frame_num</name></name></expr>;</expr_stmt> <comment type="line" pos:start="751:47" pos:end="751:72">// FIXME frame_num cleanup</comment>



    <expr_stmt pos:start="755:5" pos:end="755:52"><expr pos:start="755:5" pos:end="755:51"><call pos:start="755:5" pos:end="755:51"><name pos:start="755:5" pos:end="755:10">assert</name><argument_list pos:start="755:11" pos:end="755:51">(<argument pos:start="755:12" pos:end="755:50"><expr pos:start="755:12" pos:end="755:50"><name pos:start="755:12" pos:end="755:20"><name pos:start="755:12" pos:end="755:12">h</name><operator pos:start="755:13" pos:end="755:14">-&gt;</operator><name pos:start="755:15" pos:end="755:20">mb_num</name></name> <operator pos:start="755:22" pos:end="755:23">==</operator> <name pos:start="755:25" pos:end="755:35"><name pos:start="755:25" pos:end="755:25">h</name><operator pos:start="755:26" pos:end="755:27">-&gt;</operator><name pos:start="755:28" pos:end="755:35">mb_width</name></name> <operator pos:start="755:37" pos:end="755:37">*</operator> <name pos:start="755:39" pos:end="755:50"><name pos:start="755:39" pos:end="755:39">h</name><operator pos:start="755:40" pos:end="755:41">-&gt;</operator><name pos:start="755:42" pos:end="755:50">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="757:5" pos:end="765:5"><if pos:start="757:5" pos:end="765:5">if <condition pos:start="757:8" pos:end="759:39">(<expr pos:start="757:9" pos:end="759:38"><name pos:start="757:9" pos:end="757:25">first_mb_in_slice</name> <operator pos:start="757:27" pos:end="757:28">&lt;&lt;</operator> <call pos:start="757:30" pos:end="757:54"><name pos:start="757:30" pos:end="757:51">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="757:52" pos:end="757:54">(<argument pos:start="757:53" pos:end="757:53"><expr pos:start="757:53" pos:end="757:53"><name pos:start="757:53" pos:end="757:53">h</name></expr></argument>)</argument_list></call> <operator pos:start="757:56" pos:end="757:57">&gt;=</operator> <name pos:start="757:59" pos:end="757:67"><name pos:start="757:59" pos:end="757:59">h</name><operator pos:start="757:60" pos:end="757:61">-&gt;</operator><name pos:start="757:62" pos:end="757:67">mb_num</name></name> <operator pos:start="757:69" pos:end="757:70">||</operator>

        <name pos:start="759:9" pos:end="759:25">first_mb_in_slice</name> <operator pos:start="759:27" pos:end="759:28">&gt;=</operator> <name pos:start="759:30" pos:end="759:38"><name pos:start="759:30" pos:end="759:30">h</name><operator pos:start="759:31" pos:end="759:32">-&gt;</operator><name pos:start="759:33" pos:end="759:38">mb_num</name></name></expr>)</condition> <block pos:start="759:41" pos:end="765:5">{<block_content pos:start="761:9" pos:end="763:35">

        <expr_stmt pos:start="761:9" pos:end="761:71"><expr pos:start="761:9" pos:end="761:70"><call pos:start="761:9" pos:end="761:70"><name pos:start="761:9" pos:end="761:14">av_log</name><argument_list pos:start="761:15" pos:end="761:70">(<argument pos:start="761:16" pos:end="761:23"><expr pos:start="761:16" pos:end="761:23"><name pos:start="761:16" pos:end="761:23"><name pos:start="761:16" pos:end="761:16">h</name><operator pos:start="761:17" pos:end="761:18">-&gt;</operator><name pos:start="761:19" pos:end="761:23">avctx</name></name></expr></argument>, <argument pos:start="761:26" pos:end="761:37"><expr pos:start="761:26" pos:end="761:37"><name pos:start="761:26" pos:end="761:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="761:40" pos:end="761:69"><expr pos:start="761:40" pos:end="761:69"><literal type="string" pos:start="761:40" pos:end="761:69">"first_mb_in_slice overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="763:9" pos:end="763:35">return <expr pos:start="763:16" pos:end="763:34"><name pos:start="763:16" pos:end="763:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="767:5" pos:end="767:64"><expr pos:start="767:5" pos:end="767:63"><name pos:start="767:5" pos:end="767:18"><name pos:start="767:5" pos:end="767:5">h</name><operator pos:start="767:6" pos:end="767:7">-&gt;</operator><name pos:start="767:8" pos:end="767:18">resync_mb_x</name></name> <operator pos:start="767:20" pos:end="767:20">=</operator> <name pos:start="767:22" pos:end="767:28"><name pos:start="767:22" pos:end="767:22">h</name><operator pos:start="767:23" pos:end="767:24">-&gt;</operator><name pos:start="767:25" pos:end="767:28">mb_x</name></name> <operator pos:start="767:30" pos:end="767:30">=</operator>  <name pos:start="767:33" pos:end="767:49">first_mb_in_slice</name> <operator pos:start="767:51" pos:end="767:51">%</operator> <name pos:start="767:53" pos:end="767:63"><name pos:start="767:53" pos:end="767:53">h</name><operator pos:start="767:54" pos:end="767:55">-&gt;</operator><name pos:start="767:56" pos:end="767:63">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="769:5" pos:end="771:57"><expr pos:start="769:5" pos:end="771:56"><name pos:start="769:5" pos:end="769:18"><name pos:start="769:5" pos:end="769:5">h</name><operator pos:start="769:6" pos:end="769:7">-&gt;</operator><name pos:start="769:8" pos:end="769:18">resync_mb_y</name></name> <operator pos:start="769:20" pos:end="769:20">=</operator> <name pos:start="769:22" pos:end="769:28"><name pos:start="769:22" pos:end="769:22">h</name><operator pos:start="769:23" pos:end="769:24">-&gt;</operator><name pos:start="769:25" pos:end="769:28">mb_y</name></name> <operator pos:start="769:30" pos:end="769:30">=</operator> <operator pos:start="769:32" pos:end="769:32">(</operator><name pos:start="769:33" pos:end="769:49">first_mb_in_slice</name> <operator pos:start="769:51" pos:end="769:51">/</operator> <name pos:start="769:53" pos:end="769:63"><name pos:start="769:53" pos:end="769:53">h</name><operator pos:start="769:54" pos:end="769:55">-&gt;</operator><name pos:start="769:56" pos:end="769:63">mb_width</name></name><operator pos:start="769:64" pos:end="769:64">)</operator> <operator pos:start="769:66" pos:end="769:67">&lt;&lt;</operator>

                               <call pos:start="771:32" pos:end="771:56"><name pos:start="771:32" pos:end="771:53">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="771:54" pos:end="771:56">(<argument pos:start="771:55" pos:end="771:55"><expr pos:start="771:55" pos:end="771:55"><name pos:start="771:55" pos:end="771:55">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="773:5" pos:end="775:47"><if pos:start="773:5" pos:end="775:47">if <condition pos:start="773:8" pos:end="773:50">(<expr pos:start="773:9" pos:end="773:49"><name pos:start="773:9" pos:end="773:28"><name pos:start="773:9" pos:end="773:9">h</name><operator pos:start="773:10" pos:end="773:11">-&gt;</operator><name pos:start="773:12" pos:end="773:28">picture_structure</name></name> <operator pos:start="773:30" pos:end="773:31">==</operator> <name pos:start="773:33" pos:end="773:49">PICT_BOTTOM_FIELD</name></expr>)</condition><block type="pseudo" pos:start="775:9" pos:end="775:47"><block_content pos:start="775:9" pos:end="775:47">

        <expr_stmt pos:start="775:9" pos:end="775:47"><expr pos:start="775:9" pos:end="775:46"><name pos:start="775:9" pos:end="775:22"><name pos:start="775:9" pos:end="775:9">h</name><operator pos:start="775:10" pos:end="775:11">-&gt;</operator><name pos:start="775:12" pos:end="775:22">resync_mb_y</name></name> <operator pos:start="775:24" pos:end="775:24">=</operator> <name pos:start="775:26" pos:end="775:32"><name pos:start="775:26" pos:end="775:26">h</name><operator pos:start="775:27" pos:end="775:28">-&gt;</operator><name pos:start="775:29" pos:end="775:32">mb_y</name></name> <operator pos:start="775:34" pos:end="775:34">=</operator> <name pos:start="775:36" pos:end="775:42"><name pos:start="775:36" pos:end="775:36">h</name><operator pos:start="775:37" pos:end="775:38">-&gt;</operator><name pos:start="775:39" pos:end="775:42">mb_y</name></name> <operator pos:start="775:44" pos:end="775:44">+</operator> <literal type="number" pos:start="775:46" pos:end="775:46">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="777:5" pos:end="777:35"><expr pos:start="777:5" pos:end="777:34"><call pos:start="777:5" pos:end="777:34"><name pos:start="777:5" pos:end="777:10">assert</name><argument_list pos:start="777:11" pos:end="777:34">(<argument pos:start="777:12" pos:end="777:33"><expr pos:start="777:12" pos:end="777:33"><name pos:start="777:12" pos:end="777:18"><name pos:start="777:12" pos:end="777:12">h</name><operator pos:start="777:13" pos:end="777:14">-&gt;</operator><name pos:start="777:15" pos:end="777:18">mb_y</name></name> <operator pos:start="777:20" pos:end="777:20">&lt;</operator> <name pos:start="777:22" pos:end="777:33"><name pos:start="777:22" pos:end="777:22">h</name><operator pos:start="777:23" pos:end="777:24">-&gt;</operator><name pos:start="777:25" pos:end="777:33">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="781:5" pos:end="793:5"><if pos:start="781:5" pos:end="787:5">if <condition pos:start="781:8" pos:end="781:43">(<expr pos:start="781:9" pos:end="781:42"><name pos:start="781:9" pos:end="781:28"><name pos:start="781:9" pos:end="781:9">h</name><operator pos:start="781:10" pos:end="781:11">-&gt;</operator><name pos:start="781:12" pos:end="781:28">picture_structure</name></name> <operator pos:start="781:30" pos:end="781:31">==</operator> <name pos:start="781:33" pos:end="781:42">PICT_FRAME</name></expr>)</condition> <block pos:start="781:45" pos:end="787:5">{<block_content pos:start="783:9" pos:end="785:57">

        <expr_stmt pos:start="783:9" pos:end="783:39"><expr pos:start="783:9" pos:end="783:38"><name pos:start="783:9" pos:end="783:23"><name pos:start="783:9" pos:end="783:9">h</name><operator pos:start="783:10" pos:end="783:11">-&gt;</operator><name pos:start="783:12" pos:end="783:23">curr_pic_num</name></name> <operator pos:start="783:25" pos:end="783:25">=</operator> <name pos:start="783:27" pos:end="783:38"><name pos:start="783:27" pos:end="783:27">h</name><operator pos:start="783:28" pos:end="783:29">-&gt;</operator><name pos:start="783:30" pos:end="783:38">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="785:9" pos:end="785:57"><expr pos:start="785:9" pos:end="785:56"><name pos:start="785:9" pos:end="785:22"><name pos:start="785:9" pos:end="785:9">h</name><operator pos:start="785:10" pos:end="785:11">-&gt;</operator><name pos:start="785:12" pos:end="785:22">max_pic_num</name></name>  <operator pos:start="785:25" pos:end="785:25">=</operator> <literal type="number" pos:start="785:27" pos:end="785:27">1</literal> <operator pos:start="785:29" pos:end="785:30">&lt;&lt;</operator> <name pos:start="785:32" pos:end="785:56"><name pos:start="785:32" pos:end="785:32">h</name><operator pos:start="785:33" pos:end="785:34">-&gt;</operator><name pos:start="785:35" pos:end="785:37">sps</name><operator pos:start="785:38" pos:end="785:38">.</operator><name pos:start="785:39" pos:end="785:56">log2_max_frame_num</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="787:7" pos:end="793:5">else <block pos:start="787:12" pos:end="793:5">{<block_content pos:start="789:9" pos:end="791:63">

        <expr_stmt pos:start="789:9" pos:end="789:47"><expr pos:start="789:9" pos:end="789:46"><name pos:start="789:9" pos:end="789:23"><name pos:start="789:9" pos:end="789:9">h</name><operator pos:start="789:10" pos:end="789:11">-&gt;</operator><name pos:start="789:12" pos:end="789:23">curr_pic_num</name></name> <operator pos:start="789:25" pos:end="789:25">=</operator> <literal type="number" pos:start="789:27" pos:end="789:27">2</literal> <operator pos:start="789:29" pos:end="789:29">*</operator> <name pos:start="789:31" pos:end="789:42"><name pos:start="789:31" pos:end="789:31">h</name><operator pos:start="789:32" pos:end="789:33">-&gt;</operator><name pos:start="789:34" pos:end="789:42">frame_num</name></name> <operator pos:start="789:44" pos:end="789:44">+</operator> <literal type="number" pos:start="789:46" pos:end="789:46">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="791:9" pos:end="791:63"><expr pos:start="791:9" pos:end="791:62"><name pos:start="791:9" pos:end="791:22"><name pos:start="791:9" pos:end="791:9">h</name><operator pos:start="791:10" pos:end="791:11">-&gt;</operator><name pos:start="791:12" pos:end="791:22">max_pic_num</name></name>  <operator pos:start="791:25" pos:end="791:25">=</operator> <literal type="number" pos:start="791:27" pos:end="791:27">1</literal> <operator pos:start="791:29" pos:end="791:30">&lt;&lt;</operator> <operator pos:start="791:32" pos:end="791:32">(</operator><name pos:start="791:33" pos:end="791:57"><name pos:start="791:33" pos:end="791:33">h</name><operator pos:start="791:34" pos:end="791:35">-&gt;</operator><name pos:start="791:36" pos:end="791:38">sps</name><operator pos:start="791:39" pos:end="791:39">.</operator><name pos:start="791:40" pos:end="791:57">log2_max_frame_num</name></name> <operator pos:start="791:59" pos:end="791:59">+</operator> <literal type="number" pos:start="791:61" pos:end="791:61">1</literal><operator pos:start="791:62" pos:end="791:62">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="797:5" pos:end="799:30"><if pos:start="797:5" pos:end="799:30">if <condition pos:start="797:8" pos:end="797:42">(<expr pos:start="797:9" pos:end="797:41"><name pos:start="797:9" pos:end="797:24"><name pos:start="797:9" pos:end="797:9">h</name><operator pos:start="797:10" pos:end="797:11">-&gt;</operator><name pos:start="797:12" pos:end="797:24">nal_unit_type</name></name> <operator pos:start="797:26" pos:end="797:27">==</operator> <name pos:start="797:29" pos:end="797:41">NAL_IDR_SLICE</name></expr>)</condition><block type="pseudo" pos:start="799:9" pos:end="799:30"><block_content pos:start="799:9" pos:end="799:30">

        <expr_stmt pos:start="799:9" pos:end="799:30"><expr pos:start="799:9" pos:end="799:29"><call pos:start="799:9" pos:end="799:29"><name pos:start="799:9" pos:end="799:21">get_ue_golomb</name><argument_list pos:start="799:22" pos:end="799:29">(<argument pos:start="799:23" pos:end="799:28"><expr pos:start="799:23" pos:end="799:28"><operator pos:start="799:23" pos:end="799:23">&amp;</operator><name pos:start="799:24" pos:end="799:28"><name pos:start="799:24" pos:end="799:24">h</name><operator pos:start="799:25" pos:end="799:26">-&gt;</operator><name pos:start="799:27" pos:end="799:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="799:32" pos:end="799:47">/* idr_pic_id */</comment>



    <if_stmt pos:start="803:5" pos:end="813:5"><if pos:start="803:5" pos:end="813:5">if <condition pos:start="803:8" pos:end="803:29">(<expr pos:start="803:9" pos:end="803:28"><name pos:start="803:9" pos:end="803:23"><name pos:start="803:9" pos:end="803:9">h</name><operator pos:start="803:10" pos:end="803:11">-&gt;</operator><name pos:start="803:12" pos:end="803:14">sps</name><operator pos:start="803:15" pos:end="803:15">.</operator><name pos:start="803:16" pos:end="803:23">poc_type</name></name> <operator pos:start="803:25" pos:end="803:26">==</operator> <literal type="number" pos:start="803:28" pos:end="803:28">0</literal></expr>)</condition> <block pos:start="803:31" pos:end="813:5">{<block_content pos:start="805:9" pos:end="811:56">

        <expr_stmt pos:start="805:9" pos:end="805:63"><expr pos:start="805:9" pos:end="805:62"><name pos:start="805:9" pos:end="805:18"><name pos:start="805:9" pos:end="805:9">h</name><operator pos:start="805:10" pos:end="805:11">-&gt;</operator><name pos:start="805:12" pos:end="805:18">poc_lsb</name></name> <operator pos:start="805:20" pos:end="805:20">=</operator> <call pos:start="805:22" pos:end="805:62"><name pos:start="805:22" pos:end="805:29">get_bits</name><argument_list pos:start="805:30" pos:end="805:62">(<argument pos:start="805:31" pos:end="805:36"><expr pos:start="805:31" pos:end="805:36"><operator pos:start="805:31" pos:end="805:31">&amp;</operator><name pos:start="805:32" pos:end="805:36"><name pos:start="805:32" pos:end="805:32">h</name><operator pos:start="805:33" pos:end="805:34">-&gt;</operator><name pos:start="805:35" pos:end="805:36">gb</name></name></expr></argument>, <argument pos:start="805:39" pos:end="805:61"><expr pos:start="805:39" pos:end="805:61"><name pos:start="805:39" pos:end="805:61"><name pos:start="805:39" pos:end="805:39">h</name><operator pos:start="805:40" pos:end="805:41">-&gt;</operator><name pos:start="805:42" pos:end="805:44">sps</name><operator pos:start="805:45" pos:end="805:45">.</operator><name pos:start="805:46" pos:end="805:61">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="809:9" pos:end="811:56"><if pos:start="809:9" pos:end="811:56">if <condition pos:start="809:12" pos:end="809:80">(<expr pos:start="809:13" pos:end="809:79"><name pos:start="809:13" pos:end="809:36"><name pos:start="809:13" pos:end="809:13">h</name><operator pos:start="809:14" pos:end="809:15">-&gt;</operator><name pos:start="809:16" pos:end="809:18">pps</name><operator pos:start="809:19" pos:end="809:19">.</operator><name pos:start="809:20" pos:end="809:36">pic_order_present</name></name> <operator pos:start="809:38" pos:end="809:39">==</operator> <literal type="number" pos:start="809:41" pos:end="809:41">1</literal> <operator pos:start="809:43" pos:end="809:44">&amp;&amp;</operator> <name pos:start="809:46" pos:end="809:65"><name pos:start="809:46" pos:end="809:46">h</name><operator pos:start="809:47" pos:end="809:48">-&gt;</operator><name pos:start="809:49" pos:end="809:65">picture_structure</name></name> <operator pos:start="809:67" pos:end="809:68">==</operator> <name pos:start="809:70" pos:end="809:79">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="811:13" pos:end="811:56"><block_content pos:start="811:13" pos:end="811:56">

            <expr_stmt pos:start="811:13" pos:end="811:56"><expr pos:start="811:13" pos:end="811:55"><name pos:start="811:13" pos:end="811:31"><name pos:start="811:13" pos:end="811:13">h</name><operator pos:start="811:14" pos:end="811:15">-&gt;</operator><name pos:start="811:16" pos:end="811:31">delta_poc_bottom</name></name> <operator pos:start="811:33" pos:end="811:33">=</operator> <call pos:start="811:35" pos:end="811:55"><name pos:start="811:35" pos:end="811:47">get_se_golomb</name><argument_list pos:start="811:48" pos:end="811:55">(<argument pos:start="811:49" pos:end="811:54"><expr pos:start="811:49" pos:end="811:54"><operator pos:start="811:49" pos:end="811:49">&amp;</operator><name pos:start="811:50" pos:end="811:54"><name pos:start="811:50" pos:end="811:50">h</name><operator pos:start="811:51" pos:end="811:52">-&gt;</operator><name pos:start="811:53" pos:end="811:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="817:5" pos:end="827:5"><if pos:start="817:5" pos:end="827:5">if <condition pos:start="817:8" pos:end="817:73">(<expr pos:start="817:9" pos:end="817:72"><name pos:start="817:9" pos:end="817:23"><name pos:start="817:9" pos:end="817:9">h</name><operator pos:start="817:10" pos:end="817:11">-&gt;</operator><name pos:start="817:12" pos:end="817:14">sps</name><operator pos:start="817:15" pos:end="817:15">.</operator><name pos:start="817:16" pos:end="817:23">poc_type</name></name> <operator pos:start="817:25" pos:end="817:26">==</operator> <literal type="number" pos:start="817:28" pos:end="817:28">1</literal> <operator pos:start="817:30" pos:end="817:31">&amp;&amp;</operator> <operator pos:start="817:33" pos:end="817:33">!</operator><name pos:start="817:34" pos:end="817:72"><name pos:start="817:34" pos:end="817:34">h</name><operator pos:start="817:35" pos:end="817:36">-&gt;</operator><name pos:start="817:37" pos:end="817:39">sps</name><operator pos:start="817:40" pos:end="817:40">.</operator><name pos:start="817:41" pos:end="817:72">delta_pic_order_always_zero_flag</name></name></expr>)</condition> <block pos:start="817:75" pos:end="827:5">{<block_content pos:start="819:9" pos:end="825:52">

        <expr_stmt pos:start="819:9" pos:end="819:48"><expr pos:start="819:9" pos:end="819:47"><name pos:start="819:9" pos:end="819:23"><name pos:start="819:9" pos:end="819:9">h</name><operator pos:start="819:10" pos:end="819:11">-&gt;</operator><name pos:start="819:12" pos:end="819:20">delta_poc</name><index pos:start="819:21" pos:end="819:23">[<expr pos:start="819:22" pos:end="819:22"><literal type="number" pos:start="819:22" pos:end="819:22">0</literal></expr>]</index></name> <operator pos:start="819:25" pos:end="819:25">=</operator> <call pos:start="819:27" pos:end="819:47"><name pos:start="819:27" pos:end="819:39">get_se_golomb</name><argument_list pos:start="819:40" pos:end="819:47">(<argument pos:start="819:41" pos:end="819:46"><expr pos:start="819:41" pos:end="819:46"><operator pos:start="819:41" pos:end="819:41">&amp;</operator><name pos:start="819:42" pos:end="819:46"><name pos:start="819:42" pos:end="819:42">h</name><operator pos:start="819:43" pos:end="819:44">-&gt;</operator><name pos:start="819:45" pos:end="819:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="823:9" pos:end="825:52"><if pos:start="823:9" pos:end="825:52">if <condition pos:start="823:12" pos:end="823:80">(<expr pos:start="823:13" pos:end="823:79"><name pos:start="823:13" pos:end="823:36"><name pos:start="823:13" pos:end="823:13">h</name><operator pos:start="823:14" pos:end="823:15">-&gt;</operator><name pos:start="823:16" pos:end="823:18">pps</name><operator pos:start="823:19" pos:end="823:19">.</operator><name pos:start="823:20" pos:end="823:36">pic_order_present</name></name> <operator pos:start="823:38" pos:end="823:39">==</operator> <literal type="number" pos:start="823:41" pos:end="823:41">1</literal> <operator pos:start="823:43" pos:end="823:44">&amp;&amp;</operator> <name pos:start="823:46" pos:end="823:65"><name pos:start="823:46" pos:end="823:46">h</name><operator pos:start="823:47" pos:end="823:48">-&gt;</operator><name pos:start="823:49" pos:end="823:65">picture_structure</name></name> <operator pos:start="823:67" pos:end="823:68">==</operator> <name pos:start="823:70" pos:end="823:79">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="825:13" pos:end="825:52"><block_content pos:start="825:13" pos:end="825:52">

            <expr_stmt pos:start="825:13" pos:end="825:52"><expr pos:start="825:13" pos:end="825:51"><name pos:start="825:13" pos:end="825:27"><name pos:start="825:13" pos:end="825:13">h</name><operator pos:start="825:14" pos:end="825:15">-&gt;</operator><name pos:start="825:16" pos:end="825:24">delta_poc</name><index pos:start="825:25" pos:end="825:27">[<expr pos:start="825:26" pos:end="825:26"><literal type="number" pos:start="825:26" pos:end="825:26">1</literal></expr>]</index></name> <operator pos:start="825:29" pos:end="825:29">=</operator> <call pos:start="825:31" pos:end="825:51"><name pos:start="825:31" pos:end="825:43">get_se_golomb</name><argument_list pos:start="825:44" pos:end="825:51">(<argument pos:start="825:45" pos:end="825:50"><expr pos:start="825:45" pos:end="825:50"><operator pos:start="825:45" pos:end="825:45">&amp;</operator><name pos:start="825:46" pos:end="825:50"><name pos:start="825:46" pos:end="825:46">h</name><operator pos:start="825:47" pos:end="825:48">-&gt;</operator><name pos:start="825:49" pos:end="825:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="831:5" pos:end="831:68"><expr pos:start="831:5" pos:end="831:67"><call pos:start="831:5" pos:end="831:67"><name pos:start="831:5" pos:end="831:15">ff_init_poc</name><argument_list pos:start="831:16" pos:end="831:67">(<argument pos:start="831:17" pos:end="831:17"><expr pos:start="831:17" pos:end="831:17"><name pos:start="831:17" pos:end="831:17">h</name></expr></argument>, <argument pos:start="831:20" pos:end="831:44"><expr pos:start="831:20" pos:end="831:44"><name pos:start="831:20" pos:end="831:44"><name pos:start="831:20" pos:end="831:20">h</name><operator pos:start="831:21" pos:end="831:22">-&gt;</operator><name pos:start="831:23" pos:end="831:33">cur_pic_ptr</name><operator pos:start="831:34" pos:end="831:35">-&gt;</operator><name pos:start="831:36" pos:end="831:44">field_poc</name></name></expr></argument>, <argument pos:start="831:47" pos:end="831:66"><expr pos:start="831:47" pos:end="831:66"><operator pos:start="831:47" pos:end="831:47">&amp;</operator><name pos:start="831:48" pos:end="831:66"><name pos:start="831:48" pos:end="831:48">h</name><operator pos:start="831:49" pos:end="831:50">-&gt;</operator><name pos:start="831:51" pos:end="831:61">cur_pic_ptr</name><operator pos:start="831:62" pos:end="831:63">-&gt;</operator><name pos:start="831:64" pos:end="831:66">poc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="835:5" pos:end="837:55"><if pos:start="835:5" pos:end="837:55">if <condition pos:start="835:8" pos:end="835:41">(<expr pos:start="835:9" pos:end="835:40"><name pos:start="835:9" pos:end="835:40"><name pos:start="835:9" pos:end="835:9">h</name><operator pos:start="835:10" pos:end="835:11">-&gt;</operator><name pos:start="835:12" pos:end="835:14">pps</name><operator pos:start="835:15" pos:end="835:15">.</operator><name pos:start="835:16" pos:end="835:40">redundant_pic_cnt_present</name></name></expr>)</condition><block type="pseudo" pos:start="837:9" pos:end="837:55"><block_content pos:start="837:9" pos:end="837:55">

        <expr_stmt pos:start="837:9" pos:end="837:55"><expr pos:start="837:9" pos:end="837:54"><name pos:start="837:9" pos:end="837:30"><name pos:start="837:9" pos:end="837:9">h</name><operator pos:start="837:10" pos:end="837:11">-&gt;</operator><name pos:start="837:12" pos:end="837:30">redundant_pic_count</name></name> <operator pos:start="837:32" pos:end="837:32">=</operator> <call pos:start="837:34" pos:end="837:54"><name pos:start="837:34" pos:end="837:46">get_ue_golomb</name><argument_list pos:start="837:47" pos:end="837:54">(<argument pos:start="837:48" pos:end="837:53"><expr pos:start="837:48" pos:end="837:53"><operator pos:start="837:48" pos:end="837:48">&amp;</operator><name pos:start="837:49" pos:end="837:53"><name pos:start="837:49" pos:end="837:49">h</name><operator pos:start="837:50" pos:end="837:51">-&gt;</operator><name pos:start="837:52" pos:end="837:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="841:5" pos:end="841:34"><expr pos:start="841:5" pos:end="841:33"><name pos:start="841:5" pos:end="841:7">ret</name> <operator pos:start="841:9" pos:end="841:9">=</operator> <call pos:start="841:11" pos:end="841:33"><name pos:start="841:11" pos:end="841:26">ff_set_ref_count</name><argument_list pos:start="841:27" pos:end="841:33">(<argument pos:start="841:28" pos:end="841:28"><expr pos:start="841:28" pos:end="841:28"><name pos:start="841:28" pos:end="841:28">h</name></expr></argument>, <argument pos:start="841:31" pos:end="841:32"><expr pos:start="841:31" pos:end="841:32"><name pos:start="841:31" pos:end="841:32">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="843:5" pos:end="849:34"><if pos:start="843:5" pos:end="845:19">if <condition pos:start="843:8" pos:end="843:16">(<expr pos:start="843:9" pos:end="843:15"><name pos:start="843:9" pos:end="843:11">ret</name> <operator pos:start="843:13" pos:end="843:13">&lt;</operator> <literal type="number" pos:start="843:15" pos:end="843:15">0</literal></expr>)</condition><block type="pseudo" pos:start="845:9" pos:end="845:19"><block_content pos:start="845:9" pos:end="845:19">

        <return pos:start="845:9" pos:end="845:19">return <expr pos:start="845:16" pos:end="845:18"><name pos:start="845:16" pos:end="845:18">ret</name></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="847:5" pos:end="849:34">else if <condition pos:start="847:13" pos:end="847:22">(<expr pos:start="847:14" pos:end="847:21"><name pos:start="847:14" pos:end="847:16">ret</name> <operator pos:start="847:18" pos:end="847:19">==</operator> <literal type="number" pos:start="847:21" pos:end="847:21">1</literal></expr>)</condition><block type="pseudo" pos:start="849:9" pos:end="849:34"><block_content pos:start="849:9" pos:end="849:34">

        <expr_stmt pos:start="849:9" pos:end="849:34"><expr pos:start="849:9" pos:end="849:33"><name pos:start="849:9" pos:end="849:29">default_ref_list_done</name> <operator pos:start="849:31" pos:end="849:31">=</operator> <literal type="number" pos:start="849:33" pos:end="849:33">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="853:5" pos:end="855:45"><if pos:start="853:5" pos:end="855:45">if <condition pos:start="853:8" pos:end="853:31">(<expr pos:start="853:9" pos:end="853:30"><operator pos:start="853:9" pos:end="853:9">!</operator><name pos:start="853:10" pos:end="853:30">default_ref_list_done</name></expr>)</condition><block type="pseudo" pos:start="855:9" pos:end="855:45"><block_content pos:start="855:9" pos:end="855:45">

        <expr_stmt pos:start="855:9" pos:end="855:45"><expr pos:start="855:9" pos:end="855:44"><call pos:start="855:9" pos:end="855:44"><name pos:start="855:9" pos:end="855:37">ff_h264_fill_default_ref_list</name><argument_list pos:start="855:38" pos:end="855:44">(<argument pos:start="855:39" pos:end="855:39"><expr pos:start="855:39" pos:end="855:39"><name pos:start="855:39" pos:end="855:39">h</name></expr></argument>, <argument pos:start="855:42" pos:end="855:43"><expr pos:start="855:42" pos:end="855:43"><name pos:start="855:42" pos:end="855:43">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="859:5" pos:end="871:5"><if pos:start="859:5" pos:end="871:5">if <condition pos:start="859:8" pos:end="859:48">(<expr pos:start="859:9" pos:end="859:47"><name pos:start="859:9" pos:end="859:26"><name pos:start="859:9" pos:end="859:10">sl</name><operator pos:start="859:11" pos:end="859:12">-&gt;</operator><name pos:start="859:13" pos:end="859:26">slice_type_nos</name></name> <operator pos:start="859:28" pos:end="859:29">!=</operator> <name pos:start="859:31" pos:end="859:47">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="859:50" pos:end="871:5">{<block_content pos:start="861:8" pos:end="869:8">

       <expr_stmt pos:start="861:8" pos:end="861:59"><expr pos:start="861:8" pos:end="861:58"><name pos:start="861:8" pos:end="861:10">ret</name> <operator pos:start="861:12" pos:end="861:12">=</operator> <call pos:start="861:14" pos:end="861:58"><name pos:start="861:14" pos:end="861:51">ff_h264_decode_ref_pic_list_reordering</name><argument_list pos:start="861:52" pos:end="861:58">(<argument pos:start="861:53" pos:end="861:53"><expr pos:start="861:53" pos:end="861:53"><name pos:start="861:53" pos:end="861:53">h</name></expr></argument>, <argument pos:start="861:56" pos:end="861:57"><expr pos:start="861:56" pos:end="861:57"><name pos:start="861:56" pos:end="861:57">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <if_stmt pos:start="863:8" pos:end="869:8"><if pos:start="863:8" pos:end="869:8">if <condition pos:start="863:11" pos:end="863:19">(<expr pos:start="863:12" pos:end="863:18"><name pos:start="863:12" pos:end="863:14">ret</name> <operator pos:start="863:16" pos:end="863:16">&lt;</operator> <literal type="number" pos:start="863:18" pos:end="863:18">0</literal></expr>)</condition> <block pos:start="863:21" pos:end="869:8">{<block_content pos:start="865:12" pos:end="867:22">

           <expr_stmt pos:start="865:12" pos:end="865:51"><expr pos:start="865:12" pos:end="865:50"><name pos:start="865:12" pos:end="865:27"><name pos:start="865:12" pos:end="865:13">sl</name><operator pos:start="865:14" pos:end="865:15">-&gt;</operator><name pos:start="865:16" pos:end="865:24">ref_count</name><index pos:start="865:25" pos:end="865:27">[<expr pos:start="865:26" pos:end="865:26"><literal type="number" pos:start="865:26" pos:end="865:26">1</literal></expr>]</index></name> <operator pos:start="865:29" pos:end="865:29">=</operator> <name pos:start="865:31" pos:end="865:46"><name pos:start="865:31" pos:end="865:32">sl</name><operator pos:start="865:33" pos:end="865:34">-&gt;</operator><name pos:start="865:35" pos:end="865:43">ref_count</name><index pos:start="865:44" pos:end="865:46">[<expr pos:start="865:45" pos:end="865:45"><literal type="number" pos:start="865:45" pos:end="865:45">0</literal></expr>]</index></name> <operator pos:start="865:48" pos:end="865:48">=</operator> <literal type="number" pos:start="865:50" pos:end="865:50">0</literal></expr>;</expr_stmt>

           <return pos:start="867:12" pos:end="867:22">return <expr pos:start="867:19" pos:end="867:21"><name pos:start="867:19" pos:end="867:21">ret</name></expr>;</return>

       </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="875:5" pos:end="901:5"><if pos:start="875:5" pos:end="881:36">if <condition pos:start="875:8" pos:end="879:50">(<expr pos:start="875:9" pos:end="879:49"><operator pos:start="875:9" pos:end="875:9">(</operator><name pos:start="875:10" pos:end="875:29"><name pos:start="875:10" pos:end="875:10">h</name><operator pos:start="875:11" pos:end="875:12">-&gt;</operator><name pos:start="875:13" pos:end="875:15">pps</name><operator pos:start="875:16" pos:end="875:16">.</operator><name pos:start="875:17" pos:end="875:29">weighted_pred</name></name> <operator pos:start="875:31" pos:end="875:32">&amp;&amp;</operator> <name pos:start="875:34" pos:end="875:51"><name pos:start="875:34" pos:end="875:35">sl</name><operator pos:start="875:36" pos:end="875:37">-&gt;</operator><name pos:start="875:38" pos:end="875:51">slice_type_nos</name></name> <operator pos:start="875:53" pos:end="875:54">==</operator> <name pos:start="875:56" pos:end="875:72">AV_PICTURE_TYPE_P</name><operator pos:start="875:73" pos:end="875:73">)</operator> <operator pos:start="875:75" pos:end="875:76">||</operator>

        <operator pos:start="877:9" pos:end="877:9">(</operator><name pos:start="877:10" pos:end="877:35"><name pos:start="877:10" pos:end="877:10">h</name><operator pos:start="877:11" pos:end="877:12">-&gt;</operator><name pos:start="877:13" pos:end="877:15">pps</name><operator pos:start="877:16" pos:end="877:16">.</operator><name pos:start="877:17" pos:end="877:35">weighted_bipred_idc</name></name> <operator pos:start="877:37" pos:end="877:38">==</operator> <literal type="number" pos:start="877:40" pos:end="877:40">1</literal> <operator pos:start="877:42" pos:end="877:43">&amp;&amp;</operator>

         <name pos:start="879:10" pos:end="879:27"><name pos:start="879:10" pos:end="879:11">sl</name><operator pos:start="879:12" pos:end="879:13">-&gt;</operator><name pos:start="879:14" pos:end="879:27">slice_type_nos</name></name> <operator pos:start="879:29" pos:end="879:30">==</operator> <name pos:start="879:32" pos:end="879:48">AV_PICTURE_TYPE_B</name><operator pos:start="879:49" pos:end="879:49">)</operator></expr>)</condition><block type="pseudo" pos:start="881:9" pos:end="881:36"><block_content pos:start="881:9" pos:end="881:36">

        <expr_stmt pos:start="881:9" pos:end="881:36"><expr pos:start="881:9" pos:end="881:35"><call pos:start="881:9" pos:end="881:35"><name pos:start="881:9" pos:end="881:28">ff_pred_weight_table</name><argument_list pos:start="881:29" pos:end="881:35">(<argument pos:start="881:30" pos:end="881:30"><expr pos:start="881:30" pos:end="881:30"><name pos:start="881:30" pos:end="881:30">h</name></expr></argument>, <argument pos:start="881:33" pos:end="881:34"><expr pos:start="881:33" pos:end="881:34"><name pos:start="881:33" pos:end="881:34">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="883:5" pos:end="889:5">else if <condition pos:start="883:13" pos:end="885:53">(<expr pos:start="883:14" pos:end="885:52"><name pos:start="883:14" pos:end="883:39"><name pos:start="883:14" pos:end="883:14">h</name><operator pos:start="883:15" pos:end="883:16">-&gt;</operator><name pos:start="883:17" pos:end="883:19">pps</name><operator pos:start="883:20" pos:end="883:20">.</operator><name pos:start="883:21" pos:end="883:39">weighted_bipred_idc</name></name> <operator pos:start="883:41" pos:end="883:42">==</operator> <literal type="number" pos:start="883:44" pos:end="883:44">2</literal> <operator pos:start="883:46" pos:end="883:47">&amp;&amp;</operator>

             <name pos:start="885:14" pos:end="885:31"><name pos:start="885:14" pos:end="885:15">sl</name><operator pos:start="885:16" pos:end="885:17">-&gt;</operator><name pos:start="885:18" pos:end="885:31">slice_type_nos</name></name> <operator pos:start="885:33" pos:end="885:34">==</operator> <name pos:start="885:36" pos:end="885:52">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="885:55" pos:end="889:5">{<block_content pos:start="887:9" pos:end="887:41">

        <expr_stmt pos:start="887:9" pos:end="887:41"><expr pos:start="887:9" pos:end="887:40"><call pos:start="887:9" pos:end="887:40"><name pos:start="887:9" pos:end="887:29">implicit_weight_table</name><argument_list pos:start="887:30" pos:end="887:40">(<argument pos:start="887:31" pos:end="887:31"><expr pos:start="887:31" pos:end="887:31"><name pos:start="887:31" pos:end="887:31">h</name></expr></argument>, <argument pos:start="887:34" pos:end="887:35"><expr pos:start="887:34" pos:end="887:35"><name pos:start="887:34" pos:end="887:35">sl</name></expr></argument>, <argument pos:start="887:38" pos:end="887:39"><expr pos:start="887:38" pos:end="887:39"><operator pos:start="887:38" pos:end="887:38">-</operator><literal type="number" pos:start="887:39" pos:end="887:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="889:7" pos:end="901:5">else <block pos:start="889:12" pos:end="901:5">{<block_content pos:start="891:9" pos:end="899:9">

        <expr_stmt pos:start="891:9" pos:end="891:27"><expr pos:start="891:9" pos:end="891:26"><name pos:start="891:9" pos:end="891:22"><name pos:start="891:9" pos:end="891:10">sl</name><operator pos:start="891:11" pos:end="891:12">-&gt;</operator><name pos:start="891:13" pos:end="891:22">use_weight</name></name> <operator pos:start="891:24" pos:end="891:24">=</operator> <literal type="number" pos:start="891:26" pos:end="891:26">0</literal></expr>;</expr_stmt>

        <for pos:start="893:9" pos:end="899:9">for <control pos:start="893:13" pos:end="893:31">(<init pos:start="893:14" pos:end="893:19"><expr pos:start="893:14" pos:end="893:18"><name pos:start="893:14" pos:end="893:14">i</name> <operator pos:start="893:16" pos:end="893:16">=</operator> <literal type="number" pos:start="893:18" pos:end="893:18">0</literal></expr>;</init> <condition pos:start="893:21" pos:end="893:26"><expr pos:start="893:21" pos:end="893:25"><name pos:start="893:21" pos:end="893:21">i</name> <operator pos:start="893:23" pos:end="893:23">&lt;</operator> <literal type="number" pos:start="893:25" pos:end="893:25">2</literal></expr>;</condition> <incr pos:start="893:28" pos:end="893:30"><expr pos:start="893:28" pos:end="893:30"><name pos:start="893:28" pos:end="893:28">i</name><operator pos:start="893:29" pos:end="893:30">++</operator></expr></incr>)</control> <block pos:start="893:33" pos:end="899:9">{<block_content pos:start="895:13" pos:end="897:42">

            <expr_stmt pos:start="895:13" pos:end="895:42"><expr pos:start="895:13" pos:end="895:41"><name pos:start="895:13" pos:end="895:35"><name pos:start="895:13" pos:end="895:14">sl</name><operator pos:start="895:15" pos:end="895:16">-&gt;</operator><name pos:start="895:17" pos:end="895:32">luma_weight_flag</name><index pos:start="895:33" pos:end="895:35">[<expr pos:start="895:34" pos:end="895:34"><name pos:start="895:34" pos:end="895:34">i</name></expr>]</index></name>   <operator pos:start="895:39" pos:end="895:39">=</operator> <literal type="number" pos:start="895:41" pos:end="895:41">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="897:13" pos:end="897:42"><expr pos:start="897:13" pos:end="897:41"><name pos:start="897:13" pos:end="897:37"><name pos:start="897:13" pos:end="897:14">sl</name><operator pos:start="897:15" pos:end="897:16">-&gt;</operator><name pos:start="897:17" pos:end="897:34">chroma_weight_flag</name><index pos:start="897:35" pos:end="897:37">[<expr pos:start="897:36" pos:end="897:36"><name pos:start="897:36" pos:end="897:36">i</name></expr>]</index></name> <operator pos:start="897:39" pos:end="897:39">=</operator> <literal type="number" pos:start="897:41" pos:end="897:41">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="905:5" pos:end="905:74">// If frame-mt is enabled, only update mmco tables for the first slice</comment>

    <comment type="line" pos:start="907:5" pos:end="907:74">// in a field. Subsequent slices can temporarily clobber h-&gt;mmco_index</comment>

    <comment type="line" pos:start="909:5" pos:end="909:72">// or h-&gt;mmco, which will cause ref list mix-ups and decoding errors</comment>

    <comment type="line" pos:start="911:5" pos:end="911:75">// further down the line. This may break decoding if the first slice is</comment>

    <comment type="line" pos:start="913:5" pos:end="913:60">// corrupt, thus we only do this if frame-mt is enabled.</comment>

    <if_stmt pos:start="915:5" pos:end="927:5"><if pos:start="915:5" pos:end="927:5">if <condition pos:start="915:8" pos:end="915:23">(<expr pos:start="915:9" pos:end="915:22"><name pos:start="915:9" pos:end="915:22"><name pos:start="915:9" pos:end="915:9">h</name><operator pos:start="915:10" pos:end="915:11">-&gt;</operator><name pos:start="915:12" pos:end="915:22">nal_ref_idc</name></name></expr>)</condition> <block pos:start="915:25" pos:end="927:5">{<block_content pos:start="917:9" pos:end="925:39">

        <expr_stmt pos:start="917:9" pos:end="921:69"><expr pos:start="917:9" pos:end="921:68"><name pos:start="917:9" pos:end="917:11">ret</name> <operator pos:start="917:13" pos:end="917:13">=</operator> <call pos:start="917:15" pos:end="921:68"><name pos:start="917:15" pos:end="917:44">ff_h264_decode_ref_pic_marking</name><argument_list pos:start="917:45" pos:end="921:68">(<argument pos:start="917:46" pos:end="917:47"><expr pos:start="917:46" pos:end="917:47"><name pos:start="917:46" pos:end="917:47">h0</name></expr></argument>, <argument pos:start="917:50" pos:end="917:55"><expr pos:start="917:50" pos:end="917:55"><operator pos:start="917:50" pos:end="917:50">&amp;</operator><name pos:start="917:51" pos:end="917:55"><name pos:start="917:51" pos:end="917:51">h</name><operator pos:start="917:52" pos:end="917:53">-&gt;</operator><name pos:start="917:54" pos:end="917:55">gb</name></name></expr></argument>,

                                             <argument pos:start="919:46" pos:end="921:67"><expr pos:start="919:46" pos:end="921:67"><operator pos:start="919:46" pos:end="919:46">!</operator><operator pos:start="919:47" pos:end="919:47">(</operator><name pos:start="919:48" pos:end="919:75"><name pos:start="919:48" pos:end="919:48">h</name><operator pos:start="919:49" pos:end="919:50">-&gt;</operator><name pos:start="919:51" pos:end="919:55">avctx</name><operator pos:start="919:56" pos:end="919:57">-&gt;</operator><name pos:start="919:58" pos:end="919:75">active_thread_type</name></name> <operator pos:start="919:77" pos:end="919:77">&amp;</operator> <name pos:start="919:79" pos:end="919:93">FF_THREAD_FRAME</name><operator pos:start="919:94" pos:end="919:94">)</operator> <operator pos:start="919:96" pos:end="919:97">||</operator>

                                             <name pos:start="921:46" pos:end="921:62"><name pos:start="921:46" pos:end="921:47">h0</name><operator pos:start="921:48" pos:end="921:49">-&gt;</operator><name pos:start="921:50" pos:end="921:62">current_slice</name></name> <operator pos:start="921:64" pos:end="921:65">==</operator> <literal type="number" pos:start="921:67" pos:end="921:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="923:9" pos:end="925:39"><if pos:start="923:9" pos:end="925:39">if <condition pos:start="923:12" pos:end="923:67">(<expr pos:start="923:13" pos:end="923:66"><name pos:start="923:13" pos:end="923:15">ret</name> <operator pos:start="923:17" pos:end="923:17">&lt;</operator> <literal type="number" pos:start="923:19" pos:end="923:19">0</literal> <operator pos:start="923:21" pos:end="923:22">&amp;&amp;</operator> <operator pos:start="923:24" pos:end="923:24">(</operator><name pos:start="923:25" pos:end="923:49"><name pos:start="923:25" pos:end="923:25">h</name><operator pos:start="923:26" pos:end="923:27">-&gt;</operator><name pos:start="923:28" pos:end="923:32">avctx</name><operator pos:start="923:33" pos:end="923:34">-&gt;</operator><name pos:start="923:35" pos:end="923:49">err_recognition</name></name> <operator pos:start="923:51" pos:end="923:51">&amp;</operator> <name pos:start="923:53" pos:end="923:65">AV_EF_EXPLODE</name><operator pos:start="923:66" pos:end="923:66">)</operator></expr>)</condition><block type="pseudo" pos:start="925:13" pos:end="925:39"><block_content pos:start="925:13" pos:end="925:39">

            <return pos:start="925:13" pos:end="925:39">return <expr pos:start="925:20" pos:end="925:38"><name pos:start="925:20" pos:end="925:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="931:5" pos:end="945:5"><if pos:start="931:5" pos:end="945:5">if <condition pos:start="931:8" pos:end="931:23">(<expr pos:start="931:9" pos:end="931:22"><call pos:start="931:9" pos:end="931:22"><name pos:start="931:9" pos:end="931:19">FRAME_MBAFF</name><argument_list pos:start="931:20" pos:end="931:22">(<argument pos:start="931:21" pos:end="931:21"><expr pos:start="931:21" pos:end="931:21"><name pos:start="931:21" pos:end="931:21">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="931:25" pos:end="945:5">{<block_content pos:start="933:9" pos:end="943:9">

        <expr_stmt pos:start="933:9" pos:end="933:43"><expr pos:start="933:9" pos:end="933:42"><call pos:start="933:9" pos:end="933:42"><name pos:start="933:9" pos:end="933:35">ff_h264_fill_mbaff_ref_list</name><argument_list pos:start="933:36" pos:end="933:42">(<argument pos:start="933:37" pos:end="933:37"><expr pos:start="933:37" pos:end="933:37"><name pos:start="933:37" pos:end="933:37">h</name></expr></argument>, <argument pos:start="933:40" pos:end="933:41"><expr pos:start="933:40" pos:end="933:41"><name pos:start="933:40" pos:end="933:41">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="937:9" pos:end="943:9"><if pos:start="937:9" pos:end="943:9">if <condition pos:start="937:12" pos:end="937:87">(<expr pos:start="937:13" pos:end="937:86"><name pos:start="937:13" pos:end="937:38"><name pos:start="937:13" pos:end="937:13">h</name><operator pos:start="937:14" pos:end="937:15">-&gt;</operator><name pos:start="937:16" pos:end="937:18">pps</name><operator pos:start="937:19" pos:end="937:19">.</operator><name pos:start="937:20" pos:end="937:38">weighted_bipred_idc</name></name> <operator pos:start="937:40" pos:end="937:41">==</operator> <literal type="number" pos:start="937:43" pos:end="937:43">2</literal> <operator pos:start="937:45" pos:end="937:46">&amp;&amp;</operator> <name pos:start="937:48" pos:end="937:65"><name pos:start="937:48" pos:end="937:49">sl</name><operator pos:start="937:50" pos:end="937:51">-&gt;</operator><name pos:start="937:52" pos:end="937:65">slice_type_nos</name></name> <operator pos:start="937:67" pos:end="937:68">==</operator> <name pos:start="937:70" pos:end="937:86">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="937:89" pos:end="943:9">{<block_content pos:start="939:13" pos:end="941:44">

            <expr_stmt pos:start="939:13" pos:end="939:44"><expr pos:start="939:13" pos:end="939:43"><call pos:start="939:13" pos:end="939:43"><name pos:start="939:13" pos:end="939:33">implicit_weight_table</name><argument_list pos:start="939:34" pos:end="939:43">(<argument pos:start="939:35" pos:end="939:35"><expr pos:start="939:35" pos:end="939:35"><name pos:start="939:35" pos:end="939:35">h</name></expr></argument>, <argument pos:start="939:38" pos:end="939:39"><expr pos:start="939:38" pos:end="939:39"><name pos:start="939:38" pos:end="939:39">sl</name></expr></argument>, <argument pos:start="939:42" pos:end="939:42"><expr pos:start="939:42" pos:end="939:42"><literal type="number" pos:start="939:42" pos:end="939:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="941:13" pos:end="941:44"><expr pos:start="941:13" pos:end="941:43"><call pos:start="941:13" pos:end="941:43"><name pos:start="941:13" pos:end="941:33">implicit_weight_table</name><argument_list pos:start="941:34" pos:end="941:43">(<argument pos:start="941:35" pos:end="941:35"><expr pos:start="941:35" pos:end="941:35"><name pos:start="941:35" pos:end="941:35">h</name></expr></argument>, <argument pos:start="941:38" pos:end="941:39"><expr pos:start="941:38" pos:end="941:39"><name pos:start="941:38" pos:end="941:39">sl</name></expr></argument>, <argument pos:start="941:42" pos:end="941:42"><expr pos:start="941:42" pos:end="941:42"><literal type="number" pos:start="941:42" pos:end="941:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="949:5" pos:end="951:48"><if pos:start="949:5" pos:end="951:48">if <condition pos:start="949:8" pos:end="949:79">(<expr pos:start="949:9" pos:end="949:78"><name pos:start="949:9" pos:end="949:26"><name pos:start="949:9" pos:end="949:10">sl</name><operator pos:start="949:11" pos:end="949:12">-&gt;</operator><name pos:start="949:13" pos:end="949:26">slice_type_nos</name></name> <operator pos:start="949:28" pos:end="949:29">==</operator> <name pos:start="949:31" pos:end="949:47">AV_PICTURE_TYPE_B</name> <operator pos:start="949:49" pos:end="949:50">&amp;&amp;</operator> <operator pos:start="949:52" pos:end="949:52">!</operator><name pos:start="949:53" pos:end="949:78"><name pos:start="949:53" pos:end="949:54">sl</name><operator pos:start="949:55" pos:end="949:56">-&gt;</operator><name pos:start="949:57" pos:end="949:78">direct_spatial_mv_pred</name></name></expr>)</condition><block type="pseudo" pos:start="951:9" pos:end="951:48"><block_content pos:start="951:9" pos:end="951:48">

        <expr_stmt pos:start="951:9" pos:end="951:48"><expr pos:start="951:9" pos:end="951:47"><call pos:start="951:9" pos:end="951:47"><name pos:start="951:9" pos:end="951:40">ff_h264_direct_dist_scale_factor</name><argument_list pos:start="951:41" pos:end="951:47">(<argument pos:start="951:42" pos:end="951:42"><expr pos:start="951:42" pos:end="951:42"><name pos:start="951:42" pos:end="951:42">h</name></expr></argument>, <argument pos:start="951:45" pos:end="951:46"><expr pos:start="951:45" pos:end="951:46"><name pos:start="951:45" pos:end="951:46">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="953:5" pos:end="953:40"><expr pos:start="953:5" pos:end="953:39"><call pos:start="953:5" pos:end="953:39"><name pos:start="953:5" pos:end="953:32">ff_h264_direct_ref_list_init</name><argument_list pos:start="953:33" pos:end="953:39">(<argument pos:start="953:34" pos:end="953:34"><expr pos:start="953:34" pos:end="953:34"><name pos:start="953:34" pos:end="953:34">h</name></expr></argument>, <argument pos:start="953:37" pos:end="953:38"><expr pos:start="953:37" pos:end="953:38"><name pos:start="953:37" pos:end="953:38">sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="957:5" pos:end="971:5"><if pos:start="957:5" pos:end="971:5">if <condition pos:start="957:8" pos:end="957:64">(<expr pos:start="957:9" pos:end="957:63"><name pos:start="957:9" pos:end="957:26"><name pos:start="957:9" pos:end="957:10">sl</name><operator pos:start="957:11" pos:end="957:12">-&gt;</operator><name pos:start="957:13" pos:end="957:26">slice_type_nos</name></name> <operator pos:start="957:28" pos:end="957:29">!=</operator> <name pos:start="957:31" pos:end="957:47">AV_PICTURE_TYPE_I</name> <operator pos:start="957:49" pos:end="957:50">&amp;&amp;</operator> <name pos:start="957:52" pos:end="957:63"><name pos:start="957:52" pos:end="957:52">h</name><operator pos:start="957:53" pos:end="957:54">-&gt;</operator><name pos:start="957:55" pos:end="957:57">pps</name><operator pos:start="957:58" pos:end="957:58">.</operator><name pos:start="957:59" pos:end="957:63">cabac</name></name></expr>)</condition> <block pos:start="957:66" pos:end="971:5">{<block_content pos:start="959:9" pos:end="969:32">

        <expr_stmt pos:start="959:9" pos:end="959:39"><expr pos:start="959:9" pos:end="959:38"><name pos:start="959:9" pos:end="959:11">tmp</name> <operator pos:start="959:13" pos:end="959:13">=</operator> <call pos:start="959:15" pos:end="959:38"><name pos:start="959:15" pos:end="959:30">get_ue_golomb_31</name><argument_list pos:start="959:31" pos:end="959:38">(<argument pos:start="959:32" pos:end="959:37"><expr pos:start="959:32" pos:end="959:37"><operator pos:start="959:32" pos:end="959:32">&amp;</operator><name pos:start="959:33" pos:end="959:37"><name pos:start="959:33" pos:end="959:33">h</name><operator pos:start="959:34" pos:end="959:35">-&gt;</operator><name pos:start="959:36" pos:end="959:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="961:9" pos:end="967:9"><if pos:start="961:9" pos:end="967:9">if <condition pos:start="961:12" pos:end="961:20">(<expr pos:start="961:13" pos:end="961:19"><name pos:start="961:13" pos:end="961:15">tmp</name> <operator pos:start="961:17" pos:end="961:17">&gt;</operator> <literal type="number" pos:start="961:19" pos:end="961:19">2</literal></expr>)</condition> <block pos:start="961:22" pos:end="967:9">{<block_content pos:start="963:13" pos:end="965:39">

            <expr_stmt pos:start="963:13" pos:end="963:80"><expr pos:start="963:13" pos:end="963:79"><call pos:start="963:13" pos:end="963:79"><name pos:start="963:13" pos:end="963:18">av_log</name><argument_list pos:start="963:19" pos:end="963:79">(<argument pos:start="963:20" pos:end="963:27"><expr pos:start="963:20" pos:end="963:27"><name pos:start="963:20" pos:end="963:27"><name pos:start="963:20" pos:end="963:20">h</name><operator pos:start="963:21" pos:end="963:22">-&gt;</operator><name pos:start="963:23" pos:end="963:27">avctx</name></name></expr></argument>, <argument pos:start="963:30" pos:end="963:41"><expr pos:start="963:30" pos:end="963:41"><name pos:start="963:30" pos:end="963:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="963:44" pos:end="963:73"><expr pos:start="963:44" pos:end="963:73"><literal type="string" pos:start="963:44" pos:end="963:73">"cabac_init_idc %u overflow\n"</literal></expr></argument>, <argument pos:start="963:76" pos:end="963:78"><expr pos:start="963:76" pos:end="963:78"><name pos:start="963:76" pos:end="963:78">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="965:13" pos:end="965:39">return <expr pos:start="965:20" pos:end="965:38"><name pos:start="965:20" pos:end="965:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="969:9" pos:end="969:32"><expr pos:start="969:9" pos:end="969:31"><name pos:start="969:9" pos:end="969:25"><name pos:start="969:9" pos:end="969:9">h</name><operator pos:start="969:10" pos:end="969:11">-&gt;</operator><name pos:start="969:12" pos:end="969:25">cabac_init_idc</name></name> <operator pos:start="969:27" pos:end="969:27">=</operator> <name pos:start="969:29" pos:end="969:31">tmp</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="975:5" pos:end="975:29"><expr pos:start="975:5" pos:end="975:28"><name pos:start="975:5" pos:end="975:24"><name pos:start="975:5" pos:end="975:6">sl</name><operator pos:start="975:7" pos:end="975:8">-&gt;</operator><name pos:start="975:9" pos:end="975:24">last_qscale_diff</name></name> <operator pos:start="975:26" pos:end="975:26">=</operator> <literal type="number" pos:start="975:28" pos:end="975:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="977:5" pos:end="977:49"><expr pos:start="977:5" pos:end="977:48"><name pos:start="977:5" pos:end="977:7">tmp</name> <operator pos:start="977:9" pos:end="977:9">=</operator> <name pos:start="977:11" pos:end="977:24"><name pos:start="977:11" pos:end="977:11">h</name><operator pos:start="977:12" pos:end="977:13">-&gt;</operator><name pos:start="977:14" pos:end="977:16">pps</name><operator pos:start="977:17" pos:end="977:17">.</operator><name pos:start="977:18" pos:end="977:24">init_qp</name></name> <operator pos:start="977:26" pos:end="977:26">+</operator> <call pos:start="977:28" pos:end="977:48"><name pos:start="977:28" pos:end="977:40">get_se_golomb</name><argument_list pos:start="977:41" pos:end="977:48">(<argument pos:start="977:42" pos:end="977:47"><expr pos:start="977:42" pos:end="977:47"><operator pos:start="977:42" pos:end="977:42">&amp;</operator><name pos:start="977:43" pos:end="977:47"><name pos:start="977:43" pos:end="977:43">h</name><operator pos:start="977:44" pos:end="977:45">-&gt;</operator><name pos:start="977:46" pos:end="977:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="979:5" pos:end="985:5"><if pos:start="979:5" pos:end="985:5">if <condition pos:start="979:8" pos:end="979:51">(<expr pos:start="979:9" pos:end="979:50"><name pos:start="979:9" pos:end="979:11">tmp</name> <operator pos:start="979:13" pos:end="979:13">&gt;</operator> <literal type="number" pos:start="979:15" pos:end="979:18">51</literal> <operator pos:start="979:18" pos:end="979:18">+</operator> <literal type="number" pos:start="979:20" pos:end="979:20">6</literal> <operator pos:start="979:22" pos:end="979:22">*</operator> <operator pos:start="979:24" pos:end="979:24">(</operator><name pos:start="979:25" pos:end="979:45"><name pos:start="979:25" pos:end="979:25">h</name><operator pos:start="979:26" pos:end="979:27">-&gt;</operator><name pos:start="979:28" pos:end="979:30">sps</name><operator pos:start="979:31" pos:end="979:31">.</operator><name pos:start="979:32" pos:end="979:45">bit_depth_luma</name></name> <operator pos:start="979:47" pos:end="979:47">-</operator> <literal type="number" pos:start="979:49" pos:end="979:49">8</literal><operator pos:start="979:50" pos:end="979:50">)</operator></expr>)</condition> <block pos:start="979:53" pos:end="985:5">{<block_content pos:start="981:9" pos:end="983:35">

        <expr_stmt pos:start="981:9" pos:end="981:68"><expr pos:start="981:9" pos:end="981:67"><call pos:start="981:9" pos:end="981:67"><name pos:start="981:9" pos:end="981:14">av_log</name><argument_list pos:start="981:15" pos:end="981:67">(<argument pos:start="981:16" pos:end="981:23"><expr pos:start="981:16" pos:end="981:23"><name pos:start="981:16" pos:end="981:23"><name pos:start="981:16" pos:end="981:16">h</name><operator pos:start="981:17" pos:end="981:18">-&gt;</operator><name pos:start="981:19" pos:end="981:23">avctx</name></name></expr></argument>, <argument pos:start="981:26" pos:end="981:37"><expr pos:start="981:26" pos:end="981:37"><name pos:start="981:26" pos:end="981:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="981:40" pos:end="981:61"><expr pos:start="981:40" pos:end="981:61"><literal type="string" pos:start="981:40" pos:end="981:61">"QP %u out of range\n"</literal></expr></argument>, <argument pos:start="981:64" pos:end="981:66"><expr pos:start="981:64" pos:end="981:66"><name pos:start="981:64" pos:end="981:66">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="983:9" pos:end="983:35">return <expr pos:start="983:16" pos:end="983:34"><name pos:start="983:16" pos:end="983:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="987:5" pos:end="987:27"><expr pos:start="987:5" pos:end="987:26"><name pos:start="987:5" pos:end="987:14"><name pos:start="987:5" pos:end="987:6">sl</name><operator pos:start="987:7" pos:end="987:8">-&gt;</operator><name pos:start="987:9" pos:end="987:14">qscale</name></name>       <operator pos:start="987:22" pos:end="987:22">=</operator> <name pos:start="987:24" pos:end="987:26">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="989:5" pos:end="989:55"><expr pos:start="989:5" pos:end="989:54"><name pos:start="989:5" pos:end="989:20"><name pos:start="989:5" pos:end="989:6">sl</name><operator pos:start="989:7" pos:end="989:8">-&gt;</operator><name pos:start="989:9" pos:end="989:17">chroma_qp</name><index pos:start="989:18" pos:end="989:20">[<expr pos:start="989:19" pos:end="989:19"><literal type="number" pos:start="989:19" pos:end="989:19">0</literal></expr>]</index></name> <operator pos:start="989:22" pos:end="989:22">=</operator> <call pos:start="989:24" pos:end="989:54"><name pos:start="989:24" pos:end="989:36">get_chroma_qp</name><argument_list pos:start="989:37" pos:end="989:54">(<argument pos:start="989:38" pos:end="989:38"><expr pos:start="989:38" pos:end="989:38"><name pos:start="989:38" pos:end="989:38">h</name></expr></argument>, <argument pos:start="989:41" pos:end="989:41"><expr pos:start="989:41" pos:end="989:41"><literal type="number" pos:start="989:41" pos:end="989:41">0</literal></expr></argument>, <argument pos:start="989:44" pos:end="989:53"><expr pos:start="989:44" pos:end="989:53"><name pos:start="989:44" pos:end="989:53"><name pos:start="989:44" pos:end="989:45">sl</name><operator pos:start="989:46" pos:end="989:47">-&gt;</operator><name pos:start="989:48" pos:end="989:53">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="991:5" pos:end="991:55"><expr pos:start="991:5" pos:end="991:54"><name pos:start="991:5" pos:end="991:20"><name pos:start="991:5" pos:end="991:6">sl</name><operator pos:start="991:7" pos:end="991:8">-&gt;</operator><name pos:start="991:9" pos:end="991:17">chroma_qp</name><index pos:start="991:18" pos:end="991:20">[<expr pos:start="991:19" pos:end="991:19"><literal type="number" pos:start="991:19" pos:end="991:19">1</literal></expr>]</index></name> <operator pos:start="991:22" pos:end="991:22">=</operator> <call pos:start="991:24" pos:end="991:54"><name pos:start="991:24" pos:end="991:36">get_chroma_qp</name><argument_list pos:start="991:37" pos:end="991:54">(<argument pos:start="991:38" pos:end="991:38"><expr pos:start="991:38" pos:end="991:38"><name pos:start="991:38" pos:end="991:38">h</name></expr></argument>, <argument pos:start="991:41" pos:end="991:41"><expr pos:start="991:41" pos:end="991:41"><literal type="number" pos:start="991:41" pos:end="991:41">1</literal></expr></argument>, <argument pos:start="991:44" pos:end="991:53"><expr pos:start="991:44" pos:end="991:53"><name pos:start="991:44" pos:end="991:53"><name pos:start="991:44" pos:end="991:45">sl</name><operator pos:start="991:46" pos:end="991:47">-&gt;</operator><name pos:start="991:48" pos:end="991:53">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="993:5" pos:end="993:34">// FIXME qscale / qp ... stuff</comment>

    <if_stmt pos:start="995:5" pos:end="997:26"><if pos:start="995:5" pos:end="997:26">if <condition pos:start="995:8" pos:end="995:45">(<expr pos:start="995:9" pos:end="995:44"><name pos:start="995:9" pos:end="995:22"><name pos:start="995:9" pos:end="995:10">sl</name><operator pos:start="995:11" pos:end="995:12">-&gt;</operator><name pos:start="995:13" pos:end="995:22">slice_type</name></name> <operator pos:start="995:24" pos:end="995:25">==</operator> <name pos:start="995:27" pos:end="995:44">AV_PICTURE_TYPE_SP</name></expr>)</condition><block type="pseudo" pos:start="997:9" pos:end="997:26"><block_content pos:start="997:9" pos:end="997:26">

        <expr_stmt pos:start="997:9" pos:end="997:26"><expr pos:start="997:9" pos:end="997:25"><call pos:start="997:9" pos:end="997:25"><name pos:start="997:9" pos:end="997:17">get_bits1</name><argument_list pos:start="997:18" pos:end="997:25">(<argument pos:start="997:19" pos:end="997:24"><expr pos:start="997:19" pos:end="997:24"><operator pos:start="997:19" pos:end="997:19">&amp;</operator><name pos:start="997:20" pos:end="997:24"><name pos:start="997:20" pos:end="997:20">h</name><operator pos:start="997:21" pos:end="997:22">-&gt;</operator><name pos:start="997:23" pos:end="997:24">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="997:28" pos:end="997:51">/* sp_for_switch_flag */</comment>

    <if_stmt pos:start="999:5" pos:end="1003:30"><if pos:start="999:5" pos:end="1003:30">if <condition pos:start="999:8" pos:end="1001:45">(<expr pos:start="999:9" pos:end="1001:44"><name pos:start="999:9" pos:end="999:22"><name pos:start="999:9" pos:end="999:10">sl</name><operator pos:start="999:11" pos:end="999:12">-&gt;</operator><name pos:start="999:13" pos:end="999:22">slice_type</name></name> <operator pos:start="999:24" pos:end="999:25">==</operator> <name pos:start="999:27" pos:end="999:44">AV_PICTURE_TYPE_SP</name> <operator pos:start="999:46" pos:end="999:47">||</operator>

        <name pos:start="1001:9" pos:end="1001:22"><name pos:start="1001:9" pos:end="1001:10">sl</name><operator pos:start="1001:11" pos:end="1001:12">-&gt;</operator><name pos:start="1001:13" pos:end="1001:22">slice_type</name></name> <operator pos:start="1001:24" pos:end="1001:25">==</operator> <name pos:start="1001:27" pos:end="1001:44">AV_PICTURE_TYPE_SI</name></expr>)</condition><block type="pseudo" pos:start="1003:9" pos:end="1003:30"><block_content pos:start="1003:9" pos:end="1003:30">

        <expr_stmt pos:start="1003:9" pos:end="1003:30"><expr pos:start="1003:9" pos:end="1003:29"><call pos:start="1003:9" pos:end="1003:29"><name pos:start="1003:9" pos:end="1003:21">get_se_golomb</name><argument_list pos:start="1003:22" pos:end="1003:29">(<argument pos:start="1003:23" pos:end="1003:28"><expr pos:start="1003:23" pos:end="1003:28"><operator pos:start="1003:23" pos:end="1003:23">&amp;</operator><name pos:start="1003:24" pos:end="1003:28"><name pos:start="1003:24" pos:end="1003:24">h</name><operator pos:start="1003:25" pos:end="1003:26">-&gt;</operator><name pos:start="1003:27" pos:end="1003:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="1003:32" pos:end="1003:51">/* slice_qs_delta */</comment>



    <expr_stmt pos:start="1007:5" pos:end="1007:33"><expr pos:start="1007:5" pos:end="1007:32"><name pos:start="1007:5" pos:end="1007:24"><name pos:start="1007:5" pos:end="1007:5">h</name><operator pos:start="1007:6" pos:end="1007:7">-&gt;</operator><name pos:start="1007:8" pos:end="1007:24">deblocking_filter</name></name>     <operator pos:start="1007:30" pos:end="1007:30">=</operator> <literal type="number" pos:start="1007:32" pos:end="1007:32">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1009:5" pos:end="1009:33"><expr pos:start="1009:5" pos:end="1009:32"><name pos:start="1009:5" pos:end="1009:28"><name pos:start="1009:5" pos:end="1009:5">h</name><operator pos:start="1009:6" pos:end="1009:7">-&gt;</operator><name pos:start="1009:8" pos:end="1009:28">slice_alpha_c0_offset</name></name> <operator pos:start="1009:30" pos:end="1009:30">=</operator> <literal type="number" pos:start="1009:32" pos:end="1009:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="1011:5" pos:end="1011:33"><expr pos:start="1011:5" pos:end="1011:32"><name pos:start="1011:5" pos:end="1011:24"><name pos:start="1011:5" pos:end="1011:5">h</name><operator pos:start="1011:6" pos:end="1011:7">-&gt;</operator><name pos:start="1011:8" pos:end="1011:24">slice_beta_offset</name></name>     <operator pos:start="1011:30" pos:end="1011:30">=</operator> <literal type="number" pos:start="1011:32" pos:end="1011:32">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="1013:5" pos:end="1061:5"><if pos:start="1013:5" pos:end="1061:5">if <condition pos:start="1013:8" pos:end="1013:52">(<expr pos:start="1013:9" pos:end="1013:51"><name pos:start="1013:9" pos:end="1013:51"><name pos:start="1013:9" pos:end="1013:9">h</name><operator pos:start="1013:10" pos:end="1013:11">-&gt;</operator><name pos:start="1013:12" pos:end="1013:14">pps</name><operator pos:start="1013:15" pos:end="1013:15">.</operator><name pos:start="1013:16" pos:end="1013:51">deblocking_filter_parameters_present</name></name></expr>)</condition> <block pos:start="1013:54" pos:end="1061:5">{<block_content pos:start="1015:9" pos:end="1059:9">

        <expr_stmt pos:start="1015:9" pos:end="1015:39"><expr pos:start="1015:9" pos:end="1015:38"><name pos:start="1015:9" pos:end="1015:11">tmp</name> <operator pos:start="1015:13" pos:end="1015:13">=</operator> <call pos:start="1015:15" pos:end="1015:38"><name pos:start="1015:15" pos:end="1015:30">get_ue_golomb_31</name><argument_list pos:start="1015:31" pos:end="1015:38">(<argument pos:start="1015:32" pos:end="1015:37"><expr pos:start="1015:32" pos:end="1015:37"><operator pos:start="1015:32" pos:end="1015:32">&amp;</operator><name pos:start="1015:33" pos:end="1015:37"><name pos:start="1015:33" pos:end="1015:33">h</name><operator pos:start="1015:34" pos:end="1015:35">-&gt;</operator><name pos:start="1015:36" pos:end="1015:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1017:9" pos:end="1025:9"><if pos:start="1017:9" pos:end="1025:9">if <condition pos:start="1017:12" pos:end="1017:20">(<expr pos:start="1017:13" pos:end="1017:19"><name pos:start="1017:13" pos:end="1017:15">tmp</name> <operator pos:start="1017:17" pos:end="1017:17">&gt;</operator> <literal type="number" pos:start="1017:19" pos:end="1017:19">2</literal></expr>)</condition> <block pos:start="1017:22" pos:end="1025:9">{<block_content pos:start="1019:13" pos:end="1023:39">

            <expr_stmt pos:start="1019:13" pos:end="1021:67"><expr pos:start="1019:13" pos:end="1021:66"><call pos:start="1019:13" pos:end="1021:66"><name pos:start="1019:13" pos:end="1019:18">av_log</name><argument_list pos:start="1019:19" pos:end="1021:66">(<argument pos:start="1019:20" pos:end="1019:27"><expr pos:start="1019:20" pos:end="1019:27"><name pos:start="1019:20" pos:end="1019:27"><name pos:start="1019:20" pos:end="1019:20">h</name><operator pos:start="1019:21" pos:end="1019:22">-&gt;</operator><name pos:start="1019:23" pos:end="1019:27">avctx</name></name></expr></argument>, <argument pos:start="1019:30" pos:end="1019:41"><expr pos:start="1019:30" pos:end="1019:41"><name pos:start="1019:30" pos:end="1019:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="1021:20" pos:end="1021:60"><expr pos:start="1021:20" pos:end="1021:60"><literal type="string" pos:start="1021:20" pos:end="1021:60">"deblocking_filter_idc %u out of range\n"</literal></expr></argument>, <argument pos:start="1021:63" pos:end="1021:65"><expr pos:start="1021:63" pos:end="1021:65"><name pos:start="1021:63" pos:end="1021:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="1023:13" pos:end="1023:39">return <expr pos:start="1023:20" pos:end="1023:38"><name pos:start="1023:20" pos:end="1023:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1027:9" pos:end="1027:35"><expr pos:start="1027:9" pos:end="1027:34"><name pos:start="1027:9" pos:end="1027:28"><name pos:start="1027:9" pos:end="1027:9">h</name><operator pos:start="1027:10" pos:end="1027:11">-&gt;</operator><name pos:start="1027:12" pos:end="1027:28">deblocking_filter</name></name> <operator pos:start="1027:30" pos:end="1027:30">=</operator> <name pos:start="1027:32" pos:end="1027:34">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="1029:9" pos:end="1031:38"><if pos:start="1029:9" pos:end="1031:38">if <condition pos:start="1029:12" pos:end="1029:37">(<expr pos:start="1029:13" pos:end="1029:36"><name pos:start="1029:13" pos:end="1029:32"><name pos:start="1029:13" pos:end="1029:13">h</name><operator pos:start="1029:14" pos:end="1029:15">-&gt;</operator><name pos:start="1029:16" pos:end="1029:32">deblocking_filter</name></name> <operator pos:start="1029:34" pos:end="1029:34">&lt;</operator> <literal type="number" pos:start="1029:36" pos:end="1029:36">2</literal></expr>)</condition><block type="pseudo" pos:start="1031:13" pos:end="1031:38"><block_content pos:start="1031:13" pos:end="1031:38">

            <expr_stmt pos:start="1031:13" pos:end="1031:38"><expr pos:start="1031:13" pos:end="1031:37"><name pos:start="1031:13" pos:end="1031:32"><name pos:start="1031:13" pos:end="1031:13">h</name><operator pos:start="1031:14" pos:end="1031:15">-&gt;</operator><name pos:start="1031:16" pos:end="1031:32">deblocking_filter</name></name> <operator pos:start="1031:34" pos:end="1031:35">^=</operator> <literal type="number" pos:start="1031:37" pos:end="1031:37">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="line" pos:start="1031:41" pos:end="1031:48">// 1&lt;-&gt;0</comment>



        <if_stmt pos:start="1035:9" pos:end="1059:9"><if pos:start="1035:9" pos:end="1059:9">if <condition pos:start="1035:12" pos:end="1035:33">(<expr pos:start="1035:13" pos:end="1035:32"><name pos:start="1035:13" pos:end="1035:32"><name pos:start="1035:13" pos:end="1035:13">h</name><operator pos:start="1035:14" pos:end="1035:15">-&gt;</operator><name pos:start="1035:16" pos:end="1035:32">deblocking_filter</name></name></expr>)</condition> <block pos:start="1035:35" pos:end="1059:9">{<block_content pos:start="1037:13" pos:end="1057:13">

            <expr_stmt pos:start="1037:13" pos:end="1037:65"><expr pos:start="1037:13" pos:end="1037:64"><name pos:start="1037:13" pos:end="1037:36"><name pos:start="1037:13" pos:end="1037:13">h</name><operator pos:start="1037:14" pos:end="1037:15">-&gt;</operator><name pos:start="1037:16" pos:end="1037:36">slice_alpha_c0_offset</name></name> <operator pos:start="1037:38" pos:end="1037:38">=</operator> <call pos:start="1037:40" pos:end="1037:60"><name pos:start="1037:40" pos:end="1037:52">get_se_golomb</name><argument_list pos:start="1037:53" pos:end="1037:60">(<argument pos:start="1037:54" pos:end="1037:59"><expr pos:start="1037:54" pos:end="1037:59"><operator pos:start="1037:54" pos:end="1037:54">&amp;</operator><name pos:start="1037:55" pos:end="1037:59"><name pos:start="1037:55" pos:end="1037:55">h</name><operator pos:start="1037:56" pos:end="1037:57">-&gt;</operator><name pos:start="1037:58" pos:end="1037:59">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="1037:62" pos:end="1037:62">*</operator> <literal type="number" pos:start="1037:64" pos:end="1037:64">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1039:13" pos:end="1039:65"><expr pos:start="1039:13" pos:end="1039:64"><name pos:start="1039:13" pos:end="1039:32"><name pos:start="1039:13" pos:end="1039:13">h</name><operator pos:start="1039:14" pos:end="1039:15">-&gt;</operator><name pos:start="1039:16" pos:end="1039:32">slice_beta_offset</name></name>     <operator pos:start="1039:38" pos:end="1039:38">=</operator> <call pos:start="1039:40" pos:end="1039:60"><name pos:start="1039:40" pos:end="1039:52">get_se_golomb</name><argument_list pos:start="1039:53" pos:end="1039:60">(<argument pos:start="1039:54" pos:end="1039:59"><expr pos:start="1039:54" pos:end="1039:59"><operator pos:start="1039:54" pos:end="1039:54">&amp;</operator><name pos:start="1039:55" pos:end="1039:59"><name pos:start="1039:55" pos:end="1039:55">h</name><operator pos:start="1039:56" pos:end="1039:57">-&gt;</operator><name pos:start="1039:58" pos:end="1039:59">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="1039:62" pos:end="1039:62">*</operator> <literal type="number" pos:start="1039:64" pos:end="1039:64">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1041:13" pos:end="1057:13"><if pos:start="1041:13" pos:end="1057:13">if <condition pos:start="1041:16" pos:end="1047:43">(<expr pos:start="1041:17" pos:end="1047:42"><name pos:start="1041:17" pos:end="1041:40"><name pos:start="1041:17" pos:end="1041:17">h</name><operator pos:start="1041:18" pos:end="1041:19">-&gt;</operator><name pos:start="1041:20" pos:end="1041:40">slice_alpha_c0_offset</name></name> <operator pos:start="1041:42" pos:end="1041:42">&gt;</operator>  <literal type="number" pos:start="1041:45" pos:end="1041:46">12</literal> <operator pos:start="1041:48" pos:end="1041:49">||</operator>

                <name pos:start="1043:17" pos:end="1043:40"><name pos:start="1043:17" pos:end="1043:17">h</name><operator pos:start="1043:18" pos:end="1043:19">-&gt;</operator><name pos:start="1043:20" pos:end="1043:40">slice_alpha_c0_offset</name></name> <operator pos:start="1043:42" pos:end="1043:42">&lt;</operator> <operator pos:start="1043:44" pos:end="1043:44">-</operator><literal type="number" pos:start="1043:45" pos:end="1043:46">12</literal> <operator pos:start="1043:48" pos:end="1043:49">||</operator>

                <name pos:start="1045:17" pos:end="1045:36"><name pos:start="1045:17" pos:end="1045:17">h</name><operator pos:start="1045:18" pos:end="1045:19">-&gt;</operator><name pos:start="1045:20" pos:end="1045:36">slice_beta_offset</name></name> <operator pos:start="1045:38" pos:end="1045:38">&gt;</operator>  <literal type="number" pos:start="1045:41" pos:end="1045:42">12</literal>     <operator pos:start="1045:48" pos:end="1045:49">||</operator>

                <name pos:start="1047:17" pos:end="1047:36"><name pos:start="1047:17" pos:end="1047:17">h</name><operator pos:start="1047:18" pos:end="1047:19">-&gt;</operator><name pos:start="1047:20" pos:end="1047:36">slice_beta_offset</name></name> <operator pos:start="1047:38" pos:end="1047:38">&lt;</operator> <operator pos:start="1047:40" pos:end="1047:40">-</operator><literal type="number" pos:start="1047:41" pos:end="1047:42">12</literal></expr>)</condition> <block pos:start="1047:45" pos:end="1057:13">{<block_content pos:start="1049:17" pos:end="1055:43">

                <expr_stmt pos:start="1049:17" pos:end="1053:71"><expr pos:start="1049:17" pos:end="1053:70"><call pos:start="1049:17" pos:end="1053:70"><name pos:start="1049:17" pos:end="1049:22">av_log</name><argument_list pos:start="1049:23" pos:end="1053:70">(<argument pos:start="1049:24" pos:end="1049:31"><expr pos:start="1049:24" pos:end="1049:31"><name pos:start="1049:24" pos:end="1049:31"><name pos:start="1049:24" pos:end="1049:24">h</name><operator pos:start="1049:25" pos:end="1049:26">-&gt;</operator><name pos:start="1049:27" pos:end="1049:31">avctx</name></name></expr></argument>, <argument pos:start="1049:34" pos:end="1049:45"><expr pos:start="1049:34" pos:end="1049:45"><name pos:start="1049:34" pos:end="1049:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="1051:24" pos:end="1051:74"><expr pos:start="1051:24" pos:end="1051:74"><literal type="string" pos:start="1051:24" pos:end="1051:74">"deblocking filter parameters %d %d out of range\n"</literal></expr></argument>,

                       <argument pos:start="1053:24" pos:end="1053:47"><expr pos:start="1053:24" pos:end="1053:47"><name pos:start="1053:24" pos:end="1053:47"><name pos:start="1053:24" pos:end="1053:24">h</name><operator pos:start="1053:25" pos:end="1053:26">-&gt;</operator><name pos:start="1053:27" pos:end="1053:47">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1053:50" pos:end="1053:69"><expr pos:start="1053:50" pos:end="1053:69"><name pos:start="1053:50" pos:end="1053:69"><name pos:start="1053:50" pos:end="1053:50">h</name><operator pos:start="1053:51" pos:end="1053:52">-&gt;</operator><name pos:start="1053:53" pos:end="1053:69">slice_beta_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1055:17" pos:end="1055:43">return <expr pos:start="1055:24" pos:end="1055:42"><name pos:start="1055:24" pos:end="1055:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="1065:5" pos:end="1079:33"><if pos:start="1065:5" pos:end="1079:33">if <condition pos:start="1065:8" pos:end="1077:30">(<expr pos:start="1065:9" pos:end="1077:29"><name pos:start="1065:9" pos:end="1065:34"><name pos:start="1065:9" pos:end="1065:9">h</name><operator pos:start="1065:10" pos:end="1065:11">-&gt;</operator><name pos:start="1065:12" pos:end="1065:16">avctx</name><operator pos:start="1065:17" pos:end="1065:18">-&gt;</operator><name pos:start="1065:19" pos:end="1065:34">skip_loop_filter</name></name> <operator pos:start="1065:36" pos:end="1065:37">&gt;=</operator> <name pos:start="1065:39" pos:end="1065:51">AVDISCARD_ALL</name> <operator pos:start="1065:53" pos:end="1065:54">||</operator>

        <operator pos:start="1067:9" pos:end="1067:9">(</operator><name pos:start="1067:10" pos:end="1067:35"><name pos:start="1067:10" pos:end="1067:10">h</name><operator pos:start="1067:11" pos:end="1067:12">-&gt;</operator><name pos:start="1067:13" pos:end="1067:17">avctx</name><operator pos:start="1067:18" pos:end="1067:19">-&gt;</operator><name pos:start="1067:20" pos:end="1067:35">skip_loop_filter</name></name> <operator pos:start="1067:37" pos:end="1067:38">&gt;=</operator> <name pos:start="1067:40" pos:end="1067:55">AVDISCARD_NONKEY</name> <operator pos:start="1067:57" pos:end="1067:58">&amp;&amp;</operator>

         <name pos:start="1069:10" pos:end="1069:27"><name pos:start="1069:10" pos:end="1069:11">sl</name><operator pos:start="1069:12" pos:end="1069:13">-&gt;</operator><name pos:start="1069:14" pos:end="1069:27">slice_type_nos</name></name> <operator pos:start="1069:29" pos:end="1069:30">!=</operator> <name pos:start="1069:32" pos:end="1069:48">AV_PICTURE_TYPE_I</name><operator pos:start="1069:49" pos:end="1069:49">)</operator> <operator pos:start="1069:51" pos:end="1069:52">||</operator>

        <operator pos:start="1071:9" pos:end="1071:9">(</operator><name pos:start="1071:10" pos:end="1071:35"><name pos:start="1071:10" pos:end="1071:10">h</name><operator pos:start="1071:11" pos:end="1071:12">-&gt;</operator><name pos:start="1071:13" pos:end="1071:17">avctx</name><operator pos:start="1071:18" pos:end="1071:19">-&gt;</operator><name pos:start="1071:20" pos:end="1071:35">skip_loop_filter</name></name> <operator pos:start="1071:37" pos:end="1071:38">&gt;=</operator> <name pos:start="1071:40" pos:end="1071:54">AVDISCARD_BIDIR</name>  <operator pos:start="1071:57" pos:end="1071:58">&amp;&amp;</operator>

         <name pos:start="1073:10" pos:end="1073:27"><name pos:start="1073:10" pos:end="1073:11">sl</name><operator pos:start="1073:12" pos:end="1073:13">-&gt;</operator><name pos:start="1073:14" pos:end="1073:27">slice_type_nos</name></name> <operator pos:start="1073:29" pos:end="1073:30">==</operator> <name pos:start="1073:32" pos:end="1073:48">AV_PICTURE_TYPE_B</name><operator pos:start="1073:49" pos:end="1073:49">)</operator> <operator pos:start="1073:51" pos:end="1073:52">||</operator>

        <operator pos:start="1075:9" pos:end="1075:9">(</operator><name pos:start="1075:10" pos:end="1075:35"><name pos:start="1075:10" pos:end="1075:10">h</name><operator pos:start="1075:11" pos:end="1075:12">-&gt;</operator><name pos:start="1075:13" pos:end="1075:17">avctx</name><operator pos:start="1075:18" pos:end="1075:19">-&gt;</operator><name pos:start="1075:20" pos:end="1075:35">skip_loop_filter</name></name> <operator pos:start="1075:37" pos:end="1075:38">&gt;=</operator> <name pos:start="1075:40" pos:end="1075:55">AVDISCARD_NONREF</name> <operator pos:start="1075:57" pos:end="1075:58">&amp;&amp;</operator>

         <name pos:start="1077:10" pos:end="1077:23"><name pos:start="1077:10" pos:end="1077:10">h</name><operator pos:start="1077:11" pos:end="1077:12">-&gt;</operator><name pos:start="1077:13" pos:end="1077:23">nal_ref_idc</name></name> <operator pos:start="1077:25" pos:end="1077:26">==</operator> <literal type="number" pos:start="1077:28" pos:end="1077:28">0</literal><operator pos:start="1077:29" pos:end="1077:29">)</operator></expr>)</condition><block type="pseudo" pos:start="1079:9" pos:end="1079:33"><block_content pos:start="1079:9" pos:end="1079:33">

        <expr_stmt pos:start="1079:9" pos:end="1079:33"><expr pos:start="1079:9" pos:end="1079:32"><name pos:start="1079:9" pos:end="1079:28"><name pos:start="1079:9" pos:end="1079:9">h</name><operator pos:start="1079:10" pos:end="1079:11">-&gt;</operator><name pos:start="1079:12" pos:end="1079:28">deblocking_filter</name></name> <operator pos:start="1079:30" pos:end="1079:30">=</operator> <literal type="number" pos:start="1079:32" pos:end="1079:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="1083:5" pos:end="1119:5"><if pos:start="1083:5" pos:end="1119:5">if <condition pos:start="1083:8" pos:end="1083:58">(<expr pos:start="1083:9" pos:end="1083:57"><name pos:start="1083:9" pos:end="1083:28"><name pos:start="1083:9" pos:end="1083:9">h</name><operator pos:start="1083:10" pos:end="1083:11">-&gt;</operator><name pos:start="1083:12" pos:end="1083:28">deblocking_filter</name></name> <operator pos:start="1083:30" pos:end="1083:31">==</operator> <literal type="number" pos:start="1083:33" pos:end="1083:33">1</literal> <operator pos:start="1083:35" pos:end="1083:36">&amp;&amp;</operator> <name pos:start="1083:38" pos:end="1083:53"><name pos:start="1083:38" pos:end="1083:39">h0</name><operator pos:start="1083:40" pos:end="1083:41">-&gt;</operator><name pos:start="1083:42" pos:end="1083:53">max_contexts</name></name> <operator pos:start="1083:55" pos:end="1083:55">&gt;</operator> <literal type="number" pos:start="1083:57" pos:end="1083:57">1</literal></expr>)</condition> <block pos:start="1083:60" pos:end="1119:5">{<block_content pos:start="1085:9" pos:end="1117:9">

        <if_stmt pos:start="1085:9" pos:end="1117:9"><if pos:start="1085:9" pos:end="1093:9">if <condition pos:start="1085:12" pos:end="1085:48">(<expr pos:start="1085:13" pos:end="1085:47"><name pos:start="1085:13" pos:end="1085:28"><name pos:start="1085:13" pos:end="1085:13">h</name><operator pos:start="1085:14" pos:end="1085:15">-&gt;</operator><name pos:start="1085:16" pos:end="1085:20">avctx</name><operator pos:start="1085:21" pos:end="1085:22">-&gt;</operator><name pos:start="1085:23" pos:end="1085:28">flags2</name></name> <operator pos:start="1085:30" pos:end="1085:30">&amp;</operator> <name pos:start="1085:32" pos:end="1085:47">CODEC_FLAG2_FAST</name></expr>)</condition> <block pos:start="1085:50" pos:end="1093:9">{<block_content pos:start="1091:13" pos:end="1091:37">

            <comment type="block" pos:start="1087:13" pos:end="1089:57">/* Cheat slightly for speed:

             * Do not bother to deblock across slices. */</comment>

            <expr_stmt pos:start="1091:13" pos:end="1091:37"><expr pos:start="1091:13" pos:end="1091:36"><name pos:start="1091:13" pos:end="1091:32"><name pos:start="1091:13" pos:end="1091:13">h</name><operator pos:start="1091:14" pos:end="1091:15">-&gt;</operator><name pos:start="1091:16" pos:end="1091:32">deblocking_filter</name></name> <operator pos:start="1091:34" pos:end="1091:34">=</operator> <literal type="number" pos:start="1091:36" pos:end="1091:36">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1093:11" pos:end="1117:9">else <block pos:start="1093:16" pos:end="1117:9">{<block_content pos:start="1095:13" pos:end="1115:13">

            <expr_stmt pos:start="1095:13" pos:end="1095:33"><expr pos:start="1095:13" pos:end="1095:32"><name pos:start="1095:13" pos:end="1095:28"><name pos:start="1095:13" pos:end="1095:14">h0</name><operator pos:start="1095:15" pos:end="1095:16">-&gt;</operator><name pos:start="1095:17" pos:end="1095:28">max_contexts</name></name> <operator pos:start="1095:30" pos:end="1095:30">=</operator> <literal type="number" pos:start="1095:32" pos:end="1095:32">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1097:13" pos:end="1105:13"><if pos:start="1097:13" pos:end="1105:13">if <condition pos:start="1097:16" pos:end="1097:43">(<expr pos:start="1097:17" pos:end="1097:42"><operator pos:start="1097:17" pos:end="1097:17">!</operator><name pos:start="1097:18" pos:end="1097:42"><name pos:start="1097:18" pos:end="1097:19">h0</name><operator pos:start="1097:20" pos:end="1097:21">-&gt;</operator><name pos:start="1097:22" pos:end="1097:42">single_decode_warning</name></name></expr>)</condition> <block pos:start="1097:45" pos:end="1105:13">{<block_content pos:start="1099:17" pos:end="1103:46">

                <expr_stmt pos:start="1099:17" pos:end="1101:107"><expr pos:start="1099:17" pos:end="1101:106"><call pos:start="1099:17" pos:end="1101:106"><name pos:start="1099:17" pos:end="1099:22">av_log</name><argument_list pos:start="1099:23" pos:end="1101:106">(<argument pos:start="1099:24" pos:end="1099:31"><expr pos:start="1099:24" pos:end="1099:31"><name pos:start="1099:24" pos:end="1099:31"><name pos:start="1099:24" pos:end="1099:24">h</name><operator pos:start="1099:25" pos:end="1099:26">-&gt;</operator><name pos:start="1099:27" pos:end="1099:31">avctx</name></name></expr></argument>, <argument pos:start="1099:34" pos:end="1099:44"><expr pos:start="1099:34" pos:end="1099:44"><name pos:start="1099:34" pos:end="1099:44">AV_LOG_INFO</name></expr></argument>,

                       <argument pos:start="1101:24" pos:end="1101:105"><expr pos:start="1101:24" pos:end="1101:105"><literal type="string" pos:start="1101:24" pos:end="1101:105">"Cannot parallelize deblocking type 1, decoding such frames in sequential order\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1103:17" pos:end="1103:46"><expr pos:start="1103:17" pos:end="1103:45"><name pos:start="1103:17" pos:end="1103:41"><name pos:start="1103:17" pos:end="1103:18">h0</name><operator pos:start="1103:19" pos:end="1103:20">-&gt;</operator><name pos:start="1103:21" pos:end="1103:41">single_decode_warning</name></name> <operator pos:start="1103:43" pos:end="1103:43">=</operator> <literal type="number" pos:start="1103:45" pos:end="1103:45">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1107:13" pos:end="1115:13"><if pos:start="1107:13" pos:end="1115:13">if <condition pos:start="1107:16" pos:end="1107:24">(<expr pos:start="1107:17" pos:end="1107:23"><name pos:start="1107:17" pos:end="1107:17">h</name> <operator pos:start="1107:19" pos:end="1107:20">!=</operator> <name pos:start="1107:22" pos:end="1107:23">h0</name></expr>)</condition> <block pos:start="1107:26" pos:end="1115:13">{<block_content pos:start="1109:17" pos:end="1113:25">

                <expr_stmt pos:start="1109:17" pos:end="1111:62"><expr pos:start="1109:17" pos:end="1111:61"><call pos:start="1109:17" pos:end="1111:61"><name pos:start="1109:17" pos:end="1109:22">av_log</name><argument_list pos:start="1109:23" pos:end="1111:61">(<argument pos:start="1109:24" pos:end="1109:31"><expr pos:start="1109:24" pos:end="1109:31"><name pos:start="1109:24" pos:end="1109:31"><name pos:start="1109:24" pos:end="1109:24">h</name><operator pos:start="1109:25" pos:end="1109:26">-&gt;</operator><name pos:start="1109:27" pos:end="1109:31">avctx</name></name></expr></argument>, <argument pos:start="1109:34" pos:end="1109:45"><expr pos:start="1109:34" pos:end="1109:45"><name pos:start="1109:34" pos:end="1109:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="1111:24" pos:end="1111:60"><expr pos:start="1111:24" pos:end="1111:60"><literal type="string" pos:start="1111:24" pos:end="1111:60">"Deblocking switched inside frame.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="1113:17" pos:end="1113:25">return <expr pos:start="1113:24" pos:end="1113:24"><literal type="number" pos:start="1113:24" pos:end="1113:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1121:5" pos:end="1131:51"><expr pos:start="1121:5" pos:end="1131:50"><name pos:start="1121:5" pos:end="1121:17"><name pos:start="1121:5" pos:end="1121:6">sl</name><operator pos:start="1121:7" pos:end="1121:8">-&gt;</operator><name pos:start="1121:9" pos:end="1121:17">qp_thresh</name></name> <operator pos:start="1121:19" pos:end="1121:19">=</operator> <literal type="number" pos:start="1121:21" pos:end="1121:24">15</literal> <operator pos:start="1121:24" pos:end="1121:24">-</operator>

                   <call pos:start="1123:20" pos:end="1123:72"><name pos:start="1123:20" pos:end="1123:24">FFMIN</name><argument_list pos:start="1123:25" pos:end="1123:72">(<argument pos:start="1123:26" pos:end="1123:49"><expr pos:start="1123:26" pos:end="1123:49"><name pos:start="1123:26" pos:end="1123:49"><name pos:start="1123:26" pos:end="1123:26">h</name><operator pos:start="1123:27" pos:end="1123:28">-&gt;</operator><name pos:start="1123:29" pos:end="1123:49">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1123:52" pos:end="1123:71"><expr pos:start="1123:52" pos:end="1123:71"><name pos:start="1123:52" pos:end="1123:71"><name pos:start="1123:52" pos:end="1123:52">h</name><operator pos:start="1123:53" pos:end="1123:54">-&gt;</operator><name pos:start="1123:55" pos:end="1123:71">slice_beta_offset</name></name></expr></argument>)</argument_list></call> <operator pos:start="1123:74" pos:end="1123:74">-</operator>

                   <call pos:start="1125:20" pos:end="1129:59"><name pos:start="1125:20" pos:end="1125:25">FFMAX3</name><argument_list pos:start="1125:26" pos:end="1129:59">(<argument pos:start="1125:27" pos:end="1125:27"><expr pos:start="1125:27" pos:end="1125:27"><literal type="number" pos:start="1125:27" pos:end="1125:27">0</literal></expr></argument>,

                          <argument pos:start="1127:27" pos:end="1127:58"><expr pos:start="1127:27" pos:end="1127:58"><name pos:start="1127:27" pos:end="1127:58"><name pos:start="1127:27" pos:end="1127:27">h</name><operator pos:start="1127:28" pos:end="1127:29">-&gt;</operator><name pos:start="1127:30" pos:end="1127:32">pps</name><operator pos:start="1127:33" pos:end="1127:33">.</operator><name pos:start="1127:34" pos:end="1127:55">chroma_qp_index_offset</name><index pos:start="1127:56" pos:end="1127:58">[<expr pos:start="1127:57" pos:end="1127:57"><literal type="number" pos:start="1127:57" pos:end="1127:57">0</literal></expr>]</index></name></expr></argument>,

                          <argument pos:start="1129:27" pos:end="1129:58"><expr pos:start="1129:27" pos:end="1129:58"><name pos:start="1129:27" pos:end="1129:58"><name pos:start="1129:27" pos:end="1129:27">h</name><operator pos:start="1129:28" pos:end="1129:29">-&gt;</operator><name pos:start="1129:30" pos:end="1129:32">pps</name><operator pos:start="1129:33" pos:end="1129:33">.</operator><name pos:start="1129:34" pos:end="1129:55">chroma_qp_index_offset</name><index pos:start="1129:56" pos:end="1129:58">[<expr pos:start="1129:57" pos:end="1129:57"><literal type="number" pos:start="1129:57" pos:end="1129:57">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="1129:61" pos:end="1129:61">+</operator>

                   <literal type="number" pos:start="1131:20" pos:end="1131:20">6</literal> <operator pos:start="1131:22" pos:end="1131:22">*</operator> <operator pos:start="1131:24" pos:end="1131:24">(</operator><name pos:start="1131:25" pos:end="1131:45"><name pos:start="1131:25" pos:end="1131:25">h</name><operator pos:start="1131:26" pos:end="1131:27">-&gt;</operator><name pos:start="1131:28" pos:end="1131:30">sps</name><operator pos:start="1131:31" pos:end="1131:31">.</operator><name pos:start="1131:32" pos:end="1131:45">bit_depth_luma</name></name> <operator pos:start="1131:47" pos:end="1131:47">-</operator> <literal type="number" pos:start="1131:49" pos:end="1131:49">8</literal><operator pos:start="1131:50" pos:end="1131:50">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="1135:5" pos:end="1135:37"><expr pos:start="1135:5" pos:end="1135:36"><name pos:start="1135:5" pos:end="1135:23"><name pos:start="1135:5" pos:end="1135:6">h0</name><operator pos:start="1135:7" pos:end="1135:8">-&gt;</operator><name pos:start="1135:9" pos:end="1135:23">last_slice_type</name></name> <operator pos:start="1135:25" pos:end="1135:25">=</operator> <name pos:start="1135:27" pos:end="1135:36">slice_type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="1137:5" pos:end="1137:46"><expr pos:start="1137:5" pos:end="1137:45"><name pos:start="1137:5" pos:end="1137:17"><name pos:start="1137:5" pos:end="1137:6">sl</name><operator pos:start="1137:7" pos:end="1137:8">-&gt;</operator><name pos:start="1137:9" pos:end="1137:17">slice_num</name></name>       <operator pos:start="1137:25" pos:end="1137:25">=</operator> <operator pos:start="1137:27" pos:end="1137:28">++</operator><name pos:start="1137:29" pos:end="1137:45"><name pos:start="1137:29" pos:end="1137:30">h0</name><operator pos:start="1137:31" pos:end="1137:32">-&gt;</operator><name pos:start="1137:33" pos:end="1137:45">current_slice</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="1139:5" pos:end="1145:5"><if pos:start="1139:5" pos:end="1145:5">if <condition pos:start="1139:8" pos:end="1139:36">(<expr pos:start="1139:9" pos:end="1139:35"><name pos:start="1139:9" pos:end="1139:21"><name pos:start="1139:9" pos:end="1139:10">sl</name><operator pos:start="1139:11" pos:end="1139:12">-&gt;</operator><name pos:start="1139:13" pos:end="1139:21">slice_num</name></name> <operator pos:start="1139:23" pos:end="1139:24">&gt;=</operator> <name pos:start="1139:26" pos:end="1139:35">MAX_SLICES</name></expr>)</condition> <block pos:start="1139:38" pos:end="1145:5">{<block_content pos:start="1141:9" pos:end="1143:71">

        <expr_stmt pos:start="1141:9" pos:end="1143:71"><expr pos:start="1141:9" pos:end="1143:70"><call pos:start="1141:9" pos:end="1143:70"><name pos:start="1141:9" pos:end="1141:14">av_log</name><argument_list pos:start="1141:15" pos:end="1143:70">(<argument pos:start="1141:16" pos:end="1141:23"><expr pos:start="1141:16" pos:end="1141:23"><name pos:start="1141:16" pos:end="1141:23"><name pos:start="1141:16" pos:end="1141:16">h</name><operator pos:start="1141:17" pos:end="1141:18">-&gt;</operator><name pos:start="1141:19" pos:end="1141:23">avctx</name></name></expr></argument>, <argument pos:start="1141:26" pos:end="1141:37"><expr pos:start="1141:26" pos:end="1141:37"><name pos:start="1141:26" pos:end="1141:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="1143:16" pos:end="1143:69"><expr pos:start="1143:16" pos:end="1143:69"><literal type="string" pos:start="1143:16" pos:end="1143:69">"Too many slices, increase MAX_SLICES and recompile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="1149:5" pos:end="1211:5">for <control pos:start="1149:9" pos:end="1149:27">(<init pos:start="1149:10" pos:end="1149:15"><expr pos:start="1149:10" pos:end="1149:14"><name pos:start="1149:10" pos:end="1149:10">j</name> <operator pos:start="1149:12" pos:end="1149:12">=</operator> <literal type="number" pos:start="1149:14" pos:end="1149:14">0</literal></expr>;</init> <condition pos:start="1149:17" pos:end="1149:22"><expr pos:start="1149:17" pos:end="1149:21"><name pos:start="1149:17" pos:end="1149:17">j</name> <operator pos:start="1149:19" pos:end="1149:19">&lt;</operator> <literal type="number" pos:start="1149:21" pos:end="1149:21">2</literal></expr>;</condition> <incr pos:start="1149:24" pos:end="1149:26"><expr pos:start="1149:24" pos:end="1149:26"><name pos:start="1149:24" pos:end="1149:24">j</name><operator pos:start="1149:25" pos:end="1149:26">++</operator></expr></incr>)</control> <block pos:start="1149:29" pos:end="1211:5">{<block_content pos:start="1151:9" pos:end="1209:64">

        <decl_stmt pos:start="1151:9" pos:end="1151:24"><decl pos:start="1151:9" pos:end="1151:23"><type pos:start="1151:9" pos:end="1151:11"><name pos:start="1151:9" pos:end="1151:11">int</name></type> <name pos:start="1151:13" pos:end="1151:23"><name pos:start="1151:13" pos:end="1151:19">id_list</name><index pos:start="1151:20" pos:end="1151:23">[<expr pos:start="1151:21" pos:end="1151:22"><literal type="number" pos:start="1151:21" pos:end="1151:22">16</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="1153:9" pos:end="1153:72"><decl pos:start="1153:9" pos:end="1153:71"><type pos:start="1153:9" pos:end="1153:13"><name pos:start="1153:9" pos:end="1153:11">int</name> <modifier pos:start="1153:13" pos:end="1153:13">*</modifier></type><name pos:start="1153:14" pos:end="1153:20">ref2frm</name> <init pos:start="1153:22" pos:end="1153:71">= <expr pos:start="1153:24" pos:end="1153:71"><name pos:start="1153:24" pos:end="1153:71"><name pos:start="1153:24" pos:end="1153:25">sl</name><operator pos:start="1153:26" pos:end="1153:27">-&gt;</operator><name pos:start="1153:28" pos:end="1153:34">ref2frm</name><index pos:start="1153:35" pos:end="1153:68">[<expr pos:start="1153:36" pos:end="1153:67"><name pos:start="1153:36" pos:end="1153:48"><name pos:start="1153:36" pos:end="1153:37">sl</name><operator pos:start="1153:38" pos:end="1153:39">-&gt;</operator><name pos:start="1153:40" pos:end="1153:48">slice_num</name></name> <operator pos:start="1153:50" pos:end="1153:50">&amp;</operator> <operator pos:start="1153:52" pos:end="1153:52">(</operator><name pos:start="1153:53" pos:end="1153:62">MAX_SLICES</name> <operator pos:start="1153:64" pos:end="1153:64">-</operator> <literal type="number" pos:start="1153:66" pos:end="1153:66">1</literal><operator pos:start="1153:67" pos:end="1153:67">)</operator></expr>]</index><index pos:start="1153:69" pos:end="1153:71">[<expr pos:start="1153:70" pos:end="1153:70"><name pos:start="1153:70" pos:end="1153:70">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="1155:9" pos:end="1189:9">for <control pos:start="1155:13" pos:end="1155:32">(<init pos:start="1155:14" pos:end="1155:19"><expr pos:start="1155:14" pos:end="1155:18"><name pos:start="1155:14" pos:end="1155:14">i</name> <operator pos:start="1155:16" pos:end="1155:16">=</operator> <literal type="number" pos:start="1155:18" pos:end="1155:18">0</literal></expr>;</init> <condition pos:start="1155:21" pos:end="1155:27"><expr pos:start="1155:21" pos:end="1155:26"><name pos:start="1155:21" pos:end="1155:21">i</name> <operator pos:start="1155:23" pos:end="1155:23">&lt;</operator> <literal type="number" pos:start="1155:25" pos:end="1155:26">16</literal></expr>;</condition> <incr pos:start="1155:29" pos:end="1155:31"><expr pos:start="1155:29" pos:end="1155:31"><name pos:start="1155:29" pos:end="1155:29">i</name><operator pos:start="1155:30" pos:end="1155:31">++</operator></expr></incr>)</control> <block pos:start="1155:34" pos:end="1189:9">{<block_content pos:start="1157:13" pos:end="1187:13">

            <expr_stmt pos:start="1157:13" pos:end="1157:28"><expr pos:start="1157:13" pos:end="1157:27"><name pos:start="1157:13" pos:end="1157:22"><name pos:start="1157:13" pos:end="1157:19">id_list</name><index pos:start="1157:20" pos:end="1157:22">[<expr pos:start="1157:21" pos:end="1157:21"><name pos:start="1157:21" pos:end="1157:21">i</name></expr>]</index></name> <operator pos:start="1157:24" pos:end="1157:24">=</operator> <literal type="number" pos:start="1157:26" pos:end="1157:27">60</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1159:13" pos:end="1187:13"><if pos:start="1159:13" pos:end="1187:13">if <condition pos:start="1159:16" pos:end="1161:44">(<expr pos:start="1159:17" pos:end="1161:43"><name pos:start="1159:17" pos:end="1159:17">j</name> <operator pos:start="1159:19" pos:end="1159:19">&lt;</operator> <name pos:start="1159:21" pos:end="1159:34"><name pos:start="1159:21" pos:end="1159:22">sl</name><operator pos:start="1159:23" pos:end="1159:24">-&gt;</operator><name pos:start="1159:25" pos:end="1159:34">list_count</name></name> <operator pos:start="1159:36" pos:end="1159:37">&amp;&amp;</operator> <name pos:start="1159:39" pos:end="1159:39">i</name> <operator pos:start="1159:41" pos:end="1159:41">&lt;</operator> <name pos:start="1159:43" pos:end="1159:58"><name pos:start="1159:43" pos:end="1159:44">sl</name><operator pos:start="1159:45" pos:end="1159:46">-&gt;</operator><name pos:start="1159:47" pos:end="1159:55">ref_count</name><index pos:start="1159:56" pos:end="1159:58">[<expr pos:start="1159:57" pos:end="1159:57"><name pos:start="1159:57" pos:end="1159:57">j</name></expr>]</index></name> <operator pos:start="1159:60" pos:end="1159:61">&amp;&amp;</operator>

                <name pos:start="1161:17" pos:end="1161:34"><name pos:start="1161:17" pos:end="1161:18">sl</name><operator pos:start="1161:19" pos:end="1161:20">-&gt;</operator><name pos:start="1161:21" pos:end="1161:28">ref_list</name><index pos:start="1161:29" pos:end="1161:31">[<expr pos:start="1161:30" pos:end="1161:30"><name pos:start="1161:30" pos:end="1161:30">j</name></expr>]</index><index pos:start="1161:32" pos:end="1161:34">[<expr pos:start="1161:33" pos:end="1161:33"><name pos:start="1161:33" pos:end="1161:33">i</name></expr>]</index></name><operator pos:start="1161:35" pos:end="1161:35">.</operator><name pos:start="1161:36" pos:end="1161:43"><name pos:start="1161:36" pos:end="1161:36">f</name><operator pos:start="1161:37" pos:end="1161:37">.</operator><name pos:start="1161:38" pos:end="1161:40">buf</name><index pos:start="1161:41" pos:end="1161:43">[<expr pos:start="1161:42" pos:end="1161:42"><literal type="number" pos:start="1161:42" pos:end="1161:42">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="1161:46" pos:end="1187:13">{<block_content pos:start="1163:17" pos:end="1185:21">

                <decl_stmt pos:start="1163:17" pos:end="1163:22"><decl pos:start="1163:17" pos:end="1163:21"><type pos:start="1163:17" pos:end="1163:19"><name pos:start="1163:17" pos:end="1163:19">int</name></type> <name pos:start="1163:21" pos:end="1163:21">k</name></decl>;</decl_stmt>

                <decl_stmt pos:start="1165:17" pos:end="1165:68"><decl pos:start="1165:17" pos:end="1165:67"><type pos:start="1165:17" pos:end="1165:26"><name pos:start="1165:17" pos:end="1165:24">AVBuffer</name> <modifier pos:start="1165:26" pos:end="1165:26">*</modifier></type><name pos:start="1165:27" pos:end="1165:29">buf</name> <init pos:start="1165:31" pos:end="1165:67">= <expr pos:start="1165:33" pos:end="1165:67"><name pos:start="1165:33" pos:end="1165:50"><name pos:start="1165:33" pos:end="1165:34">sl</name><operator pos:start="1165:35" pos:end="1165:36">-&gt;</operator><name pos:start="1165:37" pos:end="1165:44">ref_list</name><index pos:start="1165:45" pos:end="1165:47">[<expr pos:start="1165:46" pos:end="1165:46"><name pos:start="1165:46" pos:end="1165:46">j</name></expr>]</index><index pos:start="1165:48" pos:end="1165:50">[<expr pos:start="1165:49" pos:end="1165:49"><name pos:start="1165:49" pos:end="1165:49">i</name></expr>]</index></name><operator pos:start="1165:51" pos:end="1165:51">.</operator><name pos:start="1165:52" pos:end="1165:59"><name pos:start="1165:52" pos:end="1165:52">f</name><operator pos:start="1165:53" pos:end="1165:53">.</operator><name pos:start="1165:54" pos:end="1165:56">buf</name><index pos:start="1165:57" pos:end="1165:59">[<expr pos:start="1165:58" pos:end="1165:58"><literal type="number" pos:start="1165:58" pos:end="1165:58">0</literal></expr>]</index></name><operator pos:start="1165:60" pos:end="1165:61">-&gt;</operator><name pos:start="1165:62" pos:end="1165:67">buffer</name></expr></init></decl>;</decl_stmt>

                <for pos:start="1167:17" pos:end="1175:21">for <control pos:start="1167:21" pos:end="1167:56">(<init pos:start="1167:22" pos:end="1167:27"><expr pos:start="1167:22" pos:end="1167:26"><name pos:start="1167:22" pos:end="1167:22">k</name> <operator pos:start="1167:24" pos:end="1167:24">=</operator> <literal type="number" pos:start="1167:26" pos:end="1167:26">0</literal></expr>;</init> <condition pos:start="1167:29" pos:end="1167:51"><expr pos:start="1167:29" pos:end="1167:50"><name pos:start="1167:29" pos:end="1167:29">k</name> <operator pos:start="1167:31" pos:end="1167:31">&lt;</operator> <name pos:start="1167:33" pos:end="1167:50"><name pos:start="1167:33" pos:end="1167:33">h</name><operator pos:start="1167:34" pos:end="1167:35">-&gt;</operator><name pos:start="1167:36" pos:end="1167:50">short_ref_count</name></name></expr>;</condition> <incr pos:start="1167:53" pos:end="1167:55"><expr pos:start="1167:53" pos:end="1167:55"><name pos:start="1167:53" pos:end="1167:53">k</name><operator pos:start="1167:54" pos:end="1167:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1169:21" pos:end="1175:21"><block_content pos:start="1169:21" pos:end="1175:21">

                    <if_stmt pos:start="1169:21" pos:end="1175:21"><if pos:start="1169:21" pos:end="1175:21">if <condition pos:start="1169:24" pos:end="1169:65">(<expr pos:start="1169:25" pos:end="1169:64"><name pos:start="1169:25" pos:end="1169:39"><name pos:start="1169:25" pos:end="1169:25">h</name><operator pos:start="1169:26" pos:end="1169:27">-&gt;</operator><name pos:start="1169:28" pos:end="1169:36">short_ref</name><index pos:start="1169:37" pos:end="1169:39">[<expr pos:start="1169:38" pos:end="1169:38"><name pos:start="1169:38" pos:end="1169:38">k</name></expr>]</index></name><operator pos:start="1169:40" pos:end="1169:41">-&gt;</operator><name pos:start="1169:42" pos:end="1169:49"><name pos:start="1169:42" pos:end="1169:42">f</name><operator pos:start="1169:43" pos:end="1169:43">.</operator><name pos:start="1169:44" pos:end="1169:46">buf</name><index pos:start="1169:47" pos:end="1169:49">[<expr pos:start="1169:48" pos:end="1169:48"><literal type="number" pos:start="1169:48" pos:end="1169:48">0</literal></expr>]</index></name><operator pos:start="1169:50" pos:end="1169:51">-&gt;</operator><name pos:start="1169:52" pos:end="1169:57">buffer</name> <operator pos:start="1169:59" pos:end="1169:60">==</operator> <name pos:start="1169:62" pos:end="1169:64">buf</name></expr>)</condition> <block pos:start="1169:67" pos:end="1175:21">{<block_content pos:start="1171:25" pos:end="1173:30">

                        <expr_stmt pos:start="1171:25" pos:end="1171:39"><expr pos:start="1171:25" pos:end="1171:38"><name pos:start="1171:25" pos:end="1171:34"><name pos:start="1171:25" pos:end="1171:31">id_list</name><index pos:start="1171:32" pos:end="1171:34">[<expr pos:start="1171:33" pos:end="1171:33"><name pos:start="1171:33" pos:end="1171:33">i</name></expr>]</index></name> <operator pos:start="1171:36" pos:end="1171:36">=</operator> <name pos:start="1171:38" pos:end="1171:38">k</name></expr>;</expr_stmt>

                        <break pos:start="1173:25" pos:end="1173:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

                <for pos:start="1177:17" pos:end="1185:21">for <control pos:start="1177:21" pos:end="1177:55">(<init pos:start="1177:22" pos:end="1177:27"><expr pos:start="1177:22" pos:end="1177:26"><name pos:start="1177:22" pos:end="1177:22">k</name> <operator pos:start="1177:24" pos:end="1177:24">=</operator> <literal type="number" pos:start="1177:26" pos:end="1177:26">0</literal></expr>;</init> <condition pos:start="1177:29" pos:end="1177:50"><expr pos:start="1177:29" pos:end="1177:49"><name pos:start="1177:29" pos:end="1177:29">k</name> <operator pos:start="1177:31" pos:end="1177:31">&lt;</operator> <name pos:start="1177:33" pos:end="1177:49"><name pos:start="1177:33" pos:end="1177:33">h</name><operator pos:start="1177:34" pos:end="1177:35">-&gt;</operator><name pos:start="1177:36" pos:end="1177:49">long_ref_count</name></name></expr>;</condition> <incr pos:start="1177:52" pos:end="1177:54"><expr pos:start="1177:52" pos:end="1177:54"><name pos:start="1177:52" pos:end="1177:52">k</name><operator pos:start="1177:53" pos:end="1177:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1179:21" pos:end="1185:21"><block_content pos:start="1179:21" pos:end="1185:21">

                    <if_stmt pos:start="1179:21" pos:end="1185:21"><if pos:start="1179:21" pos:end="1185:21">if <condition pos:start="1179:24" pos:end="1179:82">(<expr pos:start="1179:25" pos:end="1179:81"><name pos:start="1179:25" pos:end="1179:38"><name pos:start="1179:25" pos:end="1179:25">h</name><operator pos:start="1179:26" pos:end="1179:27">-&gt;</operator><name pos:start="1179:28" pos:end="1179:35">long_ref</name><index pos:start="1179:36" pos:end="1179:38">[<expr pos:start="1179:37" pos:end="1179:37"><name pos:start="1179:37" pos:end="1179:37">k</name></expr>]</index></name> <operator pos:start="1179:40" pos:end="1179:41">&amp;&amp;</operator> <name pos:start="1179:43" pos:end="1179:56"><name pos:start="1179:43" pos:end="1179:43">h</name><operator pos:start="1179:44" pos:end="1179:45">-&gt;</operator><name pos:start="1179:46" pos:end="1179:53">long_ref</name><index pos:start="1179:54" pos:end="1179:56">[<expr pos:start="1179:55" pos:end="1179:55"><name pos:start="1179:55" pos:end="1179:55">k</name></expr>]</index></name><operator pos:start="1179:57" pos:end="1179:58">-&gt;</operator><name pos:start="1179:59" pos:end="1179:66"><name pos:start="1179:59" pos:end="1179:59">f</name><operator pos:start="1179:60" pos:end="1179:60">.</operator><name pos:start="1179:61" pos:end="1179:63">buf</name><index pos:start="1179:64" pos:end="1179:66">[<expr pos:start="1179:65" pos:end="1179:65"><literal type="number" pos:start="1179:65" pos:end="1179:65">0</literal></expr>]</index></name><operator pos:start="1179:67" pos:end="1179:68">-&gt;</operator><name pos:start="1179:69" pos:end="1179:74">buffer</name> <operator pos:start="1179:76" pos:end="1179:77">==</operator> <name pos:start="1179:79" pos:end="1179:81">buf</name></expr>)</condition> <block pos:start="1179:84" pos:end="1185:21">{<block_content pos:start="1181:25" pos:end="1183:30">

                        <expr_stmt pos:start="1181:25" pos:end="1181:60"><expr pos:start="1181:25" pos:end="1181:59"><name pos:start="1181:25" pos:end="1181:34"><name pos:start="1181:25" pos:end="1181:31">id_list</name><index pos:start="1181:32" pos:end="1181:34">[<expr pos:start="1181:33" pos:end="1181:33"><name pos:start="1181:33" pos:end="1181:33">i</name></expr>]</index></name> <operator pos:start="1181:36" pos:end="1181:36">=</operator> <name pos:start="1181:38" pos:end="1181:55"><name pos:start="1181:38" pos:end="1181:38">h</name><operator pos:start="1181:39" pos:end="1181:40">-&gt;</operator><name pos:start="1181:41" pos:end="1181:55">short_ref_count</name></name> <operator pos:start="1181:57" pos:end="1181:57">+</operator> <name pos:start="1181:59" pos:end="1181:59">k</name></expr>;</expr_stmt>

                        <break pos:start="1183:25" pos:end="1183:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="1193:9" pos:end="1195:24"><expr pos:start="1193:9" pos:end="1195:23"><name pos:start="1193:9" pos:end="1193:18"><name pos:start="1193:9" pos:end="1193:15">ref2frm</name><index pos:start="1193:16" pos:end="1193:18">[<expr pos:start="1193:17" pos:end="1193:17"><literal type="number" pos:start="1193:17" pos:end="1193:17">0</literal></expr>]</index></name> <operator pos:start="1193:20" pos:end="1193:20">=</operator>

        <name pos:start="1195:9" pos:end="1195:18"><name pos:start="1195:9" pos:end="1195:15">ref2frm</name><index pos:start="1195:16" pos:end="1195:18">[<expr pos:start="1195:17" pos:end="1195:17"><literal type="number" pos:start="1195:17" pos:end="1195:17">1</literal></expr>]</index></name> <operator pos:start="1195:20" pos:end="1195:20">=</operator> <operator pos:start="1195:22" pos:end="1195:22">-</operator><literal type="number" pos:start="1195:23" pos:end="1195:23">1</literal></expr>;</expr_stmt>

        <for pos:start="1197:9" pos:end="1199:81">for <control pos:start="1197:13" pos:end="1197:32">(<init pos:start="1197:14" pos:end="1197:19"><expr pos:start="1197:14" pos:end="1197:18"><name pos:start="1197:14" pos:end="1197:14">i</name> <operator pos:start="1197:16" pos:end="1197:16">=</operator> <literal type="number" pos:start="1197:18" pos:end="1197:18">0</literal></expr>;</init> <condition pos:start="1197:21" pos:end="1197:27"><expr pos:start="1197:21" pos:end="1197:26"><name pos:start="1197:21" pos:end="1197:21">i</name> <operator pos:start="1197:23" pos:end="1197:23">&lt;</operator> <literal type="number" pos:start="1197:25" pos:end="1197:26">16</literal></expr>;</condition> <incr pos:start="1197:29" pos:end="1197:31"><expr pos:start="1197:29" pos:end="1197:31"><name pos:start="1197:29" pos:end="1197:29">i</name><operator pos:start="1197:30" pos:end="1197:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1199:13" pos:end="1199:81"><block_content pos:start="1199:13" pos:end="1199:81">

            <expr_stmt pos:start="1199:13" pos:end="1199:81"><expr pos:start="1199:13" pos:end="1199:80"><name pos:start="1199:13" pos:end="1199:26"><name pos:start="1199:13" pos:end="1199:19">ref2frm</name><index pos:start="1199:20" pos:end="1199:26">[<expr pos:start="1199:21" pos:end="1199:25"><name pos:start="1199:21" pos:end="1199:21">i</name> <operator pos:start="1199:23" pos:end="1199:23">+</operator> <literal type="number" pos:start="1199:25" pos:end="1199:25">2</literal></expr>]</index></name> <operator pos:start="1199:28" pos:end="1199:28">=</operator> <literal type="number" pos:start="1199:30" pos:end="1199:30">4</literal> <operator pos:start="1199:32" pos:end="1199:32">*</operator> <name pos:start="1199:34" pos:end="1199:43"><name pos:start="1199:34" pos:end="1199:40">id_list</name><index pos:start="1199:41" pos:end="1199:43">[<expr pos:start="1199:42" pos:end="1199:42"><name pos:start="1199:42" pos:end="1199:42">i</name></expr>]</index></name> <operator pos:start="1199:45" pos:end="1199:45">+</operator> <operator pos:start="1199:47" pos:end="1199:47">(</operator><name pos:start="1199:48" pos:end="1199:65"><name pos:start="1199:48" pos:end="1199:49">sl</name><operator pos:start="1199:50" pos:end="1199:51">-&gt;</operator><name pos:start="1199:52" pos:end="1199:59">ref_list</name><index pos:start="1199:60" pos:end="1199:62">[<expr pos:start="1199:61" pos:end="1199:61"><name pos:start="1199:61" pos:end="1199:61">j</name></expr>]</index><index pos:start="1199:63" pos:end="1199:65">[<expr pos:start="1199:64" pos:end="1199:64"><name pos:start="1199:64" pos:end="1199:64">i</name></expr>]</index></name><operator pos:start="1199:66" pos:end="1199:66">.</operator><name pos:start="1199:67" pos:end="1199:75">reference</name> <operator pos:start="1199:77" pos:end="1199:77">&amp;</operator> <literal type="number" pos:start="1199:79" pos:end="1199:79">3</literal><operator pos:start="1199:80" pos:end="1199:80">)</operator></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="1201:9" pos:end="1203:29"><expr pos:start="1201:9" pos:end="1203:28"><name pos:start="1201:9" pos:end="1201:23"><name pos:start="1201:9" pos:end="1201:15">ref2frm</name><index pos:start="1201:16" pos:end="1201:23">[<expr pos:start="1201:17" pos:end="1201:22"><literal type="number" pos:start="1201:17" pos:end="1201:18">18</literal> <operator pos:start="1201:20" pos:end="1201:20">+</operator> <literal type="number" pos:start="1201:22" pos:end="1201:22">0</literal></expr>]</index></name> <operator pos:start="1201:25" pos:end="1201:25">=</operator>

        <name pos:start="1203:9" pos:end="1203:23"><name pos:start="1203:9" pos:end="1203:15">ref2frm</name><index pos:start="1203:16" pos:end="1203:23">[<expr pos:start="1203:17" pos:end="1203:22"><literal type="number" pos:start="1203:17" pos:end="1203:20">18</literal> <operator pos:start="1203:20" pos:end="1203:20">+</operator> <literal type="number" pos:start="1203:22" pos:end="1203:22">1</literal></expr>]</index></name> <operator pos:start="1203:25" pos:end="1203:25">=</operator> <operator pos:start="1203:27" pos:end="1203:27">-</operator><literal type="number" pos:start="1203:28" pos:end="1203:28">1</literal></expr>;</expr_stmt>

        <for pos:start="1205:9" pos:end="1209:64">for <control pos:start="1205:13" pos:end="1205:33">(<init pos:start="1205:14" pos:end="1205:20"><expr pos:start="1205:14" pos:end="1205:19"><name pos:start="1205:14" pos:end="1205:14">i</name> <operator pos:start="1205:16" pos:end="1205:16">=</operator> <literal type="number" pos:start="1205:18" pos:end="1205:19">16</literal></expr>;</init> <condition pos:start="1205:22" pos:end="1205:28"><expr pos:start="1205:22" pos:end="1205:27"><name pos:start="1205:22" pos:end="1205:22">i</name> <operator pos:start="1205:24" pos:end="1205:24">&lt;</operator> <literal type="number" pos:start="1205:26" pos:end="1205:27">48</literal></expr>;</condition> <incr pos:start="1205:30" pos:end="1205:32"><expr pos:start="1205:30" pos:end="1205:32"><name pos:start="1205:30" pos:end="1205:30">i</name><operator pos:start="1205:31" pos:end="1205:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="1207:13" pos:end="1209:64"><block_content pos:start="1207:13" pos:end="1209:64">

            <expr_stmt pos:start="1207:13" pos:end="1209:64"><expr pos:start="1207:13" pos:end="1209:63"><name pos:start="1207:13" pos:end="1207:26"><name pos:start="1207:13" pos:end="1207:19">ref2frm</name><index pos:start="1207:20" pos:end="1207:26">[<expr pos:start="1207:21" pos:end="1207:25"><name pos:start="1207:21" pos:end="1207:21">i</name> <operator pos:start="1207:23" pos:end="1207:23">+</operator> <literal type="number" pos:start="1207:25" pos:end="1207:25">4</literal></expr>]</index></name> <operator pos:start="1207:28" pos:end="1207:28">=</operator> <literal type="number" pos:start="1207:30" pos:end="1207:30">4</literal> <operator pos:start="1207:32" pos:end="1207:32">*</operator> <name pos:start="1207:34" pos:end="1207:55"><name pos:start="1207:34" pos:end="1207:40">id_list</name><index pos:start="1207:41" pos:end="1207:55">[<expr pos:start="1207:42" pos:end="1207:54"><operator pos:start="1207:42" pos:end="1207:42">(</operator><name pos:start="1207:43" pos:end="1207:43">i</name> <operator pos:start="1207:45" pos:end="1207:45">-</operator> <literal type="number" pos:start="1207:47" pos:end="1207:48">16</literal><operator pos:start="1207:49" pos:end="1207:49">)</operator> <operator pos:start="1207:51" pos:end="1207:52">&gt;&gt;</operator> <literal type="number" pos:start="1207:54" pos:end="1207:54">1</literal></expr>]</index></name> <operator pos:start="1207:57" pos:end="1207:57">+</operator>

                             <operator pos:start="1209:30" pos:end="1209:30">(</operator><name pos:start="1209:31" pos:end="1209:48"><name pos:start="1209:31" pos:end="1209:32">sl</name><operator pos:start="1209:33" pos:end="1209:34">-&gt;</operator><name pos:start="1209:35" pos:end="1209:42">ref_list</name><index pos:start="1209:43" pos:end="1209:45">[<expr pos:start="1209:44" pos:end="1209:44"><name pos:start="1209:44" pos:end="1209:44">j</name></expr>]</index><index pos:start="1209:46" pos:end="1209:48">[<expr pos:start="1209:47" pos:end="1209:47"><name pos:start="1209:47" pos:end="1209:47">i</name></expr>]</index></name><operator pos:start="1209:49" pos:end="1209:49">.</operator><name pos:start="1209:50" pos:end="1209:58">reference</name> <operator pos:start="1209:60" pos:end="1209:60">&amp;</operator> <literal type="number" pos:start="1209:62" pos:end="1209:62">3</literal><operator pos:start="1209:63" pos:end="1209:63">)</operator></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="1215:5" pos:end="1253:5"><if pos:start="1215:5" pos:end="1253:5">if <condition pos:start="1215:8" pos:end="1215:45">(<expr pos:start="1215:9" pos:end="1215:44"><name pos:start="1215:9" pos:end="1215:23"><name pos:start="1215:9" pos:end="1215:9">h</name><operator pos:start="1215:10" pos:end="1215:11">-&gt;</operator><name pos:start="1215:12" pos:end="1215:16">avctx</name><operator pos:start="1215:17" pos:end="1215:18">-&gt;</operator><name pos:start="1215:19" pos:end="1215:23">debug</name></name> <operator pos:start="1215:25" pos:end="1215:25">&amp;</operator> <name pos:start="1215:27" pos:end="1215:44">FF_DEBUG_PICT_INFO</name></expr>)</condition> <block pos:start="1215:47" pos:end="1253:5">{<block_content pos:start="1217:9" pos:end="1251:106">

        <expr_stmt pos:start="1217:9" pos:end="1251:106"><expr pos:start="1217:9" pos:end="1251:105"><call pos:start="1217:9" pos:end="1251:105"><name pos:start="1217:9" pos:end="1217:14">av_log</name><argument_list pos:start="1217:15" pos:end="1251:105">(<argument pos:start="1217:16" pos:end="1217:23"><expr pos:start="1217:16" pos:end="1217:23"><name pos:start="1217:16" pos:end="1217:23"><name pos:start="1217:16" pos:end="1217:16">h</name><operator pos:start="1217:17" pos:end="1217:18">-&gt;</operator><name pos:start="1217:19" pos:end="1217:23">avctx</name></name></expr></argument>, <argument pos:start="1217:26" pos:end="1217:37"><expr pos:start="1217:26" pos:end="1217:37"><name pos:start="1217:26" pos:end="1217:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="1219:16" pos:end="1219:114"><expr pos:start="1219:16" pos:end="1219:114"><literal type="string" pos:start="1219:16" pos:end="1219:114">"slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s\n"</literal></expr></argument>,

               <argument pos:start="1221:16" pos:end="1221:28"><expr pos:start="1221:16" pos:end="1221:28"><name pos:start="1221:16" pos:end="1221:28"><name pos:start="1221:16" pos:end="1221:17">sl</name><operator pos:start="1221:18" pos:end="1221:19">-&gt;</operator><name pos:start="1221:20" pos:end="1221:28">slice_num</name></name></expr></argument>,

               <argument pos:start="1223:16" pos:end="1223:110"><expr pos:start="1223:16" pos:end="1223:110"><operator pos:start="1223:16" pos:end="1223:16">(</operator><ternary pos:start="1223:17" pos:end="1223:109"><condition pos:start="1223:17" pos:end="1223:52"><expr pos:start="1223:17" pos:end="1223:50"><name pos:start="1223:17" pos:end="1223:36"><name pos:start="1223:17" pos:end="1223:17">h</name><operator pos:start="1223:18" pos:end="1223:19">-&gt;</operator><name pos:start="1223:20" pos:end="1223:36">picture_structure</name></name> <operator pos:start="1223:38" pos:end="1223:39">==</operator> <name pos:start="1223:41" pos:end="1223:50">PICT_FRAME</name></expr> ?</condition><then pos:start="1223:54" pos:end="1223:56"> <expr pos:start="1223:54" pos:end="1223:56"><literal type="string" pos:start="1223:54" pos:end="1223:56">"F"</literal></expr> </then><else pos:start="1223:58" pos:end="1223:109">: <expr pos:start="1223:60" pos:end="1223:109"><ternary pos:start="1223:60" pos:end="1223:109"><condition pos:start="1223:60" pos:end="1223:99"><expr pos:start="1223:60" pos:end="1223:97"><name pos:start="1223:60" pos:end="1223:79"><name pos:start="1223:60" pos:end="1223:60">h</name><operator pos:start="1223:61" pos:end="1223:62">-&gt;</operator><name pos:start="1223:63" pos:end="1223:79">picture_structure</name></name> <operator pos:start="1223:81" pos:end="1223:82">==</operator> <name pos:start="1223:84" pos:end="1223:97">PICT_TOP_FIELD</name></expr> ?</condition><then pos:start="1223:101" pos:end="1223:103"> <expr pos:start="1223:101" pos:end="1223:103"><literal type="string" pos:start="1223:101" pos:end="1223:103">"T"</literal></expr> </then><else pos:start="1223:105" pos:end="1223:109">: <expr pos:start="1223:107" pos:end="1223:109"><literal type="string" pos:start="1223:107" pos:end="1223:109">"B"</literal></expr></else></ternary></expr></else></ternary><operator pos:start="1223:110" pos:end="1223:110">)</operator></expr></argument>,

               <argument pos:start="1225:16" pos:end="1225:32"><expr pos:start="1225:16" pos:end="1225:32"><name pos:start="1225:16" pos:end="1225:32">first_mb_in_slice</name></expr></argument>,

               <argument pos:start="1227:16" pos:end="1227:55"><expr pos:start="1227:16" pos:end="1227:55"><call pos:start="1227:16" pos:end="1227:55"><name pos:start="1227:16" pos:end="1227:39">av_get_picture_type_char</name><argument_list pos:start="1227:40" pos:end="1227:55">(<argument pos:start="1227:41" pos:end="1227:54"><expr pos:start="1227:41" pos:end="1227:54"><name pos:start="1227:41" pos:end="1227:54"><name pos:start="1227:41" pos:end="1227:42">sl</name><operator pos:start="1227:43" pos:end="1227:44">-&gt;</operator><name pos:start="1227:45" pos:end="1227:54">slice_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="1229:16" pos:end="1229:49"><expr pos:start="1229:16" pos:end="1229:49"><ternary pos:start="1229:16" pos:end="1229:49"><condition pos:start="1229:16" pos:end="1229:37"><expr pos:start="1229:16" pos:end="1229:35"><name pos:start="1229:16" pos:end="1229:35"><name pos:start="1229:16" pos:end="1229:17">sl</name><operator pos:start="1229:18" pos:end="1229:19">-&gt;</operator><name pos:start="1229:20" pos:end="1229:35">slice_type_fixed</name></name></expr> ?</condition><then pos:start="1229:39" pos:end="1229:44"> <expr pos:start="1229:39" pos:end="1229:44"><literal type="string" pos:start="1229:39" pos:end="1229:44">" fix"</literal></expr> </then><else pos:start="1229:46" pos:end="1229:49">: <expr pos:start="1229:48" pos:end="1229:49"><literal type="string" pos:start="1229:48" pos:end="1229:49">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1231:16" pos:end="1231:62"><expr pos:start="1231:16" pos:end="1231:62"><ternary pos:start="1231:16" pos:end="1231:62"><condition pos:start="1231:16" pos:end="1231:50"><expr pos:start="1231:16" pos:end="1231:48"><name pos:start="1231:16" pos:end="1231:31"><name pos:start="1231:16" pos:end="1231:16">h</name><operator pos:start="1231:17" pos:end="1231:18">-&gt;</operator><name pos:start="1231:19" pos:end="1231:31">nal_unit_type</name></name> <operator pos:start="1231:33" pos:end="1231:34">==</operator> <name pos:start="1231:36" pos:end="1231:48">NAL_IDR_SLICE</name></expr> ?</condition><then pos:start="1231:52" pos:end="1231:57"> <expr pos:start="1231:52" pos:end="1231:57"><literal type="string" pos:start="1231:52" pos:end="1231:57">" IDR"</literal></expr> </then><else pos:start="1231:59" pos:end="1231:62">: <expr pos:start="1231:61" pos:end="1231:62"><literal type="string" pos:start="1231:61" pos:end="1231:62">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1233:16" pos:end="1233:21"><expr pos:start="1233:16" pos:end="1233:21"><name pos:start="1233:16" pos:end="1233:21">pps_id</name></expr></argument>, <argument pos:start="1233:24" pos:end="1233:35"><expr pos:start="1233:24" pos:end="1233:35"><name pos:start="1233:24" pos:end="1233:35"><name pos:start="1233:24" pos:end="1233:24">h</name><operator pos:start="1233:25" pos:end="1233:26">-&gt;</operator><name pos:start="1233:27" pos:end="1233:35">frame_num</name></name></expr></argument>,

               <argument pos:start="1235:16" pos:end="1235:43"><expr pos:start="1235:16" pos:end="1235:43"><name pos:start="1235:16" pos:end="1235:43"><name pos:start="1235:16" pos:end="1235:16">h</name><operator pos:start="1235:17" pos:end="1235:18">-&gt;</operator><name pos:start="1235:19" pos:end="1235:29">cur_pic_ptr</name><operator pos:start="1235:30" pos:end="1235:31">-&gt;</operator><name pos:start="1235:32" pos:end="1235:40">field_poc</name><index pos:start="1235:41" pos:end="1235:43">[<expr pos:start="1235:42" pos:end="1235:42"><literal type="number" pos:start="1235:42" pos:end="1235:42">0</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1237:16" pos:end="1237:43"><expr pos:start="1237:16" pos:end="1237:43"><name pos:start="1237:16" pos:end="1237:43"><name pos:start="1237:16" pos:end="1237:16">h</name><operator pos:start="1237:17" pos:end="1237:18">-&gt;</operator><name pos:start="1237:19" pos:end="1237:29">cur_pic_ptr</name><operator pos:start="1237:30" pos:end="1237:31">-&gt;</operator><name pos:start="1237:32" pos:end="1237:40">field_poc</name><index pos:start="1237:41" pos:end="1237:43">[<expr pos:start="1237:42" pos:end="1237:42"><literal type="number" pos:start="1237:42" pos:end="1237:42">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1239:16" pos:end="1239:31"><expr pos:start="1239:16" pos:end="1239:31"><name pos:start="1239:16" pos:end="1239:31"><name pos:start="1239:16" pos:end="1239:17">sl</name><operator pos:start="1239:18" pos:end="1239:19">-&gt;</operator><name pos:start="1239:20" pos:end="1239:28">ref_count</name><index pos:start="1239:29" pos:end="1239:31">[<expr pos:start="1239:30" pos:end="1239:30"><literal type="number" pos:start="1239:30" pos:end="1239:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="1239:34" pos:end="1239:49"><expr pos:start="1239:34" pos:end="1239:49"><name pos:start="1239:34" pos:end="1239:49"><name pos:start="1239:34" pos:end="1239:35">sl</name><operator pos:start="1239:36" pos:end="1239:37">-&gt;</operator><name pos:start="1239:38" pos:end="1239:46">ref_count</name><index pos:start="1239:47" pos:end="1239:49">[<expr pos:start="1239:48" pos:end="1239:48"><literal type="number" pos:start="1239:48" pos:end="1239:48">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="1241:16" pos:end="1241:25"><expr pos:start="1241:16" pos:end="1241:25"><name pos:start="1241:16" pos:end="1241:25"><name pos:start="1241:16" pos:end="1241:17">sl</name><operator pos:start="1241:18" pos:end="1241:19">-&gt;</operator><name pos:start="1241:20" pos:end="1241:25">qscale</name></name></expr></argument>,

               <argument pos:start="1243:16" pos:end="1243:35"><expr pos:start="1243:16" pos:end="1243:35"><name pos:start="1243:16" pos:end="1243:35"><name pos:start="1243:16" pos:end="1243:16">h</name><operator pos:start="1243:17" pos:end="1243:18">-&gt;</operator><name pos:start="1243:19" pos:end="1243:35">deblocking_filter</name></name></expr></argument>,

               <argument pos:start="1245:16" pos:end="1245:39"><expr pos:start="1245:16" pos:end="1245:39"><name pos:start="1245:16" pos:end="1245:39"><name pos:start="1245:16" pos:end="1245:16">h</name><operator pos:start="1245:17" pos:end="1245:18">-&gt;</operator><name pos:start="1245:19" pos:end="1245:39">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="1245:42" pos:end="1245:61"><expr pos:start="1245:42" pos:end="1245:61"><name pos:start="1245:42" pos:end="1245:61"><name pos:start="1245:42" pos:end="1245:42">h</name><operator pos:start="1245:43" pos:end="1245:44">-&gt;</operator><name pos:start="1245:45" pos:end="1245:61">slice_beta_offset</name></name></expr></argument>,

               <argument pos:start="1247:16" pos:end="1247:29"><expr pos:start="1247:16" pos:end="1247:29"><name pos:start="1247:16" pos:end="1247:29"><name pos:start="1247:16" pos:end="1247:17">sl</name><operator pos:start="1247:18" pos:end="1247:19">-&gt;</operator><name pos:start="1247:20" pos:end="1247:29">use_weight</name></name></expr></argument>,

               <argument pos:start="1249:16" pos:end="1249:70"><expr pos:start="1249:16" pos:end="1249:70"><ternary pos:start="1249:16" pos:end="1249:70"><condition pos:start="1249:16" pos:end="1249:61"><expr pos:start="1249:16" pos:end="1249:59"><name pos:start="1249:16" pos:end="1249:29"><name pos:start="1249:16" pos:end="1249:17">sl</name><operator pos:start="1249:18" pos:end="1249:19">-&gt;</operator><name pos:start="1249:20" pos:end="1249:29">use_weight</name></name> <operator pos:start="1249:31" pos:end="1249:32">==</operator> <literal type="number" pos:start="1249:34" pos:end="1249:34">1</literal> <operator pos:start="1249:36" pos:end="1249:37">&amp;&amp;</operator> <name pos:start="1249:39" pos:end="1249:59"><name pos:start="1249:39" pos:end="1249:40">sl</name><operator pos:start="1249:41" pos:end="1249:42">-&gt;</operator><name pos:start="1249:43" pos:end="1249:59">use_weight_chroma</name></name></expr> ?</condition><then pos:start="1249:63" pos:end="1249:65"> <expr pos:start="1249:63" pos:end="1249:65"><literal type="string" pos:start="1249:63" pos:end="1249:65">"c"</literal></expr> </then><else pos:start="1249:67" pos:end="1249:70">: <expr pos:start="1249:69" pos:end="1249:70"><literal type="string" pos:start="1249:69" pos:end="1249:70">""</literal></expr></else></ternary></expr></argument>,

               <argument pos:start="1251:16" pos:end="1251:104"><expr pos:start="1251:16" pos:end="1251:104"><ternary pos:start="1251:16" pos:end="1251:104"><condition pos:start="1251:16" pos:end="1251:52"><expr pos:start="1251:16" pos:end="1251:50"><name pos:start="1251:16" pos:end="1251:29"><name pos:start="1251:16" pos:end="1251:17">sl</name><operator pos:start="1251:18" pos:end="1251:19">-&gt;</operator><name pos:start="1251:20" pos:end="1251:29">slice_type</name></name> <operator pos:start="1251:31" pos:end="1251:32">==</operator> <name pos:start="1251:34" pos:end="1251:50">AV_PICTURE_TYPE_B</name></expr> ?</condition><then pos:start="1251:54" pos:end="1251:99"> <expr pos:start="1251:54" pos:end="1251:99"><operator pos:start="1251:54" pos:end="1251:54">(</operator><ternary pos:start="1251:55" pos:end="1251:98"><condition pos:start="1251:55" pos:end="1251:82"><expr pos:start="1251:55" pos:end="1251:80"><name pos:start="1251:55" pos:end="1251:80"><name pos:start="1251:55" pos:end="1251:56">sl</name><operator pos:start="1251:57" pos:end="1251:58">-&gt;</operator><name pos:start="1251:59" pos:end="1251:80">direct_spatial_mv_pred</name></name></expr> ?</condition><then pos:start="1251:84" pos:end="1251:89"> <expr pos:start="1251:84" pos:end="1251:89"><literal type="string" pos:start="1251:84" pos:end="1251:89">"SPAT"</literal></expr> </then><else pos:start="1251:91" pos:end="1251:98">: <expr pos:start="1251:93" pos:end="1251:98"><literal type="string" pos:start="1251:93" pos:end="1251:98">"TEMP"</literal></expr></else></ternary><operator pos:start="1251:99" pos:end="1251:99">)</operator></expr> </then><else pos:start="1251:101" pos:end="1251:104">: <expr pos:start="1251:103" pos:end="1251:104"><literal type="string" pos:start="1251:103" pos:end="1251:104">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="1257:5" pos:end="1257:13">return <expr pos:start="1257:12" pos:end="1257:12"><literal type="number" pos:start="1257:12" pos:end="1257:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
