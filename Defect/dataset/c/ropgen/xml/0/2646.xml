<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2646.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:31">tcg_reg_sync</name><parameter_list pos:start="1:32" pos:end="1:55">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:42">TCGContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:54"><decl pos:start="1:48" pos:end="1:54"><type pos:start="1:48" pos:end="1:54"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:54">reg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:25">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">TCGTemp</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:15">ts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">temp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:8">temp</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <name pos:start="11:12" pos:end="11:30"><name pos:start="11:12" pos:end="11:12">s</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:25">reg_to_temp</name><index pos:start="11:26" pos:end="11:30">[<expr pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:29">reg</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:6">ts</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <operator pos:start="13:10" pos:end="13:10">&amp;</operator><name pos:start="13:11" pos:end="13:24"><name pos:start="13:11" pos:end="13:11">s</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:18">temps</name><index pos:start="13:19" pos:end="13:24">[<expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">temp</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><call pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:40">(<argument pos:start="15:12" pos:end="15:39"><expr pos:start="15:12" pos:end="15:39"><name pos:start="15:12" pos:end="15:23"><name pos:start="15:12" pos:end="15:13">ts</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:23">val_type</name></name> <operator pos:start="15:25" pos:end="15:26">==</operator> <name pos:start="15:28" pos:end="15:39">TEMP_VAL_REG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:44">(<expr pos:start="17:9" pos:end="17:43"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:11">ts</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:25">mem_coherent</name></name> <operator pos:start="17:27" pos:end="17:28">&amp;&amp;</operator> <operator pos:start="17:30" pos:end="17:30">!</operator><name pos:start="17:31" pos:end="17:43"><name pos:start="17:31" pos:end="17:32">ts</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:43">fixed_reg</name></name></expr>)</condition> <block pos:start="17:46" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:66">

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:31">(<expr pos:start="19:13" pos:end="19:30"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:30"><name pos:start="19:14" pos:end="19:15">ts</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:30">mem_allocated</name></name></expr>)</condition> <block pos:start="19:33" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:41">

            <expr_stmt pos:start="21:13" pos:end="21:41"><expr pos:start="21:13" pos:end="21:40"><call pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:31">temp_allocate_frame</name><argument_list pos:start="21:32" pos:end="21:40">(<argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><name pos:start="21:33" pos:end="21:33">s</name></expr></argument>, <argument pos:start="21:36" pos:end="21:39"><expr pos:start="21:36" pos:end="21:39"><name pos:start="21:36" pos:end="21:39">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:66"><expr pos:start="25:9" pos:end="25:65"><call pos:start="25:9" pos:end="25:65"><name pos:start="25:9" pos:end="25:18">tcg_out_st</name><argument_list pos:start="25:19" pos:end="25:65">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">s</name></expr></argument>, <argument pos:start="25:23" pos:end="25:30"><expr pos:start="25:23" pos:end="25:30"><name pos:start="25:23" pos:end="25:30"><name pos:start="25:23" pos:end="25:24">ts</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:30">type</name></name></expr></argument>, <argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><name pos:start="25:33" pos:end="25:35">reg</name></expr></argument>, <argument pos:start="25:38" pos:end="25:48"><expr pos:start="25:38" pos:end="25:48"><name pos:start="25:38" pos:end="25:48"><name pos:start="25:38" pos:end="25:39">ts</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:48">mem_reg</name></name></expr></argument>, <argument pos:start="25:51" pos:end="25:64"><expr pos:start="25:51" pos:end="25:64"><name pos:start="25:51" pos:end="25:64"><name pos:start="25:51" pos:end="25:52">ts</name><operator pos:start="25:53" pos:end="25:54">-&gt;</operator><name pos:start="25:55" pos:end="25:64">mem_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:6">ts</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:20">mem_coherent</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <literal type="number" pos:start="29:24" pos:end="29:24">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
