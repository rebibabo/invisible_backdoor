<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3853.c" pos:tabs="8"><function pos:start="1:1" pos:end="459:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">DriveInfo</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:31">blockdev_init</name><parameter_list pos:start="1:32" pos:end="5:45">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:42">char</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">file</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:55">QDict</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:64">bs_opts</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:55"><decl pos:start="3:33" pos:end="3:55"><type pos:start="3:33" pos:end="3:55"><name pos:start="3:33" pos:end="3:50">BlockInterfaceType</name></type> <name pos:start="3:52" pos:end="3:55">type</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:44"><decl pos:start="5:33" pos:end="5:44"><type pos:start="5:33" pos:end="5:44"><name pos:start="5:33" pos:end="5:37">Error</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier><modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:44">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="459:1">{<block_content pos:start="9:5" pos:end="457:16">

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:22">serial</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">ro</name> <init pos:start="13:12" pos:end="13:14">= <expr pos:start="13:14" pos:end="13:14"><literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">bdrv_flags</name> <init pos:start="15:20" pos:end="15:22">= <expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:21">on_read_error</name></decl>, <decl pos:start="17:24" pos:end="17:37"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:24" pos:end="17:37">on_write_error</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:13">DriveInfo</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:18">ThrottleConfig</name></type> <name pos:start="21:20" pos:end="21:22">cfg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:16">snapshot</name> <init pos:start="23:18" pos:end="23:20">= <expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:21"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">bool</name></type> <name pos:start="25:10" pos:end="25:21">copy_on_read</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:24"><decl pos:start="29:5" pos:end="29:23"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:9">Error</name> <modifier pos:start="29:11" pos:end="29:11">*</modifier></type><name pos:start="29:12" pos:end="29:16">error</name> <init pos:start="29:18" pos:end="29:23">= <expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:19"><decl pos:start="31:5" pos:end="31:18"><type pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:12">QemuOpts</name> <modifier pos:start="31:14" pos:end="31:14">*</modifier></type><name pos:start="31:15" pos:end="31:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:19"><decl pos:start="33:5" pos:end="33:18"><type pos:start="33:5" pos:end="33:16"><specifier pos:start="33:5" pos:end="33:9">const</specifier> <name pos:start="33:11" pos:end="33:14">char</name> <modifier pos:start="33:16" pos:end="33:16">*</modifier></type><name pos:start="33:17" pos:end="33:18">id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:34"><decl pos:start="35:5" pos:end="35:33"><type pos:start="35:5" pos:end="35:8"><name pos:start="35:5" pos:end="35:8">bool</name></type> <name pos:start="35:10" pos:end="35:33">has_driver_specific_opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:28"><decl pos:start="37:5" pos:end="37:27"><type pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:15">BlockDriver</name> <modifier pos:start="37:17" pos:end="37:17">*</modifier></type><name pos:start="37:18" pos:end="37:20">drv</name> <init pos:start="37:22" pos:end="37:27">= <expr pos:start="37:24" pos:end="37:27"><name pos:start="37:24" pos:end="37:27">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="41:5" pos:end="43:56">/* Check common options by copying from bs_opts to opts, all other options

     * stay in bs_opts for processing by bdrv_open(). */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:42"><expr pos:start="45:5" pos:end="45:41"><name pos:start="45:5" pos:end="45:6">id</name> <operator pos:start="45:8" pos:end="45:8">=</operator> <call pos:start="45:10" pos:end="45:41"><name pos:start="45:10" pos:end="45:26">qdict_get_try_str</name><argument_list pos:start="45:27" pos:end="45:41">(<argument pos:start="45:28" pos:end="45:34"><expr pos:start="45:28" pos:end="45:34"><name pos:start="45:28" pos:end="45:34">bs_opts</name></expr></argument>, <argument pos:start="45:37" pos:end="45:40"><expr pos:start="45:37" pos:end="45:40"><literal type="string" pos:start="45:37" pos:end="45:40">"id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:68"><expr pos:start="47:5" pos:end="47:67"><name pos:start="47:5" pos:end="47:8">opts</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:67"><name pos:start="47:12" pos:end="47:27">qemu_opts_create</name><argument_list pos:start="47:28" pos:end="47:67">(<argument pos:start="47:29" pos:end="47:51"><expr pos:start="47:29" pos:end="47:51"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:51">qemu_common_drive_opts</name></expr></argument>, <argument pos:start="47:54" pos:end="47:55"><expr pos:start="47:54" pos:end="47:55"><name pos:start="47:54" pos:end="47:55">id</name></expr></argument>, <argument pos:start="47:58" pos:end="47:58"><expr pos:start="47:58" pos:end="47:58"><literal type="number" pos:start="47:58" pos:end="47:58">1</literal></expr></argument>, <argument pos:start="47:61" pos:end="47:66"><expr pos:start="47:61" pos:end="47:66"><operator pos:start="47:61" pos:end="47:61">&amp;</operator><name pos:start="47:62" pos:end="47:66">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:29">(<expr pos:start="49:9" pos:end="49:28"><call pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:20">error_is_set</name><argument_list pos:start="49:21" pos:end="49:28">(<argument pos:start="49:22" pos:end="49:27"><expr pos:start="49:22" pos:end="49:27"><operator pos:start="49:22" pos:end="49:22">&amp;</operator><name pos:start="49:23" pos:end="49:27">error</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:31" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:20">

        <expr_stmt pos:start="51:9" pos:end="51:37"><expr pos:start="51:9" pos:end="51:36"><call pos:start="51:9" pos:end="51:36"><name pos:start="51:9" pos:end="51:23">error_propagate</name><argument_list pos:start="51:24" pos:end="51:36">(<argument pos:start="51:25" pos:end="51:28"><expr pos:start="51:25" pos:end="51:28"><name pos:start="51:25" pos:end="51:28">errp</name></expr></argument>, <argument pos:start="51:31" pos:end="51:35"><expr pos:start="51:31" pos:end="51:35"><name pos:start="51:31" pos:end="51:35">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:20">return <expr pos:start="53:16" pos:end="53:19"><name pos:start="53:16" pos:end="53:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:50"><expr pos:start="59:5" pos:end="59:49"><call pos:start="59:5" pos:end="59:49"><name pos:start="59:5" pos:end="59:26">qemu_opts_absorb_qdict</name><argument_list pos:start="59:27" pos:end="59:49">(<argument pos:start="59:28" pos:end="59:31"><expr pos:start="59:28" pos:end="59:31"><name pos:start="59:28" pos:end="59:31">opts</name></expr></argument>, <argument pos:start="59:34" pos:end="59:40"><expr pos:start="59:34" pos:end="59:40"><name pos:start="59:34" pos:end="59:40">bs_opts</name></expr></argument>, <argument pos:start="59:43" pos:end="59:48"><expr pos:start="59:43" pos:end="59:48"><operator pos:start="59:43" pos:end="59:43">&amp;</operator><name pos:start="59:44" pos:end="59:48">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:29">(<expr pos:start="61:9" pos:end="61:28"><call pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:20">error_is_set</name><argument_list pos:start="61:21" pos:end="61:28">(<argument pos:start="61:22" pos:end="61:27"><expr pos:start="61:22" pos:end="61:27"><operator pos:start="61:22" pos:end="61:22">&amp;</operator><name pos:start="61:23" pos:end="61:27">error</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:31" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:23">

        <expr_stmt pos:start="63:9" pos:end="63:37"><expr pos:start="63:9" pos:end="63:36"><call pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:23">error_propagate</name><argument_list pos:start="63:24" pos:end="63:36">(<argument pos:start="63:25" pos:end="63:28"><expr pos:start="63:25" pos:end="63:28"><name pos:start="63:25" pos:end="63:28">errp</name></expr></argument>, <argument pos:start="63:31" pos:end="63:35"><expr pos:start="63:31" pos:end="63:35"><name pos:start="63:31" pos:end="63:35">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:23">goto <name pos:start="65:14" pos:end="65:22">early_err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:11">(<expr pos:start="71:9" pos:end="71:10"><name pos:start="71:9" pos:end="71:10">id</name></expr>)</condition> <block pos:start="71:13" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:33">

        <expr_stmt pos:start="73:9" pos:end="73:33"><expr pos:start="73:9" pos:end="73:32"><call pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:17">qdict_del</name><argument_list pos:start="73:18" pos:end="73:32">(<argument pos:start="73:19" pos:end="73:25"><expr pos:start="73:19" pos:end="73:25"><name pos:start="73:19" pos:end="73:25">bs_opts</name></expr></argument>, <argument pos:start="73:28" pos:end="73:31"><expr pos:start="73:28" pos:end="73:31"><literal type="string" pos:start="73:28" pos:end="73:31">"id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:53"><expr pos:start="79:5" pos:end="79:52"><name pos:start="79:5" pos:end="79:28">has_driver_specific_opts</name> <operator pos:start="79:30" pos:end="79:30">=</operator> <operator pos:start="79:32" pos:end="79:32">!</operator><operator pos:start="79:33" pos:end="79:33">!</operator><call pos:start="79:34" pos:end="79:52"><name pos:start="79:34" pos:end="79:43">qdict_size</name><argument_list pos:start="79:44" pos:end="79:52">(<argument pos:start="79:45" pos:end="79:51"><expr pos:start="79:45" pos:end="79:51"><name pos:start="79:45" pos:end="79:51">bs_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:28">/* extract parameters */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:54"><expr pos:start="85:5" pos:end="85:53"><name pos:start="85:5" pos:end="85:12">snapshot</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <call pos:start="85:16" pos:end="85:53"><name pos:start="85:16" pos:end="85:32">qemu_opt_get_bool</name><argument_list pos:start="85:33" pos:end="85:53">(<argument pos:start="85:34" pos:end="85:37"><expr pos:start="85:34" pos:end="85:37"><name pos:start="85:34" pos:end="85:37">opts</name></expr></argument>, <argument pos:start="85:40" pos:end="85:49"><expr pos:start="85:40" pos:end="85:49"><literal type="string" pos:start="85:40" pos:end="85:49">"snapshot"</literal></expr></argument>, <argument pos:start="85:52" pos:end="85:52"><expr pos:start="85:52" pos:end="85:52"><literal type="number" pos:start="85:52" pos:end="85:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:49"><expr pos:start="87:5" pos:end="87:48"><name pos:start="87:5" pos:end="87:6">ro</name> <operator pos:start="87:8" pos:end="87:8">=</operator> <call pos:start="87:10" pos:end="87:48"><name pos:start="87:10" pos:end="87:26">qemu_opt_get_bool</name><argument_list pos:start="87:27" pos:end="87:48">(<argument pos:start="87:28" pos:end="87:31"><expr pos:start="87:28" pos:end="87:31"><name pos:start="87:28" pos:end="87:31">opts</name></expr></argument>, <argument pos:start="87:34" pos:end="87:44"><expr pos:start="87:34" pos:end="87:44"><literal type="string" pos:start="87:34" pos:end="87:44">"read-only"</literal></expr></argument>, <argument pos:start="87:47" pos:end="87:47"><expr pos:start="87:47" pos:end="87:47"><literal type="number" pos:start="87:47" pos:end="87:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:66"><expr pos:start="89:5" pos:end="89:65"><name pos:start="89:5" pos:end="89:16">copy_on_read</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:65"><name pos:start="89:20" pos:end="89:36">qemu_opt_get_bool</name><argument_list pos:start="89:37" pos:end="89:65">(<argument pos:start="89:38" pos:end="89:41"><expr pos:start="89:38" pos:end="89:41"><name pos:start="89:38" pos:end="89:41">opts</name></expr></argument>, <argument pos:start="89:44" pos:end="89:57"><expr pos:start="89:44" pos:end="89:57"><literal type="string" pos:start="89:44" pos:end="89:57">"copy-on-read"</literal></expr></argument>, <argument pos:start="89:60" pos:end="89:64"><expr pos:start="89:60" pos:end="89:64"><name pos:start="89:60" pos:end="89:64">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:42"><expr pos:start="93:5" pos:end="93:41"><name pos:start="93:5" pos:end="93:10">serial</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <call pos:start="93:14" pos:end="93:41"><name pos:start="93:14" pos:end="93:25">qemu_opt_get</name><argument_list pos:start="93:26" pos:end="93:41">(<argument pos:start="93:27" pos:end="93:30"><expr pos:start="93:27" pos:end="93:30"><name pos:start="93:27" pos:end="93:30">opts</name></expr></argument>, <argument pos:start="93:33" pos:end="93:40"><expr pos:start="93:33" pos:end="93:40"><literal type="string" pos:start="93:33" pos:end="93:40">"serial"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="97:5" pos:end="107:5"><if pos:start="97:5" pos:end="107:5">if <condition pos:start="97:8" pos:end="97:54">(<expr pos:start="97:9" pos:end="97:53"><operator pos:start="97:9" pos:end="97:9">(</operator><name pos:start="97:10" pos:end="97:12">buf</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <call pos:start="97:16" pos:end="97:44"><name pos:start="97:16" pos:end="97:27">qemu_opt_get</name><argument_list pos:start="97:28" pos:end="97:44">(<argument pos:start="97:29" pos:end="97:32"><expr pos:start="97:29" pos:end="97:32"><name pos:start="97:29" pos:end="97:32">opts</name></expr></argument>, <argument pos:start="97:35" pos:end="97:43"><expr pos:start="97:35" pos:end="97:43"><literal type="string" pos:start="97:35" pos:end="97:43">"discard"</literal></expr></argument>)</argument_list></call><operator pos:start="97:45" pos:end="97:45">)</operator> <operator pos:start="97:47" pos:end="97:48">!=</operator> <name pos:start="97:50" pos:end="97:53">NULL</name></expr>)</condition> <block pos:start="97:56" pos:end="107:5">{<block_content pos:start="99:9" pos:end="105:9">

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:60">(<expr pos:start="99:13" pos:end="99:59"><call pos:start="99:13" pos:end="99:54"><name pos:start="99:13" pos:end="99:36">bdrv_parse_discard_flags</name><argument_list pos:start="99:37" pos:end="99:54">(<argument pos:start="99:38" pos:end="99:40"><expr pos:start="99:38" pos:end="99:40"><name pos:start="99:38" pos:end="99:40">buf</name></expr></argument>, <argument pos:start="99:43" pos:end="99:53"><expr pos:start="99:43" pos:end="99:53"><operator pos:start="99:43" pos:end="99:43">&amp;</operator><name pos:start="99:44" pos:end="99:53">bdrv_flags</name></expr></argument>)</argument_list></call> <operator pos:start="99:56" pos:end="99:57">!=</operator> <literal type="number" pos:start="99:59" pos:end="99:59">0</literal></expr>)</condition> <block pos:start="99:62" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:27">

            <expr_stmt pos:start="101:13" pos:end="101:55"><expr pos:start="101:13" pos:end="101:54"><call pos:start="101:13" pos:end="101:54"><name pos:start="101:13" pos:end="101:22">error_setg</name><argument_list pos:start="101:23" pos:end="101:54">(<argument pos:start="101:24" pos:end="101:27"><expr pos:start="101:24" pos:end="101:27"><name pos:start="101:24" pos:end="101:27">errp</name></expr></argument>, <argument pos:start="101:30" pos:end="101:53"><expr pos:start="101:30" pos:end="101:53"><literal type="string" pos:start="101:30" pos:end="101:53">"invalid discard option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="103:13" pos:end="103:27">goto <name pos:start="103:18" pos:end="103:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="115:5"><if pos:start="111:5" pos:end="115:5">if <condition pos:start="111:8" pos:end="111:57">(<expr pos:start="111:9" pos:end="111:56"><call pos:start="111:9" pos:end="111:56"><name pos:start="111:9" pos:end="111:25">qemu_opt_get_bool</name><argument_list pos:start="111:26" pos:end="111:56">(<argument pos:start="111:27" pos:end="111:30"><expr pos:start="111:27" pos:end="111:30"><name pos:start="111:27" pos:end="111:30">opts</name></expr></argument>, <argument pos:start="111:33" pos:end="111:49"><expr pos:start="111:33" pos:end="111:49"><literal type="string" pos:start="111:33" pos:end="111:49">"cache.writeback"</literal></expr></argument>, <argument pos:start="111:52" pos:end="111:55"><expr pos:start="111:52" pos:end="111:55"><name pos:start="111:52" pos:end="111:55">true</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:59" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:38">

        <expr_stmt pos:start="113:9" pos:end="113:38"><expr pos:start="113:9" pos:end="113:37"><name pos:start="113:9" pos:end="113:18">bdrv_flags</name> <operator pos:start="113:20" pos:end="113:21">|=</operator> <name pos:start="113:23" pos:end="113:37">BDRV_O_CACHE_WB</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="117:5" pos:end="121:5"><if pos:start="117:5" pos:end="121:5">if <condition pos:start="117:8" pos:end="117:55">(<expr pos:start="117:9" pos:end="117:54"><call pos:start="117:9" pos:end="117:54"><name pos:start="117:9" pos:end="117:25">qemu_opt_get_bool</name><argument_list pos:start="117:26" pos:end="117:54">(<argument pos:start="117:27" pos:end="117:30"><expr pos:start="117:27" pos:end="117:30"><name pos:start="117:27" pos:end="117:30">opts</name></expr></argument>, <argument pos:start="117:33" pos:end="117:46"><expr pos:start="117:33" pos:end="117:46"><literal type="string" pos:start="117:33" pos:end="117:46">"cache.direct"</literal></expr></argument>, <argument pos:start="117:49" pos:end="117:53"><expr pos:start="117:49" pos:end="117:53"><name pos:start="117:49" pos:end="117:53">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:57" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:37">

        <expr_stmt pos:start="119:9" pos:end="119:37"><expr pos:start="119:9" pos:end="119:36"><name pos:start="119:9" pos:end="119:18">bdrv_flags</name> <operator pos:start="119:20" pos:end="119:21">|=</operator> <name pos:start="119:23" pos:end="119:36">BDRV_O_NOCACHE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="123:5" pos:end="132:0"><if pos:start="123:5" pos:end="132:0">if <condition pos:start="123:8" pos:end="123:57">(<expr pos:start="123:9" pos:end="123:56"><call pos:start="123:9" pos:end="123:56"><name pos:start="123:9" pos:end="123:25">qemu_opt_get_bool</name><argument_list pos:start="123:26" pos:end="123:56">(<argument pos:start="123:27" pos:end="123:30"><expr pos:start="123:27" pos:end="123:30"><name pos:start="123:27" pos:end="123:30">opts</name></expr></argument>, <argument pos:start="123:33" pos:end="123:48"><expr pos:start="123:33" pos:end="123:48"><literal type="string" pos:start="123:33" pos:end="123:48">"cache.no-flush"</literal></expr></argument>, <argument pos:start="123:51" pos:end="123:55"><expr pos:start="123:51" pos:end="123:55"><name pos:start="123:51" pos:end="123:55">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:59" pos:end="132:0">{<block_content pos:start="125:9" pos:end="125:38">

        <expr_stmt pos:start="125:9" pos:end="125:38"><expr pos:start="125:9" pos:end="125:37"><name pos:start="125:9" pos:end="125:18">bdrv_flags</name> <operator pos:start="125:20" pos:end="125:21">|=</operator> <name pos:start="125:23" pos:end="125:37">BDRV_O_NO_FLUSH</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="131:1" pos:end="131:23">#<cpp:directive pos:start="131:2" pos:end="131:6">ifdef</cpp:directive> <name pos:start="131:8" pos:end="131:23">CONFIG_LINUX_AIO</name></cpp:ifdef>

    <if_stmt pos:start="133:5" pos:end="154:0"><if pos:start="133:5" pos:end="154:0">if <condition pos:start="133:8" pos:end="133:50">(<expr pos:start="133:9" pos:end="133:49"><operator pos:start="133:9" pos:end="133:9">(</operator><name pos:start="133:10" pos:end="133:12">buf</name> <operator pos:start="133:14" pos:end="133:14">=</operator> <call pos:start="133:16" pos:end="133:40"><name pos:start="133:16" pos:end="133:27">qemu_opt_get</name><argument_list pos:start="133:28" pos:end="133:40">(<argument pos:start="133:29" pos:end="133:32"><expr pos:start="133:29" pos:end="133:32"><name pos:start="133:29" pos:end="133:32">opts</name></expr></argument>, <argument pos:start="133:35" pos:end="133:39"><expr pos:start="133:35" pos:end="133:39"><literal type="string" pos:start="133:35" pos:end="133:39">"aio"</literal></expr></argument>)</argument_list></call><operator pos:start="133:41" pos:end="133:41">)</operator> <operator pos:start="133:43" pos:end="133:44">!=</operator> <name pos:start="133:46" pos:end="133:49">NULL</name></expr>)</condition> <block pos:start="133:52" pos:end="154:0">{<block_content pos:start="135:9" pos:end="149:9">

        <if_stmt pos:start="135:9" pos:end="149:9"><if pos:start="135:9" pos:end="139:9">if <condition pos:start="135:12" pos:end="135:35">(<expr pos:start="135:13" pos:end="135:34"><operator pos:start="135:13" pos:end="135:13">!</operator><call pos:start="135:14" pos:end="135:34"><name pos:start="135:14" pos:end="135:19">strcmp</name><argument_list pos:start="135:20" pos:end="135:34">(<argument pos:start="135:21" pos:end="135:23"><expr pos:start="135:21" pos:end="135:23"><name pos:start="135:21" pos:end="135:23">buf</name></expr></argument>, <argument pos:start="135:26" pos:end="135:33"><expr pos:start="135:26" pos:end="135:33"><literal type="string" pos:start="135:26" pos:end="135:33">"native"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:37" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:44">

            <expr_stmt pos:start="137:13" pos:end="137:44"><expr pos:start="137:13" pos:end="137:43"><name pos:start="137:13" pos:end="137:22">bdrv_flags</name> <operator pos:start="137:24" pos:end="137:25">|=</operator> <name pos:start="137:27" pos:end="137:43">BDRV_O_NATIVE_AIO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="139:11" pos:end="143:9">else if <condition pos:start="139:19" pos:end="139:43">(<expr pos:start="139:20" pos:end="139:42"><operator pos:start="139:20" pos:end="139:20">!</operator><call pos:start="139:21" pos:end="139:42"><name pos:start="139:21" pos:end="139:26">strcmp</name><argument_list pos:start="139:27" pos:end="139:42">(<argument pos:start="139:28" pos:end="139:30"><expr pos:start="139:28" pos:end="139:30"><name pos:start="139:28" pos:end="139:30">buf</name></expr></argument>, <argument pos:start="139:33" pos:end="139:41"><expr pos:start="139:33" pos:end="139:41"><literal type="string" pos:start="139:33" pos:end="139:41">"threads"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:45" pos:end="143:9">{<block_content>

            <comment type="block" pos:start="141:13" pos:end="141:37">/* this is the default */</comment>

        </block_content>}</block></if> <else pos:start="143:11" pos:end="149:9">else <block pos:start="143:16" pos:end="149:9">{<block_content pos:start="145:12" pos:end="147:26">

           <expr_stmt pos:start="145:12" pos:end="145:50"><expr pos:start="145:12" pos:end="145:49"><call pos:start="145:12" pos:end="145:49"><name pos:start="145:12" pos:end="145:21">error_setg</name><argument_list pos:start="145:22" pos:end="145:49">(<argument pos:start="145:23" pos:end="145:26"><expr pos:start="145:23" pos:end="145:26"><name pos:start="145:23" pos:end="145:26">errp</name></expr></argument>, <argument pos:start="145:29" pos:end="145:48"><expr pos:start="145:29" pos:end="145:48"><literal type="string" pos:start="145:29" pos:end="145:48">"invalid aio option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <goto pos:start="147:12" pos:end="147:26">goto <name pos:start="147:17" pos:end="147:25">early_err</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="157:5" pos:end="183:5"><if pos:start="157:5" pos:end="183:5">if <condition pos:start="157:8" pos:end="157:53">(<expr pos:start="157:9" pos:end="157:52"><operator pos:start="157:9" pos:end="157:9">(</operator><name pos:start="157:10" pos:end="157:12">buf</name> <operator pos:start="157:14" pos:end="157:14">=</operator> <call pos:start="157:16" pos:end="157:43"><name pos:start="157:16" pos:end="157:27">qemu_opt_get</name><argument_list pos:start="157:28" pos:end="157:43">(<argument pos:start="157:29" pos:end="157:32"><expr pos:start="157:29" pos:end="157:32"><name pos:start="157:29" pos:end="157:32">opts</name></expr></argument>, <argument pos:start="157:35" pos:end="157:42"><expr pos:start="157:35" pos:end="157:42"><literal type="string" pos:start="157:35" pos:end="157:42">"format"</literal></expr></argument>)</argument_list></call><operator pos:start="157:44" pos:end="157:44">)</operator> <operator pos:start="157:46" pos:end="157:47">!=</operator> <name pos:start="157:49" pos:end="157:52">NULL</name></expr>)</condition> <block pos:start="157:55" pos:end="183:5">{<block_content pos:start="159:9" pos:end="181:9">

        <if_stmt pos:start="159:9" pos:end="169:9"><if pos:start="159:9" pos:end="169:9">if <condition pos:start="159:12" pos:end="159:32">(<expr pos:start="159:13" pos:end="159:31"><call pos:start="159:13" pos:end="159:31"><name pos:start="159:13" pos:end="159:26">is_help_option</name><argument_list pos:start="159:27" pos:end="159:31">(<argument pos:start="159:28" pos:end="159:30"><expr pos:start="159:28" pos:end="159:30"><name pos:start="159:28" pos:end="159:30">buf</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:34" pos:end="169:9">{<block_content pos:start="161:13" pos:end="167:27">

            <expr_stmt pos:start="161:13" pos:end="161:47"><expr pos:start="161:13" pos:end="161:46"><call pos:start="161:13" pos:end="161:46"><name pos:start="161:13" pos:end="161:24">error_printf</name><argument_list pos:start="161:25" pos:end="161:46">(<argument pos:start="161:26" pos:end="161:45"><expr pos:start="161:26" pos:end="161:45"><literal type="string" pos:start="161:26" pos:end="161:45">"Supported formats:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:57"><expr pos:start="163:13" pos:end="163:56"><call pos:start="163:13" pos:end="163:56"><name pos:start="163:13" pos:end="163:31">bdrv_iterate_format</name><argument_list pos:start="163:32" pos:end="163:56">(<argument pos:start="163:33" pos:end="163:49"><expr pos:start="163:33" pos:end="163:49"><name pos:start="163:33" pos:end="163:49">bdrv_format_print</name></expr></argument>, <argument pos:start="163:52" pos:end="163:55"><expr pos:start="163:52" pos:end="163:55"><name pos:start="163:52" pos:end="163:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:31"><expr pos:start="165:13" pos:end="165:30"><call pos:start="165:13" pos:end="165:30"><name pos:start="165:13" pos:end="165:24">error_printf</name><argument_list pos:start="165:25" pos:end="165:30">(<argument pos:start="165:26" pos:end="165:29"><expr pos:start="165:26" pos:end="165:29"><literal type="string" pos:start="165:26" pos:end="165:29">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="167:13" pos:end="167:27">goto <name pos:start="167:18" pos:end="167:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="173:9" pos:end="173:36"><expr pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:11">drv</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <call pos:start="173:15" pos:end="173:35"><name pos:start="173:15" pos:end="173:30">bdrv_find_format</name><argument_list pos:start="173:31" pos:end="173:35">(<argument pos:start="173:32" pos:end="173:34"><expr pos:start="173:32" pos:end="173:34"><name pos:start="173:32" pos:end="173:34">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="181:9"><if pos:start="175:9" pos:end="181:9">if <condition pos:start="175:12" pos:end="175:17">(<expr pos:start="175:13" pos:end="175:16"><operator pos:start="175:13" pos:end="175:13">!</operator><name pos:start="175:14" pos:end="175:16">drv</name></expr>)</condition> <block pos:start="175:19" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:27">

            <expr_stmt pos:start="177:13" pos:end="177:57"><expr pos:start="177:13" pos:end="177:56"><call pos:start="177:13" pos:end="177:56"><name pos:start="177:13" pos:end="177:22">error_setg</name><argument_list pos:start="177:23" pos:end="177:56">(<argument pos:start="177:24" pos:end="177:27"><expr pos:start="177:24" pos:end="177:27"><name pos:start="177:24" pos:end="177:27">errp</name></expr></argument>, <argument pos:start="177:30" pos:end="177:50"><expr pos:start="177:30" pos:end="177:50"><literal type="string" pos:start="177:30" pos:end="177:50">"'%s' invalid format"</literal></expr></argument>, <argument pos:start="177:53" pos:end="177:55"><expr pos:start="177:53" pos:end="177:55"><name pos:start="177:53" pos:end="177:55">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="179:13" pos:end="179:27">goto <name pos:start="179:18" pos:end="179:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="187:5" pos:end="187:29">/* disk I/O throttling */</comment>

    <expr_stmt pos:start="189:5" pos:end="189:33"><expr pos:start="189:5" pos:end="189:32"><call pos:start="189:5" pos:end="189:32"><name pos:start="189:5" pos:end="189:10">memset</name><argument_list pos:start="189:11" pos:end="189:32">(<argument pos:start="189:12" pos:end="189:15"><expr pos:start="189:12" pos:end="189:15"><operator pos:start="189:12" pos:end="189:12">&amp;</operator><name pos:start="189:13" pos:end="189:15">cfg</name></expr></argument>, <argument pos:start="189:18" pos:end="189:18"><expr pos:start="189:18" pos:end="189:18"><literal type="number" pos:start="189:18" pos:end="189:18">0</literal></expr></argument>, <argument pos:start="189:21" pos:end="189:31"><expr pos:start="189:21" pos:end="189:31"><sizeof pos:start="189:21" pos:end="189:31">sizeof<argument_list pos:start="189:27" pos:end="189:31">(<argument pos:start="189:28" pos:end="189:30"><expr pos:start="189:28" pos:end="189:30"><name pos:start="189:28" pos:end="189:30">cfg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="193:61"><expr pos:start="191:5" pos:end="193:60"><name pos:start="191:5" pos:end="191:35"><name pos:start="191:5" pos:end="191:7">cfg</name><operator pos:start="191:8" pos:end="191:8">.</operator><name pos:start="191:9" pos:end="191:15">buckets</name><index pos:start="191:16" pos:end="191:35">[<expr pos:start="191:17" pos:end="191:34"><name pos:start="191:17" pos:end="191:34">THROTTLE_BPS_TOTAL</name></expr>]</index></name><operator pos:start="191:36" pos:end="191:36">.</operator><name pos:start="191:37" pos:end="191:39">avg</name> <operator pos:start="191:41" pos:end="191:41">=</operator>

        <call pos:start="193:9" pos:end="193:60"><name pos:start="193:9" pos:end="193:27">qemu_opt_get_number</name><argument_list pos:start="193:28" pos:end="193:60">(<argument pos:start="193:29" pos:end="193:32"><expr pos:start="193:29" pos:end="193:32"><name pos:start="193:29" pos:end="193:32">opts</name></expr></argument>, <argument pos:start="193:35" pos:end="193:56"><expr pos:start="193:35" pos:end="193:56"><literal type="string" pos:start="193:35" pos:end="193:56">"throttling.bps-total"</literal></expr></argument>, <argument pos:start="193:59" pos:end="193:59"><expr pos:start="193:59" pos:end="193:59"><literal type="number" pos:start="193:59" pos:end="193:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="197:60"><expr pos:start="195:5" pos:end="197:59"><name pos:start="195:5" pos:end="195:34"><name pos:start="195:5" pos:end="195:7">cfg</name><operator pos:start="195:8" pos:end="195:8">.</operator><name pos:start="195:9" pos:end="195:15">buckets</name><index pos:start="195:16" pos:end="195:34">[<expr pos:start="195:17" pos:end="195:33"><name pos:start="195:17" pos:end="195:33">THROTTLE_BPS_READ</name></expr>]</index></name><operator pos:start="195:35" pos:end="195:35">.</operator><name pos:start="195:36" pos:end="195:38">avg</name>  <operator pos:start="195:41" pos:end="195:41">=</operator>

        <call pos:start="197:9" pos:end="197:59"><name pos:start="197:9" pos:end="197:27">qemu_opt_get_number</name><argument_list pos:start="197:28" pos:end="197:59">(<argument pos:start="197:29" pos:end="197:32"><expr pos:start="197:29" pos:end="197:32"><name pos:start="197:29" pos:end="197:32">opts</name></expr></argument>, <argument pos:start="197:35" pos:end="197:55"><expr pos:start="197:35" pos:end="197:55"><literal type="string" pos:start="197:35" pos:end="197:55">"throttling.bps-read"</literal></expr></argument>, <argument pos:start="197:58" pos:end="197:58"><expr pos:start="197:58" pos:end="197:58"><literal type="number" pos:start="197:58" pos:end="197:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="201:61"><expr pos:start="199:5" pos:end="201:60"><name pos:start="199:5" pos:end="199:35"><name pos:start="199:5" pos:end="199:7">cfg</name><operator pos:start="199:8" pos:end="199:8">.</operator><name pos:start="199:9" pos:end="199:15">buckets</name><index pos:start="199:16" pos:end="199:35">[<expr pos:start="199:17" pos:end="199:34"><name pos:start="199:17" pos:end="199:34">THROTTLE_BPS_WRITE</name></expr>]</index></name><operator pos:start="199:36" pos:end="199:36">.</operator><name pos:start="199:37" pos:end="199:39">avg</name> <operator pos:start="199:41" pos:end="199:41">=</operator>

        <call pos:start="201:9" pos:end="201:60"><name pos:start="201:9" pos:end="201:27">qemu_opt_get_number</name><argument_list pos:start="201:28" pos:end="201:60">(<argument pos:start="201:29" pos:end="201:32"><expr pos:start="201:29" pos:end="201:32"><name pos:start="201:29" pos:end="201:32">opts</name></expr></argument>, <argument pos:start="201:35" pos:end="201:56"><expr pos:start="201:35" pos:end="201:56"><literal type="string" pos:start="201:35" pos:end="201:56">"throttling.bps-write"</literal></expr></argument>, <argument pos:start="201:59" pos:end="201:59"><expr pos:start="201:59" pos:end="201:59"><literal type="number" pos:start="201:59" pos:end="201:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="205:62"><expr pos:start="203:5" pos:end="205:61"><name pos:start="203:5" pos:end="203:35"><name pos:start="203:5" pos:end="203:7">cfg</name><operator pos:start="203:8" pos:end="203:8">.</operator><name pos:start="203:9" pos:end="203:15">buckets</name><index pos:start="203:16" pos:end="203:35">[<expr pos:start="203:17" pos:end="203:34"><name pos:start="203:17" pos:end="203:34">THROTTLE_OPS_TOTAL</name></expr>]</index></name><operator pos:start="203:36" pos:end="203:36">.</operator><name pos:start="203:37" pos:end="203:39">avg</name> <operator pos:start="203:41" pos:end="203:41">=</operator>

        <call pos:start="205:9" pos:end="205:61"><name pos:start="205:9" pos:end="205:27">qemu_opt_get_number</name><argument_list pos:start="205:28" pos:end="205:61">(<argument pos:start="205:29" pos:end="205:32"><expr pos:start="205:29" pos:end="205:32"><name pos:start="205:29" pos:end="205:32">opts</name></expr></argument>, <argument pos:start="205:35" pos:end="205:57"><expr pos:start="205:35" pos:end="205:57"><literal type="string" pos:start="205:35" pos:end="205:57">"throttling.iops-total"</literal></expr></argument>, <argument pos:start="205:60" pos:end="205:60"><expr pos:start="205:60" pos:end="205:60"><literal type="number" pos:start="205:60" pos:end="205:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="209:61"><expr pos:start="207:5" pos:end="209:60"><name pos:start="207:5" pos:end="207:34"><name pos:start="207:5" pos:end="207:7">cfg</name><operator pos:start="207:8" pos:end="207:8">.</operator><name pos:start="207:9" pos:end="207:15">buckets</name><index pos:start="207:16" pos:end="207:34">[<expr pos:start="207:17" pos:end="207:33"><name pos:start="207:17" pos:end="207:33">THROTTLE_OPS_READ</name></expr>]</index></name><operator pos:start="207:35" pos:end="207:35">.</operator><name pos:start="207:36" pos:end="207:38">avg</name> <operator pos:start="207:40" pos:end="207:40">=</operator>

        <call pos:start="209:9" pos:end="209:60"><name pos:start="209:9" pos:end="209:27">qemu_opt_get_number</name><argument_list pos:start="209:28" pos:end="209:60">(<argument pos:start="209:29" pos:end="209:32"><expr pos:start="209:29" pos:end="209:32"><name pos:start="209:29" pos:end="209:32">opts</name></expr></argument>, <argument pos:start="209:35" pos:end="209:56"><expr pos:start="209:35" pos:end="209:56"><literal type="string" pos:start="209:35" pos:end="209:56">"throttling.iops-read"</literal></expr></argument>, <argument pos:start="209:59" pos:end="209:59"><expr pos:start="209:59" pos:end="209:59"><literal type="number" pos:start="209:59" pos:end="209:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="213:62"><expr pos:start="211:5" pos:end="213:61"><name pos:start="211:5" pos:end="211:35"><name pos:start="211:5" pos:end="211:7">cfg</name><operator pos:start="211:8" pos:end="211:8">.</operator><name pos:start="211:9" pos:end="211:15">buckets</name><index pos:start="211:16" pos:end="211:35">[<expr pos:start="211:17" pos:end="211:34"><name pos:start="211:17" pos:end="211:34">THROTTLE_OPS_WRITE</name></expr>]</index></name><operator pos:start="211:36" pos:end="211:36">.</operator><name pos:start="211:37" pos:end="211:39">avg</name> <operator pos:start="211:41" pos:end="211:41">=</operator>

        <call pos:start="213:9" pos:end="213:61"><name pos:start="213:9" pos:end="213:27">qemu_opt_get_number</name><argument_list pos:start="213:28" pos:end="213:61">(<argument pos:start="213:29" pos:end="213:32"><expr pos:start="213:29" pos:end="213:32"><name pos:start="213:29" pos:end="213:32">opts</name></expr></argument>, <argument pos:start="213:35" pos:end="213:57"><expr pos:start="213:35" pos:end="213:57"><literal type="string" pos:start="213:35" pos:end="213:57">"throttling.iops-write"</literal></expr></argument>, <argument pos:start="213:60" pos:end="213:60"><expr pos:start="213:60" pos:end="213:60"><literal type="number" pos:start="213:60" pos:end="213:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="217:5" pos:end="219:65"><expr pos:start="217:5" pos:end="219:64"><name pos:start="217:5" pos:end="217:35"><name pos:start="217:5" pos:end="217:7">cfg</name><operator pos:start="217:8" pos:end="217:8">.</operator><name pos:start="217:9" pos:end="217:15">buckets</name><index pos:start="217:16" pos:end="217:35">[<expr pos:start="217:17" pos:end="217:34"><name pos:start="217:17" pos:end="217:34">THROTTLE_BPS_TOTAL</name></expr>]</index></name><operator pos:start="217:36" pos:end="217:36">.</operator><name pos:start="217:37" pos:end="217:39">max</name> <operator pos:start="217:41" pos:end="217:41">=</operator>

        <call pos:start="219:9" pos:end="219:64"><name pos:start="219:9" pos:end="219:27">qemu_opt_get_number</name><argument_list pos:start="219:28" pos:end="219:64">(<argument pos:start="219:29" pos:end="219:32"><expr pos:start="219:29" pos:end="219:32"><name pos:start="219:29" pos:end="219:32">opts</name></expr></argument>, <argument pos:start="219:35" pos:end="219:60"><expr pos:start="219:35" pos:end="219:60"><literal type="string" pos:start="219:35" pos:end="219:60">"throttling.bps-total-max"</literal></expr></argument>, <argument pos:start="219:63" pos:end="219:63"><expr pos:start="219:63" pos:end="219:63"><literal type="number" pos:start="219:63" pos:end="219:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="223:64"><expr pos:start="221:5" pos:end="223:63"><name pos:start="221:5" pos:end="221:34"><name pos:start="221:5" pos:end="221:7">cfg</name><operator pos:start="221:8" pos:end="221:8">.</operator><name pos:start="221:9" pos:end="221:15">buckets</name><index pos:start="221:16" pos:end="221:34">[<expr pos:start="221:17" pos:end="221:33"><name pos:start="221:17" pos:end="221:33">THROTTLE_BPS_READ</name></expr>]</index></name><operator pos:start="221:35" pos:end="221:35">.</operator><name pos:start="221:36" pos:end="221:38">max</name>  <operator pos:start="221:41" pos:end="221:41">=</operator>

        <call pos:start="223:9" pos:end="223:63"><name pos:start="223:9" pos:end="223:27">qemu_opt_get_number</name><argument_list pos:start="223:28" pos:end="223:63">(<argument pos:start="223:29" pos:end="223:32"><expr pos:start="223:29" pos:end="223:32"><name pos:start="223:29" pos:end="223:32">opts</name></expr></argument>, <argument pos:start="223:35" pos:end="223:59"><expr pos:start="223:35" pos:end="223:59"><literal type="string" pos:start="223:35" pos:end="223:59">"throttling.bps-read-max"</literal></expr></argument>, <argument pos:start="223:62" pos:end="223:62"><expr pos:start="223:62" pos:end="223:62"><literal type="number" pos:start="223:62" pos:end="223:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="227:65"><expr pos:start="225:5" pos:end="227:64"><name pos:start="225:5" pos:end="225:35"><name pos:start="225:5" pos:end="225:7">cfg</name><operator pos:start="225:8" pos:end="225:8">.</operator><name pos:start="225:9" pos:end="225:15">buckets</name><index pos:start="225:16" pos:end="225:35">[<expr pos:start="225:17" pos:end="225:34"><name pos:start="225:17" pos:end="225:34">THROTTLE_BPS_WRITE</name></expr>]</index></name><operator pos:start="225:36" pos:end="225:36">.</operator><name pos:start="225:37" pos:end="225:39">max</name> <operator pos:start="225:41" pos:end="225:41">=</operator>

        <call pos:start="227:9" pos:end="227:64"><name pos:start="227:9" pos:end="227:27">qemu_opt_get_number</name><argument_list pos:start="227:28" pos:end="227:64">(<argument pos:start="227:29" pos:end="227:32"><expr pos:start="227:29" pos:end="227:32"><name pos:start="227:29" pos:end="227:32">opts</name></expr></argument>, <argument pos:start="227:35" pos:end="227:60"><expr pos:start="227:35" pos:end="227:60"><literal type="string" pos:start="227:35" pos:end="227:60">"throttling.bps-write-max"</literal></expr></argument>, <argument pos:start="227:63" pos:end="227:63"><expr pos:start="227:63" pos:end="227:63"><literal type="number" pos:start="227:63" pos:end="227:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="231:66"><expr pos:start="229:5" pos:end="231:65"><name pos:start="229:5" pos:end="229:35"><name pos:start="229:5" pos:end="229:7">cfg</name><operator pos:start="229:8" pos:end="229:8">.</operator><name pos:start="229:9" pos:end="229:15">buckets</name><index pos:start="229:16" pos:end="229:35">[<expr pos:start="229:17" pos:end="229:34"><name pos:start="229:17" pos:end="229:34">THROTTLE_OPS_TOTAL</name></expr>]</index></name><operator pos:start="229:36" pos:end="229:36">.</operator><name pos:start="229:37" pos:end="229:39">max</name> <operator pos:start="229:41" pos:end="229:41">=</operator>

        <call pos:start="231:9" pos:end="231:65"><name pos:start="231:9" pos:end="231:27">qemu_opt_get_number</name><argument_list pos:start="231:28" pos:end="231:65">(<argument pos:start="231:29" pos:end="231:32"><expr pos:start="231:29" pos:end="231:32"><name pos:start="231:29" pos:end="231:32">opts</name></expr></argument>, <argument pos:start="231:35" pos:end="231:61"><expr pos:start="231:35" pos:end="231:61"><literal type="string" pos:start="231:35" pos:end="231:61">"throttling.iops-total-max"</literal></expr></argument>, <argument pos:start="231:64" pos:end="231:64"><expr pos:start="231:64" pos:end="231:64"><literal type="number" pos:start="231:64" pos:end="231:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="235:65"><expr pos:start="233:5" pos:end="235:64"><name pos:start="233:5" pos:end="233:34"><name pos:start="233:5" pos:end="233:7">cfg</name><operator pos:start="233:8" pos:end="233:8">.</operator><name pos:start="233:9" pos:end="233:15">buckets</name><index pos:start="233:16" pos:end="233:34">[<expr pos:start="233:17" pos:end="233:33"><name pos:start="233:17" pos:end="233:33">THROTTLE_OPS_READ</name></expr>]</index></name><operator pos:start="233:35" pos:end="233:35">.</operator><name pos:start="233:36" pos:end="233:38">max</name> <operator pos:start="233:40" pos:end="233:40">=</operator>

        <call pos:start="235:9" pos:end="235:64"><name pos:start="235:9" pos:end="235:27">qemu_opt_get_number</name><argument_list pos:start="235:28" pos:end="235:64">(<argument pos:start="235:29" pos:end="235:32"><expr pos:start="235:29" pos:end="235:32"><name pos:start="235:29" pos:end="235:32">opts</name></expr></argument>, <argument pos:start="235:35" pos:end="235:60"><expr pos:start="235:35" pos:end="235:60"><literal type="string" pos:start="235:35" pos:end="235:60">"throttling.iops-read-max"</literal></expr></argument>, <argument pos:start="235:63" pos:end="235:63"><expr pos:start="235:63" pos:end="235:63"><literal type="number" pos:start="235:63" pos:end="235:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="239:66"><expr pos:start="237:5" pos:end="239:65"><name pos:start="237:5" pos:end="237:35"><name pos:start="237:5" pos:end="237:7">cfg</name><operator pos:start="237:8" pos:end="237:8">.</operator><name pos:start="237:9" pos:end="237:15">buckets</name><index pos:start="237:16" pos:end="237:35">[<expr pos:start="237:17" pos:end="237:34"><name pos:start="237:17" pos:end="237:34">THROTTLE_OPS_WRITE</name></expr>]</index></name><operator pos:start="237:36" pos:end="237:36">.</operator><name pos:start="237:37" pos:end="237:39">max</name> <operator pos:start="237:41" pos:end="237:41">=</operator>

        <call pos:start="239:9" pos:end="239:65"><name pos:start="239:9" pos:end="239:27">qemu_opt_get_number</name><argument_list pos:start="239:28" pos:end="239:65">(<argument pos:start="239:29" pos:end="239:32"><expr pos:start="239:29" pos:end="239:32"><name pos:start="239:29" pos:end="239:32">opts</name></expr></argument>, <argument pos:start="239:35" pos:end="239:61"><expr pos:start="239:35" pos:end="239:61"><literal type="string" pos:start="239:35" pos:end="239:61">"throttling.iops-write-max"</literal></expr></argument>, <argument pos:start="239:64" pos:end="239:64"><expr pos:start="239:64" pos:end="239:64"><literal type="number" pos:start="239:64" pos:end="239:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="243:5" pos:end="243:71"><expr pos:start="243:5" pos:end="243:70"><name pos:start="243:5" pos:end="243:15"><name pos:start="243:5" pos:end="243:7">cfg</name><operator pos:start="243:8" pos:end="243:8">.</operator><name pos:start="243:9" pos:end="243:15">op_size</name></name> <operator pos:start="243:17" pos:end="243:17">=</operator> <call pos:start="243:19" pos:end="243:70"><name pos:start="243:19" pos:end="243:37">qemu_opt_get_number</name><argument_list pos:start="243:38" pos:end="243:70">(<argument pos:start="243:39" pos:end="243:42"><expr pos:start="243:39" pos:end="243:42"><name pos:start="243:39" pos:end="243:42">opts</name></expr></argument>, <argument pos:start="243:45" pos:end="243:66"><expr pos:start="243:45" pos:end="243:66"><literal type="string" pos:start="243:45" pos:end="243:66">"throttling.iops-size"</literal></expr></argument>, <argument pos:start="243:69" pos:end="243:69"><expr pos:start="243:69" pos:end="243:69"><literal type="number" pos:start="243:69" pos:end="243:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="247:5" pos:end="253:5"><if pos:start="247:5" pos:end="253:5">if <condition pos:start="247:8" pos:end="247:45">(<expr pos:start="247:9" pos:end="247:44"><operator pos:start="247:9" pos:end="247:9">!</operator><call pos:start="247:10" pos:end="247:44"><name pos:start="247:10" pos:end="247:30">check_throttle_config</name><argument_list pos:start="247:31" pos:end="247:44">(<argument pos:start="247:32" pos:end="247:35"><expr pos:start="247:32" pos:end="247:35"><operator pos:start="247:32" pos:end="247:32">&amp;</operator><name pos:start="247:33" pos:end="247:35">cfg</name></expr></argument>, <argument pos:start="247:38" pos:end="247:43"><expr pos:start="247:38" pos:end="247:43"><operator pos:start="247:38" pos:end="247:38">&amp;</operator><name pos:start="247:39" pos:end="247:43">error</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="247:47" pos:end="253:5">{<block_content pos:start="249:9" pos:end="251:23">

        <expr_stmt pos:start="249:9" pos:end="249:37"><expr pos:start="249:9" pos:end="249:36"><call pos:start="249:9" pos:end="249:36"><name pos:start="249:9" pos:end="249:23">error_propagate</name><argument_list pos:start="249:24" pos:end="249:36">(<argument pos:start="249:25" pos:end="249:28"><expr pos:start="249:25" pos:end="249:28"><name pos:start="249:25" pos:end="249:28">errp</name></expr></argument>, <argument pos:start="249:31" pos:end="249:35"><expr pos:start="249:31" pos:end="249:35"><name pos:start="249:31" pos:end="249:35">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="251:9" pos:end="251:23">goto <name pos:start="251:14" pos:end="251:22">early_err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="257:5" pos:end="257:46"><expr pos:start="257:5" pos:end="257:45"><name pos:start="257:5" pos:end="257:18">on_write_error</name> <operator pos:start="257:20" pos:end="257:20">=</operator> <name pos:start="257:22" pos:end="257:45">BLOCKDEV_ON_ERROR_ENOSPC</name></expr>;</expr_stmt>

    <if_stmt pos:start="259:5" pos:end="281:5"><if pos:start="259:5" pos:end="281:5">if <condition pos:start="259:8" pos:end="259:53">(<expr pos:start="259:9" pos:end="259:52"><operator pos:start="259:9" pos:end="259:9">(</operator><name pos:start="259:10" pos:end="259:12">buf</name> <operator pos:start="259:14" pos:end="259:14">=</operator> <call pos:start="259:16" pos:end="259:43"><name pos:start="259:16" pos:end="259:27">qemu_opt_get</name><argument_list pos:start="259:28" pos:end="259:43">(<argument pos:start="259:29" pos:end="259:32"><expr pos:start="259:29" pos:end="259:32"><name pos:start="259:29" pos:end="259:32">opts</name></expr></argument>, <argument pos:start="259:35" pos:end="259:42"><expr pos:start="259:35" pos:end="259:42"><literal type="string" pos:start="259:35" pos:end="259:42">"werror"</literal></expr></argument>)</argument_list></call><operator pos:start="259:44" pos:end="259:44">)</operator> <operator pos:start="259:46" pos:end="259:47">!=</operator> <name pos:start="259:49" pos:end="259:52">NULL</name></expr>)</condition> <block pos:start="259:55" pos:end="281:5">{<block_content pos:start="261:9" pos:end="279:9">

        <if_stmt pos:start="261:9" pos:end="267:9"><if pos:start="261:9" pos:end="267:9">if <condition pos:start="261:12" pos:end="261:86">(<expr pos:start="261:13" pos:end="261:85"><name pos:start="261:13" pos:end="261:16">type</name> <operator pos:start="261:18" pos:end="261:19">!=</operator> <name pos:start="261:21" pos:end="261:26">IF_IDE</name> <operator pos:start="261:28" pos:end="261:29">&amp;&amp;</operator> <name pos:start="261:31" pos:end="261:34">type</name> <operator pos:start="261:36" pos:end="261:37">!=</operator> <name pos:start="261:39" pos:end="261:45">IF_SCSI</name> <operator pos:start="261:47" pos:end="261:48">&amp;&amp;</operator> <name pos:start="261:50" pos:end="261:53">type</name> <operator pos:start="261:55" pos:end="261:56">!=</operator> <name pos:start="261:58" pos:end="261:66">IF_VIRTIO</name> <operator pos:start="261:68" pos:end="261:69">&amp;&amp;</operator> <name pos:start="261:71" pos:end="261:74">type</name> <operator pos:start="261:76" pos:end="261:77">!=</operator> <name pos:start="261:79" pos:end="261:85">IF_NONE</name></expr>)</condition> <block pos:start="261:88" pos:end="267:9">{<block_content pos:start="263:13" pos:end="265:27">

            <expr_stmt pos:start="263:13" pos:end="263:73"><expr pos:start="263:13" pos:end="263:72"><call pos:start="263:13" pos:end="263:72"><name pos:start="263:13" pos:end="263:22">error_setg</name><argument_list pos:start="263:23" pos:end="263:72">(<argument pos:start="263:24" pos:end="263:27"><expr pos:start="263:24" pos:end="263:27"><name pos:start="263:24" pos:end="263:27">errp</name></expr></argument>, <argument pos:start="263:30" pos:end="263:71"><expr pos:start="263:30" pos:end="263:71"><literal type="string" pos:start="263:30" pos:end="263:71">"werror is not supported by this bus type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="265:13" pos:end="265:27">goto <name pos:start="265:18" pos:end="265:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="271:9" pos:end="271:66"><expr pos:start="271:9" pos:end="271:65"><name pos:start="271:9" pos:end="271:22">on_write_error</name> <operator pos:start="271:24" pos:end="271:24">=</operator> <call pos:start="271:26" pos:end="271:65"><name pos:start="271:26" pos:end="271:49">parse_block_error_action</name><argument_list pos:start="271:50" pos:end="271:65">(<argument pos:start="271:51" pos:end="271:53"><expr pos:start="271:51" pos:end="271:53"><name pos:start="271:51" pos:end="271:53">buf</name></expr></argument>, <argument pos:start="271:56" pos:end="271:56"><expr pos:start="271:56" pos:end="271:56"><literal type="number" pos:start="271:56" pos:end="271:56">0</literal></expr></argument>, <argument pos:start="271:59" pos:end="271:64"><expr pos:start="271:59" pos:end="271:64"><operator pos:start="271:59" pos:end="271:59">&amp;</operator><name pos:start="271:60" pos:end="271:64">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="273:9" pos:end="279:9"><if pos:start="273:9" pos:end="279:9">if <condition pos:start="273:12" pos:end="273:33">(<expr pos:start="273:13" pos:end="273:32"><call pos:start="273:13" pos:end="273:32"><name pos:start="273:13" pos:end="273:24">error_is_set</name><argument_list pos:start="273:25" pos:end="273:32">(<argument pos:start="273:26" pos:end="273:31"><expr pos:start="273:26" pos:end="273:31"><operator pos:start="273:26" pos:end="273:26">&amp;</operator><name pos:start="273:27" pos:end="273:31">error</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="273:35" pos:end="279:9">{<block_content pos:start="275:13" pos:end="277:27">

            <expr_stmt pos:start="275:13" pos:end="275:41"><expr pos:start="275:13" pos:end="275:40"><call pos:start="275:13" pos:end="275:40"><name pos:start="275:13" pos:end="275:27">error_propagate</name><argument_list pos:start="275:28" pos:end="275:40">(<argument pos:start="275:29" pos:end="275:32"><expr pos:start="275:29" pos:end="275:32"><name pos:start="275:29" pos:end="275:32">errp</name></expr></argument>, <argument pos:start="275:35" pos:end="275:39"><expr pos:start="275:35" pos:end="275:39"><name pos:start="275:35" pos:end="275:39">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="277:13" pos:end="277:27">goto <name pos:start="277:18" pos:end="277:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="285:5" pos:end="285:45"><expr pos:start="285:5" pos:end="285:44"><name pos:start="285:5" pos:end="285:17">on_read_error</name> <operator pos:start="285:19" pos:end="285:19">=</operator> <name pos:start="285:21" pos:end="285:44">BLOCKDEV_ON_ERROR_REPORT</name></expr>;</expr_stmt>

    <if_stmt pos:start="287:5" pos:end="309:5"><if pos:start="287:5" pos:end="309:5">if <condition pos:start="287:8" pos:end="287:53">(<expr pos:start="287:9" pos:end="287:52"><operator pos:start="287:9" pos:end="287:9">(</operator><name pos:start="287:10" pos:end="287:12">buf</name> <operator pos:start="287:14" pos:end="287:14">=</operator> <call pos:start="287:16" pos:end="287:43"><name pos:start="287:16" pos:end="287:27">qemu_opt_get</name><argument_list pos:start="287:28" pos:end="287:43">(<argument pos:start="287:29" pos:end="287:32"><expr pos:start="287:29" pos:end="287:32"><name pos:start="287:29" pos:end="287:32">opts</name></expr></argument>, <argument pos:start="287:35" pos:end="287:42"><expr pos:start="287:35" pos:end="287:42"><literal type="string" pos:start="287:35" pos:end="287:42">"rerror"</literal></expr></argument>)</argument_list></call><operator pos:start="287:44" pos:end="287:44">)</operator> <operator pos:start="287:46" pos:end="287:47">!=</operator> <name pos:start="287:49" pos:end="287:52">NULL</name></expr>)</condition> <block pos:start="287:55" pos:end="309:5">{<block_content pos:start="289:9" pos:end="307:9">

        <if_stmt pos:start="289:9" pos:end="295:9"><if pos:start="289:9" pos:end="295:9">if <condition pos:start="289:12" pos:end="289:86">(<expr pos:start="289:13" pos:end="289:85"><name pos:start="289:13" pos:end="289:16">type</name> <operator pos:start="289:18" pos:end="289:19">!=</operator> <name pos:start="289:21" pos:end="289:26">IF_IDE</name> <operator pos:start="289:28" pos:end="289:29">&amp;&amp;</operator> <name pos:start="289:31" pos:end="289:34">type</name> <operator pos:start="289:36" pos:end="289:37">!=</operator> <name pos:start="289:39" pos:end="289:47">IF_VIRTIO</name> <operator pos:start="289:49" pos:end="289:50">&amp;&amp;</operator> <name pos:start="289:52" pos:end="289:55">type</name> <operator pos:start="289:57" pos:end="289:58">!=</operator> <name pos:start="289:60" pos:end="289:66">IF_SCSI</name> <operator pos:start="289:68" pos:end="289:69">&amp;&amp;</operator> <name pos:start="289:71" pos:end="289:74">type</name> <operator pos:start="289:76" pos:end="289:77">!=</operator> <name pos:start="289:79" pos:end="289:85">IF_NONE</name></expr>)</condition> <block pos:start="289:88" pos:end="295:9">{<block_content pos:start="291:13" pos:end="293:27">

            <expr_stmt pos:start="291:13" pos:end="291:69"><expr pos:start="291:13" pos:end="291:68"><call pos:start="291:13" pos:end="291:68"><name pos:start="291:13" pos:end="291:24">error_report</name><argument_list pos:start="291:25" pos:end="291:68">(<argument pos:start="291:26" pos:end="291:67"><expr pos:start="291:26" pos:end="291:67"><literal type="string" pos:start="291:26" pos:end="291:67">"rerror is not supported by this bus type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="293:13" pos:end="293:27">goto <name pos:start="293:18" pos:end="293:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="299:9" pos:end="299:65"><expr pos:start="299:9" pos:end="299:64"><name pos:start="299:9" pos:end="299:21">on_read_error</name> <operator pos:start="299:23" pos:end="299:23">=</operator> <call pos:start="299:25" pos:end="299:64"><name pos:start="299:25" pos:end="299:48">parse_block_error_action</name><argument_list pos:start="299:49" pos:end="299:64">(<argument pos:start="299:50" pos:end="299:52"><expr pos:start="299:50" pos:end="299:52"><name pos:start="299:50" pos:end="299:52">buf</name></expr></argument>, <argument pos:start="299:55" pos:end="299:55"><expr pos:start="299:55" pos:end="299:55"><literal type="number" pos:start="299:55" pos:end="299:55">1</literal></expr></argument>, <argument pos:start="299:58" pos:end="299:63"><expr pos:start="299:58" pos:end="299:63"><operator pos:start="299:58" pos:end="299:58">&amp;</operator><name pos:start="299:59" pos:end="299:63">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="301:9" pos:end="307:9"><if pos:start="301:9" pos:end="307:9">if <condition pos:start="301:12" pos:end="301:33">(<expr pos:start="301:13" pos:end="301:32"><call pos:start="301:13" pos:end="301:32"><name pos:start="301:13" pos:end="301:24">error_is_set</name><argument_list pos:start="301:25" pos:end="301:32">(<argument pos:start="301:26" pos:end="301:31"><expr pos:start="301:26" pos:end="301:31"><operator pos:start="301:26" pos:end="301:26">&amp;</operator><name pos:start="301:27" pos:end="301:31">error</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="301:35" pos:end="307:9">{<block_content pos:start="303:13" pos:end="305:27">

            <expr_stmt pos:start="303:13" pos:end="303:41"><expr pos:start="303:13" pos:end="303:40"><call pos:start="303:13" pos:end="303:40"><name pos:start="303:13" pos:end="303:27">error_propagate</name><argument_list pos:start="303:28" pos:end="303:40">(<argument pos:start="303:29" pos:end="303:32"><expr pos:start="303:29" pos:end="303:32"><name pos:start="303:29" pos:end="303:32">errp</name></expr></argument>, <argument pos:start="303:35" pos:end="303:39"><expr pos:start="303:35" pos:end="303:39"><name pos:start="303:35" pos:end="303:39">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="305:13" pos:end="305:27">goto <name pos:start="305:18" pos:end="305:26">early_err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="313:5" pos:end="313:14">/* init */</comment>

    <expr_stmt pos:start="315:5" pos:end="315:38"><expr pos:start="315:5" pos:end="315:37"><name pos:start="315:5" pos:end="315:9">dinfo</name> <operator pos:start="315:11" pos:end="315:11">=</operator> <call pos:start="315:13" pos:end="315:37"><name pos:start="315:13" pos:end="315:21">g_malloc0</name><argument_list pos:start="315:22" pos:end="315:37">(<argument pos:start="315:23" pos:end="315:36"><expr pos:start="315:23" pos:end="315:36"><sizeof pos:start="315:23" pos:end="315:36">sizeof<argument_list pos:start="315:29" pos:end="315:36">(<argument pos:start="315:30" pos:end="315:35"><expr pos:start="315:30" pos:end="315:35"><operator pos:start="315:30" pos:end="315:30">*</operator><name pos:start="315:31" pos:end="315:35">dinfo</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="317:5" pos:end="317:45"><expr pos:start="317:5" pos:end="317:44"><name pos:start="317:5" pos:end="317:13"><name pos:start="317:5" pos:end="317:9">dinfo</name><operator pos:start="317:10" pos:end="317:11">-&gt;</operator><name pos:start="317:12" pos:end="317:13">id</name></name> <operator pos:start="317:15" pos:end="317:15">=</operator> <call pos:start="317:17" pos:end="317:44"><name pos:start="317:17" pos:end="317:24">g_strdup</name><argument_list pos:start="317:25" pos:end="317:44">(<argument pos:start="317:26" pos:end="317:43"><expr pos:start="317:26" pos:end="317:43"><call pos:start="317:26" pos:end="317:43"><name pos:start="317:26" pos:end="317:37">qemu_opts_id</name><argument_list pos:start="317:38" pos:end="317:43">(<argument pos:start="317:39" pos:end="317:42"><expr pos:start="317:39" pos:end="317:42"><name pos:start="317:39" pos:end="317:42">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="319:5" pos:end="319:38"><expr pos:start="319:5" pos:end="319:37"><name pos:start="319:5" pos:end="319:15"><name pos:start="319:5" pos:end="319:9">dinfo</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:15">bdrv</name></name> <operator pos:start="319:17" pos:end="319:17">=</operator> <call pos:start="319:19" pos:end="319:37"><name pos:start="319:19" pos:end="319:26">bdrv_new</name><argument_list pos:start="319:27" pos:end="319:37">(<argument pos:start="319:28" pos:end="319:36"><expr pos:start="319:28" pos:end="319:36"><name pos:start="319:28" pos:end="319:36"><name pos:start="319:28" pos:end="319:32">dinfo</name><operator pos:start="319:33" pos:end="319:34">-&gt;</operator><name pos:start="319:35" pos:end="319:36">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="321:5" pos:end="321:61"><expr pos:start="321:5" pos:end="321:60"><name pos:start="321:5" pos:end="321:27"><name pos:start="321:5" pos:end="321:9">dinfo</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:15">bdrv</name><operator pos:start="321:16" pos:end="321:17">-&gt;</operator><name pos:start="321:18" pos:end="321:27">open_flags</name></name> <operator pos:start="321:29" pos:end="321:29">=</operator> <ternary pos:start="321:31" pos:end="321:60"><condition pos:start="321:31" pos:end="321:40"><expr pos:start="321:31" pos:end="321:38"><name pos:start="321:31" pos:end="321:38">snapshot</name></expr> ?</condition><then pos:start="321:42" pos:end="321:56"> <expr pos:start="321:42" pos:end="321:56"><name pos:start="321:42" pos:end="321:56">BDRV_O_SNAPSHOT</name></expr> </then><else pos:start="321:58" pos:end="321:60">: <expr pos:start="321:60" pos:end="321:60"><literal type="number" pos:start="321:60" pos:end="321:60">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="323:5" pos:end="323:32"><expr pos:start="323:5" pos:end="323:31"><name pos:start="323:5" pos:end="323:26"><name pos:start="323:5" pos:end="323:9">dinfo</name><operator pos:start="323:10" pos:end="323:11">-&gt;</operator><name pos:start="323:12" pos:end="323:15">bdrv</name><operator pos:start="323:16" pos:end="323:17">-&gt;</operator><name pos:start="323:18" pos:end="323:26">read_only</name></name> <operator pos:start="323:28" pos:end="323:28">=</operator> <name pos:start="323:30" pos:end="323:31">ro</name></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:23"><expr pos:start="325:5" pos:end="325:22"><name pos:start="325:5" pos:end="325:15"><name pos:start="325:5" pos:end="325:9">dinfo</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:15">type</name></name> <operator pos:start="325:17" pos:end="325:17">=</operator> <name pos:start="325:19" pos:end="325:22">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:24"><expr pos:start="327:5" pos:end="327:23"><name pos:start="327:5" pos:end="327:19"><name pos:start="327:5" pos:end="327:9">dinfo</name><operator pos:start="327:10" pos:end="327:11">-&gt;</operator><name pos:start="327:12" pos:end="327:19">refcount</name></name> <operator pos:start="327:21" pos:end="327:21">=</operator> <literal type="number" pos:start="327:23" pos:end="327:23">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="329:5" pos:end="333:5"><if pos:start="329:5" pos:end="333:5">if <condition pos:start="329:8" pos:end="329:23">(<expr pos:start="329:9" pos:end="329:22"><name pos:start="329:9" pos:end="329:14">serial</name> <operator pos:start="329:16" pos:end="329:17">!=</operator> <name pos:start="329:19" pos:end="329:22">NULL</name></expr>)</condition> <block pos:start="329:25" pos:end="333:5">{<block_content pos:start="331:9" pos:end="331:41">

        <expr_stmt pos:start="331:9" pos:end="331:41"><expr pos:start="331:9" pos:end="331:40"><name pos:start="331:9" pos:end="331:21"><name pos:start="331:9" pos:end="331:13">dinfo</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:21">serial</name></name> <operator pos:start="331:23" pos:end="331:23">=</operator> <call pos:start="331:25" pos:end="331:40"><name pos:start="331:25" pos:end="331:32">g_strdup</name><argument_list pos:start="331:33" pos:end="331:40">(<argument pos:start="331:34" pos:end="331:39"><expr pos:start="331:34" pos:end="331:39"><name pos:start="331:34" pos:end="331:39">serial</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:45"><expr pos:start="335:5" pos:end="335:44"><call pos:start="335:5" pos:end="335:44"><name pos:start="335:5" pos:end="335:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="335:23" pos:end="335:44">(<argument pos:start="335:24" pos:end="335:30"><expr pos:start="335:24" pos:end="335:30"><operator pos:start="335:24" pos:end="335:24">&amp;</operator><name pos:start="335:25" pos:end="335:30">drives</name></expr></argument>, <argument pos:start="335:33" pos:end="335:37"><expr pos:start="335:33" pos:end="335:37"><name pos:start="335:33" pos:end="335:37">dinfo</name></expr></argument>, <argument pos:start="335:40" pos:end="335:43"><expr pos:start="335:40" pos:end="335:43"><name pos:start="335:40" pos:end="335:43">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="339:5" pos:end="339:66"><expr pos:start="339:5" pos:end="339:65"><call pos:start="339:5" pos:end="339:65"><name pos:start="339:5" pos:end="339:21">bdrv_set_on_error</name><argument_list pos:start="339:22" pos:end="339:65">(<argument pos:start="339:23" pos:end="339:33"><expr pos:start="339:23" pos:end="339:33"><name pos:start="339:23" pos:end="339:33"><name pos:start="339:23" pos:end="339:27">dinfo</name><operator pos:start="339:28" pos:end="339:29">-&gt;</operator><name pos:start="339:30" pos:end="339:33">bdrv</name></name></expr></argument>, <argument pos:start="339:36" pos:end="339:48"><expr pos:start="339:36" pos:end="339:48"><name pos:start="339:36" pos:end="339:48">on_read_error</name></expr></argument>, <argument pos:start="339:51" pos:end="339:64"><expr pos:start="339:51" pos:end="339:64"><name pos:start="339:51" pos:end="339:64">on_write_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="343:5" pos:end="343:29">/* disk I/O throttling */</comment>

    <if_stmt pos:start="345:5" pos:end="351:5"><if pos:start="345:5" pos:end="351:5">if <condition pos:start="345:8" pos:end="345:31">(<expr pos:start="345:9" pos:end="345:30"><call pos:start="345:9" pos:end="345:30"><name pos:start="345:9" pos:end="345:24">throttle_enabled</name><argument_list pos:start="345:25" pos:end="345:30">(<argument pos:start="345:26" pos:end="345:29"><expr pos:start="345:26" pos:end="345:29"><operator pos:start="345:26" pos:end="345:26">&amp;</operator><name pos:start="345:27" pos:end="345:29">cfg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="345:33" pos:end="351:5">{<block_content pos:start="347:9" pos:end="349:46">

        <expr_stmt pos:start="347:9" pos:end="347:43"><expr pos:start="347:9" pos:end="347:42"><call pos:start="347:9" pos:end="347:42"><name pos:start="347:9" pos:end="347:29">bdrv_io_limits_enable</name><argument_list pos:start="347:30" pos:end="347:42">(<argument pos:start="347:31" pos:end="347:41"><expr pos:start="347:31" pos:end="347:41"><name pos:start="347:31" pos:end="347:41"><name pos:start="347:31" pos:end="347:35">dinfo</name><operator pos:start="347:36" pos:end="347:37">-&gt;</operator><name pos:start="347:38" pos:end="347:41">bdrv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:46"><expr pos:start="349:9" pos:end="349:45"><call pos:start="349:9" pos:end="349:45"><name pos:start="349:9" pos:end="349:26">bdrv_set_io_limits</name><argument_list pos:start="349:27" pos:end="349:45">(<argument pos:start="349:28" pos:end="349:38"><expr pos:start="349:28" pos:end="349:38"><name pos:start="349:28" pos:end="349:38"><name pos:start="349:28" pos:end="349:32">dinfo</name><operator pos:start="349:33" pos:end="349:34">-&gt;</operator><name pos:start="349:35" pos:end="349:38">bdrv</name></name></expr></argument>, <argument pos:start="349:41" pos:end="349:44"><expr pos:start="349:41" pos:end="349:44"><operator pos:start="349:41" pos:end="349:41">&amp;</operator><name pos:start="349:42" pos:end="349:44">cfg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="355:5" pos:end="371:5"><if pos:start="355:5" pos:end="371:5">if <condition pos:start="355:8" pos:end="355:24">(<expr pos:start="355:9" pos:end="355:23"><operator pos:start="355:9" pos:end="355:9">!</operator><name pos:start="355:10" pos:end="355:13">file</name> <operator pos:start="355:15" pos:end="355:16">||</operator> <operator pos:start="355:18" pos:end="355:18">!</operator><operator pos:start="355:19" pos:end="355:19">*</operator><name pos:start="355:20" pos:end="355:23">file</name></expr>)</condition> <block pos:start="355:26" pos:end="371:5">{<block_content pos:start="357:9" pos:end="369:9">

        <if_stmt pos:start="357:9" pos:end="369:9"><if pos:start="357:9" pos:end="361:9">if <condition pos:start="357:12" pos:end="357:37">(<expr pos:start="357:13" pos:end="357:36"><name pos:start="357:13" pos:end="357:36">has_driver_specific_opts</name></expr>)</condition> <block pos:start="357:39" pos:end="361:9">{<block_content pos:start="359:13" pos:end="359:24">

            <expr_stmt pos:start="359:13" pos:end="359:24"><expr pos:start="359:13" pos:end="359:23"><name pos:start="359:13" pos:end="359:16">file</name> <operator pos:start="359:18" pos:end="359:18">=</operator> <name pos:start="359:20" pos:end="359:23">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="361:11" pos:end="369:9">else <block pos:start="361:16" pos:end="369:9">{<block_content pos:start="363:13" pos:end="367:25">

            <expr_stmt pos:start="363:13" pos:end="363:29"><expr pos:start="363:13" pos:end="363:28"><call pos:start="363:13" pos:end="363:28"><name pos:start="363:13" pos:end="363:19">QDECREF</name><argument_list pos:start="363:20" pos:end="363:28">(<argument pos:start="363:21" pos:end="363:27"><expr pos:start="363:21" pos:end="363:27"><name pos:start="363:21" pos:end="363:27">bs_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:32"><expr pos:start="365:13" pos:end="365:31"><call pos:start="365:13" pos:end="365:31"><name pos:start="365:13" pos:end="365:25">qemu_opts_del</name><argument_list pos:start="365:26" pos:end="365:31">(<argument pos:start="365:27" pos:end="365:30"><expr pos:start="365:27" pos:end="365:30"><name pos:start="365:27" pos:end="365:30">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="367:13" pos:end="367:25">return <expr pos:start="367:20" pos:end="367:24"><name pos:start="367:20" pos:end="367:24">dinfo</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="373:5" pos:end="381:5"><if pos:start="373:5" pos:end="381:5">if <condition pos:start="373:8" pos:end="373:17">(<expr pos:start="373:9" pos:end="373:16"><name pos:start="373:9" pos:end="373:16">snapshot</name></expr>)</condition> <block pos:start="373:19" pos:end="381:5">{<block_content pos:start="377:9" pos:end="379:72">

        <comment type="block" pos:start="375:9" pos:end="375:51">/* always use cache=unsafe with snapshot */</comment>

        <expr_stmt pos:start="377:9" pos:end="377:41"><expr pos:start="377:9" pos:end="377:40"><name pos:start="377:9" pos:end="377:18">bdrv_flags</name> <operator pos:start="377:20" pos:end="377:21">&amp;=</operator> <operator pos:start="377:23" pos:end="377:23">~</operator><name pos:start="377:24" pos:end="377:40">BDRV_O_CACHE_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="379:9" pos:end="379:72"><expr pos:start="379:9" pos:end="379:71"><name pos:start="379:9" pos:end="379:18">bdrv_flags</name> <operator pos:start="379:20" pos:end="379:21">|=</operator> <operator pos:start="379:23" pos:end="379:23">(</operator><name pos:start="379:24" pos:end="379:38">BDRV_O_SNAPSHOT</name><operator pos:start="379:39" pos:end="379:39">|</operator><name pos:start="379:40" pos:end="379:54">BDRV_O_CACHE_WB</name><operator pos:start="379:55" pos:end="379:55">|</operator><name pos:start="379:56" pos:end="379:70">BDRV_O_NO_FLUSH</name><operator pos:start="379:71" pos:end="379:71">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="385:5" pos:end="389:5"><if pos:start="385:5" pos:end="389:5">if <condition pos:start="385:8" pos:end="385:21">(<expr pos:start="385:9" pos:end="385:20"><name pos:start="385:9" pos:end="385:20">copy_on_read</name></expr>)</condition> <block pos:start="385:23" pos:end="389:5">{<block_content pos:start="387:9" pos:end="387:42">

        <expr_stmt pos:start="387:9" pos:end="387:42"><expr pos:start="387:9" pos:end="387:41"><name pos:start="387:9" pos:end="387:18">bdrv_flags</name> <operator pos:start="387:20" pos:end="387:21">|=</operator> <name pos:start="387:23" pos:end="387:41">BDRV_O_COPY_ON_READ</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="393:5" pos:end="397:5"><if pos:start="393:5" pos:end="397:5">if <condition pos:start="393:8" pos:end="393:44">(<expr pos:start="393:9" pos:end="393:43"><call pos:start="393:9" pos:end="393:43"><name pos:start="393:9" pos:end="393:22">runstate_check</name><argument_list pos:start="393:23" pos:end="393:43">(<argument pos:start="393:24" pos:end="393:42"><expr pos:start="393:24" pos:end="393:42"><name pos:start="393:24" pos:end="393:42">RUN_STATE_INMIGRATE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="393:46" pos:end="397:5">{<block_content pos:start="395:9" pos:end="395:38">

        <expr_stmt pos:start="395:9" pos:end="395:38"><expr pos:start="395:9" pos:end="395:37"><name pos:start="395:9" pos:end="395:18">bdrv_flags</name> <operator pos:start="395:20" pos:end="395:21">|=</operator> <name pos:start="395:23" pos:end="395:37">BDRV_O_INCOMING</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="401:5" pos:end="401:39"><expr pos:start="401:5" pos:end="401:38"><name pos:start="401:5" pos:end="401:14">bdrv_flags</name> <operator pos:start="401:16" pos:end="401:17">|=</operator> <ternary pos:start="401:19" pos:end="401:38"><condition pos:start="401:19" pos:end="401:22"><expr pos:start="401:19" pos:end="401:20"><name pos:start="401:19" pos:end="401:20">ro</name></expr> ?</condition><then pos:start="401:24" pos:end="401:24"> <expr pos:start="401:24" pos:end="401:24"><literal type="number" pos:start="401:24" pos:end="401:24">0</literal></expr> </then><else pos:start="401:26" pos:end="401:38">: <expr pos:start="401:28" pos:end="401:38"><name pos:start="401:28" pos:end="401:38">BDRV_O_RDWR</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="405:5" pos:end="405:21"><expr pos:start="405:5" pos:end="405:20"><call pos:start="405:5" pos:end="405:20"><name pos:start="405:5" pos:end="405:11">QINCREF</name><argument_list pos:start="405:12" pos:end="405:20">(<argument pos:start="405:13" pos:end="405:19"><expr pos:start="405:13" pos:end="405:19"><name pos:start="405:13" pos:end="405:19">bs_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="407:5" pos:end="407:73"><expr pos:start="407:5" pos:end="407:72"><name pos:start="407:5" pos:end="407:7">ret</name> <operator pos:start="407:9" pos:end="407:9">=</operator> <call pos:start="407:11" pos:end="407:72"><name pos:start="407:11" pos:end="407:19">bdrv_open</name><argument_list pos:start="407:20" pos:end="407:72">(<argument pos:start="407:21" pos:end="407:31"><expr pos:start="407:21" pos:end="407:31"><name pos:start="407:21" pos:end="407:31"><name pos:start="407:21" pos:end="407:25">dinfo</name><operator pos:start="407:26" pos:end="407:27">-&gt;</operator><name pos:start="407:28" pos:end="407:31">bdrv</name></name></expr></argument>, <argument pos:start="407:34" pos:end="407:37"><expr pos:start="407:34" pos:end="407:37"><name pos:start="407:34" pos:end="407:37">file</name></expr></argument>, <argument pos:start="407:40" pos:end="407:46"><expr pos:start="407:40" pos:end="407:46"><name pos:start="407:40" pos:end="407:46">bs_opts</name></expr></argument>, <argument pos:start="407:49" pos:end="407:58"><expr pos:start="407:49" pos:end="407:58"><name pos:start="407:49" pos:end="407:58">bdrv_flags</name></expr></argument>, <argument pos:start="407:61" pos:end="407:63"><expr pos:start="407:61" pos:end="407:63"><name pos:start="407:61" pos:end="407:63">drv</name></expr></argument>, <argument pos:start="407:66" pos:end="407:71"><expr pos:start="407:66" pos:end="407:71"><operator pos:start="407:66" pos:end="407:66">&amp;</operator><name pos:start="407:67" pos:end="407:71">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="411:5" pos:end="421:5"><if pos:start="411:5" pos:end="421:5">if <condition pos:start="411:8" pos:end="411:16">(<expr pos:start="411:9" pos:end="411:15"><name pos:start="411:9" pos:end="411:11">ret</name> <operator pos:start="411:13" pos:end="411:13">&lt;</operator> <literal type="number" pos:start="411:15" pos:end="411:15">0</literal></expr>)</condition> <block pos:start="411:18" pos:end="421:5">{<block_content pos:start="413:9" pos:end="419:17">

        <expr_stmt pos:start="413:9" pos:end="415:63"><expr pos:start="413:9" pos:end="415:62"><call pos:start="413:9" pos:end="415:62"><name pos:start="413:9" pos:end="413:18">error_setg</name><argument_list pos:start="413:19" pos:end="415:62">(<argument pos:start="413:20" pos:end="413:23"><expr pos:start="413:20" pos:end="413:23"><name pos:start="413:20" pos:end="413:23">errp</name></expr></argument>, <argument pos:start="413:26" pos:end="413:59"><expr pos:start="413:26" pos:end="413:59"><literal type="string" pos:start="413:26" pos:end="413:59">"could not open disk image %s: %s"</literal></expr></argument>,

                   <argument pos:start="415:20" pos:end="415:36"><expr pos:start="415:20" pos:end="415:36"><ternary pos:start="415:20" pos:end="415:36"><condition pos:start="415:20" pos:end="415:25"><expr pos:start="415:20" pos:end="415:23"><name pos:start="415:20" pos:end="415:23">file</name></expr> ?</condition><then/><else pos:start="415:26" pos:end="415:36">: <expr pos:start="415:28" pos:end="415:36"><name pos:start="415:28" pos:end="415:36"><name pos:start="415:28" pos:end="415:32">dinfo</name><operator pos:start="415:33" pos:end="415:34">-&gt;</operator><name pos:start="415:35" pos:end="415:36">id</name></name></expr></else></ternary></expr></argument>, <argument pos:start="415:39" pos:end="415:61"><expr pos:start="415:39" pos:end="415:61"><call pos:start="415:39" pos:end="415:61"><name pos:start="415:39" pos:end="415:54">error_get_pretty</name><argument_list pos:start="415:55" pos:end="415:61">(<argument pos:start="415:56" pos:end="415:60"><expr pos:start="415:56" pos:end="415:60"><name pos:start="415:56" pos:end="415:60">error</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="417:9" pos:end="417:26"><expr pos:start="417:9" pos:end="417:25"><call pos:start="417:9" pos:end="417:25"><name pos:start="417:9" pos:end="417:18">error_free</name><argument_list pos:start="417:19" pos:end="417:25">(<argument pos:start="417:20" pos:end="417:24"><expr pos:start="417:20" pos:end="417:24"><name pos:start="417:20" pos:end="417:24">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="419:9" pos:end="419:17">goto <name pos:start="419:14" pos:end="419:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="425:5" pos:end="427:22"><if pos:start="425:5" pos:end="427:22">if <condition pos:start="425:8" pos:end="425:39">(<expr pos:start="425:9" pos:end="425:38"><call pos:start="425:9" pos:end="425:38"><name pos:start="425:9" pos:end="425:25">bdrv_key_required</name><argument_list pos:start="425:26" pos:end="425:38">(<argument pos:start="425:27" pos:end="425:37"><expr pos:start="425:27" pos:end="425:37"><name pos:start="425:27" pos:end="425:37"><name pos:start="425:27" pos:end="425:31">dinfo</name><operator pos:start="425:32" pos:end="425:33">-&gt;</operator><name pos:start="425:34" pos:end="425:37">bdrv</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="427:9" pos:end="427:22"><block_content pos:start="427:9" pos:end="427:22">

        <expr_stmt pos:start="427:9" pos:end="427:22"><expr pos:start="427:9" pos:end="427:21"><name pos:start="427:9" pos:end="427:17">autostart</name> <operator pos:start="427:19" pos:end="427:19">=</operator> <literal type="number" pos:start="427:21" pos:end="427:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="431:5" pos:end="431:21"><expr pos:start="431:5" pos:end="431:20"><call pos:start="431:5" pos:end="431:20"><name pos:start="431:5" pos:end="431:11">QDECREF</name><argument_list pos:start="431:12" pos:end="431:20">(<argument pos:start="431:13" pos:end="431:19"><expr pos:start="431:13" pos:end="431:19"><name pos:start="431:13" pos:end="431:19">bs_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="433:5" pos:end="433:24"><expr pos:start="433:5" pos:end="433:23"><call pos:start="433:5" pos:end="433:23"><name pos:start="433:5" pos:end="433:17">qemu_opts_del</name><argument_list pos:start="433:18" pos:end="433:23">(<argument pos:start="433:19" pos:end="433:22"><expr pos:start="433:19" pos:end="433:22"><name pos:start="433:19" pos:end="433:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="437:5" pos:end="437:17">return <expr pos:start="437:12" pos:end="437:16"><name pos:start="437:12" pos:end="437:16">dinfo</name></expr>;</return>



<label pos:start="441:1" pos:end="441:4"><name pos:start="441:1" pos:end="441:3">err</name>:</label>

    <expr_stmt pos:start="443:5" pos:end="443:28"><expr pos:start="443:5" pos:end="443:27"><call pos:start="443:5" pos:end="443:27"><name pos:start="443:5" pos:end="443:14">bdrv_unref</name><argument_list pos:start="443:15" pos:end="443:27">(<argument pos:start="443:16" pos:end="443:26"><expr pos:start="443:16" pos:end="443:26"><name pos:start="443:16" pos:end="443:26"><name pos:start="443:16" pos:end="443:20">dinfo</name><operator pos:start="443:21" pos:end="443:22">-&gt;</operator><name pos:start="443:23" pos:end="443:26">bdrv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="445:5" pos:end="445:22"><expr pos:start="445:5" pos:end="445:21"><call pos:start="445:5" pos:end="445:21"><name pos:start="445:5" pos:end="445:10">g_free</name><argument_list pos:start="445:11" pos:end="445:21">(<argument pos:start="445:12" pos:end="445:20"><expr pos:start="445:12" pos:end="445:20"><name pos:start="445:12" pos:end="445:20"><name pos:start="445:12" pos:end="445:16">dinfo</name><operator pos:start="445:17" pos:end="445:18">-&gt;</operator><name pos:start="445:19" pos:end="445:20">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="447:5" pos:end="447:40"><expr pos:start="447:5" pos:end="447:39"><call pos:start="447:5" pos:end="447:39"><name pos:start="447:5" pos:end="447:17">QTAILQ_REMOVE</name><argument_list pos:start="447:18" pos:end="447:39">(<argument pos:start="447:19" pos:end="447:25"><expr pos:start="447:19" pos:end="447:25"><operator pos:start="447:19" pos:end="447:19">&amp;</operator><name pos:start="447:20" pos:end="447:25">drives</name></expr></argument>, <argument pos:start="447:28" pos:end="447:32"><expr pos:start="447:28" pos:end="447:32"><name pos:start="447:28" pos:end="447:32">dinfo</name></expr></argument>, <argument pos:start="447:35" pos:end="447:38"><expr pos:start="447:35" pos:end="447:38"><name pos:start="447:35" pos:end="447:38">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="449:5" pos:end="449:18"><expr pos:start="449:5" pos:end="449:17"><call pos:start="449:5" pos:end="449:17"><name pos:start="449:5" pos:end="449:10">g_free</name><argument_list pos:start="449:11" pos:end="449:17">(<argument pos:start="449:12" pos:end="449:16"><expr pos:start="449:12" pos:end="449:16"><name pos:start="449:12" pos:end="449:16">dinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="451:1" pos:end="451:10"><name pos:start="451:1" pos:end="451:9">early_err</name>:</label>

    <expr_stmt pos:start="453:5" pos:end="453:21"><expr pos:start="453:5" pos:end="453:20"><call pos:start="453:5" pos:end="453:20"><name pos:start="453:5" pos:end="453:11">QDECREF</name><argument_list pos:start="453:12" pos:end="453:20">(<argument pos:start="453:13" pos:end="453:19"><expr pos:start="453:13" pos:end="453:19"><name pos:start="453:13" pos:end="453:19">bs_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="455:5" pos:end="455:24"><expr pos:start="455:5" pos:end="455:23"><call pos:start="455:5" pos:end="455:23"><name pos:start="455:5" pos:end="455:17">qemu_opts_del</name><argument_list pos:start="455:18" pos:end="455:23">(<argument pos:start="455:19" pos:end="455:22"><expr pos:start="455:19" pos:end="455:22"><name pos:start="455:19" pos:end="455:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="457:5" pos:end="457:16">return <expr pos:start="457:12" pos:end="457:15"><name pos:start="457:12" pos:end="457:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
