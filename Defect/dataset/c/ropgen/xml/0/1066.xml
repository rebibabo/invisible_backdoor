<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1066.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">check_time</name><parameter_list pos:start="1:23" pos:end="1:34">(<parameter pos:start="1:24" pos:end="1:33"><decl pos:start="1:24" pos:end="1:33"><type pos:start="1:24" pos:end="1:26"><name pos:start="1:24" pos:end="1:26">int</name></type> <name pos:start="1:28" pos:end="1:33">wiggle</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:13">tm</name></name></type> <name pos:start="5:15" pos:end="5:19">start</name></decl>, <decl pos:start="5:22" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:13"/><name pos:start="5:22" pos:end="5:28"><name pos:start="5:22" pos:end="5:25">date</name><index pos:start="5:26" pos:end="5:28">[<expr pos:start="5:27" pos:end="5:27"><literal type="number" pos:start="5:27" pos:end="5:27">4</literal></expr>]</index></name></decl>, <decl pos:start="5:31" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:13"/><name pos:start="5:31" pos:end="5:33">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:13">tm</name></name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">datep</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">time_t</name></type> <name pos:start="9:12" pos:end="9:13">ts</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="35:7">/*

     * This check assumes a few things.  First, we cannot guarantee that we get

     * a consistent reading from the wall clock because we may hit an edge of

     * the clock while reading.  To work around this, we read four clock readings

     * such that at least two of them should match.  We need to assume that one

     * reading is corrupt so we need four readings to ensure that we have at

     * least two consecutive identical readings

     *

     * It's also possible that we'll cross an edge reading the host clock so

     * simply check to make sure that the clock reading is within the period of

     * when we expect it to be.

     */</comment>



    <expr_stmt pos:start="39:5" pos:end="39:20"><expr pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:6">ts</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <call pos:start="39:10" pos:end="39:19"><name pos:start="39:10" pos:end="39:13">time</name><argument_list pos:start="39:14" pos:end="39:19">(<argument pos:start="39:15" pos:end="39:18"><expr pos:start="39:15" pos:end="39:18"><name pos:start="39:15" pos:end="39:18">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:26"><expr pos:start="41:5" pos:end="41:25"><call pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:12">gmtime_r</name><argument_list pos:start="41:13" pos:end="41:25">(<argument pos:start="41:14" pos:end="41:16"><expr pos:start="41:14" pos:end="41:16"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:16">ts</name></expr></argument>, <argument pos:start="41:19" pos:end="41:24"><expr pos:start="41:19" pos:end="41:24"><operator pos:start="41:19" pos:end="41:19">&amp;</operator><name pos:start="41:20" pos:end="41:24">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><call pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:22">cmos_get_date_time</name><argument_list pos:start="45:23" pos:end="45:32">(<argument pos:start="45:24" pos:end="45:31"><expr pos:start="45:24" pos:end="45:31"><operator pos:start="45:24" pos:end="45:24">&amp;</operator><name pos:start="45:25" pos:end="45:31"><name pos:start="45:25" pos:end="45:28">date</name><index pos:start="45:29" pos:end="45:31">[<expr pos:start="45:30" pos:end="45:30"><literal type="number" pos:start="45:30" pos:end="45:30">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><call pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:22">cmos_get_date_time</name><argument_list pos:start="47:23" pos:end="47:32">(<argument pos:start="47:24" pos:end="47:31"><expr pos:start="47:24" pos:end="47:31"><operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:31"><name pos:start="47:25" pos:end="47:28">date</name><index pos:start="47:29" pos:end="47:31">[<expr pos:start="47:30" pos:end="47:30"><literal type="number" pos:start="47:30" pos:end="47:30">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><call pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:22">cmos_get_date_time</name><argument_list pos:start="49:23" pos:end="49:32">(<argument pos:start="49:24" pos:end="49:31"><expr pos:start="49:24" pos:end="49:31"><operator pos:start="49:24" pos:end="49:24">&amp;</operator><name pos:start="49:25" pos:end="49:31"><name pos:start="49:25" pos:end="49:28">date</name><index pos:start="49:29" pos:end="49:31">[<expr pos:start="49:30" pos:end="49:30"><literal type="number" pos:start="49:30" pos:end="49:30">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><call pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:22">cmos_get_date_time</name><argument_list pos:start="51:23" pos:end="51:32">(<argument pos:start="51:24" pos:end="51:31"><expr pos:start="51:24" pos:end="51:31"><operator pos:start="51:24" pos:end="51:24">&amp;</operator><name pos:start="51:25" pos:end="51:31"><name pos:start="51:25" pos:end="51:28">date</name><index pos:start="51:29" pos:end="51:31">[<expr pos:start="51:30" pos:end="51:30"><literal type="number" pos:start="51:30" pos:end="51:30">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:20"><expr pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:6">ts</name> <operator pos:start="55:8" pos:end="55:8">=</operator> <call pos:start="55:10" pos:end="55:19"><name pos:start="55:10" pos:end="55:13">time</name><argument_list pos:start="55:14" pos:end="55:19">(<argument pos:start="55:15" pos:end="55:18"><expr pos:start="55:15" pos:end="55:18"><name pos:start="55:15" pos:end="55:18">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:24"><expr pos:start="57:5" pos:end="57:23"><call pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:12">gmtime_r</name><argument_list pos:start="57:13" pos:end="57:23">(<argument pos:start="57:14" pos:end="57:16"><expr pos:start="57:14" pos:end="57:16"><operator pos:start="57:14" pos:end="57:14">&amp;</operator><name pos:start="57:15" pos:end="57:16">ts</name></expr></argument>, <argument pos:start="57:19" pos:end="57:22"><expr pos:start="57:19" pos:end="57:22"><operator pos:start="57:19" pos:end="57:19">&amp;</operator><name pos:start="57:20" pos:end="57:22">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="77:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:40">(<expr pos:start="61:9" pos:end="61:39"><call pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:14">tm_cmp</name><argument_list pos:start="61:15" pos:end="61:34">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><operator pos:start="61:16" pos:end="61:16">&amp;</operator><name pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:20">date</name><index pos:start="61:21" pos:end="61:23">[<expr pos:start="61:22" pos:end="61:22"><literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="61:26" pos:end="61:33"><expr pos:start="61:26" pos:end="61:33"><operator pos:start="61:26" pos:end="61:26">&amp;</operator><name pos:start="61:27" pos:end="61:33"><name pos:start="61:27" pos:end="61:30">date</name><index pos:start="61:31" pos:end="61:33">[<expr pos:start="61:32" pos:end="61:32"><literal type="number" pos:start="61:32" pos:end="61:32">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="61:36" pos:end="61:37">==</operator> <literal type="number" pos:start="61:39" pos:end="61:39">0</literal></expr>)</condition> <block pos:start="61:42" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:25">

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:13">datep</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <operator pos:start="63:17" pos:end="63:17">&amp;</operator><name pos:start="63:18" pos:end="63:24"><name pos:start="63:18" pos:end="63:21">date</name><index pos:start="63:22" pos:end="63:24">[<expr pos:start="63:23" pos:end="63:23"><literal type="number" pos:start="63:23" pos:end="63:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="65:7" pos:end="69:5">else if <condition pos:start="65:15" pos:end="65:47">(<expr pos:start="65:16" pos:end="65:46"><call pos:start="65:16" pos:end="65:41"><name pos:start="65:16" pos:end="65:21">tm_cmp</name><argument_list pos:start="65:22" pos:end="65:41">(<argument pos:start="65:23" pos:end="65:30"><expr pos:start="65:23" pos:end="65:30"><operator pos:start="65:23" pos:end="65:23">&amp;</operator><name pos:start="65:24" pos:end="65:30"><name pos:start="65:24" pos:end="65:27">date</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><literal type="number" pos:start="65:29" pos:end="65:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:33" pos:end="65:40"><expr pos:start="65:33" pos:end="65:40"><operator pos:start="65:33" pos:end="65:33">&amp;</operator><name pos:start="65:34" pos:end="65:40"><name pos:start="65:34" pos:end="65:37">date</name><index pos:start="65:38" pos:end="65:40">[<expr pos:start="65:39" pos:end="65:39"><literal type="number" pos:start="65:39" pos:end="65:39">2</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="65:43" pos:end="65:44">==</operator> <literal type="number" pos:start="65:46" pos:end="65:46">0</literal></expr>)</condition> <block pos:start="65:49" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:25">

        <expr_stmt pos:start="67:9" pos:end="67:25"><expr pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:13">datep</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <operator pos:start="67:17" pos:end="67:17">&amp;</operator><name pos:start="67:18" pos:end="67:24"><name pos:start="67:18" pos:end="67:21">date</name><index pos:start="67:22" pos:end="67:24">[<expr pos:start="67:23" pos:end="67:23"><literal type="number" pos:start="67:23" pos:end="67:23">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="69:7" pos:end="73:5">else if <condition pos:start="69:15" pos:end="69:47">(<expr pos:start="69:16" pos:end="69:46"><call pos:start="69:16" pos:end="69:41"><name pos:start="69:16" pos:end="69:21">tm_cmp</name><argument_list pos:start="69:22" pos:end="69:41">(<argument pos:start="69:23" pos:end="69:30"><expr pos:start="69:23" pos:end="69:30"><operator pos:start="69:23" pos:end="69:23">&amp;</operator><name pos:start="69:24" pos:end="69:30"><name pos:start="69:24" pos:end="69:27">date</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><literal type="number" pos:start="69:29" pos:end="69:29">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:33" pos:end="69:40"><expr pos:start="69:33" pos:end="69:40"><operator pos:start="69:33" pos:end="69:33">&amp;</operator><name pos:start="69:34" pos:end="69:40"><name pos:start="69:34" pos:end="69:37">date</name><index pos:start="69:38" pos:end="69:40">[<expr pos:start="69:39" pos:end="69:39"><literal type="number" pos:start="69:39" pos:end="69:39">3</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="69:43" pos:end="69:44">==</operator> <literal type="number" pos:start="69:46" pos:end="69:46">0</literal></expr>)</condition> <block pos:start="69:49" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:25">

        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:13">datep</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <operator pos:start="71:17" pos:end="71:17">&amp;</operator><name pos:start="71:18" pos:end="71:24"><name pos:start="71:18" pos:end="71:21">date</name><index pos:start="71:22" pos:end="71:24">[<expr pos:start="71:23" pos:end="71:23"><literal type="number" pos:start="71:23" pos:end="71:23">2</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="77:5">else <block pos:start="73:12" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:31">

        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><call pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:28">g_assert_not_reached</name><argument_list pos:start="75:29" pos:end="75:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="81:5" pos:end="109:5"><if pos:start="81:5" pos:end="109:5">if <condition pos:start="81:8" pos:end="81:66">(<expr pos:start="81:9" pos:end="81:65"><operator pos:start="81:9" pos:end="81:9">!</operator><operator pos:start="81:10" pos:end="81:10">(</operator><call pos:start="81:11" pos:end="81:31"><name pos:start="81:11" pos:end="81:16">tm_cmp</name><argument_list pos:start="81:17" pos:end="81:31">(<argument pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:23"><operator pos:start="81:18" pos:end="81:18">&amp;</operator><name pos:start="81:19" pos:end="81:23">start</name></expr></argument>, <argument pos:start="81:26" pos:end="81:30"><expr pos:start="81:26" pos:end="81:30"><name pos:start="81:26" pos:end="81:30">datep</name></expr></argument>)</argument_list></call> <operator pos:start="81:33" pos:end="81:34">&lt;=</operator> <literal type="number" pos:start="81:36" pos:end="81:36">0</literal> <operator pos:start="81:38" pos:end="81:39">&amp;&amp;</operator> <call pos:start="81:41" pos:end="81:59"><name pos:start="81:41" pos:end="81:46">tm_cmp</name><argument_list pos:start="81:47" pos:end="81:59">(<argument pos:start="81:48" pos:end="81:52"><expr pos:start="81:48" pos:end="81:52"><name pos:start="81:48" pos:end="81:52">datep</name></expr></argument>, <argument pos:start="81:55" pos:end="81:58"><expr pos:start="81:55" pos:end="81:58"><operator pos:start="81:55" pos:end="81:55">&amp;</operator><name pos:start="81:56" pos:end="81:58">end</name></expr></argument>)</argument_list></call> <operator pos:start="81:61" pos:end="81:62">&lt;=</operator> <literal type="number" pos:start="81:64" pos:end="81:64">0</literal><operator pos:start="81:65" pos:end="81:65">)</operator></expr>)</condition> <block pos:start="81:68" pos:end="109:5">{<block_content pos:start="83:9" pos:end="107:48">

        <decl_stmt pos:start="83:9" pos:end="83:20"><decl pos:start="83:9" pos:end="83:16"><type pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:14">time_t</name></type> <name pos:start="83:16" pos:end="83:16">t</name></decl>, <decl pos:start="83:19" pos:end="83:19"><type ref="prev" pos:start="83:9" pos:end="83:14"/><name pos:start="83:19" pos:end="83:19">s</name></decl>;</decl_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:41"><expr pos:start="87:9" pos:end="87:40"><name pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:13">start</name><operator pos:start="87:14" pos:end="87:14">.</operator><name pos:start="87:15" pos:end="87:22">tm_isdst</name></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:40"><name pos:start="87:26" pos:end="87:30">datep</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:40">tm_isdst</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:26"><expr pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:9">t</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <call pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:18">mktime</name><argument_list pos:start="91:19" pos:end="91:25">(<argument pos:start="91:20" pos:end="91:24"><expr pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:24">datep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:27"><expr pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:9">s</name> <operator pos:start="93:11" pos:end="93:11">=</operator> <call pos:start="93:13" pos:end="93:26"><name pos:start="93:13" pos:end="93:18">mktime</name><argument_list pos:start="93:19" pos:end="93:26">(<argument pos:start="93:20" pos:end="93:25"><expr pos:start="93:20" pos:end="93:25"><operator pos:start="93:20" pos:end="93:20">&amp;</operator><name pos:start="93:21" pos:end="93:25">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="103:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:18">(<expr pos:start="95:13" pos:end="95:17"><name pos:start="95:13" pos:end="95:13">t</name> <operator pos:start="95:15" pos:end="95:15">&lt;</operator> <name pos:start="95:17" pos:end="95:17">s</name></expr>)</condition> <block pos:start="95:20" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:80">

            <expr_stmt pos:start="97:13" pos:end="97:80"><expr pos:start="97:13" pos:end="97:79"><call pos:start="97:13" pos:end="97:79"><name pos:start="97:13" pos:end="97:26">g_test_message</name><argument_list pos:start="97:27" pos:end="97:79">(<argument pos:start="97:28" pos:end="97:69"><expr pos:start="97:28" pos:end="97:69"><literal type="string" pos:start="97:28" pos:end="97:69">"RTC is %ld second(s) behind wall-clock\n"</literal></expr></argument>, <argument pos:start="97:72" pos:end="97:78"><expr pos:start="97:72" pos:end="97:78"><operator pos:start="97:72" pos:end="97:72">(</operator><name pos:start="97:73" pos:end="97:73">s</name> <operator pos:start="97:75" pos:end="97:75">-</operator> <name pos:start="97:77" pos:end="97:77">t</name><operator pos:start="97:78" pos:end="97:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="99:11" pos:end="103:9">else <block pos:start="99:16" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:82">

            <expr_stmt pos:start="101:13" pos:end="101:82"><expr pos:start="101:13" pos:end="101:81"><call pos:start="101:13" pos:end="101:81"><name pos:start="101:13" pos:end="101:26">g_test_message</name><argument_list pos:start="101:27" pos:end="101:81">(<argument pos:start="101:28" pos:end="101:71"><expr pos:start="101:28" pos:end="101:71"><literal type="string" pos:start="101:28" pos:end="101:71">"RTC is %ld second(s) ahead of wall-clock\n"</literal></expr></argument>, <argument pos:start="101:74" pos:end="101:80"><expr pos:start="101:74" pos:end="101:80"><operator pos:start="101:74" pos:end="101:74">(</operator><name pos:start="101:75" pos:end="101:75">t</name> <operator pos:start="101:77" pos:end="101:77">-</operator> <name pos:start="101:79" pos:end="101:79">s</name><operator pos:start="101:80" pos:end="101:80">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:48"><expr pos:start="107:9" pos:end="107:47"><call pos:start="107:9" pos:end="107:47"><name pos:start="107:9" pos:end="107:23">g_assert_cmpint</name><argument_list pos:start="107:24" pos:end="107:47">(<argument pos:start="107:25" pos:end="107:34"><expr pos:start="107:25" pos:end="107:34"><call pos:start="107:25" pos:end="107:34"><name pos:start="107:25" pos:end="107:27">ABS</name><argument_list pos:start="107:28" pos:end="107:34">(<argument pos:start="107:29" pos:end="107:33"><expr pos:start="107:29" pos:end="107:33"><name pos:start="107:29" pos:end="107:29">t</name> <operator pos:start="107:31" pos:end="107:31">-</operator> <name pos:start="107:33" pos:end="107:33">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:37" pos:end="107:38"><expr pos:start="107:37" pos:end="107:38"><operator pos:start="107:37" pos:end="107:38">&lt;=</operator></expr></argument>, <argument pos:start="107:41" pos:end="107:46"><expr pos:start="107:41" pos:end="107:46"><name pos:start="107:41" pos:end="107:46">wiggle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
