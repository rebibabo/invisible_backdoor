<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2715.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">do_co_pwrite_zeroes</name><parameter_list pos:start="1:31" pos:end="3:72">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:43">BlockBackend</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">blk</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:57">int64_t</name></type> <name pos:start="1:59" pos:end="1:64">offset</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:44"><decl pos:start="3:32" pos:end="3:44"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:38">int64_t</name></type> <name pos:start="3:40" pos:end="3:44">count</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:55"><decl pos:start="3:47" pos:end="3:55"><type pos:start="3:47" pos:end="3:55"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:55">flags</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:71"><decl pos:start="3:58" pos:end="3:71"><type pos:start="3:58" pos:end="3:71"><name pos:start="3:58" pos:end="3:64">int64_t</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:71">total</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:5">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">Coroutine</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">co</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="23:6"><decl pos:start="9:5" pos:end="23:5"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">CoWriteZeroes</name></type> <name pos:start="9:19" pos:end="9:22">data</name> <init pos:start="9:24" pos:end="23:5">= <expr pos:start="9:26" pos:end="23:5"><block pos:start="9:26" pos:end="23:5">{

        <expr pos:start="11:9" pos:end="11:21"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:12">blk</name>    <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:21">blk</name></expr>,

        <expr pos:start="13:9" pos:end="13:24"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:15">offset</name> <operator pos:start="13:17" pos:end="13:17">=</operator> <name pos:start="13:19" pos:end="13:24">offset</name></expr>,

        <expr pos:start="15:9" pos:end="15:23"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:14">count</name>  <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:23">count</name></expr>,

        <expr pos:start="17:9" pos:end="17:23"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:14">total</name>  <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:23">total</name></expr>,

        <expr pos:start="19:9" pos:end="19:23"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:14">flags</name>  <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:23">flags</name></expr>,

        <expr pos:start="21:9" pos:end="21:23"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:13">done</name>   <operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:23">false</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:44">(<expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:13">count</name> <operator pos:start="27:15" pos:end="27:16">&gt;&gt;</operator> <name pos:start="27:18" pos:end="27:33">BDRV_SECTOR_BITS</name> <operator pos:start="27:35" pos:end="27:35">&gt;</operator> <name pos:start="27:37" pos:end="27:43">INT_MAX</name></expr>)</condition> <block pos:start="27:46" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:23">

        <return pos:start="29:9" pos:end="29:23">return <expr pos:start="29:16" pos:end="29:22"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:22">ERANGE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:6">co</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:61"><name pos:start="35:10" pos:end="35:30">qemu_coroutine_create</name><argument_list pos:start="35:31" pos:end="35:61">(<argument pos:start="35:32" pos:end="35:53"><expr pos:start="35:32" pos:end="35:53"><name pos:start="35:32" pos:end="35:53">co_pwrite_zeroes_entry</name></expr></argument>, <argument pos:start="35:56" pos:end="35:60"><expr pos:start="35:56" pos:end="35:60"><operator pos:start="35:56" pos:end="35:56">&amp;</operator><name pos:start="35:57" pos:end="35:60">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><call pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:24">qemu_coroutine_enter</name><argument_list pos:start="37:25" pos:end="37:28">(<argument pos:start="37:26" pos:end="37:27"><expr pos:start="37:26" pos:end="37:27"><name pos:start="37:26" pos:end="37:27">co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="39:5" pos:end="43:5">while <condition pos:start="39:11" pos:end="39:22">(<expr pos:start="39:12" pos:end="39:21"><operator pos:start="39:12" pos:end="39:12">!</operator><name pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:16">data</name><operator pos:start="39:17" pos:end="39:17">.</operator><name pos:start="39:18" pos:end="39:21">done</name></name></expr>)</condition> <block pos:start="39:24" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:49">

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:16">aio_poll</name><argument_list pos:start="41:17" pos:end="41:48">(<argument pos:start="41:18" pos:end="41:41"><expr pos:start="41:18" pos:end="41:41"><call pos:start="41:18" pos:end="41:41"><name pos:start="41:18" pos:end="41:36">blk_get_aio_context</name><argument_list pos:start="41:37" pos:end="41:41">(<argument pos:start="41:38" pos:end="41:40"><expr pos:start="41:38" pos:end="41:40"><name pos:start="41:38" pos:end="41:40">blk</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:44" pos:end="41:47"><expr pos:start="41:44" pos:end="41:47"><name pos:start="41:44" pos:end="41:47">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:21">(<expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:12">data</name><operator pos:start="45:13" pos:end="45:13">.</operator><name pos:start="45:14" pos:end="45:16">ret</name></name> <operator pos:start="45:18" pos:end="45:18">&lt;</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>)</condition> <block pos:start="45:23" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:24">

        <return pos:start="47:9" pos:end="47:24">return <expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:19">data</name><operator pos:start="47:20" pos:end="47:20">.</operator><name pos:start="47:21" pos:end="47:23">ret</name></name></expr>;</return>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="53:5">else <block pos:start="49:12" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:17">

        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
