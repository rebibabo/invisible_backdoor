<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18860.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:57"><name pos:start="1:1" pos:end="1:16">dshow_cycle_pins</name><argument_list pos:start="1:17" pos:end="3:57">(<argument pos:start="1:18" pos:end="1:39">AVFormatContext *avctx</argument>, <argument pos:start="1:42" pos:end="1:69">enum dshowDeviceType devtype</argument>,

                 <argument pos:start="3:18" pos:end="3:43">IBaseFilter *device_filter</argument>, <argument pos:start="3:46" pos:end="3:56">IPin **ppin</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="139:1">{<block_content pos:start="7:5" pos:end="137:13">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">IEnumPins</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:19">pins</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">IPin</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:20">device_pin</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">IPin</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:13">pin</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">r</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:70"><decl pos:start="17:5" pos:end="17:69"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">GUID</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:28"><name pos:start="17:17" pos:end="17:25">mediatype</name><index pos:start="17:26" pos:end="17:28">[<expr pos:start="17:27" pos:end="17:27"><literal type="number" pos:start="17:27" pos:end="17:27">2</literal></expr>]</index></name> <init pos:start="17:30" pos:end="17:69">= <expr pos:start="17:32" pos:end="17:69"><block pos:start="17:32" pos:end="17:69">{ <expr pos:start="17:34" pos:end="17:49"><operator pos:start="17:34" pos:end="17:34">&amp;</operator><name pos:start="17:35" pos:end="17:49">MEDIATYPE_Video</name></expr>, <expr pos:start="17:52" pos:end="17:67"><operator pos:start="17:52" pos:end="17:52">&amp;</operator><name pos:start="17:53" pos:end="17:67">MEDIATYPE_Audio</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:75"><decl pos:start="19:5" pos:end="19:74"><type pos:start="19:5" pos:end="19:16"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:14">char</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:27">devtypename</name> <init pos:start="19:29" pos:end="19:74">= <expr pos:start="19:31" pos:end="19:74"><ternary pos:start="19:31" pos:end="19:74"><condition pos:start="19:31" pos:end="19:56"><expr pos:start="19:31" pos:end="19:54"><operator pos:start="19:31" pos:end="19:31">(</operator><name pos:start="19:32" pos:end="19:38">devtype</name> <operator pos:start="19:40" pos:end="19:41">==</operator> <name pos:start="19:43" pos:end="19:53">VideoDevice</name><operator pos:start="19:54" pos:end="19:54">)</operator></expr> ?</condition><then pos:start="19:58" pos:end="19:64"> <expr pos:start="19:58" pos:end="19:64"><literal type="string" pos:start="19:58" pos:end="19:64">"video"</literal></expr> </then><else pos:start="19:66" pos:end="19:74">: <expr pos:start="19:68" pos:end="19:74"><literal type="string" pos:start="19:68" pos:end="19:74">"audio"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:5">r</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:50"><name pos:start="23:9" pos:end="23:28">IBaseFilter_EnumPins</name><argument_list pos:start="23:29" pos:end="23:50">(<argument pos:start="23:30" pos:end="23:42"><expr pos:start="23:30" pos:end="23:42"><name pos:start="23:30" pos:end="23:42">device_filter</name></expr></argument>, <argument pos:start="23:45" pos:end="23:49"><expr pos:start="23:45" pos:end="23:49"><operator pos:start="23:45" pos:end="23:45">&amp;</operator><name pos:start="23:46" pos:end="23:49">pins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:18">(<expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:9">r</name> <operator pos:start="25:11" pos:end="25:12">!=</operator> <name pos:start="25:14" pos:end="25:17">S_OK</name></expr>)</condition> <block pos:start="25:20" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:28">

        <expr_stmt pos:start="27:9" pos:end="27:67"><expr pos:start="27:9" pos:end="27:66"><call pos:start="27:9" pos:end="27:66"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:66">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:65"><expr pos:start="27:37" pos:end="27:65"><literal type="string" pos:start="27:37" pos:end="27:65">"Could not enumerate pins.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:28">return <expr pos:start="29:16" pos:end="29:27"><call pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:27">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="35:5" pos:end="115:5">while <condition pos:start="35:11" pos:end="35:70">(<expr pos:start="35:12" pos:end="35:69"><call pos:start="35:12" pos:end="35:46"><name pos:start="35:12" pos:end="35:25">IEnumPins_Next</name><argument_list pos:start="35:26" pos:end="35:46">(<argument pos:start="35:27" pos:end="35:30"><expr pos:start="35:27" pos:end="35:30"><name pos:start="35:27" pos:end="35:30">pins</name></expr></argument>, <argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><literal type="number" pos:start="35:33" pos:end="35:33">1</literal></expr></argument>, <argument pos:start="35:36" pos:end="35:39"><expr pos:start="35:36" pos:end="35:39"><operator pos:start="35:36" pos:end="35:36">&amp;</operator><name pos:start="35:37" pos:end="35:39">pin</name></expr></argument>, <argument pos:start="35:42" pos:end="35:45"><expr pos:start="35:42" pos:end="35:45"><name pos:start="35:42" pos:end="35:45">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="35:48" pos:end="35:49">==</operator> <name pos:start="35:51" pos:end="35:54">S_OK</name> <operator pos:start="35:56" pos:end="35:57">&amp;&amp;</operator> <operator pos:start="35:59" pos:end="35:59">!</operator><name pos:start="35:60" pos:end="35:69">device_pin</name></expr>)</condition> <block pos:start="35:72" pos:end="115:5">{<block_content pos:start="37:9" pos:end="113:30">

        <decl_stmt pos:start="37:9" pos:end="37:33"><decl pos:start="37:9" pos:end="37:32"><type pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:22">IKsPropertySet</name> <modifier pos:start="37:24" pos:end="37:24">*</modifier></type><name pos:start="37:25" pos:end="37:25">p</name> <init pos:start="37:27" pos:end="37:32">= <expr pos:start="37:29" pos:end="37:32"><name pos:start="37:29" pos:end="37:32">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:31"><decl pos:start="39:9" pos:end="39:30"><type pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:23">IEnumMediaTypes</name> <modifier pos:start="39:25" pos:end="39:25">*</modifier></type><name pos:start="39:26" pos:end="39:30">types</name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:28"><decl pos:start="41:9" pos:end="41:27"><type pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:16">PIN_INFO</name></type> <name pos:start="41:18" pos:end="41:21">info</name> <init pos:start="41:23" pos:end="41:27">= <expr pos:start="41:25" pos:end="41:27"><block pos:start="41:25" pos:end="41:27">{<expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:28"><decl pos:start="43:9" pos:end="43:27"><type pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:21">AM_MEDIA_TYPE</name> <modifier pos:start="43:23" pos:end="43:23">*</modifier></type><name pos:start="43:24" pos:end="43:27">type</name></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:22"><decl pos:start="45:9" pos:end="45:21"><type pos:start="45:9" pos:end="45:12"><name pos:start="45:9" pos:end="45:12">GUID</name></type> <name pos:start="45:14" pos:end="45:21">category</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:17"><decl pos:start="47:9" pos:end="47:16"><type pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:13">DWORD</name></type> <name pos:start="47:15" pos:end="47:16">r2</name></decl>;</decl_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:38"><expr pos:start="51:9" pos:end="51:37"><call pos:start="51:9" pos:end="51:37"><name pos:start="51:9" pos:end="51:25">IPin_QueryPinInfo</name><argument_list pos:start="51:26" pos:end="51:37">(<argument pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:29">pin</name></expr></argument>, <argument pos:start="51:32" pos:end="51:36"><expr pos:start="51:32" pos:end="51:36"><operator pos:start="51:32" pos:end="51:32">&amp;</operator><name pos:start="51:33" pos:end="51:36">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:42"><expr pos:start="53:9" pos:end="53:41"><call pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:27">IBaseFilter_Release</name><argument_list pos:start="53:28" pos:end="53:41">(<argument pos:start="53:29" pos:end="53:40"><expr pos:start="53:29" pos:end="53:40"><name pos:start="53:29" pos:end="53:40"><name pos:start="53:29" pos:end="53:32">info</name><operator pos:start="53:33" pos:end="53:33">.</operator><name pos:start="53:34" pos:end="53:40">pFilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="57:9" pos:end="59:22"><if pos:start="57:9" pos:end="59:22">if <condition pos:start="57:12" pos:end="57:38">(<expr pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:16">info</name><operator pos:start="57:17" pos:end="57:17">.</operator><name pos:start="57:18" pos:end="57:20">dir</name></name> <operator pos:start="57:22" pos:end="57:23">!=</operator> <name pos:start="57:25" pos:end="57:37">PINDIR_OUTPUT</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:22"><block_content pos:start="59:13" pos:end="59:22">

            <goto pos:start="59:13" pos:end="59:22">goto <name pos:start="59:18" pos:end="59:21">next</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="63:22"><if pos:start="61:9" pos:end="63:22">if <condition pos:start="61:12" pos:end="61:80">(<expr pos:start="61:13" pos:end="61:79"><call pos:start="61:13" pos:end="61:71"><name pos:start="61:13" pos:end="61:31">IPin_QueryInterface</name><argument_list pos:start="61:32" pos:end="61:71">(<argument pos:start="61:33" pos:end="61:35"><expr pos:start="61:33" pos:end="61:35"><name pos:start="61:33" pos:end="61:35">pin</name></expr></argument>, <argument pos:start="61:38" pos:end="61:56"><expr pos:start="61:38" pos:end="61:56"><operator pos:start="61:38" pos:end="61:38">&amp;</operator><name pos:start="61:39" pos:end="61:56">IID_IKsPropertySet</name></expr></argument>, <argument pos:start="61:59" pos:end="61:70"><expr pos:start="61:59" pos:end="61:70"><operator pos:start="61:59" pos:end="61:59">(</operator><name pos:start="61:60" pos:end="61:63">void</name> <operator pos:start="61:65" pos:end="61:65">*</operator><operator pos:start="61:66" pos:end="61:66">*</operator><operator pos:start="61:67" pos:end="61:67">)</operator> <operator pos:start="61:69" pos:end="61:69">&amp;</operator><name pos:start="61:70" pos:end="61:70">p</name></expr></argument>)</argument_list></call> <operator pos:start="61:73" pos:end="61:74">!=</operator> <name pos:start="61:76" pos:end="61:79">S_OK</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:22"><block_content pos:start="63:13" pos:end="63:22">

            <goto pos:start="63:13" pos:end="63:22">goto <name pos:start="63:18" pos:end="63:21">next</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="69:22"><if pos:start="65:9" pos:end="69:22">if <condition pos:start="65:12" pos:end="67:78">(<expr pos:start="65:13" pos:end="67:77"><call pos:start="65:13" pos:end="67:69"><name pos:start="65:13" pos:end="65:30">IKsPropertySet_Get</name><argument_list pos:start="65:31" pos:end="67:69">(<argument pos:start="65:32" pos:end="65:32"><expr pos:start="65:32" pos:end="65:32"><name pos:start="65:32" pos:end="65:32">p</name></expr></argument>, <argument pos:start="65:35" pos:end="65:50"><expr pos:start="65:35" pos:end="65:50"><operator pos:start="65:35" pos:end="65:35">&amp;</operator><name pos:start="65:36" pos:end="65:50">AMPROPSETID_Pin</name></expr></argument>, <argument pos:start="65:53" pos:end="65:75"><expr pos:start="65:53" pos:end="65:75"><name pos:start="65:53" pos:end="65:75">AMPROPERTY_PIN_CATEGORY</name></expr></argument>,

                               <argument pos:start="67:32" pos:end="67:35"><expr pos:start="67:32" pos:end="67:35"><name pos:start="67:32" pos:end="67:35">NULL</name></expr></argument>, <argument pos:start="67:38" pos:end="67:38"><expr pos:start="67:38" pos:end="67:38"><literal type="number" pos:start="67:38" pos:end="67:38">0</literal></expr></argument>, <argument pos:start="67:41" pos:end="67:49"><expr pos:start="67:41" pos:end="67:49"><operator pos:start="67:41" pos:end="67:41">&amp;</operator><name pos:start="67:42" pos:end="67:49">category</name></expr></argument>, <argument pos:start="67:52" pos:end="67:63"><expr pos:start="67:52" pos:end="67:63"><sizeof pos:start="67:52" pos:end="67:63">sizeof<argument_list pos:start="67:58" pos:end="67:63">(<argument pos:start="67:59" pos:end="67:62"><expr pos:start="67:59" pos:end="67:62"><name pos:start="67:59" pos:end="67:62">GUID</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="67:66" pos:end="67:68"><expr pos:start="67:66" pos:end="67:68"><operator pos:start="67:66" pos:end="67:66">&amp;</operator><name pos:start="67:67" pos:end="67:68">r2</name></expr></argument>)</argument_list></call> <operator pos:start="67:71" pos:end="67:72">!=</operator> <name pos:start="67:74" pos:end="67:77">S_OK</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:22"><block_content pos:start="69:13" pos:end="69:22">

            <goto pos:start="69:13" pos:end="69:22">goto <name pos:start="69:18" pos:end="69:21">next</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="71:9" pos:end="73:22"><if pos:start="71:9" pos:end="73:22">if <condition pos:start="71:12" pos:end="71:59">(<expr pos:start="71:13" pos:end="71:58"><operator pos:start="71:13" pos:end="71:13">!</operator><call pos:start="71:14" pos:end="71:58"><name pos:start="71:14" pos:end="71:24">IsEqualGUID</name><argument_list pos:start="71:25" pos:end="71:58">(<argument pos:start="71:26" pos:end="71:34"><expr pos:start="71:26" pos:end="71:34"><operator pos:start="71:26" pos:end="71:26">&amp;</operator><name pos:start="71:27" pos:end="71:34">category</name></expr></argument>, <argument pos:start="71:37" pos:end="71:57"><expr pos:start="71:37" pos:end="71:57"><operator pos:start="71:37" pos:end="71:37">&amp;</operator><name pos:start="71:38" pos:end="71:57">PIN_CATEGORY_CAPTURE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:22"><block_content pos:start="73:13" pos:end="73:22">

            <goto pos:start="73:13" pos:end="73:22">goto <name pos:start="73:18" pos:end="73:21">next</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="77:9" pos:end="79:22"><if pos:start="77:9" pos:end="79:22">if <condition pos:start="77:12" pos:end="77:53">(<expr pos:start="77:13" pos:end="77:52"><call pos:start="77:13" pos:end="77:44"><name pos:start="77:13" pos:end="77:31">IPin_EnumMediaTypes</name><argument_list pos:start="77:32" pos:end="77:44">(<argument pos:start="77:33" pos:end="77:35"><expr pos:start="77:33" pos:end="77:35"><name pos:start="77:33" pos:end="77:35">pin</name></expr></argument>, <argument pos:start="77:38" pos:end="77:43"><expr pos:start="77:38" pos:end="77:43"><operator pos:start="77:38" pos:end="77:38">&amp;</operator><name pos:start="77:39" pos:end="77:43">types</name></expr></argument>)</argument_list></call> <operator pos:start="77:46" pos:end="77:47">!=</operator> <name pos:start="77:49" pos:end="77:52">S_OK</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:22"><block_content pos:start="79:13" pos:end="79:22">

            <goto pos:start="79:13" pos:end="79:22">goto <name pos:start="79:18" pos:end="79:21">next</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:37"><expr pos:start="83:9" pos:end="83:36"><call pos:start="83:9" pos:end="83:36"><name pos:start="83:9" pos:end="83:29">IEnumMediaTypes_Reset</name><argument_list pos:start="83:30" pos:end="83:36">(<argument pos:start="83:31" pos:end="83:35"><expr pos:start="83:31" pos:end="83:35"><name pos:start="83:31" pos:end="83:35">types</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="85:9" pos:end="97:9">while <condition pos:start="85:15" pos:end="85:82">(<expr pos:start="85:16" pos:end="85:81"><call pos:start="85:16" pos:end="85:58"><name pos:start="85:16" pos:end="85:35">IEnumMediaTypes_Next</name><argument_list pos:start="85:36" pos:end="85:58">(<argument pos:start="85:37" pos:end="85:41"><expr pos:start="85:37" pos:end="85:41"><name pos:start="85:37" pos:end="85:41">types</name></expr></argument>, <argument pos:start="85:44" pos:end="85:44"><expr pos:start="85:44" pos:end="85:44"><literal type="number" pos:start="85:44" pos:end="85:44">1</literal></expr></argument>, <argument pos:start="85:47" pos:end="85:51"><expr pos:start="85:47" pos:end="85:51"><operator pos:start="85:47" pos:end="85:47">&amp;</operator><name pos:start="85:48" pos:end="85:51">type</name></expr></argument>, <argument pos:start="85:54" pos:end="85:57"><expr pos:start="85:54" pos:end="85:57"><name pos:start="85:54" pos:end="85:57">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="85:60" pos:end="85:61">==</operator> <name pos:start="85:63" pos:end="85:66">S_OK</name> <operator pos:start="85:68" pos:end="85:69">&amp;&amp;</operator> <operator pos:start="85:71" pos:end="85:71">!</operator><name pos:start="85:72" pos:end="85:81">device_pin</name></expr>)</condition> <block pos:start="85:84" pos:end="97:9">{<block_content pos:start="87:13" pos:end="95:32">

            <if_stmt pos:start="87:13" pos:end="93:13"><if pos:start="87:13" pos:end="93:13">if <condition pos:start="87:16" pos:end="87:66">(<expr pos:start="87:17" pos:end="87:65"><call pos:start="87:17" pos:end="87:65"><name pos:start="87:17" pos:end="87:27">IsEqualGUID</name><argument_list pos:start="87:28" pos:end="87:65">(<argument pos:start="87:29" pos:end="87:44"><expr pos:start="87:29" pos:end="87:44"><operator pos:start="87:29" pos:end="87:29">&amp;</operator><name pos:start="87:30" pos:end="87:44"><name pos:start="87:30" pos:end="87:33">type</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:44">majortype</name></name></expr></argument>, <argument pos:start="87:47" pos:end="87:64"><expr pos:start="87:47" pos:end="87:64"><name pos:start="87:47" pos:end="87:64"><name pos:start="87:47" pos:end="87:55">mediatype</name><index pos:start="87:56" pos:end="87:64">[<expr pos:start="87:57" pos:end="87:63"><name pos:start="87:57" pos:end="87:63">devtype</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:68" pos:end="93:13">{<block_content pos:start="89:17" pos:end="91:26">

                <expr_stmt pos:start="89:17" pos:end="89:33"><expr pos:start="89:17" pos:end="89:32"><name pos:start="89:17" pos:end="89:26">device_pin</name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:32">pin</name></expr>;</expr_stmt>

                <goto pos:start="91:17" pos:end="91:26">goto <name pos:start="91:22" pos:end="91:25">next</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:32"><expr pos:start="95:13" pos:end="95:31"><call pos:start="95:13" pos:end="95:31"><name pos:start="95:13" pos:end="95:25">CoTaskMemFree</name><argument_list pos:start="95:26" pos:end="95:31">(<argument pos:start="95:27" pos:end="95:30"><expr pos:start="95:27" pos:end="95:30"><name pos:start="95:27" pos:end="95:30">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>



<label pos:start="101:1" pos:end="101:5"><name pos:start="101:1" pos:end="101:4">next</name>:</label>

        <if_stmt pos:start="103:9" pos:end="105:43"><if pos:start="103:9" pos:end="105:43">if <condition pos:start="103:12" pos:end="103:18">(<expr pos:start="103:13" pos:end="103:17"><name pos:start="103:13" pos:end="103:17">types</name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:43"><block_content pos:start="105:13" pos:end="105:43">

            <expr_stmt pos:start="105:13" pos:end="105:43"><expr pos:start="105:13" pos:end="105:42"><call pos:start="105:13" pos:end="105:42"><name pos:start="105:13" pos:end="105:35">IEnumMediaTypes_Release</name><argument_list pos:start="105:36" pos:end="105:42">(<argument pos:start="105:37" pos:end="105:41"><expr pos:start="105:37" pos:end="105:41"><name pos:start="105:37" pos:end="105:41">types</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="107:9" pos:end="109:38"><if pos:start="107:9" pos:end="109:38">if <condition pos:start="107:12" pos:end="107:14">(<expr pos:start="107:13" pos:end="107:13"><name pos:start="107:13" pos:end="107:13">p</name></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:38"><block_content pos:start="109:13" pos:end="109:38">

            <expr_stmt pos:start="109:13" pos:end="109:38"><expr pos:start="109:13" pos:end="109:37"><call pos:start="109:13" pos:end="109:37"><name pos:start="109:13" pos:end="109:34">IKsPropertySet_Release</name><argument_list pos:start="109:35" pos:end="109:37">(<argument pos:start="109:36" pos:end="109:36"><expr pos:start="109:36" pos:end="109:36"><name pos:start="109:36" pos:end="109:36">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="111:9" pos:end="113:30"><if pos:start="111:9" pos:end="113:30">if <condition pos:start="111:12" pos:end="111:30">(<expr pos:start="111:13" pos:end="111:29"><name pos:start="111:13" pos:end="111:22">device_pin</name> <operator pos:start="111:24" pos:end="111:25">!=</operator> <name pos:start="111:27" pos:end="111:29">pin</name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:30"><block_content pos:start="113:13" pos:end="113:30">

            <expr_stmt pos:start="113:13" pos:end="113:30"><expr pos:start="113:13" pos:end="113:29"><call pos:start="113:13" pos:end="113:29"><name pos:start="113:13" pos:end="113:24">IPin_Release</name><argument_list pos:start="113:25" pos:end="113:29">(<argument pos:start="113:26" pos:end="113:28"><expr pos:start="113:26" pos:end="113:28"><name pos:start="113:26" pos:end="113:28">pin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="119:5" pos:end="119:28"><expr pos:start="119:5" pos:end="119:27"><call pos:start="119:5" pos:end="119:27"><name pos:start="119:5" pos:end="119:21">IEnumPins_Release</name><argument_list pos:start="119:22" pos:end="119:27">(<argument pos:start="119:23" pos:end="119:26"><expr pos:start="119:23" pos:end="119:26"><name pos:start="119:23" pos:end="119:26">pins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="123:5" pos:end="131:5"><if pos:start="123:5" pos:end="131:5">if <condition pos:start="123:8" pos:end="123:20">(<expr pos:start="123:9" pos:end="123:19"><operator pos:start="123:9" pos:end="123:9">!</operator><name pos:start="123:10" pos:end="123:19">device_pin</name></expr>)</condition> <block pos:start="123:22" pos:end="131:5">{<block_content pos:start="125:9" pos:end="129:28">

        <expr_stmt pos:start="125:9" pos:end="127:83"><expr pos:start="125:9" pos:end="127:82"><call pos:start="125:9" pos:end="127:82"><name pos:start="125:9" pos:end="125:14">av_log</name><argument_list pos:start="125:15" pos:end="127:82">(<argument pos:start="125:16" pos:end="125:20"><expr pos:start="125:16" pos:end="125:20"><name pos:start="125:16" pos:end="125:20">avctx</name></expr></argument>, <argument pos:start="125:23" pos:end="125:34"><expr pos:start="125:23" pos:end="125:34"><name pos:start="125:23" pos:end="125:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="127:16" pos:end="127:68"><expr pos:start="127:16" pos:end="127:68"><literal type="string" pos:start="127:16" pos:end="127:68">"Could not find output pin from %s capture device.\n"</literal></expr></argument>, <argument pos:start="127:71" pos:end="127:81"><expr pos:start="127:71" pos:end="127:81"><name pos:start="127:71" pos:end="127:81">devtypename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="129:9" pos:end="129:28">return <expr pos:start="129:16" pos:end="129:27"><call pos:start="129:16" pos:end="129:27"><name pos:start="129:16" pos:end="129:22">AVERROR</name><argument_list pos:start="129:23" pos:end="129:27">(<argument pos:start="129:24" pos:end="129:26"><expr pos:start="129:24" pos:end="129:26"><name pos:start="129:24" pos:end="129:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:23"><expr pos:start="133:5" pos:end="133:22"><operator pos:start="133:5" pos:end="133:5">*</operator><name pos:start="133:6" pos:end="133:9">ppin</name> <operator pos:start="133:11" pos:end="133:11">=</operator> <name pos:start="133:13" pos:end="133:22">device_pin</name></expr>;</expr_stmt>



    <return pos:start="137:5" pos:end="137:13">return <expr pos:start="137:12" pos:end="137:12"><literal type="number" pos:start="137:12" pos:end="137:12">0</literal></expr>;</return>

</block_content>}</block>
</unit>
