<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7028.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mmu_translate_pte</name><parameter_list pos:start="1:29" pos:end="5:69">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:42">CPUS390XState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">env</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:67"><decl pos:start="1:50" pos:end="1:67"><type pos:start="1:50" pos:end="1:67"><name pos:start="1:50" pos:end="1:61">target_ulong</name></type> <name pos:start="1:63" pos:end="1:67">vaddr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:41">asc</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:56"><decl pos:start="3:44" pos:end="3:56"><type pos:start="3:44" pos:end="3:56"><name pos:start="3:44" pos:end="3:51">uint64_t</name></type> <name pos:start="3:53" pos:end="3:56">asce</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:48"><decl pos:start="5:30" pos:end="5:48"><type pos:start="5:30" pos:end="5:48"><name pos:start="5:30" pos:end="5:41">target_ulong</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:48">raddr</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:60"><decl pos:start="5:51" pos:end="5:60"><type pos:start="5:51" pos:end="5:60"><name pos:start="5:51" pos:end="5:53">int</name> <modifier pos:start="5:55" pos:end="5:55">*</modifier></type><name pos:start="5:56" pos:end="5:60">flags</name></decl></parameter>, <parameter pos:start="5:63" pos:end="5:68"><decl pos:start="5:63" pos:end="5:68"><type pos:start="5:63" pos:end="5:68"><name pos:start="5:63" pos:end="5:65">int</name></type> <name pos:start="5:67" pos:end="5:68">rw</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="39:1">{<block_content pos:start="9:5" pos:end="37:13">

    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:29">(<expr pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:12">asce</name> <operator pos:start="9:14" pos:end="9:14">&amp;</operator> <name pos:start="9:16" pos:end="9:28">_PAGE_INVALID</name></expr>)</condition> <block pos:start="9:31" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:18">

        <expr_stmt pos:start="11:9" pos:end="11:67"><expr pos:start="11:9" pos:end="11:66"><call pos:start="11:9" pos:end="11:66"><name pos:start="11:9" pos:end="11:15">DPRINTF</name><argument_list pos:start="11:16" pos:end="11:66">(<argument pos:start="11:17" pos:end="11:49"><expr pos:start="11:17" pos:end="11:49"><literal type="string" pos:start="11:17" pos:end="11:29">"%s: PTE=0x%"</literal> <name pos:start="11:31" pos:end="11:36">PRIx64</name> <literal type="string" pos:start="11:38" pos:end="11:49">" invalid\n"</literal></expr></argument>, <argument pos:start="11:52" pos:end="11:59"><expr pos:start="11:52" pos:end="11:59"><name pos:start="11:52" pos:end="11:59">__func__</name></expr></argument>, <argument pos:start="11:62" pos:end="11:65"><expr pos:start="11:62" pos:end="11:65"><name pos:start="11:62" pos:end="11:65">asce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:64"><expr pos:start="13:9" pos:end="13:63"><call pos:start="13:9" pos:end="13:63"><name pos:start="13:9" pos:end="13:26">trigger_page_fault</name><argument_list pos:start="13:27" pos:end="13:63">(<argument pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><name pos:start="13:28" pos:end="13:30">env</name></expr></argument>, <argument pos:start="13:33" pos:end="13:37"><expr pos:start="13:33" pos:end="13:37"><name pos:start="13:33" pos:end="13:37">vaddr</name></expr></argument>, <argument pos:start="13:40" pos:end="13:53"><expr pos:start="13:40" pos:end="13:53"><name pos:start="13:40" pos:end="13:53">PGM_PAGE_TRANS</name></expr></argument>, <argument pos:start="13:56" pos:end="13:58"><expr pos:start="13:56" pos:end="13:58"><name pos:start="13:56" pos:end="13:58">asc</name></expr></argument>, <argument pos:start="13:61" pos:end="13:62"><expr pos:start="13:61" pos:end="13:62"><name pos:start="13:61" pos:end="13:62">rw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:12">asce</name> <operator pos:start="21:14" pos:end="21:14">&amp;</operator> <name pos:start="21:16" pos:end="21:23">_PAGE_RO</name></expr>)</condition> <block pos:start="21:26" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:30">

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:14">flags</name> <operator pos:start="23:16" pos:end="23:17">&amp;=</operator> <operator pos:start="23:19" pos:end="23:19">~</operator><name pos:start="23:20" pos:end="23:29">PAGE_WRITE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><operator pos:start="29:5" pos:end="29:5">*</operator><name pos:start="29:6" pos:end="29:10">raddr</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:17">asce</name> <operator pos:start="29:19" pos:end="29:19">&amp;</operator> <name pos:start="29:21" pos:end="29:32">_ASCE_ORIGIN</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:59"><expr pos:start="33:5" pos:end="33:58"><call pos:start="33:5" pos:end="33:58"><name pos:start="33:5" pos:end="33:15">PTE_DPRINTF</name><argument_list pos:start="33:16" pos:end="33:58">(<argument pos:start="33:17" pos:end="33:41"><expr pos:start="33:17" pos:end="33:41"><literal type="string" pos:start="33:17" pos:end="33:29">"%s: PTE=0x%"</literal> <name pos:start="33:31" pos:end="33:36">PRIx64</name> <literal type="string" pos:start="33:38" pos:end="33:41">"\n"</literal></expr></argument>, <argument pos:start="33:44" pos:end="33:51"><expr pos:start="33:44" pos:end="33:51"><name pos:start="33:44" pos:end="33:51">__func__</name></expr></argument>, <argument pos:start="33:54" pos:end="33:57"><expr pos:start="33:54" pos:end="33:57"><name pos:start="33:54" pos:end="33:57">asce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
