<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2155.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">mp3_write_xing</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="207:1">{<block_content pos:start="5:5" pos:end="205:56">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:14">MP3Context</name>       <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">mp3</name> <init pos:start="5:27" pos:end="5:40">= <expr pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:69"><decl pos:start="7:5" pos:end="7:68"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">codec</name> <init pos:start="7:27" pos:end="7:68">= <expr pos:start="7:29" pos:end="7:68"><name pos:start="7:29" pos:end="7:61"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:38">streams</name><index pos:start="7:39" pos:end="7:61">[<expr pos:start="7:40" pos:end="7:60"><name pos:start="7:40" pos:end="7:60"><name pos:start="7:40" pos:end="7:42">mp3</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:60">audio_stream_idx</name></name></expr>]</index></name><operator pos:start="7:62" pos:end="7:63">-&gt;</operator><name pos:start="7:64" pos:end="7:68">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type>        <name pos:start="9:20" pos:end="9:25">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:19">MPADecodeHeader</name></type>  <name pos:start="11:22" pos:end="11:25">mpah</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">srate_idx</name></decl>, <decl pos:start="13:20" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:20">i</name></decl>, <decl pos:start="13:23" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:30">channels</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">bitrate_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:24">best_bitrate_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:36"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:26">best_bitrate_error</name> <init pos:start="19:28" pos:end="19:36">= <expr pos:start="19:30" pos:end="19:36"><name pos:start="19:30" pos:end="19:36">INT_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:19">xing_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ver</name> <init pos:start="23:13" pos:end="23:15">= <expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:26"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">lsf</name></decl>, <decl pos:start="25:14" pos:end="25:25"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:14" pos:end="25:25">bytes_needed</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="31:15"><if pos:start="29:5" pos:end="31:15">if <condition pos:start="29:8" pos:end="29:45">(<expr pos:start="29:9" pos:end="29:44"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:24"><name pos:start="29:10" pos:end="29:10">s</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:14">pb</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:24">seekable</name></name> <operator pos:start="29:26" pos:end="29:27">||</operator> <operator pos:start="29:29" pos:end="29:29">!</operator><name pos:start="29:30" pos:end="29:44"><name pos:start="29:30" pos:end="29:32">mp3</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:44">write_xing</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:15"><block_content pos:start="31:9" pos:end="31:15">

        <return pos:start="31:9" pos:end="31:15">return;</return></block_content></block></if></if_stmt>



    <for pos:start="35:5" pos:end="55:5">for <control pos:start="35:9" pos:end="35:61">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:56"><expr pos:start="35:17" pos:end="35:55"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <call pos:start="35:21" pos:end="35:55"><name pos:start="35:21" pos:end="35:34">FF_ARRAY_ELEMS</name><argument_list pos:start="35:35" pos:end="35:55">(<argument pos:start="35:36" pos:end="35:54"><expr pos:start="35:36" pos:end="35:54"><name pos:start="35:36" pos:end="35:54">avpriv_mpa_freq_tab</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="35:58" pos:end="35:60"><expr pos:start="35:58" pos:end="35:60"><name pos:start="35:58" pos:end="35:58">i</name><operator pos:start="35:59" pos:end="35:60">++</operator></expr></incr>)</control> <block pos:start="35:63" pos:end="55:5">{<block_content pos:start="37:9" pos:end="53:14">

        <decl_stmt pos:start="37:9" pos:end="37:58"><decl pos:start="37:9" pos:end="37:57"><type pos:start="37:9" pos:end="37:22"><specifier pos:start="37:9" pos:end="37:13">const</specifier> <name pos:start="37:15" pos:end="37:22">uint16_t</name></type> <name pos:start="37:24" pos:end="37:32">base_freq</name> <init pos:start="37:34" pos:end="37:57">= <expr pos:start="37:36" pos:end="37:57"><name pos:start="37:36" pos:end="37:57"><name pos:start="37:36" pos:end="37:54">avpriv_mpa_freq_tab</name><index pos:start="37:55" pos:end="37:57">[<expr pos:start="37:56" pos:end="37:56"><name pos:start="37:56" pos:end="37:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="41:9" pos:end="47:22"><if pos:start="41:9" pos:end="41:64">if      <condition pos:start="41:17" pos:end="41:49">(<expr pos:start="41:18" pos:end="41:48"><name pos:start="41:18" pos:end="41:35"><name pos:start="41:18" pos:end="41:22">codec</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:35">sample_rate</name></name> <operator pos:start="41:37" pos:end="41:38">==</operator> <name pos:start="41:40" pos:end="41:48">base_freq</name></expr>)</condition><block type="pseudo" pos:start="41:55" pos:end="41:64"><block_content pos:start="41:55" pos:end="41:64">     <expr_stmt pos:start="41:55" pos:end="41:64"><expr pos:start="41:55" pos:end="41:63"><name pos:start="41:55" pos:end="41:57">ver</name> <operator pos:start="41:59" pos:end="41:59">=</operator> <literal type="number" pos:start="41:61" pos:end="41:63">0x3</literal></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="41:66" pos:end="41:74">// MPEG 1</comment>

        <if type="elseif" pos:start="43:9" pos:end="43:64">else if <condition pos:start="43:17" pos:end="43:53">(<expr pos:start="43:18" pos:end="43:52"><name pos:start="43:18" pos:end="43:35"><name pos:start="43:18" pos:end="43:22">codec</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:35">sample_rate</name></name> <operator pos:start="43:37" pos:end="43:38">==</operator> <name pos:start="43:40" pos:end="43:48">base_freq</name> <operator pos:start="43:50" pos:end="43:50">/</operator> <literal type="number" pos:start="43:52" pos:end="43:52">2</literal></expr>)</condition><block type="pseudo" pos:start="43:55" pos:end="43:64"><block_content pos:start="43:55" pos:end="43:64"> <expr_stmt pos:start="43:55" pos:end="43:64"><expr pos:start="43:55" pos:end="43:63"><name pos:start="43:55" pos:end="43:57">ver</name> <operator pos:start="43:59" pos:end="43:59">=</operator> <literal type="number" pos:start="43:61" pos:end="43:63">0x2</literal></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="43:66" pos:end="43:74">// MPEG 2</comment>

        <if type="elseif" pos:start="45:9" pos:end="45:64">else if <condition pos:start="45:17" pos:end="45:53">(<expr pos:start="45:18" pos:end="45:52"><name pos:start="45:18" pos:end="45:35"><name pos:start="45:18" pos:end="45:22">codec</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:35">sample_rate</name></name> <operator pos:start="45:37" pos:end="45:38">==</operator> <name pos:start="45:40" pos:end="45:48">base_freq</name> <operator pos:start="45:50" pos:end="45:50">/</operator> <literal type="number" pos:start="45:52" pos:end="45:52">4</literal></expr>)</condition><block type="pseudo" pos:start="45:55" pos:end="45:64"><block_content pos:start="45:55" pos:end="45:64"> <expr_stmt pos:start="45:55" pos:end="45:64"><expr pos:start="45:55" pos:end="45:63"><name pos:start="45:55" pos:end="45:57">ver</name> <operator pos:start="45:59" pos:end="45:59">=</operator> <literal type="number" pos:start="45:61" pos:end="45:63">0x0</literal></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="45:66" pos:end="45:76">// MPEG 2.5</comment>

        <else pos:start="47:9" pos:end="47:22">else<block type="pseudo" pos:start="47:14" pos:end="47:22"><block_content pos:start="47:14" pos:end="47:22"> <continue pos:start="47:14" pos:end="47:22">continue;</continue></block_content></block></else></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:22"><expr pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:17">srate_idx</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:21">i</name></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    </block_content>}</block></for>

    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:49">(<expr pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:9">i</name> <operator pos:start="57:11" pos:end="57:12">==</operator> <call pos:start="57:14" pos:end="57:48"><name pos:start="57:14" pos:end="57:27">FF_ARRAY_ELEMS</name><argument_list pos:start="57:28" pos:end="57:48">(<argument pos:start="57:29" pos:end="57:47"><expr pos:start="57:29" pos:end="57:47"><name pos:start="57:29" pos:end="57:47">avpriv_mpa_freq_tab</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:51" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:15">

        <expr_stmt pos:start="59:9" pos:end="61:28"><expr pos:start="59:9" pos:end="61:27"><call pos:start="59:9" pos:end="61:27"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="61:27">(<argument pos:start="59:16" pos:end="59:16"><expr pos:start="59:16" pos:end="59:16"><name pos:start="59:16" pos:end="59:16">s</name></expr></argument>, <argument pos:start="59:19" pos:end="59:32"><expr pos:start="59:19" pos:end="59:32"><name pos:start="59:19" pos:end="59:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="59:35" pos:end="61:26"><expr pos:start="59:35" pos:end="61:26"><literal type="string" pos:start="59:35" pos:end="59:78">"Unsupported sample rate, not writing Xing "</literal>

               <literal type="string" pos:start="61:16" pos:end="61:26">"header.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="69:5" pos:end="81:5">switch <condition pos:start="69:12" pos:end="69:28">(<expr pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:17">codec</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:27">channels</name></name></expr>)</condition> <block pos:start="69:30" pos:end="81:5">{<block_content pos:start="71:5" pos:end="79:20">

    <case pos:start="71:5" pos:end="71:11">case <expr pos:start="71:10" pos:end="71:10"><literal type="number" pos:start="71:10" pos:end="71:10">1</literal></expr>:</case>  <expr_stmt pos:start="71:14" pos:end="71:33"><expr pos:start="71:14" pos:end="71:32"><name pos:start="71:14" pos:end="71:21">channels</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <name pos:start="71:25" pos:end="71:32">MPA_MONO</name></expr>;</expr_stmt>                                          <break pos:start="71:76" pos:end="71:81">break;</break>

    <case pos:start="73:5" pos:end="73:11">case <expr pos:start="73:10" pos:end="73:10"><literal type="number" pos:start="73:10" pos:end="73:10">2</literal></expr>:</case>  <expr_stmt pos:start="73:14" pos:end="73:35"><expr pos:start="73:14" pos:end="73:34"><name pos:start="73:14" pos:end="73:21">channels</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:34">MPA_STEREO</name></expr>;</expr_stmt>                                        <break pos:start="73:76" pos:end="73:81">break;</break>

    <default pos:start="75:5" pos:end="75:12">default:</default> <expr_stmt pos:start="75:14" pos:end="77:50"><expr pos:start="75:14" pos:end="77:49"><call pos:start="75:14" pos:end="77:49"><name pos:start="75:14" pos:end="75:19">av_log</name><argument_list pos:start="75:20" pos:end="77:49">(<argument pos:start="75:21" pos:end="75:21"><expr pos:start="75:21" pos:end="75:21"><name pos:start="75:21" pos:end="75:21">s</name></expr></argument>, <argument pos:start="75:24" pos:end="75:37"><expr pos:start="75:24" pos:end="75:37"><name pos:start="75:24" pos:end="75:37">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="75:40" pos:end="77:48"><expr pos:start="75:40" pos:end="77:48"><literal type="string" pos:start="75:40" pos:end="75:73">"Unsupported number of channels, "</literal>

                    <literal type="string" pos:start="77:21" pos:end="77:48">"not writing Xing header.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             <return pos:start="79:14" pos:end="79:20">return;</return>

    </block_content>}</block></switch>



    <comment type="block" pos:start="85:5" pos:end="85:33">/* dummy MPEG audio header */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:59"><expr pos:start="87:5" pos:end="87:58"><name pos:start="87:5" pos:end="87:10">header</name>  <operator pos:start="87:13" pos:end="87:13">=</operator>  <literal type="number" pos:start="87:16" pos:end="87:19">0xff</literal>                                  <operator pos:start="87:54" pos:end="87:55">&lt;&lt;</operator> <literal type="number" pos:start="87:57" pos:end="87:58">24</literal></expr>;</expr_stmt> <comment type="line" pos:start="87:61" pos:end="87:67">// sync</comment>

    <expr_stmt pos:start="89:5" pos:end="89:59"><expr pos:start="89:5" pos:end="89:58"><name pos:start="89:5" pos:end="89:10">header</name> <operator pos:start="89:12" pos:end="89:13">|=</operator> <operator pos:start="89:15" pos:end="89:15">(</operator><literal type="number" pos:start="89:16" pos:end="89:18">0x7</literal> <operator pos:start="89:20" pos:end="89:21">&lt;&lt;</operator> <literal type="number" pos:start="89:23" pos:end="89:23">5</literal> <operator pos:start="89:25" pos:end="89:25">|</operator> <name pos:start="89:27" pos:end="89:29">ver</name> <operator pos:start="89:31" pos:end="89:32">&lt;&lt;</operator> <literal type="number" pos:start="89:34" pos:end="89:34">3</literal> <operator pos:start="89:36" pos:end="89:36">|</operator> <literal type="number" pos:start="89:38" pos:end="89:40">0x1</literal> <operator pos:start="89:42" pos:end="89:43">&lt;&lt;</operator> <literal type="number" pos:start="89:45" pos:end="89:45">1</literal> <operator pos:start="89:47" pos:end="89:47">|</operator> <literal type="number" pos:start="89:49" pos:end="89:51">0x1</literal><operator pos:start="89:52" pos:end="89:52">)</operator> <operator pos:start="89:54" pos:end="89:55">&lt;&lt;</operator> <literal type="number" pos:start="89:57" pos:end="89:58">16</literal></expr>;</expr_stmt> <comment type="line" pos:start="89:61" pos:end="89:98">// sync/audio-version/layer 3/no crc*/</comment>

    <expr_stmt pos:start="91:5" pos:end="91:36"><expr pos:start="91:5" pos:end="91:35"><name pos:start="91:5" pos:end="91:10">header</name> <operator pos:start="91:12" pos:end="91:13">|=</operator> <operator pos:start="91:15" pos:end="91:15">(</operator><name pos:start="91:16" pos:end="91:24">srate_idx</name> <operator pos:start="91:26" pos:end="91:27">&lt;&lt;</operator> <literal type="number" pos:start="91:29" pos:end="91:29">2</literal><operator pos:start="91:30" pos:end="91:30">)</operator> <operator pos:start="91:32" pos:end="91:33">&lt;&lt;</operator> <literal type="number" pos:start="91:35" pos:end="91:35">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:28"><expr pos:start="93:5" pos:end="93:27"><name pos:start="93:5" pos:end="93:10">header</name> <operator pos:start="93:12" pos:end="93:13">|=</operator> <name pos:start="93:15" pos:end="93:22">channels</name> <operator pos:start="93:24" pos:end="93:25">&lt;&lt;</operator> <literal type="number" pos:start="93:27" pos:end="93:27">6</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:56"><expr pos:start="97:5" pos:end="97:55"><name pos:start="97:5" pos:end="97:7">lsf</name> <operator pos:start="97:9" pos:end="97:9">=</operator> <operator pos:start="97:11" pos:end="97:11">!</operator><operator pos:start="97:12" pos:end="97:12">(</operator><operator pos:start="97:13" pos:end="97:13">(</operator><name pos:start="97:14" pos:end="97:19">header</name> <operator pos:start="97:21" pos:end="97:21">&amp;</operator> <operator pos:start="97:23" pos:end="97:23">(</operator><literal type="number" pos:start="97:24" pos:end="97:24">1</literal> <operator pos:start="97:26" pos:end="97:27">&lt;&lt;</operator> <literal type="number" pos:start="97:29" pos:end="97:30">20</literal><operator pos:start="97:31" pos:end="97:31">)</operator> <operator pos:start="97:33" pos:end="97:34">&amp;&amp;</operator> <name pos:start="97:36" pos:end="97:41">header</name> <operator pos:start="97:43" pos:end="97:43">&amp;</operator> <operator pos:start="97:45" pos:end="97:45">(</operator><literal type="number" pos:start="97:46" pos:end="97:46">1</literal> <operator pos:start="97:48" pos:end="97:49">&lt;&lt;</operator> <literal type="number" pos:start="97:51" pos:end="97:52">19</literal><operator pos:start="97:53" pos:end="97:53">)</operator><operator pos:start="97:54" pos:end="97:54">)</operator><operator pos:start="97:55" pos:end="97:55">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:56"><expr pos:start="101:5" pos:end="101:55"><name pos:start="101:5" pos:end="101:15">xing_offset</name>  <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:55"><name pos:start="101:20" pos:end="101:30">xing_offtbl</name><index pos:start="101:31" pos:end="101:40">[<expr pos:start="101:32" pos:end="101:39"><name pos:start="101:32" pos:end="101:34">ver</name> <operator pos:start="101:36" pos:end="101:37">!=</operator> <literal type="number" pos:start="101:39" pos:end="101:39">3</literal></expr>]</index><index pos:start="101:41" pos:end="101:55">[<expr pos:start="101:42" pos:end="101:54"><name pos:start="101:42" pos:end="101:49">channels</name> <operator pos:start="101:51" pos:end="101:52">==</operator> <literal type="number" pos:start="101:54" pos:end="101:54">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="115:33"><expr pos:start="103:5" pos:end="115:32"><name pos:start="103:5" pos:end="103:16">bytes_needed</name> <operator pos:start="103:18" pos:end="103:18">=</operator> <literal type="number" pos:start="103:20" pos:end="105:18">4</literal>              <comment type="line" pos:start="103:35" pos:end="103:43">// header</comment>

                 <operator pos:start="105:18" pos:end="105:18">+</operator> <name pos:start="105:20" pos:end="105:30">xing_offset</name>

                 <operator pos:start="107:18" pos:end="107:18">+</operator> <literal type="number" pos:start="107:20" pos:end="109:18">4</literal>              <comment type="line" pos:start="107:35" pos:end="107:45">// xing tag</comment>

                 <operator pos:start="109:18" pos:end="109:18">+</operator> <literal type="number" pos:start="109:20" pos:end="111:18">4</literal>              <comment type="line" pos:start="109:35" pos:end="109:58">// frames/size/toc flags</comment>

                 <operator pos:start="111:18" pos:end="111:18">+</operator> <literal type="number" pos:start="111:20" pos:end="113:18">4</literal>              <comment type="line" pos:start="111:35" pos:end="111:43">// frames</comment>

                 <operator pos:start="113:18" pos:end="113:18">+</operator> <literal type="number" pos:start="113:20" pos:end="115:18">4</literal>              <comment type="line" pos:start="113:35" pos:end="113:41">// size</comment>

                 <operator pos:start="115:18" pos:end="115:18">+</operator> <name pos:start="115:20" pos:end="115:32">XING_TOC_SIZE</name></expr>;</expr_stmt> <comment type="line" pos:start="115:35" pos:end="115:40">// toc</comment>



    <for pos:start="119:5" pos:end="135:5">for <control pos:start="119:9" pos:end="119:58">(<init pos:start="119:10" pos:end="119:25"><expr pos:start="119:10" pos:end="119:24"><name pos:start="119:10" pos:end="119:20">bitrate_idx</name> <operator pos:start="119:22" pos:end="119:22">=</operator> <literal type="number" pos:start="119:24" pos:end="119:24">1</literal></expr>;</init> <condition pos:start="119:27" pos:end="119:43"><expr pos:start="119:27" pos:end="119:42"><name pos:start="119:27" pos:end="119:37">bitrate_idx</name> <operator pos:start="119:39" pos:end="119:39">&lt;</operator> <literal type="number" pos:start="119:41" pos:end="119:42">15</literal></expr>;</condition> <incr pos:start="119:45" pos:end="119:57"><expr pos:start="119:45" pos:end="119:57"><name pos:start="119:45" pos:end="119:55">bitrate_idx</name><operator pos:start="119:56" pos:end="119:57">++</operator></expr></incr>)</control> <block pos:start="119:60" pos:end="135:5">{<block_content pos:start="121:9" pos:end="133:9">

        <decl_stmt pos:start="121:9" pos:end="121:78"><decl pos:start="121:9" pos:end="121:77"><type pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:11">int</name></type> <name pos:start="121:13" pos:end="121:20">bit_rate</name> <init pos:start="121:22" pos:end="121:77">= <expr pos:start="121:24" pos:end="121:77"><literal type="number" pos:start="121:24" pos:end="121:27">1000</literal> <operator pos:start="121:29" pos:end="121:29">*</operator> <name pos:start="121:31" pos:end="121:77"><name pos:start="121:31" pos:end="121:52">avpriv_mpa_bitrate_tab</name><index pos:start="121:53" pos:end="121:57">[<expr pos:start="121:54" pos:end="121:56"><name pos:start="121:54" pos:end="121:56">lsf</name></expr>]</index><index pos:start="121:58" pos:end="121:64">[<expr pos:start="121:59" pos:end="121:63"><literal type="number" pos:start="121:59" pos:end="121:61">3</literal> <operator pos:start="121:61" pos:end="121:61">-</operator> <literal type="number" pos:start="121:63" pos:end="121:63">1</literal></expr>]</index><index pos:start="121:65" pos:end="121:77">[<expr pos:start="121:66" pos:end="121:76"><name pos:start="121:66" pos:end="121:76">bitrate_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="123:9" pos:end="123:57"><decl pos:start="123:9" pos:end="123:56"><type pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">int</name></type> <name pos:start="123:13" pos:end="123:17">error</name>    <init pos:start="123:22" pos:end="123:56">= <expr pos:start="123:24" pos:end="123:56"><call pos:start="123:24" pos:end="123:56"><name pos:start="123:24" pos:end="123:28">FFABS</name><argument_list pos:start="123:29" pos:end="123:56">(<argument pos:start="123:30" pos:end="123:55"><expr pos:start="123:30" pos:end="123:55"><name pos:start="123:30" pos:end="123:37">bit_rate</name> <operator pos:start="123:39" pos:end="123:39">-</operator> <name pos:start="123:41" pos:end="123:55"><name pos:start="123:41" pos:end="123:45">codec</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:55">bit_rate</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="127:9" pos:end="133:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:39">(<expr pos:start="127:13" pos:end="127:38"><name pos:start="127:13" pos:end="127:17">error</name> <operator pos:start="127:19" pos:end="127:19">&lt;</operator> <name pos:start="127:21" pos:end="127:38">best_bitrate_error</name></expr>)</condition><block pos:start="127:40" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:45">

            <expr_stmt pos:start="129:13" pos:end="129:39"><expr pos:start="129:13" pos:end="129:38"><name pos:start="129:13" pos:end="129:30">best_bitrate_error</name> <operator pos:start="129:32" pos:end="129:32">=</operator> <name pos:start="129:34" pos:end="129:38">error</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:45"><expr pos:start="131:13" pos:end="131:44"><name pos:start="131:13" pos:end="131:28">best_bitrate_idx</name>   <operator pos:start="131:32" pos:end="131:32">=</operator> <name pos:start="131:34" pos:end="131:44">bitrate_idx</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="139:5" pos:end="159:5">for <control pos:start="139:9" pos:end="139:73">(<init pos:start="139:10" pos:end="139:40"><expr pos:start="139:10" pos:end="139:39"><name pos:start="139:10" pos:end="139:20">bitrate_idx</name> <operator pos:start="139:22" pos:end="139:22">=</operator> <name pos:start="139:24" pos:end="139:39">best_bitrate_idx</name></expr>;</init> <condition pos:start="139:42" pos:end="139:58"><expr pos:start="139:42" pos:end="139:57"><name pos:start="139:42" pos:end="139:52">bitrate_idx</name> <operator pos:start="139:54" pos:end="139:54">&lt;</operator> <literal type="number" pos:start="139:56" pos:end="139:57">15</literal></expr>;</condition> <incr pos:start="139:60" pos:end="139:72"><expr pos:start="139:60" pos:end="139:72"><name pos:start="139:60" pos:end="139:70">bitrate_idx</name><operator pos:start="139:71" pos:end="139:72">++</operator></expr></incr>)</control> <block pos:start="139:75" pos:end="159:5">{<block_content pos:start="141:9" pos:end="157:24">

        <decl_stmt pos:start="141:9" pos:end="141:46"><decl pos:start="141:9" pos:end="141:45"><type pos:start="141:9" pos:end="141:15"><name pos:start="141:9" pos:end="141:15">int32_t</name></type> <name pos:start="141:17" pos:end="141:20">mask</name> <init pos:start="141:22" pos:end="141:45">= <expr pos:start="141:24" pos:end="141:45"><name pos:start="141:24" pos:end="141:34">bitrate_idx</name> <operator pos:start="141:36" pos:end="141:37">&lt;&lt;</operator> <operator pos:start="141:39" pos:end="141:39">(</operator><literal type="number" pos:start="141:40" pos:end="141:42">4</literal> <operator pos:start="141:42" pos:end="141:42">+</operator> <literal type="number" pos:start="141:44" pos:end="141:44">8</literal><operator pos:start="141:45" pos:end="141:45">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:23"><expr pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:14">header</name> <operator pos:start="143:16" pos:end="143:17">|=</operator> <name pos:start="143:19" pos:end="143:22">mask</name></expr>;</expr_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:54"><expr pos:start="147:9" pos:end="147:53"><call pos:start="147:9" pos:end="147:53"><name pos:start="147:9" pos:end="147:38">avpriv_mpegaudio_decode_header</name><argument_list pos:start="147:39" pos:end="147:53">(<argument pos:start="147:40" pos:end="147:44"><expr pos:start="147:40" pos:end="147:44"><operator pos:start="147:40" pos:end="147:40">&amp;</operator><name pos:start="147:41" pos:end="147:44">mpah</name></expr></argument>, <argument pos:start="147:47" pos:end="147:52"><expr pos:start="147:47" pos:end="147:52"><name pos:start="147:47" pos:end="147:52">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="151:9" pos:end="153:18"><if pos:start="151:9" pos:end="153:18">if <condition pos:start="151:12" pos:end="151:44">(<expr pos:start="151:13" pos:end="151:43"><name pos:start="151:13" pos:end="151:24">bytes_needed</name> <operator pos:start="151:26" pos:end="151:27">&lt;=</operator> <name pos:start="151:29" pos:end="151:43"><name pos:start="151:29" pos:end="151:32">mpah</name><operator pos:start="151:33" pos:end="151:33">.</operator><name pos:start="151:34" pos:end="151:43">frame_size</name></name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:18"><block_content pos:start="153:13" pos:end="153:18">

            <break pos:start="153:13" pos:end="153:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:24"><expr pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:14">header</name> <operator pos:start="157:16" pos:end="157:17">&amp;=</operator> <operator pos:start="157:19" pos:end="157:19">~</operator><name pos:start="157:20" pos:end="157:23">mask</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="163:5" pos:end="163:29"><expr pos:start="163:5" pos:end="163:28"><call pos:start="163:5" pos:end="163:28"><name pos:start="163:5" pos:end="163:13">avio_wb32</name><argument_list pos:start="163:14" pos:end="163:28">(<argument pos:start="163:15" pos:end="163:19"><expr pos:start="163:15" pos:end="163:19"><name pos:start="163:15" pos:end="163:19"><name pos:start="163:15" pos:end="163:15">s</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:19">pb</name></name></expr></argument>, <argument pos:start="163:22" pos:end="163:27"><expr pos:start="163:22" pos:end="163:27"><name pos:start="163:22" pos:end="163:27">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:50"><expr pos:start="167:5" pos:end="167:49"><call pos:start="167:5" pos:end="167:49"><name pos:start="167:5" pos:end="167:34">avpriv_mpegaudio_decode_header</name><argument_list pos:start="167:35" pos:end="167:49">(<argument pos:start="167:36" pos:end="167:40"><expr pos:start="167:36" pos:end="167:40"><operator pos:start="167:36" pos:end="167:36">&amp;</operator><name pos:start="167:37" pos:end="167:40">mpah</name></expr></argument>, <argument pos:start="167:43" pos:end="167:48"><expr pos:start="167:43" pos:end="167:48"><name pos:start="167:43" pos:end="167:48">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="171:5" pos:end="171:49"><expr pos:start="171:5" pos:end="171:48"><call pos:start="171:5" pos:end="171:48"><name pos:start="171:5" pos:end="171:14">av_assert0</name><argument_list pos:start="171:15" pos:end="171:48">(<argument pos:start="171:16" pos:end="171:47"><expr pos:start="171:16" pos:end="171:47"><name pos:start="171:16" pos:end="171:30"><name pos:start="171:16" pos:end="171:19">mpah</name><operator pos:start="171:20" pos:end="171:20">.</operator><name pos:start="171:21" pos:end="171:30">frame_size</name></name> <operator pos:start="171:32" pos:end="171:33">&gt;=</operator> <name pos:start="171:35" pos:end="171:47">XING_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:37"><expr pos:start="175:5" pos:end="175:36"><call pos:start="175:5" pos:end="175:36"><name pos:start="175:5" pos:end="175:13">ffio_fill</name><argument_list pos:start="175:14" pos:end="175:36">(<argument pos:start="175:15" pos:end="175:19"><expr pos:start="175:15" pos:end="175:19"><name pos:start="175:15" pos:end="175:19"><name pos:start="175:15" pos:end="175:15">s</name><operator pos:start="175:16" pos:end="175:17">-&gt;</operator><name pos:start="175:18" pos:end="175:19">pb</name></name></expr></argument>, <argument pos:start="175:22" pos:end="175:22"><expr pos:start="175:22" pos:end="175:22"><literal type="number" pos:start="175:22" pos:end="175:22">0</literal></expr></argument>, <argument pos:start="175:25" pos:end="175:35"><expr pos:start="175:25" pos:end="175:35"><name pos:start="175:25" pos:end="175:35">xing_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:40"><expr pos:start="177:5" pos:end="177:39"><name pos:start="177:5" pos:end="177:20"><name pos:start="177:5" pos:end="177:7">mp3</name><operator pos:start="177:8" pos:end="177:9">-&gt;</operator><name pos:start="177:10" pos:end="177:20">xing_offset</name></name> <operator pos:start="177:22" pos:end="177:22">=</operator> <call pos:start="177:24" pos:end="177:39"><name pos:start="177:24" pos:end="177:32">avio_tell</name><argument_list pos:start="177:33" pos:end="177:39">(<argument pos:start="177:34" pos:end="177:38"><expr pos:start="177:34" pos:end="177:38"><name pos:start="177:34" pos:end="177:38"><name pos:start="177:34" pos:end="177:34">s</name><operator pos:start="177:35" pos:end="177:36">-&gt;</operator><name pos:start="177:37" pos:end="177:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:32"><expr pos:start="179:5" pos:end="179:31"><call pos:start="179:5" pos:end="179:31"><name pos:start="179:5" pos:end="179:16">ffio_wfourcc</name><argument_list pos:start="179:17" pos:end="179:31">(<argument pos:start="179:18" pos:end="179:22"><expr pos:start="179:18" pos:end="179:22"><name pos:start="179:18" pos:end="179:22"><name pos:start="179:18" pos:end="179:18">s</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:22">pb</name></name></expr></argument>, <argument pos:start="179:25" pos:end="179:30"><expr pos:start="179:25" pos:end="179:30"><literal type="string" pos:start="179:25" pos:end="179:30">"Xing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:41"><expr pos:start="181:5" pos:end="181:40"><call pos:start="181:5" pos:end="181:40"><name pos:start="181:5" pos:end="181:13">avio_wb32</name><argument_list pos:start="181:14" pos:end="181:40">(<argument pos:start="181:15" pos:end="181:19"><expr pos:start="181:15" pos:end="181:19"><name pos:start="181:15" pos:end="181:19"><name pos:start="181:15" pos:end="181:15">s</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:19">pb</name></name></expr></argument>, <argument pos:start="181:22" pos:end="181:39"><expr pos:start="181:22" pos:end="181:39"><literal type="number" pos:start="181:22" pos:end="181:25">0x01</literal> <operator pos:start="181:27" pos:end="181:27">|</operator> <literal type="number" pos:start="181:29" pos:end="181:32">0x02</literal> <operator pos:start="181:34" pos:end="181:34">|</operator> <literal type="number" pos:start="181:36" pos:end="181:39">0x04</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="181:44" pos:end="181:65">// frames / size / TOC</comment>



    <expr_stmt pos:start="185:5" pos:end="185:32"><expr pos:start="185:5" pos:end="185:31"><name pos:start="185:5" pos:end="185:13"><name pos:start="185:5" pos:end="185:7">mp3</name><operator pos:start="185:8" pos:end="185:9">-&gt;</operator><name pos:start="185:10" pos:end="185:13">size</name></name> <operator pos:start="185:15" pos:end="185:15">=</operator> <name pos:start="185:17" pos:end="185:31"><name pos:start="185:17" pos:end="185:20">mpah</name><operator pos:start="185:21" pos:end="185:21">.</operator><name pos:start="185:22" pos:end="185:31">frame_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:18"><expr pos:start="187:5" pos:end="187:17"><name pos:start="187:5" pos:end="187:13"><name pos:start="187:5" pos:end="187:7">mp3</name><operator pos:start="187:8" pos:end="187:9">-&gt;</operator><name pos:start="187:10" pos:end="187:13">want</name></name> <operator pos:start="187:15" pos:end="187:15">=</operator> <literal type="number" pos:start="187:17" pos:end="187:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:24"><expr pos:start="191:5" pos:end="191:23"><call pos:start="191:5" pos:end="191:23"><name pos:start="191:5" pos:end="191:13">avio_wb32</name><argument_list pos:start="191:14" pos:end="191:23">(<argument pos:start="191:15" pos:end="191:19"><expr pos:start="191:15" pos:end="191:19"><name pos:start="191:15" pos:end="191:19"><name pos:start="191:15" pos:end="191:15">s</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:19">pb</name></name></expr></argument>, <argument pos:start="191:22" pos:end="191:22"><expr pos:start="191:22" pos:end="191:22"><literal type="number" pos:start="191:22" pos:end="191:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="191:27" pos:end="191:35">// frames</comment>

    <expr_stmt pos:start="193:5" pos:end="193:24"><expr pos:start="193:5" pos:end="193:23"><call pos:start="193:5" pos:end="193:23"><name pos:start="193:5" pos:end="193:13">avio_wb32</name><argument_list pos:start="193:14" pos:end="193:23">(<argument pos:start="193:15" pos:end="193:19"><expr pos:start="193:15" pos:end="193:19"><name pos:start="193:15" pos:end="193:19"><name pos:start="193:15" pos:end="193:15">s</name><operator pos:start="193:16" pos:end="193:17">-&gt;</operator><name pos:start="193:18" pos:end="193:19">pb</name></name></expr></argument>, <argument pos:start="193:22" pos:end="193:22"><expr pos:start="193:22" pos:end="193:22"><literal type="number" pos:start="193:22" pos:end="193:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="193:27" pos:end="193:33">// size</comment>



    <comment type="line" pos:start="197:5" pos:end="197:10">// TOC</comment>

    <for pos:start="199:5" pos:end="201:48">for <control pos:start="199:9" pos:end="199:39">(<init pos:start="199:10" pos:end="199:15"><expr pos:start="199:10" pos:end="199:14"><name pos:start="199:10" pos:end="199:10">i</name> <operator pos:start="199:12" pos:end="199:12">=</operator> <literal type="number" pos:start="199:14" pos:end="199:14">0</literal></expr>;</init> <condition pos:start="199:17" pos:end="199:34"><expr pos:start="199:17" pos:end="199:33"><name pos:start="199:17" pos:end="199:17">i</name> <operator pos:start="199:19" pos:end="199:19">&lt;</operator> <name pos:start="199:21" pos:end="199:33">XING_TOC_SIZE</name></expr>;</condition> <incr pos:start="199:36" pos:end="199:38"><expr pos:start="199:36" pos:end="199:38"><name pos:start="199:36" pos:end="199:36">i</name><operator pos:start="199:37" pos:end="199:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="201:9" pos:end="201:48"><block_content pos:start="201:9" pos:end="201:48">

        <expr_stmt pos:start="201:9" pos:end="201:48"><expr pos:start="201:9" pos:end="201:47"><call pos:start="201:9" pos:end="201:47"><name pos:start="201:9" pos:end="201:15">avio_w8</name><argument_list pos:start="201:16" pos:end="201:47">(<argument pos:start="201:17" pos:end="201:21"><expr pos:start="201:17" pos:end="201:21"><name pos:start="201:17" pos:end="201:21"><name pos:start="201:17" pos:end="201:17">s</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:21">pb</name></name></expr></argument>, <argument pos:start="201:24" pos:end="201:46"><expr pos:start="201:24" pos:end="201:46"><literal type="number" pos:start="201:24" pos:end="201:26">255</literal> <operator pos:start="201:28" pos:end="201:28">*</operator> <name pos:start="201:30" pos:end="201:30">i</name> <operator pos:start="201:32" pos:end="201:32">/</operator> <name pos:start="201:34" pos:end="201:46">XING_TOC_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="205:5" pos:end="205:56"><expr pos:start="205:5" pos:end="205:55"><call pos:start="205:5" pos:end="205:55"><name pos:start="205:5" pos:end="205:13">ffio_fill</name><argument_list pos:start="205:14" pos:end="205:55">(<argument pos:start="205:15" pos:end="205:19"><expr pos:start="205:15" pos:end="205:19"><name pos:start="205:15" pos:end="205:19"><name pos:start="205:15" pos:end="205:15">s</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:19">pb</name></name></expr></argument>, <argument pos:start="205:22" pos:end="205:22"><expr pos:start="205:22" pos:end="205:22"><literal type="number" pos:start="205:22" pos:end="205:22">0</literal></expr></argument>, <argument pos:start="205:25" pos:end="205:54"><expr pos:start="205:25" pos:end="205:54"><name pos:start="205:25" pos:end="205:39"><name pos:start="205:25" pos:end="205:28">mpah</name><operator pos:start="205:29" pos:end="205:29">.</operator><name pos:start="205:30" pos:end="205:39">frame_size</name></name> <operator pos:start="205:41" pos:end="205:41">-</operator> <name pos:start="205:43" pos:end="205:54">bytes_needed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
