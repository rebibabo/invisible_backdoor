<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2881.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">ppc_hash32_pp_check</name><parameter_list pos:start="1:31" pos:end="1:55">(<parameter pos:start="1:32" pos:end="1:38"><decl pos:start="1:32" pos:end="1:38"><type pos:start="1:32" pos:end="1:38"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:38">key</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:46"><decl pos:start="1:41" pos:end="1:46"><type pos:start="1:41" pos:end="1:46"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:46">pp</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:54"><decl pos:start="1:49" pos:end="1:54"><type pos:start="1:49" pos:end="1:54"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:54">nx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:18">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">access</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:31">/* Compute access rights */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:15"><expr pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:10">access</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="61:5"><if pos:start="13:5" pos:end="35:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:11">key</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>)</condition> <block pos:start="13:19" pos:end="35:5">{<block_content pos:start="15:9" pos:end="33:9">

        <switch pos:start="15:9" pos:end="33:9">switch <condition pos:start="15:16" pos:end="15:19">(<expr pos:start="15:17" pos:end="15:18"><name pos:start="15:17" pos:end="15:18">pp</name></expr>)</condition> <block pos:start="15:21" pos:end="33:9">{<block_content pos:start="17:9" pos:end="31:18">

        <case pos:start="17:9" pos:end="17:17">case <expr pos:start="17:14" pos:end="17:16"><literal type="number" pos:start="17:14" pos:end="17:16">0x0</literal></expr>:</case>

        <case pos:start="19:9" pos:end="19:17">case <expr pos:start="19:14" pos:end="19:16"><literal type="number" pos:start="19:14" pos:end="19:16">0x1</literal></expr>:</case>

        <case pos:start="21:9" pos:end="21:17">case <expr pos:start="21:14" pos:end="21:16"><literal type="number" pos:start="21:14" pos:end="21:16">0x2</literal></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:33"><expr pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:18">access</name> <operator pos:start="23:20" pos:end="23:21">|=</operator> <name pos:start="23:23" pos:end="23:32">PAGE_WRITE</name></expr>;</expr_stmt>

            <comment type="block" pos:start="25:13" pos:end="25:31">/* No break here */</comment>

        <case pos:start="27:9" pos:end="27:17">case <expr pos:start="27:14" pos:end="27:16"><literal type="number" pos:start="27:14" pos:end="27:16">0x3</literal></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:32"><expr pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:18">access</name> <operator pos:start="29:20" pos:end="29:21">|=</operator> <name pos:start="29:23" pos:end="29:31">PAGE_READ</name></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="61:5">else <block pos:start="35:12" pos:end="61:5">{<block_content pos:start="37:9" pos:end="59:9">

        <switch pos:start="37:9" pos:end="59:9">switch <condition pos:start="37:16" pos:end="37:19">(<expr pos:start="37:17" pos:end="37:18"><name pos:start="37:17" pos:end="37:18">pp</name></expr>)</condition> <block pos:start="37:21" pos:end="59:9">{<block_content pos:start="39:9" pos:end="57:18">

        <case pos:start="39:9" pos:end="39:17">case <expr pos:start="39:14" pos:end="39:16"><literal type="number" pos:start="39:14" pos:end="39:16">0x0</literal></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:23"><expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:18">access</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:17">case <expr pos:start="45:14" pos:end="45:16"><literal type="number" pos:start="45:14" pos:end="45:16">0x1</literal></expr>:</case>

        <case pos:start="47:9" pos:end="47:17">case <expr pos:start="47:14" pos:end="47:16"><literal type="number" pos:start="47:14" pos:end="47:16">0x3</literal></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:18">access</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:30">PAGE_READ</name></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:17">case <expr pos:start="53:14" pos:end="53:16"><literal type="number" pos:start="53:14" pos:end="53:16">0x2</literal></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:44"><expr pos:start="55:13" pos:end="55:43"><name pos:start="55:13" pos:end="55:18">access</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:30">PAGE_READ</name> <operator pos:start="55:32" pos:end="55:32">|</operator> <name pos:start="55:34" pos:end="55:43">PAGE_WRITE</name></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:16">(<expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:10">nx</name> <operator pos:start="63:12" pos:end="63:13">==</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>)</condition> <block pos:start="63:18" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:28">

        <expr_stmt pos:start="65:9" pos:end="65:28"><expr pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:14">access</name> <operator pos:start="65:16" pos:end="65:17">|=</operator> <name pos:start="65:19" pos:end="65:27">PAGE_EXEC</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="71:5" pos:end="71:18">return <expr pos:start="71:12" pos:end="71:17"><name pos:start="71:12" pos:end="71:17">access</name></expr>;</return>

</block_content>}</block></function>
</unit>
