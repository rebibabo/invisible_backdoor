<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20616.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">fbdev_write_packet</name><parameter_list pos:start="1:30" pos:end="1:64">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">h</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">AVPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="159:1">{<block_content pos:start="5:5" pos:end="157:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">FBDevContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">fbdev</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">h</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">pin</name></decl>, <decl pos:start="7:19" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:23">pout</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:8">enum</name> <name pos:start="9:10" pos:end="9:22">AVPixelFormat</name></name></type> <name pos:start="9:24" pos:end="9:33">fb_pix_fmt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">disp_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:21">bytes_to_copy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:64"><decl pos:start="15:5" pos:end="15:63"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:29">codec_ctx</name> <init pos:start="15:31" pos:end="15:63">= <expr pos:start="15:33" pos:end="15:63"><name pos:start="15:33" pos:end="15:56"><name pos:start="15:33" pos:end="15:33">h</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:42">streams</name><index pos:start="15:43" pos:end="15:56">[<expr pos:start="15:44" pos:end="15:55"><name pos:start="15:44" pos:end="15:55"><name pos:start="15:44" pos:end="15:48">fbdev</name><operator pos:start="15:49" pos:end="15:50">-&gt;</operator><name pos:start="15:51" pos:end="15:55">index</name></name></expr>]</index></name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:63">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:58"><decl pos:start="17:5" pos:end="17:57"><type pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:8">enum</name> <name pos:start="17:10" pos:end="17:22">AVPixelFormat</name></name></type> <name pos:start="17:24" pos:end="17:36">video_pix_fmt</name> <init pos:start="17:38" pos:end="17:57">= <expr pos:start="17:40" pos:end="17:57"><name pos:start="17:40" pos:end="17:57"><name pos:start="17:40" pos:end="17:48">codec_ctx</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:57">pix_fmt</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:39"><decl pos:start="19:5" pos:end="19:38"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">video_width</name> <init pos:start="19:21" pos:end="19:38">= <expr pos:start="19:23" pos:end="19:38"><name pos:start="19:23" pos:end="19:38"><name pos:start="19:23" pos:end="19:31">codec_ctx</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:38">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:41"><decl pos:start="21:5" pos:end="21:40"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:20">video_height</name> <init pos:start="21:22" pos:end="21:40">= <expr pos:start="21:24" pos:end="21:40"><name pos:start="21:24" pos:end="21:40"><name pos:start="21:24" pos:end="21:32">codec_ctx</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:40">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:72"><decl pos:start="23:5" pos:end="23:71"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:23">bytes_per_pixel</name> <init pos:start="23:25" pos:end="23:71">= <expr pos:start="23:27" pos:end="23:71"><operator pos:start="23:27" pos:end="23:27">(</operator><operator pos:start="23:28" pos:end="23:28">(</operator><name pos:start="23:29" pos:end="23:60"><name pos:start="23:29" pos:end="23:37">codec_ctx</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:60">bits_per_coded_sample</name></name> <operator pos:start="23:62" pos:end="23:62">+</operator> <literal type="number" pos:start="23:64" pos:end="23:64">7</literal><operator pos:start="23:65" pos:end="23:65">)</operator> <operator pos:start="23:67" pos:end="23:68">&gt;&gt;</operator> <literal type="number" pos:start="23:70" pos:end="23:70">3</literal><operator pos:start="23:71" pos:end="23:71">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:54"><decl pos:start="25:5" pos:end="25:53"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:21">src_line_size</name> <init pos:start="25:23" pos:end="25:53">= <expr pos:start="25:25" pos:end="25:53"><name pos:start="25:25" pos:end="25:35">video_width</name> <operator pos:start="25:37" pos:end="25:37">*</operator> <name pos:start="25:39" pos:end="25:53">bytes_per_pixel</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:10"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="33:17"><if pos:start="31:5" pos:end="33:17">if <condition pos:start="31:8" pos:end="31:42">(<expr pos:start="31:9" pos:end="31:41"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:13">fbdev</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:20">index</name></name> <operator pos:start="31:22" pos:end="31:23">!=</operator> <name pos:start="31:25" pos:end="31:41"><name pos:start="31:25" pos:end="31:27">pkt</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:41">stream_index</name></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:17"><block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="41:83"><if pos:start="37:5" pos:end="41:83">if <condition pos:start="37:8" pos:end="37:67">(<expr pos:start="37:9" pos:end="37:66"><call pos:start="37:9" pos:end="37:62"><name pos:start="37:9" pos:end="37:13">ioctl</name><argument_list pos:start="37:14" pos:end="37:62">(<argument pos:start="37:15" pos:end="37:23"><expr pos:start="37:15" pos:end="37:23"><name pos:start="37:15" pos:end="37:23"><name pos:start="37:15" pos:end="37:19">fbdev</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:23">fd</name></name></expr></argument>, <argument pos:start="37:26" pos:end="37:44"><expr pos:start="37:26" pos:end="37:44"><name pos:start="37:26" pos:end="37:44">FBIOGET_VSCREENINFO</name></expr></argument>, <argument pos:start="37:47" pos:end="37:61"><expr pos:start="37:47" pos:end="37:61"><operator pos:start="37:47" pos:end="37:47">&amp;</operator><name pos:start="37:48" pos:end="37:61"><name pos:start="37:48" pos:end="37:52">fbdev</name><operator pos:start="37:53" pos:end="37:54">-&gt;</operator><name pos:start="37:55" pos:end="37:61">varinfo</name></name></expr></argument>)</argument_list></call> <operator pos:start="37:64" pos:end="37:64">&lt;</operator> <literal type="number" pos:start="37:66" pos:end="37:66">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="41:83"><block_content pos:start="39:9" pos:end="41:83">

        <expr_stmt pos:start="39:9" pos:end="41:83"><expr pos:start="39:9" pos:end="41:82"><call pos:start="39:9" pos:end="41:82"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="41:82">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">h</name></expr></argument>, <argument pos:start="39:19" pos:end="39:32"><expr pos:start="39:19" pos:end="39:32"><name pos:start="39:19" pos:end="39:32">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="41:16" pos:end="41:53"><expr pos:start="41:16" pos:end="41:53"><literal type="string" pos:start="41:16" pos:end="41:53">"Error refreshing variable info: %s\n"</literal></expr></argument>, <argument pos:start="41:56" pos:end="41:81"><expr pos:start="41:56" pos:end="41:81"><call pos:start="41:56" pos:end="41:81"><name pos:start="41:56" pos:end="41:65">av_err2str</name><argument_list pos:start="41:66" pos:end="41:81">(<argument pos:start="41:67" pos:end="41:80"><expr pos:start="41:67" pos:end="41:80"><call pos:start="41:67" pos:end="41:80"><name pos:start="41:67" pos:end="41:73">AVERROR</name><argument_list pos:start="41:74" pos:end="41:80">(<argument pos:start="41:75" pos:end="41:79"><expr pos:start="41:75" pos:end="41:79"><name pos:start="41:75" pos:end="41:79">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:64"><expr pos:start="45:5" pos:end="45:63"><name pos:start="45:5" pos:end="45:14">fb_pix_fmt</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:63"><name pos:start="45:18" pos:end="45:46">ff_get_pixfmt_from_fb_varinfo</name><argument_list pos:start="45:47" pos:end="45:63">(<argument pos:start="45:48" pos:end="45:62"><expr pos:start="45:48" pos:end="45:62"><operator pos:start="45:48" pos:end="45:48">&amp;</operator><name pos:start="45:49" pos:end="45:62"><name pos:start="45:49" pos:end="45:53">fbdev</name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:62">varinfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:36">(<expr pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:18">fb_pix_fmt</name> <operator pos:start="49:20" pos:end="49:21">!=</operator> <name pos:start="49:23" pos:end="49:35">video_pix_fmt</name></expr>)</condition> <block pos:start="49:38" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:31">

        <expr_stmt pos:start="51:9" pos:end="53:84"><expr pos:start="51:9" pos:end="53:83"><call pos:start="51:9" pos:end="53:83"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="53:83">(<argument pos:start="51:16" pos:end="51:16"><expr pos:start="51:16" pos:end="51:16"><name pos:start="51:16" pos:end="51:16">h</name></expr></argument>, <argument pos:start="51:19" pos:end="51:30"><expr pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:33" pos:end="51:76"><expr pos:start="51:33" pos:end="51:76"><literal type="string" pos:start="51:33" pos:end="51:76">"Pixel format %s is not supported, use %s\n"</literal></expr></argument>,

               <argument pos:start="53:16" pos:end="53:49"><expr pos:start="53:16" pos:end="53:49"><call pos:start="53:16" pos:end="53:49"><name pos:start="53:16" pos:end="53:34">av_get_pix_fmt_name</name><argument_list pos:start="53:35" pos:end="53:49">(<argument pos:start="53:36" pos:end="53:48"><expr pos:start="53:36" pos:end="53:48"><name pos:start="53:36" pos:end="53:48">video_pix_fmt</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:52" pos:end="53:82"><expr pos:start="53:52" pos:end="53:82"><call pos:start="53:52" pos:end="53:82"><name pos:start="53:52" pos:end="53:70">av_get_pix_fmt_name</name><argument_list pos:start="53:71" pos:end="53:82">(<argument pos:start="53:72" pos:end="53:81"><expr pos:start="53:72" pos:end="53:81"><name pos:start="53:72" pos:end="53:81">fb_pix_fmt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:31">return <expr pos:start="55:16" pos:end="55:30"><call pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:22">AVERROR</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:59"><expr pos:start="61:5" pos:end="61:58"><name pos:start="61:5" pos:end="61:15">disp_height</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:58"><name pos:start="61:19" pos:end="61:23">FFMIN</name><argument_list pos:start="61:24" pos:end="61:58">(<argument pos:start="61:25" pos:end="61:43"><expr pos:start="61:25" pos:end="61:43"><name pos:start="61:25" pos:end="61:43"><name pos:start="61:25" pos:end="61:29">fbdev</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:38">varinfo</name><operator pos:start="61:39" pos:end="61:39">.</operator><name pos:start="61:40" pos:end="61:43">yres</name></name></expr></argument>, <argument pos:start="61:46" pos:end="61:57"><expr pos:start="61:46" pos:end="61:57"><name pos:start="61:46" pos:end="61:57">video_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:78"><expr pos:start="63:5" pos:end="63:77"><name pos:start="63:5" pos:end="63:17">bytes_to_copy</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <call pos:start="63:21" pos:end="63:59"><name pos:start="63:21" pos:end="63:25">FFMIN</name><argument_list pos:start="63:26" pos:end="63:59">(<argument pos:start="63:27" pos:end="63:45"><expr pos:start="63:27" pos:end="63:45"><name pos:start="63:27" pos:end="63:45"><name pos:start="63:27" pos:end="63:31">fbdev</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:40">varinfo</name><operator pos:start="63:41" pos:end="63:41">.</operator><name pos:start="63:42" pos:end="63:45">xres</name></name></expr></argument>, <argument pos:start="63:48" pos:end="63:58"><expr pos:start="63:48" pos:end="63:58"><name pos:start="63:48" pos:end="63:58">video_width</name></expr></argument>)</argument_list></call> <operator pos:start="63:61" pos:end="63:61">*</operator> <name pos:start="63:63" pos:end="63:77">bytes_per_pixel</name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:21"><expr pos:start="67:5" pos:end="67:20"><name pos:start="67:5" pos:end="67:7">pin</name>  <operator pos:start="67:10" pos:end="67:10">=</operator> <name pos:start="67:12" pos:end="67:20"><name pos:start="67:12" pos:end="67:14">pkt</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:20">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="73:63"><expr pos:start="69:5" pos:end="73:62"><name pos:start="69:5" pos:end="69:8">pout</name> <operator pos:start="69:10" pos:end="69:10">=</operator> <name pos:start="69:12" pos:end="69:22"><name pos:start="69:12" pos:end="69:16">fbdev</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:22">data</name></name> <operator pos:start="69:24" pos:end="69:24">+</operator>

           <name pos:start="71:12" pos:end="71:26">bytes_per_pixel</name> <operator pos:start="71:28" pos:end="71:28">*</operator> <name pos:start="71:30" pos:end="71:51"><name pos:start="71:30" pos:end="71:34">fbdev</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:43">varinfo</name><operator pos:start="71:44" pos:end="71:44">.</operator><name pos:start="71:45" pos:end="71:51">xoffset</name></name> <operator pos:start="71:53" pos:end="71:53">+</operator>

           <name pos:start="73:12" pos:end="73:33"><name pos:start="73:12" pos:end="73:16">fbdev</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:25">varinfo</name><operator pos:start="73:26" pos:end="73:26">.</operator><name pos:start="73:27" pos:end="73:33">yoffset</name></name> <operator pos:start="73:35" pos:end="73:35">*</operator> <name pos:start="73:37" pos:end="73:62"><name pos:start="73:37" pos:end="73:41">fbdev</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:50">fixinfo</name><operator pos:start="73:51" pos:end="73:51">.</operator><name pos:start="73:52" pos:end="73:62">line_length</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="107:5"><if pos:start="77:5" pos:end="107:5">if <condition pos:start="77:8" pos:end="77:23">(<expr pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:13">fbdev</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:22">xoffset</name></name></expr>)</condition> <block pos:start="77:25" pos:end="107:5">{<block_content pos:start="79:9" pos:end="105:9">

        <if_stmt pos:start="79:9" pos:end="105:9"><if pos:start="79:9" pos:end="89:9">if <condition pos:start="79:12" pos:end="79:31">(<expr pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:26"><name pos:start="79:13" pos:end="79:17">fbdev</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:26">xoffset</name></name> <operator pos:start="79:28" pos:end="79:28">&lt;</operator> <literal type="number" pos:start="79:30" pos:end="79:30">0</literal></expr>)</condition> <block pos:start="79:33" pos:end="89:9">{<block_content pos:start="81:13" pos:end="87:52">

            <if_stmt pos:start="81:13" pos:end="83:25"><if pos:start="81:13" pos:end="83:25">if <condition pos:start="81:16" pos:end="81:47">(<expr pos:start="81:17" pos:end="81:46"><operator pos:start="81:17" pos:end="81:17">-</operator><name pos:start="81:18" pos:end="81:31"><name pos:start="81:18" pos:end="81:22">fbdev</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:31">xoffset</name></name> <operator pos:start="81:33" pos:end="81:34">&gt;=</operator> <name pos:start="81:36" pos:end="81:46">video_width</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:25"><block_content pos:start="83:17" pos:end="83:25"> <comment type="line" pos:start="81:49" pos:end="81:68">//nothing to display</comment>

                <return pos:start="83:17" pos:end="83:25">return <expr pos:start="83:24" pos:end="83:24"><literal type="number" pos:start="83:24" pos:end="83:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:62"><expr pos:start="85:13" pos:end="85:61"><name pos:start="85:13" pos:end="85:25">bytes_to_copy</name> <operator pos:start="85:27" pos:end="85:28">+=</operator> <name pos:start="85:30" pos:end="85:43"><name pos:start="85:30" pos:end="85:34">fbdev</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:43">xoffset</name></name> <operator pos:start="85:45" pos:end="85:45">*</operator> <name pos:start="85:47" pos:end="85:61">bytes_per_pixel</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:52"><expr pos:start="87:13" pos:end="87:51"><name pos:start="87:13" pos:end="87:15">pin</name> <operator pos:start="87:17" pos:end="87:18">-=</operator> <name pos:start="87:20" pos:end="87:33"><name pos:start="87:20" pos:end="87:24">fbdev</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:33">xoffset</name></name> <operator pos:start="87:35" pos:end="87:35">*</operator> <name pos:start="87:37" pos:end="87:51">bytes_per_pixel</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="105:9">else <block pos:start="89:16" pos:end="105:9">{<block_content pos:start="91:13" pos:end="103:53">

            <decl_stmt pos:start="91:13" pos:end="91:76"><decl pos:start="91:13" pos:end="91:75"><type pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:15">int</name></type> <name pos:start="91:17" pos:end="91:20">diff</name> <init pos:start="91:22" pos:end="91:75">= <expr pos:start="91:24" pos:end="91:75"><operator pos:start="91:24" pos:end="91:24">(</operator><name pos:start="91:25" pos:end="91:35">video_width</name> <operator pos:start="91:37" pos:end="91:37">+</operator> <name pos:start="91:39" pos:end="91:52"><name pos:start="91:39" pos:end="91:43">fbdev</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:52">xoffset</name></name><operator pos:start="91:53" pos:end="91:53">)</operator> <operator pos:start="91:55" pos:end="91:55">-</operator> <name pos:start="91:57" pos:end="91:75"><name pos:start="91:57" pos:end="91:61">fbdev</name><operator pos:start="91:62" pos:end="91:63">-&gt;</operator><name pos:start="91:64" pos:end="91:70">varinfo</name><operator pos:start="91:71" pos:end="91:71">.</operator><name pos:start="91:72" pos:end="91:75">xres</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="93:13" pos:end="101:13"><if pos:start="93:13" pos:end="101:13">if <condition pos:start="93:16" pos:end="93:25">(<expr pos:start="93:17" pos:end="93:24"><name pos:start="93:17" pos:end="93:20">diff</name> <operator pos:start="93:22" pos:end="93:22">&gt;</operator> <literal type="number" pos:start="93:24" pos:end="93:24">0</literal></expr>)</condition> <block pos:start="93:27" pos:end="101:13">{<block_content pos:start="95:17" pos:end="99:56">

                <if_stmt pos:start="95:17" pos:end="97:29"><if pos:start="95:17" pos:end="97:29">if <condition pos:start="95:20" pos:end="95:40">(<expr pos:start="95:21" pos:end="95:39"><name pos:start="95:21" pos:end="95:24">diff</name> <operator pos:start="95:26" pos:end="95:27">&gt;=</operator> <name pos:start="95:29" pos:end="95:39">video_width</name></expr>)</condition><block type="pseudo" pos:start="97:21" pos:end="97:29"><block_content pos:start="97:21" pos:end="97:29"> <comment type="line" pos:start="95:42" pos:end="95:61">//nothing to display</comment>

                    <return pos:start="97:21" pos:end="97:29">return <expr pos:start="97:28" pos:end="97:28"><literal type="number" pos:start="97:28" pos:end="97:28">0</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:56"><expr pos:start="99:17" pos:end="99:55"><name pos:start="99:17" pos:end="99:29">bytes_to_copy</name> <operator pos:start="99:31" pos:end="99:32">-=</operator> <name pos:start="99:34" pos:end="99:37">diff</name> <operator pos:start="99:39" pos:end="99:39">*</operator> <name pos:start="99:41" pos:end="99:55">bytes_per_pixel</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:53"><expr pos:start="103:13" pos:end="103:52"><name pos:start="103:13" pos:end="103:16">pout</name> <operator pos:start="103:18" pos:end="103:19">+=</operator> <name pos:start="103:21" pos:end="103:35">bytes_per_pixel</name> <operator pos:start="103:37" pos:end="103:37">*</operator> <name pos:start="103:39" pos:end="103:52"><name pos:start="103:39" pos:end="103:43">fbdev</name><operator pos:start="103:44" pos:end="103:45">-&gt;</operator><name pos:start="103:46" pos:end="103:52">xoffset</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="141:5"><if pos:start="111:5" pos:end="141:5">if <condition pos:start="111:8" pos:end="111:23">(<expr pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:13">fbdev</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:22">yoffset</name></name></expr>)</condition> <block pos:start="111:25" pos:end="141:5">{<block_content pos:start="113:9" pos:end="139:9">

        <if_stmt pos:start="113:9" pos:end="139:9"><if pos:start="113:9" pos:end="123:9">if <condition pos:start="113:12" pos:end="113:31">(<expr pos:start="113:13" pos:end="113:30"><name pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:17">fbdev</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:26">yoffset</name></name> <operator pos:start="113:28" pos:end="113:28">&lt;</operator> <literal type="number" pos:start="113:30" pos:end="113:30">0</literal></expr>)</condition> <block pos:start="113:33" pos:end="123:9">{<block_content pos:start="115:13" pos:end="121:50">

            <if_stmt pos:start="115:13" pos:end="117:25"><if pos:start="115:13" pos:end="117:25">if <condition pos:start="115:16" pos:end="115:48">(<expr pos:start="115:17" pos:end="115:47"><operator pos:start="115:17" pos:end="115:17">-</operator><name pos:start="115:18" pos:end="115:31"><name pos:start="115:18" pos:end="115:22">fbdev</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:31">yoffset</name></name> <operator pos:start="115:33" pos:end="115:34">&gt;=</operator> <name pos:start="115:36" pos:end="115:47">video_height</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:25"><block_content pos:start="117:17" pos:end="117:25"> <comment type="line" pos:start="115:50" pos:end="115:69">//nothing to display</comment>

                <return pos:start="117:17" pos:end="117:25">return <expr pos:start="117:24" pos:end="117:24"><literal type="number" pos:start="117:24" pos:end="117:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:42"><expr pos:start="119:13" pos:end="119:41"><name pos:start="119:13" pos:end="119:23">disp_height</name> <operator pos:start="119:25" pos:end="119:26">+=</operator> <name pos:start="119:28" pos:end="119:41"><name pos:start="119:28" pos:end="119:32">fbdev</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:41">yoffset</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:50"><expr pos:start="121:13" pos:end="121:49"><name pos:start="121:13" pos:end="121:15">pin</name> <operator pos:start="121:17" pos:end="121:18">-=</operator> <name pos:start="121:20" pos:end="121:33"><name pos:start="121:20" pos:end="121:24">fbdev</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:33">yoffset</name></name> <operator pos:start="121:35" pos:end="121:35">*</operator> <name pos:start="121:37" pos:end="121:49">src_line_size</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="123:11" pos:end="139:9">else <block pos:start="123:16" pos:end="139:9">{<block_content pos:start="125:13" pos:end="137:64">

            <decl_stmt pos:start="125:13" pos:end="125:77"><decl pos:start="125:13" pos:end="125:76"><type pos:start="125:13" pos:end="125:15"><name pos:start="125:13" pos:end="125:15">int</name></type> <name pos:start="125:17" pos:end="125:20">diff</name> <init pos:start="125:22" pos:end="125:76">= <expr pos:start="125:24" pos:end="125:76"><operator pos:start="125:24" pos:end="125:24">(</operator><name pos:start="125:25" pos:end="125:36">video_height</name> <operator pos:start="125:38" pos:end="125:38">+</operator> <name pos:start="125:40" pos:end="125:53"><name pos:start="125:40" pos:end="125:44">fbdev</name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:53">yoffset</name></name><operator pos:start="125:54" pos:end="125:54">)</operator> <operator pos:start="125:56" pos:end="125:56">-</operator> <name pos:start="125:58" pos:end="125:76"><name pos:start="125:58" pos:end="125:62">fbdev</name><operator pos:start="125:63" pos:end="125:64">-&gt;</operator><name pos:start="125:65" pos:end="125:71">varinfo</name><operator pos:start="125:72" pos:end="125:72">.</operator><name pos:start="125:73" pos:end="125:76">yres</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="127:13" pos:end="135:13"><if pos:start="127:13" pos:end="135:13">if <condition pos:start="127:16" pos:end="127:25">(<expr pos:start="127:17" pos:end="127:24"><name pos:start="127:17" pos:end="127:20">diff</name> <operator pos:start="127:22" pos:end="127:22">&gt;</operator> <literal type="number" pos:start="127:24" pos:end="127:24">0</literal></expr>)</condition> <block pos:start="127:27" pos:end="135:13">{<block_content pos:start="129:17" pos:end="133:36">

                <if_stmt pos:start="129:17" pos:end="131:29"><if pos:start="129:17" pos:end="131:29">if <condition pos:start="129:20" pos:end="129:41">(<expr pos:start="129:21" pos:end="129:40"><name pos:start="129:21" pos:end="129:24">diff</name> <operator pos:start="129:26" pos:end="129:27">&gt;=</operator> <name pos:start="129:29" pos:end="129:40">video_height</name></expr>)</condition><block type="pseudo" pos:start="131:21" pos:end="131:29"><block_content pos:start="131:21" pos:end="131:29"> <comment type="line" pos:start="129:43" pos:end="129:62">//nothing to display</comment>

                    <return pos:start="131:21" pos:end="131:29">return <expr pos:start="131:28" pos:end="131:28"><literal type="number" pos:start="131:28" pos:end="131:28">0</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:36"><expr pos:start="133:17" pos:end="133:35"><name pos:start="133:17" pos:end="133:27">disp_height</name> <operator pos:start="133:29" pos:end="133:30">-=</operator> <name pos:start="133:32" pos:end="133:35">diff</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:64"><expr pos:start="137:13" pos:end="137:63"><name pos:start="137:13" pos:end="137:16">pout</name> <operator pos:start="137:18" pos:end="137:19">+=</operator> <name pos:start="137:21" pos:end="137:34"><name pos:start="137:21" pos:end="137:25">fbdev</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:34">yoffset</name></name> <operator pos:start="137:36" pos:end="137:36">*</operator> <name pos:start="137:38" pos:end="137:63"><name pos:start="137:38" pos:end="137:42">fbdev</name><operator pos:start="137:43" pos:end="137:44">-&gt;</operator><name pos:start="137:45" pos:end="137:51">fixinfo</name><operator pos:start="137:52" pos:end="137:52">.</operator><name pos:start="137:53" pos:end="137:63">line_length</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="145:5" pos:end="153:5">for <control pos:start="145:9" pos:end="145:37">(<init pos:start="145:10" pos:end="145:15"><expr pos:start="145:10" pos:end="145:14"><name pos:start="145:10" pos:end="145:10">i</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <literal type="number" pos:start="145:14" pos:end="145:14">0</literal></expr>;</init> <condition pos:start="145:17" pos:end="145:32"><expr pos:start="145:17" pos:end="145:31"><name pos:start="145:17" pos:end="145:17">i</name> <operator pos:start="145:19" pos:end="145:19">&lt;</operator> <name pos:start="145:21" pos:end="145:31">disp_height</name></expr>;</condition> <incr pos:start="145:34" pos:end="145:36"><expr pos:start="145:34" pos:end="145:36"><name pos:start="145:34" pos:end="145:34">i</name><operator pos:start="145:35" pos:end="145:36">++</operator></expr></incr>)</control> <block pos:start="145:39" pos:end="153:5">{<block_content pos:start="147:9" pos:end="151:30">

        <expr_stmt pos:start="147:9" pos:end="147:41"><expr pos:start="147:9" pos:end="147:40"><call pos:start="147:9" pos:end="147:40"><name pos:start="147:9" pos:end="147:14">memcpy</name><argument_list pos:start="147:15" pos:end="147:40">(<argument pos:start="147:16" pos:end="147:19"><expr pos:start="147:16" pos:end="147:19"><name pos:start="147:16" pos:end="147:19">pout</name></expr></argument>, <argument pos:start="147:22" pos:end="147:24"><expr pos:start="147:22" pos:end="147:24"><name pos:start="147:22" pos:end="147:24">pin</name></expr></argument>, <argument pos:start="147:27" pos:end="147:39"><expr pos:start="147:27" pos:end="147:39"><name pos:start="147:27" pos:end="147:39">bytes_to_copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:43"><expr pos:start="149:9" pos:end="149:42"><name pos:start="149:9" pos:end="149:12">pout</name> <operator pos:start="149:14" pos:end="149:15">+=</operator> <name pos:start="149:17" pos:end="149:42"><name pos:start="149:17" pos:end="149:21">fbdev</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:30">fixinfo</name><operator pos:start="149:31" pos:end="149:31">.</operator><name pos:start="149:32" pos:end="149:42">line_length</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:30"><expr pos:start="151:9" pos:end="151:29"><name pos:start="151:9" pos:end="151:11">pin</name>  <operator pos:start="151:14" pos:end="151:15">+=</operator> <name pos:start="151:17" pos:end="151:29">src_line_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="157:5" pos:end="157:13">return <expr pos:start="157:12" pos:end="157:12"><literal type="number" pos:start="157:12" pos:end="157:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
