<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6930.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">qcow2_cache_do_get</name><parameter_list pos:start="1:30" pos:end="3:55">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:50"><name pos:start="1:31" pos:end="1:46">BlockDriverState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">bs</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:62">Qcow2Cache</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">c</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:19"><decl pos:start="3:5" pos:end="3:19"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:12">uint64_t</name></type> <name pos:start="3:14" pos:end="3:19">offset</name></decl></parameter>, <parameter pos:start="3:22" pos:end="3:33"><decl pos:start="3:22" pos:end="3:33"><type pos:start="3:22" pos:end="3:33"><name pos:start="3:22" pos:end="3:25">void</name> <modifier pos:start="3:27" pos:end="3:27">*</modifier><modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:33">table</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:54"><decl pos:start="3:36" pos:end="3:54"><type pos:start="3:36" pos:end="3:54"><name pos:start="3:36" pos:end="3:39">bool</name></type> <name pos:start="3:41" pos:end="3:54">read_from_disk</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="149:1">{<block_content pos:start="7:5" pos:end="147:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:20">lookup_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:42"><decl pos:start="15:5" pos:end="15:41"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:28">min_lru_counter</name> <init pos:start="15:30" pos:end="15:41">= <expr pos:start="15:32" pos:end="15:41"><name pos:start="15:32" pos:end="15:41">UINT64_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:21">min_lru_index</name> <init pos:start="17:23" pos:end="17:26">= <expr pos:start="17:25" pos:end="17:26"><operator pos:start="17:25" pos:end="17:25">-</operator><literal type="number" pos:start="17:26" pos:end="17:26">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="23:50"><expr pos:start="21:5" pos:end="23:49"><call pos:start="21:5" pos:end="23:49"><name pos:start="21:5" pos:end="21:25">trace_qcow2_cache_get</name><argument_list pos:start="21:26" pos:end="23:49">(<argument pos:start="21:27" pos:end="21:47"><expr pos:start="21:27" pos:end="21:47"><call pos:start="21:27" pos:end="21:47"><name pos:start="21:27" pos:end="21:45">qemu_coroutine_self</name><argument_list pos:start="21:46" pos:end="21:47">()</argument_list></call></expr></argument>, <argument pos:start="21:50" pos:end="21:71"><expr pos:start="21:50" pos:end="21:71"><name pos:start="21:50" pos:end="21:50">c</name> <operator pos:start="21:52" pos:end="21:53">==</operator> <name pos:start="21:55" pos:end="21:71"><name pos:start="21:55" pos:end="21:55">s</name><operator pos:start="21:56" pos:end="21:57">-&gt;</operator><name pos:start="21:58" pos:end="21:71">l2_table_cache</name></name></expr></argument>,

                          <argument pos:start="23:27" pos:end="23:32"><expr pos:start="23:27" pos:end="23:32"><name pos:start="23:27" pos:end="23:32">offset</name></expr></argument>, <argument pos:start="23:35" pos:end="23:48"><expr pos:start="23:35" pos:end="23:48"><name pos:start="23:35" pos:end="23:48">read_from_disk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:46">/* Check if the table is already cached */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:64"><expr pos:start="29:5" pos:end="29:63"><name pos:start="29:5" pos:end="29:5">i</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <name pos:start="29:9" pos:end="29:20">lookup_index</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <operator pos:start="29:24" pos:end="29:24">(</operator><name pos:start="29:25" pos:end="29:30">offset</name> <operator pos:start="29:32" pos:end="29:32">/</operator> <name pos:start="29:34" pos:end="29:48"><name pos:start="29:34" pos:end="29:34">s</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:48">cluster_size</name></name> <operator pos:start="29:50" pos:end="29:50">*</operator> <literal type="number" pos:start="29:52" pos:end="29:52">4</literal><operator pos:start="29:53" pos:end="29:53">)</operator> <operator pos:start="29:55" pos:end="29:55">%</operator> <name pos:start="29:57" pos:end="29:63"><name pos:start="29:57" pos:end="29:57">c</name><operator pos:start="29:58" pos:end="29:59">-&gt;</operator><name pos:start="29:60" pos:end="29:63">size</name></name></expr>;</expr_stmt>

    <do pos:start="31:5" pos:end="55:32">do <block pos:start="31:8" pos:end="55:5">{<block_content pos:start="33:9" pos:end="53:9">

        <decl_stmt pos:start="33:9" pos:end="33:51"><decl pos:start="33:9" pos:end="33:50"><type pos:start="33:9" pos:end="33:32"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:30">Qcow2CachedTable</name> <modifier pos:start="33:32" pos:end="33:32">*</modifier></type><name pos:start="33:33" pos:end="33:33">t</name> <init pos:start="33:35" pos:end="33:50">= <expr pos:start="33:37" pos:end="33:50"><operator pos:start="33:37" pos:end="33:37">&amp;</operator><name pos:start="33:38" pos:end="33:50"><name pos:start="33:38" pos:end="33:38">c</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:47">entries</name><index pos:start="33:48" pos:end="33:50">[<expr pos:start="33:49" pos:end="33:49"><name pos:start="33:49" pos:end="33:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:32">(<expr pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:13">t</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:21">offset</name></name> <operator pos:start="35:23" pos:end="35:24">==</operator> <name pos:start="35:26" pos:end="35:31">offset</name></expr>)</condition> <block pos:start="35:34" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:23">

            <goto pos:start="37:13" pos:end="37:23">goto <name pos:start="37:18" pos:end="37:22">found</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:60">(<expr pos:start="41:13" pos:end="41:59"><name pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:13">t</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:18">ref</name></name> <operator pos:start="41:20" pos:end="41:21">==</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal> <operator pos:start="41:25" pos:end="41:26">&amp;&amp;</operator> <name pos:start="41:28" pos:end="41:41"><name pos:start="41:28" pos:end="41:28">t</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:41">lru_counter</name></name> <operator pos:start="41:43" pos:end="41:43">&lt;</operator> <name pos:start="41:45" pos:end="41:59">min_lru_counter</name></expr>)</condition> <block pos:start="41:62" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:30">

            <expr_stmt pos:start="43:13" pos:end="43:45"><expr pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:27">min_lru_counter</name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:44"><name pos:start="43:31" pos:end="43:31">t</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:44">lru_counter</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:25">min_lru_index</name> <operator pos:start="45:27" pos:end="45:27">=</operator> <name pos:start="45:29" pos:end="45:29">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:27">(<expr pos:start="49:13" pos:end="49:26"><operator pos:start="49:13" pos:end="49:14">++</operator><name pos:start="49:15" pos:end="49:15">i</name> <operator pos:start="49:17" pos:end="49:18">==</operator> <name pos:start="49:20" pos:end="49:26"><name pos:start="49:20" pos:end="49:20">c</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:26">size</name></name></expr>)</condition> <block pos:start="49:29" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:18">

            <expr_stmt pos:start="51:13" pos:end="51:18"><expr pos:start="51:13" pos:end="51:17"><name pos:start="51:13" pos:end="51:13">i</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <literal type="number" pos:start="51:17" pos:end="51:17">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="55:13" pos:end="55:31">(<expr pos:start="55:14" pos:end="55:30"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:17">!=</operator> <name pos:start="55:19" pos:end="55:30">lookup_index</name></expr>)</condition>;</do>



    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:28">(<expr pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:21">min_lru_index</name> <operator pos:start="59:23" pos:end="59:24">==</operator> <operator pos:start="59:26" pos:end="59:26">-</operator><literal type="number" pos:start="59:27" pos:end="59:27">1</literal></expr>)</condition> <block pos:start="59:30" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:16">

        <comment type="block" pos:start="61:9" pos:end="63:76">/* This can't happen in current synchronous code, but leave the check

         * here as a reminder for whoever starts using AIO with the cache */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:16"><expr pos:start="65:9" pos:end="65:15"><call pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:13">abort</name><argument_list pos:start="65:14" pos:end="65:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:55">/* Cache miss: write a table back and replace it */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:22"><expr pos:start="73:5" pos:end="73:21"><name pos:start="73:5" pos:end="73:5">i</name> <operator pos:start="73:7" pos:end="73:7">=</operator> <name pos:start="73:9" pos:end="73:21">min_lru_index</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:67"><expr pos:start="75:5" pos:end="77:66"><call pos:start="75:5" pos:end="77:66"><name pos:start="75:5" pos:end="75:39">trace_qcow2_cache_get_replace_entry</name><argument_list pos:start="75:40" pos:end="77:66">(<argument pos:start="75:41" pos:end="75:61"><expr pos:start="75:41" pos:end="75:61"><call pos:start="75:41" pos:end="75:61"><name pos:start="75:41" pos:end="75:59">qemu_coroutine_self</name><argument_list pos:start="75:60" pos:end="75:61">()</argument_list></call></expr></argument>,

                                        <argument pos:start="77:41" pos:end="77:62"><expr pos:start="77:41" pos:end="77:62"><name pos:start="77:41" pos:end="77:41">c</name> <operator pos:start="77:43" pos:end="77:44">==</operator> <name pos:start="77:46" pos:end="77:62"><name pos:start="77:46" pos:end="77:46">s</name><operator pos:start="77:47" pos:end="77:48">-&gt;</operator><name pos:start="77:49" pos:end="77:62">l2_table_cache</name></name></expr></argument>, <argument pos:start="77:65" pos:end="77:65"><expr pos:start="77:65" pos:end="77:65"><name pos:start="77:65" pos:end="77:65">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:14">(<expr pos:start="79:9" pos:end="79:13"><name pos:start="79:9" pos:end="79:9">i</name> <operator pos:start="79:11" pos:end="79:11">&lt;</operator> <literal type="number" pos:start="79:13" pos:end="79:13">0</literal></expr>)</condition> <block pos:start="79:16" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:17">

        <return pos:start="81:9" pos:end="81:17">return <expr pos:start="81:16" pos:end="81:16"><name pos:start="81:16" pos:end="81:16">i</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:44"><expr pos:start="87:5" pos:end="87:43"><name pos:start="87:5" pos:end="87:7">ret</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <call pos:start="87:11" pos:end="87:43"><name pos:start="87:11" pos:end="87:33">qcow2_cache_entry_flush</name><argument_list pos:start="87:34" pos:end="87:43">(<argument pos:start="87:35" pos:end="87:36"><expr pos:start="87:35" pos:end="87:36"><name pos:start="87:35" pos:end="87:36">bs</name></expr></argument>, <argument pos:start="87:39" pos:end="87:39"><expr pos:start="87:39" pos:end="87:39"><name pos:start="87:39" pos:end="87:39">c</name></expr></argument>, <argument pos:start="87:42" pos:end="87:42"><expr pos:start="87:42" pos:end="87:42"><name pos:start="87:42" pos:end="87:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:16">(<expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">&lt;</operator> <literal type="number" pos:start="89:15" pos:end="89:15">0</literal></expr>)</condition> <block pos:start="89:18" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:19">

        <return pos:start="91:9" pos:end="91:19">return <expr pos:start="91:16" pos:end="91:18"><name pos:start="91:16" pos:end="91:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="99:58"><expr pos:start="97:5" pos:end="99:57"><call pos:start="97:5" pos:end="99:57"><name pos:start="97:5" pos:end="97:30">trace_qcow2_cache_get_read</name><argument_list pos:start="97:31" pos:end="99:57">(<argument pos:start="97:32" pos:end="97:52"><expr pos:start="97:32" pos:end="97:52"><call pos:start="97:32" pos:end="97:52"><name pos:start="97:32" pos:end="97:50">qemu_coroutine_self</name><argument_list pos:start="97:51" pos:end="97:52">()</argument_list></call></expr></argument>,

                               <argument pos:start="99:32" pos:end="99:53"><expr pos:start="99:32" pos:end="99:53"><name pos:start="99:32" pos:end="99:32">c</name> <operator pos:start="99:34" pos:end="99:35">==</operator> <name pos:start="99:37" pos:end="99:53"><name pos:start="99:37" pos:end="99:37">s</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:53">l2_table_cache</name></name></expr></argument>, <argument pos:start="99:56" pos:end="99:56"><expr pos:start="99:56" pos:end="99:56"><name pos:start="99:56" pos:end="99:56">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:29"><expr pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:5">c</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:14">entries</name><index pos:start="101:15" pos:end="101:17">[<expr pos:start="101:16" pos:end="101:16"><name pos:start="101:16" pos:end="101:16">i</name></expr>]</index></name><operator pos:start="101:18" pos:end="101:18">.</operator><name pos:start="101:19" pos:end="101:24">offset</name> <operator pos:start="101:26" pos:end="101:26">=</operator> <literal type="number" pos:start="101:28" pos:end="101:28">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="123:5"><if pos:start="103:5" pos:end="123:5">if <condition pos:start="103:8" pos:end="103:23">(<expr pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:22">read_from_disk</name></expr>)</condition> <block pos:start="103:25" pos:end="123:5">{<block_content pos:start="105:9" pos:end="121:9">

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:35">(<expr pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:13">c</name> <operator pos:start="105:15" pos:end="105:16">==</operator> <name pos:start="105:18" pos:end="105:34"><name pos:start="105:18" pos:end="105:18">s</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:34">l2_table_cache</name></name></expr>)</condition> <block pos:start="105:37" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:51">

            <expr_stmt pos:start="107:13" pos:end="107:51"><expr pos:start="107:13" pos:end="107:50"><call pos:start="107:13" pos:end="107:50"><name pos:start="107:13" pos:end="107:24">BLKDBG_EVENT</name><argument_list pos:start="107:25" pos:end="107:50">(<argument pos:start="107:26" pos:end="107:33"><expr pos:start="107:26" pos:end="107:33"><name pos:start="107:26" pos:end="107:33"><name pos:start="107:26" pos:end="107:27">bs</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:33">file</name></name></expr></argument>, <argument pos:start="107:36" pos:end="107:49"><expr pos:start="107:36" pos:end="107:49"><name pos:start="107:36" pos:end="107:49">BLKDBG_L2_LOAD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="115:42"><expr pos:start="113:9" pos:end="115:41"><name pos:start="113:9" pos:end="113:11">ret</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="115:41"><name pos:start="113:15" pos:end="113:24">bdrv_pread</name><argument_list pos:start="113:25" pos:end="115:41">(<argument pos:start="113:26" pos:end="113:33"><expr pos:start="113:26" pos:end="113:33"><name pos:start="113:26" pos:end="113:33"><name pos:start="113:26" pos:end="113:27">bs</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:33">file</name></name></expr></argument>, <argument pos:start="113:36" pos:end="113:41"><expr pos:start="113:36" pos:end="113:41"><name pos:start="113:36" pos:end="113:41">offset</name></expr></argument>, <argument pos:start="113:44" pos:end="113:79"><expr pos:start="113:44" pos:end="113:79"><call pos:start="113:44" pos:end="113:79"><name pos:start="113:44" pos:end="113:69">qcow2_cache_get_table_addr</name><argument_list pos:start="113:70" pos:end="113:79">(<argument pos:start="113:71" pos:end="113:72"><expr pos:start="113:71" pos:end="113:72"><name pos:start="113:71" pos:end="113:72">bs</name></expr></argument>, <argument pos:start="113:75" pos:end="113:75"><expr pos:start="113:75" pos:end="113:75"><name pos:start="113:75" pos:end="113:75">c</name></expr></argument>, <argument pos:start="113:78" pos:end="113:78"><expr pos:start="113:78" pos:end="113:78"><name pos:start="113:78" pos:end="113:78">i</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="115:26" pos:end="115:40"><expr pos:start="115:26" pos:end="115:40"><name pos:start="115:26" pos:end="115:40"><name pos:start="115:26" pos:end="115:26">s</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:40">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="121:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:20">(<expr pos:start="117:13" pos:end="117:19"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">&lt;</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal></expr>)</condition> <block pos:start="117:22" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:23">

            <return pos:start="119:13" pos:end="119:23">return <expr pos:start="119:20" pos:end="119:22"><name pos:start="119:20" pos:end="119:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:34"><expr pos:start="127:5" pos:end="127:33"><name pos:start="127:5" pos:end="127:17"><name pos:start="127:5" pos:end="127:5">c</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:14">entries</name><index pos:start="127:15" pos:end="127:17">[<expr pos:start="127:16" pos:end="127:16"><name pos:start="127:16" pos:end="127:16">i</name></expr>]</index></name><operator pos:start="127:18" pos:end="127:18">.</operator><name pos:start="127:19" pos:end="127:24">offset</name> <operator pos:start="127:26" pos:end="127:26">=</operator> <name pos:start="127:28" pos:end="127:33">offset</name></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:36">/* And return the right table */</comment>

<label pos:start="133:1" pos:end="133:6"><name pos:start="133:1" pos:end="133:5">found</name>:</label>

    <expr_stmt pos:start="135:5" pos:end="135:24"><expr pos:start="135:5" pos:end="135:23"><name pos:start="135:5" pos:end="135:17"><name pos:start="135:5" pos:end="135:5">c</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:14">entries</name><index pos:start="135:15" pos:end="135:17">[<expr pos:start="135:16" pos:end="135:16"><name pos:start="135:16" pos:end="135:16">i</name></expr>]</index></name><operator pos:start="135:18" pos:end="135:18">.</operator><name pos:start="135:19" pos:end="135:21">ref</name><operator pos:start="135:22" pos:end="135:23">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:50"><expr pos:start="137:5" pos:end="137:49"><operator pos:start="137:5" pos:end="137:5">*</operator><name pos:start="137:6" pos:end="137:10">table</name> <operator pos:start="137:12" pos:end="137:12">=</operator> <call pos:start="137:14" pos:end="137:49"><name pos:start="137:14" pos:end="137:39">qcow2_cache_get_table_addr</name><argument_list pos:start="137:40" pos:end="137:49">(<argument pos:start="137:41" pos:end="137:42"><expr pos:start="137:41" pos:end="137:42"><name pos:start="137:41" pos:end="137:42">bs</name></expr></argument>, <argument pos:start="137:45" pos:end="137:45"><expr pos:start="137:45" pos:end="137:45"><name pos:start="137:45" pos:end="137:45">c</name></expr></argument>, <argument pos:start="137:48" pos:end="137:48"><expr pos:start="137:48" pos:end="137:48"><name pos:start="137:48" pos:end="137:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="143:58"><expr pos:start="141:5" pos:end="143:57"><call pos:start="141:5" pos:end="143:57"><name pos:start="141:5" pos:end="141:30">trace_qcow2_cache_get_done</name><argument_list pos:start="141:31" pos:end="143:57">(<argument pos:start="141:32" pos:end="141:52"><expr pos:start="141:32" pos:end="141:52"><call pos:start="141:32" pos:end="141:52"><name pos:start="141:32" pos:end="141:50">qemu_coroutine_self</name><argument_list pos:start="141:51" pos:end="141:52">()</argument_list></call></expr></argument>,

                               <argument pos:start="143:32" pos:end="143:53"><expr pos:start="143:32" pos:end="143:53"><name pos:start="143:32" pos:end="143:32">c</name> <operator pos:start="143:34" pos:end="143:35">==</operator> <name pos:start="143:37" pos:end="143:53"><name pos:start="143:37" pos:end="143:37">s</name><operator pos:start="143:38" pos:end="143:39">-&gt;</operator><name pos:start="143:40" pos:end="143:53">l2_table_cache</name></name></expr></argument>, <argument pos:start="143:56" pos:end="143:56"><expr pos:start="143:56" pos:end="143:56"><name pos:start="143:56" pos:end="143:56">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="147:5" pos:end="147:13">return <expr pos:start="147:12" pos:end="147:12"><literal type="number" pos:start="147:12" pos:end="147:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
