<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12872.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">virtio_pci_set_host_notifier</name><parameter_list pos:start="1:40" pos:end="1:73">(<parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:44">void</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">opaque</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:59"><decl pos:start="1:55" pos:end="1:59"><type pos:start="1:55" pos:end="1:59"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:59">n</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:72"><decl pos:start="1:62" pos:end="1:72"><type pos:start="1:62" pos:end="1:72"><name pos:start="1:62" pos:end="1:65">bool</name></type> <name pos:start="1:67" pos:end="1:72">assign</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VirtIOPCIProxy</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">proxy</name> <init pos:start="5:27" pos:end="5:34">= <expr pos:start="5:29" pos:end="5:34"><name pos:start="5:29" pos:end="5:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">VirtQueue</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">vq</name> <init pos:start="7:19" pos:end="7:52">= <expr pos:start="7:21" pos:end="7:52"><call pos:start="7:21" pos:end="7:52"><name pos:start="7:21" pos:end="7:36">virtio_get_queue</name><argument_list pos:start="7:37" pos:end="7:52">(<argument pos:start="7:38" pos:end="7:48"><expr pos:start="7:38" pos:end="7:48"><name pos:start="7:38" pos:end="7:48"><name pos:start="7:38" pos:end="7:42">proxy</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:48">vdev</name></name></expr></argument>, <argument pos:start="7:51" pos:end="7:51"><expr pos:start="7:51" pos:end="7:51"><name pos:start="7:51" pos:end="7:51">n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:65"><decl pos:start="9:5" pos:end="9:64"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">EventNotifier</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:27">notifier</name> <init pos:start="9:29" pos:end="9:64">= <expr pos:start="9:31" pos:end="9:64"><call pos:start="9:31" pos:end="9:64"><name pos:start="9:31" pos:end="9:60">virtio_queue_get_host_notifier</name><argument_list pos:start="9:61" pos:end="9:64">(<argument pos:start="9:62" pos:end="9:63"><expr pos:start="9:62" pos:end="9:63"><name pos:start="9:62" pos:end="9:63">vq</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">r</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="51:5"><if pos:start="13:5" pos:end="35:5">if <condition pos:start="13:8" pos:end="13:15">(<expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:14">assign</name></expr>)</condition> <block pos:start="13:17" pos:end="35:5">{<block_content pos:start="15:9" pos:end="33:9">

        <expr_stmt pos:start="15:9" pos:end="15:45"><expr pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:9">r</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:44"><name pos:start="15:13" pos:end="15:31">event_notifier_init</name><argument_list pos:start="15:32" pos:end="15:44">(<argument pos:start="15:33" pos:end="15:40"><expr pos:start="15:33" pos:end="15:40"><name pos:start="15:33" pos:end="15:40">notifier</name></expr></argument>, <argument pos:start="15:43" pos:end="15:43"><expr pos:start="15:43" pos:end="15:43"><literal type="number" pos:start="15:43" pos:end="15:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:18">(<expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:13">r</name> <operator pos:start="17:15" pos:end="17:15">&lt;</operator> <literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr>)</condition> <block pos:start="17:20" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:21">

            <return pos:start="19:13" pos:end="19:21">return <expr pos:start="19:20" pos:end="19:20"><name pos:start="19:20" pos:end="19:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="27:50"><expr pos:start="23:9" pos:end="27:49"><name pos:start="23:9" pos:end="23:9">r</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="27:49"><name pos:start="23:13" pos:end="23:38">kvm_set_ioeventfd_pio_word</name><argument_list pos:start="23:39" pos:end="27:49">(<argument pos:start="23:40" pos:end="23:70"><expr pos:start="23:40" pos:end="23:70"><call pos:start="23:40" pos:end="23:70"><name pos:start="23:40" pos:end="23:60">event_notifier_get_fd</name><argument_list pos:start="23:61" pos:end="23:70">(<argument pos:start="23:62" pos:end="23:69"><expr pos:start="23:62" pos:end="23:69"><name pos:start="23:62" pos:end="23:69">notifier</name></expr></argument>)</argument_list></call></expr></argument>,

                                       <argument pos:start="25:40" pos:end="25:76"><expr pos:start="25:40" pos:end="25:76"><name pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:44">proxy</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:50">addr</name></name> <operator pos:start="25:52" pos:end="25:52">+</operator> <name pos:start="25:54" pos:end="25:76">VIRTIO_PCI_QUEUE_NOTIFY</name></expr></argument>,

                                       <argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><name pos:start="27:40" pos:end="27:40">n</name></expr></argument>, <argument pos:start="27:43" pos:end="27:48"><expr pos:start="27:43" pos:end="27:48"><name pos:start="27:43" pos:end="27:48">assign</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:18">(<expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:13">r</name> <operator pos:start="29:15" pos:end="29:15">&lt;</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>)</condition> <block pos:start="29:20" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:45">

            <expr_stmt pos:start="31:13" pos:end="31:45"><expr pos:start="31:13" pos:end="31:44"><call pos:start="31:13" pos:end="31:44"><name pos:start="31:13" pos:end="31:34">event_notifier_cleanup</name><argument_list pos:start="31:35" pos:end="31:44">(<argument pos:start="31:36" pos:end="31:43"><expr pos:start="31:36" pos:end="31:43"><name pos:start="31:36" pos:end="31:43">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="51:5">else <block pos:start="35:12" pos:end="51:5">{<block_content pos:start="37:9" pos:end="49:41">

        <expr_stmt pos:start="37:9" pos:end="41:50"><expr pos:start="37:9" pos:end="41:49"><name pos:start="37:9" pos:end="37:9">r</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="41:49"><name pos:start="37:13" pos:end="37:38">kvm_set_ioeventfd_pio_word</name><argument_list pos:start="37:39" pos:end="41:49">(<argument pos:start="37:40" pos:end="37:70"><expr pos:start="37:40" pos:end="37:70"><call pos:start="37:40" pos:end="37:70"><name pos:start="37:40" pos:end="37:60">event_notifier_get_fd</name><argument_list pos:start="37:61" pos:end="37:70">(<argument pos:start="37:62" pos:end="37:69"><expr pos:start="37:62" pos:end="37:69"><name pos:start="37:62" pos:end="37:69">notifier</name></expr></argument>)</argument_list></call></expr></argument>,

                                       <argument pos:start="39:40" pos:end="39:76"><expr pos:start="39:40" pos:end="39:76"><name pos:start="39:40" pos:end="39:50"><name pos:start="39:40" pos:end="39:44">proxy</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:50">addr</name></name> <operator pos:start="39:52" pos:end="39:52">+</operator> <name pos:start="39:54" pos:end="39:76">VIRTIO_PCI_QUEUE_NOTIFY</name></expr></argument>,

                                       <argument pos:start="41:40" pos:end="41:40"><expr pos:start="41:40" pos:end="41:40"><name pos:start="41:40" pos:end="41:40">n</name></expr></argument>, <argument pos:start="41:43" pos:end="41:48"><expr pos:start="41:43" pos:end="41:48"><name pos:start="41:43" pos:end="41:48">assign</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:18">(<expr pos:start="43:13" pos:end="43:17"><name pos:start="43:13" pos:end="43:13">r</name> <operator pos:start="43:15" pos:end="43:15">&lt;</operator> <literal type="number" pos:start="43:17" pos:end="43:17">0</literal></expr>)</condition> <block pos:start="43:20" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:21">

            <return pos:start="45:13" pos:end="45:21">return <expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:41"><expr pos:start="49:9" pos:end="49:40"><call pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:30">event_notifier_cleanup</name><argument_list pos:start="49:31" pos:end="49:40">(<argument pos:start="49:32" pos:end="49:39"><expr pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:39">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><name pos:start="53:12" pos:end="53:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
