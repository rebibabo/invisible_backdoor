<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9948.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vnc_connect</name><parameter_list pos:start="1:24" pos:end="3:54">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:34">VncDisplay</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">vd</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:49"><decl pos:start="1:41" pos:end="1:49"><type pos:start="1:41" pos:end="1:49"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:49">csock</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:37"><decl pos:start="3:25" pos:end="3:37"><type pos:start="3:25" pos:end="3:37"><name pos:start="3:25" pos:end="3:28">bool</name></type> <name pos:start="3:30" pos:end="3:37">skipauth</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:53"><decl pos:start="3:40" pos:end="3:53"><type pos:start="3:40" pos:end="3:53"><name pos:start="3:40" pos:end="3:43">bool</name></type> <name pos:start="3:45" pos:end="3:53">websocket</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:5">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">VncState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">vs</name> <init pos:start="7:18" pos:end="7:46">= <expr pos:start="7:20" pos:end="7:46"><call pos:start="7:20" pos:end="7:46"><name pos:start="7:20" pos:end="7:28">g_malloc0</name><argument_list pos:start="7:29" pos:end="7:46">(<argument pos:start="7:30" pos:end="7:45"><expr pos:start="7:30" pos:end="7:45"><sizeof pos:start="7:30" pos:end="7:45">sizeof<argument_list pos:start="7:36" pos:end="7:45">(<argument pos:start="7:37" pos:end="7:44"><expr pos:start="7:37" pos:end="7:44"><name pos:start="7:37" pos:end="7:44">VncState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:6">vs</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:13">csock</name></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:21">csock</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:16"><expr pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:6">vs</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:10">vd</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:15">vd</name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="41:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:16">skipauth</name></expr>)</condition> <block pos:start="19:19" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:39">

	<expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:10">vs</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:16">auth</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:32">VNC_AUTH_NONE</name></expr>;</expr_stmt>

	<expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:10">vs</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:19">subauth</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:38">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="41:5">else <block pos:start="25:12" pos:end="41:5">{<block_content pos:start="27:9" pos:end="39:9">

        <if_stmt pos:start="27:9" pos:end="39:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:22">(<expr pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:21">websocket</name></expr>)</condition> <block pos:start="27:24" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:43">

            <expr_stmt pos:start="29:13" pos:end="29:35"><expr pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:14">vs</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:20">auth</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:34"><name pos:start="29:24" pos:end="29:25">vd</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:34">ws_auth</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:43"><expr pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:14">vs</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:23">subauth</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:42">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="39:9">else <block pos:start="33:16" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:38">

            <expr_stmt pos:start="35:13" pos:end="35:32"><expr pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:14">vs</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:20">auth</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:25">vd</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:31">auth</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:38"><expr pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:14">vs</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:23">subauth</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:37"><name pos:start="37:27" pos:end="37:28">vd</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:37">subauth</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:55"><expr pos:start="43:5" pos:end="45:54"><call pos:start="43:5" pos:end="45:54"><name pos:start="43:5" pos:end="43:13">VNC_DEBUG</name><argument_list pos:start="43:14" pos:end="45:54">(<argument pos:start="43:15" pos:end="43:57"><expr pos:start="43:15" pos:end="43:57"><literal type="string" pos:start="43:15" pos:end="43:57">"Client sock=%d ws=%d auth=%d subauth=%d\n"</literal></expr></argument>,

              <argument pos:start="45:15" pos:end="45:19"><expr pos:start="45:15" pos:end="45:19"><name pos:start="45:15" pos:end="45:19">csock</name></expr></argument>, <argument pos:start="45:22" pos:end="45:30"><expr pos:start="45:22" pos:end="45:30"><name pos:start="45:22" pos:end="45:30">websocket</name></expr></argument>, <argument pos:start="45:33" pos:end="45:40"><expr pos:start="45:33" pos:end="45:40"><name pos:start="45:33" pos:end="45:40"><name pos:start="45:33" pos:end="45:34">vs</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:40">auth</name></name></expr></argument>, <argument pos:start="45:43" pos:end="45:53"><expr pos:start="45:43" pos:end="45:53"><name pos:start="45:43" pos:end="45:53"><name pos:start="45:43" pos:end="45:44">vs</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:53">subauth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:73"><expr pos:start="49:5" pos:end="49:72"><name pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:6">vs</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:18">lossy_rect</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:72"><name pos:start="49:22" pos:end="49:30">g_malloc0</name><argument_list pos:start="49:31" pos:end="49:72">(<argument pos:start="49:32" pos:end="49:71"><expr pos:start="49:32" pos:end="49:71"><name pos:start="49:32" pos:end="49:44">VNC_STAT_ROWS</name> <operator pos:start="49:46" pos:end="49:46">*</operator> <sizeof pos:start="49:48" pos:end="49:71">sizeof <argument_list pos:start="49:55" pos:end="49:71">(<argument pos:start="49:56" pos:end="49:70"><expr pos:start="49:56" pos:end="49:70"><operator pos:start="49:56" pos:end="49:56">*</operator><name pos:start="49:57" pos:end="49:70"><name pos:start="49:57" pos:end="49:58">vs</name><operator pos:start="49:59" pos:end="49:60">-&gt;</operator><name pos:start="49:61" pos:end="49:70">lossy_rect</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="51:5" pos:end="55:5">for <control pos:start="51:9" pos:end="51:39">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:34"><expr pos:start="51:17" pos:end="51:33"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:33">VNC_STAT_ROWS</name></expr>;</condition> <incr pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><operator pos:start="51:36" pos:end="51:37">++</operator><name pos:start="51:38" pos:end="51:38">i</name></expr></incr>)</control> <block pos:start="51:41" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:72">

        <expr_stmt pos:start="53:9" pos:end="53:72"><expr pos:start="53:9" pos:end="53:71"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:10">vs</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:22">lossy_rect</name><index pos:start="53:23" pos:end="53:25">[<expr pos:start="53:24" pos:end="53:24"><name pos:start="53:24" pos:end="53:24">i</name></expr>]</index></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <call pos:start="53:29" pos:end="53:71"><name pos:start="53:29" pos:end="53:37">g_malloc0</name><argument_list pos:start="53:38" pos:end="53:71">(<argument pos:start="53:39" pos:end="53:70"><expr pos:start="53:39" pos:end="53:70"><name pos:start="53:39" pos:end="53:51">VNC_STAT_COLS</name> <operator pos:start="53:53" pos:end="53:53">*</operator> <sizeof pos:start="53:55" pos:end="53:70">sizeof <argument_list pos:start="53:62" pos:end="53:70">(<argument pos:start="53:63" pos:end="53:69"><expr pos:start="53:63" pos:end="53:69"><name pos:start="53:63" pos:end="53:69">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="59:5" pos:end="59:50"><expr pos:start="59:5" pos:end="59:49"><call pos:start="59:5" pos:end="59:49"><name pos:start="59:5" pos:end="59:13">VNC_DEBUG</name><argument_list pos:start="59:14" pos:end="59:49">(<argument pos:start="59:15" pos:end="59:41"><expr pos:start="59:15" pos:end="59:41"><literal type="string" pos:start="59:15" pos:end="59:41">"New client on socket %d\n"</literal></expr></argument>, <argument pos:start="59:44" pos:end="59:48"><expr pos:start="59:44" pos:end="59:48"><name pos:start="59:44" pos:end="59:48">csock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:70"><expr pos:start="61:5" pos:end="61:69"><call pos:start="61:5" pos:end="61:69"><name pos:start="61:5" pos:end="61:32">update_displaychangelistener</name><argument_list pos:start="61:33" pos:end="61:69">(<argument pos:start="61:34" pos:end="61:41"><expr pos:start="61:34" pos:end="61:41"><operator pos:start="61:34" pos:end="61:34">&amp;</operator><name pos:start="61:35" pos:end="61:41"><name pos:start="61:35" pos:end="61:36">vd</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:41">dcl</name></name></expr></argument>, <argument pos:start="61:44" pos:end="61:68"><expr pos:start="61:44" pos:end="61:68"><name pos:start="61:44" pos:end="61:68">VNC_REFRESH_INTERVAL_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="66:0"><expr pos:start="63:5" pos:end="63:32"><call pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:21">qemu_set_nonblock</name><argument_list pos:start="63:22" pos:end="63:32">(<argument pos:start="63:23" pos:end="63:31"><expr pos:start="63:23" pos:end="63:31"><name pos:start="63:23" pos:end="63:31"><name pos:start="63:23" pos:end="63:24">vs</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:31">csock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="65:1" pos:end="65:20">#<cpp:directive pos:start="65:2" pos:end="65:6">ifdef</cpp:directive> <name pos:start="65:8" pos:end="65:20">CONFIG_VNC_WS</name></cpp:ifdef>

    <if_stmt pos:start="67:5" pos:end="95:5"><if pos:start="67:5" pos:end="87:5">if <condition pos:start="67:8" pos:end="67:18">(<expr pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:17">websocket</name></expr>)</condition> <block pos:start="67:20" pos:end="87:5">{<block_content pos:start="69:9" pos:end="85:9">

        <expr_stmt pos:start="69:9" pos:end="72:0"><expr pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:10">vs</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:21">websocket</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <literal type="number" pos:start="69:25" pos:end="69:25">1</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="71:1" pos:end="71:21">#<cpp:directive pos:start="71:2" pos:end="71:6">ifdef</cpp:directive> <name pos:start="71:8" pos:end="71:21">CONFIG_VNC_TLS</name></cpp:ifdef>

        <if_stmt pos:start="73:9" pos:end="85:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:23">(<expr pos:start="73:13" pos:end="73:22"><name pos:start="73:13" pos:end="73:22"><name pos:start="73:13" pos:end="73:14">vd</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:22">ws_tls</name></name></expr>)</condition> <block pos:start="73:25" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:77">

            <expr_stmt pos:start="75:13" pos:end="75:77"><expr pos:start="75:13" pos:end="75:76"><call pos:start="75:13" pos:end="75:76"><name pos:start="75:13" pos:end="75:31">qemu_set_fd_handler</name><argument_list pos:start="75:32" pos:end="75:76">(<argument pos:start="75:33" pos:end="75:41"><expr pos:start="75:33" pos:end="75:41"><name pos:start="75:33" pos:end="75:41"><name pos:start="75:33" pos:end="75:34">vs</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:41">csock</name></name></expr></argument>, <argument pos:start="75:44" pos:end="75:65"><expr pos:start="75:44" pos:end="75:65"><name pos:start="75:44" pos:end="75:65">vncws_tls_handshake_io</name></expr></argument>, <argument pos:start="75:68" pos:end="75:71"><expr pos:start="75:68" pos:end="75:71"><name pos:start="75:68" pos:end="75:71">NULL</name></expr></argument>, <argument pos:start="75:74" pos:end="75:75"><expr pos:start="75:74" pos:end="75:75"><name pos:start="75:74" pos:end="75:75">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="85:9">else

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="79:8" pos:end="79:27">/* CONFIG_VNC_TLS */</comment>

        <block pos:start="81:9" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:75">

            <expr_stmt pos:start="83:13" pos:end="83:75"><expr pos:start="83:13" pos:end="83:74"><call pos:start="83:13" pos:end="83:74"><name pos:start="83:13" pos:end="83:31">qemu_set_fd_handler</name><argument_list pos:start="83:32" pos:end="83:74">(<argument pos:start="83:33" pos:end="83:41"><expr pos:start="83:33" pos:end="83:41"><name pos:start="83:33" pos:end="83:41"><name pos:start="83:33" pos:end="83:34">vs</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:41">csock</name></name></expr></argument>, <argument pos:start="83:44" pos:end="83:63"><expr pos:start="83:44" pos:end="83:63"><name pos:start="83:44" pos:end="83:63">vncws_handshake_read</name></expr></argument>, <argument pos:start="83:66" pos:end="83:69"><expr pos:start="83:66" pos:end="83:69"><name pos:start="83:66" pos:end="83:69">NULL</name></expr></argument>, <argument pos:start="83:72" pos:end="83:73"><expr pos:start="83:72" pos:end="83:73"><name pos:start="83:72" pos:end="83:73">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="95:5">else

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="89:8" pos:end="89:26">/* CONFIG_VNC_WS */</comment>

    <block pos:start="91:5" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:66">

        <expr_stmt pos:start="93:9" pos:end="93:66"><expr pos:start="93:9" pos:end="93:65"><call pos:start="93:9" pos:end="93:65"><name pos:start="93:9" pos:end="93:27">qemu_set_fd_handler</name><argument_list pos:start="93:28" pos:end="93:65">(<argument pos:start="93:29" pos:end="93:37"><expr pos:start="93:29" pos:end="93:37"><name pos:start="93:29" pos:end="93:37"><name pos:start="93:29" pos:end="93:30">vs</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:37">csock</name></name></expr></argument>, <argument pos:start="93:40" pos:end="93:54"><expr pos:start="93:40" pos:end="93:54"><name pos:start="93:40" pos:end="93:54">vnc_client_read</name></expr></argument>, <argument pos:start="93:57" pos:end="93:60"><expr pos:start="93:57" pos:end="93:60"><name pos:start="93:57" pos:end="93:60">NULL</name></expr></argument>, <argument pos:start="93:63" pos:end="93:64"><expr pos:start="93:63" pos:end="93:64"><name pos:start="93:63" pos:end="93:64">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:30"><expr pos:start="99:5" pos:end="99:29"><call pos:start="99:5" pos:end="99:29"><name pos:start="99:5" pos:end="99:25">vnc_client_cache_addr</name><argument_list pos:start="99:26" pos:end="99:29">(<argument pos:start="99:27" pos:end="99:28"><expr pos:start="99:27" pos:end="99:28"><name pos:start="99:27" pos:end="99:28">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:48"><expr pos:start="101:5" pos:end="101:47"><call pos:start="101:5" pos:end="101:47"><name pos:start="101:5" pos:end="101:17">vnc_qmp_event</name><argument_list pos:start="101:18" pos:end="101:47">(<argument pos:start="101:19" pos:end="101:20"><expr pos:start="101:19" pos:end="101:20"><name pos:start="101:19" pos:end="101:20">vs</name></expr></argument>, <argument pos:start="101:23" pos:end="101:46"><expr pos:start="101:23" pos:end="101:46"><name pos:start="101:23" pos:end="101:46">QAPI_EVENT_VNC_CONNECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="108:0"><expr pos:start="103:5" pos:end="103:53"><call pos:start="103:5" pos:end="103:53"><name pos:start="103:5" pos:end="103:22">vnc_set_share_mode</name><argument_list pos:start="103:23" pos:end="103:53">(<argument pos:start="103:24" pos:end="103:25"><expr pos:start="103:24" pos:end="103:25"><name pos:start="103:24" pos:end="103:25">vs</name></expr></argument>, <argument pos:start="103:28" pos:end="103:52"><expr pos:start="103:28" pos:end="103:52"><name pos:start="103:28" pos:end="103:52">VNC_SHARE_MODE_CONNECTING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="107:1" pos:end="107:20">#<cpp:directive pos:start="107:2" pos:end="107:6">ifdef</cpp:directive> <name pos:start="107:8" pos:end="107:20">CONFIG_VNC_WS</name></cpp:ifdef>

    <if_stmt pos:start="109:5" pos:end="117:5"><if pos:start="109:5" pos:end="117:5">if <condition pos:start="109:8" pos:end="112:0">(<expr pos:start="109:9" pos:end="109:22"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:22"><name pos:start="109:10" pos:end="109:11">vs</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:22">websocket</name></name></expr>)</condition>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

    <block pos:start="113:5" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:27">

        <expr_stmt pos:start="115:9" pos:end="115:27"><expr pos:start="115:9" pos:end="115:26"><call pos:start="115:9" pos:end="115:26"><name pos:start="115:9" pos:end="115:22">vnc_init_state</name><argument_list pos:start="115:23" pos:end="115:26">(<argument pos:start="115:24" pos:end="115:25"><expr pos:start="115:24" pos:end="115:25"><name pos:start="115:24" pos:end="115:25">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="135:5"><if pos:start="121:5" pos:end="135:5">if <condition pos:start="121:8" pos:end="121:51">(<expr pos:start="121:9" pos:end="121:50"><name pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:10">vd</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:26">num_connecting</name></name> <operator pos:start="121:28" pos:end="121:28">&gt;</operator> <name pos:start="121:30" pos:end="121:50"><name pos:start="121:30" pos:end="121:31">vd</name><operator pos:start="121:32" pos:end="121:33">-&gt;</operator><name pos:start="121:34" pos:end="121:50">connections_limit</name></name></expr>)</condition> <block pos:start="121:53" pos:end="135:5">{<block_content pos:start="123:9" pos:end="133:9">

        <macro pos:start="123:9" pos:end="123:46"><name pos:start="123:9" pos:end="123:22">QTAILQ_FOREACH</name><argument_list pos:start="123:23" pos:end="123:46">(<argument pos:start="123:24" pos:end="123:25">vs</argument>, <argument pos:start="123:28" pos:end="123:39">&amp;vd-&gt;clients</argument>, <argument pos:start="123:42" pos:end="123:45">next</argument>)</argument_list></macro> <block pos:start="123:48" pos:end="133:9">{<block_content pos:start="125:13" pos:end="131:13">

            <if_stmt pos:start="125:13" pos:end="131:13"><if pos:start="125:13" pos:end="131:13">if <condition pos:start="125:16" pos:end="125:60">(<expr pos:start="125:17" pos:end="125:59"><name pos:start="125:17" pos:end="125:30"><name pos:start="125:17" pos:end="125:18">vs</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:30">share_mode</name></name> <operator pos:start="125:32" pos:end="125:33">==</operator> <name pos:start="125:35" pos:end="125:59">VNC_SHARE_MODE_CONNECTING</name></expr>)</condition> <block pos:start="125:62" pos:end="131:13">{<block_content pos:start="127:17" pos:end="129:23">

                <expr_stmt pos:start="127:17" pos:end="127:41"><expr pos:start="127:17" pos:end="127:40"><call pos:start="127:17" pos:end="127:40"><name pos:start="127:17" pos:end="127:36">vnc_disconnect_start</name><argument_list pos:start="127:37" pos:end="127:40">(<argument pos:start="127:38" pos:end="127:39"><expr pos:start="127:38" pos:end="127:39"><name pos:start="127:38" pos:end="127:39">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="129:17" pos:end="129:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
