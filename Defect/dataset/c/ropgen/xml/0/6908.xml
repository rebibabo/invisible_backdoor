<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6908.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">asf_write_trailer</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:21">file_size</name></decl>, <decl pos:start="7:24" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:24" pos:end="7:32">data_size</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:34">/* flush the current packet */</comment>

    <if_stmt pos:start="13:5" pos:end="15:24"><if pos:start="13:5" pos:end="15:24">if <condition pos:start="13:8" pos:end="13:41">(<expr pos:start="13:9" pos:end="13:40"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:11">asf</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:15">pb</name><operator pos:start="13:16" pos:end="13:16">.</operator><name pos:start="13:17" pos:end="13:23">buf_ptr</name></name> <operator pos:start="13:25" pos:end="13:25">&gt;</operator> <name pos:start="13:27" pos:end="13:40"><name pos:start="13:27" pos:end="13:29">asf</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:33">pb</name><operator pos:start="13:34" pos:end="13:34">.</operator><name pos:start="13:35" pos:end="13:40">buffer</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:24"><block_content pos:start="15:9" pos:end="15:24">

        <expr_stmt pos:start="15:9" pos:end="15:24"><expr pos:start="15:9" pos:end="15:23"><call pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:20">flush_packet</name><argument_list pos:start="15:21" pos:end="15:23">(<argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:21">/* write index */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:13">data_size</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:32"><name pos:start="21:17" pos:end="21:25">avio_tell</name><argument_list pos:start="21:26" pos:end="21:32">(<argument pos:start="21:27" pos:end="21:31"><expr pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:31"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:31">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:85"><if pos:start="23:5" pos:end="25:85">if <condition pos:start="23:8" pos:end="23:58">(<expr pos:start="23:9" pos:end="23:57"><operator pos:start="23:9" pos:end="23:9">(</operator><operator pos:start="23:10" pos:end="23:10">!</operator><name pos:start="23:11" pos:end="23:26"><name pos:start="23:11" pos:end="23:13">asf</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:26">is_streamed</name></name><operator pos:start="23:27" pos:end="23:27">)</operator> <operator pos:start="23:29" pos:end="23:30">&amp;&amp;</operator> <operator pos:start="23:32" pos:end="23:32">(</operator><name pos:start="23:33" pos:end="23:51"><name pos:start="23:33" pos:end="23:35">asf</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:51">nb_index_count</name></name> <operator pos:start="23:53" pos:end="23:54">!=</operator> <literal type="number" pos:start="23:56" pos:end="23:56">0</literal><operator pos:start="23:57" pos:end="23:57">)</operator></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:85"><block_content pos:start="25:9" pos:end="25:85">

        <expr_stmt pos:start="25:9" pos:end="25:85"><expr pos:start="25:9" pos:end="25:84"><call pos:start="25:9" pos:end="25:84"><name pos:start="25:9" pos:end="25:23">asf_write_index</name><argument_list pos:start="25:24" pos:end="25:84">(<argument pos:start="25:25" pos:end="25:25"><expr pos:start="25:25" pos:end="25:25"><name pos:start="25:25" pos:end="25:25">s</name></expr></argument>, <argument pos:start="25:28" pos:end="25:41"><expr pos:start="25:28" pos:end="25:41"><name pos:start="25:28" pos:end="25:41"><name pos:start="25:28" pos:end="25:30">asf</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:41">index_ptr</name></name></expr></argument>, <argument pos:start="25:44" pos:end="25:62"><expr pos:start="25:44" pos:end="25:62"><name pos:start="25:44" pos:end="25:62"><name pos:start="25:44" pos:end="25:46">asf</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:62">maximum_packet</name></name></expr></argument>, <argument pos:start="25:65" pos:end="25:83"><expr pos:start="25:65" pos:end="25:83"><name pos:start="25:65" pos:end="25:83"><name pos:start="25:65" pos:end="25:67">asf</name><operator pos:start="25:68" pos:end="25:69">-&gt;</operator><name pos:start="25:70" pos:end="25:83">nb_index_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><call pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:14">avio_flush</name><argument_list pos:start="27:15" pos:end="27:21">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:20">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:11">asf</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:24">is_streamed</name></name> <operator pos:start="31:26" pos:end="31:27">||</operator> <operator pos:start="31:29" pos:end="31:29">!</operator><name pos:start="31:30" pos:end="31:44"><name pos:start="31:30" pos:end="31:30">s</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:34">pb</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:44">seekable</name></name></expr>)</condition> <block pos:start="31:47" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:35">

        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><call pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:17">put_chunk</name><argument_list pos:start="33:18" pos:end="33:34">(<argument pos:start="33:19" pos:end="33:19"><expr pos:start="33:19" pos:end="33:19"><name pos:start="33:19" pos:end="33:19">s</name></expr></argument>, <argument pos:start="33:22" pos:end="33:27"><expr pos:start="33:22" pos:end="33:27"><literal type="number" pos:start="33:22" pos:end="33:27">0x4524</literal></expr></argument>, <argument pos:start="33:30" pos:end="33:30"><expr pos:start="33:30" pos:end="33:30"><literal type="number" pos:start="33:30" pos:end="33:30">0</literal></expr></argument>, <argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><literal type="number" pos:start="33:33" pos:end="33:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:37" pos:end="33:55">/* end of stream */</comment>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="45:5">else <block pos:start="35:12" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:70">

        <comment type="block" pos:start="37:9" pos:end="37:39">/* rewrite an updated header */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:37"><expr pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:17">file_size</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:36"><name pos:start="39:21" pos:end="39:29">avio_tell</name><argument_list pos:start="39:30" pos:end="39:36">(<argument pos:start="39:31" pos:end="39:35"><expr pos:start="39:31" pos:end="39:35"><name pos:start="39:31" pos:end="39:35"><name pos:start="39:31" pos:end="39:31">s</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:35">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><call pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:17">avio_seek</name><argument_list pos:start="41:18" pos:end="41:37">(<argument pos:start="41:19" pos:end="41:23"><expr pos:start="41:19" pos:end="41:23"><name pos:start="41:19" pos:end="41:23"><name pos:start="41:19" pos:end="41:19">s</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:23">pb</name></name></expr></argument>, <argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr></argument>, <argument pos:start="41:29" pos:end="41:36"><expr pos:start="41:29" pos:end="41:36"><name pos:start="41:29" pos:end="41:36">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:70"><expr pos:start="43:9" pos:end="43:69"><call pos:start="43:9" pos:end="43:69"><name pos:start="43:9" pos:end="43:25">asf_write_header1</name><argument_list pos:start="43:26" pos:end="43:69">(<argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">s</name></expr></argument>, <argument pos:start="43:30" pos:end="43:38"><expr pos:start="43:30" pos:end="43:38"><name pos:start="43:30" pos:end="43:38">file_size</name></expr></argument>, <argument pos:start="43:41" pos:end="43:68"><expr pos:start="43:41" pos:end="43:68"><name pos:start="43:41" pos:end="43:49">data_size</name> <operator pos:start="43:51" pos:end="43:51">-</operator> <name pos:start="43:53" pos:end="43:68"><name pos:start="43:53" pos:end="43:55">asf</name><operator pos:start="43:56" pos:end="43:57">-&gt;</operator><name pos:start="43:58" pos:end="43:68">data_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:28"><expr pos:start="49:5" pos:end="49:27"><call pos:start="49:5" pos:end="49:27"><name pos:start="49:5" pos:end="49:11">av_free</name><argument_list pos:start="49:12" pos:end="49:27">(<argument pos:start="49:13" pos:end="49:26"><expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:15">asf</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:26">index_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
